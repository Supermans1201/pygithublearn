From 80fa3b2d27652b9283c75b9eea3c9e57d689838c Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Mon, 29 Sep 2014 22:04:01 +0800
Subject: [PATCH] Do not use global db in migration

---
 .../org/gnucash/android/db/AccountsDbAdapter.java  | 18 ++++++++++--
 .../org/gnucash/android/db/MigrationHelper.java    |  2 +-
 app/src/org/gnucash/android/export/Exporter.java   | 20 ++++++++++++--
 .../gnucash/android/export/ofx/OfxExporter.java    |  6 ++--
 .../gnucash/android/export/qif/QifExporter.java    |  7 ++---
 .../gnucash/android/export/xml/GncXmlExporter.java | 13 +++++----
 .../gnucash/android/importer/GncXmlHandler.java    | 32 +++++++++++++---------
 .../gnucash/android/importer/GncXmlImporter.java   |  9 ++++--
 8 files changed, 70 insertions(+), 37 deletions(-)

diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index 64418529..cb3bb965 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -77,11 +77,23 @@ public long addAccount(@NonNull Account account){
 		contentValues.put(AccountEntry.COLUMN_UID,          account.getUID());
 		contentValues.put(AccountEntry.COLUMN_CURRENCY,     account.getCurrency().getCurrencyCode());
         contentValues.put(AccountEntry.COLUMN_PLACEHOLDER,  account.isPlaceholderAccount() ? 1 : 0);
-        contentValues.put(AccountEntry.COLUMN_COLOR_CODE,   account.getColorHexCode());
+        if (account.getColorHexCode() != null) {
+            contentValues.put(AccountEntry.COLUMN_COLOR_CODE, account.getColorHexCode());
+        } else {
+            contentValues.putNull(AccountEntry.COLUMN_COLOR_CODE);
+        }
         contentValues.put(AccountEntry.COLUMN_FAVORITE,     account.isFavorite() ? 1 : 0);
         contentValues.put(AccountEntry.COLUMN_FULL_NAME,    account.getFullName());
-        contentValues.put(AccountEntry.COLUMN_PARENT_ACCOUNT_UID,           account.getParentUID());
-        contentValues.put(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID, account.getDefaultTransferAccountUID());
+        if (account.getParentUID() != null) {
+            contentValues.put(AccountEntry.COLUMN_PARENT_ACCOUNT_UID, account.getParentUID());
+        } else {
+            contentValues.putNull(AccountEntry.COLUMN_PARENT_ACCOUNT_UID);
+        }
+        if (account.getDefaultTransferAccountUID() != null) {
+            contentValues.put(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID, account.getDefaultTransferAccountUID());
+        } else {
+            contentValues.putNull(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID);
+        }
 
         Log.d(TAG, "Replace account to db");
         long rowId =  mDb.replace(AccountEntry.TABLE_NAME, null, contentValues);
diff --git a/app/src/org/gnucash/android/db/MigrationHelper.java b/app/src/org/gnucash/android/db/MigrationHelper.java
index 7151d556..87a76a3f 100644
--- a/app/src/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/org/gnucash/android/db/MigrationHelper.java
@@ -124,7 +124,7 @@ static String exportGnucashXML(SQLiteDatabase db) throws IOException {
                 + "/gnucash/" + Exporter.buildExportFilename(ExportFormat.GNC_XML));
 
         //we do not use the ExporterAsyncTask here because we want to use an already open db
-        GncXmlExporter exporter = new GncXmlExporter(exportParams);
+        GncXmlExporter exporter = new GncXmlExporter(exportParams, db);
         BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(
                 new FileOutputStream(exportParams.getTargetFilepath()), "UTF-8"));
         try {
diff --git a/app/src/org/gnucash/android/export/Exporter.java b/app/src/org/gnucash/android/export/Exporter.java
index c08fe632..50d368cf 100644
--- a/app/src/org/gnucash/android/export/Exporter.java
+++ b/app/src/org/gnucash/android/export/Exporter.java
@@ -20,10 +20,13 @@
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
 import android.os.Environment;
+import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.SplitsDbAdapter;
+import org.gnucash.android.db.TransactionsDbAdapter;
 
 import java.io.File;
 import java.io.FileFilter;
@@ -58,13 +61,26 @@
      * Adapter for retrieving accounts to export
      * Subclasses should close this object when they are done with exporting
      */
+    @NonNull
     protected AccountsDbAdapter mAccountsDbAdapter;
+    @NonNull
+    protected TransactionsDbAdapter mTransactionsDbAdapter;
+    @NonNull
+    protected SplitsDbAdapter mSplitsDbAdapter;
     protected Context mContext;
 
-    public Exporter(ExportParams params){
+    public Exporter(ExportParams params, @Nullable SQLiteDatabase db) {
         this.mParameters = params;
         mContext = GnuCashApplication.getAppContext();
-        mAccountsDbAdapter = GnuCashApplication.getAccountsDbAdapter();
+        if (db == null) {
+            mAccountsDbAdapter = GnuCashApplication.getAccountsDbAdapter();
+            mTransactionsDbAdapter = GnuCashApplication.getTransactionDbAdapter();
+            mSplitsDbAdapter = GnuCashApplication.getSplitsDbAdapter();
+        } else {
+            mSplitsDbAdapter = new SplitsDbAdapter(db);
+            mTransactionsDbAdapter = new TransactionsDbAdapter(db, mSplitsDbAdapter);
+            mAccountsDbAdapter = new AccountsDbAdapter(db, mTransactionsDbAdapter);
+        }
     }
 
     /**
diff --git a/app/src/org/gnucash/android/export/ofx/OfxExporter.java b/app/src/org/gnucash/android/export/ofx/OfxExporter.java
index 977e3cd3..d317e2e1 100644
--- a/app/src/org/gnucash/android/export/ofx/OfxExporter.java
+++ b/app/src/org/gnucash/android/export/ofx/OfxExporter.java
@@ -22,10 +22,8 @@
 import java.io.Writer;
 import java.util.List;
 
-import android.database.sqlite.SQLiteDatabase;
 import android.preference.PreferenceManager;
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.model.Account;
@@ -59,7 +57,7 @@
 	 * Builds an XML representation of the {@link Account}s and {@link Transaction}s in the database
 	 */
 	public OfxExporter(ExportParams params) {
-        super(params);
+        super(params, null);
 	}
 
     /**
@@ -80,7 +78,7 @@ private void generateOfx(Document doc, Element parent){
 		
 		parent.appendChild(bankmsgs);		
 		
-		AccountsDbAdapter accountsDbAdapter = GnuCashApplication.getAccountsDbAdapter();
+		AccountsDbAdapter accountsDbAdapter = mAccountsDbAdapter;
 		for (Account account : mAccountsList) {		
 			if (account.getTransactionCount() == 0)
 				continue; 
diff --git a/app/src/org/gnucash/android/export/qif/QifExporter.java b/app/src/org/gnucash/android/export/qif/QifExporter.java
index 476d8708..f5ded533 100644
--- a/app/src/org/gnucash/android/export/qif/QifExporter.java
+++ b/app/src/org/gnucash/android/export/qif/QifExporter.java
@@ -18,16 +18,13 @@
 
 import android.content.ContentValues;
 import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
 
-import org.gnucash.android.app.GnuCashApplication;
 import static org.gnucash.android.db.DatabaseSchema.*;
 
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
-import org.gnucash.android.model.Account;
 
 import java.io.IOException;
 import java.io.Writer;
@@ -42,13 +39,13 @@
  */
 public class QifExporter extends Exporter{
     public QifExporter(ExportParams params){
-        super(params);
+        super(params, null);
     }
 
     @Override
     public void generateExport(Writer writer) throws ExporterException {
         final String newLine = "\n";
-        TransactionsDbAdapter transactionsDbAdapter = GnuCashApplication.getTransactionDbAdapter();
+        TransactionsDbAdapter transactionsDbAdapter = mTransactionsDbAdapter;
         try {
             Cursor cursor = transactionsDbAdapter.fetchTransactionsWithSplitsWithTransactionAccount(
                     new String[]{
diff --git a/app/src/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/org/gnucash/android/export/xml/GncXmlExporter.java
index e016a47b..28f1991b 100644
--- a/app/src/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -18,12 +18,12 @@
 package org.gnucash.android.export.xml;
 
 import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
 import android.util.Log;
 
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
 import static org.gnucash.android.db.DatabaseSchema.*;
-import org.gnucash.android.db.TransactionsDbAdapter;
+
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
@@ -58,11 +58,12 @@
  */
 public class GncXmlExporter extends Exporter{
 
-    private TransactionsDbAdapter mTransactionsDbAdapter;
+    public GncXmlExporter(ExportParams params) {
+        super(params, null);
+    }
 
-    public GncXmlExporter(ExportParams params){
-        super(params);
-        mTransactionsDbAdapter = GnuCashApplication.getTransactionDbAdapter();
+    public GncXmlExporter(ExportParams params, SQLiteDatabase db) {
+        super(params, db);
     }
 
     private void exportSlots(XmlSerializer xmlSerializer,
diff --git a/app/src/org/gnucash/android/importer/GncXmlHandler.java b/app/src/org/gnucash/android/importer/GncXmlHandler.java
index 7b6cdf32..d852186f 100644
--- a/app/src/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/org/gnucash/android/importer/GncXmlHandler.java
@@ -19,8 +19,11 @@
 
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.util.Log;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.SplitsDbAdapter;
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.export.xml.GncXmlHelper;
 import org.gnucash.android.model.*;
@@ -110,21 +113,28 @@
     boolean mInDefaultTransferAccount = false;
     boolean mInExported         = false;
 
-    private Context mContext;
     private TransactionsDbAdapter mTransactionsDbAdapter;
 
-    public GncXmlHandler(Context context) {
-        init(context, false);
+    public GncXmlHandler() {
+        init(false, null);
     }
 
-    public GncXmlHandler(Context context, boolean bulk) {
-        init(context, bulk);
+    public GncXmlHandler(boolean bulk) {
+        init(bulk, null);
     }
 
-    private void init(Context context, boolean bulk) {
-        mContext = context;
-        mAccountsDbAdapter = GnuCashApplication.getAccountsDbAdapter();
-        mTransactionsDbAdapter = GnuCashApplication.getTransactionDbAdapter();
+    public GncXmlHandler(boolean bulk, @NonNull SQLiteDatabase db) {
+        init(bulk, db);
+    }
+
+    private void init(boolean bulk, @Nullable SQLiteDatabase db) {
+        if (db == null) {
+            mAccountsDbAdapter = GnuCashApplication.getAccountsDbAdapter();
+            mTransactionsDbAdapter = GnuCashApplication.getTransactionDbAdapter();
+        } else {
+            mTransactionsDbAdapter = new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
+            mAccountsDbAdapter = new AccountsDbAdapter(db, mTransactionsDbAdapter);
+        }
         mContent = new StringBuilder();
         mBulk = bulk;
         if (bulk) {
@@ -133,10 +143,6 @@ private void init(Context context, boolean bulk) {
         }
     }
 
-    public GncXmlHandler(){
-        init(GnuCashApplication.getAppContext(), false);
-    }
-
     @Override
     public void startElement(String uri, String localName,
                              String qualifiedName, Attributes attributes) throws SAXException {
diff --git a/app/src/org/gnucash/android/importer/GncXmlImporter.java b/app/src/org/gnucash/android/importer/GncXmlImporter.java
index d52be7f3..808bb524 100644
--- a/app/src/org/gnucash/android/importer/GncXmlImporter.java
+++ b/app/src/org/gnucash/android/importer/GncXmlImporter.java
@@ -18,6 +18,8 @@
 
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.util.Log;
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
@@ -46,7 +48,7 @@
      * @param db SQLite Database
      * @param gncXmlInputStream Input stream of GnuCash XML
      */
-    public static void parse(SQLiteDatabase db, InputStream gncXmlInputStream) throws Exception {
+    public static void parse(@NonNull SQLiteDatabase db, InputStream gncXmlInputStream) throws Exception {
         SAXParserFactory spf = SAXParserFactory.newInstance();
         SAXParser sp = spf.newSAXParser();
         XMLReader xr = sp.getXMLReader();
@@ -55,7 +57,8 @@ public static void parse(SQLiteDatabase db, InputStream gncXmlInputStream) throw
 
         /** Create handler to handle XML Tags ( extends DefaultHandler ) */
 
-        GncXmlHandler handler = new GncXmlHandler();
+        GncXmlHandler handler = new GncXmlHandler(false, db);
+
         xr.setContentHandler(handler);
         xr.parse(new InputSource(bos));
     }
@@ -82,7 +85,7 @@ public static void parse(Context context, InputStream gncXmlInputStream) throws
 
         //TODO: Set an error handler which can log errors
 
-        GncXmlHandler handler = new GncXmlHandler(context, true);
+        GncXmlHandler handler = new GncXmlHandler(true);
         xr.setContentHandler(handler);
         long startTime = System.nanoTime();
         xr.parse(new InputSource(bos));
