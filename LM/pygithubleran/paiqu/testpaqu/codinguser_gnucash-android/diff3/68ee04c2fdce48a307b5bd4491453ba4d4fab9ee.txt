From 3a232c0151a89a9f18b0383e545830fb7533abd6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sun, 6 Dec 2015 17:59:06 +0100
Subject: [PATCH 1/2] Ensure multiple calls to getExportCacheFilePath() always
 returns the same filename.

The filename returned by getExportCacheFilePath() contains a timestamp,
which can change if called multiple times.

Fixes https://github.com/codinguser/gnucash-android/issues/448
---
 .../main/java/org/gnucash/android/export/Exporter.java   | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/export/Exporter.java b/app/src/main/java/org/gnucash/android/export/Exporter.java
index 7e2878a8..e9941cb5 100644
--- a/app/src/main/java/org/gnucash/android/export/Exporter.java
+++ b/app/src/main/java/org/gnucash/android/export/Exporter.java
@@ -103,6 +103,7 @@
     protected PricesDbAdapter mPricesDbAdapter;
     protected CommoditiesDbAdapter mCommoditiesDbAdapter;
     protected Context mContext;
+    private String mExportCacheFilePath;
 
     public Exporter(ExportParams params, SQLiteDatabase db) {
         this.mExportParams = params;
@@ -123,6 +124,7 @@ public Exporter(ExportParams params, SQLiteDatabase db) {
             mCommoditiesDbAdapter = new CommoditiesDbAdapter(db);
         }
 
+        mExportCacheFilePath = null;
         mCacheDir = new File(mContext.getCacheDir(), params.getExportFormat().name());
         mCacheDir.mkdir();
         purgeDirectory(mCacheDir);
@@ -184,10 +186,16 @@ private void purgeDirectory(File directory){
      * @return Absolute path to file
      */
     protected String getExportCacheFilePath(){
-        String cachePath = mCacheDir.getAbsolutePath();
-        if (!cachePath.endsWith("/"))
-            cachePath += "/";
-        return cachePath + buildExportFilename(mExportParams.getExportFormat());
+        // The file name contains a timestamp, so ensure it doesn't change with multiple calls to
+        // avoid issues like #448
+        if (mExportCacheFilePath == null) {
+            String cachePath = mCacheDir.getAbsolutePath();
+            if (!cachePath.endsWith("/"))
+                cachePath += "/";
+            mExportCacheFilePath = cachePath + buildExportFilename(mExportParams.getExportFormat());
+        }
+
+        return mExportCacheFilePath;
     }
 
     /**

From 0a4cf924af8ffaa5b20bfcd1cca60988d2f663e8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 7 Dec 2015 10:55:57 +0100
Subject: [PATCH 2/2] Apply code inspector suggestions.

---
 .../java/org/gnucash/android/export/Exporter.java    | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/export/Exporter.java b/app/src/main/java/org/gnucash/android/export/Exporter.java
index e9941cb5..dc956fd9 100644
--- a/app/src/main/java/org/gnucash/android/export/Exporter.java
+++ b/app/src/main/java/org/gnucash/android/export/Exporter.java
@@ -58,7 +58,7 @@
     /**
      * Application folder on external storage
      */
-    public static final String BASE_FOLDER_PATH = Environment.getExternalStorageDirectory() + "/" + BuildConfig.APPLICATION_ID;
+    private static final String BASE_FOLDER_PATH = Environment.getExternalStorageDirectory() + "/" + BuildConfig.APPLICATION_ID;
 
     /**
      * Folder where exports like QIF and OFX will be saved for access by external programs
@@ -73,7 +73,7 @@
     /**
      * Export options
      */
-    protected ExportParams mExportParams;
+    protected final ExportParams mExportParams;
 
     /**
      * Cache directory to which files will be first exported before moved to final destination.
@@ -82,7 +82,7 @@
      *    The files created here are only accessible within this application, and should be copied to SD card before they can be shared
      * </p>
      */
-    protected File mCacheDir;
+    private final File mCacheDir;
 
     private static final SimpleDateFormat EXPORT_FILENAME_DATE_FORMAT = new SimpleDateFormat("yyyyMMdd_HHmmss", Locale.US);
 
@@ -96,13 +96,13 @@
      * Adapter for retrieving accounts to export
      * Subclasses should close this object when they are done with exporting
      */
-    protected AccountsDbAdapter mAccountsDbAdapter;
-    protected TransactionsDbAdapter mTransactionsDbAdapter;
-    protected SplitsDbAdapter mSplitsDbAdapter;
-    protected ScheduledActionDbAdapter mScheduledActionDbAdapter;
-    protected PricesDbAdapter mPricesDbAdapter;
-    protected CommoditiesDbAdapter mCommoditiesDbAdapter;
-    protected Context mContext;
+    protected final AccountsDbAdapter mAccountsDbAdapter;
+    protected final TransactionsDbAdapter mTransactionsDbAdapter;
+    protected final SplitsDbAdapter mSplitsDbAdapter;
+    protected final ScheduledActionDbAdapter mScheduledActionDbAdapter;
+    protected final PricesDbAdapter mPricesDbAdapter;
+    protected final CommoditiesDbAdapter mCommoditiesDbAdapter;
+    protected final Context mContext;
     private String mExportCacheFilePath;
 
     public Exporter(ExportParams params, SQLiteDatabase db) {
