From 2894466858715e5583932ff4751aa1c6eb5d2dde Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sat, 25 Jun 2016 18:00:04 +0200
Subject: [PATCH 1/3] Store ScheduledAction tag in the correct database field.

It was being stored in the total_frequency field instead, which caused a
NullPointerException when listing scheduled actions.

Fixes https://github.com/codinguser/gnucash-android/issues/512
---
 .../java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java   | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
index e83fb699..47e46e12 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
@@ -138,7 +138,7 @@ public long updateRecurrenceAttributes(ScheduledAction scheduledAction){
         if (schedxAction.getTag() == null)
             stmt.bindNull(8);
         else
-            stmt.bindString(9, schedxAction.getTag());
+            stmt.bindString(8, schedxAction.getTag());
         stmt.bindString(9, Integer.toString(schedxAction.getTotalFrequency()));
         stmt.bindString(10, schedxAction.getRecurrence().getUID());
         stmt.bindLong(11,   schedxAction.shouldAutoCreate() ? 1 : 0);

From 8ed56abde7520a72b603eef4eca5e016727353e6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sun, 26 Jun 2016 13:20:00 +0200
Subject: [PATCH 2/3] Fix code inspector issues.

---
 .../org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java   | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
index 47e46e12..329f4722 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
@@ -26,7 +26,6 @@
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
-import org.gnucash.android.util.TimestampHelper;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -40,7 +39,7 @@
  */
 public class ScheduledActionDbAdapter extends DatabaseAdapter<ScheduledAction> {
 
-    RecurrenceDbAdapter mRecurrenceDbAdapter;
+    private RecurrenceDbAdapter mRecurrenceDbAdapter;
 
     public ScheduledActionDbAdapter(SQLiteDatabase db, RecurrenceDbAdapter recurrenceDbAdapter){
         super(db, ScheduledActionEntry.TABLE_NAME,  new String[]{
@@ -96,7 +95,7 @@ public long bulkAddRecords(@NonNull List<ScheduledAction> scheduledActions, Upda
     /**
      * Updates only the recurrence attributes of the scheduled action.
      * The recurrence attributes are the period, start time, end time and/or total frequency.
-     * All other properties of a scheduled event are only used for interal database tracking and are
+     * All other properties of a scheduled event are only used for internal database tracking and are
      * not central to the recurrence schedule.
      * <p><b>The GUID of the scheduled action should already exist in the database</b></p>
      * @param scheduledAction Scheduled action
@@ -220,7 +219,7 @@ public ScheduledAction buildModelInstance(@NonNull final Cursor cursor){
 
     /**
      * Returns all enabled scheduled actions in the database
-     * @return List of enalbed scheduled actions
+     * @return List of enabled scheduled actions
      */
     public List<ScheduledAction> getAllEnabledScheduledActions(){
         Cursor cursor = mDb.query(mTableName,

From d8ca01164e733fd3ca07706f263cacf7cc1ba8e6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 27 Jun 2016 18:58:28 +0200
Subject: [PATCH 3/3] Add test case for #512.

---
 .../test/unit/db/ScheduledActionDbAdapterTest.java | 46 ++++++++++++++++++++++
 1 file changed, 46 insertions(+)

diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
index 74218a4e..39e702e9 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
@@ -70,4 +70,50 @@ public void testGenerateRepeatString(){
 
     }
 
+    @Test
+    public void testAddGetRecord() {
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
+        scheduledAction.setActionUID("Some UID");
+        scheduledAction.setAdvanceCreateDays(1);
+        scheduledAction.setAdvanceNotifyDays(2);
+        scheduledAction.setAutoCreate(true);
+        scheduledAction.setAutoNotify(true);
+        scheduledAction.setEnabled(true);
+        scheduledAction.setStartTime(11111);
+        scheduledAction.setEndTime(33333);
+        scheduledAction.setLastRun(22222);
+        scheduledAction.setExecutionCount(3);
+        scheduledAction.setRecurrence(new Recurrence(PeriodType.MONTH));
+        scheduledAction.setTag("QIF;SD_CARD;2016-06-25 12:56:07.175;false");
+        mScheduledActionDbAdapter.addRecord(scheduledAction);
+
+        ScheduledAction scheduledActionFromDb =
+                mScheduledActionDbAdapter.getRecord(scheduledAction.getUID());
+        assertThat(scheduledActionFromDb.getUID()).isEqualTo(
+                scheduledAction.getUID());
+        assertThat(scheduledActionFromDb.getActionUID()).isEqualTo(
+                scheduledAction.getActionUID());
+        assertThat(scheduledActionFromDb.getAdvanceCreateDays()).isEqualTo(
+                scheduledAction.getAdvanceCreateDays());
+        assertThat(scheduledActionFromDb.getAdvanceNotifyDays()).isEqualTo(
+                scheduledAction.getAdvanceNotifyDays());
+        assertThat(scheduledActionFromDb.shouldAutoCreate()).isEqualTo(
+                scheduledAction.shouldAutoCreate());
+        assertThat(scheduledActionFromDb.shouldAutoNotify()).isEqualTo(
+                scheduledAction.shouldAutoNotify());
+        assertThat(scheduledActionFromDb.isEnabled()).isEqualTo(
+                scheduledAction.isEnabled());
+        assertThat(scheduledActionFromDb.getStartTime()).isEqualTo(
+                scheduledAction.getStartTime());
+        assertThat(scheduledActionFromDb.getEndTime()).isEqualTo(
+                scheduledAction.getEndTime());
+        assertThat(scheduledActionFromDb.getLastRunTime()).isEqualTo(
+                scheduledAction.getLastRunTime());
+        assertThat(scheduledActionFromDb.getExecutionCount()).isEqualTo(
+                scheduledAction.getExecutionCount());
+        assertThat(scheduledActionFromDb.getRecurrence()).isEqualTo(
+                scheduledAction.getRecurrence());
+        assertThat(scheduledActionFromDb.getTag()).isEqualTo(
+                scheduledAction.getTag());
+    }
 }
