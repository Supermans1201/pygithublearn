From b2e73a094e8199243aab0c8311b7f86f97c4a8ee Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 18 Sep 2015 19:06:04 +0200
Subject: [PATCH] Fix split quantity not updated after edit

Fix reset status bar color in scheduledActivity
---
 .../ui/transaction/ScheduledActionsListFragment.java      | 13 ++++++++++---
 .../android/ui/transaction/TransactionDetailActivity.java |  4 ++--
 .../android/ui/transaction/TransactionFormFragment.java   | 15 +++------------
 3 files changed, 15 insertions(+), 17 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
index f5b808c6..48de721d 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
@@ -128,16 +128,24 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                         }
                     }
                     mode.finish();
+                    setDefaultStatusBarColor();
                     getLoaderManager().destroyLoader(0);
                     refreshList();
                     return true;
 
                 default:
+                    setDefaultStatusBarColor();
                     return false;
             }
         }
     };
 
+    private void setDefaultStatusBarColor() {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            getActivity().getWindow().setStatusBarColor(getResources().getColor(R.color.theme_primary_dark));
+        }
+    }
+
     /**
      * Returns a new instance of the fragment for displayed the scheduled action
      * @param actionType Type of scheduled action to be displayed
@@ -194,6 +202,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
         setHasOptionsMenu(true);
         getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
+        ((TextView)getListView().getEmptyView()).setTextColor(getResources().getColor(R.color.theme_accent));
         if (mActionType == ScheduledAction.ActionType.TRANSACTION){
             ((TextView)getListView().getEmptyView()).setText(R.string.label_no_recurring_transactions);
         } else if (mActionType == ScheduledAction.ActionType.BACKUP){
@@ -357,9 +366,7 @@ private void stopActionMode(){
         int checkedCount = getListView().getCheckedItemIds().length;
         if (checkedCount <= 0 && mActionMode != null) {
             mActionMode.finish();
-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP){
-                getActivity().getWindow().setStatusBarColor(getResources().getColor(R.color.theme_primary_dark));
-            }
+            setDefaultStatusBarColor();
         }
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
index 9a53ea20..3e644531 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
@@ -130,13 +130,13 @@ private void bindViews(){
         LayoutInflater inflater = LayoutInflater.from(this);
         int index = 0;
         for (Split split : transaction.getSplits()) {
-            if (useDoubleEntry && split.getAccountUID().equals(accountsDbAdapter.getImbalanceAccountUID(split.getValue().getCurrency()))){
+            if (!useDoubleEntry && split.getAccountUID().equals(accountsDbAdapter.getImbalanceAccountUID(split.getValue().getCurrency()))){
                 //do now show imbalance accounts for single entry use case
                 continue;
             }
             View view = inflater.inflate(R.layout.item_split_amount_info, mDetailTableLayout, false);
             SplitAmountViewHolder viewHolder = new SplitAmountViewHolder(view, split);
-            mDetailTableLayout.addView(view, index++);
+            mDetailTableLayout.addView(viewHolder.itemView, index++);
         }
 
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index d421ee83..8ad27d9a 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -759,29 +759,20 @@ private void saveNewTransaction() {
                 if (split.getAccountUID().equals(mAccountUID)){
                     split.setType(mTransactionTypeSwitch.getTransactionType());
                     split.setValue(amount);
+                    split.setQuantity(amount);
                 } else {
                     split.setType(mTransactionTypeSwitch.getTransactionType().invert());
                     if (mSplitQuantity != null)
                         split.setQuantity(mSplitQuantity);
+                    else
+                        split.setQuantity(amount);
                     split.setValue(amount);
                 }
             }
         }
 
-        Money splitSum = Money.createZeroInstance(currency.getCurrencyCode());
-        for (Split split : mSplitsList) {
-            Money amt = split.getValue().absolute();
-            if (split.getType() == TransactionType.DEBIT)
-                splitSum = splitSum.subtract(amt);
-            else
-                splitSum = splitSum.add(amt);
-        }
         mAccountsDbAdapter.beginTransaction();
         try {
-            if (!splitSum.isAmountZero()) {
-                Split imbSplit = new Split(splitSum.negate(), mAccountsDbAdapter.getOrCreateImbalanceAccountUID(currency));
-                mSplitsList.add(imbSplit);
-            }
             if (mTransaction != null) { //if editing an existing transaction
                 mTransaction.setSplits(mSplitsList);
                 mTransaction.setDescription(description);
