From 6ee97a12912175030d45c5d8822c11e9e1bcfa76 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 4 Aug 2016 08:36:32 +0200
Subject: [PATCH] Add equals() and hashcode() methods for Splits

Add test for simple adding of multicurrency transactions
---
 .../android/test/ui/TransactionsActivityTest.java  | 57 +++++++++++++++++++++-
 .../main/java/org/gnucash/android/model/Split.java | 31 ++++++++++++
 2 files changed, 87 insertions(+), 1 deletion(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 1694ae59..5b4fe1d4 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -276,6 +276,56 @@ public void testAddTransaction(){
     }
 
 	@Test
+	public void testAddMultiCurrencyTransaction(){
+		Commodity euro = Commodity.getInstance("EUR");
+		Account euroAccount = new Account("Euro Konto", euro);
+		mAccountsDbAdapter.addRecord(euroAccount);
+
+		int transactionCount = mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID);
+		setDoubleEntryEnabled(true);
+		setDefaultTransactionType(TransactionType.DEBIT);
+		validateTransactionListDisplayed();
+
+		onView(withId(R.id.fab_create_transaction)).perform(click());
+
+		String transactionName = "Multicurrency lunch";
+		onView(withId(R.id.input_transaction_name)).perform(typeText(transactionName));
+		onView(withId(R.id.input_transaction_amount)).perform(typeText("10"));
+		Espresso.pressBack(); //close calculator keyboard
+
+		onView(withId(R.id.input_transfer_account_spinner)).perform(click());
+		onView(withText(euroAccount.getFullName())).check(matches(isDisplayed())).perform(click());
+
+		onView(withId(R.id.menu_save)).perform(click());
+
+		onView(withText(R.string.msg_provide_exchange_rate)).check(matches(isDisplayed()));
+		onView(withId(R.id.radio_converted_amount)).perform(click());
+		onView(withId(R.id.input_converted_amount)).perform(typeText("5"));
+		Espresso.closeSoftKeyboard();
+		onView(withId(R.id.btn_save)).perform(click());
+
+		onView(withId(R.id.menu_save)).perform(click());
+
+		List<Transaction> allTransactions = mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID);
+		assertThat(allTransactions).hasSize(transactionCount+1);
+		Transaction multiTrans = allTransactions.get(0);
+
+		assertThat(multiTrans.getSplits()).extracting("mAccountUID")
+				.contains(TRANSACTIONS_ACCOUNT_UID)
+				.contains(euroAccount.getUID());
+
+		Split euroSplit = multiTrans.getSplits(euroAccount.getUID()).get(0);
+		Money expectedQty = new Money("5", euro.getCurrencyCode());
+		Money expectedValue = new Money(BigDecimal.TEN, COMMODITY);
+		assertThat(euroSplit.getQuantity()).isEqualTo(expectedQty);
+		assertThat(euroSplit.getValue()).isEqualTo(expectedValue);
+
+		Split usdSplit = multiTrans.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0);
+		assertThat(usdSplit.getQuantity()).isEqualTo(expectedValue);
+		assertThat(usdSplit.getValue()).isEqualTo(expectedValue);
+	}
+
+	@Test
 	public void testEditTransaction(){
 		validateTransactionListDisplayed();
 
@@ -283,8 +333,13 @@ public void testEditTransaction(){
 		
 		validateEditTransactionFields(mTransaction);
 
-		onView(withId(R.id.input_transaction_name)).perform(clearText(), typeText("Pasta"));
+		String trnName = "Pasta";
+		onView(withId(R.id.input_transaction_name)).perform(clearText(), typeText(trnName));
 		onView(withId(R.id.menu_save)).perform(click());
+
+		Transaction editedTransaction = mTransactionsDbAdapter.getRecord(mTransaction.getUID());
+		assertThat(editedTransaction.getDescription()).isEqualTo(trnName);
+		assertThat(editedTransaction.getSplits()).isEqualTo(mTransaction.getSplits());
 	}
 
 	/**
diff --git a/app/src/main/java/org/gnucash/android/model/Split.java b/app/src/main/java/org/gnucash/android/model/Split.java
index 94eaf370..09292110 100644
--- a/app/src/main/java/org/gnucash/android/model/Split.java
+++ b/app/src/main/java/org/gnucash/android/model/Split.java
@@ -441,4 +441,35 @@ public static Split parseSplit(String splitCsvString) {
             return split;
         }
     }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        if (!super.equals(o)) return false;
+
+        Split split = (Split) o;
+
+        if (mReconcileState != split.mReconcileState) return false;
+        if (!mValue.equals(split.mValue)) return false;
+        if (!mQuantity.equals(split.mQuantity)) return false;
+        if (!mTransactionUID.equals(split.mTransactionUID)) return false;
+        if (!mAccountUID.equals(split.mAccountUID)) return false;
+        if (mSplitType != split.mSplitType) return false;
+        return mMemo != null ? mMemo.equals(split.mMemo) : split.mMemo == null;
+
+    }
+
+    @Override
+    public int hashCode() {
+        int result = super.hashCode();
+        result = 31 * result + mValue.hashCode();
+        result = 31 * result + mQuantity.hashCode();
+        result = 31 * result + mTransactionUID.hashCode();
+        result = 31 * result + mAccountUID.hashCode();
+        result = 31 * result + mSplitType.hashCode();
+        result = 31 * result + (mMemo != null ? mMemo.hashCode() : 0);
+        result = 31 * result + (int) mReconcileState;
+        return result;
+    }
 }
