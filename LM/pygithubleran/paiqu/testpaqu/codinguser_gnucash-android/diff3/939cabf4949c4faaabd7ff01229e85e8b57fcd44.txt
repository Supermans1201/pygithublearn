From 939cabf4949c4faaabd7ff01229e85e8b57fcd44 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sat, 25 Jul 2015 02:09:06 +0200
Subject: [PATCH] Use RecyclerView and  Cardview for account list

---
 app/build.gradle                                   |   4 +-
 .../gnucash/android/db/CursorRecyclerAdapter.java  | 368 +++++++++++++++++++++
 .../android/ui/account/AccountsListFragment.java   | 344 +++++++------------
 .../main/res/drawable-hdpi/ic_add_black_24dp.png   | Bin 0 -> 124 bytes
 .../res/drawable-hdpi/ic_more_vert_black_24dp.png  | Bin 0 -> 132 bytes
 .../main/res/drawable-hdpi/ic_star_black_24dp.png  | Bin 0 -> 369 bytes
 .../drawable-hdpi/ic_star_border_black_24dp.png    | Bin 0 -> 500 bytes
 .../main/res/drawable-mdpi/ic_add_black_24dp.png   | Bin 0 -> 86 bytes
 .../res/drawable-mdpi/ic_more_vert_black_24dp.png  | Bin 0 -> 108 bytes
 .../main/res/drawable-mdpi/ic_star_black_24dp.png  | Bin 0 -> 263 bytes
 .../drawable-mdpi/ic_star_border_black_24dp.png    | Bin 0 -> 332 bytes
 .../main/res/drawable-xhdpi/ic_add_black_24dp.png  | Bin 0 -> 108 bytes
 .../res/drawable-xhdpi/ic_more_vert_black_24dp.png | Bin 0 -> 155 bytes
 .../main/res/drawable-xhdpi/ic_star_black_24dp.png | Bin 0 -> 467 bytes
 .../drawable-xhdpi/ic_star_border_black_24dp.png   | Bin 0 -> 674 bytes
 .../main/res/drawable-xxhdpi/ic_add_black_24dp.png | Bin 0 -> 114 bytes
 .../drawable-xxhdpi/ic_more_vert_black_24dp.png    | Bin 0 -> 205 bytes
 .../res/drawable-xxhdpi/ic_star_black_24dp.png     | Bin 0 -> 668 bytes
 .../drawable-xxhdpi/ic_star_border_black_24dp.png  | Bin 0 -> 971 bytes
 app/src/main/res/layout/cardview_account.xml       | 104 ++++++
 app/src/main/res/layout/fragment_accounts_list.xml |  34 +-
 app/src/main/res/layout/list_item_account.xml      |  65 ----
 app/src/main/res/menu/account_context_menu.xml     |   4 -
 app/src/main/res/values/strings.xml                |   2 +-
 app/src/main/res/values/styles.xml                 |   2 +-
 25 files changed, 606 insertions(+), 321 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/db/CursorRecyclerAdapter.java
 create mode 100644 app/src/main/res/drawable-hdpi/ic_add_black_24dp.png
 create mode 100644 app/src/main/res/drawable-hdpi/ic_more_vert_black_24dp.png
 create mode 100644 app/src/main/res/drawable-hdpi/ic_star_black_24dp.png
 create mode 100644 app/src/main/res/drawable-hdpi/ic_star_border_black_24dp.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_add_black_24dp.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_more_vert_black_24dp.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_star_black_24dp.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_star_border_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_add_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_more_vert_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_star_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_star_border_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_add_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_more_vert_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_star_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_star_border_black_24dp.png
 create mode 100644 app/src/main/res/layout/cardview_account.xml
 delete mode 100644 app/src/main/res/layout/list_item_account.xml

diff --git a/app/build.gradle b/app/build.gradle
index 3872f444..82d9719a 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -160,7 +160,9 @@ dependencies {
             'com.github.PhilJay:MPAndroidChart:v2.1.0',
             'joda-time:joda-time:2.7',
             'com.google.android.gms:play-services-drive:7.0.0',
-            'com.crashlytics.android:crashlytics:1.+'
+            'com.crashlytics.android:crashlytics:1.+',
+            'com.android.support:cardview-v7:22.2.0',
+            'com.android.support:recyclerview-v7:22.2.0'
     )
 
     testCompile('org.robolectric:robolectric:3.0',
diff --git a/app/src/main/java/org/gnucash/android/db/CursorRecyclerAdapter.java b/app/src/main/java/org/gnucash/android/db/CursorRecyclerAdapter.java
new file mode 100644
index 00000000..e912d1a4
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/db/CursorRecyclerAdapter.java
@@ -0,0 +1,368 @@
+/*
+ * The MIT License (MIT)
+ *
+ * Copyright (c) 2014 Matthieu Harl
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+ * SOFTWARE.
+ */
+
+package org.gnucash.android.db;
+
+import android.database.ContentObserver;
+import android.database.Cursor;
+import android.database.DataSetObserver;
+import android.os.Handler;
+import android.support.v7.widget.RecyclerView;
+import android.widget.Filter;
+import android.widget.FilterQueryProvider;
+import android.widget.Filterable;
+
+/**
+ * Provide a {@link android.support.v7.widget.RecyclerView.Adapter} implementation with cursor
+ * support.
+ *
+ * Child classes only need to implement {@link #onCreateViewHolder(android.view.ViewGroup, int)} and
+ * {@link #onBindViewHolderCursor(android.support.v7.widget.RecyclerView.ViewHolder, android.database.Cursor)}.
+ *
+ * This class does not implement deprecated fields and methods from CursorAdapter! Incidentally,
+ * only {@link android.widget.CursorAdapter#FLAG_REGISTER_CONTENT_OBSERVER} is available, so the
+ * flag is implied, and only the Adapter behavior using this flag has been ported.
+ *
+ * @param <VH> {@inheritDoc}
+ *
+ * @see android.support.v7.widget.RecyclerView.Adapter
+ * @see android.widget.CursorAdapter
+ * @see android.widget.Filterable
+ * @see org.gnucash.android.db.CursorFilter.CursorFilterClient
+ */
+public abstract class CursorRecyclerAdapter<VH
+        extends android.support.v7.widget.RecyclerView.ViewHolder> extends RecyclerView.Adapter<VH>
+        implements Filterable, CursorFilter.CursorFilterClient {
+    private boolean mDataValid;
+    private int mRowIDColumn;
+    private Cursor mCursor;
+    private ChangeObserver mChangeObserver;
+    private DataSetObserver mDataSetObserver;
+    private CursorFilter mCursorFilter;
+    private FilterQueryProvider mFilterQueryProvider;
+
+    public CursorRecyclerAdapter( Cursor cursor) {
+        init(cursor);
+    }
+
+    void init(Cursor c) {
+        boolean cursorPresent = c != null;
+        mCursor = c;
+        mDataValid = cursorPresent;
+        mRowIDColumn = cursorPresent ? c.getColumnIndexOrThrow("_id") : -1;
+
+        mChangeObserver = new ChangeObserver();
+        mDataSetObserver = new MyDataSetObserver();
+
+        if (cursorPresent) {
+            if (mChangeObserver != null) c.registerContentObserver(mChangeObserver);
+            if (mDataSetObserver != null) c.registerDataSetObserver(mDataSetObserver);
+        }
+    }
+
+    /**
+     * This method will move the Cursor to the correct position and call
+     * {@link #onBindViewHolderCursor(android.support.v7.widget.RecyclerView.ViewHolder,
+     * android.database.Cursor)}.
+     *
+     * @param holder {@inheritDoc}
+     * @param i {@inheritDoc}
+     */
+    @Override
+    public void onBindViewHolder(VH holder, int i){
+        if (!mDataValid) {
+            throw new IllegalStateException("this should only be called when the cursor is valid");
+        }
+        if (!mCursor.moveToPosition(i)) {
+            throw new IllegalStateException("couldn't move cursor to position " + i);
+        }
+        onBindViewHolderCursor(holder, mCursor);
+    }
+
+    /**
+     * See {@link android.widget.CursorAdapter#bindView(android.view.View, android.content.Context,
+     * android.database.Cursor)},
+     * {@link #onBindViewHolder(android.support.v7.widget.RecyclerView.ViewHolder, int)}
+     *
+     * @param holder View holder.
+     * @param cursor The cursor from which to get the data. The cursor is already
+     * moved to the correct position.
+     */
+    public abstract void onBindViewHolderCursor(VH holder, Cursor cursor);
+
+    @Override
+    public int getItemCount() {
+        if (mDataValid && mCursor != null) {
+            return mCursor.getCount();
+        } else {
+            return 0;
+        }
+    }
+
+    /**
+     * @see android.widget.ListAdapter#getItemId(int)
+     */
+    @Override
+    public long getItemId(int position) {
+        if (mDataValid && mCursor != null) {
+            if (mCursor.moveToPosition(position)) {
+                return mCursor.getLong(mRowIDColumn);
+            } else {
+                return 0;
+            }
+        } else {
+            return 0;
+        }
+    }
+
+    public Cursor getCursor(){
+        return mCursor;
+    }
+
+    /**
+     * Change the underlying cursor to a new cursor. If there is an existing cursor it will be
+     * closed.
+     *
+     * @param cursor The new cursor to be used
+     */
+    public void changeCursor(Cursor cursor) {
+        Cursor old = swapCursor(cursor);
+        if (old != null) {
+            old.close();
+        }
+    }
+
+    /**
+     * Swap in a new Cursor, returning the old Cursor.  Unlike
+     * {@link #changeCursor(Cursor)}, the returned old Cursor is <em>not</em>
+     * closed.
+     *
+     * @param newCursor The new cursor to be used.
+     * @return Returns the previously set Cursor, or null if there wasa not one.
+     * If the given new Cursor is the same instance is the previously set
+     * Cursor, null is also returned.
+     */
+    public Cursor swapCursor(Cursor newCursor) {
+        if (newCursor == mCursor) {
+            return null;
+        }
+        Cursor oldCursor = mCursor;
+        if (oldCursor != null) {
+            if (mChangeObserver != null) oldCursor.unregisterContentObserver(mChangeObserver);
+            if (mDataSetObserver != null) oldCursor.unregisterDataSetObserver(mDataSetObserver);
+        }
+        mCursor = newCursor;
+        if (newCursor != null) {
+            if (mChangeObserver != null) newCursor.registerContentObserver(mChangeObserver);
+            if (mDataSetObserver != null) newCursor.registerDataSetObserver(mDataSetObserver);
+            mRowIDColumn = newCursor.getColumnIndexOrThrow("_id");
+            mDataValid = true;
+            // notify the observers about the new cursor
+            notifyDataSetChanged();
+        } else {
+            mRowIDColumn = -1;
+            mDataValid = false;
+            // notify the observers about the lack of a data set
+            // notifyDataSetInvalidated();
+            notifyItemRangeRemoved(0, getItemCount());
+        }
+        return oldCursor;
+    }
+
+    /**
+     * <p>Converts the cursor into a CharSequence. Subclasses should override this
+     * method to convert their results. The default implementation returns an
+     * empty String for null values or the default String representation of
+     * the value.</p>
+     *
+     * @param cursor the cursor to convert to a CharSequence
+     * @return a CharSequence representing the value
+     */
+    public CharSequence convertToString(Cursor cursor) {
+        return cursor == null ? "" : cursor.toString();
+    }
+
+    /**
+     * Runs a query with the specified constraint. This query is requested
+     * by the filter attached to this adapter.
+     *
+     * The query is provided by a
+     * {@link android.widget.FilterQueryProvider}.
+     * If no provider is specified, the current cursor is not filtered and returned.
+     *
+     * After this method returns the resulting cursor is passed to {@link #changeCursor(Cursor)}
+     * and the previous cursor is closed.
+     *
+     * This method is always executed on a background thread, not on the
+     * application's main thread (or UI thread.)
+     *
+     * Contract: when constraint is null or empty, the original results,
+     * prior to any filtering, must be returned.
+     *
+     * @param constraint the constraint with which the query must be filtered
+     *
+     * @return a Cursor representing the results of the new query
+     *
+     * @see #getFilter()
+     * @see #getFilterQueryProvider()
+     * @see #setFilterQueryProvider(android.widget.FilterQueryProvider)
+     */
+    public Cursor runQueryOnBackgroundThread(CharSequence constraint) {
+        if (mFilterQueryProvider != null) {
+            return mFilterQueryProvider.runQuery(constraint);
+        }
+
+        return mCursor;
+    }
+
+    public Filter getFilter() {
+        if (mCursorFilter == null) {
+            mCursorFilter = new CursorFilter(this);
+        }
+        return mCursorFilter;
+    }
+
+    /**
+     * Returns the query filter provider used for filtering. When the
+     * provider is null, no filtering occurs.
+     *
+     * @return the current filter query provider or null if it does not exist
+     *
+     * @see #setFilterQueryProvider(android.widget.FilterQueryProvider)
+     * @see #runQueryOnBackgroundThread(CharSequence)
+     */
+    public FilterQueryProvider getFilterQueryProvider() {
+        return mFilterQueryProvider;
+    }
+
+    /**
+     * Sets the query filter provider used to filter the current Cursor.
+     * The provider's
+     * {@link android.widget.FilterQueryProvider#runQuery(CharSequence)}
+     * method is invoked when filtering is requested by a client of
+     * this adapter.
+     *
+     * @param filterQueryProvider the filter query provider or null to remove it
+     *
+     * @see #getFilterQueryProvider()
+     * @see #runQueryOnBackgroundThread(CharSequence)
+     */
+    public void setFilterQueryProvider(FilterQueryProvider filterQueryProvider) {
+        mFilterQueryProvider = filterQueryProvider;
+    }
+
+    /**
+     * Called when the {@link ContentObserver} on the cursor receives a change notification.
+     * Can be implemented by sub-class.
+     *
+     * @see ContentObserver#onChange(boolean)
+     */
+    protected void onContentChanged() {
+
+    }
+
+    private class ChangeObserver extends ContentObserver {
+        public ChangeObserver() {
+            super(new Handler());
+        }
+
+        @Override
+        public boolean deliverSelfNotifications() {
+            return true;
+        }
+
+        @Override
+        public void onChange(boolean selfChange) {
+            onContentChanged();
+        }
+    }
+
+    private class MyDataSetObserver extends DataSetObserver {
+        @Override
+        public void onChanged() {
+            mDataValid = true;
+            notifyDataSetChanged();
+        }
+
+        @Override
+        public void onInvalidated() {
+            mDataValid = false;
+            // notifyDataSetInvalidated();
+            notifyItemRangeRemoved(0, getItemCount());
+        }
+    }
+
+    /**
+     * <p>The CursorFilter delegates most of the work to the CursorAdapter.
+     * Subclasses should override these delegate methods to run the queries
+     * and convert the results into String that can be used by auto-completion
+     * widgets.</p>
+     */
+
+}
+
+class CursorFilter extends Filter {
+
+    CursorFilterClient mClient;
+
+    interface CursorFilterClient {
+        CharSequence convertToString(Cursor cursor);
+        Cursor runQueryOnBackgroundThread(CharSequence constraint);
+        Cursor getCursor();
+        void changeCursor(Cursor cursor);
+    }
+
+    CursorFilter(CursorFilterClient client) {
+        mClient = client;
+    }
+
+    @Override
+    public CharSequence convertResultToString(Object resultValue) {
+        return mClient.convertToString((Cursor) resultValue);
+    }
+
+    @Override
+    protected FilterResults performFiltering(CharSequence constraint) {
+        Cursor cursor = mClient.runQueryOnBackgroundThread(constraint);
+
+        FilterResults results = new FilterResults();
+        if (cursor != null) {
+            results.count = cursor.getCount();
+            results.values = cursor;
+        } else {
+            results.count = 0;
+            results.values = null;
+        }
+        return results;
+    }
+
+    @Override
+    protected void publishResults(CharSequence constraint, FilterResults results) {
+        Cursor oldCursor = mClient.getCursor();
+
+        if (results.values != null && results.values != oldCursor) {
+            mClient.changeCursor((Cursor) results.values);
+        }
+    }
+}
\ No newline at end of file
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index e121c1ea..3adb4813 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -18,42 +18,38 @@
 
 import android.app.Activity;
 import android.app.SearchManager;
+import android.content.ContentValues;
 import android.content.Context;
 import android.content.Intent;
 import android.database.Cursor;
 import android.graphics.Color;
-import android.graphics.Rect;
 import android.os.Bundle;
 import android.support.design.widget.FloatingActionButton;
-import android.support.v4.app.ListFragment;
+import android.support.v4.app.Fragment;
 import android.support.v4.app.LoaderManager.LoaderCallbacks;
 import android.support.v4.content.Loader;
 import android.support.v4.view.MenuItemCompat;
-import android.support.v4.widget.SimpleCursorAdapter;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
-import android.support.v7.view.ActionMode;
+import android.support.v7.internal.widget.AdapterViewCompat;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.PopupMenu;
+import android.support.v7.widget.RecyclerView;
 import android.text.TextUtils;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
-import android.view.TouchDelegate;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemLongClickListener;
-import android.widget.ImageButton;
-import android.widget.ListAdapter;
-import android.widget.ListView;
+import android.widget.ImageView;
 import android.widget.TextView;
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
@@ -66,12 +62,15 @@
  *
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class AccountsListFragment extends ListFragment implements
+public class AccountsListFragment extends Fragment implements
         Refreshable,
-        LoaderCallbacks<Cursor>, OnItemLongClickListener,
+        LoaderCallbacks<Cursor>,
         android.support.v7.widget.SearchView.OnQueryTextListener,
         android.support.v7.widget.SearchView.OnCloseListener {
 
+    private RecyclerView mRecyclerView;
+    private AccountRecyclerAdapter mAccountRecyclerAdapter;
+
     /**
      * Describes the kinds of accounts that should be loaded in the accounts list.
      * This enhances reuse of the accounts list fragment
@@ -91,11 +90,6 @@
      */
     protected static final String TAG = "AccountsListFragment";
 
-
-    /**
-     * {@link ListAdapter} for the accounts which will be bound to the list
-     */
-    AccountsCursorAdapter mAccountsCursorAdapter;
     /**
      * Database adapter for loading Account records from the database
      */
@@ -104,30 +98,6 @@
      * Listener to be notified when an account is clicked
      */
     private OnAccountClickedListener mAccountSelectedListener;
-    /**
-     * Flag to indicate if the fragment is in edit mode
-     * Edit mode means an account has been selected (through long press) and the
-     * context action bar (CAB) is activated
-     */
-    private boolean mInEditMode = false;
-    /**
-     * Android action mode
-     * Is not null only when an accoun is selected and the Context ActionBar (CAB) is activated
-     */
-    private ActionMode mActionMode = null;
-
-    /**
-     * Stores the database ID of the currently selected account when in action mode.
-     * This is necessary because getSelectedItemId() does not work properly (by design)
-     * in touch mode (which is the majority of devices today)
-     */
-    private long mSelectedItemId = -1;
-
-    /**
-     * Database record ID of the account whose children will be loaded by the list fragment.
-     * If no parent account is specified, then all top-level accounts are loaded.
-     */
-//    private long mParentAccountId = -1;
 
     /**
      * GUID of the account whose children will be loaded in the list fragment.
@@ -145,68 +115,6 @@
      */
     private android.support.v7.widget.SearchView mSearchView;
 
-    /**
-     * Callbacks for the CAB menu
-     */
-    private ActionMode.Callback mActionModeCallbacks = new ActionMode.Callback() {
-
-        String mSelectedAccountUID;
-
-        @Override
-        public boolean onCreateActionMode(ActionMode mode, Menu menu) {
-            MenuInflater inflater = mode.getMenuInflater();
-            inflater.inflate(R.menu.account_context_menu, menu);
-            mode.setTitle(getString(R.string.title_selected, 1));
-            mSelectedAccountUID = mAccountsDbAdapter.getUID(mSelectedItemId);
-            return true;
-        }
-
-        @Override
-        public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
-            // nothing to see here, move along
-            MenuItem favoriteAccountMenuItem = menu.findItem(R.id.menu_favorite_account);
-            boolean isFavoriteAccount = AccountsDbAdapter.getInstance().isFavoriteAccount(mSelectedAccountUID);
-
-            int favoriteIcon = isFavoriteAccount ? R.drawable.ic_star_white_24dp : R.drawable.ic_star_border_white_24dp;
-            favoriteAccountMenuItem.setIcon(favoriteIcon);
-
-            return true;
-        }
-
-        @Override
-        public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
-            switch (item.getItemId()) {
-                case R.id.menu_favorite_account:
-                    boolean isFavorite = mAccountsDbAdapter.isFavoriteAccount(mSelectedAccountUID);
-                    //toggle favorite preference
-                    mAccountsDbAdapter.updateAccount(mSelectedItemId,
-                            DatabaseSchema.AccountEntry.COLUMN_FAVORITE, isFavorite ? "0" : "1");
-                    mode.invalidate();
-                    return true;
-
-                case R.id.context_menu_edit_accounts:
-                    openCreateOrEditActivity(mSelectedItemId);
-                    mode.finish();
-                    mActionMode = null;
-                    return true;
-
-                case R.id.context_menu_delete:
-                    tryDeleteAccount(mSelectedItemId);
-                    mode.finish();
-                    mActionMode = null;
-                    return true;
-
-                default:
-                    return false;
-            }
-        }
-
-        @Override
-        public void onDestroyActionMode(ActionMode mode) {
-            finishEditMode();
-        }
-    };
-
     public static AccountsListFragment newInstance(DisplayMode displayMode){
         AccountsListFragment fragment = new AccountsListFragment();
         fragment.mDisplayMode = displayMode;
@@ -221,6 +129,13 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         TextView sumlabelTextView = (TextView) v.findViewById(R.id.label_sum);
         sumlabelTextView.setText(R.string.account_balance);
 
+        mRecyclerView = (RecyclerView) v.findViewById(R.id.account_recycler_view);
+        mRecyclerView.setHasFixedSize(true);
+
+        // use a linear layout manager
+        LinearLayoutManager mLayoutManager = new LinearLayoutManager(getActivity());
+        mRecyclerView.setLayoutManager(mLayoutManager);
+
         FloatingActionButton floatingActionButton = (FloatingActionButton) v.findViewById(R.id.fab_create_account);
         floatingActionButton.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -240,13 +155,6 @@ public void onCreate(Bundle savedInstanceState) {
             mParentAccountUID = args.getString(UxArgument.PARENT_ACCOUNT_UID);
 
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
-        mAccountsCursorAdapter = new AccountsCursorAdapter(
-                getActivity().getApplicationContext(),
-                R.layout.list_item_account, null,
-                new String[]{DatabaseSchema.AccountEntry.COLUMN_NAME},
-                new int[]{R.id.primary_text});
-
-        setListAdapter(mAccountsCursorAdapter);
     }
 
     @Override
@@ -256,12 +164,13 @@ public void onActivityCreated(Bundle savedInstanceState) {
         ActionBar actionbar = ((AppCompatActivity) getActivity()).getSupportActionBar();
         actionbar.setTitle(R.string.title_accounts);
         actionbar.setDisplayHomeAsUpEnabled(true);
-
         setHasOptionsMenu(true);
 
-        ListView lv = getListView();
-        lv.setOnItemLongClickListener(this);
-        lv.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
+
+        // specify an adapter (see also next example)
+        mAccountRecyclerAdapter = new AccountRecyclerAdapter(null);
+        mRecyclerView.setAdapter(mAccountRecyclerAdapter);
+
         getLoaderManager().initLoader(0, null, this);
     }
 
@@ -283,31 +192,8 @@ public void onAttach(Activity activity) {
         }
     }
 
-    @Override
-    public void onListItemClick(ListView listView, View view, int position, long id) {
-        super.onListItemClick(listView, view, position, id);
-        if (mInEditMode) {
-            mSelectedItemId = id;
-            listView.setItemChecked(position, true);
-            return;
-        }
-        mAccountSelectedListener.accountSelected(mAccountsDbAdapter.getUID(id));
-    }
-
-    @Override
-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position,
-                                   long id) {
-        if (mActionMode != null) {
-            return false;
-        }
-        mInEditMode = true;
-        mSelectedItemId = id;
-        // Start the CAB using the ActionMode.Callback defined above
-        mActionMode = ((AppCompatActivity) getActivity())
-                                .startSupportActionMode(mActionModeCallbacks);
-
-        getListView().setItemChecked(position, true);
-        return true;
+    public void onListItemClick(String accountUID) {
+        mAccountSelectedListener.accountSelected(accountUID);
     }
 
     @Override
@@ -331,7 +217,7 @@ public void tryDeleteAccount(long rowId) {
             showConfirmationDialog(rowId);
         } else {
             mAccountsDbAdapter.deleteRecord(rowId);
-            mAccountsCursorAdapter.swapCursor(null);
+            mAccountRecyclerAdapter.swapCursor(null);
             refresh();
         }
     }
@@ -348,17 +234,6 @@ public void showConfirmationDialog(long id) {
         alertFragment.show(getActivity().getSupportFragmentManager(), "delete_confirmation_dialog");
     }
 
-    /**
-     * Finish the edit mode and dismisses the Contextual ActionBar
-     * Any selected (highlighted) accounts are deselected
-     */
-    public void finishEditMode() {
-        mInEditMode = false;
-        getListView().setItemChecked(getListView().getCheckedItemPosition(), false);
-        mActionMode = null;
-        mSelectedItemId = -1;
-    }
-
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         if (mParentAccountUID != null)
@@ -380,14 +255,6 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         }
     }
 
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-
-            default:
-                return super.onOptionsItemSelected(item);
-        }
-    }
 
     private void startActionCreateAccount() {
         Intent addAccountIntent = new Intent(getActivity(), AccountsActivity.class);
@@ -447,14 +314,14 @@ public void openCreateOrEditActivity(long accountId){
     @Override
     public void onLoadFinished(Loader<Cursor> loaderCursor, Cursor cursor) {
         Log.d(TAG, "Accounts loader finished. Swapping in cursor");
-        mAccountsCursorAdapter.swapCursor(cursor);
-        mAccountsCursorAdapter.notifyDataSetChanged();
+        mAccountRecyclerAdapter.swapCursor(cursor);
+        mAccountRecyclerAdapter.notifyDataSetChanged();
     }
 
     @Override
     public void onLoaderReset(Loader<Cursor> arg0) {
         Log.d(TAG, "Resetting the accounts loader");
-        mAccountsCursorAdapter.swapCursor(null);
+        mAccountRecyclerAdapter.swapCursor(null);
     }
 
     @Override
@@ -559,58 +426,52 @@ public Cursor loadInBackground() {
         }
     }
 
-    /**
-     * Overrides the {@link SimpleCursorAdapter} to provide custom binding of the
-     * information from the database to the views
-     *
-     * @author Ngewi Fet <ngewif@gmail.com>
-     */
-    private class AccountsCursorAdapter extends SimpleCursorAdapter {
-        TransactionsDbAdapter transactionsDBAdapter;
 
-        public AccountsCursorAdapter(Context context, int layout, Cursor c,
-                                     String[] from, int[] to) {
-            super(context, layout, c, from, to, 0);
-            transactionsDBAdapter = TransactionsDbAdapter.getInstance();
+    private class AccountRecyclerAdapter extends org.gnucash.android.db.CursorRecyclerAdapter<AccountRecyclerAdapter.ViewHolder>{
+
+        public AccountRecyclerAdapter(Cursor cursor){
+           super(cursor);
         }
 
         @Override
-        public void bindView(View v, Context context, Cursor cursor) {
-            // perform the default binding
-            super.bindView(v, context, cursor);
+        public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+            View v = LayoutInflater.from(parent.getContext())
+                    .inflate(R.layout.cardview_account, parent, false);
+
+            ViewHolder viewHolder = new ViewHolder(v);
+            return viewHolder;
+        }
 
+        @Override
+        public void onBindViewHolderCursor(final ViewHolder holder, final Cursor cursor) {
             final String accountUID = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_UID));
+            holder.accoundId = mAccountsDbAdapter.getID(accountUID);
 
-            TextView subAccountTextView = (TextView) v.findViewById(R.id.secondary_text);
+            holder.accountName.setText(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_NAME)));
             int subAccountCount = mAccountsDbAdapter.getSubAccountCount(accountUID);
             if (subAccountCount > 0) {
-                subAccountTextView.setVisibility(View.VISIBLE);
+                holder.description.setVisibility(View.VISIBLE);
                 String text = getResources().getQuantityString(R.plurals.label_sub_accounts, subAccountCount, subAccountCount);
-                subAccountTextView.setText(text);
+                holder.description.setText(text);
             } else
-                subAccountTextView.setVisibility(View.GONE);
+                holder.description.setVisibility(View.GONE);
 
             // add a summary of transactions to the account view
-            TextView accountBalanceTextView = (TextView) v
-                    .findViewById(R.id.transactions_summary);
-            new AccountBalanceTask(accountBalanceTextView).execute(accountUID);
+            new AccountBalanceTask(holder.accountBalance).execute(accountUID);
 
-            View colorStripView = v.findViewById(R.id.account_color_strip);
             String accountColor = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_COLOR_CODE));
             if (accountColor != null){
                 int color = Color.parseColor(accountColor);
-                colorStripView.setBackgroundColor(color);
+                holder.colorStripView.setBackgroundColor(color);
             } else {
-                colorStripView.setBackgroundColor(Color.TRANSPARENT);
+                holder.colorStripView.setBackgroundColor(Color.TRANSPARENT);
             }
 
             boolean isPlaceholderAccount = mAccountsDbAdapter.isPlaceholderAccount(accountUID);
-            ImageButton newTransactionButton = (ImageButton) v.findViewById(R.id.btn_new_transaction);
             if (isPlaceholderAccount){
-                newTransactionButton.setVisibility(View.GONE);
-                v.findViewById(R.id.vertical_line).setVisibility(View.GONE);
+                holder.createTransaction.setVisibility(View.GONE);
             } else {
-                newTransactionButton.setOnClickListener(new View.OnClickListener() {
+                holder.createTransaction.setOnClickListener(new View.OnClickListener() {
 
                     @Override
                     public void onClick(View v) {
@@ -621,46 +482,85 @@ public void onClick(View v) {
                     }
                 });
             }
-            newTransactionButton.setFocusable(false);
-        }
 
-        @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
-            View itemView = super.getView(position, convertView, parent);
-            TextView secondaryText = (TextView) itemView.findViewById(R.id.secondary_text);
-
-            ListView listView = (ListView) parent;
-            if (mInEditMode && listView.isItemChecked(position)){
-                itemView.setBackgroundColor(getResources().getColor(R.color.abs__holo_blue_light));
-                secondaryText.setTextColor(getResources().getColor(android.R.color.white));
+            if (mAccountsDbAdapter.isFavoriteAccount(accountUID)){
+                holder.favoriteStatus.setImageResource(R.drawable.ic_star_black_24dp);
             } else {
-                itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));
-                secondaryText.setTextColor(getResources().getColor(android.R.color.secondary_text_light_nodisable));
+                holder.favoriteStatus.setImageResource(R.drawable.ic_star_border_black_24dp);
             }
 
+            holder.favoriteStatus.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    boolean isFavoriteAccount = mAccountsDbAdapter.isFavoriteAccount(accountUID);
 
-            //increase the touch target area for the add new transaction button
+                    ContentValues contentValues = new ContentValues();
+                    contentValues.put(DatabaseSchema.AccountEntry.COLUMN_FAVORITE, !isFavoriteAccount);
+                    mAccountsDbAdapter.updateRecord(accountUID, contentValues);
 
-            final View addTransactionButton = itemView.findViewById(R.id.btn_new_transaction);
-            final View parentView = itemView;
-            parentView.post(new Runnable() {
+                    int drawableResource = !isFavoriteAccount ?
+                            R.drawable.ic_star_black_24dp : R.drawable.ic_star_border_black_24dp;
+                    holder.favoriteStatus.setImageResource(drawableResource);
+                }
+            });
+
+            holder.itemView.setOnClickListener(new View.OnClickListener() {
                 @Override
-                public void run() {
-                    if (isAdded()){ //may be run when fragment has been unbound from activity
-                        final android.graphics.Rect hitRect = new Rect();
-                        float extraPadding = getResources().getDimension(R.dimen.edge_padding);
-                        addTransactionButton.getHitRect(hitRect);
-                        hitRect.right   += extraPadding;
-                        hitRect.bottom  += extraPadding;
-                        hitRect.top     -= extraPadding;
-                        hitRect.left    -= extraPadding;
-                        parentView.setTouchDelegate(new TouchDelegate(hitRect, addTransactionButton));
-                    }
+                public void onClick(View v) {
+                    onListItemClick(accountUID);
                 }
             });
+        }
 
-            return itemView;
+        public class ViewHolder extends RecyclerView.ViewHolder implements PopupMenu.OnMenuItemClickListener{
+            TextView accountName;
+            TextView description;
+            TextView accountBalance;
+            ImageView createTransaction;
+            ImageView favoriteStatus;
+            ImageView optionsMenu;
+            View colorStripView;
+            long accoundId;
+
+            public ViewHolder(View itemView) {
+                super(itemView);
+                accountName = (TextView) itemView.findViewById(R.id.primary_text);
+                description = (TextView) itemView.findViewById(R.id.secondary_text);
+                accountBalance = (TextView) itemView.findViewById(R.id.account_balance);
+                favoriteStatus = (ImageView) itemView.findViewById(R.id.favorite_status);
+                optionsMenu = (ImageView) itemView.findViewById(R.id.options_menu);
+                createTransaction = (ImageView) itemView.findViewById(R.id.create_transaction);
+                colorStripView = itemView.findViewById(R.id.account_color_strip);
+
+                optionsMenu.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        PopupMenu popup = new PopupMenu(getActivity(), v);
+                        popup.setOnMenuItemClickListener(ViewHolder.this);
+                        MenuInflater inflater = popup.getMenuInflater();
+                        inflater.inflate(R.menu.account_context_menu, popup.getMenu());
+                        popup.show();
+                    }
+                });
+
+            }
+
+
+            @Override
+            public boolean onMenuItemClick(MenuItem item) {
+                switch (item.getItemId()){
+                    case R.id.context_menu_edit_accounts:
+                        openCreateOrEditActivity(accoundId);
+                        return true;
+
+                    case R.id.context_menu_delete:
+                        tryDeleteAccount(accoundId);
+                        return true;
+
+                    default:
+                        return false;
+                }
+            }
         }
     }
-
 }
diff --git a/app/src/main/res/drawable-hdpi/ic_add_black_24dp.png b/app/src/main/res/drawable-hdpi/ic_add_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..c04b523c482b77824608a836515e865579f8b00c
GIT binary patch
literal 124
zcmeAS@N?(olHy`uVBq!ia0vp^Dj>|k0wldT1B8K;v!{z=NCji^0d}{88U+a%3{LE)
zc(W3I@VD?TX6u!5iTdQ+%zl7P_JBaSLWcds4UNy(0^e=DSmGkkBjwV6s9vOpiQ(Iw
WlC8ByowtC-F?hQAxvX<aXaWFCx+M+(

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-hdpi/ic_more_vert_black_24dp.png b/app/src/main/res/drawable-hdpi/ic_more_vert_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..22acc550088d98f9d98ced517de75b5e8ead3c7c
GIT binary patch
literal 132
zcmeAS@N?(olHy`uVBq!ia0vp^Dj>|k0wldT1B5}8r;B4q1>@UGdwClSM3^70uIQ21
z47_&cJkx~*+Z%R2IKOxGVZM^fH+7^Mmwc{S?NKJ@tD@b{HffqWt7pJW9xm}`3bIR@
eOD6DrGLJi>8B(9~m^Tk-EQ6=3pUXO@geCy;;w$k0

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-hdpi/ic_star_black_24dp.png b/app/src/main/res/drawable-hdpi/ic_star_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..92a0f586223099f0d3ba629fbfcc44ef4890dec3
GIT binary patch
literal 369
zcmV-%0gnEOP)<h;3K|Lk000e1NJLTq001Na001Ni1ONa4O9@aD0003vNkl<ZcmeIy
zL5odc9LMp`oEa?0EX*C(0$YobGNLqZ;jT#CvNaaU3sByJjZ#L6cOhkAMHFFYBQiD9
z$>x%~aQ|*Pi>J&v=b3wE$LG8MEr0%P=cnz7#~$g<QDZ;#v?#P$x8DKRbhO}$5I&pN
z$rVv`Nhi-m)iWKO5lJg%wjq-4nNi;lku=g%YYwpDm}O}_2mS54tv_wss@n8kVqhd@
zXk-AXRhwd$eRb9jPWm9^_s$757CjZ2J#koreIAO8HY{j$TQoLtOQx&FqNcH-Y;(Se
znzqSzS~PSj|Jc?vS=;lWcArGjuW6C=QKsV}>4jD2yc9`&S%#vjw5|Y!>q=2|S(dv(
zn7HqV)RG4#LbxN#Tj8|}c5=}h;gt-FN;eeh%)6;{NUP;(ZTgn%+JC<RYO^6X!?R6W
P00000NkvXXu0mjfPcWyP

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-hdpi/ic_star_border_black_24dp.png b/app/src/main/res/drawable-hdpi/ic_star_border_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..cb31ce2f815e4203c6a0d5ab9810aa05d14f9283
GIT binary patch
literal 500
zcmV<Q0So?#P)<h;3K|Lk000e1NJLTq001Na001Ni1ONa4O9@aD0005INkl<ZNDb}5
zNr=q>00-c21_z>%WekO*bs{6mMG7g+4Q0tmBumImb46~FWEVM0C}|FsQe!D%;$(@q
zc+@nODf51M2gPf~{CRGCAOEy@=J_kmIqNSNr^gp#)vQg#9yJ>5wTM>+tH~-65i8W>
zmU!Z+xUL4XL~ON9M6*A3LUb8ngf4N^A8PVR98z&ud^FyGW?Evco%T8Dk`B*xizu6-
zVw#Bf?4`S|IBmaO)>&$%pS0>05fKp)am{z_A|fIpBD%Gz(&DX%vdd1`Ylk%!Yx3O$
z%dEHC0cTuQ7V*X$eVD9M#6`pW%1{?XJT^%`8nlbJt4V(vb%<!!;1`BCE#igg`ZCos
z5vL3>pf(X7EK+Tu_afR9v`&w>q1sK+W39sKd=Pt8+b`a$Q&_Wz<*K!cn4z%EqHLs!
z(T+Q2l!{TxVw1woi$|!pQAxx*8`PmwoK@IMaYTy_5xsgv+&0@$@k~JzMRe*F(V@j$
zcSL;kNW=t%tQHYbvQfQ?dYhC)M66WEVG(7=jrOB4PAZEysE~)^zWMsHzyonl0S!vF
qsMnuCwksKKK#dv=q{$fn{kCrli_lEC3K^aN0000<MNUMnLSTXs!QPDk

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_add_black_24dp.png b/app/src/main/res/drawable-mdpi/ic_add_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..23bf119211e02b139ad2e0961bc71662ce1caf1e
GIT binary patch
literal 86
zcmeAS@N?(olHy`uVBq!ia0vp^5+KaM0wlfaz7_*1Sx*<okP60Rhlaop@*M7_385|0
iL8};rdyXB}U|@KqV|@0?C+W99g$$mqelF{r5}E)JycU1}

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_more_vert_black_24dp.png b/app/src/main/res/drawable-mdpi/ic_more_vert_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..0e4f2f6ea0564fe9d6ebdb4bea0df48aced9de0f
GIT binary patch
literal 108
zcmeAS@N?(olHy`uVBq!ia0vp^5+KaM0wlfaz7_*1V^0^ykP60RiERoU4^0niv(+!U
z$~^Ty`=RMavMX4xeQ2uS{l}x<c&c{gv!fRSq<EJmaxpmnRGqNDTVNwlJA<dIpUXO@
GgeCwv3L^Xf

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_star_black_24dp.png b/app/src/main/res/drawable-mdpi/ic_star_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..a728afe60047efd900e7d4213faa7b5c22e9c875
GIT binary patch
literal 263
zcmV+i0r>ujP)<h;3K|Lk000e1NJLTq000;O000;W1ONa4N`Cco0002aNkl<Zcmd7L
zF)M^|9Ki9<6RUa*GFo)wb(4i%#xoc!q?DI%DYJ|Ui;cnJWk@NL#g0p|vAA6QJj10t
z{qNsn;`4n0Uw>wy>Q~O4(cG+o4>KCu6T+^BCOrw^!GuQE#HdwSrIsaKw_?<du0<`S
znx4La$TZN`^Q~|o<l9&HVaHHN_i0<gig%Id%`#~neNpRCTgIiRbs_6Hambh#iRO&8
zAygSUtQrbc){S*4gez^(aV>-sW8HhPsQ^&e^6HMX(vec#v}05LvoCpRlKN)&1ls@r
N002ovPDHLkV1jAvcYy!^

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_star_border_black_24dp.png b/app/src/main/res/drawable-mdpi/ic_star_border_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..b75384809f8060aa996872d02175dc6f30408230
GIT binary patch
literal 332
zcmV-S0ki&zP)<h;3K|Lk000e1NJLTq000;O000;W1ONa4N`Cco0003KNkl<Zcmd7J
z!Rw0w9Dwo9+i$m}M#*t4k^|Z<PRd2tg(OZixom&JQV!f!3PlcX9JxtSa*_)t4(?-<
z99WCCdGqxiY^~M%_B!!-&X0fQP}X00;6CN;GB>kRX;*}BSxFTiz03MwODX4suAXp4
zp_;u8JME3Hs#)K>cGeO5?2uTeZ)7f3-2gYms)ez>mBc{!<+=-wYpH^&mJ>RE#({)&
zJ*lAsHtjc*>cXbBsflCO9W^o4mZNFpr@E!Og^{KLk4$Y@s`&1qLZ3Vbr<?>Yj1|};
zT(#R1Aw1S_O=!r~5uTYz-O5V+@KiW2*F7P;bPzPX62e`%-uvvL#8TptFW$;gb6d@(
e?e5s-fA$;MJ6x;Jv?K-q0000<MNUMnLSTYV<(feN

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_add_black_24dp.png b/app/src/main/res/drawable-xhdpi/ic_add_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..3191d5283e981b9eecdcaa54feda419515ef656f
GIT binary patch
literal 108
zcmeAS@N?(olHy`uVBq!ia0vp^1|ZDA0wn)(8}a}tV^0^ykP61P7Z(aL7zi*O{Br+`
z`;vw;dk$=HXVkVR^_;bx1E`8&^BsGK4=F%~hW8~_)0*>!J6N0?fLsPoS3j3^P6<r_
Dr28I8

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_more_vert_black_24dp.png b/app/src/main/res/drawable-xhdpi/ic_more_vert_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..9f10aa2759a2e53beb129849c9b0e6ee5f7ae97b
GIT binary patch
literal 155
zcmeAS@N?(olHy`uVBq!ia0vp^1|ZDA0wn)(8}b0DBu^K|kP61PR}A@_6b0BGTJ|c&
z&2zArUdgs%qoJD@@9neO|NgtXV7^DW)MQ81qkHN%-79zXF}ZeKv~Tuphvz#4Z3DJ9
zo+<2n{rTU)UWQJm<&*zc>PM$^=S<X{q`S#=o5v;YT=!`*O}o}a0&QdPboFyt=akR{
E03-W4M*si-

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_star_black_24dp.png b/app/src/main/res/drawable-xhdpi/ic_star_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..c636ce8e81bedced667a12e42fae8037f7f932ae
GIT binary patch
literal 467
zcmV;^0WAKBP)<h;3K|Lk000e1NJLTq001xm001xu1ONa4{R=S+0004+Nkl<ZcmeIf
zJxEmn7y!`Y^M}YqB2lTar7Rkvf|e4Yp~a!FEnFG|p(Knbf^cjJ8v3DzvVx2pgysx_
z7HJ3!34{`Zz=jed(vYt=i1_p+_ulRu0?)DOzjLU(P>&2LP>Th>G%L(iAzV?AI-i9w
zqgElh#qyI1@mef@r2zZIs{7>bzF76HoNe<{tolQfTn&gd`{k(QqgZoFjofsJDo@C$
zq*=QTr}Y_h$A}qG<+KsE4eHaaL%U`r8|XD`%!FA>BI6~qCX5-@Yn>)zBBw7ksiMJ<
z$l*iv{%TPC<7;fJ$D+u1(HRMJ`Ytm3rb9w|O^cL2*&~HEZ$*mZTBOwIg-CeRRvFZ~
zB@(=;B%>oD!GkipC=%?K*{DeHxr}Oj6$yTk(Qc9OE}5Ja3HQk4fmruld8~U+CR3u~
zoO5c+&zln!CuPtoDn8cAvNlgd#qCl%C00&2YOQ15i<MncyCIaDcR`(M>J69|%3YV*
zxDcM&VIw;|6T%xQHTrE*rzDR1V8Irt9Ck^Aq#9gyKtVQb`U4ZVOh=;|ezgDq002ov
JPDHLkV1hje(8d4&

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_star_border_black_24dp.png b/app/src/main/res/drawable-xhdpi/ic_star_border_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..4f978e739be0ed5d39f670f7c0909bc82478b8b2
GIT binary patch
literal 674
zcmV;T0$u%yP)<h;3K|Lk000e1NJLTq001xm001xu1ONa4{R=S+0007MNkl<ZcmeIy
zO^B6c6u|M{d^iovW=1p}3L>K*Y%mIn+Eh%mnZ6d51%gpT2$9ufgb|VCqFT5UYl>n@
zXrjQu+BS$pLAD4+RB{Z{2(^WxQ)=qzS)9ei?p*GDnY#$)_urngdf(?*@V|3MsjWUW
zu8o#C@0_c(%^RZhx;E){Oq7o5))tS8Y_+!7BeLDvV3nw8$h`Ydln#}m^nrP{*k7Xb
zl2K8bHDF$C6s5EJ4VV?BQS+$NucGum7!#!#o#xFWwVzggZV#%c(^4zlXN~7=w%u2b
zUh#A8$p<%S%oZCwY1oiux-_ufgelWbxFqWK7-@~D+a)LMGiAbh|Iu$sH0YRa(jvc$
z27Rkv9X-Z{%vp#1VA7bkz2FH$YTatBm%Za--`MLn=Y-6-9&_59Ll-@#70<Ysn{UzB
zQ!eD_yE-(Z!<O8*V4WrmJCzF)dePWbcI5Oa!<ux9Bf0dQB^p_5cTOI$QVRzCl#9Q(
z(OgzIkW+gNYEhrBbNNrVsb`hrIk8Kh3c73)N=DT4uu!s1mx}HdrOO7?v&3alx=UrR
ziqf>X>=&h1R5mF}+a>gtl04jYs;I+BQCcf`$YC=^B<n=!go<t!O0EYh>=M~d*MS>^
zlABcWY+g}%z3FdJ)2vN;@P{Zpt&&gjT#T3z+0UiO4!GZ!qV$nU4&^h8?6eKKN-sJs
zvg4w3PzB3HZ9cPHGH8dW%~CB}Eo7$M<4X71CuAPgvaPv##;9)fEV9v=oO(~oeiWt8
zU89j}eIZKUYf+zn>^H0#4>;(&UM;!PYkD-R$0oOHlLZU@1-^1}ixkfOf&c&j07*qo
IM6N<$f}P_@hX4Qo

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_add_black_24dp.png b/app/src/main/res/drawable-xxhdpi/ic_add_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..a84106b01fd4402e5d15b08c496a75b76e811999
GIT binary patch
literal 114
zcmeAS@N?(olHy`uVBq!ia0vp^9w5xf3?%cF6<L53TYyi9E06|)rRh7*11ZLmAirP+
zhi5m^fE+1L7srqa#$<^-3-VTMl=$E5!2EK}!squLxf%4ijTX9=94iEA^>p=fS?83{
F1OO~S9V-9;

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_more_vert_black_24dp.png b/app/src/main/res/drawable-xxhdpi/ic_more_vert_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..94d5ab98c6d3b3548536f04a2d635fb5c4a05b88
GIT binary patch
literal 205
zcmeAS@N?(olHy`uVBq!ia0vp^9w5xY0wn)GsXhawrg*wIhEy=Vy=KqV>>$DV@#Ph3
zmm-(IJxlAmHdKggydBZHA?LrN(f;zraK2yFla}<&ocsFTF&FO*>g+$WJLfsbvhR#o
zq<F?>U5?6`INL2k&sND<*?!p=%CFlpb5%Rrp)D#!8^w7WtAYxjJ8qaZaq8!Lha3*C
xpO9i0)g!jJUB|8aV$u`{=V%64OvRJ&URzP%pP$_?yn*gx@O1TaS?83{1OO~yQ~m$|

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_star_black_24dp.png b/app/src/main/res/drawable-xxhdpi/ic_star_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..54d306599a5b5a269a3bd46a7636d5277ee37845
GIT binary patch
literal 668
zcmV;N0%QG&P)<h;3K|Lk000e1NJLTq002k;002k`1ONa4|Kxkj0007GNkl<ZcmeI$
z%S%*Y7=ZETOk+AW4Has%C@7dNQi>L>hS~%Lf)(0@qL2a?)n8C8f?8A<)G~?|wF_Da
zkx5u&xM?Rr(M8BKvKytAw|sM9a?mp$<2moS1n2i`X8Cf?4D)^;u~_Usv306Qxx;ND
zWI3aZP>zBG8k$*1G0j9ok`D+%FG(U{KQdh-k?<6m?lBQijo8{m=x!pmt`o9l{6cIE
zvn1S~{c%#*m2!*_CFntB^@aqY*^M|<M`+p+haM1;4TxittPST&eF|q5Cka7@K_pK<
zNC*Ffnn)XlJxahVULl5F5U3RU5OeIM1Q#q!l9W*~t8ywxQ<xzJru)o*?em{P2inOR
zDr_yqLZ9%>J|ORCBad48k$~%`7K2rEBLUXUO3cX6js(<0G8CYQTSx%iAW6Z_BEB}s
zY3AuLqliz9a1a-^@fGo*FXV7(9d8lkUX#Uxa=H-3o>7KJDefUk-K7Kt30e?^E@7eO
z1QUpd#%V@b9YcuAezFT6)bJ5;Q6JU#q!V#b2R<og1aZ+YMgA=LTPVhjQfmAeD2H3Q
z2o9vr^6*#t2_IA<9?I&!vK(IIqBoE_^JesWDlzmDWh)Rvt*oA^6){wXCc|02hkE|0
zrw7T?9#mb+v#g&dg<XmZc@76HsCw>rmzc##mNsNgT_{S=S<l|nfJr00h&@J0p=JkS
zYmAF5!VJ<}W(={l9X02WnI5s8LRHd%%ydToKDy7viSy9Ro_QZ73m8Ng=L(B)Bg0iD
z5WbT@#b$&jY{ZKyIuWW+aeyOuXVF9h^A(H5VzIwZY&N^6)O&jX0000<MNUMnLSTZ=
CHy#53

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_star_border_black_24dp.png b/app/src/main/res/drawable-xxhdpi/ic_star_border_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..f10d4274dd8d8e2b2f7f3f91c176989e298a48b2
GIT binary patch
literal 971
zcmV;+12p`JP)<h;3K|Lk000e1NJLTq002k;002k`1ONa4|Kxkj000A$Nkl<ZcmeI$
zTZmOv9Khjk#_OaGY2=vEl!awhRtln2f@Mjh_Mld1g%4t+5s`GmOO{a<-ANxxgsdLI
zE|f-zR7^^l3Oz`u)HIZr2+^YPGNXg5m%|?pbC|=K+2fhue7~2o51Uz>&01^kJ^m*u
zDk{bsuSa>$dOb*;RxO6=F_uY^C3=Y74oH&ydg~GHl5)+`BW#s&HBf%nN+Q=NyS0+Y
z+sbT+6OzbrgO$}|lKd7cqiRi({2Em&n>(dk2ONyg)0E8?Dc3T~<MU=^a;223Rh>Gm
zxuY{KR~D<KT<?Pq;`mKvP^($WH33YF<9`iu);%1<@04R#e7DG1R%KrdK2MH$@!cM0
zRgKv(^kMzw=<l$&^BW{{y$v(Q6mvY{d24-cyGG5D$O{5iNg^lwZih|QS>;jpy3KWl
zm-5s!)q|e4+6E2wIO2>{q&D>e>a|HlI^(FlzVneaR#<4N!Z6k$siZ!Uk58qNI%KR4
z)Y~nU(9QC3i&R3pU8IOwTROblN9@sHgSRX<Um=Tf^X*4Xj!PZ1MXloWu}%_cu`DKJ
zAEg@LQWMND-!o21BI`=|YfB}Oo$7SedA3R-OO<G@Rw-&ST31|VpA@y4t8^wgB1M0j
ztg|LMEJa66(n(inl%iAa*BP_&=FV?M>4Nk9Ac?F{s>k!T*X@Stq8cAdBJY;4HhNi;
zzm2Mqfod;HBHuVyaSZf@B=V|inOUe!ihg#nVut%kirPFRV|O@~x2YBLjuag;UG`k>
z&lutX#Vm+(|1wTD*%pIbrI^ui?)SP$KP|DfRVk(_w$)bsb&DIMT$>cf#yI~b-QtND
z;K>Zm&p`ZQH_BIIrDxR?xuO}1IiW>A0W&n^?o!hP^mS6qIhl)9W1C=vjgrV`E)i@M
zt5W7-U-4qBy5(^VA}1`-x7|z80-0Mc<(dv|_p4Mm``ikqiCePFHO6E95cTa|c22gt
zRv)_1;CS?Cl(7q9pkF-I?p<P|5iy%0%@*4mN5f=lwp2JxX5_E8!kH;kZ%74du~LnI
z8qaB!3iO&x?ULH{m5~Y=X|vR>9Wpdfo0QidX6nc+`=z{2J4a@wNFt}KGC(l{z2uZ6
zGFfI;NYU3um9V>iD@9AQ|9|vB_bAnzc+UJ%MtW(Moc4-AI-}O>+9dy|mWgqa23PBf
tF}6v@$i&_5({)wmnW>_pqN1Wy{{hTqL2tK~H?sf$002ovPDHLkV1ioS*<Ant

literal 0
HcmV?d00001

diff --git a/app/src/main/res/layout/cardview_account.xml b/app/src/main/res/layout/cardview_account.xml
new file mode 100644
index 00000000..1113d0c7
--- /dev/null
+++ b/app/src/main/res/layout/cardview_account.xml
@@ -0,0 +1,104 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:cardview="http://schemas.android.com/apk/res-auto"
+    cardview:cardCornerRadius="4dp"
+    cardview:cardUseCompatPadding="true"
+    cardview:cardPreventCornerOverlap="false"
+    android:foreground="?selectableItemBackground"
+    android:focusable="true"
+    android:clickable="true"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:minHeight="80dp">
+
+        <View android:id="@+id/account_color_strip"
+            android:layout_width="@dimen/strip_width"
+            android:layout_height="match_parent"
+            android:layout_alignParentLeft="true"
+            android:layout_alignParentStart="true"/>
+
+        <include
+            layout="@layout/list_item_2_lines"
+            android:paddingTop="6dp"
+            android:layout_height="wrap_content"
+            android:layout_width="wrap_content"
+            android:layout_toRightOf="@id/account_color_strip"
+            android:layout_marginTop="@dimen/edge_padding"
+            android:layout_marginLeft="@dimen/edge_padding"
+            android:layout_marginRight="@dimen/edge_padding"/>
+
+        <ImageView
+            android:id="@+id/options_menu"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:layout_alignParentBottom="true"
+            android:layout_alignParentRight="true"
+            android:background="?attr/selectableItemBackgroundBorderless"
+            android:paddingTop="20dp"
+            android:paddingBottom="4dp"
+            android:paddingLeft="24dp"
+            android:scaleType="centerInside"
+            android:src="@drawable/ic_more_vert_black_24dp"
+            tools:ignore="ContentDescription" />
+
+        <ImageView
+            android:id="@+id/create_transaction"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:layout_alignParentBottom="true"
+            android:layout_toLeftOf="@id/options_menu"
+            android:background="?attr/selectableItemBackgroundBorderless"
+            android:paddingTop="20dp"
+            android:paddingBottom="4dp"
+            android:paddingLeft="24dp"
+            android:scaleType="centerInside"
+            android:src="@drawable/ic_add_black_24dp"
+            tools:ignore="ContentDescription" />
+
+        <ImageView
+            android:id="@+id/favorite_status"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:layout_alignParentRight="true"
+            android:background="?attr/selectableItemBackgroundBorderless"
+            android:paddingTop="6dp"
+            android:paddingRight="6dp"
+            android:paddingLeft="22dp"
+            android:paddingBottom="22dp"
+            android:src="@drawable/ic_star_border_black_24dp"
+            tools:ignore="ContentDescription" />
+
+        <TextView
+            android:id="@+id/account_balance"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:singleLine="true"
+            android:layout_alignParentBottom="true"
+            android:paddingBottom="4dp"
+            android:textSize="18sp"
+            android:layout_alignBottom="@id/options_menu"
+            android:layout_toLeftOf="@id/create_transaction"
+            android:layout_marginRight="@dimen/edge_padding"/>
+    </RelativeLayout>
+
+</android.support.v7.widget.CardView>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_accounts_list.xml b/app/src/main/res/layout/fragment_accounts_list.xml
index fb29ae72..84fb5e11 100644
--- a/app/src/main/res/layout/fragment_accounts_list.xml
+++ b/app/src/main/res/layout/fragment_accounts_list.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <!--
- Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 - 2015 Ngewi Fet <ngewif@gmail.com>
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
@@ -25,14 +25,13 @@
     <include layout="@layout/transactions_sum_bar" 
         android:id="@+id/transactions_sum_bar" 
         android:visibility="gone" />
-    
-    <ListView android:id="@id/android:list"        
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"	
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/account_recycler_view"
+        android:scrollbars="vertical"
         android:layout_above="@id/transactions_sum_bar"
-        android:listSelector="@drawable/abc_list_selector_holo_light"
-        android:drawSelectorOnTop="false"
-        />
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"/>
 
     <android.support.design.widget.FloatingActionButton
         android:id="@+id/fab_create_account"
@@ -47,23 +46,4 @@
         app:elevation="10dp"
         android:src="@drawable/ic_add_white_48dp"/>
 
-	<LinearLayout
-        android:id="@id/android:empty"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_above="@id/transactions_sum_bar"
-        android:gravity="center"
-        android:orientation="vertical">
-		<TextView 
-		    android:layout_width="match_parent"
-		    android:layout_height="wrap_content"
-		    android:gravity="center"
-		    android:text="@string/label_no_accounts"		    
-		    style="@style/ListItem"/>
-        <Button
-            android:id="@+id/add_account_button"
-            style="@style/ButtonStyle"
-            android:onClick="onNewAccountClick"
-            android:text="@string/label_create_account" />
-    </LinearLayout>
 </RelativeLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/list_item_account.xml b/app/src/main/res/layout/list_item_account.xml
deleted file mode 100644
index 940772cb..00000000
--- a/app/src/main/res/layout/list_item_account.xml
+++ /dev/null
@@ -1,65 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
- 
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
- 
-    http://www.apache.org/licenses/LICENSE-2.0
- 
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<org.gnucash.android.ui.util.CheckableLinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:layout_width="match_parent"
-              android:layout_height="?android:attr/listPreferredItemHeight"
-              android:gravity="center_vertical"
-              android:paddingLeft="5dp"
-              android:paddingRight="@dimen/edge_padding"
-              android:orientation="horizontal"
-              style="@style/ListItem">
-
-    <View   android:id="@+id/account_color_strip"
-            android:layout_width="@dimen/strip_width"
-            android:layout_height="match_parent" />
-    <include
-            layout="@layout/list_item_2_lines"
-            android:layout_height="wrap_content"
-            android:layout_width="0dp"
-            android:layout_weight="1"
-            android:layout_marginLeft="@dimen/edge_padding"
-            android:layout_marginRight="@dimen/edge_padding"/>
-
-    <TextView
-            android:id="@+id/transactions_summary"
-            android:layout_width="wrap_content"
-            android:layout_height="match_parent"
-            android:singleLine="true"
-            style="@style/ListItemText"
-            android:layout_marginRight="@dimen/edge_padding"/>
-
-    <View
-            android:id="@+id/vertical_line"
-            android:layout_width="1dp"
-            android:layout_height="40dp"
-            android:background="@android:color/darker_gray"
-            android:layout_marginRight="10dp"
-            />
-
-    <ImageButton
-            android:id="@+id/btn_new_transaction"
-            android:layout_width="wrap_content"
-            android:layout_height="match_parent"
-            android:src="@drawable/content_new_holo_light"
-            style="@style/ImageButton.Transparent"
-            android:padding="2dp"
-            android:clickable="true"
-            android:focusable="false"
-            android:contentDescription="@string/description_add_transaction_icon"/>
-
-</org.gnucash.android.ui.util.CheckableLinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/menu/account_context_menu.xml b/app/src/main/res/menu/account_context_menu.xml
index bff2682f..0c746e37 100644
--- a/app/src/main/res/menu/account_context_menu.xml
+++ b/app/src/main/res/menu/account_context_menu.xml
@@ -17,10 +17,6 @@
 
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
       xmlns:app="http://schemas.android.com/apk/res-auto">
-    <item android:id="@+id/menu_favorite_account"
-        android:icon="@drawable/ic_star_border_white_24dp"
-        android:title="@string/menu_title_favorite"
-        app:showAsAction="ifRoom" />
 
     <item android:id="@+id/context_menu_edit_accounts"
           android:icon="@drawable/content_edit_holo_dark"
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index daf52a06..32b65f47 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -40,7 +40,7 @@
     <string name="label_credit">CREDIT</string>
     <string name="title_accounts">Accounts</string>
     <string name="title_transactions">Transactions</string>
-    <string name="menu_delete">DELETE</string>
+    <string name="menu_delete">Delete</string>
     <string name="alert_dialog_ok_delete">Delete</string>
     <string name="alert_dialog_cancel">Cancel</string>
     <string name="toast_account_deleted">Account deleted</string>
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
index 3eff3055..47275157 100644
--- a/app/src/main/res/values/styles.xml
+++ b/app/src/main/res/values/styles.xml
@@ -28,7 +28,7 @@
     </style>
     
     <style name="ListItemText">
-        <item name="android:textAppearance">?android:attr/textAppearanceLarge</item>
+        <item name="android:textSize">20sp</item>
         <item name="android:textColor">@android:color/black</item>
         <item name="android:gravity">center_vertical</item>
     </style>
