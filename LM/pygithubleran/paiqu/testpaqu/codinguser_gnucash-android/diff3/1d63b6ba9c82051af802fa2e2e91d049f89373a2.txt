From 1d63b6ba9c82051af802fa2e2e91d049f89373a2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <alexandre.magaz@gmail.com>
Date: Thu, 13 Apr 2017 01:12:35 +0200
Subject: [PATCH] Convert getCurrenciesInUse into getCommoditiesInUse

---
 .../android/db/adapter/AccountsDbAdapter.java        | 20 +++++++++++---------
 .../gnucash/android/export/xml/GncXmlExporter.java   | 18 +++++++++---------
 .../ui/settings/TransactionsPreferenceFragment.java  |  8 +++++---
 3 files changed, 25 insertions(+), 21 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index ad41f097..2ffacd07 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -1263,25 +1263,27 @@ public static int getActiveAccountColorResource(@NonNull String accountUID) {
     }
 
     /**
-     * Returns the list of currencies in use in the database.
-     * <p>This is not the same as the list of all available commodities</p>
-     * @return List of currencies in use
+     * Returns the list of commodities in use in the database.
+     *
+     * <p>This is not the same as the list of all available commodities.</p>
+     *
+     * @return List of commodities in use
      */
-    public List<Currency> getCurrenciesInUse(){
+    public List<Commodity> getCommoditiesInUse() {
         Cursor cursor = mDb.query(true, AccountEntry.TABLE_NAME, new String[]{AccountEntry.COLUMN_CURRENCY},
                 null, null, null, null, null, null);
-        List<Currency> currencyList = new ArrayList<>();
+        List<Commodity> commodityList = new ArrayList<>();
         try {
             while (cursor.moveToNext()) {
-                String currencyCode = cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_CURRENCY));
-                currencyList.add(Currency.getInstance(currencyCode));
+                String currencyCode =
+                    cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_CURRENCY));
+                commodityList.add(mCommoditiesDbAdapter.getCommodity(currencyCode));
             }
         } finally {
             cursor.close();
         }
-        return currencyList;
+        return commodityList;
     }
-
     /**
 	 * Deletes all accounts, transactions (and their splits) from the database.
      * Basically empties all 3 tables, so use with care ;)
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index c9642027..49d37d85 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -617,15 +617,15 @@ private void serializeDate(XmlSerializer xmlSerializer, String tag, long timeMil
         xmlSerializer.endTag(null, tag);
     }
 
-    private void exportCommodities(XmlSerializer xmlSerializer, List<Currency> currencies) throws IOException {
-        for (Currency currency : currencies) {
+    private void exportCommodities(XmlSerializer xmlSerializer, List<Commodity> commodities) throws IOException {
+        for (Commodity commodity : commodities) {
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COMMODITY);
             xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_VERSION, GncXmlHelper.BOOK_VERSION);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COMMODITY_SPACE);
             xmlSerializer.text("ISO4217");
             xmlSerializer.endTag(null, GncXmlHelper.TAG_COMMODITY_SPACE);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COMMODITY_ID);
-            xmlSerializer.text(currency.getCurrencyCode());
+            xmlSerializer.text(commodity.getCurrencyCode());
             xmlSerializer.endTag(null, GncXmlHelper.TAG_COMMODITY_ID);
             xmlSerializer.endTag(null, GncXmlHelper.TAG_COMMODITY);
         }
@@ -836,15 +836,15 @@ public void generateExport(Writer writer) throws ExporterException {
             xmlSerializer.text(BaseModel.generateUID());
             xmlSerializer.endTag(null, GncXmlHelper.TAG_BOOK_ID);
             //commodity count
-            List<Currency> currencies = mAccountsDbAdapter.getCurrenciesInUse();
-            for (int i = 0; i < currencies.size(); i++) {
-                if (currencies.get(i).getCurrencyCode().equals("XXX")) {
-                    currencies.remove(i);
+            List<Commodity> commodities = mAccountsDbAdapter.getCommoditiesInUse();
+            for (int i = 0; i < commodities.size(); i++) {
+                if (commodities.get(i).getCurrencyCode().equals("XXX")) {
+                    commodities.remove(i);
                 }
             }
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COUNT_DATA);
             xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_CD_TYPE, "commodity");
-            xmlSerializer.text(currencies.size() + "");
+            xmlSerializer.text(commodities.size() + "");
             xmlSerializer.endTag(null, GncXmlHelper.TAG_COUNT_DATA);
             //account count
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COUNT_DATA);
@@ -865,7 +865,7 @@ public void generateExport(Writer writer) throws ExporterException {
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_COUNT_DATA);
             }
             // export the commodities used in the DB
-            exportCommodities(xmlSerializer, currencies);
+            exportCommodities(xmlSerializer, commodities);
             // prices
             if (priceCount > 0) {
                 exportPrices(xmlSerializer);
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
index b047430c..a388e263 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
@@ -28,6 +28,8 @@
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.model.Commodity;
 import org.gnucash.android.ui.settings.dialog.DeleteAllTransactionsConfirmationDialog;
 
 import java.util.Currency;
@@ -122,9 +124,9 @@ public void showDeleteTransactionsDialog(){
 	private void setImbalanceAccountsHidden(boolean useDoubleEntry) {
 		String isHidden = useDoubleEntry ? "0" : "1";
 		AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
-		List<Currency> currencies = accountsDbAdapter.getCurrenciesInUse();
-		for (Currency currency : currencies) {
-			String uid = accountsDbAdapter.getImbalanceAccountUID(currency);
+        List<Commodity> commodities = accountsDbAdapter.getCommoditiesInUse();
+		for (Commodity commodity : commodities) {
+			String uid = accountsDbAdapter.getImbalanceAccountUID(commodity);
 			if (uid != null){
 				accountsDbAdapter.updateRecord(uid, DatabaseSchema.AccountEntry.COLUMN_HIDDEN, isHidden);
 			}
