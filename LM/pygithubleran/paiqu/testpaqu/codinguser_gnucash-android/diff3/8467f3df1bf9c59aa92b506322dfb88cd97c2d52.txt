From 8467f3df1bf9c59aa92b506322dfb88cd97c2d52 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 3 Sep 2015 00:34:07 +0200
Subject: [PATCH] OFX export will now ignore imbalance accounts when in single
 entry transaction mode

Display full details of split transactions in transaction detail view
Fixed: transaction activity orientation change does not layout the list items in grid
Fixed: account balances not shown in black for 0 amounts
Code cleanup
---
 app/src/main/AndroidManifest.xml                   |  4 +-
 .../org/gnucash/android/db/AccountsDbAdapter.java  | 43 +---------------
 .../gnucash/android/export/ofx/OfxExporter.java    |  8 ++-
 .../org/gnucash/android/model/Transaction.java     |  2 +-
 .../ui/transaction/TransactionDetailActivity.java  | 60 ++++++++++++++++++++--
 .../android/ui/util/AccountBalanceTask.java        |  6 +--
 .../res/layout/activity_transaction_detail.xml     | 45 +++++++++++++---
 app/src/main/res/layout/item_split_amount_info.xml | 59 +++++++++++++++++++++
 app/src/main/res/values/styles.xml                 |  2 +-
 9 files changed, 166 insertions(+), 63 deletions(-)
 create mode 100644 app/src/main/res/layout/item_split_amount_info.xml

diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 109388e1..be212963 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -87,9 +87,7 @@
         <activity android:name=".ui.transaction.ScheduledActionsActivity" />
         <activity android:name=".ui.passcode.PasscodePreferenceActivity"
             android:theme="@style/Theme.GnucashTheme" />
-        <activity android:name=".ui.transaction.TransactionsActivity"
-            android:configChanges="orientation|screenSize">
-        </activity>
+        <activity android:name=".ui.transaction.TransactionsActivity" />
         <activity android:name=".ui.widget.WidgetConfigurationActivity"
             android:label="@string/label_widget_configuration"
             android:theme="@style/Dialog.WidgetConfiguration"
diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index 5de9e962..293a7b9e 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -456,24 +456,6 @@ public AccountType getAccountType(long accountId){
     }
 
     /**
-	 * Returns the name of the account with id <code>accountID</code>
-	 * @param accountID Database ID of the account record
-	 * @return Name of the account 
-	 */
-    public String getName(long accountID) {
-		Cursor c = fetchRecord(accountID);
-        try {
-            if (c.moveToFirst()) {
-                return c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_NAME));
-            } else {
-                throw new IllegalArgumentException("account " + accountID + " does not exist");
-            }
-        } finally {
-            c.close();
-        }
-	}
-
-    /**
      * Returns a list of all account entries in the system (includes root account)
      * No transactions are loaded, just the accounts
      * @return List of {@link Account}s in the database
@@ -983,19 +965,7 @@ public String getCurrencyCode(String uid){
      * @see #getFullyQualifiedAccountName(String)
      */
     public String getAccountName(String accountUID){
-        Cursor cursor = mDb.query(AccountEntry.TABLE_NAME,
-                new String[]{AccountEntry.COLUMN_NAME},
-                AccountEntry.COLUMN_UID + " = ?",
-                new String[]{accountUID}, null, null, null);
-        try {
-            if (cursor.moveToNext()) {
-                return cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_NAME));
-            } else {
-                throw new IllegalArgumentException("Failed to retrieve account name for account: " + accountUID);
-            }
-        } finally {
-            cursor.close();
-        }
+        return getAttribute(accountUID, AccountEntry.COLUMN_NAME);
     }
 
     /**
@@ -1062,15 +1032,6 @@ public String getAccountFullName(String accountUID) {
         throw new IllegalArgumentException("account UID: " + accountUID + " does not exist");
     }
 
-    /**
-     * Overloaded convenience method.
-     * Simply resolves the account UID and calls {@link #getFullyQualifiedAccountName(String)}
-     * @param accountId Database record ID of account
-     * @return Fully qualified (with parent hierarchy) account name
-     */
-    public String getFullyQualifiedAccountName(long accountId){
-        return getFullyQualifiedAccountName(getUID(accountId));
-    }
 
     /**
      * Returns <code>true</code> if the account with unique ID <code>accountUID</code> is a placeholder account.
@@ -1122,7 +1083,7 @@ public boolean isFavoriteAccount(String accountUID){
                     continue;
 
                 Transaction transaction = new Transaction(GnuCashApplication.getAppContext().getString(R.string.account_name_opening_balances));
-                transaction.setNote(getName(id));
+                transaction.setNote(getAccountName(accountUID));
                 transaction.setCurrencyCode(currencyCode);
                 TransactionType transactionType = Transaction.getTypeForBalance(getAccountType(accountUID),
                         balance.isNegative());
diff --git a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
index 8a8a1e07..1f46581d 100644
--- a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
@@ -23,6 +23,7 @@
 import com.crashlytics.android.Crashlytics;
 
 import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
@@ -90,7 +91,12 @@ private void generateOfx(Document doc, Element parent){
 		for (Account account : mAccountsList) {		
 			if (account.getTransactionCount() == 0)
 				continue; 
-			
+
+            //do not export imbalance accounts for OFX transactions and double-entry disabled
+            if (!GnuCashApplication.isDoubleEntryEnabled() && account.getName().contains(mContext.getString(R.string.imbalance_account_name)))
+                continue;
+
+
 			//add account details (transactions) to the XML document			
 			account.toOfx(doc, statementTransactionResponse, mParameters.shouldExportAllTransactions());
 			
diff --git a/app/src/main/java/org/gnucash/android/model/Transaction.java b/app/src/main/java/org/gnucash/android/model/Transaction.java
index 4b800aff..bacc51b8 100644
--- a/app/src/main/java/org/gnucash/android/model/Transaction.java
+++ b/app/src/main/java/org/gnucash/android/model/Transaction.java
@@ -219,7 +219,7 @@ public Split getAutoBalanceSplit(){
      * @return List of {@link org.gnucash.android.model.Split}s
      */
     public List<Split> getSplits(String accountUID){
-        List<Split> splits = new ArrayList<Split>();
+        List<Split> splits = new ArrayList<>();
         for (Split split : mSplitList) {
             if (split.getAccountUID().equals(accountUID)){
                 splits.add(split);
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
index ecac9e20..bf33040e 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
@@ -8,8 +8,12 @@
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
+import android.view.Gravity;
+import android.view.LayoutInflater;
 import android.view.MenuItem;
 import android.view.View;
+import android.widget.TableLayout;
+import android.widget.TableRow;
 import android.widget.TextView;
 
 import org.gnucash.android.R;
@@ -21,6 +25,7 @@
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
+import org.gnucash.android.model.TransactionType;
 import org.gnucash.android.ui.FormActivity;
 import org.gnucash.android.ui.UxArgument;
 
@@ -45,6 +50,17 @@
     @Bind(R.id.trn_recurrence) TextView mRecurrence;
     @Bind(R.id.trn_notes) TextView mNotes;
     @Bind(R.id.toolbar) Toolbar mToolBar;
+    @Bind(R.id.transaction_account) TextView mTransactionAccount;
+
+    @Bind(R.id.fragment_transaction_details)
+    TableLayout mDetailTableLayout;
+
+    @Bind(R.id.row_amount)
+    TableRow mRowSplitAmount;
+
+    @Bind(R.id.row_transfer_account)
+    TableRow mRowTransferAccount;
+
     private String mTransactionUID;
     private String mAccountUID;
 
@@ -74,7 +90,6 @@ protected void onCreate(Bundle savedInstanceState) {
         actionBar.setHomeAsUpIndicator(R.drawable.ic_close_white_24dp);
         actionBar.setDisplayShowTitleEnabled(false);
 
-
         bindViews();
 
         int themeColor = AccountsDbAdapter.getActiveAccountColorResource(mAccountUID);
@@ -85,6 +100,24 @@ protected void onCreate(Bundle savedInstanceState) {
 
     }
 
+    class SplitAmountViewHolder {
+        @Bind(R.id.split_account_name) TextView accountName;
+        @Bind(R.id.split_debit) TextView splitDebit;
+        @Bind(R.id.split_credit) TextView splitCredit;
+
+        View itemView;
+
+        public SplitAmountViewHolder(View view, Split split){
+            itemView = view;
+            ButterKnife.bind(this, view);
+
+            AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
+            accountName.setText(accountsDbAdapter.getAccountName(split.getAccountUID()));
+            TextView balanceView = split.getType() == TransactionType.DEBIT ? splitDebit : splitCredit;
+            TransactionsActivity.displayBalance(balanceView, split.getQuantity());
+        }
+    }
+
     /**
      * Reads the transaction information from the database and binds it to the views
      */
@@ -94,9 +127,8 @@ private void bindViews(){
 
         mTransactionDescription.setText(transaction.getDescription());
         Money balance = transaction.getBalance(mAccountUID);
-        mTransactionAmount.setText(balance.formattedString());
-        int color = balance.isNegative() ? R.color.debit_red : R.color.credit_green;
-        mTransactionAmount.setTextColor(getResources().getColor(color));
+        TransactionsActivity.displayBalance(mTransactionAmount, balance);
+        mTransactionAccount.setText("in " + AccountsDbAdapter.getInstance().getAccountFullName(mAccountUID));
 
         if (!GnuCashApplication.isDoubleEntryEnabled()){
             findViewById(R.id.row_transfer_account).setVisibility(View.GONE);
@@ -114,7 +146,25 @@ private void bindViews(){
                     }
                 }
             } else {
-                mTransferAccount.setText(transaction.getSplits().size() + " splits");
+                mRowSplitAmount.setVisibility(View.GONE);
+                mRowTransferAccount.setVisibility(View.GONE);
+                LayoutInflater inflater = LayoutInflater.from(this);
+                int index = 0;
+                for (Split split : transaction.getSplits()) {
+                    View view = inflater.inflate(R.layout.item_split_amount_info, mDetailTableLayout, false);
+                    SplitAmountViewHolder viewHolder = new SplitAmountViewHolder(view, split);
+                    mDetailTableLayout.addView(view, index++);
+                }
+
+                View view = inflater.inflate(R.layout.item_split_amount_info, mDetailTableLayout, false);
+                Money accountBalance = AccountsDbAdapter.getInstance().getAccountBalance(mAccountUID, -1, transaction.getTimeMillis());
+                Split split = new Split(accountBalance, mAccountUID);
+                new SplitAmountViewHolder(view, split);
+                TextView runningBalanceLabel = (TextView) view.findViewById(R.id.split_account_name);
+                runningBalanceLabel.setText("Running balance");
+                runningBalanceLabel.setTextSize(16);
+                runningBalanceLabel.setGravity(Gravity.RIGHT);
+                mDetailTableLayout.addView(view, index);
             }
         }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java b/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
index 35e71936..9dbcb6a5 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
@@ -28,6 +28,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.ui.transaction.TransactionsActivity;
 
 import java.lang.ref.WeakReference;
 
@@ -71,10 +72,7 @@ protected void onPostExecute(Money balance) {
             final Context context = GnuCashApplication.getAppContext();
             final TextView balanceTextView = accountBalanceTextViewReference.get();
             if (balanceTextView != null){
-                balanceTextView.setText(balance.formattedString());
-                int fontColor = balance.isNegative() ? context.getResources().getColor(R.color.debit_red) :
-                        context.getResources().getColor(R.color.credit_green);
-                balanceTextView.setTextColor(fontColor);
+                TransactionsActivity.displayBalance(balanceTextView, balance);
             }
         }
     }
diff --git a/app/src/main/res/layout/activity_transaction_detail.xml b/app/src/main/res/layout/activity_transaction_detail.xml
index 905b1dc4..bfc10e70 100644
--- a/app/src/main/res/layout/activity_transaction_detail.xml
+++ b/app/src/main/res/layout/activity_transaction_detail.xml
@@ -1,4 +1,19 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
 <android.support.design.widget.CoordinatorLayout
     xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
@@ -31,14 +46,29 @@
             android:gravity="bottom"
             android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
             app:popupTheme="@style/ThemeOverlay.AppCompat.Light" >
-            <TextView android:id="@+id/trn_description"
+            <LinearLayout
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                tools:text="Transaction description which can be rather long"
-                android:gravity="bottom"
-                android:maxLines="3"
-                android:paddingBottom="20dp"
-                android:textAppearance="@style/TextAppearance.AppCompat.Widget.ActionBar.Title"/>
+                android:orientation="vertical">
+                <TextView android:id="@+id/trn_description"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    tools:text="Transaction description which can be rather long"
+                    android:gravity="bottom"
+                    android:maxLines="3"
+                    android:paddingBottom="20dp"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Widget.ActionBar.Title"/>
+                <TextView android:id="@+id/transaction_account"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:gravity="bottom"
+                    android:layout_gravity="bottom"
+                    android:maxLines="1"
+                    android:ellipsize="start"
+                    android:textStyle="italic"
+                    android:textColor="@android:color/white"
+                    tools:text="Expenses:Computer"/>
+            </LinearLayout>
         </android.support.v7.widget.Toolbar>
 
         <TableLayout android:id="@+id/fragment_transaction_details"
@@ -49,7 +79,8 @@
             android:stretchColumns="1"
             android:orientation="vertical" >
 
-            <TableRow style="@style/FormRow">
+            <TableRow android:id="@+id/row_amount"
+                style="@style/FormRow">
                 <TextView
                     android:id="@+id/currency_symbol"
                     style="@style/FormIcon"
diff --git a/app/src/main/res/layout/item_split_amount_info.xml b/app/src/main/res/layout/item_split_amount_info.xml
new file mode 100644
index 00000000..7766ad23
--- /dev/null
+++ b/app/src/main/res/layout/item_split_amount_info.xml
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<TableRow xmlns:tools="http://schemas.android.com/tools"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:weightSum="5"
+    android:paddingTop="5dp"
+    android:paddingBottom="5dp"
+    android:layout_marginLeft="6dp">
+
+    <TextView
+        android:id="@+id/split_account_name"
+        android:layout_width="0dp"
+        android:layout_weight="3"
+        android:layout_height="wrap_content"
+        android:gravity="center_vertical"
+        android:layout_gravity="center"
+        android:textSize="14sp"
+        android:ellipsize="start"
+        tools:text="Computer"
+        android:textColor="@android:color/black" />
+
+    <TextView
+        android:id="@+id/split_debit"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:gravity="right"
+        android:layout_gravity="center"
+        android:textSize="16sp"
+        tools:text="$ 2000"
+        android:textColor="@android:color/black" />
+
+    <TextView
+        android:id="@+id/split_credit"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:gravity="right"
+        android:layout_gravity="center"
+        android:textSize="16sp"
+        tools:text="$ 2000"
+        android:textColor="@android:color/black" />
+</TableRow>
\ No newline at end of file
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
index 7a289359..4ad7a3e8 100644
--- a/app/src/main/res/values/styles.xml
+++ b/app/src/main/res/values/styles.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <!--
- Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 - 2015 Ngewi Fet <ngewif@gmail.com>
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
