From ee0880fc62f96cde24f0e87f88c8f32b4f79663d Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 23 Sep 2014 15:41:48 +0200
Subject: [PATCH 01/15] Updated version strings & changelog for v1.5.0-beta1
 release

---
 CHANGELOG.md                      | 25 +++++++++++++++++++++++++
 app/AndroidManifest.xml           |  2 +-
 app/pom.xml                       |  2 +-
 app/res/values-de/strings.xml     | 12 +++++-------
 app/res/values-el/strings.xml     | 12 +++++-------
 app/res/values-es-rMX/strings.xml | 12 +++++-------
 app/res/values-es/strings.xml     | 14 ++++++--------
 app/res/values-fr/strings.xml     | 14 ++++++--------
 app/res/values-hu/strings.xml     | 12 +++++-------
 app/res/values-it/strings.xml     | 12 +++++-------
 app/res/values-nb/strings.xml     | 14 ++++++--------
 app/res/values-nl/strings.xml     | 12 +++++-------
 app/res/values-pt-rBR/strings.xml | 12 +++++-------
 app/res/values-ru/strings.xml     | 14 ++++++--------
 app/res/values-zh/strings.xml     | 12 +++++-------
 app/res/values/strings.xml        | 14 ++++++--------
 integration-tests/pom.xml         |  2 +-
 pom.xml                           |  2 +-
 18 files changed, 99 insertions(+), 100 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 5c6e8367..91381016 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,30 @@
 Change Log
 ===============================================================================
+Version 1.5.0 *(2014-09-xx)*
+----------------------------
+* Need for speed! Lots of performance optimizations in the application
+  - Application balances are now computed faster
+  - App loads faster and is more responsive
+  - Faster recording of opening balances before delete operations
+  - Import and export operations rewritten to perform faster and use less resources
+* Fixed: Crash after saving opening balances and trying to create new transactions
+* Fixed: Parent account title color sometimes not propagated to child accounts
+* Fixed: Recurring transactions scheduled but not saved to database during import
+* Fixed: Crash caused by null exception message during import
+* Fixed: Poor word-wrap of transaction type labels
+* Fixed: Amount values not always displaying the correct sign
+* Feature: Select default currency upon first run of application
+* Feature: Creating account hierarchy uses the user currency preference
+* Feature: Support for reading and writing compressed GnuCash XML files.
+* Feature: Set a passcode lock to restrict access to the application
+* Feature: Export a QIF file for transactions of each currency in use  
+* Improved: Increased stability of import/export operations
+* Improved: Exclude multi-currency transactions from QIF exports
+* Improved: Display warnings/limitations of different export formats in the export dialog
+* Improved: Preserve split memos in QIF export (as much as possible)
+* Improved: Child accounts now assigned to account parent upon deletion of account
+* Improved: Descendant accounts cannot be selected as a parent account (no cyclic dependencies)
+
 Version 1.4.3 *(2014-09-09)*
 ----------------------------
 * Fixed: Cannot edit transactions when in single-entry mode
diff --git a/app/AndroidManifest.xml b/app/AndroidManifest.xml
index 8fbc2eb3..69300cd4 100644
--- a/app/AndroidManifest.xml
+++ b/app/AndroidManifest.xml
@@ -17,7 +17,7 @@
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="org.gnucash.android"
-    android:versionCode="40"
+    android:versionCode="41"
     android:versionName="@string/app_version_name" >
 
     <uses-sdk android:minSdkVersion="8" android:targetSdkVersion="16"/>
diff --git a/app/pom.xml b/app/pom.xml
index 7f873c84..534877ea 100644
--- a/app/pom.xml
+++ b/app/pom.xml
@@ -22,7 +22,7 @@
     <description>Gnucash Android companion application</description>
 
     <parent>
-        <version>1.4.3-SNAPSHOT</version>
+        <version>1.5.0-SNAPSHOT</version>
         <groupId>org.gnucash.android</groupId>
         <artifactId>gnucash-android-parent</artifactId>
     </parent>
diff --git a/app/res/values-de/strings.xml b/app/res/values-de/strings.xml
index 41a32aa7..8bb64a17 100644
--- a/app/res/values-de/strings.xml
+++ b/app/res/values-de/strings.xml
@@ -303,13 +303,11 @@
 	<string name="summary_xml_ofx_header">Diese Option aktivieren, wenn Sie die OFX-Dateien fr ein anderes Programm als GnuCash auf dem Desktop exportieren</string>
 	<string name="title_whats_new">Neuigkeiten in dieser Version</string>
 	<string name="whats_new">
-        - Create multiple splits per transaction\n
-        - Fixed computation of account balances for different account types\n
-        - Use account-specific labels for CREDIT/DEBITs\n
-        - Automated backup of database before deletion operations\n
-        - Restore most recent backup of database (in Settings -> General)\n
-        - Read transactions from GnuCash XML files (limited support)\n
-        - Option to save opening balances before deleting transactions\n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
         - Multiple bug fixes and improvements\n
     </string>
 	<string name="label_dismiss">Schlieen</string>
diff --git a/app/res/values-el/strings.xml b/app/res/values-el/strings.xml
index 77c47ec9..001b3eb8 100644
--- a/app/res/values-el/strings.xml
+++ b/app/res/values-el/strings.xml
@@ -309,13 +309,11 @@
 	<string name="summary_xml_ofx_header">        ,   GnuCash   .</string>
 	<string name="title_whats_new">  </string>
 	<string name="whats_new">
-        - Create multiple splits per transaction\n
-        - Fixed computation of account balances for different account types\n
-        - Use account-specific labels for CREDIT/DEBITs\n
-        - Automated backup of database before deletion operations\n
-        - Restore most recent backup of database (in Settings -> General)\n
-        - Read transactions from GnuCash XML files (limited support)\n
-        - Option to save opening balances before deleting transactions\n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss"></string>
diff --git a/app/res/values-es-rMX/strings.xml b/app/res/values-es-rMX/strings.xml
index b8aa7b9c..478058cd 100644
--- a/app/res/values-es-rMX/strings.xml
+++ b/app/res/values-es-rMX/strings.xml
@@ -303,13 +303,11 @@
 	<string name="summary_xml_ofx_header">Active esta opci&#243;n para exportar a otras aplicaciones distintas a GnuCash para escritorio</string>
 	<string name="title_whats_new">&#191;Qu&#233; hay nuevo?</string>
 	<string name="whats_new">
-        - Create multiple splits per transaction\n
-        - Fixed computation of account balances for different account types\n
-        - Use account-specific labels for CREDIT/DEBITs\n
-        - Automated backup of database before deletion operations\n
-        - Restore most recent backup of database (in Settings -> General)\n
-        - Read transactions from GnuCash XML files (limited support)\n
-        - Option to save opening balances before deleting transactions\n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Cerrar</string>
diff --git a/app/res/values-es/strings.xml b/app/res/values-es/strings.xml
index 5dc7ae19..9ff3b593 100644
--- a/app/res/values-es/strings.xml
+++ b/app/res/values-es/strings.xml
@@ -303,14 +303,12 @@
 	<string name="summary_xml_ofx_header">Active esta opci&#243;n para exportar a otras aplicaciones distintas a GnuCash para escritorio</string>
 	<string name="title_whats_new">Novedades</string>
 	<string name="whats_new">
-        - Crear m&#250;ltiples desgloses por transacci&#243;n\n
-        - Arreglar el c&#225;lculo de saldos de cuentas para los distintos tipos de cuentas\n
-        - Usar etiquetas especificas de cuenta para ABONO/CARGO\n
-        - Copia de seguridad autom&#225;tica antes de las operaciones de borrado\n
-        - Restaurar la copia de seguridad m&#225;s reciente (En Ajustes -> General)\n
-        - Soporte limitado de lectura de transacciones en archivos GnuCash XML\n
-        - Opci&#243; de guardar saldos de apertura antes de borrar transacciones\n
-        - Correci&#243;n de errores y mejoras\n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
+        - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Cerrar</string>
     <string name="toast_transanction_amount_required">Introduzca un importe para guardar la transacci&#243;n</string>
diff --git a/app/res/values-fr/strings.xml b/app/res/values-fr/strings.xml
index 19738f4b..afa76eda 100644
--- a/app/res/values-fr/strings.xml
+++ b/app/res/values-fr/strings.xml
@@ -303,14 +303,12 @@
     <string name="summary_xml_ofx_header">Activez cette option lors d\'un export vers une application tierce autre que GnuCash pour PC</string>
     <string name="title_whats_new">Nouveautes</string>
 	<string name="whats_new">
-        - Cration de multiples dcoupes par transactions\n
-        - Correction du calcul des soldes de comptes pour les comptes de diffrents types\n
-        - Utilisation de labels spcifiques pour les comptes CREDIT/DEBITs\n
-        - Sauvegarde automatique des donnes avant la suppression des oprations\n
-        - Restaurer la dernire sauvegarde des donnes (dans Paramtres -> Gnral)\n
-        - Lecture des transactions depuis les fichiers GnuCash XML (support limit)\n
-        - Options pour sauvegarder le solde des comptes avant la suppression des transactions\n
-        - Multiples amliorations et corrections de bugs\n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
+        - Multiple bug fixes and improvements\n
 	</string>
     <string name="label_dismiss">Passer</string>
     <string name="toast_transanction_amount_required">Entrez un montant pour sauvegarder la transaction</string>
diff --git a/app/res/values-hu/strings.xml b/app/res/values-hu/strings.xml
index 9736bf03..34f1c293 100644
--- a/app/res/values-hu/strings.xml
+++ b/app/res/values-hu/strings.xml
@@ -303,13 +303,11 @@
 	<string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
 	<string name="title_whats_new">What\'s New</string>
 	<string name="whats_new">
-        - Create multiple splits per transaction\n
-        - Fixed computation of account balances for different account types\n
-        - Use account-specific labels for CREDIT/DEBITs\n
-        - Automated backup of database before deletion operations\n
-        - Restore most recent backup of database (in Settings -> General)\n
-        - Read transactions from GnuCash XML files (limited support)\n
-        - Option to save opening balances before deleting transactions\n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Dismiss</string>
diff --git a/app/res/values-it/strings.xml b/app/res/values-it/strings.xml
index b9c58ced..dd4a4b39 100644
--- a/app/res/values-it/strings.xml
+++ b/app/res/values-it/strings.xml
@@ -304,13 +304,11 @@
 	<string name="summary_xml_ofx_header">Abilitare questa opzione quando si esporta verso un\'applicazione diversa da GnuCash versione desktop</string>
 	<string name="title_whats_new">Novit</string>
 	<string name="whats_new">
-        - Create multiple splits per transaction\n
-        - Fixed computation of account balances for different account types\n
-        - Use account-specific labels for CREDIT/DEBITs\n
-        - Automated backup of database before deletion operations\n
-        - Restore most recent backup of database (in Settings -> General)\n
-        - Read transactions from GnuCash XML files (limited support)\n
-        - Option to save opening balances before deleting transactions\n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Chiudi</string>
diff --git a/app/res/values-nb/strings.xml b/app/res/values-nb/strings.xml
index 1c3f70cd..edbb061c 100644
--- a/app/res/values-nb/strings.xml
+++ b/app/res/values-nb/strings.xml
@@ -304,14 +304,12 @@
 	<string name="summary_xml_ofx_header">Velg denne hvis du skal eksportere til annen programvare enn GnuCash for PC.</string>
 	<string name="title_whats_new">Hva er nytt</string>
 	<string name="whats_new">
-        - Lag flere splitter for en transaksjon\n
-        - Rettet kalkulering av balanse for ulike kontoer\n
-        - Bruk konto-spesifikke navn for KREDIT/DEBET\n
-        - Automatisk sikkerhetskopi av database fr sletteoperasjoner\n
-        - Tilbakelegging av siste sikkerhetskopi av databasen (i Innstillinger->Generelt)\n
-        - Les transaksjoner fra GnuCash XML filer (begrenset sttte)\n
-        - Mulighet for  lagre inngende balanser fr sletting av transaksjoner\n
-        - Mange feilrettinger og forbedringer\n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
+        - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Ferdig</string>
     <string name="toast_transanction_amount_required">Oppgi et belp for  lagre transaksjonen</string>
diff --git a/app/res/values-nl/strings.xml b/app/res/values-nl/strings.xml
index 6aefc698..70159364 100644
--- a/app/res/values-nl/strings.xml
+++ b/app/res/values-nl/strings.xml
@@ -303,13 +303,11 @@
 	<string name="summary_xml_ofx_header">Schakel deze optie in als u naar een applicatie anders dan GnuCash wil exporteren</string>
 	<string name="title_whats_new">Nieuw sinds de vorige versie</string>
 	<string name="whats_new">
-        - Create multiple splits per transaction\n
-        - Fixed computation of account balances for different account types\n
-        - Use account-specific labels for CREDIT/DEBITs\n
-        - Automated backup of database before deletion operations\n
-        - Restore most recent backup of database (in Settings -> General)\n
-        - Read transactions from GnuCash XML files (limited support)\n
-        - Option to save opening balances before deleting transactions\n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Wijs af</string>
diff --git a/app/res/values-pt-rBR/strings.xml b/app/res/values-pt-rBR/strings.xml
index d41dde59..06e1aef4 100644
--- a/app/res/values-pt-rBR/strings.xml
+++ b/app/res/values-pt-rBR/strings.xml
@@ -302,13 +302,11 @@
 	  <string name="summary_xml_ofx_header">Habilitar essa opo quando estiver exportando para um software terceiro, diferente do GnuCash para desktop</string>
 	  <string name="title_whats_new">O que h de novo</string>
 	  <string name="whats_new">
-          - Create multiple splits per transaction\n
-          - Fixed computation of account balances for different account types\n
-          - Use account-specific labels for CREDIT/DEBITs\n
-          - Automated backup of database before deletion operations\n
-          - Restore most recent backup of database (in Settings -> General)\n
-          - Read transactions from GnuCash XML files (limited support)\n
-          - Option to save opening balances before deleting transactions\n
+          - General resource and performance optimization\n
+          - Faster computation of account balances\n
+          - Set passcode to restrict access to app (in Settings)\n
+          - Export separate QIF files for each currency in use\n
+          - Use currencey settings when creating account hierarchy\n
           - Multiple bug fixes and improvements\n
 	  </string>
 	  <string name="label_dismiss">Descartar</string>
diff --git a/app/res/values-ru/strings.xml b/app/res/values-ru/strings.xml
index 847893ad..876309c1 100644
--- a/app/res/values-ru/strings.xml
+++ b/app/res/values-ru/strings.xml
@@ -303,14 +303,12 @@
 	<string name="summary_xml_ofx_header">  ,       GnuCash  </string>
 	<string name="title_whats_new"></string>
 	<string name="whats_new">
-        -   \n
-        -        \n
-        -          \n
-        -       \n
-        -      ( -&gt; )\n
-        -    XML- GnuCash ( )\n
-        -       \n
-        -     \n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
+        - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss"></string>
     <string name="toast_transanction_amount_required"> ,   </string>
diff --git a/app/res/values-zh/strings.xml b/app/res/values-zh/strings.xml
index 9434a861..23a3a931 100644
--- a/app/res/values-zh/strings.xml
+++ b/app/res/values-zh/strings.xml
@@ -302,13 +302,11 @@
     <string name="summary_xml_ofx_header">GnuCash</string>
     <string name="title_whats_new"></string>
     <string name="whats_new">
-        - Create multiple splits per transaction\n
-        - Fixed computation of account balances for different account types\n
-        - Use account-specific labels for CREDIT/DEBITs\n
-        - Automated backup of database before deletion operations\n
-        - Restore most recent backup of database (in Settings -> General)\n
-        - Read transactions from GnuCash XML files (limited support)\n
-        - Option to save opening balances before deleting transactions\n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
         - Multiple bug fixes and improvements\n
 	</string>
     <string name="label_dismiss"></string>
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index 68fa2e2f..8dbce224 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -17,7 +17,7 @@
 
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
     <string name="app_name">GnuCash</string>
-    <string name="app_version_name">1.4.3</string>
+    <string name="app_version_name">1.5.0-beta1</string>
     <string name="title_add_account">Create Account</string>
     <string name="title_edit_account">Edit Account</string>
     <string name="info_details">Info</string>
@@ -314,13 +314,11 @@
 	<string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
 	<string name="title_whats_new">What\'s New</string>
 	<string name="whats_new">
-        - Create multiple splits per transaction\n
-        - Fixed computation of account balances for different account types\n
-        - Use account-specific labels for CREDIT/DEBITs\n
-        - Automated backup of database before deletion operations\n
-        - Restore most recent backup of database (in Settings -> General)\n
-        - Read transactions from GnuCash XML files (limited support)\n
-        - Option to save opening balances before deleting transactions\n
+        - General resource and performance optimization\n
+        - Faster computation of account balances\n
+        - Set passcode to restrict access to app (in Settings)\n
+        - Export separate QIF files for each currency in use\n
+        - Use currencey settings when creating account hierarchy\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Dismiss</string>
diff --git a/integration-tests/pom.xml b/integration-tests/pom.xml
index cba85f06..7bfb0512 100644
--- a/integration-tests/pom.xml
+++ b/integration-tests/pom.xml
@@ -17,7 +17,7 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <parent>
-		<version>1.4.3-SNAPSHOT</version>
+		<version>1.5.0-SNAPSHOT</version>
 		<groupId>org.gnucash.android</groupId>
 		<artifactId>gnucash-android-parent</artifactId>
 	</parent>
diff --git a/pom.xml b/pom.xml
index aa8501da..bd8b298e 100644
--- a/pom.xml
+++ b/pom.xml
@@ -17,7 +17,7 @@
 
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
     <modelVersion>4.0.0</modelVersion>
-	<version>1.4.3-SNAPSHOT</version>
+	<version>1.5.0-SNAPSHOT</version>
     <groupId>org.gnucash.android</groupId>
     <artifactId>gnucash-android-parent</artifactId>
     <name>GnuCash Android parent</name>

From 47c2784c671b8b8ef3d56dc8fc545822aba67042 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 1 Oct 2014 10:25:11 +0200
Subject: [PATCH 02/15] Updated version strings for v1.5.0 release

---
 CHANGELOG.md               | 2 +-
 app/AndroidManifest.xml    | 2 +-
 app/res/values/strings.xml | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 91381016..df104618 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,6 +1,6 @@
 Change Log
 ===============================================================================
-Version 1.5.0 *(2014-09-xx)*
+Version 1.5.0 *(2014-10-01)*
 ----------------------------
 * Need for speed! Lots of performance optimizations in the application
   - Application balances are now computed faster
diff --git a/app/AndroidManifest.xml b/app/AndroidManifest.xml
index 69300cd4..9985b6da 100644
--- a/app/AndroidManifest.xml
+++ b/app/AndroidManifest.xml
@@ -17,7 +17,7 @@
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="org.gnucash.android"
-    android:versionCode="41"
+    android:versionCode="42"
     android:versionName="@string/app_version_name" >
 
     <uses-sdk android:minSdkVersion="8" android:targetSdkVersion="16"/>
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index 8dbce224..594b7a41 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -17,7 +17,7 @@
 
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
     <string name="app_name">GnuCash</string>
-    <string name="app_version_name">1.5.0-beta1</string>
+    <string name="app_version_name">1.5.0</string>
     <string name="title_add_account">Create Account</string>
     <string name="title_edit_account">Edit Account</string>
     <string name="info_details">Info</string>

From 79b8890dd2f12026d80f6285bf4b0aac8867b34b Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Thu, 2 Oct 2014 15:35:22 +0800
Subject: [PATCH 03/15] Rewrite upgrade db versin 6 to 7

---
 app/src/org/gnucash/android/db/DatabaseHelper.java | 108 +++++++++++++++++----
 1 file changed, 89 insertions(+), 19 deletions(-)

diff --git a/app/src/org/gnucash/android/db/DatabaseHelper.java b/app/src/org/gnucash/android/db/DatabaseHelper.java
index 7a95bd6c..c9c6c00a 100644
--- a/app/src/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/org/gnucash/android/db/DatabaseHelper.java
@@ -24,6 +24,7 @@
 import android.util.Log;
 import android.widget.Toast;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.Transaction;
 
 import static org.gnucash.android.db.DatabaseSchema.*;
 
@@ -33,6 +34,7 @@
  * @author Ngewi Fet <ngewif@gmail.com>
  *
  */
+@SuppressWarnings("deprecation")
 public class DatabaseHelper extends SQLiteOpenHelper {
 
     /**
@@ -222,27 +224,95 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 
             if (oldVersion == 6 && newVersion >= DatabaseSchema.SPLITS_DB_VERSION){
                 Log.i(LOG_TAG, "Upgrading database to version 7");
-
-                //for users who do not have double-entry activated, we create imbalance accounts for their splits
-                //TODO: Enable when we can hide imbalance accounts from user
-//                List<Currency> currencies = MigrationHelper.getCurrencies(db);
-//                AccountsDbAdapter accountsDbAdapter = new AccountsDbAdapter(db);
-//                for (Currency currency : currencies) {
-//                    accountsDbAdapter.getOrCreateImbalanceAccountUID(currency);
-//                }
-
+                db.beginTransaction();
                 try {
-                    String filepath = MigrationHelper.exportGnucashXML(db);
-
-                    dropAllDatabaseTables(db);
-                    createDatabaseTables(db);
-
-                    MigrationHelper.importGnucashXML(db, filepath);
-                } catch (Exception e){
-                    Toast.makeText(mContext, "Error upgrading database.\n" + e.getMessage(), Toast.LENGTH_LONG).show();
-                    throw new RuntimeException(e);
+                    // backup transaction table
+                    db.execSQL("ALTER TABLE " + TransactionEntry.TABLE_NAME + " RENAME TO " + TransactionEntry.TABLE_NAME + "_bak");
+                    // create new transaction table
+                    db.execSQL("create table " + TransactionEntry.TABLE_NAME + " ("
+                            + TransactionEntry._ID + " integer primary key autoincrement, "
+                            + TransactionEntry.COLUMN_UID + " varchar(255) not null, "
+                            + TransactionEntry.COLUMN_DESCRIPTION + " varchar(255), "
+                            + TransactionEntry.COLUMN_NOTES + " text, "
+                            + TransactionEntry.COLUMN_TIMESTAMP + " integer not null, "
+                            + TransactionEntry.COLUMN_EXPORTED + " tinyint default 0, "
+                            + TransactionEntry.COLUMN_CURRENCY + " varchar(255) not null, "
+                            + TransactionEntry.COLUMN_RECURRENCE_PERIOD + " integer default 0, "
+                            + "UNIQUE (" + TransactionEntry.COLUMN_UID + ") "
+                            + ");");
+                    // initialize new transaction table wiht data from old table
+                    db.execSQL("INSERT INTO " + TransactionEntry.TABLE_NAME + " ( "
+                                    + TransactionEntry._ID + " , "
+                                    + TransactionEntry.COLUMN_UID + " , "
+                                    + TransactionEntry.COLUMN_DESCRIPTION + " , "
+                                    + TransactionEntry.COLUMN_NOTES + " , "
+                                    + TransactionEntry.COLUMN_TIMESTAMP + " , "
+                                    + TransactionEntry.COLUMN_EXPORTED + " , "
+                                    + TransactionEntry.COLUMN_CURRENCY + " , "
+                                    + TransactionEntry.COLUMN_RECURRENCE_PERIOD + " )  SELECT "
+                                    + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry._ID + " , "
+                                    + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_UID + " , "
+                                    + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_DESCRIPTION + " , "
+                                    + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_NOTES + " , "
+                                    + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_TIMESTAMP + " , "
+                                    + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_EXPORTED + " , "
+                                    + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_CURRENCY + " , "
+                                    + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_RECURRENCE_PERIOD
+                                    + " FROM " + TransactionEntry.TABLE_NAME + "_bak , " + AccountEntry.TABLE_NAME
+                                    + " ON " + TransactionEntry.TABLE_NAME + "_bak.account_uid == " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID
+                    );
+                    // create split table
+                    db.execSQL("CREATE TABLE " + SplitEntry.TABLE_NAME + " ("
+                            + SplitEntry._ID + " integer primary key autoincrement, "
+                            + SplitEntry.COLUMN_UID + " varchar(255) not null, "
+                            + SplitEntry.COLUMN_MEMO + " text, "
+                            + SplitEntry.COLUMN_TYPE + " varchar(255) not null, "
+                            + SplitEntry.COLUMN_AMOUNT + " varchar(255) not null, "
+                            + SplitEntry.COLUMN_ACCOUNT_UID + " varchar(255) not null, "
+                            + SplitEntry.COLUMN_TRANSACTION_UID + " varchar(255) not null, "
+                            + "FOREIGN KEY (" + SplitEntry.COLUMN_ACCOUNT_UID + ") REFERENCES " + AccountEntry.TABLE_NAME + " (" + AccountEntry.COLUMN_UID + "), "
+                            + "FOREIGN KEY (" + SplitEntry.COLUMN_TRANSACTION_UID + ") REFERENCES " + TransactionEntry.TABLE_NAME + " (" + TransactionEntry.COLUMN_UID + "), "
+                            + "UNIQUE (" + SplitEntry.COLUMN_UID + ") "
+                            + ");");
+                    // Initialize split table with data from backup transaction table
+                    // New split table is initialized after the new transaction table as the
+                    // foreign key constraint will stop any data from being inserted
+                    // If new split table is created before the backup is made, the foreign key
+                    // constraint will be rewritten to refer to the backup transaction table
+                    db.execSQL("INSERT INTO " + SplitEntry.TABLE_NAME + " ( "
+                            + SplitEntry.COLUMN_UID + " , "
+                            + SplitEntry.COLUMN_TYPE + " , "
+                            + SplitEntry.COLUMN_AMOUNT + " , "
+                            + SplitEntry.COLUMN_ACCOUNT_UID + " , "
+                            + SplitEntry.COLUMN_TRANSACTION_UID + " ) SELECT "
+                            // _ID, autogenerated
+                            + "LOWER(HEX(RANDOMBLOB(16))) , "
+                            // COLUMN_MEMO, empty
+                            + "CASE WHEN " + TransactionEntry.TABLE_NAME + "_bak.type IN ( 'CASH' , 'BANK', 'ASSET', 'EXPENSE', 'RECEIVABLE', 'STOCK', 'MUTUAL' ) THEN CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'DEBIT' ELSE 'CREDIT' END ELSE CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'CREDIT' ELSE 'DEBIT' END END , "
+                            + "ABS ( " + TransactionEntry.TABLE_NAME + "_bak.amount ) , "
+                            + TransactionEntry.TABLE_NAME + "_bak.account_uid , "
+                            + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_UID
+                            + " FROM " + TransactionEntry.TABLE_NAME + "_bak UNION SELECT "
+                            // _ID, autogenerated
+                            + "LOWER(HEX(RANDOMBLOB(16))) AS " + SplitEntry.COLUMN_UID + " , "
+                            // COLUMN_MEMO, empty
+                            + "CASE WHEN " + TransactionEntry.TABLE_NAME + "_bak.type IN ( 'CASH' , 'BANK', 'ASSET', 'EXPENSE', 'RECEIVABLE', 'STOCK', 'MUTUAL' ) THEN CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'CREDIT' ELSE 'DEBIT' END ELSE CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'DEBIT' ELSE 'CREDIT' END END , "
+                            + "ABS ( " + TransactionEntry.TABLE_NAME + "_bak.amount ) , "
+                            + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " , "
+                            + TransactionEntry.TABLE_NAME + "_baK." + TransactionEntry.COLUMN_UID
+                            + " FROM " + TransactionEntry.TABLE_NAME + "_bak WHERE " + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " IS NOT NULL"
+                    );
+                    // drop backup transaction table
+                    db.execSQL("DROP TABLE " + TransactionEntry.TABLE_NAME + "_bak");
+                    db.setTransactionSuccessful();
+                    oldVersion = DatabaseSchema.SPLITS_DB_VERSION;
+                } finally {
+                    db.endTransaction();
                 }
-                oldVersion = DatabaseSchema.SPLITS_DB_VERSION;
             }
 		}
 

From 9489e7a6fd0440acb26a65ad04637b7bd0c93fe7 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 8 Oct 2014 16:36:02 +0200
Subject: [PATCH 04/15] Only create SQL views for database version 7 and above

---
 app/src/org/gnucash/android/db/DatabaseAdapter.java | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/app/src/org/gnucash/android/db/DatabaseAdapter.java b/app/src/org/gnucash/android/db/DatabaseAdapter.java
index 24bf926d..073f829a 100644
--- a/app/src/org/gnucash/android/db/DatabaseAdapter.java
+++ b/app/src/org/gnucash/android/db/DatabaseAdapter.java
@@ -62,7 +62,10 @@ public DatabaseAdapter(Context context) {
         mDbHelper = new DatabaseHelper(context);
         mContext = context.getApplicationContext();
         open();
-        createTempView();
+
+        if (mDb.getVersion() >= DatabaseSchema.SPLITS_DB_VERSION) {
+            createTempView();
+        }
     }
 
     /**
@@ -74,7 +77,10 @@ public DatabaseAdapter(SQLiteDatabase db) {
         this.mContext = GnuCashApplication.getAppContext();
         if (!db.isOpen() || db.isReadOnly())
             throw new IllegalArgumentException("Database not open or is read-only. Require writeable database");
-        createTempView();
+
+        if (mDb.getVersion() >= DatabaseSchema.SPLITS_DB_VERSION) {
+            createTempView();
+        }
     }
 
     private void createTempView() {

From 7d98df85f657b511d58d64d2e69ae8a3e284d947 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 8 Oct 2014 16:56:44 +0200
Subject: [PATCH 05/15] Updated version strings for v1.5.1 release

---
 CHANGELOG.md               | 4 ++++
 app/AndroidManifest.xml    | 2 +-
 app/pom.xml                | 2 +-
 app/res/values/strings.xml | 2 +-
 integration-tests/pom.xml  | 2 +-
 pom.xml                    | 2 +-
 6 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index df104618..481f7a9b 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,9 @@
 Change Log
 ===============================================================================
+Version 1.5.1 *(2014-10-08)*
+----------------------------
+* Fixed: Crash when upgrading from v1.4.x to v1.5.x
+
 Version 1.5.0 *(2014-10-01)*
 ----------------------------
 * Need for speed! Lots of performance optimizations in the application
diff --git a/app/AndroidManifest.xml b/app/AndroidManifest.xml
index 9985b6da..bb5e85fb 100644
--- a/app/AndroidManifest.xml
+++ b/app/AndroidManifest.xml
@@ -17,7 +17,7 @@
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="org.gnucash.android"
-    android:versionCode="42"
+    android:versionCode="43"
     android:versionName="@string/app_version_name" >
 
     <uses-sdk android:minSdkVersion="8" android:targetSdkVersion="16"/>
diff --git a/app/pom.xml b/app/pom.xml
index 534877ea..1d5b9515 100644
--- a/app/pom.xml
+++ b/app/pom.xml
@@ -22,7 +22,7 @@
     <description>Gnucash Android companion application</description>
 
     <parent>
-        <version>1.5.0-SNAPSHOT</version>
+        <version>1.5.1-SNAPSHOT</version>
         <groupId>org.gnucash.android</groupId>
         <artifactId>gnucash-android-parent</artifactId>
     </parent>
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index 594b7a41..94988ceb 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -17,7 +17,7 @@
 
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
     <string name="app_name">GnuCash</string>
-    <string name="app_version_name">1.5.0</string>
+    <string name="app_version_name">1.5.1</string>
     <string name="title_add_account">Create Account</string>
     <string name="title_edit_account">Edit Account</string>
     <string name="info_details">Info</string>
diff --git a/integration-tests/pom.xml b/integration-tests/pom.xml
index 7bfb0512..b5843950 100644
--- a/integration-tests/pom.xml
+++ b/integration-tests/pom.xml
@@ -17,7 +17,7 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <parent>
-		<version>1.5.0-SNAPSHOT</version>
+		<version>1.5.1-SNAPSHOT</version>
 		<groupId>org.gnucash.android</groupId>
 		<artifactId>gnucash-android-parent</artifactId>
 	</parent>
diff --git a/pom.xml b/pom.xml
index bd8b298e..18ad1671 100644
--- a/pom.xml
+++ b/pom.xml
@@ -17,7 +17,7 @@
 
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
     <modelVersion>4.0.0</modelVersion>
-	<version>1.5.0-SNAPSHOT</version>
+	<version>1.5.1-SNAPSHOT</version>
     <groupId>org.gnucash.android</groupId>
     <artifactId>gnucash-android-parent</artifactId>
     <name>GnuCash Android parent</name>

From 84859f24d7d602f2d5381c5c6daa97585cbc284b Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Thu, 9 Oct 2014 23:13:54 +0800
Subject: [PATCH 06/15] fix split type

---
 app/src/org/gnucash/android/db/DatabaseHelper.java | 24 +++++++++++-----------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/app/src/org/gnucash/android/db/DatabaseHelper.java b/app/src/org/gnucash/android/db/DatabaseHelper.java
index c9c6c00a..f6107f1f 100644
--- a/app/src/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/org/gnucash/android/db/DatabaseHelper.java
@@ -285,26 +285,26 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
                             + SplitEntry.COLUMN_AMOUNT + " , "
                             + SplitEntry.COLUMN_ACCOUNT_UID + " , "
                             + SplitEntry.COLUMN_TRANSACTION_UID + " ) SELECT "
-                            // _ID, autogenerated
                             + "LOWER(HEX(RANDOMBLOB(16))) , "
-                            // COLUMN_MEMO, empty
-                            + "CASE WHEN " + TransactionEntry.TABLE_NAME + "_bak.type IN ( 'CASH' , 'BANK', 'ASSET', 'EXPENSE', 'RECEIVABLE', 'STOCK', 'MUTUAL' ) THEN CASE WHEN "
-                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'DEBIT' ELSE 'CREDIT' END ELSE CASE WHEN "
-                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'CREDIT' ELSE 'DEBIT' END END , "
+                            + "CASE WHEN " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_TYPE + " IN ( 'CASH' , 'BANK', 'ASSET', 'EXPENSE', 'RECEIVABLE', 'STOCK', 'MUTUAL' ) THEN CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'CREDIT' ELSE 'DEBIT' END ELSE CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'DEBIT' ELSE 'CREDIT' END END , "
                             + "ABS ( " + TransactionEntry.TABLE_NAME + "_bak.amount ) , "
                             + TransactionEntry.TABLE_NAME + "_bak.account_uid , "
                             + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_UID
-                            + " FROM " + TransactionEntry.TABLE_NAME + "_bak UNION SELECT "
-                            // _ID, autogenerated
+                            + " FROM " + TransactionEntry.TABLE_NAME + "_bak , " + AccountEntry.TABLE_NAME
+                            + " ON " + TransactionEntry.TABLE_NAME + "_bak.account_uid = " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID
+                            + " UNION SELECT "
                             + "LOWER(HEX(RANDOMBLOB(16))) AS " + SplitEntry.COLUMN_UID + " , "
-                            // COLUMN_MEMO, empty
-                            + "CASE WHEN " + TransactionEntry.TABLE_NAME + "_bak.type IN ( 'CASH' , 'BANK', 'ASSET', 'EXPENSE', 'RECEIVABLE', 'STOCK', 'MUTUAL' ) THEN CASE WHEN "
-                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'CREDIT' ELSE 'DEBIT' END ELSE CASE WHEN "
-                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'DEBIT' ELSE 'CREDIT' END END , "
+                            + "CASE WHEN " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_TYPE + " IN ( 'CASH' , 'BANK', 'ASSET', 'EXPENSE', 'RECEIVABLE', 'STOCK', 'MUTUAL' ) THEN CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'DEBIT' ELSE 'CREDIT' END ELSE CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'CREDIT' ELSE 'DEBIT' END END , "
                             + "ABS ( " + TransactionEntry.TABLE_NAME + "_bak.amount ) , "
                             + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " , "
                             + TransactionEntry.TABLE_NAME + "_baK." + TransactionEntry.COLUMN_UID
-                            + " FROM " + TransactionEntry.TABLE_NAME + "_bak WHERE " + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " IS NOT NULL"
+                            + " FROM " + TransactionEntry.TABLE_NAME + "_bak , " + AccountEntry.TABLE_NAME
+                            + " ON " + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " = " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID
+                            + " WHERE " + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " IS NOT NULL"
                     );
                     // drop backup transaction table
                     db.execSQL("DROP TABLE " + TransactionEntry.TABLE_NAME + "_bak");

From 3f2a1d1b0a04ec9d6afea332834dee53fe868b6e Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Fri, 10 Oct 2014 00:03:58 +0800
Subject: [PATCH 07/15] fix split type

---
 app/src/org/gnucash/android/db/DatabaseHelper.java | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/src/org/gnucash/android/db/DatabaseHelper.java b/app/src/org/gnucash/android/db/DatabaseHelper.java
index f6107f1f..90ebb7f4 100644
--- a/app/src/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/org/gnucash/android/db/DatabaseHelper.java
@@ -303,7 +303,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
                             + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " , "
                             + TransactionEntry.TABLE_NAME + "_baK." + TransactionEntry.COLUMN_UID
                             + " FROM " + TransactionEntry.TABLE_NAME + "_bak , " + AccountEntry.TABLE_NAME
-                            + " ON " + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " = " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID
+                            + " ON " + TransactionEntry.TABLE_NAME + "_bak.account_uid = " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID
                             + " WHERE " + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " IS NOT NULL"
                     );
                     // drop backup transaction table

From 032b9b79d7ca66a3d5f4141ebf744b378c05705c Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Fri, 10 Oct 2014 21:25:15 +0800
Subject: [PATCH 08/15] delete all splits of a transaction

---
 app/src/org/gnucash/android/db/AccountsDbAdapter.java | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index 3ce9583d..a93a9f57 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -281,7 +281,11 @@ public boolean destructiveDeleteAccount(long rowId){
             }
             //delete splits in this account
             mDb.delete(SplitEntry.TABLE_NAME,
-                    SplitEntry.COLUMN_ACCOUNT_UID + "=?",
+                    SplitEntry.COLUMN_TRANSACTION_UID  + " IN ( SELECT DISTINCT "
+                    + TransactionEntry.TABLE_NAME + "_" + TransactionEntry.COLUMN_UID
+                    + " FROM trans_split_acct WHERE "
+                    + AccountEntry.TABLE_NAME + "_" + AccountEntry.COLUMN_UID
+                    + " = ? )",
                     new String[]{getAccountUID(rowId)});
             deleteRecord(AccountEntry.TABLE_NAME, rowId);
             mDb.setTransactionSuccessful();

From db4c848519b42830699bfdf070e3c1205f896274 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Sat, 11 Oct 2014 08:30:29 +0800
Subject: [PATCH 09/15] delete empty transactions

---
 app/src/org/gnucash/android/db/AccountsDbAdapter.java | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index a93a9f57..4d1d9043 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -279,6 +279,9 @@ public boolean destructiveDeleteAccount(long rowId){
                     }
                 }
             }
+            // TODO: with "ON DELETE CASCADE", the first two delete will not be necessary.
+            //       deleteRecord(AccountEntry.TABLE_NAME, rowId); will delete related
+            //       transactions and splits
             //delete splits in this account
             mDb.delete(SplitEntry.TABLE_NAME,
                     SplitEntry.COLUMN_TRANSACTION_UID  + " IN ( SELECT DISTINCT "
@@ -287,6 +290,14 @@ public boolean destructiveDeleteAccount(long rowId){
                     + AccountEntry.TABLE_NAME + "_" + AccountEntry.COLUMN_UID
                     + " = ? )",
                     new String[]{getAccountUID(rowId)});
+            // delete empty transactions
+            // trans_split_acct is an inner joint, empty transactions will
+            // not be selected in this view
+            mDb.delete(TransactionEntry.TABLE_NAME,
+                    TransactionEntry.COLUMN_UID  + " NOT IN ( SELECT DISTINCT "
+                            + TransactionEntry.TABLE_NAME + "_" + TransactionEntry.COLUMN_UID
+                            + " FROM trans_split_acct",
+                    null);
             deleteRecord(AccountEntry.TABLE_NAME, rowId);
             mDb.setTransactionSuccessful();
             return true;

From dc5a365ef654933696b2054c8cb3187a4943e544 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Sat, 11 Oct 2014 21:07:30 +0800
Subject: [PATCH 10/15] delete all splits and transaction

---
 app/src/org/gnucash/android/db/AccountsDbAdapter.java  |  2 +-
 app/src/org/gnucash/android/db/SplitsDbAdapter.java    | 18 ++++++++++++------
 .../org/gnucash/android/db/TransactionsDbAdapter.java  |  3 +--
 .../ui/transaction/TransactionsListFragment.java       |  4 +---
 4 files changed, 15 insertions(+), 12 deletions(-)

diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index 4d1d9043..98a79da0 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -296,7 +296,7 @@ public boolean destructiveDeleteAccount(long rowId){
             mDb.delete(TransactionEntry.TABLE_NAME,
                     TransactionEntry.COLUMN_UID  + " NOT IN ( SELECT DISTINCT "
                             + TransactionEntry.TABLE_NAME + "_" + TransactionEntry.COLUMN_UID
-                            + " FROM trans_split_acct",
+                            + " FROM trans_split_acct )",
                     null);
             deleteRecord(AccountEntry.TABLE_NAME, rowId);
             mDb.setTransactionSuccessful();
diff --git a/app/src/org/gnucash/android/db/SplitsDbAdapter.java b/app/src/org/gnucash/android/db/SplitsDbAdapter.java
index e01a93fb..aa333f0d 100644
--- a/app/src/org/gnucash/android/db/SplitsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/SplitsDbAdapter.java
@@ -515,13 +515,19 @@ public long getTransactionID(String transactionUID){
      * @param transactionId Database record ID of the transaction
      * @return <code>true</code> if at least one split was deleted, <code>false</code> otherwise.
      */
-    public boolean deleteSplitsForTransaction(long transactionId){
+    public boolean deleteSplitsForTransaction(long transactionId) {
         String trxUID = getTransactionUID(transactionId);
-        boolean result = mDb.delete(SplitEntry.TABLE_NAME,
-                SplitEntry.COLUMN_TRANSACTION_UID + "=?",
-                new String[]{trxUID}) > 0;
-        result &= deleteTransaction(transactionId);
-        return result;
+        mDb.beginTransaction();
+        try {
+            mDb.delete(SplitEntry.TABLE_NAME,
+                    SplitEntry.COLUMN_TRANSACTION_UID + "=?",
+                    new String[]{trxUID});
+            boolean result = deleteTransaction(transactionId);
+            mDb.setTransactionSuccessful();
+            return result;
+        } finally {
+            mDb.endTransaction();
+        }
     }
 
     /**
diff --git a/app/src/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
index 69675d11..abfc0eb6 100644
--- a/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -439,8 +439,7 @@ public String getUID(long transactionId){
     @Override
 	public boolean deleteRecord(long rowId){
 		Log.d(TAG, "Delete transaction with record Id: " + rowId);
-		return mSplitsDbAdapter.deleteSplitsForTransaction(rowId) &&
-                deleteRecord(TransactionEntry.TABLE_NAME, rowId);
+		return mSplitsDbAdapter.deleteSplitsForTransaction(rowId);
 	}
 	
 	/**
diff --git a/app/src/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index 337262b8..3b0620ef 100644
--- a/app/src/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -117,11 +117,9 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
 				return true;
 
 			case R.id.context_menu_delete:
-                SplitsDbAdapter splitsDbAdapter = new SplitsDbAdapter(getActivity());
 				for (long id : getListView().getCheckedItemIds()) {
-                    splitsDbAdapter.deleteSplitsForTransactionAndAccount(mTransactionsDbAdapter.getUID(id), mAccountUID);
+                    mTransactionsDbAdapter.deleteRecord(id);
 				}
-                splitsDbAdapter.close();
 				refresh();
 				mode.finish();
 				WidgetConfigurationActivity.updateAllWidgets(getActivity());

From 40d759d595cd33d11dd8d6eca1bc447ec1290b60 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Sat, 11 Oct 2014 22:08:58 +0800
Subject: [PATCH 11/15] FIX: add split will throw NPE

---
 .../android/ui/transaction/dialog/SplitEditorDialogFragment.java       | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/app/src/org/gnucash/android/ui/transaction/dialog/SplitEditorDialogFragment.java b/app/src/org/gnucash/android/ui/transaction/dialog/SplitEditorDialogFragment.java
index a150ca79..52ac40ed 100644
--- a/app/src/org/gnucash/android/ui/transaction/dialog/SplitEditorDialogFragment.java
+++ b/app/src/org/gnucash/android/ui/transaction/dialog/SplitEditorDialogFragment.java
@@ -229,7 +229,8 @@ public void onClick(View view) {
         updateTransferAccountsList(accountsSpinner);
         accountsSpinner.setOnItemSelectedListener(new TypeButtonLabelUpdater(splitTypeButton));
 
-        Currency accountCurrency = Currency.getInstance(mAccountsDbAdapter.getCurrencyCode(split.getAccountUID()));
+        Currency accountCurrency = Currency.getInstance(mAccountsDbAdapter.getCurrencyCode(
+                split == null ? mAccountUID : split.getAccountUID()));
         splitCurrencyTextView.setText(accountCurrency.getSymbol());
         splitTypeButton.setAmountFormattingListener(splitAmountEditText, splitCurrencyTextView);
         splitTypeButton.setChecked(mBaseAmount.signum() > 0);

From 555d4311e1f3d430cd3c00a447d8100eebb8742c Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Sat, 11 Oct 2014 23:43:19 +0800
Subject: [PATCH 12/15] Update transaction view when split type changes

---
 app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java | 1 +
 1 file changed, 1 insertion(+)

diff --git a/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index aa993df4..2a413acc 100644
--- a/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -720,6 +720,7 @@ public void setSplitList(List<Split> splitList, List<String> removedSplitUIDs){
         Money balance = Transaction.computeBalance(mAccountUID, mSplitsList);
 
         mAmountEditText.setText(balance.toPlainString());
+        mTransactionTypeButton.setChecked(balance.isNegative());
         //once we set the split list, do not allow direct editing of the total
         if (mSplitsList.size() > 1){
             mAmountEditText.setEnabled(false);

From cb860bc3cbb4eb96a44552bf18b8fcccea035345 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Sun, 12 Oct 2014 12:14:53 +0800
Subject: [PATCH 13/15] Set Transaction UID when set splitList

---
 app/src/org/gnucash/android/model/Transaction.java | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/app/src/org/gnucash/android/model/Transaction.java b/app/src/org/gnucash/android/model/Transaction.java
index 8e1cddc3..e993c955 100644
--- a/app/src/org/gnucash/android/model/Transaction.java
+++ b/app/src/org/gnucash/android/model/Transaction.java
@@ -186,6 +186,9 @@ private void initDefaults(){
      */
     public void setSplits(List<Split> splitList){
         mSplitList = splitList;
+        for (Split split : splitList) {
+            split.setTransactionUID(mUID);
+        }
     }
 
     /**

From beaf5875fe4f48cb8d292409249e2459fa231f47 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Wed, 15 Oct 2014 20:36:28 +0800
Subject: [PATCH 14/15] delete splits when transaction is saved.

---
 .../gnucash/android/db/TransactionsDbAdapter.java  | 34 +++++++++++++++++++---
 .../ui/transaction/TransactionFormFragment.java    | 16 ++++++----
 2 files changed, 41 insertions(+), 9 deletions(-)

diff --git a/app/src/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
index abfc0eb6..be24ba89 100644
--- a/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -22,9 +22,11 @@
 import android.content.ContentValues;
 import android.content.Context;
 import android.database.Cursor;
+import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteQueryBuilder;
 import android.database.sqlite.SQLiteStatement;
+import android.text.TextUtils;
 import android.util.Log;
 
 import org.gnucash.android.model.*;
@@ -86,16 +88,40 @@ public long addTransaction(Transaction transaction){
         contentValues.put(TransactionEntry.COLUMN_RECURRENCE_PERIOD, transaction.getRecurrencePeriod());
 
         Log.d(TAG, "Replacing transaction in db");
-        long rowId = mDb.replace(TransactionEntry.TABLE_NAME, null, contentValues);
+        long rowId = -1;
+        mDb.beginTransaction();
+        try {
+            rowId = mDb.replaceOrThrow(TransactionEntry.TABLE_NAME, null, contentValues);
 
-        if (rowId > 0){
             Log.d(TAG, "Adding splits for transaction");
+            ArrayList<String> splitUIDs = new ArrayList<String>(transaction.getSplits().size());
             for (Split split : transaction.getSplits()) {
-                mSplitsDbAdapter.addSplit(split);
+                contentValues.clear();
+                contentValues.put(SplitEntry.COLUMN_UID,        split.getUID());
+                contentValues.put(SplitEntry.COLUMN_AMOUNT,     split.getAmount().absolute().toPlainString());
+                contentValues.put(SplitEntry.COLUMN_TYPE,       split.getType().name());
+                contentValues.put(SplitEntry.COLUMN_MEMO,       split.getMemo());
+                contentValues.put(SplitEntry.COLUMN_ACCOUNT_UID, split.getAccountUID());
+                contentValues.put(SplitEntry.COLUMN_TRANSACTION_UID, split.getTransactionUID());
+                splitUIDs.add(split.getUID());
+
+                Log.d(TAG, "Replace transaction split in db");
+                mDb.replaceOrThrow(SplitEntry.TABLE_NAME, null, contentValues);
             }
             Log.d(TAG, transaction.getSplits().size() + " splits added");
+
+            long deleted = mDb.delete(SplitEntry.TABLE_NAME,
+                    SplitEntry.COLUMN_TRANSACTION_UID + " = ? AND "
+                            + SplitEntry.COLUMN_UID + " NOT IN ('" + TextUtils.join("' , '", splitUIDs) + "')",
+                    new String[]{transaction.getUID()});
+            Log.d(TAG, deleted + " splits deleted");
+            mDb.setTransactionSuccessful();
+        } catch (SQLException sqle) {
+            sqle.printStackTrace();
+        } finally {
+            mDb.endTransaction();
         }
-		return rowId;
+        return rowId;
 	}
 
     /**
diff --git a/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index abb5d813..723bd989 100644
--- a/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -182,6 +182,11 @@
     private String mAccountUID;
 
     private List<Split> mSplitsList = new ArrayList<Split>();
+    /**
+     * list to hold deleted splits. This split should only be deleted from
+     * DB when the transaction is saved.
+     */
+    private List<String> mDeletedSplitUIDList = new ArrayList<String>();
 
     /**
 	 * Create the view and retrieve references to the UI elements
@@ -671,6 +676,8 @@ private void saveNewTransaction() {
 		mTransaction.setTime(cal.getTimeInMillis());
 		mTransaction.setNote(notes);
 
+        // set as not exported.
+        mTransaction.setExported(false);
         //save the normal transaction first
         mTransactionsDbAdapter.addTransaction(mTransaction);
         scheduleRecurringTransaction();
@@ -761,11 +768,10 @@ public void setSplitList(List<Split> splitList, List<String> removedSplitUIDs){
             setAmountEditViewVisible(View.GONE);
         }
 
-        SplitsDbAdapter splitsDbAdapter = new SplitsDbAdapter(getActivity());
-        for (String removedSplitUID : removedSplitUIDs) {
-            splitsDbAdapter.deleteRecord(splitsDbAdapter.getID(removedSplitUID));
-        }
-        splitsDbAdapter.close();
+        // save the deleted UID list. Use add instead of assign in case this
+        // is called multiple times
+        // The splits will be actually deleted when the transaction is saved.
+        mDeletedSplitUIDList.addAll(removedSplitUIDs);
     }
 
     /**

From 163be8d7d4bd5e74dcc37645a71673abaa4469a6 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Wed, 15 Oct 2014 20:45:05 +0800
Subject: [PATCH 15/15] remove unused local variable

---
 .../android/ui/transaction/TransactionFormFragment.java        | 10 ----------
 1 file changed, 10 deletions(-)

diff --git a/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 723bd989..5fde6aa0 100644
--- a/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -182,11 +182,6 @@
     private String mAccountUID;
 
     private List<Split> mSplitsList = new ArrayList<Split>();
-    /**
-     * list to hold deleted splits. This split should only be deleted from
-     * DB when the transaction is saved.
-     */
-    private List<String> mDeletedSplitUIDList = new ArrayList<String>();
 
     /**
 	 * Create the view and retrieve references to the UI elements
@@ -767,11 +762,6 @@ public void setSplitList(List<Split> splitList, List<String> removedSplitUIDs){
             mAmountEditText.setEnabled(false);
             setAmountEditViewVisible(View.GONE);
         }
-
-        // save the deleted UID list. Use add instead of assign in case this
-        // is called multiple times
-        // The splits will be actually deleted when the transaction is saved.
-        mDeletedSplitUIDList.addAll(removedSplitUIDs);
     }
 
     /**
