From 7aa26184e24d32e335083775b631e8bf15408bdd Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 11 Jul 2012 00:40:53 +0200
Subject: [PATCH] Feature: Implemented bulk moving of transactions from one
 account to another

---
 GnucashMobile/res/layout/dialog_bulk_move.xml      |  69 ++++++++++++
 GnucashMobile/res/values/strings.xml               |   2 +
 .../gnucash/android/db/TransactionsDbAdapter.java  |  34 ++++++
 .../gnucash/android/ui/AccountsListFragment.java   |   5 +-
 .../gnucash/android/ui/BulkMoveDialogFragment.java | 124 +++++++++++++++++++++
 .../android/ui/TransactionsListFragment.java       |  32 +++++-
 6 files changed, 263 insertions(+), 3 deletions(-)
 create mode 100644 GnucashMobile/res/layout/dialog_bulk_move.xml
 create mode 100644 GnucashMobile/src/org/gnucash/android/ui/BulkMoveDialogFragment.java

diff --git a/GnucashMobile/res/layout/dialog_bulk_move.xml b/GnucashMobile/res/layout/dialog_bulk_move.xml
new file mode 100644
index 00000000..553f86c9
--- /dev/null
+++ b/GnucashMobile/res/layout/dialog_bulk_move.xml
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Written By: Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 Ngewi Fet
+ 
+ This file is part of Gnucash for Android
+ 
+ Gnucash for Android is free software; you can redistribute it and/or
+ modify it under the terms of the GNU General Public License as
+ published by the Free Software Foundation; either version 2 of
+ the License, or (at your option) any later version.
+ 
+ This program is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with this program; if not, contact:
+ 
+ Free Software Foundation           Voice:  +1-617-542-5942
+ 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ Boston, MA  02110-1301,  USA       gnu@gnu.org
+-->
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    
+    <TextView
+        android:text="@string/label_export_destination"
+        android:layout_height="wrap_content"
+        android:layout_width="wrap_content"
+        android:layout_marginBottom="-8dip"
+        style="@style/TextAppearance.EditTransaction_LabelSmall" />
+
+    <Spinner android:id="@+id/accounts_list_spinner"
+        android:layout_height="wrap_content" 
+        android:layout_width="match_parent"
+        android:padding="10dp"
+        android:minHeight="?android:attr/listPreferredItemHeight" 
+        />
+    
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="10dp"
+        android:orientation="horizontal" >
+
+        <Button
+            android:id="@+id/btn_cancel"
+            android:layout_width="0dp"            
+            android:layout_height="wrap_content"
+            android:padding="12dp"
+            android:layout_weight="1"       
+            android:drawableLeft="@drawable/navigation_cancel"     
+            android:text="@string/btn_cancel" />
+
+        <Button
+            android:id="@+id/btn_move"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:padding="12dp"
+            android:layout_weight="1"
+            android:drawableLeft="@drawable/content_copy"                        
+            android:text="@string/btn_move" />       
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/GnucashMobile/res/values/strings.xml b/GnucashMobile/res/values/strings.xml
index a1a006d7..adbb5d2f 100644
--- a/GnucashMobile/res/values/strings.xml
+++ b/GnucashMobile/res/values/strings.xml
@@ -69,5 +69,7 @@
         <item>Share file&#8230;</item>
         <item>SD Card</item>
     </string-array>
+    <string name="btn_move">Move</string>
+    <string name="title_move_transactions">Move transactions</string>
 
 </resources>
\ No newline at end of file
diff --git a/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java b/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
index b265e3ae..6608fcd2 100644
--- a/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -178,11 +178,21 @@ public Transaction buildTransactionInstance(Cursor c){
 		return transaction;
 	}
 	
+	/**
+	 * Deletes transaction record with id <code>rowId</code>
+	 * @param rowId Long database record id
+	 * @return <code>true</code> if deletion was successful, <code>false</code> otherwise
+	 */
 	public boolean deleteTransaction(long rowId){
 		Log.d(TAG, "Delete transaction with record Id: " + rowId);
 		return deleteRecord(DatabaseHelper.TRANSACTIONS_TABLE_NAME, rowId);
 	}
 	
+	/**
+	 * Deletes transaction record with unique ID <code>uid</code>
+	 * @param uid String unique ID of transaction
+	 * @return <code>true</code> if deletion was successful, <code>false</code> otherwise
+	 */
 	public boolean deleteTransaction(String uid){
 		return mDb.delete(DatabaseHelper.TRANSACTIONS_TABLE_NAME, 
 				DatabaseHelper.KEY_UID + "='" + uid + "'", null) > 0;
@@ -196,6 +206,30 @@ public int deleteAllTransactions(){
 		return mDb.delete(DatabaseHelper.TRANSACTIONS_TABLE_NAME, null, null);
 	}
 	
+	/**
+	 * Assigns transaction with id <code>rowId</code> to account with id <code>accountId</code>
+	 * @param rowId Record ID of the transaction to be assigned
+	 * @param accountId Record Id of the account to which the transaction will be assigned
+	 * @return Number of transactions affected
+	 */
+	public int moveTranscation(long rowId, long accountId){
+		Log.i(TAG, "Moving transaction " + rowId + " to account " + accountId);
+		String accountUID = getAccountUID(accountId);
+		ContentValues contentValue = new ContentValues();
+		contentValue.put(DatabaseHelper.KEY_ACCOUNT_UID, accountUID);
+		
+		return mDb.update(DatabaseHelper.TRANSACTIONS_TABLE_NAME, 
+				contentValue, 
+				DatabaseHelper.KEY_ROW_ID + "=" + rowId, 
+				null);
+	}
+
+	
+	/**
+	 * Returns the number of transactions belonging to account with id <code>accountId</code>
+	 * @param accountId Long ID of account
+	 * @return Number of transactions assigned to account with id <code>accountId</code>
+	 */
 	public int getTransactionsCount(long accountId){
 		Cursor cursor = fetchAllTransactionsForAccount(accountId);
 		int count = 0;
diff --git a/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java b/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
index 99af0407..81c9c5e8 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
@@ -356,8 +356,9 @@ public void showAddAccountDialog(long accountId) {
 	}
 
 	public void showExportDialog(){
-		FragmentTransaction ft = getFragmentManager().beginTransaction();
-	    Fragment prev = getFragmentManager().findFragmentByTag("dialog");
+		FragmentManager manager = getSherlockActivity().getSupportFragmentManager();
+		FragmentTransaction ft = manager.beginTransaction();
+	    Fragment prev = manager.findFragmentByTag("dialog");
 	    if (prev != null) {
 	        ft.remove(prev);
 	    }
diff --git a/GnucashMobile/src/org/gnucash/android/ui/BulkMoveDialogFragment.java b/GnucashMobile/src/org/gnucash/android/ui/BulkMoveDialogFragment.java
new file mode 100644
index 00000000..1dea3cfc
--- /dev/null
+++ b/GnucashMobile/src/org/gnucash/android/ui/BulkMoveDialogFragment.java
@@ -0,0 +1,124 @@
+/*
+ * Written By: Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2012 Ngewi Fet
+ *
+ * This file is part of Gnucash for Android
+ * 
+ * Gnucash for Android is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, contact:
+ *
+ * Free Software Foundation           Voice:  +1-617-542-5942
+ * 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ * Boston, MA  02110-1301,  USA       gnu@gnu.org
+ */
+
+package org.gnucash.android.ui;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.TransactionsDbAdapter;
+
+import android.database.Cursor;
+import android.os.Bundle;
+import android.support.v4.app.DialogFragment;
+import android.support.v4.app.Fragment;
+import android.support.v4.widget.SimpleCursorAdapter;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.Spinner;
+
+public class BulkMoveDialogFragment extends DialogFragment {
+
+	Spinner mDestinationAccountSpinner; 
+	Button mOkButton; 
+	Button mCancelButton; 
+	
+	long[] mTransactionIds = null;
+	private AccountsDbAdapter mAccountsDbAdapter;
+	
+	@Override
+	public View onCreateView(LayoutInflater inflater, ViewGroup container,
+			Bundle savedInstanceState) {		
+		View v = inflater.inflate(R.layout.dialog_bulk_move, container, false);
+		mDestinationAccountSpinner = (Spinner) v.findViewById(R.id.accounts_list_spinner);
+		mOkButton = (Button) v.findViewById(R.id.btn_move);
+		mCancelButton = (Button) v.findViewById(R.id.btn_cancel);
+		return v;
+	}
+	
+	@Override
+	public void onActivityCreated(Bundle savedInstanceState) {
+		super.onActivityCreated(savedInstanceState);
+		getDialog().setTitle(R.string.title_move_transactions);
+		
+		mTransactionIds = getArguments().getLongArray(TransactionsListFragment.SELECTED_TRANSACTION_IDS);
+		
+		mAccountsDbAdapter = new AccountsDbAdapter(getActivity());
+		Cursor cursor = mAccountsDbAdapter.fetchAllAccounts();
+		
+		String[] from = new String[] {DatabaseHelper.KEY_NAME};
+		int[] to = new int[] {android.R.id.text1};
+		SimpleCursorAdapter mCursorAdapter = new SimpleCursorAdapter(getActivity(), 
+				android.R.layout.simple_spinner_item, 
+				cursor,
+				from,
+				to, 
+				0);
+		mCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+		mDestinationAccountSpinner.setAdapter(mCursorAdapter);
+		setListeners();
+	}
+	
+	protected void setListeners(){
+		mCancelButton.setOnClickListener(new View.OnClickListener() {
+			
+			@Override
+			public void onClick(View v) {
+				dismiss();
+			}
+		});
+		
+		mOkButton.setOnClickListener(new View.OnClickListener() {
+			
+			@Override
+			public void onClick(View v) {
+				if (mTransactionIds == null){
+					dismiss();
+				}
+				
+				long accountId = mDestinationAccountSpinner.getSelectedItemId();
+				TransactionsDbAdapter trxnAdapter = new TransactionsDbAdapter(getActivity());
+				for (long trxnId : mTransactionIds) {
+					trxnAdapter.moveTranscation(trxnId, accountId);
+				}
+				trxnAdapter.close();
+				
+				Fragment f = getActivity()
+						.getSupportFragmentManager()
+						.findFragmentByTag(AccountsActivity.FRAGMENT_TRANSACTIONS_LIST);
+					
+				((TransactionsListFragment)f).refreshList();
+				dismiss();
+			}			
+		});
+	}
+
+	@Override
+	public void onDestroyView() {
+		super.onDestroyView();
+		mAccountsDbAdapter.close();
+	}
+}
diff --git a/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java b/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java
index 62496a81..195817cb 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java
@@ -38,6 +38,10 @@
 import android.content.Context;
 import android.database.Cursor;
 import android.os.Bundle;
+import android.support.v4.app.DialogFragment;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
 import android.support.v4.app.LoaderManager.LoaderCallbacks;
 import android.support.v4.content.Loader;
 import android.support.v4.widget.SimpleCursorAdapter;
@@ -67,6 +71,8 @@
 	public static final String SELECTED_ACCOUNT_ID = "selected_account_id";
 	public static final String SELECTED_ACCOUNT_NAME = "selected_account_name";
 	
+	public static final String SELECTED_TRANSACTION_IDS = "selected_transactions";
+	
 	private TransactionsDbAdapter mTransactionsDbAdapter;
 	private SimpleCursorAdapter mCursorAdapter;
 	private ActionMode mActionMode = null;
@@ -101,7 +107,8 @@ public void onDestroyActionMode(ActionMode mode) {
 		public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
 			switch (item.getItemId()) {
 			case R.id.context_menu_move_transactions:
-				//TODO: Move transactions to another account
+				showBulkMoveDialog();
+				mode.finish();
 				return true;
 
 			case R.id.context_menu_delete:
@@ -310,6 +317,29 @@ private void stopActionMode(){
 			mActionMode.finish();
 	}
 	
+	
+	protected void showBulkMoveDialog(){
+		FragmentManager manager = getActivity().getSupportFragmentManager();
+		FragmentTransaction ft = manager.beginTransaction();
+	    Fragment prev = manager.findFragmentByTag("bulk_move_dialog");
+	    if (prev != null) {
+	        ft.remove(prev);
+	    }
+	    ft.addToBackStack(null);
+
+	    // Create and show the dialog.
+	    DialogFragment bulkMoveFragment = new BulkMoveDialogFragment();
+	    Bundle args = new Bundle();
+	    long[] selectedIds = new long[mSelectedIds.size()]; 
+	    int i = 0;
+	    for (long l : mSelectedIds.values()) {
+			selectedIds[i++] = l;			
+		}
+	    args.putLongArray(SELECTED_TRANSACTION_IDS, selectedIds);
+	    bulkMoveFragment.setArguments(args);
+	    bulkMoveFragment.show(ft, "bulk_move_dialog");
+	}
+	
 	protected class TransactionsCursorAdapter extends SimpleCursorAdapter {
 		
 		public TransactionsCursorAdapter(Context context, int layout, Cursor c,
