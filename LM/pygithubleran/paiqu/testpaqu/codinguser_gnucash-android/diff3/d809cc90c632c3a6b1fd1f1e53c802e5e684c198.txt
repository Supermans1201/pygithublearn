From d809cc90c632c3a6b1fd1f1e53c802e5e684c198 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 17 Apr 2015 22:27:21 +0200
Subject: [PATCH] Delete all scheduled transactions when accounts are deleted

Improved: delete all accounts before import starts
---
 app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java     | 3 ++-
 app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java | 2 +-
 app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java   | 3 ++-
 app/src/main/java/org/gnucash/android/model/Transaction.java        | 5 +++--
 4 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index c2119380..4463837e 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -1246,12 +1246,13 @@ public static String getOpeningBalanceAccountFullName(){
     }
 
     /**
-	 * Deletes all accounts and their transactions (and their splits) from the database.
+	 * Deletes all accounts, transactions (and their splits) from the database.
      * Basically empties all 3 tables, so use with care ;)
 	 */
     @Override
 	public int deleteAllRecords(){
 		mDb.delete(TransactionEntry.TABLE_NAME, null, null); //this will take the splits along with it
+        mDb.delete(DatabaseSchema.ScheduledActionEntry.TABLE_NAME, null, null);
         return mDb.delete(AccountEntry.TABLE_NAME, null, null);
 	}
 
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index 378bdfac..76a28599 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -137,7 +137,7 @@ public long addTransaction(Transaction transaction){
      * @return Number of transactions inserted
      */
     public long bulkAddTransactions(List<Transaction> transactionList){
-        List<Split> splitList = new ArrayList<Split>(transactionList.size()*3);
+        List<Split> splitList = new ArrayList<>(transactionList.size()*3);
         long rowInserted = 0;
         try {
             mDb.beginTransaction();
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index e51b49d4..33838a34 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -182,6 +182,8 @@ private void init(@Nullable SQLiteDatabase db) {
         }
         mContent = new StringBuilder();
 
+        mAccountsDbAdapter.deleteAllRecords();
+
         mAccountList = new ArrayList<>();
         mTransactionList = new ArrayList<>();
         mScheduledActionsList = new ArrayList<>();
@@ -565,7 +567,6 @@ public void endDocument() throws SAXException {
         long startTime = System.nanoTime();
         mAccountsDbAdapter.beginTransaction();
         try {
-            mAccountsDbAdapter.deleteAllRecords();
             long nAccounts = mAccountsDbAdapter.bulkAddAccounts(mAccountList);
             Log.d("Handler:", String.format("%d accounts inserted", nAccounts));
             long nTransactions = mTransactionsDbAdapter.bulkAddTransactions(mTransactionList);
diff --git a/app/src/main/java/org/gnucash/android/model/Transaction.java b/app/src/main/java/org/gnucash/android/model/Transaction.java
index eb1c8739..c3a1d756 100644
--- a/app/src/main/java/org/gnucash/android/model/Transaction.java
+++ b/app/src/main/java/org/gnucash/android/model/Transaction.java
@@ -174,8 +174,9 @@ public void autoBalance(){
             Currency currentCurrency = split.getAmount().getCurrency();
             if (lastCurrency == null)
                 lastCurrency = currentCurrency;
-            else if (lastCurrency != currentCurrency){
-                return;
+
+            if (lastCurrency != currentCurrency){
+                return; //for now we will not autobalance multi-currency transactions
             }
         }
 
