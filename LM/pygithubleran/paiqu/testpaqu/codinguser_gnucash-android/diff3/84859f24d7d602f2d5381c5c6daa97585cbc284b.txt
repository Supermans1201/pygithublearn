From 84859f24d7d602f2d5381c5c6daa97585cbc284b Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Thu, 9 Oct 2014 23:13:54 +0800
Subject: [PATCH] fix split type

---
 app/src/org/gnucash/android/db/DatabaseHelper.java | 24 +++++++++++-----------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/app/src/org/gnucash/android/db/DatabaseHelper.java b/app/src/org/gnucash/android/db/DatabaseHelper.java
index c9c6c00a..f6107f1f 100644
--- a/app/src/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/org/gnucash/android/db/DatabaseHelper.java
@@ -285,26 +285,26 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
                             + SplitEntry.COLUMN_AMOUNT + " , "
                             + SplitEntry.COLUMN_ACCOUNT_UID + " , "
                             + SplitEntry.COLUMN_TRANSACTION_UID + " ) SELECT "
-                            // _ID, autogenerated
                             + "LOWER(HEX(RANDOMBLOB(16))) , "
-                            // COLUMN_MEMO, empty
-                            + "CASE WHEN " + TransactionEntry.TABLE_NAME + "_bak.type IN ( 'CASH' , 'BANK', 'ASSET', 'EXPENSE', 'RECEIVABLE', 'STOCK', 'MUTUAL' ) THEN CASE WHEN "
-                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'DEBIT' ELSE 'CREDIT' END ELSE CASE WHEN "
-                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'CREDIT' ELSE 'DEBIT' END END , "
+                            + "CASE WHEN " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_TYPE + " IN ( 'CASH' , 'BANK', 'ASSET', 'EXPENSE', 'RECEIVABLE', 'STOCK', 'MUTUAL' ) THEN CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'CREDIT' ELSE 'DEBIT' END ELSE CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'DEBIT' ELSE 'CREDIT' END END , "
                             + "ABS ( " + TransactionEntry.TABLE_NAME + "_bak.amount ) , "
                             + TransactionEntry.TABLE_NAME + "_bak.account_uid , "
                             + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_UID
-                            + " FROM " + TransactionEntry.TABLE_NAME + "_bak UNION SELECT "
-                            // _ID, autogenerated
+                            + " FROM " + TransactionEntry.TABLE_NAME + "_bak , " + AccountEntry.TABLE_NAME
+                            + " ON " + TransactionEntry.TABLE_NAME + "_bak.account_uid = " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID
+                            + " UNION SELECT "
                             + "LOWER(HEX(RANDOMBLOB(16))) AS " + SplitEntry.COLUMN_UID + " , "
-                            // COLUMN_MEMO, empty
-                            + "CASE WHEN " + TransactionEntry.TABLE_NAME + "_bak.type IN ( 'CASH' , 'BANK', 'ASSET', 'EXPENSE', 'RECEIVABLE', 'STOCK', 'MUTUAL' ) THEN CASE WHEN "
-                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'CREDIT' ELSE 'DEBIT' END ELSE CASE WHEN "
-                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'DEBIT' ELSE 'CREDIT' END END , "
+                            + "CASE WHEN " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_TYPE + " IN ( 'CASH' , 'BANK', 'ASSET', 'EXPENSE', 'RECEIVABLE', 'STOCK', 'MUTUAL' ) THEN CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'DEBIT' ELSE 'CREDIT' END ELSE CASE WHEN "
+                                    + SplitEntry.COLUMN_AMOUNT + " < 0 THEN 'CREDIT' ELSE 'DEBIT' END END , "
                             + "ABS ( " + TransactionEntry.TABLE_NAME + "_bak.amount ) , "
                             + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " , "
                             + TransactionEntry.TABLE_NAME + "_baK." + TransactionEntry.COLUMN_UID
-                            + " FROM " + TransactionEntry.TABLE_NAME + "_bak WHERE " + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " IS NOT NULL"
+                            + " FROM " + TransactionEntry.TABLE_NAME + "_bak , " + AccountEntry.TABLE_NAME
+                            + " ON " + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " = " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID
+                            + " WHERE " + TransactionEntry.TABLE_NAME + "_bak." + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " IS NOT NULL"
                     );
                     // drop backup transaction table
                     db.execSQL("DROP TABLE " + TransactionEntry.TABLE_NAME + "_bak");
