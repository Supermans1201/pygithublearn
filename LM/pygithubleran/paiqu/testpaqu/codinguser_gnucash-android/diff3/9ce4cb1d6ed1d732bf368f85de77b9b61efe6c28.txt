From 9ce4cb1d6ed1d732bf368f85de77b9b61efe6c28 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 1 Nov 2012 16:15:19 +0100
Subject: [PATCH] Completed ActionBar list navigation for Transactions Code
 refactoring

---
 .../ui/transactions/NewTransactionFragment.java    |  19 +-
 .../ui/transactions/TransactionsActivity.java      | 195 +++++++++++++--------
 .../ui/transactions/TransactionsListFragment.java  |   9 +-
 3 files changed, 141 insertions(+), 82 deletions(-)

diff --git a/GnucashMobile/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java b/GnucashMobile/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java
index 89f1c3f9..af6154ed 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java
@@ -212,7 +212,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		ActionBar actionBar = getSherlockActivity().getSupportActionBar();
 		actionBar.setHomeButtonEnabled(true);
 		actionBar.setDisplayHomeAsUpEnabled(true);
-		actionBar.setTitle(R.string.title_add_transaction);
+		actionBar.setDisplayShowTitleEnabled(false);
 		
 		String[] from = new String[] {DatabaseHelper.KEY_NAME};
 		int[] to = new int[] {android.R.id.text1};
@@ -301,13 +301,9 @@ private void initalizeViews() {
 		if (typePref.equals("CREDIT")){
 			mTransactionTypeButton.setChecked(false);
 		}
-		
+				
 		final long accountId = getArguments().getLong(TransactionsListFragment.SELECTED_ACCOUNT_ID);
-		final int count = mCursorAdapter.getCount();
-		for (int pos = 0; pos < count; pos++) {
-			if (mCursorAdapter.getItemId(pos) == accountId)
-				mAccountsSpinner.setSelection(pos);
-		}
+		refreshSelectedAccount(accountId);
 		
 		String code = Money.DEFAULT_CURRENCY_CODE;
 		if (accountId != 0)
@@ -318,6 +314,15 @@ private void initalizeViews() {
 		mCurrencyTextView.setText(accountCurrency.getSymbol(Locale.getDefault()));
 	}
 	
+	public void refreshSelectedAccount(long accountId){
+		for (int pos = 0; pos < mCursorAdapter.getCount(); pos++) {
+			if (mCursorAdapter.getItemId(pos) == accountId){
+				mAccountsSpinner.setSelection(pos);				
+				break;
+			}
+		}
+	}
+	
 	/**
 	 * Sets click listeners for the dialog buttons
 	 */
diff --git a/GnucashMobile/src/org/gnucash/android/ui/transactions/TransactionsActivity.java b/GnucashMobile/src/org/gnucash/android/ui/transactions/TransactionsActivity.java
index 49d3d38a..78898298 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/transactions/TransactionsActivity.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/transactions/TransactionsActivity.java
@@ -70,75 +70,56 @@
 	 */
 	private long mAccountId 	= 0;
 		
-	private OnNavigationListener mOnNavigationListener = new OnNavigationListener() {
+	/**
+	 * Flag which is used to determine if the activity is running or not. 
+	 * Basically if onCreate has already been called or not. It is used
+	 * to determine if to call addToBackStack() for fragments. When adding 
+	 * the very first fragment, it should not be added to the backstack.
+	 * @see #showTransactionEditFragment(Bundle)
+	 */
+	private boolean mActivityRunning = false;
+	
+	private OnNavigationListener mTransactionListNavigationListener = new OnNavigationListener() {
 
 		  @Override
 		  public boolean onNavigationItemSelected(int position, long itemId) {
-		    //only when the transaction activity is opened for the 1st time
-		    long accountId = mAccountId == 0 ? itemId : mAccountId;
-		    mAccountId = 0;
+		    mAccountId = itemId;
 		    
 		    FragmentManager fragmentManager = getSupportFragmentManager();
 
+			NewTransactionFragment newTransactionFragment = (NewTransactionFragment) fragmentManager
+					.findFragmentByTag(TransactionsActivity.FRAGMENT_NEW_TRANSACTION);			
+			if (newTransactionFragment != null){
+				newTransactionFragment.refreshSelectedAccount(itemId);
+				return true;
+			}
+			
 			TransactionsListFragment transactionsListFragment = (TransactionsListFragment) fragmentManager
-					.findFragmentByTag(FRAGMENT_TRANSACTIONS_LIST);
-
-			if (transactionsListFragment == null) {
-				FragmentTransaction fragmentTransaction = fragmentManager
-						.beginTransaction();
-				transactionsListFragment = new TransactionsListFragment();
-				Bundle args = new Bundle();
-				args.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID,
-						accountId);
-				transactionsListFragment.setArguments(args);
-				Log.i(TAG, "Opening transactions for account id " +  accountId);
-
-				fragmentTransaction.add(R.id.fragment_container,
-						transactionsListFragment, FRAGMENT_TRANSACTIONS_LIST);
-							
-				fragmentTransaction.commit();
-			} else
-				transactionsListFragment.refreshList(accountId);
+					.findFragmentByTag(FRAGMENT_TRANSACTIONS_LIST);						
+			if (transactionsListFragment != null) {
+				transactionsListFragment.refreshList(itemId);
+			}
+				
 		    return true;
 		  }
 	};
-		
+
+	private AccountsDbAdapter mAccountsDbAdapter;
+
+	private SpinnerAdapter mSpinnerAdapter;
+				
 	@Override
 	protected void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
 		setContentView(R.layout.activity_transactions);
-		
+
 		final Intent intent = getIntent();
 		mAccountId = intent.getLongExtra(
-				TransactionsListFragment.SELECTED_ACCOUNT_ID, -1);	
-		
-		AccountsDbAdapter accountsDbAdapter = new AccountsDbAdapter(this);
-		Cursor accountsCursor = accountsDbAdapter.fetchAllAccounts();
-		SpinnerAdapter mSpinnerAdapter = new SimpleCursorAdapter(
-				getSupportActionBar().getThemedContext(),
-				R.layout.sherlock_spinner_item,
-				accountsCursor,
-				new String[]{DatabaseHelper.KEY_NAME},
-				new int[]{android.R.id.text1},
-				0);
-		((ResourceCursorAdapter) mSpinnerAdapter).setDropDownViewResource(R.layout.sherlock_spinner_dropdown_item);
-		
-		ActionBar actionBar = getSupportActionBar();
-		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
-		actionBar.setListNavigationCallbacks(mSpinnerAdapter, mOnNavigationListener);
-		
-		int i = 0;
-		while(accountsCursor.moveToNext()){
-			long id = accountsCursor.getLong(DatabaseAdapter.COLUMN_ROW_ID);
-			if (mAccountId == id){
-				actionBar.setSelectedNavigationItem(i);				
-				break;
-			}
-			++i;
-		}
-		
+				TransactionsListFragment.SELECTED_ACCOUNT_ID, -1);
+
+		setupActionBarNavigation();
 		
-		if (intent.getAction().equals(Intent.ACTION_INSERT_OR_EDIT)) {			
+		if (intent.getAction().equals(Intent.ACTION_INSERT_OR_EDIT)) {
 			long transactionId = intent.getLongExtra(
 					NewTransactionFragment.SELECTED_TRANSACTION_ID, -1);
 			if (transactionId <= 0) {
@@ -146,9 +127,72 @@ protected void onCreate(Bundle savedInstanceState) {
 			} else {
 				editTransaction(transactionId);
 			}
+		} else {	//load the transactions list					
+			FragmentManager fragmentManager = getSupportFragmentManager();
+			TransactionsListFragment transactionsListFragment = (TransactionsListFragment) fragmentManager
+					.findFragmentByTag(FRAGMENT_TRANSACTIONS_LIST);
+			
+			FragmentTransaction fragmentTransaction = fragmentManager
+					.beginTransaction();
+			transactionsListFragment = new TransactionsListFragment();
+			Bundle args = new Bundle();
+			args.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID,
+					mAccountId);
+			transactionsListFragment.setArguments(args);
+			Log.i(TAG, "Opening transactions for account id " +  mAccountId);
+
+			fragmentTransaction.replace(R.id.fragment_container,
+					transactionsListFragment, FRAGMENT_TRANSACTIONS_LIST);
+						
+			fragmentTransaction.commit();
 		}
-	}	
 
+		// done creating, activity now running
+		mActivityRunning = true;
+	}
+
+	/**
+	 * Set up action bar navigation list and listener callbacks
+	 */
+	private void setupActionBarNavigation() {
+		// set up spinner adapter for navigation list
+		mAccountsDbAdapter = new AccountsDbAdapter(this);
+		Cursor accountsCursor = mAccountsDbAdapter.fetchAllAccounts();
+		mSpinnerAdapter = new SimpleCursorAdapter(getSupportActionBar()
+				.getThemedContext(), R.layout.sherlock_spinner_item,
+				accountsCursor, new String[] { DatabaseHelper.KEY_NAME },
+				new int[] { android.R.id.text1 }, 0);
+		((ResourceCursorAdapter) mSpinnerAdapter)
+				.setDropDownViewResource(R.layout.sherlock_spinner_dropdown_item);
+
+		ActionBar actionBar = getSupportActionBar();
+		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
+		actionBar.setListNavigationCallbacks(mSpinnerAdapter,
+				mTransactionListNavigationListener);
+		
+		updateNavigationSelection();
+	}
+	
+	/**
+	 * Updates the action bar navigation list selection to that of the current account
+	 * whose transactions are being displayed/manipulated
+	 */
+	public void updateNavigationSelection() {
+		// set the selected item in the spinner
+		int i = 0;
+		Cursor accountsCursor = mAccountsDbAdapter.fetchAllAccounts();
+		accountsCursor.moveToFirst();
+		do {
+			long id = accountsCursor.getLong(DatabaseAdapter.COLUMN_ROW_ID);
+			if (mAccountId == id) {
+				getSupportActionBar().setSelectedNavigationItem(i);
+				break;
+			}
+			++i;
+		} while (accountsCursor.moveToNext());
+
+	}
+	
 	@Override
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
@@ -163,7 +207,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
 	        	accountsActivityIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
 	        	accountsActivityIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 	        	startActivity(accountsActivityIntent);
-	        	overridePendingTransition(android.R.anim.slide_in_left, android.R.anim.slide_out_right);
 	        	finish();
 	        }
 	        return true;
@@ -173,6 +216,12 @@ public boolean onOptionsItemSelected(MenuItem item) {
 		}
 	}
 		
+	@Override
+	protected void onDestroy() {
+		super.onDestroy();
+		mAccountsDbAdapter.close();
+	}
+	
 	/**
 	 * Opens a fragment to create a new transaction. 
 	 * Is called from the XML views
@@ -208,37 +257,37 @@ protected void showTransactionsList(){
 		}
 	}
 	
-	@Override
-	public void createNewTransaction(long accountRowId) {
+	/**
+	 * Loads the transaction insert/edit fragment and passes the arguments
+	 * @param args Bundle arguments to be passed to the fragment
+	 */
+	private void showTransactionEditFragment(Bundle args){
 		FragmentManager fragmentManager = getSupportFragmentManager();
 		FragmentTransaction fragmentTransaction = fragmentManager
 				.beginTransaction();
-		NewTransactionFragment newTransactionFragment = new NewTransactionFragment();
-		Bundle args = new Bundle();
-		args.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID, accountRowId);		
+				
+		NewTransactionFragment newTransactionFragment = new NewTransactionFragment();	
 		newTransactionFragment.setArguments(args);
 		
 		fragmentTransaction.replace(R.id.fragment_container,
 				newTransactionFragment, TransactionsActivity.FRAGMENT_NEW_TRANSACTION);
-
-		fragmentTransaction.addToBackStack(null);
+		
+		if (mActivityRunning)
+			fragmentTransaction.addToBackStack(null);
 		fragmentTransaction.commit();
 	}
+	
+	@Override
+	public void createNewTransaction(long accountRowId) {
+		Bundle args = new Bundle();
+		args.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID, accountRowId);		
+		showTransactionEditFragment(args);
+	}
 
 	@Override
 	public void editTransaction(long transactionId){
-		FragmentManager fragmentManager = getSupportFragmentManager();
-		FragmentTransaction fragmentTransaction = fragmentManager
-				.beginTransaction();
-		NewTransactionFragment newTransactionFragment = new NewTransactionFragment();
 		Bundle args = new Bundle();
-		args.putLong(NewTransactionFragment.SELECTED_TRANSACTION_ID, transactionId);		
-		newTransactionFragment.setArguments(args);
-		
-		fragmentTransaction.replace(R.id.fragment_container,
-				newTransactionFragment, TransactionsActivity.FRAGMENT_NEW_TRANSACTION);
-
-		fragmentTransaction.addToBackStack(null);	
-		fragmentTransaction.commit();
+		args.putLong(NewTransactionFragment.SELECTED_TRANSACTION_ID, transactionId);
+		showTransactionEditFragment(args);
 	}
 }
diff --git a/GnucashMobile/src/org/gnucash/android/ui/transactions/TransactionsListFragment.java b/GnucashMobile/src/org/gnucash/android/ui/transactions/TransactionsListFragment.java
index 8c43a37e..b8703507 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/transactions/TransactionsListFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/transactions/TransactionsListFragment.java
@@ -202,7 +202,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		
 		ActionBar aBar = getSherlockActivity().getSupportActionBar();
-//		aBar.setTitle(name);
 		aBar.setDisplayShowTitleEnabled(false);
 		aBar.setDisplayHomeAsUpEnabled(true);
 
@@ -215,7 +214,7 @@ public void refreshList(long accountId){
 		mAccountID = accountId;
 		refreshList();
 	}
-		
+	
 	public void refreshList(){
 		getLoaderManager().restartLoader(0, null, this);
 		
@@ -239,6 +238,12 @@ public void onAttach(Activity activity) {
 	}
 	
 	@Override
+	public void onResume() {
+		super.onResume();
+		((TransactionsActivity)getSherlockActivity()).updateNavigationSelection();
+	}
+	
+	@Override
 	public void onDestroy() {
 		super.onDestroy();
 		mTransactionsDbAdapter.close();
