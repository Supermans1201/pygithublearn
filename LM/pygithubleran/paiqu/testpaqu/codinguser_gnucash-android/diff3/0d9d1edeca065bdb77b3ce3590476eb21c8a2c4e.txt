From 039967076e9ccd569d8d7d208e9cd03c6f6b1959 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 29 Aug 2015 20:55:47 +0300
Subject: [PATCH 1/2] Support time range for bar/line char

---
 .../android/ui/report/BarChartFragment.java        | 23 ++++++++++++++-----
 .../android/ui/report/LineChartFragment.java       | 26 +++++++++++++++++-----
 .../gnucash/android/ui/report/ReportsActivity.java |  2 +-
 3 files changed, 39 insertions(+), 12 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
index fb341d5e..0c44d509 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
@@ -30,9 +30,6 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.ArrayAdapter;
-import android.widget.Spinner;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -240,7 +237,13 @@ private BarData getEmptyData() {
     private LocalDate getStartDate(AccountType accountType) {
         TransactionsDbAdapter adapter = TransactionsDbAdapter.getInstance();
         String code = mCurrency.getCurrencyCode();
-        LocalDate startDate = new LocalDate(adapter.getTimestampOfEarliestTransaction(accountType, code)).withDayOfMonth(1);
+        LocalDate startDate;
+        if (mReportStartTime == -1) {
+            startDate = new LocalDate(adapter.getTimestampOfEarliestTransaction(accountType, code));
+        } else {
+            startDate = new LocalDate(mReportStartTime);
+        }
+        startDate = startDate.withDayOfMonth(1);
         Log.d(TAG, accountType + " X-axis star date: " + startDate.toString("dd MM yyyy"));
         return startDate;
     }
@@ -253,7 +256,13 @@ private LocalDate getStartDate(AccountType accountType) {
     private LocalDate getEndDate(AccountType accountType) {
         TransactionsDbAdapter adapter = TransactionsDbAdapter.getInstance();
         String code = mCurrency.getCurrencyCode();
-        LocalDate endDate = new LocalDate(adapter.getTimestampOfLatestTransaction(accountType, code)).withDayOfMonth(1);
+        LocalDate endDate;
+        if (mReportEndTime == -1) {
+            endDate = new LocalDate(adapter.getTimestampOfLatestTransaction(accountType, code));
+        } else {
+            endDate = new LocalDate(mReportEndTime);
+        }
+        endDate = endDate.withDayOfMonth(1);
         Log.d(TAG, accountType + " X-axis end date: " + endDate.toString("dd MM yyyy"));
         return endDate;
     }
@@ -315,7 +324,9 @@ private void setCustomLegend() {
     public void onTimeRangeUpdated(long start, long end) {
         mReportStartTime = start;
         mReportEndTime = end;
-        //TODO: update the bar chart to use the groupInterval
+
+        mChart.setData(getData(((ReportsActivity) getActivity()).getAccountType()));
+        displayChart();
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
index 1ba676bf..9c5a6863 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
@@ -169,8 +169,15 @@ public void onResume() {
     private LineData getData(List<AccountType> accountTypeList) {
         calculateEarliestAndLatestTimestamps(accountTypeList);
 
-        LocalDate startDate = new LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1);
-        LocalDate endDate = new LocalDate(mLatestTransactionTimestamp).withDayOfMonth(1);
+        LocalDate startDate;
+        LocalDate endDate;
+        if (mReportStartTime == -1 && mReportEndTime == -1) {
+            startDate = new LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1);
+            endDate = new LocalDate(mLatestTransactionTimestamp).withDayOfMonth(1);
+        } else {
+            startDate = new LocalDate(mReportStartTime).withDayOfMonth(1);
+            endDate = new LocalDate(mReportEndTime).withDayOfMonth(1);
+        }
         List<String> xValues = new ArrayList<>();
         while (!startDate.isAfter(endDate)) {
             xValues.add(startDate.toString(X_AXIS_PATTERN));
@@ -232,8 +239,15 @@ private LineData getEmptyData() {
             }
         }
 
-        LocalDateTime earliest = new LocalDateTime(mEarliestTimestampsMap.get(accountType));
-        LocalDateTime latest = new LocalDateTime(mLatestTimestampsMap.get(accountType));
+        LocalDateTime earliest;
+        LocalDateTime latest;
+        if (mReportStartTime == -1 && mReportEndTime == -1) {
+            earliest = new LocalDateTime(mEarliestTimestampsMap.get(accountType));
+            latest = new LocalDateTime(mLatestTimestampsMap.get(accountType));
+        } else {
+            earliest = new LocalDateTime(mReportStartTime);
+            latest = new LocalDateTime(mReportEndTime);
+        }
         Log.d(TAG, "Earliest " + accountType + " date " + earliest.toString("dd MM yyyy"));
         Log.d(TAG, "Latest " + accountType + " date " + latest.toString("dd MM yyyy"));
         int months = Months.monthsBetween(earliest.withDayOfMonth(1).withMillisOfDay(0),
@@ -300,7 +314,9 @@ private int getXAxisOffset(AccountType accountType) {
     public void onTimeRangeUpdated(long start, long end) {
         mReportStartTime = start;
         mReportEndTime = end;
-        //TODO: Update chart
+
+        mChart.setData(getData(new ArrayList<>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
+        mChart.invalidate();
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index 4475f0ed..e6f7f1a9 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -67,7 +67,7 @@
             Color.parseColor("#f9cd04"), Color.parseColor("#5f33a8"), Color.parseColor("#e005b6"),
             Color.parseColor("#17d6ed"), Color.parseColor("#e4a9a2"), Color.parseColor("#8fe6cd"),
             Color.parseColor("#8b48fb"), Color.parseColor("#343a36"), Color.parseColor("#6decb1"),
-            Color.parseColor("#a6dcfd"), Color.parseColor("#5c3378"), Color.parseColor("#a6dcfd"),
+            Color.parseColor("#f0f8ff"), Color.parseColor("#5c3378"), Color.parseColor("#a6dcfd"),
             Color.parseColor("#ba037c"), Color.parseColor("#708809"), Color.parseColor("#32072c"),
             Color.parseColor("#fddef8"), Color.parseColor("#fa0e6e"), Color.parseColor("#d9e7b5")
     };

From 296fae95fc706f6d40e0612cd5333e3bac5e10b7 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 29 Aug 2015 21:11:26 +0300
Subject: [PATCH 2/2] Fixed time range

For last 3 months was used a formula x - 3. For example if the current month is August the 8th month of the year than 8 - 3 = 5. Thus data shows for May, June, July and August. So for the last 3 month we should subtract 2, for the last 6 months subtract 5, for the last year subtract 11.
---
 .../main/java/org/gnucash/android/ui/report/ReportsActivity.java  | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index e6f7f1a9..6ce845ee 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -253,14 +253,14 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
                 mReportStartTime = new DateTime().dayOfMonth().withMinimumValue().toDate().getTime();
                 mReportEndTime = new DateTime().dayOfMonth().withMaximumValue().toDate().getTime();
                 break;
-            case 2:
-                mReportStartTime = new LocalDate().minusMonths(3).toDate().getTime();
+            case 2: // last 3 months. x-2, x-1, x
+                mReportStartTime = new LocalDate().minusMonths(2).toDate().getTime();
                 break;
             case 3:
-                mReportStartTime = new LocalDate().minusMonths(6).toDate().getTime();
+                mReportStartTime = new LocalDate().minusMonths(5).toDate().getTime();
                 break;
             case 4:
-                mReportStartTime = new LocalDate().minusMonths(12).toDate().getTime();
+                mReportStartTime = new LocalDate().minusMonths(11).toDate().getTime();
                 break;
             case 5:
                 String mCurrencyCode = PreferenceManager.getDefaultSharedPreferences(this).getString(getString(R.string.key_report_currency), Money.DEFAULT_CURRENCY_CODE);
