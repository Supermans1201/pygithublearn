From a8959f0a3b3cc54d04b82bdf4cdf01e4c1692f7e Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Sun, 13 Sep 2015 16:04:16 +0800
Subject: [PATCH] propagate default transfer account in account edit

---
 .../android/ui/account/AccountFormFragment.java    | 30 ++++++++++++++++------
 1 file changed, 22 insertions(+), 8 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 437af5d4..e4a4fc71 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -405,9 +405,23 @@ private void initializeViewsWithAccount(Account account){
         if (account.getDescription() != null)
             mDescriptionEditText.setText(account.getDescription());
 
-        if (mUseDoubleEntry && account.getDefaultTransferAccountUID() != null) {
-            long doubleDefaultAccountId = mAccountsDbAdapter.getID(account.getDefaultTransferAccountUID());
-            setDefaultTransferAccountSelection(doubleDefaultAccountId);
+        if (mUseDoubleEntry) {
+            if (account.getDefaultTransferAccountUID() != null) {
+                long doubleDefaultAccountId = mAccountsDbAdapter.getID(account.getDefaultTransferAccountUID());
+                setDefaultTransferAccountSelection(doubleDefaultAccountId, true);
+            } else {
+                String currentAccountUID = account.getParentUID();
+                long defaultTransferAccountID = 0;
+                String rootAccountUID = mAccountsDbAdapter.getOrCreateGnuCashRootAccountUID();
+                while (!currentAccountUID.equals(rootAccountUID)) {
+                    defaultTransferAccountID = mAccountsDbAdapter.getDefaultTransferAccountID(mAccountsDbAdapter.getID(currentAccountUID));
+                    if (defaultTransferAccountID > 0) {
+                        setDefaultTransferAccountSelection(defaultTransferAccountID, false);
+                        break; //we found a parent with default transfer setting
+                    }
+                    currentAccountUID = mAccountsDbAdapter.getParentAccountUID(currentAccountUID);
+                }
+            }
         }
 
         mPlaceholderCheckBox.setChecked(account.isPlaceholderAccount());
@@ -506,15 +520,15 @@ private void setParentAccountSelection(long parentAccountId){
      * Selects the account with ID <code>parentAccountId</code> in the default transfer account spinner
      * @param defaultTransferAccountId Record ID of parent account to be selected
      */
-    private void setDefaultTransferAccountSelection(long defaultTransferAccountId){
-        if (defaultTransferAccountId > 0){
-            mDefaultTransferAccountCheckBox.setChecked(true);
-            mDefaulTransferAccountSpinner.setEnabled(true);
+    private void setDefaultTransferAccountSelection(long defaultTransferAccountId, boolean enableTransferAccount) {
+        if (defaultTransferAccountId > 0) {
+            mDefaultTransferAccountCheckBox.setChecked(enableTransferAccount);
+            mDefaulTransferAccountSpinner.setEnabled(enableTransferAccount);
         } else
             return;
 
         for (int pos = 0; pos < mDefaultTransferAccountCursorAdapter.getCount(); pos++) {
-            if (mDefaultTransferAccountCursorAdapter.getItemId(pos) == defaultTransferAccountId){
+            if (mDefaultTransferAccountCursorAdapter.getItemId(pos) == defaultTransferAccountId) {
                 mDefaulTransferAccountSpinner.setSelection(pos);
                 break;
             }
