From 4ac445cf62d8768b1c632eb1f6c42a21ab1b36b2 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 1 Sep 2015 21:14:03 +0200
Subject: [PATCH] Merged scheduled transactions and scheduled exports into one
 activity with tabs

Refactored scheduled transactions and scheduled export lists into one ScheduledActionsList
---
 app/src/main/AndroidManifest.xml                   |  15 +-
 .../org/gnucash/android/ui/BaseDrawerActivity.java |  14 +-
 .../java/org/gnucash/android/ui/FormActivity.java  |   2 +-
 .../android/ui/account/AccountsActivity.java       |  34 +-
 .../ui/export/ScheduledExportListFragment.java     | 381 ---------------------
 .../ui/transaction/ScheduledActionsActivity.java   | 121 ++++---
 ...ment.java => ScheduledActionsListFragment.java} | 243 +++++++++++--
 .../ui/transaction/TransactionInfoActivity.java    |   2 +-
 .../ui/transaction/TransactionsActivity.java       |   3 +-
 .../main/res/drawable-hdpi/ic_add_white_24dp.png   | Bin 0 -> 127 bytes
 .../main/res/drawable-mdpi/ic_add_white_24dp.png   | Bin 0 -> 88 bytes
 .../main/res/drawable-xhdpi/ic_add_white_24dp.png  | Bin 0 -> 97 bytes
 .../main/res/drawable-xxhdpi/ic_add_white_24dp.png | Bin 0 -> 97 bytes
 .../res/drawable-xxxhdpi/ic_add_white_24dp.png     | Bin 0 -> 102 bytes
 app/src/main/res/layout/activity_accounts.xml      |   2 +-
 app/src/main/res/layout/activity_form.xml          |  10 +-
 .../main/res/layout/activity_scheduled_events.xml  |  41 ++-
 .../main/res/layout/activity_transaction_info.xml  |   4 +-
 app/src/main/res/layout/toolbar.xml                |  12 +
 .../res/layout/toolbar_transactions_activity.xml   |   2 +-
 app/src/main/res/menu/nav_drawer_menu.xml          |   7 +-
 app/src/main/res/menu/scheduled_export_actions.xml |   2 +-
 app/src/main/res/values-de/strings.xml             |   2 +
 app/src/main/res/values-el/strings.xml             |   2 +
 app/src/main/res/values-es-rMX/strings.xml         |   2 +
 app/src/main/res/values-es/strings.xml             |   2 +
 app/src/main/res/values-fr/strings.xml             |   2 +
 app/src/main/res/values-hu/strings.xml             |   2 +
 app/src/main/res/values-it/strings.xml             |   2 +
 app/src/main/res/values-nb/strings.xml             |   2 +
 app/src/main/res/values-nl/strings.xml             |   2 +
 app/src/main/res/values-pl/strings.xml             |   2 +
 app/src/main/res/values-pt-rBR/strings.xml         |   2 +
 app/src/main/res/values-ru/strings.xml             |   2 +
 app/src/main/res/values-uk/strings.xml             |   2 +
 app/src/main/res/values-zh-rTW/strings.xml         |   2 +
 app/src/main/res/values-zh/strings.xml             |   2 +
 app/src/main/res/values/strings.xml                |  10 +-
 38 files changed, 399 insertions(+), 536 deletions(-)
 delete mode 100644 app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
 rename app/src/main/java/org/gnucash/android/ui/transaction/{ScheduledTransactionsListFragment.java => ScheduledActionsListFragment.java} (59%)
 create mode 100644 app/src/main/res/drawable-hdpi/ic_add_white_24dp.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_add_white_24dp.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_add_white_24dp.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_add_white_24dp.png
 create mode 100644 app/src/main/res/drawable-xxxhdpi/ic_add_white_24dp.png
 create mode 100644 app/src/main/res/layout/toolbar.xml

diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 7d2f5b57..0964b18d 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -49,11 +49,10 @@
 
     <application android:name="org.gnucash.android.app.GnuCashApplication"
         android:icon="@drawable/ic_launcher"
-        android:label="@string/app_name" 
-        android:theme="@style/Theme.GnucashTheme">
+        android:label="@string/app_name"
+        android:theme="@style/Theme.GnucashTheme.NoActionBar">
         <activity
             android:name=".ui.account.AccountsActivity"
-            android:theme="@style/Theme.GnucashTheme.NoActionBar"
             android:label="@string/app_name">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
@@ -83,11 +82,12 @@
             android:noHistory="true"
             android:windowSoftInputMode="stateAlwaysHidden">
         </activity>
-        <activity android:name=".ui.settings.SettingsActivity"/>
+        <activity android:name=".ui.settings.SettingsActivity"
+            android:theme="@style/Theme.GnucashTheme" />
         <activity android:name=".ui.transaction.ScheduledActionsActivity" />
-        <activity android:name=".ui.passcode.PasscodePreferenceActivity" />
+        <activity android:name=".ui.passcode.PasscodePreferenceActivity"
+            android:theme="@style/Theme.GnucashTheme" />
         <activity android:name=".ui.transaction.TransactionsActivity"
-            android:theme="@style/Theme.GnucashTheme.NoActionBar"
             android:configChanges="orientation|screenSize">
         </activity>
         <activity android:name=".ui.widget.WidgetConfigurationActivity"
@@ -99,13 +99,10 @@
 		    </intent-filter>
 		</activity>
         <activity android:name=".ui.FormActivity"
-            android:theme="@style/Theme.GnucashTheme.NoActionBar"
             android:configChanges="orientation|screenSize"/>
         <activity android:name=".ui.transaction.TransactionInfoActivity"
-            android:theme="@style/Theme.GnucashTheme.NoActionBar"
             android:configChanges="orientation|screenSize"/>
         <activity android:name=".ui.report.ReportsActivity"
-            android:theme="@style/Theme.GnucashTheme.NoActionBar"
             android:launchMode="singleTop"/>
         <activity android:name="com.dropbox.sync.android.DbxAuthActivity" />
         <activity
diff --git a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
index c226d00e..e9f5f3e6 100644
--- a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
@@ -157,11 +157,9 @@ protected void selectItem(int itemId) {
                 startActivity(new Intent(this, ReportsActivity.class));
                 break;
 
-            case R.id.nav_item_scheduled_trn: { //show scheduled transactions
+            case R.id.nav_item_scheduled_actions: { //show scheduled transactions
                 Intent intent = new Intent(this, ScheduledActionsActivity.class);
-                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP);
-                intent.putExtra(ScheduledActionsActivity.EXTRA_DISPLAY_MODE,
-                        ScheduledActionsActivity.DisplayMode.TRANSACTION_ACTIONS);
+                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
                 startActivity(intent);
             }
                 break;
@@ -171,14 +169,6 @@ protected void selectItem(int itemId) {
             }
                 break;
 
-            case R.id.nav_item_scheduled_export: //scheduled backup
-                Intent intent = new Intent(this, ScheduledActionsActivity.class);
-                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP);
-                intent.putExtra(ScheduledActionsActivity.EXTRA_DISPLAY_MODE,
-                        ScheduledActionsActivity.DisplayMode.EXPORT_ACTIONS);
-                startActivity(intent);
-                break;
-
             case R.id.nav_item_settings: //Settings activity
                 startActivity(new Intent(this, SettingsActivity.class));
                 break;
diff --git a/app/src/main/java/org/gnucash/android/ui/FormActivity.java b/app/src/main/java/org/gnucash/android/ui/FormActivity.java
index 2c978ef4..695f1196 100644
--- a/app/src/main/java/org/gnucash/android/ui/FormActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/FormActivity.java
@@ -52,7 +52,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_form);
 
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_transaction_info);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
 
         android.support.v7.app.ActionBar actionBar = getSupportActionBar();
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index fb4aa675..6df51924 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -213,7 +213,7 @@ public void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_accounts);
         setUpDrawer();
 
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_transaction_info);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
 
         final Intent intent = getIntent();
@@ -409,18 +409,6 @@ public static void openExportFragment(FragmentActivity activity) {
         Intent intent = new Intent(activity, FormActivity.class);
         intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.EXPORT_FORM.name());
         activity.startActivity(intent);
-        /*
-        FragmentManager manager = activity.getSupportFragmentManager();
-        FragmentTransaction ft = manager.beginTransaction();
-        Fragment prev = manager.findFragmentByTag(FRAGMENT_EXPORT_DIALOG);
-        if (prev != null) {
-            ft.remove(prev);
-        }
-        ft.addToBackStack(null);
-
-        // Create and show the dialog.
-        DialogFragment exportFragment = new ExportFormFragment();
-        exportFragment.show(ft, FRAGMENT_EXPORT_DIALOG);*/
     }
 
     @Override
@@ -441,26 +429,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
 		}
 	}
 
-    /**
-     * Creates an intent which can be used start activity for creating new account
-     * @return Intent which can be used to start activity for creating new account
-     */
-    private Intent createNewAccountIntent(){
-        Intent addAccountIntent = new Intent(this, AccountsActivity.class);
-        addAccountIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-        addAccountIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
-        return addAccountIntent;
-    }
-
-
-	/**
-	 * Opens a dialog fragment to create a new account
-	 * @param v View which triggered this callback
-	 */
-	public void onNewAccountClick(View v) {
-        startActivity(createNewAccountIntent());
-	}
-
 	/**
 	 * Shows the user dialog to create default account structure or import existing account structure
 	 */
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
deleted file mode 100644
index a9c4dd98..00000000
--- a/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
+++ /dev/null
@@ -1,381 +0,0 @@
-/*
- * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gnucash.android.ui.export;
-
-import android.content.Context;
-import android.content.res.Resources;
-import android.database.Cursor;
-import android.graphics.Rect;
-import android.os.Bundle;
-import android.support.v4.app.ListFragment;
-import android.support.v4.app.LoaderManager;
-import android.support.v4.content.Loader;
-import android.support.v4.widget.SimpleCursorAdapter;
-import android.support.v7.app.ActionBar;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.view.ActionMode;
-import android.util.Log;
-import android.util.SparseBooleanArray;
-import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuInflater;
-import android.view.MenuItem;
-import android.view.TouchDelegate;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
-import android.widget.ListView;
-import android.widget.TextView;
-
-import org.gnucash.android.R;
-import org.gnucash.android.db.DatabaseCursorLoader;
-import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.ScheduledActionDbAdapter;
-import org.gnucash.android.export.ExportParams;
-import org.gnucash.android.model.ScheduledAction;
-import org.gnucash.android.ui.account.AccountsActivity;
-
-/**
- * Fragment for displayed scheduled backup entries in the database
- */
-public class ScheduledExportListFragment extends ListFragment implements
-        LoaderManager.LoaderCallbacks<Cursor> {
-
-    /**
-     * Logging tag
-     */
-    protected static final String TAG = "ScheduledTrxnFragment";
-
-    private ScheduledActionDbAdapter mScheduledActionDbAdapter;
-    private SimpleCursorAdapter mCursorAdapter;
-    private ActionMode mActionMode = null;
-
-    /**
-     * Flag which is set when a transaction is selected
-     */
-    private boolean mInEditMode = false;
-
-
-    /**
-     * Callbacks for the menu items in the Context ActionBar (CAB) in action mode
-     */
-    private ActionMode.Callback mActionModeCallbacks = new ActionMode.Callback() {
-
-        @Override
-        public boolean onCreateActionMode(ActionMode mode, Menu menu) {
-            MenuInflater inflater = mode.getMenuInflater();
-            inflater.inflate(R.menu.transactions_context_menu, menu);
-            return true;
-        }
-
-        @Override
-        public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
-            //nothing to see here, move along
-            return false;
-        }
-
-        @Override
-        public void onDestroyActionMode(ActionMode mode) {
-            finishEditMode();
-        }
-
-        @Override
-        public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
-            switch (item.getItemId()) {
-                case R.id.context_menu_delete:
-                    for (long id : getListView().getCheckedItemIds()) {
-                        Log.i(TAG, "Deleting scheduled export(s)");
-                        mScheduledActionDbAdapter.deleteRecord(id);
-                    }
-                    mode.finish();
-                    getLoaderManager().destroyLoader(0);
-                    refreshList();
-                    return true;
-
-                default:
-                    return false;
-            }
-        }
-    };
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        mScheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
-        mCursorAdapter = new ScheduledExportCursorAdapter(
-                getActivity().getApplicationContext(),
-                R.layout.list_item_scheduled_trxn, null,
-                new String[]{}, new int[]{});
-        setListAdapter(mCursorAdapter);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.fragment_scheduled_events_list, container, false);
-    }
-
-    @Override
-    public void onActivityCreated(Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-
-        ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
-        actionBar.setDisplayShowTitleEnabled(true);
-        actionBar.setDisplayHomeAsUpEnabled(true);
-        actionBar.setHomeButtonEnabled(true);
-        actionBar.setTitle(R.string.title_scheduled_exports);
-
-        setHasOptionsMenu(true);
-        getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
-        ((TextView)getListView().getEmptyView()).setText(R.string.label_no_scheduled_exports_to_display);
-    }
-
-    /**
-     * Reload the list of transactions and recompute account balances
-     */
-    public void refreshList(){
-        getLoaderManager().restartLoader(0, null, this);
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        refreshList();
-    }
-
-    @Override
-    public void onListItemClick(ListView l, View v, int position, long id) {
-        super.onListItemClick(l, v, position, id);
-        if (mActionMode != null){
-            CheckBox checkbox = (CheckBox) v.findViewById(R.id.checkbox);
-            checkbox.setChecked(!checkbox.isChecked());
-            return;
-        } else {
-            startActionMode();
-        }
-    }
-
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        menu.removeItem(R.id.menu_search);
-        inflater.inflate(R.menu.scheduled_export_actions, menu);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()){
-            case R.id.menu_add_scheduled_export:
-                AccountsActivity.openExportFragment(getActivity());
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
-        }
-    }
-
-    @Override
-    public Loader<Cursor> onCreateLoader(int arg0, Bundle arg1) {
-        Log.d(TAG, "Creating transactions loader");
-        return new ScheduledExportCursorLoader(getActivity());
-    }
-
-    @Override
-    public void onLoadFinished(Loader<Cursor> loader, Cursor cursor) {
-        Log.d(TAG, "Scheduled backup loader finished. Swapping in cursor");
-        mCursorAdapter.swapCursor(cursor);
-        mCursorAdapter.notifyDataSetChanged();
-    }
-
-    @Override
-    public void onLoaderReset(Loader<Cursor> loader) {
-        Log.d(TAG, "Resetting scheduled backup loader");
-        mCursorAdapter.swapCursor(null);
-    }
-
-    /**
-     * Finishes the edit mode in the list.
-     * Edit mode is started when at least one list item is selected
-     */
-    public void finishEditMode(){
-        mInEditMode = false;
-        uncheckAllItems();
-        mActionMode = null;
-    }
-
-    /**
-     * Sets the title of the Context ActionBar when in action mode.
-     * It sets the number highlighted items
-     */
-    public void setActionModeTitle(){
-        int count = getListView().getCheckedItemIds().length; //mSelectedIds.size();
-        if (count > 0){
-            mActionMode.setTitle(getResources().getString(R.string.title_selected, count));
-        }
-    }
-
-    /**
-     * Unchecks all the checked items in the list
-     */
-    private void uncheckAllItems() {
-        SparseBooleanArray checkedPositions = getListView().getCheckedItemPositions();
-        ListView listView = getListView();
-        for (int i = 0; i < checkedPositions.size(); i++) {
-            int position = checkedPositions.keyAt(i);
-            listView.setItemChecked(position, false);
-        }
-    }
-
-
-    /**
-     * Starts action mode and activates the Context ActionBar (CAB)
-     * Action mode is initiated as soon as at least one transaction is selected (highlighted)
-     */
-    private void startActionMode(){
-        if (mActionMode != null) {
-            return;
-        }
-        mInEditMode = true;
-        // Start the CAB using the ActionMode.Callback defined above
-        mActionMode = ((AppCompatActivity) getActivity())
-                                .startSupportActionMode(mActionModeCallbacks);
-    }
-
-    /**
-     * Stops action mode and deselects all selected transactions.
-     * This method only has effect if the number of checked items is greater than 0 and {@link #mActionMode} is not null
-     */
-    private void stopActionMode(){
-        int checkedCount = getListView().getCheckedItemIds().length;
-        if (checkedCount <= 0 && mActionMode != null) {
-            mActionMode.finish();
-        }
-    }
-
-
-    /**
-     * Extends a simple cursor adapter to bind transaction attributes to views
-     * @author Ngewi Fet <ngewif@gmail.com>
-     */
-    protected class ScheduledExportCursorAdapter extends SimpleCursorAdapter {
-
-        public ScheduledExportCursorAdapter(Context context, int layout, Cursor c,
-                                            String[] from, int[] to) {
-            super(context, layout, c, from, to, 0);
-        }
-
-        @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
-            final View view = super.getView(position, convertView, parent);
-            final int itemPosition = position;
-            CheckBox checkbox = (CheckBox) view.findViewById(R.id.checkbox);
-            //TODO: Revisit this if we ever change the application theme
-            int id = Resources.getSystem().getIdentifier("btn_check_holo_light", "drawable", "android");
-            checkbox.setButtonDrawable(id);
-
-            final TextView secondaryText = (TextView) view.findViewById(R.id.secondary_text);
-
-            checkbox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-
-                @Override
-                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                    getListView().setItemChecked(itemPosition, isChecked);
-                    if (isChecked) {
-                        startActionMode();
-                    } else {
-                        stopActionMode();
-                    }
-                    setActionModeTitle();
-                }
-            });
-
-
-            ListView listView = (ListView) parent;
-            if (mInEditMode && listView.isItemChecked(position)){
-                view.setBackgroundColor(getResources().getColor(R.color.abs__holo_blue_light));
-                secondaryText.setTextColor(getResources().getColor(android.R.color.white));
-            } else {
-                view.setBackgroundColor(getResources().getColor(android.R.color.transparent));
-                secondaryText.setTextColor(getResources().getColor(android.R.color.secondary_text_light_nodisable));
-                checkbox.setChecked(false);
-            }
-
-            final View checkBoxView = checkbox;
-            final View parentView = view;
-            parentView.post(new Runnable() {
-                @Override
-                public void run() {
-                    if (isAdded()){ //may be run when fragment has been unbound from activity
-                        float extraPadding = getResources().getDimension(R.dimen.edge_padding);
-                        final android.graphics.Rect hitRect = new Rect();
-                        checkBoxView.getHitRect(hitRect);
-                        hitRect.right   += extraPadding;
-                        hitRect.bottom  += 3*extraPadding;
-                        hitRect.top     -= extraPadding;
-                        hitRect.left    -= 2*extraPadding;
-                        parentView.setTouchDelegate(new TouchDelegate(hitRect, checkBoxView));
-                    }
-                }
-            });
-
-            return view;
-        }
-
-        @Override
-        public void bindView(View view, Context context, Cursor cursor) {
-            super.bindView(view, context, cursor);
-
-            ScheduledAction scheduledAction = mScheduledActionDbAdapter.buildModelInstance(cursor);
-
-            TextView primaryTextView = (TextView) view.findViewById(R.id.primary_text);
-            ExportParams params = ExportParams.parseCsv(scheduledAction.getTag());
-            primaryTextView.setText(params.getExportFormat().name() + " "
-                    + scheduledAction.getActionType().name().toLowerCase() + " to "
-                    + params.getExportTarget().name().toLowerCase());
-
-            view.findViewById(R.id.right_text).setVisibility(View.GONE);
-
-            TextView descriptionTextView = (TextView) view.findViewById(R.id.secondary_text);
-            descriptionTextView.setText(scheduledAction.getRepeatString());
-
-        }
-    }
-
-    /**
-     * {@link DatabaseCursorLoader} for loading recurring transactions asynchronously from the database
-     * @author Ngewi Fet <ngewif@gmail.com>
-     */
-    protected static class ScheduledExportCursorLoader extends DatabaseCursorLoader {
-
-        public ScheduledExportCursorLoader(Context context) {
-            super(context);
-        }
-
-        @Override
-        public Cursor loadInBackground() {
-            mDatabaseAdapter = ScheduledActionDbAdapter.getInstance();
-
-            Cursor c = mDatabaseAdapter.fetchAllRecords(
-                    DatabaseSchema.ScheduledActionEntry.COLUMN_TYPE + "=?",
-                    new String[]{ScheduledAction.ActionType.BACKUP.name()});
-
-            registerContentObserver(c);
-            return c;
-        }
-    }
-
-}
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
index 3a4d86ee..280ddfdb 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
@@ -16,26 +16,28 @@
 package org.gnucash.android.ui.transaction;
 
 import android.os.Bundle;
+import android.support.design.widget.TabLayout;
+import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentTransaction;
+import android.support.v4.app.FragmentStatePagerAdapter;
+import android.support.v4.view.PagerAdapter;
+import android.support.v4.view.ViewPager;
+import android.support.v7.widget.Toolbar;
 
 import org.gnucash.android.R;
-import org.gnucash.android.ui.export.ScheduledExportListFragment;
+import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.ui.passcode.PassLockActivity;
 
-import java.util.MissingFormatArgumentException;
-
 /**
  * Activity for displaying scheduled actions
  * @author Ngewi Fet <ngewif@gmail.com>
  */
 public class ScheduledActionsActivity extends PassLockActivity {
 
-    public enum DisplayMode {ALL_ACTIONS, TRANSACTION_ACTIONS, EXPORT_ACTIONS}
-
-    public static final String EXTRA_DISPLAY_MODE = "org.gnucash.android.extra.DISPLAY_MODE";
+    public static final int INDEX_SCHEDULED_TRANSACTIONS    = 0;
+    public static final int INDEX_SCHEDULED_EXPORTS         = 1;
 
-    private DisplayMode mDisplayMode = DisplayMode.ALL_ACTIONS;
+    ViewPager mViewPager;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -43,53 +45,76 @@ protected void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_scheduled_events);
         setUpDrawer();
 
-        mDisplayMode = (DisplayMode) getIntent().getSerializableExtra(EXTRA_DISPLAY_MODE);
-        if (mDisplayMode == null)
-            throw new MissingFormatArgumentException("Missing argument for which kind of scheduled events to display");
-
-        switch (mDisplayMode){
-            case ALL_ACTIONS:
-                //TODO: do we even want this option. For now fall through to SX
-
-            case TRANSACTION_ACTIONS:
-                showScheduledTransactionsFragment();
-                break;
-
-            case EXPORT_ACTIONS:
-                showScheduledExportsFragment();
-                break;
-        }
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+        getSupportActionBar().setTitle(R.string.nav_menu_scheduled_actions);
+
+        TabLayout tabLayout = (TabLayout) findViewById(R.id.tab_layout);
+        tabLayout.addTab(tabLayout.newTab().setText(R.string.title_scheduled_transactions));
+        tabLayout.addTab(tabLayout.newTab().setText(R.string.title_scheduled_exports));
+        tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
+
+        mViewPager = (ViewPager) findViewById(R.id.pager);
+
+        //show the simple accounts list
+        PagerAdapter mPagerAdapter = new ScheduledActionsViewPager(getSupportFragmentManager());
+        mViewPager.setAdapter(mPagerAdapter);
+
+        mViewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
+        tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
+            @Override
+            public void onTabSelected(TabLayout.Tab tab) {
+                mViewPager.setCurrentItem(tab.getPosition());
+            }
+
+            @Override
+            public void onTabUnselected(TabLayout.Tab tab) {
+                //nothing to see here, move along
+            }
+
+            @Override
+            public void onTabReselected(TabLayout.Tab tab) {
+                //nothing to see here, move along
+            }
+        });
     }
 
-    /**
-     * Shows the fragment with scheduled exports
-     */
-    private void showScheduledExportsFragment(){
-        FragmentManager fragmentManager = getSupportFragmentManager();
-        FragmentTransaction fragmentTransaction = fragmentManager
-                .beginTransaction();
-
-        ScheduledExportListFragment exportListFragment = new ScheduledExportListFragment();
-
-        fragmentTransaction.replace(R.id.fragment_container,
-                exportListFragment, "fragment_recurring_transactions");
-
-        fragmentTransaction.commit();
-    }
 
     /**
-     * Launches the fragment which lists the recurring transactions in the database
+     * View pager adapter for managing the scheduled action views
      */
-    private void showScheduledTransactionsFragment(){
-        FragmentManager fragmentManager = getSupportFragmentManager();
-        FragmentTransaction fragmentTransaction = fragmentManager
-                .beginTransaction();
+    private class ScheduledActionsViewPager extends FragmentStatePagerAdapter {
+
+        public ScheduledActionsViewPager(FragmentManager fm) {
+            super(fm);
+        }
 
-        ScheduledTransactionsListFragment scheduledTransactionsListFragment = new ScheduledTransactionsListFragment();
+        @Override
+        public CharSequence getPageTitle(int position) {
+            switch (position){
+                case INDEX_SCHEDULED_TRANSACTIONS:
+                    return getString(R.string.title_scheduled_transactions);
+                case INDEX_SCHEDULED_EXPORTS:
+                    return getString(R.string.title_scheduled_exports);
+                default:
+                    return super.getPageTitle(position);
+            }
+        }
 
-        fragmentTransaction.replace(R.id.fragment_container,
-                scheduledTransactionsListFragment, "fragment_recurring_transactions");
+        @Override
+        public Fragment getItem(int position) {
+            switch (position){
+                case INDEX_SCHEDULED_TRANSACTIONS:
+                    return ScheduledActionsListFragment.getInstance(ScheduledAction.ActionType.TRANSACTION);
+                case INDEX_SCHEDULED_EXPORTS:
+                    return ScheduledActionsListFragment.getInstance(ScheduledAction.ActionType.BACKUP);
+            }
+            return null;
+        }
 
-        fragmentTransaction.commit();
+        @Override
+        public int getCount() {
+            return 2;
+        }
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
similarity index 59%
rename from app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
rename to app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
index 03d2df57..3a57b285 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
@@ -16,12 +16,15 @@
 
 package org.gnucash.android.ui.transaction;
 
+import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
 import android.content.res.Resources;
 import android.database.Cursor;
 import android.graphics.Rect;
+import android.os.Build;
 import android.os.Bundle;
+import android.support.v4.app.Fragment;
 import android.support.v4.app.ListFragment;
 import android.support.v4.app.LoaderManager;
 import android.support.v4.content.Loader;
@@ -50,23 +53,29 @@
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.ScheduledActionDbAdapter;
 import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Transaction;
+import org.gnucash.android.ui.FormActivity;
 import org.gnucash.android.ui.UxArgument;
+import org.gnucash.android.ui.account.AccountsActivity;
 
+import java.text.DateFormat;
+import java.util.Date;
 import java.util.List;
 
 /**
- * Fragment which displays the recurring transactions in the system.
+ * Fragment which displays the scheduled actions in the system
+ * <p>Currently, it handles the display of scheduled transactions and scheduled exports</p>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class ScheduledTransactionsListFragment extends ListFragment implements
+public class ScheduledActionsListFragment extends ListFragment implements
         LoaderManager.LoaderCallbacks<Cursor> {
 
     /**
      * Logging tag
      */
-    protected static final String TAG = "ScheduledTrxnFragment";
+    protected static final String TAG = "ScheduledActionFragment";
 
     private TransactionsDbAdapter mTransactionsDbAdapter;
     private SimpleCursorAdapter mCursorAdapter;
@@ -77,6 +86,7 @@
      */
     private boolean mInEditMode = false;
 
+    private ScheduledAction.ActionType mActionType = ScheduledAction.ActionType.TRANSACTION;
 
     /**
      * Callbacks for the menu items in the Context ActionBar (CAB) in action mode
@@ -129,16 +139,42 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
         }
     };
 
+    /**
+     * Returns a new instance of the fragment for displayed the scheduled action
+     * @param actionType Type of scheduled action to be displayed
+     * @return New instance of fragment
+     */
+    public static Fragment getInstance(ScheduledAction.ActionType actionType){
+        ScheduledActionsListFragment fragment = new ScheduledActionsListFragment();
+        fragment.mActionType = actionType;
+        return fragment;
+    }
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
-        mCursorAdapter = new TransactionsCursorAdapter(
-                getActivity().getApplicationContext(),
-                R.layout.list_item_scheduled_trxn, null,
-                new String[] {DatabaseSchema.TransactionEntry.COLUMN_DESCRIPTION},
-                new int[] {R.id.primary_text});
+        switch (mActionType){
+            case TRANSACTION:
+                mCursorAdapter = new ScheduledTransactionsCursorAdapter(
+                        getActivity().getApplicationContext(),
+                        R.layout.list_item_scheduled_trxn, null,
+                        new String[] {DatabaseSchema.TransactionEntry.COLUMN_DESCRIPTION},
+                        new int[] {R.id.primary_text});
+                break;
+            case BACKUP:
+                mCursorAdapter = new ScheduledExportCursorAdapter(
+                        getActivity().getApplicationContext(),
+                        R.layout.list_item_scheduled_trxn, null,
+                        new String[]{}, new int[]{});
+                break;
+
+            default:
+                throw new IllegalArgumentException("Unable to display scheduled actions for the specified action type");
+
+        }
+
         setListAdapter(mCursorAdapter);
     }
 
@@ -156,10 +192,14 @@ public void onActivityCreated(Bundle savedInstanceState) {
         actionBar.setDisplayShowTitleEnabled(true);
         actionBar.setDisplayHomeAsUpEnabled(true);
         actionBar.setHomeButtonEnabled(true);
-        actionBar.setTitle(R.string.title_scheduled_transactions);
 
         setHasOptionsMenu(true);
         getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
+        if (mActionType == ScheduledAction.ActionType.TRANSACTION){
+            ((TextView)getListView().getEmptyView()).setText(R.string.label_no_recurring_transactions);
+        } else if (mActionType == ScheduledAction.ActionType.BACKUP){
+            ((TextView)getListView().getEmptyView()).setText(R.string.label_no_scheduled_exports_to_display);
+        }
     }
 
     /**
@@ -175,6 +215,26 @@ public void onResume() {
         refreshList();
     }
 
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        if (mActionType == ScheduledAction.ActionType.BACKUP)
+            inflater.inflate(R.menu.scheduled_export_actions, menu);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()){
+            case R.id.menu_add_scheduled_export:
+                Intent intent = new Intent(getActivity(), FormActivity.class);
+                intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.EXPORT_FORM.name());
+                startActivityForResult(intent, 0x1);
+                return true;
+            default:
+                return super.onOptionsItemSelected(item);
+        }
+    }
+
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
         super.onListItemClick(l, v, position, id);
@@ -183,6 +243,10 @@ public void onListItemClick(ListView l, View v, int position, long id) {
             checkbox.setChecked(!checkbox.isChecked());
             return;
         }
+
+        if (mActionType == ScheduledAction.ActionType.BACKUP) //nothing to do for export actions
+            return;
+
         Transaction transaction = mTransactionsDbAdapter.getRecord(id);
 
         //this should actually never happen, but has happened once. So perform check for the future
@@ -202,8 +266,9 @@ public void onListItemClick(ListView l, View v, int position, long id) {
      * @param transactionUID GUID of transaction to be edited
      */
     public void openTransactionForEdit(String accountUID, String transactionUID, String scheduledActionUid){
-        Intent createTransactionIntent = new Intent(getActivity(), TransactionsActivity.class);
+        Intent createTransactionIntent = new Intent(getActivity(), FormActivity.class);
         createTransactionIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
+        createTransactionIntent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.TRANSACTION_FORM.name());
         createTransactionIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, accountUID);
         createTransactionIntent.putExtra(UxArgument.SELECTED_TRANSACTION_UID, transactionUID);
         createTransactionIntent.putExtra(UxArgument.SCHEDULED_ACTION_UID, scheduledActionUid);
@@ -211,17 +276,14 @@ public void openTransactionForEdit(String accountUID, String transactionUID, Str
     }
 
     @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-//        inflater.inflate(R.menu.transactions_list_actions, menu);
-        //remove menu items from the AccountsActivity
-        menu.removeItem(R.id.menu_search);
-//        menu.removeItem(R.id.menu_settings);
-    }
-
-    @Override
     public Loader<Cursor> onCreateLoader(int arg0, Bundle arg1) {
         Log.d(TAG, "Creating transactions loader");
-        return new ScheduledTransactionsCursorLoader(getActivity());
+        if (mActionType == ScheduledAction.ActionType.TRANSACTION)
+            return new ScheduledTransactionsCursorLoader(getActivity());
+        else if (mActionType == ScheduledAction.ActionType.BACKUP){
+            return new ScheduledExportCursorLoader(getActivity());
+        }
+        return null;
     }
 
     @Override
@@ -283,6 +345,9 @@ private void startActionMode(){
         // Start the CAB using the ActionMode.Callback defined above
         mActionMode = ((AppCompatActivity) getActivity())
                 .startSupportActionMode(mActionModeCallbacks);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP){
+            getActivity().getWindow().setStatusBarColor(getResources().getColor(android.R.color.darker_gray));
+        }
     }
 
     /**
@@ -293,18 +358,26 @@ private void stopActionMode(){
         int checkedCount = getListView().getCheckedItemIds().length;
         if (checkedCount <= 0 && mActionMode != null) {
             mActionMode.finish();
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP){
+                getActivity().getWindow().setStatusBarColor(getResources().getColor(R.color.theme_primary_dark));
+            }
         }
     }
 
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (resultCode == Activity.RESULT_OK)
+            refreshList();
+    }
 
     /**
      * Extends a simple cursor adapter to bind transaction attributes to views
      * @author Ngewi Fet <ngewif@gmail.com>
      */
-    protected class TransactionsCursorAdapter extends SimpleCursorAdapter {
+    protected class ScheduledTransactionsCursorAdapter extends SimpleCursorAdapter {
 
-        public TransactionsCursorAdapter(Context context, int layout, Cursor c,
-                                         String[] from, int[] to) {
+        public ScheduledTransactionsCursorAdapter(Context context, int layout, Cursor c,
+                                                  String[] from, int[] to) {
             super(context, layout, c, from, to, 0);
         }
 
@@ -385,11 +458,112 @@ public void bindView(View view, Context context, Cursor cursor) {
             String scheduledActionUID = cursor.getString(cursor.getColumnIndexOrThrow("origin_scheduled_action_uid")); //column created from join when fetching scheduled transactions
             view.setTag(scheduledActionUID);
             ScheduledAction scheduledAction = scheduledActionDbAdapter.getRecord(scheduledActionUID);
-            descriptionTextView.setText(scheduledAction.getRepeatString());
+            long endTime = scheduledAction.getEndTime();
+            if (endTime > 0 && endTime < System.currentTimeMillis()){
+                ((TextView)view.findViewById(R.id.primary_text)).setTextColor(getResources().getColor(android.R.color.darker_gray));
+                descriptionTextView.setText(getString(R.string.label_scheduled_action_ended,
+                        DateFormat.getInstance().format(new Date(scheduledAction.getLastRun()))));
+            } else {
+                descriptionTextView.setText(scheduledAction.getRepeatString());
+            }
+        }
+    }
+
+    /**
+     * Extends a simple cursor adapter to bind transaction attributes to views
+     * @author Ngewi Fet <ngewif@gmail.com>
+     */
+    protected class ScheduledExportCursorAdapter extends SimpleCursorAdapter {
 
+        public ScheduledExportCursorAdapter(Context context, int layout, Cursor c,
+                                            String[] from, int[] to) {
+            super(context, layout, c, from, to, 0);
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+            final View view = super.getView(position, convertView, parent);
+            final int itemPosition = position;
+            CheckBox checkbox = (CheckBox) view.findViewById(R.id.checkbox);
+            //TODO: Revisit this if we ever change the application theme
+            int id = Resources.getSystem().getIdentifier("btn_check_holo_light", "drawable", "android");
+            checkbox.setButtonDrawable(id);
+
+            final TextView secondaryText = (TextView) view.findViewById(R.id.secondary_text);
+
+            checkbox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+
+                @Override
+                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                    getListView().setItemChecked(itemPosition, isChecked);
+                    if (isChecked) {
+                        startActionMode();
+                    } else {
+                        stopActionMode();
+                    }
+                    setActionModeTitle();
+                }
+            });
+
+
+            ListView listView = (ListView) parent;
+            if (mInEditMode && listView.isItemChecked(position)){
+                view.setBackgroundColor(getResources().getColor(R.color.abs__holo_blue_light));
+                secondaryText.setTextColor(getResources().getColor(android.R.color.white));
+            } else {
+                view.setBackgroundColor(getResources().getColor(android.R.color.transparent));
+                secondaryText.setTextColor(getResources().getColor(android.R.color.secondary_text_light_nodisable));
+                checkbox.setChecked(false);
+            }
+
+            final View checkBoxView = checkbox;
+            final View parentView = view;
+            parentView.post(new Runnable() {
+                @Override
+                public void run() {
+                    if (isAdded()){ //may be run when fragment has been unbound from activity
+                        float extraPadding = getResources().getDimension(R.dimen.edge_padding);
+                        final android.graphics.Rect hitRect = new Rect();
+                        checkBoxView.getHitRect(hitRect);
+                        hitRect.right   += extraPadding;
+                        hitRect.bottom  += 3*extraPadding;
+                        hitRect.top     -= extraPadding;
+                        hitRect.left    -= 2*extraPadding;
+                        parentView.setTouchDelegate(new TouchDelegate(hitRect, checkBoxView));
+                    }
+                }
+            });
+
+            return view;
+        }
+
+        @Override
+        public void bindView(View view, Context context, Cursor cursor) {
+            super.bindView(view, context, cursor);
+            ScheduledActionDbAdapter mScheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
+            ScheduledAction scheduledAction = mScheduledActionDbAdapter.buildModelInstance(cursor);
+
+            TextView primaryTextView = (TextView) view.findViewById(R.id.primary_text);
+            ExportParams params = ExportParams.parseCsv(scheduledAction.getTag());
+            primaryTextView.setText(params.getExportFormat().name() + " "
+                    + scheduledAction.getActionType().name().toLowerCase() + " to "
+                    + params.getExportTarget().name().toLowerCase());
+
+            view.findViewById(R.id.right_text).setVisibility(View.GONE);
+
+            TextView descriptionTextView = (TextView) view.findViewById(R.id.secondary_text);
+            descriptionTextView.setText(scheduledAction.getRepeatString());
+            if (scheduledAction.getEndTime() < System.currentTimeMillis()){
+                ((TextView)view.findViewById(R.id.primary_text)).setTextColor(getResources().getColor(android.R.color.darker_gray));
+                descriptionTextView.setText(getString(R.string.label_scheduled_action_ended,
+                        DateFormat.getInstance().format(new Date(scheduledAction.getLastRun()))));
+            } else {
+                descriptionTextView.setText(scheduledAction.getRepeatString());
+            }
         }
     }
 
+
     /**
      * {@link DatabaseCursorLoader} for loading recurring transactions asynchronously from the database
      * @author Ngewi Fet <ngewif@gmail.com>
@@ -411,5 +585,28 @@ public Cursor loadInBackground() {
         }
     }
 
+    /**
+     * {@link DatabaseCursorLoader} for loading recurring transactions asynchronously from the database
+     * @author Ngewi Fet <ngewif@gmail.com>
+     */
+    protected static class ScheduledExportCursorLoader extends DatabaseCursorLoader {
+
+        public ScheduledExportCursorLoader(Context context) {
+            super(context);
+        }
+
+        @Override
+        public Cursor loadInBackground() {
+            mDatabaseAdapter = ScheduledActionDbAdapter.getInstance();
+
+            Cursor c = mDatabaseAdapter.fetchAllRecords(
+                    DatabaseSchema.ScheduledActionEntry.COLUMN_TYPE + "=?",
+                    new String[]{ScheduledAction.ActionType.BACKUP.name()});
+
+            registerContentObserver(c);
+            return c;
+        }
+    }
+
 }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionInfoActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionInfoActivity.java
index 71ca4273..3f864c71 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionInfoActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionInfoActivity.java
@@ -44,7 +44,7 @@
     @Bind(R.id.trn_time_and_date) TextView mTimeAndDate;
     @Bind(R.id.trn_recurrence) TextView mRecurrence;
     @Bind(R.id.trn_notes) TextView mNotes;
-    @Bind(R.id.toolbar_transaction_info) Toolbar mToolBar;
+    @Bind(R.id.toolbar) Toolbar mToolBar;
     private String mTransactionUID;
     private String mAccountUID;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
index 70f3953d..f41d8b51 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -30,7 +30,6 @@
 import android.support.v4.app.FragmentStatePagerAdapter;
 import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
-import android.support.v4.widget.ResourceCursorAdapter;
 import android.support.v7.widget.Toolbar;
 import android.util.Log;
 import android.util.SparseArray;
@@ -258,7 +257,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_transactions);
         setUpDrawer();
 
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_transaction_info);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayShowTitleEnabled(false);
 
diff --git a/app/src/main/res/drawable-hdpi/ic_add_white_24dp.png b/app/src/main/res/drawable-hdpi/ic_add_white_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..694179bd46b685e55da1b4dde2575bde0b2bfd64
GIT binary patch
literal 127
zcmeAS@N?(olHy`uVBq!ia0vp^Dj>|k0wldT1B8K;o2QFoh{y5d1PRu~4CX)Hf7s8+
zA**4&;-Ni<Nsp9CmcYrA{E~7E(j^SecN!&rcQW#p7<EL&N&C7lX1jPoAxre%;sgt3
ZhDJ{jm3_gFp8-u|@O1TaS?83{1OSN1BfbCt

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_add_white_24dp.png b/app/src/main/res/drawable-mdpi/ic_add_white_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..3856041d702e80237afa394e0900d507f67e0a8f
GIT binary patch
literal 88
zcmeAS@N?(olHy`uVBq!ia0vp^5+KaM0wlfaz7_*1c~2L|5R22v2@<RZALKdQOdkZb
la0j>_&aj!VDzSo@fq7N>%r!;1bAd`3JYD@<);T3K0RTZ}7R&$u

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_add_white_24dp.png b/app/src/main/res/drawable-xhdpi/ic_add_white_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..67bb598e52a36b6caba846efe733501479965a41
GIT binary patch
literal 97
zcmeAS@N?(olHy`uVBq!ia0vp^1|ZA`BpB)|k7xlYrjj7PU<QV=$!9HqJSk5X$B+uf
r<OO00b`GVd{{8=NAE6m_!(EkuAxlVJcj3M@p&-4Uu6{1-oD!M<^XVA-

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_add_white_24dp.png b/app/src/main/res/drawable-xxhdpi/ic_add_white_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..0fdced8fce76a0f9a527388935adecebf63d0dae
GIT binary patch
literal 97
zcmeAS@N?(olHy`uVBq!ia0vp^9w5vJBp7O^^}Pa8OeH~n!3+##lh0ZJc~YJ(jv*C{
s$r5`O<gM5!@xR%D`Q@60&+j{OGw5?0Ep#n8RtVDT>FVdQ&MBb@07vc`*Z=?k

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxxhdpi/ic_add_white_24dp.png b/app/src/main/res/drawable-xxxhdpi/ic_add_white_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..d64c22e9edfdcf9babea9681c44e2dee53a6d2f6
GIT binary patch
literal 102
zcmeAS@N?(olHy`uVBq!ia0vp^2_Vb}Bp6OT_L>T$m`Z~Df*BafCZDwc^5i{T978G?
xlN*`>5BzUTIj7P7-(I3-fns}2dtZ?oBSS_(`pg9u0+k>GJYD@<);T3K0RZru9Krwq

literal 0
HcmV?d00001

diff --git a/app/src/main/res/layout/activity_accounts.xml b/app/src/main/res/layout/activity_accounts.xml
index d8e14a7a..75833c24 100644
--- a/app/src/main/res/layout/activity_accounts.xml
+++ b/app/src/main/res/layout/activity_accounts.xml
@@ -33,7 +33,7 @@
                   android:layout_height="wrap_content">
 
         <android.support.v7.widget.Toolbar
-            android:id="@+id/toolbar_transaction_info"
+            android:id="@+id/toolbar"
             android:background="?attr/colorPrimary"
             android:layout_width="match_parent"
             android:layout_height="?attr/actionBarSize"
diff --git a/app/src/main/res/layout/activity_form.xml b/app/src/main/res/layout/activity_form.xml
index 5c942952..60978860 100644
--- a/app/src/main/res/layout/activity_form.xml
+++ b/app/src/main/res/layout/activity_form.xml
@@ -15,19 +15,11 @@
  limitations under the License.
 -->
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
     android:orientation="vertical"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <android.support.v7.widget.Toolbar
-        android:id="@+id/toolbar_transaction_info"
-        android:background="?attr/colorPrimary"
-        android:layout_width="match_parent"
-        android:layout_height="?attr/actionBarSize"
-        app:elevation="10dp"
-        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-        app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
+    <include layout="@layout/toolbar" />
 
     <FrameLayout
         android:id="@+id/fragment_container"
diff --git a/app/src/main/res/layout/activity_scheduled_events.xml b/app/src/main/res/layout/activity_scheduled_events.xml
index 110fb8bd..6c7c3db6 100644
--- a/app/src/main/res/layout/activity_scheduled_events.xml
+++ b/app/src/main/res/layout/activity_scheduled_events.xml
@@ -22,10 +22,45 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <LinearLayout android:id="@+id/fragment_container"
-        android:orientation="vertical"
+    <android.support.design.widget.CoordinatorLayout
+        android:id="@+id/coordinatorLayout"
         android:layout_width="match_parent"
-        android:layout_height="match_parent" />
+        android:layout_height="match_parent">
+        <android.support.design.widget.AppBarLayout
+            android:id="@+id/fragment_container"
+            android:orientation="vertical"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <android.support.v7.widget.Toolbar
+                android:id="@+id/toolbar"
+                android:background="?attr/colorPrimary"
+                android:layout_width="match_parent"
+                android:layout_height="?attr/actionBarSize"
+                app:elevation="0dp"
+                app:layout_scrollFlags="scroll|enterAlways"
+                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+                app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
+
+            <android.support.design.widget.TabLayout
+                android:id="@+id/tab_layout"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:background="?attr/colorPrimary"
+                app:elevation="10dp"
+                android:minHeight="?attr/actionBarSize"
+                app:tabIndicatorColor="@android:color/white"
+                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"/>
+
+        </android.support.design.widget.AppBarLayout>
+
+        <android.support.v4.view.ViewPager
+            android:id="@+id/pager"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            app:layout_behavior="@string/appbar_scrolling_view_behavior"/>
+
+    </android.support.design.widget.CoordinatorLayout>
 
     <android.support.design.widget.NavigationView
         android:id="@+id/nav_view"
diff --git a/app/src/main/res/layout/activity_transaction_info.xml b/app/src/main/res/layout/activity_transaction_info.xml
index 12c01338..905b1dc4 100644
--- a/app/src/main/res/layout/activity_transaction_info.xml
+++ b/app/src/main/res/layout/activity_transaction_info.xml
@@ -11,7 +11,7 @@
         android:id="@+id/fab_edit_transaction"
         android:layout_height="40dp"
         android:layout_width="40dp"
-        app:layout_anchor="@id/toolbar_transaction_info"
+        app:layout_anchor="@id/toolbar"
         app:layout_anchorGravity="bottom|left|start"
         android:layout_marginLeft="8dp"
         android:scaleType="center"
@@ -23,7 +23,7 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent">
         <android.support.v7.widget.Toolbar
-            android:id="@+id/toolbar_transaction_info"
+            android:id="@+id/toolbar"
             android:background="?attr/colorPrimary"
             android:layout_width="match_parent"
             android:layout_height="128dp"
diff --git a/app/src/main/res/layout/toolbar.xml b/app/src/main/res/layout/toolbar.xml
new file mode 100644
index 00000000..6d66a5d1
--- /dev/null
+++ b/app/src/main/res/layout/toolbar.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v7.widget.Toolbar xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/toolbar"
+    android:background="?attr/colorPrimary"
+    android:layout_width="match_parent"
+    android:layout_height="?attr/actionBarSize"
+    app:elevation="10dp"
+    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+    app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+    tools:showIn="@layout/activity_form" />
\ No newline at end of file
diff --git a/app/src/main/res/layout/toolbar_transactions_activity.xml b/app/src/main/res/layout/toolbar_transactions_activity.xml
index d240500b..2f6d7745 100644
--- a/app/src/main/res/layout/toolbar_transactions_activity.xml
+++ b/app/src/main/res/layout/toolbar_transactions_activity.xml
@@ -17,7 +17,7 @@
 <android.support.v7.widget.Toolbar
     xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/toolbar_transaction_info"
+    android:id="@+id/toolbar"
     android:background="?attr/colorPrimary"
     android:layout_width="match_parent"
     app:elevation="10dp"
diff --git a/app/src/main/res/menu/nav_drawer_menu.xml b/app/src/main/res/menu/nav_drawer_menu.xml
index 2add9fce..bfb0c309 100644
--- a/app/src/main/res/menu/nav_drawer_menu.xml
+++ b/app/src/main/res/menu/nav_drawer_menu.xml
@@ -38,12 +38,9 @@
         android:title="@string/title_transactions">
         <menu>
             <item
-                android:id="@+id/nav_item_scheduled_trn"
+                android:id="@+id/nav_item_scheduled_actions"
                 android:icon="@drawable/ic_settings_backup_restore_black_24dp"
-                android:title="@string/nav_menu_scheduled_transactions"/>
-            <item
-                android:id="@+id/nav_item_scheduled_export"
-                android:title="@string/nav_menu_scheduled_backups"/>
+                android:title="@string/nav_menu_scheduled_actions"/>
             <item
                 android:id="@+id/nav_item_export"
                 android:icon="@drawable/ic_backup_black_24dp"
diff --git a/app/src/main/res/menu/scheduled_export_actions.xml b/app/src/main/res/menu/scheduled_export_actions.xml
index 488ffcab..6c7ca15b 100644
--- a/app/src/main/res/menu/scheduled_export_actions.xml
+++ b/app/src/main/res/menu/scheduled_export_actions.xml
@@ -2,7 +2,7 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
       xmlns:app="http://schemas.android.com/apk/res-auto">
     <item android:id="@+id/menu_add_scheduled_export"
-        android:icon="@drawable/content_new_holo_dark"
+        android:icon="@drawable/ic_add_white_24dp"
         android:title="@string/title_create_export_schedule"
         app:showAsAction="always"/>
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 7593e63c..c1c774a6 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -503,6 +503,8 @@ No user-identifiable information will be collected as part of this process!</str
 	<string name="hint_account_description">Account description</string>
 	<string name="label_no_recent_accounts">No recent accounts</string>
 	<string name="label_no_favorite_accounts">No favorite accounts</string>
+	<string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+	<string name="label_scheduled_action_ended">"Ended, last executed on "</string>
 	<string-array name="report_time_range">
 		<item>All time</item>
 		<item>Current month</item>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index d9732530..2bc40a07 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -522,6 +522,8 @@ No user-identifiable information will be collected as part of this process!
 	<string name="hint_account_description">Account description</string>
 	<string name="label_no_recent_accounts">No recent accounts</string>
 	<string name="label_no_favorite_accounts">No favorite accounts</string>
+	<string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+	<string name="label_scheduled_action_ended">"Ended, last executed on "</string>
 	<string-array name="report_time_range">
 		<item>All time</item>
 		<item>Current month</item>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index ada6eaaa..39a84e1c 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -507,6 +507,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="hint_account_description">Account description</string>
     <string name="label_no_recent_accounts">No recent accounts</string>
     <string name="label_no_favorite_accounts">No favorite accounts</string>
+    <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+    <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
     <string-array name="report_time_range">
         <item>All time</item>
         <item>Current month</item>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index a36f0c0f..081c4b43 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -504,6 +504,8 @@ Este proceso solo recoge informaci&#243;n que no permite identificar al usuario<
 	<string name="hint_account_description">Account description</string>
 	<string name="label_no_recent_accounts">No recent accounts</string>
 	<string name="label_no_favorite_accounts">No favorite accounts</string>
+	<string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+	<string name="label_scheduled_action_ended">"Ended, last executed on "</string>
 	<string-array name="report_time_range">
 		<item>All time</item>
 		<item>Current month</item>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index c780c8ff..e475fc44 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -504,6 +504,8 @@ Aucune information permettant d\'identifier l\'utilisateur ne sera recueillis da
     <string name="hint_account_description">Account description</string>
     <string name="label_no_recent_accounts">No recent accounts</string>
     <string name="label_no_favorite_accounts">No favorite accounts</string>
+    <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+    <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
     <string-array name="report_time_range">
         <item>All time</item>
         <item>Current month</item>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index 33b099cf..5a37e1e0 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -508,6 +508,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="hint_account_description">Account description</string>
     <string name="label_no_recent_accounts">No recent accounts</string>
     <string name="label_no_favorite_accounts">No favorite accounts</string>
+    <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+    <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
     <string-array name="report_time_range">
         <item>All time</item>
         <item>Current month</item>
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index 38a756f2..39742284 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -508,6 +508,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="hint_account_description">Account description</string>
     <string name="label_no_recent_accounts">No recent accounts</string>
     <string name="label_no_favorite_accounts">No favorite accounts</string>
+    <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+    <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
     <string-array name="report_time_range">
         <item>All time</item>
         <item>Current month</item>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index ac1c1b37..b22462b8 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -505,6 +505,8 @@ Ingen brukerinformasjon vil bli delt i denne prosessen!
 	<string name="hint_account_description">Account description</string>
 	<string name="label_no_recent_accounts">No recent accounts</string>
 	<string name="label_no_favorite_accounts">No favorite accounts</string>
+	<string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+	<string name="label_scheduled_action_ended">"Ended, last executed on "</string>
 	<string-array name="report_time_range">
 		<item>All time</item>
 		<item>Current month</item>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index e06a5f94..55c4db33 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -509,6 +509,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="hint_account_description">Account description</string>
     <string name="label_no_recent_accounts">No recent accounts</string>
     <string name="label_no_favorite_accounts">No favorite accounts</string>
+    <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+    <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
     <string-array name="report_time_range">
         <item>All time</item>
         <item>Current month</item>
diff --git a/app/src/main/res/values-pl/strings.xml b/app/src/main/res/values-pl/strings.xml
index d90e4098..ee9e4142 100644
--- a/app/src/main/res/values-pl/strings.xml
+++ b/app/src/main/res/values-pl/strings.xml
@@ -505,6 +505,8 @@
     <string name="hint_account_description">Account description</string>
     <string name="label_no_recent_accounts">No recent accounts</string>
     <string name="label_no_favorite_accounts">No favorite accounts</string>
+    <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+    <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
     <string-array name="report_time_range">
         <item>All time</item>
         <item>Current month</item>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 00b379a0..aa8241f1 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -507,6 +507,8 @@ Nenhuma informao de  identificao do usurio ser coletada neste proces
 	<string name="hint_account_description">Account description</string>
 	<string name="label_no_recent_accounts">No recent accounts</string>
 	<string name="label_no_favorite_accounts">No favorite accounts</string>
+	<string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+	<string name="label_scheduled_action_ended">"Ended, last executed on "</string>
 	<string-array name="report_time_range">
 		<item>All time</item>
 		<item>Current month</item>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 92f00cfc..1a787659 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -511,6 +511,8 @@
     <string name="hint_account_description">Account description</string>
     <string name="label_no_recent_accounts">No recent accounts</string>
     <string name="label_no_favorite_accounts">No favorite accounts</string>
+    <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+    <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
     <string-array name="report_time_range">
         <item>All time</item>
         <item>Current month</item>
diff --git a/app/src/main/res/values-uk/strings.xml b/app/src/main/res/values-uk/strings.xml
index 6d719ed7..f465ed02 100644
--- a/app/src/main/res/values-uk/strings.xml
+++ b/app/src/main/res/values-uk/strings.xml
@@ -491,6 +491,8 @@
     <string name="hint_account_description">Account description</string>
     <string name="label_no_recent_accounts">No recent accounts</string>
     <string name="label_no_favorite_accounts">No favorite accounts</string>
+    <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+    <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
     <string-array name="report_time_range">
         <item>All time</item>
         <item>Current month</item>
diff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml
index 7f1cd8ff..6b0295fc 100644
--- a/app/src/main/res/values-zh-rTW/strings.xml
+++ b/app/src/main/res/values-zh-rTW/strings.xml
@@ -505,6 +505,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="hint_account_description">Account description</string>
     <string name="label_no_recent_accounts">No recent accounts</string>
     <string name="label_no_favorite_accounts">No favorite accounts</string>
+    <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+    <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
     <string-array name="report_time_range">
         <item>All time</item>
         <item>Current month</item>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index da7722ea..25ed6c53 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -506,6 +506,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="hint_account_description">Account description</string>
     <string name="label_no_recent_accounts">No recent accounts</string>
     <string name="label_no_favorite_accounts">No favorite accounts</string>
+    <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+    <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
     <string-array name="report_time_range">
         <item>All time</item>
         <item>Current month</item>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index bbc73842..f66adbac 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -397,7 +397,7 @@
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
         available in app Settings so you can decide later.
     </string>
-    <string name="title_scheduled_transactions">Scheduled Transactions</string>
+    <string name="title_scheduled_transactions">Sched. Transactions</string>
     <string name="title_select_export_destination">Select destination for export</string>
     <string name="hint_split_memo">Memo</string>
     <string name="label_spend">Spend</string>
@@ -475,10 +475,10 @@
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
     <string name="nav_menu_favorites">Favorites</string>
-    <string name="nav_menu_open">Open...</string>
+    <string name="nav_menu_open">Open</string>
     <string name="nav_menu_reports">Reports</string>
     <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
-    <string name="nav_menu_export">Export...</string>
+    <string name="nav_menu_export">Export</string>
     <string name="nav_menu_settings">Settings</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
@@ -504,7 +504,7 @@ No user-identifiable information will be collected as part of this process!</str
     <string name="label_old_passcode">Enter your old passcode</string>
     <string name="label_new_passcode">Enter your new passcode</string>
     <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
-    <string name="title_scheduled_exports">Scheduled Exports</string>
+    <string name="title_scheduled_exports">Sched. Exports</string>
     <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
     <string name="title_create_export_schedule">Create export schedule</string>
     <string name="toast_exported_to">Exported to: %1$s</string>
@@ -512,6 +512,8 @@ No user-identifiable information will be collected as part of this process!</str
     <string name="hint_account_description">Account description</string>
     <string name="label_no_recent_accounts">No recent accounts</string>
     <string name="label_no_favorite_accounts">No favorite accounts</string>
+    <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+    <string name="label_scheduled_action_ended">"Ended, last executed on %1$s"</string>
     <string-array name="report_time_range">
         <item>All time</item>
         <item>Current month</item>
