From 7db7dea10579e49fc900bfc7c5b97b5084b8ff05 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 12 Dec 2012 02:25:02 +0100
Subject: [PATCH] Feature: Display account balance in account screen Improved:
 Display time & date throughout the app in the device locale Improved handling
 of double accounts when editing transactions Code refactoring

---
 .../res/layout/fragment_accounts_list.xml          | 14 +++++--
 .../res/layout/fragment_transactions_list.xml      | 29 +--------------
 GnucashMobile/res/layout/transactions_sum_bar.xml  | 43 ++++++++++++++++++++++
 GnucashMobile/res/values/strings.xml               |  1 +
 .../src/org/gnucash/android/data/Account.java      |  4 +-
 .../src/org/gnucash/android/data/Money.java        | 10 +++++
 .../org/gnucash/android/db/AccountsDbAdapter.java  | 33 +++++++++++++++++
 .../gnucash/android/db/TransactionsDbAdapter.java  | 19 ++++++++++
 .../android/ui/accounts/AccountsListFragment.java  | 24 +++++++++++-
 .../ui/transactions/NewTransactionFragment.java    | 38 +++++++++++--------
 10 files changed, 164 insertions(+), 51 deletions(-)
 create mode 100644 GnucashMobile/res/layout/transactions_sum_bar.xml

diff --git a/GnucashMobile/res/layout/fragment_accounts_list.xml b/GnucashMobile/res/layout/fragment_accounts_list.xml
index 3951a1eb..d83ad0fa 100644
--- a/GnucashMobile/res/layout/fragment_accounts_list.xml
+++ b/GnucashMobile/res/layout/fragment_accounts_list.xml
@@ -15,21 +15,27 @@
  limitations under the License.
 -->
 
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:orientation="vertical" >
 
+    <include layout="@layout/transactions_sum_bar" 
+        android:id="@+id/transactions_sum_bar" />
+    
     <ListView android:id="@id/android:list"        
         android:layout_width="match_parent"
-        android:layout_height="0dp"	
-        android:layout_weight="1"
+        android:layout_height="match_parent"	
+        android:layout_above="@id/transactions_sum_bar"
+        android:listSelector="@drawable/abs__list_selector_holo_light"
+        android:drawSelectorOnTop="false"
         />
     
 	<LinearLayout
         android:id="@id/android:empty"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
+        android:layout_above="@id/transactions_sum_bar"
         android:gravity="center"
         android:orientation="vertical">
 		<TextView 
@@ -44,4 +50,4 @@
             android:onClick="onNewAccountClick"
             android:text="@string/title_add_account" />
     </LinearLayout>
-</LinearLayout>
\ No newline at end of file
+</RelativeLayout>
\ No newline at end of file
diff --git a/GnucashMobile/res/layout/fragment_transactions_list.xml b/GnucashMobile/res/layout/fragment_transactions_list.xml
index 63059c9c..ab57f318 100644
--- a/GnucashMobile/res/layout/fragment_transactions_list.xml
+++ b/GnucashMobile/res/layout/fragment_transactions_list.xml
@@ -19,34 +19,9 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:orientation="vertical" >
-
-	<LinearLayout android:id="@+id/transactions_sum_bar"
-		android:layout_width="match_parent" 
-		android:layout_height="wrap_content"
-		android:layout_alignParentBottom="true"
-		android:background="@drawable/abs__ab_bottom_solid_light_holo"
-		android:orientation="horizontal"
-		android:minHeight="50dp"
-		style="@style/ListItem">
-        	    
-		<TextView  
-			android:layout_width="0dp"
-			android:layout_height="wrap_content"
-			android:gravity="left|center_vertical"
-			android:layout_weight="1"
-			android:layout_marginLeft="20dp"
-			android:text="@string/label_transactions_total" 			
-			style="@style/ListItemText" />
-		
-		<TextView android:id="@+id/transactions_sum"
-			android:layout_width="wrap_content"
-			android:layout_height="wrap_content"
-			android:gravity="right|center_vertical"
-			android:layout_marginRight="@dimen/edge_padding"			
-			style="@style/ListItemText" />
+    
+	<include layout="@layout/transactions_sum_bar" android:id="@+id/transactions_sum_bar" />
 		
-	</LinearLayout>	
-	
     <ListView android:id="@id/android:list"        
         android:layout_width="match_parent"
         android:layout_height="match_parent"	
diff --git a/GnucashMobile/res/layout/transactions_sum_bar.xml b/GnucashMobile/res/layout/transactions_sum_bar.xml
new file mode 100644
index 00000000..0c53c575
--- /dev/null
+++ b/GnucashMobile/res/layout/transactions_sum_bar.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    	android:id="@+id/transactions_sum_bar"
+		android:layout_width="match_parent" 
+		android:layout_height="wrap_content"
+		android:layout_alignParentBottom="true"
+		android:background="@drawable/abs__ab_bottom_solid_light_holo"
+		android:orientation="horizontal"
+		android:minHeight="50dp"
+		style="@style/ListItem">
+        	    
+		<TextView android:id="@+id/label_sum" 
+			android:layout_width="0dp"
+			android:layout_height="wrap_content"
+			android:gravity="left|center_vertical"
+			android:layout_weight="1"
+			android:layout_marginLeft="@dimen/edge_padding"
+			android:text="@string/label_transactions_total" 			
+			style="@style/ListItemText" />
+		
+		<TextView android:id="@+id/transactions_sum"
+			android:layout_width="wrap_content"
+			android:layout_height="wrap_content"
+			android:gravity="right|center_vertical"
+			android:layout_marginRight="@dimen/edge_padding"			
+			style="@style/ListItemText" />
+		
+</LinearLayout>
\ No newline at end of file
diff --git a/GnucashMobile/res/values/strings.xml b/GnucashMobile/res/values/strings.xml
index 6d4aef73..50ed1f6e 100644
--- a/GnucashMobile/res/values/strings.xml
+++ b/GnucashMobile/res/values/strings.xml
@@ -491,4 +491,5 @@
 	<string name="key_use_double_entry">use_double_entry</string>
 	<string name="summary_use_double_entry">All transactions will involve two accounts: source and destination accounts</string>
 	<string name="title_use_double_entry">Activate Double Entry</string>
+	<string name="account_balance">Balance</string>
 </resources>
\ No newline at end of file
diff --git a/GnucashMobile/src/org/gnucash/android/data/Account.java b/GnucashMobile/src/org/gnucash/android/data/Account.java
index 05b37993..6017f380 100644
--- a/GnucashMobile/src/org/gnucash/android/data/Account.java
+++ b/GnucashMobile/src/org/gnucash/android/data/Account.java
@@ -49,7 +49,7 @@
 	 * This are the different types specified by the OFX format and 
 	 * they are currently not used except for exporting
 	 */
-	public enum AccountType {CHECKING, SAVINGS, MONEYMRKT, CREDITLINE};
+	public enum AccountType {CASH, BANK, CREDIT_CARD, ASSET, LIABILITY, INCOME, EXPENSE, EQUITY, CURRENCY, STOCK, MUTUAL_FUND};
 	
 	/**
 	 * Unique Identifier of the account
@@ -71,7 +71,7 @@
 	 * Type of account
 	 * Defaults to {@link AccountType#CHECKING}
 	 */
-	private AccountType mAccountType = AccountType.CHECKING;
+	private AccountType mAccountType = AccountType.CASH;
 	
 	/**
 	 * List of transactions in this account
diff --git a/GnucashMobile/src/org/gnucash/android/data/Money.java b/GnucashMobile/src/org/gnucash/android/data/Money.java
index bd93fc33..6fa96fa0 100644
--- a/GnucashMobile/src/org/gnucash/android/data/Money.java
+++ b/GnucashMobile/src/org/gnucash/android/data/Money.java
@@ -135,6 +135,16 @@ public Money(String amount){
 	}
 
 	/**
+	 * Overloaded constructor. 
+	 * Initializes the currency to that specified by {@link Money#DEFAULT_CURRENCY_CODE}
+	 * @param amount Value associated with this Money object
+	 */
+	public Money(BigDecimal amount){
+		init();
+		setAmount(amount);
+	}
+	
+	/**
 	 * Initializes the amount and currency to their default values
 	 * @see {@link Money#DEFAULT_CURRENCY_CODE}, {@link #DEFAULT_ROUNDING_MODE}, {@link #DEFAULT_DECIMAL_PLACES}
 	 */
diff --git a/GnucashMobile/src/org/gnucash/android/db/AccountsDbAdapter.java b/GnucashMobile/src/org/gnucash/android/db/AccountsDbAdapter.java
index 5ba45620..e5d0515f 100644
--- a/GnucashMobile/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/GnucashMobile/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -22,6 +22,7 @@
 import java.util.List;
 
 import org.gnucash.android.data.Account;
+import org.gnucash.android.data.Money;
 import org.gnucash.android.data.Account.AccountType;
 import org.gnucash.android.data.Transaction;
 
@@ -278,6 +279,38 @@ public Cursor fetchAccounts(String condition){
 	}
 	
 	/**
+	 * Returns the balance of all accounts with each transaction counted only once
+	 * This does not take into account the currencies and double entry 
+	 * transactions are not considered as well.
+	 * @return Balance of all accounts in the database
+	 * @see AccountsDbAdapter#getDoubleEntryAccountsBalance()
+	 */
+	public Money getAllAccountsBalance(){
+		return mTransactionsAdapter.getAllTransactionsSum();
+	}
+	
+	/**
+	 * Returns the balance for all transactions while taking double entry into consideration
+	 * This means that double transactions will be counted twice
+	 * @return Total balance of the accounts while using double entry
+	 */
+	public Money getDoubleEntryAccountsBalance(){
+		Cursor c = mDb.query(DatabaseHelper.ACCOUNTS_TABLE_NAME, 
+				new String[]{DatabaseHelper.KEY_ROW_ID}, 
+				null, null, null, null, null);
+		Money totalSum = new Money();
+		if (c != null){
+			while (c.moveToNext()) {
+				long id = c.getLong(DatabaseAdapter.COLUMN_ROW_ID);
+				Money sum = mTransactionsAdapter.getTransactionsSum(id);
+				totalSum = totalSum.add(sum);
+			}
+			c.close();
+		}
+		return totalSum;
+	}
+	
+	/**
 	 * Return the record ID for the account with UID <code>accountUID</code>
 	 * @param accountUID String Unique ID of the account
 	 * @return Record ID belonging to account UID
diff --git a/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java b/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
index 225f2912..295829b0 100644
--- a/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -339,6 +339,25 @@ public Money getTransactionsSum(long accountId){
 	}
 	
 	/**
+	 * Returns the balance of all accounts with each transaction counted only once
+	 * This does not take into account the currencies and double entry 
+	 * transactions are not considered as well.
+	 * @return Balance of all accounts in the database
+	 * @see AccountsDbAdapter#getDoubleEntryAccountsBalance()
+	 */
+	public Money getAllTransactionsSum(){
+		String query = "SELECT TOTAL(" + DatabaseHelper.KEY_AMOUNT +") FROM " + DatabaseHelper.TRANSACTIONS_TABLE_NAME;
+		Cursor c = mDb.rawQuery(query, null); 
+//				new String[]{DatabaseHelper.KEY_AMOUNT, DatabaseHelper.TRANSACTIONS_TABLE_NAME});
+		double result = 0;
+		if (c != null && c.moveToFirst()){
+			result = c.getDouble(0);	
+		}
+		c.close();
+		return new Money(new BigDecimal(result));	
+	}
+	
+	/**
 	 * Returns true if <code>rowId</code> and <code>accountUID</code> belong to the same account
 	 * @param rowId Database record ID
 	 * @param accountUID Unique Identifier string of the account
diff --git a/GnucashMobile/src/org/gnucash/android/ui/accounts/AccountsListFragment.java b/GnucashMobile/src/org/gnucash/android/ui/accounts/AccountsListFragment.java
index caf36827..d3158261 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/accounts/AccountsListFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/accounts/AccountsListFragment.java
@@ -40,6 +40,7 @@
 import android.content.Intent;
 import android.database.Cursor;
 import android.os.Bundle;
+import android.preference.PreferenceManager;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
@@ -220,8 +221,11 @@ public void onClick(DialogInterface dialog, int whichButton) {
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
-		return inflater.inflate(R.layout.fragment_accounts_list, container,
+		View v = inflater.inflate(R.layout.fragment_accounts_list, container,
 				false);
+		TextView sumlabelTextView = (TextView) v.findViewById(R.id.label_sum);		
+		sumlabelTextView.setText(R.string.account_balance);
+		return v;
 	}
 	
 	@Override
@@ -246,7 +250,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		actionbar.setDisplayHomeAsUpEnabled(false);
 		
 		setHasOptionsMenu(true);
-		
+				
 		ListView lv = getListView();
 		lv.setOnItemLongClickListener(this);	
 		getLoaderManager().initLoader(0, null, this);		
@@ -410,6 +414,22 @@ public boolean onOptionsItemSelected(MenuItem item) {
 	 */
 	public void refreshList(){
 		getLoaderManager().restartLoader(0, null, this);
+		
+		boolean doubleEntryActive = PreferenceManager.getDefaultSharedPreferences(getActivity())
+				.getBoolean(getString(R.string.key_use_double_entry), false);
+		
+		TextView tv = (TextView) getView().findViewById(R.id.transactions_sum);	
+		Money balance = null; 
+		if (doubleEntryActive){
+			balance = mAccountsDbAdapter.getDoubleEntryAccountsBalance();
+		} else {
+			balance = mAccountsDbAdapter.getAllAccountsBalance();
+		}
+		tv.setText(balance.formattedString(Locale.getDefault()));
+		if (balance.isNegative())
+			tv.setTextColor(getResources().getColor(R.color.debit_red));
+		else
+			tv.setTextColor(getResources().getColor(R.color.credit_green));
 	}
 	
 	/**
diff --git a/GnucashMobile/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java b/GnucashMobile/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java
index 3d2437a9..29e2b121 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java
@@ -18,10 +18,10 @@
 
 import java.math.BigDecimal;
 import java.math.RoundingMode;
+import java.text.DateFormat;
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
 import java.text.ParseException;
-import java.text.SimpleDateFormat;
 import java.util.Calendar;
 import java.util.Currency;
 import java.util.Date;
@@ -119,12 +119,12 @@
 	/**
 	 * Formats a {@link Date} object into a date string of the format dd MMM yyyy e.g. 18 July 2012
 	 */
-	public final static SimpleDateFormat DATE_FORMATTER = new SimpleDateFormat("dd MMM yyyy");
+	public final static DateFormat DATE_FORMATTER = DateFormat.getDateInstance();
 	
 	/**
 	 * Formats a {@link Date} object to time string of format HH:mm e.g. 15:25
 	 */
-	public final static SimpleDateFormat TIME_FORMATTER = new SimpleDateFormat("HH:mm");
+	public final static DateFormat TIME_FORMATTER = DateFormat.getTimeInstance();
 	
 	/**
 	 * Button for setting the transaction type, either credit or debit
@@ -219,22 +219,11 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		mUseDoubleEntry = sharedPrefs.getBoolean(getString(R.string.key_use_double_entry), false);
 		if (mUseDoubleEntry == false){
 			getView().findViewById(R.id.layout_double_entry).setVisibility(View.GONE);
-//			mTransferAccountSpinner.setVisibility(View.GONE);
 		}
 		
-		String[] from = new String[] {DatabaseHelper.KEY_NAME};
-		int[] to = new int[] {android.R.id.text1};
+		//updateTransferAccountsList must only be called after creating mAccountsDbAdapter
 		mAccountsDbAdapter = new AccountsDbAdapter(getActivity());
-		long accountId = ((TransactionsActivity)getActivity()).getCurrentAccountID();
-		String conditions = "(" + DatabaseHelper.KEY_ROW_ID + " != " + accountId + ") AND " + "(" +
-							DatabaseHelper.KEY_CURRENCY_CODE + " = '" + mAccountsDbAdapter.getCurrencyCode(accountId) + "')";
-		mCursor = mAccountsDbAdapter.fetchAccounts(conditions);
-		
-		mCursorAdapter = new SimpleCursorAdapter(getActivity(), 
-				android.R.layout.simple_spinner_item, 
-				mCursor, from, to, 0);
-		mCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-		mTransferAccountSpinner.setAdapter(mCursorAdapter);
+		updateTransferAccountsList();
 		
 		mTransactionId = getArguments().getLong(SELECTED_TRANSACTION_ID);
 		mTransactionsDbAdapter = new TransactionsDbAdapter(getActivity());
@@ -309,6 +298,21 @@ private void initalizeViews() {
 		mCurrencyTextView.setText(accountCurrency.getSymbol(Locale.getDefault()));
 	}
 	
+	private void updateTransferAccountsList(){
+		long accountId = ((TransactionsActivity)getActivity()).getCurrentAccountID();
+		String conditions = "(" + DatabaseHelper.KEY_ROW_ID + " != " + accountId + ") AND " + "(" +
+							DatabaseHelper.KEY_CURRENCY_CODE + " = '" + mAccountsDbAdapter.getCurrencyCode(accountId) + "')";
+		mCursor = mAccountsDbAdapter.fetchAccounts(conditions);
+		
+		String[] from = new String[] {DatabaseHelper.KEY_NAME};
+		int[] to = new int[] {android.R.id.text1};
+		mCursorAdapter = new SimpleCursorAdapter(getActivity(), 
+				android.R.layout.simple_spinner_item, 
+				mCursor, from, to, 0);
+		mCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);		
+		mTransferAccountSpinner.setAdapter(mCursorAdapter);
+	}
+	
 	/**
 	 * Sets click listeners for the dialog buttons
 	 */
@@ -399,6 +403,8 @@ public void onAccountChanged(long newAccountId){
 		Currency currency = Currency.getInstance(currencyCode);
 		mCurrencyTextView.setText(currency.getSymbol(Locale.getDefault()));
 		accountsDbAdapter.close();
+		
+		updateTransferAccountsList();
 	}
 	
 	/**
