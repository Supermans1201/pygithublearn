From 934500df8241ca46b0102fb5afc37c51437f9824 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Mon, 11 May 2015 17:56:15 +0300
Subject: [PATCH 1/4] Require passcode to turn off passcode settings

---
 .../java/org/gnucash/android/ui/UxArgument.java    |  9 ++++--
 .../ui/passcode/PasscodeLockScreenActivity.java    | 15 ++++++++-
 .../ui/settings/PasscodePreferenceFragment.java    | 37 ++++++++++++++++------
 3 files changed, 49 insertions(+), 12 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/UxArgument.java b/app/src/main/java/org/gnucash/android/ui/UxArgument.java
index c2d4ab0f..d275bc33 100644
--- a/app/src/main/java/org/gnucash/android/ui/UxArgument.java
+++ b/app/src/main/java/org/gnucash/android/ui/UxArgument.java
@@ -38,12 +38,17 @@
 	public static final String ORIGIN_ACCOUNT_UID = "origin_acccount_uid";
 
     /**
-     * Key for checking whether the passcode is enabled or not.
+     * Key for checking whether the passcode is enabled or not
      */
     public static final String ENABLED_PASSCODE         = "enabled_passcode";
 
     /**
-     * Key for storing the passcode.
+     * Key for disabling the passcode
+     */
+    public static final String DISABLE_PASSCODE         = "disable_passcode";
+
+    /**
+     * Key for storing the passcode
      */
     public static final String PASSCODE                 = "passcode";
 
diff --git a/app/src/main/java/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java b/app/src/main/java/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
index 6f912d71..5818d969 100644
--- a/app/src/main/java/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
@@ -50,6 +50,11 @@ public void onPasscodeEntered(String pass) {
         Log.d(TAG, "Passcode: " + passcode);
 
         if (passcode.equals(pass)) {
+            if (UxArgument.DISABLE_PASSCODE.equals(getIntent().getStringExtra(UxArgument.DISABLE_PASSCODE))) {
+                setResult(RESULT_OK);
+                finish();
+                return;
+            }
             GnuCashApplication.PASSCODE_SESSION_INIT_TIME = System.currentTimeMillis();
             startActivity(new Intent()
                     .setClassName(this, getIntent().getStringExtra(UxArgument.PASSCODE_CLASS_CALLER))
@@ -64,10 +69,18 @@ public void onPasscodeEntered(String pass) {
 
     @Override
     public void onBackPressed() {
+        setResult(RESULT_CANCELED);
+
+        if (UxArgument.DISABLE_PASSCODE.equals(getIntent().getStringExtra(UxArgument.DISABLE_PASSCODE))) {
+            finish();
+            return;
+        }
+
         GnuCashApplication.PASSCODE_SESSION_INIT_TIME = System.currentTimeMillis() - GnuCashApplication.SESSION_TIMEOUT;
         startActivity(new Intent(Intent.ACTION_MAIN)
                 .addCategory(Intent.CATEGORY_HOME)
-                .setFlags(Intent.FLAG_ACTIVITY_NEW_TASK));
+                .setFlags(Intent.FLAG_ACTIVITY_NEW_TASK)
+        );
     }
 
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
index 9caf94e2..1bdf905a 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
@@ -33,6 +33,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.ui.UxArgument;
+import org.gnucash.android.ui.passcode.PasscodeLockScreenActivity;
 import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
 
 /**
@@ -43,9 +44,13 @@
 public class PasscodePreferenceFragment extends PreferenceFragment {
 
     /**
-     * * Request code for retrieving passcode to store
+     * Request code for retrieving passcode to store
      */
     public static final int PASSCODE_REQUEST_CODE = 2;
+    /**
+     * Request code for disabling passcode
+     */
+    public static final int REQUEST_DISABLE_PASSCODE = 3;
 
     private SharedPreferences.Editor editor;
     private CheckBoxPreference checkBoxPreference;
@@ -78,7 +83,9 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                         if ((Boolean) newValue) {
                             startActivityForResult(intent, PASSCODE_REQUEST_CODE);
                         } else {
-                            checkBoxPreference.setTitle(passcodeDisabled);
+                            Intent passIntent = new Intent(getActivity(), PasscodeLockScreenActivity.class);
+                            passIntent.putExtra(UxArgument.DISABLE_PASSCODE, UxArgument.DISABLE_PASSCODE);
+                            startActivityForResult(passIntent, REQUEST_DISABLE_PASSCODE);
                         }
                         editor.putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue);
                         editor.commit();
@@ -99,13 +106,25 @@ public boolean onPreferenceClick(Preference preference) {
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
 
-        if (resultCode == Activity.RESULT_OK && requestCode == PASSCODE_REQUEST_CODE && data!= null) {
-            editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
-            Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
-            checkBoxPreference.setTitle(getString(R.string.title_passcode_enabled));
-        } else {
-            editor.putBoolean(UxArgument.ENABLED_PASSCODE, false);
-            checkBoxPreference.setChecked(false);
+        switch (requestCode) {
+            case PASSCODE_REQUEST_CODE:
+                if (resultCode == Activity.RESULT_OK && data != null) {
+                    editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
+                    editor.putBoolean(UxArgument.ENABLED_PASSCODE, true);
+                    Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
+                    checkBoxPreference.setTitle(getString(R.string.title_passcode_enabled));
+                }
+                if (resultCode == Activity.RESULT_CANCELED) {
+                    editor.putBoolean(UxArgument.ENABLED_PASSCODE, false);
+                    checkBoxPreference.setChecked(false);
+                    checkBoxPreference.setTitle(getString(R.string.title_passcode_disabled));
+                }
+                break;
+            case REQUEST_DISABLE_PASSCODE:
+                boolean flag = (resultCode == Activity.RESULT_OK) ? false : true;
+                editor.putBoolean(UxArgument.ENABLED_PASSCODE, flag);
+                checkBoxPreference.setChecked(flag);
+                break;
         }
         editor.commit();
     }

From f7502e1bfa7a298cf03968b0695c645202d3cc98 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Mon, 11 May 2015 19:05:27 +0300
Subject: [PATCH 2/4] Require old passcode to change passcode

---
 .../ui/passcode/PasscodePreferenceActivity.java    | 28 ++++++++++++++++++++++
 .../ui/settings/PasscodePreferenceFragment.java    | 18 +++++++++++---
 2 files changed, 43 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java b/app/src/main/java/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
index 7dc7e43d..cd34dd08 100644
--- a/app/src/main/java/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
@@ -18,6 +18,7 @@
 
 import android.content.Intent;
 import android.os.Bundle;
+import android.preference.PreferenceManager;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -36,14 +37,40 @@
     private boolean reenter = false;
     private String passcode;
 
+    private boolean checkOldPassCode;
+
+    private TextView passCodeTextView;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.passcode_lockscreen);
+
+        passCodeTextView= (TextView) findViewById(R.id.passcode_label);
+
+        checkOldPassCode = PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                .getBoolean(UxArgument.ENABLED_PASSCODE, false);
+
+        if (checkOldPassCode) {
+            passCodeTextView.setText("Enter your old passcode");
+        }
     }
 
     @Override
     public void onPasscodeEntered(String pass) {
+        String passCode = PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                .getString(UxArgument.PASSCODE, "");
+
+        if (checkOldPassCode) {
+            if (pass.equals(passCode)) {
+                checkOldPassCode = false;
+                passCodeTextView.setText("Enter your new passcode");
+            } else {
+                Toast.makeText(this, R.string.toast_wrong_passcode, Toast.LENGTH_SHORT).show();
+            }
+            return;
+        }
+
         if (reenter) {
             if (passcode.equals(pass)) {
                 setResult(RESULT_OK, new Intent().putExtra(UxArgument.PASSCODE, pass));
@@ -58,4 +85,5 @@ public void onPasscodeEntered(String pass) {
             Toast.makeText(this, R.string.toast_confirm_passcode, Toast.LENGTH_SHORT).show();
         }
     }
+
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
index 1bdf905a..9e4aa5d7 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
@@ -51,6 +51,10 @@
      * Request code for disabling passcode
      */
     public static final int REQUEST_DISABLE_PASSCODE = 3;
+    /**
+     * Request code for changing passcode
+     */
+    public static final int REQUEST_CHANGE_PASSCODE = 4;
 
     private SharedPreferences.Editor editor;
     private CheckBoxPreference checkBoxPreference;
@@ -87,8 +91,8 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                             passIntent.putExtra(UxArgument.DISABLE_PASSCODE, UxArgument.DISABLE_PASSCODE);
                             startActivityForResult(passIntent, REQUEST_DISABLE_PASSCODE);
                         }
-                        editor.putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue);
-                        editor.commit();
+//                        editor.putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue);
+//                        editor.commit();
                         return true;
                     }
                 });
@@ -96,7 +100,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                 .setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
                     @Override
                     public boolean onPreferenceClick(Preference preference) {
-                        startActivityForResult(intent, PASSCODE_REQUEST_CODE);
+                        startActivityForResult(intent, REQUEST_CHANGE_PASSCODE);
                         return true;
                     }
                 });
@@ -125,6 +129,14 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                 editor.putBoolean(UxArgument.ENABLED_PASSCODE, flag);
                 checkBoxPreference.setChecked(flag);
                 break;
+            case REQUEST_CHANGE_PASSCODE:
+                if (resultCode == Activity.RESULT_OK && data != null) {
+                    editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
+                    editor.putBoolean(UxArgument.ENABLED_PASSCODE, true);
+                    Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
+                    checkBoxPreference.setTitle(getString(R.string.title_passcode_enabled));
+                }
+                break;
         }
         editor.commit();
     }

From ccbcd6cd9d5451867cac7ae59f0a7491c4176cba Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 12 May 2015 20:28:14 +0300
Subject: [PATCH 3/4] Extracted resources and refactoring

---
 .../android/ui/passcode/KeyboardFragment.java      |  6 +-
 .../ui/passcode/PasscodeLockScreenActivity.java    |  4 +-
 .../ui/passcode/PasscodePreferenceActivity.java    | 36 +++++-----
 .../ui/settings/PasscodePreferenceFragment.java    | 76 +++++++++++-----------
 .../main/res/layout/fragment_numeric_keyboard.xml  |  2 +-
 app/src/main/res/values-de/strings.xml             |  6 +-
 app/src/main/res/values-el/strings.xml             |  6 +-
 app/src/main/res/values-es-rMX/strings.xml         |  4 +-
 app/src/main/res/values-es/strings.xml             |  8 ++-
 app/src/main/res/values-fr/strings.xml             |  4 +-
 app/src/main/res/values-hu/strings.xml             |  4 +-
 app/src/main/res/values-it/strings.xml             |  4 +-
 app/src/main/res/values-nb/strings.xml             |  6 +-
 app/src/main/res/values-nl/strings.xml             |  4 +-
 app/src/main/res/values-pt-rBR/strings.xml         |  6 +-
 app/src/main/res/values-ru/strings.xml             |  4 +-
 app/src/main/res/values-zh/strings.xml             |  4 +-
 app/src/main/res/values/strings.xml                |  4 +-
 18 files changed, 106 insertions(+), 82 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/passcode/KeyboardFragment.java b/app/src/main/java/org/gnucash/android/ui/passcode/KeyboardFragment.java
index bcfddb23..0f456d7a 100644
--- a/app/src/main/java/org/gnucash/android/ui/passcode/KeyboardFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/passcode/KeyboardFragment.java
@@ -34,6 +34,8 @@
  */
 public class KeyboardFragment extends SherlockFragment {
 
+    private static final int DELAY = 500;
+
     private TextView pass1;
     private TextView pass2;
     private TextView pass3;
@@ -42,7 +44,7 @@
     private int length = 0;
 
     public interface OnPasscodeEnteredListener {
-        public void onPasscodeEntered(String pass);
+        void onPasscodeEntered(String pass);
     }
 
     private OnPasscodeEnteredListener listener;
@@ -182,7 +184,7 @@ public void run() {
                         pass4.setText(null);
                         length = 0;
                     }
-                }, 500);
+                }, DELAY);
         }
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java b/app/src/main/java/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
index 5818d969..88c8a574 100644
--- a/app/src/main/java/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ * Copyright (c) 2014 - 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -49,7 +49,7 @@ public void onPasscodeEntered(String pass) {
                 .getString(UxArgument.PASSCODE, "");
         Log.d(TAG, "Passcode: " + passcode);
 
-        if (passcode.equals(pass)) {
+        if (pass.equals(passcode)) {
             if (UxArgument.DISABLE_PASSCODE.equals(getIntent().getStringExtra(UxArgument.DISABLE_PASSCODE))) {
                 setResult(RESULT_OK);
                 finish();
diff --git a/app/src/main/java/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java b/app/src/main/java/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
index cd34dd08..cd664f0e 100644
--- a/app/src/main/java/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ * Copyright (c) 2014 - 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -34,25 +34,24 @@
 public class PasscodePreferenceActivity extends SherlockFragmentActivity
         implements KeyboardFragment.OnPasscodeEnteredListener {
 
-    private boolean reenter = false;
-    private String passcode;
+    private boolean mIsPassEnabled;
+    private boolean mReenter = false;
+    private String mPasscode;
 
-    private boolean checkOldPassCode;
-
-    private TextView passCodeTextView;
+    private TextView mPassTextView;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.passcode_lockscreen);
 
-        passCodeTextView= (TextView) findViewById(R.id.passcode_label);
+        mPassTextView = (TextView) findViewById(R.id.passcode_label);
 
-        checkOldPassCode = PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+        mIsPassEnabled = PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
                 .getBoolean(UxArgument.ENABLED_PASSCODE, false);
 
-        if (checkOldPassCode) {
-            passCodeTextView.setText("Enter your old passcode");
+        if (mIsPassEnabled) {
+            mPassTextView.setText(R.string.label_old_passcode);
         }
     }
 
@@ -61,28 +60,27 @@ public void onPasscodeEntered(String pass) {
         String passCode = PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
                 .getString(UxArgument.PASSCODE, "");
 
-        if (checkOldPassCode) {
+        if (mIsPassEnabled) {
             if (pass.equals(passCode)) {
-                checkOldPassCode = false;
-                passCodeTextView.setText("Enter your new passcode");
+                mIsPassEnabled = false;
+                mPassTextView.setText(R.string.label_new_passcode);
             } else {
                 Toast.makeText(this, R.string.toast_wrong_passcode, Toast.LENGTH_SHORT).show();
             }
             return;
         }
 
-        if (reenter) {
-            if (passcode.equals(pass)) {
+        if (mReenter) {
+            if (mPasscode.equals(pass)) {
                 setResult(RESULT_OK, new Intent().putExtra(UxArgument.PASSCODE, pass));
                 finish();
             } else {
                 Toast.makeText(this, R.string.toast_invalid_passcode_confirmation, Toast.LENGTH_LONG).show();
             }
         } else {
-            passcode = pass;
-            reenter = true;
-            ((TextView) findViewById(R.id.passcode_label)).setText(R.string.toast_confirm_passcode);
-            Toast.makeText(this, R.string.toast_confirm_passcode, Toast.LENGTH_SHORT).show();
+            mPasscode = pass;
+            mReenter = true;
+            mPassTextView.setText(R.string.label_confirm_passcode);
         }
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
index 9e4aa5d7..84a4ff77 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ * Copyright (c) 2014 - 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -46,18 +46,18 @@
     /**
      * Request code for retrieving passcode to store
      */
-    public static final int PASSCODE_REQUEST_CODE = 2;
+    public static final int PASSCODE_REQUEST_CODE = 0x2;
     /**
      * Request code for disabling passcode
      */
-    public static final int REQUEST_DISABLE_PASSCODE = 3;
+    public static final int REQUEST_DISABLE_PASSCODE = 0x3;
     /**
      * Request code for changing passcode
      */
-    public static final int REQUEST_CHANGE_PASSCODE = 4;
+    public static final int REQUEST_CHANGE_PASSCODE = 0x4;
 
-    private SharedPreferences.Editor editor;
-    private CheckBoxPreference checkBoxPreference;
+    private SharedPreferences.Editor mEditor;
+    private CheckBoxPreference mCheckBoxPreference;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -74,28 +74,26 @@ public void onCreate(Bundle savedInstanceState) {
     public void onResume() {
         super.onResume();
 
-        editor = PreferenceManager.getDefaultSharedPreferences(getActivity().getApplicationContext()).edit();
+        mEditor = PreferenceManager.getDefaultSharedPreferences(getActivity().getApplicationContext()).edit();
         final Intent intent = new Intent(getActivity(), PasscodePreferenceActivity.class);
 
-        checkBoxPreference = (CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode));
-        final String passcodeEnabled = getString(R.string.title_passcode_enabled);
-        final String passcodeDisabled = getString(R.string.title_passcode_disabled);
-        checkBoxPreference.setTitle(checkBoxPreference.isChecked() ? passcodeEnabled : passcodeDisabled);
-        checkBoxPreference.setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
-                    @Override
-                    public boolean onPreferenceChange(Preference preference, Object newValue) {
-                        if ((Boolean) newValue) {
-                            startActivityForResult(intent, PASSCODE_REQUEST_CODE);
-                        } else {
-                            Intent passIntent = new Intent(getActivity(), PasscodeLockScreenActivity.class);
-                            passIntent.putExtra(UxArgument.DISABLE_PASSCODE, UxArgument.DISABLE_PASSCODE);
-                            startActivityForResult(passIntent, REQUEST_DISABLE_PASSCODE);
-                        }
-//                        editor.putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue);
-//                        editor.commit();
-                        return true;
-                    }
-                });
+        mCheckBoxPreference = (CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode));
+        mCheckBoxPreference.setTitle(mCheckBoxPreference.isChecked()
+                ? getString(R.string.title_passcode_enabled)
+                : getString(R.string.title_passcode_disabled));
+        mCheckBoxPreference.setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
+            @Override
+            public boolean onPreferenceChange(Preference preference, Object newValue) {
+                if ((Boolean) newValue) {
+                    startActivityForResult(intent, PASSCODE_REQUEST_CODE);
+                } else {
+                    Intent passIntent = new Intent(getActivity(), PasscodeLockScreenActivity.class);
+                    passIntent.putExtra(UxArgument.DISABLE_PASSCODE, UxArgument.DISABLE_PASSCODE);
+                    startActivityForResult(passIntent, REQUEST_DISABLE_PASSCODE);
+                }
+                return true;
+            }
+        });
         findPreference(getString(R.string.key_change_passcode))
                 .setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
                     @Override
@@ -113,32 +111,32 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
         switch (requestCode) {
             case PASSCODE_REQUEST_CODE:
                 if (resultCode == Activity.RESULT_OK && data != null) {
-                    editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
-                    editor.putBoolean(UxArgument.ENABLED_PASSCODE, true);
+                    mEditor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
+                    mEditor.putBoolean(UxArgument.ENABLED_PASSCODE, true);
                     Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
-                    checkBoxPreference.setTitle(getString(R.string.title_passcode_enabled));
+                    mCheckBoxPreference.setTitle(getString(R.string.title_passcode_enabled));
                 }
                 if (resultCode == Activity.RESULT_CANCELED) {
-                    editor.putBoolean(UxArgument.ENABLED_PASSCODE, false);
-                    checkBoxPreference.setChecked(false);
-                    checkBoxPreference.setTitle(getString(R.string.title_passcode_disabled));
+                    mEditor.putBoolean(UxArgument.ENABLED_PASSCODE, false);
+                    mCheckBoxPreference.setChecked(false);
+                    mCheckBoxPreference.setTitle(getString(R.string.title_passcode_disabled));
                 }
                 break;
             case REQUEST_DISABLE_PASSCODE:
-                boolean flag = (resultCode == Activity.RESULT_OK) ? false : true;
-                editor.putBoolean(UxArgument.ENABLED_PASSCODE, flag);
-                checkBoxPreference.setChecked(flag);
+                boolean flag = resultCode != Activity.RESULT_OK;
+                mEditor.putBoolean(UxArgument.ENABLED_PASSCODE, flag);
+                mCheckBoxPreference.setChecked(flag);
                 break;
             case REQUEST_CHANGE_PASSCODE:
                 if (resultCode == Activity.RESULT_OK && data != null) {
-                    editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
-                    editor.putBoolean(UxArgument.ENABLED_PASSCODE, true);
+                    mEditor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
+                    mEditor.putBoolean(UxArgument.ENABLED_PASSCODE, true);
                     Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
-                    checkBoxPreference.setTitle(getString(R.string.title_passcode_enabled));
+                    mCheckBoxPreference.setTitle(getString(R.string.title_passcode_enabled));
                 }
                 break;
         }
-        editor.commit();
+        mEditor.commit();
     }
 
 }
diff --git a/app/src/main/res/layout/fragment_numeric_keyboard.xml b/app/src/main/res/layout/fragment_numeric_keyboard.xml
index 5f0a790c..44dc9985 100644
--- a/app/src/main/res/layout/fragment_numeric_keyboard.xml
+++ b/app/src/main/res/layout/fragment_numeric_keyboard.xml
@@ -40,7 +40,7 @@
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:gravity="center"
-            android:text="Enter passcode"
+            android:text="@string/label_passcode"
             android:textSize="25sp"
             android:layout_weight="0.1" />
 
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index eefdccc0..5a4ff85c 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -410,8 +410,7 @@
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
-    <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
+	<string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="header_passcode_settings">Passcode</string>
     <string name="title_passcode_preferences">Passcode Preferences</string>
     <string name="title_passcode_enabled">Passcode Turned On</string>
@@ -492,4 +491,7 @@ No user-identifiable information will be collected as part of this process!</str
 	<string name="label_report_currency">Select currency</string>
 	<string name="title_use_account_color">Account color in reports</string>
 	<string name="summary_use_account_color">Use account color in the pie chart</string>
+	<string name="label_confirm_passcode">Please confirm your passcode</string>
+	<string name="label_new_passcode">Enter your new passcode</string>
+	<string name="label_old_passcode">Enter your old passcode</string>
 </resources>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index daae6efb..358de093 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -428,8 +428,7 @@
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
-    <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
+	<string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="header_passcode_settings">Passcode</string>
     <string name="title_passcode_preferences">Passcode Preferences</string>
     <string name="title_passcode_enabled">Passcode Turned On</string>
@@ -511,4 +510,7 @@ No user-identifiable information will be collected as part of this process!
 	<string name="label_report_currency">Select currency</string>
 	<string name="title_use_account_color">Account color in reports</string>
 	<string name="summary_use_account_color">Use account color in the pie chart</string>
+	<string name="label_confirm_passcode">Please confirm your passcode</string>
+	<string name="label_new_passcode">Enter your new passcode</string>
+	<string name="label_old_passcode">Enter your old passcode</string>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index a9b699db..6fc86b35 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -413,7 +413,6 @@
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
     <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="header_passcode_settings">Passcode</string>
     <string name="title_passcode_preferences">Passcode Preferences</string>
@@ -496,4 +495,7 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="label_confirm_passcode">Please confirm your passcode</string>
+    <string name="label_new_passcode">Enter your new passcode</string>
+    <string name="label_old_passcode">Enter your old passcode</string>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index d495135c..6107a87c 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -403,8 +403,7 @@
     <string name="label_passcode">Introducir contrase&#241;a</string>
     <string name="toast_wrong_passcode">Contrase&#241;a incorrecta, intentar otra vez</string>
     <string name="toast_passcode_set">Contrase&#241;a establecida</string>
-    <string name="toast_confirm_passcode">Confirme su contrase&#241;a</string>
-    <string name="toast_invalid_passcode_confirmation">Confirmaci&#243;n de contrase&#241;a incorrecta. Int&#233;ntelo de nuevo</string>
+	<string name="toast_invalid_passcode_confirmation">Confirmaci&#243;n de contrase&#241;a incorrecta. Int&#233;ntelo de nuevo</string>
     <string name="header_passcode_settings">Contrase&#241;a</string>
     <string name="title_passcode_preferences">Ajustes de contrase&#241;a</string>
     <string name="title_passcode_enabled">Contrase&#241;a activada</string>
@@ -426,7 +425,7 @@
 	<string name="menu_group_smaller_slices">Agrupar porciones peque&#241;as</string>
 	<string name="label_chart_no_data">Datos del gr&#225;fico no disponibles</string>
 	<string name="label_chart_overall">Total</string>
-	<string name="label_chart_total">Total\n</string>
+	<string name="label_chart_total">Total</string>
 	<string name="label_other_slice">Otros</string>
 	<string name="toast_chart_percentage_mode_total">El porcentaje del valor seleccionado calculado sobre la cantidad total</string>
 	<string name="toast_chart_percentage_mode_current_bar">El porcentaje del valor seleccionado calculado sobre la cantidad de la barra apilada actual</string>
@@ -493,4 +492,7 @@ Este proceso solo recoge informaci&#243;n que no permite identificar al usuario<
 	<string name="label_report_currency">Select currency</string>
 	<string name="title_use_account_color">Account color in reports</string>
 	<string name="summary_use_account_color">Use account color in the pie chart</string>
+	<string name="label_confirm_passcode">Confirme su contrase&#241;a</string>
+	<string name="label_new_passcode">Enter your new passcode</string>
+	<string name="label_old_passcode">Enter your old passcode</string>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 94cefb41..521aa5b1 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -410,7 +410,6 @@
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
     <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="header_passcode_settings">Passcode</string>
     <string name="title_passcode_preferences">Passcode Preferences</string>
@@ -493,4 +492,7 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="label_confirm_passcode">Please confirm your passcode</string>
+    <string name="label_new_passcode">Enter your new passcode</string>
+    <string name="label_old_passcode">Enter your old passcode</string>
 </resources>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index b0a31341..66d285d6 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -414,7 +414,6 @@
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
     <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="header_passcode_settings">Passcode</string>
     <string name="title_passcode_preferences">Passcode Preferences</string>
@@ -497,4 +496,7 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="label_confirm_passcode">Please confirm your passcode</string>
+    <string name="label_new_passcode">Enter your new passcode</string>
+    <string name="label_old_passcode">Enter your old passcode</string>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index d5215d02..c6b8bff9 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -414,7 +414,6 @@
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
     <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="header_passcode_settings">Passcode</string>
     <string name="title_passcode_preferences">Passcode Preferences</string>
@@ -497,4 +496,7 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="label_confirm_passcode">Please confirm your passcode</string>
+    <string name="label_new_passcode">Enter your new passcode</string>
+    <string name="label_old_passcode">Enter your old passcode</string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 392b5f30..5a26a316 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -411,8 +411,7 @@
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
-    <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
+	<string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="header_passcode_settings">Passcode</string>
     <string name="title_passcode_preferences">Passcode Preferences</string>
     <string name="title_passcode_enabled">Passcode Turned On</string>
@@ -494,4 +493,7 @@ No user-identifiable information will be collected as part of this process!
 	<string name="label_report_currency">Select currency</string>
 	<string name="title_use_account_color">Account color in reports</string>
 	<string name="summary_use_account_color">Use account color in the pie chart</string>
+	<string name="label_confirm_passcode">Please confirm your passcode</string>
+	<string name="label_new_passcode">Enter your new passcode</string>
+	<string name="label_old_passcode">Enter your old passcode</string>
 </resources>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index f385acce..a733b338 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -415,7 +415,6 @@
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
     <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="header_passcode_settings">Passcode</string>
     <string name="title_passcode_preferences">Passcode Preferences</string>
@@ -498,4 +497,7 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="label_confirm_passcode">Please confirm your passcode</string>
+    <string name="label_new_passcode">Enter your new passcode</string>
+    <string name="label_old_passcode">Enter your old passcode</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index b30baf9b..0e4f5dc8 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -413,8 +413,7 @@
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
-    <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
+	<string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="header_passcode_settings">Passcode</string>
     <string name="title_passcode_preferences">Passcode Preferences</string>
     <string name="title_passcode_enabled">Passcode Turned On</string>
@@ -496,4 +495,7 @@ No user-identifiable information will be collected as part of this process!
 	<string name="label_report_currency">Select currency</string>
 	<string name="title_use_account_color">Account color in reports</string>
 	<string name="summary_use_account_color">Use account color in the pie chart</string>
+	<string name="label_confirm_passcode">Please confirm your passcode</string>
+	<string name="label_new_passcode">Enter your new passcode</string>
+	<string name="label_old_passcode">Enter your old passcode</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 31500dc4..163647f7 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -415,7 +415,6 @@
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
     <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="header_passcode_settings">Passcode</string>
     <string name="title_passcode_preferences">Passcode Preferences</string>
@@ -502,4 +501,7 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="label_confirm_passcode">Please confirm your passcode</string>
+    <string name="label_new_passcode">Enter your new passcode</string>
+    <string name="label_old_passcode">Enter your old passcode</string>
 </resources>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index 4d90f344..1d31c7b0 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -28,7 +28,6 @@
     <string name="label_passcode"></string>
     <string name="toast_wrong_passcode"></string>
     <string name="toast_passcode_set"></string>
-    <string name="toast_confirm_passcode"></string>
     <string name="toast_invalid_passcode_confirmation"></string>
     <string name="label_transaction_name"></string>
     <string name="label_transaction_amount"></string>
@@ -494,4 +493,7 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="label_confirm_passcode"></string>
+    <string name="label_new_passcode">Enter your new passcode</string>
+    <string name="label_old_passcode">Enter your old passcode</string>
 </resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 9b3384e7..e8f113f3 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -28,7 +28,7 @@
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
+    <string name="label_confirm_passcode">Please confirm your passcode</string>
     <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="label_transaction_name">Description</string>
     <string name="label_transaction_amount">Amount</string>
@@ -501,4 +501,6 @@
 No user-identifiable information will be collected as part of this process!</string>
     <string name="label_export_format">Export Format</string>
     <string name="toast_backup_folder_not_found">Backup folder cannot be found. Make sure the SD Card is mounted!</string>
+    <string name="label_old_passcode">Enter your old passcode</string>
+    <string name="label_new_passcode">Enter your new passcode</string>
 </resources>

From e85aa3c330b7297dc517fdbf88e9bc93bc416f7e Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 13 May 2015 21:53:28 +0300
Subject: [PATCH 4/4] Support for Android API 10

---
 .../android/ui/passcode/PassLockActivity.java      |  5 +-
 .../android/ui/settings/SettingsActivity.java      | 71 +++++++++++++++-------
 2 files changed, 53 insertions(+), 23 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/passcode/PassLockActivity.java b/app/src/main/java/org/gnucash/android/ui/passcode/PassLockActivity.java
index be8ae8fa..368fd1af 100644
--- a/app/src/main/java/org/gnucash/android/ui/passcode/PassLockActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/passcode/PassLockActivity.java
@@ -43,8 +43,9 @@ protected void onResume() {
         if ((getIntent().getFlags() & Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY) != 0) {
             GnuCashApplication.PASSCODE_SESSION_INIT_TIME = 0;
         }
-        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
-        if (sharedPreferences.getBoolean(UxArgument.ENABLED_PASSCODE, false) && !isSessionActive()) {
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
+        String passCode = prefs.getString(UxArgument.PASSCODE, "");
+        if (prefs.getBoolean(UxArgument.ENABLED_PASSCODE, false) && !isSessionActive() && !passCode.trim().isEmpty()) {
             startActivity(new Intent(this, PasscodeLockScreenActivity.class)
                     .setAction(getIntent().getAction())
                     .setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK)
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index 083d50e9..5f351e85 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -62,6 +62,7 @@
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.account.AccountsActivity;
+import org.gnucash.android.ui.passcode.PasscodeLockScreenActivity;
 import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
 
 import java.io.File;
@@ -201,8 +202,13 @@ protected void onCreate(Bundle savedInstanceState) {
 
             pref = findPreference(getString(R.string.key_enable_passcode));
             pref.setOnPreferenceChangeListener(this);
-            pref.setTitle(((CheckBoxPreference) pref).isChecked() ?
-                    getString(R.string.title_passcode_enabled) : getString(R.string.title_passcode_disabled));
+            pref.setTitle(((CheckBoxPreference) pref).isChecked()
+                    ? getString(R.string.title_passcode_enabled)
+                    : getString(R.string.title_passcode_disabled)
+            );
+
+            pref = findPreference(getString(R.string.key_change_passcode));
+            pref.setOnPreferenceClickListener(this);
         }
 	}
 
@@ -251,12 +257,10 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                 startActivityForResult(new Intent(this, PasscodePreferenceActivity.class),
                         PasscodePreferenceFragment.PASSCODE_REQUEST_CODE);
             } else {
-                preference.setTitle(getString(R.string.title_passcode_disabled));
+                Intent passIntent = new Intent(this, PasscodeLockScreenActivity.class);
+                passIntent.putExtra(UxArgument.DISABLE_PASSCODE, UxArgument.DISABLE_PASSCODE);
+                startActivityForResult(passIntent, PasscodePreferenceFragment.REQUEST_DISABLE_PASSCODE);
             }
-            PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
-                    .edit()
-                    .putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue)
-                    .commit();
         } else if (preference.getKey().equals(getString(R.string.key_use_double_entry))){
             setImbalanceAccountsHidden((Boolean) newValue);
         }
@@ -373,7 +377,7 @@ public boolean onPreferenceClick(Preference preference) {
 
         if (key.equals(getString(R.string.key_change_passcode))){
             startActivityForResult(new Intent(this, PasscodePreferenceActivity.class),
-                    PasscodePreferenceFragment.PASSCODE_REQUEST_CODE);
+                    PasscodePreferenceFragment.REQUEST_CHANGE_PASSCODE);
             return true;
         }
 
@@ -567,17 +571,6 @@ public void onClick(DialogInterface dialog, int which) {
 
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        if (resultCode == Activity.RESULT_CANCELED) {
-            if (requestCode == PasscodePreferenceFragment.PASSCODE_REQUEST_CODE) {
-                PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
-                        .edit()
-                        .putBoolean(UxArgument.ENABLED_PASSCODE, false)
-                        .commit();
-                ((CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode))).setChecked(false);
-            }
-            return;
-        }
-
         switch (requestCode) {
             case AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE:
                 try {
@@ -589,12 +582,48 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                 }
                 break;
             case PasscodePreferenceFragment.PASSCODE_REQUEST_CODE:
-                if (data != null) {
+                if (resultCode == Activity.RESULT_OK && data != null) {
                     PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
                             .edit()
                             .putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE))
                             .commit();
-                    Toast.makeText(getApplicationContext(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
+                    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                            .edit()
+                            .putBoolean(UxArgument.ENABLED_PASSCODE, true)
+                            .commit();
+                    Toast.makeText(this, R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
+                    findPreference(getString(R.string.key_enable_passcode)).setTitle(getString(R.string.title_passcode_enabled));
+                }
+                if (resultCode == Activity.RESULT_CANCELED) {
+                    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                            .edit()
+                            .putBoolean(UxArgument.ENABLED_PASSCODE, false)
+                            .commit();
+                    ((CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode))).setChecked(false);
+                    findPreference(getString(R.string.key_enable_passcode)).setTitle(getString(R.string.title_passcode_disabled));
+                }
+                break;
+
+            case PasscodePreferenceFragment.REQUEST_DISABLE_PASSCODE:
+                boolean flag = resultCode != Activity.RESULT_OK;
+                PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                        .edit()
+                        .putBoolean(UxArgument.ENABLED_PASSCODE, flag)
+                        .commit();
+                ((CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode))).setChecked(flag);
+                break;
+
+            case PasscodePreferenceFragment.REQUEST_CHANGE_PASSCODE:
+                if (resultCode == Activity.RESULT_OK && data != null) {
+                    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                            .edit()
+                            .putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE))
+                            .commit();
+                    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                            .edit()
+                            .putBoolean(UxArgument.ENABLED_PASSCODE, true)
+                            .commit();
+                    Toast.makeText(this, R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
                     findPreference(getString(R.string.key_enable_passcode)).setTitle(getString(R.string.title_passcode_enabled));
                 }
                 break;
