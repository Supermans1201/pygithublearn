From d42238803bd23865c25c6cf181380cde7d8ad443 Mon Sep 17 00:00:00 2001
From: lxb <leixb@agilean.cn>
Date: Fri, 10 Apr 2015 12:52:06 +0800
Subject: [PATCH 1/5] keep zh-cn translated to 1.5.5

---
 app/src/main/res/values-zh/strings.xml | 100 +++++++++++++++++----------------
 1 file changed, 52 insertions(+), 48 deletions(-)

diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index f5aee637..5c4251e1 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8" standalone="no"?>
 <!--
  Copyright (c) 2012 - 2014 Ngewi Fet <ngewif@gmail.com>
- Copyright (c) 2013 - 2014 Lei Xiao Bao <lxbzmy@gmail.com>
+ Copyright (c) 2013 - 2014 Alex Lei <lxbzmy@gmail.com>
 
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
@@ -15,7 +15,7 @@
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
-<resources>
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
     <string name="title_add_account"></string>
     <string name="title_edit_account"></string>
     <string name="info_details"></string>
@@ -25,6 +25,11 @@
     <string name="label_account_name"></string>
     <string name="btn_cancel"></string>
     <string name="btn_save"></string>
+    <string name="label_passcode"></string>
+    <string name="toast_wrong_passcode"></string>
+    <string name="toast_passcode_set"></string>
+    <string name="toast_confirm_passcode"></string>
+    <string name="toast_invalid_passcode_confirmation"></string>
     <string name="label_transaction_name"></string>
     <string name="label_transaction_amount"></string>
     <string name="title_add_transaction"></string>
@@ -45,6 +50,7 @@
     <string name="label_transaction_description"></string>
     <string name="menu_move"></string>
     <string name="title_selected">%1$d </string>
+    <string name="label_account_balance"></string>
     <string name="label_export_destination"></string>
     <string name="title_export_dialog"></string>
     <string name="option_export_all_transactions"></string>
@@ -210,7 +216,7 @@
         <item>SDR (Special Drawing Right)</item>
         <item>Serbian Dinar</item>
         <item>Seychelles Rupee</item>
-        <item></item>
+        <item></item>
         <item></item>
         <item>Solomon Islands Dollar</item>
         <item>Som</item>
@@ -244,7 +250,7 @@
         <item></item>
         <item>Uzbekistan Sum</item>
         <item>Vatu</item>
-        <item></item>
+        <item></item>
         <item></item>
         <item></item>
         <item>Yemeni Rial</item>
@@ -268,6 +274,11 @@
     <string name="title_general_prefs"></string>
     <string name="label_widget_configuration"></string>
     <string name="toast_no_transactions_to_export"></string>
+    <string name="header_passcode_settings"></string>
+    <string name="title_passcode_preferences"></string>
+    <string name="title_passcode_enabled"></string>
+    <string name="title_passcode_disabled"></string>
+    <string name="title_change_passcode"></string>
     <string name="title_about_gnucash">GnuCash</string>
     <string name="summary_about_gnucash">Gnucash for androidOFX GnuCash</string>
     <string name="title_about"></string>
@@ -301,13 +312,13 @@
     <string name="summary_xml_ofx_header">GnuCash</string>
     <string name="title_whats_new"></string>
     <string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currencey settings when creating account hierarchy\n
-        - Multiple bug fixes and improvements\n
-	</string>
+        - General resource and performance optimization\n
+        - \n
+        - \n
+        - QIF\n
+        - \n
+        - \n
+    </string>
     <string name="label_dismiss"></string>
     <string name="toast_transanction_amount_required"></string>
     <string name="menu_import_accounts">GnuCash</string>
@@ -343,8 +354,8 @@
     <string name="toast_recurring_transaction_deleted"></string>
     <string name="label_placeholder_account"></string>
     <string name="label_default_transfer_account"></string>
-    <string name="label_account_color_and_type"></string>
     <plurals name="label_sub_accounts">
+        <item quantity="one">%d </item>
         <item quantity="other">%d </item>
     </plurals>
     <string-array name="account_type_entry_values">
@@ -361,7 +372,7 @@
         <item></item>
         <item></item>
         <item></item>
-        <item>TRADING</item>
+        <item></item>
     </string-array>
     <string-array name="export_formats">
         <item>QIF</item>
@@ -369,6 +380,11 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title"></string>
+    <!-- Content description for a color square. -->
+    <string name="color_swatch_description" translatable="false">Color <xliff:g id="color_index" example="14">%1$d</xliff:g></string>
+    <!-- Content description for a selected color square. -->
+    <string name="color_swatch_description_selected" translatable="false">Color <xliff:g id="color_index" example="14">%1$d</xliff:g> selected</string>
+    <string name="label_account_color_and_type"></string>
     <string name="label_delete_sub_accounts"></string>
     <string name="title_recent_accounts"></string>
     <string name="title_favorite_accounts"></string>
@@ -387,19 +403,19 @@
         <item></item>
     </string-array>
     <string name="title_scheduled_transactions"></string>
-    <string name="title_select_export_destination">Select destination for export</string>
+    <string name="title_select_export_destination"></string>
     <string name="hint_split_memo"></string>
     <string name="label_spend"></string>
     <string name="label_receive"></string>
     <string name="label_withdrawal"></string>
     <string name="label_deposit"></string>
     <string name="label_payment"></string>
-    <string name="label_charge">charge</string>
+    <string name="label_charge"></string>
     <string name="label_decrease"></string>
     <string name="label_increase"></string>
     <string name="label_income"></string>
-    <string name="label_rebate">Rebate</string>
-    <string name="label_expense">Expense</string>
+    <string name="label_rebate"></string>
+    <string name="label_expense"></string>
     <string name="label_bill"></string>
     <string name="label_invoice"></string>
     <string name="label_buy"></string>
@@ -410,38 +426,26 @@
     <string name="account_name_equity"></string>
     <string name="summary_save_opening_balances"></string>
     <string name="title_save_opening_balances"></string>
-    <string name="export_warning_ofx">OFX does not support double-entry transactions</string>
-    <string name="export_warning_qif">A separate QIF file will be generated for each currency in use</string>
-    <string name="title_transaction_splits">Transaction splits</string>
+    <string name="export_warning_ofx">OFX </string>
+    <string name="export_warning_qif">QIF</string>
+    <string name="title_transaction_splits"></string>
     <string name="label_imbalance">Imbalance:</string>
-    <string name="btn_add_split">Add split</string>
-    <string name="label_account_balance">Balance:</string>
-    <string name="label_passcode">Enter Passcode</string>
-    <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
-    <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
-    <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
-    <string name="header_passcode_settings">Passcode</string>
-    <string name="title_passcode_preferences">Passcode Preferences</string>
-    <string name="title_passcode_enabled">Passcode Turned On</string>
-    <string name="title_passcode_disabled">Passcode Turned Off</string>
-    <string name="title_change_passcode">Change Passcode</string>
-    <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
-    <string name="menu_title_favorite">Favorite</string>
+    <string name="btn_add_split"></string>
+    <string name="menu_title_favorite"></string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
-    <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
-    <string name="menu_order_by_size">Order by size</string>
-    <string name="menu_toggle_legend">Toggle legend</string>
-    <string name="menu_toggle_labels">Toggle labels</string>
-    <string name="label_chart_no_data">No chart data available</string>
-    <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
-    <string name="label_save_template">Save as template</string>
-    <string name="label_delete_account_transactions_description">This account contains transactions. \nWhat would you like to do with these transactions</string>
-    <string name="label_delete_account_subaccounts_description">This account contains sub-accounts. \nWhat would you like to do with these sub-accounts</string>
-    <string name="label_delete_transactions">Delete transactions</string>
+    <string name="title_pie_chart"></string>
+    <string name="menu_chart_report"></string>
+    <string name="menu_order_by_size"></string>
+    <string name="menu_toggle_legend"></string>
+    <string name="menu_toggle_labels"></string>
+    <string name="label_chart_no_data"></string>
+    <string name="label_chart_overall"></string>
+    <string name="label_chart_total">\n</string>
+    <string name="label_save_template"></string>
+    <string name="label_delete_account_transactions_description"> \n</string>
+    <string name="label_delete_account_subaccounts_description"> \n</string>
+    <string name="label_delete_transactions"></string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
-    <string name="label_tap_to_create_schedule">Tap to create schedule</string>
-</resources>
+    <string name="label_tap_to_create_schedule"></string>
+</resources>
\ No newline at end of file

From 487bc1287144d5dbbc072a4f2aa29b2c2f1eee8a Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 10 Apr 2015 12:16:14 +0200
Subject: [PATCH 2/5] Improves the auto-complete suggestions when creating new
 transactions

Added more detail in the transaction suggestions dropdown  e.g. amount and date

The suggestions are now generated according to the following guidelines:
* Only include transactions from the same account as the current one,
* Only one matching description is shown (eliminates duplicate names)
* They are sorted by the most recent transaction entries
Closes #309

Updated CONTRIBUTORS and README files
---
 CONTRIBUTORS                                       |  2 +-
 README.md                                          |  4 +-
 .../gnucash/android/db/TransactionsDbAdapter.java  | 28 +++++++++----
 .../ui/transaction/TransactionFormFragment.java    | 35 +++++++++++++---
 app/src/main/res/layout/dropdown_item_2lines.xml   | 46 ++++++++++++++++++++++
 .../main/res/layout/fragment_new_transaction.xml   |  3 ++
 6 files changed, 102 insertions(+), 16 deletions(-)
 create mode 100644 app/src/main/res/layout/dropdown_item_2lines.xml

diff --git a/CONTRIBUTORS b/CONTRIBUTORS
index d2b648f0..f5d925f9 100644
--- a/CONTRIBUTORS
+++ b/CONTRIBUTORS
@@ -17,7 +17,7 @@ Sigurd Gartmann <sigurdga-github@sigurdga.no>
 Pedro Abel <pedroabel@gmail.com>
 windwarrior <lennartbuit@gmail.com>
 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
-Lei Xiao Bao <lxbzmy@gmail.com>
+Alex Lei <lxbzmy@gmail.com>
 Yongxin Wang <fefe.wyx@gmail.com>
 Matthew Hague <matthewhague@zoho.com>
 Spanti Nicola <rydroid_dev@yahoo.com>
diff --git a/README.md b/README.md
index fc3da1af..be3f375c 100644
--- a/README.md
+++ b/README.md
@@ -62,8 +62,8 @@ You could as well contribute code, fixing bugs, new features or automated tests.
 Take a look at the [bug tracker](https://github.com/codinguser/gnucash-android/issues?state=open)
 for ideas where to start.
 
-For development, it is recommended to use the IntelliJ IDEA 14+ IDE for development which is available as free
-community edition. Import the project into the IDE from an external (maven) model.The IDE will resolve dependencies automatically.
+For development, it is recommended to use the Android Studio for development which is available for free.
+Import the project into the IDE using the build.gradle file. The IDE will resolve dependencies automatically.
 
 #Licence
 Gnucash for Android is free software; you can redistribute it and/or 
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index 0310698b..f4c639b1 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -494,17 +494,29 @@ public long getAllTransactionsCount() {
 
     /**
      * Returns a cursor to transactions whose name (UI: description) start with the <code>prefix</code>
-     * <p>This method is used for autocomplete suggestions when creating new transactions</p>
+     * <p>This method is used for autocomplete suggestions when creating new transactions. <br/>
+     * The suggestions are either transactions which have at least one split with {@code accountUID} or templates.</p>
      * @param prefix Starting characters of the transaction name
+     * @param accountUID GUID of account within which to search for transactions
      * @return Cursor to the data set containing all matching transactions
      */
-    public Cursor fetchTemplatesStartingWith(String prefix){
-        return mDb.query(TransactionEntry.TABLE_NAME,
-                new String[]{TransactionEntry._ID, TransactionEntry.COLUMN_DESCRIPTION},
-                TransactionEntry.COLUMN_TEMPLATE + "=1 AND "
-                        + TransactionEntry.COLUMN_DESCRIPTION + " LIKE '" + prefix + "%'",
-                null, null, null,
-                TransactionEntry.COLUMN_DESCRIPTION + " ASC");
+    public Cursor fetchTransactionSuggestions(String prefix, String accountUID){
+        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();
+        queryBuilder.setTables(TransactionEntry.TABLE_NAME
+                + " INNER JOIN " + SplitEntry.TABLE_NAME + " ON "
+                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_UID + " = "
+                + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_TRANSACTION_UID);
+        queryBuilder.setDistinct(true);
+        String[] projectionIn = new String[]{TransactionEntry.TABLE_NAME + ".*"};
+        String selection = "(" + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_ACCOUNT_UID + " = ?"
+                + " OR " + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_TEMPLATE + "=1 )"
+                + " AND " + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_DESCRIPTION + " LIKE '" + prefix + "%'";
+        String[] selectionArgs = new String[]{accountUID};
+        String sortOrder = TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_TIMESTAMP + " DESC";
+        String groupBy = TransactionEntry.COLUMN_DESCRIPTION;
+        String limit = Integer.toString(5);
+
+        return queryBuilder.query(mDb, projectionIn, selection, selectionArgs, groupBy, null, sortOrder, limit);
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index b089c24e..fa139cff 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -30,6 +30,7 @@
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.widget.SimpleCursorAdapter;
 import android.text.Editable;
+import android.text.format.DateUtils;
 import android.text.format.Time;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -305,15 +306,39 @@ public void onNothingSelected(AdapterView<?> adapterView) {
 	}
 
     /**
+     * Extension of SimpleCursorAdapter which is used to populate the fields for the list items
+     * in the transactions suggestions (auto-complete transaction description).
+     */
+    private class DropDownCursorAdapter extends SimpleCursorAdapter{
+
+        public DropDownCursorAdapter(Context context, int layout, Cursor c, String[] from, int[] to) {
+            super(context, layout, c, from, to, 0);
+        }
+
+        @Override
+        public void bindView(View view, Context context, Cursor cursor) {
+            super.bindView(view, context, cursor);
+            String transactionUID = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_UID));
+            Money balance = TransactionsDbAdapter.getInstance().getBalance(transactionUID, mAccountUID);
+
+            long timestamp = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_TIMESTAMP));
+            String dateString = DateUtils.formatDateTime(getActivity(), timestamp,
+                    DateUtils.FORMAT_SHOW_WEEKDAY | DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_YEAR);
+
+            TextView secondaryTextView = (TextView) view.findViewById(R.id.secondary_text);
+            secondaryTextView.setText(balance.formattedString() + " on " + dateString); //TODO: Extract string
+        }
+    }
+
+    /**
      * Initializes the transaction name field for autocompletion with existing transaction names in the database
      */
     private void initTransactionNameAutocomplete() {
-        final int[] to = new int[]{android.R.id.text1};
+        final int[] to = new int[]{R.id.primary_text};
         final String[] from = new String[]{DatabaseSchema.TransactionEntry.COLUMN_DESCRIPTION};
 
-        SimpleCursorAdapter adapter = new SimpleCursorAdapter(
-                getActivity(), android.R.layout.simple_dropdown_item_1line,
-                null, from, to, 0);
+        SimpleCursorAdapter adapter = new DropDownCursorAdapter(
+                getActivity(), R.layout.dropdown_item_2lines, null, from, to);
 
         adapter.setCursorToStringConverter(new SimpleCursorAdapter.CursorToStringConverter() {
             @Override
@@ -326,7 +351,7 @@ public CharSequence convertToString(Cursor cursor) {
         adapter.setFilterQueryProvider(new FilterQueryProvider() {
             @Override
             public Cursor runQuery(CharSequence name) {
-                return mTransactionsDbAdapter.fetchTemplatesStartingWith(name == null ? "" : name.toString());
+                return mTransactionsDbAdapter.fetchTransactionSuggestions(name == null ? "" : name.toString(), mAccountUID);
             }
         });
 
diff --git a/app/src/main/res/layout/dropdown_item_2lines.xml b/app/src/main/res/layout/dropdown_item_2lines.xml
new file mode 100644
index 00000000..044e61de
--- /dev/null
+++ b/app/src/main/res/layout/dropdown_item_2lines.xml
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+Copyright (c) 2013 Ngewi Fet <ngewif@gmail.com>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+-->
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_height="?android:attr/listPreferredItemHeight"
+    android:layout_width="match_parent"
+    android:paddingLeft="10dp"
+    android:paddingTop="5dp"
+    android:paddingRight="10dp"
+    android:layout_weight="1"
+    android:orientation="vertical">
+
+    <TextView
+        android:id="@+id/primary_text"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:singleLine="true"
+        android:ellipsize="end"
+        tools:text="Transaction description"
+        style="@style/ListItemText"/>
+
+    <TextView
+        android:id="@+id/secondary_text"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:singleLine="true"
+        android:ellipsize="end"
+        android:textAppearance="?android:attr/textAppearanceSmall"
+        tools:text="Amount and date"/>
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_new_transaction.xml b/app/src/main/res/layout/fragment_new_transaction.xml
index a148cc4b..07f1842b 100644
--- a/app/src/main/res/layout/fragment_new_transaction.xml
+++ b/app/src/main/res/layout/fragment_new_transaction.xml
@@ -175,10 +175,13 @@
                       style="@style/Dropdown.TextView" />
 
         </LinearLayout>
+
         <CheckBox android:id="@+id/checkbox_save_template"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:layout_marginBottom="@dimen/form_row_bottom_margin"
+			android:visibility="gone"
             android:text="@string/label_save_template" />
+		<!-- Not exposing the transaction template checkbox to the UI at this time -->
 	</LinearLayout>
 </ScrollView>
\ No newline at end of file

From d91a78d6d18a72a8f3361fd1b7d212aedf17bb05 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 10 Apr 2015 14:40:11 +0200
Subject: [PATCH 3/5] Template transactions will not be deleted when clearing
 all transactions

---
 .../java/org/gnucash/android/db/AccountsDbAdapter.java |  3 +--
 .../org/gnucash/android/db/TransactionsDbAdapter.java  | 18 ++++++++++++++++++
 .../DeleteAllTransacationsConfirmationDialog.java      |  2 +-
 3 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index bc2e1f8b..55c5213f 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -1255,8 +1255,7 @@ public static String getOpeningBalanceAccountFullName(){
 	 */
     @Override
 	public int deleteAllRecords(){
-		mDb.delete(TransactionEntry.TABLE_NAME, null, null);
-        mDb.delete(SplitEntry.TABLE_NAME, null, null);
+		mDb.delete(TransactionEntry.TABLE_NAME, null, null); //this will take the splits along with it
         return mDb.delete(AccountEntry.TABLE_NAME, null, null);
 	}
 
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index f4c639b1..292e105f 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -564,6 +564,16 @@ public int getNumCurrencies(String transactionUID) {
     }
 
     /**
+     * Deletes all transactions except those which are marked as templates.
+     * <p>If you want to delete really all transaction records, use {@link #deleteAllRecords()}</p>
+     * @return Number of records deleted
+     */
+    public int deleteAllNonTemplateTransactions(){
+        String where = TransactionEntry.COLUMN_TEMPLATE + "!=0";
+        return mDb.delete(mTableName, where, null);
+    }
+
+    /**
      * Returns a timestamp of the earliest transaction for the specified account type
      * @param type the account type
      * @return the earliest transaction's timestamp. Returns 1970-01-01 00:00:00.000 if no transaction found
@@ -581,6 +591,14 @@ public long getTimestampOfLatestTransaction(AccountType type) {
         return getTimestamp("MAX", type);
     }
 
+    /**
+     * Returns the earliest or latest timestamp of transactions for a specific account type
+     * @param mod Mode (either MAX or MIN)
+     * @param type AccountType
+     * @return earliest or latest timestamp of transactions
+     * @see #getTimestampOfLatestTransaction(AccountType)
+     * @see #getTimestampOfEarliestTransaction(AccountType)
+     */
     private long getTimestamp(String mod, AccountType type) {
         String sql = "SELECT " + mod + "(" + TransactionEntry.COLUMN_TIMESTAMP + ")" +
                 " FROM " + TransactionEntry.TABLE_NAME +
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransacationsConfirmationDialog.java b/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransacationsConfirmationDialog.java
index 20554a4b..1e62eeb2 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransacationsConfirmationDialog.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransacationsConfirmationDialog.java
@@ -68,7 +68,7 @@ public void onClick(DialogInterface dialog, int whichButton) {
                                     openingBalances = accountsDbAdapter.getAllOpeningBalanceTransactions();
                                 }
                                 TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
-                                transactionsDbAdapter.deleteAllRecords();
+                                transactionsDbAdapter.deleteAllNonTemplateTransactions();
 
                                 if (preserveOpeningBalances) {
                                     transactionsDbAdapter.bulkAddTransactions(openingBalances);

From 99dea00632c892fe94cac2c9f60011efd820e946 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 10 Apr 2015 21:41:44 +0200
Subject: [PATCH 4/5] Auto-balance transactions during import

Fixed: opening balances are deleted after export is completed
Fixed: Regression - no backup created before deleting transactions

Closes #302
---
 .../gnucash/android/export/ExportAsyncTask.java    | 29 ++++++++++++++++++----
 .../gnucash/android/importer/GncXmlHandler.java    | 20 +++++++++++++++
 .../org/gnucash/android/model/Transaction.java     | 29 +++++++++++++++++++++-
 3 files changed, 72 insertions(+), 6 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index a932cfeb..82d21cb4 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -26,20 +26,20 @@
 import android.os.AsyncTask;
 import android.os.Build;
 import android.preference.PreferenceManager;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentActivity;
 import android.util.Log;
 import android.widget.Toast;
 
 import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.export.ofx.OfxExporter;
 import org.gnucash.android.export.qif.QifExporter;
 import org.gnucash.android.export.qif.QifHelper;
 import org.gnucash.android.export.xml.GncXmlExporter;
+import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
-import org.gnucash.android.ui.transaction.dialog.TransactionsDeleteConfirmationDialogFragment;
 
 import java.io.BufferedReader;
 import java.io.BufferedWriter;
@@ -208,8 +208,7 @@ protected void onPostExecute(Boolean exportResult) {
         }
 
         if (mExportParams.shouldDeleteTransactionsAfterExport()) {
-            //TODO: we delete with impunity here, make sure files are backed-up first
-            TransactionsDbAdapter.getInstance().deleteAllRecords();
+            backupAndDeleteTransactions();
 
             //now refresh the respective views
             if (mContext instanceof AccountsActivity){
@@ -226,6 +225,26 @@ protected void onPostExecute(Boolean exportResult) {
     }
 
     /**
+     * Backups of the database, saves opening balances (if necessary)
+     * and deletes all non-template transactions in the database.
+     */
+    private void backupAndDeleteTransactions(){
+        GncXmlExporter.createBackup(); //create backup before deleting everything
+        List<Transaction> openingBalances = new ArrayList<Transaction>();
+        boolean preserveOpeningBalances = GnuCashApplication.shouldSaveOpeningBalances(false);
+        if (preserveOpeningBalances) {
+            openingBalances = AccountsDbAdapter.getInstance().getAllOpeningBalanceTransactions();
+        }
+
+        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        transactionsDbAdapter.deleteAllNonTemplateTransactions();
+
+        if (preserveOpeningBalances) {
+            transactionsDbAdapter.bulkAddTransactions(openingBalances);
+        }
+    }
+
+    /**
      * Starts an intent chooser to allow the user to select an activity to receive
      * the exported OFX file
      * @param path String path to the file on disk
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 76a9356d..1cc931cb 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -433,19 +433,25 @@ else if (qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SPLIT_MEMO)){
             mSplit.setMemo(characterString);
         }
         else if (qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SPLIT_VALUE)){
+            //the split amount uses the transaction currency, but in the db it will correctly use the account currency
             Money amount = new Money(GncXmlHelper.parseMoney(characterString), mTransaction.getCurrency());
+
+            //this is intentional: GnuCash XML formats split amounts, credits are negative, debits are positive.
             mSplit.setType(amount.isNegative() ? TransactionType.CREDIT : TransactionType.DEBIT);
             mSplit.setAmount(amount.absolute());
         }
         else if (qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SPLIT_ACCOUNT)){
             mSplit.setAccountUID(characterString);
+            mSplit.setAmount(mSplit.getAmount().withCurrency(getCurrencyForAccount(characterString)));
         }
         else if (qualifiedName.equals(GncXmlHelper.TAG_TRN_SPLIT)){
             mTransaction.addSplit(mSplit);
         }
         else if (qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_TRANSACTION)){
             mTransaction.setTemplate(mInTemplates);
+            mTransaction.autoBalance();
             mTransactionList.add(mTransaction);
+
             if (mRecurrencePeriod > 0) { //if we find an old format recurrence period, parse it
                 mTransaction.setTemplate(true);
                 ScheduledAction scheduledAction = ScheduledAction.parseScheduledAction(mTransaction, mRecurrencePeriod);
@@ -569,4 +575,18 @@ public void endDocument() throws SAXException {
             mAccountsDbAdapter.endTransaction();
         }
     }
+
+    /**
+     * Returns the currency for an account which has been parsed (but not yet saved to the db)
+     * <p>This is used when parsing splits to assign the right currencies to the splits</p>
+     * @param accountUID GUID of the account
+     * @return Currency of the account
+     */
+    private Currency getCurrencyForAccount(String accountUID){
+        for (Account account : mAccountList) {
+            if (account.getUID().equals(accountUID))
+                return account.getCurrency();
+        }
+        return Currency.getInstance(Money.DEFAULT_CURRENCY_CODE);
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/model/Transaction.java b/app/src/main/java/org/gnucash/android/model/Transaction.java
index 1a699443..9520250c 100644
--- a/app/src/main/java/org/gnucash/android/model/Transaction.java
+++ b/app/src/main/java/org/gnucash/android/model/Transaction.java
@@ -159,6 +159,31 @@ private void initDefaults(){
 	}
 
     /**
+     * Auto-balance the transaction by creating an imbalance split where necessary
+     * <p><b>Note:</b>If a transaction has splits with different currencies, not auto-balancing will be performed.</p>
+     */
+    public void autoBalance(){
+        //FIXME: when multiple currencies per transaction are supported
+        Currency lastCurrency = null;
+        for (Split split : mSplitList) {
+            Currency currentCurrency = split.getAmount().getCurrency();
+            if (lastCurrency == null)
+                lastCurrency = currentCurrency;
+            else if (lastCurrency != currentCurrency){
+                return;
+            }
+        }
+
+        Money imbalance = getImbalance();
+        if (!imbalance.isAmountZero()){
+            Currency currency = Currency.getInstance(mCurrencyCode);
+            Split split = new Split(imbalance.negate(),
+                    AccountsDbAdapter.getInstance().getOrCreateImbalanceAccountUID(currency));
+            mSplitList.add(split);
+        }
+    }
+
+    /**
      * Returns list of splits for this transaction
      * @return {@link java.util.List} of splits in the transaction
      */
@@ -236,7 +261,9 @@ public Money getImbalance(){
 
     /**
      * Computes the balance of the splits belonging to a particular account.
-     * Only those splits which belong to the account will be considered.
+     * <p>Only those splits which belong to the account will be considered.
+     * If the {@code accountUID} is null, then the imbalance of the transaction is computed. This means that either
+     * zero is returned (for balanced transactions) or the imbalance amount will be returned.</p>
      * @param accountUID Unique Identifier of the account
      * @param splitList List of splits
      * @return Money list of splits

From 0fa9038408d9876201db15dbc2b46340aab8db43 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sat, 11 Apr 2015 03:12:57 +0200
Subject: [PATCH 5/5] Improved the parsing and display of scheduled action
 descriptions

Added UID of origin scheduled action to transaction table
Fixed: Scheduled actions not exported to XML
Localized the scheduled action repeat string
Refactored database schema (removed deprecated tables and code)
---
 .../org/gnucash/android/db/DatabaseHelper.java     |  13 +--
 .../org/gnucash/android/db/DatabaseSchema.java     |   6 +-
 .../android/db/ScheduledActionDbAdapter.java       |  12 +--
 .../gnucash/android/db/TransactionsDbAdapter.java  |  33 ++-----
 .../gnucash/android/export/xml/GncXmlExporter.java |  12 ++-
 .../gnucash/android/export/xml/GncXmlHelper.java   |   5 +-
 .../gnucash/android/importer/GncXmlHandler.java    |   5 +-
 .../java/org/gnucash/android/model/PeriodType.java | 108 +++++++++++++++++++++
 .../org/gnucash/android/model/ScheduledAction.java |  89 ++++++++---------
 .../org/gnucash/android/model/Transaction.java     |  21 ++++
 .../gnucash/android/service/SchedulerService.java  |   2 +-
 .../ScheduledTransactionsListFragment.java         |  10 +-
 .../ui/transaction/TransactionFormFragment.java    |   4 +
 .../gnucash/android/ui/util/RecurrenceParser.java  |   2 +-
 app/src/main/res/values-de/strings.xml             |  16 +++
 app/src/main/res/values-el/strings.xml             |  16 +++
 app/src/main/res/values-es-rMX/strings.xml         |  16 +++
 app/src/main/res/values-es/strings.xml             |  16 +++
 app/src/main/res/values-fr/strings.xml             |  16 +++
 app/src/main/res/values-hu/strings.xml             |  16 +++
 app/src/main/res/values-it/strings.xml             |  16 +++
 app/src/main/res/values-nb/strings.xml             |  16 +++
 app/src/main/res/values-nl/strings.xml             |  16 +++
 app/src/main/res/values-pt-rBR/strings.xml         |  16 +++
 app/src/main/res/values-ru/strings.xml             |  16 +++
 app/src/main/res/values-zh/strings.xml             |  16 +++
 app/src/main/res/values/strings.xml                |  16 +++
 27 files changed, 434 insertions(+), 96 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/model/PeriodType.java

diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
index 019bffb6..843d1e16 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
@@ -89,6 +89,7 @@
 			+ TransactionEntry.COLUMN_EXPORTED      + " tinyint default 0, "
 			+ TransactionEntry.COLUMN_TEMPLATE      + " tinyint default 0, "
             + TransactionEntry.COLUMN_CURRENCY      + " varchar(255) not null, "
+            + TransactionEntry.COLUMN_SCHEDX_ACTION_UID + " varchar(255), "
             + TransactionEntry.COLUMN_CREATED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
             + TransactionEntry.COLUMN_MODIFIED_AT   + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP "
 			+ ");" + createUpdatedAtTrigger(TransactionEntry.TABLE_NAME);
@@ -122,7 +123,7 @@
             + ScheduledActionEntry.COLUMN_END_TIME       + " integer default 0, "
             + ScheduledActionEntry.COLUMN_TAG            + " text, "
             + ScheduledActionEntry.COLUMN_ENABLED        + " tinyint default 1, " //enabled by default
-            + ScheduledActionEntry.COLUMN_NUM_OCCURRENCES+ " integer default 0, "
+            + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " integer default 0, "
             + ScheduledActionEntry.COLUMN_EXECUTION_COUNT+ " integer default 0, "
             + ScheduledActionEntry.COLUMN_CREATED_AT     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
             + ScheduledActionEntry.COLUMN_MODIFIED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP "
@@ -207,7 +208,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
             if (oldVersion == 3 && newVersion >= 4){
                 Log.i(LOG_TAG, "Updating database to version 4");
                 String addRecurrencePeriod = "ALTER TABLE " + TransactionEntry.TABLE_NAME +
-                        " ADD COLUMN " + TransactionEntry.COLUMN_RECURRENCE_PERIOD + " integer default 0";
+                        " ADD COLUMN recurrence_period integer default 0";
 
                 String addDefaultTransferAccount = "ALTER TABLE " + AccountEntry.TABLE_NAME
                         + " ADD COLUMN " + AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID + " varchar(255)";
@@ -297,7 +298,7 @@ private int upgradeDbToVersion8(SQLiteDatabase db) {
             //TODO: Migrate old scheduled events using only SQL, code had changed
             //TODO: Take care to properly migrate the created_at dates for transactions (use the date already in the transaction)
             //TODO: auto-balance existing splits during migration
-
+            //TODO: add schedx_action_uid column to transactions table
             db.setTransactionSuccessful();
             oldVersion = 8;
         } finally {
@@ -334,7 +335,7 @@ private int upgradeDbToVersion7(SQLiteDatabase db) {
                     + TransactionEntry.COLUMN_TIMESTAMP + " integer not null, "
                     + TransactionEntry.COLUMN_EXPORTED + " tinyint default 0, "
                     + TransactionEntry.COLUMN_CURRENCY + " varchar(255) not null, "
-                    + TransactionEntry.COLUMN_RECURRENCE_PERIOD + " integer default 0, "
+                    + "recurrence_period integer default 0, "
                     + "UNIQUE (" + TransactionEntry.COLUMN_UID + ") "
                     + ");");
             // initialize new transaction table wiht data from old table
@@ -346,7 +347,7 @@ private int upgradeDbToVersion7(SQLiteDatabase db) {
                             + TransactionEntry.COLUMN_TIMESTAMP + " , "
                             + TransactionEntry.COLUMN_EXPORTED + " , "
                             + TransactionEntry.COLUMN_CURRENCY + " , "
-                            + TransactionEntry.COLUMN_RECURRENCE_PERIOD + " )  SELECT "
+                            + "recurrence_period )  SELECT "
                             + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry._ID + " , "
                             + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_UID + " , "
                             + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_DESCRIPTION + " , "
@@ -354,7 +355,7 @@ private int upgradeDbToVersion7(SQLiteDatabase db) {
                             + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_TIMESTAMP + " , "
                             + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_EXPORTED + " , "
                             + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_CURRENCY + " , "
-                            + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_RECURRENCE_PERIOD
+                            + TransactionEntry.TABLE_NAME + "_bak.recurrence_period"
                             + " FROM " + TransactionEntry.TABLE_NAME + "_bak , " + AccountEntry.TABLE_NAME
                             + " ON " + TransactionEntry.TABLE_NAME + "_bak.account_uid == " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID
             );
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
index d2d83111..f658ca6d 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
@@ -79,9 +79,7 @@ private DatabaseSchema(){}
         public static final String COLUMN_TIMESTAMP             = "timestamp";
         public static final String COLUMN_EXPORTED              = "is_exported";
         public static final String COLUMN_TEMPLATE              = "is_template";
-
-        @Deprecated
-        public static final String COLUMN_RECURRENCE_PERIOD     = "recurrence_period";
+        public static final String COLUMN_SCHEDX_ACTION_UID     = "schedx_action_uid";
 
         public static final String INDEX_UID                    = "transaction_uid_index";
     }
@@ -113,7 +111,7 @@ private DatabaseSchema(){}
         public static final String COLUMN_PERIOD            = "period";
         public static final String COLUMN_TAG               = "tag"; //for any action-specific information
         public static final String COLUMN_ENABLED           = "is_enabled";
-        public static final String COLUMN_NUM_OCCURRENCES   = "num_occurrences"; //FIXME: This should not be here, rather transactions table should store UID of action which created it
+        public static final String COLUMN_TOTAL_FREQUENCY   = "total_frequency";
         public static final String COLUMN_EXECUTION_COUNT   = "execution_count";
 
         public static final String INDEX_UID            = "scheduled_action_uid_index";
diff --git a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
index edda39ee..876b6033 100644
--- a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
@@ -64,7 +64,7 @@ public long addScheduledAction(ScheduledAction scheduledAction){
         contentValues.put(ScheduledActionEntry.COLUMN_TYPE,      scheduledAction.getActionType().name());
         contentValues.put(ScheduledActionEntry.COLUMN_TAG,       scheduledAction.getTag());
         contentValues.put(ScheduledActionEntry.COLUMN_ENABLED,   scheduledAction.isEnabled() ? "1":"0");
-        contentValues.put(ScheduledActionEntry.COLUMN_NUM_OCCURRENCES, scheduledAction.getNumberOfOccurences());
+        contentValues.put(ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY, scheduledAction.getTotalFrequency());
         contentValues.put(ScheduledActionEntry.COLUMN_EXECUTION_COUNT, scheduledAction.getExecutionCount());
 
         Log.d(TAG, "Replace scheduled event in the db");
@@ -92,7 +92,7 @@ public int bulkAddScheduledActions(List<ScheduledAction> scheduledActionList){
                     + ScheduledActionEntry.COLUMN_ENABLED           + " , "
                     + ScheduledActionEntry.COLUMN_CREATED_AT        + " , "
                     + ScheduledActionEntry.COLUMN_TAG               + " , "
-                    + ScheduledActionEntry.COLUMN_NUM_OCCURRENCES   + " , "
+                    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , "
                     + ScheduledActionEntry.COLUMN_EXECUTION_COUNT   + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )");
             for (ScheduledAction schedxAction:scheduledActionList) {
                 replaceStatement.clearBindings();
@@ -106,7 +106,7 @@ public int bulkAddScheduledActions(List<ScheduledAction> scheduledActionList){
                 replaceStatement.bindLong(8,    schedxAction.isEnabled() ? 1 : 0);
                 replaceStatement.bindString(9,  schedxAction.getCreatedTimestamp().toString());
                 replaceStatement.bindString(10, schedxAction.getTag());
-                replaceStatement.bindString(11, Integer.toString(schedxAction.getNumberOfOccurences()));
+                replaceStatement.bindString(11, Integer.toString(schedxAction.getTotalFrequency()));
                 replaceStatement.bindString(12, Integer.toString(schedxAction.getExecutionCount()));
 
                 replaceStatement.execute();
@@ -134,7 +134,7 @@ private ScheduledAction buildScheduledEventInstance(final Cursor cursor){
         String typeString = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TYPE));
         String tag      = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TAG));
         boolean enabled = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ENABLED)) > 0;
-        int numOccurrences = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_NUM_OCCURRENCES));
+        int numOccurrences = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY));
         int execCount = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_EXECUTION_COUNT));
 
         ScheduledAction event = new ScheduledAction(ScheduledAction.ActionType.valueOf(typeString));
@@ -146,7 +146,7 @@ private ScheduledAction buildScheduledEventInstance(final Cursor cursor){
         event.setLastRun(lastRun);
         event.setTag(tag);
         event.setEnabled(enabled);
-        event.setNumberOfOccurences(numOccurrences);
+        event.setTotalFrequency(numOccurrences);
         event.setExecutionCount(execCount);
 
         return event;
@@ -175,7 +175,7 @@ public ScheduledAction getScheduledEvent(String uid){
      * @param eventUID GUID of the event itself
      * @return List of ScheduledEvents
      */
-    public List<ScheduledAction> getScheduledEventsWithUID(@NonNull String eventUID){
+    public List<ScheduledAction> getScheduledActionsWithUID(@NonNull String eventUID){
         Cursor cursor = mDb.query(ScheduledActionEntry.TABLE_NAME, null,
                 ScheduledActionEntry.COLUMN_ACTION_UID + "= ?",
                 new String[]{eventUID}, null, null, null);
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index 292e105f..66bf8aef 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -90,6 +90,7 @@ public long addTransaction(Transaction transaction){
 		contentValues.put(TransactionEntry.COLUMN_EXPORTED,     transaction.isExported() ? 1 : 0);
 		contentValues.put(TransactionEntry.COLUMN_TEMPLATE,     transaction.isTemplate() ? 1 : 0);
         contentValues.put(TransactionEntry.COLUMN_CURRENCY,     transaction.getCurrencyCode());
+        contentValues.put(TransactionEntry.COLUMN_SCHEDX_ACTION_UID, transaction.getScheduledActionUID());
 
         Log.d(TAG, "Replacing transaction in db");
         long rowId = -1;
@@ -150,7 +151,8 @@ public long bulkAddTransactions(List<Transaction> transactionList){
                 + TransactionEntry.COLUMN_EXPORTED      + " , "
                 + TransactionEntry.COLUMN_CURRENCY      + " , "
                 + TransactionEntry.COLUMN_CREATED_AT    + " , "
-                + TransactionEntry.COLUMN_TEMPLATE + " ) VALUES ( ? , ? , ? , ?, ? , ? , ? , ?)");
+                + TransactionEntry.COLUMN_SCHEDX_ACTION_UID + " , "
+                + TransactionEntry.COLUMN_TEMPLATE + " ) VALUES ( ? , ? , ? , ?, ? , ? , ? , ? , ?)");
             for (Transaction transaction : transactionList) {
                 //Log.d(TAG, "Replacing transaction in db");
                 replaceStatement.clearBindings();
@@ -161,7 +163,8 @@ public long bulkAddTransactions(List<Transaction> transactionList){
                 replaceStatement.bindLong(5,    transaction.isExported() ? 1 : 0);
                 replaceStatement.bindString(6,  transaction.getCurrencyCode());
                 replaceStatement.bindString(7,  transaction.getCreatedTimestamp().toString());
-                replaceStatement.bindLong(8,    transaction.isTemplate() ? 1 : 0);
+                replaceStatement.bindString(8,  transaction.getScheduledActionUID());
+                replaceStatement.bindLong(9,    transaction.isTemplate() ? 1 : 0);
                 replaceStatement.execute();
                 rowInserted ++;
                 splitList.addAll(transaction.getSplits());
@@ -379,29 +382,11 @@ public Transaction buildTransactionInstance(Cursor c){
 		transaction.setNote(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_NOTES)));
 		transaction.setExported(c.getInt(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_EXPORTED)) == 1);
 		transaction.setTemplate(c.getInt(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_TEMPLATE)) == 1);
+        transaction.setCurrencyCode(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_CURRENCY)));
+        transaction.setScheduledActionUID(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_SCHEDX_ACTION_UID)));
+        long transactionID = c.getLong(c.getColumnIndexOrThrow(TransactionEntry._ID));
+        transaction.setSplits(mSplitsDbAdapter.getSplitsForTransaction(transactionID));
 
-        if (mDb.getVersion() < SPLITS_DB_VERSION){ //legacy, will be used once, when migrating the database
-            String accountUID = c.getString(c.getColumnIndexOrThrow(SplitEntry.COLUMN_ACCOUNT_UID));
-            String amountString = c.getString(c.getColumnIndexOrThrow(SplitEntry.COLUMN_AMOUNT));
-            String currencyCode = getAccountCurrencyCode(accountUID);
-            Money amount = new Money(amountString, currencyCode);
-
-            Split split = new Split(amount.absolute(), accountUID);
-            TransactionType type = Transaction.getTypeForBalance(getAccountType(accountUID), amount.isNegative());
-            split.setType(type);
-            transaction.addSplit(split);
-
-            String transferAccountUID = c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_DOUBLE_ENTRY_ACCOUNT_UID));
-            if (transferAccountUID == null) {
-                AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
-                transferAccountUID = accountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance(currencyCode));
-            }
-            transaction.addSplit(split.createPair(transferAccountUID));
-        } else {
-            transaction.setCurrencyCode(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_CURRENCY)));
-            long transactionID = c.getLong(c.getColumnIndexOrThrow(TransactionEntry._ID));
-            transaction.setSplits(mSplitsDbAdapter.getSplitsForTransaction(transactionID));
-        }
 		return transaction;
 	}
 
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index 6aaf0627..55a7dadf 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -182,6 +182,7 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
                         TransactionEntry.TABLE_NAME+"."+ TransactionEntry.COLUMN_EXPORTED + " AS trans_exported",
                         TransactionEntry.TABLE_NAME+"."+ TransactionEntry.COLUMN_CURRENCY + " AS trans_currency",
                         TransactionEntry.TABLE_NAME+"."+ TransactionEntry.COLUMN_CREATED_AT + " AS trans_date_posted",
+                        TransactionEntry.TABLE_NAME+"."+ TransactionEntry.COLUMN_SCHEDX_ACTION_UID + " AS trans_from_sched_action",
                         SplitEntry.TABLE_NAME+"."+ SplitEntry.COLUMN_UID + " AS split_uid",
                         SplitEntry.TABLE_NAME+"."+ SplitEntry.COLUMN_MEMO + " AS split_memo",
                         SplitEntry.TABLE_NAME+"."+ SplitEntry.COLUMN_TYPE + " AS split_type",
@@ -267,6 +268,12 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
                     slotValue.add("false");
                 }
 
+                String scheduledActionUID = cursor.getString(cursor.getColumnIndexOrThrow("trans_from_sched_action"));
+                if (scheduledActionUID != null && !scheduledActionUID.isEmpty()){
+                    slotKey.add(GncXmlHelper.KEY_FROM_SCHED_ACTION);
+                    slotType.add(GncXmlHelper.ATTR_VALUE_GUID);
+                    slotValue.add(scheduledActionUID);
+                }
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_TRN_SLOTS);
                 exportSlots(xmlSerializer, slotKey, slotType, slotValue);
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_TRN_SLOTS);
@@ -399,7 +406,7 @@ private void exportScheduledActions(XmlSerializer xmlSerializer) throws IOExcept
                 //end date
                 serializeDate(xmlSerializer, GncXmlHelper.TAG_SX_END, endTime);
             } else { //add number of occurrences
-                int numOccurrences = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_NUM_OCCURRENCES));
+                int numOccurrences = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY));
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_NUM_OCCUR);
                 xmlSerializer.text(Integer.toString(numOccurrences));
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_NUM_OCCUR);
@@ -515,6 +522,9 @@ public void generateExport(Writer writer) throws ExporterException{
             exportTransactions(xmlSerializer, true);
             xmlSerializer.endTag(null, GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS);
 
+            //scheduled actions
+            exportScheduledActions(xmlSerializer);
+
             xmlSerializer.endTag(null, GncXmlHelper.TAG_BOOK);
             xmlSerializer.endTag(null, GncXmlHelper.TAG_ROOT);
             xmlSerializer.endDocument();
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
index 5e112c22..6bd2481e 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
@@ -126,12 +126,13 @@
     public static final String KEY_COLOR            = "color";
     public static final String KEY_FAVORITE         = "favorite";
     public static final String KEY_NOTES            = "notes";
-    public static final String KEY_DEFAULT_TRANSFER_ACCOUNT = "default_transfer_account";
     public static final String KEY_EXPORTED         = "exported";
-    public static final String KEY_SCHEDX_ACTION = "sched-xaction";
+    public static final String KEY_SCHEDX_ACTION    = "sched-xaction";
     public static final String KEY_SPLIT_ACCOUNT    = "key_account";
     public static final String KEY_DEBIT_FORMULA    = "debit-formula";
     public static final String KEY_CREDIT_FORMULA   = "credit-formula";
+    public static final String KEY_FROM_SCHED_ACTION        = "from-sched-xaction";
+    public static final String KEY_DEFAULT_TRANSFER_ACCOUNT = "default_transfer_account";
 
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 1cc931cb..bf123f4b 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -29,6 +29,7 @@
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.model.PeriodType;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
@@ -475,13 +476,13 @@ else if (qualifiedName.equals(GncXmlHelper.TAG_SX_ENABLED)){
             mScheduledAction.setEnabled(characterString.equalsIgnoreCase("y"));
         }
         else if (qualifiedName.equals(GncXmlHelper.TAG_SX_NUM_OCCUR)){
-            mScheduledAction.setNumberOfOccurences(Integer.parseInt(characterString));
+            mScheduledAction.setTotalFrequency(Integer.parseInt(characterString));
         }
         else if (qualifiedName.equals(GncXmlHelper.TAG_RX_MULT)){
             mRecurrenceMultiplier = Integer.parseInt(characterString);
         }
         else if (qualifiedName.equals(GncXmlHelper.TAG_RX_PERIOD_TYPE)){
-            ScheduledAction.PeriodType periodType = ScheduledAction.PeriodType.valueOf(characterString.toUpperCase());
+            PeriodType periodType = PeriodType.valueOf(characterString.toUpperCase());
             periodType.setMultiplier(mRecurrenceMultiplier);
             mScheduledAction.setPeriod(periodType);
         }
diff --git a/app/src/main/java/org/gnucash/android/model/PeriodType.java b/app/src/main/java/org/gnucash/android/model/PeriodType.java
new file mode 100644
index 00000000..21435024
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/model/PeriodType.java
@@ -0,0 +1,108 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.model;
+
+import android.content.res.Resources;
+
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+
+/**
+* Represents a type of period which can be associated with a recurring event
+ * @author Ngewi Fet <ngewif@gmail.com>
+ * @see org.gnucash.android.model.ScheduledAction
+*/
+public enum PeriodType {
+    DAY, WEEK, MONTH, YEAR;
+
+    int mMultiplier = 1; //multiplier for the period type
+
+    /**
+     * Sets the multiplier for this period type
+     * e.g. bi-weekly actions have period type {@link PeriodType#WEEK} and multiplier 2
+     * @param multiplier Multiplier for this period type
+     */
+    public void setMultiplier(int multiplier){
+        mMultiplier = multiplier;
+    }
+
+    /**
+     * Returns the multiplier for this period type. The default multiplier is 1.
+     * e.g. bi-weekly actions have period type {@link PeriodType#WEEK} and multiplier 2
+     * @return  Multiplier for this period type
+     */
+    public int getMultiplier(){
+        return mMultiplier;
+    }
+
+    /**
+     * Returns the frequency description of this period type.
+     * This is used mostly for generating the recurrence rule.
+     * @return Frequency description
+     */
+    public String getFrequencyDescription() {
+        if (mMultiplier > 1){
+            switch (this) {
+                case DAY:
+                    return "Every " + mMultiplier + " days";
+                case WEEK:
+                    return "Every " + mMultiplier + " weeks";
+                case MONTH:
+                    return "Every " + mMultiplier + " months";
+                case YEAR:
+                    return "Every " + mMultiplier + " years";
+                default:
+                    return "Every " + mMultiplier + " days";
+            }
+        } else {
+            switch (this) {
+                case DAY:
+                    return "Daily";
+                case WEEK:
+                    return "Weekly";
+                case MONTH:
+                    return "Monthly";
+                case YEAR:
+                    return "Yearly";
+                default:
+                    return "Daily";
+            }
+        }
+    }
+
+    /**
+     * Returns a localized string describing this period type's frequency.
+     * @return String describing period type
+     */
+    public String getLocalizedFrequencyDescription(){
+        Resources res = GnuCashApplication.getAppContext().getResources();
+
+        switch (this) {
+            case DAY:
+                return res.getQuantityString(R.plurals.label_every_x_days, mMultiplier);
+            case WEEK:
+                return res.getQuantityString(R.plurals.label_every_x_weeks, mMultiplier);
+            case MONTH:
+                return res.getQuantityString(R.plurals.label_every_x_months, mMultiplier);
+            case YEAR:
+                return res.getQuantityString(R.plurals.label_every_x_years, mMultiplier);
+            default:
+                return res.getQuantityString(R.plurals.label_every_x_days, mMultiplier);
+        }
+    }
+
+}
diff --git a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
index 32e5d289..f76674d2 100644
--- a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
+++ b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
@@ -38,30 +38,6 @@
      */
     public enum ActionType {TRANSACTION, EXPORT}
 
-    public enum PeriodType {
-        DAY, WEEK, MONTH, YEAR;
-
-        int mMultiplier = 1; //multiplier for the period type
-
-        /**
-         * Sets the multiplier for this period type
-         * e.g. bi-weekly actions have period type {@link PeriodType#WEEK} and multiplier 2
-         * @param multiplier Multiplier for this period type
-         */
-        public void setMultiplier(int multiplier){
-            mMultiplier = multiplier;
-        }
-
-        /**
-         * Returns the multiplier for this period type. The default multiplier is 1.
-         * e.g. bi-weekly actions have period type {@link PeriodType#WEEK} and multiplier 2
-         * @return  Multiplier for this period type
-         */
-        public int getMultiplier(){
-            return mMultiplier;
-        }
-    }
-
     /**
      * Next scheduled run of Event
      */
@@ -84,14 +60,14 @@ public int getMultiplier(){
     private ActionType mActionType;
 
     /**
-     * Number of occurences of this event
+     * Number of times this event is to be executed
      */
-    private int mNumberOfOccurences = 0;
+    private int mTotalFrequency = 0;
 
     /**
      * How many times this action has already been executed
      */
-    private int mNumberOfExecutions = 0;
+    private int mExecutionCount = 0;
 
     public ScheduledAction(ActionType actionType){
         mActionType = actionType;
@@ -134,7 +110,7 @@ public void setPeriod(long period) {
 
     /**
      * Sets the period given the period type.
-     * The {@link org.gnucash.android.model.ScheduledAction.PeriodType} should have the multiplier set,
+     * The {@link PeriodType} should have the multiplier set,
      * e.g. bi-weekly actions have period type {@link PeriodType#WEEK} and multiplier 2
      * @param periodType Type of period
      */
@@ -165,7 +141,7 @@ public PeriodType getPeriodType(){
     }
 
     /**
-     * Computes the {@link org.gnucash.android.model.ScheduledAction.PeriodType} for a given {@code period}
+     * Computes the {@link PeriodType} for a given {@code period}
      * @param period Period in milliseconds since Epoch
      * @return PeriodType corresponding to the period
      */
@@ -221,7 +197,7 @@ public long getEndTime() {
      * @return End time in milliseconds for the scheduled action
      */
     public long getApproxEndTime(){
-        return mStartDate + (mPeriod * mNumberOfOccurences);
+        return mStartDate + (mPeriod * mTotalFrequency);
     }
 
     public void setEndTime(long endDate) {
@@ -246,20 +222,18 @@ public void setEnabled(boolean enabled){
 
     /**
      * Returns the total number of occurences of this scheduled action.
-     * <p>Typically, this is set explicity, but if not, then it is computed from the values of
-     * the start date, end date and period.</p>
      * @return Total number of occurences of this action
      */
-    public int getNumberOfOccurences(){
-        return mNumberOfOccurences;
+    public int getTotalFrequency(){
+        return mTotalFrequency;
     }
 
     /**
      * Sets the number of occurences of this action
      * @param occurencesCount Number of occurences
      */
-    public void setNumberOfOccurences(int occurencesCount){
-        this.mNumberOfOccurences = occurencesCount;
+    public void setTotalFrequency(int occurencesCount){
+        this.mTotalFrequency = occurencesCount;
     }
 
     /**
@@ -267,7 +241,7 @@ public void setNumberOfOccurences(int occurencesCount){
      * @return Number of times this action has been executed
      */
     public int getExecutionCount(){
-        return mNumberOfExecutions;
+        return mExecutionCount;
     }
 
     /**
@@ -275,7 +249,7 @@ public int getExecutionCount(){
      * @param executionCount Number of executions
      */
     public void setExecutionCount(int executionCount){
-        mNumberOfExecutions = executionCount;
+        mExecutionCount = executionCount;
     }
 
     /**
@@ -283,16 +257,43 @@ public void setExecutionCount(int executionCount){
      * @return String description of repeat schedule
      */
     public String getRepeatString(){
-        //TODO: localize the string
-        SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy", Locale.US);
-        String repeatString = String.format("Repeats every %d %s starting on %s", getPeriodType().getMultiplier(), getPeriodType().name().toLowerCase(),
-                dateFormat.format(new Date(mStartDate)));
+        String dayOfWeek = new SimpleDateFormat("E", Locale.US).format(new Date(mStartDate));
+        PeriodType periodType = getPeriodType();
+        StringBuilder ruleBuilder = new StringBuilder(periodType.getLocalizedFrequencyDescription());
+        ruleBuilder.append(" on " + dayOfWeek);
+        ruleBuilder.append(";");
         if (mEndDate > 0){
-            repeatString += " until " + dateFormat.format(mEndDate);
+            ruleBuilder.append(" until " + new SimpleDateFormat("M/d", Locale.US).format(new Date(mEndDate)) + ";");
+        } else if (mTotalFrequency > 0){
+            ruleBuilder.append(" for " + mTotalFrequency + " times;");
         }
-        return repeatString;
+        return ruleBuilder.toString();
     }
 
+    /**
+     * Creates an RFC 2445 string which describes this recurring event
+     * @return String describing event
+     */
+    public String getRuleString(){
+        String dayOfWeek = new SimpleDateFormat("EE", Locale.US).format(new Date(mStartDate));
+        PeriodType periodType = getPeriodType();
+        StringBuilder ruleBuilder = new StringBuilder(periodType.getFrequencyDescription());
+        ruleBuilder.append(" on " + dayOfWeek);
+        ruleBuilder.append(";");
+        if (mEndDate > 0){
+            ruleBuilder.append(" until " + new SimpleDateFormat("M/d/yyyy", Locale.US).format(new Date(mEndDate)) + ";");
+        } else if (mTotalFrequency > 0){
+            ruleBuilder.append(" for " + mTotalFrequency + " times;");
+        }
+        return ruleBuilder.toString();
+    }
+
+    /**
+     * Creates a ScheduledAction from a Transaction and a period
+     * @param transaction
+     * @param period
+     * @return
+     */
     public static ScheduledAction parseScheduledAction(Transaction transaction, long period){
         ScheduledAction scheduledAction = new ScheduledAction(ActionType.TRANSACTION);
         scheduledAction.mActionUID = transaction.getUID();
diff --git a/app/src/main/java/org/gnucash/android/model/Transaction.java b/app/src/main/java/org/gnucash/android/model/Transaction.java
index 9520250c..eb1c8739 100644
--- a/app/src/main/java/org/gnucash/android/model/Transaction.java
+++ b/app/src/main/java/org/gnucash/android/model/Transaction.java
@@ -115,6 +115,11 @@
      */
     private boolean mIsTemplate = false;
 
+    /**
+     * GUID of ScheduledAction which created this transaction
+     */
+    private String mScheduledActionUID = null;
+
 	/**
 	 * Overloaded constructor. Creates a new transaction instance with the
 	 * provided data and initializes the rest to default values.
@@ -515,6 +520,22 @@ public Element toOFX(Document doc, String accountUID){
 	}
 
     /**
+     * Returns the GUID of the {@link org.gnucash.android.model.ScheduledAction} which created this transaction
+     * @return GUID of scheduled action
+     */
+    public String getScheduledActionUID() {
+        return mScheduledActionUID;
+    }
+
+    /**
+     * Sets the GUID of the {@link org.gnucash.android.model.ScheduledAction} which created this transaction
+     * @param scheduledActionUID GUID of the scheduled action
+     */
+    public void setScheduledActionUID(String scheduledActionUID) {
+        mScheduledActionUID = scheduledActionUID;
+    }
+
+    /**
      * Creates an Intent with arguments from the <code>transaction</code>.
      * This intent can be broadcast to create a new transaction
      * @param transaction Transaction used to create intent
diff --git a/app/src/main/java/org/gnucash/android/service/SchedulerService.java b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
index aa00989c..02776cd8 100644
--- a/app/src/main/java/org/gnucash/android/service/SchedulerService.java
+++ b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
@@ -70,7 +70,7 @@ protected void onHandleIntent(Intent intent) {
 
             long now = System.currentTimeMillis();
             //if we did not exceed the endtime (if there is one), and one execution period has passed since last run
-            if (((endTime > 0 && now < endTime) || (scheduledAction.getExecutionCount() < scheduledAction.getNumberOfOccurences()) || endTime == 0)
+            if (((endTime > 0 && now < endTime) || (scheduledAction.getExecutionCount() < scheduledAction.getTotalFrequency()) || endTime == 0)
                     && (lastRun + period) < now ){
                 executeScheduledEvent(scheduledAction);
             }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
index 3a0fb65e..fb33929d 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2013 - 2014 Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2013 - 2015 Ngewi Fet <ngewif@gmail.com>
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -110,7 +110,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                         Log.i(TAG, "Cancelling scheduled transaction(s)");
                         String trnUID = mTransactionsDbAdapter.getUID(id);
                         ScheduledActionDbAdapter scheduledActionDbAdapter = GnuCashApplication.getScheduledEventDbAdapter();
-                        List<ScheduledAction> events = scheduledActionDbAdapter.getScheduledEventsWithUID(trnUID);
+                        List<ScheduledAction> events = scheduledActionDbAdapter.getScheduledActionsWithUID(trnUID);
 
                         if (mTransactionsDbAdapter.deleteRecord(id)){
                             Toast.makeText(getActivity(), R.string.toast_recurring_transaction_deleted, Toast.LENGTH_SHORT).show();
@@ -179,8 +179,8 @@ public void onResume() {
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
         super.onListItemClick(l, v, position, id);
-        if (mInEditMode){
-            CheckBox checkbox = (CheckBox) v.findViewById(R.id.checkbox_parent_account);
+        if (mActionMode != null){
+            CheckBox checkbox = (CheckBox) v.findViewById(R.id.checkbox);
             checkbox.setChecked(!checkbox.isChecked());
             return;
         }
@@ -400,7 +400,7 @@ public void bindView(View view, Context context, Cursor cursor) {
             TextView descriptionTextView = (TextView) view.findViewById(R.id.secondary_text);
 
             ScheduledActionDbAdapter scheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
-            List<ScheduledAction> events = scheduledActionDbAdapter.getScheduledEventsWithUID(transaction.getUID());
+            List<ScheduledAction> events = scheduledActionDbAdapter.getScheduledActionsWithUID(transaction.getUID());
             StringBuilder repeatStringBuilder = new StringBuilder();
             for (ScheduledAction event : events) {
                 repeatStringBuilder.append(event.getRepeatString()).append("\n");
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index fa139cff..f15c9cb2 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -435,6 +435,10 @@ private void initializeViewsWithTransaction(){
         }
 
         mSaveTemplate.setChecked(mTransaction.isTemplate());
+        List<ScheduledAction> scheduledActions = ScheduledActionDbAdapter.getInstance().getScheduledActionsWithUID(mTransaction.getUID());
+        if (!scheduledActions.isEmpty()){
+            mRecurrenceTextView.setText(scheduledActions.get(0).getRuleString());
+        }
     }
 
     private void enableControls(boolean b) {
diff --git a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
index 70c8c16d..fe5b993d 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
@@ -128,7 +128,7 @@ private static void parseEndTime(EventRecurrence eventRecurrence, ScheduledActio
             endTime.parse(eventRecurrence.until);
             scheduledAction.setEndTime(endTime.toMillis(false));
         } else if (eventRecurrence.count > 0){
-            scheduledAction.setNumberOfOccurences(eventRecurrence.count);
+            scheduledAction.setTotalFrequency(eventRecurrence.count);
         }
     }
 
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 366352a9..11daac28 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -440,4 +440,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index 319639f5..ccd940da 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -465,4 +465,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index 571a2e13..c5aa38e7 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -450,4 +450,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 6eb36f4b..f3d4ef35 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -447,4 +447,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index ae46c13d..4e0f037e 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -447,4 +447,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index 064c0402..2b044f00 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -451,4 +451,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index 229dd7c0..962bb3e3 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -451,4 +451,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 3409c8ca..3fb7aab1 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -447,4 +447,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index 192dc6f2..aa46a47f 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -452,4 +452,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index f66ccf17..b14635ff 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -450,4 +450,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 0424058b..70d00498 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -453,4 +453,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index 5c4251e1..84baea42 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -448,4 +448,20 @@
     <string name="label_delete_transactions"></string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule"></string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 96b953b1..f48ccbd6 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -450,4 +450,20 @@
     <string name="label_delete_transactions">Delete transactions</string>
     <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+    <plurals name="label_every_x_days">
+        <item quantity="one">Daily</item>
+        <item quantity="other">Every %d days</item>
+    </plurals>
+    <plurals name="label_every_x_weeks">
+        <item quantity="one">Weekly</item>
+        <item quantity="other">Every %d weeks</item>
+    </plurals>
+    <plurals name="label_every_x_months">
+        <item quantity="one">Monthly</item>
+        <item quantity="other">Every %d months</item>
+    </plurals>
+    <plurals name="label_every_x_years">
+        <item quantity="one">Yearly</item>
+        <item quantity="other">Every %d years</item>
+    </plurals>
 </resources>
