From d5de300a328fa50aa0066c77207ad3ff3eb47ac9 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 12 Aug 2015 11:35:33 +0200
Subject: [PATCH] Updated transaction list view to use cards

---
 app/build.gradle                                   |   1 +
 .../android/ui/account/AccountsListFragment.java   |   1 -
 .../ui/export/ScheduledExportListFragment.java     |   1 -
 .../ScheduledTransactionsListFragment.java         |   1 -
 .../ui/transaction/TransactionsListFragment.java   | 483 +++++++--------------
 .../res/drawable-hdpi/ic_mode_edit_black_24dp.png  | Bin 0 -> 202 bytes
 .../res/drawable-mdpi/ic_mode_edit_black_24dp.png  | Bin 0 -> 160 bytes
 .../res/drawable-xhdpi/ic_mode_edit_black_24dp.png | Bin 0 -> 222 bytes
 .../drawable-xxhdpi/ic_mode_edit_black_24dp.png    | Bin 0 -> 269 bytes
 app/src/main/res/layout/cardview_account.xml       |   4 +-
 app/src/main/res/layout/cardview_transaction.xml   |  98 +++++
 .../main/res/layout/fragment_transactions_list.xml |  32 +-
 app/src/main/res/layout/list_item_2_lines.xml      |   5 +-
 app/src/main/res/layout/list_item_transaction.xml  |  26 +-
 .../main/res/menu/transactions_context_menu.xml    |   4 +-
 15 files changed, 300 insertions(+), 356 deletions(-)
 create mode 100644 app/src/main/res/drawable-hdpi/ic_mode_edit_black_24dp.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_mode_edit_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_mode_edit_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_mode_edit_black_24dp.png
 create mode 100644 app/src/main/res/layout/cardview_transaction.xml

diff --git a/app/build.gradle b/app/build.gradle
index 58fab6b0..31669ba3 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -165,6 +165,7 @@ dependencies {
             'org.jraf:android-switch-backport:1.4.0@aar',
             'com.github.PhilJay:MPAndroidChart:v2.1.0',
             'joda-time:joda-time:2.7',
+            'org.ocpsoft.prettytime:prettytime:3.2.7.Final',
             'com.google.android.gms:play-services-drive:7.0.0',
             'com.jakewharton:butterknife:7.0.1'
     )
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 2317c26d..dc997a07 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -216,7 +216,6 @@ public void tryDeleteAccount(long rowId) {
             showConfirmationDialog(rowId);
         } else {
             mAccountsDbAdapter.deleteRecord(rowId);
-            mAccountRecyclerAdapter.swapCursor(null);
             refresh();
         }
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
index 2af15a6b..c4ed8031 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
@@ -80,7 +80,6 @@
         public boolean onCreateActionMode(ActionMode mode, Menu menu) {
             MenuInflater inflater = mode.getMenuInflater();
             inflater.inflate(R.menu.transactions_context_menu, menu);
-            menu.removeItem(R.id.context_menu_move_transactions);
             return true;
         }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
index 226dcee0..eac5daa1 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
@@ -87,7 +87,6 @@
         public boolean onCreateActionMode(ActionMode mode, Menu menu) {
             MenuInflater inflater = mode.getMenuInflater();
             inflater.inflate(R.menu.transactions_context_menu, menu);
-            menu.removeItem(R.id.context_menu_move_transactions);
             return true;
         }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index 255efbf4..5fe03a22 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -19,61 +19,56 @@
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
-import android.content.res.Resources;
 import android.database.Cursor;
-import android.graphics.Rect;
 import android.os.Bundle;
 import android.support.design.widget.FloatingActionButton;
-import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentTransaction;
-import android.support.v4.app.ListFragment;
 import android.support.v4.app.LoaderManager.LoaderCallbacks;
 import android.support.v4.content.Loader;
-import android.support.v4.widget.SimpleCursorAdapter;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
-import android.support.v7.view.ActionMode;
-import android.text.format.DateUtils;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.PopupMenu;
+import android.support.v7.widget.RecyclerView;
 import android.util.Log;
-import android.util.SparseBooleanArray;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
-import android.view.TouchDelegate;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
-import android.widget.CompoundButton.OnCheckedChangeListener;
-import android.widget.ListView;
+import android.widget.ImageView;
 import android.widget.TextView;
 
 import org.gnucash.android.R;
+import org.gnucash.android.db.CursorRecyclerAdapter;
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.ui.FormActivity;
 import org.gnucash.android.ui.UxArgument;
-import org.gnucash.android.ui.transaction.dialog.BulkMoveDialogFragment;
 import org.gnucash.android.ui.util.AccountBalanceTask;
 import org.gnucash.android.ui.util.OnTransactionClickedListener;
 import org.gnucash.android.ui.util.Refreshable;
 import org.gnucash.android.ui.widget.WidgetConfigurationActivity;
+import org.ocpsoft.prettytime.PrettyTime;
 
+import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.Date;
+import java.util.Locale;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
 
 /**
  * List Fragment for displaying list of transactions for an account
  * @author Ngewi Fet <ngewif@gmail.com>
  *
  */
-public class TransactionsListFragment extends ListFragment implements
-        Refreshable, LoaderCallbacks<Cursor>, AdapterView.OnItemLongClickListener{
+public class TransactionsListFragment extends Fragment implements
+        Refreshable, LoaderCallbacks<Cursor>{
 
 	/**
 	 * Logging tag
@@ -81,64 +76,18 @@
 	protected static final String LOG_TAG = "TransactionListFragment";
 
     private TransactionsDbAdapter mTransactionsDbAdapter;
-	private SimpleCursorAdapter mCursorAdapter;
-	private ActionMode mActionMode = null;
-	private boolean mInEditMode = false;
     private String mAccountUID;
 
+
+	private TransactionRecyclerAdapter mTransactionRecyclerAdapter;
+	@Bind(R.id.transaction_recycler_view) RecyclerView mRecyclerView;
+	@Bind(R.id.fab_create_transaction) FloatingActionButton createTransactionFAB;
 	/**
 	 * Callback listener for editing transactions
 	 */
 	private OnTransactionClickedListener mTransactionEditListener;
-	
-	/**
-	 * Callbacks for the menu items in the Context ActionBar (CAB) in action mode
-	 */
-	private ActionMode.Callback mActionModeCallbacks = new ActionMode.Callback() {
-		
-		@Override
-		public boolean onCreateActionMode(ActionMode mode, Menu menu) {
-			MenuInflater inflater = mode.getMenuInflater();
-	        inflater.inflate(R.menu.transactions_context_menu, menu);
-	        return true;
-		}
-		
-		@Override
-		public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
-			//nothing to see here, move along
-			return false;
-		}
-		
-		@Override
-		public void onDestroyActionMode(ActionMode mode) {
-			finishEditMode();
-		}
-				
-		@Override
-		public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
-			switch (item.getItemId()) {
-			case R.id.context_menu_move_transactions:
-				showBulkMoveDialog();
-				mode.finish();
-				WidgetConfigurationActivity.updateAllWidgets(getActivity());
-				return true;
-
-			case R.id.context_menu_delete:
-				for (long id : getListView().getCheckedItemIds()) {
-					mTransactionsDbAdapter.deleteRecord(id);
-				}
-				refresh();
-				mode.finish();
-				WidgetConfigurationActivity.updateAllWidgets(getActivity());
-				return true;
-				
-			default:
-				return false;
-			}
-		}
-	};
 
-    @Override
+	@Override
  	public void onCreate(Bundle savedInstanceState) {		
 		super.onCreate(savedInstanceState);
 		setHasOptionsMenu(true);
@@ -146,20 +95,20 @@ public void onCreate(Bundle savedInstanceState) {
 		mAccountUID = args.getString(UxArgument.SELECTED_ACCOUNT_UID);
 
 		mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
-		mCursorAdapter = new TransactionsCursorAdapter(
-				getActivity().getApplicationContext(), 
-				R.layout.list_item_transaction, null, 
-				new String[] {DatabaseSchema.TransactionEntry.COLUMN_DESCRIPTION},
-				new int[] {R.id.primary_text});
-		setListAdapter(mCursorAdapter);
 	}
 	
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
 		View view = inflater.inflate(R.layout.fragment_transactions_list, container, false);
-		FloatingActionButton floatingActionButton = (FloatingActionButton) view.findViewById(R.id.fab_create_transaction);
-		floatingActionButton.setOnClickListener(new View.OnClickListener() {
+		ButterKnife.bind(this, view);
+
+		mRecyclerView.setHasFixedSize(true);
+		LinearLayoutManager mLayoutManager = new LinearLayoutManager(getActivity());
+		mRecyclerView.setLayoutManager(mLayoutManager);
+
+		createTransactionFAB = (FloatingActionButton) view.findViewById(R.id.fab_create_transaction);
+		createTransactionFAB.setOnClickListener(new View.OnClickListener() {
 			@Override
 			public void onClick(View v) {
 				mTransactionEditListener.createNewTransaction(mAccountUID);
@@ -176,8 +125,9 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		aBar.setDisplayShowTitleEnabled(false);
 		aBar.setDisplayHomeAsUpEnabled(true);
 
-        getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
-		getListView().setOnItemLongClickListener(this);
+		mTransactionRecyclerAdapter = new TransactionRecyclerAdapter(null);
+		mRecyclerView.setAdapter(mTransactionRecyclerAdapter);
+
 		setHasOptionsMenu(true);		
 	}
 
@@ -222,15 +172,8 @@ public void onResume() {
 		((TransactionsActivity)getActivity()).updateNavigationSelection();
 		refresh();
 	}
-	
-	@Override
-	public void onListItemClick(ListView l, View v, int position, long id) {
-		super.onListItemClick(l, v, position, id);
-		if (mInEditMode){
-			CheckBox checkbox = (CheckBox) v.findViewById(R.id.checkbox_transaction);
-			checkbox.setChecked(!checkbox.isChecked());
-			return;
-		}
+
+	public void onListItemClick(long id) {
 		Intent intent = new Intent(getActivity(), TransactionInfoActivity.class);
 		intent.putExtra(UxArgument.SELECTED_TRANSACTION_UID, mTransactionsDbAdapter.getUID(id));
 		intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, mAccountUID);
@@ -238,14 +181,6 @@ public void onListItemClick(ListView l, View v, int position, long id) {
 //		mTransactionEditListener.editTransaction(mTransactionsDbAdapter.getUID(id));
 	}
 
-	@Override
-	public boolean onItemLongClick(AdapterView<?> adapterView, View view, int position, long id) {
-		getListView().setItemChecked(position, true);
-		CheckBox checkbox = (CheckBox) view.findViewById(R.id.checkbox_transaction);
-		checkbox.setChecked(true);
-		startActionMode();
-		return true;
-	}
 
 	@Override
 	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
@@ -269,235 +204,16 @@ public boolean onOptionsItemSelected(MenuItem item) {
 	@Override
 	public void onLoadFinished(Loader<Cursor> loader, Cursor cursor) {
 		Log.d(LOG_TAG, "Transactions loader finished. Swapping in cursor");
-		mCursorAdapter.swapCursor(cursor);
-		mCursorAdapter.notifyDataSetChanged();		
+		mTransactionRecyclerAdapter.swapCursor(cursor);
+		mTransactionRecyclerAdapter.notifyDataSetChanged();
 	}
 
 	@Override
 	public void onLoaderReset(Loader<Cursor> loader) {
 		Log.d(LOG_TAG, "Resetting transactions loader");
-		mCursorAdapter.swapCursor(null);		
-	}
-
-	/**
-	 * Finishes the edit mode in the transactions list. 
-	 * Edit mode is started when at least one transaction is selected
-	 */
-	public void finishEditMode(){
-		mInEditMode = false;
-		uncheckAllItems();
-		mActionMode = null;
+		mTransactionRecyclerAdapter.swapCursor(null);
 	}
-	
-	/**
-	 * Sets the title of the Context ActionBar when in action mode. 
-	 * It sets the number highlighted items
-	 */
-	public void setActionModeTitle(){
-		int count = getListView().getCheckedItemIds().length; //mSelectedIds.size();
-		if (count > 0 && mActionMode != null){
-			mActionMode.setTitle(getResources().getString(R.string.title_selected, count));
-		}
-	}
-	
-	/**
-	 * Unchecks all the checked items in the list
-	 */
-	private void uncheckAllItems() {
-        SparseBooleanArray checkedPositions = getListView().getCheckedItemPositions();
-        ListView listView = getListView();
-        for (int i = 0; i < checkedPositions.size(); i++) {
-            int position = checkedPositions.keyAt(i);
-            listView.setItemChecked(position, false);
-        }
-	}
-
-	
-	/**
-	 * Starts action mode and activates the Context ActionBar (CAB)
-	 * Action mode is initiated as soon as at least one transaction is selected (highlighted)
-	 */
-	private void startActionMode(){
-		if (mActionMode != null) {
-            return;
-        }		
-		mInEditMode = true;
-        // Start the CAB using the ActionMode.Callback defined above
-		mActionMode = ((AppCompatActivity) getActivity())
-								.startSupportActionMode(mActionModeCallbacks);
-	}
-	
-	/**
-	 * Stops action mode and deselects all selected transactions.
-     * This method only has effect if the number of checked items is greater than 0 and {@link #mActionMode} is not null
-	 */
-	private void stopActionMode(){
-        int checkedCount = getListView().getCheckedItemIds().length;
-        if (checkedCount <= 0 && mActionMode != null) {
-            mActionMode.finish();
-        }
-    }
-		
-	/**
-	 * Prepares and displays the dialog for bulk moving transactions to another account
-	 */
-	protected void showBulkMoveDialog(){
-		FragmentManager manager = getActivity().getSupportFragmentManager();
-		FragmentTransaction ft = manager.beginTransaction();
-	    Fragment prev = manager.findFragmentByTag("bulk_move_dialog");
-	    if (prev != null) {
-	        ft.remove(prev);
-	    }
-	    ft.addToBackStack(null);
-
-	    // Create and show the dialog.
-	    DialogFragment bulkMoveFragment = new BulkMoveDialogFragment();
-	    Bundle args = new Bundle();
-	    args.putString(UxArgument.ORIGIN_ACCOUNT_UID, mAccountUID);
-	    args.putLongArray(UxArgument.SELECTED_TRANSACTION_IDS, getListView().getCheckedItemIds());
-	    bulkMoveFragment.setArguments(args);
-        bulkMoveFragment.setTargetFragment(this, 0);
-	    bulkMoveFragment.show(ft, "bulk_move_dialog");
-	}	
-	
-	/**
-	 * Extends a simple cursor adapter to bind transaction attributes to views 
-	 * @author Ngewi Fet <ngewif@gmail.com>
-	 */
-	protected class TransactionsCursorAdapter extends SimpleCursorAdapter {
-				
-		public TransactionsCursorAdapter(Context context, int layout, Cursor c,
-				String[] from, int[] to) {
-			super(context, layout, c, from, to, 0);
-		}
-		
-		@Override
-		public View getView(int position, View convertView, ViewGroup parent) {
-			final View view = super.getView(position, convertView, parent);
-			final int itemPosition = position;
-			CheckBox checkbox = (CheckBox) view.findViewById(R.id.checkbox_transaction);
-            final TextView secondaryText = (TextView) view.findViewById(R.id.secondary_text);
-
-            //TODO: Revisit this if we ever change the application theme
-            int id = Resources.getSystem().getIdentifier("btn_check_holo_light", "drawable", "android");
-            checkbox.setButtonDrawable(id);
-            checkbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
-				
-				@Override
-				public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                    getListView().setItemChecked(itemPosition, isChecked);
-                    if (isChecked) {
-                        startActionMode();
-                    } else {
-                        stopActionMode();
-                    }
-                    setActionModeTitle();
-				}
-			});
 
-
-            ListView listView = (ListView) parent;
-            if (mInEditMode && listView.isItemChecked(position)){
-                view.setBackgroundColor(getResources().getColor(R.color.abs__holo_blue_light));
-                secondaryText.setTextColor(getResources().getColor(android.R.color.white));
-            } else {
-                view.setBackgroundColor(getResources().getColor(android.R.color.transparent));
-                secondaryText.setTextColor(getResources().getColor(android.R.color.secondary_text_light_nodisable));
-                checkbox.setChecked(false);
-            }
-
-            //increase the touch target area for the add new transaction button
-
-            final View checkBoxView = checkbox;
-            final View parentView = view;
-            parentView.post(new Runnable() {
-                @Override
-                public void run() {
-                    if (isAdded()){ //may be run when fragment has been unbound from activity
-                        float extraPadding = getResources().getDimension(R.dimen.edge_padding);
-                        final android.graphics.Rect hitRect = new Rect();
-                        checkBoxView.getHitRect(hitRect);
-                        hitRect.right   += extraPadding;
-                        hitRect.bottom  += 3*extraPadding;
-                        hitRect.top     -= extraPadding;
-                        hitRect.left    -= 2*extraPadding;
-                        parentView.setTouchDelegate(new TouchDelegate(hitRect, checkBoxView));
-                    }
-                }
-            });
-
-            return view;
-		}
-		
-		@Override
-		public void bindView(View view, Context context, Cursor cursor) {
-			super.bindView(view, context, cursor);
-
-            String transactionUID = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_UID));
-			Money amount = mTransactionsDbAdapter.getBalance(transactionUID, mAccountUID);
-			TextView amountTextView = (TextView) view.findViewById(R.id.transaction_amount);
-            TransactionsActivity.displayBalance(amountTextView, amount);
-
-			TextView trNote = (TextView) view.findViewById(R.id.secondary_text);
-			String notes = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_NOTES));
-			if (notes == null || notes.length() == 0)
-				trNote.setVisibility(View.GONE);
-			else {
-				trNote.setVisibility(View.VISIBLE);
-				trNote.setText(notes);
-			}
-
-            setSectionHeaderVisibility(view, cursor);
-		}
-
-        /**
-         * Toggles the visibilty of the section header based on whether the previous transaction and current were
-         * booked on the same day or not. Transactions a generally grouped by day
-         * @param view Parent view within which to find the section header
-         * @param cursor Cursor containing transaction data set
-         * @see #isSameDay(long, long)
-         */
-        private void setSectionHeaderVisibility(View view, Cursor cursor) {
-            long transactionTime = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_TIMESTAMP));
-            int position = cursor.getPosition();
-
-            boolean hasSectionHeader;
-            if (position == 0){
-                hasSectionHeader = true;
-            } else {
-                cursor.moveToPosition(position - 1);
-                long previousTimestamp = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_TIMESTAMP));
-                cursor.moveToPosition(position);
-                //has header if two consecutive transactions were not on same day
-                hasSectionHeader = !isSameDay(previousTimestamp, transactionTime);
-            }
-
-            TextView dateHeader = (TextView) view.findViewById(R.id.date_section_header);
-
-            if (hasSectionHeader){
-                String dateString = DateUtils.formatDateTime(getActivity(), transactionTime,
-                        DateUtils.FORMAT_SHOW_WEEKDAY | DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_YEAR);
-                dateHeader.setText(dateString);
-                dateHeader.setVisibility(View.VISIBLE);
-            } else {
-                dateHeader.setVisibility(View.GONE);
-            }
-        }
-
-        /**
-         * Checks if two timestamps have the same calendar day
-         * @param timeMillis1 Timestamp in milliseconds
-         * @param timeMillis2 Timestamp in milliseconds
-         * @return <code>true</code> if both timestamps are on same day, <code>false</code> otherwise
-         */
-        private boolean isSameDay(long timeMillis1, long timeMillis2){
-			Date date1 = new Date(timeMillis1);
-			Date date2 = new Date(timeMillis2);
-			
-			SimpleDateFormat fmt = new SimpleDateFormat("yyyyMMdd");
-			return fmt.format(date1).equals(fmt.format(date2));
-		}
-	}
 	
 	/**
 	 * {@link DatabaseCursorLoader} for loading transactions asynchronously from the database
@@ -521,4 +237,133 @@ public Cursor loadInBackground() {
 		}		
 	}
 
+	public class TransactionRecyclerAdapter extends CursorRecyclerAdapter<TransactionRecyclerAdapter.ViewHolder>{
+		private int VIEW_TYPE_HEADER = 0x10;
+		private int VIEW_TYPE_CONTENT = 0x11;
+
+		private final SimpleDateFormat simpleDateFormatter = new SimpleDateFormat("MMMM yyyy", Locale.US);
+		private final PrettyTime prettyTime = new PrettyTime();
+		public TransactionRecyclerAdapter(Cursor cursor) {
+			super(cursor);
+		}
+
+		/**
+		 * Checks if two timestamps have the same calendar month
+		 * @param timeMillis1 Timestamp in milliseconds
+		 * @param timeMillis2 Timestamp in milliseconds
+		 * @return <code>true</code> if both timestamps are on same day, <code>false</code> otherwise
+		 */
+		private boolean isSameMonth(long timeMillis1, long timeMillis2){
+			Date date1 = new Date(timeMillis1);
+			Date date2 = new Date(timeMillis2);
+
+			SimpleDateFormat fmt = new SimpleDateFormat("yyyyMM", Locale.US);
+			return fmt.format(date1).equals(fmt.format(date2));
+		}
+
+		@Override
+		public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+			View v = LayoutInflater.from(parent.getContext())
+					.inflate(R.layout.cardview_transaction, parent, false);
+			return new ViewHolder(v);
+		}
+
+		@Override
+		public int getItemViewType(int position) {
+			if (position == 0){
+				return VIEW_TYPE_HEADER;
+			} else {
+				Cursor cursor = getCursor();
+				long transactionTime = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_TIMESTAMP));
+				cursor.moveToPosition(position - 1);
+				long previousTimestamp = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_TIMESTAMP));
+				cursor.moveToPosition(position);
+				//has header if two consecutive transactions were not in same month
+				return isSameMonth(previousTimestamp, transactionTime) ? VIEW_TYPE_CONTENT : VIEW_TYPE_HEADER;
+			}
+		}
+
+		@Override
+		public void onBindViewHolderCursor(ViewHolder holder, Cursor cursor) {
+			holder.transactionId = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry._ID));
+
+			String description = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_DESCRIPTION));
+			holder.transactionDescription.setText(description);
+
+			final String transactionUID = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_UID));
+			Money amount = mTransactionsDbAdapter.getBalance(transactionUID, mAccountUID);
+			TransactionsActivity.displayBalance(holder.transactionAmount, amount);
+
+			String notes = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_NOTES));
+			if (notes != null && notes.length() != 0) {
+				holder.transactionNote.setText(notes);
+			}
+
+			long dateMillis = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_TIMESTAMP));
+			holder.transactionDate.setText(prettyTime.format(new Date(dateMillis)));
+
+			final long id = holder.transactionId;
+			holder.itemView.setOnClickListener(new View.OnClickListener() {
+				@Override
+				public void onClick(View v) {
+					onListItemClick(id);
+				}
+			});
+
+			holder.editTransaction.setOnClickListener(new View.OnClickListener() {
+				@Override
+				public void onClick(View v) {
+					Intent intent = new Intent(getActivity(), FormActivity.class);
+					intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.TRANSACTION_FORM.name());
+					intent.putExtra(UxArgument.SELECTED_TRANSACTION_UID, transactionUID);
+					intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, mAccountUID);
+					startActivity(intent);
+				}
+			});
+
+		}
+
+
+		public class ViewHolder extends RecyclerView.ViewHolder implements PopupMenu.OnMenuItemClickListener{
+			@Bind(R.id.primary_text) 		public TextView transactionDescription;
+			@Bind(R.id.secondary_text) 		public TextView transactionNote;
+			@Bind(R.id.transaction_amount)	public TextView transactionAmount;
+			@Bind(R.id.transaction_date)	public TextView transactionDate;
+			@Bind(R.id.edit_transaction)	public ImageView editTransaction;
+			@Bind(R.id.options_menu)		public ImageView optionsMenu;
+
+			long transactionId;
+
+			public ViewHolder(View itemView) {
+				super(itemView);
+				ButterKnife.bind(this, itemView);
+
+				optionsMenu.setOnClickListener(new View.OnClickListener() {
+					@Override
+					public void onClick(View v) {
+						PopupMenu popup = new PopupMenu(getActivity(), v);
+						popup.setOnMenuItemClickListener(ViewHolder.this);
+						MenuInflater inflater = popup.getMenuInflater();
+						inflater.inflate(R.menu.transactions_context_menu, popup.getMenu());
+						popup.show();
+					}
+				});
+			}
+
+			@Override
+			public boolean onMenuItemClick(MenuItem item) {
+				switch (item.getItemId()) {
+					case R.id.context_menu_delete:
+						mTransactionsDbAdapter.deleteRecord(transactionId);
+						WidgetConfigurationActivity.updateAllWidgets(getActivity());
+						refresh();
+						return true;
+
+					default:
+						return false;
+
+				}
+			}
+		}
+	}
 }
diff --git a/app/src/main/res/drawable-hdpi/ic_mode_edit_black_24dp.png b/app/src/main/res/drawable-hdpi/ic_mode_edit_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..e531d72a5b717f4eeccbea70fa4bd8f53cc117fc
GIT binary patch
literal 202
zcmeAS@N?(olHy`uVBq!ia0vp^Dj>|k0wldT1B8LpL{AsTkP61P7i_r>If%GEZ1z2K
zZqg3>wYjYh2jpF1B6Lz%<ZV7IpIIsHGNbtS`W=7vu{K40yK~cJ<23D;J9As2iVW4f
zeBF+$?EBdp)!er0X`S)K#IO2S^!hC)&zLJU$Lit}qnF&JI>|k+Hiq>)?FnR#(|jB<
zXJfC_Gl$@rr~a@ucR3zikQ89JLL!7mzGu%Z=7meuW_4=1G65aO;OXk;vd$@?2>`qC
BP#^#R

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_mode_edit_black_24dp.png b/app/src/main/res/drawable-mdpi/ic_mode_edit_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..9efbaae2884ce2b15d160cbc1b1d3aa806545068
GIT binary patch
literal 160
zcmeAS@N?(olHy`uVBq!ia0vp^5+KaM0wlfaz7_+ibWaz@kP61D=hpHz7>Kw&+${6o
zc#5UgjfG8?g)9b3IOaK+ZePjZ_qKfYae3(oPRl<ELNf(FyHq>=yvsP5SM2GG$rsh6
zMNd}k{yVQ?;_V}i=US6@3GLf|`nFNrWWDK=Pgj0m)0|tso;$cJM>=9x638tKp00i_
I>zopr03PT%=>Px#

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_mode_edit_black_24dp.png b/app/src/main/res/drawable-xhdpi/ic_mode_edit_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..87f8de1ca302d83b746b391b83594f3cb0f39a4a
GIT binary patch
literal 222
zcmV<403rX0P)<h;3K|Lk000e1NJLTq001xm001xu1ONa4{R=S+0001`Nkl<ZcmeIv
zy9oke5JlkwTZfOe7csCJ!47OetiV=G?O=TrAuJ{eW&=Bk+>64_{qyg@{QSjgwU#qa
z4m4P{;Lhvwjx;vjkO;gju?@H-u^UM2HOE<{iHGL)J?kWK5`Arw=$J_OB+)UI@Pi2f
z-xB$l*f{u@(DEU%bn=GVhgbaVcl>4C{Ji+@`PrCx+&peR4_q}oZXP#}o5#%~;0>$Q
Y-lS`>2u|CQasU7T07*qoM6N<$f(W@`r~m)}

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_mode_edit_black_24dp.png b/app/src/main/res/drawable-xxhdpi/ic_mode_edit_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..4af4ae634b4c805b2b13c209262bba92d4ef5bdb
GIT binary patch
literal 269
zcmeAS@N?(olHy`uVBq!ia0vp^9w5xY0wn)GsXhawu6VjQhEy=Vy==(G$SBbIuwHt%
zp3_UKM>>291zL-BrWtE$WMrxY&q^|md-S)saec+%`%mT+^YR*%zN!3_;NI;JthdL`
z{KCnCCY1w%imdJpA~Ld<v>3FOd=(E`?RG0HH+`PU-POx#QYR|iePyTZek-J~XvsWJ
zNp;6pnWrr{gH+WWS3OqoV4b69!Fg%ZjL8ar=LoBC`b|jln)7GMS;OOVHd`te@;#f8
z>^I4HhOyA|j6Ta%GFL2C6b3wAaO`BGUn!j9*xM|{uGv?7Zl}4O+1d4_3mOH1{$ucT
L^>bP0l+XkKk9}#`

literal 0
HcmV?d00001

diff --git a/app/src/main/res/layout/cardview_account.xml b/app/src/main/res/layout/cardview_account.xml
index b758a3ec..c6a2c48f 100644
--- a/app/src/main/res/layout/cardview_account.xml
+++ b/app/src/main/res/layout/cardview_account.xml
@@ -20,8 +20,8 @@
     cardview:cardCornerRadius="4dp"
     cardview:cardUseCompatPadding="true"
     cardview:cardPreventCornerOverlap="false"
-    android:layout_marginLeft="4dp"
-    android:layout_marginRight="4dp"
+    android:layout_marginLeft="5dp"
+    android:layout_marginRight="5dp"
     android:foreground="?selectableItemBackground"
     android:focusable="true"
     android:clickable="true"
diff --git a/app/src/main/res/layout/cardview_transaction.xml b/app/src/main/res/layout/cardview_transaction.xml
new file mode 100644
index 00000000..35ed6d58
--- /dev/null
+++ b/app/src/main/res/layout/cardview_transaction.xml
@@ -0,0 +1,98 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:cardview="http://schemas.android.com/apk/res-auto"
+    cardview:cardUseCompatPadding="true"
+    cardview:cardPreventCornerOverlap="false"
+    android:foreground="?selectableItemBackground"
+    android:focusable="true"
+    android:clickable="true"
+    android:layout_marginLeft="5dp"
+    android:layout_marginRight="5dp"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:minHeight="80dp">
+
+        <include android:id="@+id/list_item_2_lines"
+            layout="@layout/list_item_2_lines"
+            android:paddingTop="6dp"
+            android:layout_height="wrap_content"
+            android:layout_width="wrap_content"
+            android:layout_toRightOf="@id/account_color_strip"
+            android:layout_marginTop="6dp"
+            android:layout_marginBottom="@dimen/dialog_padding"
+            android:layout_marginLeft="@dimen/dialog_padding"
+            android:layout_marginRight="50dp"/>
+
+        <ImageView
+            android:id="@+id/options_menu"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:layout_alignParentBottom="true"
+            android:layout_alignParentRight="true"
+            android:background="?attr/selectableItemBackgroundBorderless"
+            android:paddingTop="20dp"
+            android:layout_marginBottom="4dp"
+            android:paddingLeft="24dp"
+            android:scaleType="centerInside"
+            android:src="@drawable/ic_more_vert_black_24dp"
+            tools:ignore="ContentDescription" />
+
+        <ImageView
+            android:id="@+id/edit_transaction"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:layout_alignParentRight="true"
+            android:background="?attr/selectableItemBackgroundBorderless"
+            android:paddingTop="6dp"
+            android:paddingRight="6dp"
+            android:paddingLeft="22dp"
+            android:paddingBottom="22dp"
+            android:src="@drawable/ic_mode_edit_black_24dp"
+            tools:ignore="ContentDescription" />
+
+        <TextView
+            android:id="@+id/transaction_amount"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:singleLine="true"
+            android:layout_alignParentBottom="true"
+            android:textSize="18sp"
+            tools:text="$ 45"
+            android:layout_alignBottom="@id/options_menu"
+            android:layout_toLeftOf="@id/options_menu"
+            android:layout_marginRight="@dimen/dialog_padding"/>
+
+        <TextView
+            android:id="@+id/transaction_date"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:singleLine="true"
+            android:layout_below="@id/list_item_2_lines"
+            android:layout_alignLeft="@id/list_item_2_lines"
+            android:layout_marginBottom="4dp"
+            android:gravity="left|bottom|start"
+            android:textSize="14sp"
+            android:textColor="@android:color/darker_gray"
+            tools:text="Sat, 04 July"/>
+    </RelativeLayout>
+</android.support.v7.widget.CardView>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_transactions_list.xml b/app/src/main/res/layout/fragment_transactions_list.xml
index 902f0629..26d51056 100644
--- a/app/src/main/res/layout/fragment_transactions_list.xml
+++ b/app/src/main/res/layout/fragment_transactions_list.xml
@@ -23,13 +23,13 @@
     android:orientation="vertical" >
     
 	<include layout="@layout/transactions_sum_bar" android:id="@+id/transactions_sum_bar" />
-		
-    <ListView android:id="@id/android:list"        
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"	
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/transaction_recycler_view"
+        android:scrollbars="vertical"
         android:layout_above="@id/transactions_sum_bar"
-        android:listSelector="@drawable/abc_list_selector_holo_light"
-        android:drawSelectorOnTop="false"/>
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"/>
 
     <android.support.design.widget.FloatingActionButton
         android:id="@+id/fab_create_transaction"
@@ -42,25 +42,5 @@
         android:layout_margin="8dp"
         app:elevation="6dp"
         android:src="@drawable/ic_add_white_48dp"/>
-
-	<LinearLayout
-        android:id="@id/android:empty"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_above="@id/transactions_sum_bar"
-        android:gravity="center"
-        android:orientation="vertical">
-		<TextView 
-		    android:layout_width="match_parent"
-		    android:layout_height="wrap_content"
-		    android:gravity="center" 		    
-		    android:text="@string/label_no_transactions"		    
-		    style="@style/ListItem"/>
-        <Button
-            android:id="@+id/add_transaction_button"
-            style="@style/ButtonStyle"
-            android:onClick="onNewTransactionClick"
-            android:text="@string/title_add_transaction" />
-    </LinearLayout>
     
 </RelativeLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/list_item_2_lines.xml b/app/src/main/res/layout/list_item_2_lines.xml
index 5bd6da13..f3c7559a 100644
--- a/app/src/main/res/layout/list_item_2_lines.xml
+++ b/app/src/main/res/layout/list_item_2_lines.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <!--
-Copyright (c) 2013 Ngewi Fet <ngewif@gmail.com>
+Copyright (c) 2013 - 2015 Ngewi Fet <ngewif@gmail.com>
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
@@ -17,6 +17,7 @@ limitations under the License.
 
 <RelativeLayout
         xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:tools="http://schemas.android.com/tools"
         android:layout_height="wrap_content"
         android:layout_width="0dp"
         android:layout_weight="1"
@@ -39,5 +40,5 @@ limitations under the License.
             android:ellipsize="end"
             android:layout_below="@id/primary_text"
             android:textAppearance="?android:attr/textAppearanceSmall"
-            android:text="@string/label_transaction_name"/>
+            tools:text="@string/label_transaction_name"/>
 </RelativeLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/list_item_transaction.xml b/app/src/main/res/layout/list_item_transaction.xml
index d21cbc6c..2633f7c3 100644
--- a/app/src/main/res/layout/list_item_transaction.xml
+++ b/app/src/main/res/layout/list_item_transaction.xml
@@ -15,7 +15,9 @@
  limitations under the License.
 -->
 
-<org.gnucash.android.ui.util.CheckableLinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<org.gnucash.android.ui.util.CheckableLinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
               android:layout_width="match_parent"
               android:layout_height="match_parent"
               android:orientation="vertical">
@@ -51,16 +53,34 @@
                 android:layout_marginLeft="5dp"
                 />
 
+        <RelativeLayout
+            android:layout_height="match_parent"
+            android:layout_width="wrap_content"
+            android:layout_marginRight="12dp"
+            android:orientation="vertical">
         <TextView
                 android:id="@+id/transaction_amount"
                 android:layout_width="wrap_content"
-                android:layout_height="match_parent"
+                android:layout_height="wrap_content"
                 android:singleLine="true"
                 android:ellipsize="end"
                 android:text="@string/label_transaction_amount"
                 android:minWidth="100dp"
                 android:gravity="right|center_vertical"
-                android:layout_marginRight="12dp"
                 style="@style/ListItemText"/>
+
+            <TextView
+                android:id="@+id/transaction_date"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:layout_below="@id/transaction_amount"
+                android:gravity="right|bottom|end"
+                android:layout_alignRight="@id/transaction_amount"
+                android:textAppearance="?android:attr/textAppearanceSmall"
+                android:textColor="@android:color/darker_gray"
+                tools:text="Sat, 04 July"/>
+        </RelativeLayout>
+
     </LinearLayout>
 </org.gnucash.android.ui.util.CheckableLinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/menu/transactions_context_menu.xml b/app/src/main/res/menu/transactions_context_menu.xml
index 06951acc..3fcaea32 100644
--- a/app/src/main/res/menu/transactions_context_menu.xml
+++ b/app/src/main/res/menu/transactions_context_menu.xml
@@ -17,12 +17,14 @@
 
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
       xmlns:app="http://schemas.android.com/apk/res-auto">
+<!--
     <item android:id="@+id/context_menu_move_transactions"
           android:icon="@drawable/content_copy_holo_dark"
           android:title="@string/menu_move"
           app:showAsAction="always"
           android:orderInCategory="1" /> 
-            
+-->
+    <!-- TODO: Add duplicate option -->
 	<item android:id="@+id/context_menu_delete"
           android:icon="@drawable/content_discard_holo_dark"
           android:title="@string/menu_delete"
