From d5be86919c7baaa50fe2dfebe4e277fd407ae3b5 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 8 Jun 2012 12:16:02 +0200
Subject: [PATCH] Implemented UX for adding a new transaction Refactored the
 way transaction objects handle time

---
 .../res/layout/fragment_new_transaction.xml        | 108 ++++++--
 .../res/layout/fragment_transactions_list.xml      |   8 +-
 GnucashMobile/res/menu/new_transaction_actions.xml |  34 +++
 GnucashMobile/res/values/colors.xml                |  29 ++
 GnucashMobile/res/values/strings.xml               |  11 +-
 GnucashMobile/res/values/styles.xml                |  19 ++
 .../src/org/gnucash/android/data/Transaction.java  |  17 +-
 .../gnucash/android/db/TransactionsDbAdapter.java  |   8 +-
 .../org/gnucash/android/ui/AccountsActivity.java   |   4 +
 .../gnucash/android/ui/AccountsListFragment.java   |  10 +-
 .../android/ui/DatePickerDialogFragment.java       |  55 ++++
 .../android/ui/NewAccountDialogFragment.java       |  24 ++
 .../gnucash/android/ui/NewTransactionFragment.java | 291 ++++++++++++++++++++-
 .../android/ui/TimePickerDialogFragment.java       |  59 +++++
 .../android/ui/TransactionsListFragment.java       |  27 +-
 15 files changed, 664 insertions(+), 40 deletions(-)
 create mode 100644 GnucashMobile/res/menu/new_transaction_actions.xml
 create mode 100644 GnucashMobile/res/values/colors.xml
 create mode 100644 GnucashMobile/src/org/gnucash/android/ui/DatePickerDialogFragment.java
 create mode 100644 GnucashMobile/src/org/gnucash/android/ui/TimePickerDialogFragment.java

diff --git a/GnucashMobile/res/layout/fragment_new_transaction.xml b/GnucashMobile/res/layout/fragment_new_transaction.xml
index e23c9f11..b0276580 100644
--- a/GnucashMobile/res/layout/fragment_new_transaction.xml
+++ b/GnucashMobile/res/layout/fragment_new_transaction.xml
@@ -2,6 +2,7 @@
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    android:padding="15dp"
     android:orientation="vertical" >
 
     <EditText
@@ -11,28 +12,105 @@
         android:hint="@string/label_transaction_name"
         android:minHeight="?android:attr/listPreferredItemHeight"
         android:ems="10" 
+        android:layout_marginBottom="10dp"
+        android:inputType="textCapWords"
         style="@style/ListItemText">
 		
         <requestFocus />
     </EditText>
 
-    <EditText
-        android:id="@+id/input_transaction_amount"
+    <LinearLayout 
         android:layout_width="match_parent"
+        android:layout_height="wrap_content"        
+        >
+	    <EditText
+	        android:id="@+id/input_transaction_amount"
+	        android:layout_width="0dp"
+	        android:layout_weight="1"
+	        android:layout_height="wrap_content"
+	        android:minHeight="?android:attr/listPreferredItemHeight"
+	        android:ems="10"
+	        android:layout_marginBottom="10dp"
+	        android:hint="@string/label_transaction_amount"
+	        android:inputType="numberSigned"
+	        android:textColor="@color/debit_red"
+	        style="@style/ListItemText" />
+	    
+	    <ToggleButton android:id="@+id/input_transaction_type"
+	        android:layout_width="wrap_content"
+	        android:layout_height="wrap_content"
+	        android:minHeight="?android:attr/listPreferredItemHeight"
+	        android:minWidth="100dp"
+	        android:textOn="@string/debit"
+	        android:textOff="@string/credit"
+	        android:textAppearance="?android:attr/textAppearanceMedium"
+	        android:textColor="@color/debit_red"
+	        android:checked="true" />
+	</LinearLayout>
+	
+    <LinearLayout android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:minHeight="?android:attr/listPreferredItemHeight"
-        android:ems="10"
-        android:hint="@string/label_transaction_amount"
-        android:inputType="numberDecimal" />
-
-    <DatePicker
-        android:id="@+id/input_transaction_date"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content" />
-
-    <Spinner
-        android:id="@+id/accounts_spinner"
+        android:orientation="vertical" >
+        
+        <TextView
+            android:id="@+id/label_timeanddate"
+            android:text="@string/label_date"
+            android:layout_height="wrap_content"
+            android:layout_width="wrap_content"
+            android:layout_marginBottom="-8dip"
+            style="@style/TextAppearance.EditTransaction_LabelSmall" />
+	    <LinearLayout
+	        android:layout_height="wrap_content"
+	        android:layout_width="fill_parent"
+	        android:layout_marginBottom="10dp"
+	        android:orientation="horizontal">
+	        
+	        <TextView android:id="@+id/input_date"
+		        android:layout_width="0dp"
+		        android:layout_weight="1" 
+		        android:layout_height="wrap_content"
+		        android:gravity="center"
+		        android:minHeight="?android:attr/listPreferredItemHeight"        
+		        style="@android:style/Widget.DeviceDefault.Spinner"
+		        android:textSize="22dp" />
+	        
+	        <TextView android:id="@+id/input_time"
+	            android:layout_width="wrap_content"
+	            android:layout_height="wrap_content"
+	            android:minHeight="?android:attr/listPreferredItemHeight"        
+		        style="@android:style/Widget.DeviceDefault.Spinner"
+		        android:gravity="center"
+		        android:textSize="22dp"
+		        android:minWidth="120dp" />    
+		</LinearLayout>
+    </LinearLayout>
+    
+    <EditText android:id="@+id/input_description"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content" />
+        android:layout_height="wrap_content"
+        android:singleLine="false"
+        android:layout_marginBottom="10dp"
+        android:hint="@string/transaction_description"
+        android:inputType="textMultiLine"
+        android:lines="2"
+        android:gravity="top"
+        />
+    <LinearLayout android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical" >
+        
+		<TextView
+		    android:id="@+id/label_account"
+		    android:text="@string/label_account"
+		    android:layout_height="wrap_content"
+		    android:layout_width="wrap_content"
+		    android:layout_marginBottom="-8dip"
+		    style="@style/TextAppearance.EditTransaction_LabelSmall" />
+	    <Spinner
+	        android:id="@+id/input_accounts_spinner"        
+	        android:layout_width="match_parent"
+	        android:layout_height="wrap_content" 
+	        android:minHeight="?android:attr/listPreferredItemHeight" />
+    </LinearLayout>
 
 </LinearLayout>
\ No newline at end of file
diff --git a/GnucashMobile/res/layout/fragment_transactions_list.xml b/GnucashMobile/res/layout/fragment_transactions_list.xml
index e4e11a7e..30c75c60 100644
--- a/GnucashMobile/res/layout/fragment_transactions_list.xml
+++ b/GnucashMobile/res/layout/fragment_transactions_list.xml
@@ -44,12 +44,12 @@
 		    android:layout_width="match_parent"
 		    android:layout_height="wrap_content"
 		    android:gravity="center" 
-		    android:text="@string/no_accounts"		    
+		    android:text="@string/label_no_transactions"		    
 		    style="@style/ListItem"/>
         <Button
-            android:id="@+id/add_account_button"
+            android:id="@+id/add_transaction_button"
             style="@style/ButtonStyle"
-            android:onClick="onNewAccountClick"
-            android:text="@string/add_account" />
+            android:onClick="onNewTransactionClick"
+            android:text="@string/add_transaction" />
     </LinearLayout>
 </LinearLayout>
\ No newline at end of file
diff --git a/GnucashMobile/res/menu/new_transaction_actions.xml b/GnucashMobile/res/menu/new_transaction_actions.xml
new file mode 100644
index 00000000..47f7425e
--- /dev/null
+++ b/GnucashMobile/res/menu/new_transaction_actions.xml
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Written By: Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 Ngewi Fet
+ 
+ This file is part of Gnucash for Android
+ 
+ Gnucash for Android is free software; you can redistribute it and/or
+ modify it under the terms of the GNU General Public License as
+ published by the Free Software Foundation; either version 2 of
+ the License, or (at your option) any later version.
+ 
+ This program is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with this program; if not, contact:
+ 
+ Free Software Foundation           Voice:  +1-617-542-5942
+ 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ Boston, MA  02110-1301,  USA       gnu@gnu.org
+-->
+<menu xmlns:android="http://schemas.android.com/apk/res/android" >
+    <item android:id="@+id/menu_cancel"
+          android:icon="@drawable/navigation_cancel"
+          android:title="@string/btn_cancel"
+          android:showAsAction="always|withText"/>
+    <item android:id="@+id/menu_save"
+          android:icon="@drawable/navigation_accept"
+          android:title="@string/btn_save"
+          android:showAsAction="always|withText"/>
+</menu>
\ No newline at end of file
diff --git a/GnucashMobile/res/values/colors.xml b/GnucashMobile/res/values/colors.xml
new file mode 100644
index 00000000..e471a6ee
--- /dev/null
+++ b/GnucashMobile/res/values/colors.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Written By: Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 Ngewi Fet
+ 
+ This file is part of Gnucash for Android
+ 
+ Gnucash for Android is free software; you can redistribute it and/or
+ modify it under the terms of the GNU General Public License as
+ published by the Free Software Foundation; either version 2 of
+ the License, or (at your option) any later version.
+ 
+ This program is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with this program; if not, contact:
+ 
+ Free Software Foundation           Voice:  +1-617-542-5942
+ 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ Boston, MA  02110-1301,  USA       gnu@gnu.org
+-->
+<resources>
+    <color name="debit_red">#c11b17</color>
+    <color name="credit_green">#4cc552</color>
+    
+</resources>
\ No newline at end of file
diff --git a/GnucashMobile/res/values/strings.xml b/GnucashMobile/res/values/strings.xml
index 93ae7c8c..213432ff 100644
--- a/GnucashMobile/res/values/strings.xml
+++ b/GnucashMobile/res/values/strings.xml
@@ -36,7 +36,14 @@
     <string name="btn_cancel">Cancel</string>
     <string name="btn_save">Save</string>
     <string name="no_transactions_to_display">No transactions to display</string>
-    <string name="label_transaction_name">Transaction name</string>
-    <string name="label_transaction_amount">- $1.99</string>
+    <string name="label_transaction_name">Name</string>
+    <string name="label_transaction_amount">Amount </string>
+    <string name="add_transaction">New transaction</string>
+    <string name="label_no_transactions">No transactions to display</string>
+    <string name="transaction_description">Description</string>
+    <string name="label_date">DATE</string>
+    <string name="label_account">Account</string>
+    <string name="debit">DEBIT</string>
+    <string name="credit">CREDIT</string>
 
 </resources>
\ No newline at end of file
diff --git a/GnucashMobile/res/values/styles.xml b/GnucashMobile/res/values/styles.xml
index 40ad9a88..d01464e8 100644
--- a/GnucashMobile/res/values/styles.xml
+++ b/GnucashMobile/res/values/styles.xml
@@ -50,4 +50,23 @@
         <item name="android:layout_height">wrap_content</item>
         <item name="android:padding">18dp</item>
     </style>
+    
+    <style name="TextAppearance" parent="android:TextAppearance">
+    </style>
+    
+    <style name="TextAppearance.EditTransaction_Small">
+        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
+        <item name="android:textSize">14sp</item>
+        <item name="android:textColor">#FFAAAAAA</item>
+        <item name="android:textAllCaps">true</item>
+    </style>
+    
+    <style name="TextAppearance.EditTransaction_LabelSmall" parent="TextAppearance.EditTransaction_Small">
+        <item name="android:minHeight">24dp</item>
+        <item name="android:layout_width">144dp</item>
+        <item name="android:layout_marginRight">16dp</item>
+        <item name="android:paddingLeft">8dp</item>
+        <item name="android:paddingRight">8dp</item>
+        <item name="android:layout_marginBottom">-12dp</item>
+    </style>
 </resources>
\ No newline at end of file
diff --git a/GnucashMobile/src/org/gnucash/android/data/Transaction.java b/GnucashMobile/src/org/gnucash/android/data/Transaction.java
index deafd901..76d30172 100644
--- a/GnucashMobile/src/org/gnucash/android/data/Transaction.java
+++ b/GnucashMobile/src/org/gnucash/android/data/Transaction.java
@@ -48,7 +48,7 @@
 	private String mDescription = "";
 	private String mAccountUID = null;
 	
-	private Date mTimestamp;
+	private long mTimestamp;
 	private TransactionType mType = TransactionType.DEBIT;
 	
 	/**
@@ -82,7 +82,7 @@ public Transaction(double amount, String name, TransactionType type){
 	 */
 	private void initDefaults(){
 		this.mAmount = 0;
-		this.mTimestamp = new Date();
+		this.mTimestamp = System.currentTimeMillis();
 		this.mType = TransactionType.DEBIT;
 		mTransactionUID = UUID.randomUUID().toString();
 		
@@ -142,14 +142,18 @@ public String getDescription() {
 	 * @param timestamp Time when transaction occurred as {@link Date}
 	 */
 	public void setTime(Date timestamp){
-		this.mTimestamp = timestamp;
+		this.mTimestamp = timestamp.getTime();
+	}
+	
+	public void setTime(long timeInMillis) {
+		this.mTimestamp = timeInMillis;
 	}
 	
 	/**
-	 * Returns time when transaction occured
-	 * @return {@link Date} object for time when transaction occured
+	 * Returns the time of transaction in milliseconds
+	 * @return Time when transaction occured in milliseconds 
 	 */
-	public Date getTime(){
+	public long getTimeMillis(){
 		return mTimestamp;
 	}
 	
@@ -244,4 +248,5 @@ public Element toXml(Document doc){
 		
 		return transaction;
 	}
+
 }
diff --git a/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java b/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
index 7b46ba4b..b4ee2a00 100644
--- a/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -25,7 +25,6 @@
 package org.gnucash.android.db;
 
 import java.util.ArrayList;
-import java.util.Date;
 import java.util.List;
 
 import org.gnucash.android.data.Transaction;
@@ -62,9 +61,12 @@ public TransactionsDbAdapter(Context context) {
 	public long addTransaction(Transaction transaction){
 		ContentValues contentValues = new ContentValues();
 		contentValues.put(DatabaseHelper.KEY_NAME, transaction.getName());
+		contentValues.put(DatabaseHelper.KEY_AMOUNT, transaction.getAmount());
 		contentValues.put(DatabaseHelper.KEY_TYPE, transaction.getTransactionType().name());
 		contentValues.put(DatabaseHelper.KEY_UID, transaction.getUID());
 		contentValues.put(DatabaseHelper.KEY_ACCOUNT_UID, transaction.getAccountUID());
+		contentValues.put(DatabaseHelper.KEY_TIMESTAMP, transaction.getTimeMillis());
+		contentValues.put(DatabaseHelper.KEY_DESCRIPTION, transaction.getDescription());
 		
 		long rowId = -1;
 		if ((rowId = fetchTransactionWithUID(transaction.getUID())) > 0){
@@ -158,7 +160,7 @@ public Cursor fetchAllTransactionsForAccount(long accountID){
 		while (c.moveToNext()) {
 			transactionsList.add(buildTransactionInstance(c));
 		}
-		
+		c.close();
 		return transactionsList;
 	}
 	
@@ -173,7 +175,7 @@ public Transaction buildTransactionInstance(Cursor c){
 				c.getString(DatabaseAdapter.COLUMN_NAME));
 		transaction.setUID(c.getString(DatabaseAdapter.COLUMN_UID));
 		transaction.setAccountUID(c.getString(DatabaseAdapter.COLUMN_ACCOUNT_UID));
-		transaction.setTime(new Date(c.getLong(DatabaseAdapter.COLUMN_TIMESTAMP)));
+		transaction.setTime(c.getLong(DatabaseAdapter.COLUMN_TIMESTAMP));
 		
 		return transaction;
 	}
diff --git a/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java b/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java
index cf8645e6..c1400ef0 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java
@@ -89,6 +89,10 @@ public void onNewAccountClick(View v) {
 			accountFragment.showAddAccountDialog();
 	}
 
+	public void onNewTransactionClick(View v){
+		createNewTransaction(0);
+	}
+	
 	@Override
 	public void accountSelected(long accountRowId) {
 		FragmentManager fragmentManager = getSupportFragmentManager();
diff --git a/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java b/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
index a46fabb5..ac4bb1dc 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
@@ -87,8 +87,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
 				new String[] { DatabaseHelper.KEY_NAME },
 				new int[] { R.id.account_name }, 0);
 
-		setListAdapter(mCursorAdapter);	
 		getLoaderManager().initLoader(0, null, this);
+		setListAdapter(mCursorAdapter);	
 	}
 	
 	@Override
@@ -106,11 +106,7 @@ public void onAttach(Activity activity) {
 	public void onListItemClick(ListView l, View v, int position, long id) {
 		super.onListItemClick(l, v, position, id);
 		mAccountSelectedListener.accountSelected(id);
-	}
-	
-	public void onNewTransactionClick(View v){
-		mAccountSelectedListener.createNewTransaction(getSelectedItemId());
-	}
+	}	
 	
 	@Override
 	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
@@ -189,7 +185,7 @@ public void bindView(View v, Context context, Cursor cursor) {
 					.findViewById(R.id.transactions_summary);
 			Account acc = mAccountsDbAdapter.buildAccountInstance(cursor);
 			double balance = acc.getBalance();
-			int count = acc.getTransactionCount();
+			int count = acc.getTransactionCount();			
 			String statement = "";
 			if (count == 0) {
 				statement = "No transactions on this account";
diff --git a/GnucashMobile/src/org/gnucash/android/ui/DatePickerDialogFragment.java b/GnucashMobile/src/org/gnucash/android/ui/DatePickerDialogFragment.java
new file mode 100644
index 00000000..f77357cc
--- /dev/null
+++ b/GnucashMobile/src/org/gnucash/android/ui/DatePickerDialogFragment.java
@@ -0,0 +1,55 @@
+/*
+ * Written By: Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2012 Ngewi Fet
+ *
+ * This file is part of Gnucash for Android
+ * 
+ * Gnucash for Android is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, contact:
+ *
+ * Free Software Foundation           Voice:  +1-617-542-5942
+ * 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ * Boston, MA  02110-1301,  USA       gnu@gnu.org
+ */
+
+package org.gnucash.android.ui;
+
+import java.util.Calendar;
+
+import android.app.DatePickerDialog;
+import android.app.DatePickerDialog.OnDateSetListener;
+import android.app.Dialog;
+import android.os.Bundle;
+import android.support.v4.app.DialogFragment;
+
+public class DatePickerDialogFragment extends DialogFragment {
+
+	private OnDateSetListener mDateSetListener;
+
+	public DatePickerDialogFragment() {
+		// nothing to see here, move along
+	}
+	
+	public DatePickerDialogFragment(OnDateSetListener callback) {
+		mDateSetListener = (OnDateSetListener) callback;
+	}
+
+	public Dialog onCreateDialog(Bundle savedInstanceState) {
+		Calendar cal = Calendar.getInstance();
+		
+		return new DatePickerDialog(getActivity(),
+				mDateSetListener, cal.get(Calendar.YEAR), 
+				cal.get(Calendar.MONTH), cal.get(Calendar.DAY_OF_MONTH));
+	}
+	
+}
diff --git a/GnucashMobile/src/org/gnucash/android/ui/NewAccountDialogFragment.java b/GnucashMobile/src/org/gnucash/android/ui/NewAccountDialogFragment.java
index 4bc22352..b9a47487 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/NewAccountDialogFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/NewAccountDialogFragment.java
@@ -1,3 +1,27 @@
+/*
+ * Written By: Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2012 Ngewi Fet
+ *
+ * This file is part of Gnucash for Android
+ * 
+ * Gnucash for Android is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, contact:
+ *
+ * Free Software Foundation           Voice:  +1-617-542-5942
+ * 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ * Boston, MA  02110-1301,  USA       gnu@gnu.org
+ */
+
 package org.gnucash.android.ui;
 
 import org.gnucash.android.R;
diff --git a/GnucashMobile/src/org/gnucash/android/ui/NewTransactionFragment.java b/GnucashMobile/src/org/gnucash/android/ui/NewTransactionFragment.java
index 750dbc15..154a3632 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/NewTransactionFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/NewTransactionFragment.java
@@ -1,15 +1,88 @@
+/*
+ * Written By: Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2012 Ngewi Fet
+ *
+ * This file is part of Gnucash for Android
+ * 
+ * Gnucash for Android is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, contact:
+ *
+ * Free Software Foundation           Voice:  +1-617-542-5942
+ * 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ * Boston, MA  02110-1301,  USA       gnu@gnu.org
+ */
+
 package org.gnucash.android.ui;
 
+import java.text.NumberFormat;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Currency;
+import java.util.Date;
+import java.util.GregorianCalendar;
+import java.util.Locale;
+
 import org.gnucash.android.R;
+import org.gnucash.android.data.Account;
+import org.gnucash.android.data.Transaction;
+import org.gnucash.android.data.Transaction.TransactionType;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.TransactionsDbAdapter;
 
+import android.app.DatePickerDialog.OnDateSetListener;
+import android.app.TimePickerDialog.OnTimeSetListener;
+import android.database.Cursor;
 import android.os.Bundle;
+import android.support.v4.app.DialogFragment;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v4.widget.SimpleCursorAdapter;
+import android.text.Editable;
+import android.text.TextWatcher;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.CompoundButton;
+import android.widget.CompoundButton.OnCheckedChangeListener;
+import android.widget.DatePicker;
+import android.widget.EditText;
+import android.widget.Spinner;
+import android.widget.TextView;
+import android.widget.TimePicker;
+import android.widget.ToggleButton;
 
+import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.app.SherlockFragment;
+import com.actionbarsherlock.view.Menu;
+import com.actionbarsherlock.view.MenuInflater;
+import com.actionbarsherlock.view.MenuItem;
 
-public class NewTransactionFragment extends SherlockFragment {
+public class NewTransactionFragment extends SherlockFragment implements 
+	OnDateSetListener, OnTimeSetListener {
+	
+	private TransactionsDbAdapter mTransactionsDbAdapter;
+	final static SimpleDateFormat DATE_FORMATTER = new SimpleDateFormat("dd MMM yyyy");
+	final static SimpleDateFormat TIME_FORMATTER = new SimpleDateFormat("HH:mm");
+	
+	private ToggleButton mTransactionTypeButton;
+	private TextView mDateTextView;
+	private TextView mTimeTextView;	
+	private EditText mAmountEditText;
+	private Calendar mDate;
+	private Calendar mTime;
+	private Spinner mAccountsSpinner;
+	private AccountsDbAdapter mAccountsDbAdapter;
+	private SimpleCursorAdapter mCursorAdapter; 
 	
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container,
@@ -17,5 +90,221 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 		return inflater.inflate(R.layout.fragment_new_transaction, container, false);
 	}
 	
+	@Override
+	public void onActivityCreated(Bundle savedInstanceState) {
+		super.onActivityCreated(savedInstanceState);
+		setHasOptionsMenu(true);
+		ActionBar actionBar = getSherlockActivity().getSupportActionBar();
+		actionBar.setHomeButtonEnabled(true);
+		actionBar.setTitle(R.string.add_transaction);
+		
+		mTransactionsDbAdapter = new TransactionsDbAdapter(getActivity());
+		View v = getView();
+		
+		mDateTextView = (TextView) v.findViewById(R.id.input_date);
+		mTimeTextView = (TextView) v.findViewById(R.id.input_time);
+		mAmountEditText = (EditText) v.findViewById(R.id.input_transaction_amount);
+		mAccountsSpinner = (Spinner) v.findViewById(R.id.input_accounts_spinner);
+		mTransactionTypeButton = (ToggleButton) v.findViewById(R.id.input_transaction_type);
+		
+		bindViews();
+		setListeners();
+	}
+
+	/**
+	 * Binds the various views to the appropriate text
+	 */
+	private void bindViews() {
+		Date time = new Date(System.currentTimeMillis()); 
+		mDateTextView.setText(DATE_FORMATTER.format(time));
+		mTimeTextView.setText(TIME_FORMATTER.format(time));
+		mTime = mDate = Calendar.getInstance();
+		
+		String[] from = new String[] {DatabaseHelper.KEY_NAME};
+		int[] to = new int[] {android.R.id.text1};
+		mAccountsDbAdapter = new AccountsDbAdapter(getActivity());
+		Cursor cursor = mAccountsDbAdapter.fetchAllAccounts();
+		
+		mCursorAdapter = new SimpleCursorAdapter(getActivity(), 
+				android.R.layout.simple_spinner_item, 
+				cursor,
+				from,
+				to, 
+				0);
+		mCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+		mAccountsSpinner.setAdapter(mCursorAdapter);
+		
+		final long accountId = getArguments().getLong(TransactionsListFragment.SELECTED_ACCOUNT_ID);
+		final int count = mCursorAdapter.getCount();
+		for (int pos = 0; pos < count; pos++) {
+			if (mCursorAdapter.getItemId(pos) == accountId)
+				mAccountsSpinner.setSelection(pos);
+		}
+	}
 	
+	/**
+	 * Sets click listeners for the dismiss buttons
+	 */
+	private void setListeners() {
+		mAmountEditText.addTextChangedListener(new AmountInputWatcher());
+		
+		mTransactionTypeButton.setOnCheckedChangeListener(new OnCheckedChangeListener() {
+			
+			@Override
+			public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+				if (isChecked){
+					int red = getResources().getColor(R.color.debit_red);
+					mTransactionTypeButton.setTextColor(red);
+					mAmountEditText.setTextColor(red);					
+				}
+				else {
+					int green = getResources().getColor(R.color.credit_green);
+					mTransactionTypeButton.setTextColor(green);
+					mAmountEditText.setTextColor(green);
+				}
+				mAmountEditText.setText(mAmountEditText.getText().toString()); //trigger an edit to update the number sign
+			}
+		});
+
+		mDateTextView.setOnClickListener(new View.OnClickListener() {
+			
+			@Override
+			public void onClick(View v) {
+				FragmentTransaction ft = getFragmentManager().beginTransaction();
+				DialogFragment newFragment = new DatePickerDialogFragment(NewTransactionFragment.this);
+				newFragment.show(ft, "date_dialog");
+			}
+		});
+		
+		mTimeTextView.setOnClickListener(new View.OnClickListener() {
+			
+			@Override
+			public void onClick(View v) {
+				FragmentTransaction ft = getFragmentManager().beginTransaction();
+				DialogFragment fragment = new TimePickerDialogFragment(NewTransactionFragment.this);
+				fragment.show(ft, "time_dialog");
+			}
+		});
+	}	
+	
+	@Override
+	public void onDestroyView() {
+		super.onDestroyView();
+		mAccountsDbAdapter.close();
+		mTransactionsDbAdapter.close();
+	}
+	
+	@Override
+	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+		inflater.inflate(R.menu.new_transaction_actions, menu);
+	}
+	
+	private void saveNewTransaction() {
+		String name = ((TextView)getView().findViewById(R.id.input_transaction_name)).getText().toString();
+		String amountString = ((TextView)getView().findViewById(R.id.input_transaction_amount)).getText().toString();
+		double amount = Double.parseDouble(stripCurrencyFormatting(amountString))/100;
+		Calendar cal = new GregorianCalendar(
+				mDate.get(Calendar.YEAR), 
+				mDate.get(Calendar.MONTH), 
+				mDate.get(Calendar.DAY_OF_MONTH), 
+				mTime.get(Calendar.HOUR_OF_DAY), 
+				mTime.get(Calendar.MINUTE), 
+				mTime.get(Calendar.SECOND));
+		
+		long accountID = mAccountsSpinner.getSelectedItemId();
+		Account account = mAccountsDbAdapter.getAccount(accountID);
+		String type = mTransactionTypeButton.getText().toString();
+		Transaction transaction = new Transaction(amount, name, TransactionType.valueOf(type));
+		transaction.setAccountUID(account.getUID());
+		transaction.setTime(cal.getTimeInMillis());
+		
+		mTransactionsDbAdapter.addTransaction(transaction);
+		mTransactionsDbAdapter.close();
+		
+		getSherlockActivity().onBackPressed();
+	}
+	
+	@Override
+	public boolean onOptionsItemSelected(MenuItem item) {
+		switch (item.getItemId()) {
+		case R.id.menu_cancel:
+			getSherlockActivity().onBackPressed();
+			return true;
+			
+		case R.id.menu_save:
+			saveNewTransaction();
+			return true;
+
+		default:
+			return false;
+		}
+	}
+
+	@Override
+	public void onDateSet(DatePicker view, int year, int monthOfYear,
+			int dayOfMonth) {
+		Calendar cal = new GregorianCalendar(year, monthOfYear, dayOfMonth);
+		mDateTextView.setText(DATE_FORMATTER.format(cal.getTime()));
+		mDate.set(Calendar.YEAR, year);
+		mDate.set(Calendar.MONTH, monthOfYear);
+		mDate.set(Calendar.DAY_OF_MONTH, dayOfMonth);
+	}
+
+	@Override
+	public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
+		Calendar cal = new GregorianCalendar(0, 0, 0, hourOfDay, minute);
+		mTimeTextView.setText(TIME_FORMATTER.format(cal.getTime()));	
+		mTime.set(Calendar.HOUR_OF_DAY, hourOfDay);
+		mTime.set(Calendar.MINUTE, minute);
+	}
+	
+	private static String stripCurrencyFormatting(String s){
+
+		//TODO: Generalize the code. Works only for $
+		String symbol = Currency.getInstance(Locale.getDefault()).getSymbol();
+		String regex = "[" + symbol + ",.-]";
+		return s.replaceAll(regex, "");
+	}
+	
+	private class AmountInputWatcher implements TextWatcher {
+		private String current = null;
+		
+		@Override
+		public void afterTextChanged(Editable s) {
+			String cleanString = stripCurrencyFormatting(s.toString());
+			if (cleanString.isEmpty())
+				return;
+
+			double parsed = Double.parseDouble(cleanString);
+
+			mAmountEditText.removeTextChangedListener(this);
+
+			String formattedString = NumberFormat.getCurrencyInstance().format(
+					(parsed / 100));
+
+			String prefix = mTransactionTypeButton.isChecked() ? " - " : "";
+
+			current = prefix + formattedString;
+			mAmountEditText.setText(current);
+			mAmountEditText.setSelection(current.length());
+
+			mAmountEditText.addTextChangedListener(this);
+
+		}
+
+		@Override
+		public void beforeTextChanged(CharSequence s, int start, int count,
+				int after) {
+			// nothing to see here, move along
+			
+		}
+
+		@Override
+		public void onTextChanged(CharSequence s, int start, int before,
+				int count) {
+			// nothing to see here, move along
+			
+		}
+		
+	}
 }
diff --git a/GnucashMobile/src/org/gnucash/android/ui/TimePickerDialogFragment.java b/GnucashMobile/src/org/gnucash/android/ui/TimePickerDialogFragment.java
new file mode 100644
index 00000000..30ebd9f4
--- /dev/null
+++ b/GnucashMobile/src/org/gnucash/android/ui/TimePickerDialogFragment.java
@@ -0,0 +1,59 @@
+/*
+ * Written By: Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2012 Ngewi Fet
+ *
+ * This file is part of Gnucash for Android
+ * 
+ * Gnucash for Android is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, contact:
+ *
+ * Free Software Foundation           Voice:  +1-617-542-5942
+ * 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ * Boston, MA  02110-1301,  USA       gnu@gnu.org
+ */
+
+package org.gnucash.android.ui;
+
+import java.util.Calendar;
+
+import android.app.Dialog;
+import android.app.TimePickerDialog;
+import android.app.TimePickerDialog.OnTimeSetListener;
+import android.os.Bundle;
+import android.support.v4.app.DialogFragment;
+
+public class TimePickerDialogFragment extends DialogFragment {
+	private OnTimeSetListener mListener = null;
+	
+	public TimePickerDialogFragment() {
+		// nothing to see here, move along
+	}
+	
+	public TimePickerDialogFragment(OnTimeSetListener listener){
+		mListener = listener;
+	}
+	
+	@Override
+	public Dialog onCreateDialog(Bundle savedInstanceState) {
+		Calendar cal = Calendar.getInstance();
+		int hour = cal.get(Calendar.HOUR_OF_DAY);
+		int minute = cal.get(Calendar.MINUTE);
+		
+		return new TimePickerDialog(getActivity(),
+				mListener, 
+				hour, 
+				minute,
+				true);
+	}
+	
+}
diff --git a/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java b/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java
index 5a464616..8d5e30d2 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java
@@ -1,3 +1,27 @@
+/*
+ * Written By: Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2012 Ngewi Fet
+ *
+ * This file is part of Gnucash for Android
+ * 
+ * Gnucash for Android is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, contact:
+ *
+ * Free Software Foundation           Voice:  +1-617-542-5942
+ * 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ * Boston, MA  02110-1301,  USA       gnu@gnu.org
+ */
+
 package org.gnucash.android.ui;
 
 import org.gnucash.android.R;
@@ -29,8 +53,7 @@ public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
 
 		Bundle args = getArguments();
-		mAccountID = args.getLong(SELECTED_ACCOUNT_ID);
-		
+		mAccountID = args.getLong(SELECTED_ACCOUNT_ID);		
 	}
 	
 	@Override
