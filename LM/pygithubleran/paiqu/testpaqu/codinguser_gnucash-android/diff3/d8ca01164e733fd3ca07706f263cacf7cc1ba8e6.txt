From d8ca01164e733fd3ca07706f263cacf7cc1ba8e6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 27 Jun 2016 18:58:28 +0200
Subject: [PATCH] Add test case for #512.

---
 .../test/unit/db/ScheduledActionDbAdapterTest.java | 46 ++++++++++++++++++++++
 1 file changed, 46 insertions(+)

diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
index 74218a4e..39e702e9 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
@@ -70,4 +70,50 @@ public void testGenerateRepeatString(){
 
     }
 
+    @Test
+    public void testAddGetRecord() {
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
+        scheduledAction.setActionUID("Some UID");
+        scheduledAction.setAdvanceCreateDays(1);
+        scheduledAction.setAdvanceNotifyDays(2);
+        scheduledAction.setAutoCreate(true);
+        scheduledAction.setAutoNotify(true);
+        scheduledAction.setEnabled(true);
+        scheduledAction.setStartTime(11111);
+        scheduledAction.setEndTime(33333);
+        scheduledAction.setLastRun(22222);
+        scheduledAction.setExecutionCount(3);
+        scheduledAction.setRecurrence(new Recurrence(PeriodType.MONTH));
+        scheduledAction.setTag("QIF;SD_CARD;2016-06-25 12:56:07.175;false");
+        mScheduledActionDbAdapter.addRecord(scheduledAction);
+
+        ScheduledAction scheduledActionFromDb =
+                mScheduledActionDbAdapter.getRecord(scheduledAction.getUID());
+        assertThat(scheduledActionFromDb.getUID()).isEqualTo(
+                scheduledAction.getUID());
+        assertThat(scheduledActionFromDb.getActionUID()).isEqualTo(
+                scheduledAction.getActionUID());
+        assertThat(scheduledActionFromDb.getAdvanceCreateDays()).isEqualTo(
+                scheduledAction.getAdvanceCreateDays());
+        assertThat(scheduledActionFromDb.getAdvanceNotifyDays()).isEqualTo(
+                scheduledAction.getAdvanceNotifyDays());
+        assertThat(scheduledActionFromDb.shouldAutoCreate()).isEqualTo(
+                scheduledAction.shouldAutoCreate());
+        assertThat(scheduledActionFromDb.shouldAutoNotify()).isEqualTo(
+                scheduledAction.shouldAutoNotify());
+        assertThat(scheduledActionFromDb.isEnabled()).isEqualTo(
+                scheduledAction.isEnabled());
+        assertThat(scheduledActionFromDb.getStartTime()).isEqualTo(
+                scheduledAction.getStartTime());
+        assertThat(scheduledActionFromDb.getEndTime()).isEqualTo(
+                scheduledAction.getEndTime());
+        assertThat(scheduledActionFromDb.getLastRunTime()).isEqualTo(
+                scheduledAction.getLastRunTime());
+        assertThat(scheduledActionFromDb.getExecutionCount()).isEqualTo(
+                scheduledAction.getExecutionCount());
+        assertThat(scheduledActionFromDb.getRecurrence()).isEqualTo(
+                scheduledAction.getRecurrence());
+        assertThat(scheduledActionFromDb.getTag()).isEqualTo(
+                scheduledAction.getTag());
+    }
 }
