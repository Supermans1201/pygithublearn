From f00a9755838bff771b8877ca327d0349659f88e7 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 24 Jan 2014 13:28:28 +0100
Subject: [PATCH] Feature: Delete account hierarchy (as option in delete
 confirmation dialog) Improved: Broaden the mime type of accepted files during
 import. This should enable selecting the import file with a wider range of
 apps Fixed: Crash when deleting account from account list. The reloading of
 the list is now less jarring and more smooth as it should be Fixed: Account
 color displayed on wrong account (due to view reuse)

---
 app/res/layout/dialog_account_delete.xml           |  7 +++
 app/res/values-de/strings.xml                      |  1 +
 app/res/values-el/strings.xml                      |  1 +
 app/res/values-es-rMX/strings.xml                  |  1 +
 app/res/values-es/strings.xml                      |  1 +
 app/res/values-fr/strings.xml                      |  1 +
 app/res/values-hu/strings.xml                      |  1 +
 app/res/values-it/strings.xml                      |  1 +
 app/res/values-nb/strings.xml                      |  1 +
 app/res/values-nl/strings.xml                      |  1 +
 app/res/values-pt-rBR/strings.xml                  |  1 +
 app/res/values-ru/strings.xml                      |  1 +
 app/res/values-zh/strings.xml                      |  1 +
 app/res/values/strings.xml                         |  1 +
 .../org/gnucash/android/db/AccountsDbAdapter.java  | 60 ++++++++++++++++++----
 .../org/gnucash/android/export/qif/QifHelper.java  |  1 -
 .../android/ui/accounts/AccountsListFragment.java  | 44 ++++++++++------
 .../android/ui/settings/SettingsActivity.java      |  4 +-
 18 files changed, 101 insertions(+), 28 deletions(-)
 create mode 100644 app/res/layout/dialog_account_delete.xml

diff --git a/app/res/layout/dialog_account_delete.xml b/app/res/layout/dialog_account_delete.xml
new file mode 100644
index 00000000..0638ae49
--- /dev/null
+++ b/app/res/layout/dialog_account_delete.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<CheckBox xmlns:android="http://schemas.android.com/apk/res/android"
+          android:id="@+id/checkbox_delete_sub_accounts"
+          android:layout_width="match_parent"
+          android:layout_height="match_parent"
+          android:text="@string/label_delete_sub_accounts" />
diff --git a/app/res/values-de/strings.xml b/app/res/values-de/strings.xml
index 28c0a0f2..2f7df41a 100644
--- a/app/res/values-de/strings.xml
+++ b/app/res/values-de/strings.xml
@@ -377,4 +377,5 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
\ No newline at end of file
diff --git a/app/res/values-el/strings.xml b/app/res/values-el/strings.xml
index dd437efd..36a15629 100644
--- a/app/res/values-el/strings.xml
+++ b/app/res/values-el/strings.xml
@@ -391,4 +391,5 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
diff --git a/app/res/values-es-rMX/strings.xml b/app/res/values-es-rMX/strings.xml
index a588b363..a85e571a 100644
--- a/app/res/values-es-rMX/strings.xml
+++ b/app/res/values-es-rMX/strings.xml
@@ -375,4 +375,5 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
diff --git a/app/res/values-es/strings.xml b/app/res/values-es/strings.xml
index b0a0e1ca..6e19f95b 100644
--- a/app/res/values-es/strings.xml
+++ b/app/res/values-es/strings.xml
@@ -375,4 +375,5 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
diff --git a/app/res/values-fr/strings.xml b/app/res/values-fr/strings.xml
index 736d935f..feea7055 100644
--- a/app/res/values-fr/strings.xml
+++ b/app/res/values-fr/strings.xml
@@ -373,4 +373,5 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
\ No newline at end of file
diff --git a/app/res/values-hu/strings.xml b/app/res/values-hu/strings.xml
index f3050b73..32bc6988 100644
--- a/app/res/values-hu/strings.xml
+++ b/app/res/values-hu/strings.xml
@@ -376,4 +376,5 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
\ No newline at end of file
diff --git a/app/res/values-it/strings.xml b/app/res/values-it/strings.xml
index 3e8527be..39e726da 100644
--- a/app/res/values-it/strings.xml
+++ b/app/res/values-it/strings.xml
@@ -376,4 +376,5 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
diff --git a/app/res/values-nb/strings.xml b/app/res/values-nb/strings.xml
index aa2f22b0..559ce807 100644
--- a/app/res/values-nb/strings.xml
+++ b/app/res/values-nb/strings.xml
@@ -378,4 +378,5 @@ format og importeres i regnskapsprogrammet GnuCash for PC.</string>
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
diff --git a/app/res/values-nl/strings.xml b/app/res/values-nl/strings.xml
index d9cf257f..d7c02fe0 100644
--- a/app/res/values-nl/strings.xml
+++ b/app/res/values-nl/strings.xml
@@ -377,4 +377,5 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
diff --git a/app/res/values-pt-rBR/strings.xml b/app/res/values-pt-rBR/strings.xml
index 2fe84864..e6d521a0 100644
--- a/app/res/values-pt-rBR/strings.xml
+++ b/app/res/values-pt-rBR/strings.xml
@@ -375,4 +375,5 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
diff --git a/app/res/values-ru/strings.xml b/app/res/values-ru/strings.xml
index 0889faf3..4900ffa4 100644
--- a/app/res/values-ru/strings.xml
+++ b/app/res/values-ru/strings.xml
@@ -373,4 +373,5 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
diff --git a/app/res/values-zh/strings.xml b/app/res/values-zh/strings.xml
index 22b6e71f..c2b8e32f 100644
--- a/app/res/values-zh/strings.xml
+++ b/app/res/values-zh/strings.xml
@@ -373,4 +373,5 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Select a Color</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index 34ed60bf..6f98b877 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -610,4 +610,5 @@
     <!-- Content description for a selected color square. -->
     <string name="color_swatch_description_selected">Color <xliff:g id="color_index" example="14">%1$d</xliff:g> selected</string>
     <string name="label_account_color_and_type">Account Color &amp; Type</string>
+    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
 </resources>
diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index 6a0c6724..057a3bd4 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -98,6 +98,21 @@ public long addAccount(Account account){
 		return rowId;
 	}
 
+    /**
+     * This feature goes through all the rows in the accounts and changes value for <code>columnKey</code> to <code>newValue</code><br/>
+     * The <code>newValue</code> parameter is taken as string since SQLite typically stores everything as text.
+     * <p><b>This method affects all rows, exercise caution when using it</b></p>
+     * @param columnKey Column name to be changed
+     * @param newValue New value to be assigned to the columnKey
+     * @return Number of records affected
+     */
+    public int updateAccounts(String columnKey, String newValue){
+        ContentValues contentValues = new ContentValues();
+        contentValues.put(columnKey, newValue);
+
+        return mDb.update(DatabaseHelper.ACCOUNTS_TABLE_NAME, contentValues, null, null);
+    }
+
 	/**
 	 * Deletes an account with database id <code>rowId</code>
 	 * All the transactions in the account will also be deleted
@@ -143,14 +158,14 @@ public int reassignParent(String oldParentUID, String newParentUID){
 	 * Deletes an account while preserving the linked transactions
 	 * Reassigns all transactions belonging to the account with id <code>rowId</code> to 
 	 * the account with id <code>accountReassignId</code> before deleting the account.
-	 * @param rowIdToDelete
-	 * @param accountReassignId
+	 * @param accountId Database record ID of the account to be deleted
+	 * @param accountReassignId Record ID of the account to which to reassign the transactions from the previous
 	 * @return <code>true</code> if deletion was successful, <code>false</code> otherwise.
 	 */
-	public boolean transactionPreservingDelete(long rowIdToDelete, long accountReassignId){
+	public boolean transactionPreservingDelete(long accountId, long accountReassignId){
 		Cursor transactionsCursor = mDb.query(DatabaseHelper.TRANSACTIONS_TABLE_NAME, 
 				new String[]{DatabaseHelper.KEY_ACCOUNT_UID}, 
-				DatabaseHelper.KEY_ACCOUNT_UID + " = " + rowIdToDelete, 
+				DatabaseHelper.KEY_ACCOUNT_UID + " = " + accountId,
 				null, null, null, null);
 		if (transactionsCursor != null && transactionsCursor.getCount() > 0){
 			Log.d(TAG, "Found transactions. Migrating to new account");
@@ -158,13 +173,32 @@ public boolean transactionPreservingDelete(long rowIdToDelete, long accountReass
 			contentValues.put(DatabaseHelper.KEY_ACCOUNT_UID, accountReassignId);
 			mDb.update(DatabaseHelper.TRANSACTIONS_TABLE_NAME, 
 					contentValues, 
-					DatabaseHelper.KEY_ACCOUNT_UID + "=" + rowIdToDelete, 
+					DatabaseHelper.KEY_ACCOUNT_UID + "=" + accountId,
 					null);
 			transactionsCursor.close();
 		}
-		return destructiveDeleteAccount(rowIdToDelete);
+		return destructiveDeleteAccount(accountId);
 	}
-	
+
+    /**
+     * Deletes an account and all its sub-accounts and transactions with it
+     * @param accountId Database record ID of account
+     * @return <code>true</code> if the account and subaccounts were all successfully deleted, <code>false</code> if
+     * even one was not deleted
+     */
+    public boolean recursiveDestructiveDelete(long accountId){
+        Log.d(TAG, "Delete account with rowId with its transactions and sub-accounts: " + accountId);
+        boolean result = true;
+
+        List<Long> subAccountIds = getSubAccountIds(accountId);
+        for (long subAccountId : subAccountIds) {
+            result |= recursiveDestructiveDelete(subAccountId);
+        }
+        result |= destructiveDeleteAccount(accountId);
+
+        return result;
+    }
+
 	/**
 	 * Builds an account instance with the provided cursor.
 	 * The cursor should already be pointing to the account record in the database
@@ -433,7 +467,9 @@ public Cursor fetchAccounts(String condition){
      * @return Account Balance of an account including sub-accounts
      */
     public Money getAccountBalance(long accountId){
-        Money balance = Money.createInstance(getCurrencyCode(accountId));
+        String currencyCode = getCurrencyCode(accountId);
+        currencyCode = currencyCode == null ? Money.DEFAULT_CURRENCY_CODE : currencyCode;
+        Money balance = Money.createInstance(currencyCode);
 
         List<Long> subAccounts = getSubAccountIds(accountId);
         for (long id : subAccounts){
@@ -529,7 +565,10 @@ public int getSubAccountCount(long accountId){
 
         String queryCount = "SELECT COUNT(*) FROM " + DatabaseHelper.ACCOUNTS_TABLE_NAME + " WHERE "
                 + DatabaseHelper.KEY_PARENT_ACCOUNT_UID + " = ?";
-        Cursor cursor = mDb.rawQuery(queryCount, new String[]{getAccountUID(accountId)});
+        String accountUID = getAccountUID(accountId);
+        if (accountUID == null) //if the account UID is null, then the accountId param was invalid. Just return
+            return 0;
+        Cursor cursor = mDb.rawQuery(queryCount, new String[]{accountUID});
         cursor.moveToFirst();
         int count = cursor.getInt(0);
         cursor.close();
@@ -677,6 +716,9 @@ public String getFullyQualifiedAccountName(long accountId){
      * @return <code>true</code> if the account is a placeholder account, <code>false</code> otherwise
      */
     public boolean isPlaceholderAccount(String accountUID){
+        if (accountUID == null)
+            return false;
+
         Cursor cursor = mDb.query(DatabaseHelper.ACCOUNTS_TABLE_NAME,
                 new String[]{DatabaseHelper.KEY_ROW_ID, DatabaseHelper.KEY_PLACEHOLDER},
                 DatabaseHelper.KEY_UID + " = ?",
diff --git a/app/src/org/gnucash/android/export/qif/QifHelper.java b/app/src/org/gnucash/android/export/qif/QifHelper.java
index 0068a1e9..64ef915a 100644
--- a/app/src/org/gnucash/android/export/qif/QifHelper.java
+++ b/app/src/org/gnucash/android/export/qif/QifHelper.java
@@ -70,7 +70,6 @@ public static String getQifHeader(Account.AccountType accountType){
      * @return Imbalance account name
      */
     public static String getImbalanceAccountName(Currency currency){
-        //TODO: localize this in the future
         return GnuCashApplication.getAppContext().getString(R.string.imbalance_account_name) + "-" + currency.getCurrencyCode();
     }
 }
diff --git a/app/src/org/gnucash/android/ui/accounts/AccountsListFragment.java b/app/src/org/gnucash/android/ui/accounts/AccountsListFragment.java
index 76d4c57c..03e1b9cb 100644
--- a/app/src/org/gnucash/android/ui/accounts/AccountsListFragment.java
+++ b/app/src/org/gnucash/android/ui/accounts/AccountsListFragment.java
@@ -286,26 +286,28 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
      */
     public void tryDeleteAccount(long rowId) {
         Account acc = mAccountsDbAdapter.getAccount(rowId);
-        if (acc.getTransactionCount() > 0) {
+        if (acc.getTransactionCount() > 0 || mAccountsDbAdapter.getSubAccountCount(rowId) > 0) {
             showConfirmationDialog(rowId);
         } else {
-            deleteAccount(rowId);
+            deleteAccount(rowId, false);
         }
     }
 
     /**
-     * Deletes an account and show a {@link Toast} notification on success
-     *
+     * Deletes an account and show a {@link Toast} notification on success.
+     * When an account is deleted, all it's child accounts will be reassigned as children to its parent account
      * @param rowId Record ID of the account to be deleted
      */
-    protected void deleteAccount(long rowId) {
+    protected void deleteAccount(long rowId, boolean deleteSubAccounts) {
         String accountUID = mAccountsDbAdapter.getAccountUID(rowId);
-        boolean deleted = mAccountsDbAdapter.destructiveDeleteAccount(rowId);
+        String parentUID    = mAccountsDbAdapter.getParentAccountUID(rowId);
+        boolean deleted     = deleteSubAccounts ?
+                mAccountsDbAdapter.recursiveDestructiveDelete(rowId)
+                : mAccountsDbAdapter.destructiveDeleteAccount(rowId);
         if (deleted) {
-            mAccountsDbAdapter.reassignParent(accountUID, null);
+            mAccountsDbAdapter.reassignParent(accountUID, parentUID);
             Toast.makeText(getActivity(), R.string.toast_account_deleted, Toast.LENGTH_SHORT).show();
             WidgetConfigurationActivity.updateAllWidgets(getActivity().getApplicationContext());
-            getLoaderManager().destroyLoader(0);
         }
         refresh();
     }
@@ -548,10 +550,12 @@ public static DeleteConfirmationDialogFragment newInstance(int title, long id) {
         public Dialog onCreateDialog(Bundle savedInstanceState) {
             int title = getArguments().getInt("title");
             final long rowId = getArguments().getLong(TransactionsListFragment.SELECTED_ACCOUNT_ID);
-
-            return new AlertDialog.Builder(getActivity())
+            LayoutInflater layoutInflater = getSherlockActivity().getLayoutInflater();
+            final View dialogLayout = layoutInflater.inflate(R.layout.dialog_account_delete, (ViewGroup) getView());
+            AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(getActivity())
                     .setIcon(android.R.drawable.ic_delete)
                     .setTitle(title).setMessage(R.string.delete_account_confirmation_message)
+                    .setView(dialogLayout)
                     .setPositiveButton(R.string.alert_dialog_ok_delete,
                             new DialogInterface.OnClickListener() {
                                 public void onClick(DialogInterface dialog, int whichButton) {
@@ -561,21 +565,25 @@ public void onClick(DialogInterface dialog, int whichButton) {
                                         accountsDbAdapter.deleteAllRecords();
                                         accountsDbAdapter.close();
                                         Toast.makeText(context, R.string.toast_all_accounts_deleted, Toast.LENGTH_SHORT).show();
-                                    } else
-                                        ((AccountsListFragment) getTargetFragment()).deleteAccount(rowId);
+                                    } else {
+                                        CheckBox deleteSubAccountsCheckBox = (CheckBox) dialogLayout
+                                                .findViewById(R.id.checkbox_delete_sub_accounts);
+                                        ((AccountsListFragment) getTargetFragment()).deleteAccount(rowId, deleteSubAccountsCheckBox.isChecked());
+                                    }
                                 }
-                            }
-                    )
+                            })
                     .setNegativeButton(R.string.alert_dialog_cancel,
                             new DialogInterface.OnClickListener() {
                                 public void onClick(DialogInterface dialog, int whichButton) {
                                     dismiss();
                                 }
                             }
-                    )
-                    .create();
+
+                    );
+            return dialogBuilder.create();
+        }
+
         }
-    }
 
     /**
      * Extends {@link DatabaseCursorLoader} for loading of {@link Account} from the
@@ -679,6 +687,8 @@ public void bindView(View v, Context context, Cursor cursor) {
             if (accountColor != null){
                 int color = Color.parseColor(accountColor);
                 colorStripView.setBackgroundColor(color);
+            } else {
+                colorStripView.setBackgroundColor(Color.TRANSPARENT);
             }
 
             boolean isPlaceholderAccount = mAccountsDbAdapter.isPlaceholderAccount(accountId);
diff --git a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
index d09f590b..4aa274fa 100644
--- a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -36,10 +36,12 @@
 import org.gnucash.android.R;
 import org.gnucash.android.data.Money;
 import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.ui.accounts.AccountsActivity;
 import org.gnucash.android.ui.accounts.AccountsListFragment;
 
+import java.util.Currency;
 import java.util.List;
 import java.util.Timer;
 import java.util.TimerTask;
@@ -221,7 +223,7 @@ public void run() {
 
     public void importAccounts() {
         Intent pickIntent = new Intent(Intent.ACTION_GET_CONTENT);
-        pickIntent.setType("application/octet-stream");
+        pickIntent.setType("application/*");
         Intent chooser = Intent.createChooser(pickIntent, "Select GnuCash account file");
 
         startActivityForResult(chooser, AccountsListFragment.REQUEST_PICK_ACCOUNTS_FILE);
