From d871cf203abf703c63d6a439947839f2bc156b99 Mon Sep 17 00:00:00 2001
From: Falk Brockmann <falk.s.h.brockmann@gmail.com>
Date: Sat, 5 Dec 2015 16:07:29 +0100
Subject: [PATCH] Add compact view for transactions list

TODO: Fix crash when toggling modes to non-compact view and add global preference
---
 app/build.gradle                                   |   1 +
 .../ui/transaction/TransactionsListFragment.java   | 110 +++++++++++++--------
 .../android/ui/util/CursorRecyclerAdapter.java     |   4 +-
 .../res/layout/cardview_compact_transaction.xml    |  64 ++++++++++++
 .../main/res/menu/transactions_list_actions.xml    |   5 +
 app/src/main/res/values/donottranslate.xml         |   1 +
 6 files changed, 141 insertions(+), 44 deletions(-)
 create mode 100644 app/src/main/res/layout/cardview_compact_transaction.xml

diff --git a/app/build.gradle b/app/build.gradle
index fafb1331..4d8e61e1 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -79,6 +79,7 @@ android {
     }
 
     buildTypes {
+        //todo re-enable proguard and test coverage
         release {
             minifyEnabled true
 //            shrinkResources true
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index 8cb56f8c..9d781e19 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -21,7 +21,8 @@
 import android.content.res.Configuration;
 import android.database.Cursor;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
+import android.preference.PreferenceManager;
+import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.LoaderManager.LoaderCallbacks;
 import android.support.v4.content.Loader;
@@ -31,7 +32,6 @@
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.PopupMenu;
 import android.support.v7.widget.RecyclerView;
-import android.text.format.DateUtils;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -58,9 +58,7 @@
 import org.gnucash.android.ui.util.CursorRecyclerAdapter;
 import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
-import org.joda.time.LocalDate;
 
-import java.text.DateFormat;
 import java.util.List;
 
 import butterknife.Bind;
@@ -82,6 +80,7 @@
     private TransactionsDbAdapter mTransactionsDbAdapter;
     private String mAccountUID;
 
+	private boolean mUseCompactView = false;
 
 	private TransactionRecyclerAdapter mTransactionRecyclerAdapter;
 	@Bind(R.id.transaction_recycler_view) EmptyRecyclerView mRecyclerView;
@@ -94,9 +93,20 @@ public void onCreate(Bundle savedInstanceState) {
 		Bundle args = getArguments();
 		mAccountUID = args.getString(UxArgument.SELECTED_ACCOUNT_UID);
 
+		mUseCompactView = PreferenceManager.getDefaultSharedPreferences(getActivity())
+				.getBoolean(getActivity().getString(R.string.key_use_compact_list), false);
+		//if there was a local override of the global setting, respect it
+		if (savedInstanceState != null)
+			mUseCompactView = savedInstanceState.getBoolean(getString(R.string.key_use_compact_list), mUseCompactView);
 		mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 	}
-	
+
+	@Override
+	public void onSaveInstanceState(Bundle outState) {
+		super.onSaveInstanceState(outState);
+		outState.putBoolean(getString(R.string.key_use_compact_list), mUseCompactView);
+	}
+
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
@@ -146,7 +156,6 @@ public void refresh(String accountUID){
     @Override
 	public void refresh(){
 		getLoaderManager().restartLoader(0, null, this);
-
 	}
 	
 	@Override
@@ -164,16 +173,27 @@ public void onListItemClick(long id) {
 //		mTransactionEditListener.editTransaction(mTransactionsDbAdapter.getUID(id));
 	}
 
-
 	@Override
 	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
 		inflater.inflate(R.menu.transactions_list_actions, menu);	
 	}
 
 	@Override
+	public void onPrepareOptionsMenu(Menu menu) {
+		super.onPrepareOptionsMenu(menu);
+		MenuItem item = menu.findItem(R.id.menu_compact_trn_view);
+		item.setChecked(mUseCompactView);
+	}
+
+	@Override
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
-            default:
+			case R.id.menu_compact_trn_view:
+				item.setChecked(!item.isChecked());
+				mUseCompactView = !mUseCompactView;
+				mTransactionRecyclerAdapter.notifyItemRangeChanged(0, mTransactionRecyclerAdapter.getItemCount());
+				return true;
+			default:
                 return super.onOptionsItemSelected(item);
         }
 	}
@@ -227,8 +247,9 @@ public TransactionRecyclerAdapter(Cursor cursor) {
 
 		@Override
 		public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+			int layoutRes = mUseCompactView ? R.layout.cardview_compact_transaction : R.layout.cardview_transaction;
 			View v = LayoutInflater.from(parent.getContext())
-					.inflate(R.layout.cardview_transaction, parent, false);
+					.inflate(layoutRes, parent, false);
 			return new ViewHolder(v);
 		}
 
@@ -238,34 +259,15 @@ public void onBindViewHolderCursor(ViewHolder holder, Cursor cursor) {
 			holder.transactionId = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry._ID));
 
 			String description = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_DESCRIPTION));
-			holder.transactionDescription.setText(description);
+			holder.primaryText.setText(description);
 
 			final String transactionUID = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_UID));
 			Money amount = mTransactionsDbAdapter.getBalance(transactionUID, mAccountUID);
 			TransactionsActivity.displayBalance(holder.transactionAmount, amount);
 
-			List<Split> splits = SplitsDbAdapter.getInstance().getSplitsForTransaction(transactionUID);
-			String text = "";
-
-			if (splits.size() == 2 && splits.get(0).isPairOf(splits.get(1))){
-				for (Split split : splits) {
-					if (!split.getAccountUID().equals(mAccountUID)){
-						text = AccountsDbAdapter.getInstance().getFullyQualifiedAccountName(split.getAccountUID());
-						break;
-					}
-				}
-			}
-
-			if (splits.size() > 2){
-				text = splits.size() + " splits";
-			}
-			holder.transactionNote.setText(text);
-
 			long dateMillis = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_TIMESTAMP));
 			String dateText = TransactionsActivity.getPrettyDateFormat(getActivity(), dateMillis);
 
-			holder.transactionDate.setText(dateText);
-
 			final long id = holder.transactionId;
 			holder.itemView.setOnClickListener(new View.OnClickListener() {
 				@Override
@@ -274,27 +276,51 @@ public void onClick(View v) {
 				}
 			});
 
-			holder.editTransaction.setOnClickListener(new View.OnClickListener() {
-				@Override
-				public void onClick(View v) {
-					Intent intent = new Intent(getActivity(), FormActivity.class);
-					intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.TRANSACTION.name());
-					intent.putExtra(UxArgument.SELECTED_TRANSACTION_UID, transactionUID);
-					intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, mAccountUID);
-					startActivity(intent);
+			if (mUseCompactView) {
+				holder.secondaryText.setText(dateText);
+			} else {
+
+				List<Split> splits = SplitsDbAdapter.getInstance().getSplitsForTransaction(transactionUID);
+				String text = "";
+
+				if (splits.size() == 2 && splits.get(0).isPairOf(splits.get(1))) {
+					for (Split split : splits) {
+						if (!split.getAccountUID().equals(mAccountUID)) {
+							text = AccountsDbAdapter.getInstance().getFullyQualifiedAccountName(split.getAccountUID());
+							break;
+						}
+					}
 				}
-			});
 
+				if (splits.size() > 2) {
+					text = splits.size() + " splits";
+				}
+				holder.secondaryText.setText(text);
+				holder.transactionDate.setText(dateText);
+
+				holder.editTransaction.setOnClickListener(new View.OnClickListener() {
+					@Override
+					public void onClick(View v) {
+						Intent intent = new Intent(getActivity(), FormActivity.class);
+						intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.TRANSACTION.name());
+						intent.putExtra(UxArgument.SELECTED_TRANSACTION_UID, transactionUID);
+						intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, mAccountUID);
+						startActivity(intent);
+					}
+				});
+			}
 		}
 
 		public class ViewHolder extends RecyclerView.ViewHolder implements PopupMenu.OnMenuItemClickListener{
-			@Bind(R.id.primary_text) 		public TextView transactionDescription;
-			@Bind(R.id.secondary_text) 		public TextView transactionNote;
+			@Bind(R.id.primary_text) 		public TextView primaryText;
+			@Bind(R.id.secondary_text) 		public TextView secondaryText;
 			@Bind(R.id.transaction_amount)	public TextView transactionAmount;
-			@Bind(R.id.transaction_date)	public TextView transactionDate;
-			@Bind(R.id.edit_transaction)	public ImageView editTransaction;
 			@Bind(R.id.options_menu)		public ImageView optionsMenu;
 
+			//these views are not used in the compact view, hence the nullability
+			@Nullable @Bind(R.id.transaction_date)	public TextView transactionDate;
+			@Nullable @Bind(R.id.edit_transaction)	public ImageView editTransaction;
+
 			long transactionId;
 
 			public ViewHolder(View itemView) {
diff --git a/app/src/main/java/org/gnucash/android/ui/util/CursorRecyclerAdapter.java b/app/src/main/java/org/gnucash/android/ui/util/CursorRecyclerAdapter.java
index d71a7f79..93303aa0 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/CursorRecyclerAdapter.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/CursorRecyclerAdapter.java
@@ -159,7 +159,7 @@ public void changeCursor(Cursor cursor) {
      * closed.
      *
      * @param newCursor The new cursor to be used.
-     * @return Returns the previously set Cursor, or null if there wasa not one.
+     * @return Returns the previously set Cursor, or null if there was not one.
      * If the given new Cursor is the same instance is the previously set
      * Cursor, null is also returned.
      */
@@ -279,7 +279,7 @@ public void setFilterQueryProvider(FilterQueryProvider filterQueryProvider) {
      * @see ContentObserver#onChange(boolean)
      */
     protected void onContentChanged() {
-
+        notifyDataSetChanged();
     }
 
     private class ChangeObserver extends ContentObserver {
diff --git a/app/src/main/res/layout/cardview_compact_transaction.xml b/app/src/main/res/layout/cardview_compact_transaction.xml
new file mode 100644
index 00000000..c009d744
--- /dev/null
+++ b/app/src/main/res/layout/cardview_compact_transaction.xml
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:cardview="http://schemas.android.com/apk/res-auto"
+    cardview:cardUseCompatPadding="true"
+    cardview:cardPreventCornerOverlap="false"
+    android:foreground="?selectableItemBackground"
+    android:focusable="true"
+    android:clickable="true"
+    android:layout_marginLeft="5dp"
+    android:layout_marginRight="5dp"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="5dp"
+        android:minHeight="20dp">
+
+        <include android:id="@+id/list_item_2_lines"
+            layout="@layout/list_item_2_lines"
+            android:layout_height="match_parent"
+            android:layout_width="0dp"
+            android:layout_marginLeft="5dp"
+            android:layout_weight="2" />
+
+        <TextView
+            android:id="@+id/transaction_amount"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:singleLine="true"
+            android:textSize="18sp"
+            tools:text="$450.000.000"
+            android:layout_gravity="bottom"
+            android:layout_marginRight="@dimen/dialog_padding"/>
+
+        <ImageView
+            android:id="@+id/options_menu"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:background="?attr/selectableItemBackgroundBorderless"
+            android:paddingTop="20dp"
+            android:paddingLeft="24dp"
+            android:scaleType="centerInside"
+            android:src="@drawable/ic_more_vert_black_24dp"
+            tools:ignore="ContentDescription" />
+    </LinearLayout>
+</android.support.v7.widget.CardView>
\ No newline at end of file
diff --git a/app/src/main/res/menu/transactions_list_actions.xml b/app/src/main/res/menu/transactions_list_actions.xml
index f46eba02..b52c7933 100644
--- a/app/src/main/res/menu/transactions_list_actions.xml
+++ b/app/src/main/res/menu/transactions_list_actions.xml
@@ -26,4 +26,9 @@
           android:icon="@drawable/content_edit_holo_dark"
           android:title="@string/title_edit_account"
           app:showAsAction="never|withText" />
+    <item android:id="@+id/menu_compact_trn_view"
+          android:icon="@drawable/content_edit_holo_dark"
+          android:title="Compact View"
+          android:checkable="true"
+          app:showAsAction="never|withText" />
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values/donottranslate.xml b/app/src/main/res/values/donottranslate.xml
index 5be9ac0b..659ae424 100644
--- a/app/src/main/res/values/donottranslate.xml
+++ b/app/src/main/res/values/donottranslate.xml
@@ -36,6 +36,7 @@
     <string name="key_enable_crashlytics" translatable="false">enable_crashlytics</string>
     <string name="key_use_account_color" translatable="false">use_account_color</string>
     <string name="key_last_export_destination">last_export_destination</string>
+    <string name="key_use_compact_list">use_compact_list</string>
 
     <string-array name="key_transaction_type_values" translatable="false">
         <item>CREDIT</item>
