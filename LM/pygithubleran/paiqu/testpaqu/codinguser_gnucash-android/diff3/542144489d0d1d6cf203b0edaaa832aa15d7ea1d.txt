From 542144489d0d1d6cf203b0edaaa832aa15d7ea1d Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 9 Sep 2015 00:53:35 +0200
Subject: [PATCH] Add custom date range picker to reports

---
 app/build.gradle                                   |   3 +-
 .../android/ui/account/AccountsListFragment.java   |   3 +-
 .../android/ui/report/ChartDatePickerFragment.java | 102 ------------------
 .../android/ui/report/PieChartFragment.java        |  10 +-
 .../gnucash/android/ui/report/ReportsActivity.java |  20 +++-
 .../dialog/DateRangePickerDialogFragment.java      | 118 +++++++++++++++++++++
 .../ui/transaction/TransactionFormFragment.java    |   5 +-
 .../gnucash/android/ui/util/ReselectSpinner.java   |  34 ++++++
 app/src/main/res/layout/activity_reports.xml       |   2 +-
 .../main/res/layout/dialog_date_range_picker.xml   |  32 ++++++
 app/src/main/res/menu/chart_actions.xml            |   1 +
 11 files changed, 211 insertions(+), 119 deletions(-)
 delete mode 100644 app/src/main/java/org/gnucash/android/ui/report/ChartDatePickerFragment.java
 create mode 100644 app/src/main/java/org/gnucash/android/ui/report/dialog/DateRangePickerDialogFragment.java
 create mode 100644 app/src/main/java/org/gnucash/android/ui/util/ReselectSpinner.java
 create mode 100644 app/src/main/res/layout/dialog_date_range_picker.xml

diff --git a/app/build.gradle b/app/build.gradle
index ee977a1b..2e1d1c65 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -176,7 +176,8 @@ dependencies {
             'org.ocpsoft.prettytime:prettytime:3.2.7.Final',
             'com.google.android.gms:play-services-drive:7.0.0',
             'com.jakewharton:butterknife:7.0.1',
-            'com.kobakei:ratethisapp:0.0.3'
+            'com.kobakei:ratethisapp:0.0.3',
+            'com.squareup:android-times-square:1.6.4@aar'
     )
 
     compile('com.crashlytics.sdk.android:crashlytics:2.5.0@aar') {
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index e35e42bc..1cbf1356 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -504,7 +504,8 @@ public void onClick(View v) {
                     int drawableResource = !isFavoriteAccount ?
                             R.drawable.ic_star_black_24dp : R.drawable.ic_star_border_black_24dp;
                     holder.favoriteStatus.setImageResource(drawableResource);
-                    refresh();
+                    if (mDisplayMode == DisplayMode.FAVORITES)
+                        refresh();
                 }
             });
 
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ChartDatePickerFragment.java b/app/src/main/java/org/gnucash/android/ui/report/ChartDatePickerFragment.java
deleted file mode 100644
index a55d62d7..00000000
--- a/app/src/main/java/org/gnucash/android/ui/report/ChartDatePickerFragment.java
+++ /dev/null
@@ -1,102 +0,0 @@
-/*
- * Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
- * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gnucash.android.ui.report;
-
-import android.app.DatePickerDialog;
-import android.app.DatePickerDialog.OnDateSetListener;
-import android.app.Dialog;
-import android.os.Build;
-import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.v4.app.DialogFragment;
-import android.util.Log;
-import android.view.View;
-import android.widget.DatePicker;
-
-import java.lang.reflect.Field;
-import java.util.Calendar;
-
-/**
- * Fragment for displaying a date picker dialog.
- * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
- * @author Ngewi Fet <ngewif@gmail.com>
- */
-public class ChartDatePickerFragment extends DialogFragment {
-
-    private static final String TAG = ChartDatePickerFragment.class.getSimpleName();
-
-    private OnDateSetListener callback;
-    private Calendar mCalendar = Calendar.getInstance();
-    private long minDate;
-    private long maxDate;
-
-    /**
-     * Required for when the device is rotated while the dialog is open.
-     * If this constructor is not present, the app will crash
-     */
-    public ChartDatePickerFragment() {}
-
-    /**
-     * Creates the date picker fragment without day field.
-     * @param callback the listener to notify when the date is set and the dialog is closed
-     * @param time the dialog init time in milliseconds
-     * @param minDate the earliest allowed date
-     * @param maxDate the latest allowed date
-     */
-    public static ChartDatePickerFragment newInstance(OnDateSetListener callback, long time, long minDate, long maxDate) {
-        ChartDatePickerFragment chartDatePickerFragment = new ChartDatePickerFragment();
-        chartDatePickerFragment.callback = callback;
-        chartDatePickerFragment.mCalendar.setTimeInMillis(time);
-        chartDatePickerFragment.minDate = minDate;
-        chartDatePickerFragment.maxDate = maxDate;
-        return chartDatePickerFragment;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    @NonNull
-    @Override
-    public Dialog onCreateDialog(Bundle savedInstanceState) {
-        DatePickerDialog dialog = new DatePickerDialog(getActivity(), callback,
-                mCalendar.get(Calendar.YEAR), mCalendar.get(Calendar.MONTH), mCalendar.get(Calendar.DAY_OF_MONTH));
-
-        try {
-            Field datePickerField = dialog.getClass().getDeclaredField("mDatePicker");
-            datePickerField.setAccessible(true);
-            DatePicker datePicker = (DatePicker) datePickerField.get(dialog);
-
-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB ) {
-                datePicker.setMinDate(minDate);
-                datePicker.setMaxDate(maxDate);
-            }
-
-            for (Field field : datePicker.getClass().getDeclaredFields()) {
-                if (field.getName().equals("mDaySpinner") || field.getName().equals("mDayPicker")) {
-                    field.setAccessible(true);
-                    ((View) field.get(datePicker)).setVisibility(View.GONE);
-                }
-            }
-        } catch (Exception e) {
-            Log.w(TAG, e.getMessage());
-        }
-
-        return dialog;
-    }
-
-}
diff --git a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
index 490eab2c..381dfb90 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
@@ -17,7 +17,6 @@
 
 package org.gnucash.android.ui.report;
 
-import android.app.DatePickerDialog;
 import android.content.Context;
 import android.graphics.Color;
 import android.os.Bundle;
@@ -31,11 +30,6 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.DatePicker;
-import android.widget.Spinner;
 import android.widget.TextView;
 
 import com.github.mikephil.charting.charts.PieChart;
@@ -44,8 +38,8 @@
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.data.PieData;
 import com.github.mikephil.charting.data.PieDataSet;
-import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
 import com.github.mikephil.charting.highlight.Highlight;
+import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.AccountsDbAdapter;
@@ -56,7 +50,6 @@
 import org.joda.time.LocalDateTime;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Collections;
 import java.util.Currency;
 import java.util.List;
@@ -288,6 +281,7 @@ private void bubbleSort() {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         inflater.inflate(R.menu.chart_actions, menu);
+        menu.findItem(R.id.menu_toggle_legend).setChecked(false);
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index 8daaaf22..d4e38c08 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -43,11 +43,13 @@
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.passcode.PassLockActivity;
+import org.gnucash.android.ui.report.dialog.DateRangePickerDialogFragment;
 import org.joda.time.DateTime;
 import org.joda.time.LocalDate;
 
 import java.util.Arrays;
 import java.util.Calendar;
+import java.util.Date;
 import java.util.List;
 
 import butterknife.Bind;
@@ -60,7 +62,7 @@
  * @author Ngewi Fet <ngewif@gmail.com>
  */
 public class ReportsActivity extends PassLockActivity implements AdapterView.OnItemSelectedListener,
-        DatePickerDialog.OnDateSetListener{
+        DatePickerDialog.OnDateSetListener, DateRangePickerDialogFragment.OnDateRangeSetListener{
 
     static final int[] COLORS = {
             Color.parseColor("#17ee4e"), Color.parseColor("#cc1f09"), Color.parseColor("#3940f7"),
@@ -269,9 +271,11 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
                 String mCurrencyCode = PreferenceManager.getDefaultSharedPreferences(this).getString(getString(R.string.key_report_currency), Money.DEFAULT_CURRENCY_CODE);
                 long earliestTransactionTime = mTransactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType, mCurrencyCode);
                 long latestTransactionTime = mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType, mCurrencyCode);
-                DialogFragment newFragment = ChartDatePickerFragment.newInstance(
-                        this, System.currentTimeMillis(), earliestTransactionTime, latestTransactionTime); //TODO: limit to time of earliest transaction in the database
-                newFragment.show(getSupportFragmentManager(), "date_dialog");
+                DialogFragment rangeFragment = DateRangePickerDialogFragment.newInstance(
+                        earliestTransactionTime,
+                        new LocalDate().plusDays(1).toDate().getTime(),
+                        this);
+                rangeFragment.show(getSupportFragmentManager(), "range_dialog");
                 break;
         }
         if (position != 5){ //the date picker will trigger the update itself
@@ -291,4 +295,12 @@ public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth
         mReportStartTime = calendar.getTimeInMillis();
         updateDateRangeOnFragment();
     }
+
+    @Override
+    public void onDateRangeSet(Date startDate, Date endDate) {
+        mReportStartTime = startDate.getTime();
+        mReportEndTime = endDate.getTime();
+        updateDateRangeOnFragment();
+
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/dialog/DateRangePickerDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/report/dialog/DateRangePickerDialogFragment.java
new file mode 100644
index 00000000..7681e7a0
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/report/dialog/DateRangePickerDialogFragment.java
@@ -0,0 +1,118 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.report.dialog;
+
+import android.app.Dialog;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v4.app.DialogFragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+
+import com.squareup.timessquare.CalendarPickerView;
+
+import org.gnucash.android.R;
+import org.joda.time.LocalDate;
+
+import java.util.Calendar;
+import java.util.Date;
+import java.util.List;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
+/**
+ * Dialog for picking date ranges in terms of months.
+ * It is currently used for selecting ranges for reports
+ * @author Ngewi Fet <ngewif@gmail.com>
+ */
+public class DateRangePickerDialogFragment extends DialogFragment{
+
+    @Bind(R.id.calendar_view) CalendarPickerView mCalendarPickerView;
+    @Bind(R.id.btn_save)    Button mDoneButton;
+    @Bind(R.id.btn_cancel)  Button mCancelButton;
+
+    private Date mStartRange = LocalDate.now().minusMonths(1).toDate();
+    private Date mEndRange = LocalDate.now().toDate();
+    private OnDateRangeSetListener mDateRangeSetListener;
+
+    public static DateRangePickerDialogFragment newInstance(OnDateRangeSetListener dateRangeSetListener){
+        DateRangePickerDialogFragment fragment = new DateRangePickerDialogFragment();
+        fragment.mDateRangeSetListener = dateRangeSetListener;
+        return fragment;
+    }
+
+    public static DateRangePickerDialogFragment newInstance(long startDate, long endDate,
+                                                            OnDateRangeSetListener dateRangeSetListener){
+        DateRangePickerDialogFragment fragment = new DateRangePickerDialogFragment();
+        fragment.mStartRange = new Date(startDate);
+        fragment.mEndRange = new Date(endDate);
+        fragment.mDateRangeSetListener = dateRangeSetListener;
+        return fragment;
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.dialog_date_range_picker, container, false);
+        ButterKnife.bind(this, view);
+
+
+        Calendar nextYear = Calendar.getInstance();
+        nextYear.add(Calendar.YEAR, 1);
+
+        Date today = new Date();
+        mCalendarPickerView.init(mStartRange, mEndRange)
+                .inMode(CalendarPickerView.SelectionMode.RANGE)
+                .withSelectedDate(today);
+
+        mDoneButton.setText("Done");
+        mDoneButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                List<Date> selectedDates = mCalendarPickerView.getSelectedDates();
+                Date startDate = selectedDates.get(0);
+                Date endDate = selectedDates.size() == 2 ? selectedDates.get(1) : new Date();
+                mDateRangeSetListener.onDateRangeSet(startDate, endDate);
+                dismiss();
+            }
+        });
+
+        mCancelButton.setOnClickListener(new View.OnClickListener(){
+            @Override
+            public void onClick(View v) {
+                dismiss();
+            }
+        });
+        return view;
+    }
+
+    @NonNull
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        Dialog dialog = super.onCreateDialog(savedInstanceState);
+        dialog.setTitle("Pick time range");
+        return dialog;
+    }
+
+    public interface OnDateRangeSetListener {
+        void onDateRangeSet(Date startDate, Date endDate);
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index a25eb43f..ef2e23fc 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2012 - 2014 Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2012 - 2015 Ngewi Fet <ngewif@gmail.com>
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -638,7 +638,8 @@ public void onClick(View v) {
                 int year = calendar.get(Calendar.YEAR);
                 int monthOfYear = calendar.get(Calendar.MONTH);
                 int dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);
-                CalendarDatePickerDialog datePickerDialog = CalendarDatePickerDialog.newInstance(TransactionFormFragment.this,
+                CalendarDatePickerDialog datePickerDialog = CalendarDatePickerDialog.newInstance(
+                        TransactionFormFragment.this,
                         year, monthOfYear, dayOfMonth);
                 datePickerDialog.show(getFragmentManager(), "date_picker_fragment");
 			}
diff --git a/app/src/main/java/org/gnucash/android/ui/util/ReselectSpinner.java b/app/src/main/java/org/gnucash/android/ui/util/ReselectSpinner.java
new file mode 100644
index 00000000..c637aecd
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/util/ReselectSpinner.java
@@ -0,0 +1,34 @@
+package org.gnucash.android.ui.util;
+
+import android.content.Context;
+import android.util.AttributeSet;
+import android.widget.Spinner;
+
+/**
+ * Spinner which fires OnItemSelectedListener even when an item is reselected.
+ * Normal Spinners only fire item selected notifications when the selected item changes.
+ * <p>This is used in {@code ReportsActivity} for the time range</p>
+ */
+public class ReselectSpinner extends Spinner {
+    public ReselectSpinner(Context context) {
+        super(context);
+    }
+
+    public ReselectSpinner(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    public ReselectSpinner(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+    }
+
+    @Override
+    public void setSelection(int position) {
+        boolean sameSelected = getSelectedItemPosition() == position;
+        super.setSelection(position);
+        if (position == 5 && sameSelected){
+            getOnItemSelectedListener().onItemSelected(this, getSelectedView(), position, getSelectedItemId());
+        }
+        super.setSelection(position);
+    }
+}
diff --git a/app/src/main/res/layout/activity_reports.xml b/app/src/main/res/layout/activity_reports.xml
index ca562543..22c8537f 100644
--- a/app/src/main/res/layout/activity_reports.xml
+++ b/app/src/main/res/layout/activity_reports.xml
@@ -55,7 +55,7 @@
                     android:layout_height="wrap_content"
                     android:text="Period:"/>
 
-                <Spinner android:id="@+id/time_range_spinner"
+                <org.gnucash.android.ui.util.ReselectSpinner android:id="@+id/time_range_spinner"
                     android:layout_weight="1.8"
                     android:layout_width="0dp"
                     android:layout_height="wrap_content" />
diff --git a/app/src/main/res/layout/dialog_date_range_picker.xml b/app/src/main/res/layout/dialog_date_range_picker.xml
new file mode 100644
index 00000000..9f26c230
--- /dev/null
+++ b/app/src/main/res/layout/dialog_date_range_picker.xml
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <com.squareup.timessquare.CalendarPickerView
+        android:id="@+id/calendar_view"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="2"/>
+
+    <include layout="@layout/default_buttons"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/menu/chart_actions.xml b/app/src/main/res/menu/chart_actions.xml
index b4603c12..7240e4b5 100644
--- a/app/src/main/res/menu/chart_actions.xml
+++ b/app/src/main/res/menu/chart_actions.xml
@@ -26,6 +26,7 @@
     <item android:id="@+id/menu_toggle_legend"
         android:title="@string/menu_toggle_legend"
         android:checkable="true"
+        android:checked="true"
         app:showAsAction="never" />
 
     <item android:id="@+id/menu_toggle_labels"
