From 3672036fa16ab77d370ea8e2144e409375e55cf0 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 6 Aug 2014 21:23:16 +0300
Subject: [PATCH] Closed #39. Implemented passcode lock screen feature

---
 app/AndroidManifest.xml                            |  1 +
 app/res/values/strings.xml                         |  3 ++
 app/res/xml/fragment_passcode_preferences.xml      |  9 ++--
 .../ui/passcode/PasscodePreferenceActivity.java    | 59 ++++++++++++++++++++++
 .../ui/settings/PasscodePreferenceFragment.java    | 33 +++++++++---
 5 files changed, 91 insertions(+), 14 deletions(-)
 create mode 100644 app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java

diff --git a/app/AndroidManifest.xml b/app/AndroidManifest.xml
index 48ee130d..61a7a671 100644
--- a/app/AndroidManifest.xml
+++ b/app/AndroidManifest.xml
@@ -61,6 +61,7 @@
             android:label="@string/app_name">
         </activity>
         <activity android:name=".ui.settings.SettingsActivity"/>
+        <activity android:name=".ui.passcode.PasscodePreferenceActivity" />
         <activity android:name=".ui.transaction.TransactionsActivity"
             android:configChanges="orientation|screenSize">
         </activity>
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index ebb863c8..dfb6b874 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -29,6 +29,9 @@
     <string name="btn_save">Save</string>
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
+    <string name="toast_passcode_set">Passcode set</string>
+    <string name="toast_confirm_passcode">Please confirm your passcode</string>
+    <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="label_transaction_name">Description</string>
     <string name="label_transaction_amount">Amount</string>
     <string name="title_add_transaction">New transaction</string>
diff --git a/app/res/xml/fragment_passcode_preferences.xml b/app/res/xml/fragment_passcode_preferences.xml
index 09484fe9..027aa088 100755
--- a/app/res/xml/fragment_passcode_preferences.xml
+++ b/app/res/xml/fragment_passcode_preferences.xml
@@ -19,11 +19,8 @@
     <PreferenceCategory android:title="@string/title_passcode_preferences"/>
     <CheckBoxPreference android:title="@string/title_enable_passcode"
                         android:key="@string/key_enable_passcode" />
-    <EditTextPreference android:title="@string/title_change_passcode"
-                        android:key="@string/key_change_passcode"
-                        android:dependency="@string/key_enable_passcode"
-                        android:inputType="number"
-                        android:password="true"
-                        android:maxLength="4" />
+    <Preference android:key="@string/key_change_passcode"
+                android:title="@string/title_change_passcode"
+                android:dependency="@string/key_enable_passcode" />
 
 </PreferenceScreen>
\ No newline at end of file
diff --git a/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java b/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
new file mode 100644
index 00000000..6b290c12
--- /dev/null
+++ b/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright (c) 2014 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.passcode;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import org.gnucash.android.R;
+import org.gnucash.android.ui.UxArgument;
+
+/**
+ * Activity for entering and confirming passcode
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ */
+public class PasscodePreferenceActivity extends Activity implements KeyboardFragment.OnPasscodeEnteredListener {
+
+    private boolean reenter = false;
+    private String passcode;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.passcode_lockscreen);
+    }
+
+    @Override
+    public void onPasscodeEntered(String pass) {
+        if (reenter) {
+            if (passcode.equals(pass)) {
+                setResult(RESULT_OK, new Intent().putExtra(UxArgument.PASSCODE, pass));
+                finish();
+            } else {
+                Toast.makeText(this, R.string.toast_invalid_passcode_confirmation, Toast.LENGTH_LONG).show();
+            }
+        } else {
+            passcode = pass;
+            reenter = true;
+            ((TextView) findViewById(R.id.passcode_label)).setText(R.string.toast_confirm_passcode);
+            Toast.makeText(this, R.string.toast_confirm_passcode, Toast.LENGTH_SHORT).show();
+        }
+    }
+}
diff --git a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
index ac6364f1..4e334fe7 100644
--- a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
+++ b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
@@ -16,18 +16,22 @@
 
 package org.gnucash.android.ui.settings;
 
+import android.app.Activity;
+import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.preference.Preference;
 import android.preference.Preference.OnPreferenceChangeListener;
 import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
+import android.widget.Toast;
 
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.app.SherlockPreferenceActivity;
 
 import org.gnucash.android.R;
 import org.gnucash.android.ui.UxArgument;
+import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
 
 /**
  * Fragment for configuring passcode to the application
@@ -35,6 +39,10 @@
  */
 public class PasscodePreferenceFragment extends PreferenceFragment {
 
+    private static final int REQUEST_CODE = 1;
+
+    private SharedPreferences.Editor editor;
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -50,11 +58,10 @@ public void onCreate(Bundle savedInstanceState) {
     public void onResume() {
         super.onResume();
 
-        final SharedPreferences.Editor editor = PreferenceManager
-                .getDefaultSharedPreferences(getActivity().getApplicationContext()).edit();
+        editor = PreferenceManager.getDefaultSharedPreferences(getActivity().getApplicationContext()).edit();
+
 
-        final String keyEnablePasscode = getString(R.string.key_enable_passcode);
-        findPreference(keyEnablePasscode)
+        findPreference(getString(R.string.key_enable_passcode))
                 .setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
                     @Override
                     public boolean onPreferenceChange(Preference preference, Object newValue) {
@@ -64,15 +71,25 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                     }
                 });
         findPreference(getString(R.string.key_change_passcode))
-                .setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
+                .setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
                     @Override
-                    public boolean onPreferenceChange(Preference preference, Object newValue) {
-                        editor.putString(UxArgument.PASSCODE, newValue.toString());
-                        editor.commit();
+                    public boolean onPreferenceClick(Preference preference) {
+                        startActivityForResult(
+                                new Intent(getActivity(), PasscodePreferenceActivity.class), REQUEST_CODE);
                         return true;
                     }
                 });
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
 
+        if (resultCode == Activity.RESULT_OK && requestCode == REQUEST_CODE && data!= null) {
+            editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
+            editor.commit();
+            Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
+        }
     }
 
 }
