From 19a346bfd4886d7b4c252eb773aa307cb4256990 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Wed, 7 May 2014 23:18:08 +0800
Subject: [PATCH 1/2] close cursors

---
 .../org/gnucash/android/db/AccountsDbAdapter.java  | 30 ++++++--
 .../gnucash/android/db/TransactionsDbAdapter.java  | 90 ++++++++++++++--------
 2 files changed, 79 insertions(+), 41 deletions(-)

diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index bb91f66c..894b576d 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -699,10 +699,12 @@ public long getId(String accountUID){
 				new String[]{DatabaseHelper.KEY_ROW_ID, DatabaseHelper.KEY_UID}, 
 				DatabaseHelper.KEY_UID + "='" + accountUID + "'", 
 				null, null, null, null);
-		if (c != null && c.moveToFirst()){
-			id = c.getLong(DatabaseAdapter.COLUMN_ROW_ID);
-			c.close();
-		}
+		if (c != null) {
+            if (c.moveToFirst()) {
+                id = c.getLong(DatabaseAdapter.COLUMN_ROW_ID);
+            }
+            c.close();
+        }
 		return id;
 	}
 	
@@ -740,7 +742,10 @@ public String getAccountName(String accountUID){
                 DatabaseHelper.KEY_UID + " = ?",
                 new String[]{accountUID}, null, null, null);
 
-        if (cursor == null || cursor.getCount() < 1){
+        if (cursor == null) {
+            return null;
+        } else if ( cursor.getCount() < 1) {
+            cursor.close();
             return null;
         } else {  //account UIDs should be unique
             cursor.moveToFirst();
@@ -763,7 +768,10 @@ public long getDefaultTransferAccountID(long accountID){
                 DatabaseHelper.KEY_ROW_ID + " = " + accountID,
                 null, null, null, null);
 
-        if (cursor == null || cursor.getCount() < 1){
+        if (cursor == null) {
+            return 0;
+        } else if (cursor.getCount() < 1) {
+            cursor.close();
             return 0;
         } else {
             cursor.moveToFirst();
@@ -818,7 +826,10 @@ public boolean isPlaceholderAccount(String accountUID){
                 DatabaseHelper.KEY_UID + " = ?",
                 new String[]{accountUID}, null, null, null);
 
-        if (cursor == null || !cursor.moveToFirst()){
+        if (cursor == null)
+            return false;
+        if (!cursor.moveToFirst()) {
+            cursor.close();
             return false;
         }
         boolean isPlaceholder = cursor.getInt(cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_PLACEHOLDER)) == 1;
@@ -847,7 +858,10 @@ public boolean isFavoriteAccount(long accountId){
                 DatabaseHelper.KEY_ROW_ID + " = " + accountId, null,
                 null, null, null);
 
-        if (cursor == null || !cursor.moveToFirst()){
+        if (cursor == null)
+            return false;
+        if (!cursor.moveToFirst()){
+            cursor.close();
             return false;
         }
         boolean isFavorite = cursor.getInt(cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_FAVORITE)) == 1;
diff --git a/app/src/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
index 5bfc881c..f6a84564 100644
--- a/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -92,12 +92,13 @@ public long fetchTransactionWithUID(String uid){
 				DatabaseHelper.KEY_UID + " = '" + uid + "'", 
 				null, null, null, null);
 		long result = -1;
-		if (cursor != null && cursor.moveToFirst()){
-			Log.d(TAG, "Transaction already exists. Returning existing id");
-			result = cursor.getLong(0); //0 because only one row was requested
-
-			cursor.close();
-		}
+		if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                Log.d(TAG, "Transaction already exists. Returning existing id");
+                result = cursor.getLong(0); //0 because only one row was requested
+            }
+            cursor.close();
+        }
 		return result;
 	}
 
@@ -113,10 +114,12 @@ public Transaction getTransaction(long rowId){
 		Log.v(TAG, "Fetching transaction with id " + rowId);
         Transaction transaction = null;
 		Cursor c =	fetchRecord(DatabaseHelper.TRANSACTIONS_TABLE_NAME, rowId);
-		if (c != null && c.moveToFirst()){
-			transaction = buildTransactionInstance(c);			
-			c.close();
-		}
+		if (c != null) {
+            if (c.moveToFirst()) {
+                transaction = buildTransactionInstance(c);
+            }
+            c.close();
+        }
 		return transaction;
 	}
 	
@@ -173,9 +176,12 @@ public Cursor fetchAllTransactionsForAccount(long accountID){
 	public List<Transaction> getAllTransactionsForAccount(String accountUID){
 		Cursor c = fetchAllTransactionsForAccount(accountUID);
 		ArrayList<Transaction> transactionsList = new ArrayList<Transaction>();
-		
-		if (c == null || (c.getCount() <= 0))
+		if (c == null)
 			return transactionsList;
+        if (c.getCount() <= 0) {
+            c.close();
+            return transactionsList;
+        }
 		
 		while (c.moveToNext()) {
 			Transaction transaction = buildTransactionInstance(c);
@@ -235,8 +241,12 @@ public String getCurrencyCode(String accountUID) {
 				DatabaseHelper.KEY_UID + "= '" + accountUID + "'", 
 				null, null, null, null);
 		
-		if (cursor == null || cursor.getCount() <= 0)
+		if (cursor == null)
 			return null;
+        if (cursor.getCount() <= 0) {
+            cursor.close();
+            return null;
+        }
 					
 		cursor.moveToFirst();
 		String currencyCode = cursor.getString(0);
@@ -338,7 +348,7 @@ public long getAllTransactionsCount(){
 	 * @param accountId Record ID of the account
 	 * @return Sum of transactions belonging to the account
 	 */
-	public Money getTransactionsSum(long accountId){
+	public Money getTransactionsSum(long accountId) {
         //FIXME: Properly compute the balance while considering normal account balance
         String accountUID = getAccountUID(accountId);
 
@@ -350,8 +360,10 @@ public Money getTransactionsSum(long accountId){
         Cursor sumCursor = mDb.rawQuery(querySum, new String[]{accountUID});
         double sum = 0d;
 
-        if (sumCursor != null && sumCursor.moveToFirst()){
-            sum += sumCursor.getFloat(0);
+        if (sumCursor != null) {
+            if (sumCursor.moveToFirst()) {
+                sum += sumCursor.getFloat(0);
+            }
             sumCursor.close();
         }
 
@@ -362,8 +374,10 @@ public Money getTransactionsSum(long accountId){
 
         sumCursor = mDb.rawQuery(querySum, new String[]{accountUID});
 
-        if (sumCursor != null && sumCursor.moveToFirst()){
-            sum -= sumCursor.getFloat(0);
+        if (sumCursor != null) {
+            if (sumCursor.moveToFirst()) {
+                sum -= sumCursor.getFloat(0);
+            }
             sumCursor.close();
         }
 
@@ -393,8 +407,10 @@ public boolean isSameAccount(long rowId, String accountUID){
                 new String[]{DatabaseHelper.KEY_TYPE},
                 DatabaseHelper.KEY_UID + "='" + accountUID + "'",
                 null, null, null, null);
-        if (c != null && c.moveToFirst()){
-            type = c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_TYPE));
+        if (c != null) {
+            if (c.moveToFirst()) {
+                type = c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_TYPE));
+            }
             c.close();
         }
         return Account.AccountType.valueOf(type);
@@ -432,6 +448,7 @@ public int markAsExported(String accountUID){
 		while (c.moveToNext()){
 			transactionsList.add(buildTransactionInstance(c));
 		}
+        c.close();
 		return transactionsList;
 	}
 
@@ -446,10 +463,12 @@ public String getAccountUID(long accountRowID){
 				new String[]{DatabaseHelper.KEY_UID}, 
 				DatabaseHelper.KEY_ROW_ID + "=" + accountRowID, 
 				null, null, null, null);
-		if (c != null && c.moveToFirst()){
-			uid = c.getString(0);
-			c.close();
-		}
+		if (c != null) {
+            if (c.moveToFirst()) {
+                uid = c.getString(0);
+            }
+            c.close();
+        }
 		return uid;
 	}
 
@@ -464,11 +483,12 @@ public String getAccountUidFromTransaction(long transactionID){
                 DatabaseHelper.KEY_ROW_ID + "=" + transactionID,
                 null, null, null, null);
         String accountUID = null;
-        if (c != null && c.moveToFirst()){
-            accountUID = c.getString(0);
+        if (c != null) {
+            if (c.moveToFirst()) {
+                accountUID = c.getString(0);
+            }
             c.close();
         }
-
         return accountUID;
     }
 
@@ -483,10 +503,12 @@ public long getAccountID(String accountUID){
 				new String[]{DatabaseHelper.KEY_ROW_ID}, 
 				DatabaseHelper.KEY_UID + "='" + accountUID + "'", 
 				null, null, null, null);
-		if (c != null && c.moveToFirst()){
-			id = c.getLong(0);
-			c.close();
-		}
+		if (c != null) {
+            if (c.moveToFirst()) {
+                id = c.getLong(0);
+            }
+            c.close();
+        }
 		return id;
 	}
 
@@ -501,8 +523,10 @@ public long getID(String transactionUID){
                 new String[]{DatabaseHelper.KEY_ROW_ID},
                 DatabaseHelper.KEY_UID + "='" + transactionUID + "'",
                 null, null, null, null);
-        if (c != null && c.moveToFirst()){
-            id = c.getLong(0);
+        if (c != null) {
+            if (c.moveToFirst()) {
+                id = c.getLong(0);
+            }
             c.close();
         }
         return id;

From f6ae9103383349d5d21f2552eb54bd2e571adf30 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Thu, 8 May 2014 22:59:55 +0800
Subject: [PATCH 2/2] More db resource leaks

---
 .../org/gnucash/android/db/AccountsDbAdapter.java  | 62 +++++++++++++---------
 .../ui/transaction/TransactionsActivity.java       | 15 ++++--
 .../android/util/GnucashAccountXmlHandler.java     |  2 +-
 3 files changed, 49 insertions(+), 30 deletions(-)

diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index 894b576d..6a24938d 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -269,12 +269,13 @@ public long getAccountID(String uid){
 				new String[] {DatabaseHelper.KEY_ROW_ID, DatabaseHelper.KEY_UID}, 
 				DatabaseHelper.KEY_UID + " = '" + uid + "'", null, null, null, null);
 		long result = -1;
-		if (cursor != null && cursor.moveToFirst()){
-			Log.v(TAG, "Returning account id");
-			result = cursor.getLong(DatabaseAdapter.COLUMN_ROW_ID);
-
-			cursor.close();
-		}
+		if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                Log.v(TAG, "Returning account id");
+                result = cursor.getLong(DatabaseAdapter.COLUMN_ROW_ID);
+            }
+            cursor.close();
+        }
 		return result;
 	}
 	
@@ -291,12 +292,13 @@ public String getParentAccountUID(String uid){
                 new String[]{uid},
                 null, null, null, null);
 		String result = null;
-		if (cursor != null && cursor.moveToFirst()){
-			Log.d(TAG, "Account already exists. Returning existing id");
-			result = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_PARENT_ACCOUNT_UID));
-
-			cursor.close();
-		}
+		if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                Log.d(TAG, "Account already exists. Returning existing id");
+                result = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_PARENT_ACCOUNT_UID));
+            }
+            cursor.close();
+        }
 		return result;
 	}
 
@@ -320,10 +322,12 @@ public Account getAccount(long rowId){
 		Account account = null;
 		Log.v(TAG, "Fetching account with id " + rowId);
 		Cursor c =	fetchRecord(DatabaseHelper.ACCOUNTS_TABLE_NAME, rowId);
-		if (c != null && c.moveToFirst()){
-			account = buildAccountInstance(c);	
-			c.close();
-		}
+		if (c != null) {
+            if (c.moveToFirst()) {
+                account = buildAccountInstance(c);
+            }
+            c.close();
+        }
 		return account;
 	}
 		
@@ -348,10 +352,12 @@ public String getAccountUID(long id){
 				new String[]{DatabaseHelper.KEY_ROW_ID, DatabaseHelper.KEY_UID}, 
 				DatabaseHelper.KEY_ROW_ID + "=" + id, 
 				null, null, null, null);
-		if (c != null && c.moveToFirst()){
-			uid = c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_UID));
-			c.close();
-		}
+		if (c != null) {
+            if (c.moveToFirst()) {
+                uid = c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_UID));
+            }
+            c.close();
+        }
 		return uid;
 	}
 
@@ -366,8 +372,10 @@ public String getAccountColorCode(long accountId){
                 new String[]{DatabaseHelper.KEY_ROW_ID, DatabaseHelper.KEY_COLOR_CODE},
                 DatabaseHelper.KEY_ROW_ID + "=" + accountId,
                 null, null, null, null);
-        if (c != null && c.moveToFirst()){
-            colorCode = c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_COLOR_CODE));
+        if (c != null) {
+            if (c.moveToFirst()) {
+                colorCode = c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_COLOR_CODE));
+            }
             c.close();
         }
         return colorCode;
@@ -399,10 +407,12 @@ public AccountType getAccountType(long accountId){
 	public String getName(long accountID) {
 		String name = null;
 		Cursor c = fetchRecord(DatabaseHelper.ACCOUNTS_TABLE_NAME, accountID);
-		if (c != null && c.moveToFirst()){
-			name = c.getString(DatabaseAdapter.COLUMN_NAME);
-			c.close();
-		}
+		if (c != null) {
+            if (c.moveToFirst()) {
+                name = c.getString(DatabaseAdapter.COLUMN_NAME);
+            }
+            c.close();
+        }
 		return name;
 	}
 	
diff --git a/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java
index fa16cd9b..5b33acfa 100644
--- a/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -117,6 +117,11 @@
     private AccountsDbAdapter mAccountsDbAdapter;
 
     /**
+     * Hold the accounts cursor that will be used in the Navigation
+     */
+    private Cursor mAccountsCursor = null;
+
+    /**
      * This is the last known color for the title indicator.
      * This is used to remember the color of the top level account if the child account doesn't have one.
      */
@@ -348,11 +353,14 @@ private void setTitleIndicatorColor() {
 	 */
 	private void setupActionBarNavigation() {
 		// set up spinner adapter for navigation list
-		Cursor accountsCursor = mAccountsDbAdapter.fetchAllRecordsOrderedByFullName();
+        if (mAccountsCursor != null) {
+            mAccountsCursor.close();
+        }
+		mAccountsCursor = mAccountsDbAdapter.fetchAllRecordsOrderedByFullName();
 
         SpinnerAdapter mSpinnerAdapter = new QualifiedAccountNameCursorAdapter(
                 getSupportActionBar().getThemedContext(),
-                R.layout.sherlock_spinner_item, accountsCursor);
+                R.layout.sherlock_spinner_item, mAccountsCursor);
 		((ResourceCursorAdapter) mSpinnerAdapter)
 				.setDropDownViewResource(R.layout.sherlock_spinner_dropdown_item);
 		ActionBar actionBar = getSupportActionBar();
@@ -360,7 +368,7 @@ private void setupActionBarNavigation() {
 		actionBar.setListNavigationCallbacks(mSpinnerAdapter,
 				mTransactionListNavigationListener);
         actionBar.setDisplayHomeAsUpEnabled(true);
-		
+
 		updateNavigationSelection();
 	}
 	
@@ -449,6 +457,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     @Override
 	protected void onDestroy() {
 		super.onDestroy();
+        mAccountsCursor.close();
 		mAccountsDbAdapter.close();
 	}
 	
diff --git a/app/src/org/gnucash/android/util/GnucashAccountXmlHandler.java b/app/src/org/gnucash/android/util/GnucashAccountXmlHandler.java
index d82ed3b9..ed1e129a 100644
--- a/app/src/org/gnucash/android/util/GnucashAccountXmlHandler.java
+++ b/app/src/org/gnucash/android/util/GnucashAccountXmlHandler.java
@@ -202,7 +202,7 @@ public static void parse(Context context, InputStream accountsInputStream){
             GnucashAccountXmlHandler handler = new GnucashAccountXmlHandler(context);
             xr.setContentHandler(handler);
             xr.parse(new InputSource(bos));
-
+            handler.mDatabaseAdapter.close();
         } catch (Exception e) {
             e.printStackTrace();
             Toast.makeText(context, R.string.toast_error_importing_accounts, Toast.LENGTH_LONG).show();
