From 01e98602891dbadb0a04425e940bed9a8ecd2b4f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <alexandre.magaz@gmail.com>
Date: Tue, 4 Apr 2017 20:06:25 +0200
Subject: [PATCH] Extract some methods from BooksCursorAdapter.bindView

The method had become too large.
---
 .../android/ui/settings/BookManagerFragment.java   | 111 +++++++++++----------
 1 file changed, 61 insertions(+), 50 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
index c78182e8..6bbaa192 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
@@ -165,57 +165,21 @@ public void bindView(View view, final Context context, Cursor cursor) {
 
             setLastExportedText(view, bookUID);
             setStatisticsText(view, bookUID);
+            setUpMenu(view, context, cursor, bookUID);
+            setUpDeleteButton(view, context, bookUID);
 
-            final String bookName = cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_DISPLAY_NAME));
-            ImageView optionsMenu = (ImageView) view.findViewById(R.id.options_menu);
-            optionsMenu.setOnClickListener(new View.OnClickListener() {
+            view.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
-                    PopupMenu popupMenu = new PopupMenu(context, v);
-                    MenuInflater menuInflater = popupMenu.getMenuInflater();
-                    menuInflater.inflate(R.menu.book_context_menu, popupMenu.getMenu());
-                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
-                        @Override
-                        public boolean onMenuItemClick(MenuItem item) {
-                            switch (item.getItemId()){
-                                case R.id.ctx_menu_rename_book:
-                                    final EditText nameEditText = new EditText(context);
-                                    nameEditText.setText(bookName);
-
-                                    AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(getActivity());
-                                    dialogBuilder.setTitle(R.string.title_rename_book)
-                                        .setView(nameEditText)
-                                        .setPositiveButton(R.string.btn_rename, new DialogInterface.OnClickListener() {
-                                            @Override
-                                            public void onClick(DialogInterface dialog, int which) {
-                                                BooksDbAdapter.getInstance()
-                                                        .updateRecord(bookUID,
-                                                                BookEntry.COLUMN_DISPLAY_NAME,
-                                                                nameEditText.getText().toString());
-                                                refresh();
-                                            }
-                                        })
-                                        .setNegativeButton(R.string.btn_cancel, new DialogInterface.OnClickListener() {
-                                            @Override
-                                            public void onClick(DialogInterface dialog, int which) {
-                                                dialog.dismiss();
-                                            }
-                                        });
-                                    AlertDialog dialog = dialogBuilder.create();
-                                    dialog.show();
-                                    return true;
-                                case R.id.ctx_menu_sync_book:
-                                    //TODO implement sync
-                                    return false;
-                                default:
-                                    return true;
-                            }
-                        }
-                    });
-                    popupMenu.show();
+                    //do nothing if the active book is tapped
+                    if (!BooksDbAdapter.getInstance().getActiveBookUID().equals(bookUID)) {
+                        GnuCashApplication.loadBook(bookUID);
+                    }
                 }
             });
+        }
 
+        private void setUpDeleteButton(View view, final Context context, final String bookUID) {
             ImageView deleteBookBtn = (ImageView) view.findViewById(R.id.delete_book);
             String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
             if (activeBookUID.equals(bookUID)) //we cannot delete the active book
@@ -248,18 +212,65 @@ public void onClick(DialogInterface dialog, int which) {
                     }
                 });
             }
+        }
 
-            view.setOnClickListener(new View.OnClickListener() {
+        private void setUpMenu(View view, final Context context, Cursor cursor, final String bookUID) {
+            final String bookName = cursor.getString(
+                    cursor.getColumnIndexOrThrow(BookEntry.COLUMN_DISPLAY_NAME));
+            ImageView optionsMenu = (ImageView) view.findViewById(R.id.options_menu);
+            optionsMenu.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
-                    //do nothing if the active book is tapped
-                    if (!BooksDbAdapter.getInstance().getActiveBookUID().equals(bookUID)) {
-                        GnuCashApplication.loadBook(bookUID);
-                    }
+                    PopupMenu popupMenu = new PopupMenu(context, v);
+                    MenuInflater menuInflater = popupMenu.getMenuInflater();
+                    menuInflater.inflate(R.menu.book_context_menu, popupMenu.getMenu());
+                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
+                        @Override
+                        public boolean onMenuItemClick(MenuItem item) {
+                            switch (item.getItemId()){
+                                case R.id.ctx_menu_rename_book:
+                                    return handleMenuRenameBook(context, bookName, bookUID);
+                                case R.id.ctx_menu_sync_book:
+                                    //TODO implement sync
+                                    return false;
+                                default:
+                                    return true;
+                            }
+                        }
+                    });
+                    popupMenu.show();
                 }
             });
         }
 
+        private boolean handleMenuRenameBook(Context context, String bookName, final String bookUID) {
+            final EditText nameEditText = new EditText(context);
+            nameEditText.setText(bookName);
+
+            AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(getActivity());
+            dialogBuilder.setTitle(R.string.title_rename_book)
+                .setView(nameEditText)
+                .setPositiveButton(R.string.btn_rename, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        BooksDbAdapter.getInstance()
+                                .updateRecord(bookUID,
+                                        BookEntry.COLUMN_DISPLAY_NAME,
+                                        nameEditText.getText().toString());
+                        refresh();
+                    }
+                })
+                .setNegativeButton(R.string.btn_cancel, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        dialog.dismiss();
+                    }
+                });
+            AlertDialog dialog = dialogBuilder.create();
+            dialog.show();
+            return true;
+        }
+
         private void setLastExportedText(View view, String bookUID) {
             TextView labelLastSync = (TextView) view.findViewById(R.id.label_last_sync);
             labelLastSync.setText(R.string.label_last_export_time);
