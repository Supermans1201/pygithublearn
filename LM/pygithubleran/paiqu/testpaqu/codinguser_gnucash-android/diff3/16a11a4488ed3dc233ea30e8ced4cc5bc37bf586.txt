From 16a11a4488ed3dc233ea30e8ced4cc5bc37bf586 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Fri, 20 Mar 2015 20:51:15 +0200
Subject: [PATCH] Fixed bar char x-axis

---
 .../gnucash/android/ui/chart/BarChartActivity.java | 30 +++++++++++++++++++---
 1 file changed, 26 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index c0307d8a..ee0cf317 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -14,6 +14,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.ui.passcode.PassLockActivity;
@@ -21,6 +22,7 @@
 
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -32,6 +34,7 @@
 public class BarChartActivity extends PassLockActivity {
 
     private static final String TAG = "BarChartActivity";
+    private static final String X_AXIS_PATTERN = "MMM YY";
 
     private static final int[] COLORS = {
             Color.rgb(104, 241, 175), Color.RED
@@ -39,6 +42,10 @@
 
     private BarChart mChart;
     private List<AccountType> mAccountTypeList;
+    private Map<AccountType, Long> mEarliestTimestampsMap = new HashMap<AccountType, Long>();
+    private Map<AccountType, Long> mLatestTimestampsMap = new HashMap<AccountType, Long>();
+    private long mEarliestTransactionTimestamp;
+    private long mLatestTransactionTimestamp;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -71,8 +78,10 @@ protected void onCreate(Bundle savedInstanceState) {
     protected void setStackedData() {
         AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
-        LocalDateTime start = new LocalDateTime().minusMonths(5).withDayOfMonth(1).withMillisOfDay(0);
-        LocalDateTime end = new LocalDateTime().withDayOfMonth(1).withMillisOfDay(0);
+        setEarliestAndLatestTimestamps(mAccountTypeList);
+
+        LocalDateTime start = new LocalDateTime(mEarliestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
+        LocalDateTime end = new LocalDateTime(mLatestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
         Log.w(TAG, "X AXIS START DATE: " + start.toString("dd MM yyyy"));
         Log.w(TAG, "X AXIS END DATE: " + end.toString("dd MM yyyy"));
 
@@ -94,10 +103,9 @@ protected void setStackedData() {
         ArrayList<String> xVals = new ArrayList<String>();
         int z = 0;
         while (!start.isAfter(end)) {
-            xVals.add(start.toString("MMM yy"));
+            xVals.add(start.toString(X_AXIS_PATTERN));
             Log.i(TAG, "xVals " + start.toString("MM yy"));
 
-
             long startPeriod = start.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
             long endPeriod = start.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
 
@@ -125,4 +133,18 @@ protected void setStackedData() {
         mChart.setData(bd);
     }
 
+    private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
+        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        for (AccountType type : accountTypeList) {
+            mEarliestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfEarliestTransaction(type));
+            mLatestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfLatestTransaction(type));
+        }
+
+        List<Long> timestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
+        timestamps.addAll(mLatestTimestampsMap.values());
+        Collections.sort(timestamps);
+        mEarliestTransactionTimestamp = timestamps.get(0);
+        mLatestTransactionTimestamp = timestamps.get(timestamps.size() - 1);
+    }
+
 }
