From ec4e6687ef50886202a9d796dcec954a4efdfd46 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sat, 23 Aug 2014 21:38:24 +0200
Subject: [PATCH 1/5] Fixed: Transaction edits not persisted to db. Fixes #180

Fixed: Fatal crash when error occurs in importing/exporting transaction (instead of displaying error message)
Fixed: Editing a transfer transaction does not edit other side of the transaction
Removed progress dialog from database migration (seems to be cause of some crashes)
Transaction templates are not only available when creating new transactions
Added some input validation to database adapters
---
 .../org/gnucash/android/db/AccountsDbAdapter.java  |  6 +--
 app/src/org/gnucash/android/db/DatabaseHelper.java | 10 -----
 .../org/gnucash/android/db/SplitsDbAdapter.java    | 22 ++++++++++-
 .../gnucash/android/export/ExporterAsyncTask.java  | 17 +++++---
 .../gnucash/android/importer/ImportAsyncTask.java  | 18 ++++++---
 .../ui/transaction/TransactionFormFragment.java    | 46 +++++++++++++---------
 .../ui/widget/WidgetConfigurationActivity.java     |  1 +
 7 files changed, 76 insertions(+), 44 deletions(-)

diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index 26a5e277..a976926b 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -651,11 +651,11 @@ public Money getAccountBalance(long accountId){
      */
     public Cursor fetchSubAccounts(long accountId){
         Log.v(TAG, "Fetching sub accounts for account id " + accountId);
+        String accountUID = getAccountUID(accountId);
         return mDb.query(AccountEntry.TABLE_NAME,
                 null,
-                AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " = ?",
-                new String[]{getAccountUID(accountId)},
-                null, null, AccountEntry.COLUMN_NAME + " ASC");
+                AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " = '" + accountUID + "'",
+                null, null, null, AccountEntry.COLUMN_NAME + " ASC");
     }
 
     /**
diff --git a/app/src/org/gnucash/android/db/DatabaseHelper.java b/app/src/org/gnucash/android/db/DatabaseHelper.java
index be2faf05..f44bbdc6 100644
--- a/app/src/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/org/gnucash/android/db/DatabaseHelper.java
@@ -127,8 +127,6 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 		Log.i(LOG_TAG, "Upgrading database from version "
 				+ oldVersion + " to " + newVersion);
 
-        ProgressDialog progressDialog = ProgressDialog.show(mContext, "Upgrading database", "Processing...", true);
-
 		if (oldVersion < newVersion){
 			//introducing double entry accounting
 			Log.i(LOG_TAG, "Upgrading database to version " + newVersion);
@@ -194,7 +192,6 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 
             if (oldVersion == 5 && newVersion >= 6){
                 Log.i(LOG_TAG, "Upgrading database to version 6");
-                progressDialog.setMessage("Upgrading database to version 6");
 
                 String addFullAccountNameQuery = " ALTER TABLE " + AccountEntry.TABLE_NAME
                         + " ADD COLUMN " + AccountEntry.COLUMN_FULL_NAME + " varchar(255) ";
@@ -227,7 +224,6 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 
             if (oldVersion == 6 && newVersion >= DatabaseSchema.SPLITS_DB_VERSION){
                 Log.i(LOG_TAG, "Upgrading database to version 7");
-                progressDialog.setMessage("Upgrading to version " + SPLITS_DB_VERSION);
 
                 //for users who do not have double-entry activated, we create imbalance accounts for their splits
                 //TODO: Enable when we can hide imbalance accounts from user
@@ -237,17 +233,12 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 //                    accountsDbAdapter.getOrCreateImbalanceAccountUID(currency);
 //                }
 
-                progressDialog.setMessage("Backing up database");
                 try {
                     String filepath = MigrationHelper.exportDatabase(db, ExportFormat.GNC_XML);
 
-                    progressDialog.setMessage("Upgrading database schema");
-
                     dropAllDatabaseTables(db);
                     createDatabaseTables(db);
 
-                    progressDialog.setMessage("Restoring database");
-
                     MigrationHelper.importGnucashXML(db, filepath);
                 } catch (Exception e){
                     Toast.makeText(mContext, "Error upgrading database.\n" + e.getMessage(), Toast.LENGTH_LONG).show();
@@ -257,7 +248,6 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
             }
 		}
 
-        progressDialog.dismiss();
         if (oldVersion != newVersion) {
             Log.w(LOG_TAG, "Upgrade for the database failed. The Database is currently at version " + oldVersion);
         }
diff --git a/app/src/org/gnucash/android/db/SplitsDbAdapter.java b/app/src/org/gnucash/android/db/SplitsDbAdapter.java
index c46d9b66..cdd364b6 100644
--- a/app/src/org/gnucash/android/db/SplitsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/SplitsDbAdapter.java
@@ -114,7 +114,15 @@ public Split buildSplitInstance(Cursor cursor){
      * @return {@link org.gnucash.android.model.Split} instance
      */
     public Split getSplit(String uid){
-        long id = getID(uid);
+        return getSplit(getID(uid));
+    }
+
+    /**
+     * Returns the Split instance given the database id
+     * @param id Database record ID of the split
+     * @return {@link org.gnucash.android.model.Split} instance
+     */
+    public Split getSplit(long id){
         Cursor cursor = fetchRecord(id);
 
         Split split = null;
@@ -233,6 +241,9 @@ public Cursor fetchSplits(String condition, String sortOrder){
      * @return Database record ID of split
      */
     public long getID(String uid){
+        if (uid == null)
+            return 0;
+
         Cursor cursor = mDb.query(SplitEntry.TABLE_NAME,
                 new String[] {SplitEntry._ID},
                 SplitEntry.COLUMN_UID + " = ?", new String[]{uid}, null, null, null);
@@ -355,9 +366,13 @@ public Cursor fetchAllRecords() {
 
     @Override
     public boolean deleteRecord(long rowId) {
-        String transactionUID = getSplit(getUID(rowId)).getTransactionUID();
+        Split split = getSplit(rowId);
+        String transactionUID = split == null ? null : split.getTransactionUID();
         boolean result = deleteRecord(SplitEntry.TABLE_NAME, rowId);
 
+        if (!result) //we didn't delete for whatever reason, invalid rowId etc
+            return false;
+
         //if we just deleted the last split, then remove the transaction from db
         Cursor cursor = fetchSplitsForTransaction(transactionUID);
         if (cursor != null){
@@ -376,6 +391,9 @@ public boolean deleteRecord(long rowId) {
      */
     public long getTransactionID(String transactionUID){
         long id = -1;
+        if (transactionUID == null)
+            return id;
+
         Cursor c = mDb.query(TransactionEntry.TABLE_NAME,
                 new String[]{TransactionEntry._ID},
                 TransactionEntry.COLUMN_UID + "=?",
diff --git a/app/src/org/gnucash/android/export/ExporterAsyncTask.java b/app/src/org/gnucash/android/export/ExporterAsyncTask.java
index 7a52fa50..c6593dc0 100644
--- a/app/src/org/gnucash/android/export/ExporterAsyncTask.java
+++ b/app/src/org/gnucash/android/export/ExporterAsyncTask.java
@@ -16,6 +16,7 @@
 
 package org.gnucash.android.export;
 
+import android.app.Activity;
 import android.app.ProgressDialog;
 import android.content.Context;
 import android.content.Intent;
@@ -48,7 +49,7 @@
     /**
      * App context
      */
-    private final Context mContext;
+    private final Activity mContext;
 
     private ProgressDialog mProgressDialog;
 
@@ -62,7 +63,7 @@
      */
     private ExportParams mExportParams;
 
-    public ExporterAsyncTask(Context context){
+    public ExporterAsyncTask(Activity context){
         this.mContext = context;
     }
 
@@ -110,9 +111,15 @@ protected Boolean doInBackground(ExportParams... params) {
         } catch (Exception e) {
             e.printStackTrace();
             Log.e(TAG, e.getMessage());
-            Toast.makeText(mContext, R.string.toast_export_error,
-                    Toast.LENGTH_SHORT).show();
-            Toast.makeText(mContext, e.getLocalizedMessage(), Toast.LENGTH_LONG).show();
+            final String err_msg = e.getLocalizedMessage();
+            mContext.runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    Toast.makeText(mContext, R.string.toast_export_error,
+                            Toast.LENGTH_SHORT).show();
+                    Toast.makeText(mContext, err_msg, Toast.LENGTH_LONG).show();
+                }
+            });
             return false;
         }
         return true;
diff --git a/app/src/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/org/gnucash/android/importer/ImportAsyncTask.java
index b585aad0..a19cb035 100644
--- a/app/src/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/org/gnucash/android/importer/ImportAsyncTask.java
@@ -14,6 +14,7 @@
  * limitations under the License.
  */package org.gnucash.android.importer;
 
+import android.app.Activity;
 import android.app.ProgressDialog;
 import android.content.Context;
 import android.os.AsyncTask;
@@ -30,10 +31,10 @@
  * The AccountsActivity is opened when importing is done.
  */
 public class ImportAsyncTask extends AsyncTask<InputStream, Void, Boolean> {
-    private final Context context;
+    private final Activity context;
     private ProgressDialog progressDialog;
 
-    public ImportAsyncTask(Context context){
+    public ImportAsyncTask(Activity context){
         this.context = context;
     }
 
@@ -57,10 +58,17 @@ protected Boolean doInBackground(InputStream... inputStreams) {
             GncXmlImporter.parse(context, inputStreams[0]);
         } catch (Exception exception){
             exception.printStackTrace();
+            final String err_msg = exception.getLocalizedMessage();
             Log.e(ImportAsyncTask.class.getName(), exception.getMessage());
-            Toast.makeText(context,
-                    context.getString(R.string.toast_error_importing_accounts) + "\n" + exception.getLocalizedMessage(),
-                    Toast.LENGTH_LONG).show();
+            context.runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    Toast.makeText(context,
+                            context.getString(R.string.toast_error_importing_accounts) + "\n" + err_msg,
+                            Toast.LENGTH_LONG).show();
+                }
+            });
+
             return false;
         }
         return true;
diff --git a/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 7d03c967..2f391b2a 100644
--- a/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -25,7 +25,6 @@
 import android.support.v4.app.FragmentManager;
 import android.widget.*;
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.*;
 import org.gnucash.android.model.*;
 import org.gnucash.android.ui.transaction.dialog.DatePickerDialogFragment;
@@ -252,13 +251,14 @@ public void onNothingSelected(AdapterView<?> adapterView) {
         });
 
         setListeners();
-		if (mTransaction == null)
-			initalizeViews();
-		else {
+		if (mTransaction == null) {
+            initalizeViews();
+            initTransactionNameAutocomplete();
+        } else {
 			initializeViewsWithTransaction();
 		}
 
-        initTransactionNameAutocomplete();
+
 	}
 
     /**
@@ -302,7 +302,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int position, lon
                     if (!amountEntered) //if user already entered an amount
                         mAmountEditText.setText(splitList.get(0).getAmount().toPlainString());
                 } else {
-                    if (amountEntered){ //if user entered own amount, clear
+                    if (amountEntered){ //if user entered own amount, clear loaded splits and use the user value
                         mSplitsList.clear();
                         setAmountEditViewVisible(View.VISIBLE);
                     } else {
@@ -449,9 +449,8 @@ private void openSplitEditor(){
         }
         FragmentManager fragmentManager = getActivity().getSupportFragmentManager();
         String baseAmountString;
-        long transactionId = getArguments().getLong(UxArgument.SELECTED_TRANSACTION_ID);
 
-        if (transactionId <= 0){
+        if (mTransaction == null){ //if we are creating a new transaction (not editing an existing one)
             BigDecimal enteredAmount = parseInputToDecimal(mAmountEditText.getText().toString());
             baseAmountString = enteredAmount.toPlainString();
         } else {
@@ -578,19 +577,28 @@ private void saveNewTransaction() {
 		Currency currency = Currency.getInstance(mTransactionsDbAdapter.getCurrencyCode(accountID));
 		Money amount 	= new Money(amountBigd, currency).absolute();
 
-		if (mTransaction != null){
-            if (mSplitsList.size() == 2) {
-                //if it is a simple transfer where the editor was not used, then respect the button
-                for (Split split : mSplitsList) {
-                    if (split.getAccountUID().equals(accountUID)){
-                        split.setType(mTransactionTypeButton.getTransactionType());
-                        split.setAmount(amount.absolute());
-                    } else {
-                        split.setType(mTransactionTypeButton.getTransactionType().invert());
-                    }
+        //capture any edits which were done directly (not using split editor)
+        if (mSplitsList.size() == 2 && mSplitsList.get(0).isPairOf(mSplitsList.get(1))) {
+            //if it is a simple transfer where the editor was not used, then respect the button
+            for (Split split : mSplitsList) {
+                if (split.getAccountUID().equals(accountUID)){
+                    split.setType(mTransactionTypeButton.getTransactionType());
+                    split.setAmount(amount);
+                } else {
+                    split.setType(mTransactionTypeButton.getTransactionType().invert());
+                    split.setAmount(amount);
                 }
             }
-            mTransaction.setSplits(mSplitsList);
+        }
+
+		if (mTransaction != null){
+            if (!mUseDoubleEntry){
+                Split split = new Split(amount, accountUID);
+                split.setType(mTransactionTypeButton.getTransactionType());
+                mTransaction.getSplits().clear();
+                mTransaction.addSplit(split);
+            } else
+                mTransaction.setSplits(mSplitsList);
 			mTransaction.setDescription(description);
 		} else {
 			mTransaction = new Transaction(description);
diff --git a/app/src/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java b/app/src/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java
index f0b74fc3..726becd8 100644
--- a/app/src/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java
+++ b/app/src/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java
@@ -201,6 +201,7 @@ public static void updateWidget(Context context, int appWidgetId, long accountId
 		views.setOnClickPendingIntent(R.id.btn_new_transaction, pendingIntent);
 		
 		appWidgetManager.updateAppWidget(appWidgetId, views);
+        accountsDbAdapter.close();
 	}
 	
 	/**

From 74cde450e5c53bef1833ad29bf0640b96a3d063f Mon Sep 17 00:00:00 2001
From: Christian Stimming <christian@cstimming.de>
Date: Wed, 20 Aug 2014 22:23:21 +0200
Subject: [PATCH 2/5] Update German translation

---
 app/res/values-de/strings.xml | 44 +++++++++++++++++++++----------------------
 1 file changed, 22 insertions(+), 22 deletions(-)

diff --git a/app/res/values-de/strings.xml b/app/res/values-de/strings.xml
index 01a73eac..7d7519ac 100644
--- a/app/res/values-de/strings.xml
+++ b/app/res/values-de/strings.xml
@@ -391,29 +391,29 @@
         <item>MONATLICH</item>
     </string-array>
     <string name="title_scheduled_transactions">Eingeplante Buchungen</string>
-    <string name="title_select_export_destination">Select destination for export</string>
-    <string name="hint_split_memo">Memo</string>
-    <string name="label_spend">Spend</string>
-    <string name="label_receive">Receive</string>
-    <string name="label_withdrawal">Withdrawal</string>
-    <string name="label_deposit">Deposit</string>
-    <string name="label_payment">Payment</string>
-    <string name="label_charge">Charge</string>
-    <string name="label_decrease">Decrease</string>
-    <string name="label_increase">Increase</string>
-    <string name="label_income">Income</string>
-    <string name="label_rebate">Rebate</string>
-    <string name="label_expense">Expense</string>
-    <string name="label_bill">Bill</string>
-    <string name="label_invoice">Invoice</string>
-    <string name="label_buy">Buy</string>
-    <string name="label_sell">Sell</string>
-    <string name="label_repeats">Repeats</string>
-    <string name="label_account_balance">Balance:</string>
-    <string name="toast_no_recent_backup">No recent backup found</string>
+    <string name="title_select_export_destination">Exportziel auswhlen</string>
+    <string name="hint_split_memo">Buchungstext</string>
+    <string name="label_spend">Ausgabe</string>
+    <string name="label_receive">Einnahme</string>
+    <string name="label_withdrawal">Abhebung</string>
+    <string name="label_deposit">Einzahlung</string>
+    <string name="label_payment">Zahlung</string>
+    <string name="label_charge">Gebhr</string>
+    <string name="label_decrease">Abnahme</string>
+    <string name="label_increase">Zunahme</string>
+    <string name="label_income">Ertrag</string>
+    <string name="label_rebate">Rabatt</string>
+    <string name="label_expense">Aufwand</string>
+    <string name="label_bill">Rechnung</string>
+    <string name="label_invoice">Rechnung</string>
+    <string name="label_buy">Kauf</string>
+    <string name="label_sell">Verkauf</string>
+    <string name="label_repeats">Wiederholungen</string>
+    <string name="label_account_balance">Saldo:</string>
+    <string name="toast_no_recent_backup">Keine Sicherheitskopie vorhanden</string>
     <string name="account_name_opening_balances">Anfangsbestand</string>
     <string name="account_name_equity"> </string> <!-- This is no error, the default German locale has no parent Equity account -->
-    <string name="summary_save_opening_balances">Enable to save the current account balance (before deleting transactions) as new opening balance after deleting transactions
+    <string name="summary_save_opening_balances">Mglichkeit aktivieren, den aktuellen Saldo als neuen Anfangsbestand nach dem Lschen der Buchungen zu bernehmen
     </string>
-    <string name="title_save_opening_balances">Save account opening balances</string>
+    <string name="title_save_opening_balances">Saldo als neuen Anfangsbestand bernehmen</string>
 </resources>

From e0fe69ad0bca3cd3f7f2967a5888e3eb863dce47 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Sun, 24 Aug 2014 10:48:36 +0800
Subject: [PATCH 3/5] FIX: Cursor leak

Cursor leaks would cause the cursor resource to be exhausted when
importing a large account tree with a lot of transactions.
---
 .../org/gnucash/android/db/AccountsDbAdapter.java  |  6 ++++--
 .../org/gnucash/android/db/SplitsDbAdapter.java    | 22 ++++++++++++++--------
 2 files changed, 18 insertions(+), 10 deletions(-)

diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index a976926b..adc13d79 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -736,8 +736,10 @@ public String getGnuCashRootAccountUID(){
         String condition = AccountEntry.COLUMN_TYPE + "= '" + AccountType.ROOT.name() + "'";
         Cursor cursor =  fetchAccounts(condition);
         String rootUID = null;
-        if (cursor != null && cursor.moveToFirst()){
-            rootUID = cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_UID));
+        if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                rootUID = cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_UID));
+            }
             cursor.close();
         }
         return rootUID;
diff --git a/app/src/org/gnucash/android/db/SplitsDbAdapter.java b/app/src/org/gnucash/android/db/SplitsDbAdapter.java
index cdd364b6..591ae754 100644
--- a/app/src/org/gnucash/android/db/SplitsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/SplitsDbAdapter.java
@@ -126,8 +126,10 @@ public Split getSplit(long id){
         Cursor cursor = fetchRecord(id);
 
         Split split = null;
-        if (cursor != null && cursor.moveToFirst()){
-            split = buildSplitInstance(cursor);
+        if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                split = buildSplitInstance(cursor);
+            }
             cursor.close();
         }
         return split;
@@ -248,10 +250,11 @@ public long getID(String uid){
                 new String[] {SplitEntry._ID},
                 SplitEntry.COLUMN_UID + " = ?", new String[]{uid}, null, null, null);
         long result = -1;
-        if (cursor != null && cursor.moveToFirst()){
-            Log.d(TAG, "Transaction already exists. Returning existing id");
-            result = cursor.getLong(cursor.getColumnIndexOrThrow(SplitEntry._ID));
-
+        if (cursor != null){
+            if (cursor.moveToFirst()) {
+                Log.d(TAG, "Transaction already exists. Returning existing id");
+                result = cursor.getLong(cursor.getColumnIndexOrThrow(SplitEntry._ID));
+            }
             cursor.close();
         }
         return result;
@@ -347,8 +350,11 @@ public String getTransactionUID(long transactionId){
                 null, null, null, null);
 
         String trxUID = null;
-        if (cursor != null && cursor.moveToFirst()){
-            trxUID = cursor.getString(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID));
+        if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                trxUID = cursor.getString(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID));
+            }
+            cursor.close();
         }
 
         return trxUID;

From 00fca51f4f2c2cc809c25d35d201ec1f7dc9e524 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Sun, 24 Aug 2014 18:30:48 +0800
Subject: [PATCH 4/5] Ignore <gnc:template-transactions> when importing

<gnc:template-transactions> contains Accounts and Transactions with
"template" Commodity, which would cause program to crash. Also, these
Accounts and Transactions seems not to be real Accounts and Transactions
of the book.
---
 .../org/gnucash/android/export/xml/GncXmlHelper.java   |  1 +
 .../org/gnucash/android/importer/GncXmlHandler.java    | 18 ++++++++++++++++++
 2 files changed, 19 insertions(+)

diff --git a/app/src/org/gnucash/android/export/xml/GncXmlHelper.java b/app/src/org/gnucash/android/export/xml/GncXmlHelper.java
index 992ea14b..a52d9fd7 100644
--- a/app/src/org/gnucash/android/export/xml/GncXmlHelper.java
+++ b/app/src/org/gnucash/android/export/xml/GncXmlHelper.java
@@ -60,6 +60,7 @@
     public static final String TAG_TRN_SPLITS       = "trn:splits";
     public static final String TAG_TRN_SPLIT        = "trn:split";
     public static final String TAG_TRN_SLOTS        = "trn:slots";
+    public static final String TAG_TEMPLATE_TRANSACTION = "gnc:template-transactions";
 
     public static final String TAG_SPLIT_ID         = "split:id";
     public static final String TAG_SPLIT_MEMO       = "split:memo";
diff --git a/app/src/org/gnucash/android/importer/GncXmlHandler.java b/app/src/org/gnucash/android/importer/GncXmlHandler.java
index 5154b566..af8d8bde 100644
--- a/app/src/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/org/gnucash/android/importer/GncXmlHandler.java
@@ -75,6 +75,11 @@
      */
     Split mSplit;
 
+    /**
+     * Ignore certain elements in GnuCash XML file, such as "<gnc:template-transactions>"
+     */
+    String mIgnoreElement = null;
+
     boolean mInColorSlot        = false;
     boolean mInPlaceHolderSlot  = false;
     boolean mInFavoriteSlot     = false;
@@ -122,12 +127,25 @@ public void startElement(String uri, String localName,
         if (qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_DATE_POSTED)){
             mIsDatePosted = true;
         }
+
+        if (qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_TEMPLATE_TRANSACTION)) {
+            mIgnoreElement = GncXmlHelper.TAG_TEMPLATE_TRANSACTION;
+        }
     }
 
     @Override
     public void endElement(String uri, String localName, String qualifiedName) throws SAXException {
         String characterString = mContent.toString().trim();
 
+        if (mIgnoreElement != null) {
+            // Ignore everything inside
+            if (qualifiedName.equalsIgnoreCase(mIgnoreElement)) {
+                mIgnoreElement = null;
+            }
+            mContent.setLength(0);
+            return;
+        }
+
         if (qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_NAME)) {
             mAccount.setName(characterString);
             mAccount.setFullName(characterString);

From 7ac7865dfe4e8da81a859d25fe5834533439a2e8 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sun, 24 Aug 2014 23:10:41 +0200
Subject: [PATCH 5/5] Updated version numbers for v1.4.1 release

---
 CHANGELOG.md               | 10 ++++++++++
 app/AndroidManifest.xml    |  2 +-
 app/pom.xml                |  2 +-
 app/res/values/strings.xml |  2 +-
 integration-tests/pom.xml  |  2 +-
 pom.xml                    |  2 +-
 6 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 089d2108..38a5ff00 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,15 @@
 Change Log
 ===============================================================================
+Version 1.4.1 *(2014-08-25)*
+----------------------------
+* Fixed: Transaction edits not saved
+* Fixed: Crash during import due to template transactions
+* Fixed: Cursors potentially left unclosed
+* Fixed: Fatal crash when error occurs in importing/exporting transaction (instead of displaying error message)
+* Fixed: Editing a transfer transaction does not edit other side of the transaction
+* Removed progress dialog from database migration (seems to be cause of some crashes)
+* Updated German translation
+
 Version 1.4.0 *(2014-08-15)*
 ----------------------------
 Since transactions are at the core of this app, this release touches almost all subsystems and is therefore huge.
diff --git a/app/AndroidManifest.xml b/app/AndroidManifest.xml
index 608a0fdf..4a400026 100644
--- a/app/AndroidManifest.xml
+++ b/app/AndroidManifest.xml
@@ -17,7 +17,7 @@
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="org.gnucash.android"
-    android:versionCode="36"
+    android:versionCode="37"
     android:versionName="@string/app_version_name" >
 
     <uses-sdk android:minSdkVersion="8" android:targetSdkVersion="16"/>
diff --git a/app/pom.xml b/app/pom.xml
index dc6bf27a..e65ebe38 100644
--- a/app/pom.xml
+++ b/app/pom.xml
@@ -22,7 +22,7 @@
     <description>Gnucash Android companion application</description>
 
     <parent>
-        <version>1.4.0-SNAPSHOT</version>
+        <version>1.4.1-SNAPSHOT</version>
         <groupId>org.gnucash.android</groupId>
         <artifactId>gnucash-android-parent</artifactId>
     </parent>
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index fcdf95f3..9c6d12d4 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -17,7 +17,7 @@
 
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
     <string name="app_name">GnuCash</string>
-    <string name="app_version_name">1.4.0</string>
+    <string name="app_version_name">1.4.1</string>
     <string name="title_add_account">Create Account</string>
     <string name="title_edit_account">Edit Account</string>
     <string name="info_details">Info</string>
diff --git a/integration-tests/pom.xml b/integration-tests/pom.xml
index 15c8973b..7763f6f5 100644
--- a/integration-tests/pom.xml
+++ b/integration-tests/pom.xml
@@ -17,7 +17,7 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <parent>
-		<version>1.4.0-SNAPSHOT</version>
+		<version>1.4.1-SNAPSHOT</version>
 		<groupId>org.gnucash.android</groupId>
 		<artifactId>gnucash-android-parent</artifactId>
 	</parent>
diff --git a/pom.xml b/pom.xml
index 94eaf0cd..2227c082 100644
--- a/pom.xml
+++ b/pom.xml
@@ -17,7 +17,7 @@
 
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
     <modelVersion>4.0.0</modelVersion>
-	<version>1.4.0-SNAPSHOT</version>
+	<version>1.4.1-SNAPSHOT</version>
     <groupId>org.gnucash.android</groupId>
     <artifactId>gnucash-android-parent</artifactId>
     <name>GnuCash Android parent</name>
