From 07756f31487c30921499273984b2ff5ea9dea9e0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 21 Mar 2016 13:06:31 +0100
Subject: [PATCH] Simplify the use of some variables.

In both cases all uses called .getCurrencyCode().
---
 .../dialog/TransferFundsDialogFragment.java        | 27 +++++++++++-----------
 1 file changed, 13 insertions(+), 14 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 11c271d8..b74efd8f 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -46,7 +46,6 @@
 import org.gnucash.android.ui.util.OnTransferFundsListener;
 
 import java.math.BigDecimal;
-import java.math.MathContext;
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
 import java.text.ParseException;
@@ -80,7 +79,7 @@
     @Bind(R.id.btn_save) Button mSaveButton;
     @Bind(R.id.btn_cancel) Button mCancelButton;
     Money mOriginAmount;
-    Currency mTargetCurrency;
+    String mTargetCurrencyCode;
 
     Money mConvertedAmount;
     OnTransferFundsListener mOnTransferFundsListener;
@@ -89,7 +88,7 @@ public static TransferFundsDialogFragment getInstance(Money transactionAmount, S
                                                           OnTransferFundsListener transferFundsListener){
         TransferFundsDialogFragment fragment = new TransferFundsDialogFragment();
         fragment.mOriginAmount = transactionAmount;
-        fragment.mTargetCurrency = Currency.getInstance(targetCurrencyCode);
+        fragment.mTargetCurrencyCode = Currency.getInstance(targetCurrencyCode).getCurrencyCode();
         fragment.mOnTransferFundsListener = transferFundsListener;
         return fragment;
     }
@@ -101,19 +100,19 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         ButterKnife.bind(this, view);
 
         TransactionsActivity.displayBalance(mStartAmountLabel, mOriginAmount);
-        Currency fromCurrency = mOriginAmount.getCurrency();
-        mFromCurrencyLabel.setText(fromCurrency.getCurrencyCode());
-        mToCurrencyLabel.setText(mTargetCurrency.getCurrencyCode());
-        mConvertedAmountCurrencyLabel.setText(mTargetCurrency.getCurrencyCode());
+        String fromCurrencyCode = mOriginAmount.getCurrency().getCurrencyCode();
+        mFromCurrencyLabel.setText(fromCurrencyCode);
+        mToCurrencyLabel.setText(mTargetCurrencyCode);
+        mConvertedAmountCurrencyLabel.setText(mTargetCurrencyCode);
 
         mSampleExchangeRate.setText(String.format(getString(R.string.sample_exchange_rate),
-                                                  fromCurrency.getCurrencyCode(),
-                                                  mTargetCurrency.getCurrencyCode()));
+                                                  fromCurrencyCode,
+                                                  mTargetCurrencyCode));
         final InputLayoutErrorClearer textChangeListener = new InputLayoutErrorClearer();
 
         CommoditiesDbAdapter commoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
-        String commodityUID = commoditiesDbAdapter.getCommodityUID(fromCurrency.getCurrencyCode());
-        Commodity currencyCommodity = commoditiesDbAdapter.getCommodity(mTargetCurrency.getCurrencyCode());
+        String commodityUID = commoditiesDbAdapter.getCommodityUID(fromCurrencyCode);
+        Commodity currencyCommodity = commoditiesDbAdapter.getCommodity(mTargetCurrencyCode);
         String currencyUID = currencyCommodity.getUID();
         PricesDbAdapter pricesDbAdapter = PricesDbAdapter.getInstance();
         Pair<Long, Long> pricePair = pricesDbAdapter.getPrice(commodityUID, currencyUID);
@@ -202,7 +201,7 @@ private void transferFunds() {
 
         CommoditiesDbAdapter commoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
         String originCommodityUID = commoditiesDbAdapter.getCommodityUID(mOriginAmount.getCurrency().getCurrencyCode());
-        String targetCommodityUID = commoditiesDbAdapter.getCommodityUID(mTargetCurrency.getCurrencyCode());
+        String targetCommodityUID = commoditiesDbAdapter.getCommodityUID(mTargetCurrencyCode);
 
         if (mExchangeRateRadioButton.isChecked()){
             BigDecimal rate;
@@ -217,7 +216,7 @@ private void transferFunds() {
             }
             price = new Price(originCommodityUID, targetCommodityUID, rate);
 
-            Commodity targetCommodity = Commodity.getInstance(mTargetCurrency.getCurrencyCode());
+            Commodity targetCommodity = Commodity.getInstance(mTargetCurrencyCode);
             mConvertedAmount = mOriginAmount.multiply(rate).withCurrency(targetCommodity);
         }
 
@@ -229,7 +228,7 @@ private void transferFunds() {
             }
 
             BigDecimal amount = TransactionFormFragment.parseInputToDecimal(convertedAmount);
-            mConvertedAmount = new Money(amount, Commodity.getInstance(mTargetCurrency.getCurrencyCode()));
+            mConvertedAmount = new Money(amount, Commodity.getInstance(mTargetCurrencyCode));
 
             price = new Price(originCommodityUID, targetCommodityUID);
             // fractions cannot be exactly represented by BigDecimal.
