From 31a2763e4569d6c770bb9dd724c894f9142e49f8 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 7 Mar 2015 17:48:39 +0200
Subject: [PATCH 01/32] Added chart dispatcher

---
 app/src/main/AndroidManifest.xml                   |  1 +
 .../org/gnucash/android/ui/BaseDrawerActivity.java |  4 +-
 .../android/ui/account/AccountsActivity.java       |  7 ++-
 .../android/ui/chart/ChartReportActivity.java      | 42 ++++++++++++++++
 .../gnucash/android/ui/chart/PieChartActivity.java |  2 +-
 app/src/main/res/layout/activity_chart_report.xml  | 56 ++++++++++++++++++++++
 ...ty_chart_reports.xml => activity_pie_chart.xml} |  0
 app/src/main/res/menu/global_actions.xml           |  2 +-
 8 files changed, 106 insertions(+), 8 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
 create mode 100644 app/src/main/res/layout/activity_chart_report.xml
 rename app/src/main/res/layout/{activity_chart_reports.xml => activity_pie_chart.xml} (100%)

diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index b99cbf5a..1432a085 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -77,6 +77,7 @@
 		        <action android:name="android.appwidget.action.APPWIDGET_CONFIGURE"/>
 		    </intent-filter>
 		</activity>
+        <activity android:name=".ui.chart.ChartReportActivity" />
         <activity android:name=".ui.chart.PieChartActivity" />
         <service android:name=".service.SchedulerService"
             android:exported="false"
diff --git a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
index a2655160..89cd37cd 100644
--- a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
@@ -36,7 +36,7 @@
 import org.gnucash.android.R;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.ui.account.AccountsActivity;
-import org.gnucash.android.ui.chart.PieChartActivity;
+import org.gnucash.android.ui.chart.ChartReportActivity;
 import org.gnucash.android.ui.settings.SettingsActivity;
 import org.gnucash.android.ui.transaction.ScheduledEventsActivity;
 
@@ -192,7 +192,7 @@ protected void selectItem(int position) {
                 break;
 
             case 3:
-                startActivity(new Intent(this, PieChartActivity.class));
+                startActivity(new Intent(this, ChartReportActivity.class));
                 break;
 
             case 5: { //show scheduled transactions
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 9a83c020..63166656 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -55,11 +55,10 @@
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.UxArgument;
-import org.gnucash.android.ui.chart.PieChartActivity;
+import org.gnucash.android.ui.chart.ChartReportActivity;
 import org.gnucash.android.ui.passcode.PassLockActivity;
 import org.gnucash.android.ui.settings.SettingsActivity;
 import org.gnucash.android.ui.transaction.ScheduledEventsActivity;
-import org.gnucash.android.ui.transaction.ScheduledTransactionsListFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.util.OnAccountClickedListener;
 import org.gnucash.android.ui.util.Refreshable;
@@ -389,8 +388,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 startActivity(new Intent(this, SettingsActivity.class));
                 return true;
 
-            case R.id.menu_pie_chart:
-                startActivity(new Intent(this, PieChartActivity.class));
+            case R.id.menu_chart_report:
+                startActivity(new Intent(this, ChartReportActivity.class));
                 return true;
 
 		default:
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
new file mode 100644
index 00000000..7e652f50
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
@@ -0,0 +1,42 @@
+package org.gnucash.android.ui.chart;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.View;
+
+import org.gnucash.android.R;
+import org.gnucash.android.ui.passcode.PassLockActivity;
+
+/**
+ *
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ */
+public class ChartReportActivity extends PassLockActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
+        setContentView(R.layout.activity_chart_report);
+        super.onCreate(savedInstanceState);
+
+        findViewById(R.id.pie_chart_button).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                startActivity(new Intent(view.getContext(), PieChartActivity.class));
+            }
+        });
+        findViewById(R.id.line_chart_button).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+//                startActivity(new Intent(view.getContext(), LineChartActivity.class));
+            }
+        });
+        findViewById(R.id.bar_chart_button).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+//                startActivity(new Intent(view.getContext(), BarChartActivity.class));
+            }
+        });
+
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index 9dc9fe26..0d54726a 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -94,7 +94,7 @@
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
-        setContentView(R.layout.activity_chart_reports);
+        setContentView(R.layout.activity_pie_chart);
         super.onCreate(savedInstanceState);
 
         ActionBar actionBar = getSupportActionBar();
diff --git a/app/src/main/res/layout/activity_chart_report.xml b/app/src/main/res/layout/activity_chart_report.xml
new file mode 100644
index 00000000..8f7b3661
--- /dev/null
+++ b/app/src/main/res/layout/activity_chart_report.xml
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!--
+ Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<android.support.v4.widget.DrawerLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <LinearLayout
+        android:orientation="horizontal"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center_horizontal|center_vertical">
+
+        <Button
+            android:id="@+id/bar_chart_button"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Bar Chart" />
+        <Button
+            android:id="@+id/pie_chart_button"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Pie Chart" />
+        <Button
+            android:id="@+id/line_chart_button"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Line Chart" />
+
+    </LinearLayout>
+
+    <ListView android:id="@+id/left_drawer"
+        android:layout_width="240dp"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:choiceMode="singleChoice"
+        android:divider="@android:color/transparent"
+        android:dividerHeight="0dp"
+        android:background="#111"/>
+</android.support.v4.widget.DrawerLayout>
diff --git a/app/src/main/res/layout/activity_chart_reports.xml b/app/src/main/res/layout/activity_pie_chart.xml
similarity index 100%
rename from app/src/main/res/layout/activity_chart_reports.xml
rename to app/src/main/res/layout/activity_pie_chart.xml
diff --git a/app/src/main/res/menu/global_actions.xml b/app/src/main/res/menu/global_actions.xml
index 85b17e9d..ca240dd6 100644
--- a/app/src/main/res/menu/global_actions.xml
+++ b/app/src/main/res/menu/global_actions.xml
@@ -29,7 +29,7 @@
           android:showAsAction="never"
           android:orderInCategory="10"/>
 
-    <item android:id="@+id/menu_pie_chart"
+    <item android:id="@+id/menu_chart_report"
           android:title="@string/menu_chart_report"
           android:icon="@drawable/chart_icon"
           android:showAsAction="collapseActionView|ifRoom" />

From 94e3c95d1fe6727ace529d23f08db6d207949150 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sun, 8 Mar 2015 20:55:35 +0200
Subject: [PATCH 02/32] Updated MPAndroidChart version to 2.0.8

---
 app/build.gradle                                     |  2 +-
 .../gnucash/android/ui/chart/PieChartActivity.java   | 20 ++++++++++----------
 build.gradle                                         |  1 +
 3 files changed, 12 insertions(+), 11 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 2e8b58bb..d53d91ac 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -34,7 +34,7 @@ dependencies {
             'com.viewpagerindicator:library:2.4.1@aar',
             'com.doomonafireball.betterpickers:library:1.5.2',
             'com.commonsware.cwac:merge:1.1.+',
-            'org.quanqi:mpandroidchart:1.7.4', //TODO: Upgrade only when we support Android API 14 and over)
+            'com.github.PhilJay:MPAndroidChart:v2.0.8',
             'joda-time:joda-time:2.7'
     )
 			
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index 0d54726a..a0ae0412 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -36,12 +36,13 @@
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuItem;
 import com.github.mikephil.charting.charts.PieChart;
+import com.github.mikephil.charting.components.Legend.LegendForm;
+import com.github.mikephil.charting.components.Legend.LegendPosition;
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.data.PieData;
 import com.github.mikephil.charting.data.PieDataSet;
-import com.github.mikephil.charting.interfaces.OnChartValueSelectedListener;
-import com.github.mikephil.charting.utils.Legend.LegendForm;
-import com.github.mikephil.charting.utils.Legend.LegendPosition;
+import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
+import com.github.mikephil.charting.utils.Highlight;
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.AccountsDbAdapter;
@@ -110,12 +111,8 @@ protected void onCreate(Bundle savedInstanceState) {
         mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 
         mChart = (PieChart) findViewById(R.id.chart);
-        mChart.setValueTextSize(12);
-        mChart.setValueTextColor(Color.BLACK);
         mChart.setCenterTextSize(18);
-        mChart.setDrawYValues(false);
         mChart.setDescription("");
-        mChart.setDrawLegend(false);
         mChart.setOnChartValueSelectedListener(this);
 
         setUpSpinner();
@@ -190,6 +187,7 @@ private void setData(boolean forCurrentMonth) {
         if (dataSet.getEntryCount() == 0) {
             dataSet.addEntry(new Entry(1, 0));
             dataSet.setColor(Color.LTGRAY);
+            dataSet.setDrawValues(false);
             names.add("");
             mChart.setCenterText(getResources().getString(R.string.label_chart_no_data));
             mChart.setTouchEnabled(false);
@@ -276,6 +274,7 @@ public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l)
                 mLatestTransactionDate = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType));
                 mChartDate = mLatestTransactionDate;
                 setData(false);
+                mChart.getLegend().setEnabled(false);
             }
 
             @Override
@@ -297,7 +296,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 break;
             }
             case R.id.menu_toggle_legend: {
-                mChart.setDrawLegend(!mChart.isDrawLegendEnabled());
+                mChart.getLegend().setEnabled(!mChart.getLegend().isEnabled());
                 mChart.getLegend().setForm(LegendForm.CIRCLE);
                 mChart.getLegend().setPosition(LegendPosition.RIGHT_OF_CHART_CENTER);
                 mChart.notifyDataSetChanged();
@@ -305,7 +304,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 break;
             }
             case R.id.menu_toggle_labels: {
-                mChart.setDrawXValues(!mChart.isDrawXValuesEnabled());
+                mChart.getData().setDrawValues(!mChart.isDrawSliceTextEnabled());
+                mChart.setDrawSliceText(!mChart.isDrawSliceTextEnabled());
                 mChart.invalidate();
                 break;
             }
@@ -330,7 +330,7 @@ public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth
     }
 
     @Override
-    public void onValueSelected(Entry e, int dataSetIndex) {
+    public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         if (e == null) return;
         ((TextView) findViewById(R.id.selected_chart_slice))
                 .setText(mChart.getData().getXVals().get(e.getXIndex()) + " - " + e.getVal()
diff --git a/build.gradle b/build.gradle
index 4f9e38cf..278ef30c 100644
--- a/build.gradle
+++ b/build.gradle
@@ -11,6 +11,7 @@ allprojects {
     repositories {
 		maven { url "http://dl.bintray.com/populov/maven" }
         maven { url "https://repo.commonsware.com.s3.amazonaws.com"}
+        maven { url "https://jitpack.io" }
         jcenter()		
         mavenCentral()
     }

From 19038d6cb3616974406bc0d7b6ac124cd98eb7bd Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Mon, 9 Mar 2015 20:54:45 +0200
Subject: [PATCH 03/32] Added basic line chart

---
 app/src/main/AndroidManifest.xml                   |   1 +
 .../android/ui/chart/ChartReportActivity.java      |   2 +-
 .../android/ui/chart/LineChartActivity.java        | 160 +++++++++++++++++++++
 .../gnucash/android/ui/chart/PieChartActivity.java |   2 +-
 app/src/main/res/layout/activity_line_chart.xml    |  55 +++++++
 app/src/main/res/layout/activity_pie_chart.xml     |   2 +-
 6 files changed, 219 insertions(+), 3 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
 create mode 100644 app/src/main/res/layout/activity_line_chart.xml

diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 1432a085..a368de55 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -79,6 +79,7 @@
 		</activity>
         <activity android:name=".ui.chart.ChartReportActivity" />
         <activity android:name=".ui.chart.PieChartActivity" />
+        <activity android:name=".ui.chart.LineChartActivity" />
         <service android:name=".service.SchedulerService"
             android:exported="false"
             android:label="GnuCash Android Scheduler Execution Service"/>
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
index 7e652f50..7e2dd79c 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
@@ -28,7 +28,7 @@ public void onClick(View view) {
         findViewById(R.id.line_chart_button).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-//                startActivity(new Intent(view.getContext(), LineChartActivity.class));
+                startActivity(new Intent(view.getContext(), LineChartActivity.class));
             }
         });
         findViewById(R.id.bar_chart_button).setOnClickListener(new View.OnClickListener() {
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
new file mode 100644
index 00000000..e24e5b64
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -0,0 +1,160 @@
+package org.gnucash.android.ui.chart;
+
+import android.graphics.Color;
+import android.os.Bundle;
+import android.util.Log;
+import android.widget.LinearLayout;
+
+import com.github.mikephil.charting.charts.LineChart;
+import com.github.mikephil.charting.components.Legend;
+import com.github.mikephil.charting.data.Entry;
+import com.github.mikephil.charting.data.LineData;
+import com.github.mikephil.charting.data.LineDataSet;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.model.Account;
+import org.gnucash.android.model.AccountType;
+import org.gnucash.android.ui.passcode.PassLockActivity;
+import org.joda.time.LocalDate;
+import org.joda.time.LocalDateTime;
+import org.joda.time.Months;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ *
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ */
+public class LineChartActivity extends PassLockActivity {
+
+    private static final String TAG = "LineChartActivity";
+
+    private LineChart mChart;
+    private AccountsDbAdapter mAccountsDbAdapter;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
+        setContentView(R.layout.activity_line_chart);
+        super.onCreate(savedInstanceState);
+
+        mAccountsDbAdapter = AccountsDbAdapter.getInstance();
+
+        mChart = new LineChart(this);
+        ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
+
+        mChart.setDescription("");
+        // TEST THIS!!!
+        mChart.setNoDataTextDescription("You need to provide data for the chart.");
+
+        mChart.setDragEnabled(true);
+        mChart.setScaleEnabled(true);
+        mChart.setPinchZoom(false);
+
+        mChart.getAxisRight().setEnabled(false);
+
+        setData();
+
+        Legend l = mChart.getLegend();
+        l.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
+        l.setForm(Legend.LegendForm.CIRCLE);
+
+        mChart.animateX(2500);
+        mChart.invalidate();
+    }
+
+    private ArrayList<Entry> setData(AccountType accountType) {
+        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        LocalDateTime earliest = new LocalDateTime(transactionsDbAdapter.getTimestampOfEarliestTransaction(accountType));
+        LocalDateTime latest = new LocalDateTime(transactionsDbAdapter.getTimestampOfLatestTransaction(accountType));
+        Log.w(TAG, "START: " + earliest.toString("dd MM yyyy"));
+        Log.w(TAG, "END: " + latest.toString("dd MM yyyy"));
+        int diff = Months.monthsBetween(earliest.withDayOfMonth(1).withMillisOfDay(0), latest.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
+        Log.w(TAG, "DIFF: " + diff);
+        // TODO change type to float
+        double[] months = new double[diff + 1];
+
+        List<String> skippedUUID = new ArrayList<String>();
+        for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
+            if (account.getAccountType() == accountType && !account.isPlaceholderAccount()) {
+                // TODO sum of sub accounts?
+                if (mAccountsDbAdapter.getSubAccountCount(account.getUID()) > 0) {
+                    skippedUUID.addAll(mAccountsDbAdapter.getDescendantAccountUIDs(account.getUID(), null, null));
+                }
+                if (!skippedUUID.contains(account.getUID())) {
+                    LocalDateTime tmpDate = earliest;
+                    for (int i = 0; i < months.length; i++) {
+                        Log.i(TAG, "ACCOUNT " + account.getName());
+                        Log.i(TAG, "MONTHS " + tmpDate.toString("MMMM yyyy"));
+
+                        long start = tmpDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
+                        long end = tmpDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
+                        double balance = mAccountsDbAdapter.getAccountBalance(account.getUID(), start, end).absolute().asDouble();
+                        months[i] += balance;
+
+                        Log.i(TAG, "Balance of current month " + balance);
+                        Log.i(TAG, "Balance total " + months[i]);
+
+                        tmpDate = tmpDate.plusMonths(1);
+                    }
+                }
+            }
+        }
+
+        ArrayList<Entry> values = new ArrayList<Entry>();
+        for (int i = 0; i < months.length; i++) {
+            Log.w(TAG, accountType + " MONTH " + months[i]);
+            values.add(new Entry((float) months[i], i));
+        }
+
+        Log.w(TAG, accountType + " ENTRY SIZE " + values.size());
+
+        return values;
+    }
+
+    private void setData() {
+        //TODO comparing Joda dates with TIME!
+
+        LineDataSet set1 = new LineDataSet(setData(AccountType.INCOME), AccountType.INCOME.toString());
+        set1.setDrawCubic(true);
+        set1.setDrawFilled(true);
+        set1.setDrawCircles(true);
+        set1.setLineWidth(2f);
+        set1.setCircleSize(5f);
+        set1.setColor(Color.rgb(104, 241, 175));
+        set1.setFillColor(getResources().getColor(R.color.account_green));
+
+        LineDataSet set2 = new LineDataSet(setData(AccountType.EXPENSE), AccountType.EXPENSE.toString());
+        set2.setDrawCubic(true);
+        set2.setDrawFilled(true);
+        set2.setDrawCircles(true);
+        set2.setLineWidth(2f);
+        set2.setCircleSize(5f);
+        set2.setColor(Color.RED);
+        set2.setFillColor(getResources().getColor(R.color.account_red));
+
+        ArrayList<LineDataSet> dataSets = new ArrayList<LineDataSet>();
+        dataSets.add(set1);
+        dataSets.add(set2);
+
+        LocalDate start = new LocalDate(2014, 1, 1);
+        LocalDate end = new LocalDate(2015, 1, 1);
+
+        ArrayList<String> xVals = new ArrayList<String>();
+        while (!start.isAfter(end)) {
+            xVals.add(start.toString("MMM yy"));
+            Log.w(TAG, "xVals " + start.toString("MM yy"));
+            start = start.plusMonths(1);
+        }
+
+        Log.w(TAG, "X AXIS SIZE " + xVals.size());
+
+        LineData data = new LineData(xVals, dataSets);
+
+        mChart.setData(data);
+    }
+
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index a0ae0412..8fd74d8e 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -110,7 +110,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
         mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 
-        mChart = (PieChart) findViewById(R.id.chart);
+        mChart = (PieChart) findViewById(R.id.pie_chart);
         mChart.setCenterTextSize(18);
         mChart.setDescription("");
         mChart.setOnChartValueSelectedListener(this);
diff --git a/app/src/main/res/layout/activity_line_chart.xml b/app/src/main/res/layout/activity_line_chart.xml
new file mode 100644
index 00000000..4f0d2192
--- /dev/null
+++ b/app/src/main/res/layout/activity_line_chart.xml
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!--
+ Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<android.support.v4.widget.DrawerLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout android:id="@+id/chart"
+            android:orientation="horizontal"
+            android:layout_width="fill_parent"
+            android:layout_height="0dip"
+            android:layout_weight="1" />
+
+        <LinearLayout android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center">
+
+            <TextView android:id="@+id/selected_chart_slice"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:gravity="center" />
+
+        </LinearLayout>
+
+    </LinearLayout>
+    <ListView android:id="@+id/left_drawer"
+        android:layout_width="240dp"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:choiceMode="singleChoice"
+        android:divider="@android:color/transparent"
+        android:dividerHeight="0dp"
+        android:background="#111"/>
+</android.support.v4.widget.DrawerLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/activity_pie_chart.xml b/app/src/main/res/layout/activity_pie_chart.xml
index 6b53e4ca..9249abea 100644
--- a/app/src/main/res/layout/activity_pie_chart.xml
+++ b/app/src/main/res/layout/activity_pie_chart.xml
@@ -27,7 +27,7 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent">
 
-        <com.github.mikephil.charting.charts.PieChart android:id="@+id/chart"
+        <com.github.mikephil.charting.charts.PieChart android:id="@+id/pie_chart"
             android:orientation="horizontal"
             android:layout_width="fill_parent"
             android:layout_height="0dip"

From 616e11e71aaf31072d5aeeb494f12456363d07bf Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Mon, 9 Mar 2015 20:54:45 +0200
Subject: [PATCH 04/32] Implemented selecting value feature

---
 .../gnucash/android/ui/chart/LineChartActivity.java    | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index e24e5b64..9140fce4 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -4,12 +4,15 @@
 import android.os.Bundle;
 import android.util.Log;
 import android.widget.LinearLayout;
+import android.widget.TextView;
 
 import com.github.mikephil.charting.charts.LineChart;
 import com.github.mikephil.charting.components.Legend;
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.data.LineData;
 import com.github.mikephil.charting.data.LineDataSet;
+import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
+import com.github.mikephil.charting.utils.Highlight;
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.AccountsDbAdapter;
@@ -28,7 +31,7 @@
  *
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-public class LineChartActivity extends PassLockActivity {
+public class LineChartActivity extends PassLockActivity implements OnChartValueSelectedListener {
 
     private static final String TAG = "LineChartActivity";
 
@@ -46,6 +49,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mChart = new LineChart(this);
         ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
 
+        mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
         // TEST THIS!!!
         mChart.setNoDataTextDescription("You need to provide data for the chart.");
@@ -157,4 +161,16 @@ private void setData() {
         mChart.setData(data);
     }
 
+    @Override
+    public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
+        if (e == null) return;
+        ((TextView) findViewById(R.id.selected_chart_slice))
+                .setText(mChart.getData().getXVals().get(e.getXIndex()) + " - " + e.getVal()
+                        + " (" + String.format("%.2f", (e.getVal() / mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum()) * 100) + " %)");
+    }
+
+    @Override
+    public void onNothingSelected() {
+        ((TextView) findViewById(R.id.selected_chart_slice)).setText("");
+    }
 }

From 22a0d26eb4a3092f87abdc6441d65a724d00d115 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 10 Mar 2015 20:53:35 +0200
Subject: [PATCH 05/32] X axis from earliest timestampt to latest timestamp

---
 .../android/ui/chart/LineChartActivity.java        | 56 +++++++++++++---------
 1 file changed, 34 insertions(+), 22 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index 9140fce4..7d3dff26 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -25,7 +25,11 @@
 import org.joda.time.Months;
 
 import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 /**
  *
@@ -34,9 +38,13 @@
 public class LineChartActivity extends PassLockActivity implements OnChartValueSelectedListener {
 
     private static final String TAG = "LineChartActivity";
+    private static final String X_AXIS_PATTERN = "MMM YY";
 
     private LineChart mChart;
     private AccountsDbAdapter mAccountsDbAdapter;
+    private Map<AccountType, Long> mEarliestTimestampsMap = new HashMap<AccountType, Long>();
+    private Map<AccountType, Long> mLatestTimestampsMap = new HashMap<AccountType, Long>();
+
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -54,10 +62,6 @@ protected void onCreate(Bundle savedInstanceState) {
         // TEST THIS!!!
         mChart.setNoDataTextDescription("You need to provide data for the chart.");
 
-        mChart.setDragEnabled(true);
-        mChart.setScaleEnabled(true);
-        mChart.setPinchZoom(false);
-
         mChart.getAxisRight().setEnabled(false);
 
         setData();
@@ -71,9 +75,8 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     private ArrayList<Entry> setData(AccountType accountType) {
-        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
-        LocalDateTime earliest = new LocalDateTime(transactionsDbAdapter.getTimestampOfEarliestTransaction(accountType));
-        LocalDateTime latest = new LocalDateTime(transactionsDbAdapter.getTimestampOfLatestTransaction(accountType));
+        LocalDateTime earliest = new LocalDateTime(mEarliestTimestampsMap.get(accountType));
+        LocalDateTime latest = new LocalDateTime(mLatestTimestampsMap.get(accountType));
         Log.w(TAG, "START: " + earliest.toString("dd MM yyyy"));
         Log.w(TAG, "END: " + latest.toString("dd MM yyyy"));
         int diff = Months.monthsBetween(earliest.withDayOfMonth(1).withMillisOfDay(0), latest.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
@@ -122,8 +125,22 @@ protected void onCreate(Bundle savedInstanceState) {
     private void setData() {
         //TODO comparing Joda dates with TIME!
 
+        setEarliestAndLatestTimestamps(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE));
+        //TODO what if account has no transaction and list contain zero
+        List<Long> xTimestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
+        xTimestamps.addAll(mLatestTimestampsMap.values());
+        Collections.sort(xTimestamps);
+        LocalDate start = new LocalDate(xTimestamps.get(0));
+        LocalDate end = new LocalDate(xTimestamps.get(xTimestamps.size() - 1));
+
+        ArrayList<String> xValues = new ArrayList<String>();
+        while (!start.isAfter(end)) {
+            xValues.add(start.toString(X_AXIS_PATTERN));
+            Log.w(TAG, "xValues " + start.toString("MM yy"));
+            start = start.plusMonths(1);
+        }
+
         LineDataSet set1 = new LineDataSet(setData(AccountType.INCOME), AccountType.INCOME.toString());
-        set1.setDrawCubic(true);
         set1.setDrawFilled(true);
         set1.setDrawCircles(true);
         set1.setLineWidth(2f);
@@ -132,7 +149,6 @@ private void setData() {
         set1.setFillColor(getResources().getColor(R.color.account_green));
 
         LineDataSet set2 = new LineDataSet(setData(AccountType.EXPENSE), AccountType.EXPENSE.toString());
-        set2.setDrawCubic(true);
         set2.setDrawFilled(true);
         set2.setDrawCircles(true);
         set2.setLineWidth(2f);
@@ -144,23 +160,19 @@ private void setData() {
         dataSets.add(set1);
         dataSets.add(set2);
 
-        LocalDate start = new LocalDate(2014, 1, 1);
-        LocalDate end = new LocalDate(2015, 1, 1);
-
-        ArrayList<String> xVals = new ArrayList<String>();
-        while (!start.isAfter(end)) {
-            xVals.add(start.toString("MMM yy"));
-            Log.w(TAG, "xVals " + start.toString("MM yy"));
-            start = start.plusMonths(1);
-        }
-
-        Log.w(TAG, "X AXIS SIZE " + xVals.size());
-
-        LineData data = new LineData(xVals, dataSets);
+        LineData data = new LineData(xValues, dataSets);
 
         mChart.setData(data);
     }
 
+    private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
+        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        for (AccountType type : accountTypeList) {
+            mEarliestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfEarliestTransaction(type));
+            mLatestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfLatestTransaction(type));
+        }
+    }
+
     @Override
     public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         if (e == null) return;

From fd754e9744ba1eef283084b2ac9cc8adf9476d61 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 11 Mar 2015 21:05:05 +0200
Subject: [PATCH 06/32] Calculate x axis offset for data sets

---
 .../android/ui/chart/LineChartActivity.java        | 37 +++++++++++++++-------
 1 file changed, 25 insertions(+), 12 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index 7d3dff26..9439226a 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -44,7 +44,8 @@
     private AccountsDbAdapter mAccountsDbAdapter;
     private Map<AccountType, Long> mEarliestTimestampsMap = new HashMap<AccountType, Long>();
     private Map<AccountType, Long> mLatestTimestampsMap = new HashMap<AccountType, Long>();
-
+    private long mEarliestTransactionTimestamp;
+    private long mLatestTransactionTimestamp;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -111,10 +112,12 @@ protected void onCreate(Bundle savedInstanceState) {
             }
         }
 
+        int offset = getXAxisOffset(accountType);
+        Log.w(TAG, "OFFSET OF " + accountType + " IS " + offset);
         ArrayList<Entry> values = new ArrayList<Entry>();
         for (int i = 0; i < months.length; i++) {
             Log.w(TAG, accountType + " MONTH " + months[i]);
-            values.add(new Entry((float) months[i], i));
+            values.add(new Entry((float) months[i], i + offset));
         }
 
         Log.w(TAG, accountType + " ENTRY SIZE " + values.size());
@@ -126,18 +129,14 @@ private void setData() {
         //TODO comparing Joda dates with TIME!
 
         setEarliestAndLatestTimestamps(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE));
-        //TODO what if account has no transaction and list contain zero
-        List<Long> xTimestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
-        xTimestamps.addAll(mLatestTimestampsMap.values());
-        Collections.sort(xTimestamps);
-        LocalDate start = new LocalDate(xTimestamps.get(0));
-        LocalDate end = new LocalDate(xTimestamps.get(xTimestamps.size() - 1));
 
+        LocalDate startDate = new LocalDate(mEarliestTransactionTimestamp);
+        LocalDate endDate = new LocalDate(mLatestTransactionTimestamp);
         ArrayList<String> xValues = new ArrayList<String>();
-        while (!start.isAfter(end)) {
-            xValues.add(start.toString(X_AXIS_PATTERN));
-            Log.w(TAG, "xValues " + start.toString("MM yy"));
-            start = start.plusMonths(1);
+        while (!startDate.isAfter(endDate)) {
+            xValues.add(startDate.toString(X_AXIS_PATTERN));
+            Log.w(TAG, "xValues " + startDate.toString("MM yy"));
+            startDate = startDate.plusMonths(1);
         }
 
         LineDataSet set1 = new LineDataSet(setData(AccountType.INCOME), AccountType.INCOME.toString());
@@ -171,6 +170,20 @@ private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
             mEarliestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfEarliestTransaction(type));
             mLatestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfLatestTransaction(type));
         }
+
+        //TODO what if account has no transaction and list contain zero items
+        List<Long> timestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
+        timestamps.addAll(mLatestTimestampsMap.values());
+        Collections.sort(timestamps);
+        mEarliestTransactionTimestamp = timestamps.get(0);
+        mLatestTransactionTimestamp = timestamps.get(timestamps.size() - 1);
+    }
+
+    private int getXAxisOffset(AccountType accountType) {
+        return Months.monthsBetween(
+                new LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1),
+                new LocalDate(mEarliestTimestampsMap.get(accountType)).withDayOfMonth(1)
+                ).getMonths();
     }
 
     @Override

From 84d9c6215f4502ee397eef994cb06256a1ee12b4 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Thu, 12 Mar 2015 15:53:03 +0200
Subject: [PATCH 07/32] Improved computing account balances

---
 .../org/gnucash/android/db/AccountsDbAdapter.java  | 20 ++++++++
 .../android/ui/chart/LineChartActivity.java        | 57 ++++++++--------------
 2 files changed, 40 insertions(+), 37 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index 0003f664..cf9bd17f 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -874,6 +874,26 @@ private Money computeBalance(String accountUID, long startTimestamp, long endTim
     }
 
     /**
+     * Returns the absolute balance of account list within the specified time range while taking sub-accounts
+     * into consideration. The default currency takes as base currency.
+     * @param accountUIDList list of account UIDs
+     * @param startTimestamp the start timestamp of the time range
+     * @param endTimestamp the end timestamp of the time range
+     * @return the absolute balance of account list
+     */
+    public Money getAccountsBalance(List<String> accountUIDList, long startTimestamp, long endTimestamp) {
+        String currencyCode = GnuCashApplication.getDefaultCurrency();
+        Money balance = Money.createZeroInstance(currencyCode);
+
+        SplitsDbAdapter splitsDbAdapter = SplitsDbAdapter.getInstance();
+        Money splitSum = (startTimestamp == -1 && endTimestamp == -1)
+                ? splitsDbAdapter.computeSplitBalance(accountUIDList, currencyCode, true)
+                : splitsDbAdapter.computeSplitBalance(accountUIDList, currencyCode, true, startTimestamp, endTimestamp);
+
+        return balance.add(splitSum).absolute();
+    }
+
+    /**
      * Retrieve all descendant accounts of an account
      * Note, in filtering, once an account is filtered out, all its descendants
      * will also be filtered out, even they don't meet the filter where
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index 9439226a..70ca0da9 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -76,51 +76,34 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     private ArrayList<Entry> setData(AccountType accountType) {
-        LocalDateTime earliest = new LocalDateTime(mEarliestTimestampsMap.get(accountType));
-        LocalDateTime latest = new LocalDateTime(mLatestTimestampsMap.get(accountType));
-        Log.w(TAG, "START: " + earliest.toString("dd MM yyyy"));
-        Log.w(TAG, "END: " + latest.toString("dd MM yyyy"));
-        int diff = Months.monthsBetween(earliest.withDayOfMonth(1).withMillisOfDay(0), latest.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
-        Log.w(TAG, "DIFF: " + diff);
-        // TODO change type to float
-        double[] months = new double[diff + 1];
-
-        List<String> skippedUUID = new ArrayList<String>();
+        List<String> accountUIDList = new ArrayList<String>();
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
             if (account.getAccountType() == accountType && !account.isPlaceholderAccount()) {
-                // TODO sum of sub accounts?
-                if (mAccountsDbAdapter.getSubAccountCount(account.getUID()) > 0) {
-                    skippedUUID.addAll(mAccountsDbAdapter.getDescendantAccountUIDs(account.getUID(), null, null));
-                }
-                if (!skippedUUID.contains(account.getUID())) {
-                    LocalDateTime tmpDate = earliest;
-                    for (int i = 0; i < months.length; i++) {
-                        Log.i(TAG, "ACCOUNT " + account.getName());
-                        Log.i(TAG, "MONTHS " + tmpDate.toString("MMMM yyyy"));
-
-                        long start = tmpDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
-                        long end = tmpDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
-                        double balance = mAccountsDbAdapter.getAccountBalance(account.getUID(), start, end).absolute().asDouble();
-                        months[i] += balance;
-
-                        Log.i(TAG, "Balance of current month " + balance);
-                        Log.i(TAG, "Balance total " + months[i]);
-
-                        tmpDate = tmpDate.plusMonths(1);
-                    }
-                }
+                accountUIDList.add(account.getUID());
             }
         }
 
+        LocalDateTime earliest = new LocalDateTime(mEarliestTimestampsMap.get(accountType));
+        LocalDateTime latest = new LocalDateTime(mLatestTimestampsMap.get(accountType));
+        Log.w(TAG, "START: " + earliest.toString("dd MM yyyy"));
+        Log.w(TAG, "END: " + latest.toString("dd MM yyyy"));
+        int months = Months.monthsBetween(earliest.withDayOfMonth(1).withMillisOfDay(0),
+                latest.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
+
         int offset = getXAxisOffset(accountType);
         Log.w(TAG, "OFFSET OF " + accountType + " IS " + offset);
-        ArrayList<Entry> values = new ArrayList<Entry>();
-        for (int i = 0; i < months.length; i++) {
-            Log.w(TAG, accountType + " MONTH " + months[i]);
-            values.add(new Entry((float) months[i], i + offset));
-        }
+        ArrayList<Entry> values = new ArrayList<Entry>(months + 1);
+        for (int i = 0; i < months + 1; i++) {
+            long start = earliest.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
+            long end = earliest.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
 
-        Log.w(TAG, accountType + " ENTRY SIZE " + values.size());
+            float balance = (float) mAccountsDbAdapter.getAccountsBalance(accountUIDList, start, end).asDouble();
+            values.add(new Entry(balance, i + offset));
+
+            Log.w(TAG, accountType + earliest.toString(" MMMM yyyy") + ", balance = " + balance);
+
+            earliest = earliest.plusMonths(1);
+        }
 
         return values;
     }

From 4fb6372c735b35fe5433961db444f31699fde94f Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Thu, 12 Mar 2015 18:24:24 +0200
Subject: [PATCH 08/32] Refactoring and clean up

---
 .../android/ui/chart/LineChartActivity.java        | 86 ++++++++++------------
 1 file changed, 39 insertions(+), 47 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index 70ca0da9..3a110c39 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -40,6 +40,11 @@
     private static final String TAG = "LineChartActivity";
     private static final String X_AXIS_PATTERN = "MMM YY";
 
+    private static final int[] COLORS = {
+            Color.parseColor("#68F1AF"), Color.parseColor("#cc1f09"), Color.parseColor("#EE8600"),
+            Color.parseColor("#1469EB"), Color.parseColor("#B304AD"),
+    };
+
     private LineChart mChart;
     private AccountsDbAdapter mAccountsDbAdapter;
     private Map<AccountType, Long> mEarliestTimestampsMap = new HashMap<AccountType, Long>();
@@ -75,7 +80,37 @@ protected void onCreate(Bundle savedInstanceState) {
         mChart.invalidate();
     }
 
-    private ArrayList<Entry> setData(AccountType accountType) {
+    private void setData() {
+        //TODO comparing Joda dates with TIME!
+        List<AccountType> accountTypes = Arrays.asList(AccountType.INCOME, AccountType.EXPENSE);
+        setEarliestAndLatestTimestamps(accountTypes);
+
+        LocalDate startDate = new LocalDate(mEarliestTransactionTimestamp);
+        LocalDate endDate = new LocalDate(mLatestTransactionTimestamp);
+        ArrayList<String> xValues = new ArrayList<String>();
+        while (!startDate.isAfter(endDate)) {
+            xValues.add(startDate.toString(X_AXIS_PATTERN));
+            Log.d(TAG, "X axis " + startDate.toString("MM yy"));
+            startDate = startDate.plusMonths(1);
+        }
+
+        ArrayList<LineDataSet> dataSets = new ArrayList<LineDataSet>();
+        for (AccountType accountType : accountTypes) {
+            LineDataSet set = new LineDataSet(getEntryList(accountType), accountType.toString());
+            set.setDrawFilled(true);
+            set.setDrawCircles(true);
+            set.setLineWidth(2f);
+            set.setCircleSize(5f);
+            set.setColor(COLORS[dataSets.size()]);
+            set.setFillColor(COLORS[dataSets.size()]);
+
+            dataSets.add(set);
+        }
+
+        mChart.setData(new LineData(xValues, dataSets));
+    }
+
+    private ArrayList<Entry> getEntryList(AccountType accountType) {
         List<String> accountUIDList = new ArrayList<String>();
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
             if (account.getAccountType() == accountType && !account.isPlaceholderAccount()) {
@@ -85,68 +120,25 @@ protected void onCreate(Bundle savedInstanceState) {
 
         LocalDateTime earliest = new LocalDateTime(mEarliestTimestampsMap.get(accountType));
         LocalDateTime latest = new LocalDateTime(mLatestTimestampsMap.get(accountType));
-        Log.w(TAG, "START: " + earliest.toString("dd MM yyyy"));
-        Log.w(TAG, "END: " + latest.toString("dd MM yyyy"));
+        Log.d(TAG, "Earliest " + accountType + "date " + earliest.toString("dd MM yyyy"));
+        Log.d(TAG, "Latest " + accountType + "date " + latest.toString("dd MM yyyy"));
         int months = Months.monthsBetween(earliest.withDayOfMonth(1).withMillisOfDay(0),
                 latest.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
 
         int offset = getXAxisOffset(accountType);
-        Log.w(TAG, "OFFSET OF " + accountType + " IS " + offset);
         ArrayList<Entry> values = new ArrayList<Entry>(months + 1);
         for (int i = 0; i < months + 1; i++) {
             long start = earliest.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
             long end = earliest.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
-
             float balance = (float) mAccountsDbAdapter.getAccountsBalance(accountUIDList, start, end).asDouble();
             values.add(new Entry(balance, i + offset));
-
-            Log.w(TAG, accountType + earliest.toString(" MMMM yyyy") + ", balance = " + balance);
-
+            Log.d(TAG, accountType + earliest.toString(" MMM yyyy") + ", balance = " + balance);
             earliest = earliest.plusMonths(1);
         }
 
         return values;
     }
 
-    private void setData() {
-        //TODO comparing Joda dates with TIME!
-
-        setEarliestAndLatestTimestamps(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE));
-
-        LocalDate startDate = new LocalDate(mEarliestTransactionTimestamp);
-        LocalDate endDate = new LocalDate(mLatestTransactionTimestamp);
-        ArrayList<String> xValues = new ArrayList<String>();
-        while (!startDate.isAfter(endDate)) {
-            xValues.add(startDate.toString(X_AXIS_PATTERN));
-            Log.w(TAG, "xValues " + startDate.toString("MM yy"));
-            startDate = startDate.plusMonths(1);
-        }
-
-        LineDataSet set1 = new LineDataSet(setData(AccountType.INCOME), AccountType.INCOME.toString());
-        set1.setDrawFilled(true);
-        set1.setDrawCircles(true);
-        set1.setLineWidth(2f);
-        set1.setCircleSize(5f);
-        set1.setColor(Color.rgb(104, 241, 175));
-        set1.setFillColor(getResources().getColor(R.color.account_green));
-
-        LineDataSet set2 = new LineDataSet(setData(AccountType.EXPENSE), AccountType.EXPENSE.toString());
-        set2.setDrawFilled(true);
-        set2.setDrawCircles(true);
-        set2.setLineWidth(2f);
-        set2.setCircleSize(5f);
-        set2.setColor(Color.RED);
-        set2.setFillColor(getResources().getColor(R.color.account_red));
-
-        ArrayList<LineDataSet> dataSets = new ArrayList<LineDataSet>();
-        dataSets.add(set1);
-        dataSets.add(set2);
-
-        LineData data = new LineData(xValues, dataSets);
-
-        mChart.setData(data);
-    }
-
     private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
         TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
         for (AccountType type : accountTypeList) {

From 2c7d7d48db5b2f4e22f524aba4069e5aed99bdd8 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sun, 15 Mar 2015 21:11:22 +0200
Subject: [PATCH 09/32] Fixed: One or more of the DataSet Entry arrays are
 longer than the x-values array

---
 .../main/java/org/gnucash/android/ui/chart/LineChartActivity.java    | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index 3a110c39..eaaf71fe 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -81,12 +81,11 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     private void setData() {
-        //TODO comparing Joda dates with TIME!
         List<AccountType> accountTypes = Arrays.asList(AccountType.INCOME, AccountType.EXPENSE);
         setEarliestAndLatestTimestamps(accountTypes);
 
-        LocalDate startDate = new LocalDate(mEarliestTransactionTimestamp);
-        LocalDate endDate = new LocalDate(mLatestTransactionTimestamp);
+        LocalDate startDate = new LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1);
+        LocalDate endDate = new LocalDate(mLatestTransactionTimestamp).withDayOfMonth(1);
         ArrayList<String> xValues = new ArrayList<String>();
         while (!startDate.isAfter(endDate)) {
             xValues.add(startDate.toString(X_AXIS_PATTERN));

From c312963b6eb5bf24a62017db093fe18ec233af95 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 17 Mar 2015 21:41:14 +0200
Subject: [PATCH 10/32] Added view for no data

---
 .../android/ui/chart/LineChartActivity.java        | 50 ++++++++++++++--------
 1 file changed, 33 insertions(+), 17 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index eaaf71fe..bfe35610 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -62,28 +62,26 @@ protected void onCreate(Bundle savedInstanceState) {
 
         mChart = new LineChart(this);
         ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
-
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
-        // TEST THIS!!!
-        mChart.setNoDataTextDescription("You need to provide data for the chart.");
-
         mChart.getAxisRight().setEnabled(false);
+        mChart.setData(getDataSet(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE)));
 
-        setData();
-
-        Legend l = mChart.getLegend();
-        l.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
-        l.setForm(Legend.LegendForm.CIRCLE);
+        Legend legend = mChart.getLegend();
+        legend.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
+        legend.setForm(Legend.LegendForm.CIRCLE);
 
-        mChart.animateX(2500);
+        mChart.animateX(3000);
         mChart.invalidate();
     }
 
-    private void setData() {
-        List<AccountType> accountTypes = Arrays.asList(AccountType.INCOME, AccountType.EXPENSE);
+    private LineData getDataSet(List<AccountType> accountTypes) {
         setEarliestAndLatestTimestamps(accountTypes);
 
+        if (mEarliestTransactionTimestamp == 0 && mLatestTransactionTimestamp == 0) {
+            return getEmptyDataSet();
+        }
+
         LocalDate startDate = new LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1);
         LocalDate endDate = new LocalDate(mLatestTransactionTimestamp).withDayOfMonth(1);
         ArrayList<String> xValues = new ArrayList<String>();
@@ -97,16 +95,35 @@ private void setData() {
         for (AccountType accountType : accountTypes) {
             LineDataSet set = new LineDataSet(getEntryList(accountType), accountType.toString());
             set.setDrawFilled(true);
-            set.setDrawCircles(true);
-            set.setLineWidth(2f);
-            set.setCircleSize(5f);
             set.setColor(COLORS[dataSets.size()]);
             set.setFillColor(COLORS[dataSets.size()]);
 
             dataSets.add(set);
         }
 
-        mChart.setData(new LineData(xValues, dataSets));
+        return new LineData(xValues, dataSets);
+    }
+
+    private LineData getEmptyDataSet() {
+        ArrayList<String> xValues = new ArrayList<String>();
+        ArrayList<Entry> yValues = new ArrayList<Entry>();
+        for (int i = 0; i < 5; i++) {
+            xValues.add("");
+            yValues.add(new Entry(i % 2 == 0 ? 5f : 4.5f, i));
+        }
+        LineDataSet set = new LineDataSet(yValues, getResources().getString(R.string.label_chart_no_data));
+        set.setDrawFilled(true);
+        set.setDrawValues(false);
+        set.setColor(Color.GRAY);
+        set.setFillColor(Color.GRAY);
+
+        mChart.getAxisLeft().setAxisMaxValue(10);
+        mChart.getAxisLeft().setDrawLabels(false);
+        mChart.getXAxis().setDrawLabels(false);
+        mChart.setTouchEnabled(false);
+        ((TextView) findViewById(R.id.selected_chart_slice)).setText(getResources().getString(R.string.label_chart_no_data));
+
+        return new LineData(xValues, new ArrayList<LineDataSet>(Arrays.asList(set)));
     }
 
     private ArrayList<Entry> getEntryList(AccountType accountType) {
@@ -145,7 +162,6 @@ private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
             mLatestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfLatestTransaction(type));
         }
 
-        //TODO what if account has no transaction and list contain zero items
         List<Long> timestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
         timestamps.addAll(mLatestTimestampsMap.values());
         Collections.sort(timestamps);

From f2d9169d727fbf49a87f6a48843e8176fb9a5867 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Thu, 19 Mar 2015 18:44:14 +0200
Subject: [PATCH 11/32] Added bar chart

---
 app/src/main/AndroidManifest.xml                   |   1 +
 .../gnucash/android/ui/chart/BarChartActivity.java | 128 +++++++++++++++++++++
 .../android/ui/chart/ChartReportActivity.java      |   2 +-
 3 files changed, 130 insertions(+), 1 deletion(-)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java

diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index a368de55..e01592bc 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -80,6 +80,7 @@
         <activity android:name=".ui.chart.ChartReportActivity" />
         <activity android:name=".ui.chart.PieChartActivity" />
         <activity android:name=".ui.chart.LineChartActivity" />
+        <activity android:name=".ui.chart.BarChartActivity" />
         <service android:name=".service.SchedulerService"
             android:exported="false"
             android:label="GnuCash Android Scheduler Execution Service"/>
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
new file mode 100644
index 00000000..c0307d8a
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -0,0 +1,128 @@
+package org.gnucash.android.ui.chart;
+
+import android.graphics.Color;
+import android.os.Bundle;
+import android.util.Log;
+import android.widget.LinearLayout;
+
+import com.github.mikephil.charting.charts.BarChart;
+import com.github.mikephil.charting.components.Legend;
+import com.github.mikephil.charting.data.BarData;
+import com.github.mikephil.charting.data.BarDataSet;
+import com.github.mikephil.charting.data.BarEntry;
+import com.github.mikephil.charting.utils.LargeValueFormatter;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.model.Account;
+import org.gnucash.android.model.AccountType;
+import org.gnucash.android.ui.passcode.PassLockActivity;
+import org.joda.time.LocalDateTime;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ *
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ */
+public class BarChartActivity extends PassLockActivity {
+
+    private static final String TAG = "BarChartActivity";
+
+    private static final int[] COLORS = {
+            Color.rgb(104, 241, 175), Color.RED
+    };
+
+    private BarChart mChart;
+    private List<AccountType> mAccountTypeList;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        setContentView(R.layout.activity_line_chart);
+        super.onCreate(savedInstanceState);
+
+        mChart = new com.github.mikephil.charting.charts.BarChart(this);
+        ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
+        mChart.setDescription("");
+//        mChart.setValueFormatter(new LargeValueFormatter());
+        mChart.setDrawValuesForWholeStack(false);
+        mChart.setDrawBarShadow(false);
+//        XLabels xl  = mChart.getXLabels();
+//        xl.setCenterXLabelText(true);
+        mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter());
+        mChart.getAxisRight().setEnabled(false);
+
+//        mAccountTypeList = Arrays.asList(AccountType.EXPENSE, AccountType.INCOME);
+        mAccountTypeList = Arrays.asList(AccountType.INCOME, AccountType.EXPENSE);
+        setStackedData();
+
+        Legend l = mChart.getLegend();
+        l.setForm(Legend.LegendForm.SQUARE);
+        l.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
+
+        mChart.animateX(3000);
+        mChart.invalidate();
+    }
+
+    protected void setStackedData() {
+        AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
+
+        LocalDateTime start = new LocalDateTime().minusMonths(5).withDayOfMonth(1).withMillisOfDay(0);
+        LocalDateTime end = new LocalDateTime().withDayOfMonth(1).withMillisOfDay(0);
+        Log.w(TAG, "X AXIS START DATE: " + start.toString("dd MM yyyy"));
+        Log.w(TAG, "X AXIS END DATE: " + end.toString("dd MM yyyy"));
+
+        Map<AccountType, List<String>> accountUIDMap = new HashMap<AccountType, List<String>>();
+        for (AccountType accountType : mAccountTypeList) {
+            List<String> accountUIDList = new ArrayList<String>();
+
+            for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
+                if (account.getAccountType() == accountType && !account.isPlaceholderAccount()) {
+                    accountUIDList.add(account.getUID());
+
+                }
+                accountUIDMap.put(accountType, accountUIDList);
+            }
+        }
+
+        ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();
+        ArrayList<BarEntry> values = new ArrayList<BarEntry>();
+        ArrayList<String> xVals = new ArrayList<String>();
+        int z = 0;
+        while (!start.isAfter(end)) {
+            xVals.add(start.toString("MMM yy"));
+            Log.i(TAG, "xVals " + start.toString("MM yy"));
+
+
+            long startPeriod = start.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
+            long endPeriod = start.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
+
+            float stackedValues[] = new float[mAccountTypeList.size()];
+            int i = 0;
+            for (Map.Entry<AccountType, List<String>> entry : accountUIDMap.entrySet()) {
+                float balance = (float) mAccountsDbAdapter.getAccountsBalance(entry.getValue(), startPeriod, endPeriod).absolute().asDouble();
+                stackedValues[i++] = balance;
+                Log.w(TAG, entry.getKey() + "" + start.toString(" MMMM yyyy") + ", balance = " + balance);
+            }
+            values.add(new BarEntry(stackedValues, z));
+            z++;
+
+            start = start.plusMonths(1);
+        }
+
+        BarDataSet set = new BarDataSet(values, "");
+//        set.setValueFormatter();
+        set.setStackLabels(new String[] { AccountType.INCOME.toString(), AccountType.EXPENSE.toString() });
+        set.setColors(COLORS);
+
+        dataSets.add(set);
+
+        BarData bd = new BarData(xVals, dataSets);
+        mChart.setData(bd);
+    }
+
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
index 7e2dd79c..6da14de5 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
@@ -34,7 +34,7 @@ public void onClick(View view) {
         findViewById(R.id.bar_chart_button).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-//                startActivity(new Intent(view.getContext(), BarChartActivity.class));
+                startActivity(new Intent(view.getContext(), BarChartActivity.class));
             }
         });
 

From 16a11a4488ed3dc233ea30e8ced4cc5bc37bf586 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Fri, 20 Mar 2015 20:51:15 +0200
Subject: [PATCH 12/32] Fixed bar char x-axis

---
 .../gnucash/android/ui/chart/BarChartActivity.java | 30 +++++++++++++++++++---
 1 file changed, 26 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index c0307d8a..ee0cf317 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -14,6 +14,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.ui.passcode.PassLockActivity;
@@ -21,6 +22,7 @@
 
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -32,6 +34,7 @@
 public class BarChartActivity extends PassLockActivity {
 
     private static final String TAG = "BarChartActivity";
+    private static final String X_AXIS_PATTERN = "MMM YY";
 
     private static final int[] COLORS = {
             Color.rgb(104, 241, 175), Color.RED
@@ -39,6 +42,10 @@
 
     private BarChart mChart;
     private List<AccountType> mAccountTypeList;
+    private Map<AccountType, Long> mEarliestTimestampsMap = new HashMap<AccountType, Long>();
+    private Map<AccountType, Long> mLatestTimestampsMap = new HashMap<AccountType, Long>();
+    private long mEarliestTransactionTimestamp;
+    private long mLatestTransactionTimestamp;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -71,8 +78,10 @@ protected void onCreate(Bundle savedInstanceState) {
     protected void setStackedData() {
         AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
-        LocalDateTime start = new LocalDateTime().minusMonths(5).withDayOfMonth(1).withMillisOfDay(0);
-        LocalDateTime end = new LocalDateTime().withDayOfMonth(1).withMillisOfDay(0);
+        setEarliestAndLatestTimestamps(mAccountTypeList);
+
+        LocalDateTime start = new LocalDateTime(mEarliestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
+        LocalDateTime end = new LocalDateTime(mLatestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
         Log.w(TAG, "X AXIS START DATE: " + start.toString("dd MM yyyy"));
         Log.w(TAG, "X AXIS END DATE: " + end.toString("dd MM yyyy"));
 
@@ -94,10 +103,9 @@ protected void setStackedData() {
         ArrayList<String> xVals = new ArrayList<String>();
         int z = 0;
         while (!start.isAfter(end)) {
-            xVals.add(start.toString("MMM yy"));
+            xVals.add(start.toString(X_AXIS_PATTERN));
             Log.i(TAG, "xVals " + start.toString("MM yy"));
 
-
             long startPeriod = start.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
             long endPeriod = start.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
 
@@ -125,4 +133,18 @@ protected void setStackedData() {
         mChart.setData(bd);
     }
 
+    private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
+        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        for (AccountType type : accountTypeList) {
+            mEarliestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfEarliestTransaction(type));
+            mLatestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfLatestTransaction(type));
+        }
+
+        List<Long> timestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
+        timestamps.addAll(mLatestTimestampsMap.values());
+        Collections.sort(timestamps);
+        mEarliestTransactionTimestamp = timestamps.get(0);
+        mLatestTransactionTimestamp = timestamps.get(timestamps.size() - 1);
+    }
+
 }

From 588398b7660770e72ba955ee2af0bc8b0b3e17d3 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Fri, 20 Mar 2015 21:27:17 +0200
Subject: [PATCH 13/32] Ability to select bar char's stack

---
 .../gnucash/android/ui/chart/BarChartActivity.java    | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index ee0cf317..fb0d825f 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -4,12 +4,16 @@
 import android.os.Bundle;
 import android.util.Log;
 import android.widget.LinearLayout;
+import android.widget.TextView;
 
 import com.github.mikephil.charting.charts.BarChart;
 import com.github.mikephil.charting.components.Legend;
 import com.github.mikephil.charting.data.BarData;
 import com.github.mikephil.charting.data.BarDataSet;
 import com.github.mikephil.charting.data.BarEntry;
+import com.github.mikephil.charting.data.Entry;
+import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
+import com.github.mikephil.charting.utils.Highlight;
 import com.github.mikephil.charting.utils.LargeValueFormatter;
 
 import org.gnucash.android.R;
@@ -31,7 +35,7 @@
  *
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-public class BarChartActivity extends PassLockActivity {
+public class BarChartActivity extends PassLockActivity implements OnChartValueSelectedListener {
 
     private static final String TAG = "BarChartActivity";
     private static final String X_AXIS_PATTERN = "MMM YY";
@@ -54,6 +58,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         mChart = new com.github.mikephil.charting.charts.BarChart(this);
         ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
+        mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
 //        mChart.setValueFormatter(new LargeValueFormatter());
         mChart.setDrawValuesForWholeStack(false);
@@ -147,4 +152,16 @@ private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
         mLatestTransactionTimestamp = timestamps.get(timestamps.size() - 1);
     }
 
+    @Override
+    public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
+        if (e == null) return;
+        ((TextView) findViewById(R.id.selected_chart_slice))
+                .setText(mChart.getData().getXVals().get(e.getXIndex()) + " - " + e.getVal()
+                        + " (" + String.format("%.2f", (e.getVal() / mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum()) * 100) + " %)");
+    }
+
+    @Override
+    public void onNothingSelected() {
+        ((TextView) findViewById(R.id.selected_chart_slice)).setText("");
+    }
 }

From 738e2b38289c4b62450d0365e9127f1ac1fb2bbe Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 21 Mar 2015 15:06:00 +0200
Subject: [PATCH 14/32] Fixed percentage calculation

---
 .../main/java/org/gnucash/android/ui/chart/BarChartActivity.java | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index fb0d825f..0bfe00d0 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -39,6 +39,7 @@
 
     private static final String TAG = "BarChartActivity";
     private static final String X_AXIS_PATTERN = "MMM YY";
+    private static final String SELECTED_VALUE_PATTERN = "%s : %.2f (%.2f %%)";
 
     private static final int[] COLORS = {
             Color.rgb(104, 241, 175), Color.RED
@@ -155,9 +156,11 @@ private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
     @Override
     public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         if (e == null) return;
-        ((TextView) findViewById(R.id.selected_chart_slice))
-                .setText(mChart.getData().getXVals().get(e.getXIndex()) + " - " + e.getVal()
-                        + " (" + String.format("%.2f", (e.getVal() / mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum()) * 100) + " %)");
+        BarEntry entry = (BarEntry) e;
+        String label = mChart.getData().getXVals().get(entry.getXIndex());
+        double value = entry.getVals()[h.getStackIndex()];
+        double percent = value / mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum() * 100;
+        ((TextView) findViewById(R.id.selected_chart_slice)).setText(String.format(SELECTED_VALUE_PATTERN, label, value, percent));
     }
 
     @Override

From 881a1a04d232098ef936a04ff3613c1f98d222a5 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sun, 22 Mar 2015 20:06:05 +0200
Subject: [PATCH 15/32] Added options menu

---
 .../gnucash/android/ui/chart/BarChartActivity.java | 42 +++++++++++++++++++---
 .../android/ui/chart/LineChartActivity.java        | 24 +++++++++++++
 .../gnucash/android/ui/chart/PieChartActivity.java |  4 ++-
 .../{pie_chart_actions.xml => chart_actions.xml}   |  4 +++
 app/src/main/res/values/strings.xml                |  3 ++
 5 files changed, 72 insertions(+), 5 deletions(-)
 rename app/src/main/res/menu/{pie_chart_actions.xml => chart_actions.xml} (87%)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index 0bfe00d0..8254344c 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -5,7 +5,10 @@
 import android.util.Log;
 import android.widget.LinearLayout;
 import android.widget.TextView;
+import android.widget.Toast;
 
+import com.actionbarsherlock.view.Menu;
+import com.actionbarsherlock.view.MenuItem;
 import com.github.mikephil.charting.charts.BarChart;
 import com.github.mikephil.charting.components.Legend;
 import com.github.mikephil.charting.data.BarData;
@@ -39,7 +42,7 @@
 
     private static final String TAG = "BarChartActivity";
     private static final String X_AXIS_PATTERN = "MMM YY";
-    private static final String SELECTED_VALUE_PATTERN = "%s : %.2f (%.2f %%)";
+    private static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
 
     private static final int[] COLORS = {
             Color.rgb(104, 241, 175), Color.RED
@@ -51,6 +54,8 @@
     private Map<AccountType, Long> mLatestTimestampsMap = new HashMap<AccountType, Long>();
     private long mEarliestTransactionTimestamp;
     private long mLatestTransactionTimestamp;
+    private boolean mTotalPercentageMode = true;
+
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -74,7 +79,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setStackedData();
 
         Legend l = mChart.getLegend();
-        l.setForm(Legend.LegendForm.SQUARE);
+        l.setForm(Legend.LegendForm.CIRCLE);
         l.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
 
         mChart.animateX(3000);
@@ -154,13 +159,42 @@ private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
     }
 
     @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getSupportMenuInflater().inflate(R.menu.chart_actions, menu);
+        // hide pie and bar chart specific menu items
+        menu.findItem(R.id.menu_order_by_size).setVisible(false);
+        menu.findItem(R.id.menu_toggle_labels).setVisible(false);
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case R.id.menu_toggle_legend: {
+                mChart.getLegend().setEnabled(!mChart.getLegend().isEnabled());
+                mChart.invalidate();
+                break;
+            }
+            case R.id.menu_percentage_mode: {
+                mTotalPercentageMode = !mTotalPercentageMode;
+                int msgId = mTotalPercentageMode ? R.string.toast_chart_percentage_mode_total
+                        : R.string.toast_chart_percentage_mode_current_bar;
+                Toast.makeText(this, msgId, Toast.LENGTH_LONG).show();
+                break;
+            }
+        }
+        return true;
+    }
+
+    @Override
     public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         if (e == null) return;
         BarEntry entry = (BarEntry) e;
         String label = mChart.getData().getXVals().get(entry.getXIndex());
         double value = entry.getVals()[h.getStackIndex()];
-        double percent = value / mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum() * 100;
-        ((TextView) findViewById(R.id.selected_chart_slice)).setText(String.format(SELECTED_VALUE_PATTERN, label, value, percent));
+        double sum = mTotalPercentageMode ? mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum() : entry.getVal();
+        ((TextView) findViewById(R.id.selected_chart_slice))
+                .setText(String.format(SELECTED_VALUE_PATTERN, label, value, value / sum * 100));
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index bfe35610..a5dce784 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -6,6 +6,8 @@
 import android.widget.LinearLayout;
 import android.widget.TextView;
 
+import com.actionbarsherlock.view.Menu;
+import com.actionbarsherlock.view.MenuItem;
 import com.github.mikephil.charting.charts.LineChart;
 import com.github.mikephil.charting.components.Legend;
 import com.github.mikephil.charting.data.Entry;
@@ -177,6 +179,28 @@ private int getXAxisOffset(AccountType accountType) {
     }
 
     @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getSupportMenuInflater().inflate(R.menu.chart_actions, menu);
+        // hide pie chart specific menu items
+        menu.findItem(R.id.menu_order_by_size).setVisible(false);
+        menu.findItem(R.id.menu_toggle_labels).setVisible(false);
+        menu.findItem(R.id.menu_percentage_mode).setVisible(false);
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case R.id.menu_toggle_legend: {
+                mChart.getLegend().setEnabled(!mChart.getLegend().isEnabled());
+                mChart.invalidate();
+                break;
+            }
+        }
+        return true;
+    }
+
+    @Override
     public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         if (e == null) return;
         ((TextView) findViewById(R.id.selected_chart_slice))
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index 8fd74d8e..2171ea53 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -284,7 +284,9 @@ public void onNothingSelected(AdapterView<?> adapterView) {}
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
-        getSupportMenuInflater().inflate(R.menu.pie_chart_actions, menu);
+        getSupportMenuInflater().inflate(R.menu.chart_actions, menu);
+        // hide bar chart specific menu items
+        menu.findItem(R.id.menu_percentage_mode).setVisible(false);
         return true;
     }
 
diff --git a/app/src/main/res/menu/pie_chart_actions.xml b/app/src/main/res/menu/chart_actions.xml
similarity index 87%
rename from app/src/main/res/menu/pie_chart_actions.xml
rename to app/src/main/res/menu/chart_actions.xml
index df31ca7f..cca7a7ca 100644
--- a/app/src/main/res/menu/pie_chart_actions.xml
+++ b/app/src/main/res/menu/chart_actions.xml
@@ -29,4 +29,8 @@
           android:title="@string/menu_toggle_labels"
           android:showAsAction="never" />
 
+    <item android:id="@+id/menu_percentage_mode"
+          android:title="@string/menu_toggle_percentage_mode"
+          android:showAsAction="never" />
+
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index d6aba07a..8c4477a5 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -442,7 +442,10 @@
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>
+    <string name="menu_toggle_percentage_mode">Toggle percentage</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+    <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>

From 675e9bfbc6d6aec3a3d7361a9b21d43fd9a2ebe6 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 24 Mar 2015 14:01:03 +0200
Subject: [PATCH 16/32] Recalculate earliest and latest timestamps when one of
 account types has no data

---
 .../gnucash/android/ui/chart/BarChartActivity.java | 27 +++++++++++++++++-----
 .../android/ui/chart/LineChartActivity.java        | 22 ++++++++++++++----
 2 files changed, 38 insertions(+), 11 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index 8254344c..6163529a 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -44,9 +44,7 @@
     private static final String X_AXIS_PATTERN = "MMM YY";
     private static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
 
-    private static final int[] COLORS = {
-            Color.rgb(104, 241, 175), Color.RED
-    };
+    private static final int[] COLORS = { Color.rgb(104, 241, 175), Color.RED };
 
     private BarChart mChart;
     private List<AccountType> mAccountTypeList;
@@ -75,7 +73,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mChart.getAxisRight().setEnabled(false);
 
 //        mAccountTypeList = Arrays.asList(AccountType.EXPENSE, AccountType.INCOME);
-        mAccountTypeList = Arrays.asList(AccountType.INCOME, AccountType.EXPENSE);
+        mAccountTypeList = new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE));
         setStackedData();
 
         Legend l = mChart.getLegend();
@@ -91,6 +89,20 @@ protected void setStackedData() {
 
         setEarliestAndLatestTimestamps(mAccountTypeList);
 
+        if (mEarliestTransactionTimestamp == 0) {
+            if (mLatestTransactionTimestamp == 0) {
+                Log.w(TAG, "empty bar chart");
+                return;
+            }
+            for (Map.Entry<AccountType, Long> entry : mEarliestTimestampsMap.entrySet()) {
+                if (entry.getValue() == 0) {
+                    mAccountTypeList.remove(entry.getKey());
+                }
+            }
+            Log.d(TAG, mAccountTypeList.toString());
+            setEarliestAndLatestTimestamps(mAccountTypeList);
+        }
+
         LocalDateTime start = new LocalDateTime(mEarliestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
         LocalDateTime end = new LocalDateTime(mLatestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
         Log.w(TAG, "X AXIS START DATE: " + start.toString("dd MM yyyy"));
@@ -135,8 +147,9 @@ protected void setStackedData() {
 
         BarDataSet set = new BarDataSet(values, "");
 //        set.setValueFormatter();
-        set.setStackLabels(new String[] { AccountType.INCOME.toString(), AccountType.EXPENSE.toString() });
-        set.setColors(COLORS);
+        // conversion enum list to string array
+        set.setStackLabels(mAccountTypeList.toString().substring(1, mAccountTypeList.toString().length() - 1).split(", "));
+        set.setColors(Arrays.copyOfRange(COLORS, 0, mAccountTypeList.size()));
 
         dataSets.add(set);
 
@@ -146,6 +159,8 @@ protected void setStackedData() {
 
     private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
         TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        mEarliestTimestampsMap.clear();
+        mLatestTimestampsMap.clear();
         for (AccountType type : accountTypeList) {
             mEarliestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfEarliestTransaction(type));
             mLatestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfLatestTransaction(type));
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index a5dce784..83ca262b 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -67,7 +67,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
         mChart.getAxisRight().setEnabled(false);
-        mChart.setData(getDataSet(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE)));
+        mChart.setData(getDataSet(new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
 
         Legend legend = mChart.getLegend();
         legend.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
@@ -80,8 +80,17 @@ protected void onCreate(Bundle savedInstanceState) {
     private LineData getDataSet(List<AccountType> accountTypes) {
         setEarliestAndLatestTimestamps(accountTypes);
 
-        if (mEarliestTransactionTimestamp == 0 && mLatestTransactionTimestamp == 0) {
-            return getEmptyDataSet();
+        if (mEarliestTransactionTimestamp == 0) {
+            if (mLatestTransactionTimestamp == 0) {
+                return getEmptyDataSet();
+            }
+            for (Map.Entry<AccountType, Long> entry : mEarliestTimestampsMap.entrySet()) {
+                if (entry.getValue() == 0) {
+                    accountTypes.remove(entry.getKey());
+                }
+            }
+            Log.w(TAG, accountTypes.toString());
+            setEarliestAndLatestTimestamps(accountTypes);
         }
 
         LocalDate startDate = new LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1);
@@ -138,8 +147,8 @@ private LineData getEmptyDataSet() {
 
         LocalDateTime earliest = new LocalDateTime(mEarliestTimestampsMap.get(accountType));
         LocalDateTime latest = new LocalDateTime(mLatestTimestampsMap.get(accountType));
-        Log.d(TAG, "Earliest " + accountType + "date " + earliest.toString("dd MM yyyy"));
-        Log.d(TAG, "Latest " + accountType + "date " + latest.toString("dd MM yyyy"));
+        Log.d(TAG, "Earliest " + accountType + " date " + earliest.toString("dd MM yyyy"));
+        Log.d(TAG, "Latest " + accountType + " date " + latest.toString("dd MM yyyy"));
         int months = Months.monthsBetween(earliest.withDayOfMonth(1).withMillisOfDay(0),
                 latest.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
 
@@ -159,6 +168,8 @@ private LineData getEmptyDataSet() {
 
     private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
         TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        mEarliestTimestampsMap.clear();
+        mLatestTimestampsMap.clear();
         for (AccountType type : accountTypeList) {
             mEarliestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfEarliestTransaction(type));
             mLatestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfLatestTransaction(type));
@@ -167,6 +178,7 @@ private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
         List<Long> timestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
         timestamps.addAll(mLatestTimestampsMap.values());
         Collections.sort(timestamps);
+        Log.d(TAG, "X-axis timestamps list: " + timestamps.toString());
         mEarliestTransactionTimestamp = timestamps.get(0);
         mLatestTransactionTimestamp = timestamps.get(timestamps.size() - 1);
     }

From 5319a8206dc22d8c5b0284660c8ed5704e3208ca Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 24 Mar 2015 15:36:53 +0200
Subject: [PATCH 17/32] Fixed bar chart crash when only one stack available

---
 app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index 6163529a..0e47963e 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -206,7 +206,7 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         if (e == null) return;
         BarEntry entry = (BarEntry) e;
         String label = mChart.getData().getXVals().get(entry.getXIndex());
-        double value = entry.getVals()[h.getStackIndex()];
+        double value = entry.getVals()[ h.getStackIndex() == -1 ? 0 : h.getStackIndex() ];
         double sum = mTotalPercentageMode ? mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum() : entry.getVal();
         ((TextView) findViewById(R.id.selected_chart_slice))
                 .setText(String.format(SELECTED_VALUE_PATTERN, label, value, value / sum * 100));

From 9cc53a0bf8a4199bd7bd5d127bc608f8a038d5ca Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 25 Mar 2015 19:08:36 +0200
Subject: [PATCH 18/32] Added no data view for bar chart

---
 .../gnucash/android/ui/chart/BarChartActivity.java | 31 +++++++++++++++++-----
 1 file changed, 25 insertions(+), 6 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index 0e47963e..b1ea00d5 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -74,7 +74,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
 //        mAccountTypeList = Arrays.asList(AccountType.EXPENSE, AccountType.INCOME);
         mAccountTypeList = new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE));
-        setStackedData();
+        mChart.setData(getDataSet());
 
         Legend l = mChart.getLegend();
         l.setForm(Legend.LegendForm.CIRCLE);
@@ -84,15 +84,14 @@ protected void onCreate(Bundle savedInstanceState) {
         mChart.invalidate();
     }
 
-    protected void setStackedData() {
+    private BarData getDataSet() {
         AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
         setEarliestAndLatestTimestamps(mAccountTypeList);
 
         if (mEarliestTransactionTimestamp == 0) {
             if (mLatestTransactionTimestamp == 0) {
-                Log.w(TAG, "empty bar chart");
-                return;
+                return getEmptyDataSet();
             }
             for (Map.Entry<AccountType, Long> entry : mEarliestTimestampsMap.entrySet()) {
                 if (entry.getValue() == 0) {
@@ -153,8 +152,28 @@ protected void setStackedData() {
 
         dataSets.add(set);
 
-        BarData bd = new BarData(xVals, dataSets);
-        mChart.setData(bd);
+        return new BarData(xVals, dataSets);
+    }
+
+    private BarData getEmptyDataSet() {
+        ArrayList<String> xValues = new ArrayList<String>();
+        ArrayList<BarEntry> yValues = new ArrayList<BarEntry>();
+        for (int i = 0; i < 3; i++) {
+            xValues.add("");
+            yValues.add(new BarEntry(i % 2 == 0 ? 5f : 4.5f, i));
+        }
+        String noDataMsg = getResources().getString(R.string.label_chart_no_data);
+        BarDataSet set = new BarDataSet(yValues, noDataMsg);
+        set.setDrawValues(false);
+        set.setColor(Color.GRAY);
+
+        mChart.getAxisLeft().setAxisMaxValue(10);
+        mChart.getAxisLeft().setDrawLabels(false);
+        mChart.getXAxis().setDrawLabels(false);
+        mChart.setTouchEnabled(false);
+        ((TextView) findViewById(R.id.selected_chart_slice)).setText(noDataMsg);
+
+        return new BarData(xValues, new ArrayList<BarDataSet>(Arrays.asList(set)));
     }
 
     private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {

From 11427aad35a802a3683edef8681a1ed8e9427a59 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Thu, 26 Mar 2015 21:13:14 +0200
Subject: [PATCH 19/32] Hide some specific menu items when no data available

---
 .../java/org/gnucash/android/ui/chart/BarChartActivity.java  | 12 ++++++++++--
 .../java/org/gnucash/android/ui/chart/LineChartActivity.java |  7 ++++++-
 .../java/org/gnucash/android/ui/chart/PieChartActivity.java  | 10 ++++++++++
 3 files changed, 26 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index b1ea00d5..4e9e206e 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -53,7 +53,7 @@
     private long mEarliestTransactionTimestamp;
     private long mLatestTransactionTimestamp;
     private boolean mTotalPercentageMode = true;
-
+    private boolean mChartDataPresent = true;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -156,6 +156,8 @@ private BarData getDataSet() {
     }
 
     private BarData getEmptyDataSet() {
+        mChartDataPresent = false;
+
         ArrayList<String> xValues = new ArrayList<String>();
         ArrayList<BarEntry> yValues = new ArrayList<BarEntry>();
         for (int i = 0; i < 3; i++) {
@@ -165,7 +167,7 @@ private BarData getEmptyDataSet() {
         String noDataMsg = getResources().getString(R.string.label_chart_no_data);
         BarDataSet set = new BarDataSet(yValues, noDataMsg);
         set.setDrawValues(false);
-        set.setColor(Color.GRAY);
+        set.setColor(Color.LTGRAY);
 
         mChart.getAxisLeft().setAxisMaxValue(10);
         mChart.getAxisLeft().setDrawLabels(false);
@@ -195,6 +197,12 @@ private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getSupportMenuInflater().inflate(R.menu.chart_actions, menu);
+        return true;
+    }
+
+    @Override
+    public boolean onPrepareOptionsMenu(Menu menu) {
+        menu.findItem(R.id.menu_percentage_mode).setVisible(mChartDataPresent);
         // hide pie and bar chart specific menu items
         menu.findItem(R.id.menu_order_by_size).setVisible(false);
         menu.findItem(R.id.menu_toggle_labels).setVisible(false);
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index 83ca262b..a2bb961e 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -193,7 +193,12 @@ private int getXAxisOffset(AccountType accountType) {
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getSupportMenuInflater().inflate(R.menu.chart_actions, menu);
-        // hide pie chart specific menu items
+        return true;
+    }
+
+    @Override
+    public boolean onPrepareOptionsMenu(Menu menu) {
+        // hide pie and bar chart specific menu items
         menu.findItem(R.id.menu_order_by_size).setVisible(false);
         menu.findItem(R.id.menu_toggle_labels).setVisible(false);
         menu.findItem(R.id.menu_percentage_mode).setVisible(false);
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index 2171ea53..b0d9f193 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -92,6 +92,8 @@
 
     private AccountType mAccountType = AccountType.EXPENSE;
 
+    private boolean mChartDataPresent = true;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
@@ -185,6 +187,7 @@ private void setData(boolean forCurrentMonth) {
         }
 
         if (dataSet.getEntryCount() == 0) {
+            mChartDataPresent = false;
             dataSet.addEntry(new Entry(1, 0));
             dataSet.setColor(Color.LTGRAY);
             dataSet.setDrawValues(false);
@@ -192,6 +195,7 @@ private void setData(boolean forCurrentMonth) {
             mChart.setCenterText(getResources().getString(R.string.label_chart_no_data));
             mChart.setTouchEnabled(false);
         } else {
+            mChartDataPresent = true;
             mChart.setCenterText(getResources().getString(R.string.label_chart_total) + dataSet.getYValueSum());
             mChart.setTouchEnabled(true);
         }
@@ -285,6 +289,12 @@ public void onNothingSelected(AdapterView<?> adapterView) {}
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getSupportMenuInflater().inflate(R.menu.chart_actions, menu);
+        return true;
+    }
+    @Override
+    public boolean onPrepareOptionsMenu(Menu menu) {
+        menu.findItem(R.id.menu_order_by_size).setVisible(mChartDataPresent);
+        menu.findItem(R.id.menu_toggle_labels).setVisible(mChartDataPresent);
         // hide bar chart specific menu items
         menu.findItem(R.id.menu_percentage_mode).setVisible(false);
         return true;

From bda330605bc3868f49534ff382f1d8e7f8775a5d Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 28 Mar 2015 21:32:23 +0200
Subject: [PATCH 20/32] Added icons

---
 app/src/main/res/drawable-xhdpi/chart_bar_button.png  | Bin 0 -> 774 bytes
 app/src/main/res/drawable-xhdpi/chart_line_button.png | Bin 0 -> 2053 bytes
 app/src/main/res/drawable-xhdpi/chart_pie_button.png  | Bin 0 -> 2069 bytes
 app/src/main/res/layout/activity_chart_report.xml     |  12 ++++++------
 4 files changed, 6 insertions(+), 6 deletions(-)
 create mode 100644 app/src/main/res/drawable-xhdpi/chart_bar_button.png
 create mode 100644 app/src/main/res/drawable-xhdpi/chart_line_button.png
 create mode 100644 app/src/main/res/drawable-xhdpi/chart_pie_button.png

diff --git a/app/src/main/res/drawable-xhdpi/chart_bar_button.png b/app/src/main/res/drawable-xhdpi/chart_bar_button.png
new file mode 100644
index 0000000000000000000000000000000000000000..f75cc0d3a9b2b554512ba6a8a92b3cd0924cf41a
GIT binary patch
literal 774
zcmeAS@N?(olHy`uVBq!ia0vp^WkB4(!2%>pQbXqfDVB6cUq=Rpjs4tz5?O(Kg=CK)
zUj~LMHK4i{28LfC^)DD0N(~qoUL`OvSj}Ky5HFasE6@fg!Ib3f?!v&Zs#n<v$Wiok
zaSW-r^>(hIpNye|+x)%VE*=6RD(oGXmY)&5^ju<2V^_3--y|bn6|Sxr1zq1MTeQoL
zX_hgIZ1^B;*}ebgy=|{Aen0kD^5nex%*STT^SI3?a4vdw#htP*|9$*zXKToO>`OH$
zRV+Sxe&4S$zBxe=1}$~oT;Y2nWf!OmO*pyGEcNa>>zkoJg#P^hwdsA}wqJcRyA`aC
zZ(0=*CVF~RQe>#k>aNt#jcc@~g&qY7PW3#wZMK*18Leo(gOv}(6`~`|tiN?n@)fyP
z<g{yUZ@rT8ddtU6cakJm&3&VI{K<wllPvH5n)Fw^=2(Q{?TjParp}#wQuMXa*=s%O
zUtb`MMYk(8Xw&MISALy5omRZ(ZOZPhKQT9*%d}gBx$E+y71XSgAI#DJ!>MP;C-Y(I
z`P{J7sFO^4n7$p})VVkJ`1*;uSEjI)nqSL*f9&F=1upTa-9B$DvoU;vZY9`zxCD&?
zZ=SpNoxdQtY`cO|*d`;R>Lo`#xZZy;-Sl&dcmj`_?(4_*G&@%O<U03EY^KP)m)e_m
zo_Q4MDcpJJ_^N)(vp<hMWuC}YU9)NhpXQqn&Dxi2|IXIf^PKs*==`}+ALc5~S(YC5
zd_`KcWkt@M>+e=r=1FYb>NzuFzm)R9c#$b3p|VpRsRNUaYKdz^NlIc#s#S7PDv)9@
zGB7mNH89dOGzl>@wK6uhGBnXOFtai+P?MUMjiMnpKP5A*61RqMceU$44Gf;HelF{r
G5}E*Q#YWEn

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/chart_line_button.png b/app/src/main/res/drawable-xhdpi/chart_line_button.png
new file mode 100644
index 0000000000000000000000000000000000000000..3658a14cd28f2988ecf3d37c5f0291df4c2a02ce
GIT binary patch
literal 2053
zcmZ{leKgaHAIHBejD8psnJA1f^Dq>%T~G5cv<i)oHIJ8JHj8A1EDuXY9+FZX;+DtF
z!;puY%|xk7Odg^*mAVnGQsn;b-S79`@0|Plob&m-&*yy3>wG?+b3W&Ma!(N46%}9#
z001cBJ#an}O_6vyc#kAriC2P3L^{;V9R~pQ*Yr`6Og_QmbfQE({_Acdl%D`V4vNP)
z`JJC#y`6gB&-K7#hh-YITv_d@w^ySn0zTnW&_3AeSYz}gFR#Gk`miU;+Zk@6YJ&H}
zxtI!3xe6#xwjNT%{011TR+W|pW^q1YIi$4FnVxSSKaW0txDe65`BKoA`rdx?&r8d+
zNc98%WV4FBp8l2Ijk~gu&TPMj&hP59_#cLWUpEf=X-Kn*VX`!&hObcNQn-Hh#(G0r
zC#cfuc-!6)PxiVwmA((+cSa5>tv{1la9uURK-V?rygJOT*90Q{O+_CESL|!NfYx&h
z$mjTD@438*4E0$uWNfw{*EPL7<TQ0>5p-ky@QcQ@Tcuz!v$i2dPG>Ab(L)P+8zC=H
zdj5cMF76Oe8qsGYgFk+san8#f>}}5GR_}(?B4RVwZQ)vMg%UM#a&1E}jCmHwRv08s
z(5qjRn91mj-9*ZSHALqk&aC=CfHk#`OTAo<-^1DW;Ed&VFk(B+|0DZ`^Y?h9vR7of
z9lv1-3Msz0qXU4pj~3Mv9)#ue#aNTdJNbT{U*R8yl*@Uwrd&aMPo_IHi?08Y=Csv)
zfZ})XyW@nYyCg9!s7VLtD;qH+gp)4ieZ{yY9~v$fsyn}ti4%CLKw;=#aDtyKN@_G`
ztZ&KJg5}D*9ozbTxi0^@1sN@N{4MG)5{k@$5%u7>K}FhiRcN7JZ0H_7TnBKmt<w%t
z5&Q@UMErPU!rCDs3d8$0j%ZZ9=$(wJcx+Zv6)ks$*V?TqZLT+YcPqnEkTzNgs`Uug
z`~a<)MhnCNG}=Z#8xKjM+rL*;&hY<ND8i`=gfN@hJXOBUv;kQZo(FrQ@|rZ0z&{+7
zlVY|#?RxU<7_QWHh4jTqP0<wHRLT3G*0498c@S!4BC?&6GkdF1Gd(-p9dNbDPL@?N
zD1OtC|LLTv!^JBYjCB8)`nk&q1y8vs>no2kW&2~yHdvxB_X-AG&h{s5*2|AKNw6wK
zsMlt-Y>N;>@R*ZK<*xWeO&3GX<|==A8x=?DSb#p6nbSP>DbpW#g~P=_g0Aw^gLLk~
z9(Kj$?rr$szB%wzZm0ElPf8f8<pFQ=-^P1F+B~{=gB;7N`EM&$r8*jgaQ;>#G#J4;
zRtFM|6Cg>6{)RO1Yp?cOM-6K46ei)~(As0PBsMoI!%=blUdA0g)`(=V5ZMVSXw*w9
zPGEf1bTZ_a{IBuZ-0bY%mSvmbO*XJAFQ<H2+@UGTCZsIc4ZI9*el0ZFdm$9b*Qvtr
z#7CsC0%L)E78%KRJJEvGwrw+TE6eGa{$05CVTc$wRYnQXW8GMVY^{U0eS#+03Ct{p
ziY}8?t54A7LW<_=Kr4qFDoi`?rB&Nc5k<c3@(rG^Kp3IJ+q$B6CdPu3%>#k4*HFQt
zQMYGzFYv63&UfFgpoDnwB3jwG5MmW`-x5gpJ!>~4XI@ozwAE!=SX0^|>72*y8#hde
zxBL#I^43<s<XUZfgZb&aievPS{VM{m+k<s&VJswLC@}Vz*s#$wA*uo8JBRsmJAF6A
zBig{pb`Y??*r=3l=*F`t;xkL;-fIfK-5m6y@nPQ{OLpDahXH2Mi~D3|gY9~<9vm<`
zxuhas*t5h^V^quBre}<5ZcA}nYHQB^i2;OjK$d7auzq!E&my(CvMb`&4ZBneQsL{p
z<CKN345R9ltBzpr3ByLFjk@;Dcd{)TyX=KGC5LtkSF-|jnL$FH9QG!*$u+<U-wSQC
z3u$lj^$B&;!ZeAKvY*=itQPdt;_In`iW_O>MX^;;?qJT0?uwN5jHICD`NygFb(n}a
znNq~JA#%85N@TG+RdV4{X0?7K<EU)!#g-!mcTRA)<zowxA-v_OTRSG?yjr6F^Unj!
z>c&oSxY08L%mBPbS0d8Uz)&bZD)!^Nj-&7i1wsk5Zsy*_2lUR0Us~`N9=%{xN_7uV
zZ1+wN>E<UEW0}J)jDg=}`rpk~=c`Qlc-b}QzF)9TWz;Ay`xaeno$hkEKT(aCiRSbd
zuSK37ds|FB`(t#iq1>hDp|hRBTy?yBOK`GUXUvYRbJ^v->3V>EIQHt{-pY$mH_Fd!
zmHu`c?fVA^F`_Bzm%4dU&b;qEt}n~?mE(3;!%D#EaHa^XJn{TYV*>SLu|BI??6lwc
zhz49+mzhPvI*<|$(`V1c<caj<qd?MU&En?sPp~*v#U?pT80O@svMyKBV;uN#T*Y~8
zY9-NlqBSfQzXgTUw)#WuGw;{y#Cz}1OB1@rjVid;Mka|`i$h-RYE@d9-Pb=4u7n}%
z@f#WKFT|!AfeRGl*Q=8X0?LM+!&aSmu1D#gY<16Hpm7EPCmZ>3MDiyM7_I?~a55tT
z9Y&9k2!OJ%v_V>+kd`)nmbPe1YqXUO!omV=VL^$QC;Sf(M-7jTO!@x+%r@c=31IY}
z4v9%o=umQE1o9j`8i<UJjX;~5n=|4P%;U&W(P0$iDN^#$a5}?kv)o=)!T@+z0<PKl
H?B%}!<42E`

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/chart_pie_button.png b/app/src/main/res/drawable-xhdpi/chart_pie_button.png
new file mode 100644
index 0000000000000000000000000000000000000000..97fa0dc357c02874666d5168b9a211ff1c91cbee
GIT binary patch
literal 2069
zcmZ{lYdjNt8^@=coI(_dR1P^zGmO#X*k<Oi=9trHb6AdPSSaq0ipWaCgpej?6hmr=
zh{&PBoN~^(5k=%U_j;aJ&x_~9_4|JQpX>Tw*UNu028|RGkrM#`0AeUBxC4&_UfmGl
z=Os(H$%==4cpD@f04PgS*5$o~!>ruGdHmC{0$9EeG64Vtl~HhWr>K$dV;-qkXNC5k
zy^Xd3?Mki1PNL!tg?7(DZSp!YDJNC3AL{XelliXq!M$@X4hXfv?E({;;dW8a<Kbzn
z$)^%IvZ-e3k{@MT`)%ah3-xJ%HK2r3dDXwYOcrBdgm?K=Ncj30Li(8|N{=3du<kXn
z=DoMat?cqj)gN^AN&8O>L?Dz|;nB;OU5`1#yp%Sfl(^;x_Z4kNzFE*)-9->dQmE~K
z=?E3|<grm>&}ZTZs(ojeuW9w#-x<!BB)m$bhm`mzf4w%HHJ`N}RVjV)IBvpC30+9;
zVlrWq;;$!YUlaSgVM&XpUFL+1RJ!;|<<YNaouh=}76#|RIg*K4HxB`~eMOq%misTs
zuig4=DMFlJ=5Q0D4u$!X#fJx-3fiXllQIj!(n<S2s)J-o6pkk#8M;-TG>>*y5i}-S
z=IlbzlG&P^mXuAg1B&7_cx_FX8nk$|^g3B4rS%g+ulrNEV`k<gS%bsG>}gz5DtjR9
z;&wSvY#g6w;OfV~uA^r4p;+Lmi)m!T%yfM~psC?~xFT{MXfP5=Hy{nEXS~Af`jk1%
zS(`>=K#GPHVoG@fT8E-<r@tJKCTQken2`~Qyw+>W@TjO^W2a%Ky<uCxt6P-m#SFzq
zGoqm8_MTzi-3>HnV0r27Ndo=B#ZOvD{v^Chpy}CM3*3nQR+I=r3T`t06qwg5bE&C$
zik~`pMl&*sgU>g5;Tl@K+eon1a>|sWNKxru*r*rT1O(<K`*JWHWBJ(V)J7_3g@lb^
zH~@dErjIJ$H`phjR8MKtTTL7<qjY+5&Mar>2g_2_7k|Ye+~{6m4pbxKPzEc0ChbNq
z@G;SNvRL<ZEV4f|{+5R1*dollN*fIfPZ#vHI|g+I{wQ5(TD_n{*<@CB$Qfry`P}ZB
zo!<Pj<GS7WC0QjZyFPC-Oo|$0eEN>O*tvkmqvUq1DcOS~dB|c0*Qvt6RveyN2$qPh
zE`Pyy5sFqNovXu;fs3TO!EjMk8@^9sYMH~cU6%FPHHUNQjHN+JW1vIh0TzuR>j>q7
z(M3NL>kg3S2>@VgZBJYBY|pBIog4oWmd|5uy7grjjVjq%Wq(ubXYPrwE<=8s!?gbX
z;9OawhLEEpG`%;7YP!OYWP3JUBA0#DMAat=6pHx`->H{omdGwR>K@^cev*mt*;|}r
zFwK12ZQPLR<W04_qn;hfS11<GXaU>cFC}7vG^$6N2>b4>Op;~dHvx#V#87C|`CQCG
z+4-j=QOf)7LB;6<aEPI&|NNdX;fb%Cn25}q`j!Hhu3Pv1T0ml{TVeYK-RANk@`UbZ
znvN&X@dNX9J!D3ni-8zkQ;?JuQ#dDl0pez^M=rhh93wFA>=Y}87sOUP)5#D~LMmhp
z-f?vO&R)uXJ^F;fe5I5051-z^!&3K3s?AQ~=9NzGrZR4*<l&kawARn6it(Z3@G}30
zE3ejKd{Z;NT$#SN+<rP;g)_9n3{f~5X?(5UreTUzu!%yazJ0Y`)T6>Fn6gEIu;%4o
z`&tYI#J34`fT4o|$F4-+a!(RlP5__NfRoXn_ZEg<tw+InMzsQGLyk+N6Jmd%y4Uj$
zpZ}*+5Mems9heI(e?6PPK{U9l{Y-fbxwBd6?lh^^a$V#5SjF12IZ~a|4`pLPx{&5h
z=`yG!QG+_EA$s<k5lFI_7F&0fTeyI`J8vYZMJkG)I(dY3k*G7M@wVAJ)?>BBJYF!*
zYq0~`@)QmIU{XIxUOiIPT~GR=g3e(!*wfibL!7gkZmbK)mv0L9x7FEZo7T7u;ZKxn
zeZJ|?!9t$seaoM&e!&2Vbx$zf8cCJGr5%y)o6>EDsAi52_%DV(u`u~0lqHHD8aj^*
z(ro*p{5>qm_PL{-&8G12!?x*tK_s@oXRpmY?wuPnf!}OF$9)LZov3eSUl%$iFxzt@
zuD&fM&A<8*EH=5@f9)sUf}fU&w)(cUAK&owI(Bt+KM87nCM2$sRDP7X{dj$<x%r`)
zhRNiHS%_1<)eoe{0bG`I%3WhxEZTaP>mbzVN0ilODy+_MBWq7BoYO!)GLU~G-ns;w
zu=WhP9BE>`=Mv~WGqFU!*C4whXE_}6XxEIkJHO#j;Llx=_O9#cK({2*p<}+4j-9wD
zI_IE$M@<<`=-w8-CfdIkTwF6z>ot?HZuI%%G>BRb^TyMd>1~~5y#nA-PHkW)4f^*#
zB?!E|{!I0_UFb?^)~~RJ4~o4TRJCJlllw)r(G788V{UmA=tyvN7Z#r;nyV(Q;p-LN
zIiV2Q$0x{g)whVYwql5Cul-`X2Cuse2-6vQikXkrbM`)Lg_Lm>mh`8YmD1hev-oYp
zcU1?h5>r&|+u4ejA#y?GFW&t(=)+s!4GE}cNuKo}@83KXfpCrR#YOnRe29KL0Ccr=
z^g-IXART=t9YdIo9!%FzQ(GIRt^H1xb?|?LkjuUS{?Y$ms6+6V^91!j7s5#d7#<hy
x2Z|&H0Q>`j{a|1)I3gqr9D*YR_ymEFZ~{@!2cmnb$JB@C08j`tyu#vQ!oNh-*Ma~5

literal 0
HcmV?d00001

diff --git a/app/src/main/res/layout/activity_chart_report.xml b/app/src/main/res/layout/activity_chart_report.xml
index 8f7b3661..2ea395b9 100644
--- a/app/src/main/res/layout/activity_chart_report.xml
+++ b/app/src/main/res/layout/activity_chart_report.xml
@@ -27,21 +27,21 @@
         android:layout_height="match_parent"
         android:gravity="center_horizontal|center_vertical">
 
-        <Button
+        <ImageButton
             android:id="@+id/bar_chart_button"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:text="Bar Chart" />
-        <Button
+            android:src="@drawable/chart_bar_button" />
+        <ImageButton
             android:id="@+id/pie_chart_button"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:text="Pie Chart" />
-        <Button
+            android:src="@drawable/chart_pie_button" />
+        <ImageButton
             android:id="@+id/line_chart_button"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:text="Line Chart" />
+            android:src="@drawable/chart_line_button" />
 
     </LinearLayout>
 

From 4140b8070fec4a902403ffa6587964ac8ea52b7b Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sun, 29 Mar 2015 19:00:23 +0200
Subject: [PATCH 21/32] Fixed skipping negative balances by pie chart. Some
 refactoring

---
 .../gnucash/android/ui/chart/PieChartActivity.java | 37 ++++++++++++++--------
 1 file changed, 23 insertions(+), 14 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index b0d9f193..16471e54 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -74,7 +74,8 @@
             Color.parseColor("#fddef8"), Color.parseColor("#fa0e6e"), Color.parseColor("#d9e7b5")
     };
 
-    private static final String datePattern = "MMMM\nYYYY";
+    private static final String DATE_PATTERN = "MMMM\nYYYY";
+    private static final int ANIMATION_DURATION = 1800;
 
     private PieChart mChart;
 
@@ -151,15 +152,29 @@ public void onClick(View view) {
 
     /**
      * Sets the chart data
-     *
      * @param forCurrentMonth sets data only for current month if {@code true}, otherwise for all time
      */
     private void setData(boolean forCurrentMonth) {
-        mChartDateTextView.setText(forCurrentMonth ? mChartDate.toString(datePattern) : getResources().getString(R.string.label_chart_overall));
+        mChartDateTextView.setText(forCurrentMonth ? mChartDate.toString(DATE_PATTERN) : getResources().getString(R.string.label_chart_overall));
         ((TextView) findViewById(R.id.selected_chart_slice)).setText("");
         mChart.highlightValues(null);
         mChart.clear();
 
+        mChart.setData(getPieData(forCurrentMonth));
+        mChart.animateXY(ANIMATION_DURATION, ANIMATION_DURATION);
+
+        setImageButtonEnabled(mNextMonthButton,
+                mChartDate.plusMonths(1).dayOfMonth().withMinimumValue().withMillisOfDay(0).isBefore(mLatestTransactionDate));
+        setImageButtonEnabled(mPreviousMonthButton, (mEarliestTransactionDate.getYear() != 1970
+                && mChartDate.minusMonths(1).dayOfMonth().withMaximumValue().withMillisOfDay(86399999).isAfter(mEarliestTransactionDate)));
+    }
+
+    /**
+     * Returns {@code PieData} instance with data entries and labels
+     * @param forCurrentMonth sets data only for current month if {@code true}, otherwise for all time
+     * @return {@code PieData} instance
+     */
+    private PieData getPieData(boolean forCurrentMonth) {
         PieDataSet dataSet = new PieDataSet(null, "");
         ArrayList<String> names = new ArrayList<String>();
         List<String> skipUUID = new ArrayList<String>();
@@ -169,16 +184,16 @@ private void setData(boolean forCurrentMonth) {
                     skipUUID.addAll(mAccountsDbAdapter.getDescendantAccountUIDs(account.getUID(), null, null));
                 }
                 if (!skipUUID.contains(account.getUID())) {
-                    double balance = 0;
+                    double balance;
                     if (forCurrentMonth) {
                         long start = mChartDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
                         long end = mChartDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
-                        balance = mAccountsDbAdapter.getAccountBalance(account.getUID(), start, end).asDouble();
+                        balance = mAccountsDbAdapter.getAccountBalance(account.getUID(), start, end).absolute().asDouble();
                     } else {
-                        balance = mAccountsDbAdapter.getAccountBalance(account.getUID()).asDouble();
+                        balance = mAccountsDbAdapter.getAccountBalance(account.getUID()).absolute().asDouble();
                     }
                     if (balance > 0) {
-                        dataSet.addEntry(new Entry((float) Math.abs(balance), dataSet.getEntryCount()));
+                        dataSet.addEntry(new Entry((float) balance, dataSet.getEntryCount()));
                         dataSet.addColor(COLORS[(dataSet.getEntryCount() - 1) % COLORS.length]);
                         names.add(account.getName());
                     }
@@ -199,14 +214,8 @@ private void setData(boolean forCurrentMonth) {
             mChart.setCenterText(getResources().getString(R.string.label_chart_total) + dataSet.getYValueSum());
             mChart.setTouchEnabled(true);
         }
-        mChart.setData(new PieData(names, dataSet));
-        mChart.animateXY(1800, 1800);
-        mChart.invalidate();
 
-        setImageButtonEnabled(mNextMonthButton,
-                mChartDate.plusMonths(1).dayOfMonth().withMinimumValue().withMillisOfDay(0).isBefore(mLatestTransactionDate));
-        setImageButtonEnabled(mPreviousMonthButton, (mEarliestTransactionDate.getYear() != 1970
-                && mChartDate.minusMonths(1).dayOfMonth().withMaximumValue().withMillisOfDay(86399999).isAfter(mEarliestTransactionDate)));
+        return new PieData(names, dataSet);
     }
 
     /**

From 58c205e775211bbd38940addcdfd62e21f5e0164 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 1 Apr 2015 20:13:47 +0300
Subject: [PATCH 22/32] Added average lines

---
 .../gnucash/android/ui/chart/BarChartActivity.java |  3 ++-
 .../android/ui/chart/LineChartActivity.java        | 23 +++++++++++++++++++++-
 .../gnucash/android/ui/chart/PieChartActivity.java |  4 +++-
 app/src/main/res/menu/chart_actions.xml            |  4 ++++
 app/src/main/res/values/strings.xml                |  1 +
 5 files changed, 32 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index 4e9e206e..7bd0a3e2 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -203,9 +203,10 @@ public boolean onCreateOptionsMenu(Menu menu) {
     @Override
     public boolean onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_percentage_mode).setVisible(mChartDataPresent);
-        // hide pie and bar chart specific menu items
+        // hide pie/line chart specific menu items
         menu.findItem(R.id.menu_order_by_size).setVisible(false);
         menu.findItem(R.id.menu_toggle_labels).setVisible(false);
+        menu.findItem(R.id.menu_toggle_average_lines).setVisible(false);
         return true;
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index a2bb961e..ba9f63f6 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -10,6 +10,7 @@
 import com.actionbarsherlock.view.MenuItem;
 import com.github.mikephil.charting.charts.LineChart;
 import com.github.mikephil.charting.components.Legend;
+import com.github.mikephil.charting.components.LimitLine;
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.data.LineData;
 import com.github.mikephil.charting.data.LineDataSet;
@@ -54,6 +55,8 @@
     private long mEarliestTransactionTimestamp;
     private long mLatestTransactionTimestamp;
 
+    private boolean mChartDataPresent = true;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
@@ -116,6 +119,8 @@ private LineData getDataSet(List<AccountType> accountTypes) {
     }
 
     private LineData getEmptyDataSet() {
+        mChartDataPresent = false;
+
         ArrayList<String> xValues = new ArrayList<String>();
         ArrayList<Entry> yValues = new ArrayList<Entry>();
         for (int i = 0; i < 5; i++) {
@@ -198,7 +203,8 @@ public boolean onCreateOptionsMenu(Menu menu) {
 
     @Override
     public boolean onPrepareOptionsMenu(Menu menu) {
-        // hide pie and bar chart specific menu items
+        menu.findItem(R.id.menu_toggle_average_lines).setVisible(mChartDataPresent);
+        // hide pie/bar chart specific menu items
         menu.findItem(R.id.menu_order_by_size).setVisible(false);
         menu.findItem(R.id.menu_toggle_labels).setVisible(false);
         menu.findItem(R.id.menu_percentage_mode).setVisible(false);
@@ -213,6 +219,21 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 mChart.invalidate();
                 break;
             }
+            case R.id.menu_toggle_average_lines: {
+                if (mChart.getAxisLeft().getLimitLines().isEmpty()) {
+                    for (LineDataSet set : mChart.getData().getDataSets()) {
+                        LimitLine line = new LimitLine(set.getYValueSum() / set.getEntryCount(), set.getLabel());
+                        line.enableDashedLine(10, 5, 0);
+                        line.setLineColor(set.getColor());
+                        mChart.getAxisLeft().addLimitLine(line);
+                    }
+                } else {
+                    mChart.getAxisLeft().removeAllLimitLines();
+                }
+
+                mChart.invalidate();
+                break;
+            }
         }
         return true;
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index 16471e54..a095063a 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -300,12 +300,14 @@ public boolean onCreateOptionsMenu(Menu menu) {
         getSupportMenuInflater().inflate(R.menu.chart_actions, menu);
         return true;
     }
+
     @Override
     public boolean onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_order_by_size).setVisible(mChartDataPresent);
         menu.findItem(R.id.menu_toggle_labels).setVisible(mChartDataPresent);
-        // hide bar chart specific menu items
+        // hide line/bar chart specific menu items
         menu.findItem(R.id.menu_percentage_mode).setVisible(false);
+        menu.findItem(R.id.menu_toggle_average_lines).setVisible(false);
         return true;
     }
 
diff --git a/app/src/main/res/menu/chart_actions.xml b/app/src/main/res/menu/chart_actions.xml
index cca7a7ca..9dbd9954 100644
--- a/app/src/main/res/menu/chart_actions.xml
+++ b/app/src/main/res/menu/chart_actions.xml
@@ -33,4 +33,8 @@
           android:title="@string/menu_toggle_percentage_mode"
           android:showAsAction="never" />
 
+    <item android:id="@+id/menu_toggle_average_lines"
+          android:title="@string/menu_toggle_average_lines"
+          android:showAsAction="never" />
+
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 8c4477a5..686f9ca1 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -443,6 +443,7 @@
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>
     <string name="menu_toggle_percentage_mode">Toggle percentage</string>
+    <string name="menu_toggle_average_lines">Toggle average lines</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>

From 7c249ba94680b82a7779e7653dc9af4d6ccdff72 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 4 Apr 2015 16:05:21 +0300
Subject: [PATCH 23/32] Setting action bar

---
 .../main/java/org/gnucash/android/ui/chart/BarChartActivity.java   | 5 +++++
 .../java/org/gnucash/android/ui/chart/ChartReportActivity.java     | 1 +
 .../main/java/org/gnucash/android/ui/chart/LineChartActivity.java  | 5 +++++
 .../main/java/org/gnucash/android/ui/chart/PieChartActivity.java   | 7 +------
 app/src/main/res/values-de/strings.xml                             | 3 +++
 app/src/main/res/values-el/strings.xml                             | 3 +++
 app/src/main/res/values-es-rMX/strings.xml                         | 3 +++
 app/src/main/res/values-es/strings.xml                             | 3 +++
 app/src/main/res/values-fr/strings.xml                             | 3 +++
 app/src/main/res/values-hu/strings.xml                             | 3 +++
 app/src/main/res/values-it/strings.xml                             | 3 +++
 app/src/main/res/values-nb/strings.xml                             | 3 +++
 app/src/main/res/values-nl/strings.xml                             | 3 +++
 app/src/main/res/values-pt-rBR/strings.xml                         | 3 +++
 app/src/main/res/values-ru/strings.xml                             | 3 +++
 app/src/main/res/values-zh/strings.xml                             | 3 +++
 app/src/main/res/values/strings.xml                                | 3 +++
 17 files changed, 51 insertions(+), 6 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index 7bd0a3e2..e153b1f5 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -59,6 +59,7 @@
     protected void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_line_chart);
         super.onCreate(savedInstanceState);
+        getSupportActionBar().setTitle(R.string.title_bar_chart);
 
         mChart = new com.github.mikephil.charting.charts.BarChart(this);
         ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
@@ -225,6 +226,10 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 Toast.makeText(this, msgId, Toast.LENGTH_LONG).show();
                 break;
             }
+            case android.R.id.home: {
+                finish();
+                break;
+            }
         }
         return true;
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
index 6da14de5..b68eab09 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
@@ -18,6 +18,7 @@ protected void onCreate(Bundle savedInstanceState) {
         //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
         setContentView(R.layout.activity_chart_report);
         super.onCreate(savedInstanceState);
+        getSupportActionBar().setTitle(R.string.title_reports);
 
         findViewById(R.id.pie_chart_button).setOnClickListener(new View.OnClickListener() {
             @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index ba9f63f6..b26b8b19 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -62,6 +62,7 @@ protected void onCreate(Bundle savedInstanceState) {
         //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
         setContentView(R.layout.activity_line_chart);
         super.onCreate(savedInstanceState);
+        getSupportActionBar().setTitle(R.string.title_line_chart);
 
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
@@ -234,6 +235,10 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 mChart.invalidate();
                 break;
             }
+            case android.R.id.home: {
+                finish();
+                break;
+            }
         }
         return true;
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index a095063a..0618e39d 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -32,7 +32,6 @@
 import android.widget.Spinner;
 import android.widget.TextView;
 
-import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuItem;
 import com.github.mikephil.charting.charts.PieChart;
@@ -100,11 +99,7 @@ protected void onCreate(Bundle savedInstanceState) {
         //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
         setContentView(R.layout.activity_pie_chart);
         super.onCreate(savedInstanceState);
-
-        ActionBar actionBar = getSupportActionBar();
-        actionBar.setTitle(R.string.title_pie_chart);
-        actionBar.setDisplayHomeAsUpEnabled(true);
-        actionBar.setHomeButtonEnabled(true);
+        getSupportActionBar().setTitle(R.string.title_pie_chart);
 
         mPreviousMonthButton = (ImageButton) findViewById(R.id.previous_month_chart_button);
         mNextMonthButton = (ImageButton) findViewById(R.id.next_month_chart_button);
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index be3bcfa3..b0026d01 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -435,4 +435,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index 2411dcd7..cf742333 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -460,4 +460,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index f7acd93f..bd957b88 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -445,4 +445,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index a55a3095..a43b78ee 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -442,4 +442,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 08eecbce..bbaee9ea 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -442,4 +442,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index 83dc0e8f..bf6ea0c2 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -446,4 +446,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index 553aa733..fa957b9f 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -446,4 +446,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 2580be6e..e7036774 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -442,4 +442,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index 3c3fad01..10129f15 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -447,4 +447,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 5261de0a..c26b1352 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -445,4 +445,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 3a5dee8c..32277272 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -448,4 +448,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index c0fb8226..f8f748e5 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -439,4 +439,7 @@
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_reports">Reports</string>
 </resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 686f9ca1..40925a09 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -437,7 +437,10 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
+    <string name="title_reports">Reports</string>
 	<string name="title_pie_chart">Pie Chart</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_bar_chart">Bar Chart</string>
     <string name="menu_chart_report">Chart report</string>
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>

From f8d45c0c0f82a805b878a59bc3c4e170da2fb004 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 4 Apr 2015 18:32:42 +0300
Subject: [PATCH 24/32] Disabled animation when no data available

---
 app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java | 4 +++-
 .../main/java/org/gnucash/android/ui/chart/LineChartActivity.java    | 5 +++--
 app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java | 5 ++++-
 3 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index e153b1f5..aad62ec6 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -81,7 +81,9 @@ protected void onCreate(Bundle savedInstanceState) {
         l.setForm(Legend.LegendForm.CIRCLE);
         l.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
 
-        mChart.animateX(3000);
+        if (mChartDataPresent) {
+            mChart.animateX(3000);
+        }
         mChart.invalidate();
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index b26b8b19..ba6040f3 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -54,7 +54,6 @@
     private Map<AccountType, Long> mLatestTimestampsMap = new HashMap<AccountType, Long>();
     private long mEarliestTransactionTimestamp;
     private long mLatestTransactionTimestamp;
-
     private boolean mChartDataPresent = true;
 
     @Override
@@ -77,7 +76,9 @@ protected void onCreate(Bundle savedInstanceState) {
         legend.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
         legend.setForm(Legend.LegendForm.CIRCLE);
 
-        mChart.animateX(3000);
+        if (mChartDataPresent) {
+            mChart.animateX(3000);
+        }
         mChart.invalidate();
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index 0618e39d..7279346b 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -156,7 +156,10 @@ private void setData(boolean forCurrentMonth) {
         mChart.clear();
 
         mChart.setData(getPieData(forCurrentMonth));
-        mChart.animateXY(ANIMATION_DURATION, ANIMATION_DURATION);
+        if (mChartDataPresent) {
+            mChart.animateXY(ANIMATION_DURATION, ANIMATION_DURATION);
+        }
+        mChart.invalidate();
 
         setImageButtonEnabled(mNextMonthButton,
                 mChartDate.plusMonths(1).dayOfMonth().withMinimumValue().withMillisOfDay(0).isBefore(mLatestTransactionDate));

From fcbcf673db72e3ec472a386245926d86b232b16d Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 7 Apr 2015 18:50:23 +0300
Subject: [PATCH 25/32] Refactored bar chart

---
 .../gnucash/android/ui/chart/BarChartActivity.java | 149 ++++++++++-----------
 1 file changed, 72 insertions(+), 77 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index aad62ec6..8cab7015 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -26,6 +26,7 @@
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.ui.passcode.PassLockActivity;
 import org.joda.time.LocalDateTime;
+import org.joda.time.Months;
 
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -43,11 +44,16 @@
     private static final String TAG = "BarChartActivity";
     private static final String X_AXIS_PATTERN = "MMM YY";
     private static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
+    private static final int ANIMATION_DURATION = 3000;
 
-    private static final int[] COLORS = { Color.rgb(104, 241, 175), Color.RED };
+    private static final int[] COLORS = {
+            Color.parseColor("#68F1AF"), Color.parseColor("#CC1f09"), Color.parseColor("#EE8600"),
+            Color.parseColor("#1469EB"), Color.parseColor("#B304AD"),
+    };
+
+    private AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
     private BarChart mChart;
-    private List<AccountType> mAccountTypeList;
     private Map<AccountType, Long> mEarliestTimestampsMap = new HashMap<AccountType, Long>();
     private Map<AccountType, Long> mLatestTimestampsMap = new HashMap<AccountType, Long>();
     private long mEarliestTransactionTimestamp;
@@ -65,102 +71,77 @@ protected void onCreate(Bundle savedInstanceState) {
         ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
-//        mChart.setValueFormatter(new LargeValueFormatter());
         mChart.setDrawValuesForWholeStack(false);
         mChart.setDrawBarShadow(false);
-//        XLabels xl  = mChart.getXLabels();
-//        xl.setCenterXLabelText(true);
         mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter());
         mChart.getAxisRight().setEnabled(false);
 
-//        mAccountTypeList = Arrays.asList(AccountType.EXPENSE, AccountType.INCOME);
-        mAccountTypeList = new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE));
-        mChart.setData(getDataSet());
-
-        Legend l = mChart.getLegend();
-        l.setForm(Legend.LegendForm.CIRCLE);
-        l.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
+        mChart.setData(getData(new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
+        Legend legend = mChart.getLegend();
+        legend.setForm(Legend.LegendForm.CIRCLE);
+        legend.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
 
         if (mChartDataPresent) {
-            mChart.animateX(3000);
+            mChart.animateX(ANIMATION_DURATION);
         }
         mChart.invalidate();
     }
 
-    private BarData getDataSet() {
-        AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
-
-        setEarliestAndLatestTimestamps(mAccountTypeList);
-
-        if (mEarliestTransactionTimestamp == 0) {
-            if (mLatestTransactionTimestamp == 0) {
-                return getEmptyDataSet();
-            }
-            for (Map.Entry<AccountType, Long> entry : mEarliestTimestampsMap.entrySet()) {
-                if (entry.getValue() == 0) {
-                    mAccountTypeList.remove(entry.getKey());
-                }
-            }
-            Log.d(TAG, mAccountTypeList.toString());
-            setEarliestAndLatestTimestamps(mAccountTypeList);
+    private BarData getData(ArrayList<AccountType> accountTypeList) {
+        if (!calculateEarliestAndLatestTimestamps(accountTypeList)) {
+            mChartDataPresent = false;
+            return getEmptyDataSet();
         }
 
-        LocalDateTime start = new LocalDateTime(mEarliestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
-        LocalDateTime end = new LocalDateTime(mLatestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
-        Log.w(TAG, "X AXIS START DATE: " + start.toString("dd MM yyyy"));
-        Log.w(TAG, "X AXIS END DATE: " + end.toString("dd MM yyyy"));
-
-        Map<AccountType, List<String>> accountUIDMap = new HashMap<AccountType, List<String>>();
-        for (AccountType accountType : mAccountTypeList) {
-            List<String> accountUIDList = new ArrayList<String>();
-
-            for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
-                if (account.getAccountType() == accountType && !account.isPlaceholderAccount()) {
-                    accountUIDList.add(account.getUID());
-
-                }
-                accountUIDMap.put(accountType, accountUIDList);
-            }
-        }
+        LocalDateTime startDate = new LocalDateTime(mEarliestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
+        LocalDateTime endDate = new LocalDateTime(mLatestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
+        Log.d(TAG, "X-axis star date: " + startDate.toString("dd MM yyyy"));
+        Log.d(TAG, "X-axis end date: " + endDate.toString("dd MM yyyy"));
+        int months = Months.monthsBetween(startDate, endDate).getMonths();
 
         ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();
         ArrayList<BarEntry> values = new ArrayList<BarEntry>();
-        ArrayList<String> xVals = new ArrayList<String>();
-        int z = 0;
-        while (!start.isAfter(end)) {
-            xVals.add(start.toString(X_AXIS_PATTERN));
-            Log.i(TAG, "xVals " + start.toString("MM yy"));
-
-            long startPeriod = start.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
-            long endPeriod = start.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
-
-            float stackedValues[] = new float[mAccountTypeList.size()];
-            int i = 0;
-            for (Map.Entry<AccountType, List<String>> entry : accountUIDMap.entrySet()) {
-                float balance = (float) mAccountsDbAdapter.getAccountsBalance(entry.getValue(), startPeriod, endPeriod).absolute().asDouble();
-                stackedValues[i++] = balance;
-                Log.w(TAG, entry.getKey() + "" + start.toString(" MMMM yyyy") + ", balance = " + balance);
+        ArrayList<String> xValues = new ArrayList<String>();
+        for (int i = 0; i <= months; i++) {
+            xValues.add(startDate.toString(X_AXIS_PATTERN));
+
+            long start = startDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
+            long end = startDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
+            float stack[] = new float[accountTypeList.size()];
+            int j = 0;
+            for (Map.Entry<AccountType, List<String>> entry : getAccountMap(accountTypeList).entrySet()) {
+                stack[j++] = (float) mAccountsDbAdapter.getAccountsBalance(entry.getValue(), start, end).absolute().asDouble();
+                Log.d(TAG, entry.getKey() + startDate.toString(" MMMM yyyy") + ", balance = " + stack[j - 1]);
             }
-            values.add(new BarEntry(stackedValues, z));
-            z++;
+            values.add(new BarEntry(stack, i));
 
-            start = start.plusMonths(1);
+            startDate = startDate.plusMonths(1);
         }
 
         BarDataSet set = new BarDataSet(values, "");
-//        set.setValueFormatter();
         // conversion enum list to string array
-        set.setStackLabels(mAccountTypeList.toString().substring(1, mAccountTypeList.toString().length() - 1).split(", "));
-        set.setColors(Arrays.copyOfRange(COLORS, 0, mAccountTypeList.size()));
-
+        set.setStackLabels(accountTypeList.toString().substring(1, accountTypeList.toString().length() - 1).split(", "));
+        set.setColors(Arrays.copyOfRange(COLORS, 0, accountTypeList.size()));
         dataSets.add(set);
 
-        return new BarData(xVals, dataSets);
+        return new BarData(xValues, dataSets);
     }
 
-    private BarData getEmptyDataSet() {
-        mChartDataPresent = false;
+    private Map<AccountType, List<String>> getAccountMap(List<AccountType> accountTypeList) {
+        Map<AccountType, List<String>> accountMap = new HashMap<AccountType, List<String>>();
+        for (AccountType accountType : accountTypeList) {
+            List<String> accountUIDList = new ArrayList<String>();
+            for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
+                if (account.getAccountType() == accountType && !account.isPlaceholderAccount()) {
+                    accountUIDList.add(account.getUID());
+                }
+                accountMap.put(accountType, accountUIDList);
+            }
+        }
+        return accountMap;
+    }
 
+    private BarData getEmptyDataSet() {
         ArrayList<String> xValues = new ArrayList<String>();
         ArrayList<BarEntry> yValues = new ArrayList<BarEntry>();
         for (int i = 0; i < 3; i++) {
@@ -181,13 +162,25 @@ private BarData getEmptyDataSet() {
         return new BarData(xValues, new ArrayList<BarDataSet>(Arrays.asList(set)));
     }
 
-    private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
-        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
-        mEarliestTimestampsMap.clear();
-        mLatestTimestampsMap.clear();
+    /**
+     *
+     * @param accountTypeList
+     * @return {@code false} if no data present, {@code true} otherwise
+     */
+    private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
         for (AccountType type : accountTypeList) {
-            mEarliestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfEarliestTransaction(type));
-            mLatestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfLatestTransaction(type));
+            long earliest = TransactionsDbAdapter.getInstance().getTimestampOfEarliestTransaction(type);
+            long latest = TransactionsDbAdapter.getInstance().getTimestampOfLatestTransaction(type);
+            if (earliest > 0 && latest > 0) {
+                mEarliestTimestampsMap.put(type, earliest);
+                mLatestTimestampsMap.put(type, latest);
+            } else {
+                accountTypeList.remove(type);
+            }
+        }
+
+        if (mEarliestTimestampsMap.isEmpty()) {
+            return false;
         }
 
         List<Long> timestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
@@ -195,6 +188,8 @@ private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
         Collections.sort(timestamps);
         mEarliestTransactionTimestamp = timestamps.get(0);
         mLatestTransactionTimestamp = timestamps.get(timestamps.size() - 1);
+
+        return true;
     }
 
     @Override

From a508df8f3914d8fbd5dc6f1cf6f3cfe574da29bf Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 8 Apr 2015 17:15:32 +0300
Subject: [PATCH 26/32] Disabled pie chart's date picker when no data available

---
 app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java | 1 +
 1 file changed, 1 insertion(+)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index 7279346b..e6830e08 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -161,6 +161,7 @@ private void setData(boolean forCurrentMonth) {
         }
         mChart.invalidate();
 
+        mChartDateTextView.setEnabled(mChartDataPresent);
         setImageButtonEnabled(mNextMonthButton,
                 mChartDate.plusMonths(1).dayOfMonth().withMinimumValue().withMillisOfDay(0).isBefore(mLatestTransactionDate));
         setImageButtonEnabled(mPreviousMonthButton, (mEarliestTransactionDate.getYear() != 1970

From 1f4509fc23c549f98b5dde3f020171aefe640903 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 11 Apr 2015 19:46:15 +0300
Subject: [PATCH 27/32] Group smaller pie chart slices

---
 .../gnucash/android/ui/chart/BarChartActivity.java |  1 +
 .../android/ui/chart/LineChartActivity.java        |  1 +
 .../gnucash/android/ui/chart/PieChartActivity.java | 71 ++++++++++++++++------
 app/src/main/res/menu/chart_actions.xml            |  4 ++
 app/src/main/res/values-de/strings.xml             |  2 +
 app/src/main/res/values-el/strings.xml             |  2 +
 app/src/main/res/values-es-rMX/strings.xml         |  2 +
 app/src/main/res/values-es/strings.xml             |  2 +
 app/src/main/res/values-fr/strings.xml             |  2 +
 app/src/main/res/values-hu/strings.xml             |  2 +
 app/src/main/res/values-it/strings.xml             |  2 +
 app/src/main/res/values-nb/strings.xml             |  2 +
 app/src/main/res/values-nl/strings.xml             |  2 +
 app/src/main/res/values-pt-rBR/strings.xml         |  2 +
 app/src/main/res/values-ru/strings.xml             |  2 +
 app/src/main/res/values-zh/strings.xml             |  2 +
 app/src/main/res/values/strings.xml                |  2 +
 17 files changed, 85 insertions(+), 18 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index 8cab7015..fcd26fa7 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -205,6 +205,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_order_by_size).setVisible(false);
         menu.findItem(R.id.menu_toggle_labels).setVisible(false);
         menu.findItem(R.id.menu_toggle_average_lines).setVisible(false);
+        menu.findItem(R.id.menu_group_other_slice).setVisible(false);
         return true;
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index ba6040f3..4cedb2a7 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -210,6 +210,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_order_by_size).setVisible(false);
         menu.findItem(R.id.menu_toggle_labels).setVisible(false);
         menu.findItem(R.id.menu_percentage_mode).setVisible(false);
+        menu.findItem(R.id.menu_group_other_slice).setVisible(false);
         return true;
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index e6830e08..fdbcd49a 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -23,6 +23,7 @@
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.support.v4.app.DialogFragment;
+import android.util.Log;
 import android.view.View;
 import android.widget.AdapterView;
 import android.widget.AdapterView.OnItemSelectedListener;
@@ -55,6 +56,8 @@
 import java.util.Arrays;
 import java.util.List;
 
+import static org.gnucash.android.db.DatabaseSchema.AccountEntry;
+
 /**
  * Activity used for drawing a pie chart
  *
@@ -94,6 +97,8 @@
 
     private boolean mChartDataPresent = true;
 
+    private double mSlicePercentThreshold = 6;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
@@ -174,31 +179,55 @@ private void setData(boolean forCurrentMonth) {
      * @return {@code PieData} instance
      */
     private PieData getPieData(boolean forCurrentMonth) {
+        List<Account> accountList = mAccountsDbAdapter.getSimpleAccountList(
+                AccountEntry.COLUMN_TYPE + " = ? AND " + AccountEntry.COLUMN_PLACEHOLDER + " = ?",
+                new String[]{ mAccountType.name(), "0" }, null);
+        List<String> uidList = new ArrayList<String>();
+        for (Account account : accountList) {
+            uidList.add(account.getUID());
+        }
+        double sum = mAccountsDbAdapter.getAccountsBalance(uidList, -1, -1).absolute().asDouble();
+        if (forCurrentMonth) {
+            long start = mChartDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
+            long end = mChartDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
+            sum = mAccountsDbAdapter.getAccountsBalance(uidList, start, end).absolute().asDouble();
+        }
+        Log.w("Tag", "Total Balance " + sum);
+
+        double otherSlice = 0;
         PieDataSet dataSet = new PieDataSet(null, "");
         ArrayList<String> names = new ArrayList<String>();
         List<String> skipUUID = new ArrayList<String>();
-        for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
-            if (account.getAccountType() == mAccountType && !account.isPlaceholderAccount()) {
-                if (mAccountsDbAdapter.getSubAccountCount(account.getUID()) > 0) {
-                    skipUUID.addAll(mAccountsDbAdapter.getDescendantAccountUIDs(account.getUID(), null, null));
+        for (Account account : accountList) {
+            if (mAccountsDbAdapter.getSubAccountCount(account.getUID()) > 0) {
+                skipUUID.addAll(mAccountsDbAdapter.getDescendantAccountUIDs(account.getUID(), null, null));
+            }
+            if (!skipUUID.contains(account.getUID())) {
+                double balance;
+                if (forCurrentMonth) {
+                    long start = mChartDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
+                    long end = mChartDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
+                    balance = mAccountsDbAdapter.getAccountBalance(account.getUID(), start, end).absolute().asDouble();
+                } else {
+                    balance = mAccountsDbAdapter.getAccountBalance(account.getUID()).absolute().asDouble();
                 }
-                if (!skipUUID.contains(account.getUID())) {
-                    double balance;
-                    if (forCurrentMonth) {
-                        long start = mChartDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
-                        long end = mChartDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
-                        balance = mAccountsDbAdapter.getAccountBalance(account.getUID(), start, end).absolute().asDouble();
-                    } else {
-                        balance = mAccountsDbAdapter.getAccountBalance(account.getUID()).absolute().asDouble();
-                    }
-                    if (balance > 0) {
-                        dataSet.addEntry(new Entry((float) balance, dataSet.getEntryCount()));
-                        dataSet.addColor(COLORS[(dataSet.getEntryCount() - 1) % COLORS.length]);
-                        names.add(account.getName());
-                    }
+
+                Log.w("Tag", "Percent = " + balance / sum * 100);
+                if (balance / sum * 100 > mSlicePercentThreshold) {
+                    dataSet.addEntry(new Entry((float) balance, dataSet.getEntryCount()));
+                    dataSet.addColor(COLORS[(dataSet.getEntryCount() - 1) % COLORS.length]);
+                    names.add(account.getName());
+                } else {
+                    otherSlice += balance;
+                    Log.w("Tag", "Other = " + otherSlice);
                 }
             }
         }
+        if (otherSlice > 0) {
+            dataSet.addEntry(new Entry((float) otherSlice, dataSet.getEntryCount()));
+            dataSet.getColors().set(dataSet.getColors().size() - 1, Color.LTGRAY);
+            names.add(getResources().getString(R.string.label_other_slice));
+        }
 
         if (dataSet.getEntryCount() == 0) {
             mChartDataPresent = false;
@@ -304,6 +333,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
     public boolean onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_order_by_size).setVisible(mChartDataPresent);
         menu.findItem(R.id.menu_toggle_labels).setVisible(mChartDataPresent);
+        menu.findItem(R.id.menu_group_other_slice).setVisible(mChartDataPresent);
         // hide line/bar chart specific menu items
         menu.findItem(R.id.menu_percentage_mode).setVisible(false);
         menu.findItem(R.id.menu_toggle_average_lines).setVisible(false);
@@ -331,6 +361,11 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 mChart.invalidate();
                 break;
             }
+            case R.id.menu_group_other_slice: {
+                mSlicePercentThreshold = Math.abs(mSlicePercentThreshold - 6);
+                setData(false);
+                break;
+            }
             case android.R.id.home: {
                 finish();
                 break;
diff --git a/app/src/main/res/menu/chart_actions.xml b/app/src/main/res/menu/chart_actions.xml
index 9dbd9954..9e977e21 100644
--- a/app/src/main/res/menu/chart_actions.xml
+++ b/app/src/main/res/menu/chart_actions.xml
@@ -37,4 +37,8 @@
           android:title="@string/menu_toggle_average_lines"
           android:showAsAction="never" />
 
+    <item android:id="@+id/menu_group_other_slice"
+          android:title="@string/menu_group_smaller_slices"
+          android:showAsAction="never" />
+
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index b0026d01..12be57c2 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -438,4 +438,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+    <string name="label_other_slice">Other</string>
+	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index cf742333..0da0579f 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -463,4 +463,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+	<string name="label_other_slice">Other</string>
+	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index bd957b88..6a5a6ac7 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -448,4 +448,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+    <string name="label_other_slice">Other</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index a43b78ee..414d9f93 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -445,4 +445,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+	<string name="label_other_slice">Other</string>
+	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index bbaee9ea..4b8394c7 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -445,4 +445,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+    <string name="label_other_slice">Other</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index bf6ea0c2..cd75a03f 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -449,4 +449,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+    <string name="label_other_slice">Other</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index fa957b9f..8ec665ac 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -449,4 +449,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+    <string name="label_other_slice">Other</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index e7036774..89695953 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -445,4 +445,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+	<string name="label_other_slice">Other</string>
+	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index 10129f15..723152e5 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -450,4 +450,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+    <string name="label_other_slice">Other</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index c26b1352..41e6ad29 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -448,4 +448,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+	<string name="label_other_slice">Other</string>
+	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 32277272..356d23e4 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -451,4 +451,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+    <string name="label_other_slice">Other</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index f8f748e5..63229bca 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -442,4 +442,6 @@
     <string name="title_bar_chart">Bar Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_reports">Reports</string>
+    <string name="label_other_slice">Other</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
 </resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 40925a09..4bd97fa0 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -447,9 +447,11 @@
     <string name="menu_toggle_labels">Toggle labels</string>
     <string name="menu_toggle_percentage_mode">Toggle percentage</string>
     <string name="menu_toggle_average_lines">Toggle average lines</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
+    <string name="label_other_slice">Other</string>
     <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
     <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>

From 483f9a45c76248b013115987e7b4556180bd6d08 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 11 Apr 2015 21:00:46 +0300
Subject: [PATCH 28/32] Visual enhancements

---
 .../main/java/org/gnucash/android/ui/chart/BarChartActivity.java  | 2 +-
 .../main/java/org/gnucash/android/ui/chart/LineChartActivity.java | 8 +++++++-
 .../main/java/org/gnucash/android/ui/chart/PieChartActivity.java  | 1 +
 3 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index fcd26fa7..3b9051f0 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -82,7 +82,7 @@ protected void onCreate(Bundle savedInstanceState) {
         legend.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
 
         if (mChartDataPresent) {
-            mChart.animateX(ANIMATION_DURATION);
+            mChart.animateY(ANIMATION_DURATION);
         }
         mChart.invalidate();
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index 4cedb2a7..ca05bff8 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -48,6 +48,11 @@
             Color.parseColor("#1469EB"), Color.parseColor("#B304AD"),
     };
 
+    private static final int[] FILL_COLORS = {
+            Color.parseColor("#008000"), Color.parseColor("#FF0000"), Color.parseColor("#BE6B00"),
+            Color.parseColor("#0065FF"), Color.parseColor("#8F038A"),
+    };
+
     private LineChart mChart;
     private AccountsDbAdapter mAccountsDbAdapter;
     private Map<AccountType, Long> mEarliestTimestampsMap = new HashMap<AccountType, Long>();
@@ -111,8 +116,9 @@ private LineData getDataSet(List<AccountType> accountTypes) {
         for (AccountType accountType : accountTypes) {
             LineDataSet set = new LineDataSet(getEntryList(accountType), accountType.toString());
             set.setDrawFilled(true);
+            set.setLineWidth(2);
             set.setColor(COLORS[dataSets.size()]);
-            set.setFillColor(COLORS[dataSets.size()]);
+            set.setFillColor(FILL_COLORS[dataSets.size()]);
 
             dataSets.add(set);
         }
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index fdbcd49a..deb78192 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -239,6 +239,7 @@ private PieData getPieData(boolean forCurrentMonth) {
             mChart.setTouchEnabled(false);
         } else {
             mChartDataPresent = true;
+            dataSet.setSliceSpace(2);
             mChart.setCenterText(getResources().getString(R.string.label_chart_total) + dataSet.getYValueSum());
             mChart.setTouchEnabled(true);
         }

From 09591e9f119b206888537a57d7b52bc40e1e2c8d Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Mon, 13 Apr 2015 21:02:04 +0300
Subject: [PATCH 29/32] Arranged localization and menu

---
 .../android/ui/account/AccountsActivity.java       |  2 +-
 app/src/main/res/menu/global_actions.xml           |  4 ++--
 app/src/main/res/values-de/strings.xml             | 27 ++++++++++++----------
 app/src/main/res/values-el/strings.xml             | 27 ++++++++++++----------
 app/src/main/res/values-es-rMX/strings.xml         | 13 +++++++----
 app/src/main/res/values-es/strings.xml             | 27 ++++++++++++----------
 app/src/main/res/values-fr/strings.xml             | 13 +++++++----
 app/src/main/res/values-hu/strings.xml             | 13 +++++++----
 app/src/main/res/values-it/strings.xml             | 13 +++++++----
 app/src/main/res/values-nb/strings.xml             | 27 ++++++++++++----------
 app/src/main/res/values-nl/strings.xml             | 13 +++++++----
 app/src/main/res/values-pt-rBR/strings.xml         | 27 ++++++++++++----------
 app/src/main/res/values-ru/strings.xml             | 13 +++++++----
 app/src/main/res/values-zh/strings.xml             | 13 +++++++----
 app/src/main/res/values/strings.xml                |  1 -
 15 files changed, 134 insertions(+), 99 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 63166656..44ce03e6 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -388,7 +388,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 startActivity(new Intent(this, SettingsActivity.class));
                 return true;
 
-            case R.id.menu_chart_report:
+            case R.id.menu_reports:
                 startActivity(new Intent(this, ChartReportActivity.class));
                 return true;
 
diff --git a/app/src/main/res/menu/global_actions.xml b/app/src/main/res/menu/global_actions.xml
index ca240dd6..4144b481 100644
--- a/app/src/main/res/menu/global_actions.xml
+++ b/app/src/main/res/menu/global_actions.xml
@@ -29,8 +29,8 @@
           android:showAsAction="never"
           android:orderInCategory="10"/>
 
-    <item android:id="@+id/menu_chart_report"
-          android:title="@string/menu_chart_report"
+    <item android:id="@+id/menu_reports"
+          android:title="@string/title_reports"
           android:icon="@drawable/chart_icon"
           android:showAsAction="collapseActionView|ifRoom" />
 
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 12be57c2..4a14c19b 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -427,17 +427,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
-    <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
-    <string name="menu_order_by_size">Order by size</string>
-    <string name="menu_toggle_legend">Toggle legend</string>
-    <string name="menu_toggle_labels">Toggle labels</string>
-    <string name="label_chart_no_data">No chart data available</string>
-    <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
-    <string name="label_other_slice">Other</string>
+	<string name="title_reports">Reports</string>
+	<string name="title_pie_chart">Pie Chart</string>
+	<string name="title_line_chart">Line Chart</string>
+	<string name="title_bar_chart">Bar Chart</string>
+	<string name="menu_order_by_size">Order by size</string>
+	<string name="menu_toggle_legend">Toggle legend</string>
+	<string name="menu_toggle_labels">Toggle labels</string>
+	<string name="menu_toggle_percentage_mode">Toggle percentage</string>
+	<string name="menu_toggle_average_lines">Toggle average lines</string>
 	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
+	<string name="label_chart_no_data">No chart data available</string>
+	<string name="label_chart_overall">Overall</string>
+	<string name="label_chart_total">Total\n</string>
+	<string name="label_other_slice">Other</string>
+	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index 0da0579f..0a59ad85 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -452,17 +452,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
-    <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
-    <string name="menu_order_by_size">Order by size</string>
-    <string name="menu_toggle_legend">Toggle legend</string>
-    <string name="menu_toggle_labels">Toggle labels</string>
-    <string name="label_chart_no_data">No chart data available</string>
-    <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
-	<string name="label_other_slice">Other</string>
+	<string name="title_reports">Reports</string>
+	<string name="title_pie_chart">Pie Chart</string>
+	<string name="title_line_chart">Line Chart</string>
+	<string name="title_bar_chart">Bar Chart</string>
+	<string name="menu_order_by_size">Order by size</string>
+	<string name="menu_toggle_legend">Toggle legend</string>
+	<string name="menu_toggle_labels">Toggle labels</string>
+	<string name="menu_toggle_percentage_mode">Toggle percentage</string>
+	<string name="menu_toggle_average_lines">Toggle average lines</string>
 	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
+	<string name="label_chart_no_data">No chart data available</string>
+	<string name="label_chart_overall">Overall</string>
+	<string name="label_chart_total">Total\n</string>
+	<string name="label_other_slice">Other</string>
+	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index 6a5a6ac7..e1aeeb7e 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -437,17 +437,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
+    <string name="title_reports">Reports</string>
     <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_bar_chart">Bar Chart</string>
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>
+    <string name="menu_toggle_percentage_mode">Toggle percentage</string>
+    <string name="menu_toggle_average_lines">Toggle average lines</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
     <string name="label_other_slice">Other</string>
-    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
+    <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+    <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 414d9f93..799af865 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -434,17 +434,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
-    <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
-    <string name="menu_order_by_size">Order by size</string>
-    <string name="menu_toggle_legend">Toggle legend</string>
-    <string name="menu_toggle_labels">Toggle labels</string>
-    <string name="label_chart_no_data">No chart data available</string>
-    <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
-	<string name="label_other_slice">Other</string>
+	<string name="title_reports">Reports</string>
+	<string name="title_pie_chart">Pie Chart</string>
+	<string name="title_line_chart">Line Chart</string>
+	<string name="title_bar_chart">Bar Chart</string>
+	<string name="menu_order_by_size">Order by size</string>
+	<string name="menu_toggle_legend">Toggle legend</string>
+	<string name="menu_toggle_labels">Toggle labels</string>
+	<string name="menu_toggle_percentage_mode">Toggle percentage</string>
+	<string name="menu_toggle_average_lines">Toggle average lines</string>
 	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
+	<string name="label_chart_no_data">No chart data available</string>
+	<string name="label_chart_overall">Overall</string>
+	<string name="label_chart_total">Total\n</string>
+	<string name="label_other_slice">Other</string>
+	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 4b8394c7..2278e25a 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -434,17 +434,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
+    <string name="title_reports">Reports</string>
     <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_bar_chart">Bar Chart</string>
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>
+    <string name="menu_toggle_percentage_mode">Toggle percentage</string>
+    <string name="menu_toggle_average_lines">Toggle average lines</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
     <string name="label_other_slice">Other</string>
-    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
+    <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+    <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index cd75a03f..8ab9af61 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -438,17 +438,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
+    <string name="title_reports">Reports</string>
     <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_bar_chart">Bar Chart</string>
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>
+    <string name="menu_toggle_percentage_mode">Toggle percentage</string>
+    <string name="menu_toggle_average_lines">Toggle average lines</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
     <string name="label_other_slice">Other</string>
-    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
+    <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+    <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index 8ec665ac..64069361 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -438,17 +438,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
+    <string name="title_reports">Reports</string>
     <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_bar_chart">Bar Chart</string>
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>
+    <string name="menu_toggle_percentage_mode">Toggle percentage</string>
+    <string name="menu_toggle_average_lines">Toggle average lines</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
     <string name="label_other_slice">Other</string>
-    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
+    <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+    <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 89695953..23b575eb 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -434,17 +434,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
-    <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
-    <string name="menu_order_by_size">Order by size</string>
-    <string name="menu_toggle_legend">Toggle legend</string>
-    <string name="menu_toggle_labels">Toggle labels</string>
-    <string name="label_chart_no_data">No chart data available</string>
-    <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
-	<string name="label_other_slice">Other</string>
+	<string name="title_reports">Reports</string>
+	<string name="title_pie_chart">Pie Chart</string>
+	<string name="title_line_chart">Line Chart</string>
+	<string name="title_bar_chart">Bar Chart</string>
+	<string name="menu_order_by_size">Order by size</string>
+	<string name="menu_toggle_legend">Toggle legend</string>
+	<string name="menu_toggle_labels">Toggle labels</string>
+	<string name="menu_toggle_percentage_mode">Toggle percentage</string>
+	<string name="menu_toggle_average_lines">Toggle average lines</string>
 	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
+	<string name="label_chart_no_data">No chart data available</string>
+	<string name="label_chart_overall">Overall</string>
+	<string name="label_chart_total">Total\n</string>
+	<string name="label_other_slice">Other</string>
+	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index 723152e5..727396af 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -439,17 +439,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
+    <string name="title_reports">Reports</string>
     <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_bar_chart">Bar Chart</string>
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>
+    <string name="menu_toggle_percentage_mode">Toggle percentage</string>
+    <string name="menu_toggle_average_lines">Toggle average lines</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
     <string name="label_other_slice">Other</string>
-    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
+    <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+    <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 41e6ad29..427d2107 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -437,17 +437,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
-    <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
-    <string name="menu_order_by_size">Order by size</string>
-    <string name="menu_toggle_legend">Toggle legend</string>
-    <string name="menu_toggle_labels">Toggle labels</string>
-    <string name="label_chart_no_data">No chart data available</string>
-    <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
-	<string name="label_other_slice">Other</string>
+	<string name="title_reports">Reports</string>
+	<string name="title_pie_chart">Pie Chart</string>
+	<string name="title_line_chart">Line Chart</string>
+	<string name="title_bar_chart">Bar Chart</string>
+	<string name="menu_order_by_size">Order by size</string>
+	<string name="menu_toggle_legend">Toggle legend</string>
+	<string name="menu_toggle_labels">Toggle labels</string>
+	<string name="menu_toggle_percentage_mode">Toggle percentage</string>
+	<string name="menu_toggle_average_lines">Toggle average lines</string>
 	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
+	<string name="label_chart_no_data">No chart data available</string>
+	<string name="label_chart_overall">Overall</string>
+	<string name="label_chart_total">Total\n</string>
+	<string name="label_other_slice">Other</string>
+	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 356d23e4..8a35fec0 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -440,17 +440,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
+    <string name="title_reports">Reports</string>
     <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_bar_chart">Bar Chart</string>
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>
+    <string name="menu_toggle_percentage_mode">Toggle percentage</string>
+    <string name="menu_toggle_average_lines">Toggle average lines</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
     <string name="label_other_slice">Other</string>
-    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
+    <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+    <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index 63229bca..7407e03d 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -431,17 +431,20 @@
     <string name="menu_title_favorite">Favorite</string>
     <string name="drawer_open">Navigation drawer opened</string>
     <string name="drawer_close">Navigation drawer closed</string>
+    <string name="title_reports">Reports</string>
     <string name="title_pie_chart">Pie Chart</string>
-    <string name="menu_chart_report">Chart report</string>
+    <string name="title_line_chart">Line Chart</string>
+    <string name="title_bar_chart">Bar Chart</string>
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>
+    <string name="menu_toggle_percentage_mode">Toggle percentage</string>
+    <string name="menu_toggle_average_lines">Toggle average lines</string>
+    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
     <string name="label_chart_total">Total\n</string>
-    <string name="title_bar_chart">Bar Chart</string>
-    <string name="title_line_chart">Line Chart</string>
-    <string name="title_reports">Reports</string>
     <string name="label_other_slice">Other</string>
-    <string name="menu_group_smaller_slices">Group Smaller Slices</string>
+    <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+    <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
 </resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 4bd97fa0..3d9d33eb 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -441,7 +441,6 @@
 	<string name="title_pie_chart">Pie Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_bar_chart">Bar Chart</string>
-    <string name="menu_chart_report">Chart report</string>
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>

From f53efe9d2d4143663e6836a8bfeade56c9540795 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 14 Apr 2015 20:22:07 +0300
Subject: [PATCH 30/32] Code documentation and refactoring

---
 .../gnucash/android/ui/chart/BarChartActivity.java | 137 ++++++++++++--------
 .../android/ui/chart/ChartReportActivity.java      |  17 +++
 .../android/ui/chart/LineChartActivity.java        | 143 +++++++++++++--------
 .../gnucash/android/ui/chart/PieChartActivity.java |  12 +-
 4 files changed, 197 insertions(+), 112 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index 3b9051f0..edcc0949 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -1,3 +1,19 @@
+/*
+ * Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package org.gnucash.android.ui.chart;
 
 import android.graphics.Color;
@@ -36,6 +52,7 @@
 import java.util.Map;
 
 /**
+ * Activity used for drawing a bar chart
  *
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
@@ -45,15 +62,15 @@
     private static final String X_AXIS_PATTERN = "MMM YY";
     private static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
     private static final int ANIMATION_DURATION = 3000;
-
+    private static final int NO_DATA_COLOR = Color.LTGRAY;
+    private static final int NO_DATA_BAR_COUNTS = 3;
     private static final int[] COLORS = {
             Color.parseColor("#68F1AF"), Color.parseColor("#CC1f09"), Color.parseColor("#EE8600"),
             Color.parseColor("#1469EB"), Color.parseColor("#B304AD"),
     };
 
-    private AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
-
     private BarChart mChart;
+    private AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
     private Map<AccountType, Long> mEarliestTimestampsMap = new HashMap<AccountType, Long>();
     private Map<AccountType, Long> mLatestTimestampsMap = new HashMap<AccountType, Long>();
     private long mEarliestTransactionTimestamp;
@@ -63,11 +80,12 @@
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
         setContentView(R.layout.activity_line_chart);
         super.onCreate(savedInstanceState);
         getSupportActionBar().setTitle(R.string.title_bar_chart);
 
-        mChart = new com.github.mikephil.charting.charts.BarChart(this);
+        mChart = new BarChart(this);
         ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
@@ -76,21 +94,34 @@ protected void onCreate(Bundle savedInstanceState) {
         mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter());
         mChart.getAxisRight().setEnabled(false);
 
+        // below we can add/remove displayed account's types
         mChart.setData(getData(new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
+
         Legend legend = mChart.getLegend();
         legend.setForm(Legend.LegendForm.CIRCLE);
         legend.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
 
-        if (mChartDataPresent) {
+        if (!mChartDataPresent) {
+            mChart.getAxisLeft().setAxisMaxValue(10);
+            mChart.getAxisLeft().setDrawLabels(false);
+            mChart.getXAxis().setDrawLabels(false);
+            mChart.setTouchEnabled(false);
+            ((TextView) findViewById(R.id.selected_chart_slice)).setText(getResources().getString(R.string.label_chart_no_data));
+        } else {
             mChart.animateY(ANIMATION_DURATION);
         }
         mChart.invalidate();
     }
 
+    /**
+     * Returns a data object that represents a user data of the specified account types
+     * @param accountTypeList account's types which will be displayed
+     * @return a {@code BarData} instance that represents a user data
+     */
     private BarData getData(ArrayList<AccountType> accountTypeList) {
         if (!calculateEarliestAndLatestTimestamps(accountTypeList)) {
             mChartDataPresent = false;
-            return getEmptyDataSet();
+            return getEmptyData();
         }
 
         LocalDateTime startDate = new LocalDateTime(mEarliestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
@@ -119,7 +150,7 @@ private BarData getData(ArrayList<AccountType> accountTypeList) {
         }
 
         BarDataSet set = new BarDataSet(values, "");
-        // conversion enum list to string array
+        // conversion an enum list to a string array
         set.setStackLabels(accountTypeList.toString().substring(1, accountTypeList.toString().length() - 1).split(", "));
         set.setColors(Arrays.copyOfRange(COLORS, 0, accountTypeList.size()));
         dataSets.add(set);
@@ -127,45 +158,10 @@ private BarData getData(ArrayList<AccountType> accountTypeList) {
         return new BarData(xValues, dataSets);
     }
 
-    private Map<AccountType, List<String>> getAccountMap(List<AccountType> accountTypeList) {
-        Map<AccountType, List<String>> accountMap = new HashMap<AccountType, List<String>>();
-        for (AccountType accountType : accountTypeList) {
-            List<String> accountUIDList = new ArrayList<String>();
-            for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
-                if (account.getAccountType() == accountType && !account.isPlaceholderAccount()) {
-                    accountUIDList.add(account.getUID());
-                }
-                accountMap.put(accountType, accountUIDList);
-            }
-        }
-        return accountMap;
-    }
-
-    private BarData getEmptyDataSet() {
-        ArrayList<String> xValues = new ArrayList<String>();
-        ArrayList<BarEntry> yValues = new ArrayList<BarEntry>();
-        for (int i = 0; i < 3; i++) {
-            xValues.add("");
-            yValues.add(new BarEntry(i % 2 == 0 ? 5f : 4.5f, i));
-        }
-        String noDataMsg = getResources().getString(R.string.label_chart_no_data);
-        BarDataSet set = new BarDataSet(yValues, noDataMsg);
-        set.setDrawValues(false);
-        set.setColor(Color.LTGRAY);
-
-        mChart.getAxisLeft().setAxisMaxValue(10);
-        mChart.getAxisLeft().setDrawLabels(false);
-        mChart.getXAxis().setDrawLabels(false);
-        mChart.setTouchEnabled(false);
-        ((TextView) findViewById(R.id.selected_chart_slice)).setText(noDataMsg);
-
-        return new BarData(xValues, new ArrayList<BarDataSet>(Arrays.asList(set)));
-    }
-
     /**
-     *
-     * @param accountTypeList
-     * @return {@code false} if no data present, {@code true} otherwise
+     * Calculates the earliest and latest transaction's timestamps of the specified account types
+     * @param accountTypeList account's types which will be processed
+     * @return {@code false} if no data available, {@code true} otherwise
      */
     private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
         for (AccountType type : accountTypeList) {
@@ -179,7 +175,7 @@ private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTy
             }
         }
 
-        if (mEarliestTimestampsMap.isEmpty()) {
+        if (mEarliestTimestampsMap.isEmpty() && mLatestTimestampsMap.isEmpty()) {
             return false;
         }
 
@@ -188,10 +184,46 @@ private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTy
         Collections.sort(timestamps);
         mEarliestTransactionTimestamp = timestamps.get(0);
         mLatestTransactionTimestamp = timestamps.get(timestamps.size() - 1);
-
         return true;
     }
 
+    /**
+     * Returns a map with an account type as key and correspond accounts UIDs as value
+     * @param accountTypeList account's types which will be used as keys
+     * @return
+     */
+    private Map<AccountType, List<String>> getAccountMap(List<AccountType> accountTypeList) {
+        Map<AccountType, List<String>> accountMap = new HashMap<AccountType, List<String>>();
+        for (AccountType accountType : accountTypeList) {
+            List<String> accountUIDList = new ArrayList<String>();
+            for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
+                if (account.getAccountType() == accountType && !account.isPlaceholderAccount()) {
+                    accountUIDList.add(account.getUID());
+                }
+                accountMap.put(accountType, accountUIDList);
+            }
+        }
+        return accountMap;
+    }
+
+    /**
+     * Returns a data object that represents situation when no user data available
+     * @return a {@code BarData} instance for situation when no user data available
+     */
+    private BarData getEmptyData() {
+        ArrayList<String> xValues = new ArrayList<String>();
+        ArrayList<BarEntry> yValues = new ArrayList<BarEntry>();
+        for (int i = 0; i < NO_DATA_BAR_COUNTS; i++) {
+            xValues.add("");
+            yValues.add(new BarEntry(i % 2 == 0 ? 5f : 4.5f, i));
+        }
+        BarDataSet set = new BarDataSet(yValues, getResources().getString(R.string.label_chart_no_data));
+        set.setDrawValues(false);
+        set.setColor(NO_DATA_COLOR);
+
+        return new BarData(xValues, new ArrayList<BarDataSet>(Arrays.asList(set)));
+    }
+
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getSupportMenuInflater().inflate(R.menu.chart_actions, menu);
@@ -212,22 +244,21 @@ public boolean onPrepareOptionsMenu(Menu menu) {
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
-            case R.id.menu_toggle_legend: {
+            case R.id.menu_toggle_legend:
                 mChart.getLegend().setEnabled(!mChart.getLegend().isEnabled());
                 mChart.invalidate();
                 break;
-            }
-            case R.id.menu_percentage_mode: {
+
+            case R.id.menu_percentage_mode:
                 mTotalPercentageMode = !mTotalPercentageMode;
                 int msgId = mTotalPercentageMode ? R.string.toast_chart_percentage_mode_total
                         : R.string.toast_chart_percentage_mode_current_bar;
                 Toast.makeText(this, msgId, Toast.LENGTH_LONG).show();
                 break;
-            }
-            case android.R.id.home: {
+
+            case android.R.id.home:
                 finish();
                 break;
-            }
         }
         return true;
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
index b68eab09..2eb47065 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
@@ -1,3 +1,19 @@
+/*
+ * Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package org.gnucash.android.ui.chart;
 
 import android.content.Intent;
@@ -8,6 +24,7 @@
 import org.gnucash.android.ui.passcode.PassLockActivity;
 
 /**
+ * Allows to select chart by type
  *
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index ca05bff8..e75bb8ae 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -1,3 +1,19 @@
+/*
+ * Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package org.gnucash.android.ui.chart;
 
 import android.graphics.Color;
@@ -35,6 +51,7 @@
 import java.util.Map;
 
 /**
+ * Activity used for drawing a line chart
  *
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
@@ -42,19 +59,21 @@
 
     private static final String TAG = "LineChartActivity";
     private static final String X_AXIS_PATTERN = "MMM YY";
-
+    private static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
+    private static final int ANIMATION_DURATION = 3000;
+    private static final int NO_DATA_COLOR = Color.GRAY;
+    private static final int NO_DATA_BAR_COUNTS = 5;
     private static final int[] COLORS = {
             Color.parseColor("#68F1AF"), Color.parseColor("#cc1f09"), Color.parseColor("#EE8600"),
             Color.parseColor("#1469EB"), Color.parseColor("#B304AD"),
     };
-
     private static final int[] FILL_COLORS = {
             Color.parseColor("#008000"), Color.parseColor("#FF0000"), Color.parseColor("#BE6B00"),
             Color.parseColor("#0065FF"), Color.parseColor("#8F038A"),
     };
 
     private LineChart mChart;
-    private AccountsDbAdapter mAccountsDbAdapter;
+    private AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
     private Map<AccountType, Long> mEarliestTimestampsMap = new HashMap<AccountType, Long>();
     private Map<AccountType, Long> mLatestTimestampsMap = new HashMap<AccountType, Long>();
     private long mEarliestTransactionTimestamp;
@@ -68,39 +87,40 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         getSupportActionBar().setTitle(R.string.title_line_chart);
 
-        mAccountsDbAdapter = AccountsDbAdapter.getInstance();
-
         mChart = new LineChart(this);
         ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
         mChart.getAxisRight().setEnabled(false);
-        mChart.setData(getDataSet(new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
+
+        // below we can add/remove displayed account's types
+        mChart.setData(getData(new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
 
         Legend legend = mChart.getLegend();
         legend.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
         legend.setForm(Legend.LegendForm.CIRCLE);
 
-        if (mChartDataPresent) {
-            mChart.animateX(3000);
+        if (!mChartDataPresent) {
+            mChart.getAxisLeft().setAxisMaxValue(10);
+            mChart.getAxisLeft().setDrawLabels(false);
+            mChart.getXAxis().setDrawLabels(false);
+            mChart.setTouchEnabled(false);
+            ((TextView) findViewById(R.id.selected_chart_slice)).setText(getResources().getString(R.string.label_chart_no_data));
+        } else {
+            mChart.animateX(ANIMATION_DURATION);
         }
         mChart.invalidate();
     }
 
-    private LineData getDataSet(List<AccountType> accountTypes) {
-        setEarliestAndLatestTimestamps(accountTypes);
-
-        if (mEarliestTransactionTimestamp == 0) {
-            if (mLatestTransactionTimestamp == 0) {
-                return getEmptyDataSet();
-            }
-            for (Map.Entry<AccountType, Long> entry : mEarliestTimestampsMap.entrySet()) {
-                if (entry.getValue() == 0) {
-                    accountTypes.remove(entry.getKey());
-                }
-            }
-            Log.w(TAG, accountTypes.toString());
-            setEarliestAndLatestTimestamps(accountTypes);
+    /**
+     * Returns a data object that represents a user data of the specified account types
+     * @param accountTypeList account's types which will be displayed
+     * @return a {@code LineData} instance that represents a user data
+     */
+    private LineData getData(List<AccountType> accountTypeList) {
+        if (!calculateEarliestAndLatestTimestamps(accountTypeList)) {
+            mChartDataPresent = false;
+            return getEmptyData();
         }
 
         LocalDate startDate = new LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1);
@@ -113,7 +133,7 @@ private LineData getDataSet(List<AccountType> accountTypes) {
         }
 
         ArrayList<LineDataSet> dataSets = new ArrayList<LineDataSet>();
-        for (AccountType accountType : accountTypes) {
+        for (AccountType accountType : accountTypeList) {
             LineDataSet set = new LineDataSet(getEntryList(accountType), accountType.toString());
             set.setDrawFilled(true);
             set.setLineWidth(2);
@@ -126,30 +146,31 @@ private LineData getDataSet(List<AccountType> accountTypes) {
         return new LineData(xValues, dataSets);
     }
 
-    private LineData getEmptyDataSet() {
-        mChartDataPresent = false;
-
+    /**
+     * Returns a data object that represents situation when no user data available
+     * @return a {@code LineData} instance for situation when no user data available
+     */
+    private LineData getEmptyData() {
         ArrayList<String> xValues = new ArrayList<String>();
         ArrayList<Entry> yValues = new ArrayList<Entry>();
-        for (int i = 0; i < 5; i++) {
+        for (int i = 0; i < NO_DATA_BAR_COUNTS; i++) {
             xValues.add("");
             yValues.add(new Entry(i % 2 == 0 ? 5f : 4.5f, i));
         }
         LineDataSet set = new LineDataSet(yValues, getResources().getString(R.string.label_chart_no_data));
         set.setDrawFilled(true);
         set.setDrawValues(false);
-        set.setColor(Color.GRAY);
-        set.setFillColor(Color.GRAY);
-
-        mChart.getAxisLeft().setAxisMaxValue(10);
-        mChart.getAxisLeft().setDrawLabels(false);
-        mChart.getXAxis().setDrawLabels(false);
-        mChart.setTouchEnabled(false);
-        ((TextView) findViewById(R.id.selected_chart_slice)).setText(getResources().getString(R.string.label_chart_no_data));
+        set.setColor(NO_DATA_COLOR);
+        set.setFillColor(NO_DATA_COLOR);
 
         return new LineData(xValues, new ArrayList<LineDataSet>(Arrays.asList(set)));
     }
 
+    /**
+     * Returns entries which represent a user data of the specified account type
+     * @param accountType account's type which user data will be processed
+     * @return entries which represent a user data
+     */
     private ArrayList<Entry> getEntryList(AccountType accountType) {
         List<String> accountUIDList = new ArrayList<String>();
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
@@ -179,28 +200,46 @@ private LineData getEmptyDataSet() {
         return values;
     }
 
-    private void setEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
-        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
-        mEarliestTimestampsMap.clear();
-        mLatestTimestampsMap.clear();
+    /**
+     * Calculates the earliest and latest transaction's timestamps of the specified account types
+     * @param accountTypeList account's types which will be processed
+     * @return {@code false} if no data available, {@code true} otherwise
+     */
+    private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
         for (AccountType type : accountTypeList) {
-            mEarliestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfEarliestTransaction(type));
-            mLatestTimestampsMap.put(type, transactionsDbAdapter.getTimestampOfLatestTransaction(type));
+            long earliest = TransactionsDbAdapter.getInstance().getTimestampOfEarliestTransaction(type);
+            long latest = TransactionsDbAdapter.getInstance().getTimestampOfLatestTransaction(type);
+            if (earliest > 0 && latest > 0) {
+                mEarliestTimestampsMap.put(type, earliest);
+                mLatestTimestampsMap.put(type, latest);
+            } else {
+                accountTypeList.remove(type);
+            }
+        }
+
+        if (mEarliestTimestampsMap.isEmpty() && mLatestTimestampsMap.isEmpty()) {
+            return false;
         }
 
         List<Long> timestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
         timestamps.addAll(mLatestTimestampsMap.values());
         Collections.sort(timestamps);
-        Log.d(TAG, "X-axis timestamps list: " + timestamps.toString());
         mEarliestTransactionTimestamp = timestamps.get(0);
         mLatestTransactionTimestamp = timestamps.get(timestamps.size() - 1);
+        return true;
     }
 
+    /**
+     * Returns a difference in months between the global earliest timestamp and the earliest
+     * transaction's timestamp of the specified account type
+     * @param accountType the account type
+     * @return the difference in months
+     */
     private int getXAxisOffset(AccountType accountType) {
         return Months.monthsBetween(
                 new LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1),
                 new LocalDate(mEarliestTimestampsMap.get(accountType)).withDayOfMonth(1)
-                ).getMonths();
+        ).getMonths();
     }
 
     @Override
@@ -223,12 +262,12 @@ public boolean onPrepareOptionsMenu(Menu menu) {
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
-            case R.id.menu_toggle_legend: {
+            case R.id.menu_toggle_legend:
                 mChart.getLegend().setEnabled(!mChart.getLegend().isEnabled());
                 mChart.invalidate();
                 break;
-            }
-            case R.id.menu_toggle_average_lines: {
+
+            case R.id.menu_toggle_average_lines:
                 if (mChart.getAxisLeft().getLimitLines().isEmpty()) {
                     for (LineDataSet set : mChart.getData().getDataSets()) {
                         LimitLine line = new LimitLine(set.getYValueSum() / set.getEntryCount(), set.getLabel());
@@ -239,14 +278,12 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 } else {
                     mChart.getAxisLeft().removeAllLimitLines();
                 }
-
                 mChart.invalidate();
                 break;
-            }
-            case android.R.id.home: {
+
+            case android.R.id.home:
                 finish();
                 break;
-            }
         }
         return true;
     }
@@ -254,9 +291,11 @@ public boolean onOptionsItemSelected(MenuItem item) {
     @Override
     public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         if (e == null) return;
+        String label = mChart.getData().getXVals().get(e.getXIndex());
+        double value = e.getVal();
+        double sum = mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum();
         ((TextView) findViewById(R.id.selected_chart_slice))
-                .setText(mChart.getData().getXVals().get(e.getXIndex()) + " - " + e.getVal()
-                        + " (" + String.format("%.2f", (e.getVal() / mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum()) * 100) + " %)");
+                .setText(String.format(SELECTED_VALUE_PATTERN, label, value, value / sum * 100));
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index deb78192..2d5a1d4c 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -23,7 +23,6 @@
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.support.v4.app.DialogFragment;
-import android.util.Log;
 import android.view.View;
 import android.widget.AdapterView;
 import android.widget.AdapterView.OnItemSelectedListener;
@@ -160,7 +159,7 @@ private void setData(boolean forCurrentMonth) {
         mChart.highlightValues(null);
         mChart.clear();
 
-        mChart.setData(getPieData(forCurrentMonth));
+        mChart.setData(getData(forCurrentMonth));
         if (mChartDataPresent) {
             mChart.animateXY(ANIMATION_DURATION, ANIMATION_DURATION);
         }
@@ -178,7 +177,7 @@ private void setData(boolean forCurrentMonth) {
      * @param forCurrentMonth sets data only for current month if {@code true}, otherwise for all time
      * @return {@code PieData} instance
      */
-    private PieData getPieData(boolean forCurrentMonth) {
+    private PieData getData(boolean forCurrentMonth) {
         List<Account> accountList = mAccountsDbAdapter.getSimpleAccountList(
                 AccountEntry.COLUMN_TYPE + " = ? AND " + AccountEntry.COLUMN_PLACEHOLDER + " = ?",
                 new String[]{ mAccountType.name(), "0" }, null);
@@ -186,13 +185,14 @@ private PieData getPieData(boolean forCurrentMonth) {
         for (Account account : accountList) {
             uidList.add(account.getUID());
         }
-        double sum = mAccountsDbAdapter.getAccountsBalance(uidList, -1, -1).absolute().asDouble();
+        double sum;
         if (forCurrentMonth) {
             long start = mChartDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
             long end = mChartDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
             sum = mAccountsDbAdapter.getAccountsBalance(uidList, start, end).absolute().asDouble();
+        } else {
+            sum = mAccountsDbAdapter.getAccountsBalance(uidList, -1, -1).absolute().asDouble();
         }
-        Log.w("Tag", "Total Balance " + sum);
 
         double otherSlice = 0;
         PieDataSet dataSet = new PieDataSet(null, "");
@@ -212,14 +212,12 @@ private PieData getPieData(boolean forCurrentMonth) {
                     balance = mAccountsDbAdapter.getAccountBalance(account.getUID()).absolute().asDouble();
                 }
 
-                Log.w("Tag", "Percent = " + balance / sum * 100);
                 if (balance / sum * 100 > mSlicePercentThreshold) {
                     dataSet.addEntry(new Entry((float) balance, dataSet.getEntryCount()));
                     dataSet.addColor(COLORS[(dataSet.getEntryCount() - 1) % COLORS.length]);
                     names.add(account.getName());
                 } else {
                     otherSlice += balance;
-                    Log.w("Tag", "Other = " + otherSlice);
                 }
             }
         }

From 05dd54c29aa46f3cc892ff521ccad50428c7ec5a Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 15 Apr 2015 21:37:27 +0300
Subject: [PATCH 31/32] Fixed concurrent modification exception

---
 .../main/java/org/gnucash/android/ui/chart/BarChartActivity.java   | 7 +++++--
 .../main/java/org/gnucash/android/ui/chart/LineChartActivity.java  | 6 ++++--
 2 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index edcc0949..da3429fc 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -48,6 +48,7 @@
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashMap;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 
@@ -164,17 +165,19 @@ private BarData getData(ArrayList<AccountType> accountTypeList) {
      * @return {@code false} if no data available, {@code true} otherwise
      */
     private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
-        for (AccountType type : accountTypeList) {
+        for (Iterator<AccountType> iter = accountTypeList.iterator(); iter.hasNext();) {
+            AccountType type = iter.next();
             long earliest = TransactionsDbAdapter.getInstance().getTimestampOfEarliestTransaction(type);
             long latest = TransactionsDbAdapter.getInstance().getTimestampOfLatestTransaction(type);
             if (earliest > 0 && latest > 0) {
                 mEarliestTimestampsMap.put(type, earliest);
                 mLatestTimestampsMap.put(type, latest);
             } else {
-                accountTypeList.remove(type);
+                iter.remove();
             }
         }
 
+
         if (mEarliestTimestampsMap.isEmpty() && mLatestTimestampsMap.isEmpty()) {
             return false;
         }
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index e75bb8ae..b27ced68 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -47,6 +47,7 @@
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashMap;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 
@@ -206,14 +207,15 @@ private LineData getEmptyData() {
      * @return {@code false} if no data available, {@code true} otherwise
      */
     private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
-        for (AccountType type : accountTypeList) {
+        for (Iterator<AccountType> iter = accountTypeList.iterator(); iter.hasNext();) {
+            AccountType type = iter.next();
             long earliest = TransactionsDbAdapter.getInstance().getTimestampOfEarliestTransaction(type);
             long latest = TransactionsDbAdapter.getInstance().getTimestampOfLatestTransaction(type);
             if (earliest > 0 && latest > 0) {
                 mEarliestTimestampsMap.put(type, earliest);
                 mLatestTimestampsMap.put(type, latest);
             } else {
-                accountTypeList.remove(type);
+                iter.remove();
             }
         }
 

From 0ba023bd2c8557a7fd8a09c3f810198574702af2 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 15 Apr 2015 22:19:22 +0300
Subject: [PATCH 32/32] Fix for recurrence transactions

---
 .../org/gnucash/android/db/TransactionsDbAdapter.java     | 15 ++++++++-------
 .../org/gnucash/android/ui/chart/BarChartActivity.java    |  1 -
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index 35ce754b..04893853 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -591,15 +591,16 @@ public long getTimestampOfLatestTransaction(AccountType type) {
     }
 
     private long getTimestamp(String mod, AccountType type) {
-        String sql = "SELECT " + mod + "(" + TransactionEntry.COLUMN_TIMESTAMP + ")" +
-                " FROM " + TransactionEntry.TABLE_NAME +
-                " INNER JOIN " + SplitEntry.TABLE_NAME + " ON "
+        String sql = "SELECT " + mod + "(" + TransactionEntry.COLUMN_TIMESTAMP + ")"
+                + " FROM " + TransactionEntry.TABLE_NAME
+                + " INNER JOIN " + SplitEntry.TABLE_NAME + " ON "
                 + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_TRANSACTION_UID + " = "
-                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_UID +
-                " INNER JOIN " + AccountEntry.TABLE_NAME + " ON "
+                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_UID
+                + " INNER JOIN " + AccountEntry.TABLE_NAME + " ON "
                 + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID + " = "
-                + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_ACCOUNT_UID +
-                " WHERE " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_TYPE + " = ?";
+                + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_ACCOUNT_UID
+                + " WHERE " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_TYPE + " = ? AND "
+                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_RECURRENCE_PERIOD + " = 0";
         Cursor cursor = mDb.rawQuery(sql, new String[]{type.toString()});
         long timestamp= 0;
         if (cursor != null) {
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index da3429fc..0c2fde6a 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -177,7 +177,6 @@ private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTy
             }
         }
 
-
         if (mEarliestTimestampsMap.isEmpty() && mLatestTimestampsMap.isEmpty()) {
             return false;
         }
