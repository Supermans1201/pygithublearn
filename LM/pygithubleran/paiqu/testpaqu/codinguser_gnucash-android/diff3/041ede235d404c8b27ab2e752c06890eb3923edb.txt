From 041ede235d404c8b27ab2e752c06890eb3923edb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <alexandre.magaz@gmail.com>
Date: Thu, 13 Apr 2017 01:20:11 +0200
Subject: [PATCH] Remove the Currency version of getImbalanceAccountUID

---
 .../gnucash/android/test/ui/TransactionsActivityTest.java    |  8 ++++----
 .../org/gnucash/android/db/adapter/AccountsDbAdapter.java    | 12 ------------
 .../android/test/unit/db/TransactionsDbAdapterTest.java      |  2 +-
 3 files changed, 5 insertions(+), 17 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index aa30d51a..085ea5c9 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -365,7 +365,7 @@ public void testAutoBalanceTransactions(){
 		mTransactionsDbAdapter.deleteAllRecords();
 
 		assertThat(mTransactionsDbAdapter.getRecordsCount()).isEqualTo(0);
-		String imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(CURRENCY_CODE));
+		String imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Commodity.getInstance(CURRENCY_CODE));
 		assertThat(imbalanceAcctUID).isNull();
 
 		validateTransactionListDisplayed();
@@ -382,7 +382,7 @@ public void testAutoBalanceTransactions(){
 		assertThat(mTransactionsDbAdapter.getRecordsCount()).isEqualTo(1);
 		Transaction transaction = mTransactionsDbAdapter.getAllTransactions().get(0);
 		assertThat(transaction.getSplits()).hasSize(2);
-		imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(CURRENCY_CODE));
+		imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Commodity.getInstance(CURRENCY_CODE));
 		assertThat(imbalanceAcctUID).isNotNull();
 		assertThat(imbalanceAcctUID).isNotEmpty();
 		assertThat(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID)).isTrue(); //imbalance account should be hidden in single entry mode
@@ -403,7 +403,7 @@ public void testSplitEditor(){
 		mTransactionsDbAdapter.deleteAllRecords();
 
 		//when we start there should be no imbalance account in the system
-		String imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(CURRENCY_CODE));
+		String imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Commodity.getInstance(CURRENCY_CODE));
 		assertThat(imbalanceAcctUID).isNull();
 
 		validateTransactionListDisplayed();
@@ -431,7 +431,7 @@ public void testSplitEditor(){
 		Transaction transaction = transactions.get(0);
 
 		assertThat(transaction.getSplits()).hasSize(3); //auto-balanced
-		imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(CURRENCY_CODE));
+		imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Commodity.getInstance(CURRENCY_CODE));
 		assertThat(imbalanceAcctUID).isNotNull();
 		assertThat(imbalanceAcctUID).isNotEmpty();
 		assertThat(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID)).isFalse();
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index 2ffacd07..4e604b3e 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -600,18 +600,6 @@ public String getOrCreateImbalanceAccountUID(Commodity commodity){
     }
 
     /**
-     * Returns the GUID of the imbalance account for the currency
-     * <p>This method will not create the imbalance account if it doesn't exist</p>
-     * @param currency Currency for the imbalance account
-     * @return GUID of the account or null if the account doesn't exist yet
-     * @see #getOrCreateImbalanceAccountUID(Commodity)
-     */
-    public String getImbalanceAccountUID(Currency currency){
-        String imbalanceAccountName = getImbalanceAccountName(currency);
-        return findAccountUidByFullName(imbalanceAccountName);
-    }
-
-    /**
      * Returns the GUID of the imbalance account for the commodity
      *
      * <p>This method will not create the imbalance account if it doesn't exist</p>
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
index 881fc594..fd98a226 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
@@ -119,7 +119,7 @@ public void shouldBalanceTransactionsOnSave(){
 		Transaction trn = mTransactionsDbAdapter.getRecord(transaction.getUID());
 		assertThat(trn.getSplits()).hasSize(2);
 
-		String imbalanceAccountUID = mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(Money.DEFAULT_CURRENCY_CODE));
+		String imbalanceAccountUID = mAccountsDbAdapter.getImbalanceAccountUID(Commodity.getInstance(Money.DEFAULT_CURRENCY_CODE));
 		assertThat(trn.getSplits()).extracting("mAccountUID").contains(imbalanceAccountUID);
 	}
 
