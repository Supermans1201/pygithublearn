From 2404282c4d725cbf3abee6b0bdb68a59277c8242 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 27 May 2016 23:38:43 +0200
Subject: [PATCH] Add delete confirmation dialog before deleting book

Add option to create new book from Book manager interface
Add multi book support tests
---
 .../org/gnucash/android/test/ui/MultiBookTest.java | 13 ++++++
 .../android/ui/settings/BookListFragment.java      | 49 ++++++++++++++++++++--
 app/src/main/res/menu/book_list_actions.xml        | 23 ++++++++++
 .../android/test/unit/db/BooksDbAdapterTest.java   | 24 +++++++++++
 4 files changed, 105 insertions(+), 4 deletions(-)
 create mode 100644 app/src/main/res/menu/book_list_actions.xml

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
index 241223b8..3a964482 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
@@ -94,6 +94,19 @@ public void creatingNewAccounts_shouldCreatedNewBook(){
         assertThat(activeBook.getDisplayName()).isEqualTo("Book " + (booksCount+1));
     }
 
+    @Test
+    public void testCreateNewBook(){
+        long bookCount = mBooksDbAdapter.getRecordsCount();
+
+        shouldOpenBookManager();
+
+        onView(withId(R.id.menu_create_book))
+                .check(matches(isDisplayed()))
+                .perform(click());
+
+        assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(bookCount+1);
+    }
+
     private static void sleep(long millis){
         try {
             Thread.sleep(millis);
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
index e54bcd36..16b45c68 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
@@ -17,6 +17,7 @@
 package org.gnucash.android.ui.settings;
 
 import android.content.Context;
+import android.content.DialogInterface;
 import android.database.Cursor;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
@@ -25,10 +26,12 @@
 import android.support.v4.content.Loader;
 import android.support.v4.widget.SimpleCursorAdapter;
 import android.support.v7.app.ActionBar;
+import android.support.v7.app.AlertDialog;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.PopupMenu;
 import android.util.Log;
 import android.view.LayoutInflater;
+import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
@@ -38,6 +41,7 @@
 import android.widget.TextView;
 
 import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.BookDbHelper;
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
@@ -47,6 +51,7 @@
 import java.util.Date;
 
 import org.gnucash.android.db.DatabaseSchema.BookEntry;
+import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.Refreshable;
 import org.w3c.dom.Text;
 
@@ -85,6 +90,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         actionBar.setHomeButtonEnabled(true);
         actionBar.setDisplayHomeAsUpEnabled(true);
         actionBar.setTitle(R.string.title_manage_books);
+        setHasOptionsMenu(true);
 
         getListView().setChoiceMode(ListView.CHOICE_MODE_NONE);
     }
@@ -96,8 +102,26 @@ public void onResume() {
     }
 
     @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.book_list_actions, menu);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()){
+            case R.id.menu_create_book:
+                AccountsActivity.createDefaultAccounts(GnuCashApplication.getDefaultCurrencyCode(), getActivity());
+                return true;
+
+            default:
+                return false;
+        }
+
+    }
+
+    @Override
     public void refresh() {
-        getLoaderManager().initLoader(0, null, this);
+        getLoaderManager().restartLoader(0, null, this);
     }
 
     @Override
@@ -178,9 +202,26 @@ public boolean onMenuItemClick(MenuItem item) {
                 deleteBookBtn.setOnClickListener(new View.OnClickListener() {
                     @Override
                     public void onClick(View v) {
-                        //// TODO: 18.05.2016 Delete confirmation dialog
-                        BooksDbAdapter.getInstance().deleteRecord(bookUID);
-                        refresh();
+                        //// TODO: extract strings
+                        AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(getActivity());
+                        dialogBuilder.setTitle("Confirm delete Book")
+                                .setIcon(R.drawable.ic_close_white_24dp)
+                                .setMessage("Are you sure you want to delete this book.\nThis action cannot be undone!");
+                        dialogBuilder.setPositiveButton("Delete Book", new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                BooksDbAdapter.getInstance().deleteRecord(bookUID);
+                                refresh();
+                            }
+                        });
+                        dialogBuilder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                dialog.dismiss();
+                            }
+                        });
+                        dialogBuilder.create().show();
+
                     }
                 });
             }
diff --git a/app/src/main/res/menu/book_list_actions.xml b/app/src/main/res/menu/book_list_actions.xml
new file mode 100644
index 00000000..79631a36
--- /dev/null
+++ b/app/src/main/res/menu/book_list_actions.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+      xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item android:id="@+id/menu_create_book"
+          android:icon="@drawable/ic_add_white_24dp"
+          app:showAsAction="always"
+          android:title="New Book"/>
+</menu>
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
index 30214faf..13ecbe7d 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
@@ -109,4 +109,28 @@ public void testGeneratedDisplayName(){
 
         assertThat(mBooksDbAdapter.generateDefaultBookName()).isEqualTo("Book 3");
     }
+
+    /**
+     * Test that book names never conflict and that the ordinal attached to the book name is
+     * increased irrespective of the order in which books are added to and deleted from the db
+     */
+    @Test
+    public void testGeneratedDisplayNames_shouldBeUnique(){
+        Book book1 = new Book(BaseModel.generateUID());
+        Book book2 = new Book(BaseModel.generateUID());
+        Book book3 = new Book(BaseModel.generateUID());
+
+        mBooksDbAdapter.addRecord(book1);
+        mBooksDbAdapter.addRecord(book2);
+        mBooksDbAdapter.addRecord(book3);
+
+        assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(3L);
+
+        mBooksDbAdapter.deleteRecord(book2.getUID());
+        assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(2L);
+
+        String generatedName = mBooksDbAdapter.generateDefaultBookName();
+        assertThat(generatedName).isNotEqualTo(book3.getDisplayName());
+        assertThat(generatedName).isEqualTo("Book 4");
+    }
 }
