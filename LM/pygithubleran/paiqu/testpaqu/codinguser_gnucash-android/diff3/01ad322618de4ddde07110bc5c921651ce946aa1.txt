From 01ad322618de4ddde07110bc5c921651ce946aa1 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Mon, 15 Sep 2014 21:12:07 +0300
Subject: [PATCH] Use default currency when creating default accounts

---
 .../android/ui/account/AccountsActivity.java       | 48 +++++++++++++---------
 .../ui/settings/AccountPreferencesFragment.java    | 19 ++++++---
 2 files changed, 42 insertions(+), 25 deletions(-)

diff --git a/app/src/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
index b9e3ad7d..cfd38db5 100644
--- a/app/src/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
@@ -17,6 +17,7 @@
 
 package org.gnucash.android.ui.account;
 
+import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
@@ -67,9 +68,9 @@
 /**
  * Manages actions related to accounts, displaying, exporting and creating new accounts
  * The various actions are implemented as Fragments which are then added to this activity
+ *
  * @author Ngewi Fet <ngewif@gmail.com>
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
- * 
  */
 public class AccountsActivity extends PassLockActivity implements OnAccountClickedListener {
 
@@ -265,7 +266,7 @@ private void init() {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         boolean firstRun = prefs.getBoolean(getString(R.string.key_first_run), true);
         if (firstRun){
-            createDefaultAccounts();
+            showFirstRunDialog();
             //default to using double entry and save the preference explicitly
             prefs.edit().putBoolean(getString(R.string.key_use_double_entry), true).commit();
         }
@@ -430,7 +431,7 @@ public void onNewAccountClick(View v) {
 	/**
 	 * Shows the user dialog to create default account structure or import existing account structure
 	 */
-	private void createDefaultAccounts(){
+	private void showFirstRunDialog() {
 		AlertDialog.Builder builder = new AlertDialog.Builder(this);
 		builder.setTitle(R.string.title_default_accounts);
         builder.setMessage(R.string.msg_confirm_create_default_accounts_first_run);
@@ -455,22 +456,7 @@ public void onClick(DialogInterface dialog, int which) {
                                 .putString(getString(R.string.key_default_currency), currency)
                                 .commit();
 
-                        InputStream accountFileInputStream = getResources().openRawResource(R.raw.default_accounts);
-                        BufferedReader reader = new BufferedReader(new InputStreamReader(accountFileInputStream));
-                        StringBuilder sb = new StringBuilder();
-                        String line = null;
-                        try {
-                            while ((line = reader.readLine()) != null) {
-                                sb.append(line).append("\n");
-                            }
-                            reader.close();
-                        } catch (IOException e) {
-                            e.printStackTrace();
-                        }
-                        String accountFile = sb.toString().replaceAll("<cmdty:id>(.*?)</cmdty:id>",
-                                "<cmdty:id>" + currency + "</cmdty:id>");
-                        accountFileInputStream = new ByteArrayInputStream(accountFile.getBytes());
-                        new ImportAsyncTask(AccountsActivity.this).execute(accountFileInputStream);
+                        createDefaultAccounts(currency, AccountsActivity.this);
                         removeFirstRunFlag();
                     }
                 });
@@ -500,6 +486,30 @@ public void onClick(DialogInterface dialogInterface, int i) {
 	}
 
     /**
+     * Creates default accounts with the specified currency
+     *
+     * @param currencyCode
+     * @param activity
+     */
+    public static void createDefaultAccounts(String currencyCode, Activity activity) {
+        InputStream accountFileInputStream = activity.getResources().openRawResource(R.raw.default_accounts);
+        BufferedReader reader = new BufferedReader(new InputStreamReader(accountFileInputStream));
+        StringBuilder sb = new StringBuilder();
+        String line = null;
+        try {
+            while ((line = reader.readLine()) != null) {
+                sb.append(line).append("\n");
+            }
+            reader.close();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        String accountFile = sb.toString().replaceAll("<cmdty:id>(.*?)</cmdty:id>", "<cmdty:id>" + currencyCode + "</cmdty:id>");
+        accountFileInputStream = new ByteArrayInputStream(accountFile.getBytes());
+        new ImportAsyncTask(activity).execute(accountFileInputStream);
+    }
+
+    /**
      * Starts Intent chooser for selecting a GnuCash accounts file to import.
      * The accounts are actually imported in onActivityResult
      */
diff --git a/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java b/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
index 40384546..aa9ae5a7 100644
--- a/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
+++ b/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
@@ -16,6 +16,7 @@
 
 package org.gnucash.android.ui.settings;
 
+import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.DialogInterface;
 import android.content.SharedPreferences;
@@ -23,20 +24,24 @@
 import android.preference.Preference;
 import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
+
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.app.SherlockPreferenceActivity;
+
 import org.gnucash.android.R;
-import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.model.Money;
-
-import java.io.InputStream;
+import org.gnucash.android.ui.account.AccountsActivity;
 
 /**
  * Account settings fragment inside the Settings activity
  *
  * @author Ngewi Fet <ngewi.fet@gmail.com>
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
 public class AccountPreferencesFragment extends PreferenceFragment {
+
+    private Activity activity;
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -46,13 +51,16 @@ public void onCreate(Bundle savedInstanceState) {
         actionBar.setHomeButtonEnabled(true);
         actionBar.setDisplayHomeAsUpEnabled(true);
         actionBar.setTitle(R.string.title_account_preferences);
+
+        activity = getActivity();
     }
 
     @Override
     public void onResume() {
         super.onResume();
         SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
-        String defaultCurrency = sharedPreferences.getString(getString(R.string.key_default_currency), Money.DEFAULT_CURRENCY_CODE);
+        final String defaultCurrency = sharedPreferences.getString(getString(R.string.key_default_currency),
+                Money.DEFAULT_CURRENCY_CODE);
         Preference pref = findPreference(getString(R.string.key_default_currency));
         pref.setSummary(defaultCurrency);
         pref.setOnPreferenceChangeListener((SettingsActivity)getActivity());
@@ -80,8 +88,7 @@ public boolean onPreferenceClick(Preference preference) {
                         .setPositiveButton(R.string.btn_create_accounts, new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialogInterface, int i) {
-                                InputStream accountFileInputStream = getResources().openRawResource(R.raw.default_accounts);
-                                new ImportAsyncTask(getActivity()).execute(accountFileInputStream);
+                                new AccountsActivity().createDefaultAccounts(defaultCurrency, activity);
                             }
                         })
                         .setNegativeButton(R.string.btn_cancel, new DialogInterface.OnClickListener() {
