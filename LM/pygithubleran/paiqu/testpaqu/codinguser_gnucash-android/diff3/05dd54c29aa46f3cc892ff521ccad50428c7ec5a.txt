From 05dd54c29aa46f3cc892ff521ccad50428c7ec5a Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 15 Apr 2015 21:37:27 +0300
Subject: [PATCH] Fixed concurrent modification exception

---
 .../main/java/org/gnucash/android/ui/chart/BarChartActivity.java   | 7 +++++--
 .../main/java/org/gnucash/android/ui/chart/LineChartActivity.java  | 6 ++++--
 2 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index edcc0949..da3429fc 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -48,6 +48,7 @@
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashMap;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 
@@ -164,17 +165,19 @@ private BarData getData(ArrayList<AccountType> accountTypeList) {
      * @return {@code false} if no data available, {@code true} otherwise
      */
     private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
-        for (AccountType type : accountTypeList) {
+        for (Iterator<AccountType> iter = accountTypeList.iterator(); iter.hasNext();) {
+            AccountType type = iter.next();
             long earliest = TransactionsDbAdapter.getInstance().getTimestampOfEarliestTransaction(type);
             long latest = TransactionsDbAdapter.getInstance().getTimestampOfLatestTransaction(type);
             if (earliest > 0 && latest > 0) {
                 mEarliestTimestampsMap.put(type, earliest);
                 mLatestTimestampsMap.put(type, latest);
             } else {
-                accountTypeList.remove(type);
+                iter.remove();
             }
         }
 
+
         if (mEarliestTimestampsMap.isEmpty() && mLatestTimestampsMap.isEmpty()) {
             return false;
         }
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index e75bb8ae..b27ced68 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -47,6 +47,7 @@
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashMap;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 
@@ -206,14 +207,15 @@ private LineData getEmptyData() {
      * @return {@code false} if no data available, {@code true} otherwise
      */
     private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
-        for (AccountType type : accountTypeList) {
+        for (Iterator<AccountType> iter = accountTypeList.iterator(); iter.hasNext();) {
+            AccountType type = iter.next();
             long earliest = TransactionsDbAdapter.getInstance().getTimestampOfEarliestTransaction(type);
             long latest = TransactionsDbAdapter.getInstance().getTimestampOfLatestTransaction(type);
             if (earliest > 0 && latest > 0) {
                 mEarliestTimestampsMap.put(type, earliest);
                 mLatestTimestampsMap.put(type, latest);
             } else {
-                accountTypeList.remove(type);
+                iter.remove();
             }
         }
 
