From 3afa244e9f5d6b1793ee18eacd03364315386537 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 12 Aug 2015 13:13:31 +0200
Subject: [PATCH] Display export options now within an activity, not a dialog

Display transfer account instead of transaction notes in the transaction list
---
 .../org/gnucash/android/export/ExportParams.java   |   4 +-
 .../org/gnucash/android/ui/BaseDrawerActivity.java |   2 +-
 .../java/org/gnucash/android/ui/FormActivity.java  |  36 +++--
 .../android/ui/account/AccountFormFragment.java    |   5 +-
 .../android/ui/account/AccountsActivity.java       |  19 ++-
 ...DialogFragment.java => ExportFormFragment.java} | 154 ++++++++++-----------
 .../ui/export/ScheduledExportListFragment.java     |   3 +-
 .../ui/transaction/TransactionFormFragment.java    |   2 +-
 .../ui/transaction/TransactionsListFragment.java   |  22 ++-
 app/src/main/res/layout/cardview_transaction.xml   |   2 +-
 app/src/main/res/layout/dialog_export.xml          | 132 ------------------
 ...t_new_account.xml => fragment_account_form.xml} |   0
 app/src/main/res/layout/fragment_export_form.xml   | 123 ++++++++++++++++
 ...ansaction.xml => fragment_transaction_form.xml} |  22 +--
 app/src/main/res/layout/list_item_transaction.xml  |  86 ------------
 app/src/main/res/menu/global_actions.xml           |   6 -
 app/src/main/res/values/styles.xml                 |   1 -
 17 files changed, 270 insertions(+), 349 deletions(-)
 rename app/src/main/java/org/gnucash/android/ui/export/{ExportDialogFragment.java => ExportFormFragment.java} (76%)
 delete mode 100644 app/src/main/res/layout/dialog_export.xml
 rename app/src/main/res/layout/{fragment_new_account.xml => fragment_account_form.xml} (100%)
 create mode 100644 app/src/main/res/layout/fragment_export_form.xml
 rename app/src/main/res/layout/{fragment_new_transaction.xml => fragment_transaction_form.xml} (90%)
 delete mode 100644 app/src/main/res/layout/list_item_transaction.xml

diff --git a/app/src/main/java/org/gnucash/android/export/ExportParams.java b/app/src/main/java/org/gnucash/android/export/ExportParams.java
index 120d052b..755a23aa 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportParams.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportParams.java
@@ -17,13 +17,13 @@
 package org.gnucash.android.export;
 
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.ui.export.ExportDialogFragment;
+import org.gnucash.android.ui.export.ExportFormFragment;
 
 /**
  * Encapsulation of the parameters used for exporting transactions.
  * The parameters are determined by the user in the export dialog and are then transmitted to the asynchronous task which
  * actually performs the export.
- * @see ExportDialogFragment
+ * @see ExportFormFragment
  * @see ExportAsyncTask
  *
  * @author Ngewi Fet <ngewif@gmail.com>
diff --git a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
index 93ae6d42..792333b8 100644
--- a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
@@ -169,7 +169,7 @@ protected void selectItem(int itemId) {
                 break;
 
             case R.id.nav_item_export:{
-                AccountsActivity.showExportDialog(this);
+                AccountsActivity.openExportFragment(this);
             }
                 break;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/FormActivity.java b/app/src/main/java/org/gnucash/android/ui/FormActivity.java
index 3571d90a..83a3d6e3 100644
--- a/app/src/main/java/org/gnucash/android/ui/FormActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/FormActivity.java
@@ -20,6 +20,7 @@
 import android.graphics.drawable.ColorDrawable;
 import android.os.Build;
 import android.os.Bundle;
+import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v7.app.AppCompatActivity;
@@ -30,6 +31,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.ui.account.AccountFormFragment;
+import org.gnucash.android.ui.export.ExportFormFragment;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 
 /**
@@ -80,7 +82,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 break;
 
             case EXPORT_FORM:
-                //nothing to see here yet, move along
+                showExportFormFragment(null);
                 break;
 
             default:
@@ -118,15 +120,9 @@ public String getCurrentAccountUID() {
      *             This could be an account to edit or a preset for the parent account
      */
     private void showAccountFormFragment(Bundle args){
-        FragmentManager fragmentManager = getSupportFragmentManager();
-        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
-
         AccountFormFragment accountFormFragment = AccountFormFragment.newInstance();
         accountFormFragment.setArguments(args);
-
-        fragmentTransaction.replace(R.id.fragment_container, accountFormFragment);
-
-        fragmentTransaction.commit();
+        showFormFragment(accountFormFragment);
     }
 
     /**
@@ -134,14 +130,30 @@ private void showAccountFormFragment(Bundle args){
      * @param args Bundle arguments to be passed to the fragment
      */
     private void showTransactionFormFragment(Bundle args){
+        TransactionFormFragment transactionFormFragment = new TransactionFormFragment();
+        transactionFormFragment.setArguments(args);
+        showFormFragment(transactionFormFragment);
+    }
+
+    /**
+     * Loads the export form fragment and passes the arguments
+     * @param args Bundle arguments
+     */
+    private void showExportFormFragment(Bundle args){
+        ExportFormFragment exportFragment = new ExportFormFragment();
+        showFormFragment(exportFragment);
+    }
+
+    /**
+     * Loads the fragment into the fragment container, replacing whatever was there before
+     * @param fragment Fragment to be displayed
+     */
+    private void showFormFragment(Fragment fragment){
         FragmentManager fragmentManager = getSupportFragmentManager();
         FragmentTransaction fragmentTransaction = fragmentManager
                 .beginTransaction();
 
-        TransactionFormFragment transactionFormFragment = new TransactionFormFragment();
-        transactionFormFragment.setArguments(args);
-
-        fragmentTransaction.add(R.id.fragment_container, transactionFormFragment);
+        fragmentTransaction.add(R.id.fragment_container, fragment);
         fragmentTransaction.commit();
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 933e8c3a..6255309e 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -52,7 +52,6 @@
 import android.widget.CompoundButton.OnCheckedChangeListener;
 import android.widget.EditText;
 import android.widget.Spinner;
-import android.widget.Toast;
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.AccountsDbAdapter;
@@ -246,7 +245,7 @@ public void onCreate(Bundle savedInstanceState) {
 	 */
 	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
-		View view = inflater.inflate(R.layout.fragment_new_account, container, false);
+		View view = inflater.inflate(R.layout.fragment_account_form, container, false);
         mTextInputLayout = (TextInputLayout) view.findViewById(R.id.textinputlayout);
 		mCurrencySpinner = (Spinner) view.findViewById(R.id.input_currency_spinner);
 		mNameEditText = (EditText) view.findViewById(R.id.input_account_name);
@@ -545,8 +544,6 @@ private void showColorPickerDialog(){
 	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
 		super.onCreateOptionsMenu(menu, inflater);
 		inflater.inflate(R.menu.default_save_actions, menu);
-        menu.removeItem(R.id.menu_search);
-        menu.removeItem(R.id.menu_settings);
 	}
 	
 	@Override
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index d0702ebd..b0ab94cb 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -31,12 +31,10 @@
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.design.widget.TabLayout;
-import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentActivity;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentStatePagerAdapter;
-import android.support.v4.app.FragmentTransaction;
 import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
 import android.support.v7.widget.Toolbar;
@@ -58,10 +56,9 @@
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.ui.FormActivity;
 import org.gnucash.android.ui.UxArgument;
-import org.gnucash.android.ui.export.ExportDialogFragment;
 import org.gnucash.android.ui.passcode.PassLockActivity;
-import org.gnucash.android.ui.settings.SettingsActivity;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.util.OnAccountClickedListener;
 import org.gnucash.android.ui.util.Refreshable;
@@ -391,7 +388,11 @@ public void onClick(DialogInterface dialog, int which) {
     /**
      * Displays the dialog for exporting transactions
      */
-    public static void showExportDialog(FragmentActivity activity) {
+    public static void openExportFragment(FragmentActivity activity) {
+        Intent intent = new Intent(activity, FormActivity.class);
+        intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.EXPORT_FORM.name());
+        activity.startActivity(intent);
+        /*
         FragmentManager manager = activity.getSupportFragmentManager();
         FragmentTransaction ft = manager.beginTransaction();
         Fragment prev = manager.findFragmentByTag(FRAGMENT_EXPORT_DIALOG);
@@ -401,8 +402,8 @@ public static void showExportDialog(FragmentActivity activity) {
         ft.addToBackStack(null);
 
         // Create and show the dialog.
-        DialogFragment exportFragment = new ExportDialogFragment();
-        exportFragment.show(ft, FRAGMENT_EXPORT_DIALOG);
+        DialogFragment exportFragment = new ExportFormFragment();
+        exportFragment.show(ft, FRAGMENT_EXPORT_DIALOG);*/
     }
 
     @Override
@@ -418,10 +419,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
             case android.R.id.home:
                 return super.onOptionsItemSelected(item);
 
-            case R.id.menu_settings:
-                startActivity(new Intent(this, SettingsActivity.class));
-                return true;
-
 		default:
 			return false;
 		}
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
similarity index 76%
rename from app/src/main/java/org/gnucash/android/ui/export/ExportDialogFragment.java
rename to app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 6df927cb..cbf1c69d 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -21,16 +21,20 @@
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v4.app.DialogFragment;
+import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
 import android.text.format.Time;
 import android.util.Log;
 import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
 import android.widget.ArrayAdapter;
-import android.widget.Button;
 import android.widget.CheckBox;
 import android.widget.RadioButton;
 import android.widget.Spinner;
@@ -54,49 +58,42 @@
 import java.util.List;
 import java.util.UUID;
 
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
 /**
  * Dialog fragment for exporting account information as OFX files.
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class ExportDialogFragment extends DialogFragment implements RecurrencePickerDialog.OnRecurrenceSetListener {
+public class ExportFormFragment extends Fragment implements RecurrencePickerDialog.OnRecurrenceSetListener {
 		
 	/**
 	 * Spinner for selecting destination for the exported file.
 	 * The destination could either be SD card, or another application which
 	 * accepts files, like Google Drive.
 	 */
-	Spinner mDestinationSpinner;
+	@Bind(R.id.spinner_export_destination) Spinner mDestinationSpinner;
 	
 	/**
 	 * Checkbox indicating that all transactions should be exported,
 	 * regardless of whether they have been exported previously or not
 	 */
-	CheckBox mExportAllCheckBox;
+	@Bind(R.id.checkbox_export_all) CheckBox mExportAllCheckBox;
 	
 	/**
 	 * Checkbox for deleting all transactions after exporting them
 	 */
-	CheckBox mDeleteAllCheckBox;
-	
-	/**
-	 * Save button for saving the exported files
-	 */
-	Button mSaveButton;
-	
-	/**
-	 * Cancels the export dialog
-	 */
-	Button mCancelButton;
+	@Bind(R.id.checkbox_post_export_delete) CheckBox mDeleteAllCheckBox;
 
     /**
      * Text view for showing warnings based on chosen export format
      */
-    TextView mExportWarningTextView;
+    @Bind(R.id.export_warning) TextView mExportWarningTextView;
 
 	/**
 	 * Recurrence text view
 	 */
-	TextView mRecurrenceTextView;
+	@Bind(R.id.input_recurrence) TextView mRecurrenceTextView;
 
 	/**
 	 * Event recurrence options
@@ -111,7 +108,7 @@
 	/**
 	 * Tag for logging
 	 */
-	private static final String TAG = "ExportDialogFragment";
+	private static final String TAG = "ExportFormFragment";
 
 	/**
 	 * Export format
@@ -121,35 +118,6 @@
 	private ExportParams.ExportTarget mExportTarget = ExportParams.ExportTarget.SD_CARD;
 
 
-	/**
-	 * Click listener for positive button in the dialog.
-	 * @author Ngewi Fet <ngewif@gmail.com>
-	 */
-	protected class ExportClickListener implements View.OnClickListener {
-
-		@Override
-		public void onClick(View v) {
-            ExportParams exportParameters = new ExportParams(mExportFormat);
-            exportParameters.setExportAllTransactions(mExportAllCheckBox.isChecked());
-			exportParameters.setExportTarget(mExportTarget);
-			exportParameters.setDeleteTransactionsAfterExport(mDeleteAllCheckBox.isChecked());
-
-			List<ScheduledAction> scheduledActions = RecurrenceParser.parse(mEventRecurrence,
-					ScheduledAction.ActionType.BACKUP);
-			for (ScheduledAction scheduledAction : scheduledActions) {
-				scheduledAction.setTag(exportParameters.toCsv());
-				scheduledAction.setActionUID(UUID.randomUUID().toString().replaceAll("-", ""));
-				ScheduledActionDbAdapter.getInstance().addScheduledAction(scheduledAction);
-			}
-
-            Log.i(TAG, "Commencing async export of transactions");
-            new ExportAsyncTask(getActivity()).execute(exportParameters);
-
-			dismiss();
-		}
-		
-	}
-
     public void onRadioButtonClicked(View view){
         switch (view.getId()){
             case R.id.radio_ofx_format:
@@ -183,7 +151,9 @@ public void onRadioButtonClicked(View view){
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
-		return inflater.inflate(R.layout.dialog_export, container, false);
+		View view = inflater.inflate(R.layout.fragment_export_form, container, false);
+		ButterKnife.bind(this, view);
+		return view;
 	}
 
 	@Override
@@ -192,16 +162,62 @@ public void onCreate(Bundle savedInstanceState) {
 	}
 
 	@Override
+	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+		inflater.inflate(R.menu.default_save_actions, menu);
+		MenuItem menuItem = menu.findItem(R.id.menu_save);
+		menuItem.setTitle(R.string.btn_export);
+	}
+
+	@Override
+	public boolean onOptionsItemSelected(MenuItem item) {
+		switch (item.getItemId()){
+			case R.id.menu_save:
+				startExport();
+				return true;
+
+			case android.R.id.home:
+				getActivity().finish();
+				return true;
+
+			default:
+				return super.onOptionsItemSelected(item);
+		}
+	}
+
+	@Override
 	public void onActivityCreated(Bundle savedInstanceState) {		
 		super.onActivityCreated(savedInstanceState);
         bindViews();
-		getDialog().setTitle(R.string.title_export_dialog);
+		ActionBar supportActionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
+		assert supportActionBar != null;
+		supportActionBar.setTitle(R.string.title_export_dialog);
+		setHasOptionsMenu(true);
+	}
+
+	/**
+	 * Starts the export of transactions with the specified parameters
+	 */
+	private void startExport(){
+		ExportParams exportParameters = new ExportParams(mExportFormat);
+		exportParameters.setExportAllTransactions(mExportAllCheckBox.isChecked());
+		exportParameters.setExportTarget(mExportTarget);
+		exportParameters.setDeleteTransactionsAfterExport(mDeleteAllCheckBox.isChecked());
+
+		List<ScheduledAction> scheduledActions = RecurrenceParser.parse(mEventRecurrence,
+				ScheduledAction.ActionType.BACKUP);
+		for (ScheduledAction scheduledAction : scheduledActions) {
+			scheduledAction.setTag(exportParameters.toCsv());
+			scheduledAction.setActionUID(UUID.randomUUID().toString().replaceAll("-", ""));
+			ScheduledActionDbAdapter.getInstance().addScheduledAction(scheduledAction);
+		}
+
+		Log.i(TAG, "Commencing async export of transactions");
+		new ExportAsyncTask(getActivity()).execute(exportParameters);
+
+		getActivity().finish();
 	}
 
 	private void bindViews(){
-		View v = getView();
-        assert v != null;
-        mDestinationSpinner = (Spinner) v.findViewById(R.id.spinner_export_destination);
 		ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(getActivity(),
 		        R.array.export_destinations, android.R.layout.simple_spinner_item);
 		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);		
@@ -210,7 +226,7 @@ private void bindViews(){
 			@Override
 			public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
 				View recurrenceOptionsView = getView().findViewById(R.id.recurrence_options);
-				switch (position){
+				switch (position) {
 					case 0:
 						mExportTarget = ExportParams.ExportTarget.SD_CARD;
 						recurrenceOptionsView.setVisibility(View.VISIBLE);
@@ -218,11 +234,11 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
 					case 1:
 						recurrenceOptionsView.setVisibility(View.VISIBLE);
 						mExportTarget = ExportParams.ExportTarget.DROPBOX;
-                        String dropboxAppKey = getString(R.string.dropbox_app_key, SettingsActivity.DROPBOX_APP_KEY);
-                        String dropboxAppSecret = getString(R.string.dropbox_app_secret, SettingsActivity.DROPBOX_APP_SECRET);
+						String dropboxAppKey = getString(R.string.dropbox_app_key, SettingsActivity.DROPBOX_APP_KEY);
+						String dropboxAppSecret = getString(R.string.dropbox_app_secret, SettingsActivity.DROPBOX_APP_SECRET);
 						DbxAccountManager mDbxAccountManager = DbxAccountManager.getInstance(getActivity().getApplicationContext(),
 								dropboxAppKey, dropboxAppSecret);
-						if (!mDbxAccountManager.hasLinkedAccount()){
+						if (!mDbxAccountManager.hasLinkedAccount()) {
 							mDbxAccountManager.startLink(getActivity(), 0);
 						}
 						break;
@@ -249,27 +265,10 @@ public void onNothingSelected(AdapterView<?> parent) {
 			}
 		});
 		SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
-		mExportAllCheckBox = (CheckBox) v.findViewById(R.id.checkbox_export_all);
 		mExportAllCheckBox.setChecked(sharedPrefs.getBoolean(getString(R.string.key_export_all_transactions), false));
 		
-		mDeleteAllCheckBox = (CheckBox) v.findViewById(R.id.checkbox_post_export_delete);
 		mDeleteAllCheckBox.setChecked(sharedPrefs.getBoolean(getString(R.string.key_delete_transactions_after_export), false));
-		
-		mSaveButton = (Button) v.findViewById(R.id.btn_save);
-		mSaveButton.setText(R.string.btn_export);
-		mCancelButton = (Button) v.findViewById(R.id.btn_cancel);
-		
-		mCancelButton.setOnClickListener(new View.OnClickListener() {
-
-			@Override
-			public void onClick(View v) {
-				dismiss();
-			}
-		});
-		
-		mSaveButton.setOnClickListener(new ExportClickListener());
 
-		mRecurrenceTextView     = (TextView) v.findViewById(R.id.input_recurrence);
 		mRecurrenceTextView.setOnClickListener(new View.OnClickListener() {
 			@Override
 			public void onClick(View view) {
@@ -290,13 +289,11 @@ public void onClick(View view) {
 				}
 				rpd = new RecurrencePickerDialog();
 				rpd.setArguments(b);
-				rpd.setOnRecurrenceSetListener(ExportDialogFragment.this);
+				rpd.setOnRecurrenceSetListener(ExportFormFragment.this);
 				rpd.show(fm, "recurrence_picker");
 			}
 		});
 
-        mExportWarningTextView = (TextView) v.findViewById(R.id.export_warning);
-
 		//this part (setting the export format) must come after the recurrence view bindings above
         String defaultExportFormat = sharedPrefs.getString(getString(R.string.key_default_export_format), ExportFormat.QIF.name());
         mExportFormat = ExportFormat.valueOf(defaultExportFormat);
@@ -307,6 +304,9 @@ public void onClick(View view) {
             }
         };
 
+		View v = getView();
+		assert v != null;
+
         RadioButton ofxRadioButton = (RadioButton) v.findViewById(R.id.radio_ofx_format);
         ofxRadioButton.setOnClickListener(clickListener);
         if (defaultExportFormat.equalsIgnoreCase(ExportFormat.OFX.name())) {
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
index c4ed8031..d73c9bfe 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
@@ -174,7 +174,6 @@ public void onListItemClick(ListView l, View v, int position, long id) {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         menu.removeItem(R.id.menu_search);
-        menu.removeItem(R.id.menu_settings);
         inflater.inflate(R.menu.scheduled_export_actions, menu);
     }
 
@@ -182,7 +181,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()){
             case R.id.menu_add_scheduled_export:
-                AccountsActivity.showExportDialog(getActivity());
+                AccountsActivity.openExportFragment(getActivity());
                 return true;
             default:
                 return super.onOptionsItemSelected(item);
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index a2898a6c..44d836d9 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -223,7 +223,7 @@
 	@Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
-		View v = inflater.inflate(R.layout.fragment_new_transaction, container, false);
+		View v = inflater.inflate(R.layout.fragment_transaction_form, container, false);
 
 		mDescriptionEditText = (AutoCompleteTextView) v.findViewById(R.id.input_transaction_name);
 		mNotesEditText = (EditText) v.findViewById(R.id.input_description);
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index 5fe03a22..ae8780d1 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -41,11 +41,14 @@
 import android.widget.TextView;
 
 import org.gnucash.android.R;
+import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.CursorRecyclerAdapter;
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.SplitsDbAdapter;
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.model.Split;
 import org.gnucash.android.ui.FormActivity;
 import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.util.AccountBalanceTask;
@@ -57,6 +60,7 @@
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.Date;
+import java.util.List;
 import java.util.Locale;
 
 import butterknife.Bind;
@@ -294,10 +298,22 @@ public void onBindViewHolderCursor(ViewHolder holder, Cursor cursor) {
 			Money amount = mTransactionsDbAdapter.getBalance(transactionUID, mAccountUID);
 			TransactionsActivity.displayBalance(holder.transactionAmount, amount);
 
-			String notes = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_NOTES));
-			if (notes != null && notes.length() != 0) {
-				holder.transactionNote.setText(notes);
+			List<Split> splits = SplitsDbAdapter.getInstance().getSplitsForTransaction(transactionUID);
+			String text = "";
+
+			if (splits.size() == 2 && splits.get(0).isPairOf(splits.get(1))){
+				for (Split split : splits) {
+					if (!split.getAccountUID().equals(mAccountUID)){
+						text = AccountsDbAdapter.getInstance().getFullyQualifiedAccountName(split.getAccountUID());
+						break;
+					}
+				}
+			}
+
+			if (splits.size() > 2){
+				text = splits.size() + " splits";
 			}
+			holder.transactionNote.setText(text);
 
 			long dateMillis = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_TIMESTAMP));
 			holder.transactionDate.setText(prettyTime.format(new Date(dateMillis)));
diff --git a/app/src/main/res/layout/cardview_transaction.xml b/app/src/main/res/layout/cardview_transaction.xml
index 35ed6d58..4e2fc5e2 100644
--- a/app/src/main/res/layout/cardview_transaction.xml
+++ b/app/src/main/res/layout/cardview_transaction.xml
@@ -41,7 +41,7 @@
             android:layout_marginTop="6dp"
             android:layout_marginBottom="@dimen/dialog_padding"
             android:layout_marginLeft="@dimen/dialog_padding"
-            android:layout_marginRight="50dp"/>
+            android:layout_marginRight="52dp"/>
 
         <ImageView
             android:id="@+id/options_menu"
diff --git a/app/src/main/res/layout/dialog_export.xml b/app/src/main/res/layout/dialog_export.xml
deleted file mode 100644
index 02c99c9d..00000000
--- a/app/src/main/res/layout/dialog_export.xml
+++ /dev/null
@@ -1,132 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
- 
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
- 
-    http://www.apache.org/licenses/LICENSE-2.0
- 
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-	<LinearLayout 
-	    android:layout_width="match_parent"
-	    android:layout_height="wrap_content"
-	    android:layout_marginTop="@dimen/dialog_padding"
-	    android:orientation="vertical" >
-	    
-	    <TextView
-	        android:text="@string/label_export_destination"
-	        android:layout_height="wrap_content"
-	        android:layout_width="wrap_content"
-	        android:layout_marginBottom="-8dip"
-	        android:layout_marginLeft="@dimen/dialog_padding"
-	        style="@style/TextAppearance.EditTransaction_LabelSmall" />
-	
-	    <Spinner android:id="@+id/spinner_export_destination"
-	        android:layout_height="wrap_content" 
-	        android:layout_width="match_parent"
-	        style="@style/ListItem"
-	        android:layout_marginLeft="@dimen/dialog_padding"
-	        android:layout_marginRight="@dimen/dialog_padding"
-	        android:layout_marginBottom="@dimen/dialog_padding" />
-
-        <TextView
-                android:id="@+id/label_export_format"
-                android:text="@string/label_export_format"
-                android:layout_height="wrap_content"
-                android:layout_width="wrap_content"
-                android:layout_marginBottom="-8dip"
-                android:layout_marginLeft="@dimen/dialog_padding"
-                style="@style/TextAppearance.EditTransaction_LabelSmall" />
-
-        <RadioGroup
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="@dimen/dialog_padding"
-                    android:layout_marginRight="@dimen/dialog_padding"
-                    android:layout_marginBottom="@dimen/dialog_padding"
-                    android:orientation="horizontal">
-
-            <RadioButton android:id="@+id/radio_qif_format"
-                         android:layout_width="wrap_content"
-                         android:layout_height="wrap_content"
-                         android:layout_marginRight="20dp"
-                         android:checked="true"
-                         android:text="QIF" />
-
-            <RadioButton android:id="@+id/radio_ofx_format"
-                         android:layout_width="wrap_content"
-                         android:layout_height="wrap_content"
-                android:layout_marginRight="20dp"
-                         android:text="OFX"/>
-
-            <RadioButton android:id="@+id/radio_xml_format"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="XML"/>
-        </RadioGroup>
-        <TextView android:id="@+id/export_warning"
-                  android:layout_marginLeft="@dimen/dialog_padding"
-                  android:text="Some format-based export warning"
-                  android:textColor="@color/title_green"
-                  style="@style/TextAppearance.Hint"
-                  android:visibility="gone" />
-
-	    <CheckBox android:id="@+id/checkbox_export_all"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"
-	        android:layout_marginLeft="10dp"
-	        android:textAppearance="?android:attr/textAppearanceMedium"
-	        android:text="@string/option_export_all_transactions"
-	        />
-	    <TextView android:layout_marginLeft="@dimen/dialog_padding"
-	        android:text="@string/hint_export_choice"
-	        style="@style/TextAppearance.Hint" />
-	    
-	    <CheckBox android:id="@+id/checkbox_post_export_delete"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"
-	        android:layout_marginTop="@dimen/dialog_padding"
-	        android:layout_marginLeft="@dimen/dialog_padding"
-	        android:textAppearance="?android:attr/textAppearanceMedium"
-	        android:text="@string/option_delete_after_export"
-	        />
-	        
-	    <TextView android:layout_marginLeft="@dimen/dialog_padding"
-            android:layout_marginBottom="@dimen/dialog_padding"
-	        android:text="@string/hint_delete_after_export"
-	        style="@style/TextAppearance.Hint" />
-
-        <LinearLayout android:id="@+id/recurrence_options"
-            style="@style/FormRow">
-            <TextView
-                android:id="@+id/label_recurring_transaction"
-                android:text="@string/label_recurring_transaction"
-                android:layout_height="wrap_content"
-                android:layout_width="wrap_content"
-                android:layout_marginBottom="-8dip"
-                style="@style/TextAppearance.EditTransaction_LabelSmall" />
-
-            <TextView android:id="@+id/input_recurrence"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:gravity="center"
-                android:text="@string/label_tap_to_create_schedule"
-                style="@style/Dropdown.TextView" />
-
-        </LinearLayout>
-
-    	<include layout="@layout/default_buttons"/>
-
-	</LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_new_account.xml b/app/src/main/res/layout/fragment_account_form.xml
similarity index 100%
rename from app/src/main/res/layout/fragment_new_account.xml
rename to app/src/main/res/layout/fragment_account_form.xml
diff --git a/app/src/main/res/layout/fragment_export_form.xml b/app/src/main/res/layout/fragment_export_form.xml
new file mode 100644
index 00000000..e9eb5e50
--- /dev/null
+++ b/app/src/main/res/layout/fragment_export_form.xml
@@ -0,0 +1,123 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="@dimen/dialog_padding"
+        android:layout_marginRight="@dimen/dialog_padding"
+        android:layout_marginTop="@dimen/dialog_padding"
+        android:orientation="vertical" >
+
+        <TextView
+            android:text="@string/label_export_destination"
+            android:layout_height="wrap_content"
+            android:layout_width="wrap_content"
+            android:layout_marginBottom="-8dip"
+            style="@style/TextAppearance.EditTransaction_LabelSmall" />
+
+        <Spinner android:id="@+id/spinner_export_destination"
+            android:layout_height="?android:attr/listPreferredItemHeight"
+            android:layout_width="match_parent"
+            android:layout_marginBottom="@dimen/dialog_padding" />
+
+        <TextView
+            android:id="@+id/label_export_format"
+            android:text="@string/label_export_format"
+            android:layout_height="wrap_content"
+            android:layout_width="wrap_content"
+            android:layout_marginBottom="-8dip"
+            style="@style/TextAppearance.EditTransaction_LabelSmall" />
+
+        <RadioGroup
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="@dimen/dialog_padding"
+            android:orientation="horizontal">
+
+            <RadioButton android:id="@+id/radio_qif_format"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginRight="20dp"
+                android:checked="true"
+                android:text="QIF" />
+
+            <RadioButton android:id="@+id/radio_ofx_format"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginRight="20dp"
+                android:text="OFX"/>
+
+            <RadioButton android:id="@+id/radio_xml_format"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="XML"/>
+        </RadioGroup>
+        <TextView android:id="@+id/export_warning"
+            tools:text="Some format-based export warning"
+            android:textColor="@color/title_green"
+            android:layout_marginBottom="@dimen/dialog_padding"
+            android:layout_marginLeft="@dimen/dialog_padding"
+            style="@style/TextAppearance.Hint" />
+
+        <CheckBox android:id="@+id/checkbox_export_all"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textAppearance="?android:attr/textAppearanceMedium"
+            android:text="@string/option_export_all_transactions"
+            />
+        <TextView android:layout_marginLeft="8dp"
+            android:text="@string/hint_export_choice"
+            style="@style/TextAppearance.Hint" />
+
+        <CheckBox android:id="@+id/checkbox_post_export_delete"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/dialog_padding"
+            android:textAppearance="?android:attr/textAppearanceMedium"
+            android:text="@string/option_delete_after_export"
+            />
+
+        <TextView android:layout_marginLeft="8dp"
+            android:text="@string/hint_delete_after_export"
+            style="@style/TextAppearance.Hint" />
+
+        <LinearLayout android:id="@+id/recurrence_options"
+            style="@style/FormRow">
+            <TextView
+                android:id="@+id/label_recurring_transaction"
+                android:text="@string/label_recurring_transaction"
+                android:layout_height="wrap_content"
+                android:layout_width="wrap_content"
+                android:layout_marginBottom="-8dip"
+                style="@style/TextAppearance.EditTransaction_LabelSmall" />
+
+            <TextView android:id="@+id/input_recurrence"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:text="@string/label_tap_to_create_schedule"
+                style="@style/Dropdown.TextView" />
+
+        </LinearLayout>
+
+    </LinearLayout>
+</ScrollView>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_new_transaction.xml b/app/src/main/res/layout/fragment_transaction_form.xml
similarity index 90%
rename from app/src/main/res/layout/fragment_new_transaction.xml
rename to app/src/main/res/layout/fragment_transaction_form.xml
index 9ba38bdb..ed42c05a 100644
--- a/app/src/main/res/layout/fragment_new_transaction.xml
+++ b/app/src/main/res/layout/fragment_transaction_form.xml
@@ -27,17 +27,19 @@
 		android:orientation="vertical" >
 
 		<TableRow style="@style/FormRow">
-		<AutoCompleteTextView
-			android:id="@+id/input_transaction_name"
-			android:layout_width="match_parent"
-			android:layout_height="wrap_content"
-			android:hint="@string/label_transaction_name"
-			android:inputType="textCapSentences"
-			android:imeOptions="actionNext"
-			android:nextFocusDown="@+id/input_transaction_amount"
-			android:background="@android:color/transparent"
-			android:textSize="22sp" />
+			<AutoCompleteTextView
+				android:id="@+id/input_transaction_name"
+				android:layout_width="match_parent"
+				android:layout_height="wrap_content"
+				android:layout_span="2"
+				android:hint="@string/label_transaction_name"
+				android:inputType="textCapSentences"
+				android:imeOptions="actionNext"
+				android:nextFocusDown="@+id/input_transaction_amount"
+				android:background="@android:color/transparent"
+				android:textSize="22sp" />
 		</TableRow>
+
 		<View style="@style/Divider" android:layout_marginLeft="0dp" />
 
 		<TableRow style="@style/FormRow">
diff --git a/app/src/main/res/layout/list_item_transaction.xml b/app/src/main/res/layout/list_item_transaction.xml
deleted file mode 100644
index 2633f7c3..00000000
--- a/app/src/main/res/layout/list_item_transaction.xml
+++ /dev/null
@@ -1,86 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
- 
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
- 
-    http://www.apache.org/licenses/LICENSE-2.0
- 
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<org.gnucash.android.ui.util.CheckableLinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:orientation="vertical">
-
-    <TextView
-            android:id="@+id/date_section_header"
-            android:layout_width="match_parent"
-            android:layout_height="20dp"
-            android:paddingLeft="10dp"
-            android:background="#CCCCCC"
-            android:textColor="@android:color/white"
-            android:visibility="gone"
-            />
-
-    <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            style="@style/ListItem"
-            android:orientation="horizontal">
-
-        <CheckBox
-                android:id="@+id/checkbox_transaction"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:focusable="false"
-                />
-
-        <include
-                layout="@layout/list_item_2_lines"
-                android:layout_height="wrap_content"
-                android:layout_width="0dp"
-                android:layout_weight="1"
-                android:layout_marginLeft="5dp"
-                />
-
-        <RelativeLayout
-            android:layout_height="match_parent"
-            android:layout_width="wrap_content"
-            android:layout_marginRight="12dp"
-            android:orientation="vertical">
-        <TextView
-                android:id="@+id/transaction_amount"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:singleLine="true"
-                android:ellipsize="end"
-                android:text="@string/label_transaction_amount"
-                android:minWidth="100dp"
-                android:gravity="right|center_vertical"
-                style="@style/ListItemText"/>
-
-            <TextView
-                android:id="@+id/transaction_date"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:singleLine="true"
-                android:layout_below="@id/transaction_amount"
-                android:gravity="right|bottom|end"
-                android:layout_alignRight="@id/transaction_amount"
-                android:textAppearance="?android:attr/textAppearanceSmall"
-                android:textColor="@android:color/darker_gray"
-                tools:text="Sat, 04 July"/>
-        </RelativeLayout>
-
-    </LinearLayout>
-</org.gnucash.android.ui.util.CheckableLinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/menu/global_actions.xml b/app/src/main/res/menu/global_actions.xml
index a1607336..1a0d6dc4 100644
--- a/app/src/main/res/menu/global_actions.xml
+++ b/app/src/main/res/menu/global_actions.xml
@@ -24,10 +24,4 @@
           app:showAsAction="collapseActionView|ifRoom"
           app:actionViewClass="android.support.v7.widget.SearchView" />
 
-    <item android:id="@+id/menu_settings"
-          android:icon="@drawable/action_settings"
-          android:title="@string/title_settings"
-          app:showAsAction="never"
-          android:orderInCategory="10"/>
-
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
index d9573d52..b29aed7d 100644
--- a/app/src/main/res/values/styles.xml
+++ b/app/src/main/res/values/styles.xml
@@ -70,7 +70,6 @@
     <style name="TextAppearance.Hint">
         <item name="android:layout_width">match_parent</item>
         <item name="android:layout_height">wrap_content</item>
-        <item name="android:paddingLeft">@dimen/dialog_padding</item>
         <item name="android:paddingRight">@dimen/dialog_padding</item>
         <item name="android:paddingBottom">@dimen/dialog_padding</item>
         <item name="android:layout_marginTop">@dimen/hint_margin</item>
