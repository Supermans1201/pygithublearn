From 7e65d17a99481a6045592bb6cab325809c85e4c1 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sun, 29 Nov 2015 00:40:58 +0100
Subject: [PATCH] Refactor reports to make it easier to add new ones

Fix broken builds by updating build tools version
---
 .travis.yml                                        |   2 +-
 app/build.gradle                                   |   4 +-
 .../android/test/ui/ExportTransactionsTest.java    |   3 +-
 .../android/test/ui/PieChartReportTest.java        |   6 +-
 .../android/db/adapter/AccountsDbAdapter.java      |   4 +-
 .../android/ui/common/BaseDrawerActivity.java      |   2 -
 .../android/ui/report/BaseReportFragment.java      | 334 +++++++++++++++++++++
 .../android/ui/report/ReportSummaryFragment.java   | 170 ++++++-----
 .../org/gnucash/android/ui/report/ReportType.java  |  78 +++++
 .../gnucash/android/ui/report/ReportsActivity.java |  82 +++--
 .../ui/report/{ => barchart}/BarChartFragment.java | 162 ++--------
 .../ui/report/barchart/CashFlowFragment.java       |  56 ++++
 .../report/{ => linechart}/LineChartFragment.java  | 160 ++++------
 .../ui/report/{ => piechart}/PieChartFragment.java | 136 +++------
 .../report/{ => sheet}/BalanceSheetFragment.java   |  93 ++++--
 app/src/main/res/layout/activity_reports.xml       | 100 +++---
 app/src/main/res/layout/reports_toolbar.xml        |  45 +++
 app/src/main/res/layout/toolbar.xml                |  45 ++-
 app/src/main/res/values-af-rZA/strings.xml         |   1 +
 app/src/main/res/values-ar-rSA/strings.xml         |   1 +
 app/src/main/res/values-ca-rES/strings.xml         |   1 +
 app/src/main/res/values-cs-rCZ/strings.xml         |   1 +
 app/src/main/res/values-de/strings.xml             |   1 +
 app/src/main/res/values-el-rGR/strings.xml         |   1 +
 app/src/main/res/values-en-rGB/strings.xml         |   1 +
 app/src/main/res/values-es-rMX/strings.xml         |   1 +
 app/src/main/res/values-es/strings.xml             |   1 +
 app/src/main/res/values-fi-rFI/strings.xml         |   1 +
 app/src/main/res/values-fr/strings.xml             |   1 +
 app/src/main/res/values-hu-rHU/strings.xml         |   1 +
 app/src/main/res/values-it-rIT/strings.xml         |   1 +
 app/src/main/res/values-iw-rIL/strings.xml         |   1 +
 app/src/main/res/values-ja-rJP/strings.xml         |   1 +
 app/src/main/res/values-ko-rKR/strings.xml         |   1 +
 app/src/main/res/values-nb/strings.xml             |   1 +
 app/src/main/res/values-nl-rNL/strings.xml         |   1 +
 app/src/main/res/values-no-rNO/strings.xml         |   1 +
 app/src/main/res/values-pl-rPL/strings.xml         |   1 +
 app/src/main/res/values-pt-rBR/strings.xml         |   1 +
 app/src/main/res/values-pt-rPT/strings.xml         |   1 +
 app/src/main/res/values-pt/strings.xml             |   1 +
 app/src/main/res/values-ro-rRO/strings.xml         |   1 +
 app/src/main/res/values-ru/strings.xml             |   1 +
 app/src/main/res/values-sr-rSP/strings.xml         |   1 +
 app/src/main/res/values-sv-rSE/strings.xml         |   1 +
 app/src/main/res/values-tr-rTR/strings.xml         |   1 +
 app/src/main/res/values-uk-rUA/strings.xml         |   1 +
 app/src/main/res/values-vi-rVN/strings.xml         |   1 +
 app/src/main/res/values-zh-rCN/strings.xml         |   1 +
 app/src/main/res/values-zh-rTW/strings.xml         |   1 +
 app/src/main/res/values/strings.xml                |   1 +
 51 files changed, 967 insertions(+), 548 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
 create mode 100644 app/src/main/java/org/gnucash/android/ui/report/ReportType.java
 rename app/src/main/java/org/gnucash/android/ui/report/{ => barchart}/BarChartFragment.java (76%)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment.java
 rename app/src/main/java/org/gnucash/android/ui/report/{ => linechart}/LineChartFragment.java (79%)
 rename app/src/main/java/org/gnucash/android/ui/report/{ => piechart}/PieChartFragment.java (76%)
 rename app/src/main/java/org/gnucash/android/ui/report/{ => sheet}/BalanceSheetFragment.java (68%)
 create mode 100644 app/src/main/res/layout/reports_toolbar.xml

diff --git a/.travis.yml b/.travis.yml
index 7987359b..08f38141 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -4,7 +4,7 @@ android:
   components:
     - platform-tools
     - tools
-    - build-tools-23.0.1
+    - build-tools-23.0.2
 
     # The SDK version used to compile your project
     - android-23
diff --git a/app/build.gradle b/app/build.gradle
index 96b836b0..ccbe04b4 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -4,8 +4,8 @@ apply plugin: 'com.android.application'
 apply plugin: 'io.fabric'
 
 def versionMajor = 2
-def versionMinor = 0
-def versionPatch = 3
+def versionMinor = 1
+def versionPatch = 0
 def versionBuild = 0
 
 def buildTime() {
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index ca0cde76..36837cd8 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -24,6 +24,7 @@
 import android.os.Build;
 import android.preference.PreferenceManager;
 import android.support.test.InstrumentationRegistry;
+import android.support.test.espresso.ViewAction;
 import android.support.test.espresso.contrib.DrawerActions;
 import android.support.test.espresso.matcher.ViewMatchers;
 import android.support.test.runner.AndroidJUnit4;
@@ -253,7 +254,7 @@ public void testShouldCreateExportSchedule(){
 
 	@Test
 	public void testCreateBackup(){
-		DrawerActions.openDrawer(R.id.drawer_layout);
+		onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
 		onView(withText(R.string.title_settings)).perform(click());
 		onView(withText(R.string.header_backup_and_export_settings)).perform(click());
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index e2928529..bdea2115 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -45,7 +45,8 @@
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.model.TransactionType;
-import org.gnucash.android.ui.report.PieChartFragment;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.piechart.PieChartFragment;
 import org.gnucash.android.ui.report.ReportsActivity;
 import org.joda.time.LocalDateTime;
 import org.junit.After;
@@ -54,7 +55,6 @@
 import org.junit.runner.RunWith;
 
 import java.math.BigDecimal;
-import java.util.Currency;
 
 import static android.support.test.espresso.Espresso.onView;
 import static android.support.test.espresso.action.ViewActions.click;
@@ -180,7 +180,7 @@ public void testSelectingValue() throws Exception {
 
         onView(withId(R.id.pie_chart)).perform(clickXY(Position.BEGIN, Position.MIDDLE));
         float percent = (float) (TRANSACTION_AMOUNT / (TRANSACTION_AMOUNT + TRANSACTION2_AMOUNT) * 100);
-        String selectedText = String.format(PieChartFragment.SELECTED_VALUE_PATTERN, DINING_EXPENSE_ACCOUNT_NAME, TRANSACTION_AMOUNT, percent);
+        String selectedText = String.format(BaseReportFragment.SELECTED_VALUE_PATTERN, DINING_EXPENSE_ACCOUNT_NAME, TRANSACTION_AMOUNT, percent);
         onView(withId(R.id.selected_chart_slice)).check(matches(withText(selectedText)));
     }
 
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index 5ecc726f..bbef4e04 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -795,9 +795,11 @@ private Money computeBalance(String accountUID, long startTimestamp, long endTim
      * @param endTimestamp the end timestamp of the time range
      * @return Money balance of account list
      */
-    public Money getAccountsBalance(List<String> accountUIDList, long startTimestamp, long endTimestamp) {
+    public Money getAccountsBalance(@NonNull  List<String> accountUIDList, long startTimestamp, long endTimestamp) {
         String currencyCode = GnuCashApplication.getDefaultCurrencyCode();
         Money balance = Money.createZeroInstance(currencyCode);
+        if (accountUIDList.isEmpty())
+            return balance;
         boolean hasDebitNormalBalance = getAccountType(accountUIDList.get(0)).hasDebitNormalBalance();
 
         SplitsDbAdapter splitsDbAdapter = SplitsDbAdapter.getInstance();
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 5181e7cb..d1f16b61 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -158,8 +158,6 @@ protected void onDrawerMenuItemClicked(int itemId) {
                 break;
 
             case R.id.nav_item_reports: {
-                if (!(this instanceof AccountsActivity) || !(this instanceof ReportsActivity))
-                    this.finish();
                 Intent intent = new Intent(this, ReportsActivity.class);
                 intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
                 startActivity(intent);
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
new file mode 100644
index 00000000..ea909f83
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
@@ -0,0 +1,334 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.ui.report;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Color;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.annotation.ColorRes;
+import android.support.annotation.LayoutRes;
+import android.support.annotation.Nullable;
+import android.support.annotation.StringRes;
+import android.support.v4.app.Fragment;
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.github.mikephil.charting.data.Entry;
+import com.github.mikephil.charting.highlight.Highlight;
+import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
+
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.model.AccountType;
+import org.gnucash.android.ui.util.Refreshable;
+import org.joda.time.LocalDateTime;
+import org.joda.time.Months;
+import org.joda.time.Years;
+
+import java.util.Currency;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
+/**
+ * Base class for report fragments.
+ * <p>All report fragments should extend this class</p>
+ * @author Ngewi Fet <ngewif@gmail.com>
+ */
+public abstract class BaseReportFragment extends Fragment implements
+        OnChartValueSelectedListener, ReportOptionsListener, Refreshable {
+
+    /**
+     * Color for chart with no data
+     */
+    public static final int NO_DATA_COLOR = Color.LTGRAY;
+
+    protected static String TAG = "BaseReportFragment";
+
+    /**
+     * Reporting period start time
+     */
+    protected long mReportStartTime = -1;
+    /**
+     * Reporting period end time
+     */
+    protected long mReportEndTime = -1;
+
+    /**
+     * Account type for which to display reports
+     */
+    protected AccountType mAccountType;
+
+    /**
+     * Currency for which to display reports
+     */
+    protected Currency mCurrency;
+
+    /**
+     * Intervals in which to group reports
+     */
+    protected ReportsActivity.GroupInterval mGroupInterval = ReportsActivity.GroupInterval.MONTH;
+
+    /**
+     * Pattern to use to display selected chart values
+     */
+    public static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
+
+    @Nullable @Bind(R.id.selected_chart_slice) protected TextView mSelectedValueTextView;
+
+    /**
+     * Get the color which should use for decorating the app bar for this report
+     * @return Color resource
+     */
+    public @ColorRes int getTitleColor(){
+        return R.color.theme_primary;
+    }
+
+    /**
+     * Return the title of this report
+     * @return Title string identifier
+     */
+    public abstract @StringRes int getTitle();
+
+    /**
+     * Returns the layout resource to use for this report
+     * @return Layout resource identifier
+     */
+    public abstract @LayoutRes int getLayoutResource();
+
+    /**
+     * Returns what kind of report this is
+     * @return Type of report
+     */
+    public abstract ReportType getReportType();
+
+    /**
+     * Return {@code true} if this report fragment requires account type options.
+     * <p>Sub-classes should implement this method. The base implementation returns {@code true}</p>
+     * @return {@code true} if the fragment makes use of account type options, {@code false} otherwise
+     */
+    public boolean requiresAccountTypeOptions(){
+        return true;
+    }
+
+    /**
+     * Return {@code true} if this report fragment requires time range options.
+     * <p>Base implementation returns true</p>
+     * @return {@code true} if the report fragment requires time range options, {@code false} otherwise
+     */
+    public boolean requiresTimeRangeOptions(){
+        return true;
+    }
+
+    /**
+     * Generates the data for the report
+     * <p>This method should not call any methods which modify the UI as it will be run in a background thread
+     * <br>Put any code to update the UI in {@link #displayReport()}
+     * </p>
+     */
+    protected abstract void generateReport();
+
+    /**
+     * Update the view after the report chart has been generated <br/>
+     * Sub-classes should call to the base method
+     */
+    protected abstract void displayReport();
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        TAG = this.getClass().getSimpleName();
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View view = inflater.inflate(getLayoutResource(), container, false);
+        ButterKnife.bind(this, view);
+        return view;
+    }
+
+
+    @Override
+    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+
+        ActionBar actionBar = ((AppCompatActivity)getActivity()).getSupportActionBar();
+        assert actionBar != null;
+        actionBar.setTitle(getTitle());
+
+        setHasOptionsMenu(true);
+        mCurrency = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode());
+
+        ReportsActivity reportsActivity = (ReportsActivity) getActivity();
+        mReportStartTime = reportsActivity.getReportStartTime();
+        mReportEndTime = reportsActivity.getReportEndTime();
+        mAccountType = reportsActivity.getAccountType();
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        ((ReportsActivity)getActivity()).setAppBarColor(getTitleColor());
+        ((ReportsActivity) getActivity()).updateReportTypeSpinner(getReportType());
+        toggleBaseReportingOptions();
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (!(getActivity() instanceof ReportsActivity))
+            throw new RuntimeException("Report fragments can only be used with the ReportsActivity");
+    }
+
+    private void toggleBaseReportingOptions() {
+        final Activity activity = getActivity();
+        View timeRangeLayout = activity.findViewById(R.id.time_range_layout);
+        View dateRangeDivider = activity.findViewById(R.id.date_range_divider);
+        if (timeRangeLayout != null && dateRangeDivider != null) {
+            if (requiresTimeRangeOptions()) {
+                timeRangeLayout.setVisibility(View.VISIBLE);
+                dateRangeDivider.setVisibility(View.VISIBLE);
+            } else {
+                timeRangeLayout.setVisibility(View.GONE);
+                dateRangeDivider.setVisibility(View.GONE);
+            }
+        }
+
+        View accountTypeSpinner = activity.findViewById(R.id.report_account_type_spinner);
+        if (requiresAccountTypeOptions()) {
+            accountTypeSpinner.setVisibility(View.VISIBLE);
+        } else {
+            accountTypeSpinner.setVisibility(View.GONE);
+        }
+    }
+
+
+    /**
+     * Calculates difference between two date values accordingly to {@code mGroupInterval}
+     * @param start start date
+     * @param end end date
+     * @return difference between two dates or {@code -1}
+     */
+    protected int getDateDiff(LocalDateTime start, LocalDateTime end) {
+        switch (mGroupInterval) {
+            case QUARTER:
+                int y = Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
+                return (getQuarter(end) - getQuarter(start) + y * 4);
+            case MONTH:
+                return Months.monthsBetween(start.withDayOfMonth(1).withMillisOfDay(0), end.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
+            case YEAR:
+                return Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
+            default:
+                return -1;
+        }
+    }
+
+
+    /**
+     * Returns a quarter of the specified date
+     * @param date date
+     * @return a quarter
+     */
+    protected int getQuarter(LocalDateTime date) {
+        return ((date.getMonthOfYear() - 1) / 3 + 1);
+    }
+
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.chart_actions, menu);
+    }
+
+    @Override
+    public void refresh() {
+        new AsyncTask<Void, Void, Void>() {
+            ProgressBar progressBar = (ProgressBar) getActivity().findViewById(R.id.progress_indicator);
+            @Override
+            protected void onPreExecute() {
+                progressBar.setVisibility(View.VISIBLE);
+            }
+
+            @Override
+            protected Void doInBackground(Void... params) {
+                generateReport();
+                return null;
+            }
+
+            @Override
+            protected void onPostExecute(Void aVoid) {
+                displayReport();
+                progressBar.setVisibility(View.GONE);
+            }
+        }.execute();
+    }
+
+    /**
+     * Charts do not support account specific refreshes in general.
+     * So we provide a base implementation which just calls {@link #refresh()}
+     *
+     * @param uid GUID of relevant item to be refreshed
+     */
+    @Override
+    public void refresh(String uid) {
+        refresh();
+    }
+
+    @Override
+    public void onGroupingUpdated(ReportsActivity.GroupInterval groupInterval) {
+        if (mGroupInterval != groupInterval) {
+            mGroupInterval = groupInterval;
+            refresh();
+        }
+    }
+
+    @Override
+    public void onTimeRangeUpdated(long start, long end) {
+        if (mReportStartTime != start || mReportEndTime != end) {
+            mReportStartTime = start;
+            mReportEndTime = end;
+            refresh();
+        }
+    }
+
+    @Override
+    public void onAccountTypeUpdated(AccountType accountType) {
+        if (mAccountType != accountType) {
+            mAccountType = accountType;
+            refresh();
+        }
+    }
+
+    @Override
+    public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
+        //nothing to see here, move along
+    }
+
+    @Override
+    public void onNothingSelected() {
+        if (mSelectedValueTextView != null)
+            mSelectedValueTextView.setText("Select any part of the chart to view details");
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
index 5c523419..a64be8be 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
@@ -24,16 +24,14 @@
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.view.ViewCompat;
-import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.AppCompatButton;
-import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.View;
-import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.TextView;
 
 import com.github.mikephil.charting.charts.PieChart;
+import com.github.mikephil.charting.components.Legend;
 import com.github.mikephil.charting.components.Legend.LegendForm;
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.data.PieData;
@@ -45,6 +43,10 @@
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.ui.report.barchart.BarChartFragment;
+import org.gnucash.android.ui.report.linechart.LineChartFragment;
+import org.gnucash.android.ui.report.piechart.PieChartFragment;
+import org.gnucash.android.ui.report.sheet.BalanceSheetFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.joda.time.LocalDate;
 
@@ -55,7 +57,7 @@
 import java.util.Locale;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
+import butterknife.OnClick;
 
 import static com.github.mikephil.charting.components.Legend.LegendPosition;
 
@@ -63,7 +65,7 @@
  * Shows a summary of reports
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class ReportSummaryFragment extends Fragment {
+public class ReportSummaryFragment extends BaseReportFragment {
 
     public static final int LEGEND_TEXT_SIZE = 14;
 
@@ -78,6 +80,10 @@
     @Bind(R.id.net_worth) TextView mNetWorth;
 
     private AccountsDbAdapter mAccountsDbAdapter;
+    private Money mAssetsBalance;
+    private Money mLiabilitiesBalance;
+
+    private boolean mChartHasData = false;
 
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {
@@ -85,67 +91,46 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
     }
 
-    @Nullable
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_report_summary, container, false);
-        ButterKnife.bind(this, view);
-
-        mPieChartButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                loadFragment(new PieChartFragment());
-            }
-        });
-
-        mLineChartButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                loadFragment(new LineChartFragment());
-            }
-        });
-
-        mBarChartButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                loadFragment(new BarChartFragment());
-            }
-        });
+    public int getLayoutResource() {
+        return R.layout.fragment_report_summary;
+    }
 
-        mBalanceSheetButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                loadFragment(new BalanceSheetFragment());
-            }
-        });
+    @Override
+    public int getTitle() {
+        return R.string.title_reports;
+    }
 
-        return view;
+    @Override
+    public ReportType getReportType() {
+        return ReportType.NONE;
     }
 
     @Override
-    public void onResume() {
-        super.onResume();
-        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_reports);
-        ((ReportsActivity)getActivity()).setAppBarColor(R.color.theme_primary);
+    public boolean requiresAccountTypeOptions() {
+        return false;
+    }
 
-        getActivity().findViewById(R.id.time_range_layout).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.date_range_divider).setVisibility(View.GONE);
+    @Override
+    public boolean requiresTimeRangeOptions() {
+        return false;
     }
 
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        setHasOptionsMenu(true);
+        setHasOptionsMenu(false);
 
         mChart.setCenterTextSize(PieChartFragment.CENTER_TEXT_SIZE);
         mChart.setDescription("");
         mChart.setDrawSliceText(false);
-        mChart.getLegend().setEnabled(true);
-        mChart.getLegend().setWordWrapEnabled(true);
-        mChart.getLegend().setForm(LegendForm.CIRCLE);
-        mChart.getLegend().setPosition(LegendPosition.RIGHT_OF_CHART_CENTER);
-        mChart.getLegend().setTextSize(LEGEND_TEXT_SIZE);
+        Legend legend = mChart.getLegend();
+        legend.setEnabled(true);
+        legend.setWordWrapEnabled(true);
+        legend.setForm(LegendForm.CIRCLE);
+        legend.setPosition(LegendPosition.RIGHT_OF_CHART_CENTER);
+        legend.setTextSize(LEGEND_TEXT_SIZE);
 
         ColorStateList csl = new ColorStateList(new int[][]{new int[0]}, new int[]{getResources().getColor(R.color.account_green)});
         setButtonTint(mPieChartButton, csl);
@@ -156,28 +141,41 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         csl = new ColorStateList(new int[][]{new int[0]}, new int[]{getResources().getColor(R.color.account_purple)});
         setButtonTint(mBalanceSheetButton, csl);
 
+        refresh();
+    }
+
+    @Override
+    public void onPrepareOptionsMenu(Menu menu) {
+        menu.findItem(R.id.menu_group_reports_by).setVisible(false);
+    }
+
+    @Override
+    protected void generateReport() {
+        PieData pieData = PieChartFragment.groupSmallerSlices(getData(), getActivity());
+        if (pieData != null && pieData.getYValCount() != 0) {
+            mChart.setData(pieData);
+            float sum = mChart.getData().getYValueSum();
+            String total = getResources().getString(R.string.label_chart_total);
+            String currencySymbol = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode()).getSymbol(Locale.getDefault());
+            mChart.setCenterText(String.format(PieChartFragment.TOTAL_VALUE_LABEL_PATTERN, total, sum, currencySymbol));
+            mChartHasData = true;
+        } else {
+            mChart.setData(getEmptyData());
+            mChart.setCenterText(getResources().getString(R.string.label_chart_no_data));
+            mChart.getLegend().setEnabled(false);
+            mChartHasData = false;
+        }
 
         List<AccountType> accountTypes = new ArrayList<>();
         accountTypes.add(AccountType.ASSET);
         accountTypes.add(AccountType.CASH);
         accountTypes.add(AccountType.BANK);
-        Money assetsBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
+        mAssetsBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
 
         accountTypes.clear();
         accountTypes.add(AccountType.LIABILITY);
         accountTypes.add(AccountType.CREDIT);
-        Money liabilitiesBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
-
-        TransactionsActivity.displayBalance(mTotalAssets, assetsBalance);
-        TransactionsActivity.displayBalance(mTotalLiabilities, liabilitiesBalance);
-        TransactionsActivity.displayBalance(mNetWorth, assetsBalance.subtract(liabilitiesBalance));
-
-        displayChart();
-    }
-
-    @Override
-    public void onPrepareOptionsMenu(Menu menu) {
-        menu.findItem(R.id.menu_group_reports_by).setVisible(false);
+        mLiabilitiesBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
     }
 
     /**
@@ -212,30 +210,20 @@ private PieData getData() {
         return new PieData(labels, dataSet);
     }
 
-    /**
-     * Manages all actions about displaying the pie chart
-     */
-    private void displayChart() {
-        mChart.highlightValues(null);
-        mChart.clear();
-
-        PieData pieData = PieChartFragment.groupSmallerSlices(getData(), getActivity());
-        if (pieData != null && pieData.getYValCount() != 0) {
-            mChart.setData(pieData);
-            float sum = mChart.getData().getYValueSum();
-            String total = getResources().getString(R.string.label_chart_total);
-            String currencySymbol = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode()).getSymbol(Locale.getDefault());
-            mChart.setCenterText(String.format(PieChartFragment.TOTAL_VALUE_LABEL_PATTERN, total, sum, currencySymbol));
+    @Override
+    protected void displayReport() {
+        if (mChartHasData){
             mChart.animateXY(1800, 1800);
             mChart.setTouchEnabled(true);
         } else {
-            mChart.setData(getEmptyData());
-            mChart.setCenterText(getResources().getString(R.string.label_chart_no_data));
-            mChart.getLegend().setEnabled(false);
             mChart.setTouchEnabled(false);
         }
-
+        mChart.highlightValues(null);
         mChart.invalidate();
+
+        TransactionsActivity.displayBalance(mTotalAssets, mAssetsBalance);
+        TransactionsActivity.displayBalance(mTotalLiabilities, mLiabilitiesBalance);
+        TransactionsActivity.displayBalance(mNetWorth, mAssetsBalance.subtract(mLiabilitiesBalance));
     }
 
     /**
@@ -250,6 +238,28 @@ private PieData getEmptyData() {
         return new PieData(Collections.singletonList(""), dataSet);
     }
 
+    @OnClick({R.id.btn_bar_chart, R.id.btn_pie_chart, R.id.btn_line_chart, R.id.btn_balance_sheet})
+    public void onClickChartTypeButton(View view){
+        BaseReportFragment fragment;
+        switch (view.getId()){
+            case R.id.btn_pie_chart:
+                fragment = new PieChartFragment();
+                break;
+            case R.id.btn_bar_chart:
+                fragment = new BarChartFragment();
+                break;
+            case R.id.btn_line_chart:
+                fragment = new LineChartFragment();
+                break;
+            case R.id.btn_balance_sheet:
+                fragment = new BalanceSheetFragment();
+                break;
+            default:
+                fragment = this;
+                break;
+        }
+        loadFragment(fragment);
+    }
 
     public void setButtonTint(Button button, ColorStateList tint) {
         if (Build.VERSION.SDK_INT == Build.VERSION_CODES.LOLLIPOP && button instanceof AppCompatButton) {
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportType.java b/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
new file mode 100644
index 00000000..77266acb
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
@@ -0,0 +1,78 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.report;
+
+import android.content.Context;
+
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.ui.report.barchart.BarChartFragment;
+import org.gnucash.android.ui.report.barchart.CashFlowFragment;
+import org.gnucash.android.ui.report.linechart.LineChartFragment;
+import org.gnucash.android.ui.report.piechart.PieChartFragment;
+import org.gnucash.android.ui.report.sheet.BalanceSheetFragment;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Different types of reports
+ */
+public enum ReportType {
+    PIE_CHART(0), BAR_CHART(1), LINE_CHART(2), TEXT(3), NONE(4);
+
+    Map<String, Class> mReportTypeMap = new HashMap<>();
+
+    ReportType(int index){
+        Context context = GnuCashApplication.getAppContext();
+        switch (index){
+            case 0:
+                mReportTypeMap.put("Pie Chart", PieChartFragment.class);
+                break;
+            case 1:
+                mReportTypeMap.put(context.getString(R.string.title_cash_flow_report), CashFlowFragment.class);
+                mReportTypeMap.put("Bar Chart", BarChartFragment.class);
+                break;
+            case 2:
+                mReportTypeMap.put("Income/Expense Statement", LineChartFragment.class);
+                break;
+            case 3:
+                mReportTypeMap.put("Balance Sheet", BalanceSheetFragment.class);
+                break;
+            case 4:
+                break;
+        }
+    }
+
+    public List<String> getReportNames(){
+        return new ArrayList<>(mReportTypeMap.keySet());
+    }
+
+    public BaseReportFragment getFragment(String name){
+        BaseReportFragment fragment = null;
+        try {
+            fragment = (BaseReportFragment) mReportTypeMap.get(name).newInstance();
+        } catch (InstantiationException e) {
+            e.printStackTrace();
+        } catch (IllegalAccessException e) {
+            e.printStackTrace();
+        }
+        return fragment;
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index 5e7fbeef..e51f858d 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -61,7 +61,7 @@
 public class ReportsActivity extends BaseDrawerActivity implements AdapterView.OnItemSelectedListener,
         DatePickerDialog.OnDateSetListener, DateRangePickerDialogFragment.OnDateRangeSetListener{
 
-    static final int[] COLORS = {
+    public static final int[] COLORS = {
             Color.parseColor("#17ee4e"), Color.parseColor("#cc1f09"), Color.parseColor("#3940f7"),
             Color.parseColor("#f9cd04"), Color.parseColor("#5f33a8"), Color.parseColor("#e005b6"),
             Color.parseColor("#17d6ed"), Color.parseColor("#e4a9a2"), Color.parseColor("#8fe6cd"),
@@ -73,9 +73,11 @@
 
     @Bind(R.id.time_range_spinner) Spinner mTimeRangeSpinner;
     @Bind(R.id.report_account_type_spinner) Spinner mAccountTypeSpinner;
+    @Bind(R.id.report_type_spinner) Spinner mReportTypeSpinner;
 
     private TransactionsDbAdapter mTransactionsDbAdapter;
     private AccountType mAccountType = AccountType.EXPENSE;
+    private ReportType mReportType = ReportType.NONE;
 
     public enum GroupInterval {WEEK, MONTH, QUARTER, YEAR, ALL}
 
@@ -84,6 +86,25 @@
     private long mReportEndTime = new LocalDate().plusDays(1).toDate().getTime();
 
     private GroupInterval mReportGroupInterval = GroupInterval.MONTH;
+    private boolean mSkipNextReportTypeSelectedRun = false;
+
+    AdapterView.OnItemSelectedListener mReportTypeSelectedListener = new AdapterView.OnItemSelectedListener() {
+
+        @Override
+        public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
+            if (mSkipNextReportTypeSelectedRun){
+                mSkipNextReportTypeSelectedRun = false;
+            } else {
+                String reportName = parent.getItemAtPosition(position).toString();
+                loadFragment(mReportType.getFragment(reportName));
+            }
+        }
+
+        @Override
+        public void onNothingSelected(AdapterView<?> parent) {
+            //nothing to see here, move along
+        }
+    };
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -128,38 +149,43 @@ public void onNothingSelected(AdapterView<?> adapterView) {
             }
         });
 
-        if (savedInstanceState == null) {
-            FragmentManager fragmentManager = getSupportFragmentManager();
-            FragmentTransaction fragmentTransaction = fragmentManager
-                    .beginTransaction();
+        mReportTypeSpinner.setOnItemSelectedListener(mReportTypeSelectedListener);
 
-            fragmentTransaction.replace(R.id.fragment_container, new ReportSummaryFragment());
-            fragmentTransaction.commit();
+        if (savedInstanceState == null) {
+            loadFragment(new ReportSummaryFragment());
         }
     }
 
-    @Override
-    public void onAttachFragment(Fragment fragment) {
-        super.onAttachFragment(fragment);
-        View timeRangeLayout = findViewById(R.id.time_range_layout);
-        View dateRangeDivider = findViewById(R.id.date_range_divider);
-        if (timeRangeLayout != null && dateRangeDivider != null) {
-            if (fragment instanceof ReportSummaryFragment || fragment instanceof BalanceSheetFragment) {
-                timeRangeLayout.setVisibility(View.GONE);
-                dateRangeDivider.setVisibility(View.GONE);
-            } else {
-                timeRangeLayout.setVisibility(View.VISIBLE);
-                dateRangeDivider.setVisibility(View.VISIBLE);
-            }
-        }
-        View accountTypeSpinner = findViewById(R.id.report_account_type_spinner);
-        if (accountTypeSpinner != null) {
-            if (fragment instanceof LineChartFragment) {
-                accountTypeSpinner.setVisibility(View.GONE);
-            } else {
-                accountTypeSpinner.setVisibility(View.VISIBLE);
-            }
+    private void loadFragment(BaseReportFragment fragment) {
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction = fragmentManager
+                .beginTransaction();
+
+        fragmentTransaction.replace(R.id.fragment_container, fragment);
+        fragmentTransaction.commit();
+    }
+
+    /**
+     * Update the report type spinner
+     */
+    public void updateReportTypeSpinner(ReportType reportType) {
+        mReportType = reportType;
+        ActionBar actionBar = getSupportActionBar();
+        assert actionBar != null;
+        ArrayAdapter<String> arrayAdapter = new ArrayAdapter<>(actionBar.getThemedContext(),
+                android.R.layout.simple_list_item_1,
+                mReportType.getReportNames());
+        mSkipNextReportTypeSelectedRun = true;
+        mReportTypeSpinner.setOnItemSelectedListener(mReportTypeSelectedListener);
+        mReportTypeSpinner.setAdapter(arrayAdapter);
+
+
+        if (arrayAdapter.isEmpty() || mReportType == ReportType.NONE){
+            mReportTypeSpinner.setVisibility(View.GONE);
+        } else {
+            mReportTypeSpinner.setVisibility(View.VISIBLE);
         }
+        actionBar.setDisplayShowTitleEnabled(mReportType == ReportType.NONE);
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment.java
similarity index 76%
rename from app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment.java
index 8cee3a92..25d974ed 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment.java
@@ -15,22 +15,15 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.report;
+package org.gnucash.android.ui.report.barchart;
 
 import android.graphics.Color;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
-import android.view.LayoutInflater;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
 import android.widget.Toast;
 
 import com.github.mikephil.charting.charts.BarChart;
@@ -40,24 +33,21 @@
 import com.github.mikephil.charting.data.BarEntry;
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.highlight.Highlight;
-import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
 import com.github.mikephil.charting.utils.LargeValueFormatter;
 
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.ReportType;
 import org.joda.time.LocalDate;
 import org.joda.time.LocalDateTime;
-import org.joda.time.Months;
-import org.joda.time.Years;
 
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
-import java.util.Currency;
 import java.util.LinkedHashMap;
 import java.util.LinkedHashSet;
 import java.util.List;
@@ -65,10 +55,8 @@
 import java.util.Map;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
 
 import static org.gnucash.android.ui.report.ReportsActivity.COLORS;
-import static org.gnucash.android.ui.report.ReportsActivity.GroupInterval;
 
 /**
  * Activity used for drawing a bar chart
@@ -76,73 +64,50 @@
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class BarChartFragment extends Fragment implements OnChartValueSelectedListener,
-    ReportOptionsListener {
+public class BarChartFragment extends BaseReportFragment {
 
-    private static final String TAG = "BarChartFragment";
     private static final String X_AXIS_MONTH_PATTERN = "MMM YY";
     private static final String X_AXIS_QUARTER_PATTERN = "Q%d %s";
     private static final String X_AXIS_YEAR_PATTERN = "YYYY";
-    private static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
+
     private static final int ANIMATION_DURATION = 2000;
-    private static final int NO_DATA_COLOR = Color.LTGRAY;
     private static final int NO_DATA_BAR_COUNTS = 3;
 
     private AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
-    @Bind(R.id.selected_chart_slice) TextView selectedValueTextView;
     @Bind(R.id.bar_chart) BarChart mChart;
 
-    private Currency mCurrency;
-
-    private AccountType mAccountType;
-
     private boolean mUseAccountColor = true;
     private boolean mTotalPercentageMode = true;
     private boolean mChartDataPresent = true;
 
-    /**
-     * Reporting period start time
-     */
-    private long mReportStartTime = -1;
-    /**
-     * Reporting period end time
-     */
-    private long mReportEndTime = -1;
+    @Override
+    public int getTitleColor() {
+        return R.color.account_red;
+    }
 
-    private GroupInterval mGroupInterval = GroupInterval.MONTH;
+    @Override
+    public int getTitle() {
+        return R.string.title_bar_chart;
+    }
 
-    @Nullable
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_bar_chart, container, false);
-        ButterKnife.bind(this, view);
-        return view;
+    public int getLayoutResource() {
+        return R.layout.fragment_bar_chart;
     }
 
     @Override
-    public void onResume() {
-        super.onResume();
-        ((ReportsActivity)getActivity()).setAppBarColor(R.color.account_red);
+    public ReportType getReportType() {
+        return ReportType.BAR_CHART;
     }
 
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_bar_chart);
-        setHasOptionsMenu(true);
-
         mUseAccountColor = PreferenceManager.getDefaultSharedPreferences(getActivity())
                 .getBoolean(getString(R.string.key_use_account_color), false);
 
-        mCurrency = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode());
-
-        ReportsActivity reportsActivity = (ReportsActivity) getActivity();
-        mReportStartTime = reportsActivity.getReportStartTime();
-        mReportEndTime = reportsActivity.getReportEndTime();
-        mAccountType = reportsActivity.getAccountType();
-
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
 //        mChart.setDrawValuesForWholeStack(false);
@@ -156,8 +121,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         chartLegend.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER);
         chartLegend.setWordWrapEnabled(true);
 
-        mChart.setData(getData());
-        displayChart();
+        refresh();
     }
 
 
@@ -165,7 +129,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
      * Returns a data object that represents a user data of the specified account types
      * @return a {@code BarData} instance that represents a user data
      */
-    private BarData getData() {
+    protected BarData getData() {
         List<BarEntry> values = new ArrayList<>();
         List<String> labels = new ArrayList<>();
         List<Integer> colors = new ArrayList<>();
@@ -318,35 +282,6 @@ private LocalDate getEndDate(AccountType accountType) {
     }
 
     /**
-     * Calculates difference between two date values accordingly to {@code mGroupInterval}
-     * @param start start date
-     * @param end end date
-     * @return difference between two dates or {@code -1}
-     */
-    private int getDateDiff(LocalDateTime start, LocalDateTime end) {
-        switch (mGroupInterval) {
-            case QUARTER:
-                int y = Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
-                return (getQuarter(end) - getQuarter(start) + y * 4);
-            case MONTH:
-                return Months.monthsBetween(start.withDayOfMonth(1).withMillisOfDay(0), end.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
-            case YEAR:
-                return Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
-            default:
-                return -1;
-        }
-    }
-
-    /**
-     * Returns a quarter of the specified date
-     * @param date date
-     * @return a quarter
-     */
-    private int getQuarter(LocalDateTime date) {
-        return ((date.getMonthOfYear() - 1) / 3 + 1);
-    }
-
-    /**
      * Converts the specified list of floats to an array
      * @param list a list of floats
      * @return a float array
@@ -359,25 +294,26 @@ private int getQuarter(LocalDateTime date) {
         return array;
     }
 
-    /**
-     * Displays the stacked bar chart
-     */
-    private void displayChart() {
-        mChart.highlightValues(null);
+
+    @Override
+    public void generateReport() {
+        mChart.setData(getData());
         setCustomLegend();
-        mChart.notifyDataSetChanged();
 
         mChart.getAxisLeft().setDrawLabels(mChartDataPresent);
         mChart.getXAxis().setDrawLabels(mChartDataPresent);
         mChart.setTouchEnabled(mChartDataPresent);
+    }
 
-        selectedValueTextView.setText("");
-
+    @Override
+    protected void displayReport() {
+        mChart.notifyDataSetChanged();
+        mChart.highlightValues(null);
         if (mChartDataPresent) {
             mChart.animateY(ANIMATION_DURATION);
         } else {
             mChart.clearAnimation();
-            selectedValueTextView.setText(getResources().getString(R.string.label_chart_no_data));
+            mSelectedValueTextView.setText(R.string.label_chart_no_data);
         }
 
         mChart.invalidate();
@@ -401,40 +337,6 @@ private void setCustomLegend() {
     }
 
     @Override
-    public void onTimeRangeUpdated(long start, long end) {
-        if (mReportStartTime != start || mReportEndTime != end) {
-            mReportStartTime = start;
-            mReportEndTime = end;
-
-            mChart.setData(getData());
-            displayChart();
-        }
-    }
-
-    @Override
-    public void onGroupingUpdated(GroupInterval groupInterval) {
-        if (mGroupInterval != groupInterval) {
-            mGroupInterval = groupInterval;
-            mChart.setData(getData());
-            displayChart();
-        }
-    }
-
-    @Override
-    public void onAccountTypeUpdated(AccountType accountType) {
-        if (mAccountType != accountType) {
-            mAccountType = accountType;
-            mChart.setData(getData());
-            displayChart();
-        }
-    }
-
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.chart_actions, menu);
-    }
-
-    @Override
     public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_percentage_mode).setVisible(mChartDataPresent);
         // hide pie/line chart specific menu items
@@ -490,11 +392,7 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         } else {
             sum = entry.getNegativeSum() + entry.getPositiveSum();
         }
-        selectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label.trim(), value, value / sum * 100));
+        mSelectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label.trim(), value, value / sum * 100));
     }
 
-    @Override
-    public void onNothingSelected() {
-        selectedValueTextView.setText(R.string.label_select_bar_to_view_details);
-    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment.java b/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment.java
new file mode 100644
index 00000000..0cbc3529
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment.java
@@ -0,0 +1,56 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.ui.report.barchart;
+
+import org.gnucash.android.R;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.ReportType;
+
+/**
+ * Cash flow report fragment
+ */
+public class CashFlowFragment extends BaseReportFragment {
+
+    @Override
+    public int getTitle() {
+        return R.string.title_cash_flow_report;
+    }
+
+    @Override
+    public int getLayoutResource() {
+        return R.layout.fragment_bar_chart;
+    }
+
+    @Override
+    public ReportType getReportType() {
+        return ReportType.BAR_CHART;
+    }
+
+    @Override
+    public boolean requiresAccountTypeOptions() {
+        return false;
+    }
+
+    @Override
+    protected void generateReport() {
+        //// TODO: 29.11.2015 Generate cash flow report
+    }
+
+    @Override
+    protected void displayReport() {
+        // TODO: 29.11.2015 Display cash flow report
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/linechart/LineChartFragment.java
similarity index 79%
rename from app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/linechart/LineChartFragment.java
index 0da60867..321f290d 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/linechart/LineChartFragment.java
@@ -15,21 +15,13 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.report;
+package org.gnucash.android.ui.report.linechart;
 
 import android.graphics.Color;
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
-import android.view.LayoutInflater;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
 
 import com.github.mikephil.charting.charts.LineChart;
 import com.github.mikephil.charting.components.Legend;
@@ -38,25 +30,22 @@
 import com.github.mikephil.charting.data.LineData;
 import com.github.mikephil.charting.data.LineDataSet;
 import com.github.mikephil.charting.highlight.Highlight;
-import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
 import com.github.mikephil.charting.utils.LargeValueFormatter;
 
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.ReportType;
 import org.gnucash.android.ui.report.ReportsActivity.GroupInterval;
 import org.joda.time.LocalDate;
 import org.joda.time.LocalDateTime;
-import org.joda.time.Months;
-import org.joda.time.Years;
 
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
-import java.util.Currency;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
@@ -64,7 +53,6 @@
 import java.util.Map;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
 
 /**
  * Fragment for line chart reports
@@ -72,14 +60,10 @@
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class LineChartFragment extends Fragment implements OnChartValueSelectedListener,
-    ReportOptionsListener{
+public class LineChartFragment extends BaseReportFragment {
 
-    private static final String TAG = "LineChartFragment";
     private static final String X_AXIS_PATTERN = "MMM YY";
-    private static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
     private static final int ANIMATION_DURATION = 3000;
-    private static final int NO_DATA_COLOR = Color.GRAY;
     private static final int NO_DATA_BAR_COUNTS = 5;
     private static final int[] COLORS = {
             Color.parseColor("#68F1AF"), Color.parseColor("#cc1f09"), Color.parseColor("#EE8600"),
@@ -96,44 +80,23 @@
     private long mEarliestTransactionTimestamp;
     private long mLatestTransactionTimestamp;
     private boolean mChartDataPresent = true;
-    private Currency mCurrency;
-
-    private GroupInterval mGroupInterval = GroupInterval.MONTH;
-
-    /**
-     * Reporting period start time
-     */
-    private long mReportStartTime = -1;
-
-    /**
-     * Reporting period end time
-     */
-    private long mReportEndTime = -1;
 
     @Bind(R.id.line_chart) LineChart mChart;
-    @Bind(R.id.selected_chart_slice) TextView mChartSliceInfo;
 
-    @Nullable
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_line_chart, container, false);
-        ButterKnife.bind(this, view);
-        return view;
+    public int getLayoutResource() {
+        return R.layout.fragment_line_chart;
+    }
+
+    @Override
+    public int getTitle() {
+        return R.string.title_line_chart;
     }
 
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_line_chart);
-        setHasOptionsMenu(true);
-
-        mCurrency = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode());
-
-        ReportsActivity reportsActivity = (ReportsActivity) getActivity();
-        mReportStartTime = reportsActivity.getReportStartTime();
-        mReportEndTime = reportsActivity.getReportEndTime();
-
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
         mChart.getXAxis().setDrawGridLines(false);
@@ -141,30 +104,22 @@ public void onActivityCreated(Bundle savedInstanceState) {
         mChart.getAxisLeft().enableGridDashedLine(4.0f, 4.0f, 0);
         mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter(mCurrency.getSymbol(Locale.getDefault())));
 
-        // below we can add/remove displayed account's types
-        mChart.setData(getData(new ArrayList<>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
-
         Legend legend = mChart.getLegend();
         legend.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER);
         legend.setTextSize(16);
         legend.setForm(Legend.LegendForm.CIRCLE);
 
-        if (!mChartDataPresent) {
-            mChart.getAxisLeft().setAxisMaxValue(10);
-            mChart.getAxisLeft().setDrawLabels(false);
-            mChart.getXAxis().setDrawLabels(false);
-            mChart.setTouchEnabled(false);
-            mChartSliceInfo.setText(getResources().getString(R.string.label_chart_no_data));
-        } else {
-            mChart.animateX(ANIMATION_DURATION);
-        }
-        mChart.invalidate();
+        refresh();
+    }
+
+    @Override
+    public int getTitleColor() {
+        return R.color.account_blue;
     }
 
     @Override
-    public void onResume() {
-        super.onResume();
-        ((ReportsActivity)getActivity()).setAppBarColor(R.color.account_blue);
+    public ReportType getReportType() {
+        return ReportType.LINE_CHART;
     }
 
     /**
@@ -231,35 +186,6 @@ private LineData getData(List<AccountType> accountTypeList) {
     }
 
     /**
-     * Calculates difference between two date values accordingly to {@code mGroupInterval}
-     * @param start start date
-     * @param end end date
-     * @return difference between two dates or {@code -1}
-     */
-    private int getDateDiff(LocalDateTime start, LocalDateTime end) {
-        switch (mGroupInterval) {
-            case QUARTER:
-                int y = Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
-                return (getQuarter(end) - getQuarter(start) + y * 4);
-            case MONTH:
-                return Months.monthsBetween(start.withDayOfMonth(1).withMillisOfDay(0), end.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
-            case YEAR:
-                return Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
-            default:
-                return -1;
-        }
-    }
-
-    /**
-     * Returns a quarter of the specified date
-     * @param date date
-     * @return a quarter
-     */
-    private int getQuarter(LocalDateTime date) {
-        return ((date.getMonthOfYear() - 1) / 3 + 1);
-    }
-
-    /**
      * Returns a data object that represents situation when no user data available
      * @return a {@code LineData} instance for situation when no user data available
      */
@@ -289,7 +215,7 @@ private LineData getEmptyData() {
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
             if (account.getAccountType() == accountType
                     && !account.isPlaceholderAccount()
-                    && account.getCurrency() == mCurrency) {
+                    && account.getCurrency().equals(mCurrency)) {
                 accountUIDList.add(account.getUID());
             }
         }
@@ -378,6 +304,36 @@ private void calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeL
     }
 
     @Override
+    public boolean requiresAccountTypeOptions() {
+        return false;
+    }
+
+    @Override
+    protected void generateReport() {
+        LineData lineData = getData(new ArrayList<>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE)));
+        if (lineData != null) {
+            mChart.setData(lineData);
+            mChartDataPresent = true;
+        } else {
+            mChartDataPresent = false;
+        }
+    }
+
+    @Override
+    protected void displayReport() {
+        if (!mChartDataPresent) {
+            mChart.getAxisLeft().setAxisMaxValue(10);
+            mChart.getAxisLeft().setDrawLabels(false);
+            mChart.getXAxis().setDrawLabels(false);
+            mChart.setTouchEnabled(false);
+            mSelectedValueTextView.setText(getResources().getString(R.string.label_chart_no_data));
+        } else {
+            mChart.animateX(ANIMATION_DURATION);
+        }
+        mChart.invalidate();
+    }
+
+    @Override
     public void onTimeRangeUpdated(long start, long end) {
         if (mReportStartTime != start || mReportEndTime != end) {
             mReportStartTime = start;
@@ -397,16 +353,6 @@ public void onGroupingUpdated(GroupInterval groupInterval) {
     }
 
     @Override
-    public void onAccountTypeUpdated(AccountType accountType) {
-        //nothing to see here, line chart shows both income and expense
-    }
-
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.chart_actions, menu);
-    }
-
-    @Override
     public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_toggle_average_lines).setVisible(mChartDataPresent);
         // hide pie/bar chart specific menu items
@@ -451,11 +397,7 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         String label = mChart.getData().getXVals().get(e.getXIndex());
         double value = e.getVal();
         double sum = mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum();
-        mChartSliceInfo.setText(String.format(SELECTED_VALUE_PATTERN, label, value, value / sum * 100));
+        mSelectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label, value, value / sum * 100));
     }
 
-    @Override
-    public void onNothingSelected() {
-        mChartSliceInfo.setText("");
-    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
similarity index 76%
rename from app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
index 7453262b..3c0d86bd 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
@@ -15,45 +15,35 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.report;
+package org.gnucash.android.ui.report.piechart;
 
 import android.content.Context;
 import android.graphics.Color;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
-import android.view.LayoutInflater;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
 
 import com.github.mikephil.charting.charts.PieChart;
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.data.PieData;
 import com.github.mikephil.charting.data.PieDataSet;
 import com.github.mikephil.charting.highlight.Highlight;
-import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
 
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
-import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
-import org.gnucash.android.model.AccountType;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.ReportType;
+import org.gnucash.android.ui.report.ReportsActivity;
 
 import java.util.ArrayList;
 import java.util.Collections;
-import java.util.Currency;
 import java.util.List;
 import java.util.Locale;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
 
 import static com.github.mikephil.charting.components.Legend.LegendForm;
 import static com.github.mikephil.charting.components.Legend.LegendPosition;
@@ -64,13 +54,10 @@
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class PieChartFragment extends Fragment implements OnChartValueSelectedListener,
-        ReportOptionsListener {
+public class PieChartFragment extends BaseReportFragment {
 
-    public static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
     public static final String TOTAL_VALUE_LABEL_PATTERN = "%s\n%.2f %s";
     private static final int ANIMATION_DURATION = 1800;
-    public static final int NO_DATA_COLOR = Color.LTGRAY;
     public static final int CENTER_TEXT_SIZE = 18;
     /**
      * The space in degrees between the chart slices
@@ -82,12 +69,8 @@
     private static final double GROUPING_SMALLER_SLICES_THRESHOLD = 5;
 
     @Bind(R.id.pie_chart) PieChart mChart;
-    @Bind(R.id.selected_chart_slice) TextView mSelectedValueTextView;
 
     private AccountsDbAdapter mAccountsDbAdapter;
-    private TransactionsDbAdapter mTransactionsDbAdapter;
-
-    private AccountType mAccountType;
 
     private boolean mChartDataPresent = true;
 
@@ -95,41 +78,15 @@
 
     private boolean mGroupSmallerSlices = true;
 
-    private String mCurrencyCode;
-
-    /**
-     * Start time for reporting period in millis
-     */
-    private long mReportStartTime = -1;
-
-    /**
-     * End time for reporting period in millis
-     */
-    private long mReportEndTime = -1;
-
-
-    @Nullable
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_pie_chart, container, false);
-        ButterKnife.bind(this, view);
-        return view;
-    }
-
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_pie_chart);
-        setHasOptionsMenu(true);
-
         mUseAccountColor = PreferenceManager.getDefaultSharedPreferences(getActivity())
                 .getBoolean(getString(R.string.key_use_account_color), false);
 
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
-        mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 
-        mCurrencyCode = GnuCashApplication.getDefaultCurrencyCode();
 
         mChart.setCenterTextSize(CENTER_TEXT_SIZE);
         mChart.setDescription("");
@@ -138,47 +95,55 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         mChart.getLegend().setWordWrapEnabled(true);
         mChart.getLegend().setPosition(LegendPosition.BELOW_CHART_CENTER);
 
-        ReportsActivity reportsActivity = (ReportsActivity) getActivity();
-        mReportStartTime = reportsActivity.getReportStartTime();
-        mReportEndTime = reportsActivity.getReportEndTime();
-        mAccountType = reportsActivity.getAccountType();
+        refresh();
+    }
 
-        displayChart();
+    @Override
+    public int getTitleColor() {
+        return R.color.account_green;
     }
 
-    /**
-     * Sets the app bar color
-     */
     @Override
-    public void onResume() {
-        super.onResume();
-        ((ReportsActivity)getActivity()).setAppBarColor(R.color.account_green);
+    public int getTitle() {
+        return R.string.title_pie_chart;
     }
 
-    /**
-     * Manages all actions about displaying the pie chart
-     */
-    private void displayChart() {
-        mSelectedValueTextView.setText(R.string.label_select_pie_slice_to_see_details);
-        mChart.highlightValues(null);
-        mChart.clear();
+    @Override
+    public ReportType getReportType() {
+        return ReportType.PIE_CHART;
+    }
+
+    @Override
+    public int getLayoutResource() {
+        return R.layout.fragment_pie_chart;
+    }
 
+    @Override
+    protected void generateReport() {
         PieData pieData = getData();
         if (pieData != null && pieData.getYValCount() != 0) {
             mChartDataPresent = true;
             mChart.setData(mGroupSmallerSlices ? groupSmallerSlices(pieData, getActivity()) : pieData);
             float sum = mChart.getData().getYValueSum();
             String total = getResources().getString(R.string.label_chart_total);
-            String currencySymbol = Currency.getInstance(mCurrencyCode).getSymbol(Locale.getDefault());
+            String currencySymbol = mCurrency.getSymbol(Locale.getDefault());
             mChart.setCenterText(String.format(TOTAL_VALUE_LABEL_PATTERN, total, sum, currencySymbol));
-            mChart.animateXY(ANIMATION_DURATION, ANIMATION_DURATION);
         } else {
             mChartDataPresent = false;
             mChart.setCenterText(getResources().getString(R.string.label_chart_no_data));
             mChart.setData(getEmptyData());
         }
+    }
+
+    @Override
+    protected void displayReport() {
+        if (mChartDataPresent){
+            mChart.animateXY(ANIMATION_DURATION, ANIMATION_DURATION);
+        }
 
+        mSelectedValueTextView.setText(R.string.label_select_pie_slice_to_see_details);
         mChart.setTouchEnabled(mChartDataPresent);
+        mChart.highlightValues(null);
         mChart.invalidate();
     }
 
@@ -193,7 +158,7 @@ private PieData getData() {
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
             if (account.getAccountType() == mAccountType
                     && !account.isPlaceholderAccount()
-                    && account.getCurrency() == Currency.getInstance(mCurrencyCode)) {
+                    && account.getCurrency() == mCurrency) {
 
                 double balance = mAccountsDbAdapter.getAccountsBalance(Collections.singletonList(account.getUID()),
                         mReportStartTime, mReportEndTime).asDouble();
@@ -211,27 +176,6 @@ private PieData getData() {
         return new PieData(labels, dataSet);
     }
 
-    @Override
-    public void onTimeRangeUpdated(long start, long end) {
-        if (mReportStartTime != start || mReportEndTime != end) {
-            mReportStartTime = start;
-            mReportEndTime = end;
-            displayChart();
-        }
-    }
-
-    @Override
-    public void onGroupingUpdated(ReportsActivity.GroupInterval groupInterval) {
-        //nothing to see here, this doesn't make sense for a pie chart
-    }
-
-    @Override
-    public void onAccountTypeUpdated(AccountType accountType) {
-        if (mAccountType != accountType) {
-            mAccountType = accountType;
-            displayChart();
-        }
-    }
 
     /**
      * Returns a data object that represents situation when no user data available
@@ -279,11 +223,6 @@ private void bubbleSort() {
     }
 
     @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.chart_actions, menu);
-    }
-
-    @Override
     public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_order_by_size).setVisible(mChartDataPresent);
         menu.findItem(R.id.menu_toggle_labels).setVisible(mChartDataPresent);
@@ -317,7 +256,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             }
             case R.id.menu_group_other_slice: {
                 mGroupSmallerSlices = !mGroupSmallerSlices;
-                displayChart();
+                refresh();
                 return true;
             }
 
@@ -369,9 +308,4 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         float percent = value / mChart.getData().getYValueSum() * 100;
         mSelectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label, value, percent));
     }
-
-    @Override
-    public void onNothingSelected() {
-        mSelectedValueTextView.setText("");
-    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BalanceSheetFragment.java b/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
similarity index 68%
rename from app/src/main/java/org/gnucash/android/ui/report/BalanceSheetFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
index fed3004d..33cb5037 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BalanceSheetFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.gnucash.android.ui.report;
+package org.gnucash.android.ui.report.sheet;
 
 import android.database.Cursor;
 import android.graphics.Typeface;
@@ -34,6 +34,8 @@
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.ReportType;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 
 import java.util.ArrayList;
@@ -46,7 +48,7 @@
  * Fragment report as text
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class BalanceSheetFragment extends Fragment {
+public class BalanceSheetFragment extends BaseReportFragment {
 
     @Bind(R.id.table_assets) TableLayout mAssetsTableLayout;
     @Bind(R.id.table_liabilities) TableLayout mLiabilitiesTableLayout;
@@ -54,47 +56,74 @@
 
     @Bind(R.id.total_liability_and_equity) TextView mNetWorth;
 
-
     AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
-    @Nullable
+    private Money mAssetsBalance;
+    private Money mLiabilitiesBalance;
+    private List<AccountType> mAssetAccountTypes;
+    private List<AccountType> mLiabilityAccountTypes;
+    private List<AccountType> mEquityAccountTypes;
+
+    @Override
+    public int getLayoutResource() {
+        return R.layout.fragment_text_report;
+    }
+
+    @Override
+    public int getTitleColor() {
+        return R.color.account_purple;
+    }
+
+    @Override
+    public int getTitle() {
+        return R.string.title_balance_sheet_report;
+    }
+
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_text_report, container, false);
-        ButterKnife.bind(this, view);
-        return view;
+    public ReportType getReportType() {
+        return ReportType.TEXT;
     }
 
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
-        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_balance_sheet_report);
-        setHasOptionsMenu(true);
-
-        List<AccountType> accountTypes = new ArrayList<>();
-        accountTypes.add(AccountType.ASSET);
-        accountTypes.add(AccountType.CASH);
-        accountTypes.add(AccountType.BANK);
-        loadAccountViews(accountTypes, mAssetsTableLayout);
-        Money assetsBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
-
-        accountTypes.clear();
-        accountTypes.add(AccountType.LIABILITY);
-        accountTypes.add(AccountType.CREDIT);
-        loadAccountViews(accountTypes, mLiabilitiesTableLayout);
-        Money liabilitiesBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
-
-        accountTypes.clear();
-        accountTypes.add(AccountType.EQUITY);
-        loadAccountViews(accountTypes, mEquityTableLayout);
-
-        TransactionsActivity.displayBalance(mNetWorth, assetsBalance.subtract(liabilitiesBalance));
+        mAssetAccountTypes = new ArrayList<>();
+        mAssetAccountTypes.add(AccountType.ASSET);
+        mAssetAccountTypes.add(AccountType.CASH);
+        mAssetAccountTypes.add(AccountType.BANK);
+
+        mLiabilityAccountTypes = new ArrayList<>();
+        mLiabilityAccountTypes.add(AccountType.LIABILITY);
+        mLiabilityAccountTypes.add(AccountType.CREDIT);
+
+        mEquityAccountTypes = new ArrayList<>();
+        mEquityAccountTypes.add(AccountType.EQUITY);
+        refresh();
     }
 
     @Override
-    public void onResume() {
-        super.onResume();
-        ((ReportsActivity)getActivity()).setAppBarColor(R.color.account_purple);
+    public boolean requiresAccountTypeOptions() {
+        return false;
+    }
+
+    @Override
+    public boolean requiresTimeRangeOptions() {
+        return false;
+    }
+
+    @Override
+    protected void generateReport() {
+        mAssetsBalance = mAccountsDbAdapter.getAccountBalance(mAssetAccountTypes, -1, System.currentTimeMillis());
+        mLiabilitiesBalance = mAccountsDbAdapter.getAccountBalance(mLiabilityAccountTypes, -1, System.currentTimeMillis());
+    }
+
+    @Override
+    protected void displayReport() {
+        loadAccountViews(mAssetAccountTypes, mAssetsTableLayout);
+        loadAccountViews(mLiabilityAccountTypes, mLiabilitiesTableLayout);
+        loadAccountViews(mEquityAccountTypes, mEquityTableLayout);
+
+        TransactionsActivity.displayBalance(mNetWorth, mAssetsBalance.subtract(mLiabilitiesBalance));
     }
 
     @Override
diff --git a/app/src/main/res/layout/activity_reports.xml b/app/src/main/res/layout/activity_reports.xml
index 602d4d15..32cb53d5 100644
--- a/app/src/main/res/layout/activity_reports.xml
+++ b/app/src/main/res/layout/activity_reports.xml
@@ -24,65 +24,69 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <ScrollView
+    <RelativeLayout
         android:layout_width="match_parent"
         android:layout_height="match_parent">
-        <LinearLayout
-            android:orientation="vertical"
+        <ScrollView android:id="@+id/fragment_view"
             android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:gravity="center_vertical">
-
-            <android.support.v7.widget.Toolbar
-                android:id="@+id/toolbar"
-                android:background="?attr/colorPrimary"
+            android:layout_height="wrap_content">
+            <RelativeLayout
+                android:orientation="vertical"
                 android:layout_width="match_parent"
-                android:layout_height="?attr/actionBarSize"
-                app:layout_scrollFlags="enterAlways"
-                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-                app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
+                android:layout_height="wrap_content"
+                android:gravity="center_vertical">
 
-            <LinearLayout android:id="@+id/time_range_layout"
-                android:padding="@dimen/dialog_padding"
-                android:weightSum="4"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content">
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="0.8"
-                    android:gravity="center_vertical"
-                    android:textSize="14sp"
-                    android:layout_height="wrap_content"
-                    android:text="@string/label_report_period"/>
+                <include android:id="@+id/toolbar_layout"
+                    layout="@layout/reports_toolbar" />
 
-                <org.gnucash.android.ui.util.widget.ReselectSpinner
-                    android:id="@+id/time_range_spinner"
-                    android:layout_weight="1.8"
-                    android:layout_width="0dp"
+                <FrameLayout android:id="@+id/fragment_container"
+                    android:orientation="vertical"
+                    android:layout_width="match_parent"
+                    android:layout_below="@id/toolbar_layout"
                     android:layout_height="wrap_content" />
 
-                <Spinner
-                    android:id="@+id/report_account_type_spinner"
-                    android:layout_gravity="right"
-                    android:layout_width="0dp"
-                    android:layout_weight="1.4"
-                    android:layout_marginLeft="5dp"
-                    android:layout_height="wrap_content" />
-            </LinearLayout>
-            <View android:id="@+id/date_range_divider"
-                android:layout_width="match_parent"
-                android:layout_height="1dp"
-                android:layout_marginTop="5dp"
-                android:background="@android:color/darker_gray" />
+            </RelativeLayout>
+        </ScrollView>
 
+        <View android:id="@+id/date_range_divider"
+            android:layout_width="match_parent"
+            android:layout_height="1dp"
+            android:layout_marginTop="5dp"
+            android:layout_below="@id/fragment_view"
+            android:background="@android:color/darker_gray" />
 
-            <FrameLayout android:id="@+id/fragment_container"
-                android:orientation="vertical"
-                android:layout_weight="3"
-                android:layout_width="match_parent"
-                android:layout_height="0dp" />
+        <LinearLayout android:id="@+id/time_range_layout"
+            android:padding="@dimen/dialog_padding"
+            android:weightSum="4"
+            android:layout_below="@id/date_range_divider"
+            android:layout_alignParentBottom="true"
+            android:layout_width="match_parent"
+            android:layout_height="120dp">
+            <TextView
+                android:layout_width="0dp"
+                android:layout_weight="0.8"
+                android:gravity="center_vertical"
+                android:layout_gravity="center_vertical"
+                android:textSize="14sp"
+                android:layout_height="match_parent"
+                android:text="@string/label_report_period"/>
+
+            <org.gnucash.android.ui.util.widget.ReselectSpinner
+                android:id="@+id/time_range_spinner"
+                android:layout_weight="1.8"
+                android:layout_width="0dp"
+                android:layout_height="match_parent" />
+
+            <Spinner
+                android:id="@+id/report_account_type_spinner"
+                android:layout_gravity="right"
+                android:layout_width="0dp"
+                android:layout_weight="1.4"
+                android:layout_marginLeft="5dp"
+                android:layout_marginStart="5dp"
+                android:layout_height="match_parent" />
         </LinearLayout>
-    </ScrollView>
+    </RelativeLayout>
     <android.support.design.widget.NavigationView
         android:id="@+id/nav_view"
         android:layout_width="wrap_content"
diff --git a/app/src/main/res/layout/reports_toolbar.xml b/app/src/main/res/layout/reports_toolbar.xml
new file mode 100644
index 00000000..14feb0bc
--- /dev/null
+++ b/app/src/main/res/layout/reports_toolbar.xml
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<FrameLayout xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <ProgressBar android:id="@+id/progress_indicator"
+        android:layout_width="match_parent"
+        android:layout_height="5dp"
+        style="?android:attr/progressBarStyleHorizontal"
+        android:indeterminate="true"
+        android:visibility="visible"/>
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:background="?attr/colorPrimary"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        app:elevation="10dp"
+        app:layout_scrollFlags="enterAlways"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+        tools:showIn="@layout/activity_form">
+        <Spinner android:id="@+id/report_type_spinner"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            app:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>
+    </android.support.v7.widget.Toolbar>
+</FrameLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/toolbar.xml b/app/src/main/res/layout/toolbar.xml
index 6d66a5d1..e755d5cc 100644
--- a/app/src/main/res/layout/toolbar.xml
+++ b/app/src/main/res/layout/toolbar.xml
@@ -1,12 +1,41 @@
 <?xml version="1.0" encoding="utf-8"?>
-<android.support.v7.widget.Toolbar xmlns:app="http://schemas.android.com/apk/res-auto"
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<FrameLayout xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/toolbar"
-    android:background="?attr/colorPrimary"
     android:layout_width="match_parent"
-    android:layout_height="?attr/actionBarSize"
-    app:elevation="10dp"
-    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-    app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
-    tools:showIn="@layout/activity_form" />
\ No newline at end of file
+    android:layout_height="wrap_content">
+
+    <ProgressBar android:id="@+id/progress_indicator"
+        android:layout_width="match_parent"
+        android:layout_height="5dp"
+        style="?android:attr/progressBarStyleHorizontal"
+        android:indeterminate="true"
+        android:visibility="visible"/>
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:background="?attr/colorPrimary"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        app:elevation="10dp"
+        app:layout_scrollFlags="enterAlways"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+        tools:showIn="@layout/activity_form" />
+</FrameLayout>
\ No newline at end of file
diff --git a/app/src/main/res/values-af-rZA/strings.xml b/app/src/main/res/values-af-rZA/strings.xml
index 1f422350..35d5d72b 100644
--- a/app/src/main/res/values-af-rZA/strings.xml
+++ b/app/src/main/res/values-af-rZA/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ar-rSA/strings.xml b/app/src/main/res/values-ar-rSA/strings.xml
index fd7573d1..81d94b6a 100644
--- a/app/src/main/res/values-ar-rSA/strings.xml
+++ b/app/src/main/res/values-ar-rSA/strings.xml
@@ -406,6 +406,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ca-rES/strings.xml b/app/src/main/res/values-ca-rES/strings.xml
index 76ad35a8..26a22e59 100644
--- a/app/src/main/res/values-ca-rES/strings.xml
+++ b/app/src/main/res/values-ca-rES/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltims 3 mesos</item>
diff --git a/app/src/main/res/values-cs-rCZ/strings.xml b/app/src/main/res/values-cs-rCZ/strings.xml
index 2522cfa4..985141f1 100644
--- a/app/src/main/res/values-cs-rCZ/strings.xml
+++ b/app/src/main/res/values-cs-rCZ/strings.xml
@@ -391,6 +391,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 803247a1..a0d3c9d3 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -383,6 +383,7 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-el-rGR/strings.xml b/app/src/main/res/values-el-rGR/strings.xml
index 8d50732d..24f6f44d 100644
--- a/app/src/main/res/values-el-rGR/strings.xml
+++ b/app/src/main/res/values-el-rGR/strings.xml
@@ -397,6 +397,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-en-rGB/strings.xml b/app/src/main/res/values-en-rGB/strings.xml
index 1f422350..35d5d72b 100644
--- a/app/src/main/res/values-en-rGB/strings.xml
+++ b/app/src/main/res/values-en-rGB/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index c261ae5a..7435b820 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -383,6 +383,7 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 1fa57f89..a7ec8b1d 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -383,6 +383,7 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-fi-rFI/strings.xml b/app/src/main/res/values-fi-rFI/strings.xml
index 1f422350..35d5d72b 100644
--- a/app/src/main/res/values-fi-rFI/strings.xml
+++ b/app/src/main/res/values-fi-rFI/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 0d941565..841d5063 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -383,6 +383,7 @@ Aucune information permettant d\'identifier l\'utilisateur ne sera recueillis da
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Mois actuel</item>
     <item>3 derniers mois</item>
diff --git a/app/src/main/res/values-hu-rHU/strings.xml b/app/src/main/res/values-hu-rHU/strings.xml
index 7fbd2da0..dceba854 100644
--- a/app/src/main/res/values-hu-rHU/strings.xml
+++ b/app/src/main/res/values-hu-rHU/strings.xml
@@ -388,6 +388,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index 8b22157d..a83a2548 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -387,6 +387,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Mese corrente</item>
     <item>Ultimi 3 mesi</item>
diff --git a/app/src/main/res/values-iw-rIL/strings.xml b/app/src/main/res/values-iw-rIL/strings.xml
index 1f422350..35d5d72b 100644
--- a/app/src/main/res/values-iw-rIL/strings.xml
+++ b/app/src/main/res/values-iw-rIL/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index 3e24c66b..11e568f1 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -381,6 +381,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index 23768708..98933699 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -381,6 +381,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 05ee7407..d4dee755 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -376,6 +376,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">Ingen kompatible apper til  motta de eksporterte transaksjonene!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
diff --git a/app/src/main/res/values-nl-rNL/strings.xml b/app/src/main/res/values-nl-rNL/strings.xml
index 0adb2052..2e0656f6 100644
--- a/app/src/main/res/values-nl-rNL/strings.xml
+++ b/app/src/main/res/values-nl-rNL/strings.xml
@@ -387,6 +387,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Huidige maand</item>
     <item>Afgelopen 3 maanden</item>
diff --git a/app/src/main/res/values-no-rNO/strings.xml b/app/src/main/res/values-no-rNO/strings.xml
index cab3c1fd..25e52af1 100644
--- a/app/src/main/res/values-no-rNO/strings.xml
+++ b/app/src/main/res/values-no-rNO/strings.xml
@@ -377,6 +377,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
diff --git a/app/src/main/res/values-pl-rPL/strings.xml b/app/src/main/res/values-pl-rPL/strings.xml
index a1bddedc..abd710d7 100644
--- a/app/src/main/res/values-pl-rPL/strings.xml
+++ b/app/src/main/res/values-pl-rPL/strings.xml
@@ -384,6 +384,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Biecy miesic</item>
     <item>Ostatnie 3 miesice</item>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 69045948..eb7a3533 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -381,6 +381,7 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="menu_move_transaction">Mover...</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Ms atual</item>
     <item>Last 3 meses</item>
diff --git a/app/src/main/res/values-pt-rPT/strings.xml b/app/src/main/res/values-pt-rPT/strings.xml
index af4dd033..2c944881 100644
--- a/app/src/main/res/values-pt-rPT/strings.xml
+++ b/app/src/main/res/values-pt-rPT/strings.xml
@@ -381,6 +381,7 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="menu_move_transaction">Mover...</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Ms actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-pt/strings.xml b/app/src/main/res/values-pt/strings.xml
index abbcfa58..c2d382bf 100644
--- a/app/src/main/res/values-pt/strings.xml
+++ b/app/src/main/res/values-pt/strings.xml
@@ -502,4 +502,5 @@ Neste processo n&#227;o ser&#227;o recolhidas informa&#231;&#245;es do utilizado
     <string name="label_no_scheduled_exports_to_display">N&#227;o existem exporta&#231;&#245;es agendadas para mostrar</string>
     <string name="title_create_export_schedule">Criar uma exporta&#231;&#227;o agendada</string>
     <string name="toast_exported_to">Exportado para : %1$s</string>
+    <string name="title_cash_flow_report">Cash Flow</string>
 </resources>
diff --git a/app/src/main/res/values-ro-rRO/strings.xml b/app/src/main/res/values-ro-rRO/strings.xml
index 2522cfa4..985141f1 100644
--- a/app/src/main/res/values-ro-rRO/strings.xml
+++ b/app/src/main/res/values-ro-rRO/strings.xml
@@ -391,6 +391,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 429503f5..b8c02f75 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -389,6 +389,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
diff --git a/app/src/main/res/values-sr-rSP/strings.xml b/app/src/main/res/values-sr-rSP/strings.xml
index 413e6b9c..78ac44d7 100644
--- a/app/src/main/res/values-sr-rSP/strings.xml
+++ b/app/src/main/res/values-sr-rSP/strings.xml
@@ -391,6 +391,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-sv-rSE/strings.xml b/app/src/main/res/values-sv-rSE/strings.xml
index 1f422350..35d5d72b 100644
--- a/app/src/main/res/values-sv-rSE/strings.xml
+++ b/app/src/main/res/values-sv-rSE/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-tr-rTR/strings.xml b/app/src/main/res/values-tr-rTR/strings.xml
index 6e8132c5..8a9913f8 100644
--- a/app/src/main/res/values-tr-rTR/strings.xml
+++ b/app/src/main/res/values-tr-rTR/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-uk-rUA/strings.xml b/app/src/main/res/values-uk-rUA/strings.xml
index 0015fd16..6624da21 100644
--- a/app/src/main/res/values-uk-rUA/strings.xml
+++ b/app/src/main/res/values-uk-rUA/strings.xml
@@ -387,6 +387,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
diff --git a/app/src/main/res/values-vi-rVN/strings.xml b/app/src/main/res/values-vi-rVN/strings.xml
index 23768708..98933699 100644
--- a/app/src/main/res/values-vi-rVN/strings.xml
+++ b/app/src/main/res/values-vi-rVN/strings.xml
@@ -381,6 +381,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index 019b9a6d..7fc5c789 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -378,6 +378,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml
index 0a3e4c1c..44e14016 100644
--- a/app/src/main/res/values-zh-rTW/strings.xml
+++ b/app/src/main/res/values-zh-rTW/strings.xml
@@ -378,6 +378,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 2323d8ba..c4e84e74 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -406,6 +406,7 @@
     <string name="menu_move_transaction">Move...</string>
     <string name="menu_duplicate_transaction">Duplicate</string>
     <string name="nav_menu_budgets">Budgets</string>
+    <string name="title_cash_flow_report">Cash Flow</string>
     <string-array name="report_time_range">
         <item>Current month</item>
         <item>Last 3 months</item>
