From f2d9169d727fbf49a87f6a48843e8176fb9a5867 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Thu, 19 Mar 2015 18:44:14 +0200
Subject: [PATCH] Added bar chart

---
 app/src/main/AndroidManifest.xml                   |   1 +
 .../gnucash/android/ui/chart/BarChartActivity.java | 128 +++++++++++++++++++++
 .../android/ui/chart/ChartReportActivity.java      |   2 +-
 3 files changed, 130 insertions(+), 1 deletion(-)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java

diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index a368de55..e01592bc 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -80,6 +80,7 @@
         <activity android:name=".ui.chart.ChartReportActivity" />
         <activity android:name=".ui.chart.PieChartActivity" />
         <activity android:name=".ui.chart.LineChartActivity" />
+        <activity android:name=".ui.chart.BarChartActivity" />
         <service android:name=".service.SchedulerService"
             android:exported="false"
             android:label="GnuCash Android Scheduler Execution Service"/>
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
new file mode 100644
index 00000000..c0307d8a
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -0,0 +1,128 @@
+package org.gnucash.android.ui.chart;
+
+import android.graphics.Color;
+import android.os.Bundle;
+import android.util.Log;
+import android.widget.LinearLayout;
+
+import com.github.mikephil.charting.charts.BarChart;
+import com.github.mikephil.charting.components.Legend;
+import com.github.mikephil.charting.data.BarData;
+import com.github.mikephil.charting.data.BarDataSet;
+import com.github.mikephil.charting.data.BarEntry;
+import com.github.mikephil.charting.utils.LargeValueFormatter;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.model.Account;
+import org.gnucash.android.model.AccountType;
+import org.gnucash.android.ui.passcode.PassLockActivity;
+import org.joda.time.LocalDateTime;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ *
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ */
+public class BarChartActivity extends PassLockActivity {
+
+    private static final String TAG = "BarChartActivity";
+
+    private static final int[] COLORS = {
+            Color.rgb(104, 241, 175), Color.RED
+    };
+
+    private BarChart mChart;
+    private List<AccountType> mAccountTypeList;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        setContentView(R.layout.activity_line_chart);
+        super.onCreate(savedInstanceState);
+
+        mChart = new com.github.mikephil.charting.charts.BarChart(this);
+        ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
+        mChart.setDescription("");
+//        mChart.setValueFormatter(new LargeValueFormatter());
+        mChart.setDrawValuesForWholeStack(false);
+        mChart.setDrawBarShadow(false);
+//        XLabels xl  = mChart.getXLabels();
+//        xl.setCenterXLabelText(true);
+        mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter());
+        mChart.getAxisRight().setEnabled(false);
+
+//        mAccountTypeList = Arrays.asList(AccountType.EXPENSE, AccountType.INCOME);
+        mAccountTypeList = Arrays.asList(AccountType.INCOME, AccountType.EXPENSE);
+        setStackedData();
+
+        Legend l = mChart.getLegend();
+        l.setForm(Legend.LegendForm.SQUARE);
+        l.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
+
+        mChart.animateX(3000);
+        mChart.invalidate();
+    }
+
+    protected void setStackedData() {
+        AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
+
+        LocalDateTime start = new LocalDateTime().minusMonths(5).withDayOfMonth(1).withMillisOfDay(0);
+        LocalDateTime end = new LocalDateTime().withDayOfMonth(1).withMillisOfDay(0);
+        Log.w(TAG, "X AXIS START DATE: " + start.toString("dd MM yyyy"));
+        Log.w(TAG, "X AXIS END DATE: " + end.toString("dd MM yyyy"));
+
+        Map<AccountType, List<String>> accountUIDMap = new HashMap<AccountType, List<String>>();
+        for (AccountType accountType : mAccountTypeList) {
+            List<String> accountUIDList = new ArrayList<String>();
+
+            for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
+                if (account.getAccountType() == accountType && !account.isPlaceholderAccount()) {
+                    accountUIDList.add(account.getUID());
+
+                }
+                accountUIDMap.put(accountType, accountUIDList);
+            }
+        }
+
+        ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();
+        ArrayList<BarEntry> values = new ArrayList<BarEntry>();
+        ArrayList<String> xVals = new ArrayList<String>();
+        int z = 0;
+        while (!start.isAfter(end)) {
+            xVals.add(start.toString("MMM yy"));
+            Log.i(TAG, "xVals " + start.toString("MM yy"));
+
+
+            long startPeriod = start.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
+            long endPeriod = start.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
+
+            float stackedValues[] = new float[mAccountTypeList.size()];
+            int i = 0;
+            for (Map.Entry<AccountType, List<String>> entry : accountUIDMap.entrySet()) {
+                float balance = (float) mAccountsDbAdapter.getAccountsBalance(entry.getValue(), startPeriod, endPeriod).absolute().asDouble();
+                stackedValues[i++] = balance;
+                Log.w(TAG, entry.getKey() + "" + start.toString(" MMMM yyyy") + ", balance = " + balance);
+            }
+            values.add(new BarEntry(stackedValues, z));
+            z++;
+
+            start = start.plusMonths(1);
+        }
+
+        BarDataSet set = new BarDataSet(values, "");
+//        set.setValueFormatter();
+        set.setStackLabels(new String[] { AccountType.INCOME.toString(), AccountType.EXPENSE.toString() });
+        set.setColors(COLORS);
+
+        dataSets.add(set);
+
+        BarData bd = new BarData(xVals, dataSets);
+        mChart.setData(bd);
+    }
+
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
index 7e2dd79c..6da14de5 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/ChartReportActivity.java
@@ -34,7 +34,7 @@ public void onClick(View view) {
         findViewById(R.id.bar_chart_button).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-//                startActivity(new Intent(view.getContext(), BarChartActivity.class));
+                startActivity(new Intent(view.getContext(), BarChartActivity.class));
             }
         });
 
