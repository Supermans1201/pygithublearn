From 1ce13335e65b8ac1b1cee3723d3a6aaed5c6525d Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 15 Jun 2012 01:44:33 +0200
Subject: [PATCH] Fixed: bug causing empty list to be displayed after returning
 from another view Feature: Edit transactions (modify, delete transactions)

---
 GnucashMobile/res/drawable-hdpi/content_copy.png   | Bin 0 -> 1373 bytes
 GnucashMobile/res/drawable-mdpi/content_copy.png   | Bin 0 -> 1321 bytes
 GnucashMobile/res/drawable-xhdpi/content_copy.png  | Bin 0 -> 1438 bytes
 .../res/layout/fragment_new_transaction.xml        |  34 +++-
 .../res/layout/fragment_transactions_list.xml      |   4 +-
 GnucashMobile/res/layout/list_item_transaction.xml |   3 +-
 GnucashMobile/res/menu/account_context_menu.xml    |   2 +-
 .../res/menu/transactions_context_menu.xml         |  37 ++++
 .../res/menu/transactions_list_actions.xml         |  30 +++
 GnucashMobile/res/values/strings.xml               |   6 +-
 .../src/org/gnucash/android/data/Transaction.java  |   4 +-
 .../gnucash/android/db/TransactionsDbAdapter.java  |   6 +-
 .../org/gnucash/android/ui/AccountsActivity.java   |  15 ++
 .../gnucash/android/ui/AccountsListFragment.java   |  27 ++-
 .../gnucash/android/ui/NewTransactionFragment.java |  89 +++++++--
 .../android/ui/TransactionsListFragment.java       | 222 +++++++++++++++++++--
 .../android/util/OnAccountSelectedListener.java    |   2 +
 17 files changed, 412 insertions(+), 69 deletions(-)
 create mode 100644 GnucashMobile/res/drawable-hdpi/content_copy.png
 create mode 100644 GnucashMobile/res/drawable-mdpi/content_copy.png
 create mode 100644 GnucashMobile/res/drawable-xhdpi/content_copy.png
 create mode 100644 GnucashMobile/res/menu/transactions_context_menu.xml
 create mode 100644 GnucashMobile/res/menu/transactions_list_actions.xml

diff --git a/GnucashMobile/res/drawable-hdpi/content_copy.png b/GnucashMobile/res/drawable-hdpi/content_copy.png
new file mode 100644
index 0000000000000000000000000000000000000000..623b7150486eb0c09c4dd866e672aa94337ce8f9
GIT binary patch
literal 1373
zcmeAS@N?(olHy`uVBq!ia0vp^1|ZDA1|-9oezpTC$r9IylHmNblJdl&R0hYC{G?O`
z&)mfH)S%SFl*+=BsWuD@%qp275hW46K32*3xq68pHF_1f1wh>l3^w)^1&PVosU-?Y
zsp*+{wo31J?^jaDOtDo8H}y5}EpSfF$n>ZxN)4{^3rViZPPR-@vbR&PsjvbXkegbP
zs8ErclUHn2VXFi-*9yo63F|8<fR&VF+bTgE72zA8;GAESs$i;Tpqp%9W~g9hqGxDg
zU}<8hqhMrUXrOOsq;FuZYiM9)YHnp<r~m~@K--E^(yW49+@N*=dA3R!B_#z``ugSN
z<$C4Ddih1^`i7R4mih)p`bI{&Koz>hm3bwJ6}oxF$}kgLQj3#|G7CyF^YauyCMG83
zmzLNn0bL65LT&-v*t}wBFaZNhzap_f-%!s0<RzFwUtj!6b93RUi%Wu15$?rmaB)aw
zL8^XGYH@yPQ8F;%(v(3~6<9eJr6!i-7lq{K=fFZSAS1sdzc?emK*2fKRL@YsH!(Rg
z4<rKC;p=PVnO9trn3tUD>0+w{G(#^lGsVip(a_b<&Bf8w$-u=B$h0&uv~)Fba&~kx
zH8eMIGKA@M$xklLP0cHT=}kfCb;79^lo)agfHu3N7G;*DrnnX5=PH0bZIy}JEfzS<
zgX&Ge?G{U%di8;h(Fa8>QdGl)fawRsgeP1e2cGm(^ML8S2$-;$RILs%Ffg9?ba4!+
zxb-F~*6WCYfZwWj{5!Oi<PI2r;i_WKe>Ax%f8IgnHIH~}KKm}*SHX~a&^=J(ZtGRE
za}PugU&?!}7Hn?CEPuEC!jscA#*=-*rISNWh^;)}%fZ3u9=%3N;P^*1n{6Fy-gjJY
z;3;615aacjbflL-w@&=RqLVe+2|N;01Pi_~_+Hw?p;Hl6ljRw)*|Q^MvS83H&Bu;b
zxxeOaJl2r9<8yw4^MTdP>IK5n7~LC0Z%tUi$+WZAW4qorCJWWbea!P_sZ6*nl#uN9
zcM*%QcbDyftb;S2uX<3X*wB4H`J7+v0abCvyAEYt7OG36PWZLWW^gaNwfxNyxg#<+
zGgX!cDjMV;e<{hseTk2C^UN8q<q8z#6237^`@ea=#==d9T7UkZ)6w1H;$*7w#8kSo
z<=^C%B@;SZPV6el)7K8Fki5Ar@<hQI(Ff}|nIa6WU#*^B%(P?Pr*oxMv!p(k@338<
z8K#uoemhv~JBP(Qb<Wglp@xf3|91Cq>{<K1@mF5LLUlQY?1cgns~)|J5aDW^pRzn;
z=ho0&`yCa|`>~&jPu9-uYM48>YM#x^sP|Xru$*xz`&4^G@_OZZZbloUFQV^{@4tPj
l@l!anq5{jIZT^gG3|ppF2!DID<qD|4^K|udS?83{1ONh!>bn2{

literal 0
HcmV?d00001

diff --git a/GnucashMobile/res/drawable-mdpi/content_copy.png b/GnucashMobile/res/drawable-mdpi/content_copy.png
new file mode 100644
index 0000000000000000000000000000000000000000..efb2445f0a3e2ac7ae3cca3891895d34e1eb2b95
GIT binary patch
literal 1321
zcmeAS@N?(olHy`uVBq!ia0vp^3LwnE1|*BCs=fdz$r9IylHmNblJdl&R0hYC{G?O`
z&)mfH)S%SFl*+=BsWuD@%qp275hW46K32*3xq68pHF_1f1wh>l3^w)^1&PVosU-?Y
zsp*+{wo31J?^jaDOtDo8H}y5}EpSfF$n>ZxN)4{^3rViZPPR-@vbR&PsjvbXkegbP
zs8ErclUHn2VXFi-*9yo63F|8<fR&VF+bTgE72zA8;GAESs$i;Tpqp%9W~g9hqGxDg
zU}<8hqhMrUXrOOsq;FuZYiM9)YHnp<r~m~@K--E^(yW49+@N*=dA3R!B_#z``ugSN
z<$C4Ddih1^`i7R4mih)p`bI{&Koz>hm3bwJ6}oxF$}kgLQj3#|G7CyF^YauyCMG83
zmzLNn0bL65LT&-v*t}wBFaZNhzap_f-%!s0<RzFwUtj!6b93RUi%Wu15$?rmaB)aw
zL8^XGYH@yPQ8F;%(v(3~6<9eJr6!i-7lq{K=fFZSAS1sdzc?emK*2fKRL@YsH!(Rg
z4<rKC;p=PVnO9trn3tUD>0+w{G(#^lGsVip(bCPt&DG7+$-u?X(ACh=#L&{!#L3yw
z&D7A`#K{n**Cju>G&eP`1g19yuGh@~r(RHE$SnZc?2=lPS(cjOR+OKs0QR(1CRVoq
z9pL8TjMF@*-V~f}adpM1S0CsYeNfaQMKw$an0`P^c)|s8;7LC<518JIfC>B1(*$M)
z2FBT*E{-7;x88)G^*Zbzkhf{&+KF7Owv`$$w4XTENZ7tQdi;apmv<MFi@rVMZ+Z~B
zX62LPl0U@SE}Y6SQ`6w9S@Ong_x&1cYh%t=yX1H?A7&&-&vDq2XW%)Bxk^Tm=it{K
zCMQo1PWd9G(?+t4o170BCN{Cg_HeG}DEDQ`Vl}X1oW`eRa8q&$ca%J%*%Q`#oZ>C!
ztessOoGlLSTFTFu>Fr?^UUBsE^omcnst+laspUH_IPfg})Qk=DX1n>s2<F`u*f4MB
zF_+fwkKTXll372!hjVd265G>bvpw8(i`siRduQIC$tl{|rt0gm?8$TChdcS1rn%fx
z_;7PN(`=@^#$Soqj>~rH#vXIH=+?TznMrY7y4JB{wOR+x`LqW$G=G@*;g`A9BDY_6
z!^9S}zE~8;@!gJ#Wrx$8)Bb_ay(cpBc)i_sK<58_*NdNm7C7uP&)zj#;Om2D>ir6?
z{^Ct1L|j(wOH#-$(T{#q-t+jvl*c<(XJ;fgB|p5g(X)49(gWuOVzv$0?;;pm`5E7}
pth2Qbk-O&iuYL}n?*s1!Mh2^WiB8;)*Ixn^UY@RgF6*2UngHK1)U*Hq

literal 0
HcmV?d00001

diff --git a/GnucashMobile/res/drawable-xhdpi/content_copy.png b/GnucashMobile/res/drawable-xhdpi/content_copy.png
new file mode 100644
index 0000000000000000000000000000000000000000..00bff33c74d93b8074203580dfb90bcdd7de4264
GIT binary patch
literal 1438
zcmeAS@N?(olHy`uVBq!ia0vp^4j|0I1|(Ny7TyC=k|nMYCBgY=CFO}lsSJ)O`AMk?
zp1FzXsX?iUDV2pMQ*9U+m{l@EB1$5BeXNr6bM+EIYV;~{3xK*A7;Nk-3KEmEQ%e+*
zQqwc@Y?a>c-mj#PnPRIHZt82`Ti~3Uk?B!Ylp0*+7m{3+ootz+WN)WnQ(*-(AUCxn
zQK2F?C$HG5!d3}vt`(3C64qBz04piUwpD^SD#ABF!8yMuRl!uxKsVXI%uvD1M9<K~
zz|zE0N5ROz&_LhNNZ-I**U-Sq)ZEIzPyq^*fVLH-q*(>IxIyg#@@$ndN=gc>^!3Zj
z%k|2Q_413-^$jg8E%gnI^o@*kfhu&1EAvVcD|GXUm0>2hq!uR^WfqiV=I1GZOiWD5
zFD<cE0=g99h1>$Tv3bSNU;+l1ennz|zM-B0$V)JVzP|XC=H|jx7ncO3BHWAB;Np<V
zf>iyW)Z+ZoqGVvir744~DzI`cN=+=uFAB-e&w+(vKt_H^esM;Afr4|esh**NZ(?$0
z9!LbN!`Ii!Gq1QLF)umQ)5TT^Xog;9W{Q=GqoJ#zn~RyLlYxsNkZEaRXz6O=<m~8X
zYG`iaWC+vilAm0fo0?Yw)0=|OYmQSdC^6&~0Bv?jEy^rQO>ryA&s6|>+A0&bTTF18
z2i2Q`+byOz_38s1qYsK&q^O1o0n-nN2~W5{4m|0n<^j`t5inu@^|SlMz`!Kn>Eakt
zaqG?O{eFiH1dh!WSYdUDVa*=rd8`{h33$j#Xp5=MYnaNo@sm)XxY&#d5n3t^Ng5sY
zy*q<tHM=gEaa!Ka+&|gQbyd{ye@|aOO|ovh7PYpR1)SeN#8suf$GKKAAKuG+oo-$2
z|109lQWZ}vbBU{O82JC)_;YSssl+e+mvg>c30oZ4?B~MAxMJH~anmge&oOeevd<Gc
zw>E}Z<JfY8hIuKE|1%2AIyiq;vPQwv-%E^(uL$L3A7+eSBEOJZ<eAJeUm>4bW(7%}
z@_-*XuZ$aXFV&r%X{EbUnuS~Fi+1KCE}(Ts3g;GhO6_F2u+z#>iM?c%--d}Sd)Eo8
zFy2@t+_ux|;OW~7O6ES;*0_!x<nlG;H|ivADa%eYdv<5r4*UEi*_W(kHZ<{7sKqL<
zE3ltA%XoU;w+f>trz|-69QYcT!>rkJCcX36UcgYqAk&b}Xu)8~!1v)AqmBOg;47hN
zb>*Jzyz^L{F8|}re8b&vg=gON_m%hR7fjQS{rs~`is{F+AE&onOxS;{{5V_0<r%*i
z7VNNDn;mmDXR>p8u|plh&!hh9*;F|nIG+9Xl2tWf*{Qp1UfB$4Ss&kZpJQ~8O?W61
zIagt$&Arc(4%ZGYR6WqRp6><s_W8e_HEgnSG-|SZUdps!jo${*n`V}8g${JjdV9I}
pr_<47-K>gKP!S6P*UbO1NHDzFyRi1IlfizFh^MQc%Q~loCICpS08Ib@

literal 0
HcmV?d00001

diff --git a/GnucashMobile/res/layout/fragment_new_transaction.xml b/GnucashMobile/res/layout/fragment_new_transaction.xml
index b0276580..a2eec95e 100644
--- a/GnucashMobile/res/layout/fragment_new_transaction.xml
+++ b/GnucashMobile/res/layout/fragment_new_transaction.xml
@@ -84,17 +84,29 @@
 		        android:minWidth="120dp" />    
 		</LinearLayout>
     </LinearLayout>
-    
-    <EditText android:id="@+id/input_description"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:singleLine="false"
-        android:layout_marginBottom="10dp"
-        android:hint="@string/transaction_description"
-        android:inputType="textMultiLine"
-        android:lines="2"
-        android:gravity="top"
-        />
+   <LinearLayout
+	        android:layout_height="wrap_content"
+	        android:layout_width="match_parent"
+	        android:orientation="vertical">
+	        
+	        <TextView
+	            android:id="@+id/label_description"
+	            android:text="@string/label_description"
+	            android:layout_height="wrap_content"
+	            android:layout_width="wrap_content"
+	            android:layout_marginBottom="-8dip"
+	            style="@style/TextAppearance.EditTransaction_LabelSmall" />
+	        
+		    <EditText android:id="@+id/input_description"
+		        android:layout_width="match_parent"
+		        android:layout_height="wrap_content"
+		        android:singleLine="false"
+		        android:layout_marginBottom="10dp"
+		        android:hint="@string/transaction_description"
+		        android:inputType="textMultiLine"
+		        android:gravity="top"
+		        />
+   </LinearLayout>
     <LinearLayout android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:orientation="vertical" >
diff --git a/GnucashMobile/res/layout/fragment_transactions_list.xml b/GnucashMobile/res/layout/fragment_transactions_list.xml
index 30c75c60..193fb375 100644
--- a/GnucashMobile/res/layout/fragment_transactions_list.xml
+++ b/GnucashMobile/res/layout/fragment_transactions_list.xml
@@ -29,8 +29,8 @@
     android:orientation="vertical" >
 
     <ListView android:id="@id/android:list"        
-        android:layout_width="fill_parent"
-        android:layout_height="0dip"	
+        android:layout_width="match_parent"
+        android:layout_height="0dp"	
         android:layout_weight="1"
         android:drawSelectorOnTop="false"/>
     
diff --git a/GnucashMobile/res/layout/list_item_transaction.xml b/GnucashMobile/res/layout/list_item_transaction.xml
index 1106f113..205ada0f 100644
--- a/GnucashMobile/res/layout/list_item_transaction.xml
+++ b/GnucashMobile/res/layout/list_item_transaction.xml
@@ -28,9 +28,10 @@
     style="@style/ListItem"
     android:orientation="horizontal" >
     
-    <CheckBox 
+    <CheckBox android:id="@+id/checkbox"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
+        android:focusable="false"        
         />
     
 	<TextView android:id="@+id/transaction_name" 
diff --git a/GnucashMobile/res/menu/account_context_menu.xml b/GnucashMobile/res/menu/account_context_menu.xml
index 80806442..7c368ee9 100644
--- a/GnucashMobile/res/menu/account_context_menu.xml
+++ b/GnucashMobile/res/menu/account_context_menu.xml
@@ -31,7 +31,7 @@
           
 	<item android:id="@+id/context_menu_delete"
           android:icon="@drawable/content_discard"
-          android:title="@string/delete"
+          android:title="@string/menu_delete"
           android:showAsAction="always"
           android:orderInCategory="2"/>    
 
diff --git a/GnucashMobile/res/menu/transactions_context_menu.xml b/GnucashMobile/res/menu/transactions_context_menu.xml
new file mode 100644
index 00000000..729cdbac
--- /dev/null
+++ b/GnucashMobile/res/menu/transactions_context_menu.xml
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Written By: Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 Ngewi Fet
+ 
+ This file is part of Gnucash for Android
+ 
+ Gnucash for Android is free software; you can redistribute it and/or
+ modify it under the terms of the GNU General Public License as
+ published by the Free Software Foundation; either version 2 of
+ the License, or (at your option) any later version.
+ 
+ This program is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with this program; if not, contact:
+ 
+ Free Software Foundation           Voice:  +1-617-542-5942
+ 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ Boston, MA  02110-1301,  USA       gnu@gnu.org
+-->
+<menu xmlns:android="http://schemas.android.com/apk/res/android" >
+    <item android:id="@+id/context_menu_move_transactions"
+          android:icon="@drawable/content_copy"
+          android:title="@string/menu_move"
+          android:showAsAction="always" 
+          android:orderInCategory="1" /> 
+            
+	<item android:id="@+id/context_menu_delete"
+          android:icon="@drawable/content_discard"
+          android:title="@string/menu_delete"
+          android:showAsAction="always"
+          android:orderInCategory="2"/> 
+</menu>
\ No newline at end of file
diff --git a/GnucashMobile/res/menu/transactions_list_actions.xml b/GnucashMobile/res/menu/transactions_list_actions.xml
new file mode 100644
index 00000000..0ae19752
--- /dev/null
+++ b/GnucashMobile/res/menu/transactions_list_actions.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Written By: Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 Ngewi Fet
+ 
+ This file is part of Gnucash for Android
+ 
+ Gnucash for Android is free software; you can redistribute it and/or
+ modify it under the terms of the GNU General Public License as
+ published by the Free Software Foundation; either version 2 of
+ the License, or (at your option) any later version.
+ 
+ This program is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with this program; if not, contact:
+ 
+ Free Software Foundation           Voice:  +1-617-542-5942
+ 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ Boston, MA  02110-1301,  USA       gnu@gnu.org
+-->
+<menu xmlns:android="http://schemas.android.com/apk/res/android" >
+    <item android:id="@+id/menu_add_transaction"
+          android:icon="@drawable/content_new"
+          android:title="@string/add_transaction"
+          android:showAsAction="always"/>
+</menu>
\ No newline at end of file
diff --git a/GnucashMobile/res/values/strings.xml b/GnucashMobile/res/values/strings.xml
index e82dcf1f..af165199 100644
--- a/GnucashMobile/res/values/strings.xml
+++ b/GnucashMobile/res/values/strings.xml
@@ -47,11 +47,15 @@
     <string name="credit">CREDIT</string>
     <string name="title_accounts">Accounts</string>
     <string name="title_transactions">Transactions</string>
-    <string name="delete">Delete</string>
+    <string name="menu_delete">DELETE</string>
     <string name="alert_dialog_ok_delete">Delete</string>
     <string name="alert_dialog_cancel">Cancel</string>
     <string name="notify_account_deleted">1 account has been deleted</string>
     <string name="title_confirm_delete">Confirm delete</string>
     <string name="delete_confirmation_message">All transactions in this account will also be deleted</string>
+    <string name="edit_transaction">Edit Transaction</string>
+    <string name="label_description">DESCRIPTION</string>
+    <string name="menu_move">MOVE</string>
+    <string name="selected">selected</string>
 
 </resources>
\ No newline at end of file
diff --git a/GnucashMobile/src/org/gnucash/android/data/Transaction.java b/GnucashMobile/src/org/gnucash/android/data/Transaction.java
index 67219386..8677bd28 100644
--- a/GnucashMobile/src/org/gnucash/android/data/Transaction.java
+++ b/GnucashMobile/src/org/gnucash/android/data/Transaction.java
@@ -60,9 +60,9 @@
 	 * @param name Name of the transaction
 	 */
 	public Transaction(double amount, String name) {
-		initDefaults();
-		this.mAmount = amount;
+		initDefaults();		
 		this.mName = name;
+		setAmount(amount); //takes care of setting the type for us
 	}
 	
 	/**
diff --git a/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java b/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
index 505566eb..3406ae12 100644
--- a/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -180,9 +180,13 @@ public Transaction buildTransactionInstance(Cursor c){
 		transaction.setUID(c.getString(DatabaseAdapter.COLUMN_UID));
 		transaction.setAccountUID(c.getString(DatabaseAdapter.COLUMN_ACCOUNT_UID));
 		transaction.setTime(c.getLong(DatabaseAdapter.COLUMN_TIMESTAMP));
-		
+		transaction.setDescription(c.getString(DatabaseAdapter.COLUMN_DESCRIPTION));
 		return transaction;
 	}
 	
+	public boolean deleteTransaction(long rowId){
+		Log.d(TAG, "Delete transaction with record Id: " + rowId);
+		return deleteRecord(DatabaseHelper.TRANSACTIONS_TABLE_NAME, rowId);
+	}
 	
 }
diff --git a/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java b/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java
index 54576121..92e25747 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java
@@ -129,4 +129,19 @@ public void createNewTransaction(long accountRowId) {
 		fragmentTransaction.commit();
 	}
 
+	public void editTransaction(long transactionId){
+		FragmentManager fragmentManager = getSupportFragmentManager();
+		FragmentTransaction fragmentTransaction = fragmentManager
+				.beginTransaction();
+		NewTransactionFragment newTransactionFragment = new NewTransactionFragment();
+		Bundle args = new Bundle();
+		args.putLong(NewTransactionFragment.SELECTED_TRANSACTION_ID, transactionId);		
+		newTransactionFragment.setArguments(args);
+		
+		fragmentTransaction.replace(R.id.fragment_container,
+				newTransactionFragment, FRAGMENT_NEW_TRANSACTION);
+
+		fragmentTransaction.addToBackStack(null);
+		fragmentTransaction.commit();
+	}
 }
\ No newline at end of file
diff --git a/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java b/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
index 5446560e..3741f986 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
@@ -89,13 +89,13 @@
 	 */
 	private long mSelectedItemId = -1;
 	
-	private ActionMode.Callback mActionModCallbacks = new Callback() {
+	private ActionMode.Callback mActionModeCallbacks = new Callback() {
 		
 		@Override
 		public boolean onCreateActionMode(ActionMode mode, Menu menu) {
 			MenuInflater inflater = mode.getMenuInflater();
 	        inflater.inflate(R.menu.account_context_menu, menu);
-	        mode.setTitle("1 account selected");
+	        mode.setTitle("1 selected");
 	        return true;
 		}
 
@@ -173,13 +173,9 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 	}
 	
 	@Override
-	public void onActivityCreated(Bundle savedInstanceState) {
-		super.onActivityCreated(savedInstanceState);
+	public void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
 		mAccountsDbAdapter = new AccountsDbAdapter(getActivity());
-		
-		getSherlockActivity().getSupportActionBar().setTitle(R.string.title_accounts);
-		
-		setHasOptionsMenu(true);
 		mCursorAdapter = new AccountsCursorAdapter(
 				getActivity().getApplicationContext(), 
 				R.layout.list_item_account, null,
@@ -187,6 +183,16 @@ public void onActivityCreated(Bundle savedInstanceState) {
 				new int[] { R.id.account_name });
 						
 		setListAdapter(mCursorAdapter);
+	}
+	
+	@Override
+	public void onActivityCreated(Bundle savedInstanceState) {
+		super.onActivityCreated(savedInstanceState);
+		
+		getSherlockActivity().getSupportActionBar().setTitle(R.string.title_accounts);
+		
+		setHasOptionsMenu(true);
+		
 		ListView lv = getListView();
 		lv.setOnItemLongClickListener(this);
 		lv.setChoiceMode(ListView.CHOICE_MODE_SINGLE);		
@@ -225,7 +231,7 @@ public boolean onItemLongClick(AdapterView<?> parent, View view, int position,
 			mInEditMode = true;
 			mSelectedItemId = id;
 	        // Start the CAB using the ActionMode.Callback defined above
-	        mActionMode = getSherlockActivity().startActionMode(mActionModCallbacks);
+	        mActionMode = getSherlockActivity().startActionMode(mActionModeCallbacks);
 	             
 	        selectItem(position);
 	        return true;
@@ -308,7 +314,7 @@ public void refreshList(){
 	}
 	
 	@Override
-	public void onDestroyView() {
+	public void onDestroy() {
 		super.onDestroy();
 		mAccountsDbAdapter.close();
 	}	
@@ -410,7 +416,6 @@ public Cursor loadInBackground() {
 	public void onLoadFinished(Loader<Cursor> loaderCursor, Cursor cursor) {
 		Log.d(TAG, "Accounts loader finished. Swapping in cursor");
 		mCursorAdapter.swapCursor(cursor);
-		setListAdapter(mCursorAdapter);
 		mCursorAdapter.notifyDataSetChanged();
 	}
 
diff --git a/GnucashMobile/src/org/gnucash/android/ui/NewTransactionFragment.java b/GnucashMobile/src/org/gnucash/android/ui/NewTransactionFragment.java
index c04b4b1b..318adea1 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/NewTransactionFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/NewTransactionFragment.java
@@ -71,13 +71,20 @@
 	OnDateSetListener, OnTimeSetListener {
 	
 	private TransactionsDbAdapter mTransactionsDbAdapter;
+	private long mTransactionId = 0;
+	private Transaction mTransaction;
+	
+	public static final String SELECTED_TRANSACTION_ID = "selected_transaction_id";
+	
 	final static SimpleDateFormat DATE_FORMATTER = new SimpleDateFormat("dd MMM yyyy");
 	final static SimpleDateFormat TIME_FORMATTER = new SimpleDateFormat("HH:mm");
 	
 	private ToggleButton mTransactionTypeButton;
-	private TextView mDateTextView;
-	private TextView mTimeTextView;	
+	private EditText mNameEditText;
 	private EditText mAmountEditText;
+	private EditText mDescriptionEditText;
+	private TextView mDateTextView;
+	private TextView mTimeTextView;		
 	private Calendar mDate;
 	private Calendar mTime;
 	private Spinner mAccountsSpinner;
@@ -101,25 +108,14 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		mTransactionsDbAdapter = new TransactionsDbAdapter(getActivity());
 		View v = getView();
 		
+		mNameEditText = (EditText)getView().findViewById(R.id.input_transaction_name);
+		mDescriptionEditText = (EditText)getView().findViewById(R.id.input_description);
 		mDateTextView = (TextView) v.findViewById(R.id.input_date);
 		mTimeTextView = (TextView) v.findViewById(R.id.input_time);
 		mAmountEditText = (EditText) v.findViewById(R.id.input_transaction_amount);
 		mAccountsSpinner = (Spinner) v.findViewById(R.id.input_accounts_spinner);
 		mTransactionTypeButton = (ToggleButton) v.findViewById(R.id.input_transaction_type);
 		
-		bindViews();
-		setListeners();
-	}
-
-	/**
-	 * Binds the various views to the appropriate text
-	 */
-	private void bindViews() {
-		Date time = new Date(System.currentTimeMillis()); 
-		mDateTextView.setText(DATE_FORMATTER.format(time));
-		mTimeTextView.setText(TIME_FORMATTER.format(time));
-		mTime = mDate = Calendar.getInstance();
-		
 		String[] from = new String[] {DatabaseHelper.KEY_NAME};
 		int[] to = new int[] {android.R.id.text1};
 		mAccountsDbAdapter = new AccountsDbAdapter(getActivity());
@@ -134,6 +130,48 @@ private void bindViews() {
 		mCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
 		mAccountsSpinner.setAdapter(mCursorAdapter);
 		
+		mTransactionId = getArguments().getLong(SELECTED_TRANSACTION_ID);
+		mTransaction = mTransactionsDbAdapter.getTransaction(mTransactionId);
+		
+		setListeners();
+		if (mTransaction == null)
+			initalizeViews();
+		else
+			initializeViewsWithTransaction();
+		
+	}
+
+	private void initializeViewsWithTransaction(){
+				
+		mNameEditText.setText(mTransaction.getName());
+		mTransactionTypeButton.setChecked(mTransaction.getTransactionType() == TransactionType.DEBIT);
+		mAmountEditText.setText(Double.toString(mTransaction.getAmount()));
+		mDescriptionEditText.setText(mTransaction.getDescription());
+		mDateTextView.setText(DATE_FORMATTER.format(mTransaction.getTimeMillis()));
+		mTimeTextView.setText(TIME_FORMATTER.format(mTransaction.getTimeMillis()));
+		mTime = mDate = Calendar.getInstance();
+				
+		final long accountId = mAccountsDbAdapter.fetchAccountWithUID(mTransaction.getAccountUID());
+		final int count = mCursorAdapter.getCount();
+		for (int pos = 0; pos < count; pos++) {
+			if (mCursorAdapter.getItemId(pos) == accountId)
+				mAccountsSpinner.setSelection(pos);
+		}
+		
+		ActionBar actionBar = getSherlockActivity().getSupportActionBar();
+		actionBar.setHomeButtonEnabled(true);
+		actionBar.setTitle(R.string.edit_transaction);
+	}
+	
+	/**
+	 * Binds the various views to the appropriate text
+	 */
+	private void initalizeViews() {
+		Date time = new Date(System.currentTimeMillis()); 
+		mDateTextView.setText(DATE_FORMATTER.format(time));
+		mTimeTextView.setText(TIME_FORMATTER.format(time));
+		mTime = mDate = Calendar.getInstance();
+				
 		final long accountId = getArguments().getLong(TransactionsListFragment.SELECTED_ACCOUNT_ID);
 		final int count = mCursorAdapter.getCount();
 		for (int pos = 0; pos < count; pos++) {
@@ -200,8 +238,9 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
 	}
 	
 	private void saveNewTransaction() {
-		String name = ((TextView)getView().findViewById(R.id.input_transaction_name)).getText().toString();
-		String amountString = ((TextView)getView().findViewById(R.id.input_transaction_amount)).getText().toString();
+		String name = mNameEditText.getText().toString();
+		String description = mDescriptionEditText.getText().toString();
+		String amountString = mAmountEditText.getText().toString();
 		double amount = Double.parseDouble(stripCurrencyFormatting(amountString))/100;
 		amount *= mTransactionTypeButton.isChecked() ? -1 : 1; //set negative for debit
 		Calendar cal = new GregorianCalendar(
@@ -215,11 +254,19 @@ private void saveNewTransaction() {
 		long accountID = mAccountsSpinner.getSelectedItemId();
 		Account account = mAccountsDbAdapter.getAccount(accountID);
 		String type = mTransactionTypeButton.getText().toString();
-		Transaction transaction = new Transaction(amount, name, TransactionType.valueOf(type));
-		transaction.setAccountUID(account.getUID());
-		transaction.setTime(cal.getTimeInMillis());
 		
-		mTransactionsDbAdapter.addTransaction(transaction);
+		if (mTransaction != null){
+			mTransaction.setAmount(amount);
+			mTransaction.setName(name);
+			mTransaction.setTransactionType(TransactionType.valueOf(type));
+		} else {
+			mTransaction = new Transaction(amount, name, TransactionType.valueOf(type));
+		}
+		mTransaction.setAccountUID(account.getUID());
+		mTransaction.setTime(cal.getTimeInMillis());
+		mTransaction.setDescription(description);
+		
+		mTransactionsDbAdapter.addTransaction(mTransaction);
 		mTransactionsDbAdapter.close();
 		
 		getSherlockActivity().onBackPressed();
diff --git a/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java b/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java
index 621be59f..dadcd3b8 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/TransactionsListFragment.java
@@ -24,13 +24,17 @@
 
 package org.gnucash.android.ui;
 
+import java.util.HashMap;
+
 import org.gnucash.android.R;
 import org.gnucash.android.data.Transaction;
 import org.gnucash.android.db.DatabaseAdapter;
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.util.OnAccountSelectedListener;
 
+import android.app.Activity;
 import android.content.Context;
 import android.database.Cursor;
 import android.os.Bundle;
@@ -41,34 +45,95 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.CheckBox;
+import android.widget.CompoundButton;
+import android.widget.CompoundButton.OnCheckedChangeListener;
+import android.widget.ListView;
 import android.widget.TextView;
 
 import com.actionbarsherlock.app.SherlockListFragment;
+import com.actionbarsherlock.view.ActionMode;
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
+import com.actionbarsherlock.view.MenuItem;
 
-public class TransactionsListFragment extends SherlockListFragment implements LoaderCallbacks<Cursor>{
+public class TransactionsListFragment extends SherlockListFragment implements 
+	LoaderCallbacks<Cursor> {
 
 	protected static final String TAG = "TransactionsListFragment";
 	
 	public static final String SELECTED_ACCOUNT_ID = "selected_account_id";
 	public static final String SELECTED_ACCOUNT_NAME = "selected_account_name";
-	private TransactionsDbAdapter mDbAdapter;
+	private TransactionsDbAdapter mTransactionsDbAdapter;
 	private SimpleCursorAdapter mCursorAdapter;
+	private ActionMode mActionMode = null;
+	private boolean mInEditMode = false;
 	private long mAccountID;
+	private HashMap<Integer, Long> mSelectedIds = new HashMap<Integer, Long>();
+	
+	private OnAccountSelectedListener mTransactionEditListener;
+	
+	private ActionMode.Callback mActionModeCallbacks = new ActionMode.Callback() {
+		
+		@Override
+		public boolean onCreateActionMode(ActionMode mode, Menu menu) {
+			MenuInflater inflater = mode.getMenuInflater();
+	        inflater.inflate(R.menu.transactions_context_menu, menu);
+	        return true;
+		}
+		
+		@Override
+		public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
+			//nothing to see here, move along
+			return false;
+		}
+		
+		@Override
+		public void onDestroyActionMode(ActionMode mode) {
+			finishEditMode();
+		}
+				
+		@Override
+		public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
+			switch (item.getItemId()) {
+			case R.id.context_menu_move_transactions:
+				//TODO: Move transactions to another account
+				return true;
+
+			case R.id.context_menu_delete:
+				for (long id : mSelectedIds.values()) {
+					mTransactionsDbAdapter.deleteTransaction(id);					
+				}				
+				refreshList();
+				mode.finish();
+				return true;
+				
+			default:
+				return false;
+			}
+		}
+	};
 	
 	@Override
-	public void onCreate(Bundle savedInstanceState) {		
+ 	public void onCreate(Bundle savedInstanceState) {		
 		super.onCreate(savedInstanceState);
 		setHasOptionsMenu(true);
 		Bundle args = getArguments();
-		mAccountID = args.getLong(SELECTED_ACCOUNT_ID);		
+		mAccountID = args.getLong(SELECTED_ACCOUNT_ID);	
+
+		mTransactionsDbAdapter = new TransactionsDbAdapter(getActivity().getApplicationContext());
+		mCursorAdapter = new TransactionsCursorAdapter(
+				getActivity().getApplicationContext(), 
+				R.layout.list_item_transaction, null, 
+				new String[] {DatabaseHelper.KEY_NAME, DatabaseHelper.KEY_AMOUNT}, 
+				new int[] {R.id.transaction_name, R.id.transaction_amount});
+		setListAdapter(mCursorAdapter);
 	}
 	
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
-		return inflater.inflate(R.layout.fragment_transactions_list, container, false);
+		return inflater.inflate(R.layout.fragment_transactions_list, container, false);		
 	}
 	
 	@Override
@@ -76,27 +141,57 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		String title = getArguments().getString(TransactionsListFragment.SELECTED_ACCOUNT_NAME);
 		getSherlockActivity().getSupportActionBar().setTitle(title);
-		
-		mDbAdapter = new TransactionsDbAdapter(getActivity().getApplicationContext());
-		mCursorAdapter = new TransactionsCursorAdapter(
-				getActivity().getApplicationContext(), 
-				R.layout.list_item_transaction, null, 
-				new String[] {DatabaseHelper.KEY_NAME, DatabaseHelper.KEY_AMOUNT}, 
-				new int[] {R.id.transaction_name, R.id.transaction_amount});
-		setListAdapter(mCursorAdapter);
-		
+		setHasOptionsMenu(true);
+		getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);		
 		getLoaderManager().initLoader(0, null, this);
 	}
 
+	public void refreshList(){
+		getLoaderManager().restartLoader(0, null, this);
+	}
+			
+	@Override
+	public void onAttach(Activity activity) {
+		super.onAttach(activity);
+		try {
+			 mTransactionEditListener = (OnAccountSelectedListener) activity;
+		} catch (ClassCastException e) {
+			throw new ClassCastException(activity.toString() + " must implement OnAccountSelectedListener");
+		}	
+	}
+	
 	@Override
 	public void onDestroy() {
 		super.onDestroy();
-		mDbAdapter.close();
+		mTransactionsDbAdapter.close();
+	}
+	
+	@Override
+	public void onListItemClick(ListView l, View v, int position, long id) {
+		super.onListItemClick(l, v, position, id);
+		if (mInEditMode){
+			CheckBox checkbox = (CheckBox) v.findViewById(R.id.checkbox);
+			checkbox.setChecked(!checkbox.isChecked());
+			return;
+		}
+		mTransactionEditListener.editTransaction(id);
 	}
 	
 	@Override
 	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {		
-		super.onCreateOptionsMenu(menu, inflater);		
+		inflater.inflate(R.menu.transactions_list_actions, menu);	
+	}
+	
+	@Override
+	public boolean onOptionsItemSelected(MenuItem item) {
+		switch (item.getItemId()) {
+		case R.id.menu_add_transaction:
+			mTransactionEditListener.createNewTransaction(mAccountID);
+			return true;
+
+		default:
+			return false;
+		}
 	}
 	
 	@Override
@@ -117,7 +212,69 @@ public void onLoaderReset(Loader<Cursor> loader) {
 		Log.d(TAG, "Resetting transactions loader");
 		mCursorAdapter.swapCursor(null);		
 	}
+
+	public void finishEditMode(){
+		mInEditMode = false;
+		deselectAllItems();
+		mActionMode = null;
+		mSelectedIds.clear();
+	}
+	
+	public void setActionModeTitle(){
+		int count = mSelectedIds.size();
+		if (count > 0){			
+			mActionMode.setTitle(count + " " + getResources().getString(R.string.selected));
+		}
+	}
+	
+	private void selectItem(int position){		
+		ListView lv = getListView();	
+		lv.setItemChecked(position, true);
+		View v = lv.getChildAt(position);
+		
+		v.setSelected(true);
+        v.setBackgroundColor(getResources().getColor(R.color.abs__holo_blue_light));
+        long id = lv.getItemIdAtPosition(position);
+        mSelectedIds.put(position, id);
+	}
 	
+	private void deselectAllItems() {
+		for (int position : mSelectedIds.keySet()) {
+			deselectItem(position);
+		}
+	}
+	
+	private void deselectItem(int position){
+		if (position >= 0){
+			getListView().setItemChecked(position, false);
+			View v = getListView().getChildAt(position);
+			if (v == null){
+				//if we just deleted a row, then the previous position is invalid
+				return;
+			}
+			v.setBackgroundColor(getResources().getColor(android.R.color.transparent));
+			((CheckBox) v.findViewById(R.id.checkbox)).setChecked(false);
+			v.setSelected(false);
+			mSelectedIds.remove(position);
+		}
+	}
+	
+	private void startActionMode(){
+		if (mActionMode != null) {
+            return;
+        }		
+		mInEditMode = true;
+        // Start the CAB using the ActionMode.Callback defined above
+        mActionMode = getSherlockActivity().startActionMode(mActionModeCallbacks);
+
+	}
+	
+	private void stopActionMode(){
+		if (mSelectedIds.size() > 0)
+			return;
+		else
+			mActionMode.finish();
+	}
 	
 	protected class TransactionsCursorAdapter extends SimpleCursorAdapter {
 		
@@ -127,8 +284,32 @@ public TransactionsCursorAdapter(Context context, int layout, Cursor c,
 		}
 		
 		@Override
+		public View getView(int position, View convertView, ViewGroup parent) {
+			View view = super.getView(position, convertView, parent);
+			final int itemPosition = position;
+			CheckBox checkbox = (CheckBox) view.findViewById(R.id.checkbox);
+			checkbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
+				
+				@Override
+				public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+					startActionMode();
+					getListView().setItemChecked(itemPosition, isChecked);
+					if (isChecked){
+						selectItem(itemPosition);						
+					} else {
+						deselectItem(itemPosition);
+						stopActionMode();
+					}
+					setActionModeTitle();
+				}
+			});
+			
+			return view;
+		}
+		
+		@Override
 		public void bindView(View view, Context context, Cursor cursor) {
-			super.bindView(view, context, cursor);
+			super.bindView(view, context, cursor);			
 			
 			double amount = cursor.getDouble(DatabaseAdapter.COLUMN_AMOUNT);
 			
@@ -154,7 +335,12 @@ public TransactionsCursorLoader(Context context, long accountID) {
 		@Override
 		public Cursor loadInBackground() {
 			mDatabaseAdapter = new TransactionsDbAdapter(getContext());
-			return ((TransactionsDbAdapter) mDatabaseAdapter).fetchAllTransactionsForAccount(accountID);
+			Cursor c = ((TransactionsDbAdapter) mDatabaseAdapter).fetchAllTransactionsForAccount(accountID);
+			if (c != null)
+				registerContentObserver(c);
+			return c;
 		}		
 	}
+
+
 }
diff --git a/GnucashMobile/src/org/gnucash/android/util/OnAccountSelectedListener.java b/GnucashMobile/src/org/gnucash/android/util/OnAccountSelectedListener.java
index 1c6440f6..850b1567 100644
--- a/GnucashMobile/src/org/gnucash/android/util/OnAccountSelectedListener.java
+++ b/GnucashMobile/src/org/gnucash/android/util/OnAccountSelectedListener.java
@@ -5,4 +5,6 @@
 	public void accountSelected(long accountRowId, String accountName);
 	
 	public void createNewTransaction(long accountRowId);
+	
+	public void editTransaction(long transactionId);
 }
