From 670724e03f05ec387994697c5980cb66252d8a41 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sun, 27 Mar 2016 14:32:47 +0200
Subject: [PATCH 01/15] Simplify code by not returning null from
 Account.getDescription().

---
 app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java     | 6 +++---
 app/src/main/java/org/gnucash/android/model/Account.java            | 5 +++--
 .../java/org/gnucash/android/ui/account/AccountFormFragment.java    | 4 +---
 .../test/java/org/gnucash/android/test/unit/model/AccountTest.java  | 6 ++++++
 4 files changed, 13 insertions(+), 8 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index 07aad7a7..52b95b1c 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -173,8 +173,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Account account
         mReplaceStatement.clearBindings();
         mReplaceStatement.bindString(1, account.getUID());
         mReplaceStatement.bindString(2, account.getName());
-        if (account.getDescription() != null)
-            mReplaceStatement.bindString(3, account.getDescription());
+        mReplaceStatement.bindString(3, account.getDescription());
         mReplaceStatement.bindString(4, account.getAccountType().name());
         mReplaceStatement.bindString(5, account.getCurrency().getCurrencyCode());
         if (account.getColorHexCode() != null) {
@@ -407,7 +406,8 @@ private Account buildSimpleAccountInstance(Cursor c) {
         Account account = new Account(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_NAME)));
         populateBaseModelAttributes(c, account);
 
-        account.setDescription(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_DESCRIPTION)));
+        String description = c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_DESCRIPTION));
+        account.setDescription(description == null ? "" : description);
         account.setParentUID(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_PARENT_ACCOUNT_UID)));
         account.setAccountType(AccountType.valueOf(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_TYPE))));
         Currency currency = Currency.getInstance(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_CURRENCY)));
diff --git a/app/src/main/java/org/gnucash/android/model/Account.java b/app/src/main/java/org/gnucash/android/model/Account.java
index 6df05036..b5d7066b 100644
--- a/app/src/main/java/org/gnucash/android/model/Account.java
+++ b/app/src/main/java/org/gnucash/android/model/Account.java
@@ -18,6 +18,7 @@
 
 
 import android.preference.PreferenceManager;
+import android.support.annotation.NonNull;
 
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.app.GnuCashApplication;
@@ -88,7 +89,7 @@
 	/**
 	 * Account description
 	 */
-	private String mDescription;
+	private String mDescription = "";
 
 	/**
 	 * Currency used by transactions in this account
@@ -222,7 +223,7 @@ public String getDescription() {
 	 * Sets the account mDescription
 	 * @param description String mDescription
 	 */
-	public void setDescription(String description) {
+	public void setDescription(@NonNull String description) {
 		this.mDescription = description;
 	}
 
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 40641de1..4e77e94d 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -395,9 +395,7 @@ private void initializeViewsWithAccount(Account account){
 
         mNameEditText.setText(account.getName());
         mNameEditText.setSelection(mNameEditText.getText().length());
-
-        if (account.getDescription() != null)
-            mDescriptionEditText.setText(account.getDescription());
+        mDescriptionEditText.setText(account.getDescription());
 
         if (mUseDoubleEntry) {
             if (account.getDefaultTransferAccountUID() != null) {
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
index 1c378c78..182854f0 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
@@ -103,4 +103,10 @@ public void settingCurrencyCode_shouldNotSetCommodity(){
 		assertThat(account.getCommodity()).isEqualTo(Commodity.EUR);
 		assertThat(account.getCurrency()).isEqualTo(Currency.getInstance("USD"));
 	}
+
+	@Test
+	public void newInstance_shouldHaveNonNullDescription() {
+		Account account = new Account("Test account");
+		assertThat(account.getDescription()).isEqualTo("");
+	}
 }

From 6d31dc81df8745a58a6218f074902296266233b5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sun, 27 Mar 2016 19:25:21 +0200
Subject: [PATCH 02/15] Simplify code by not returning null from
 Account.getColorHexCode().

---
 .../org/gnucash/android/db/AccountsDbAdapter.java  |  6 ++++--
 .../java/org/gnucash/android/model/Account.java    | 15 ++++++++------
 .../android/ui/account/AccountFormFragment.java    | 23 +++-------------------
 .../android/ui/report/BarChartFragment.java        |  4 +---
 .../android/ui/report/PieChartFragment.java        |  2 +-
 .../android/ui/report/ReportSummaryFragment.java   |  4 +---
 .../android/test/unit/model/AccountTest.java       |  3 ++-
 7 files changed, 21 insertions(+), 36 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index 52b95b1c..a7fcd39e 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -176,7 +176,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Account account
         mReplaceStatement.bindString(3, account.getDescription());
         mReplaceStatement.bindString(4, account.getAccountType().name());
         mReplaceStatement.bindString(5, account.getCurrency().getCurrencyCode());
-        if (account.getColorHexCode() != null) {
+        if (account.getColorHexCode() != Account.DEFAULT_COLOR) {
             mReplaceStatement.bindString(6, account.getColorHexCode());
         }
         mReplaceStatement.bindLong(7, account.isFavorite() ? 1 : 0);
@@ -414,7 +414,9 @@ private Account buildSimpleAccountInstance(Cursor c) {
         account.setCommodity(CommoditiesDbAdapter.getInstance().getCommodity(currency.getCurrencyCode()));
         account.setPlaceHolderFlag(c.getInt(c.getColumnIndexOrThrow(AccountEntry.COLUMN_PLACEHOLDER)) == 1);
         account.setDefaultTransferAccountUID(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID)));
-        account.setColorCode(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_COLOR_CODE)));
+        String color = c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_COLOR_CODE));
+        if (color != null)
+            account.setColorCode(color);
         account.setFavorite(c.getInt(c.getColumnIndexOrThrow(AccountEntry.COLUMN_FAVORITE)) == 1);
         account.setFullName(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_FULL_NAME)));
         account.setHidden(c.getInt(c.getColumnIndexOrThrow(AccountEntry.COLUMN_HIDDEN)) == 1);
diff --git a/app/src/main/java/org/gnucash/android/model/Account.java b/app/src/main/java/org/gnucash/android/model/Account.java
index b5d7066b..63e69f0a 100644
--- a/app/src/main/java/org/gnucash/android/model/Account.java
+++ b/app/src/main/java/org/gnucash/android/model/Account.java
@@ -17,6 +17,7 @@
 package org.gnucash.android.model;
 
 
+import android.graphics.Color;
 import android.preference.PreferenceManager;
 import android.support.annotation.NonNull;
 
@@ -70,7 +71,12 @@
     //TODO: Allow use of #aarrggbb format as well
     public static final String COLOR_HEX_REGEX = "^#(?:[0-9a-fA-F]{3}){1,2}$";
 
-    /**
+	/**
+	 * Default color, if not set explicitly through {@link #setColorCode(String)}.
+	 */
+	public static final String DEFAULT_COLOR = "#cccccc"; // Color.LT_GRAY
+
+	/**
      * Accounts types which are used by the OFX standard
      */
 	public enum OfxAccountType {CHECKING, SAVINGS, MONEYMRKT, CREDITLINE }
@@ -133,7 +139,7 @@
     /**
      * Account color field in hex format #rrggbb
      */
-    private String mColorCode;
+    private String mColorCode = DEFAULT_COLOR;
 
     /**
      * Flag which marks this account as a favorite account
@@ -306,10 +312,7 @@ public String getColorHexCode() {
      * @param colorCode Color code to be set in the format #rrggbb or #rgb
      * @throws java.lang.IllegalArgumentException if the color code is not properly formatted
      */
-    public void setColorCode(String colorCode) {
-        if (colorCode == null)
-            return;
-
+    public void setColorCode(@NonNull String colorCode) {
         if (!Pattern.matches(COLOR_HEX_REGEX, colorCode))
             throw new IllegalArgumentException("Invalid color hex code: " + colorCode);
 
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 4e77e94d..0a29dbd5 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -203,10 +203,7 @@
      */
     private boolean mUseDoubleEntry;
 
-    /**
-     * Default to transparent
-     */
-    private String mSelectedColor = null;
+    private String mSelectedColor = Account.DEFAULT_COLOR;
 
     /**
      * Trigger for color picker dialog
@@ -417,7 +414,7 @@ private void initializeViewsWithAccount(Account account){
         }
 
         mPlaceholderCheckBox.setChecked(account.isPlaceholderAccount());
-        initializeColorSquarePreview(account.getColorHexCode());
+        mColorSquare.setBackgroundColor(Color.parseColor(account.getColorHexCode()));
 
         setAccountTypeSelection(account.getAccountType());
     }
@@ -441,17 +438,6 @@ private void initializeViews(){
     }
 
     /**
-     * Initializes the preview of the color picker (color square) to the specified color
-     * @param colorHex Color of the format #rgb or #rrggbb
-     */
-    private void initializeColorSquarePreview(String colorHex){
-        if (colorHex != null)
-            mColorSquare.setBackgroundColor(Color.parseColor(colorHex));
-        else
-            mColorSquare.setBackgroundColor(Color.LTGRAY);
-    }
-
-    /**
      * Selects the corresponding account type in the spinner
      * @param accountType AccountType to be set
      */
@@ -549,10 +535,7 @@ private void showColorPickerDialog(){
         FragmentManager fragmentManager = getActivity().getSupportFragmentManager();
         int currentColor = Color.LTGRAY;
         if (mAccount != null){
-            String accountColor = mAccount.getColorHexCode();
-            if (accountColor != null){
-                currentColor = Color.parseColor(accountColor);
-            }
+            currentColor = Color.parseColor(mAccount.getColorHexCode());
         }
 
         ColorPickerDialog colorPickerDialogFragment = ColorPickerDialog.newInstance(
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
index 0cd2f3dd..21118404 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
@@ -229,9 +229,7 @@ private BarData getData() {
                         if (!accountToColorMap.containsKey(account.getUID())) {
                             Integer color;
                             if (mUseAccountColor) {
-                                color = (account.getColorHexCode() != null)
-                                        ? Color.parseColor(account.getColorHexCode())
-                                        : COLORS[accountToColorMap.size() % COLORS.length];
+                                color = Color.parseColor(account.getColorHexCode());
                             } else {
                                 color = COLORS[accountToColorMap.size() % COLORS.length];
                             }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
index f4b4ea5e..1c182d7e 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
@@ -199,7 +199,7 @@ private PieData getData() {
                         mReportStartTime, mReportEndTime).asDouble();
                 if (balance > 0) {
                     dataSet.addEntry(new Entry((float) balance, dataSet.getEntryCount()));
-                    colors.add(mUseAccountColor && account.getColorHexCode() != null
+                    colors.add(mUseAccountColor
                             ? Color.parseColor(account.getColorHexCode())
                             : ReportsActivity.COLORS[(dataSet.getEntryCount() - 1) % ReportsActivity.COLORS.length]);
                     labels.add(account.getName());
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
index 88d2257a..815cd013 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
@@ -200,9 +200,7 @@ private PieData getData() {
                         Collections.singletonList(account.getUID()), start, end).asDouble();
                 if (balance > 0) {
                     dataSet.addEntry(new Entry((float) balance, dataSet.getEntryCount()));
-                    colors.add(account.getColorHexCode() != null
-                            ? Color.parseColor(account.getColorHexCode())
-                            : ReportsActivity.COLORS[(dataSet.getEntryCount() - 1) % ReportsActivity.COLORS.length]);
+                    colors.add(Color.parseColor(account.getColorHexCode()));
                     labels.add(account.getName());
                 }
             }
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
index 182854f0..359af536 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
@@ -105,8 +105,9 @@ public void settingCurrencyCode_shouldNotSetCommodity(){
 	}
 
 	@Test
-	public void newInstance_shouldHaveNonNullDescription() {
+	public void newInstance_shouldReturnNonNullValues() {
 		Account account = new Account("Test account");
 		assertThat(account.getDescription()).isEqualTo("");
+		assertThat(account.getColorHexCode()).isEqualTo(Account.DEFAULT_COLOR);
 	}
 }

From 17d64d5e9ec8f20bb5681aad1dae68462d1715cd Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sat, 2 Apr 2016 14:11:41 +0200
Subject: [PATCH 03/15] Store account color as an int.

All uses of Account.getColorHexCode() were being converted to an int
with Color.parseColor().
---
 .../org/gnucash/android/db/AccountsDbAdapter.java  | 12 +++++---
 .../gnucash/android/importer/GncXmlHandler.java    |  2 +-
 .../java/org/gnucash/android/model/Account.java    | 36 ++++++++++++++--------
 .../android/ui/account/AccountFormFragment.java    | 10 +++---
 .../android/ui/report/BarChartFragment.java        |  2 +-
 .../android/ui/report/PieChartFragment.java        |  2 +-
 .../android/ui/report/ReportSummaryFragment.java   |  3 +-
 .../android/test/unit/model/AccountTest.java       | 12 ++++++--
 8 files changed, 50 insertions(+), 29 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index a7fcd39e..d867ee2e 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -176,8 +176,8 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Account account
         mReplaceStatement.bindString(3, account.getDescription());
         mReplaceStatement.bindString(4, account.getAccountType().name());
         mReplaceStatement.bindString(5, account.getCurrency().getCurrencyCode());
-        if (account.getColorHexCode() != Account.DEFAULT_COLOR) {
-            mReplaceStatement.bindString(6, account.getColorHexCode());
+        if (account.getColor() != Account.DEFAULT_COLOR) {
+            mReplaceStatement.bindString(6, convertToRGBHexString(account.getColor()));
         }
         mReplaceStatement.bindLong(7, account.isFavorite() ? 1 : 0);
         mReplaceStatement.bindString(8, account.getFullName());
@@ -205,6 +205,10 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Account account
         return mReplaceStatement;
     }
 
+    private String convertToRGBHexString(int color) {
+        return String.format("#%06X", (0xFFFFFF & color));
+    }
+
     /**
      * Marks all transactions for a given account as exported
      * @param accountUID Unique ID of the record to be marked as exported
@@ -416,7 +420,7 @@ private Account buildSimpleAccountInstance(Cursor c) {
         account.setDefaultTransferAccountUID(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID)));
         String color = c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_COLOR_CODE));
         if (color != null)
-            account.setColorCode(color);
+            account.setColor(color);
         account.setFavorite(c.getInt(c.getColumnIndexOrThrow(AccountEntry.COLUMN_FAVORITE)) == 1);
         account.setFullName(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_FULL_NAME)));
         account.setHidden(c.getInt(c.getColumnIndexOrThrow(AccountEntry.COLUMN_HIDDEN)) == 1);
@@ -563,7 +567,7 @@ public String getOrCreateImbalanceAccountUID(Currency currency){
             account.setAccountType(AccountType.BANK);
             account.setParentUID(getOrCreateGnuCashRootAccountUID());
             account.setHidden(!GnuCashApplication.isDoubleEntryEnabled());
-            account.setColorCode("#964B00");
+            account.setColor("#964B00");
             addRecord(account);
             uid = account.getUID();
         }
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index b4ac1235..c6872f93 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -467,7 +467,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                             color = "#" + color.replaceAll(".(.)?", "$1").replace("null", "");
                         try {
                             if (mAccount != null)
-                                mAccount.setColorCode(color);
+                                mAccount.setColor(color);
                         } catch (IllegalArgumentException ex) {
                             //sometimes the color entry in the account file is "Not set" instead of just blank. So catch!
                             Log.e(LOG_TAG, "Invalid color code '" + color + "' for account " + mAccount.getName());
diff --git a/app/src/main/java/org/gnucash/android/model/Account.java b/app/src/main/java/org/gnucash/android/model/Account.java
index 63e69f0a..0dd879c6 100644
--- a/app/src/main/java/org/gnucash/android/model/Account.java
+++ b/app/src/main/java/org/gnucash/android/model/Account.java
@@ -18,12 +18,9 @@
 
 
 import android.graphics.Color;
-import android.preference.PreferenceManager;
 import android.support.annotation.NonNull;
 
 import org.gnucash.android.BuildConfig;
-import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.export.Exporter;
 import org.gnucash.android.export.ofx.OfxHelper;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
@@ -72,9 +69,10 @@
     public static final String COLOR_HEX_REGEX = "^#(?:[0-9a-fA-F]{3}){1,2}$";
 
 	/**
-	 * Default color, if not set explicitly through {@link #setColorCode(String)}.
+	 * Default color, if not set explicitly through {@link #setColor(String)}.
 	 */
-	public static final String DEFAULT_COLOR = "#cccccc"; // Color.LT_GRAY
+	// TODO: get it from a theme value?
+	public static final int DEFAULT_COLOR = Color.LTGRAY;
 
 	/**
      * Accounts types which are used by the OFX standard
@@ -139,7 +137,7 @@
     /**
      * Account color field in hex format #rrggbb
      */
-    private String mColorCode = DEFAULT_COLOR;
+    private int mColor = DEFAULT_COLOR;
 
     /**
      * Flag which marks this account as a favorite account
@@ -300,23 +298,35 @@ public Money getBalance(){
 	}
 
     /**
-     * Returns the color code of the account in the format #rrggbb
-     * @return Color code of the account
+     * Returns the color of the account.
+     * @return Color of the account as an int as returned by {@link Color}.
      */
-    public String getColorHexCode() {
-        return mColorCode;
+    public int getColor() {
+        return mColor;
     }
 
+	/**
+	 * Sets the color of the account.
+	 * @param color Color as an int as returned by {@link Color}.
+	 * @throws java.lang.IllegalArgumentException if the color is transparent,
+	 *   which is not supported.
+	 */
+	public void setColor(int color) {
+		if (Color.alpha(color) < 255)
+			throw new IllegalArgumentException("Transparent colors are not supported: " + color);
+		mColor = color;
+	}
+
     /**
-     * Sets the color code of the account.
+     * Sets the color of the account.
      * @param colorCode Color code to be set in the format #rrggbb or #rgb
      * @throws java.lang.IllegalArgumentException if the color code is not properly formatted
      */
-    public void setColorCode(@NonNull String colorCode) {
+    public void setColor(@NonNull String colorCode) {
         if (!Pattern.matches(COLOR_HEX_REGEX, colorCode))
             throw new IllegalArgumentException("Invalid color hex code: " + colorCode);
 
-        this.mColorCode = colorCode;
+        setColor(Color.parseColor(colorCode));
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 0a29dbd5..a29b9081 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -203,7 +203,7 @@
      */
     private boolean mUseDoubleEntry;
 
-    private String mSelectedColor = Account.DEFAULT_COLOR;
+    private int mSelectedColor = Account.DEFAULT_COLOR;
 
     /**
      * Trigger for color picker dialog
@@ -214,7 +214,7 @@
         @Override
         public void onColorSelected(int color) {
             mColorSquare.setBackgroundColor(color);
-            mSelectedColor = String.format("#%06X", (0xFFFFFF & color));
+            mSelectedColor = color;
         }
     };
 
@@ -414,7 +414,7 @@ private void initializeViewsWithAccount(Account account){
         }
 
         mPlaceholderCheckBox.setChecked(account.isPlaceholderAccount());
-        mColorSquare.setBackgroundColor(Color.parseColor(account.getColorHexCode()));
+        mColorSquare.setBackgroundColor(account.getColor());
 
         setAccountTypeSelection(account.getAccountType());
     }
@@ -535,7 +535,7 @@ private void showColorPickerDialog(){
         FragmentManager fragmentManager = getActivity().getSupportFragmentManager();
         int currentColor = Color.LTGRAY;
         if (mAccount != null){
-            currentColor = Color.parseColor(mAccount.getColorHexCode());
+            currentColor = mAccount.getColor();
         }
 
         ColorPickerDialog colorPickerDialogFragment = ColorPickerDialog.newInstance(
@@ -757,7 +757,7 @@ private void saveAccount() {
 
         mAccount.setDescription(mDescriptionEditText.getText().toString());
         mAccount.setPlaceHolderFlag(mPlaceholderCheckBox.isChecked());
-        mAccount.setColorCode(mSelectedColor);
+        mAccount.setColor(mSelectedColor);
 
         long newParentAccountId;
         String newParentAccountUID;
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
index 21118404..3aa0502c 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
@@ -229,7 +229,7 @@ private BarData getData() {
                         if (!accountToColorMap.containsKey(account.getUID())) {
                             Integer color;
                             if (mUseAccountColor) {
-                                color = Color.parseColor(account.getColorHexCode());
+                                color = account.getColor();
                             } else {
                                 color = COLORS[accountToColorMap.size() % COLORS.length];
                             }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
index 1c182d7e..ac1080cf 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
@@ -200,7 +200,7 @@ private PieData getData() {
                 if (balance > 0) {
                     dataSet.addEntry(new Entry((float) balance, dataSet.getEntryCount()));
                     colors.add(mUseAccountColor
-                            ? Color.parseColor(account.getColorHexCode())
+                            ? account.getColor()
                             : ReportsActivity.COLORS[(dataSet.getEntryCount() - 1) % ReportsActivity.COLORS.length]);
                     labels.add(account.getName());
                 }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
index 815cd013..a84c02ac 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
@@ -16,7 +16,6 @@
 package org.gnucash.android.ui.report;
 
 import android.content.res.ColorStateList;
-import android.graphics.Color;
 import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
@@ -200,7 +199,7 @@ private PieData getData() {
                         Collections.singletonList(account.getUID()), start, end).asDouble();
                 if (balance > 0) {
                     dataSet.addEntry(new Entry((float) balance, dataSet.getEntryCount()));
-                    colors.add(Color.parseColor(account.getColorHexCode()));
+                    colors.add(account.getColor());
                     labels.add(account.getName());
                 }
             }
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
index 359af536..a172e361 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
@@ -15,6 +15,8 @@
  */
 package org.gnucash.android.test.unit.model;
 
+import android.graphics.Color;
+
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Commodity;
@@ -66,7 +68,13 @@ public void testTransactionsHaveSameCurrencyAsAccount(){
 	@Test(expected = IllegalArgumentException.class)
 	public void testSetInvalidColorCode(){
 		Account account = new Account("Test");
-		account.setColorCode("443859");
+		account.setColor("443859");
+	}
+
+	@Test(expected = IllegalArgumentException.class)
+	public void testSetColorWithAlphaComponent(){
+		Account account = new Account("Test");
+		account.setColor(Color.parseColor("#aa112233"));
 	}
 
 	@Test
@@ -108,6 +116,6 @@ public void settingCurrencyCode_shouldNotSetCommodity(){
 	public void newInstance_shouldReturnNonNullValues() {
 		Account account = new Account("Test account");
 		assertThat(account.getDescription()).isEqualTo("");
-		assertThat(account.getColorHexCode()).isEqualTo(Account.DEFAULT_COLOR);
+		assertThat(account.getColor()).isEqualTo(Account.DEFAULT_COLOR);
 	}
 }

From ae357246e929409bde48a2837e5552d4c3428cd9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sun, 3 Apr 2016 21:33:20 +0200
Subject: [PATCH 04/15] Remove support for #rgb format when setting the account
 color.

It's never used. #rrggbb is used instead.
---
 .../gnucash/android/importer/GncXmlHandler.java    | 20 +++++++++-
 .../java/org/gnucash/android/model/Account.java    | 44 ++++++----------------
 2 files changed, 31 insertions(+), 33 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index c6872f93..3a03b737 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -75,6 +75,24 @@
      */
     private static final String LOG_TAG = "GnuCashAccountImporter";
 
+    /*
+        ^             anchor for start of string
+        #             the literal #
+        (             start of group
+        ?:            indicate a non-capturing group that doesn't generate back-references
+        [0-9a-fA-F]   hexadecimal digit
+        {3}           three times
+        )             end of group
+        {2}           repeat twice
+        $             anchor for end of string
+     */
+    /**
+     * Regular expression for validating color code strings.
+     * Accepts #rgb and #rrggbb
+     */
+    //TODO: Allow use of #aarrggbb format as well
+    public static final String ACCOUNT_COLOR_HEX_REGEX = "^#(?:[0-9a-fA-F]{3}){2}$";
+
     /**
      * Adapter for saving the imported accounts
      */
@@ -463,7 +481,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     //so we trim the last digit in each block, doesn't affect the color much
                     if (!color.equals("Not Set")) {
                         // avoid known exception, printStackTrace is very time consuming
-                        if (!Pattern.matches(Account.COLOR_HEX_REGEX, color))
+                        if (!Pattern.matches(ACCOUNT_COLOR_HEX_REGEX, color))
                             color = "#" + color.replaceAll(".(.)?", "$1").replace("null", "");
                         try {
                             if (mAccount != null)
diff --git a/app/src/main/java/org/gnucash/android/model/Account.java b/app/src/main/java/org/gnucash/android/model/Account.java
index 0dd879c6..e89c9d47 100644
--- a/app/src/main/java/org/gnucash/android/model/Account.java
+++ b/app/src/main/java/org/gnucash/android/model/Account.java
@@ -29,7 +29,6 @@
 import java.util.ArrayList;
 import java.util.Currency;
 import java.util.List;
-import java.util.regex.Pattern;
 
 /**
  * An account represents a transaction account in with {@link Transaction}s may be recorded
@@ -50,24 +49,6 @@
 	 */
 	public static final String MIME_TYPE = "vnd.android.cursor.item/vnd." + BuildConfig.APPLICATION_ID + ".account";
 
-    /*
-        ^             anchor for start of string
-        #             the literal #
-        (             start of group
-        ?:            indicate a non-capturing group that doesn't generate back-references
-        [0-9a-fA-F]   hexadecimal digit
-        {3}           three times
-        )             end of group
-        {1,2}         repeat either once or twice
-        $             anchor for end of string
-     */
-    /**
-     * Regular expression for validating color code strings.
-     * Accepts #rgb and #rrggbb
-     */
-    //TODO: Allow use of #aarrggbb format as well
-    public static final String COLOR_HEX_REGEX = "^#(?:[0-9a-fA-F]{3}){1,2}$";
-
 	/**
 	 * Default color, if not set explicitly through {@link #setColor(String)}.
 	 */
@@ -111,7 +92,7 @@
 	 * Defaults to {@link AccountType#CASH}
 	 */
 	private AccountType mAccountType = AccountType.CASH;
-	
+
 	/**
 	 * List of transactions in this account
 	 */
@@ -153,13 +134,13 @@
 	 * An extra key for passing the currency code (according ISO 4217) in an intent
 	 */
 	public static final String EXTRA_CURRENCY_CODE 	= "org.gnucash.android.extra.currency_code";
-	
+
 	/**
-	 * Extra key for passing the unique ID of the parent account when creating a 
+	 * Extra key for passing the unique ID of the parent account when creating a
 	 * new account using Intents
 	 */
 	public static final String EXTRA_PARENT_UID 	= "org.gnucash.android.extra.parent_uid";
-	
+
 	/**
 	 * Constructor
 	 * Creates a new account with the default currency and a generated unique ID
@@ -170,7 +151,7 @@ public Account(String name) {
         this.mFullName  = mName;
 		setCommodity(Commodity.DEFAULT_COMMODITY);
 	}
-	
+
 	/**
 	 * Overloaded constructor
 	 * @param name Name of the account
@@ -256,11 +237,11 @@ public void addTransaction(Transaction transaction){
 		transaction.setCommodity(mCommodity);
 		mTransactionsList.add(transaction);
 	}
-	
+
 	/**
 	 * Sets a list of transactions for this account.
 	 * Overrides any previous transactions with those in the list.
-	 * The account UID and currency of the transactions will be set to the unique ID 
+	 * The account UID and currency of the transactions will be set to the unique ID
 	 * and currency of the account respectively
 	 * @param transactionsList List of {@link Transaction}s to be set.
 	 */
@@ -275,7 +256,7 @@ public void setTransactions(List<Transaction> transactionsList){
 	public List<Transaction> getTransactions(){
 		return mTransactionsList;
 	}
-	
+
 	/**
 	 * Returns the number of transactions in this account
 	 * @return Number transactions in account
@@ -319,13 +300,12 @@ public void setColor(int color) {
 
     /**
      * Sets the color of the account.
-     * @param colorCode Color code to be set in the format #rrggbb or #rgb
-     * @throws java.lang.IllegalArgumentException if the color code is not properly formatted
+     * @param colorCode Color code to be set in the format #rrggbb
+     * @throws java.lang.IllegalArgumentException if the color code is not properly formatted or
+	 *   the color is transparent.
      */
+	//TODO: Allow use of #aarrggbb format as well
     public void setColor(@NonNull String colorCode) {
-        if (!Pattern.matches(COLOR_HEX_REGEX, colorCode))
-            throw new IllegalArgumentException("Invalid color hex code: " + colorCode);
-
         setColor(Color.parseColor(colorCode));
     }
 

From 5a9ee0418b7d59778fa9a6b9aa1651c40b9dec54 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 4 Apr 2016 18:52:32 +0200
Subject: [PATCH 05/15] Fix the javadoc of some methods refering to Account's
 fields.

---
 app/src/main/java/org/gnucash/android/model/Account.java | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/model/Account.java b/app/src/main/java/org/gnucash/android/model/Account.java
index e89c9d47..53fa57aa 100644
--- a/app/src/main/java/org/gnucash/android/model/Account.java
+++ b/app/src/main/java/org/gnucash/android/model/Account.java
@@ -197,16 +197,16 @@ public void setFullName(String fullName) {
     }
 
 	/**
-	 * Returns the account mDescription
-	 * @return String with mDescription
+	 * Returns the account description
+	 * @return String with description
 	 */
 	public String getDescription() {
 		return mDescription;
 	}
 
 	/**
-	 * Sets the account mDescription
-	 * @param description String mDescription
+	 * Sets the account description
+	 * @param description Account description
 	 */
 	public void setDescription(@NonNull String description) {
 		this.mDescription = description;
@@ -326,7 +326,7 @@ public void setFavorite(boolean isFavorite) {
     }
 
     /**
-	 * @return the mCurrency
+	 * Returns the currency for this account.
 	 */
 	public Currency getCurrency() {
 		return Currency.getInstance(mCurrencyCode);
@@ -342,7 +342,6 @@ public void setCurrencyCode(String currencyCode){
 
 	/**
 	 * Return the commodity for this account
-	 * @return
 	 */
 	public Commodity getCommodity(){
 		return mCommodity;

From afcac8e5afa5992cd4d041843cf4625188761cf5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 5 Apr 2016 22:53:19 +0200
Subject: [PATCH 06/15] Fix code inspector issues.

---
 .../java/org/gnucash/android/db/AccountsDbAdapter.java  | 10 +++++-----
 .../gnucash/android/ui/account/AccountFormFragment.java | 17 +++++------------
 .../org/gnucash/android/ui/report/PieChartFragment.java |  2 --
 3 files changed, 10 insertions(+), 19 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index d867ee2e..f364e37f 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -601,7 +601,7 @@ public String createAccountHierarchy(String fullName, AccountType accountType) {
         String[] tokens = fullName.trim().split(ACCOUNT_NAME_SEPARATOR);
         String uid = getOrCreateGnuCashRootAccountUID();
         String parentName = "";
-        ArrayList<Account> accountsList = new ArrayList<Account>();
+        ArrayList<Account> accountsList = new ArrayList<>();
         for (String token : tokens) {
             parentName += token;
             String parentUID = findAccountUidByFullName(parentName);
@@ -841,8 +841,8 @@ public Money getAccountsBalance(@NonNull List<String> accountUIDList, long start
     public List<String> getDescendantAccountUIDs(String accountUID, String where, String[] whereArgs) {
         // accountsList will hold accountUID with all descendant accounts.
         // accountsListLevel will hold descendant accounts of the same level
-        ArrayList<String> accountsList = new ArrayList<String>();
-        ArrayList<String> accountsListLevel = new ArrayList<String>();
+        ArrayList<String> accountsList = new ArrayList<>();
+        ArrayList<String> accountsListLevel = new ArrayList<>();
         accountsListLevel.add(accountUID);
         for (;;) {
             Cursor cursor = mDb.query(AccountEntry.TABLE_NAME,
@@ -1105,14 +1105,14 @@ public boolean isFavoriteAccount(String accountUID){
      */
     public List<Transaction> getAllOpeningBalanceTransactions(){
         Cursor cursor = fetchAccounts(null, null, null);
-        List<Transaction> openingTransactions = new ArrayList<Transaction>();
+        List<Transaction> openingTransactions = new ArrayList<>();
         try {
             SplitsDbAdapter splitsDbAdapter = mTransactionsAdapter.getSplitDbAdapter();
             while (cursor.moveToNext()) {
                 long id = cursor.getLong(cursor.getColumnIndexOrThrow(AccountEntry._ID));
                 String accountUID = getUID(id);
                 String currencyCode = getCurrencyCode(accountUID);
-                ArrayList<String> accountList = new ArrayList<String>();
+                ArrayList<String> accountList = new ArrayList<>();
                 accountList.add(accountUID);
                 Money balance = splitsDbAdapter.computeSplitBalance(accountList,
                         currencyCode, getAccountType(accountUID).hasDebitNormalBalance());
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index a29b9081..a6aa1125 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -106,12 +106,6 @@
 	 */
 	private AccountsDbAdapter mAccountsDbAdapter;
 
-	
-	/**
-	 * List of all currency codes (ISO 4217) supported by the app
-	 */
-	private List<String> mCurrencyCodes;
-
     /**
      * GUID of the parent account
      * This value is set to the parent account of the transaction being edited or
@@ -400,10 +394,9 @@ private void initializeViewsWithAccount(Account account){
                 setDefaultTransferAccountSelection(doubleDefaultAccountId, true);
             } else {
                 String currentAccountUID = account.getParentUID();
-                long defaultTransferAccountID = 0;
                 String rootAccountUID = mAccountsDbAdapter.getOrCreateGnuCashRootAccountUID();
                 while (!currentAccountUID.equals(rootAccountUID)) {
-                    defaultTransferAccountID = mAccountsDbAdapter.getDefaultTransferAccountID(mAccountsDbAdapter.getID(currentAccountUID));
+                    long defaultTransferAccountID = mAccountsDbAdapter.getDefaultTransferAccountID(mAccountsDbAdapter.getID(currentAccountUID));
                     if (defaultTransferAccountID > 0) {
                         setDefaultTransferAccountSelection(defaultTransferAccountID, false);
                         break; //we found a parent with default transfer setting
@@ -523,7 +516,7 @@ private void setDefaultTransferAccountSelection(long defaultTransferAccountId, b
         TypedArray colorTypedArray = res.obtainTypedArray(R.array.account_colors);
         int[] colorOptions = new int[colorTypedArray.length()];
         for (int i = 0; i < colorTypedArray.length(); i++) {
-             int color = colorTypedArray.getColor(i, R.color.title_green);
+             int color = colorTypedArray.getColor(i, getResources().getColor(R.color.title_green));
              colorOptions[i] = color;
         }
         return colorOptions;
@@ -678,7 +671,7 @@ private String getAllowedParentAccountTypes(AccountType type) {
      */
     private List<String> getAccountTypeStringList(){
         String[] accountTypes = Arrays.toString(AccountType.values()).replaceAll("\\[|]", "").split(",");
-        List<String> accountTypesList = new ArrayList<String>();
+        List<String> accountTypesList = new ArrayList<>();
         for (String accountType : accountTypes) {
             accountTypesList.add(accountType.trim());
         }
@@ -690,7 +683,7 @@ private String getAllowedParentAccountTypes(AccountType type) {
      */
     private void loadAccountTypesList(){
         String[] accountTypes = getResources().getStringArray(R.array.account_type_entry_values);
-        ArrayAdapter<String> accountTypesAdapter = new ArrayAdapter<String>(
+        ArrayAdapter<String> accountTypesAdapter = new ArrayAdapter<>(
                 getActivity(), android.R.layout.simple_list_item_1, accountTypes);
 
         accountTypesAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
@@ -805,7 +798,7 @@ private void saveAccount() {
                             null
                     ));
                 }
-                HashMap<String, Account> mapAccount = new HashMap<String, Account>();
+                HashMap<String, Account> mapAccount = new HashMap<>();
                 for (Account acct : accountsToUpdate) mapAccount.put(acct.getUID(), acct);
                 for (String uid: mDescendantAccountUIDs) {
                     // mAccountsDbAdapter.getDescendantAccountUIDs() will ensure a parent-child order
diff --git a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
index ac1080cf..f4e7692a 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
@@ -85,7 +85,6 @@
     @Bind(R.id.selected_chart_slice) TextView mSelectedValueTextView;
 
     private AccountsDbAdapter mAccountsDbAdapter;
-    private TransactionsDbAdapter mTransactionsDbAdapter;
 
     private AccountType mAccountType;
 
@@ -127,7 +126,6 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
                 .getBoolean(getString(R.string.key_use_account_color), false);
 
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
-        mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 
         mCurrencyCode = GnuCashApplication.getDefaultCurrencyCode();
 

From 66cc5332e67e04cb6ce00c558237ea32a77bc627 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Thu, 10 Mar 2016 19:07:02 +0100
Subject: [PATCH 07/15] Avoid losing precision when the user enters an exchange
 rate.

We were storing the rate as originAmount/convertedAmount, which was
limited to the precision of the currencies. Now we store directly the
entered rate.

Fixes https://github.com/codinguser/gnucash-android/issues/479
---
 .../main/java/org/gnucash/android/model/Price.java | 33 +++++++++++++
 .../dialog/TransferFundsDialogFragment.java        | 45 ++++++++++--------
 .../gnucash/android/test/unit/model/PriceTest.java | 54 ++++++++++++++++++++++
 3 files changed, 114 insertions(+), 18 deletions(-)
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/model/PriceTest.java

diff --git a/app/src/main/java/org/gnucash/android/model/Price.java b/app/src/main/java/org/gnucash/android/model/Price.java
index 79c572f1..7ecdd101 100644
--- a/app/src/main/java/org/gnucash/android/model/Price.java
+++ b/app/src/main/java/org/gnucash/android/model/Price.java
@@ -2,7 +2,11 @@
 
 import org.gnucash.android.util.TimestampHelper;
 
+
+import java.math.BigDecimal;
 import java.sql.Timestamp;
+import java.text.DecimalFormat;
+import java.text.NumberFormat;
 
 /**
  * Model for commodity prices
@@ -37,6 +41,19 @@ public Price(String commodityUID, String currencyUID){
         mDate = TimestampHelper.getTimestampFromNow();
     }
 
+    /**
+     * Create new instance with the GUIDs of the commodities and the specified exchange rate.
+     * @param commodity1UID GUID of the origin commodity
+     * @param commodity2UID GUID of the target commodity
+     * @param exchangeRate exchange rate between the commodities
+     */
+    public Price(String commodity1UID, String commodity2UID, BigDecimal exchangeRate) {
+        this(commodity1UID, commodity2UID);
+        // Store 0.1234 as 1234/10000
+        setValueNum(exchangeRate.unscaledValue().longValue());
+        setValueDenom(BigDecimal.ONE.scaleByPowerOfTen(exchangeRate.scale()).longValue());
+    }
+
     public String getCommodityUID() {
         return mCommodityUID;
     }
@@ -123,4 +140,20 @@ public void reduce() {
             mValueDenom /= commonDivisor;
         }
     }
+
+    /**
+     * Returns the exchange rate as a string formatted with the default locale.
+     *
+     * <p>It will have up to 6 decimal places.
+     *
+     * <p>Example: "0.123456"
+     */
+    @Override
+    public String toString() {
+        BigDecimal numerator = new BigDecimal(mValueNum);
+        BigDecimal denominator = new BigDecimal(mValueDenom);
+        DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
+        formatter.setMaximumFractionDigits(6);
+        return formatter.format(numerator.divide(denominator));
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 2fccd546..3ab8291f 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -116,17 +116,21 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         Commodity currencyCommodity = commoditiesDbAdapter.getCommodity(mTargetCurrency.getCurrencyCode());
         String currencyUID = currencyCommodity.getUID();
         PricesDbAdapter pricesDbAdapter = PricesDbAdapter.getInstance();
-        Pair<Long, Long> price = pricesDbAdapter.getPrice(commodityUID, currencyUID);
+        Pair<Long, Long> pricePair = pricesDbAdapter.getPrice(commodityUID, currencyUID);
 
-        if (price.first > 0 && price.second > 0) {
+        if (pricePair.first > 0 && pricePair.second > 0) {
             // a valid price exists
-            BigDecimal numerator = new BigDecimal(price.first);
-            BigDecimal denominator = new BigDecimal(price.second);
-            DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
-            mExchangeRateInput.setText(formatter.format(numerator.divide(denominator, MathContext.DECIMAL32)));
+            Price price = new Price(commodityUID, currencyUID);
+            price.setValueNum(pricePair.first);
+            price.setValueDenom(pricePair.second);
+            mExchangeRateInput.setText(price.toString());
+
+            BigDecimal numerator = new BigDecimal(pricePair.first);
+            BigDecimal denominator = new BigDecimal(pricePair.second);
             // convertedAmount = mOriginAmount * numerator / denominator
             BigDecimal convertedAmount = mOriginAmount.asBigDecimal().multiply(numerator)
                 .divide(denominator, currencyCommodity.getSmallestFractionDigits(), BigDecimal.ROUND_HALF_EVEN);
+            DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
             mConvertedAmountInput.setText(formatter.format(convertedAmount));
         }
 
@@ -194,17 +198,24 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
      * Converts the currency amount with the given exchange rate and saves the price to the db
      */
     private void transferFunds() {
+        Price price = null;
+
+        CommoditiesDbAdapter commoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
+        String originCommodityUID = commoditiesDbAdapter.getCommodityUID(mOriginAmount.getCurrency().getCurrencyCode());
+        String targetCommodityUID = commoditiesDbAdapter.getCommodityUID(mTargetCurrency.getCurrencyCode());
+
         if (mExchangeRateRadioButton.isChecked()){
+            BigDecimal rate;
             String exchangeRateString = mExchangeRateInput.getText().toString();
             DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
             formatter.setParseBigDecimal(true);
-            BigDecimal rate;
             try {
                 rate = (BigDecimal) formatter.parse(exchangeRateString);
             } catch (ParseException e) {
                 mExchangeRateInputLayout.setError(getString(R.string.error_invalid_exchange_rate));
                 return;
             }
+            price = new Price(originCommodityUID, targetCommodityUID, rate);
             mConvertedAmount = mOriginAmount.multiply(rate);
         }
 
@@ -217,22 +228,20 @@ private void transferFunds() {
 
             BigDecimal amount = TransactionFormFragment.parseInputToDecimal(convertedAmount);
             mConvertedAmount = new Money(amount, Commodity.getInstance(mTargetCurrency.getCurrencyCode()));
-        }
 
-        if (mOnTransferFundsListener != null) {
-            PricesDbAdapter pricesDbAdapter = PricesDbAdapter.getInstance();
-            CommoditiesDbAdapter commoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
-            Price price = new Price(commoditiesDbAdapter.getCommodityUID(mOriginAmount.getCurrency().getCurrencyCode()),
-                    commoditiesDbAdapter.getCommodityUID(mTargetCurrency.getCurrencyCode()));
-            price.setSource(Price.SOURCE_USER);
-            // fractions cannot be exacted represented by BigDecimal.
+            price = new Price(originCommodityUID, targetCommodityUID);
+            // fractions cannot be exactly represented by BigDecimal.
             price.setValueNum(mConvertedAmount.getNumerator() * mOriginAmount.getDenominator());
             price.setValueDenom(mOriginAmount.getNumerator() * mConvertedAmount.getDenominator());
-            price.reduce();
-            pricesDbAdapter.addRecord(price);
+        }
 
+        price.setSource(Price.SOURCE_USER);
+        price.reduce();
+        PricesDbAdapter.getInstance().addRecord(price);
+
+        if (mOnTransferFundsListener != null)
             mOnTransferFundsListener.transferComplete(mConvertedAmount);
-        }
+
         dismiss();
     }
 
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/PriceTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/PriceTest.java
new file mode 100644
index 00000000..8df91036
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/PriceTest.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright (c) 2016 lex Magaz Graa <rivaldi8@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.test.unit.model;
+
+import org.gnucash.android.model.Price;
+import org.junit.Test;
+
+import java.math.BigDecimal;
+import java.util.Locale;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+
+public class PriceTest {
+    @Test
+    public void creatingFromExchangeRate_ShouldGetPrecisionRight() {
+        Locale.setDefault(Locale.US);
+
+        String exchangeRateString = "0.123456";
+        BigDecimal exchangeRate = new BigDecimal(exchangeRateString);
+        Price price = new Price("commodity1UID", "commodity2UID", exchangeRate);
+        assertThat(price.toString()).isEqualTo(exchangeRateString);
+
+        // ensure we don't get more decimal places than needed (0.123000)
+        exchangeRateString = "0.123";
+        exchangeRate = new BigDecimal(exchangeRateString);
+        price = new Price("commodity1UID", "commodity2UID", exchangeRate);
+        assertThat(price.toString()).isEqualTo(exchangeRateString);
+    }
+
+    @Test
+    public void toString_shouldUseDefaultLocale() {
+        Locale.setDefault(Locale.GERMANY);
+
+        String exchangeRateString = "1.234";
+        BigDecimal exchangeRate = new BigDecimal(exchangeRateString);
+        Price price = new Price("commodity1UID", "commodity2UID", exchangeRate);
+        assertThat(price.toString()).isEqualTo("1,234");
+    }
+}

From 876bf34fac4930548100e374835802b67d9c0790 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 21 Mar 2016 20:15:53 +0100
Subject: [PATCH 08/15] Avoid test in AccountsDbAdapterTest depending on the
 default locale.

importingXml_shouldSetDefaultCurrency() broke after setting the default
locale in Price.toString_shouldUseDefaultLocale() in the previous commit.
---
 .../org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java   | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
index 06a8d021..c9fdb0f6 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
@@ -413,6 +413,9 @@ public void shouldSetDefaultTransferColumnToNull_WhenTheAccountIsDeleted(){
      */
     @Test
     public void importingXml_shouldSetDefaultCurrency(){
+        String expectedCode = GnuCashApplication.getDefaultCurrencyCode();
+        Commodity expectedDefaultCommodity = CommoditiesDbAdapter.getInstance().getCommodity(expectedCode);
+
         GnuCashApplication.setDefaultCurrencyCode("JPY");
 
         assertThat(GnuCashApplication.getDefaultCurrencyCode()).isEqualTo("JPY");
@@ -422,11 +425,6 @@ public void importingXml_shouldSetDefaultCurrency(){
         loadDefaultAccounts();
 
         assertThat(GnuCashApplication.getDefaultCurrencyCode()).isNotEqualTo("JPY");
-
-        Currency currency = Currency.getInstance(GnuCashApplication.getDefaultLocale());
-        String expectedCode = currency.getCurrencyCode();
-        Commodity expectedDefaultCommodity = CommoditiesDbAdapter.getInstance().getCommodity(expectedCode);
-
         assertThat(GnuCashApplication.getDefaultCurrencyCode()).isEqualTo(expectedCode);
         assertThat(Commodity.DEFAULT_COMMODITY).isEqualTo(expectedDefaultCommodity);
 

From 45fafb5870b0919a895c24104cc544c97f93c423 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 21 Mar 2016 19:18:37 +0100
Subject: [PATCH 09/15] Automatically reduce fraction in Price when getting its
 elements.

---
 .../main/java/org/gnucash/android/model/Price.java |  4 +++-
 .../dialog/TransferFundsDialogFragment.java        |  1 -
 .../gnucash/android/test/unit/model/PriceTest.java | 22 ++++++++++++++++++++++
 3 files changed, 25 insertions(+), 2 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/model/Price.java b/app/src/main/java/org/gnucash/android/model/Price.java
index 7ecdd101..df02d380 100644
--- a/app/src/main/java/org/gnucash/android/model/Price.java
+++ b/app/src/main/java/org/gnucash/android/model/Price.java
@@ -95,6 +95,7 @@ public void setType(String type) {
     }
 
     public long getValueNum() {
+        reduce();
         return mValueNum;
     }
 
@@ -103,6 +104,7 @@ public void setValueNum(long valueNum) {
     }
 
     public long getValueDenom() {
+        reduce();
         return mValueDenom;
     }
 
@@ -110,7 +112,7 @@ public void setValueDenom(long valueDenom) {
         this.mValueDenom = valueDenom;
     }
 
-    public void reduce() {
+    private void reduce() {
         if (mValueDenom < 0) {
             mValueDenom = -mValueDenom;
             mValueNum = -mValueNum;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 3ab8291f..73dcc89b 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -236,7 +236,6 @@ private void transferFunds() {
         }
 
         price.setSource(Price.SOURCE_USER);
-        price.reduce();
         PricesDbAdapter.getInstance().addRecord(price);
 
         if (mOnTransferFundsListener != null)
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/PriceTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/PriceTest.java
index 8df91036..b9abc63e 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/PriceTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/PriceTest.java
@@ -51,4 +51,26 @@ public void toString_shouldUseDefaultLocale() {
         Price price = new Price("commodity1UID", "commodity2UID", exchangeRate);
         assertThat(price.toString()).isEqualTo("1,234");
     }
+
+    @Test
+    public void getNumerator_shouldReduceAutomatically() {
+        long numerator = 1;
+        long denominator = 3;
+        Price price = new Price();
+
+        price.setValueNum(numerator * 2);
+        price.setValueDenom(denominator * 2);
+        assertThat(price.getValueNum()).isEqualTo(numerator);
+    }
+
+    @Test
+    public void getDenominator_shouldReduceAutomatically() {
+        long numerator = 1;
+        long denominator = 3;
+        Price price = new Price();
+
+        price.setValueNum(numerator * 2);
+        price.setValueDenom(denominator * 2);
+        assertThat(price.getValueDenom()).isEqualTo(denominator);
+    }
 }

From e8e6ed393e70de93ef8a764dec23d50194f0d169 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 21 Mar 2016 13:02:19 +0100
Subject: [PATCH 10/15] Set the correct currency for the converted amount when
 derived from the exchange rate.

---
 .../android/ui/transaction/dialog/TransferFundsDialogFragment.java    | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 73dcc89b..11c271d8 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -216,7 +216,9 @@ private void transferFunds() {
                 return;
             }
             price = new Price(originCommodityUID, targetCommodityUID, rate);
-            mConvertedAmount = mOriginAmount.multiply(rate);
+
+            Commodity targetCommodity = Commodity.getInstance(mTargetCurrency.getCurrencyCode());
+            mConvertedAmount = mOriginAmount.multiply(rate).withCurrency(targetCommodity);
         }
 
         if (mConvertedAmountRadioButton.isChecked()){

From 07756f31487c30921499273984b2ff5ea9dea9e0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 21 Mar 2016 13:06:31 +0100
Subject: [PATCH 11/15] Simplify the use of some variables.

In both cases all uses called .getCurrencyCode().
---
 .../dialog/TransferFundsDialogFragment.java        | 27 +++++++++++-----------
 1 file changed, 13 insertions(+), 14 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 11c271d8..b74efd8f 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -46,7 +46,6 @@
 import org.gnucash.android.ui.util.OnTransferFundsListener;
 
 import java.math.BigDecimal;
-import java.math.MathContext;
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
 import java.text.ParseException;
@@ -80,7 +79,7 @@
     @Bind(R.id.btn_save) Button mSaveButton;
     @Bind(R.id.btn_cancel) Button mCancelButton;
     Money mOriginAmount;
-    Currency mTargetCurrency;
+    String mTargetCurrencyCode;
 
     Money mConvertedAmount;
     OnTransferFundsListener mOnTransferFundsListener;
@@ -89,7 +88,7 @@ public static TransferFundsDialogFragment getInstance(Money transactionAmount, S
                                                           OnTransferFundsListener transferFundsListener){
         TransferFundsDialogFragment fragment = new TransferFundsDialogFragment();
         fragment.mOriginAmount = transactionAmount;
-        fragment.mTargetCurrency = Currency.getInstance(targetCurrencyCode);
+        fragment.mTargetCurrencyCode = Currency.getInstance(targetCurrencyCode).getCurrencyCode();
         fragment.mOnTransferFundsListener = transferFundsListener;
         return fragment;
     }
@@ -101,19 +100,19 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         ButterKnife.bind(this, view);
 
         TransactionsActivity.displayBalance(mStartAmountLabel, mOriginAmount);
-        Currency fromCurrency = mOriginAmount.getCurrency();
-        mFromCurrencyLabel.setText(fromCurrency.getCurrencyCode());
-        mToCurrencyLabel.setText(mTargetCurrency.getCurrencyCode());
-        mConvertedAmountCurrencyLabel.setText(mTargetCurrency.getCurrencyCode());
+        String fromCurrencyCode = mOriginAmount.getCurrency().getCurrencyCode();
+        mFromCurrencyLabel.setText(fromCurrencyCode);
+        mToCurrencyLabel.setText(mTargetCurrencyCode);
+        mConvertedAmountCurrencyLabel.setText(mTargetCurrencyCode);
 
         mSampleExchangeRate.setText(String.format(getString(R.string.sample_exchange_rate),
-                                                  fromCurrency.getCurrencyCode(),
-                                                  mTargetCurrency.getCurrencyCode()));
+                                                  fromCurrencyCode,
+                                                  mTargetCurrencyCode));
         final InputLayoutErrorClearer textChangeListener = new InputLayoutErrorClearer();
 
         CommoditiesDbAdapter commoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
-        String commodityUID = commoditiesDbAdapter.getCommodityUID(fromCurrency.getCurrencyCode());
-        Commodity currencyCommodity = commoditiesDbAdapter.getCommodity(mTargetCurrency.getCurrencyCode());
+        String commodityUID = commoditiesDbAdapter.getCommodityUID(fromCurrencyCode);
+        Commodity currencyCommodity = commoditiesDbAdapter.getCommodity(mTargetCurrencyCode);
         String currencyUID = currencyCommodity.getUID();
         PricesDbAdapter pricesDbAdapter = PricesDbAdapter.getInstance();
         Pair<Long, Long> pricePair = pricesDbAdapter.getPrice(commodityUID, currencyUID);
@@ -202,7 +201,7 @@ private void transferFunds() {
 
         CommoditiesDbAdapter commoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
         String originCommodityUID = commoditiesDbAdapter.getCommodityUID(mOriginAmount.getCurrency().getCurrencyCode());
-        String targetCommodityUID = commoditiesDbAdapter.getCommodityUID(mTargetCurrency.getCurrencyCode());
+        String targetCommodityUID = commoditiesDbAdapter.getCommodityUID(mTargetCurrencyCode);
 
         if (mExchangeRateRadioButton.isChecked()){
             BigDecimal rate;
@@ -217,7 +216,7 @@ private void transferFunds() {
             }
             price = new Price(originCommodityUID, targetCommodityUID, rate);
 
-            Commodity targetCommodity = Commodity.getInstance(mTargetCurrency.getCurrencyCode());
+            Commodity targetCommodity = Commodity.getInstance(mTargetCurrencyCode);
             mConvertedAmount = mOriginAmount.multiply(rate).withCurrency(targetCommodity);
         }
 
@@ -229,7 +228,7 @@ private void transferFunds() {
             }
 
             BigDecimal amount = TransactionFormFragment.parseInputToDecimal(convertedAmount);
-            mConvertedAmount = new Money(amount, Commodity.getInstance(mTargetCurrency.getCurrencyCode()));
+            mConvertedAmount = new Money(amount, Commodity.getInstance(mTargetCurrencyCode));
 
             price = new Price(originCommodityUID, targetCommodityUID);
             // fractions cannot be exactly represented by BigDecimal.

From cbfb3cc63c366fbe2c293334e7ebc0fcc9526afe Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 22 Mar 2016 11:35:33 +0100
Subject: [PATCH 12/15] Remove last use of deprecated AmountInputFormatter.

---
 .../dialog/TransferFundsDialogFragment.java        |  2 -
 .../android/ui/util/AmountInputFormatter.java      | 92 ----------------------
 app/src/main/res/layout/dialog_transfer_funds.xml  |  3 +
 3 files changed, 3 insertions(+), 94 deletions(-)
 delete mode 100644 app/src/main/java/org/gnucash/android/ui/util/AmountInputFormatter.java

diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index b74efd8f..9f2bd1be 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -42,7 +42,6 @@
 import org.gnucash.android.model.Price;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
-import org.gnucash.android.ui.util.AmountInputFormatter;
 import org.gnucash.android.ui.util.OnTransferFundsListener;
 
 import java.math.BigDecimal;
@@ -135,7 +134,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
         mExchangeRateInput.addTextChangedListener(textChangeListener);
         mConvertedAmountInput.addTextChangedListener(textChangeListener);
-        mConvertedAmountInput.addTextChangedListener(new AmountInputFormatter(mConvertedAmountInput));
 
         mConvertedAmountRadioButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/util/AmountInputFormatter.java b/app/src/main/java/org/gnucash/android/ui/util/AmountInputFormatter.java
deleted file mode 100644
index 1e9af5c2..00000000
--- a/app/src/main/java/org/gnucash/android/ui/util/AmountInputFormatter.java
+++ /dev/null
@@ -1,92 +0,0 @@
-/*
- * Copyright (c) 2014 Ngewi Fet <ngewif@gmail.com>
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.gnucash.android.ui.util;
-
-import android.text.Editable;
-import android.text.TextWatcher;
-import android.widget.EditText;
-
-import org.gnucash.android.ui.transaction.TransactionFormFragment;
-
-import java.math.BigDecimal;
-import java.text.DecimalFormat;
-import java.text.NumberFormat;
-import java.util.Locale;
-
-/**
- * Captures input string in the amount input field and parses it into a formatted amount
- * The amount input field allows numbers to be input sequentially and they are parsed
- * into a string with 2 decimal places. This means inputting 245 will result in the amount
- * of 2.45
- *
- * @author Ngewi Fet <ngewif@gmail.com>
- * @deprecated Use {@link org.gnucash.android.ui.util.widget.CalculatorEditText} for getting input amounts from the user
- */
-@Deprecated
-public class AmountInputFormatter implements TextWatcher {
-    private String current = "0";
-    private EditText amountEditText;
-    /**
-     * Flag to note if the user has manually edited the amount of the transaction
-     */
-    private boolean isModified = false;
-
-    public AmountInputFormatter(EditText amountInput) {
-        this.amountEditText = amountInput;
-    }
-
-    @Override
-    public void afterTextChanged(Editable s) {
-        if (s.length() == 0 || s.toString().equals(current))
-            return;
-//make sure that the sign of the input is in line with the type button state
-        BigDecimal amount = TransactionFormFragment.parseInputToDecimal(s.toString());
-
-        DecimalFormat formatter = (DecimalFormat) NumberFormat.getInstance(Locale.getDefault());
-        formatter.setMinimumFractionDigits(2);  //TODO: Use fraction of the currency in question
-        formatter.setMaximumFractionDigits(2);
-
-        current = formatter.format(amount.doubleValue()); //TODO: Try with Bigdecimal string instead of double
-        amountEditText.removeTextChangedListener(this);
-        amountEditText.setText(current);
-        amountEditText.setSelection(current.length());
-        amountEditText.addTextChangedListener(this);
-
-        isModified = true;
-    }
-
-    @Override
-    public void beforeTextChanged(CharSequence s, int start, int count,
-                                  int after) {
-        // nothing to see here, move along
-    }
-
-    @Override
-    public void onTextChanged(CharSequence s, int start, int before,
-                              int count) {
-        // nothing to see here, move along
-        isModified = true;
-    }
-
-    /**
-     * Returns true if input has been entered into the view
-     *
-     * @return <code>true</code> if the view has been modified, <code>false</code> otherwise.
-     */
-    public boolean isInputModified() {
-        return isModified;
-    }
-}
diff --git a/app/src/main/res/layout/dialog_transfer_funds.xml b/app/src/main/res/layout/dialog_transfer_funds.xml
index b5cd006a..d0a3093f 100644
--- a/app/src/main/res/layout/dialog_transfer_funds.xml
+++ b/app/src/main/res/layout/dialog_transfer_funds.xml
@@ -138,10 +138,13 @@
                     android:layout_width="0dp"
                     android:layout_weight="2"
                     android:layout_height="wrap_content">
+                    <!-- FIXME: make android:digits locale independent -->
                     <EditText android:id="@+id/input_converted_amount"
                         android:layout_width="match_parent"
                         android:layout_height="wrap_content"
                         android:inputType="numberDecimal"
+                        android:digits="0123456789.,"
+                        android:imeOptions="actionDone"
                         android:hint="@string/hint_converted_amount">
                         <requestFocus />
                     </EditText>

From 772e15f6785a31d31c8e6b6b627b31dfb8e2bc69 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 22 Mar 2016 13:06:42 +0100
Subject: [PATCH 13/15] Unify parsing of amounts.

---
 .../ui/transaction/TransactionFormFragment.java    | 17 -----------
 .../dialog/TransferFundsDialogFragment.java        | 34 ++++++++++++++--------
 app/src/main/res/values/strings.xml                |  1 +
 3 files changed, 23 insertions(+), 29 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index f5ce13d0..2735a38d 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -1013,23 +1013,6 @@ public static String stripCurrencyFormatting(String s){
 		return stripped;
 	}
 
-	/**
-	 * Parse an input string into a {@link BigDecimal}
-	 * This method expects the amount including the decimal part
-	 * @param amountString String with amount information
-	 * @return BigDecimal with the amount parsed from <code>amountString</code>
-	 */
-	public static BigDecimal parseInputToDecimal(String amountString){
-		String clean = stripCurrencyFormatting(amountString);
-        if (clean.length() == 0) //empty string
-                return BigDecimal.ZERO;
-		//all amounts are input to 2 decimal places, so after removing decimal separator, divide by 100
-        //TODO: Handle currencies with different kinds of decimal places
-		return new BigDecimal(clean).setScale(2,
-				RoundingMode.HALF_EVEN).divide(new BigDecimal(100), 2,
-				RoundingMode.HALF_EVEN);
-	}
-
     @Override
     public void transferComplete(Money amount) {
         mSplitQuantity = amount;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 9f2bd1be..4a48753f 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -40,7 +40,6 @@
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Price;
-import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.util.OnTransferFundsListener;
 
@@ -48,6 +47,7 @@
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
 import java.text.ParseException;
+import java.text.ParsePosition;
 import java.util.Currency;
 
 import butterknife.Bind;
@@ -201,13 +201,10 @@ private void transferFunds() {
         String originCommodityUID = commoditiesDbAdapter.getCommodityUID(mOriginAmount.getCurrency().getCurrencyCode());
         String targetCommodityUID = commoditiesDbAdapter.getCommodityUID(mTargetCurrencyCode);
 
-        if (mExchangeRateRadioButton.isChecked()){
+        if (mExchangeRateRadioButton.isChecked()) {
             BigDecimal rate;
-            String exchangeRateString = mExchangeRateInput.getText().toString();
-            DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
-            formatter.setParseBigDecimal(true);
             try {
-                rate = (BigDecimal) formatter.parse(exchangeRateString);
+                rate = parseAmount(mExchangeRateInput.getText().toString());
             } catch (ParseException e) {
                 mExchangeRateInputLayout.setError(getString(R.string.error_invalid_exchange_rate));
                 return;
@@ -218,14 +215,14 @@ private void transferFunds() {
             mConvertedAmount = mOriginAmount.multiply(rate).withCurrency(targetCommodity);
         }
 
-        if (mConvertedAmountRadioButton.isChecked()){
-            String convertedAmount = mConvertedAmountInput.getText().toString();
-            if (convertedAmount.isEmpty()){
-                mConvertedAmountInputLayout.setError(getString(R.string.error_converted_amount_required));
+        if (mConvertedAmountRadioButton.isChecked()) {
+            BigDecimal amount;
+            try {
+                amount = parseAmount(mConvertedAmountInput.getText().toString());
+            } catch (ParseException e) {
+                mConvertedAmountInputLayout.setError(getString(R.string.error_invalid_amount));
                 return;
             }
-
-            BigDecimal amount = TransactionFormFragment.parseInputToDecimal(convertedAmount);
             mConvertedAmount = new Money(amount, Commodity.getInstance(mTargetCurrencyCode));
 
             price = new Price(originCommodityUID, targetCommodityUID);
@@ -243,6 +240,19 @@ private void transferFunds() {
         dismiss();
     }
 
+    private BigDecimal parseAmount(String amount) throws ParseException {
+        DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
+        formatter.setParseBigDecimal(true);
+        ParsePosition parsePosition = new ParsePosition(0);
+        BigDecimal parsedAmount = (BigDecimal) formatter.parse(amount, parsePosition);
+
+        // Ensure any mistyping by the user is caught instead of partially parsed
+        if (parsePosition.getIndex() < amount.length())
+            throw new ParseException("Parse error", parsePosition.getErrorIndex());
+
+        return parsedAmount;
+    }
+
     /**
      * Hides the error message from mConvertedAmountInputLayout and mExchangeRateInputLayout
      * when the user edits their content.
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 835d4748..d3ac600e 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -393,6 +393,7 @@
     <string name="menu_duplicate_transaction">Duplicate</string>
     <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
     <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+    <string name="error_invalid_amount">Invalid amount</string>
     <string-array name="report_time_range">
         <item>Current month</item>
         <item>Last 3 months</item>

From bee63a9e489a8d2a01408a128649621b86ea9316 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 19 Apr 2016 10:06:25 +0200
Subject: [PATCH 14/15] Update translations

---
 app/src/main/res/values-af-rZA/strings.xml |  4 ++
 app/src/main/res/values-ar-rSA/strings.xml |  4 ++
 app/src/main/res/values-ca-rES/strings.xml | 12 +++--
 app/src/main/res/values-cs-rCZ/strings.xml |  4 ++
 app/src/main/res/values-el-rGR/strings.xml |  4 ++
 app/src/main/res/values-en-rGB/strings.xml |  4 ++
 app/src/main/res/values-es/strings.xml     |  6 ++-
 app/src/main/res/values-fi-rFI/strings.xml |  4 ++
 app/src/main/res/values-fr/strings.xml     | 14 ++++--
 app/src/main/res/values-it-rIT/strings.xml | 12 +++--
 app/src/main/res/values-iw-rIL/strings.xml |  4 ++
 app/src/main/res/values-ja-rJP/strings.xml | 26 ++++++-----
 app/src/main/res/values-ko-rKR/strings.xml |  4 ++
 app/src/main/res/values-pl-rPL/strings.xml | 74 +++++++++++++++---------------
 app/src/main/res/values-pt-rPT/strings.xml |  2 -
 app/src/main/res/values-ro-rRO/strings.xml |  2 -
 app/src/main/res/values-ru/strings.xml     |  2 -
 app/src/main/res/values-sv-rSE/strings.xml |  6 ++-
 app/src/main/res/values-vi-rVN/strings.xml |  4 ++
 app/src/main/res/values-zh-rCN/strings.xml | 10 ++--
 app/src/main/res/values/strings.xml        |  2 +-
 21 files changed, 130 insertions(+), 74 deletions(-)

diff --git a/app/src/main/res/values-af-rZA/strings.xml b/app/src/main/res/values-af-rZA/strings.xml
index fdb31954..bd030725 100644
--- a/app/src/main/res/values-af-rZA/strings.xml
+++ b/app/src/main/res/values-af-rZA/strings.xml
@@ -168,6 +168,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -199,7 +200,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
diff --git a/app/src/main/res/values-ar-rSA/strings.xml b/app/src/main/res/values-ar-rSA/strings.xml
index 8411d707..c61e1bf7 100644
--- a/app/src/main/res/values-ar-rSA/strings.xml
+++ b/app/src/main/res/values-ar-rSA/strings.xml
@@ -168,6 +168,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -203,7 +204,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
diff --git a/app/src/main/res/values-ca-rES/strings.xml b/app/src/main/res/values-ca-rES/strings.xml
index 731fe140..699c7bce 100644
--- a/app/src/main/res/values-ca-rES/strings.xml
+++ b/app/src/main/res/values-ca-rES/strings.xml
@@ -168,6 +168,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Exporta els assentaments&#8230;</string>
   <string name="label_recurring_transaction">Periodicitat</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Desequilibri</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -186,12 +187,12 @@
     <item>PASSIU</item>
     <item>INGRESSOS</item>
     <item>DESPESES</item>
-    <item>PAYABLE</item>
-    <item>RECEIVABLE</item>
+    <item>PAGAMENTS PENDENTS</item>
+    <item>INGRESSOS PENDENTS</item>
     <item>EQUITY</item>
     <item>MONEDA</item>
     <item>STOCK</item>
-    <item>MUTUAL FUND</item>
+    <item>FONS D\'INVERSI</item>
     <item>TRADING</item>
   </string-array>
   <string-array name="export_formats">
@@ -199,7 +200,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Seleccioneu un color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Color del compte i tipus</string>
   <string name="label_delete_sub_accounts">Suprimeix els subcomptes</string>
   <string name="title_recent_accounts">Recents</string>
@@ -219,7 +223,7 @@
   <string name="label_spend">Spend</string>
   <string name="label_receive">Receive</string>
   <string name="label_withdrawal">Withdrawal</string>
-  <string name="label_deposit">Deposit</string>
+  <string name="label_deposit">Ingrs</string>
   <string name="label_payment">Pagament</string>
   <string name="label_charge">Charge</string>
   <string name="label_decrease">Decrease</string>
diff --git a/app/src/main/res/values-cs-rCZ/strings.xml b/app/src/main/res/values-cs-rCZ/strings.xml
index 3924a847..e46859e6 100644
--- a/app/src/main/res/values-cs-rCZ/strings.xml
+++ b/app/src/main/res/values-cs-rCZ/strings.xml
@@ -168,6 +168,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -200,7 +201,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
diff --git a/app/src/main/res/values-el-rGR/strings.xml b/app/src/main/res/values-el-rGR/strings.xml
index b8ff313d..2ccce0e2 100644
--- a/app/src/main/res/values-el-rGR/strings.xml
+++ b/app/src/main/res/values-el-rGR/strings.xml
@@ -177,6 +177,7 @@
   <string name="summary_default_export_format">        .</string>
   <string name="menu_export_transactions"> &#8230;</string>
   <string name="label_recurring_transaction"></string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions"> </string>
   <string name="label_no_recurring_transactions">     .</string>
@@ -208,7 +209,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title"> </string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">  &amp; </string>
   <string name="label_delete_sub_accounts"> -</string>
   <string name="title_recent_accounts"></string>
diff --git a/app/src/main/res/values-en-rGB/strings.xml b/app/src/main/res/values-en-rGB/strings.xml
index 973a9b89..7a9948dc 100644
--- a/app/src/main/res/values-en-rGB/strings.xml
+++ b/app/src/main/res/values-en-rGB/strings.xml
@@ -168,6 +168,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -199,7 +200,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index c1fb0f00..5f05e6e5 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -166,6 +166,7 @@
   <string name="summary_default_export_format">Formato de archivo para usar por defecto al exportar transacciones</string>
   <string name="menu_export_transactions">Exportar transacciones&#8230;</string>
   <string name="label_recurring_transaction">Recurrencia</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Descuadre</string>
   <string name="title_progress_exporting_transactions">Exportando transacciones</string>
   <string name="label_no_recurring_transactions">No hay transacciones recurrentes que mostrar.</string>
@@ -197,7 +198,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Seleccionar un color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Color y tipo de cuenta</string>
   <string name="label_delete_sub_accounts">Borrar sub-cuentas</string>
   <string name="title_recent_accounts">Reciente</string>
@@ -321,7 +325,7 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="title_create_export_schedule">Crear programacin de exportacin</string>
   <string name="toast_exported_to">Exportado a: %1$s</string>
   <string name="toast_legend_too_long">La leyenda es demasiado larga</string>
-  <string name="hint_account_description">Descriptin de la cuenta</string>
+  <string name="hint_account_description">Descripcin de la cuenta</string>
   <string name="label_no_recent_accounts">No hay cuentas recientes</string>
   <string name="label_no_favorite_accounts">No hay cuentas favoritas</string>
   <string name="nav_menu_scheduled_actions">Acciones Programadas</string>
diff --git a/app/src/main/res/values-fi-rFI/strings.xml b/app/src/main/res/values-fi-rFI/strings.xml
index fdb31954..bd030725 100644
--- a/app/src/main/res/values-fi-rFI/strings.xml
+++ b/app/src/main/res/values-fi-rFI/strings.xml
@@ -168,6 +168,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -199,7 +200,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 4ef1360c..27d6b77e 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -139,10 +139,10 @@
 	</string>
   <string name="label_dismiss">Passer</string>
   <string name="toast_transanction_amount_required">Entrez un montant pour sauvegarder la transaction</string>
-  <string name="toast_error_edit_multi_currency_transaction">Les transactions multi-devises ne peuvent pas tre modifis</string>
+  <string name="toast_error_edit_multi_currency_transaction">Les transactions multi-devises ne peuvent pas tre modifies</string>
   <string name="menu_import_accounts">Importer des comptes GnuCash</string>
   <string name="btn_import_accounts">Import de comptes</string>
-  <string name="toast_error_importing_accounts">Une rreur s\'est produite pendant l\'import de vos comptes GnuCash</string>
+  <string name="toast_error_importing_accounts">Une erreur s\'est produite pendant l\'import de vos comptes GnuCash</string>
   <string name="toast_success_importing_accounts">Comptes GnuCash imports avec succs</string>
   <string name="summary_import_accounts">Importe l\'organisation d\'un compte export depuis GnuCash pour PC</string>
   <string name="title_import_accounts">Importer des comptes GnuCash</string>
@@ -164,6 +164,7 @@
   <string name="summary_default_export_format">Format de fichier  utiliser par dfaut pour l\'export des transactions</string>
   <string name="menu_export_transactions">Exporter les transactions&#8230;</string>
   <string name="label_recurring_transaction">Rcurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Dsquilibre</string>
   <string name="title_progress_exporting_transactions">Exportation des transactions</string>
   <string name="label_no_recurring_transactions">Pas de transactions planifies  afficher.</string>
@@ -195,7 +196,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Slectionnez une couleur</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Couleur de compte &amp; Type</string>
   <string name="label_delete_sub_accounts">Supprimer les sous-comptes</string>
   <string name="title_recent_accounts">Rcent</string>
@@ -241,14 +245,14 @@
   <string name="menu_title_favorite">Favori</string>
   <string name="drawer_open">Panneau de navigation ouvert</string>
   <string name="drawer_close">Panneau de navigation ferm</string>
-  <string name="title_reports">Raport</string>
+  <string name="title_reports">Rapports</string>
   <string name="title_pie_chart">Diagramme Circulaire</string>
   <string name="title_line_chart">Graphique linaire</string>
   <string name="title_bar_chart">Histogramme</string>
-  <string name="title_report_prefs">Prfrences Raport</string>
+  <string name="title_report_prefs">Prfrences Rapport</string>
   <string name="label_report_currency">Slectionnez la monnaie</string>
   <string name="title_use_account_color">Couleur du compte dans les rapports</string>
-  <string name="summary_use_account_color">utiliser la couleur du compte dans le diagramme bandes/circulaire</string>
+  <string name="summary_use_account_color">Utiliser la couleur du compte dans le diagramme bandes/circulaire</string>
   <string name="header_report_settings">Rapports</string>
   <string name="menu_order_by_size">Tri par taille</string>
   <string name="menu_toggle_legend">Show legend</string>
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index 5c6f3d07..9ed6e02c 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -15,7 +15,7 @@
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
-<resources>
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="title_create_account">Crea conto</string>
   <string name="title_edit_account">Modifica conto</string>
   <string name="info_details">Informazioni</string>
@@ -165,6 +165,7 @@
   <string name="summary_default_export_format">Formato di file predefinito da utilizzare per l\'esportazione delle transazioni</string>
   <string name="menu_export_transactions">Esporta transazioni&#8230;</string>
   <string name="label_recurring_transaction">Ripetizione</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Sbilancio</string>
   <string name="title_progress_exporting_transactions">Esportazione transazioni in corso</string>
   <string name="label_no_recurring_transactions">Nessuna transazione ricorrente da visualizzare.</string>
@@ -196,7 +197,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Seleziona un colore</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Tipo e colore del conto</string>
   <string name="label_delete_sub_accounts">Elimina i sottoconti</string>
   <string name="title_recent_accounts">Recenti</string>
@@ -272,7 +276,7 @@
   <string name="label_tap_to_create_schedule">Tocca per creare una pianificazione</string>
   <string name="title_restore_backup">Ripristina backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup e esportazione</string>
-  <string name="title_dropbox_sync_preference">Sincronizzazione con Dropbox</string>
+  <string name="title_dropbox_sync_preference">Sincronizzazione Dropbox</string>
   <string name="title_backup_preference_category">Backup</string>
   <string name="summary_dropbox_sync">Abilita la sincronizzazione con Dropbox</string>
   <string name="title_select_gnucash_xml_file">Seleziona un file XML di GnuCash</string>
@@ -283,7 +287,7 @@
   <string name="toast_backup_successful">Backup riuscito</string>
   <string name="toast_backup_failed">Backup non riuscito</string>
   <string name="export_warning_xml">Esporta tutti i conti e tutte le transazioni</string>
-  <string name="title_google_drive_sync_pref">Sincronizzazione con Google Drive</string>
+  <string name="title_google_drive_sync_pref">Sincronizzazione Google Drive</string>
   <string name="summary_google_drive_sync">Abilita la sincronizzazione con Google Drive</string>
   <string name="toast_install_file_manager">Installa un file manager per selezionare i file</string>
   <string name="title_select_backup_to_restore">Seleziona il backup da ripristinare</string>
@@ -382,8 +386,6 @@
   <string name="toast_no_compatible_apps_to_receive_export">Nessuna app compatibile con la ricezione delle transazioni esportate!</string>
   <string name="menu_move_transaction">Sposta...</string>
   <string name="menu_duplicate_transaction">Duplica</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
   <string-array name="report_time_range">
     <item>Mese corrente</item>
     <item>Ultimi 3 mesi</item>
diff --git a/app/src/main/res/values-iw-rIL/strings.xml b/app/src/main/res/values-iw-rIL/strings.xml
index fdb31954..bd030725 100644
--- a/app/src/main/res/values-iw-rIL/strings.xml
+++ b/app/src/main/res/values-iw-rIL/strings.xml
@@ -168,6 +168,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -199,7 +200,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index 44f56fe5..6371bea0 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -163,6 +163,7 @@
   <string name="summary_default_export_format"></string>
   <string name="menu_export_transactions">...</string>
   <string name="label_recurring_transaction"></string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions"></string>
   <string name="label_no_recurring_transactions"></string>
@@ -193,7 +194,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title"></string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type"></string>
   <string name="label_delete_sub_accounts"></string>
   <string name="title_recent_accounts"></string>
@@ -212,13 +216,13 @@
   <string name="hint_split_memo">Memo</string>
   <string name="label_spend">Spend</string>
   <string name="label_receive">Receive</string>
-  <string name="label_withdrawal">Withdrawal</string>
-  <string name="label_deposit">Deposit</string>
-  <string name="label_payment">Payment</string>
-  <string name="label_charge">Charge</string>
+  <string name="label_withdrawal"></string>
+  <string name="label_deposit"></string>
+  <string name="label_payment"></string>
+  <string name="label_charge"></string>
   <string name="label_decrease">Decrease</string>
   <string name="label_increase">Increase</string>
-  <string name="label_income">Income</string>
+  <string name="label_income"></string>
   <string name="label_rebate">Rebate</string>
   <string name="label_expense">Expense</string>
   <string name="label_bill">Bill</string>
@@ -237,15 +241,15 @@
   <string name="title_transaction_splits">Transaction splits</string>
   <string name="label_imbalance">Imbalance:</string>
   <string name="btn_add_split">Add split</string>
-  <string name="menu_title_favorite">Favorite</string>
+  <string name="menu_title_favorite"></string>
   <string name="drawer_open">Navigation drawer opened</string>
   <string name="drawer_close">Navigation drawer closed</string>
-  <string name="title_reports">Reports</string>
-  <string name="title_pie_chart">Pie Chart</string>
-  <string name="title_line_chart">Line Chart</string>
-  <string name="title_bar_chart">Bar Chart</string>
+  <string name="title_reports"></string>
+  <string name="title_pie_chart"></string>
+  <string name="title_line_chart"></string>
+  <string name="title_bar_chart"></string>
   <string name="title_report_prefs">Report Preferences</string>
-  <string name="label_report_currency">Select currency</string>
+  <string name="label_report_currency"></string>
   <string name="title_use_account_color">Account color in reports</string>
   <string name="summary_use_account_color">Use account color in the bar/pie chart</string>
   <string name="header_report_settings">Reports</string>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index 47619e9c..c57a2686 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -168,6 +168,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -198,7 +199,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
diff --git a/app/src/main/res/values-pl-rPL/strings.xml b/app/src/main/res/values-pl-rPL/strings.xml
index cb0d7af9..bc98d71d 100644
--- a/app/src/main/res/values-pl-rPL/strings.xml
+++ b/app/src/main/res/values-pl-rPL/strings.xml
@@ -51,26 +51,27 @@
   <string name="menu_move">PRZENIE</string>
   <string name="title_selected">%1$d wybranych</string>
   <string name="label_account_balance">Saldo:</string>
-  <string name="label_export_destination">Export To:</string>
+  <string name="label_export_destination">Wyeksportuj do:</string>
   <string name="title_export_dialog">Eksport transakcji</string>
   <string name="option_export_all_transactions">Eksportuj wszystkie transakcje</string>
-  <string name="hint_export_choice">By default, only new transactions since last export will be exported. Check this option to export all transactions</string>
+  <string name="hint_export_choice">Domylnie tylko nowe transakcje od ostatniego eksportu, zostan wyeksportowane. Zaznacz t opcj, aby eksportowa wszystkie transakcje</string>
   <string name="toast_export_error">Bd eksportowania pliku %1$s</string>
   <string name="btn_export">Eksportuj</string>
-  <string name="option_delete_after_export">Delete transactions after export</string>
+  <string name="option_delete_after_export">Usu transakcje po eksporcie</string>
   <string name="hint_delete_after_export">Wszystkie eksportowane transakcje bd usunite po zakoczeniu eksportu</string>
   <string name="title_settings">Ustawienia</string>
   <string-array name="export_destinations">
     <item>Karta SD</item>
     <item>DropBox</item>
-    <item>Google Drive</item>
+    <item>Dysk Google</item>
     <item>Udostpnij plik&#8230;</item>
   </string-array>
   <string name="btn_move">Przenie</string>
   <string name="title_move_transactions">Przenie %1$d transakcji</string>
   <string name="label_move_destination">Konto docelowe</string>
   <string name="permission_access_sdcard">Dostp do Karty SD</string>
-  <string name="toast_incompatible_currency">Cannot move transactions.\nThe destination account uses a different currency from origin account</string>
+  <string name="toast_incompatible_currency">Nie mona przenie transakcji.
+Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   <string name="header_general_settings">Oglne</string>
   <string name="header_about_gnucash">O</string>
   <string name="title_choose_currency">Wybierz domylna walut</string>
@@ -98,11 +99,11 @@
   <string name="title_passcode_disabled">Haso wyczone</string>
   <string name="title_change_passcode">Zmie haso</string>
   <string name="title_about_gnucash">O GnuCash</string>
-  <string name="summary_about_gnucash">A mobile finance management and expense-tracker designed for Android</string>
+  <string name="summary_about_gnucash">Mobilny menader finansw i agent wydatkw stworzony dla Androida</string>
   <string name="title_about">O</string>
   <string name="toast_format_exported_to">%1$s plik wyeksportowany do:\n</string>
   <string name="title_export_email">GnuCash Android %1$s eksport</string>
-  <string name="description_export_email">GnuCash Android Export from </string>
+  <string name="description_export_email">GnuCash Android eksport z </string>
   <string name="header_transaction_settings">Transakcje</string>
   <string name="title_transaction_preferences">Ustawienia transakcji</string>
   <string name="title_account_preferences">Ustawienia konta</string>
@@ -130,13 +131,12 @@
   <string name="summary_xml_ofx_header">Wcz t opcj gdy eksportujesz do aplikacji innej ni GnuCash dla desktopa</string>
   <string name="title_whats_new">Co nowego</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
-        - Multiple bug fixes and improvements\n
-	</string>
+- Nowy design aplikacji Material
+- Transakcje wielo-walutowe
+- Kalkulator kwot transakcji
+- Ulepszone opcje raportowania
+- Nowe centrum pomocy i feedbacku
+- Wiele naprawionych bdw oraz ulepsze</string>
   <string name="label_dismiss">Spocznij</string>
   <string name="toast_transanction_amount_required">Wprowad kwot by zapisa transakcj</string>
   <string name="toast_error_edit_multi_currency_transaction">Wielowalutowe transakcje nie mog by modyfikowane</string>
@@ -164,6 +164,7 @@
   <string name="summary_default_export_format">Format pliku uyty w trakcie eksportowania transakcji</string>
   <string name="menu_export_transactions">Eksport transakcji&#8230;</string>
   <string name="label_recurring_transaction">Powtarzajca si</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Niezbilansowane</string>
   <string name="title_progress_exporting_transactions">Eksport transakcji</string>
   <string name="label_no_recurring_transactions">Brak powtarzajcych si transakcji do wywietlenia.</string>
@@ -189,14 +190,17 @@
     <item>WALUTA</item>
     <item>AKCJE</item>
     <item>FUNDUSZ WZAJEMNY</item>
-    <item>TRADING</item>
+    <item>Handlowy</item>
   </string-array>
   <string-array name="export_formats">
     <item>QIF</item>
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Wybierz kolor</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Kolor i typ konta</string>
   <string name="label_delete_sub_accounts">Usu sub-konta</string>
   <string name="title_recent_accounts">Ostatnie</string>
@@ -234,7 +238,7 @@
   <string name="export_warning_ofx">OFX nie wspiera transakcji double-entry</string>
   <string name="export_warning_qif">Generuje osobne pliki QIF dla kadej waluty</string>
   <string name="title_transaction_splits">Podzia transakcji</string>
-  <string name="label_imbalance">Imbalance:</string>
+  <string name="label_imbalance">Niezbilansowanie:</string>
   <string name="btn_add_split">Dodaj podzia</string>
   <string name="menu_title_favorite">Ulubione</string>
   <string name="drawer_open">Szuflada nawigacyjna otwarta</string>
@@ -249,10 +253,10 @@
   <string name="summary_use_account_color">Uyj koloru konta w wykresie koowym/supkowym</string>
   <string name="header_report_settings">Raporty</string>
   <string name="menu_order_by_size">Sortuj po rozmarze</string>
-  <string name="menu_toggle_legend">Show legend</string>
-  <string name="menu_toggle_labels">Show labels</string>
-  <string name="menu_toggle_percentage_mode">Show percentage</string>
-  <string name="menu_toggle_average_lines">Show average lines</string>
+  <string name="menu_toggle_legend">Poka legend</string>
+  <string name="menu_toggle_labels">Poka etykiety</string>
+  <string name="menu_toggle_percentage_mode">Poka procenty</string>
+  <string name="menu_toggle_average_lines">Poka linie rednich</string>
   <string name="menu_group_smaller_slices">Grupuj mniejsze wycinki</string>
   <string name="label_chart_no_data">Brak danych dla wykresu</string>
   <string name="label_chart_overall">Oglny</string>
@@ -268,7 +272,7 @@
   <string name="label_tap_to_create_schedule">Stuknij aby zaplanowa</string>
   <string name="title_restore_backup">Przywrc kopi zapasow&#8230;</string>
   <string name="header_backup_and_export_settings">Kopia zapasowa i eksport</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Synchronizacja z DropBox</string>
   <string name="title_backup_preference_category">Kopia zapasowa</string>
   <string name="summary_dropbox_sync">Zaznaczy by synchronizowac z DropBox</string>
   <string name="title_select_gnucash_xml_file">Wybierz plik GnuCash XML</string>
@@ -279,7 +283,7 @@
   <string name="toast_backup_successful">Kopia zapasowa utworzona pomylnie</string>
   <string name="toast_backup_failed">Bd tworzenia kopii zapasowej</string>
   <string name="export_warning_xml">Wyeksportowano wszystkie konta i transakcje</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
+  <string name="title_google_drive_sync_pref">Synchronizacja z Dyskiem Google</string>
   <string name="summary_google_drive_sync">Wybierz aby synchronizowa z Google Drive</string>
   <string name="toast_install_file_manager">Zainstaluj managera plikw aby wybra pliki</string>
   <string name="title_select_backup_to_restore">Wybierz kopi zapasw aby j przywrci</string>
@@ -292,22 +296,22 @@
   <plurals name="label_every_x_days">
     <item quantity="one">Codziennie</item>
     <item quantity="few">Co %d dni</item>
-    <item quantity="other">Every %d days</item>
+    <item quantity="other">Kade %d dni</item>
   </plurals>
   <plurals name="label_every_x_weeks">
     <item quantity="one">Co tydzie</item>
-    <item quantity="few">Co %d tygodnie</item>
-    <item quantity="other">Every %d weeks</item>
+    <item quantity="few">Co %d tygodni</item>
+    <item quantity="other">Co %d tygodni</item>
   </plurals>
   <plurals name="label_every_x_months">
     <item quantity="one">Co miesic</item>
     <item quantity="few">Co %d miesice</item>
-    <item quantity="other">Every %d months</item>
+    <item quantity="other">Co %d miesicy</item>
   </plurals>
   <plurals name="label_every_x_years">
     <item quantity="one">Co rok</item>
     <item quantity="few">Co %d lata</item>
-    <item quantity="other">Every %d years</item>
+    <item quantity="other">Co %d lat</item>
   </plurals>
   <string name="title_enable_crashlytics">Wcz logowanie bdw</string>
   <string name="msg_enable_crashlytics">Wcz by wysya inforamcje o bdach do twrcw w celu poleszania aplikacji (zalecane).
@@ -376,15 +380,13 @@
   <string name="menu_group_by_year">Roku</string>
   <string name="title_balance_sheet_report">Bilans</string>
   <string name="label_balance_sheet_total">Suma:</string>
-  <string name="title_google_plus_community">Google+ Community</string>
-  <string name="title_translate_gnucash">Translate GnuCash</string>
-  <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
-  <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
-  <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
-  <string name="menu_duplicate_transaction">Duplicate</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="title_google_plus_community">Spoeczno Google+</string>
+  <string name="title_translate_gnucash">Tumacz GnuCash</string>
+  <string name="summary_google_plus">Udostpnij pomysy, dyskutuj zmiany, lub zgo problem</string>
+  <string name="summary_translate_gnucash">Tumacz lub sprawdzaj na Crowdin</string>
+  <string name="toast_no_compatible_apps_to_receive_export">Brak kompatybilnych aplikacji do otrzymania eksportowanych transakcji!</string>
+  <string name="menu_move_transaction">Przenie...</string>
+  <string name="menu_duplicate_transaction">Duplikuj</string>
   <string-array name="report_time_range">
     <item>Biecy miesic</item>
     <item>Ostatnie 3 miesice</item>
diff --git a/app/src/main/res/values-pt-rPT/strings.xml b/app/src/main/res/values-pt-rPT/strings.xml
index eb9abd50..300f2335 100644
--- a/app/src/main/res/values-pt-rPT/strings.xml
+++ b/app/src/main/res/values-pt-rPT/strings.xml
@@ -380,8 +380,6 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="toast_no_compatible_apps_to_receive_export">No existem aplicaes compatveis para receber as transaes exportadas!</string>
   <string name="menu_move_transaction">Mover...</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
   <string-array name="report_time_range">
     <item>Ms actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-ro-rRO/strings.xml b/app/src/main/res/values-ro-rRO/strings.xml
index 39d2ad4e..58d71312 100644
--- a/app/src/main/res/values-ro-rRO/strings.xml
+++ b/app/src/main/res/values-ro-rRO/strings.xml
@@ -390,8 +390,6 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 3294518d..7675c5ea 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -388,8 +388,6 @@
   <string name="toast_no_compatible_apps_to_receive_export">  ,    !</string>
   <string name="menu_move_transaction">...</string>
   <string name="menu_duplicate_transaction"></string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
diff --git a/app/src/main/res/values-sv-rSE/strings.xml b/app/src/main/res/values-sv-rSE/strings.xml
index fdb31954..be27a04c 100644
--- a/app/src/main/res/values-sv-rSE/strings.xml
+++ b/app/src/main/res/values-sv-rSE/strings.xml
@@ -168,6 +168,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -199,7 +200,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
@@ -385,8 +389,6 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-vi-rVN/strings.xml b/app/src/main/res/values-vi-rVN/strings.xml
index 47619e9c..c57a2686 100644
--- a/app/src/main/res/values-vi-rVN/strings.xml
+++ b/app/src/main/res/values-vi-rVN/strings.xml
@@ -168,6 +168,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -198,7 +199,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index dbc47126..8d4d232a 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -15,9 +15,9 @@
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
-<resources>
-  <string name="title_create_account"></string>
-  <string name="title_edit_account"></string>
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <string name="title_create_account"></string>
+  <string name="title_edit_account"></string>
   <string name="info_details"></string>
   <string name="menu_export">...</string>
   <string name="description_add_transaction_icon"></string>
@@ -166,6 +166,7 @@
   <string name="summary_default_export_format"></string>
   <string name="menu_export_transactions">&#8230;</string>
   <string name="label_recurring_transaction"></string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name"></string>
   <string name="title_progress_exporting_transactions"></string>
   <string name="label_no_recurring_transactions"></string>
@@ -196,7 +197,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title"></string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type"></string>
   <string name="label_delete_sub_accounts"></string>
   <string name="title_recent_accounts"></string>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index d3ac600e..629a37e1 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -389,7 +389,7 @@
     <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
     <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
     <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-    <string name="menu_move_transaction">Move...</string>
+    <string name="menu_move_transaction">Move</string>
     <string name="menu_duplicate_transaction">Duplicate</string>
     <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
     <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>

From c0d00e1e5ca20332f922540430f25dee343d1196 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 19 Apr 2016 10:15:12 +0200
Subject: [PATCH 15/15] Update version number and changelog for v2.0.7 release

---
 CHANGELOG.md     | 5 +++++
 app/build.gradle | 4 ++--
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 9dff5452..19ba4c4b 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,10 @@
 Change Log
 ===============================================================================
+Version 2.0.7 *(2016-04-20)*
+----------------------------
+* Fixed: Currency exchange rate does not accept very small rates (> 2 decimal places)
+* Improved: Updated translations for Japanese, Polish, French, 
+
 Version 2.0.6 *(2016-02-20)*
 ----------------------------
 * Fixed: Saving transaction gets slower with increase in size of database
diff --git a/app/build.gradle b/app/build.gradle
index e381225e..f4613f4e 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -5,8 +5,8 @@ apply plugin: 'io.fabric'
 
 def versionMajor = 2
 def versionMinor = 0
-def versionPatch = 6
-def versionBuild = 3
+def versionPatch = 7
+def versionBuild = 0
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")
