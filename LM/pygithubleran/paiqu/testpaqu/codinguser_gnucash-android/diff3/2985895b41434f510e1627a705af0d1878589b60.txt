From 945fd36b6239a1fe01526d91797c37d36e700092 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 23 May 2016 19:42:57 +0200
Subject: [PATCH 1/4] Extract TransferFundsDialogFragment.parseAmount into a
 new class AmountParser.

This makes testing easier.
---
 .../dialog/TransferFundsDialogFragment.java        | 20 ++------------
 .../org/gnucash/android/util/AmountParser.java     | 32 ++++++++++++++++++++++
 2 files changed, 35 insertions(+), 17 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/util/AmountParser.java

diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index fa6bd5c6..3c7f3e91 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -36,19 +36,18 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
-import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.PricesDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Price;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.transaction.OnTransferFundsListener;
+import org.gnucash.android.util.AmountParser;
 
 import java.math.BigDecimal;
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
 import java.text.ParseException;
-import java.text.ParsePosition;
 import java.util.Currency;
 
 import butterknife.Bind;
@@ -205,7 +204,7 @@ private void transferFunds() {
         if (mExchangeRateRadioButton.isChecked()) {
             BigDecimal rate;
             try {
-                rate = parseAmount(mExchangeRateInput.getText().toString());
+                rate = AmountParser.parse(mExchangeRateInput.getText().toString());
             } catch (ParseException e) {
                 mExchangeRateInputLayout.setError(getString(R.string.error_invalid_exchange_rate));
                 return;
@@ -219,7 +218,7 @@ private void transferFunds() {
         if (mConvertedAmountRadioButton.isChecked()) {
             BigDecimal amount;
             try {
-                amount = parseAmount(mConvertedAmountInput.getText().toString());
+                amount = AmountParser.parse(mConvertedAmountInput.getText().toString());
             } catch (ParseException e) {
                 mConvertedAmountInputLayout.setError(getString(R.string.error_invalid_amount));
                 return;
@@ -241,19 +240,6 @@ private void transferFunds() {
         dismiss();
     }
 
-    private BigDecimal parseAmount(String amount) throws ParseException {
-        DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
-        formatter.setParseBigDecimal(true);
-        ParsePosition parsePosition = new ParsePosition(0);
-        BigDecimal parsedAmount = (BigDecimal) formatter.parse(amount, parsePosition);
-
-        // Ensure any mistyping by the user is caught instead of partially parsed
-        if (parsePosition.getIndex() < amount.length())
-            throw new ParseException("Parse error", parsePosition.getErrorIndex());
-
-        return parsedAmount;
-    }
-
     /**
      * Hides the error message from mConvertedAmountInputLayout and mExchangeRateInputLayout
      * when the user edits their content.
diff --git a/app/src/main/java/org/gnucash/android/util/AmountParser.java b/app/src/main/java/org/gnucash/android/util/AmountParser.java
new file mode 100644
index 00000000..f8595cd5
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/util/AmountParser.java
@@ -0,0 +1,32 @@
+package org.gnucash.android.util;
+
+import java.math.BigDecimal;
+import java.text.DecimalFormat;
+import java.text.NumberFormat;
+import java.text.ParseException;
+import java.text.ParsePosition;
+
+/**
+ * Parses amounts as String into BigDecimal.
+ */
+public class AmountParser {
+    /**
+     * Parses {@code amount} and returns it as a BigDecimal.
+     *
+     * @param amount String with the amount to parse.
+     * @return The amount parsed as a BigDecimal.
+     * @throws ParseException if the full string couldn't be parsed as an amount.
+     */
+    public static BigDecimal parse(String amount) throws ParseException {
+        DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
+        formatter.setParseBigDecimal(true);
+        ParsePosition parsePosition = new ParsePosition(0);
+        BigDecimal parsedAmount = (BigDecimal) formatter.parse(amount, parsePosition);
+
+        // Ensure any mistyping by the user is caught instead of partially parsed
+        if (parsePosition.getIndex() < amount.length())
+            throw new ParseException("Parse error", parsePosition.getErrorIndex());
+
+        return parsedAmount;
+    }
+}
\ No newline at end of file

From bd8210ac5e1962b954f60f8d0c463443455c4a6d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 23 May 2016 20:48:32 +0200
Subject: [PATCH 2/4] Add test case for AmountParser.

---
 .../android/test/unit/util/AmountParserTest.java   | 58 ++++++++++++++++++++++
 1 file changed, 58 insertions(+)
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java

diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java b/app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java
new file mode 100644
index 00000000..0d0ad72a
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java
@@ -0,0 +1,58 @@
+package org.gnucash.android.test.unit.util;
+
+import org.gnucash.android.util.AmountParser;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+import java.math.BigDecimal;
+import java.text.ParseException;
+import java.util.Locale;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+public class AmountParserTest {
+    private Locale mPreviousLocale;
+
+    @Before
+    public void setUp() throws Exception {
+        mPreviousLocale = Locale.getDefault();
+        Locale.setDefault(Locale.US);
+    }
+
+    @After
+    public void tearDown() throws Exception {
+        Locale.setDefault(mPreviousLocale);
+    }
+
+    @Test
+    public void testParseIntegerAmount() throws ParseException {
+        assertThat(AmountParser.parse("123")).isEqualTo(new BigDecimal(123));
+    }
+
+    @Test
+    public void parseDecimalAmount() throws ParseException {
+        assertThat(AmountParser.parse("123.45")).isEqualTo(new BigDecimal("123.45"));
+    }
+
+    @Test
+    public void parseDecimalAmountWithDifferentSeparator() throws ParseException {
+        Locale.setDefault(Locale.GERMANY);
+        assertThat(AmountParser.parse("123,45")).isEqualTo(new BigDecimal("123.45"));
+    }
+
+    @Test(expected = ParseException.class)
+    public void withGarbageAtTheBeginning_shouldFailWithException() throws ParseException {
+        AmountParser.parse("asdf123.45");
+    }
+
+    @Test(expected = ParseException.class)
+    public void withGarbageAtTheEnd_shouldFailWithException() throws ParseException {
+        AmountParser.parse("123.45asdf");
+    }
+
+    @Test(expected = ParseException.class)
+    public void emptyString_shouldFailWithException() throws ParseException {
+        AmountParser.parse("");
+    }
+}
\ No newline at end of file

From 009d73d683735154b594ea659e489a702790c0a7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Thu, 26 May 2016 20:23:25 +0200
Subject: [PATCH 3/4] Avoid returning null when parsing an empty string as an
 amount.

Parsing an empty string wasn't throwing a ParseException as expected, it
was returning null. Now we ensure the exception is thrown.

Fixes https://github.com/codinguser/gnucash-android/issues/505
---
 app/src/main/java/org/gnucash/android/util/AmountParser.java | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/src/main/java/org/gnucash/android/util/AmountParser.java b/app/src/main/java/org/gnucash/android/util/AmountParser.java
index f8595cd5..f873a780 100644
--- a/app/src/main/java/org/gnucash/android/util/AmountParser.java
+++ b/app/src/main/java/org/gnucash/android/util/AmountParser.java
@@ -24,7 +24,7 @@ public static BigDecimal parse(String amount) throws ParseException {
         BigDecimal parsedAmount = (BigDecimal) formatter.parse(amount, parsePosition);
 
         // Ensure any mistyping by the user is caught instead of partially parsed
-        if (parsePosition.getIndex() < amount.length())
+        if ((parsedAmount == null) || (parsePosition.getIndex() < amount.length()))
             throw new ParseException("Parse error", parsePosition.getErrorIndex());
 
         return parsedAmount;

From c57aa77de5ad4304b4c1d81124d03a989315e830 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Fri, 27 May 2016 20:32:58 +0200
Subject: [PATCH 4/4] Simplify CalculatorEditText.getValue() by using
 AmountParser.

---
 .../gnucash/android/ui/util/widget/CalculatorEditText.java    | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
index 190cd050..edb49dd8 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
@@ -43,10 +43,12 @@
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.ui.common.FormActivity;
+import org.gnucash.android.util.AmountParser;
 
 import java.math.BigDecimal;
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
+import java.text.ParseException;
 import java.util.Locale;
 
 /**
@@ -315,13 +317,10 @@ public boolean isInputModified(){
      */
     public @Nullable BigDecimal getValue(){
         evaluate();
-        String amountString = getCleanString();
-        if (amountString.isEmpty())
-            return null;
         try { //catch any exceptions in the conversion e.g. if a string with only "-" is entered
-            return new BigDecimal(amountString);
-        } catch (NumberFormatException e){
-            String msg = "Error parsing amount string " + amountString + " from CalculatorEditText";
+            return AmountParser.parse(getText().toString());
+        } catch (ParseException e){
+            String msg = "Error parsing amount string " + getText() + " from CalculatorEditText";
             Log.i(getClass().getSimpleName(), msg, e);
             return null;
         }
