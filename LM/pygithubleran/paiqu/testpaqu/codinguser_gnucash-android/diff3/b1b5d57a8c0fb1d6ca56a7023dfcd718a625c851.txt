From b1b5d57a8c0fb1d6ca56a7023dfcd718a625c851 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewi.fet@uni-due.de>
Date: Wed, 8 Jul 2015 11:29:25 +0200
Subject: [PATCH] Fixed: crash after exporting transactions (in some cases)

Updated betterpickers library
Use better dialogs for date and time when creating new transactions
---
 app/build.gradle                                   |  2 +-
 .../gnucash/android/export/ExportAsyncTask.java    |  5 +-
 .../ui/transaction/TransactionFormFragment.java    | 75 +++++++++++-----------
 3 files changed, 41 insertions(+), 41 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 5a143911..60c1a5e9 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -154,7 +154,7 @@ dependencies {
     compile('com.android.support:support-v4:22.1.1',
             'com.actionbarsherlock:actionbarsherlock:4.4.0@aar',
             'com.viewpagerindicator:library:2.4.1@aar',
-            'com.doomonafireball.betterpickers:library:1.5.2',
+            'com.doomonafireball.betterpickers:library:1.6.0',
             'com.commonsware.cwac:merge:1.1.+',
             'com.github.PhilJay:MPAndroidChart:v2.1.0',
             'joda-time:joda-time:2.7',
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index ba20e610..601070ce 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -55,6 +55,7 @@
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.account.AccountsActivity;
+import org.gnucash.android.ui.account.AccountsListFragment;
 import org.gnucash.android.ui.settings.SettingsActivity;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 
@@ -233,7 +234,9 @@ protected void onPostExecute(Boolean exportResult) {
 
             //now refresh the respective views
             if (mContext instanceof AccountsActivity){
-                ((AccountsActivity) mContext).getCurrentAccountListFragment().refresh();
+                AccountsListFragment fragment = ((AccountsActivity) mContext).getCurrentAccountListFragment();
+                if (fragment != null)
+                    fragment.refresh();
             }
             if (mContext instanceof TransactionsActivity){
                 ((TransactionsActivity) mContext).refresh();
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index a387ae65..0391c1ac 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -16,16 +16,11 @@
 
 package org.gnucash.android.ui.transaction;
 
-import android.app.DatePickerDialog;
-import android.app.DatePickerDialog.OnDateSetListener;
-import android.app.TimePickerDialog;
-import android.app.TimePickerDialog.OnTimeSetListener;
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.database.Cursor;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v4.app.DialogFragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.widget.SimpleCursorAdapter;
@@ -41,12 +36,10 @@
 import android.widget.AutoCompleteTextView;
 import android.widget.Button;
 import android.widget.CheckBox;
-import android.widget.DatePicker;
 import android.widget.EditText;
 import android.widget.FilterQueryProvider;
 import android.widget.Spinner;
 import android.widget.TextView;
-import android.widget.TimePicker;
 import android.widget.Toast;
 
 import com.actionbarsherlock.app.ActionBar;
@@ -54,6 +47,8 @@
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
+import com.doomonafireball.betterpickers.calendardatepicker.CalendarDatePickerDialog;
+import com.doomonafireball.betterpickers.radialtimepicker.RadialTimePickerDialog;
 import com.doomonafireball.betterpickers.recurrencepicker.EventRecurrence;
 import com.doomonafireball.betterpickers.recurrencepicker.EventRecurrenceFormatter;
 import com.doomonafireball.betterpickers.recurrencepicker.RecurrencePickerDialog;
@@ -70,9 +65,7 @@
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.model.TransactionType;
 import org.gnucash.android.ui.UxArgument;
-import org.gnucash.android.ui.transaction.dialog.DatePickerDialogFragment;
 import org.gnucash.android.ui.transaction.dialog.SplitEditorDialogFragment;
-import org.gnucash.android.ui.transaction.dialog.TimePickerDialogFragment;
 import org.gnucash.android.ui.util.AmountInputFormatter;
 import org.gnucash.android.ui.util.RecurrenceParser;
 import org.gnucash.android.ui.util.TransactionTypeToggleButton;
@@ -90,14 +83,14 @@
 import java.util.GregorianCalendar;
 import java.util.List;
 import java.util.Locale;
-import java.util.Objects;
 
 /**
  * Fragment for creating or editing transactions
  * @author Ngewi Fet <ngewif@gmail.com>
  */
 public class TransactionFormFragment extends SherlockFragment implements
-	OnDateSetListener, OnTimeSetListener, RecurrencePickerDialog.OnRecurrenceSetListener {
+        CalendarDatePickerDialog.OnDateSetListener, RadialTimePickerDialog.OnTimeSetListener,
+        RecurrencePickerDialog.OnRecurrenceSetListener {
 
     public static final String FRAGMENT_TAG_SPLITS_EDITOR       = "splits_editor";
     private static final String FRAGMENT_TAG_RECURRENCE_PICKER  = "recurrence_picker";
@@ -570,8 +563,6 @@ public void onClick(View view) {
 
 			@Override
 			public void onClick(View v) {
-				FragmentTransaction ft = getFragmentManager().beginTransaction();
-
 				long dateMillis = 0;
 				try {
 					Date date = DATE_FORMATTER.parse(mDateTextView.getText().toString());
@@ -579,8 +570,15 @@ public void onClick(View v) {
 				} catch (ParseException e) {
 					Log.e(getTag(), "Error converting input time to Date object");
 				}
-				DialogFragment newFragment = DatePickerDialogFragment.newInstance(TransactionFormFragment.this, dateMillis);
-				newFragment.show(ft, "date_dialog");
+                Calendar calendar = Calendar.getInstance();
+                calendar.setTimeInMillis(dateMillis);
+
+                int year = calendar.get(Calendar.YEAR);
+                int monthOfYear = calendar.get(Calendar.MONTH);
+                int dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);
+                CalendarDatePickerDialog datePickerDialog = CalendarDatePickerDialog.newInstance(TransactionFormFragment.this,
+                        year, monthOfYear, dayOfMonth);
+                datePickerDialog.show(getFragmentManager(), "date_picker_fragment");
 			}
 		});
 
@@ -596,8 +594,14 @@ public void onClick(View v) {
                 } catch (ParseException e) {
                     Log.e(getTag(), "Error converting input time to Date object");
                 }
-                DialogFragment fragment = TimePickerDialogFragment.newInstance(TransactionFormFragment.this, timeMillis);
-                fragment.show(ft, "time_dialog");
+
+                Calendar calendar = Calendar.getInstance();
+                calendar.setTimeInMillis(timeMillis);
+
+                RadialTimePickerDialog timePickerDialog = RadialTimePickerDialog.newInstance(
+                        TransactionFormFragment.this, calendar.get(Calendar.HOUR_OF_DAY),
+                        calendar.get(Calendar.MINUTE), true);
+                timePickerDialog.show(getFragmentManager(), "time_picker_dialog_fragment");
             }
         });
 
@@ -894,29 +898,22 @@ private void finish() {
 		}
 	}
 
-	/**
-	 * Callback when the date is set in the {@link DatePickerDialog}
-	 */
-	@Override
-	public void onDateSet(DatePicker view, int year, int monthOfYear,
-			int dayOfMonth) {
-		Calendar cal = new GregorianCalendar(year, monthOfYear, dayOfMonth);
-		mDateTextView.setText(DATE_FORMATTER.format(cal.getTime()));
-		mDate.set(Calendar.YEAR, year);
-		mDate.set(Calendar.MONTH, monthOfYear);
-		mDate.set(Calendar.DAY_OF_MONTH, dayOfMonth);
-	}
+    @Override
+    public void onDateSet(CalendarDatePickerDialog calendarDatePickerDialog, int year, int monthOfYear, int dayOfMonth) {
+        Calendar cal = new GregorianCalendar(year, monthOfYear, dayOfMonth);
+        mDateTextView.setText(DATE_FORMATTER.format(cal.getTime()));
+        mDate.set(Calendar.YEAR, year);
+        mDate.set(Calendar.MONTH, monthOfYear);
+        mDate.set(Calendar.DAY_OF_MONTH, dayOfMonth);
+    }
 
-	/**
-	 * Callback when the time is set in the {@link TimePickerDialog}
-	 */
-	@Override
-	public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
-		Calendar cal = new GregorianCalendar(0, 0, 0, hourOfDay, minute);
-		mTimeTextView.setText(TIME_FORMATTER.format(cal.getTime()));
-		mTime.set(Calendar.HOUR_OF_DAY, hourOfDay);
-		mTime.set(Calendar.MINUTE, minute);
-	}
+    @Override
+    public void onTimeSet(RadialTimePickerDialog radialTimePickerDialog, int hourOfDay, int minute) {
+        Calendar cal = new GregorianCalendar(0, 0, 0, hourOfDay, minute);
+        mTimeTextView.setText(TIME_FORMATTER.format(cal.getTime()));
+        mTime.set(Calendar.HOUR_OF_DAY, hourOfDay);
+        mTime.set(Calendar.MINUTE, minute);
+    }
 
 	/**
 	 * Strips formatting from a currency string.
