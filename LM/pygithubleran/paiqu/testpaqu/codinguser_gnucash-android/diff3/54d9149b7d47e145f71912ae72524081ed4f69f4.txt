From 54d9149b7d47e145f71912ae72524081ed4f69f4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Wed, 23 Nov 2016 18:11:12 +0100
Subject: [PATCH] Remove Currency from the interface of Money.

Commodity should be used in place of Currency, as it's a superset. This
is just a step in the migration process.
---
 .../android/db/adapter/AccountsDbAdapter.java      | 24 ++++++++++++++++++++++
 .../main/java/org/gnucash/android/model/Money.java | 10 +--------
 .../main/java/org/gnucash/android/model/Split.java |  5 +++--
 .../org/gnucash/android/model/Transaction.java     |  9 ++++----
 .../android/ui/budget/BudgetDetailFragment.java    |  4 ++--
 .../android/ui/budget/BudgetListFragment.java      |  8 ++++----
 .../ui/transaction/SplitEditorFragment.java        |  2 +-
 .../ui/transaction/TransactionDetailActivity.java  |  3 ++-
 .../ui/transaction/TransactionFormFragment.java    |  2 +-
 .../dialog/TransferFundsDialogFragment.java        |  4 ++--
 .../test/unit/db/TransactionsDbAdapterTest.java    |  2 +-
 .../gnucash/android/test/unit/model/MoneyTest.java |  2 +-
 12 files changed, 46 insertions(+), 29 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index d37d85b8..651f1a73 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -613,6 +613,20 @@ public String getImbalanceAccountUID(Currency currency){
     }
 
     /**
+     * Returns the GUID of the imbalance account for the commodity
+     *
+     * <p>This method will not create the imbalance account if it doesn't exist</p>
+     *
+     * @param commodity Commodity for the imbalance account
+     * @return GUID of the account or null if the account doesn't exist yet
+     * @see #getOrCreateImbalanceAccountUID(java.util.Currency)
+     */
+    public String getImbalanceAccountUID(Commodity commodity){
+        String imbalanceAccountName = getImbalanceAccountName(commodity);
+        return findAccountUidByFullName(imbalanceAccountName);
+    }
+
+    /**
      * Creates the account with the specified name and returns its unique identifier.
      * <p>If a full hierarchical account name is provided, then the whole hierarchy is created and the
      * unique ID of the last account (at bottom) of the hierarchy is returned</p>
@@ -1177,6 +1191,16 @@ public static String getImbalanceAccountName(Currency currency){
     }
 
     /**
+     * Returns the imbalance account where to store transactions which are not double entry.
+     *
+     * @param commodity Commodity of the transaction
+     * @return Imbalance account name
+     */
+    public static String getImbalanceAccountName(Commodity commodity){
+        return getImbalanceAccountPrefix() + commodity.getCurrencyCode();
+    }
+
+    /**
      * Get the name of the default account for opening balances for the current locale.
      * For the English locale, it will be "Equity:Opening Balances"
      * @return Fully qualified account name of the opening balances account
diff --git a/app/src/main/java/org/gnucash/android/model/Money.java b/app/src/main/java/org/gnucash/android/model/Money.java
index ef7cec86..8794471d 100644
--- a/app/src/main/java/org/gnucash/android/model/Money.java
+++ b/app/src/main/java/org/gnucash/android/model/Money.java
@@ -114,7 +114,7 @@ public Money(BigDecimal amount, Commodity commodity){
 	/**
 	 * Overloaded constructor.
 	 * Accepts strings as arguments and parses them to create the Money object
-	 * @param amount Numrical value of the Money
+	 * @param amount Numerical value of the Money
 	 * @param currencyCode Currency code as specified by ISO 4217
 	 */
 	public Money(String amount, String currencyCode){
@@ -156,14 +156,6 @@ public static Money createZeroInstance(@NonNull String currencyCode){
     }
 
 	/**
-	 * Returns the currency of the money object
-	 * @return {@link Currency} of the money value
-	 */
-	public Currency getCurrency() {
-		return Currency.getInstance(mCommodity.getCurrencyCode());
-	}
-
-	/**
 	 * Returns the commodity used by the Money
 	 * @return Instance of commodity
 	 */
diff --git a/app/src/main/java/org/gnucash/android/model/Split.java b/app/src/main/java/org/gnucash/android/model/Split.java
index a3101e47..07477a40 100644
--- a/app/src/main/java/org/gnucash/android/model/Split.java
+++ b/app/src/main/java/org/gnucash/android/model/Split.java
@@ -392,8 +392,9 @@ public String toString() {
     public String toCsv(){
         String sep = ";";
         //TODO: add reconciled state and date
-        String splitString = getUID() + sep + mValue.getNumerator() + sep + mValue.getDenominator() + sep + mValue.getCurrency().getCurrencyCode() + sep
-                + mQuantity.getNumerator() + sep + mQuantity.getDenominator() + sep + mQuantity.getCurrency().getCurrencyCode()
+        String splitString = getUID() + sep + mValue.getNumerator() + sep + mValue.getDenominator()
+                + sep + mValue.getCommodity().getCurrencyCode() + sep + mQuantity.getNumerator()
+                + sep + mQuantity.getDenominator() + sep + mQuantity.getCommodity().getCurrencyCode()
                 + sep + mTransactionUID + sep + mAccountUID + sep + mSplitType.name();
         if (mMemo != null){
             splitString = splitString + sep + mMemo;
diff --git a/app/src/main/java/org/gnucash/android/model/Transaction.java b/app/src/main/java/org/gnucash/android/model/Transaction.java
index 7ff34aa6..c98a0436 100644
--- a/app/src/main/java/org/gnucash/android/model/Transaction.java
+++ b/app/src/main/java/org/gnucash/android/model/Transaction.java
@@ -268,7 +268,7 @@ public Money getBalance(String accountUID){
     public Money getImbalance(){
         Money imbalance = Money.createZeroInstance(mCurrencyCode);
         for (Split split : mSplitList) {
-            if (!split.getQuantity().getCurrency().getCurrencyCode().equals(mCurrencyCode)) {
+            if (!split.getQuantity().getCommodity().getCurrencyCode().equals(mCurrencyCode)) {
                 // this may happen when importing XML exported from GNCA before 2.0.0
                 // these transactions should only be imported from XML exported from GNC desktop
                 // so imbalance split should not be generated for them
@@ -295,16 +295,15 @@ public Money getImbalance(){
     public static Money computeBalance(String accountUID, List<Split> splitList) {
         AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
         AccountType accountType = accountsDbAdapter.getAccountType(accountUID);
-        String currencyCode = accountsDbAdapter.getAccountCurrencyCode(accountUID);
-        Currency accountCurrency = Currency.getInstance(currencyCode);
+        String accountCurrencyCode = accountsDbAdapter.getAccountCurrencyCode(accountUID);
 
         boolean isDebitAccount = accountType.hasDebitNormalBalance();
-        Money balance = Money.createZeroInstance(currencyCode);
+        Money balance = Money.createZeroInstance(accountCurrencyCode);
         for (Split split : splitList) {
             if (!split.getAccountUID().equals(accountUID))
                 continue;
             Money absAmount;
-            if (split.getValue().getCurrency() == accountCurrency){
+            if (split.getValue().getCommodity().getCurrencyCode().equals(accountCurrencyCode)){
                 absAmount = split.getValue().abs();
             } else { //if this split belongs to the account, then either its value or quantity is in the account currency
                 absAmount = split.getQuantity().abs();
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
index e7074e01..8e8bbf7f 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
@@ -218,8 +218,8 @@ public void onBindViewHolder(BudgetAmountViewHolder holder, final int position)
             double budgetProgress = 0;
             if (projectedAmount.asDouble() != 0){
                 budgetProgress = spentAmount.asBigDecimal().divide(projectedAmount.asBigDecimal(),
-                        spentAmount.getCurrency().getDefaultFractionDigits(), RoundingMode.HALF_EVEN)
-                        .doubleValue();
+                        spentAmount.getCommodity().getSmallestFractionDigits(),
+                        RoundingMode.HALF_EVEN).doubleValue();
             }
 
             holder.budgetIndicator.setProgress((int) (budgetProgress * 100));
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
index 9e15c9b4..c0057508 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
@@ -51,6 +51,7 @@
 import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.model.Budget;
 import org.gnucash.android.model.BudgetAmount;
+import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.Refreshable;
@@ -60,7 +61,6 @@
 
 import java.math.BigDecimal;
 import java.math.RoundingMode;
-import java.util.Currency;
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
@@ -231,13 +231,13 @@ public void onBindViewHolderCursor(BudgetViewHolder holder, Cursor cursor) {
             }
 
             Money budgetTotal = budget.getAmountSum();
-            Currency currency = budgetTotal.getCurrency();
-            String usedAmount = currency.getSymbol() + spentAmountValue+ " of "
+            Commodity commodity = budgetTotal.getCommodity();
+            String usedAmount = commodity.getSymbol() + spentAmountValue + " of "
                     + budgetTotal.formattedString();
             holder.budgetAmount.setText(usedAmount);
 
             double budgetProgress = spentAmountValue.divide(budgetTotal.asBigDecimal(),
-                    currency.getDefaultFractionDigits(), RoundingMode.HALF_EVEN)
+                    commodity.getSmallestFractionDigits(), RoundingMode.HALF_EVEN)
                     .doubleValue();
             holder.budgetIndicator.setProgress((int) (budgetProgress * 100));
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
index a2c0bd53..3520cb8a 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
@@ -274,7 +274,7 @@ public void onClick(View view) {
             if (split != null) {
                 splitAmountEditText.setCommodity(split.getValue().getCommodity());
                 splitAmountEditText.setValue(split.getFormattedValue().asBigDecimal());
-                splitCurrencyTextView.setText(split.getValue().getCurrency().getSymbol());
+                splitCurrencyTextView.setText(split.getValue().getCommodity().getSymbol());
                 splitMemoEditText.setText(split.getMemo());
                 splitUidTextView.setText(split.getUID());
                 String splitAccountUID = split.getAccountUID();
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
index 7b969fb7..30afa6d2 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
@@ -130,7 +130,8 @@ private void bindViews(){
         LayoutInflater inflater = LayoutInflater.from(this);
         int index = 0;
         for (Split split : transaction.getSplits()) {
-            if (!useDoubleEntry && split.getAccountUID().equals(accountsDbAdapter.getImbalanceAccountUID(split.getValue().getCurrency()))){
+            if (!useDoubleEntry && split.getAccountUID().equals(
+                    accountsDbAdapter.getImbalanceAccountUID(split.getValue().getCommodity()))) {
                 //do now show imbalance accounts for single entry use case
                 continue;
             }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 6e6f88f8..9689b5b8 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -472,7 +472,7 @@ private void initializeViewsWithTransaction(){
         if (mSplitsList.size() == 2){
             for (Split split : mSplitsList) {
                 if (split.getAccountUID().equals(mAccountUID)) {
-                    if (!split.getQuantity().getCurrency().equals(mTransaction.getCurrency())){
+                    if (!split.getQuantity().getCommodity().equals(mTransaction.getCommodity())){
                         mSplitQuantity = split.getQuantity();
                     }
                 }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index d1148f6c..234dd892 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -99,7 +99,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         ButterKnife.bind(this, view);
 
         TransactionsActivity.displayBalance(mStartAmountLabel, mOriginAmount);
-        String fromCurrencyCode = mOriginAmount.getCurrency().getCurrencyCode();
+        String fromCurrencyCode = mOriginAmount.getCommodity().getCurrencyCode();
         mFromCurrencyLabel.setText(fromCurrencyCode);
         mToCurrencyLabel.setText(mTargetCurrencyCode);
         mConvertedAmountCurrencyLabel.setText(mTargetCurrencyCode);
@@ -198,7 +198,7 @@ private void transferFunds() {
         Price price = null;
 
         CommoditiesDbAdapter commoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
-        String originCommodityUID = commoditiesDbAdapter.getCommodityUID(mOriginAmount.getCurrency().getCurrencyCode());
+        String originCommodityUID = mOriginAmount.getCommodity().getUID();
         String targetCommodityUID = commoditiesDbAdapter.getCommodityUID(mTargetCurrencyCode);
 
         if (mExchangeRateRadioButton.isChecked()) {
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
index 245aa92b..881fc594 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
@@ -142,7 +142,7 @@ public void testComputeBalance(){
 
 		savedBalance = transaction.getBalance(bravoAccount.getUID());
 		assertThat(savedBalance.getNumerator()).isEqualTo(secondSplitAmount.negate().getNumerator());
-		assertThat(savedBalance.getCurrency()).isEqualTo(secondSplitAmount.getCurrency());
+		assertThat(savedBalance.getCommodity()).isEqualTo(secondSplitAmount.getCommodity());
 	}
 
 	@After
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java
index 4ad9496d..d1ba60ce 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java
@@ -172,7 +172,7 @@ public void testPrinting(){
 	public void validateImmutability(){
 		assertEquals(mHashcode, mMoneyInEur.hashCode());
 		assertEquals(amountString, mMoneyInEur.toPlainString());
-		assertEquals(CURRENCY_CODE, mMoneyInEur.getCurrency().getCurrencyCode());
+		assertEquals(CURRENCY_CODE, mMoneyInEur.getCommodity().getCurrencyCode());
 	}
 	
 }
