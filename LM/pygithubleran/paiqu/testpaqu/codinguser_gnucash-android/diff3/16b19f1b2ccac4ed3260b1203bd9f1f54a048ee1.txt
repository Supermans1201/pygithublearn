From cb4ec53905a03ec3d531db8226565163b94b2eef Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 24 Sep 2014 22:42:30 +0200
Subject: [PATCH 01/16] Added Crashlytics logging service to application TODO:
 scatter log statements all over the app

---
 app/AndroidManifest.xml                            |  3 +++
 app/crashlytics.properties                         |  3 +++
 app/pom.xml                                        | 24 ++++++++++++++++++++++
 app/res/values-de/strings.xml                      |  7 +++++++
 app/res/values-el/strings.xml                      |  7 +++++++
 app/res/values-es-rMX/strings.xml                  |  7 +++++++
 app/res/values-es/strings.xml                      |  7 +++++++
 app/res/values-fr/strings.xml                      |  7 +++++++
 app/res/values-hu/strings.xml                      |  7 +++++++
 app/res/values-it/strings.xml                      |  7 +++++++
 app/res/values-nb/strings.xml                      |  7 +++++++
 app/res/values-nl/strings.xml                      |  7 +++++++
 app/res/values-pt-rBR/strings.xml                  |  7 +++++++
 app/res/values-ru/strings.xml                      |  7 +++++++
 app/res/values-zh/strings.xml                      |  7 +++++++
 app/res/values/key_strings.xml                     |  1 +
 app/res/values/strings.xml                         |  7 +++++++
 app/res/xml/fragment_general_preferences.xml       |  4 +++-
 .../gnucash/android/app/GnuCashApplication.java    |  5 +++++
 .../org/gnucash/android/db/AccountsDbAdapter.java  |  6 +++---
 .../android/ui/account/AccountFormFragment.java    |  2 --
 .../android/ui/account/AccountsActivity.java       | 23 +++++++++++++++++++++
 pom.xml                                            | 14 +++++++++++++
 23 files changed, 170 insertions(+), 6 deletions(-)
 create mode 100644 app/crashlytics.properties

diff --git a/app/AndroidManifest.xml b/app/AndroidManifest.xml
index bb5e85fb..0ba555f4 100644
--- a/app/AndroidManifest.xml
+++ b/app/AndroidManifest.xml
@@ -42,6 +42,8 @@
         android:name="org.gnucash.android.permission.CREATE_ACCOUNT" />
     <uses-permission android:label="@string/permission_access_sdcard"
         android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+
+    <uses-permission android:name="android.permission.INTERNET"/>
 	    
     <application android:name="org.gnucash.android.app.GnuCashApplication"
         android:icon="@drawable/ic_launcher"
@@ -99,6 +101,7 @@
 		    <meta-data android:name="android.appwidget.provider"
 		               android:resource="@xml/transaction_appwidget_info" />
 		</receiver>
+        <meta-data android:name="com.crashlytics.ApiKey" android:value="46fe045d00d4ad8a71014c53567be3368e10bd64"/>
         
     </application>
 
diff --git a/app/crashlytics.properties b/app/crashlytics.properties
new file mode 100644
index 00000000..498cdbed
--- /dev/null
+++ b/app/crashlytics.properties
@@ -0,0 +1,3 @@
+#Contains API Secret used to validate your application. Commit to internal source control; avoid making secret public.
+#Wed Sep 24 21:59:38 CEST 2014
+apiSecret=bd4e83a9a4c35fbf1fbe8d9ccce9443eebb9d5835605f9d06767850e0f1e5b22
diff --git a/app/pom.xml b/app/pom.xml
index 1d5b9515..b69e8e4a 100644
--- a/app/pom.xml
+++ b/app/pom.xml
@@ -51,6 +51,11 @@
             <version>${viewpagerindicator.version}</version>
             <type>apklib</type>
         </dependency>
+        <dependency>
+            <groupId>com.crashlytics.android</groupId>
+            <artifactId>crashlytics</artifactId>
+            <version>[1.1.11,)</version>
+        </dependency>
     </dependencies>
     <build>
         <sourceDirectory>src</sourceDirectory>
@@ -59,6 +64,25 @@
                 <groupId>com.jayway.maven.plugins.android.generation2</groupId>
                 <artifactId>android-maven-plugin</artifactId>
             </plugin>
+            <plugin>
+                <groupId>com.crashlytics</groupId>
+                <artifactId>crashlytics-maven</artifactId>
+                <version>1.9.2</version>
+                <executions>
+                    <execution>
+                        <id>GenerateResources</id>
+                        <goals>
+                            <goal>GenerateResources</goal>
+                        </goals>
+                    </execution>
+                    <execution>
+                        <id>CleanupResources</id>
+                        <goals>
+                            <goal>CleanupResources</goal>
+                        </goals>
+                    </execution>
+                </executions>
+            </plugin>
         </plugins>
     </build>
 
diff --git a/app/res/values-de/strings.xml b/app/res/values-de/strings.xml
index 67a6cb88..53e0f5cc 100644
--- a/app/res/values-de/strings.xml
+++ b/app/res/values-de/strings.xml
@@ -419,4 +419,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/values-el/strings.xml b/app/res/values-el/strings.xml
index 39809ce5..a417db20 100644
--- a/app/res/values-el/strings.xml
+++ b/app/res/values-el/strings.xml
@@ -437,4 +437,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/values-es-rMX/strings.xml b/app/res/values-es-rMX/strings.xml
index 5c23111f..2a4c5533 100644
--- a/app/res/values-es-rMX/strings.xml
+++ b/app/res/values-es-rMX/strings.xml
@@ -422,4 +422,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/values-es/strings.xml b/app/res/values-es/strings.xml
index a8198e27..c6cf2468 100644
--- a/app/res/values-es/strings.xml
+++ b/app/res/values-es/strings.xml
@@ -419,4 +419,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/values-fr/strings.xml b/app/res/values-fr/strings.xml
index 6f3aa90e..17a7a421 100644
--- a/app/res/values-fr/strings.xml
+++ b/app/res/values-fr/strings.xml
@@ -419,4 +419,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/values-hu/strings.xml b/app/res/values-hu/strings.xml
index c80e7baf..a842ce08 100644
--- a/app/res/values-hu/strings.xml
+++ b/app/res/values-hu/strings.xml
@@ -423,4 +423,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
\ No newline at end of file
diff --git a/app/res/values-it/strings.xml b/app/res/values-it/strings.xml
index 347f3d1f..af7bd8fb 100644
--- a/app/res/values-it/strings.xml
+++ b/app/res/values-it/strings.xml
@@ -423,4 +423,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/values-nb/strings.xml b/app/res/values-nb/strings.xml
index 19e17c10..ef39adc6 100644
--- a/app/res/values-nb/strings.xml
+++ b/app/res/values-nb/strings.xml
@@ -419,4 +419,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/values-nl/strings.xml b/app/res/values-nl/strings.xml
index ed59b268..5407cff5 100644
--- a/app/res/values-nl/strings.xml
+++ b/app/res/values-nl/strings.xml
@@ -424,4 +424,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/values-pt-rBR/strings.xml b/app/res/values-pt-rBR/strings.xml
index 9189aa36..0468c147 100644
--- a/app/res/values-pt-rBR/strings.xml
+++ b/app/res/values-pt-rBR/strings.xml
@@ -422,4 +422,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/values-ru/strings.xml b/app/res/values-ru/strings.xml
index 8ac7332c..1292ad44 100644
--- a/app/res/values-ru/strings.xml
+++ b/app/res/values-ru/strings.xml
@@ -423,4 +423,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/values-zh/strings.xml b/app/res/values-zh/strings.xml
index 87e2b5a3..a39cc8e7 100644
--- a/app/res/values-zh/strings.xml
+++ b/app/res/values-zh/strings.xml
@@ -415,4 +415,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/values/key_strings.xml b/app/res/values/key_strings.xml
index 6a716b60..0538ddd8 100644
--- a/app/res/values/key_strings.xml
+++ b/app/res/values/key_strings.xml
@@ -22,6 +22,7 @@
     <string name="key_create_default_accounts">create_default_accounts</string>
     <string name="key_restore_backup">restore_backup</string>
     <string name="key_save_opening_balances">save_opening_balances</string>
+    <string name="key_enable_crashlytics">enable_crashlytics</string>
 
     <string-array name="key_transaction_type_values">
         <item>CREDIT</item>
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index d7cffbd0..a2110f3f 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -439,4 +439,11 @@
     <string name="title_transaction_splits">Transaction splits</string>
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
+    <string name="title_enable_crashlytics">Enable Crash Logging</string>
+    <string name="label_enable">Enable</string>
+    <string name="msg_enable_crashlytics">By enabling logging (recommended) you can help improve the quality of the
+        GnuCash Android application.
+        Errors in the application will be logged and sent to the developers for analysis.
+        No user-identifiable information will be collected as part of this process!
+    </string>
 </resources>
diff --git a/app/res/xml/fragment_general_preferences.xml b/app/res/xml/fragment_general_preferences.xml
index 0ae77125..e36667a2 100644
--- a/app/res/xml/fragment_general_preferences.xml
+++ b/app/res/xml/fragment_general_preferences.xml
@@ -31,7 +31,9 @@
         <CheckBoxPreference android:key="@string/key_xml_ofx_header" android:summary="@string/summary_xml_ofx_header" android:title="@string/title_xml_ofx_header"/>
         <Preference android:summary="Restore accounts and transactions from the last backup" android:key="@string/key_restore_backup" android:title="Restore last backup" />
     </PreferenceCategory>
-    
+    <CheckBoxPreference android:title="@string/title_enable_crashlytics"
+                        android:summary="@string/msg_enable_crashlytics"
+                        android:key="@string/key_enable_crashlytics" />
     
 
 </PreferenceScreen>
\ No newline at end of file
diff --git a/app/src/org/gnucash/android/app/GnuCashApplication.java b/app/src/org/gnucash/android/app/GnuCashApplication.java
index f4add72a..bb4d4b10 100644
--- a/app/src/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/org/gnucash/android/app/GnuCashApplication.java
@@ -20,6 +20,7 @@
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
 import android.util.Log;
+import com.crashlytics.android.Crashlytics;
 import org.gnucash.android.R;
 
 import java.util.Currency;
@@ -47,6 +48,10 @@
     public void onCreate(){
         super.onCreate();
         GnuCashApplication.context = getApplicationContext();
+        //only start logging if user gave consent
+        if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean(getString(R.string.key_enable_crashlytics), false)) {
+            Crashlytics.start(this);
+        }
     }
 
     /**
diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index 98a79da0..ef3be385 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -23,9 +23,7 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteStatement;
 import android.text.TextUtils;
-
 import android.util.Log;
-import android.support.annotation.NonNull;
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.model.*;
@@ -1338,7 +1336,9 @@ public int deleteAllRecords(){
         return mDb.delete(AccountEntry.TABLE_NAME, null, null);
 	}
 
-    public int getTransactionMaxSplitNum(@NonNull String accountUID) {
+    //TODO: code documentation
+    public int getTransactionMaxSplitNum(String accountUID) {
+        //TODO: check null or add @notnull annotation
         Cursor cursor = mDb.query("trans_extra_info",
                 new String[]{"MAX(trans_split_count)"},
                 "trans_acct_t_uid IN ( SELECT DISTINCT " + TransactionEntry.TABLE_NAME + "_" + TransactionEntry.COLUMN_UID +
diff --git a/app/src/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/org/gnucash/android/ui/account/AccountFormFragment.java
index 1d8b6573..3f404a5d 100644
--- a/app/src/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -27,8 +27,6 @@
 import android.graphics.Color;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.widget.SimpleCursorAdapter;
 import android.text.TextUtils;
diff --git a/app/src/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
index e0ed799e..0ddd6f0d 100644
--- a/app/src/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
@@ -480,6 +480,29 @@ public void onClick(DialogInterface dialogInterface, int i) {
 
 		mDefaultAccountsDialog = builder.create();
 		mDefaultAccountsDialog.show();
+
+        //show dialog to get user consent for logging
+        new AlertDialog.Builder(this)
+                .setTitle(getString(R.string.title_enable_crashlytics))
+                .setMessage(getString(R.string.msg_enable_crashlytics))
+                .setPositiveButton(R.string.label_enable, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialogInterface, int i) {
+                        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(AccountsActivity.this);
+                        Editor editor = sharedPreferences.edit();
+                        editor.putBoolean(getString(R.string.key_enable_crashlytics), true);
+                        editor.commit();
+                    }
+                })
+                .setNegativeButton(R.string.btn_cancel, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialogInterface, int i) {
+                        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(AccountsActivity.this);
+                        Editor editor = sharedPreferences.edit();
+                        editor.putBoolean(getString(R.string.key_enable_crashlytics), false);
+                        editor.commit();
+                    }
+                }).create().show();
 	}
 
     /**
diff --git a/pom.xml b/pom.xml
index 18ad1671..901a2ea7 100644
--- a/pom.xml
+++ b/pom.xml
@@ -54,6 +54,20 @@
         </pluginManagement>
     </build>
 
+    <repositories>
+        <repository>
+            <id>crashlytics-repo</id>
+            <url>http://download.crashlytics.com/maven</url>
+        </repository>
+    </repositories>
+
+    <pluginRepositories>
+        <pluginRepository>
+            <id>crashlytics-plugin-repo</id>
+            <url>http://download.crashlytics.com/maven</url>
+        </pluginRepository>
+    </pluginRepositories>
+
     <issueManagement>
         <url>https://github.com/codinguser/gnucash-android/issues</url>
         <system>GitHub Issues</system>

From 0575ebdabd15af7acfcdc105f47828f84abc0601 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 23 Apr 2015 11:13:02 +0200
Subject: [PATCH 02/16] Fixed bugs in XML import and export

Fixed: scheduled action dates not imported from XML
Fixed: Scheduled service runs disabled scheduled actions
Fixed: Incorrect amount export for template transaction splits

Disclaimer: Importing template transaction amounts works on my machine
(and in my locale!)
---
 .../gnucash/android/db/TransactionsDbAdapter.java  | 11 ++++
 .../gnucash/android/export/xml/GncXmlExporter.java | 41 +++++++-------
 .../gnucash/android/export/xml/GncXmlHelper.java   | 40 +++++++++----
 .../gnucash/android/importer/GncXmlHandler.java    | 66 +++++++++++++---------
 .../gnucash/android/service/SchedulerService.java  |  3 +-
 5 files changed, 102 insertions(+), 59 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index 76a28599..b6e03e1c 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -500,6 +500,17 @@ public long getAllTransactionsCount() {
     }
 
     /**
+     * Returns the number of template transactions in the database
+     * @return Number of template transactions
+     */
+    public long getTemplateTransactionsCount(){
+        String sql = "SELECT COUNT(*) FROM " + TransactionEntry.TABLE_NAME
+                + " WHERE " + TransactionEntry.COLUMN_TEMPLATE + "=1";
+        SQLiteStatement statement = mDb.compileStatement(sql);
+        return statement.simpleQueryForLong();
+    }
+
+    /**
      * Returns a cursor to transactions whose name (UI: description) start with the <code>prefix</code>
      * <p>This method is used for autocomplete suggestions when creating new transactions. <br/>
      * The suggestions are either transactions which have at least one split with {@code accountUID} or templates.</p>
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index 0835a689..aa56b82f 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -44,7 +44,6 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Currency;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.TreeMap;
@@ -327,18 +326,18 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
                 // date posted, time which user put on the transaction
                 String strDate = GncXmlHelper.formatDate(cursor.getLong(cursor.getColumnIndexOrThrow("trans_time")));
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_DATE_POSTED);
-                xmlSerializer.startTag(null, GncXmlHelper.TAG_DATE);
+                xmlSerializer.startTag(null, GncXmlHelper.TAG_TS_DATE);
                 xmlSerializer.text(strDate);
-                xmlSerializer.endTag(null, GncXmlHelper.TAG_DATE);
+                xmlSerializer.endTag(null, GncXmlHelper.TAG_TS_DATE);
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_DATE_POSTED);
 
                 // date entered, time when the transaction was actually created
                 Timestamp timeEntered = Timestamp.valueOf(cursor.getString(cursor.getColumnIndexOrThrow("trans_date_posted")));
                 String dateEntered = GncXmlHelper.formatDate(timeEntered.getTime());
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_DATE_ENTERED);
-                xmlSerializer.startTag(null, GncXmlHelper.TAG_DATE);
+                xmlSerializer.startTag(null, GncXmlHelper.TAG_TS_DATE);
                 xmlSerializer.text(dateEntered);
-                xmlSerializer.endTag(null, GncXmlHelper.TAG_DATE);
+                xmlSerializer.endTag(null, GncXmlHelper.TAG_TS_DATE);
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_DATE_ENTERED);
 
                 // description
@@ -396,11 +395,11 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
             xmlSerializer.endTag(null, GncXmlHelper.TAG_RECONCILED_STATE);
             // value, in the transaction's currency
             String trxType = cursor.getString(cursor.getColumnIndexOrThrow("split_type"));
-            BigDecimal value = new BigDecimal(cursor.getString(cursor.getColumnIndexOrThrow("split_amount")));
-            value = value.multiply(denom);
+            BigDecimal splitAmount = new BigDecimal(cursor.getString(cursor.getColumnIndexOrThrow("split_amount")));
             String strValue = "0";
-            if (!exportTemplates) //when doing normal transaction export
-                    strValue = (trxType.equals("CREDIT") ? "-" : "") + value.stripTrailingZeros().toPlainString() + "/" + denomString;
+            if (!exportTemplates) { //when doing normal transaction export
+                strValue = (trxType.equals("CREDIT") ? "-" : "") + splitAmount.multiply(denom).stripTrailingZeros().toPlainString() + "/" + denomString;
+            }
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SPLIT_VALUE);
             xmlSerializer.text(strValue);
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SPLIT_VALUE);
@@ -441,7 +440,7 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
                 TransactionType type = TransactionType.valueOf(trxType);
                 slotKeys.add(type == TransactionType.CREDIT ? GncXmlHelper.KEY_CREDIT_FORMULA : GncXmlHelper.KEY_DEBIT_FORMULA);
                 slotTypes.add(GncXmlHelper.ATTR_VALUE_STRING);
-                slotValues.add(GncXmlHelper.getNumberFormatForTemplateSplits().format(value.doubleValue())); //FIXME: Check the proper formatting of the amount string here
+                slotValues.add(GncXmlHelper.formatTemplateSplitAmount(splitAmount));
 
                 exportSlots(xmlSerializer, slotKeys, slotTypes, slotValues);
 
@@ -492,7 +491,7 @@ private void exportScheduledActions(XmlSerializer xmlSerializer) throws IOExcept
             xmlSerializer.text(enabled ? "y" : "n");
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_ENABLED);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_AUTO_CREATE);
-            xmlSerializer.text("y");
+            xmlSerializer.text("n"); //we do not want transactions auto-created on the desktop.
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_AUTO_CREATE);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_AUTO_CREATE_NOTIFY);
             xmlSerializer.text("n"); //TODO: if we ever support notifying before creating a scheduled transaction, then update this
@@ -510,8 +509,9 @@ private void exportScheduledActions(XmlSerializer xmlSerializer) throws IOExcept
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_INSTANCE_COUNT);
 
             //start date
-            long startTime = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_START_TIME));
-            serializeDate(xmlSerializer, GncXmlHelper.TAG_SX_START, startTime);
+            String createdTimestamp = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_CREATED_AT));
+            long scheduleStartTime = Timestamp.valueOf(createdTimestamp).getTime();
+            serializeDate(xmlSerializer, GncXmlHelper.TAG_SX_START, scheduleStartTime);
 
             long lastRunTime = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_LAST_RUN));
             if (lastRunTime > 0){
@@ -559,7 +559,8 @@ private void exportScheduledActions(XmlSerializer xmlSerializer) throws IOExcept
             xmlSerializer.text(periodType.name().toLowerCase());
             xmlSerializer.endTag(null, GncXmlHelper.TAG_RX_PERIOD_TYPE);
 
-            serializeDate(xmlSerializer, GncXmlHelper.TAG_RX_START, startTime);
+            long recurrenceStartTime = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_START_TIME));
+            serializeDate(xmlSerializer, GncXmlHelper.TAG_RX_START, recurrenceStartTime);
 
             xmlSerializer.endTag(null, GncXmlHelper.TAG_RECURRENCE);
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_SCHEDULE);
@@ -613,7 +614,7 @@ public void generateExport(Writer writer) throws ExporterException{
             }
             // book count
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COUNT_DATA);
-            xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_CD_TYPE, "book");
+            xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_CD_TYPE, GncXmlHelper.ATTR_VALUE_BOOK);
             xmlSerializer.text("1");
             xmlSerializer.endTag(null, GncXmlHelper.TAG_COUNT_DATA);
             // book
@@ -654,11 +655,11 @@ public void generateExport(Writer writer) throws ExporterException{
             exportTransactions(xmlSerializer, false);
 
             //transaction templates
-            //TODO: do not include this tag at all if there are no template transactions
-            xmlSerializer.startTag(null, GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS);
-            exportTransactions(xmlSerializer, true);
-            xmlSerializer.endTag(null, GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS);
-
+            if (mTransactionsDbAdapter.getTemplateTransactionsCount() > 0) {
+                xmlSerializer.startTag(null, GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS);
+                exportTransactions(xmlSerializer, true);
+                xmlSerializer.endTag(null, GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS);
+            }
             //scheduled actions
             exportScheduledActions(xmlSerializer);
 
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
index bc490ad5..818e9923 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
@@ -17,6 +17,8 @@
 
 package org.gnucash.android.export.xml;
 
+import android.support.annotation.NonNull;
+
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.TransactionType;
@@ -39,7 +41,7 @@
  * @author Yongxin Wang <fefe.wyx@gmail.com>
  */
 public abstract class GncXmlHelper {
-    public static final String TAG_PREFIX           = "gnc:";
+    public static final String TAG_GNC_PREFIX       = "gnc:";
 
     public static final String ATTR_KEY_CD_TYPE     = "cd:type";
     public static final String ATTR_KEY_TYPE        = "type";
@@ -77,7 +79,7 @@
     public static final String TAG_TRX_ID           = "trn:id";
     public static final String TAG_TRX_CURRENCY     = "trn:currency";
     public static final String TAG_DATE_POSTED      = "trn:date-posted";
-    public static final String TAG_DATE             = "ts:date";
+    public static final String TAG_TS_DATE          = "ts:date";
     public static final String TAG_DATE_ENTERED     = "trn:date-entered";
     public static final String TAG_TRN_DESCRIPTION  = "trn:description";
     public static final String TAG_TRN_SPLITS       = "trn:splits";
@@ -119,10 +121,10 @@
     public static final String TAG_RX_START                 = "recurrence:start";
 
 
-    public static final String RECURRENCE_VERSION   = "1.0.0";
-    public static final String BOOK_VERSION         = "2.0.0";
-    public static final SimpleDateFormat TIME_FORMATTER = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z", Locale.US);
-    public static final SimpleDateFormat DATE_FORMATTER = new SimpleDateFormat("yyyy-MM-dd", Locale.US);
+    public static final String RECURRENCE_VERSION           = "1.0.0";
+    public static final String BOOK_VERSION                 = "2.0.0";
+    public static final SimpleDateFormat TIME_FORMATTER     = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z", Locale.US);
+    public static final SimpleDateFormat DATE_FORMATTER     = new SimpleDateFormat("yyyy-MM-dd", Locale.US);
 
     public static final String KEY_PLACEHOLDER              = "placeholder";
     public static final String KEY_COLOR                    = "color";
@@ -168,11 +170,23 @@ public static String formatMoney(Split split){
     }
 
     /**
+     * Parses the amounts in template transaction splits
+     * <p>This makes the assumption that the amount uses comma (,) as decimal separators</p>
+     * @param amountString String value of the amount.
+     * @return BigDecimal representation of the amount
+     */
+    public static BigDecimal parseTemplateSplitAmount(@NonNull String amountString){
+        amountString = amountString.replaceAll("\\.", ""); //first remove periods (thousandths separator)
+        amountString = amountString.replaceAll(",", "."); //replace decimal separator (,) with periods
+        return new BigDecimal(amountString);
+    }
+
+    /**
      * Parses amount strings from GnuCash XML into {@link java.math.BigDecimal}s
      * @param amountString String containing the amount
      * @return BigDecimal with numerical value
      */
-    public static BigDecimal parseMoney(String amountString) throws ParseException {
+    public static BigDecimal parseSplitAmount(String amountString) throws ParseException {
         int pos = amountString.indexOf("/");
         if (pos < 0)
         {
@@ -184,12 +198,14 @@ public static BigDecimal parseMoney(String amountString) throws ParseException {
     }
 
     /**
-     * Returns a {@link java.text.NumberFormat} for parsing or writing amounts in template splits
-     * @return NumberFormat object
+     * Format the amount in template splits.
+     * This format uses commas for decimal separation
+     * @param amount Amount to be formatted
+     * @return String representation of amount
      */
-    public static NumberFormat getNumberFormatForTemplateSplits(){
+    public static String formatTemplateSplitAmount(BigDecimal amount){
         //TODO: Check if GnuCash desktop always using this formatting or if it is device locale specific
-        return NumberFormat.getNumberInstance(Locale.GERMANY);
+        String value = amount.toPlainString();
+        return value.replaceAll("\\.", ",");
     }
-
 }
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 20f426dc..9531ea68 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -1,6 +1,6 @@
 /*
  * Copyright (c) 2013 - 2015 Ngewi Fet <ngewif@gmail.com>
- * Copyright (c) 2014 Yongxin Wang <fefe.wyx@gmail.com>
+ * Copyright (c) 2014 - 2015 Yongxin Wang <fefe.wyx@gmail.com>
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -172,6 +172,7 @@
     boolean mIsScheduledStart   = false;
     boolean mIsScheduledEnd     = false;
     boolean mIsLastRun          = false;
+    boolean mIsRecurrenceStart  = false;
 
     /**
      * Multiplier for the recurrence period type. e.g. period type of week and multiplier of 2 means bi-weekly
@@ -268,6 +269,9 @@ public void startElement(String uri, String localName,
             case GncXmlHelper.TAG_SX_LAST:
                 mIsLastRun = true;
                 break;
+            case GncXmlHelper.TAG_RX_START:
+                mIsRecurrenceStart = true;
+                break;
         }
     }
 
@@ -406,21 +410,15 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     mSplit.setAccountUID(characterString);
                     mInSplitAccountSlot = false;
                 } else if (mInTemplates && mInCreditFormulaSlot) {
-                    //FIXME: Formatting of amounts is broken
-                    NumberFormat numberFormat = NumberFormat.getNumberInstance(Locale.GERMANY);
                     try {
-                        Number number = numberFormat.parse(characterString);
-                        Money amount = new Money(new BigDecimal(number.doubleValue()), mTransaction.getCurrency());
+                        Money amount = new Money(GncXmlHelper.parseTemplateSplitAmount(characterString),
+                                mTransaction.getCurrency());
                         mSplit.setAmount(amount.absolute());
                         mSplit.setType(TransactionType.CREDIT);
-                    } catch (ParseException e) {
-                        Log.e(LOG_TAG, "Error parsing template split amount. " + e.getMessage());
-                        e.printStackTrace();
                     } finally {
                         mInCreditFormulaSlot = false;
                     }
                 } else if (mInTemplates && mInDebitFormulaSlot) {
-                    //FIXME: Format of amount export is broken
                     try {
                         // TODO: test this. I do not have template transactions to test
                         // Going through double to decimal will lose accuracy.
@@ -428,7 +426,8 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                         // from Android SDK Ddoc:
                         //    new BigDecimal(0.1) is equal to 0.1000000000000000055511151231257827021181583404541015625. This happens as 0.1 cannot be represented exactly in binary.
                         //    To generate a big decimal instance which is equivalent to 0.1 use the BigDecimal(String) constructor.
-                        Money amount = new Money(new BigDecimal(characterString), mTransaction.getCurrency());
+                        Money amount = new Money(GncXmlHelper.parseTemplateSplitAmount(characterString),
+                                mTransaction.getCurrency());
                         mSplit.setAmount(amount.absolute());
                         mSplit.setType(TransactionType.DEBIT);
                     } catch (NumberFormatException e) {
@@ -446,7 +445,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
             case GncXmlHelper.TAG_TRN_DESCRIPTION:
                 mTransaction.setDescription(characterString);
                 break;
-            case GncXmlHelper.TAG_DATE:
+            case GncXmlHelper.TAG_TS_DATE:
                 try {
                     if (mIsDatePosted && mTransaction != null) {
                         mTransaction.setTime(GncXmlHelper.parseDate(characterString));
@@ -457,20 +456,6 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                         mTransaction.setCreatedTimestamp(timestamp);
                         mIsDateEntered = false;
                     }
-                    if (mIsScheduledStart && mScheduledAction != null) {
-                        mScheduledAction.setStartTime(GncXmlHelper.DATE_FORMATTER.parse(characterString).getTime());
-                        mIsScheduledStart = false;
-                    }
-
-                    if (mIsScheduledEnd && mScheduledAction != null) {
-                        mScheduledAction.setEndTime(GncXmlHelper.DATE_FORMATTER.parse(characterString).getTime());
-                        mIsScheduledEnd = false;
-                    }
-
-                    if (mIsLastRun && mScheduledAction != null) {
-                        mScheduledAction.setLastRun(GncXmlHelper.DATE_FORMATTER.parse(characterString).getTime());
-                        mIsLastRun = false;
-                    }
                 } catch (ParseException e) {
                     e.printStackTrace();
                     throw new SAXException("Unable to parse transaction time", e);
@@ -496,7 +481,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     } else {
                         mNegativeQuantity = false;
                     }
-                    mQuantity = GncXmlHelper.parseMoney(q);
+                    mQuantity = GncXmlHelper.parseSplitAmount(q);
                 } catch (ParseException e) {
                     e.printStackTrace();
                     throw new SAXException("Unable to parse money", e);
@@ -536,6 +521,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
             case GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS:
                 mInTemplates = false;
                 break;
+
             // ========================= PROCESSING SCHEDULED ACTIONS ==================================
             case GncXmlHelper.TAG_SX_ID:
                 mScheduledAction.setUID(characterString);
@@ -560,6 +546,34 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                 periodType.setMultiplier(mRecurrenceMultiplier);
                 mScheduledAction.setPeriod(periodType);
                 break;
+            case GncXmlHelper.TAG_GDATE:
+                try {
+                    long date = GncXmlHelper.DATE_FORMATTER.parse(characterString).getTime();
+                    if (mIsScheduledStart && mScheduledAction != null) {
+                        mScheduledAction.setCreatedTimestamp(new Timestamp(date));
+                        mIsScheduledStart = false;
+                    }
+
+                    if (mIsScheduledEnd && mScheduledAction != null) {
+                        mScheduledAction.setEndTime(date);
+                        mIsScheduledEnd = false;
+                    }
+
+                    if (mIsLastRun && mScheduledAction != null) {
+                        mScheduledAction.setLastRun(date);
+                        mIsLastRun = false;
+                    }
+
+                    if (mIsRecurrenceStart && mScheduledAction != null){
+                        mScheduledAction.setStartTime(date);
+                        mIsRecurrenceStart = false;
+                    }
+                } catch (ParseException e) {
+                    Log.e(LOG_TAG, e.getMessage());
+                    e.printStackTrace();
+                    throw new SAXException("Unable to parse scheduled action dates", e);
+                }
+                break;
             case GncXmlHelper.TAG_SX_TEMPL_ACCOUNT:
                 mScheduledAction.setActionUID(mTemplateAccountToTransactionMap.get(characterString));
                 break;
diff --git a/app/src/main/java/org/gnucash/android/service/SchedulerService.java b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
index 02b15d6b..e4a1d22d 100644
--- a/app/src/main/java/org/gnucash/android/service/SchedulerService.java
+++ b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
@@ -76,7 +76,8 @@ protected void onHandleIntent(Intent intent) {
                     || (scheduledAction.getExecutionCount() < scheduledAction.getTotalFrequency()) //or the number of scheduled runs
                     || (endTime == 0 && scheduledAction.getTotalFrequency() == 0)) //or the action is to run forever
                     && ((lastRun + period) <= now)  //one period has passed since last execution
-                    && scheduledAction.getStartTime() <= now ){ //the start time has arrived
+                    && scheduledAction.getStartTime() <= now
+                    && scheduledAction.isEnabled()){ //the start time has arrived
                 executeScheduledEvent(scheduledAction);
             }
         }

From 7a37a70f5907d12168a3054c69c43a63fb1efa94 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 23 Apr 2015 13:57:46 +0200
Subject: [PATCH 03/16] Set as default handler for .gnucash and .gnca files

Fixed: crash when importing backup scheduled actions
---
 app/src/main/AndroidManifest.xml                   | 19 ++++++++++++
 .../gnucash/android/export/xml/GncXmlExporter.java |  2 +-
 .../gnucash/android/importer/GncXmlHandler.java    |  9 ++++--
 .../gnucash/android/importer/GncXmlImporter.java   |  3 +-
 .../gnucash/android/importer/ImportAsyncTask.java  |  2 +-
 .../android/ui/account/AccountsActivity.java       | 36 ++++++++++++++++++++--
 6 files changed, 62 insertions(+), 9 deletions(-)

diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index ee6fe345..9a7ff630 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -57,11 +57,30 @@
         android:theme="@style/Theme.Sherlock.Light.DarkActionBar">
         <activity
             android:name=".ui.account.AccountsActivity"
+            android:launchMode="singleTask"
             android:label="@string/app_name">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+                <action android:name="android.intent.action.EDIT" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data android:host="*" android:mimeType="*/*" android:pathPattern=".*\\.gnucash" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+                <action android:name="android.intent.action.EDIT" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data android:host="*" android:mimeType="*/*" android:pathPattern=".*\\.gnca" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+                <action android:name="android.intent.action.EDIT" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data android:host="*" android:mimeType="*/*" android:pathPattern=".*\\.gnca.zip" />
+            </intent-filter>
         </activity>
         <activity
             android:name=".ui.passcode.PasscodeLockScreenActivity"
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index aa56b82f..5b56abb3 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -396,7 +396,7 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
             // value, in the transaction's currency
             String trxType = cursor.getString(cursor.getColumnIndexOrThrow("split_type"));
             BigDecimal splitAmount = new BigDecimal(cursor.getString(cursor.getColumnIndexOrThrow("split_amount")));
-            String strValue = "0";
+            String strValue = "0/" + denomString;
             if (!exportTemplates) { //when doing normal transaction export
                 strValue = (trxType.equals("CREDIT") ? "-" : "") + splitAmount.multiply(denom).stripTrailingZeros().toPlainString() + "/" + denomString;
             }
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 9531ea68..d293e453 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -40,15 +40,14 @@
 
 import java.math.BigDecimal;
 import java.sql.Timestamp;
-import java.text.NumberFormat;
 import java.text.ParseException;
 import java.util.ArrayList;
 import java.util.Currency;
 import java.util.HashMap;
 import java.util.List;
-import java.util.Locale;
 import java.util.Map;
 import java.util.Stack;
+import java.util.UUID;
 import java.util.regex.Pattern;
 
 /**
@@ -575,7 +574,11 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                 }
                 break;
             case GncXmlHelper.TAG_SX_TEMPL_ACCOUNT:
-                mScheduledAction.setActionUID(mTemplateAccountToTransactionMap.get(characterString));
+                if (mScheduledAction.getActionType() == ScheduledAction.ActionType.TRANSACTION) {
+                    mScheduledAction.setActionUID(mTemplateAccountToTransactionMap.get(characterString));
+                } else {
+                    mScheduledAction.setActionUID(UUID.randomUUID().toString().replaceAll("-",""));
+                }
                 break;
             case GncXmlHelper.TAG_SCHEDULED_ACTION:
                 mScheduledActionsList.add(mScheduledAction);
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
index fbf2ce6b..92b9de74 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
@@ -65,10 +65,9 @@ public static void parse(SQLiteDatabase db, InputStream gncXmlInputStream) throw
 
     /**
      * Parse GnuCash XML input and populates the database
-     * @param context Application context
      * @param gncXmlInputStream InputStream source of the GnuCash XML file
      */
-    public static void parse(Context context, InputStream gncXmlInputStream) throws ParserConfigurationException, SAXException, IOException {
+    public static void parse(InputStream gncXmlInputStream) throws ParserConfigurationException, SAXException, IOException {
         SAXParserFactory spf = SAXParserFactory.newInstance();
         SAXParser sp = spf.newSAXParser();
         XMLReader xr = sp.getXMLReader();
diff --git a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
index 864d076d..c7230441 100644
--- a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
@@ -67,7 +67,7 @@ protected void onPreExecute() {
     @Override
     protected Boolean doInBackground(InputStream... inputStreams) {
         try {
-            GncXmlImporter.parse(context, inputStreams[0]);
+            GncXmlImporter.parse(inputStreams[0]);
         } catch (Exception exception){
             exception.printStackTrace();
             final String err_msg = exception.getLocalizedMessage();
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index d505f361..b4079bcc 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -27,6 +27,7 @@
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager.NameNotFoundException;
 import android.content.res.Resources;
+import android.net.Uri;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.v4.app.DialogFragment;
@@ -52,6 +53,8 @@
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.export.ExportDialogFragment;
+import org.gnucash.android.export.xml.GncXmlExporter;
+import org.gnucash.android.importer.GncXmlImporter;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.service.SchedulerService;
@@ -65,6 +68,7 @@
 import org.gnucash.android.ui.util.Refreshable;
 import org.gnucash.android.ui.util.TaskDelegate;
 
+import java.io.FileNotFoundException;
 import java.io.InputStream;
 import java.util.Arrays;
 import java.util.Currency;
@@ -221,12 +225,15 @@ public void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_accounts);
         super.onCreate(savedInstanceState);
 
+        final Intent intent = getIntent();
+        handleOpenFileIntent(intent);
+
         init();
 
         mPager = (ViewPager) findViewById(R.id.pager);
         TitlePageIndicator titlePageIndicator = (TitlePageIndicator) findViewById(R.id.titles);
 
-        final Intent intent = getIntent();
+
         String action = intent.getAction();
         if (action != null && action.equals(Intent.ACTION_INSERT_OR_EDIT)) {
             //enter account creation/edit mode if that was specified
@@ -254,11 +261,36 @@ public void onCreate(Bundle savedInstanceState) {
 
 	}
 
+    /**
+     * Handles the case where another application has selected to open a (.gnucash or .gnca) file with this app
+     * @param intent
+     */
+    private void handleOpenFileIntent(Intent intent) {
+        //when someone launches the app to view a (.gnucash or .gnca) file
+        Uri data = intent.getData();
+        if (data != null){
+            GncXmlExporter.createBackup();
+
+            intent.setData(null);
+            InputStream accountInputStream = null;
+            try {
+                accountInputStream = getContentResolver().openInputStream(data);
+                new ImportAsyncTask(this).execute(accountInputStream);
+            } catch (FileNotFoundException e) {
+                e.printStackTrace();
+            } finally {
+                removeFirstRunFlag();
+            }
+        }
+    }
+
     @Override
     protected void onNewIntent(Intent intent) {
         super.onNewIntent(intent);
         int index = intent.getIntExtra(EXTRA_TAB_INDEX, INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT);
         setTab(index);
+
+        handleOpenFileIntent(intent);
     }
 
     /**
@@ -583,7 +615,7 @@ public void accountSelected(String accountUID) {
 	private void removeFirstRunFlag(){
 		Editor editor = PreferenceManager.getDefaultSharedPreferences(this).edit();
 		editor.putBoolean(getString(R.string.key_first_run), false);
-		editor.commit();
+		editor.apply();
 	}
 
 }
\ No newline at end of file

From 2ff7ed99a9f5086fe98a55b7b957b5f0c8e68fc2 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 23 Apr 2015 15:17:20 +0200
Subject: [PATCH 04/16] Fixed: crash when first authorizing Google Drive

Added "Open..." to navigation drawer menu
Extracted strings for localization (nav drawer)
---
 .../android/export/ExportDialogFragment.java       |  8 +--
 .../gnucash/android/importer/GncXmlHandler.java    |  6 --
 .../org/gnucash/android/ui/BaseDrawerActivity.java | 64 +++++++++++-----------
 .../android/ui/account/AccountsActivity.java       |  2 +-
 .../android/ui/settings/SettingsActivity.java      |  3 +-
 .../ui/transaction/TransactionFormFragment.java    |  4 +-
 app/src/main/res/values-de/strings.xml             |  6 ++
 app/src/main/res/values-el/strings.xml             |  6 ++
 app/src/main/res/values-es-rMX/strings.xml         |  6 ++
 app/src/main/res/values-es/strings.xml             |  6 ++
 app/src/main/res/values-fr/strings.xml             |  6 ++
 app/src/main/res/values-hu/strings.xml             |  6 ++
 app/src/main/res/values-it/strings.xml             |  6 ++
 app/src/main/res/values-nb/strings.xml             |  6 ++
 app/src/main/res/values-nl/strings.xml             |  6 ++
 app/src/main/res/values-pt-rBR/strings.xml         |  6 ++
 app/src/main/res/values-ru/strings.xml             |  6 ++
 app/src/main/res/values-zh/strings.xml             |  6 ++
 app/src/main/res/values/strings.xml                |  6 ++
 19 files changed, 117 insertions(+), 48 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java b/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java
index a2c87857..23d7ee8e 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java
@@ -124,8 +124,6 @@
 
 	private ExportParams.ExportTarget mExportTarget = ExportParams.ExportTarget.SD_CARD;
 
-	private GoogleApiClient mGoogleApiClient;
-
 
 	/**
 	 * Click listener for positive button in the dialog.
@@ -256,8 +254,8 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
 					case 2:
 						recurrenceOptionsView.setVisibility(View.VISIBLE);
 						mExportTarget = ExportParams.ExportTarget.GOOGLE_DRIVE;
-						mGoogleApiClient = SettingsActivity.getGoogleApiClient(getActivity());
-						mGoogleApiClient.connect();
+						SettingsActivity.mGoogleApiClient = SettingsActivity.getGoogleApiClient(getActivity());
+						SettingsActivity.mGoogleApiClient.connect();
 						break;
 					case 3:
 						mExportTarget = ExportParams.ExportTarget.SHARING;
@@ -372,7 +370,7 @@ public void onRecurrenceSet(String rrule) {
 	@Override
 	public void onActivityResult(int requestCode, int resultCode, Intent data) {
 		if (requestCode == SettingsActivity.REQUEST_RESOLVE_CONNECTION && resultCode == Activity.RESULT_OK) {
-			mGoogleApiClient.connect();
+			SettingsActivity.mGoogleApiClient.connect();
 		}
 	}
 
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index d293e453..15efa234 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -419,12 +419,6 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     }
                 } else if (mInTemplates && mInDebitFormulaSlot) {
                     try {
-                        // TODO: test this. I do not have template transactions to test
-                        // Going through double to decimal will lose accuracy.
-                        // NEVER use double for money.
-                        // from Android SDK Ddoc:
-                        //    new BigDecimal(0.1) is equal to 0.1000000000000000055511151231257827021181583404541015625. This happens as 0.1 cannot be represented exactly in binary.
-                        //    To generate a big decimal instance which is equivalent to 0.1 use the BigDecimal(String) constructor.
                         Money amount = new Money(GncXmlHelper.parseTemplateSplitAmount(characterString),
                                 mTransaction.getCurrency());
                         mSplit.setAmount(amount.absolute());
diff --git a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
index 972211c9..477a9428 100644
--- a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
@@ -34,6 +34,7 @@
 import com.commonsware.cwac.merge.MergeAdapter;
 
 import org.gnucash.android.R;
+import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.chart.ChartReportActivity;
@@ -104,30 +105,30 @@ public void onDrawerOpened(View drawerView) {
 
     private MergeAdapter createNavDrawerMergeAdapter() {
         //TODO: Localize nav drawer entries when features are finalized
-        ArrayList<String> accountNavOptions = new ArrayList<String>();
-        accountNavOptions.add("Favorites");
-//        accountNavOptions.add("Open...");
-        accountNavOptions.add("Reports");
+        ArrayList<String> accountNavOptions = new ArrayList<>();
+        accountNavOptions.add(getString(R.string.nav_menu_open));
+        accountNavOptions.add(getString(R.string.nav_menu_favorites));
+        accountNavOptions.add(getString(R.string.nav_menu_reports));
 
-        ArrayAdapter<String> accountsNavAdapter = new ArrayAdapter<String>(this,
+        ArrayAdapter<String> accountsNavAdapter = new ArrayAdapter<>(this,
                 R.layout.drawer_list_item, accountNavOptions);
 
         int titleColorGreen = getResources().getColor(R.color.title_green);
 
-        ArrayList<String> transactionsNavOptions = new ArrayList<String>();
-        transactionsNavOptions.add("Scheduled Transactions");
-        transactionsNavOptions.add("Export...");
+        ArrayList<String> transactionsNavOptions = new ArrayList<>();
+        transactionsNavOptions.add(getString(R.string.nav_menu_scheduled_transactions));
+        transactionsNavOptions.add(getString(R.string.nav_menu_export));
 
-        ArrayAdapter<String> transactionsNavAdapter = new ArrayAdapter<String>(this,
+        ArrayAdapter<String> transactionsNavAdapter = new ArrayAdapter<>(this,
                 R.layout.drawer_list_item, transactionsNavOptions);
 
         LayoutInflater inflater = getLayoutInflater();
         TextView accountHeader = (TextView) inflater.inflate(R.layout.drawer_section_header, null);
-        accountHeader.setText("Accounts");
+        accountHeader.setText(R.string.title_accounts);
         accountHeader.setTextColor(titleColorGreen);
 
         TextView transactionHeader = (TextView) inflater.inflate(R.layout.drawer_section_header, null);
-        transactionHeader.setText("Transactions");
+        transactionHeader.setText(R.string.title_transactions);
         transactionHeader.setTextColor(titleColorGreen);
         MergeAdapter mergeAdapter = new MergeAdapter();
         mergeAdapter.addView(accountHeader);
@@ -137,14 +138,14 @@ private MergeAdapter createNavDrawerMergeAdapter() {
 
         mergeAdapter.addView(inflater.inflate(R.layout.horizontal_line, null));
         TextView settingsHeader = (TextView) inflater.inflate(R.layout.drawer_section_header, null);
-        settingsHeader.setText("Settings");
+        settingsHeader.setText(R.string.title_settings);
         settingsHeader.setTextColor(titleColorGreen);
 
-        ArrayList<String> aboutNavOptions = new ArrayList<String>();
+        ArrayList<String> aboutNavOptions = new ArrayList<>();
 //        aboutNavOptions.add("Backup & Export");
-        aboutNavOptions.add("Settings");
+        aboutNavOptions.add(getString(R.string.nav_menu_settings));
         //TODO: add help view
-        ArrayAdapter<String> aboutNavAdapter = new ArrayAdapter<String>(this,
+        ArrayAdapter<String> aboutNavAdapter = new ArrayAdapter<>(this,
                 R.layout.drawer_list_item, aboutNavOptions);
 
         mergeAdapter.addView(settingsHeader);
@@ -179,7 +180,16 @@ public boolean onOptionsItemSelected(MenuItem item) {
      * */
     protected void selectItem(int position) {
         switch (position){
-            case 1: { //favorite accounts
+            case 1: { //Open... files
+                Intent pickIntent = new Intent(Intent.ACTION_GET_CONTENT);
+                pickIntent.setType("application/*");
+                Intent chooser = Intent.createChooser(pickIntent, getString(R.string.title_select_gnucash_xml_file));
+
+                startActivityForResult(chooser, AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE);
+            }
+            break;
+
+            case 2: { //favorite accounts
                 Intent intent = new Intent(this, AccountsActivity.class);
                 intent.putExtra(AccountsActivity.EXTRA_TAB_INDEX,
                         AccountsActivity.INDEX_FAVORITE_ACCOUNTS_FRAGMENT);
@@ -187,25 +197,12 @@ protected void selectItem(int position) {
                 startActivity(intent);
             }
                 break;
-/*
-
-            case 2: { //Open... files
-                //TODO: open/import GnuCash files
-                Intent pickIntent = new Intent(Intent.ACTION_GET_CONTENT);
-                pickIntent.setType("application*/
-/*");
-                Intent chooser = Intent.createChooser(pickIntent, "Select GnuCash account file");
-
-                startActivityForResult(chooser, AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE);
-            }
-                break;
-*/
 
-            case 2:
+            case 3:
                 startActivity(new Intent(this, ChartReportActivity.class));
                 break;
 
-            case 4: { //show scheduled transactions
+            case 5: { //show scheduled transactions
                 Intent intent = new Intent(this, ScheduledActionsActivity.class);
                 intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP);
                 intent.putExtra(ScheduledActionsActivity.EXTRA_DISPLAY_MODE,
@@ -214,12 +211,12 @@ protected void selectItem(int position) {
             }
                 break;
 
-            case 5:{
+            case 6:{
                 AccountsActivity.showExportDialog(this);
             }
                 break;
 
-            case 8: //Settings activity
+            case 9: //Settings activity
                 startActivity(new Intent(this, SettingsActivity.class));
                 break;
 
@@ -247,6 +244,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         switch (requestCode) {
             case AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE:
                 try {
+                    GncXmlExporter.createBackup();
                     InputStream accountInputStream = getContentResolver().openInputStream(data.getData());
                     new ImportAsyncTask(this).execute(accountInputStream);
                 } catch (FileNotFoundException e) {
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index b4079bcc..c16206e9 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -263,7 +263,7 @@ public void onCreate(Bundle savedInstanceState) {
 
     /**
      * Handles the case where another application has selected to open a (.gnucash or .gnca) file with this app
-     * @param intent
+     * @param intent Intent containing the data to be imported
      */
     private void handleOpenFileIntent(Intent intent) {
         //when someone launches the app to view a (.gnucash or .gnca) file
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index 188ae943..7add1723 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -118,7 +118,7 @@
     /**
      * Client for Google Drive Sync
      */
-    static GoogleApiClient mGoogleApiClient;
+    public static GoogleApiClient mGoogleApiClient;
 
     /**
 	 * Constructs the headers to display in the header list when the Settings activity is first opened
@@ -402,6 +402,7 @@ private void toggleGoogleDriveSync(){
         final String appFolderId = sharedPreferences.getString(getString(R.string.key_google_drive_app_folder_id), null);
         if (appFolderId != null){
             sharedPreferences.edit().remove(getString(R.string.key_google_drive_app_folder_id)).commit(); //commit (not apply) because we need it to be saved *now*
+            mGoogleApiClient.disconnect();
         } else {
             mGoogleApiClient.connect();
         }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index deb827e7..4675ee06 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -411,7 +411,7 @@ private void initializeViewsWithTransaction(){
 		mDate = mTime = cal;
 
         //TODO: deep copy the split list. We need a copy so we can modify with impunity
-        mSplitsList = new ArrayList<Split>(mTransaction.getSplits());
+        mSplitsList = new ArrayList<>(mTransaction.getSplits());
         mAmountEditText.setEnabled(mSplitsList.size() <= 2);
 
         //if there are more than two splits (which is the default for one entry), then
@@ -798,7 +798,7 @@ private void scheduleRecurringTransaction(String transactionUID) {
 
             Log.i("TransactionFormFragment", event.toString());
         }
-        Toast.makeText(getActivity(), "Scheduled transaction", Toast.LENGTH_SHORT).show();
+        Toast.makeText(getActivity(), "Scheduled recurring transaction", Toast.LENGTH_SHORT).show();
 
         //TODO: localize this toast string for all supported locales
 
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 7d9b2924..15729e0d 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -460,6 +460,12 @@
 	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
 	<string name="toast_install_file_manager">Install a file manager to select files</string>
 	<string name="title_select_backup_to_restore">Select backup to restore</string>
+	<string name="nav_menu_favorites">Favorites</string>
+	<string name="nav_menu_open">Open...</string>
+	<string name="nav_menu_reports">Reports</string>
+	<string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+	<string name="nav_menu_export">Export...</string>
+	<string name="nav_menu_settings">Settings</string>
 	<plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index aa1f1fac..d95c9499 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -478,6 +478,12 @@
 	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
 	<string name="toast_install_file_manager">Install a file manager to select files</string>
 	<string name="title_select_backup_to_restore">Select backup to restore</string>
+	<string name="nav_menu_favorites">Favorites</string>
+	<string name="nav_menu_open">Open...</string>
+	<string name="nav_menu_reports">Reports</string>
+	<string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+	<string name="nav_menu_export">Export...</string>
+	<string name="nav_menu_settings">Settings</string>
 	<plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index ff198fbe..a79c8f42 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -463,6 +463,12 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="nav_menu_favorites">Favorites</string>
+    <string name="nav_menu_open">Open...</string>
+    <string name="nav_menu_reports">Reports</string>
+    <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+    <string name="nav_menu_export">Export...</string>
+    <string name="nav_menu_settings">Settings</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 9b35ddec..ff3fcc95 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -461,6 +461,12 @@
 	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
 	<string name="toast_install_file_manager">Install a file manager to select files</string>
 	<string name="title_select_backup_to_restore">Select backup to restore</string>
+	<string name="nav_menu_favorites">Favorites</string>
+	<string name="nav_menu_open">Open...</string>
+	<string name="nav_menu_reports">Reports</string>
+	<string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+	<string name="nav_menu_export">Export...</string>
+	<string name="nav_menu_settings">Settings</string>
 	<plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index ebe64bd2..8342843c 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -460,6 +460,12 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="nav_menu_favorites">Favorites</string>
+    <string name="nav_menu_open">Open...</string>
+    <string name="nav_menu_reports">Reports</string>
+    <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+    <string name="nav_menu_export">Export...</string>
+    <string name="nav_menu_settings">Settings</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index 36d45267..3f31e32b 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -464,6 +464,12 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="nav_menu_favorites">Favorites</string>
+    <string name="nav_menu_open">Open...</string>
+    <string name="nav_menu_reports">Reports</string>
+    <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+    <string name="nav_menu_export">Export...</string>
+    <string name="nav_menu_settings">Settings</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index ea58a2b0..4bbc71b8 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -464,6 +464,12 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="nav_menu_favorites">Favorites</string>
+    <string name="nav_menu_open">Open...</string>
+    <string name="nav_menu_reports">Reports</string>
+    <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+    <string name="nav_menu_export">Export...</string>
+    <string name="nav_menu_settings">Settings</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index e5f8bd8d..cfe6902e 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -461,6 +461,12 @@
 	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
 	<string name="toast_install_file_manager">Install a file manager to select files</string>
 	<string name="title_select_backup_to_restore">Select backup to restore</string>
+	<string name="nav_menu_favorites">Favorites</string>
+	<string name="nav_menu_open">Open...</string>
+	<string name="nav_menu_reports">Reports</string>
+	<string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+	<string name="nav_menu_export">Export...</string>
+	<string name="nav_menu_settings">Settings</string>
 	<plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index 21859b90..0246c048 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -471,6 +471,12 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="nav_menu_favorites">Favorites</string>
+    <string name="nav_menu_open">Open...</string>
+    <string name="nav_menu_reports">Reports</string>
+    <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+    <string name="nav_menu_export">Export...</string>
+    <string name="nav_menu_settings">Settings</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 606ee978..59d0715c 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -463,6 +463,12 @@
 	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
 	<string name="toast_install_file_manager">Install a file manager to select files</string>
 	<string name="title_select_backup_to_restore">Select backup to restore</string>
+	<string name="nav_menu_favorites">Favorites</string>
+	<string name="nav_menu_open">Open...</string>
+	<string name="nav_menu_reports">Reports</string>
+	<string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+	<string name="nav_menu_export">Export...</string>
+	<string name="nav_menu_settings">Settings</string>
 	<plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 6800f983..268248f6 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -465,6 +465,12 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="nav_menu_favorites">Favorites</string>
+    <string name="nav_menu_open">Open...</string>
+    <string name="nav_menu_reports">Reports</string>
+    <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+    <string name="nav_menu_export">Export...</string>
+    <string name="nav_menu_settings">Settings</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="few">Every %d days</item>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index 4b44810f..70cc8ad5 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -460,6 +460,12 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="nav_menu_favorites">Favorites</string>
+    <string name="nav_menu_open">Open...</string>
+    <string name="nav_menu_reports">Reports</string>
+    <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+    <string name="nav_menu_export">Export...</string>
+    <string name="nav_menu_settings">Settings</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index fd868f39..a7664fa9 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -469,6 +469,12 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="nav_menu_favorites">Favorites</string>
+    <string name="nav_menu_open">Open...</string>
+    <string name="nav_menu_reports">Reports</string>
+    <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+    <string name="nav_menu_export">Export...</string>
+    <string name="nav_menu_settings">Settings</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>

From 835b4c01df2f4ba23e8c70df332299cd6c438627 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 23 Apr 2015 17:51:19 +0200
Subject: [PATCH 05/16] Bug fixes and optimization

Improve process of opening .gnucash files from other apps
---
 app/build.gradle                                              |  4 ++--
 .../org/gnucash/android/test/ui/AccountsActivityTest.java     |  2 +-
 app/src/main/AndroidManifest.xml                              |  1 -
 .../java/org/gnucash/android/ui/account/AccountsActivity.java | 11 ++++++-----
 .../gnucash/android/ui/transaction/TransactionsActivity.java  |  1 +
 5 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 592362f0..21126b41 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -45,12 +45,12 @@ android {
             applicationId 'org.gnucash.android.devel'
             testApplicationId 'org.gnucash.android.test.devel'
             resValue "string", "app_name", "GnuCash-devel"
-            versionName "${versionMajor}.${versionMinor}.${versionPatch}-dev${versionBuild} @rev ${gitSha()} - BuildTime ${buildTime()} "
+            versionName "${versionMajor}.${versionMinor}.${versionPatch}-dev${versionBuild} @rev ${gitSha()} - Built ${buildTime()} "
         }
 
         beta {
             resValue "string", "app_name", "GnuCash - beta"
-            versionName "${versionMajor}.${versionMinor}.${versionPatch}-beta${versionBuild} @rev ${gitSha()} - BuildTime ${buildTime()}"
+            versionName "${versionMajor}.${versionMinor}.${versionPatch}-beta${versionBuild} - Built: ${buildTime()}"
         }
 
         production {
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index a04a5fdb..94165b58 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -246,7 +246,7 @@ public void testDeleteAccount(){
 
         clickSherlockActionBarItem(R.id.context_menu_delete);
 
-        mSolo.clickOnView(mSolo.getView(android.R.id.button1));
+        mSolo.clickOnView(mSolo.getView(R.id.btn_save));
 
         mSolo.waitForDialogToClose(1000);
         mSolo.waitForText("Accounts");
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 9a7ff630..96b72c28 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -57,7 +57,6 @@
         android:theme="@style/Theme.Sherlock.Light.DarkActionBar">
         <activity
             android:name=".ui.account.AccountsActivity"
-            android:launchMode="singleTask"
             android:label="@string/app_name">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index c16206e9..f56cb232 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -153,6 +153,7 @@
 	 * Dialog which is shown to the user on first start prompting the user to create some accounts
 	 */
 	private AlertDialog mDefaultAccountsDialog;
+    private TitlePageIndicator mTitlePageIndicator;
 
 
     /**
@@ -231,14 +232,13 @@ public void onCreate(Bundle savedInstanceState) {
         init();
 
         mPager = (ViewPager) findViewById(R.id.pager);
-        TitlePageIndicator titlePageIndicator = (TitlePageIndicator) findViewById(R.id.titles);
-
+        mTitlePageIndicator = (TitlePageIndicator) findViewById(R.id.titles);
 
         String action = intent.getAction();
         if (action != null && action.equals(Intent.ACTION_INSERT_OR_EDIT)) {
             //enter account creation/edit mode if that was specified
             mPager.setVisibility(View.GONE);
-            titlePageIndicator.setVisibility(View.GONE);
+            mTitlePageIndicator.setVisibility(View.GONE);
 
             String accountUID = intent.getStringExtra(UxArgument.SELECTED_ACCOUNT_UID);
             if (accountUID != null)
@@ -251,7 +251,7 @@ public void onCreate(Bundle savedInstanceState) {
             //show the simple accounts list
             PagerAdapter mPagerAdapter = new AccountViewPagerAdapter(getSupportFragmentManager());
             mPager.setAdapter(mPagerAdapter);
-            titlePageIndicator.setViewPager(mPager);
+            mTitlePageIndicator.setViewPager(mPager);
 
             SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
             int lastTabIndex = preferences.getInt(LAST_OPEN_TAB_INDEX, INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT);
@@ -434,6 +434,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
      */
     private Intent createNewAccountIntent(){
         Intent addAccountIntent = new Intent(this, AccountsActivity.class);
+        addAccountIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         addAccountIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
         return addAccountIntent;
     }
@@ -595,7 +596,7 @@ public void importAccounts() {
     public static void start(Context context){
         Intent accountsActivityIntent = new Intent(context, AccountsActivity.class);
         accountsActivityIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
-        accountsActivityIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        accountsActivityIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_SINGLE_TOP);
         context.startActivity(accountsActivityIntent);
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
index 3d17af06..d243e645 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -487,6 +487,7 @@ public void onNewTransactionClick(View v){
      */
     public void onNewAccountClick(View v) {
         Intent addAccountIntent = new Intent(this, AccountsActivity.class);
+        addAccountIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         addAccountIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
         addAccountIntent.putExtra(UxArgument.PARENT_ACCOUNT_UID, mAccountUID);
         startActivityForResult(addAccountIntent, AccountsActivity.REQUEST_EDIT_ACCOUNT);

From 18a9eee313a234ee4cb693ce2dc7997677748ef8 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 23 Apr 2015 20:16:43 +0200
Subject: [PATCH 06/16] Fixed: migration code was broken

Added description to account table
String cleanup
---
 app/build.gradle                                   |   8 +
 .../org/gnucash/android/db/DatabaseHelper.java     | 198 +++++++++++++++++----
 .../org/gnucash/android/db/DatabaseSchema.java     |   1 +
 .../org/gnucash/android/db/MigrationHelper.java    |  23 +--
 app/src/main/res/values-nl/strings.xml             |   6 -
 app/src/main/res/values-zh/strings.xml             |   1 +
 6 files changed, 172 insertions(+), 65 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 21126b41..ecdd766b 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -27,6 +27,14 @@ android {
         versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
         versionName "${versionMajor}.${versionMinor}.${versionPatch}"
     }
+
+    applicationVariants.all { variant ->
+        variant.outputs.each { output ->
+            output.outputFile = new File(
+                    output.outputFile.parent, "GnucashAndroid_v${variant.versionName}.apk".replaceAll(":","-"))
+        }
+    }
+
     buildTypes {
         release {
             minifyEnabled false
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
index 329ea4f4..48990015 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
@@ -20,18 +20,22 @@
 import android.app.PendingIntent;
 import android.content.ContentValues;
 import android.content.Context;
+import android.content.Intent;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
 import android.util.Log;
 
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.export.Exporter;
+import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
 
+import java.io.File;
 import java.sql.Timestamp;
 
 import static org.gnucash.android.db.DatabaseSchema.AccountEntry;
@@ -66,6 +70,7 @@
 			+ AccountEntry.COLUMN_NAME 	            + " varchar(255) not null, "
 			+ AccountEntry.COLUMN_TYPE              + " varchar(255) not null, "
 			+ AccountEntry.COLUMN_CURRENCY          + " varchar(255) not null, "
+			+ AccountEntry.COLUMN_DESCRIPTION       + " varchar(255), "
             + AccountEntry.COLUMN_COLOR_CODE        + " varchar(255), "
             + AccountEntry.COLUMN_FAVORITE 		    + " tinyint default 0, "
             + AccountEntry.COLUMN_HIDDEN 		    + " tinyint default 0, "
@@ -271,30 +276,16 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
     private int upgradeDbToVersion8(SQLiteDatabase db) {
         Log.i(LOG_TAG, "Upgrading database to version 8");
         int oldVersion = 7;
+        new File(Exporter.BACKUP_FOLDER_PATH).mkdirs();
+        new File(Exporter.EXPORT_FOLDER_PATH).mkdirs();
         //start moving the files in background thread before we do the database stuff
         new Thread(MigrationHelper.moveExportedFilesToNewDefaultLocation).start();
 
         db.beginTransaction();
         try {
-            Log.i(LOG_TAG, "Adding hidden flag to accounts table");
-            String addHiddenFlagSqlToAccounts = "ALTER TABLE " + AccountEntry.TABLE_NAME +
-                    " ADD COLUMN " + AccountEntry.COLUMN_HIDDEN + " tinyint default 0";
-            db.execSQL(addHiddenFlagSqlToAccounts);
-
-            String addTemplatesToTransactions = "ALTER TABLE " + TransactionEntry.TABLE_NAME +
-                    " ADD COLUMN " + TransactionEntry.COLUMN_TEMPLATE + " tinyint default 0";
-            String addSchedxActionToTrns = "ALTER TABLE " + TransactionEntry.TABLE_NAME +
-                    " ADD COLUMN " + TransactionEntry.COLUMN_SCHEDX_ACTION_UID + " varchar(255)";
-            db.execSQL(addTemplatesToTransactions);
-            db.execSQL(addSchedxActionToTrns);
-
-            Log.i(LOG_TAG, "Adding created_at and modified_at columns to database tables");
-            MigrationHelper.createUpdatedAndModifiedColumns(db, AccountEntry.TABLE_NAME);
-            MigrationHelper.createUpdatedAndModifiedColumns(db, TransactionEntry.TABLE_NAME);
-            MigrationHelper.createUpdatedAndModifiedColumns(db, SplitEntry.TABLE_NAME);
-
-            Log.i(LOG_TAG, "Creating scheduled events table");
-            String createScheduledActions = "CREATE TABLE " + ScheduledActionEntry.TABLE_NAME + " ("
+
+            Log.i(LOG_TAG, "Creating scheduled actions table");
+            db.execSQL("CREATE TABLE " + ScheduledActionEntry.TABLE_NAME + " ("
                     + ScheduledActionEntry._ID                   + " integer primary key autoincrement, "
                     + ScheduledActionEntry.COLUMN_UID            + " varchar(255) not null UNIQUE, "
                     + ScheduledActionEntry.COLUMN_ACTION_UID    + " varchar(255) not null, "
@@ -309,15 +300,145 @@ private int upgradeDbToVersion8(SQLiteDatabase db) {
                     + ScheduledActionEntry.COLUMN_EXECUTION_COUNT+ " integer default 0, "
                     + ScheduledActionEntry.COLUMN_CREATED_AT     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
                     + ScheduledActionEntry.COLUMN_MODIFIED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP "
-                    + ");" + createUpdatedAtTrigger(ScheduledActionEntry.TABLE_NAME);
-            db.execSQL(createScheduledActions);
+                    + ");" + createUpdatedAtTrigger(ScheduledActionEntry.TABLE_NAME));
+
+
+            //==============================BEGIN TABLE MIGRATIONS ========================================
+            Log.i(LOG_TAG, "Migrating accounts table");
+            // backup transaction table
+            db.execSQL("ALTER TABLE " + AccountEntry.TABLE_NAME + " RENAME TO " + AccountEntry.TABLE_NAME + "_bak");
+            // create new transaction table
+            db.execSQL("CREATE TABLE " + AccountEntry.TABLE_NAME + " ("
+                    + AccountEntry._ID + " integer primary key autoincrement, "
+                    + AccountEntry.COLUMN_UID + " varchar(255) not null UNIQUE, "
+                    + AccountEntry.COLUMN_NAME + " varchar(255) not null, "
+                    + AccountEntry.COLUMN_TYPE + " varchar(255) not null, "
+                    + AccountEntry.COLUMN_CURRENCY + " varchar(255) not null, "
+                    + AccountEntry.COLUMN_DESCRIPTION + " varchar(255), "
+                    + AccountEntry.COLUMN_COLOR_CODE + " varchar(255), "
+                    + AccountEntry.COLUMN_FAVORITE + " tinyint default 0, "
+                    + AccountEntry.COLUMN_HIDDEN + " tinyint default 0, "
+                    + AccountEntry.COLUMN_FULL_NAME + " varchar(255), "
+                    + AccountEntry.COLUMN_PLACEHOLDER + " tinyint default 0, "
+                    + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " varchar(255), "
+                    + AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID + " varchar(255), "
+                    + AccountEntry.COLUMN_CREATED_AT + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + AccountEntry.COLUMN_MODIFIED_AT + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP "
+                    + ");" + createUpdatedAtTrigger(AccountEntry.TABLE_NAME));
+
+            // initialize new account table with data from old table
+            db.execSQL("INSERT INTO " + AccountEntry.TABLE_NAME + " ( "
+                            + AccountEntry._ID + ","
+                            + AccountEntry.COLUMN_UID + " , "
+                            + AccountEntry.COLUMN_NAME + " , "
+                            + AccountEntry.COLUMN_TYPE + " , "
+                            + AccountEntry.COLUMN_CURRENCY + " , "
+                            + AccountEntry.COLUMN_COLOR_CODE + " , "
+                            + AccountEntry.COLUMN_FAVORITE + " , "
+                            + AccountEntry.COLUMN_FULL_NAME + " , "
+                            + AccountEntry.COLUMN_PLACEHOLDER + " , "
+                            + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " , "
+                            + AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID
+                            + ") SELECT "
+                            + AccountEntry.TABLE_NAME + "_bak." + AccountEntry._ID + " , "
+                            + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_UID + " , "
+                            + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_NAME + " , "
+                            + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_TYPE + " , "
+                            + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_CURRENCY + " , "
+                            + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_COLOR_CODE + " , "
+                            + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_FAVORITE + " , "
+                            + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_FULL_NAME + " , "
+                            + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_PLACEHOLDER + " , "
+                            + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " , "
+                            + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID
+                            + " FROM " + AccountEntry.TABLE_NAME + "_bak;"
+            );
+
+            Log.i(LOG_TAG, "Migrating transactions table");
+            // backup transaction table
+            db.execSQL("ALTER TABLE " + TransactionEntry.TABLE_NAME + " RENAME TO " + TransactionEntry.TABLE_NAME + "_bak");
+            // create new transaction table
+            db.execSQL("CREATE TABLE " + TransactionEntry.TABLE_NAME + " ("
+                    + TransactionEntry._ID + " integer primary key autoincrement, "
+                    + TransactionEntry.COLUMN_UID + " varchar(255) not null UNIQUE, "
+                    + TransactionEntry.COLUMN_DESCRIPTION + " varchar(255), "
+                    + TransactionEntry.COLUMN_NOTES + " text, "
+                    + TransactionEntry.COLUMN_TIMESTAMP + " integer not null, "
+                    + TransactionEntry.COLUMN_EXPORTED + " tinyint default 0, "
+                    + TransactionEntry.COLUMN_TEMPLATE + " tinyint default 0, "
+                    + TransactionEntry.COLUMN_CURRENCY + " varchar(255) not null, "
+                    + TransactionEntry.COLUMN_SCHEDX_ACTION_UID + " varchar(255), "
+                    + TransactionEntry.COLUMN_CREATED_AT + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + TransactionEntry.COLUMN_MODIFIED_AT + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + "FOREIGN KEY (" + TransactionEntry.COLUMN_SCHEDX_ACTION_UID + ") REFERENCES " + ScheduledActionEntry.TABLE_NAME + " (" + ScheduledActionEntry.COLUMN_UID + ") ON DELETE SET NULL "
+                    + ");" + createUpdatedAtTrigger(TransactionEntry.TABLE_NAME));
+
+            // initialize new transaction table with data from old table
+            db.execSQL("INSERT INTO " + TransactionEntry.TABLE_NAME + " ( "
+                            + TransactionEntry._ID + " , "
+                            + TransactionEntry.COLUMN_UID + " , "
+                            + TransactionEntry.COLUMN_DESCRIPTION + " , "
+                            + TransactionEntry.COLUMN_NOTES + " , "
+                            + TransactionEntry.COLUMN_TIMESTAMP + " , "
+                            + TransactionEntry.COLUMN_EXPORTED + " , "
+                            + TransactionEntry.COLUMN_CURRENCY + " , "
+                            + TransactionEntry.COLUMN_TEMPLATE
+                            + ")  SELECT "
+                            + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry._ID + " , "
+                            + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_UID + " , "
+                            + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_DESCRIPTION + " , "
+                            + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_NOTES + " , "
+                            + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_TIMESTAMP + " , "
+                            + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_EXPORTED + " , "
+                            + TransactionEntry.TABLE_NAME + "_bak." + TransactionEntry.COLUMN_CURRENCY + " , "
+                            + " CASE WHEN " + TransactionEntry.TABLE_NAME + "_bak.recurrence_period > 0 THEN 1 ELSE 0 END "
+                            + " FROM " + TransactionEntry.TABLE_NAME + "_bak;"
+            );
+
+            Log.i(LOG_TAG, "Migrating splits table");
+            // backup transaction table
+            db.execSQL("ALTER TABLE " + SplitEntry.TABLE_NAME + " RENAME TO " + SplitEntry.TABLE_NAME + "_bak");
+            // create new split table
+            db.execSQL("CREATE TABLE " + SplitEntry.TABLE_NAME + " ("
+                    + SplitEntry._ID + " integer primary key autoincrement, "
+                    + SplitEntry.COLUMN_UID + " varchar(255) not null UNIQUE, "
+                    + SplitEntry.COLUMN_MEMO + " text, "
+                    + SplitEntry.COLUMN_TYPE + " varchar(255) not null, "
+                    + SplitEntry.COLUMN_AMOUNT + " varchar(255) not null, "
+                    + SplitEntry.COLUMN_ACCOUNT_UID + " varchar(255) not null, "
+                    + SplitEntry.COLUMN_TRANSACTION_UID + " varchar(255) not null, "
+                    + SplitEntry.COLUMN_CREATED_AT + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + SplitEntry.COLUMN_MODIFIED_AT + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + "FOREIGN KEY (" + SplitEntry.COLUMN_ACCOUNT_UID + ") REFERENCES " + AccountEntry.TABLE_NAME + " (" + AccountEntry.COLUMN_UID + ") ON DELETE CASCADE, "
+                    + "FOREIGN KEY (" + SplitEntry.COLUMN_TRANSACTION_UID + ") REFERENCES " + TransactionEntry.TABLE_NAME + " (" + TransactionEntry.COLUMN_UID + ") ON DELETE CASCADE "
+                    + ");" + createUpdatedAtTrigger(SplitEntry.TABLE_NAME));
+
+            // initialize new split table with data from old table
+            db.execSQL("INSERT INTO " + SplitEntry.TABLE_NAME + " ( "
+                            + SplitEntry._ID + " , "
+                            + SplitEntry.COLUMN_UID + " , "
+                            + SplitEntry.COLUMN_MEMO + " , "
+                            + SplitEntry.COLUMN_TYPE + " , "
+                            + SplitEntry.COLUMN_AMOUNT + " , "
+                            + SplitEntry.COLUMN_ACCOUNT_UID + " , "
+                            + SplitEntry.COLUMN_TRANSACTION_UID
+                            + ")  SELECT "
+                            + SplitEntry.TABLE_NAME + "_bak." + SplitEntry._ID + " , "
+                            + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_UID + " , "
+                            + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_MEMO + " , "
+                            + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_TYPE + " , "
+                            + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_AMOUNT + " , "
+                            + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_ACCOUNT_UID + " , "
+                            + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_TRANSACTION_UID
+                            + " FROM " + SplitEntry.TABLE_NAME + "_bak;"
+            );
+
+            //================================ END TABLE MIGRATIONS ================================
 
             Log.i(LOG_TAG, "Migrating existing recurring transactions");
             ContentValues contentValues = new ContentValues();
-            contentValues.put(TransactionEntry.COLUMN_TEMPLATE, true);
-            db.update(TransactionEntry.TABLE_NAME, contentValues, "recurrence_period > 0", null);
 
-            Cursor c = db.query(TransactionEntry.TABLE_NAME, null, "recurrence_period > 0", null, null, null, null);
+            Cursor c = db.query(TransactionEntry.TABLE_NAME + "_bak", null, "recurrence_period > 0", null, null, null, null);
             ScheduledActionDbAdapter scheduledActionDbAdapter = new ScheduledActionDbAdapter(db);
             SplitsDbAdapter splitsDbAdapter = new SplitsDbAdapter(db);
             TransactionsDbAdapter transactionsDbAdapter = new TransactionsDbAdapter(db, splitsDbAdapter);
@@ -334,11 +455,14 @@ private int upgradeDbToVersion8(SQLiteDatabase db) {
                 scheduledAction.setPeriod(period);
                 scheduledActionDbAdapter.addScheduledAction(scheduledAction);
 
+                //build intent for recurring transactions in the database
+                Intent intent = new Intent(Intent.ACTION_INSERT);
+                intent.setType(Transaction.MIME_TYPE);
+
                 //cancel existing pending intent
                 Context context = GnuCashApplication.getAppContext();
                 PendingIntent recurringPendingIntent = PendingIntent.getBroadcast(context,
-                        (int)transactionId, Transaction.createIntent(transactionsDbAdapter.buildTransactionInstance(c)),
-                        PendingIntent.FLAG_CANCEL_CURRENT);
+                        (int)transactionId, intent, PendingIntent.FLAG_CANCEL_CURRENT);
                 AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
                 alarmManager.cancel(recurringPendingIntent);
             }
@@ -351,15 +475,23 @@ private int upgradeDbToVersion8(SQLiteDatabase db) {
 
             while (c.moveToNext()){
                 Transaction transaction = transactionsDbAdapter.buildTransactionInstance(c);
+                if (transaction.isTemplate())
+                    continue;
                 Money imbalance = transaction.getImbalance();
-                if (imbalance.isAmountZero()){
+                if (!imbalance.isAmountZero()){
                     Split split = new Split(imbalance.negate(),
                             accountsDbAdapter.getOrCreateImbalanceAccountUID(imbalance.getCurrency()));
+                    split.setTransactionUID(transaction.getUID());
                     splitsDbAdapter.addSplit(split);
                 }
             }
             c.close();
 
+            Log.i(LOG_TAG, "Dropping temporary migration tables");
+            db.execSQL("DROP TABLE " + SplitEntry.TABLE_NAME + "_bak");
+            db.execSQL("DROP TABLE " + AccountEntry.TABLE_NAME + "_bak");
+            db.execSQL("DROP TABLE " + TransactionEntry.TABLE_NAME + "_bak");
+
             db.setTransactionSuccessful();
             oldVersion = 8;
         } finally {
@@ -542,17 +674,5 @@ private void createDatabaseTables(SQLiteDatabase db) {
         db.execSQL(createScheduledEventUidIndex);
     }
 
-    /**
-     * Drops all tables in the database
-     * @param db Database instance
-     */
-    private void dropAllDatabaseTables(SQLiteDatabase db) {
-        Log.i(LOG_TAG, "Dropping all database tables");
-        db.execSQL("DROP TABLE IF EXISTS " + AccountEntry.TABLE_NAME);
-        db.execSQL("DROP TABLE IF EXISTS " + TransactionEntry.TABLE_NAME);
-        db.execSQL("DROP TABLE IF EXISTS " + SplitEntry.TABLE_NAME);
-        db.execSQL("DROP TABLE IF EXISTS " + ScheduledActionEntry.TABLE_NAME);
-    }
-
 
 }
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
index a76c5047..08073819 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
@@ -53,6 +53,7 @@ private DatabaseSchema(){}
 
         public static final String COLUMN_NAME                  = "name";
         public static final String COLUMN_CURRENCY              = "currency_code";
+        public static final String COLUMN_DESCRIPTION           = "description"; //TODO: Use me. Just added it because we are migrating the whole table anyway
         public static final String COLUMN_PARENT_ACCOUNT_UID    = "parent_account_uid";
         public static final String COLUMN_PLACEHOLDER           = "is_placeholder";
         public static final String COLUMN_COLOR_CODE            = "color_code";
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index ebf0a069..372d0a18 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -121,26 +121,6 @@ static void importGnucashXML(SQLiteDatabase db, String filepath) throws Exceptio
     }
 
     /**
-     * Add created_at and modified_at columns to a table in the database and create a trigger
-     * for updating the modified_at columns
-     * @param db SQLite database
-     * @param tableName Name of the table
-     */
-    static void createUpdatedAndModifiedColumns(SQLiteDatabase db, String tableName){
-        String addCreatedColumn = "ALTER TABLE " + tableName
-                + " ADD COLUMN " + DatabaseSchema.CommonColumns.COLUMN_CREATED_AT
-                + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP";
-
-        String addModifiedColumn = "ALTER TABLE " + tableName
-                + " ADD COLUMN " + DatabaseSchema.CommonColumns.COLUMN_MODIFIED_AT
-                + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP";
-
-        db.execSQL(addCreatedColumn);
-        db.execSQL(addModifiedColumn);
-        db.execSQL(DatabaseHelper.createUpdatedAtTrigger(tableName));
-    }
-
-    /**
      * Copies the contents of the file in {@code src} to {@code dst} and then deletes the {@code src} if copy was successful.
      * If the file copy was unsuccessful, the src file will not be deleted.
      * @param src Source file
@@ -183,6 +163,9 @@ public void run() {
                         e.printStackTrace();
                     }
                 }
+            } else {
+                //if the base folder does not exist, no point going one level deeper
+                return;
             }
 
             File oldBackupFolder = new File(oldExportFolder, "backup");
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index 0246c048..96581365 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -380,12 +380,6 @@
         veel gebruikte rekeningen creren, of je eigen GnuCash rekeningstructuur importeren. \n\nBeide opties zijn ook
         beschikbaar in app Instellingen zodat je later kan beslissen.
     </string>
-    <string-array name="recurrence_period_strings">
-        <item>GEEN</item>
-        <item>DAGELIJKS</item>
-        <item>WEKELIJKSE</item>
-        <item>MAANDELIJKS</item>
-    </string-array>
     <string name="menu_scheduled_transactions">Vaste journaalposten</string>
     <string name="title_scheduled_transactions">Vaste journaalposten</string>
     <string name="title_select_export_destination">Select destination for export</string>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index 70cc8ad5..ebc191ce 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -482,4 +482,5 @@
         <item quantity="one">Yearly</item>
         <item quantity="other">Every %d years</item>
     </plurals>
+    <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
 </resources>

From 3c63f283dd75ab3218a3e968c458500b3e0a91e4 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 24 Apr 2015 01:05:41 +0200
Subject: [PATCH 07/16] Added configuration for release signing

Extracted API keys to resource strings
Simplified the version name string
Updated build version
Use application ID for mime types to prevent cross-intent broadcasts (between dev and production flavors)
---
 .gitignore                                         |  1 +
 app/build.gradle                                   | 44 +++++++++++++++++-----
 app/src/main/AndroidManifest.xml                   |  6 +--
 .../gnucash/android/export/ExportAsyncTask.java    |  4 +-
 .../android/export/ExportDialogFragment.java       |  4 +-
 .../java/org/gnucash/android/model/Account.java    |  3 +-
 .../org/gnucash/android/model/Transaction.java     |  3 +-
 .../android/ui/settings/SettingsActivity.java      | 14 ++++++-
 8 files changed, 61 insertions(+), 18 deletions(-)

diff --git a/.gitignore b/.gitignore
index 443be471..094a8772 100644
--- a/.gitignore
+++ b/.gitignore
@@ -21,3 +21,4 @@ out/
 *.classpath
 # cpu profile generated by Android Studio
 /captures
+gradle.properties
diff --git a/app/build.gradle b/app/build.gradle
index ecdd766b..b4e155a4 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -5,10 +5,10 @@ apply plugin: 'com.android.application'
 def versionMajor = 1
 def versionMinor = 6
 def versionPatch = 0
-def versionBuild = 0
+def versionBuild = 1
 
 def buildTime() {
-    def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")
+    def df = new SimpleDateFormat("yyyyMMdd_HHmm'Z'")
     df.setTimeZone(TimeZone.getTimeZone("UTC"))
     return df.format(new Date())
 }
@@ -17,6 +17,7 @@ def gitSha() {
     return 'git rev-parse --short HEAD'.execute().text.trim()
 }
 
+
 android {
     compileSdkVersion 19
     buildToolsVersion "21.1.2"
@@ -31,7 +32,22 @@ android {
     applicationVariants.all { variant ->
         variant.outputs.each { output ->
             output.outputFile = new File(
-                    output.outputFile.parent, "GnucashAndroid_v${variant.versionName}.apk".replaceAll(":","-"))
+                    output.outputFile.parent, "GnucashAndroid_v${variant.versionName}.apk")
+        }
+    }
+
+    signingConfigs {
+        debug {
+            storeFile file("../debug.keystore")
+        }
+
+        if(project.hasProperty("RELEASE_STORE_FILE")) {
+            release {
+                storeFile       file(RELEASE_STORE_FILE)
+                storePassword   RELEASE_STORE_PASSWORD
+                keyAlias        RELEASE_KEY_ALIAS
+                keyPassword     RELEASE_KEY_PASSWORD
+            }
         }
     }
 
@@ -39,6 +55,9 @@ android {
         release {
             minifyEnabled false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+            if (project.hasProperty("RELEASE_STORE_FILE")){
+                signingConfig signingConfigs.release
+            }
         }
         debug {
             debuggable true
@@ -53,25 +72,30 @@ android {
             applicationId 'org.gnucash.android.devel'
             testApplicationId 'org.gnucash.android.test.devel'
             resValue "string", "app_name", "GnuCash-devel"
-            versionName "${versionMajor}.${versionMinor}.${versionPatch}-dev${versionBuild} @rev ${gitSha()} - Built ${buildTime()} "
+            resValue "string", "dropbox_app_key", "dhjh8ke9wf05948"
+            resValue "string", "dropbox_app_secret", "h2t9fphj3nr4wkw"
+            versionName "${versionMajor}.${versionMinor}.${versionPatch}-dev${versionBuild}_${buildTime()}"
         }
 
         beta {
             resValue "string", "app_name", "GnuCash - beta"
-            versionName "${versionMajor}.${versionMinor}.${versionPatch}-beta${versionBuild} - Built: ${buildTime()}"
+            if (project.hasProperty("RELEASE_DROPBOX_APP_KEY")){
+                resValue "string", "dropbox_app_key", RELEASE_DROPBOX_APP_KEY
+                resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
+            }
+            versionName "${versionMajor}.${versionMinor}.${versionPatch}-beta${versionBuild}_${buildTime()}"
         }
 
         production {
             resValue "string", "app_name", "GnuCash"
+            if (project.hasProperty("RELEASE_DROPBOX_APP_KEY")){
+                resValue "string", "dropbox_app_key", RELEASE_DROPBOX_APP_KEY
+                resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
+            }
         }
 
     }
 
-    signingConfigs {
-        debug {
-            storeFile file("../debug.keystore")
-        }
-    }
     
     compileOptions { //we want switch with strings during xml parsing
         sourceCompatibility JavaVersion.VERSION_1_7
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 96b72c28..919efda0 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -23,7 +23,7 @@
     <uses-sdk android:minSdkVersion="10" android:targetSdkVersion="19"/>
     
     <permission-group 
-        android:name="org.gnucash.android.permission.group.GNUCASH"
+        android:name="${applicationId}.permission.group.GNUCASH"
         android:label="@string/label_permission_group" 
         android:description="@string/description_permission_group" />
     
@@ -131,7 +131,7 @@
             <intent-filter>
                 <action android:name="android.intent.action.INSERT" />
                 <category android:name="android.intent.category.DEFAULT" />
-                <data android:mimeType="vnd.android.cursor.item/vnd.org.gnucash.android.transaction"/>
+                <data android:mimeType="vnd.android.cursor.item/vnd.${applicationId}.transaction"/>
             </intent-filter>
         </receiver>
         <receiver android:name=".receivers.AccountCreator"
@@ -141,7 +141,7 @@
             <intent-filter>
                 <action android:name="android.intent.action.INSERT" />
                 <category android:name="android.intent.category.DEFAULT" />
-                <data android:mimeType="vnd.android.cursor.item/vnd.org.gnucash.android.account"/>
+                <data android:mimeType="vnd.android.cursor.item/vnd.${applicationId}.account"/>
             </intent-filter>
         </receiver>
         <receiver android:name=".receivers.TransactionAppWidgetProvider" >
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index e4339798..aad7f13b 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -300,8 +300,10 @@ public String getExportMimeType(){
     }
 
     private void copyExportToDropbox() {
+        String dropboxAppKey = mContext.getString(R.string.dropbox_app_key, SettingsActivity.DROPBOX_APP_KEY);
+        String dropboxAppSecret = mContext.getString(R.string.dropbox_app_secret, SettingsActivity.DROPBOX_APP_SECRET);
         DbxAccountManager mDbxAcctMgr = DbxAccountManager.getInstance(mContext.getApplicationContext(),
-                SettingsActivity.DROPBOX_APP_KEY, SettingsActivity.DROPBOX_APP_SECRET);
+                dropboxAppKey, dropboxAppSecret);
         DbxFile dbExportFile = null;
         try {
             DbxFileSystem dbxFileSystem = DbxFileSystem.forAccount(mDbxAcctMgr.getLinkedAccount());
diff --git a/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java b/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java
index 23d7ee8e..3675b89f 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java
@@ -245,8 +245,10 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
 					case 1:
 						recurrenceOptionsView.setVisibility(View.VISIBLE);
 						mExportTarget = ExportParams.ExportTarget.DROPBOX;
+                        String dropboxAppKey = getString(R.string.dropbox_app_key, SettingsActivity.DROPBOX_APP_KEY);
+                        String dropboxAppSecret = getString(R.string.dropbox_app_secret, SettingsActivity.DROPBOX_APP_SECRET);
 						DbxAccountManager mDbxAccountManager = DbxAccountManager.getInstance(getActivity().getApplicationContext(),
-								SettingsActivity.DROPBOX_APP_KEY, SettingsActivity.DROPBOX_APP_SECRET);
+								dropboxAppKey, dropboxAppSecret);
 						if (!mDbxAccountManager.hasLinkedAccount()){
 							mDbxAccountManager.startLink(getActivity(), 0);
 						}
diff --git a/app/src/main/java/org/gnucash/android/model/Account.java b/app/src/main/java/org/gnucash/android/model/Account.java
index 2af9acff..036a7e47 100644
--- a/app/src/main/java/org/gnucash/android/model/Account.java
+++ b/app/src/main/java/org/gnucash/android/model/Account.java
@@ -17,6 +17,7 @@
 package org.gnucash.android.model;
 
 
+import org.gnucash.android.BuildConfig;
 import org.gnucash.android.export.ofx.OfxHelper;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
@@ -43,7 +44,7 @@
 	 * The MIME type for accounts in GnucashMobile
 	 * This is used when sending intents from third-party applications
 	 */
-	public static final String MIME_TYPE = "vnd.android.cursor.item/vnd.org.gnucash.android.account";
+	public static final String MIME_TYPE = "vnd.android.cursor.item/vnd." + BuildConfig.APPLICATION_ID + ".account";
 
     /*
         ^             anchor for start of string
diff --git a/app/src/main/java/org/gnucash/android/model/Transaction.java b/app/src/main/java/org/gnucash/android/model/Transaction.java
index d9fc948c..09b507ec 100644
--- a/app/src/main/java/org/gnucash/android/model/Transaction.java
+++ b/app/src/main/java/org/gnucash/android/model/Transaction.java
@@ -18,6 +18,7 @@
 
 import android.content.Intent;
 
+import org.gnucash.android.BuildConfig;
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.export.ofx.OfxHelper;
 import org.gnucash.android.model.Account.OfxAccountType;
@@ -41,7 +42,7 @@
 	 * Mime type for transactions in Gnucash.
 	 * Used for recording transactions through intents
 	 */
-	public static final String MIME_TYPE 			= "vnd.android.cursor.item/vnd.org.gnucash.android.transaction";
+	public static final String MIME_TYPE 			= "vnd.android.cursor.item/vnd." + BuildConfig.APPLICATION_ID + ".transaction";
 
 	/**
 	 * Key for passing the account unique Identifier as an argument through an {@link Intent}
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index 7add1723..051fe8fc 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -88,13 +88,23 @@
 public class SettingsActivity extends SherlockPreferenceActivity implements OnPreferenceChangeListener, Preference.OnPreferenceClickListener{
 
     public static final String LOG_TAG = "SettingsActivity";
+
     /**
      * Allowed delay between two consecutive taps of a setting for it to be considered a double tap
      * Used on Android v2.3.3 or lower devices where dialogs cannot be instantiated easily in settings
      */
     public static final int DOUBLE_TAP_DELAY = 2000;
+
+    /**
+     * Testing app key for DropBox API
+     */
     final static public String DROPBOX_APP_KEY      = "dhjh8ke9wf05948";
+
+    /**
+     * Testing app secret for DropBox API
+     */
     final static public String DROPBOX_APP_SECRET   = "h2t9fphj3nr4wkw";
+
     /**
      * Collects references to the UI elements and binds click listeners
      */
@@ -135,8 +145,10 @@ public void onBuildHeaders(List<Header> target) {
 	protected void onCreate(Bundle savedInstanceState) {		
 		super.onCreate(savedInstanceState);
 
+        String dropboxAppKey = getString(R.string.dropbox_app_key, DROPBOX_APP_KEY);
+        String dropboxAppSecret = getString(R.string.dropbox_app_secret, DROPBOX_APP_SECRET);
         mDbxAccountManager = DbxAccountManager.getInstance(getApplicationContext(),
-                DROPBOX_APP_KEY, DROPBOX_APP_SECRET);
+                dropboxAppKey, dropboxAppSecret);
 
         mGoogleApiClient = getGoogleApiClient(this);
 

From b0cbd8ef53415e63b21b1157bc8ac4c94dcfe247 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 24 Apr 2015 13:41:00 +0200
Subject: [PATCH 08/16] Improved database migration code

Fixed: incorrect DropBox sync configuration in manifest (for beta and
production)
Fixed: crash after deleting top-level account
Add default root account if none exists during migration
Stop scheduled actions from being executed during migration
Set the root account as hidden when it is created
---
 app/build.gradle                                   | 16 ++++-----
 app/src/main/AndroidManifest.xml                   |  8 ++---
 .../org/gnucash/android/db/AccountsDbAdapter.java  | 26 ++------------
 .../org/gnucash/android/db/DatabaseAdapter.java    |  8 +++--
 .../org/gnucash/android/db/DatabaseHelper.java     | 42 ++++++++++++++--------
 .../android/db/ScheduledActionDbAdapter.java       |  2 ++
 .../org/gnucash/android/db/SplitsDbAdapter.java    |  2 +-
 .../gnucash/android/db/TransactionsDbAdapter.java  |  2 ++
 .../android/ui/account/AccountFormFragment.java    | 10 +++---
 .../android/ui/account/AccountsListFragment.java   |  3 ++
 .../ui/transaction/TransactionFormFragment.java    | 11 +++---
 11 files changed, 62 insertions(+), 68 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index b4e155a4..5a14db31 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -8,7 +8,7 @@ def versionPatch = 0
 def versionBuild = 1
 
 def buildTime() {
-    def df = new SimpleDateFormat("yyyyMMdd_HHmm'Z'")
+    def df = new SimpleDateFormat("yyyyMMdd_HHmm'UTC'")
     df.setTimeZone(TimeZone.getTimeZone("UTC"))
     return df.format(new Date())
 }
@@ -27,6 +27,11 @@ android {
         targetSdkVersion 19
         versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
         versionName "${versionMajor}.${versionMinor}.${versionPatch}"
+        if (project.hasProperty("RELEASE_DROPBOX_APP_KEY")){
+            resValue "string", "dropbox_app_key", RELEASE_DROPBOX_APP_KEY
+            resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
+            resValue "string", "manifest_dropbox_app_key", "db-${RELEASE_DROPBOX_APP_KEY}"
+        }
     }
 
     applicationVariants.all { variant ->
@@ -74,24 +79,17 @@ android {
             resValue "string", "app_name", "GnuCash-devel"
             resValue "string", "dropbox_app_key", "dhjh8ke9wf05948"
             resValue "string", "dropbox_app_secret", "h2t9fphj3nr4wkw"
+            resValue "string", "manifest_dropbox_app_key", "db-dhjh8ke9wf05948"
             versionName "${versionMajor}.${versionMinor}.${versionPatch}-dev${versionBuild}_${buildTime()}"
         }
 
         beta {
             resValue "string", "app_name", "GnuCash - beta"
-            if (project.hasProperty("RELEASE_DROPBOX_APP_KEY")){
-                resValue "string", "dropbox_app_key", RELEASE_DROPBOX_APP_KEY
-                resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
-            }
             versionName "${versionMajor}.${versionMinor}.${versionPatch}-beta${versionBuild}_${buildTime()}"
         }
 
         production {
             resValue "string", "app_name", "GnuCash"
-            if (project.hasProperty("RELEASE_DROPBOX_APP_KEY")){
-                resValue "string", "dropbox_app_key", RELEASE_DROPBOX_APP_KEY
-                resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
-            }
         }
 
     }
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 919efda0..02414209 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -16,12 +16,8 @@
 -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="org.gnucash.android"
-    android:versionCode="48"
-    android:versionName="@string/app_version_name" >
+    package="org.gnucash.android">
 
-    <uses-sdk android:minSdkVersion="10" android:targetSdkVersion="19"/>
-    
     <permission-group 
         android:name="${applicationId}.permission.group.GNUCASH"
         android:label="@string/label_permission_group" 
@@ -111,7 +107,7 @@
             android:configChanges="orientation|keyboard">
             <intent-filter>
                 <!-- Change this to be db- followed by your app key -->
-                <data android:scheme="db-dhjh8ke9wf05948" />
+                <data android:scheme="@string/manifest_dropbox_app_key" />
                 <action android:name="android.intent.action.VIEW" />
                 <category android:name="android.intent.category.BROWSABLE"/>
                 <category android:name="android.intent.category.DEFAULT" />
diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index 175df568..eec86031 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -74,6 +74,8 @@
 
     private static String mImbalanceAccountPrefix = GnuCashApplication.getAppContext().getString(R.string.imbalance_account_name) + "-";
 
+    private static final String TAG = "AccountsDbAdapter";
+
     /**
      * Overloaded constructor. Creates an adapter for an already open database
      * @param db SQliteDatabase instance
@@ -763,29 +765,6 @@ public Cursor fetchAccountsOrderedByFullName(String where, String[] whereArgs) {
                 null, where, whereArgs, null, null,
                 AccountEntry.COLUMN_FULL_NAME + " ASC");
     }
-    /**
-     * Returns the balance of an account while taking sub-accounts into consideration
-     * @return Account Balance of an account including sub-accounts
-     */
-    public Money getAccountBalance(long accountId){
-        Log.d(TAG, "Computing account balance for account ID " + accountId);
-        String currencyCode = getCurrencyCode(getUID(accountId));
-        Money balance = Money.createZeroInstance(currencyCode);
-
-        List<Long> subAccounts = getSubAccountIds(accountId);
-        for (long id : subAccounts){
-            //recurse because arbitrary nesting depth is allowed
-            Money subBalance = getAccountBalance(id);
-            if (subBalance.getCurrency().equals(balance.getCurrency())){
-                //only add the balances if they are of the same currency
-                //ignore sub accounts of different currency just like GnuCash desktop does
-                balance = balance.add(subBalance);
-            }
-        }
-
-        Money splitSum = mTransactionsAdapter.getSplitDbAdapter().computeSplitBalance(getUID(accountId));
-        return balance.add(splitSum);
-    }
 
     /**
      * Returns the balance of an account while taking sub-accounts into consideration
@@ -1002,6 +981,7 @@ public String getOrCreateGnuCashRootAccountUID() {
         Account rootAccount = new Account("ROOT Account");
         rootAccount.setAccountType(AccountType.ROOT);
         rootAccount.setFullName(ROOT_ACCOUNT_FULL_NAME);
+        rootAccount.setHidden(true);
         addAccount(rootAccount);
         return rootAccount.getUID();
     }
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
index c783ddd7..4d6b87e8 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
@@ -42,7 +42,7 @@
 	/**
 	 * Tag for logging
 	 */
-	protected static final String TAG = DatabaseAdapter.class.getName();
+	protected static final String TAG = "DatabaseAdapter";
 
 	/**
 	 * SQLite database
@@ -234,6 +234,7 @@ public Cursor fetchAllRecords(){
 	 * @return <code>true</code> if deletion was successful, <code>false</code> otherwise
 	 */
 	public boolean deleteRecord(long rowId){
+        Log.d(TAG, "Deleting record with id " + rowId + " from " + mTableName);
 		return mDb.delete(mTableName, DatabaseSchema.CommonColumns._ID + "=" + rowId, null) > 0;
 	}
 
@@ -427,8 +428,9 @@ public String getAttribute(@NonNull String recordUID, @NonNull String columnName
         try {
             if (cursor.moveToFirst())
                 return cursor.getString(cursor.getColumnIndexOrThrow(columnName));
-            else
-                throw new IllegalArgumentException(String.format("Column (%s) or GUID (%s) does not exist in the db", columnName, recordUID));
+            else {
+                throw new IllegalArgumentException(String.format("Record with GUID %s does not exist in the db", recordUID));
+            }
         } finally {
             cursor.close();
         }
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
index 48990015..559ddbb9 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
@@ -337,6 +337,7 @@ private int upgradeDbToVersion8(SQLiteDatabase db) {
                             + AccountEntry.COLUMN_FAVORITE + " , "
                             + AccountEntry.COLUMN_FULL_NAME + " , "
                             + AccountEntry.COLUMN_PLACEHOLDER + " , "
+                            + AccountEntry.COLUMN_HIDDEN + " , "
                             + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " , "
                             + AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID
                             + ") SELECT "
@@ -349,6 +350,7 @@ private int upgradeDbToVersion8(SQLiteDatabase db) {
                             + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_FAVORITE + " , "
                             + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_FULL_NAME + " , "
                             + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_PLACEHOLDER + " , "
+                            + " CASE WHEN " + AccountEntry.TABLE_NAME + "_bak.type = 'ROOT' THEN 1 ELSE 0 END, "
                             + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " , "
                             + AccountEntry.TABLE_NAME + "_bak." + AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID
                             + " FROM " + AccountEntry.TABLE_NAME + "_bak;"
@@ -433,26 +435,38 @@ private int upgradeDbToVersion8(SQLiteDatabase db) {
                             + " FROM " + SplitEntry.TABLE_NAME + "_bak;"
             );
 
+
+
             //================================ END TABLE MIGRATIONS ================================
 
-            Log.i(LOG_TAG, "Migrating existing recurring transactions");
-            ContentValues contentValues = new ContentValues();
 
-            Cursor c = db.query(TransactionEntry.TABLE_NAME + "_bak", null, "recurrence_period > 0", null, null, null, null);
+
             ScheduledActionDbAdapter scheduledActionDbAdapter = new ScheduledActionDbAdapter(db);
             SplitsDbAdapter splitsDbAdapter = new SplitsDbAdapter(db);
             TransactionsDbAdapter transactionsDbAdapter = new TransactionsDbAdapter(db, splitsDbAdapter);
-            while (c.moveToNext()){
+            AccountsDbAdapter accountsDbAdapter = new AccountsDbAdapter(db,transactionsDbAdapter);
+
+            Log.i(LOG_TAG, "Creating default root account if none exists");
+            ContentValues contentValues = new ContentValues();
+            //assign a root account to all accounts which had null as parent (top-level accounts)
+            String rootAccountUID = accountsDbAdapter.getOrCreateGnuCashRootAccountUID();
+            contentValues.put(AccountEntry.COLUMN_PARENT_ACCOUNT_UID, rootAccountUID);
+            db.update(AccountEntry.TABLE_NAME, contentValues, AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " IS NULL", null);
+
+            Log.i(LOG_TAG, "Migrating existing recurring transactions");
+            Cursor cursor = db.query(TransactionEntry.TABLE_NAME + "_bak", null, "recurrence_period > 0", null, null, null, null);
+            while (cursor.moveToNext()){
                 contentValues.clear();
-                Timestamp timestamp = new Timestamp(c.getLong(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_TIMESTAMP)));
+                Timestamp timestamp = new Timestamp(cursor.getLong(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_TIMESTAMP)));
                 contentValues.put(TransactionEntry.COLUMN_CREATED_AT, timestamp.toString());
-                long transactionId = c.getLong(c.getColumnIndexOrThrow(TransactionEntry._ID));
+                long transactionId = cursor.getLong(cursor.getColumnIndexOrThrow(TransactionEntry._ID));
                 db.update(TransactionEntry.TABLE_NAME, contentValues, TransactionEntry._ID + "=" + transactionId, null);
 
                 ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
-                scheduledAction.setActionUID(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID)));
-                long period = c.getLong(c.getColumnIndexOrThrow("recurrence_period"));
+                scheduledAction.setActionUID(cursor.getString(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID)));
+                long period = cursor.getLong(cursor.getColumnIndexOrThrow("recurrence_period"));
                 scheduledAction.setPeriod(period);
+                scheduledAction.setLastRun(System.currentTimeMillis()); //prevent this from being executed at the end of migration
                 scheduledActionDbAdapter.addScheduledAction(scheduledAction);
 
                 //build intent for recurring transactions in the database
@@ -466,15 +480,13 @@ private int upgradeDbToVersion8(SQLiteDatabase db) {
                 AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
                 alarmManager.cancel(recurringPendingIntent);
             }
-            c.close();
+            cursor.close();
 
             //auto-balance existing splits
             Log.i(LOG_TAG, "Auto-balancing existing transaction splits");
-            c = transactionsDbAdapter.fetchAllRecords();
-            AccountsDbAdapter accountsDbAdapter = new AccountsDbAdapter(db, transactionsDbAdapter);
-
-            while (c.moveToNext()){
-                Transaction transaction = transactionsDbAdapter.buildTransactionInstance(c);
+            cursor = transactionsDbAdapter.fetchAllRecords();
+            while (cursor.moveToNext()){
+                Transaction transaction = transactionsDbAdapter.buildTransactionInstance(cursor);
                 if (transaction.isTemplate())
                     continue;
                 Money imbalance = transaction.getImbalance();
@@ -485,7 +497,7 @@ private int upgradeDbToVersion8(SQLiteDatabase db) {
                     splitsDbAdapter.addSplit(split);
                 }
             }
-            c.close();
+            cursor.close();
 
             Log.i(LOG_TAG, "Dropping temporary migration tables");
             db.execSQL("DROP TABLE " + SplitEntry.TABLE_NAME + "_bak");
diff --git a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
index 61bcee47..6c932b44 100644
--- a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
@@ -39,6 +39,8 @@
  */
 public class ScheduledActionDbAdapter extends DatabaseAdapter {
 
+    private static final String TAG = "ScheduledActionDbAdapter";
+
     public ScheduledActionDbAdapter(SQLiteDatabase db){
         super(db, ScheduledActionEntry.TABLE_NAME);
     }
diff --git a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
index cb1843a8..c6e24843 100644
--- a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
@@ -48,7 +48,7 @@
  */
 public class SplitsDbAdapter extends DatabaseAdapter {
 
-    protected static final String TAG = "SplitsDbAdapter";
+    private static final String TAG = "SplitsDbAdapter";
 
     public SplitsDbAdapter(SQLiteDatabase db) {
         super(db, SplitEntry.TABLE_NAME);
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index b6e03e1c..d76f09fc 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -50,6 +50,8 @@
  */
 public class TransactionsDbAdapter extends DatabaseAdapter {
 
+    private static final String TAG = "TransactionsDbAdapter";
+
     private final SplitsDbAdapter mSplitsDbAdapter;
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index e09c97bf..80fc9260 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -537,13 +537,13 @@ public boolean onOptionsItemSelected(MenuItem item) {
      * Initializes the default transfer account spinner with eligible accounts
      */
     private void loadDefaultTransferAccountList(){
-        String condition = DatabaseSchema.AccountEntry.COLUMN_UID + " != '" + mAccountUID + "' "
+        String condition = DatabaseSchema.AccountEntry.COLUMN_UID + " != '" + mAccountUID + "' " //when creating a new account mAccountUID is null, so don't use whereArgs
                 + " AND " + DatabaseSchema.AccountEntry.COLUMN_PLACEHOLDER + "=0"
-                + " AND " + DatabaseSchema.AccountEntry.COLUMN_UID + " != '" + mAccountsDbAdapter.getOrCreateGnuCashRootAccountUID() + "'";
+                + " AND " + DatabaseSchema.AccountEntry.COLUMN_HIDDEN + "=0"
+                + " AND " + DatabaseSchema.AccountEntry.COLUMN_TYPE + " != ?";
 
-        //using whereArgs (2nd parameter) would produce safer sql,
-        // however we get an exception because mAccountUID can be null, or the root account may be null as well
-        Cursor defaultTransferAccountCursor = mAccountsDbAdapter.fetchAccountsOrderedByFullName(condition, null);
+        Cursor defaultTransferAccountCursor = mAccountsDbAdapter.fetchAccountsOrderedByFullName(condition,
+                new String[]{AccountType.ROOT.name()});
 
         if (mDefaulTransferAccountSpinner.getCount() <= 0) {
             setDefaultTransferAccountInputsVisible(false);
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index c5a8aaa1..71bb162c 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -186,11 +186,13 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                 case R.id.context_menu_edit_accounts:
                     openCreateOrEditActivity(mSelectedItemId);
                     mode.finish();
+                    mActionMode = null;
                     return true;
 
                 case R.id.context_menu_delete:
                     tryDeleteAccount(mSelectedItemId);
                     mode.finish();
+                    mActionMode = null;
                     return true;
 
                 default:
@@ -318,6 +320,7 @@ public void tryDeleteAccount(long rowId) {
             showConfirmationDialog(rowId);
         } else {
             mAccountsDbAdapter.deleteRecord(rowId);
+            mAccountsCursorAdapter.swapCursor(null);
             refresh();
         }
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 4675ee06..944822a4 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -498,17 +498,16 @@ private void initalizeViews() {
      * Only accounts with the same currency can be transferred to
      */
 	private void updateTransferAccountsList(){
-
-		String conditions = "(" + DatabaseSchema.AccountEntry.COLUMN_UID + " != '" + mAccountUID
-                            + "' AND " + (mMultiCurrency ? "" : (DatabaseSchema.AccountEntry.COLUMN_CURRENCY + " = '" + mAccountsDbAdapter.getCurrencyCode(mAccountUID)
-                            + "' AND ")) + DatabaseSchema.AccountEntry.COLUMN_UID + " != '" + mAccountsDbAdapter.getOrCreateGnuCashRootAccountUID()
-                            + "' AND " + DatabaseSchema.AccountEntry.COLUMN_PLACEHOLDER + " = 0"
+		String conditions = "(" + DatabaseSchema.AccountEntry.COLUMN_UID + " != ?"
+                            + " AND " + (mMultiCurrency ? "" : (DatabaseSchema.AccountEntry.COLUMN_CURRENCY + " = '" + mAccountsDbAdapter.getCurrencyCode(mAccountUID) + "'"
+                            + " AND ")) + DatabaseSchema.AccountEntry.COLUMN_TYPE + " != ?"
+                            + " AND " + DatabaseSchema.AccountEntry.COLUMN_PLACEHOLDER + " = 0"
                             + ")";
 
         if (mCursor != null) {
             mCursor.close();
         }
-		mCursor = mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions, null);
+		mCursor = mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions, new String[]{mAccountUID, AccountType.ROOT.name()});
 
         mCursorAdapter = new QualifiedAccountNameCursorAdapter(getActivity(),
                 android.R.layout.simple_spinner_item, mCursor);

From 8e79b2eea584f74a00c7a291e61ad1e3158fb5b9 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 24 Apr 2015 17:26:41 +0200
Subject: [PATCH 09/16] Updated changelog, readme and "what's new" strings

---
 CHANGELOG.md                               | 33 +++++++++++++++++++++++++++---
 CONTRIBUTORS                               | 11 +++++++---
 README.md                                  |  6 +++---
 app/src/main/res/values-de/strings.xml     | 12 +++++------
 app/src/main/res/values-el/strings.xml     | 10 ++++-----
 app/src/main/res/values-es-rMX/strings.xml | 10 ++++-----
 app/src/main/res/values-es/strings.xml     | 10 ++++-----
 app/src/main/res/values-fr/strings.xml     | 10 ++++-----
 app/src/main/res/values-hu/strings.xml     | 10 ++++-----
 app/src/main/res/values-it/strings.xml     | 10 ++++-----
 app/src/main/res/values-nb/strings.xml     | 10 ++++-----
 app/src/main/res/values-nl/strings.xml     | 10 ++++-----
 app/src/main/res/values-pt-rBR/strings.xml | 14 ++++++-------
 app/src/main/res/values-ru/strings.xml     | 10 ++++-----
 app/src/main/res/values-zh/strings.xml     | 14 ++++++-------
 app/src/main/res/values/strings.xml        | 10 ++++-----
 16 files changed, 111 insertions(+), 79 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 3daeb57b..185e155e 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,10 +1,37 @@
 Change Log
 ===============================================================================
+Version 1.6.0 *(2015-xx-xx)*
+----------------------------
+* Feature: More options for recurrence of scheduled transactions
+* Feature: Scheduled backups (QIF, OFX and XML)
+* Feature: Backup/Export to DropBox and Google Drive
+* Feature: Reports of income and expenses over time - bar, pie and line charts
+* Feature: Import scheduled transactions from GnuCash XML
+* Feature: Set app as handler for .gnucash and .gnca files
+* Feature: Auto-balance transactions before saving
+* Feature: Added navigation drawer for easier access to features
+* Feature: Added options for explicitly creating/restoring backups
+* Feature: Added support for hidden accounts
+* Feature: Account delete dialog now has options for moving sub-accounts and transactions
+* Feature: Export to Gnucash desktop-compatible XML
+* Feature: Added support for logging to Crashlytics (for beta releases)
+* Improvement: Imbalance accounts are created on-the-fly (and hidden in single-entry mode)
+* Improvement: Transaction auto-complete suggestions now include amount, date and do not show duplicates
+* Improvement: Only one ROOT account exists in the database (it is created if necessary)
+* Improvement: Show the day in transaction headers
+* Improvement: Added `created_at` and `modified_at` database columns to all records
+* Improvement: Added ability to mark account as favorite from context menu
+* Improvement: Future transactions are not considered when calculating account balances
+* Improvement: Database is always cleared during import (no merging of books supported)
+* Improvement: Increased speed and reliability of import operations
+* Improvement: Upgraded Java version to 1.7
+* Improvement: Use gradle for building source
+
 Version 1.5.5 *(2015-02-20)*
 ----------------------------
-Fixed: QIF not exported when using single-entry transactions
-Fixed: Passcode screen can be by-passed using SwipeBack
-Fixed: Crash when changing the account name
+* Fixed: QIF not exported when using single-entry transactions
+* Fixed: Passcode screen can be by-passed using SwipeBack
+* Fixed: Crash when changing the account name
 
 Version 1.5.4 *(2015-02-16)*
 ----------------------------
diff --git a/CONTRIBUTORS b/CONTRIBUTORS
index f5d925f9..45ba3eb9 100644
--- a/CONTRIBUTORS
+++ b/CONTRIBUTORS
@@ -3,7 +3,14 @@ several different people.
 Appreciation goes to Muslim Chochlov and the to whole GnuCash community for guiding the 
 project through the early phases and providing valuable feedback.
 
-The following people contributed (code and translations) to GnuCash for Android:
+Lead Developer: 
+Ngewi Fet <ngewif@gmail.com>
+
+Main contributors to core app experience:
+Yongxin Wang <fefe.wyx@gmail.com>
+Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+
+The following people (in no particular order) contributed (code and translations) to GnuCash for Android:
 Christian Stimming <christian@cstimming.de>
 Cristian Marchi <cri.penta@gmail.com>
 Menelaos Maglis <mmaglis@metacom.gr>
@@ -16,9 +23,7 @@ Nicolas Barranger <wicowyn@gmail.com>
 Sigurd Gartmann <sigurdga-github@sigurdga.no>
 Pedro Abel <pedroabel@gmail.com>
 windwarrior <lennartbuit@gmail.com>
-Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
 Alex Lei <lxbzmy@gmail.com>
-Yongxin Wang <fefe.wyx@gmail.com>
 Matthew Hague <matthewhague@zoho.com>
 Spanti Nicola <rydroid_dev@yahoo.com>
 Jesse Shieh <jesse.shieh.pub@gmail.com>
diff --git a/README.md b/README.md
index cea5f273..9607ae57 100644
--- a/README.md
+++ b/README.md
@@ -1,9 +1,9 @@
 # Introduction
 
-Gnucash Mobile for Android is companion application for desktop Gnucash designed for Android.
-It allows you to record transactions on-the-go and export them in the QIF or OFX format and later import the data into Gnucash for the desktop. You can create multiple accounts for transactions in Gnucash. Double-entry accounting is also supported.
+Gnucash Android is companion application for desktop Gnucash designed for Android.
+It allows you to record transactions on-the-go and export them in the QIF, OFX or (GnuCash)-XML format and later import the data into Gnucash for the desktop. The app supports multiple nested accounts, scheduled transactions and backup/export to 3rd-party services (like DropBox & Google Drive).
 
-The application supports Android 2.2 Froyo (API level 8) and above. 
+The application supports Android 2.3.4 Froyo (API level 10) and above. 
 
 
 # Installation
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index eff61e93..1315b9d8 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -296,13 +296,13 @@
 	<string name="summary_xml_ofx_header">Diese Option aktivieren, wenn Sie die OFX-Dateien fr ein anderes Programm als GnuCash auf dem Desktop exportieren</string>
 	<string name="title_whats_new">Neuigkeiten in dieser Version</string>
 	<string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currencey settings when creating account hierarchy\n
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
         - Multiple bug fixes and improvements\n
-    </string>
+	</string>
 	<string name="label_dismiss">Schlieen</string>
     <string name="toast_transanction_amount_required">Geben Sie einen Betrag ein, um die Buchung speichern zu knnen</string>
     <string name="menu_import_accounts">GnuCash-Konten importieren</string>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index da0710f5..f3a69f30 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -303,11 +303,11 @@
 	<string name="summary_xml_ofx_header">        ,   GnuCash   .</string>
 	<string name="title_whats_new">  </string>
 	<string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currencey settings when creating account hierarchy\n
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss"></string>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index d17d4f5b..07f60f97 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -297,11 +297,11 @@
 	<string name="summary_xml_ofx_header">Active esta opci&#243;n para exportar a otras aplicaciones distintas a GnuCash para escritorio</string>
 	<string name="title_whats_new">&#191;Qu&#233; hay nuevo?</string>
 	<string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currencey settings when creating account hierarchy\n
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Cerrar</string>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 915314e6..b3009ac6 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -476,11 +476,11 @@
         <item quantity="other">Every %d years</item>
     </plurals>
 	<string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currencey settings when creating account hierarchy\n
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
         - Multiple bug fixes and improvements\n
 	</string>
     <string name="title_enable_crashlytics">Enable Crash Logging</string>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 821a5981..a15d5722 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -297,11 +297,11 @@
     <string name="summary_xml_ofx_header">Activez cette option lors d\'un export vers une application tierce autre que GnuCash pour PC</string>
     <string name="title_whats_new">Nouveautes</string>
 	<string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currencey settings when creating account hierarchy\n
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
         - Multiple bug fixes and improvements\n
 	</string>
     <string name="label_dismiss">Passer</string>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index 6dceb61c..4aea2fea 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -297,11 +297,11 @@
 	<string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
 	<string name="title_whats_new">What\'s New</string>
 	<string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currencey settings when creating account hierarchy\n
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Dismiss</string>
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index e9144197..854c43a2 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -298,11 +298,11 @@
 	<string name="summary_xml_ofx_header">Abilitare questa opzione quando si esporta verso un\'applicazione diversa da GnuCash versione desktop</string>
 	<string name="title_whats_new">Novit</string>
 	<string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currencey settings when creating account hierarchy\n
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Chiudi</string>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index d9413c74..791d7c8b 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -298,11 +298,11 @@
 	<string name="summary_xml_ofx_header">Velg denne hvis du skal eksportere til annen programvare enn GnuCash for PC.</string>
 	<string name="title_whats_new">Hva er nytt</string>
 	<string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currencey settings when creating account hierarchy\n
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Ferdig</string>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index 3c736465..4228e623 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -297,11 +297,11 @@
 	<string name="summary_xml_ofx_header">Schakel deze optie in als u naar een applicatie anders dan GnuCash wil exporteren</string>
 	<string name="title_whats_new">Nieuw sinds de vorige versie</string>
 	<string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currencey settings when creating account hierarchy\n
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Wijs af</string>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 434c8836..b5613327 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -296,13 +296,13 @@
 	  <string name="summary_xml_ofx_header">Habilitar essa opo quando estiver exportando para um software terceiro, diferente do GnuCash para desktop</string>
 	  <string name="title_whats_new">O que h de novo</string>
 	  <string name="whats_new">
-          - General resource and performance optimization\n
-          - Faster computation of account balances\n
-          - Set passcode to restrict access to app (in Settings)\n
-          - Export separate QIF files for each currency in use\n
-          - Use currencey settings when creating account hierarchy\n
-          - Multiple bug fixes and improvements\n
-	  </string>
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
+        - Multiple bug fixes and improvements\n
+	</string>
 	  <string name="label_dismiss">Descartar</string>
     <string name="toast_transanction_amount_required">Adicione um valor para salvar a transao</string>
     <string name="menu_import_accounts">Importar Contas do GnuCash</string>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index e1970d01..bdb78c76 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -297,11 +297,11 @@
 	<string name="summary_xml_ofx_header">  ,       GnuCash  </string>
 	<string name="title_whats_new"></string>
 	<string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currencey settings when creating account hierarchy\n
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss"></string>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index bf1506aa..9fe89a73 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -307,13 +307,13 @@
     <string name="summary_xml_ofx_header">GnuCash</string>
     <string name="title_whats_new"></string>
     <string name="whats_new">
-        - General resource and performance optimization\n
-        - \n
-        - \n
-        - QIF\n
-        - \n
-        - \n
-    </string>
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
+        - Multiple bug fixes and improvements\n
+	</string>
     <string name="label_dismiss"></string>
     <string name="toast_transanction_amount_required"></string>
     <string name="menu_import_accounts">GnuCash</string>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 8212902e..9d127fd6 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -308,11 +308,11 @@
 	<string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
 	<string name="title_whats_new">What\'s New</string>
 	<string name="whats_new">
-        - General resource and performance optimization\n
-        - Faster computation of account balances\n
-        - Set passcode to restrict access to app (in Settings)\n
-        - Export separate QIF files for each currency in use\n
-        - Use currency settings when creating account hierarchy\n
+        - Visual reports (Bar/Pie/line charts) \n
+        - Scheduled backups of (QIF, OFX, and XML)\n
+        - Backup/Export to DropBox and Google Drive\n
+        - Better recurrence options for scheduled transactions\n
+        - Navigation drawer for easier access to options\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Dismiss</string>

From bf1b15878f12dfc963fff1d733e6135510cb6266 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sat, 25 Apr 2015 01:23:19 +0200
Subject: [PATCH 10/16] Fixed: crash when exporting scheduled backup actions

Only export scheduled transactions
Updated error message in ExporterException
---
 .../main/java/org/gnucash/android/db/DatabaseAdapter.java | 15 ++++++++++++---
 .../java/org/gnucash/android/export/ExportAsyncTask.java  | 10 ++++------
 .../main/java/org/gnucash/android/export/Exporter.java    |  3 ++-
 .../org/gnucash/android/export/xml/GncXmlExporter.java    | 14 +++++++++-----
 4 files changed, 27 insertions(+), 15 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
index 6b30c994..90ed57f3 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
@@ -224,10 +224,19 @@ public Cursor fetchRecord(@NonNull String uid){
 	 * @return {@link Cursor} to all records in table <code>tableName</code>
 	 */
 	public Cursor fetchAllRecords(){
-		return mDb.query(mTableName,
-        		null, null, null, null, null, null);
+		return fetchAllRecords(null, null);
 	}
 
+    /**
+     * Fetch all records from database matching conditions
+     * @param where SQL where clause
+     * @param whereArgs String arguments for where clause
+     * @return Cursor to records matching conditions
+     */
+    public Cursor fetchAllRecords(String where, String[] whereArgs){
+        return mDb.query(mTableName, null, where, whereArgs, null, null, null);
+    }
+
 	/**
 	 * Deletes record with ID <code>rowID</code> from database table.
 	 * @param rowId ID of record to be deleted
@@ -311,7 +320,7 @@ public String getAccountCurrencyCode(@NonNull String accountUID) {
             if (cursor.moveToFirst()) {
                 return cursor.getString(0);
             } else {
-                throw new IllegalArgumentException("account " + accountUID + " does not exist");
+                throw new IllegalArgumentException("Account " + accountUID + " does not exist");
             }
         } finally {
             cursor.close();
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index b8732df8..047bf00d 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -155,20 +155,18 @@ protected Boolean doInBackground(ExportParams... params) {
                 writer.close();
             }
 
-        } catch (Exception e) {
+        } catch (final Exception e) {
             Log.e(TAG, "Error exporting: " + e.getMessage());
             Crashlytics.logException(e);
 
-            final String err_msg = e.getLocalizedMessage();
             if (mContext instanceof Activity) {
                 ((Activity)mContext).runOnUiThread(new Runnable() {
                     @Override
                     public void run() {
-                        Toast.makeText(mContext, R.string.toast_export_error,
+                        Toast.makeText(mContext,
+                                mContext.getString(R.string.toast_export_error, mExportParams.getExportFormat().name())
+                                + "\n" + e.getMessage(),
                                 Toast.LENGTH_SHORT).show();
-                        if (err_msg != null) {
-                            Toast.makeText(mContext, err_msg, Toast.LENGTH_LONG).show();
-                        }
                     }
                 });
             }
diff --git a/app/src/main/java/org/gnucash/android/export/Exporter.java b/app/src/main/java/org/gnucash/android/export/Exporter.java
index 0265b4bb..8e9c5aa2 100644
--- a/app/src/main/java/org/gnucash/android/export/Exporter.java
+++ b/app/src/main/java/org/gnucash/android/export/Exporter.java
@@ -190,7 +190,8 @@ public ExporterException(ExportParams params){
         }
 
         public ExporterException(ExportParams params, Throwable throwable){
-            super("Failed to generate " + params.getExportFormat().toString(), throwable);
+            super("Failed to generate " + params.getExportFormat().toString() +"-"+ throwable.getMessage(),
+                    throwable);
         }
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index d4a9fbde..50bf361e 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -467,16 +467,20 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
      * @param xmlSerializer XML serializer
      * @throws IOException
      */
-    private void exportScheduledActions(XmlSerializer xmlSerializer) throws IOException{
-        Cursor cursor = mScheduledActionDbAdapter.fetchAllRecords();
+    private void exportScheduledTransactions(XmlSerializer xmlSerializer) throws IOException{
+        //for now we will export only scheduled transactions to XML
+        Cursor cursor = mScheduledActionDbAdapter.fetchAllRecords(
+                ScheduledActionEntry.COLUMN_TYPE + "=?", new String[]{ScheduledAction.ActionType.TRANSACTION.name()});
 
         while (cursor.moveToNext()) {
             String actionUID = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ACTION_UID));
+            Account accountUID = mTransactionToTemplateAccountMap.get(actionUID);
 
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SCHEDULED_ACTION);
             xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_VERSION, GncXmlHelper.BOOK_VERSION);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_ID);
-            String nameUID = mTransactionToTemplateAccountMap.get(actionUID).getName();
+
+            String nameUID = accountUID.getName();
             xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_TYPE, GncXmlHelper.ATTR_VALUE_GUID);
             xmlSerializer.text(nameUID);
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_ID);
@@ -548,7 +552,7 @@ private void exportScheduledActions(XmlSerializer xmlSerializer) throws IOExcept
 
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_TEMPL_ACCOUNT);
             xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_TYPE, GncXmlHelper.ATTR_VALUE_GUID);
-            xmlSerializer.text(mTransactionToTemplateAccountMap.get(actionUID).getUID());
+            xmlSerializer.text(accountUID.getUID());
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_TEMPL_ACCOUNT);
 
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_SCHEDULE);
@@ -665,7 +669,7 @@ public void generateExport(Writer writer) throws ExporterException{
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS);
             }
             //scheduled actions
-            exportScheduledActions(xmlSerializer);
+            exportScheduledTransactions(xmlSerializer);
 
             xmlSerializer.endTag(null, GncXmlHelper.TAG_BOOK);
             xmlSerializer.endTag(null, GncXmlHelper.TAG_ROOT);

From 4da51e27075f52c22843e986e657828729de25dd Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sat, 25 Apr 2015 01:34:39 +0200
Subject: [PATCH 11/16] Extracted hard-coded string as resource

---
 app/src/main/res/layout/dialog_export.xml  | 2 +-
 app/src/main/res/values-de/strings.xml     | 1 +
 app/src/main/res/values-el/strings.xml     | 1 +
 app/src/main/res/values-es-rMX/strings.xml | 1 +
 app/src/main/res/values-es/strings.xml     | 1 +
 app/src/main/res/values-fr/strings.xml     | 1 +
 app/src/main/res/values-hu/strings.xml     | 1 +
 app/src/main/res/values-it/strings.xml     | 1 +
 app/src/main/res/values-nb/strings.xml     | 1 +
 app/src/main/res/values-nl/strings.xml     | 1 +
 app/src/main/res/values-pt-rBR/strings.xml | 1 +
 app/src/main/res/values-ru/strings.xml     | 1 +
 app/src/main/res/values-zh/strings.xml     | 1 +
 app/src/main/res/values/strings.xml        | 1 +
 14 files changed, 14 insertions(+), 1 deletion(-)

diff --git a/app/src/main/res/layout/dialog_export.xml b/app/src/main/res/layout/dialog_export.xml
index c462ac8f..2627ef2d 100644
--- a/app/src/main/res/layout/dialog_export.xml
+++ b/app/src/main/res/layout/dialog_export.xml
@@ -42,7 +42,7 @@
 
         <TextView
                 android:id="@+id/label_export_format"
-                android:text="Export Format"
+                android:text="@string/label_export_format"
                 android:layout_height="wrap_content"
                 android:layout_width="wrap_content"
                 android:layout_marginBottom="-8dip"
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 1315b9d8..af4b8321 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -485,4 +485,5 @@
     <string name="title_enable_crashlytics">Enable Crash Logging</string>
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!</string>
+    <string name="label_export_format">Export Format</string>
 </resources>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index f3a69f30..5e31e61b 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -504,4 +504,5 @@
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!
     </string>
+    <string name="label_export_format">Export Format</string>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index 07f60f97..208beb5a 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -489,4 +489,5 @@
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!
     </string>
+    <string name="label_export_format">Export Format</string>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index b3009ac6..c452bb3d 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -486,4 +486,5 @@
     <string name="title_enable_crashlytics">Enable Crash Logging</string>
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!</string>
+    <string name="label_export_format">Export Format</string>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index a15d5722..a8d359f6 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -486,4 +486,5 @@
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!
     </string>
+    <string name="label_export_format">Export Format</string>
 </resources>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index 4aea2fea..1709c29b 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -490,4 +490,5 @@
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!
     </string>
+    <string name="label_export_format">Export Format</string>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index 854c43a2..9bb08d93 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -490,4 +490,5 @@
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!
     </string>
+    <string name="label_export_format">Export Format</string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 791d7c8b..11b76c06 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -487,4 +487,5 @@
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!
     </string>
+    <string name="label_export_format">Export Format</string>
 </resources>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index 4228e623..3e2ed52f 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -491,4 +491,5 @@
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!
     </string>
+    <string name="label_export_format">Export Format</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index b5613327..0c6602d4 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -489,4 +489,5 @@
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!
     </string>
+    <string name="label_export_format">Export Format</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index bdb78c76..6702a2a4 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -495,4 +495,5 @@
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!
     </string>
+    <string name="label_export_format">Export Format</string>
 </resources>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index 9fe89a73..35882200 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -487,4 +487,5 @@
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!
     </string>
+    <string name="label_export_format">Export Format</string>
 </resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 9d127fd6..1dc604b0 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -494,4 +494,5 @@
     <string name="title_enable_crashlytics">Enable Crash Logging</string>
     <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!</string>
+    <string name="label_export_format">Export Format</string>
 </resources>

From 5114812ac5cf5b2ed53405da3305a9478d184f37 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jorge=20Mart=C3=ADnez=20L=C3=B3pez?= <jorgeml@gmail.com>
Date: Sat, 25 Apr 2015 20:04:16 +0100
Subject: [PATCH 12/16] New Spanish translations.

---
 app/src/main/res/values-es/strings.xml | 162 ++++++++++++++++-----------------
 1 file changed, 81 insertions(+), 81 deletions(-)

diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index c452bb3d..6fee7b67 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <!--
- Copyright (c) 2012 - 2014 Ngewi Fet <ngewif@gmail.com>
- Copyright (c) 2012 - 2014 Jorge Martnez Lpez <jorgeml@gmail.com>
+ Copyright (c) 2012 - 2015 Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 - 2015 Jorge Martnez Lpez <jorgeml@gmail.com>
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
@@ -395,96 +395,96 @@
     <string name="summary_save_opening_balances">Seleccionar para guardar el saldo actual (antes de borrar las transacciones) como nuevo saldo de apertura despues de borrar las transacciones
     </string>
     <string name="title_save_opening_balances">Guardar saldos de apertura</string>
-    <string name="export_warning_ofx">OFX does not support double-entry transactions</string>
-    <string name="export_warning_qif">Generates separate QIF files per currency</string>
-    <string name="title_transaction_splits">Transaction splits</string>
-    <string name="label_imbalance">Imbalance:</string>
-    <string name="btn_add_split">Add split</string>
-    <string name="label_passcode">Enter Passcode</string>
-    <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
-    <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
-    <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
-    <string name="header_passcode_settings">Passcode</string>
-    <string name="title_passcode_preferences">Passcode Preferences</string>
-    <string name="title_passcode_enabled">Passcode Turned On</string>
-    <string name="title_passcode_disabled">Passcode Turned Off</string>
-    <string name="title_change_passcode">Change Passcode</string>
-    <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
-    <string name="menu_title_favorite">Favorite</string>
-    <string name="drawer_open">Navigation drawer opened</string>
-    <string name="drawer_close">Navigation drawer closed</string>
-	<string name="title_reports">Reports</string>
-	<string name="title_pie_chart">Pie Chart</string>
-	<string name="title_line_chart">Line Chart</string>
-	<string name="title_bar_chart">Bar Chart</string>
-	<string name="menu_order_by_size">Order by size</string>
-	<string name="menu_toggle_legend">Toggle legend</string>
-	<string name="menu_toggle_labels">Toggle labels</string>
-	<string name="menu_toggle_percentage_mode">Toggle percentage</string>
-	<string name="menu_toggle_average_lines">Toggle average lines</string>
-	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
-	<string name="label_chart_no_data">No chart data available</string>
-	<string name="label_chart_overall">Overall</string>
+    <string name="export_warning_ofx">OFX no soporta transacciones de doble entrada</string>
+    <string name="export_warning_qif">Genera archivos QIF individuales por divisa</string>
+    <string name="title_transaction_splits">Desglose de transacci&#243;n</string>
+    <string name="label_imbalance">Descuadre:</string>
+    <string name="btn_add_split">A&#241;adir desglose</string>
+    <string name="label_passcode">Introducir contrase&#241;a</string>
+    <string name="toast_wrong_passcode">Contrase&#241;a incorrecta, intentar otra vez</string>
+    <string name="toast_passcode_set">Contrase&#241;a establecida</string>
+    <string name="toast_confirm_passcode">Confirme su contrase&#241;a</string>
+    <string name="toast_invalid_passcode_confirmation">Confirmaci&#243;n de contrase&#241;a incorrecta. Int&#233;ntelo de nuevo</string>
+    <string name="header_passcode_settings">Contrase&#241;a</string>
+    <string name="title_passcode_preferences">Ajustes de contrase&#241;a</string>
+    <string name="title_passcode_enabled">Contrase&#241;a activada</string>
+    <string name="title_passcode_disabled">Contrase&#241;a desactivada</string>
+    <string name="title_change_passcode">Cambiar Contrase&#241;a</string>
+    <string name="toast_error_edit_multi_currency_transaction">Las transacciones multi-divisa so se pueden modificar</string>
+    <string name="menu_title_favorite">Favorito</string>
+    <string name="drawer_open">Caj&#243;n de navegaci&#243;n abierto</string>
+    <string name="drawer_close">Caj&#243;n de navegaci&#243;n cerrado</string>
+	<string name="title_reports">Informes</string>
+	<string name="title_pie_chart">Gr&#225;fico de tarta</string>
+	<string name="title_line_chart">Gr&#225;fico de l&#237;nea</string>
+	<string name="title_bar_chart">Gr&#225;fico de barras</string>
+	<string name="menu_order_by_size">Ordenar por tama&#241;o</string>
+	<string name="menu_toggle_legend">Activar o desactivar leyenda</string>
+	<string name="menu_toggle_labels">Activar o desactivar etiquetas</string>
+	<string name="menu_toggle_percentage_mode">Activar o desactivar porcentajes</string>
+	<string name="menu_toggle_average_lines">Activar o desactivar l&#237;neas de medias</string>
+	<string name="menu_group_smaller_slices">Agrupar porciones peque&#241;as</string>
+	<string name="label_chart_no_data">Datos del gr&#225;fico no disponibles</string>
+	<string name="label_chart_overall">Total</string>
 	<string name="label_chart_total">Total\n</string>
-	<string name="label_other_slice">Other</string>
-	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
-	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
-    <string name="label_save_template">Save as template</string>
-    <string name="label_delete_account_transactions_description">This account contains transactions. \nWhat would you like to do with these transactions</string>
-    <string name="label_delete_account_subaccounts_description">This account contains sub-accounts. \nWhat would you like to do with these sub-accounts</string>
-    <string name="label_delete_transactions">Delete transactions</string>
-    <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
-    <string name="label_tap_to_create_schedule">Tap to create schedule</string>
-    <string name="title_restore_backup">Restore Backup</string>
-	<string name="header_backup_and_export_settings">Backup &amp; export</string>
+	<string name="label_other_slice">Otros</string>
+	<string name="toast_chart_percentage_mode_total">El porcentaje del valor seleccionado calculado sobre la cantidad total</string>
+	<string name="toast_chart_percentage_mode_current_bar">El porcentaje del valor seleccionado calculado sobre la cantidad de la barra apilada actual</string>
+    <string name="label_save_template">Guardar como plantilla</string>
+    <string name="label_delete_account_transactions_description">Esta cuenta contiene transacciones. \n&#191;Qu&#233;e quiere hacer con estas transacciones?</string>
+    <string name="label_delete_account_subaccounts_description">Esta cuenta contiene sub-cuentas. \n&#191;Qu&#233;e quiere hacer con estas sub-cuentas?</string>
+    <string name="label_delete_transactions">Borrar transacciones</string>
+    <string name="toast_disable_double_entry_to_save_transaction">Cree y especifique una cuenta de transferencia o desactive la doble entrada en ajustes para guardar la transacci&#243;n</string>
+    <string name="label_tap_to_create_schedule">Toque para crear la programaci&#243;n</string>
+    <string name="title_restore_backup">Restaurar copia de seguridad</string>
+	<string name="header_backup_and_export_settings">Copia de seguridad y exportaci&#243;n</string>
 	<string name="title_dropbox_sync_preference">DropBox Sync</string>
-	<string name="title_backup_preference_category">Backup</string>
-	<string name="summary_dropbox_sync">Enable to sync to DropBox</string>
-	<string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
-	<string name="title_backup_prefs">Backup Preferences</string>
-	<string name="title_create_backup_pref">Create Backup</string>
-	<string name="summary_create_backup_pref">By default backups are saved to the SDCARD</string>
-	<string name="summary_restore_backup_pref">Select a specific backup to restore</string>
-	<string name="toast_backup_successful">Backup successful</string>
-	<string name="toast_backup_failed">Backup failed</string>
-	<string name="export_warning_xml">Exports all accounts and transactions</string>
+	<string name="title_backup_preference_category">Copia de seguridad</string>
+	<string name="summary_dropbox_sync">Activar sincronizaci&#243;n con DropBox</string>
+	<string name="title_select_gnucash_xml_file">Seleccionar archivo XML GnuCash</string>
+	<string name="title_backup_prefs">Preferencias de copia de seguridad</string>
+	<string name="title_create_backup_pref">Crear copia de seguridad</string>
+	<string name="summary_create_backup_pref">Por defecto las copias de seguridad se guardan en la tarjeta SD</string>
+	<string name="summary_restore_backup_pref">Seleccione una copia de seguridad a restaurar</string>
+	<string name="toast_backup_successful">Copia de seguridad exitosa</string>
+	<string name="toast_backup_failed">Copia de seguridad fallida</string>
+	<string name="export_warning_xml">Exportar todas las cuentas y transacciones</string>
 	<string name="title_google_drive_sync_pref">Google Drive Sync</string>
-	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
-	<string name="toast_install_file_manager">Install a file manager to select files</string>
-	<string name="title_select_backup_to_restore">Select backup to restore</string>
-	<string name="nav_menu_favorites">Favorites</string>
-	<string name="nav_menu_open">Open</string>
-	<string name="nav_menu_reports">Reports</string>
-	<string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
-	<string name="nav_menu_export">Export</string>
-	<string name="nav_menu_settings">Settings</string>
+	<string name="summary_google_drive_sync">Activar sincronizaci&#243;n con Google Drive</string>
+	<string name="toast_install_file_manager">Instale un gestor de archivos para seleccionar archivos</string>
+	<string name="title_select_backup_to_restore">Seleccione la copia de seguridad a restaurar</string>
+	<string name="nav_menu_favorites">Favoritos</string>
+	<string name="nav_menu_open">Abrir</string>
+	<string name="nav_menu_reports">Informes</string>
+	<string name="nav_menu_scheduled_transactions">Transacciones Programadas</string>
+	<string name="nav_menu_export">Exportar</string>
+	<string name="nav_menu_settings">Ajustes</string>
 	<plurals name="label_every_x_days">
-        <item quantity="one">Daily</item>
-        <item quantity="other">Every %d days</item>
+        <item quantity="one">Diario</item>
+        <item quantity="other">Cada %d d&#237;as</item>
     </plurals>
     <plurals name="label_every_x_weeks">
-        <item quantity="one">Weekly</item>
-        <item quantity="other">Every %d weeks</item>
+        <item quantity="one">Semanal</item>
+        <item quantity="other">Cada %d semanas</item>
     </plurals>
     <plurals name="label_every_x_months">
-        <item quantity="one">Monthly</item>
-        <item quantity="other">Every %d months</item>
+        <item quantity="one">Mensual</item>
+        <item quantity="other">Cada %d meses</item>
     </plurals>
     <plurals name="label_every_x_years">
-        <item quantity="one">Yearly</item>
-        <item quantity="other">Every %d years</item>
+        <item quantity="one">Anual</item>
+        <item quantity="other">Cada %d a&#241;os</item>
     </plurals>
 	<string name="whats_new">
-        - Visual reports (Bar/Pie/line charts) \n
-        - Scheduled backups of (QIF, OFX, and XML)\n
-        - Backup/Export to DropBox and Google Drive\n
-        - Better recurrence options for scheduled transactions\n
-        - Navigation drawer for easier access to options\n
-        - Multiple bug fixes and improvements\n
+        - Informes visuales (Barra/Tarta/linea) \n
+        - Copias de seguridad programadas (QIF, OFX y XML)\n
+        - Copia de seguridad/Exportar a DropBox y Google Drive\n
+        - M&#225;s opciones de recurrencia para transacciones programadas\n
+        - Caj&#243;n de navegaci&#243;n para f&#225;cil acceso a las opciones\n
+        - M&#250;ltiples fallos solucionados y otras mejoras\n
 	</string>
-    <string name="title_enable_crashlytics">Enable Crash Logging</string>
-    <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
-No user-identifiable information will be collected as part of this process!</string>
-    <string name="label_export_format">Export Format</string>
+    <string name="title_enable_crashlytics">Activar registro de cuelgues</string>
+    <string name="msg_enable_crashlytics">Activar para enviar informaci&#243;n de errores a los desarolladores (recomendado).
+Este proceso solo recoge informaci&#243;n que no permite identificar al usuario</string>
+    <string name="label_export_format">Formato de exportaci&#243;n</string>
 </resources>

From b216f4f5b74fed0ee6d22be4e331f27157db9405 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 27 Apr 2015 11:12:56 +0200
Subject: [PATCH 13/16] Fixed: scheduled transaction timestamps may be
 incorrect (depending on when service is invoked)

The timestamps are corrected by computing when they should have actually been executed
Feature: Generate missed scheduled transactions (since last file open) during import of XML files
---
 .../org/gnucash/android/db/DatabaseHelper.java     |  1 +
 .../gnucash/android/importer/GncXmlHandler.java    | 54 +++++++++++++++++++++-
 .../gnucash/android/importer/ImportAsyncTask.java  |  1 -
 .../gnucash/android/service/SchedulerService.java  | 12 ++++-
 4 files changed, 64 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
index 559ddbb9..412f0486 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
@@ -466,6 +466,7 @@ private int upgradeDbToVersion8(SQLiteDatabase db) {
                 scheduledAction.setActionUID(cursor.getString(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID)));
                 long period = cursor.getLong(cursor.getColumnIndexOrThrow("recurrence_period"));
                 scheduledAction.setPeriod(period);
+                scheduledAction.setStartTime(timestamp.getTime()); //the start time is when the transaction was created
                 scheduledAction.setLastRun(System.currentTimeMillis()); //prevent this from being executed at the end of migration
                 scheduledActionDbAdapter.addScheduledAction(scheduledAction);
 
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index a35584e4..4fbee7cf 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -122,6 +122,11 @@
     List<Transaction> mTransactionList;
 
     /**
+     * All the template transactions found during parsing of the XML
+     */
+    List<Transaction> mTemplateTransactions;
+
+    /**
      * Accumulate attributes of splits found in this object
      */
     Split mSplit;
@@ -227,6 +232,7 @@ private void init(@Nullable SQLiteDatabase db) {
         mScheduledActionsList = new ArrayList<>();
 
         mTemplatAccountList = new ArrayList<>();
+        mTemplateTransactions = new ArrayList<>();
         mTemplateAccountToTransactionMap = new HashMap<>();
 
         mAutoBalanceSplits = new ArrayList<>();
@@ -457,7 +463,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     throw new SAXException("Unable to parse transaction time", e);
                 }
                 break;
-            case GncXmlHelper.TAG_RECURRENCE_PERIOD:
+            case GncXmlHelper.TAG_RECURRENCE_PERIOD: //for parsing of old backup files
                 mRecurrencePeriod = Long.parseLong(characterString);
                 mTransaction.setTemplate(mRecurrencePeriod > 0);
                 break;
@@ -507,7 +513,9 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     mAutoBalanceSplits.add(imbSplit);
                 }
                 mTransactionList.add(mTransaction);
-
+                if (mInTemplates){
+                    mTemplateTransactions.add(mTransaction);
+                }
                 if (mRecurrencePeriod > 0) { //if we find an old format recurrence period, parse it
                     mTransaction.setTemplate(true);
                     ScheduledAction scheduledAction = ScheduledAction.parseScheduledAction(mTransaction, mRecurrencePeriod);
@@ -583,6 +591,9 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                 break;
             case GncXmlHelper.TAG_SCHEDULED_ACTION:
                 mScheduledActionsList.add(mScheduledAction);
+                int count = generateMissedScheduledTransactions(mScheduledAction);
+                Log.i(LOG_TAG, String.format("Generated %d transactions from scheduled actions", count));
+                mRecurrenceMultiplier = 1; //reset it, even though it will be parsed from XML each time
                 break;
         }
 
@@ -711,4 +722,43 @@ private Currency getCurrencyForAccount(String accountUID){
             return Currency.getInstance(Money.DEFAULT_CURRENCY_CODE);
         }
     }
+
+    /**
+     * Generates the runs of the scheduled action which have been missed since the file was last opened.
+     * @param scheduledAction Scheduled action for transaction
+     * @return Number of transaction instances generated
+     */
+    private int generateMissedScheduledTransactions(ScheduledAction scheduledAction){
+        //if this scheduled action should not be run for any reason, return immediately
+        if (scheduledAction.getActionType() != ScheduledAction.ActionType.TRANSACTION
+                || !scheduledAction.isEnabled()
+                || (scheduledAction.getEndTime() > 0 && scheduledAction.getEndTime() > System.currentTimeMillis())
+                || (scheduledAction.getTotalFrequency() > 0 && scheduledAction.getExecutionCount() >= scheduledAction.getTotalFrequency())){
+            return 0;
+        }
+
+        long lastRuntime = scheduledAction.getStartTime();
+        if (scheduledAction.getLastRun() > 0){
+            lastRuntime = scheduledAction.getLastRun();
+        }
+
+        int generatedTransactionCount = 0;
+        long period = scheduledAction.getPeriod();
+        final String actionUID = scheduledAction.getActionUID();
+        while ((lastRuntime = lastRuntime + period) <= System.currentTimeMillis()){
+            for (Transaction templateTransaction : mTemplateTransactions) {
+                if (templateTransaction.getUID().equals(actionUID)){
+                    Transaction transaction = new Transaction(templateTransaction, true);
+                    transaction.setTime(lastRuntime);
+                    transaction.setScheduledActionUID(scheduledAction.getUID());
+                    mTransactionList.add(transaction);
+                    scheduledAction.setExecutionCount(scheduledAction.getExecutionCount() + 1);
+                    ++generatedTransactionCount;
+                    break;
+                }
+            }
+        }
+        scheduledAction.setLastRun(lastRuntime);
+        return generatedTransactionCount;
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
index b3ee27e1..0546a82c 100644
--- a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
@@ -26,7 +26,6 @@
 import com.crashlytics.android.Crashlytics;
 
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.util.TaskDelegate;
 
diff --git a/app/src/main/java/org/gnucash/android/service/SchedulerService.java b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
index 556dd4c7..aa85d985 100644
--- a/app/src/main/java/org/gnucash/android/service/SchedulerService.java
+++ b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
@@ -34,6 +34,7 @@
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Transaction;
 
+import java.sql.Timestamp;
 import java.util.List;
 import java.util.concurrent.ExecutionException;
 
@@ -100,8 +101,17 @@ private void executeScheduledEvent(ScheduledAction scheduledAction){
                 TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
                 Transaction trxnTemplate = transactionsDbAdapter.getTransaction(eventUID);
                 Transaction recurringTrxn = new Transaction(trxnTemplate, true);
-                recurringTrxn.setTime(System.currentTimeMillis());
 
+                //we may be executing scheduled action significantly after scheduled time (depending on when Android fires the alarm)
+                //so compute the actual transaction time from pre-known values
+                long transactionTime; //default
+                if (scheduledAction.getLastRun() > 0){
+                    transactionTime = scheduledAction.getLastRun() + scheduledAction.getPeriod();
+                } else {
+                    transactionTime = scheduledAction.getStartTime() + scheduledAction.getPeriod();
+                }
+                recurringTrxn.setTime(transactionTime);
+                recurringTrxn.setCreatedTimestamp(new Timestamp(transactionTime));
                 transactionsDbAdapter.addTransaction(recurringTrxn);
                 break;
 

From 13bc5350d557ddbd690739cdbe32fbc4d267d378 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 29 Apr 2015 10:26:12 +0200
Subject: [PATCH 14/16] Improved logging of errors during XML import

Improved detection of new minor version
Open navigation drawer on first run after upgrade (not only for new users)
Updated README
---
 README.md                                          | 35 +++++++++++++++++-----
 app/build.gradle                                   |  1 +
 .../gnucash/android/export/xml/GncXmlHelper.java   |  4 ---
 .../gnucash/android/importer/GncXmlHandler.java    | 22 ++++++++++----
 .../android/ui/account/AccountsActivity.java       | 18 +++++++----
 5 files changed, 58 insertions(+), 22 deletions(-)

diff --git a/README.md b/README.md
index 9607ae57..a24c5e62 100644
--- a/README.md
+++ b/README.md
@@ -1,14 +1,35 @@
 # Introduction
 
-Gnucash Android is companion application for desktop Gnucash designed for Android.
-It allows you to record transactions on-the-go and export them in the QIF, OFX or (GnuCash)-XML format and later import the data into Gnucash for the desktop. The app supports multiple nested accounts, scheduled transactions and backup/export to 3rd-party services (like DropBox & Google Drive).
+GnuCash Android is a companion expense-tracker application for GnuCash (desktop) designed for Android.
+It allows you to record transactions on-the-go and later import the data into GnuCash for the desktop. 
 
-The application supports Android 2.3.4 Froyo (API level 10) and above. 
+The application supports Android 2.3.4 Gingerbread (API level 10) and above.
+
+Features include:
+
+  * An easy-to-use interface.
+
+  * Chart of Accounts: A master account can have a hierarchy of detail accounts underneath it.  
+    This allows similar account types (e.g. Cash, Bank, Stock) to be grouped into one master account (e.g. Assets).
+
+  * Split Transactions: A single transaction can be split into several pieces to record taxes, fees, and other compound entries.
+
+  * Double Entry: Every transaction must debit one account and credit another by an equal amount. 
+    This ensures that the "books balance": that the difference between income and outflow exactly
+    equals the sum of all assets, be they bank, cash, stock or other.
+
+  * Income/Expense Account Types (Categories): These serve not only to categorize your cash flow, but when used properly with the double-entry feature, these can provide an accurate Profit&Loss statement.
+
+  * Scheduled Transactions: GnuCash has the ability to automatically create and enter transactions.
+
+  * Export to GnuCash XML, QIF or OFX. Also, scheduled exports to 3rd-party sync services like DropBox and Google Drive
+
+  * Reports: View summary of transactions (income and expenses) as pie/bar/line charts
 
 
 # Installation
 
-There are different ways to get the Gnucash app for Android; through the app store, or building it yourself.
+There are different ways to get the GnuCash app for Android; through the app store, or building it yourself.
 
 
 ### App Store
@@ -51,10 +72,10 @@ Then, Gradle will do everything for you.
 
 There are several ways you could contribute to the development.
 
-One way is providing translations for locales which are not yet available, or improving translations.
+* One way is providing translations for locales which are not yet available, or improving translations.
 See this [blog post](http://www.codinguser.com/2012/09/gnucash-for-android-beta-2-lost-in-translation/) for some guidelines.
 
-You could as well contribute code, fixing bugs, new features or automated tests.
+* You could as well contribute code, fixing bugs, new features or automated tests. Pull requests are always welcome.
 Take a look at the [bug tracker](https://github.com/codinguser/gnucash-android/issues?state=open)
 for ideas where to start.
 
@@ -62,7 +83,7 @@ For development, it is recommended to use the Android Studio for development whi
 Import the project into the IDE using the build.gradle file. The IDE will resolve dependencies automatically.
 
 #Licence
-Gnucash for Android is free software; you can redistribute it and/or 
+GnuCash Android is free software; you can redistribute it and/or
 modify it under the terms of the Apache license, version 2.0.
 You may obtain a copy of the License at
 
diff --git a/app/build.gradle b/app/build.gradle
index 2d5cef93..33271f09 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -29,6 +29,7 @@ android {
         versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
         versionName "${versionMajor}.${versionMinor}.${versionPatch}"
         resValue "string", "app_version_name", "${versionName}"
+        resValue "string", "app_minor_version", "${versionMinor}"
         if (project.hasProperty("RELEASE_DROPBOX_APP_KEY")){
             resValue "string", "dropbox_app_key", RELEASE_DROPBOX_APP_KEY
             resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
index 818e9923..8d0a5d2b 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
@@ -22,16 +22,12 @@
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.TransactionType;
-import org.w3c.dom.Document;
-import org.w3c.dom.Element;
 
 import java.math.BigDecimal;
 import java.math.BigInteger;
-import java.text.NumberFormat;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.Date;
-import java.util.IllegalFormatException;
 import java.util.Locale;
 
 /**
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 4fbee7cf..040d2398 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -334,7 +334,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                         if (mRootAccount == null) {
                             mRootAccount = mAccount;
                         } else {
-                            throw new SAXException("multiple ROOT accounts exist in book");
+                            throw new SAXException("Multiple ROOT accounts exist in book");
                         }
                     }
                     // prepare for next input
@@ -380,6 +380,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     mAccount.setPlaceHolderFlag(Boolean.parseBoolean(characterString));
                     mInPlaceHolderSlot = false;
                 } else if (mInColorSlot) {
+                    Log.d(LOG_TAG, "Parsing color code: " + characterString);
                     String color = characterString.trim();
                     //Gnucash exports the account color in format #rrrgggbbb, but we need only #rrggbb.
                     //so we trim the last digit in each block, doesn't affect the color much
@@ -394,7 +395,6 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                             //sometimes the color entry in the account file is "Not set" instead of just blank. So catch!
                             Log.e(LOG_TAG, "Invalid color code '" + color + "' for account " + mAccount.getName());
                             Crashlytics.logException(ex);
-
                         }
                     }
                     mInColorSlot = false;
@@ -423,6 +423,12 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                                 mTransaction.getCurrency());
                         mSplit.setAmount(amount.absolute());
                         mSplit.setType(TransactionType.CREDIT);
+                    } catch (NumberFormatException e) {
+                        String msg = "Error parsing template credit split amount " + characterString;
+                        Log.e(LOG_TAG, msg + "\n" + e.getMessage());
+                        Crashlytics.log(msg);
+                        Crashlytics.logException(e);
+                        throw new SAXException(msg, e); //if we fail to parse the split amount, terminate import - data integrity compromised
                     } finally {
                         mInCreditFormulaSlot = false;
                     }
@@ -433,8 +439,11 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                         mSplit.setAmount(amount.absolute());
                         mSplit.setType(TransactionType.DEBIT);
                     } catch (NumberFormatException e) {
-                        Log.e(LOG_TAG, "Error parsing template split amount " + characterString + " - " + e.getMessage());
+                        String msg = "Error parsing template debit split amount " + characterString;
+                        Log.e(LOG_TAG, msg + "\n" + e.getMessage());
+                        Crashlytics.log(msg);
                         Crashlytics.logException(e);
+                        throw new SAXException(msg, e); //if we fail to parse the split amount, terminate import - data integrity compromised
                     } finally {
                         mInDebitFormulaSlot = false;
                     }
@@ -460,7 +469,10 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     }
                 } catch (ParseException e) {
                     Crashlytics.logException(e);
-                    throw new SAXException("Unable to parse transaction time", e);
+                    String message = "Unable to parse transaction time - " + characterString;
+                    Log.e(LOG_TAG, message + "\n" + e.getMessage());
+                    Crashlytics.log(message);
+                    throw new SAXException(message, e);
                 }
                 break;
             case GncXmlHelper.TAG_RECURRENCE_PERIOD: //for parsing of old backup files
@@ -485,7 +497,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     }
                     mQuantity = GncXmlHelper.parseSplitAmount(q);
                 } catch (ParseException e) {
-                    String msg = "Error to parsing split quantity";
+                    String msg = "Error to parsing split quantity - " + characterString;
                     Crashlytics.log(msg);
                     Crashlytics.logException(e);
                     throw new SAXException(msg, e);
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 59bbdc88..3991a1e8 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -322,7 +322,14 @@ private void init() {
         }
 
         if (hasNewFeatures()){
-            showWhatsNewDialog(this);
+            AlertDialog dialog = showWhatsNewDialog(this);
+            //TODO: remove this when we upgrade to 1.7.0. Users will already know the nav drawer then
+            dialog.setOnDismissListener(new DialogInterface.OnDismissListener() {
+                @Override
+                public void onDismiss(DialogInterface dialog) {
+                    mDrawerLayout.openDrawer(mDrawerList);
+                }
+            });
         }
         GnuCashApplication.startScheduledActionExecutionService(this);
     }
@@ -340,9 +347,8 @@ protected void onDestroy() {
 	 * @return <code>true</code> if the minor version has been increased, <code>false</code> otherwise.
 	 */
 	private boolean hasNewFeatures(){
-        String versionName = getResources().getString(R.string.app_version_name);
-        int end = versionName.indexOf('.');
-        int currentMinor = Integer.parseInt(versionName.substring(0, end));
+        String minorVersion = getResources().getString(R.string.app_minor_version);
+        int currentMinor = Integer.parseInt(minorVersion);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         int previousMinor = prefs.getInt(getString(R.string.key_previous_minor_version), 0);
@@ -358,7 +364,7 @@ private boolean hasNewFeatures(){
 	/**
 	 * Show dialog with new features for this version
 	 */
-	public static void showWhatsNewDialog(Context context){
+	public static AlertDialog showWhatsNewDialog(Context context){
         Resources resources = context.getResources();
         StringBuilder releaseTitle = new StringBuilder(resources.getString(R.string.title_whats_new));
         PackageInfo packageInfo;
@@ -370,7 +376,7 @@ public static void showWhatsNewDialog(Context context){
             Log.e(LOG_TAG, "Error displaying 'Whats new' dialog");
         }
 
-        new AlertDialog.Builder(context)
+        return new AlertDialog.Builder(context)
 		.setTitle(releaseTitle.toString())
 		.setMessage(R.string.whats_new)
 		.setPositiveButton(R.string.label_dismiss, new DialogInterface.OnClickListener() {

From 090364256ceedae38f82e86bb30992e4f3833ff4 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 29 Apr 2015 17:10:06 +0200
Subject: [PATCH 15/16] Fixed: crash when parsing template transaction split
 amount formulas

Implemented a locale-independent parsing of the amount
When exporting XML, the amount is formatted based on the locale
---
 app/build.gradle                                   |  2 +-
 .../gnucash/android/export/xml/GncXmlHelper.java   | 46 +++++++++++++++++-----
 2 files changed, 37 insertions(+), 11 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 33271f09..a710297f 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -6,7 +6,7 @@ apply plugin: 'crashlytics'
 def versionMajor = 1
 def versionMinor = 6
 def versionPatch = 0
-def versionBuild = 0
+def versionBuild = 1
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd_HHmm'UTC'")
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
index 8d0a5d2b..d3953120 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
@@ -25,10 +25,13 @@
 
 import java.math.BigDecimal;
 import java.math.BigInteger;
+import java.text.NumberFormat;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.Date;
 import java.util.Locale;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
 
 /**
  * Collection of helper tags and methods for Gnc XML export
@@ -166,15 +169,37 @@ public static String formatMoney(Split split){
     }
 
     /**
-     * Parses the amounts in template transaction splits
-     * <p>This makes the assumption that the amount uses comma (,) as decimal separators</p>
+     * Parses the amounts in template transaction splits.
+     * <p>GnuCash desktop formats the amounts based on the locale of the computer. That poses a problem here as the input can vary per user.<br/>
+     *     The solution is to parse the string irrespective of comma or thousands separators as follows:
+     *     <ol>
+     *         <li>Find the last non-numeric character and split the string at that point</li>
+     *         <li>If the length of the 2nd part is &gt;= 2, then it is a thousands separator, else it is decimal</li>
+     *         <li>Append the two parts again together accordingly</li>
+     *         <li>If no non-numeric character was found, then just return a new {@link BigDecimal}</li>
+     *     </ol>
+     * </p>
      * @param amountString String value of the amount.
      * @return BigDecimal representation of the amount
+     * @see #formatTemplateSplitAmount(BigDecimal)
      */
     public static BigDecimal parseTemplateSplitAmount(@NonNull String amountString){
-        amountString = amountString.replaceAll("\\.", ""); //first remove periods (thousandths separator)
-        amountString = amountString.replaceAll(",", "."); //replace decimal separator (,) with periods
-        return new BigDecimal(amountString);
+        Pattern pattern = Pattern.compile(".*\\D");
+        Matcher matcher = pattern.matcher(amountString);
+        if (matcher.find()){
+            int index = matcher.end();
+            String wholeNum = amountString.substring(0, index).replaceAll("\\D", "");
+            String decimal = amountString.substring(index);
+            String parsedAmountString;
+            if (decimal.length() > 2){ //then it is just another thousands separator, just add it back
+                parsedAmountString = wholeNum + decimal;
+            } else { //add it as a decimal
+                parsedAmountString = wholeNum + "." + decimal;
+            }
+            return new BigDecimal(parsedAmountString);
+        } else {//an amount string with no commas or periods
+            return new BigDecimal(amountString);
+        }
     }
 
     /**
@@ -194,14 +219,15 @@ public static BigDecimal parseSplitAmount(String amountString) throws ParseExcep
     }
 
     /**
-     * Format the amount in template splits.
-     * This format uses commas for decimal separation
+     * Format the amount in template transaction splits.
+     * <p>GnuCash desktop always formats with a locale dependent format, and that varies per user.<br>
+     * So we will use the device locale here and hope that the user has the same locale on the desktop GnuCash</p>
      * @param amount Amount to be formatted
      * @return String representation of amount
+     * @see #parseTemplateSplitAmount(String)
      */
     public static String formatTemplateSplitAmount(BigDecimal amount){
-        //TODO: Check if GnuCash desktop always using this formatting or if it is device locale specific
-        String value = amount.toPlainString();
-        return value.replaceAll("\\.", ",");
+        //TODO: If we ever implement an application-specific locale setting, use it here as well
+        return NumberFormat.getNumberInstance().format(amount);
     }
 }

From e2a6f5fa1ff75f4a0889d865dcc54e1496df7072 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 29 Apr 2015 21:41:39 +0200
Subject: [PATCH 16/16] Fixed: import crashes when there are scheduled
 transactions in XML

* Parse scheduled transaction <sx:autoCreate /> XML tag and use it when auto-generating transactions
---
 .../gnucash/android/importer/GncXmlHandler.java    | 13 +++++++++----
 .../org/gnucash/android/model/ScheduledAction.java | 22 ++++++++++++++++++++++
 2 files changed, 31 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 040d2398..7f77eac8 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -553,6 +553,9 @@ public void endElement(String uri, String localName, String qualifiedName) throw
             case GncXmlHelper.TAG_SX_ENABLED:
                 mScheduledAction.setEnabled(characterString.equals("y"));
                 break;
+            case GncXmlHelper.TAG_SX_AUTO_CREATE:
+                mScheduledAction.setAutoCreate(characterString.equals("y"));
+                break;
             case GncXmlHelper.TAG_SX_NUM_OCCUR:
                 mScheduledAction.setTotalFrequency(Integer.parseInt(characterString));
                 break;
@@ -604,7 +607,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
             case GncXmlHelper.TAG_SCHEDULED_ACTION:
                 mScheduledActionsList.add(mScheduledAction);
                 int count = generateMissedScheduledTransactions(mScheduledAction);
-                Log.i(LOG_TAG, String.format("Generated %d transactions from scheduled actions", count));
+                Log.i(LOG_TAG, String.format("Generated %d transactions from scheduled action", count));
                 mRecurrenceMultiplier = 1; //reset it, even though it will be parsed from XML each time
                 break;
         }
@@ -708,10 +711,12 @@ public void endDocument() throws SAXException {
             mAccountsDbAdapter.deleteAllRecords();
             long nAccounts = mAccountsDbAdapter.bulkAddAccounts(mAccountList);
             Log.d("Handler:", String.format("%d accounts inserted", nAccounts));
-            long nTransactions = mTransactionsDbAdapter.bulkAddTransactions(mTransactionList);
-            Log.d("Handler:", String.format("%d transactions inserted", nTransactions));
+            //We need to add scheduled actions first because there is a foreign key constraint on transactions
+            //which are generated from scheduled actions (we do auto-create some transactions during import)
             int nSchedActions = mScheduledActionsDbAdapter.bulkAddScheduledActions(mScheduledActionsList);
             Log.d("Handler:", String.format("%d scheduled actions inserted", nSchedActions));
+            long nTransactions = mTransactionsDbAdapter.bulkAddTransactions(mTransactionList);
+            Log.d("Handler:", String.format("%d transactions inserted", nTransactions));
             long endTime = System.nanoTime();
             Log.d("Handler:", String.format(" bulk insert time: %d", endTime - startTime));
             mAccountsDbAdapter.setTransactionSuccessful();
@@ -743,7 +748,7 @@ private Currency getCurrencyForAccount(String accountUID){
     private int generateMissedScheduledTransactions(ScheduledAction scheduledAction){
         //if this scheduled action should not be run for any reason, return immediately
         if (scheduledAction.getActionType() != ScheduledAction.ActionType.TRANSACTION
-                || !scheduledAction.isEnabled()
+                || !scheduledAction.isEnabled() || !scheduledAction.shouldAutoCreate()
                 || (scheduledAction.getEndTime() > 0 && scheduledAction.getEndTime() > System.currentTimeMillis())
                 || (scheduledAction.getTotalFrequency() > 0 && scheduledAction.getExecutionCount() >= scheduledAction.getTotalFrequency())){
             return 0;
diff --git a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
index 059c87e9..bea49f09 100644
--- a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
+++ b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
@@ -75,6 +75,12 @@
      */
     private int mExecutionCount = 0;
 
+    /**
+     * Flag for whether the scheduled transaction should be auto-created
+     * TODO: Add this flag to the database. At the moment we always treat it as true
+     */
+    private boolean autoCreate = true;
+
     public ScheduledAction(ActionType actionType){
         mActionType = actionType;
         mStartDate = System.currentTimeMillis();
@@ -328,6 +334,22 @@ public void setExecutionCount(int executionCount){
     }
 
     /**
+     * Returns flag if transactions should be automatically created or not
+     * @return {@code true} if the transaction should be auto-created, {@code false} otherwise
+     */
+    public boolean shouldAutoCreate() {
+        return autoCreate;
+    }
+
+    /**
+     * Set flag for automatically creating transaction based on this scheduled action
+     * @param autoCreate Flag for auto creating transactions
+     */
+    public void setAutoCreate(boolean autoCreate) {
+        this.autoCreate = autoCreate;
+    }
+
+    /**
      * Returns the event schedule (start, end and recurrence)
      * @return String description of repeat schedule
      */
