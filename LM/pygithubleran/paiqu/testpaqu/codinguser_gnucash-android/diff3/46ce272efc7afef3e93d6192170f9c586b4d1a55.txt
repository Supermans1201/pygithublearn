From 46ce272efc7afef3e93d6192170f9c586b4d1a55 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 29 Jul 2015 13:36:57 +0200
Subject: [PATCH] Fixed some account operations tests (now using new card
 layout)

---
 .../android/test/ui/AccountsActivityTest.java      | 25 +++++++++++++---------
 .../android/test/ui/TransactionsActivityTest.java  |  8 ++++---
 .../android/ui/account/AccountsListFragment.java   |  8 ++-----
 3 files changed, 22 insertions(+), 19 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 3502c921..7657adfc 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -24,6 +24,7 @@
 import android.preference.PreferenceManager;
 import android.support.test.InstrumentationRegistry;
 import android.support.test.espresso.Espresso;
+import android.support.test.espresso.contrib.RecyclerViewActions;
 import android.support.test.runner.AndroidJUnit4;
 import android.support.v4.app.Fragment;
 import android.test.ActivityInstrumentationTestCase2;
@@ -53,6 +54,7 @@
 
 import static android.support.test.espresso.Espresso.onData;
 import static android.support.test.espresso.Espresso.onView;
+import static android.support.test.espresso.Espresso.openActionBarOverflowOrOptionsMenu;
 import static android.support.test.espresso.action.ViewActions.clearText;
 import static android.support.test.espresso.action.ViewActions.click;
 import static android.support.test.espresso.action.ViewActions.longClick;
@@ -64,6 +66,7 @@
 import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static android.support.test.espresso.matcher.ViewMatchers.isNotChecked;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
+import static android.support.test.espresso.matcher.ViewMatchers.withParent;
 import static android.support.test.espresso.matcher.ViewMatchers.withText;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.hamcrest.Matchers.allOf;
@@ -206,8 +209,9 @@ public void testChangeParentAccount() {
 
         refreshAccountsList();
 
-        onView(withText(accountName)).perform(longClick());
-        onView(withId(R.id.context_menu_edit_accounts)).perform(click());
+        onView(withText(accountName)).perform(click());
+        openActionBarOverflowOrOptionsMenu(mAcccountsActivity);
+        onView(withText(R.string.title_edit_account)).perform(click());
         onView(withId(R.id.fragment_account_form)).check(matches(isDisplayed()));
         Espresso.closeSoftKeyboard();
         onView(withId(R.id.checkbox_parent_account)).perform(scrollTo())
@@ -232,7 +236,7 @@ public void testChangeParentAccount() {
     public void shouldHideParentAccountViewWhenNoParentsExist(){
         onView(allOf(withText(DUMMY_ACCOUNT_NAME), isDisplayed())).perform(click());
         onView(withId(R.id.fragment_transaction_list)).perform(swipeRight());
-        onView(withText(R.string.label_create_account)).check(matches(isDisplayed())).perform(click());
+        onView(withId(R.id.fab_create_account)).check(matches(isDisplayed())).perform(click());
         sleep(1000);
         onView(withId(R.id.checkbox_parent_account)).check(matches(allOf(isChecked())));
         onView(withId(R.id.input_account_name)).perform(typeText("Trading account"));
@@ -252,8 +256,8 @@ public void shouldHideParentAccountViewWhenNoParentsExist(){
 	public void testEditAccount(){
 		String editedAccountName = "Edited Account";
         sleep(2000);
-        onView(withId(R.id.primary_text)).perform(longClick());
-        onView(withId(R.id.context_menu_edit_accounts)).perform(click());
+        onView(withId(R.id.options_menu)).perform(longClick());
+        onView(withText(R.string.title_edit_account)).perform(click());
 
         onView(withId(R.id.fragment_account_form)).check(matches(isDisplayed()));
 
@@ -270,8 +274,9 @@ public void testEditAccount(){
 
     @Test
     public void editingAccountShouldNotDeleteTransactions(){
-        onView(allOf(withText(DUMMY_ACCOUNT_NAME), isDisplayed()))
-                .perform(longClick());
+        onView(allOf(withId(R.id.options_menu), isDisplayed()))
+                .perform(click());
+
         Account account = new Account("Transfer Account");
 
         Transaction transaction = new Transaction("Simple trxn");
@@ -284,7 +289,7 @@ public void editingAccountShouldNotDeleteTransactions(){
         assertThat(mAccountsDbAdapter.getAccount(DUMMY_ACCOUNT_UID).getTransactionCount()).isEqualTo(1);
         assertThat(mSplitsDbAdapter.getSplitsForTransaction(transaction.getUID())).hasSize(2);
 
-        onView(withId(R.id.context_menu_edit_accounts)).perform(click());
+        onView(withText(R.string.title_edit_account)).perform(click());
 
         onView(withId(R.id.menu_save)).perform(click());
         assertThat(mAccountsDbAdapter.getAccount(DUMMY_ACCOUNT_UID).getTransactionCount()).isEqualTo(1);
@@ -309,8 +314,8 @@ private void sleep(long millis) {
     @Test(expected = IllegalArgumentException.class)
 	public void testDeleteSimpleAccount() {
         sleep(2000);
-        onView(withId(R.id.primary_text)).perform(longClick());
-        onView(withId(R.id.context_menu_delete)).perform(click());
+        onView(withId(R.id.options_menu)).perform(click());
+        onView(withText(R.string.menu_delete)).perform(click());
 
         //the account has no sub-accounts
 //        onView(withId(R.id.accounts_options)).check(matches(not(isDisplayed())));
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index d108976e..aca89f17 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -24,6 +24,7 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.preference.PreferenceManager;
 import android.support.test.InstrumentationRegistry;
+import android.support.test.espresso.Espresso;
 import android.support.test.espresso.ViewAction;
 import android.support.test.espresso.action.CoordinatesProvider;
 import android.support.test.espresso.action.GeneralClickAction;
@@ -190,6 +191,8 @@ public void testAddTransactionShouldRequireAmount(){
 
 		onView(withId(R.id.menu_save)).perform(click());
 		sleep(1000);
+		//form does not close
+		onView(withId(R.id.fragment_transaction_list)).check(matches(isDisplayed()));
 		assertToastDisplayed(R.string.toast_transanction_amount_required);
 
 		int afterCount = mTransactionsDbAdapter.getTransactionsCount(DUMMY_ACCOUNT_UID);
@@ -389,15 +392,14 @@ public void testDefaultTransactionType(){
 
 		onView(withId(R.id.fab_create_transaction)).perform(click());
 		onView(withId(R.id.input_transaction_type)).check(matches(allOf(isChecked(), withText(R.string.label_spend))));
-		onView(withId(R.id.menu_cancel)).perform(click());
-
+		Espresso.pressBack();
 		//now validate the other case
 
 		setDefaultTransactionType(TransactionType.DEBIT);
 
 		onView(withId(R.id.fab_create_transaction)).perform(click());
 		onView(withId(R.id.input_transaction_type)).check(matches(allOf(not(isChecked()), withText(R.string.label_receive))));
-		onView(withId(R.id.menu_cancel)).perform(click());
+		Espresso.pressBack();
 	}
 
 	private void setDefaultTransactionType(TransactionType type) {
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 3adb4813..8f911ad7 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -460,12 +460,8 @@ public void onBindViewHolderCursor(final ViewHolder holder, final Cursor cursor)
             new AccountBalanceTask(holder.accountBalance).execute(accountUID);
 
             String accountColor = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_COLOR_CODE));
-            if (accountColor != null){
-                int color = Color.parseColor(accountColor);
-                holder.colorStripView.setBackgroundColor(color);
-            } else {
-                holder.colorStripView.setBackgroundColor(Color.TRANSPARENT);
-            }
+            int colorCode = accountColor == null ? Color.TRANSPARENT : Color.parseColor(accountColor);
+            holder.colorStripView.setBackgroundColor(colorCode);
 
             boolean isPlaceholderAccount = mAccountsDbAdapter.isPlaceholderAccount(accountUID);
             if (isPlaceholderAccount){
