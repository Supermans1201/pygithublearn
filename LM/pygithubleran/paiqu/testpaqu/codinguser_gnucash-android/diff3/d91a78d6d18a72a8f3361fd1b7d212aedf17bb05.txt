From d91a78d6d18a72a8f3361fd1b7d212aedf17bb05 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 10 Apr 2015 14:40:11 +0200
Subject: [PATCH] Template transactions will not be deleted when clearing all
 transactions

---
 .../java/org/gnucash/android/db/AccountsDbAdapter.java |  3 +--
 .../org/gnucash/android/db/TransactionsDbAdapter.java  | 18 ++++++++++++++++++
 .../DeleteAllTransacationsConfirmationDialog.java      |  2 +-
 3 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index bc2e1f8b..55c5213f 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -1255,8 +1255,7 @@ public static String getOpeningBalanceAccountFullName(){
 	 */
     @Override
 	public int deleteAllRecords(){
-		mDb.delete(TransactionEntry.TABLE_NAME, null, null);
-        mDb.delete(SplitEntry.TABLE_NAME, null, null);
+		mDb.delete(TransactionEntry.TABLE_NAME, null, null); //this will take the splits along with it
         return mDb.delete(AccountEntry.TABLE_NAME, null, null);
 	}
 
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index f4c639b1..292e105f 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -564,6 +564,16 @@ public int getNumCurrencies(String transactionUID) {
     }
 
     /**
+     * Deletes all transactions except those which are marked as templates.
+     * <p>If you want to delete really all transaction records, use {@link #deleteAllRecords()}</p>
+     * @return Number of records deleted
+     */
+    public int deleteAllNonTemplateTransactions(){
+        String where = TransactionEntry.COLUMN_TEMPLATE + "!=0";
+        return mDb.delete(mTableName, where, null);
+    }
+
+    /**
      * Returns a timestamp of the earliest transaction for the specified account type
      * @param type the account type
      * @return the earliest transaction's timestamp. Returns 1970-01-01 00:00:00.000 if no transaction found
@@ -581,6 +591,14 @@ public long getTimestampOfLatestTransaction(AccountType type) {
         return getTimestamp("MAX", type);
     }
 
+    /**
+     * Returns the earliest or latest timestamp of transactions for a specific account type
+     * @param mod Mode (either MAX or MIN)
+     * @param type AccountType
+     * @return earliest or latest timestamp of transactions
+     * @see #getTimestampOfLatestTransaction(AccountType)
+     * @see #getTimestampOfEarliestTransaction(AccountType)
+     */
     private long getTimestamp(String mod, AccountType type) {
         String sql = "SELECT " + mod + "(" + TransactionEntry.COLUMN_TIMESTAMP + ")" +
                 " FROM " + TransactionEntry.TABLE_NAME +
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransacationsConfirmationDialog.java b/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransacationsConfirmationDialog.java
index 20554a4b..1e62eeb2 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransacationsConfirmationDialog.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransacationsConfirmationDialog.java
@@ -68,7 +68,7 @@ public void onClick(DialogInterface dialog, int whichButton) {
                                     openingBalances = accountsDbAdapter.getAllOpeningBalanceTransactions();
                                 }
                                 TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
-                                transactionsDbAdapter.deleteAllRecords();
+                                transactionsDbAdapter.deleteAllNonTemplateTransactions();
 
                                 if (preserveOpeningBalances) {
                                     transactionsDbAdapter.bulkAddTransactions(openingBalances);
