From 218e837e9239bec1dbfc485189da43e3ff0629e4 Mon Sep 17 00:00:00 2001
From: jesseshieh <jesse.shieh.pub@gmail.com>
Date: Wed, 5 Mar 2014 11:54:33 -0800
Subject: [PATCH] In double-entry accounting, all transactions should have a
 double-entry. If the transaction is a credit, then the double-entry is a
 debit and vice versa. Also, the transaction amount is positive or negative
 depending on if the account the transaction is in is a debit account or a
 credit account. Example: If you create a salary transaction in the income
 account, that should be a credit which is a positive number. If the
 double-entry account is the checking account, that is a debit account so it's
 entry should also be a positive number.

---
 app/src/org/gnucash/android/db/AccountsDbAdapter.java   |  2 +-
 .../org/gnucash/android/db/TransactionsDbAdapter.java   |  9 +++++++--
 app/src/org/gnucash/android/model/Account.java          | 17 +++++++++++++++--
 app/src/org/gnucash/android/model/Transaction.java      | 17 ++++++++++++++++-
 4 files changed, 39 insertions(+), 6 deletions(-)

diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index d99fd663..0e83043d 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -526,7 +526,7 @@ public Money getAccountBalance(long accountId){
                 balance = balance.add(subBalance);
             }
         }
-        return balance.add(mTransactionsAdapter.getTransactionsSum(accountId));
+        return balance.add(getAccount(accountId).getBalance());
     }
 
     /**
diff --git a/app/src/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
index f2c53047..5bfc881c 100644
--- a/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -24,6 +24,7 @@
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Transaction;
+import org.gnucash.android.model.Transaction.TransactionType;
 
 import java.math.BigDecimal;
 import java.util.ArrayList;
@@ -179,9 +180,13 @@ public Cursor fetchAllTransactionsForAccount(long accountID){
 		while (c.moveToNext()) {
 			Transaction transaction = buildTransactionInstance(c);
 			String doubleEntryAccountUID = transaction.getDoubleEntryAccountUID();
-			//negate double entry transactions for the transfer account
+			// Negate double entry transactions for the transfer account
 			if (doubleEntryAccountUID != null && doubleEntryAccountUID.equals(accountUID)){
-				transaction.setAmount(transaction.getAmount().negate());
+				if (transaction.getType() == TransactionType.DEBIT) {
+					transaction.setType(TransactionType.CREDIT);
+				} else {
+					transaction.setType(TransactionType.DEBIT);
+				}
 			}
 			transactionsList.add(transaction);
 		}
diff --git a/app/src/org/gnucash/android/model/Account.java b/app/src/org/gnucash/android/model/Account.java
index f5c409ae..bb003df4 100644
--- a/app/src/org/gnucash/android/model/Account.java
+++ b/app/src/org/gnucash/android/model/Account.java
@@ -369,10 +369,23 @@ public boolean hasUnexportedTransactions(){
 	 * @return {@link Money} aggregate amount of all transactions in account.
 	 */
 	public Money getBalance(){
-		//TODO: Consider double entry transactions
 		Money balance = new Money(new BigDecimal(0), this.mCurrency);
 		for (Transaction transaction : mTransactionsList) {
-			balance = balance.add(transaction.getAmount());
+			boolean isDebitAccount = getAccountType().hasDebitNormalBalance();
+			boolean isDebitTransaction = transaction.getType() == TransactionType.DEBIT;
+			if (isDebitAccount) {
+				if (isDebitTransaction) {
+					balance = balance.add(transaction.getAmount());
+				} else {
+					balance = balance.subtract(transaction.getAmount());
+				}
+			} else {
+				if (isDebitTransaction) {
+					balance = balance.subtract(transaction.getAmount());
+				} else {
+					balance = balance.add(transaction.getAmount());
+				}
+			}
 		}
 		return balance;
 	}
diff --git a/app/src/org/gnucash/android/model/Transaction.java b/app/src/org/gnucash/android/model/Transaction.java
index 0456b75b..98a30b42 100644
--- a/app/src/org/gnucash/android/model/Transaction.java
+++ b/app/src/org/gnucash/android/model/Transaction.java
@@ -366,7 +366,22 @@ public String getDoubleEntryAccountUID() {
 	public void setDoubleEntryAccountUID(String doubleEntryAccountUID) {
 		this.mDoubleEntryAccountUID = doubleEntryAccountUID;
 	}
-	
+
+	/**
+	 * Returns type of this transaction
+	 * @return Type of this transaction
+	 */
+	public TransactionType getType() {
+		return mType;
+	}
+
+	/**
+	 * Sets the type of this transaction
+	 * @param Type of this transaction
+	 */
+	public void setType(TransactionType type) {
+		mType = type;
+	}
 
 	/**
 	 * Returns UID of account to which this transaction belongs
