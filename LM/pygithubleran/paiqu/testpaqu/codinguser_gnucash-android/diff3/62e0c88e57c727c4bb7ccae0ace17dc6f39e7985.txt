From 62e0c88e57c727c4bb7ccae0ace17dc6f39e7985 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 16 Feb 2016 19:20:09 +0100
Subject: [PATCH] Format the exchange rate loaded from the database using the
 current locale.

---
 .../ui/transaction/dialog/TransferFundsDialogFragment.java   | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 3647781a..b135e285 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -119,10 +119,14 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
         if (price.first > 0 && price.second > 0) {
             // a valid price exists
-            BigDecimal num = new BigDecimal(price.first);
-            BigDecimal denom = new BigDecimal(price.second);
-            mExchangeRateInput.setText(num.divide(denom, MathContext.DECIMAL32).toString());
-            mConvertedAmountInput.setText(mOriginAmount.asBigDecimal().multiply(num).divide(denom, currencyCommodity.getSmallestFractionDigits(), BigDecimal.ROUND_HALF_EVEN).toString());
+            BigDecimal numerator = new BigDecimal(price.first);
+            BigDecimal denominator = new BigDecimal(price.second);
+            DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
+            mExchangeRateInput.setText(formatter.format(numerator.divide(denominator, MathContext.DECIMAL32)));
+            // convertedAmount = mOriginAmount * numerator / denominator
+            BigDecimal convertedAmount = mOriginAmount.asBigDecimal().multiply(numerator)
+                .divide(denominator, currencyCommodity.getSmallestFractionDigits(), BigDecimal.ROUND_HALF_EVEN);
+            mConvertedAmountInput.setText(formatter.format(convertedAmount));
         }
 
         mExchangeRateInput.addTextChangedListener(textChangeListener);
