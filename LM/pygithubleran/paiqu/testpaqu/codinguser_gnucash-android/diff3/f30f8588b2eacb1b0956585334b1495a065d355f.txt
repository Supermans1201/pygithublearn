From f30f8588b2eacb1b0956585334b1495a065d355f Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 12 Jun 2012 23:06:11 +0200
Subject: [PATCH] Feature: Enable editing and deletion of accounts Fixed: bug
 causing new account to be created instead of edited when editing accounts
 Code refactoring

---
 .../res/layout/fragment_accounts_list.xml          |   6 +-
 GnucashMobile/res/layout/list_item_account.xml     |  12 +-
 .../{acccount_actions.xml => account_actions.xml}  |   4 +-
 GnucashMobile/res/menu/account_context_menu.xml    |  38 ++++
 GnucashMobile/res/values/strings.xml               |   6 +
 .../org/gnucash/android/db/AccountsDbAdapter.java  |   5 +-
 .../gnucash/android/db/TransactionsDbAdapter.java  |   4 +-
 .../org/gnucash/android/ui/AccountsActivity.java   |   2 +-
 .../gnucash/android/ui/AccountsListFragment.java   | 238 +++++++++++++++++----
 .../android/ui/NewAccountDialogFragment.java       |  40 +++-
 10 files changed, 295 insertions(+), 60 deletions(-)
 rename GnucashMobile/res/menu/{acccount_actions.xml => account_actions.xml} (97%)
 create mode 100644 GnucashMobile/res/menu/account_context_menu.xml

diff --git a/GnucashMobile/res/layout/fragment_accounts_list.xml b/GnucashMobile/res/layout/fragment_accounts_list.xml
index e4e11a7e..752f1a3b 100644
--- a/GnucashMobile/res/layout/fragment_accounts_list.xml
+++ b/GnucashMobile/res/layout/fragment_accounts_list.xml
@@ -29,10 +29,10 @@
     android:orientation="vertical" >
 
     <ListView android:id="@id/android:list"        
-        android:layout_width="fill_parent"
-        android:layout_height="0dip"	
+        android:layout_width="match_parent"
+        android:layout_height="0dp"	
         android:layout_weight="1"
-        android:drawSelectorOnTop="false"/>
+        />
     
 	<LinearLayout
         android:id="@id/android:empty"
diff --git a/GnucashMobile/res/layout/list_item_account.xml b/GnucashMobile/res/layout/list_item_account.xml
index d2d7aebf..9ae5f984 100644
--- a/GnucashMobile/res/layout/list_item_account.xml
+++ b/GnucashMobile/res/layout/list_item_account.xml
@@ -29,15 +29,15 @@
 	android:gravity="center_vertical"
 	android:paddingLeft="5dp"
 	android:paddingRight="12dp"
-    android:orientation="horizontal" >
-    <!--   
+    android:orientation="horizontal">
+       
     <CheckBox android:text=""
         android:id="@+id/list_checkbox"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:visibility="gone"
         android:checked="false" />
-    -->
+    
     <LinearLayout
 	    android:layout_width="0dp"
 	    android:layout_height="match_parent"
@@ -51,7 +51,7 @@
             android:layout_weight="2"
             android:singleLine="true"
             android:ellipsize="end"
-            android:text="@string/label_account_name"                 
+            android:text="@string/label_account_name"              
             style="@style/ListItemText" /> 
                    
        <TextView android:id="@+id/transactions_summary"
@@ -63,7 +63,9 @@
            style="@style/ListItemSubTitle" />      
     </LinearLayout>
 	
-    <View android:layout_width="1dp"
+    <View
+        android:id="@+id/vertical_line" 
+        android:layout_width="1dp"
         android:layout_height="40dp"
         android:background="@android:color/darker_gray"
         android:layout_marginRight="10dp"
diff --git a/GnucashMobile/res/menu/acccount_actions.xml b/GnucashMobile/res/menu/account_actions.xml
similarity index 97%
rename from GnucashMobile/res/menu/acccount_actions.xml
rename to GnucashMobile/res/menu/account_actions.xml
index 9f75b23f..e301a1a3 100644
--- a/GnucashMobile/res/menu/acccount_actions.xml
+++ b/GnucashMobile/res/menu/account_actions.xml
@@ -27,11 +27,11 @@
           android:icon="@drawable/content_new"
           android:title="@string/add_account"
           android:showAsAction="always"/>
-     
+<!--       
     <item android:id="@+id/menu_edit_accounts"
           android:icon="@drawable/content_edit"
           android:title="@string/edit_accounts"
           android:showAsAction="never" 
           android:orderInCategory="1"/>   
-              
+-->              
 </menu>
\ No newline at end of file
diff --git a/GnucashMobile/res/menu/account_context_menu.xml b/GnucashMobile/res/menu/account_context_menu.xml
new file mode 100644
index 00000000..80806442
--- /dev/null
+++ b/GnucashMobile/res/menu/account_context_menu.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Written By: Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 Ngewi Fet
+ 
+ This file is part of Gnucash for Android
+ 
+ Gnucash for Android is free software; you can redistribute it and/or
+ modify it under the terms of the GNU General Public License as
+ published by the Free Software Foundation; either version 2 of
+ the License, or (at your option) any later version.
+ 
+ This program is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with this program; if not, contact:
+ 
+ Free Software Foundation           Voice:  +1-617-542-5942
+ 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ Boston, MA  02110-1301,  USA       gnu@gnu.org
+-->
+<menu xmlns:android="http://schemas.android.com/apk/res/android" >
+    <item android:id="@+id/context_menu_edit_accounts"
+          android:icon="@drawable/content_edit"
+          android:title="@string/edit_accounts"
+          android:showAsAction="always" 
+          android:orderInCategory="1"/> 
+          
+	<item android:id="@+id/context_menu_delete"
+          android:icon="@drawable/content_discard"
+          android:title="@string/delete"
+          android:showAsAction="always"
+          android:orderInCategory="2"/>    
+
+</menu>
\ No newline at end of file
diff --git a/GnucashMobile/res/values/strings.xml b/GnucashMobile/res/values/strings.xml
index 7a4e5c64..e82dcf1f 100644
--- a/GnucashMobile/res/values/strings.xml
+++ b/GnucashMobile/res/values/strings.xml
@@ -47,5 +47,11 @@
     <string name="credit">CREDIT</string>
     <string name="title_accounts">Accounts</string>
     <string name="title_transactions">Transactions</string>
+    <string name="delete">Delete</string>
+    <string name="alert_dialog_ok_delete">Delete</string>
+    <string name="alert_dialog_cancel">Cancel</string>
+    <string name="notify_account_deleted">1 account has been deleted</string>
+    <string name="title_confirm_delete">Confirm delete</string>
+    <string name="delete_confirmation_message">All transactions in this account will also be deleted</string>
 
 </resources>
\ No newline at end of file
diff --git a/GnucashMobile/src/org/gnucash/android/db/AccountsDbAdapter.java b/GnucashMobile/src/org/gnucash/android/db/AccountsDbAdapter.java
index ac378c9f..81c9686c 100644
--- a/GnucashMobile/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/GnucashMobile/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -90,7 +90,7 @@ public long addAccount(Account account){
 	 * @param rowId Database id of the account record to be deleted
 	 * @return <code>true</code> if deletion was successful, <code>false</code> otherwise.
 	 */
-	protected boolean deleteAccount(long rowId){
+	public boolean deleteAccount(long rowId){
 		Log.d(TAG, "Delete account with rowId: " + rowId);
 		return deleteRecord(DatabaseHelper.ACCOUNTS_TABLE_NAME, rowId);
 	}
@@ -143,7 +143,8 @@ public Account buildAccountInstance(Cursor c){
 	 * @return Database row ID of account with UID <code>uid</code>
 	 */
 	public long fetchAccountWithUID(String uid){
-		Cursor cursor = mDb.query(DatabaseHelper.ACCOUNTS_TABLE_NAME, new String[] {DatabaseHelper.KEY_UID}, 
+		Cursor cursor = mDb.query(DatabaseHelper.ACCOUNTS_TABLE_NAME, 
+				new String[] {DatabaseHelper.KEY_ROW_ID, DatabaseHelper.KEY_UID}, 
 				DatabaseHelper.KEY_UID + " = '" + uid + "'", null, null, null, null);
 		long result = -1;
 		if (cursor != null && cursor.moveToFirst()){
diff --git a/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java b/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
index b780e01d..505566eb 100644
--- a/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -88,7 +88,7 @@ public long addTransaction(Transaction transaction){
 	 */
 	public long fetchTransactionWithUID(String uid){
 		Cursor cursor = mDb.query(DatabaseHelper.TRANSACTIONS_TABLE_NAME, 
-				new String[] {DatabaseHelper.KEY_UID}, 
+				new String[] {DatabaseHelper.KEY_ROW_ID, DatabaseHelper.KEY_UID}, 
 				DatabaseHelper.KEY_UID + " = '" + uid + "'", 
 				null, null, null, null);
 		long result = -1;
@@ -158,7 +158,7 @@ public Cursor fetchAllTransactionsForAccount(long accountID){
 		Cursor c = fetchAllTransactionsForAccount(accountUID);
 		ArrayList<Transaction> transactionsList = new ArrayList<Transaction>();
 		
-		if (c == null || (c.getCount() <= 0))
+		if (c == null || (c.getCount() < 0))
 			return transactionsList;
 		
 		while (c.moveToNext()) {
diff --git a/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java b/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java
index d6097220..54576121 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/AccountsActivity.java
@@ -87,7 +87,7 @@ public void onNewAccountClick(View v) {
 		AccountsListFragment accountFragment = (AccountsListFragment) getSupportFragmentManager()
 				.findFragmentByTag(FRAGMENT_ACCOUNTS_LIST);
 		if (accountFragment != null)
-			accountFragment.showAddAccountDialog();
+			accountFragment.showAddAccountDialog(0);
 	}
 
 	public void onNewTransactionClick(View v){
diff --git a/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java b/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
index 9dd14b47..5446560e 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/AccountsListFragment.java
@@ -34,10 +34,14 @@
 import org.gnucash.android.util.OnAccountSelectedListener;
 
 import android.app.Activity;
+import android.app.AlertDialog;
+import android.app.Dialog;
 import android.content.Context;
+import android.content.DialogInterface;
 import android.database.Cursor;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.app.LoaderManager.LoaderCallbacks;
 import android.support.v4.content.Loader;
@@ -46,17 +50,23 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.AdapterView.OnItemLongClickListener;
 import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.TextView;
+import android.widget.Toast;
 
+import com.actionbarsherlock.app.SherlockDialogFragment;
 import com.actionbarsherlock.app.SherlockListFragment;
+import com.actionbarsherlock.view.ActionMode;
+import com.actionbarsherlock.view.ActionMode.Callback;
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
 
 public class AccountsListFragment extends SherlockListFragment implements
-		LoaderCallbacks<Cursor>, View.OnClickListener {
+		LoaderCallbacks<Cursor>, OnItemLongClickListener {
 
 	protected static final String FRAGMENT_NEW_ACCOUNT = "new_account_dialog";
 
@@ -68,7 +78,92 @@
 	NewAccountDialogFragment mAddAccountFragment;
 	private AccountsDbAdapter mAccountsDbAdapter;	
 	private OnAccountSelectedListener mAccountSelectedListener;	
+	private boolean mInEditMode = false;
+	private ActionMode mActionMode = null;
+	private int mSelectedViewPosition = -1;
 	
+	/**
+	 * Stores the database ID of the currently selected account when in action mode.
+	 * This is necessary because getSelectedItemId() does not work properly (by design) 
+	 * in touch mode (which is the majority of devices today)
+	 */
+	private long mSelectedItemId = -1;
+	
+	private ActionMode.Callback mActionModCallbacks = new Callback() {
+		
+		@Override
+		public boolean onCreateActionMode(ActionMode mode, Menu menu) {
+			MenuInflater inflater = mode.getMenuInflater();
+	        inflater.inflate(R.menu.account_context_menu, menu);
+	        mode.setTitle("1 account selected");
+	        return true;
+		}
+
+		@Override
+		public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
+			// nothing to see here, move along
+			return false;
+		}
+
+		@Override
+		public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
+			switch (item.getItemId()) {
+			case R.id.context_menu_edit_accounts:
+				showAddAccountDialog(mSelectedItemId);
+				return true;
+
+			case R.id.context_menu_delete:
+				tryDeleteAccount(mSelectedItemId);
+				mode.finish();
+				return true;
+				
+			default:
+				return false;
+			}
+		}
+
+		@Override
+		public void onDestroyActionMode(ActionMode mode) {
+			finishEditMode();
+		}
+	};
+
+	public static class MyAlertDialogFragment extends SherlockDialogFragment {
+
+        public static MyAlertDialogFragment newInstance(int title, long id) {
+            MyAlertDialogFragment frag = new MyAlertDialogFragment();
+            Bundle args = new Bundle();
+            args.putInt("title", title);
+            args.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID, id);
+            frag.setArguments(args);
+            return frag;
+        }
+
+        @Override
+        public Dialog onCreateDialog(Bundle savedInstanceState) {
+            int title = getArguments().getInt("title");
+            final long rowId = getArguments().getLong(TransactionsListFragment.SELECTED_ACCOUNT_ID);
+            
+            return new AlertDialog.Builder(getActivity())
+                    .setIcon(android.R.drawable.ic_delete)
+                    .setTitle(title).setMessage(R.string.delete_confirmation_message)
+                    .setPositiveButton(R.string.alert_dialog_ok_delete,
+                        new DialogInterface.OnClickListener() {
+                            public void onClick(DialogInterface dialog, int whichButton) {
+                                ((AccountsListFragment) getTargetFragment()).deleteAccount(rowId);
+                            }
+                        }
+                    )
+                    .setNegativeButton(R.string.alert_dialog_cancel,
+                        new DialogInterface.OnClickListener() {
+                            public void onClick(DialogInterface dialog, int whichButton) {
+                            	dismiss();
+                            }
+                        }
+                    )
+                    .create();
+        }
+    }
 	
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container,
@@ -86,13 +181,16 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		
 		setHasOptionsMenu(true);
 		mCursorAdapter = new AccountsCursorAdapter(
-				getActivity(), 
+				getActivity().getApplicationContext(), 
 				R.layout.list_item_account, null,
 				new String[] { DatabaseHelper.KEY_NAME },
 				new int[] { R.id.account_name });
 						
 		setListAdapter(mCursorAdapter);
-		getLoaderManager().initLoader(0, null, this);
+		ListView lv = getListView();
+		lv.setOnItemLongClickListener(this);
+		lv.setChoiceMode(ListView.CHOICE_MODE_SINGLE);		
+		getLoaderManager().initLoader(0, null, this);		
 	}
 	
 	@Override
@@ -101,32 +199,103 @@ public void onAttach(Activity activity) {
 		try {
 			mAccountSelectedListener = (OnAccountSelectedListener) activity;
 		} catch (ClassCastException e) {
-			throw new ClassCastException(activity.toString() + " must implement OnArticleSelectedListener");
-		}
-	
+			throw new ClassCastException(activity.toString() + " must implement OnAccountSelectedListener");
+		}	
 	}
 	
 	@Override
 	public void onListItemClick(ListView l, View v, int position, long id) {
 		super.onListItemClick(l, v, position, id);
+		if (mInEditMode){
+			mSelectedItemId = id;
+			selectItem(position);
+			return;
+		}
 		TextView tv = (TextView) v.findViewById(R.id.account_name);
 		String name = tv.getText().toString();
 		mAccountSelectedListener.accountSelected(id, name);
 	}	
 	
 	@Override
+	public boolean onItemLongClick(AdapterView<?> parent, View view, int position,
+				long id) {
+			if (mActionMode != null) {
+	            return false;
+	        }		
+			mInEditMode = true;
+			mSelectedItemId = id;
+	        // Start the CAB using the ActionMode.Callback defined above
+	        mActionMode = getSherlockActivity().startActionMode(mActionModCallbacks);
+	             
+	        selectItem(position);
+	        return true;
+		}
+
+	public void tryDeleteAccount(long rowId){
+		Account acc = mAccountsDbAdapter.getAccount(rowId);
+		if (acc.getTransactionCount() > 0){
+			showConfirmationDialog(rowId);
+		} else {
+			deleteAccount(rowId);
+		}
+	}
+	
+	protected void deleteAccount(long rowId){		
+
+		boolean deleted = mAccountsDbAdapter.deleteAccount(rowId);
+		if (deleted){
+			Toast.makeText(getActivity(), R.string.notify_account_deleted, Toast.LENGTH_SHORT).show();
+		}
+		refreshList();	
+	}
+
+	public void showConfirmationDialog(long id){
+		MyAlertDialogFragment alertFragment = MyAlertDialogFragment.newInstance(R.string.title_confirm_delete, id);
+		alertFragment.setTargetFragment(this, 0);
+		alertFragment.show(getSherlockActivity().getSupportFragmentManager(), "dialog");
+	}
+	
+	public void finishEditMode(){
+		mInEditMode = false;
+		deselectPreviousSelectedItem();
+		mActionMode = null;
+		mSelectedItemId = -1;
+	}
+	
+	private void selectItem(int position){
+		deselectPreviousSelectedItem();		
+		ListView lv = getListView();	
+		lv.setItemChecked(position, true);
+		View v = lv.getChildAt(position);
+		v.setSelected(true);
+        v.setBackgroundColor(getResources().getColor(R.color.abs__holo_blue_light));
+        mSelectedViewPosition = position;
+	}
+	
+	private void deselectPreviousSelectedItem(){
+		if (mSelectedViewPosition >= 0){
+			getListView().setItemChecked(mSelectedViewPosition, false);
+			View v = getListView().getChildAt(mSelectedViewPosition);
+			if (v == null){
+				//if we just deleted a row, then the previous position is invalid
+				return;
+			}
+			v.setBackgroundColor(getResources().getColor(android.R.color.transparent));
+			v.setSelected(false);
+		}
+	}
+	
+	@Override
 	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-		inflater.inflate(R.menu.acccount_actions, menu);
+		inflater.inflate(R.menu.account_actions, menu);
 	}
 
 	@Override
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
-		case R.id.menu_edit_accounts:
-			return true;
 
 		case R.id.menu_add_account:
-			showAddAccountDialog();
+			showAddAccountDialog(0);
 			return true;
 
 		default:
@@ -134,53 +303,49 @@ public boolean onOptionsItemSelected(MenuItem item) {
 		}
 	}
 	
+	public void refreshList(){
+		getLoaderManager().restartLoader(0, null, this);
+	}
+	
 	@Override
 	public void onDestroyView() {
 		super.onDestroy();
 		mAccountsDbAdapter.close();
-	}
-	
-	public void addAccount(String name) {
-		mAccountsDbAdapter.addAccount(new Account(name));			
-		getLoaderManager().restartLoader(0, null, this);		
-	}
+	}	
 	
 	/**
 	 * Show dialog for creating a new {@link Account}
 	 */
-	public void showAddAccountDialog() {
-
-		FragmentTransaction ft = getSherlockActivity()
-				.getSupportFragmentManager().beginTransaction();
-		Fragment prev = getSherlockActivity().getSupportFragmentManager()
-				.findFragmentByTag(FRAGMENT_NEW_ACCOUNT);
+	public void showAddAccountDialog(long accountId) {
+		FragmentManager manager = getSherlockActivity().getSupportFragmentManager();
+		FragmentTransaction ft = manager.beginTransaction();
+		Fragment prev = manager.findFragmentByTag(FRAGMENT_NEW_ACCOUNT);
+		
 		if (prev != null) {
 			ft.remove(prev);
 		}
 
 		ft.addToBackStack(null);
 
-		mAddAccountFragment = NewAccountDialogFragment
-				.newInstance(this);
+		mAddAccountFragment = NewAccountDialogFragment.newInstance(mAccountsDbAdapter);
+		Bundle args = new Bundle();
+		args.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID, accountId);
+		mAddAccountFragment.setArguments(args);
+		
 		mAddAccountFragment.setTargetFragment(this, DIALOG_ADD_ACCOUNT);
+		if (mActionMode != null){
+			//if we were editing, stop before going somewhere else
+			mActionMode.finish(); 
+		}
 		mAddAccountFragment.show(ft, FRAGMENT_NEW_ACCOUNT);
 	}
 
-	/**
-	 * Handles creation of new account from the new account dialog
-	 */
-	@Override
-	public void onClick(View v) {		
-		addAccount(mAddAccountFragment.getEnteredName());
-		mAddAccountFragment.dismiss();
-	}
-	
 	private class AccountsCursorAdapter extends SimpleCursorAdapter {
 		public AccountsCursorAdapter(Context context, int layout, Cursor c,
 				String[] from, int[] to) {
 			super(context, layout, c, from, to, 0);
 		}
-		
+
 		@Override
 		public void bindView(View v, Context context, Cursor cursor) {
 			// perform the default binding
@@ -244,7 +409,8 @@ public Cursor loadInBackground() {
 	@Override
 	public void onLoadFinished(Loader<Cursor> loaderCursor, Cursor cursor) {
 		Log.d(TAG, "Accounts loader finished. Swapping in cursor");
-		mCursorAdapter.swapCursor(cursor);		
+		mCursorAdapter.swapCursor(cursor);
+		setListAdapter(mCursorAdapter);
 		mCursorAdapter.notifyDataSetChanged();
 	}
 
@@ -252,6 +418,6 @@ public void onLoadFinished(Loader<Cursor> loaderCursor, Cursor cursor) {
 	public void onLoaderReset(Loader<Cursor> arg0) {
 		Log.d(TAG, "Resetting the accounts loader");
 		mCursorAdapter.swapCursor(null);
-	}
+	}	
 
 }
diff --git a/GnucashMobile/src/org/gnucash/android/ui/NewAccountDialogFragment.java b/GnucashMobile/src/org/gnucash/android/ui/NewAccountDialogFragment.java
index b9a47487..ca272943 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/NewAccountDialogFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/NewAccountDialogFragment.java
@@ -25,6 +25,8 @@
 package org.gnucash.android.ui;
 
 import org.gnucash.android.R;
+import org.gnucash.android.data.Account;
+import org.gnucash.android.db.AccountsDbAdapter;
 
 import android.os.Bundle;
 import android.text.Editable;
@@ -42,14 +44,16 @@
 	private Button mSaveButton;
 	private Button mCancelButton;
 	private EditText mNameEditText;
-	private View.OnClickListener mListener;
+	private AccountsDbAdapter mDbAdapter;
+	private long mSelectedId = 0;
+	private Account mAccount = null;
 	
-	public NewAccountDialogFragment(View.OnClickListener listener) {
-		mListener = listener;
+	public NewAccountDialogFragment(AccountsDbAdapter dbAdapter) {		
+		mDbAdapter = dbAdapter;
 	}
 	
-	static public NewAccountDialogFragment newInstance(View.OnClickListener listener){
-		NewAccountDialogFragment f = new NewAccountDialogFragment(listener);
+	static public NewAccountDialogFragment newInstance(AccountsDbAdapter dbAdapter){
+		NewAccountDialogFragment f = new NewAccountDialogFragment(dbAdapter);
 		
 		return f;
 	}
@@ -57,7 +61,8 @@ static public NewAccountDialogFragment newInstance(View.OnClickListener listener
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
-		
+		mSelectedId = getArguments().getLong(TransactionsListFragment.SELECTED_ACCOUNT_ID);
+				
 	}
 	
 	@Override
@@ -72,10 +77,27 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 		mNameEditText.requestFocus();
         getDialog().getWindow().setSoftInputMode(
                 LayoutParams.SOFT_INPUT_STATE_VISIBLE);
+        
+        mNameEditText.addTextChangedListener(new NameFieldWatcher());
+		       
+        if (mSelectedId != 0) {
+        	mAccount = mDbAdapter.getAccount(mSelectedId);
+        	mNameEditText.setText(mAccount.getName());        	
+        }
 		
-		mNameEditText.addTextChangedListener(new NameFieldWatcher());
-		
-		mSaveButton.setOnClickListener(mListener);
+		mSaveButton.setOnClickListener(new View.OnClickListener() {
+			
+			@Override
+			public void onClick(View v) {
+				if (mAccount == null)
+					mAccount = new Account(getEnteredName());
+				else
+					mAccount.setName(getEnteredName());
+				mDbAdapter.addAccount(mAccount);
+				((AccountsListFragment)getTargetFragment()).refreshList();				
+				dismiss();				
+			}
+		});
 		
 		mCancelButton.setOnClickListener(new View.OnClickListener() {
 			
