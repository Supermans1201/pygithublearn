From b5117fcb07ea80dca0c499933b75639831b3b196 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 19 Oct 2016 12:22:58 +0200
Subject: [PATCH] Add spoon plugin for running tests on multiple devices

Remove extra scripts for adb and code clutter in build.gradle file
---
 app/build.gradle    | 43 ++++++++-----------------------------------
 build.gradle        |  1 +
 scripts/adb_all.bat | 24 ------------------------
 scripts/adb_all.sh  | 20 --------------------
 4 files changed, 9 insertions(+), 79 deletions(-)
 delete mode 100644 scripts/adb_all.bat
 delete mode 100755 scripts/adb_all.sh

diff --git a/app/build.gradle b/app/build.gradle
index 35a05cb3..d495b125 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -148,45 +148,16 @@ def initCrashlyticsPropertiesIfNeeded() {
     }
 }
 
-def adb = Os.isFamily(Os.FAMILY_WINDOWS) ? "..\\scripts\\adb_all.bat" : "../scripts/adb_all.sh"
-//def adb = android.getAdbExe().toString()
-
 afterEvaluate {
-    initCrashlyticsPropertiesIfNeeded()
-
-    task grantTestPermissionsDevel(type: Exec, dependsOn: 'installDevelopmentDebug') { // or install{productFlavour}{buildType}
-        if (Os.isFamily(Os.FAMILY_WINDOWS)){
-            commandLine "cmd", "/c", "$adb", "shell pm grant $android.productFlavors.development.applicationId android.permission.SET_ANIMATION_SCALE"
-//            commandLine "cmd", "/c", "$adb", "shell pm grant $android.productFlavors.development.applicationId android.permission.WRITE_EXTERNAL_STORAGE"
-        } else {
-            commandLine "$adb shell pm grant $android.productFlavors.development.applicationId android.permission.SET_ANIMATION_SCALE".split(' ')
-//            commandLine "$adb shell pm grant $android.productFlavors.development.applicationId android.permission.WRITE_EXTERNAL_STORAGE".split(' ')
-        }
-    }
-
-    task grantTestPermissionsProduction(type: Exec, dependsOn: 'installProductionDebug'){
-        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
-            commandLine "cmd", "/c", "$adb", "shell pm grant $android.productFlavors.development.applicationId android.permission.SET_ANIMATION_SCALE"
-            commandLine "cmd", "/c", "$adb", "shell pm grant $android.productFlavors.development.applicationId android.permission.WRITE_EXTERNAL_STORAGE"
-        } else {
-            commandLine "$adb shell pm grant $android.defaultConfig.applicationId android.permission.SET_ANIMATION_SCALE".split(' ')
-            commandLine "$adb shell pm grant $android.defaultConfig.applicationId android.permission.WRITE_EXTERNAL_STORAGE".split(' ')
-        }
-    }
-
-    // When launching individual tests from Android Studio, it seems that only the assemble tasks
-    // get called directly, not the install* versions
-    tasks.each { task ->
-        if (task.name.startsWith('assembleDevelopmentDebugAndroidTest')){
-            task.dependsOn grantTestPermissionsDevel
-        } else if (task.name.startsWith('assembleBetaDebugAndroidTest')){
-            task.dependsOn grantTestPermissionsProduction
-        } else if (task.name.startsWith('assembleProductionDebugAndroidTest')){
-            task.dependsOn grantTestPermissionsProduction
-        }
+    apply plugin: 'spoon'
+    spoon {
+        debug = true
+        grantAllPermissions = true
     }
+    initCrashlyticsPropertiesIfNeeded()
 }
 
+
 def androidSupportVersion       = "24.2.1"
 def androidEspressoVersion      = "2.2.2"
 def androidSupportTestVersion   = "0.5"
@@ -255,4 +226,6 @@ dependencies {
     androidTestCompile('com.squareup.assertj:assertj-android:1.1.1'){
         exclude group: 'com.android.support', module:'support-annotations'
     }
+
+    androidTestCompile 'com.squareup.spoon:spoon-client:1.6.4'
 }
diff --git a/build.gradle b/build.gradle
index 7c7473ad..ed8ef16c 100644
--- a/build.gradle
+++ b/build.gradle
@@ -7,6 +7,7 @@ buildscript {
 		classpath 'com.android.tools.build:gradle:2.2.1'
 		classpath 'io.fabric.tools:gradle:1.21.2'
 		classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
+		classpath 'com.stanfy.spoon:spoon-gradle-plugin:1.2.2'
 	}
 }
 
diff --git a/scripts/adb_all.bat b/scripts/adb_all.bat
deleted file mode 100644
index b38971b4..00000000
--- a/scripts/adb_all.bat
+++ /dev/null
@@ -1,24 +0,0 @@
-:: Inspired by Linux version of the same https://gist.github.com/christopherperry/3208109
-
-@echo off
-SET ARGUMENTS=%~1
-
-if "%ARGUMENTS%" == "" (
-    GOTO EOF
-)
-
-SET "ARGUMENTS=%ARGUMENTS:""="%"
-
-SETLOCAL ENABLEDELAYEDEXPANSION 
-:: INSTALL ON ALL ATTACHED DEVICES ::
-FOR /F "tokens=1,2 skip=1" %%A IN ('adb devices') DO (
-    SET IS_DEV=%%B
-	if "!IS_DEV!" == "device" (
-	    SET SERIAL=%%A
-	    echo "adb -s !SERIAL! %ARGUMENTS%"
-	    call adb -s !SERIAL! %ARGUMENTS%
-	)
-)
-ENDLOCAL
-
-:EOF
\ No newline at end of file
diff --git a/scripts/adb_all.sh b/scripts/adb_all.sh
deleted file mode 100755
index fbfedd90..00000000
--- a/scripts/adb_all.sh
+++ /dev/null
@@ -1,20 +0,0 @@
-#!/bin/bash
-# Script adb+
-# Usage
-# You can run any command adb provides on all your currently connected devices
-# ./adb+ <command> is the equivalent of ./adb -s <serial number> <command>
-#
-# Examples
-# ./adb+ version
-# ./adb+ install apidemo.apk
-# ./adb+ uninstall com.example.android.apis
-
-adb devices | while read line
-do
-    if [ ! "$line" = "" ] && [ `echo $line | awk '{print $2}'` = "device" ]
-    then
-        device=`echo $line | awk '{print $1}'`
-        echo "$device $@ ..."
-        adb -s $device $@
-    fi
-done
\ No newline at end of file
