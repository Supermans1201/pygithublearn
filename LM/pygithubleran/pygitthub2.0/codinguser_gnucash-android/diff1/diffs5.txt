app/src/main/java/org/gnucash/android/model/ScheduledAction_java
1
2
	+  public void setRecurrence ( @NonNull Recurrence recurrence ) { -  public void setRecurrence ( Recurrence recurrence ) { 
app/src/main/java/org/gnucash/android/service/SchedulerService_java
1
2
app/src/main/java/org/gnucash/android/model/Transaction_java
1
app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment_java
1
app/src/main/java/org/gnucash/android/util/PreferencesHelper_java
1
		+  private static final String LOG_TAG = " PreferencesHelper " ; -  protected static final String LOG_TAG = " PreferencesHelper " ; 
2
app/src/main/res/values/donottranslate_xml
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter_java
1
		+  recurrence.setMultiplier ( ( int ) multiplier ) ; -  periodType.setMultiplier ( ( int ) multiplier ) ; 
2
app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment_java
1
		+ import butterknife.BindView ; - import butterknife.Bind ; 
2
		+   @BindView ( R.id.budget_indicator )  ProgressBar budgetIndicator ; -   @Bind ( R.id.budget_indicator )  ProgressBar budgetIndicator ; 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity_java
1
		+  @BindView ( R.id.pager )   ViewPager mViewPager ; -  @Bind ( R.id.pager )   ViewPager mViewPager ; 
		+  @BindView ( R.id.pager )   ViewPager mViewPager ; -  @Bind ( R.id.tab_layout )  TabLayout mTabLayout ; 
		+  @BindView ( R.id.pager )   ViewPager mViewPager ; -  @Bind ( R.id.fab_create_transaction ) FloatingActionButton mCreateFloatingButton ; 
		+  @BindView ( R.id.toolbar_spinner ) Spinner mToolbarSpinner ; -  @Bind ( R.id.toolbar_spinner ) Spinner mToolbarSpinner ; 
		+  @BindView ( R.id.toolbar_spinner ) Spinner mToolbarSpinner ; -  @Bind ( R.id.fab_create_transaction ) FloatingActionButton mCreateFloatingButton ; 
		+  @BindView ( R.id.tab_layout )  TabLayout mTabLayout ; -  @Bind ( R.id.pager )   ViewPager mViewPager ; 
		+  @BindView ( R.id.tab_layout )  TabLayout mTabLayout ; -  @Bind ( R.id.tab_layout )  TabLayout mTabLayout ; 
		+  @BindView ( R.id.tab_layout )  TabLayout mTabLayout ; -  @Bind ( R.id.fab_create_transaction ) FloatingActionButton mCreateFloatingButton ; 
		+  @BindView ( R.id.transactions_sum ) TextView mSumTextView ; -  @Bind ( R.id.transactions_sum ) TextView mSumTextView ; 
		+  @BindView ( R.id.fab_create_transaction ) FloatingActionButton mCreateFloatingButton ; -  @Bind ( R.id.pager )   ViewPager mViewPager ; 
		+  @BindView ( R.id.fab_create_transaction ) FloatingActionButton mCreateFloatingButton ; -  @Bind ( R.id.toolbar_spinner ) Spinner mToolbarSpinner ; 
		+  @BindView ( R.id.fab_create_transaction ) FloatingActionButton mCreateFloatingButton ; -  @Bind ( R.id.tab_layout )  TabLayout mTabLayout ; 
		+  @BindView ( R.id.fab_create_transaction ) FloatingActionButton mCreateFloatingButton ; -  @Bind ( R.id.fab_create_transaction ) FloatingActionButton mCreateFloatingButton ; 
app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment_java
1
3
2
	+  private static final String LOG_TAG = " BookManagerFragment " ; -  private static String LOG_TAG = " BookManagerFragment " ; 
		+  private SimpleCursorAdapter mCursorAdapter ; -  SimpleCursorAdapter mCursorAdapter ; 
5
4
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
2
		+    Recurrence recurrence = Recurrence.fromLegacyPeriod ( period ) ; -    PeriodType periodType = PeriodType.parse ( period ) ; 
app/src/main/java/org/gnucash/android/ui/account/AccountsActivity_java
1
		+ import butterknife.BindView ; - import butterknife.Bind ; 
2
		+  @BindView ( R.id.pager ) ViewPager mViewPager ; -  @Bind ( R.id.pager ) ViewPager mViewPager ; 
		+  @BindView ( R.id.pager ) ViewPager mViewPager ; -  @Bind ( R.id.fab_create_account ) FloatingActionButton mFloatingActionButton ; 
		+  @BindView ( R.id.pager ) ViewPager mViewPager ; -  @Bind ( R.id.coordinatorLayout ) CoordinatorLayout mCoordinatorLayout ; 
		+  @BindView ( R.id.fab_create_account ) FloatingActionButton mFloatingActionButton ; -  @Bind ( R.id.pager ) ViewPager mViewPager ; 
		+  @BindView ( R.id.fab_create_account ) FloatingActionButton mFloatingActionButton ; -  @Bind ( R.id.fab_create_account ) FloatingActionButton mFloatingActionButton ; 
		+  @BindView ( R.id.fab_create_account ) FloatingActionButton mFloatingActionButton ; -  @Bind ( R.id.coordinatorLayout ) CoordinatorLayout mCoordinatorLayout ; 
		+  @BindView ( R.id.coordinatorLayout ) CoordinatorLayout mCoordinatorLayout ; -  @Bind ( R.id.pager ) ViewPager mViewPager ; 
		+  @BindView ( R.id.coordinatorLayout ) CoordinatorLayout mCoordinatorLayout ; -  @Bind ( R.id.fab_create_account ) FloatingActionButton mFloatingActionButton ; 
		+  @BindView ( R.id.coordinatorLayout ) CoordinatorLayout mCoordinatorLayout ; -  @Bind ( R.id.coordinatorLayout ) CoordinatorLayout mCoordinatorLayout ; 
app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter_java
1
3
	+      mContext.getString ( R.string.toast_export_error , mExportParams.getExportFormat () .name () ) , -     mContext.getString ( R.string.toast_export_error , mExportParams.getExportFormat () .name () ) , 
		+    Toast.makeText ( mContext , -    Toast.makeText ( mContext , 
		+      Toast.LENGTH_LONG ) .show () ; -     Toast.LENGTH_LONG ) .show () ; 
		+    Toast.makeText ( mContext , -    Toast.makeText ( mContext , 
		+      Toast.LENGTH_LONG ) .show () ; -     Toast.LENGTH_LONG ) .show () ; 
2
4
app/src/test/java/org/gnucash/android/test/unit/importer/GncXmlHandlerTest_java
1
app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment_java
1
app/src/main/java/org/gnucash/android/export/Exporter_java
1
app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest_java
1
3
		+   String usedAmount = commodity.getSymbol () + spentAmountValue + " of " -   String usedAmount = currency.getSymbol () + spentAmountValue+ " of " 
		+   String usedAmount = commodity.getSymbol () + spentAmountValue + " of " -    currency.getDefaultFractionDigits () , RoundingMode.HALF_EVEN ) 
		+    commodity.getSmallestFractionDigits () , RoundingMode.HALF_EVEN ) -    currency.getDefaultFractionDigits () , RoundingMode.HALF_EVEN ) 
2
app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest_java
1
	+  Recurrence recurrence = new Recurrence ( periodType ) ; -  scheduledAction.setRecurrence ( new Recurrence ( periodType ) ) ; 
		+  recurrence.setMultiplier ( 2 ) ; -  periodType.setMultiplier ( 2 ) ; 
app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity_java
1
		+ import butterknife.BindView ; - import butterknife.Bind ; 
app/src/main/java/org/gnucash/android/receivers/TransactionAppWidgetProvider_java
1
2
	+   WidgetConfigurationActivity.updateWidget ( context , appWidgetId , accountUID , shouldDisplayBalance ) ; -   WidgetConfigurationActivity.updateWidget ( context , appWidgetId , accountUID ) ; 
		+   SharedPreferences defaultSharedPrefs = PreferenceManager.getDefaultSharedPreferences ( context ) ; -    .getDefaultSharedPreferences ( context ) 
		+   String accountUID = defaultSharedPrefs -   String accountUID = PreferenceManager 
		+   WidgetConfigurationActivity.updateWidget ( context , appWidgetId , accountUID , shouldDisplayBalance ) ; -    .getDefaultSharedPreferences ( context ) 
app/src/main/java/org/gnucash/android/model/Money_java
1
app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter_java
1
app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment_java
1
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
3
	+  mPeriodEnd = new Timestamp ( endDate.toDateTime () .getMillis () ) ; -  mPeriodEnd = new Timestamp ( endDate.getMillis () ) ; 
2
		+  LocalDateTime localDate = new LocalDateTime ( mPeriodStart.getTime () ) ; -  DateTime localDate = new DateTime ( mPeriodStart.getTime () ) ; 
		+  LocalDateTime endDate ; -  DateTime endDate ; 
app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest_java
1
3
		+  @Before - @Before 
2
5
		+  Commodity usd = mCommoditiesDbAdapter.getCommodity ( " USD " ) ; -  Currency usd = Currency.getInstance ( " USD " ) ; 
4
app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest_java
1
		+  recurrence.setMultiplier ( 2 ) ; -  periodType.setMultiplier ( 2 ) ; 
2
		+  recurrence.setMultiplier ( 2 ) ; -  periodType.setMultiplier ( 2 ) ; 
app/src/main/java/org/gnucash/android/export/ExportAsyncTask_java
1
3
		+    shareFiles ( mExportedFiles ) ; -    shareFiles ( sdCardExportedFiles ) ; 
2
5
		+   Uri contentUri = FileProvider.getUriForFile ( GnuCashApplication.getAppContext () , GnuCashApplication.FILE_PROVIDER_AUTHORITY , file ) ; -   exportFiles.add ( Uri.fromFile ( file ) ) ; 
		+   Uri contentUri = FileProvider.getUriForFile ( GnuCashApplication.getAppContext () , GnuCashApplication.FILE_PROVIDER_AUTHORITY , file ) ; - //  exportFiles.add ( Uri.parse ( " file:// " + file ) ) ; 
4
app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter_java
1
3
		+ * @see #getOrCreateImbalanceAccountUID ( Commodity ) - * @see #getOrCreateImbalanceAccountUID ( java.util.Currency ) 
2
		+ * @see #getOrCreateImbalanceAccountUID ( Commodity ) - * @see #getOrCreateImbalanceAccountUID ( java.util.Currency ) 
app/src/test/resources/simpleTransactionImport_xml
app/src/main/java/org/gnucash/android/model/Transaction_java
1
	+   if ( ! split.getQuantity () .getCommodity () .getCurrencyCode () .equals ( mCurrencyCode ) ) { -   if ( ! split.getQuantity () .getCurrency () .getCurrencyCode () .equals ( mCurrencyCode ) ) { 
2
		+  String accountCurrencyCode = accountsDbAdapter.getAccountCurrencyCode ( accountUID ) ; -  String currencyCode = accountsDbAdapter.getAccountCurrencyCode ( accountUID ) ; 
		+  Money balance = Money.createZeroInstance ( accountCurrencyCode ) ; -  Money balance = Money.createZeroInstance ( currencyCode ) ; 
		+   if ( split.getValue () .getCommodity () .getCurrencyCode () .equals ( accountCurrencyCode ) ) { -   if ( split.getValue () .getCurrency () == accountCurrency ) { 
app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser_java
1
		+  recurrence.setMultiplier ( interval ) ; -  periodType.setMultiplier ( interval ) ; 
app/src/test/resources/multiCurrencyTransactionImport_xml
app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity_java
1
		+ import butterknife.BindView ; - import org.gnucash.android.model.Book ; 
		+ import butterknife.BindView ; - import butterknife.Bind ; 
app/src/main/res/xml/filepaths_xml
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
	+    BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; -   BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; 
	+    Money amount = new Money ( amountBigD , getCommodityForAccount ( mSplit.getAccountUID () ) ) ; -   Money amount = new Money ( amountBigD , getCommodityForAccount ( mSplit.getAccountUID () ) ) ; 
		+    new Money ( BigDecimal.ZERO , mSplit.getValue () .getCommodity () ) ) ) { -   BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; 
		+    new Money ( BigDecimal.ZERO , mSplit.getValue () .getCommodity () ) ) ) { -   mSplit.setValue ( amount.abs () ) ; 
		+    new Money ( BigDecimal.ZERO , mSplit.getValue () .getCommodity () ) ) ) { -   mSplit.setType ( splitType ) ; 
		+    BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; -   mSplit.setValue ( amount.abs () ) ; 
		+    BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; -   mSplit.setType ( splitType ) ; 
		+    Money amount = new Money ( amountBigD , getCommodityForAccount ( mSplit.getAccountUID () ) ) ; -   BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; 
		+    Money amount = new Money ( amountBigD , getCommodityForAccount ( mSplit.getAccountUID () ) ) ; -   mSplit.setValue ( amount.abs () ) ; 
		+    Money amount = new Money ( amountBigD , getCommodityForAccount ( mSplit.getAccountUID () ) ) ; -   mSplit.setType ( splitType ) ; 
		+    mSplit.setValue ( amount.abs () ) ; -   mSplit.setValue ( amount.abs () ) ; 
		+    mSplit.setValue ( amount.abs () ) ; -   mSplit.setType ( splitType ) ; 
		+    mSplit.setType ( splitType ) ; -   mSplit.setValue ( amount.abs () ) ; 
		+    mSplit.setType ( splitType ) ; -   mSplit.setType ( splitType ) ; 
		+    mIgnoreTemplateTransaction = false ; -   mIgnoreTemplateTransaction = false ; 
app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment_java
1
		+ import butterknife.BindView ; - import butterknife.Bind ; 
2
		+  @BindView ( R.id.table_assets ) TableLayout mAssetsTableLayout ; -  @Bind ( R.id.table_assets ) TableLayout mAssetsTableLayout ; 
		+  @BindView ( R.id.table_assets ) TableLayout mAssetsTableLayout ; -  @Bind ( R.id.table_liabilities ) TableLayout mLiabilitiesTableLayout ; 
		+  @BindView ( R.id.table_assets ) TableLayout mAssetsTableLayout ; -  @Bind ( R.id.table_equity ) TableLayout mEquityTableLayout ; 
		+  @BindView ( R.id.table_liabilities ) TableLayout mLiabilitiesTableLayout ; -  @Bind ( R.id.table_assets ) TableLayout mAssetsTableLayout ; 
		+  @BindView ( R.id.table_liabilities ) TableLayout mLiabilitiesTableLayout ; -  @Bind ( R.id.table_liabilities ) TableLayout mLiabilitiesTableLayout ; 
		+  @BindView ( R.id.table_liabilities ) TableLayout mLiabilitiesTableLayout ; -  @Bind ( R.id.table_equity ) TableLayout mEquityTableLayout ; 
		+  @BindView ( R.id.table_equity ) TableLayout mEquityTableLayout ; -  @Bind ( R.id.table_assets ) TableLayout mAssetsTableLayout ; 
		+  @BindView ( R.id.table_equity ) TableLayout mEquityTableLayout ; -  @Bind ( R.id.table_liabilities ) TableLayout mLiabilitiesTableLayout ; 
		+  @BindView ( R.id.table_equity ) TableLayout mEquityTableLayout ; -  @Bind ( R.id.table_equity ) TableLayout mEquityTableLayout ; 
		+  @BindView ( R.id.total_liability_and_equity ) TextView mNetWorth ; -  @Bind ( R.id.total_liability_and_equity ) TextView mNetWorth ; 
app/src/main/java/org/gnucash/android/export/ofx/OfxExporter_java
1
3
2
4
app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment_java
1
		+ @BindView ( R.id.input_account_name ) EditText mNameEditText ; - @Bind ( R.id.input_account_name ) EditText mNameEditText ; 
		+ @BindView ( R.id.input_account_name ) EditText mNameEditText ; - @Bind ( R.id.input_currency_spinner ) Spinner mCurrencySpinner ; 
		+  @BindView ( R.id.name_text_input_layout ) TextInputLayout mTextInputLayout ; -  @Bind ( R.id.name_text_input_layout ) TextInputLayout mTextInputLayout ; 
		+ @BindView ( R.id.input_currency_spinner ) Spinner mCurrencySpinner ; - @Bind ( R.id.input_account_name ) EditText mNameEditText ; 
		+ @BindView ( R.id.input_currency_spinner ) Spinner mCurrencySpinner ; - @Bind ( R.id.input_currency_spinner ) Spinner mCurrencySpinner ; 
3
		+  @BindView ( R.id.input_color_picker ) ColorSquare mColorSquare ; -  @Bind ( R.id.input_color_picker ) ColorSquare mColorSquare ; 
2
		+ @BindView ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; - @Bind ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; 
		+ @BindView ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; - @Bind ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; 
		+ @BindView ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; -  @Bind ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; 
		+ @BindView ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; -  @Bind ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; 
		+ @BindView ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; -  @Bind ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; 
		+ @BindView ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; -  @Bind ( R.id.input_account_description ) EditText mDescriptionEditText ; 
		+ @BindView ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; -  @Bind ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; 
		+ @BindView ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; - @Bind ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; 
		+ @BindView ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; - @Bind ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; 
		+ @BindView ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; -  @Bind ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; 
		+ @BindView ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; -  @Bind ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; 
		+ @BindView ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; -  @Bind ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; 
		+ @BindView ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; -  @Bind ( R.id.input_account_description ) EditText mDescriptionEditText ; 
		+ @BindView ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; -  @Bind ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; 
		+  @BindView ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; - @Bind ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; 
		+  @BindView ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; - @Bind ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; 
		+  @BindView ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; -  @Bind ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; 
		+  @BindView ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; -  @Bind ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; 
		+  @BindView ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; -  @Bind ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; 
		+  @BindView ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; -  @Bind ( R.id.input_account_description ) EditText mDescriptionEditText ; 
		+  @BindView ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; -  @Bind ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; 
		+  @BindView ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; - @Bind ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; 
		+  @BindView ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; - @Bind ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; 
		+  @BindView ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; -  @Bind ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; 
		+  @BindView ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; -  @Bind ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; 
		+  @BindView ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; -  @Bind ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; 
		+  @BindView ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; -  @Bind ( R.id.input_account_description ) EditText mDescriptionEditText ; 
		+  @BindView ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; -  @Bind ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; 
		+  @BindView ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; - @Bind ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; 
		+  @BindView ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; - @Bind ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; 
		+  @BindView ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; -  @Bind ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; 
		+  @BindView ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; -  @Bind ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; 
		+  @BindView ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; -  @Bind ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; 
		+  @BindView ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; -  @Bind ( R.id.input_account_description ) EditText mDescriptionEditText ; 
		+  @BindView ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; -  @Bind ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; 
		+  @BindView ( R.id.input_account_description ) EditText mDescriptionEditText ; - @Bind ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; 
		+  @BindView ( R.id.input_account_description ) EditText mDescriptionEditText ; - @Bind ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; 
		+  @BindView ( R.id.input_account_description ) EditText mDescriptionEditText ; -  @Bind ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; 
		+  @BindView ( R.id.input_account_description ) EditText mDescriptionEditText ; -  @Bind ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; 
		+  @BindView ( R.id.input_account_description ) EditText mDescriptionEditText ; -  @Bind ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; 
		+  @BindView ( R.id.input_account_description ) EditText mDescriptionEditText ; -  @Bind ( R.id.input_account_description ) EditText mDescriptionEditText ; 
		+  @BindView ( R.id.input_account_description ) EditText mDescriptionEditText ; -  @Bind ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; 
		+  @BindView ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; - @Bind ( R.id.input_parent_account ) Spinner mParentAccountSpinner ; 
		+  @BindView ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; - @Bind ( R.id.checkbox_parent_account ) CheckBox mParentCheckBox ; 
		+  @BindView ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; -  @Bind ( R.id.input_account_type_spinner ) Spinner mAccountTypeSpinner ; 
		+  @BindView ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; -  @Bind ( R.id.checkbox_default_transfer_account ) CheckBox mDefaultTransferAccountCheckBox ; 
		+  @BindView ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; -  @Bind ( R.id.input_default_transfer_account ) Spinner mDefaulTransferAccountSpinner ; 
		+  @BindView ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; -  @Bind ( R.id.input_account_description ) EditText mDescriptionEditText ; 
		+  @BindView ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; -  @Bind ( R.id.checkbox_placeholder_account ) CheckBox mPlaceholderCheckBox ; 
app/src/test/resources/testAccountsImport_xml
app/src/main/java/org/gnucash/android/receivers/TransactionRecorder_java
1
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; 
2
app/src/test/resources/transactionWithNonDefaultSplitsImport_xml
app/src/main/res/values/strings_xml
app/src/main/java/org/gnucash/android/model/Split_java
1
	+  String splitString = getUID () + sep + mValue.getNumerator () + sep + mValue.getDenominator () -    + mQuantity.getNumerator () + sep + mQuantity.getDenominator () + sep + mQuantity.getCurrency () .getCurrencyCode () 
app/src/test/java/org/gnucash/android/importer/GncXmlHandlerTest_java
1
app/src/test/resources/bug562_scheduledTransactionImportedWithImbalancedSplits_xml
app/src/main/java/org/gnucash/android/model/PeriodType_java
1
3
2
app/src/test/java/org/gnucash/android/test/unit/export/QifExporterTest_java
1
app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest_java
1
3
2
app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment_java
1
		+ import com.dropbox.core.android.Auth ; - import com.dropbox.sync.android.DbxAccountManager ; 
3
2
5
	+  String defaultExportFormat = sharedPrefs.getString ( keyDefaultExportFormat , null ) ; -  String defaultExportFormat = manager.getString ( keyDefaultExportFormat , null ) ; 
4
	+ String defaultEmail = sharedPrefs.getString ( keyDefaultEmail , null ) ; - String defaultEmail = manager.getString ( keyDefaultEmail , null ) ; 
		+ SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences ( getActivity () ) ; - SharedPreferences manager = PreferenceManager.getDefaultSharedPreferences ( getActivity () ) ; 
7
		+ SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences ( getActivity () ) ; - mDbxAccountManager.startLink ( getActivity () , REQUEST_LINK_TO_DBX ) ; 
		+ String accessToken = prefs.getString ( getString ( R.string.key_dropbox_access_token ) , null ) ; - mDbxAccountManager.unlink () ; 
		+ if ( accessToken == null ) { - if ( mDbxAccountManager.hasLinkedAccount () ) { 
		+ Auth.startOAuth2Authentication ( getActivity () , getString ( R.string.dropbox_app_key ) ) ; - mDbxAccountManager.startLink ( getActivity () , REQUEST_LINK_TO_DBX ) ; 
		+ prefs.edit () .remove ( getString ( R.string.key_dropbox_access_token ) ) .apply () ; - mDbxAccountManager.unlink () ; 
6
	+ ( ( CheckBoxPreference ) pref ) .setChecked ( accessToken != null ) ; - ( ( CheckBoxPreference ) pref ) .setChecked ( mDbxAccountManager.hasLinkedAccount () ) ; 
		+ String accessToken = prefs.getString ( getString ( R.string.key_dropbox_access_token ) , null ) ; - ( ( CheckBoxPreference ) pref ) .setChecked ( mDbxAccountManager.hasLinkedAccount () ) ; 
app/src/main/java/org/gnucash/android/ui/budget/BudgetAmountEditorFragment_java
1
		+  @BindView ( R.id.currency_symbol ) TextView currencySymbolTextView ; -  @Bind ( R.id.currency_symbol ) TextView currencySymbolTextView ; 
		+  @BindView ( R.id.input_budget_amount ) CalculatorEditText amountEditText ; -  @Bind ( R.id.input_budget_amount ) CalculatorEditText amountEditText ; 
		+  @BindView ( R.id.input_budget_amount ) CalculatorEditText amountEditText ; -  @Bind ( R.id.btn_remove_item ) ImageView removeItemBtn ; 
		+  @BindView ( R.id.btn_remove_item ) ImageView removeItemBtn ; -  @Bind ( R.id.input_budget_amount ) CalculatorEditText amountEditText ; 
		+  @BindView ( R.id.btn_remove_item ) ImageView removeItemBtn ; -  @Bind ( R.id.btn_remove_item ) ImageView removeItemBtn ; 
		+  @BindView ( R.id.btn_remove_item ) ImageView removeItemBtn ; -  @Bind ( R.id.input_budget_account_spinner ) Spinner budgetAccountSpinner ; 
		+  @BindView ( R.id.input_budget_account_spinner ) Spinner budgetAccountSpinner ; -  @Bind ( R.id.btn_remove_item ) ImageView removeItemBtn ; 
		+  @BindView ( R.id.input_budget_account_spinner ) Spinner budgetAccountSpinner ; -  @Bind ( R.id.input_budget_account_spinner ) Spinner budgetAccountSpinner ; 
app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment_java
1
		+  @BindView ( R.id.split_list_layout ) LinearLayout mSplitsLinearLayout ; -  @Bind ( R.id.split_list_layout ) LinearLayout mSplitsLinearLayout ; 
		+  @BindView ( R.id.split_list_layout ) LinearLayout mSplitsLinearLayout ; -  @Bind ( R.id.calculator_keyboard ) KeyboardView mKeyboardView ; 
		+  @BindView ( R.id.calculator_keyboard ) KeyboardView mKeyboardView ; -  @Bind ( R.id.split_list_layout ) LinearLayout mSplitsLinearLayout ; 
		+  @BindView ( R.id.calculator_keyboard ) KeyboardView mKeyboardView ; -  @Bind ( R.id.calculator_keyboard ) KeyboardView mKeyboardView ; 
		+  @BindView ( R.id.imbalance_textview ) TextView mImbalanceTextView ; -  @Bind ( R.id.imbalance_textview ) TextView mImbalanceTextView ; 
2
		+  @BindView ( R.id.input_split_memo )  EditText splitMemoEditText ; -  @Bind ( R.id.input_split_memo )  EditText splitMemoEditText ; 
		+  @BindView ( R.id.input_split_memo )  EditText splitMemoEditText ; -  @Bind ( R.id.btn_remove_split )  ImageView removeSplitButton ; 
		+  @BindView ( R.id.input_split_memo )  EditText splitMemoEditText ; -  @Bind ( R.id.input_accounts_spinner ) Spinner accountsSpinner ; 
		+  @BindView ( R.id.input_split_amount )  CalculatorEditText splitAmountEditText ; -  @Bind ( R.id.input_split_amount )  CalculatorEditText splitAmountEditText ; 
		+  @BindView ( R.id.input_split_amount )  CalculatorEditText splitAmountEditText ; -  @Bind ( R.id.btn_remove_split )  ImageView removeSplitButton ; 
		+  @BindView ( R.id.input_split_amount )  CalculatorEditText splitAmountEditText ; -  @Bind ( R.id.btn_split_type )   TransactionTypeSwitch splitTypeSwitch ; 
		+  @BindView ( R.id.btn_remove_split )  ImageView removeSplitButton ; -  @Bind ( R.id.input_split_memo )  EditText splitMemoEditText ; 
		+  @BindView ( R.id.btn_remove_split )  ImageView removeSplitButton ; -  @Bind ( R.id.input_split_amount )  CalculatorEditText splitAmountEditText ; 
		+  @BindView ( R.id.btn_remove_split )  ImageView removeSplitButton ; -  @Bind ( R.id.btn_remove_split )  ImageView removeSplitButton ; 
		+  @BindView ( R.id.btn_remove_split )  ImageView removeSplitButton ; -  @Bind ( R.id.input_accounts_spinner ) Spinner accountsSpinner ; 
		+  @BindView ( R.id.btn_remove_split )  ImageView removeSplitButton ; -  @Bind ( R.id.btn_split_type )   TransactionTypeSwitch splitTypeSwitch ; 
		+  @BindView ( R.id.input_accounts_spinner ) Spinner accountsSpinner ; -  @Bind ( R.id.input_split_memo )  EditText splitMemoEditText ; 
		+  @BindView ( R.id.input_accounts_spinner ) Spinner accountsSpinner ; -  @Bind ( R.id.btn_remove_split )  ImageView removeSplitButton ; 
		+  @BindView ( R.id.input_accounts_spinner ) Spinner accountsSpinner ; -  @Bind ( R.id.input_accounts_spinner ) Spinner accountsSpinner ; 
		+  @BindView ( R.id.split_currency_symbol ) TextView splitCurrencyTextView ; -  @Bind ( R.id.split_currency_symbol ) TextView splitCurrencyTextView ; 
		+  @BindView ( R.id.split_currency_symbol ) TextView splitCurrencyTextView ; -  @Bind ( R.id.split_uid )   TextView splitUidTextView ; 
		+  @BindView ( R.id.split_uid )   TextView splitUidTextView ; -  @Bind ( R.id.split_currency_symbol ) TextView splitCurrencyTextView ; 
		+  @BindView ( R.id.split_uid )   TextView splitUidTextView ; -  @Bind ( R.id.split_uid )   TextView splitUidTextView ; 
		+  @BindView ( R.id.btn_split_type )   TransactionTypeSwitch splitTypeSwitch ; -  @Bind ( R.id.input_split_amount )  CalculatorEditText splitAmountEditText ; 
		+  @BindView ( R.id.btn_split_type )   TransactionTypeSwitch splitTypeSwitch ; -  @Bind ( R.id.btn_remove_split )  ImageView removeSplitButton ; 
		+  @BindView ( R.id.btn_split_type )   TransactionTypeSwitch splitTypeSwitch ; -  @Bind ( R.id.btn_split_type )   TransactionTypeSwitch splitTypeSwitch ; 
app/src/main/java/org/gnucash/android/ui/util/dialog/DateRangePickerDialogFragment_java
1
		+ import butterknife.BindView ; - import butterknife.Bind ; 
2
		+  @BindView ( R.id.calendar_view ) CalendarPickerView mCalendarPickerView ; -  @Bind ( R.id.calendar_view ) CalendarPickerView mCalendarPickerView ; 
		+  @BindView ( R.id.btn_save )  Button mDoneButton ; -  @Bind ( R.id.btn_save )  Button mDoneButton ; 
		+  @BindView ( R.id.btn_save )  Button mDoneButton ; -  @Bind ( R.id.btn_cancel ) Button mCancelButton ; 
		+  @BindView ( R.id.btn_cancel ) Button mCancelButton ; -  @Bind ( R.id.btn_save )  Button mDoneButton ; 
		+  @BindView ( R.id.btn_cancel ) Button mCancelButton ; -  @Bind ( R.id.btn_cancel ) Button mCancelButton ; 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
		+ import butterknife.BindView ; - import butterknife.Bind ; 
2
app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment_java
1
		+  @BindView ( R.id.pie_chart ) PieChart mChart ; -  @Bind ( R.id.pie_chart ) PieChart mChart ; 
app/src/main/res/layout/widget_configuration_xml
app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment_java
1
		+ import butterknife.BindView ; - import butterknife.Bind ; 
app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter_java
1
3
2
app/src/test/java/org/gnucash/android/test/unit/export/OfxExporterTest_java
1
app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter_java
1
app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest_java
1
		+  transaction.setCommodity ( ACCOUNTS_CURRENCY ) ; -  transaction.setCurrencyCode ( ACCOUNTS_CURRENCY.getCurrencyCode () ) ; 
3
2
app/src/androidTest/java/org/gnucash/android/test/ui/util/GnucashAndroidTestRunner_java
1
app/src/main/java/org/gnucash/android/ui/common/UxArgument_java
1
app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity_java
1
		+ import butterknife.BindView ; - import butterknife.Bind ; 
3
		+  @BindView ( R.id.split_account_name ) TextView accountName ; -  @Bind ( R.id.split_account_name ) TextView accountName ; 
		+  @BindView ( R.id.split_account_name ) TextView accountName ; -  @Bind ( R.id.split_debit ) TextView splitDebit ; 
		+  @BindView ( R.id.split_account_name ) TextView accountName ; -  @Bind ( R.id.split_credit ) TextView splitCredit ; 
		+  @BindView ( R.id.split_debit ) TextView splitDebit ; -  @Bind ( R.id.split_account_name ) TextView accountName ; 
		+  @BindView ( R.id.split_debit ) TextView splitDebit ; -  @Bind ( R.id.split_debit ) TextView splitDebit ; 
		+  @BindView ( R.id.split_debit ) TextView splitDebit ; -  @Bind ( R.id.split_credit ) TextView splitCredit ; 
		+  @BindView ( R.id.split_credit ) TextView splitCredit ; -  @Bind ( R.id.split_account_name ) TextView accountName ; 
		+  @BindView ( R.id.split_credit ) TextView splitCredit ; -  @Bind ( R.id.split_debit ) TextView splitDebit ; 
		+  @BindView ( R.id.split_credit ) TextView splitCredit ; -  @Bind ( R.id.split_credit ) TextView splitCredit ; 
2
		+  @BindView ( R.id.trn_description ) TextView mTransactionDescription ; -  @Bind ( R.id.trn_description ) TextView mTransactionDescription ; 
		+  @BindView ( R.id.trn_description ) TextView mTransactionDescription ; -  @Bind ( R.id.trn_time_and_date ) TextView mTimeAndDate ; 
		+  @BindView ( R.id.trn_description ) TextView mTransactionDescription ; -  @Bind ( R.id.trn_recurrence ) TextView mRecurrence ; 
		+  @BindView ( R.id.trn_description ) TextView mTransactionDescription ; -  @Bind ( R.id.trn_notes ) TextView mNotes ; 
		+  @BindView ( R.id.trn_description ) TextView mTransactionDescription ; -  @Bind ( R.id.transaction_account ) TextView mTransactionAccount ; 
		+  @BindView ( R.id.trn_time_and_date ) TextView mTimeAndDate ; -  @Bind ( R.id.trn_description ) TextView mTransactionDescription ; 
		+  @BindView ( R.id.trn_time_and_date ) TextView mTimeAndDate ; -  @Bind ( R.id.trn_time_and_date ) TextView mTimeAndDate ; 
		+  @BindView ( R.id.trn_time_and_date ) TextView mTimeAndDate ; -  @Bind ( R.id.trn_recurrence ) TextView mRecurrence ; 
		+  @BindView ( R.id.trn_time_and_date ) TextView mTimeAndDate ; -  @Bind ( R.id.trn_notes ) TextView mNotes ; 
		+  @BindView ( R.id.trn_time_and_date ) TextView mTimeAndDate ; -  @Bind ( R.id.transaction_account ) TextView mTransactionAccount ; 
		+  @BindView ( R.id.trn_recurrence ) TextView mRecurrence ; -  @Bind ( R.id.trn_description ) TextView mTransactionDescription ; 
		+  @BindView ( R.id.trn_recurrence ) TextView mRecurrence ; -  @Bind ( R.id.trn_time_and_date ) TextView mTimeAndDate ; 
		+  @BindView ( R.id.trn_recurrence ) TextView mRecurrence ; -  @Bind ( R.id.trn_recurrence ) TextView mRecurrence ; 
		+  @BindView ( R.id.trn_recurrence ) TextView mRecurrence ; -  @Bind ( R.id.trn_notes ) TextView mNotes ; 
		+  @BindView ( R.id.trn_recurrence ) TextView mRecurrence ; -  @Bind ( R.id.transaction_account ) TextView mTransactionAccount ; 
		+  @BindView ( R.id.trn_notes ) TextView mNotes ; -  @Bind ( R.id.trn_description ) TextView mTransactionDescription ; 
		+  @BindView ( R.id.trn_notes ) TextView mNotes ; -  @Bind ( R.id.trn_time_and_date ) TextView mTimeAndDate ; 
		+  @BindView ( R.id.trn_notes ) TextView mNotes ; -  @Bind ( R.id.trn_recurrence ) TextView mRecurrence ; 
		+  @BindView ( R.id.trn_notes ) TextView mNotes ; -  @Bind ( R.id.trn_notes ) TextView mNotes ; 
		+  @BindView ( R.id.trn_notes ) TextView mNotes ; -  @Bind ( R.id.transaction_account ) TextView mTransactionAccount ; 
		+  @BindView ( R.id.toolbar ) Toolbar mToolBar ; -  @Bind ( R.id.toolbar ) Toolbar mToolBar ; 
		+  @BindView ( R.id.transaction_account ) TextView mTransactionAccount ; -  @Bind ( R.id.trn_description ) TextView mTransactionDescription ; 
		+  @BindView ( R.id.transaction_account ) TextView mTransactionAccount ; -  @Bind ( R.id.trn_time_and_date ) TextView mTimeAndDate ; 
		+  @BindView ( R.id.transaction_account ) TextView mTransactionAccount ; -  @Bind ( R.id.trn_recurrence ) TextView mRecurrence ; 
		+  @BindView ( R.id.transaction_account ) TextView mTransactionAccount ; -  @Bind ( R.id.trn_notes ) TextView mNotes ; 
		+  @BindView ( R.id.transaction_account ) TextView mTransactionAccount ; -  @Bind ( R.id.transaction_account ) TextView mTransactionAccount ; 
app/src/main/java/org/gnucash/android/model/Budget_java
1
3
2
4
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment_java
1
		+ import butterknife.BindView ; - import butterknife.Bind ; 
app/src/main/java/org/gnucash/android/model/ScheduledAction_java
10
1
3
2
5
4
		+  recurrence.setMultiplier ( ordinal ) ; -  periodType.setMultiplier ( ordinal ) ; 
7
	+  int interval = mMultiplier - 1 ; -  int interval = mPeriodType.getMultiplier () - 1 ; 
6
	+  ruleBuilder.append ( " INTERVAL = " ) .append ( mMultiplier ) .append ( separator ) ; -  ruleBuilder.append ( " INTERVAL = " ) .append ( mPeriodType.getMultiplier () ) .append ( separator ) ; 
9
		+  int multiple = mMultiplier ; -  int multiple = mPeriodType.getMultiplier () ; 
8
		+  int interval = mMultiplier ; -  int interval = mPeriodType.getMultiplier () ; 
app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter_java
1
2
	+ mCursor = mAccountsDbAdapter.fetchAccountsOrderedByFavoriteAndFullName ( conditions , new String[] { mAccountUID , AccountType.ROOT.name () } ) ; - mCursor = mAccountsDbAdapter.fetchAccountsOrderedByFullName ( conditions , new String[] { mAccountUID , AccountType.ROOT.name () } ) ; 
app/src/main/java/org/gnucash/android/export/DropboxHelper_java
1
2
app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest_java
1
		+ assertEquals ( CURRENCY_CODE , mMoneyInEur.getCommodity () .getCurrencyCode () ) ; - assertEquals ( CURRENCY_CODE , mMoneyInEur.getCurrency () .getCurrencyCode () ) ; 
app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity_java
1
CHANGELOG_md
1
3
	+   Split split = new Split ( imbalance.negate () , mCommodity.getCurrencyCode () ) ; -   Split split = new Split ( imbalance.negate () , mCurrencyCode ) ; 
2
		+  setCommodity ( transaction.getCommodity () ) ; -  mCurrencyCode = transaction.mCurrencyCode ; 
5
	+  public @NonNull Commodity getCommodity () { -  public Commodity getCommodity () { 
		+  return mCommodity.getCurrencyCode () ; -  return mCurrencyCode ; 
4
		+  Money imbalance = Money.createZeroInstance ( mCommodity.getCurrencyCode () ) ; -  Money imbalance = Money.createZeroInstance ( mCurrencyCode ) ; 
		+    return Money.createZeroInstance ( mCommodity.getCurrencyCode () ) ; -    return Money.createZeroInstance ( mCurrencyCode ) ; 
6
	+  public void setCommodity ( @NonNull Commodity commodity ) { -  public void setCommodity ( Commodity commodity ) { 
app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment_java
1
		+ import butterknife.BindView ; - import butterknife.Bind ; 
3
	+  datePickerDialog.setPreselectedDate ( year , monthOfYear , dayOfMonth ) ; -    year , monthOfYear , dayOfMonth ) ; 
		+  CalendarDatePickerDialogFragment datePickerDialog = new CalendarDatePickerDialogFragment () ; -  CalendarDatePickerDialogFragment datePickerDialog = CalendarDatePickerDialogFragment.newInstance ( 
		+  CalendarDatePickerDialogFragment datePickerDialog = new CalendarDatePickerDialogFragment () ; -    year , monthOfYear , dayOfMonth ) ; 
2
		+  @BindView ( R.id.input_budget_name ) EditText mBudgetNameInput ; -  @Bind ( R.id.input_budget_name ) EditText mBudgetNameInput ; 
		+  @BindView ( R.id.input_budget_name ) EditText mBudgetNameInput ; -  @Bind ( R.id.input_description ) EditText mDescriptionInput ; 
		+  @BindView ( R.id.input_budget_name ) EditText mBudgetNameInput ; -  @Bind ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; 
		+  @BindView ( R.id.input_budget_name ) EditText mBudgetNameInput ; -  @Bind ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; 
		+  @BindView ( R.id.input_budget_name ) EditText mBudgetNameInput ; -  @Bind ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; 
		+  @BindView ( R.id.input_description ) EditText mDescriptionInput ; -  @Bind ( R.id.input_budget_name ) EditText mBudgetNameInput ; 
		+  @BindView ( R.id.input_description ) EditText mDescriptionInput ; -  @Bind ( R.id.input_description ) EditText mDescriptionInput ; 
		+  @BindView ( R.id.input_description ) EditText mDescriptionInput ; -  @Bind ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; 
		+  @BindView ( R.id.input_description ) EditText mDescriptionInput ; -  @Bind ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; 
		+  @BindView ( R.id.input_recurrence )  TextView mRecurrenceInput ; -  @Bind ( R.id.input_recurrence )  TextView mRecurrenceInput ; 
		+  @BindView ( R.id.input_recurrence )  TextView mRecurrenceInput ; -  @Bind ( R.id.input_start_date )  TextView mStartDateInput ; 
		+  @BindView ( R.id.name_text_input_layout ) TextInputLayout mNameTextInputLayout ; -  @Bind ( R.id.name_text_input_layout ) TextInputLayout mNameTextInputLayout ; 
		+  @BindView ( R.id.name_text_input_layout ) TextInputLayout mNameTextInputLayout ; -  @Bind ( R.id.calculator_keyboard ) KeyboardView mKeyboardView ; 
		+  @BindView ( R.id.name_text_input_layout ) TextInputLayout mNameTextInputLayout ; -  @Bind ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; 
		+  @BindView ( R.id.name_text_input_layout ) TextInputLayout mNameTextInputLayout ; -  @Bind ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; 
		+  @BindView ( R.id.name_text_input_layout ) TextInputLayout mNameTextInputLayout ; -  @Bind ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; 
		+  @BindView ( R.id.calculator_keyboard ) KeyboardView mKeyboardView ; -  @Bind ( R.id.name_text_input_layout ) TextInputLayout mNameTextInputLayout ; 
		+  @BindView ( R.id.calculator_keyboard ) KeyboardView mKeyboardView ; -  @Bind ( R.id.calculator_keyboard ) KeyboardView mKeyboardView ; 
		+  @BindView ( R.id.calculator_keyboard ) KeyboardView mKeyboardView ; -  @Bind ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; 
		+  @BindView ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; -  @Bind ( R.id.input_budget_name ) EditText mBudgetNameInput ; 
		+  @BindView ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; -  @Bind ( R.id.name_text_input_layout ) TextInputLayout mNameTextInputLayout ; 
		+  @BindView ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; -  @Bind ( R.id.calculator_keyboard ) KeyboardView mKeyboardView ; 
		+  @BindView ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; -  @Bind ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; 
		+  @BindView ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; -  @Bind ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; 
		+  @BindView ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; -  @Bind ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; 
		+  @BindView ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; -  @Bind ( R.id.input_budget_name ) EditText mBudgetNameInput ; 
		+  @BindView ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; -  @Bind ( R.id.input_description ) EditText mDescriptionInput ; 
		+  @BindView ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; -  @Bind ( R.id.name_text_input_layout ) TextInputLayout mNameTextInputLayout ; 
		+  @BindView ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; -  @Bind ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; 
		+  @BindView ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; -  @Bind ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; 
		+  @BindView ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; -  @Bind ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; 
		+  @BindView ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; -  @Bind ( R.id.input_budget_name ) EditText mBudgetNameInput ; 
		+  @BindView ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; -  @Bind ( R.id.input_description ) EditText mDescriptionInput ; 
		+  @BindView ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; -  @Bind ( R.id.name_text_input_layout ) TextInputLayout mNameTextInputLayout ; 
		+  @BindView ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; -  @Bind ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; 
		+  @BindView ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; -  @Bind ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; 
		+  @BindView ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; -  @Bind ( R.id.btn_add_budget_amount ) Button mAddBudgetAmount ; 
		+  @BindView ( R.id.input_start_date )  TextView mStartDateInput ; -  @Bind ( R.id.input_recurrence )  TextView mRecurrenceInput ; 
		+  @BindView ( R.id.input_start_date )  TextView mStartDateInput ; -  @Bind ( R.id.input_start_date )  TextView mStartDateInput ; 
		+  @BindView ( R.id.budget_amount_layout )  View mBudgetAmountLayout ; -  @Bind ( R.id.budget_amount_layout )  View mBudgetAmountLayout ; 
app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment_java
1
	+      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ) ; -    colors.add ( account.getColor () ) ; 
		+    colors.add ( account.getColor () != Account.DEFAULT_COLOR -    colors.add ( account.getColor () ) ; 
app/src/main/java/org/gnucash/android/ui/report/PieChartFragment_java
1
2
	+      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -    colors.add ( mUseAccountColor 
	+      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ) ; 
	+     color = ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -    colors.add ( mUseAccountColor 
		+     color = ( account.getColor () != Account.DEFAULT_COLOR ) -    colors.add ( mUseAccountColor 
		+      ? account.getColor () -      ? account.getColor () 
		+      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -      ? account.getColor () 
		+     color = ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -      ? account.getColor () 
		+     color = ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ) ; 
app/src/test/java/org/gnucash/android/test/unit/model/PriceTest_java
1
2
app/src/main/java/org/gnucash/android/model/Price_java
1
2
	+  return formatter.format ( numerator.divide ( denominator , MathContext.DECIMAL32 ) ) ; -  return formatter.format ( numerator.divide ( denominator ) ) ; 
app/src/main/java/org/gnucash/android/ui/report/BarChartFragment_java
1
		+      color = ( account.getColor () != Account.DEFAULT_COLOR ) -      color = account.getColor () ; 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment_java
1
		+  if ( mDefaultTransferAccountCheckBox.isChecked () -  if ( mDefaultTransferAccountCheckBox.isChecked () ) { 
app/src/main/java/org/gnucash/android/model/Money_java
1
app/src/org/gnucash/android/ui/account/AccountFormFragment_java
1
		+    + TextUtils.join ( " ' , ' " , mDescendantAccountUIDs ) + " ' , ' " + mAccountUID + " ' ) ) " ; -   mDescendantAccountUIDs.add ( mAccountUID ) ; 
3
		+ else { - else 
		+   nameChanged = ! mAccount.getName () .equals ( getEnteredName () ) ; - mAccount.setName ( getEnteredName () ) ; 
		+   mAccount.setName ( getEnteredName () ) ; - mAccount.setName ( getEnteredName () ) ; 
2
5
	+    if ( ( nameChanged  |  |  parentAccountId != newParentAccountId ) && mDescendantAccountUIDs.size () > 0 ) { -    if ( parentAccountId != newParentAccountId && mDescendantAccountUIDs.size () > 0 ) { 
4
	+  if ( nameChanged  |  |  mDescendantAccountUIDs == null  |  |  newParentAccountId != parentAccountId ) { -  if ( mDescendantAccountUIDs == null  |  |  newParentAccountId != parentAccountId ) { 
GnucashMobile/src/org/gnucash/android/ui/accounts/ExportDialogFragment_java
1
2
	+ BufferedWriter writer = new BufferedWriter ( new OutputStreamWriter ( new FileOutputStream ( file ) , " UTF- 8 " ) ) ; - FileWriter writer = new FileWriter ( file ) ; 
	+ write ( doc , writer ) ; - write ( doc , writer ) ; 
		+ BufferedWriter writer = new BufferedWriter ( new OutputStreamWriter ( new FileOutputStream ( file ) , " UTF- 8 " ) ) ; - write ( doc , writer ) ; 
		+ write ( doc , stringWriter ) ; - write ( doc , writer ) ; 
		+ StringBuffer stringBuffer = new StringBuffer ( OfxFormatter.OFX_SGML_HEADER ) ; - FileWriter writer = new FileWriter ( file ) ; 
GnucashMobile/src/org/gnucash/android/util/OfxFormatter_java
1
GnucashMobile/AndroidManifest_xml
GnucashMobile/res/values/strings_xml
GnucashMobile/res/xml/fragment_general_preferences_xml
app/src/main/java/org/gnucash/android/ui/report/PieChartFragment_java
1
3
		+ import com.github.mikephil.charting.listener.OnChartValueSelectedListener ; - import com.github.mikephil.charting.listener.OnChartValueSelectedListener ; 
2
5
		+  mChart.getLegend () .setWordWrapEnabled ( true ) ; -  mChart.getLegend () .setEnabled ( false ) ; 
4
app/src/main/java/org/gnucash/android/ui/report/BarChartFragment_java
1
app/src/main/res/menu/chart_actions_xml
app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter_java
1
2
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
		+  return ( mUseDoubleEntry && mAmountEditText.isInputValid () -  return ( mAmountEditText.isInputValid () ) 
app/src/org/gnucash/android/ui/account/AccountsActivity_java
1
GnucashMobile/src/org/gnucash/android/ui/accounts/ExportDialogFragment_java
1
	+ boolean useXmlHeader = PreferenceManager.getDefaultSharedPreferences ( getActivity () ) - boolean useSgmlHeader = PreferenceManager.getDefaultSharedPreferences ( getActivity () ) 
	+  .getBoolean ( getString ( R.string.key_xml_ofx_header ) , false ) ; -  .getBoolean ( getString ( R.string.key_sgml_ofx_header ) , false ) ; 
		+ if ( useXmlHeader ) { - if ( useSgmlHeader ) { 
2
GnucashMobile/res/values/strings_xml
GnucashMobile/src/org/gnucash/android/data/Account_java
1
		+ String name = mName.replaceAll ( " [^A- Za- z0- 9] " , " " ) .toLowerCase ( Locale.US ) ; - String name = mName.toLowerCase ( Locale.US ) .replace ( " " , " - " ) ; 
GnucashMobile/AndroidManifest_xml
GnucashMobile/src/org/gnucash/android/ui/accounts/AccountsActivity_java
1
2
GnucashMobile/res/values-es/strings_xml
GnucashMobile/res/xml/fragment_general_preferences_xml
app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity_java
1
	+     InputStream accountInputStream = getContentResolver () .openInputStream ( data.getData () ) ; -    InputStream accountInputStream = getContentResolver () .openInputStream ( data.getData () ) ; 
	+     new ImportAsyncTask ( this ) .execute ( accountInputStream ) ; -    new ImportAsyncTask ( this ) .execute ( accountInputStream ) ; 
	+    } catch ( FileNotFoundException e ) { -   } catch ( FileNotFoundException e ) { 
	+     Toast.makeText ( this , R.string.toast_error_importing_accounts , Toast.LENGTH_SHORT ) .show () ; -    Toast.makeText ( this , R.string.toast_error_importing_accounts , Toast.LENGTH_SHORT ) .show () ; 
		+    try { -    try { 
		+    } catch ( FileNotFoundException e ) { -    Crashlytics.logException ( e ) ; 
		+     Crashlytics.logException ( e ) ; -    Crashlytics.logException ( e ) ; 
app/src/org/gnucash/android/db/TransactionsDbAdapter_java
11
	+    accountUID = c.getString ( 0 ) ; -   accountUID = c.getString ( 0 ) ; 
10
	+    uid = c.getString ( 0 ) ; - uid = c.getString ( 0 ) ; 
		+   c.close () ; - c.close () ; 
13
	+    id = c.getLong ( 0 ) ; -   id = c.getLong ( 0 ) ; 
12
	+    id = c.getLong ( 0 ) ; - id = c.getLong ( 0 ) ; 
		+   c.close () ; - c.close () ; 
1
	+    Log.d ( TAG , " Transaction already exists. Returning existing id " ) ; - Log.d ( TAG , " Transaction already exists. Returning existing id " ) ; 
	+    result = cursor.getLong ( 0 ) ; - result = cursor.getLong ( 0 ) ; 
		+   cursor.close () ; - cursor.close () ; 
3
2
	+    transaction = buildTransactionInstance ( c ) ; - transaction = buildTransactionInstance ( c ) ;  
		+   c.close () ; - c.close () ; 
5
	+ public Money getTransactionsSum ( long accountId ) { - public Money getTransactionsSum ( long accountId ) { 
4
7
	+    sum -= sumCursor.getFloat ( 0 ) ; -   sum -= sumCursor.getFloat ( 0 ) ; 
6
	+    sum += sumCursor.getFloat ( 0 ) ; -   sum += sumCursor.getFloat ( 0 ) ; 
9
8
	+    type = c.getString ( c.getColumnIndexOrThrow ( DatabaseHelper.KEY_TYPE ) ) ; -   type = c.getString ( c.getColumnIndexOrThrow ( DatabaseHelper.KEY_TYPE ) ) ; 
app/src/org/gnucash/android/db/AccountsDbAdapter_java
1
	+    id = c.getLong ( DatabaseAdapter.COLUMN_ROW_ID ) ; - id = c.getLong ( DatabaseAdapter.COLUMN_ROW_ID ) ; 
		+   c.close () ; - c.close () ; 
3
2
5
4
app/res/values-ru/strings_xml
app/src/main/res/values-uk/strings_xml
app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter_java
1
		+   stmt.bindString ( 8 , schedxAction.getTag () ) ; -   stmt.bindString ( 9 , schedxAction.getTag () ) ; 
app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment_java
1
		+  ocDialog.show ( getActivity () .getSupportFragmentManager () , " ownCloud dialog " ) ; -  ocDialog.show ( getActivity () .getFragmentManager () , " owncloud_dialog " ) ; 
app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment_java
1
		+ import android.support.v4.app.DialogFragment ; - import android.app.DialogFragment ; 
2
app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment_java
1
	+      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ) ; -    colors.add ( account.getColor () ) ; 
		+    colors.add ( account.getColor () != Account.DEFAULT_COLOR -    colors.add ( account.getColor () ) ; 
app/src/main/java/org/gnucash/android/ui/report/PieChartFragment_java
1
2
	+      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -    colors.add ( mUseAccountColor 
	+      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ) ; 
	+     color = ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -    colors.add ( mUseAccountColor 
		+     color = ( account.getColor () != Account.DEFAULT_COLOR ) -    colors.add ( mUseAccountColor 
		+      ? account.getColor () -      ? account.getColor () 
		+      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -      ? account.getColor () 
		+     color = ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -      ? account.getColor () 
		+     color = ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ; -      : ReportsActivity.COLORS[ ( dataSet.getEntryCount () - 1 ) % ReportsActivity.COLORS.length] ) ; 
app/src/main/java/org/gnucash/android/ui/report/BarChartFragment_java
1
		+      color = ( account.getColor () != Account.DEFAULT_COLOR ) -      color = account.getColor () ; 
app/src/main/java/org/gnucash/android/export/Exporter_java
1
3
	+   String cachePath = mCacheDir.getAbsolutePath () ; -  String cachePath = mCacheDir.getAbsolutePath () ; 
		+  if ( mExportCacheFilePath == null ) { -  if ( ! cachePath.endsWith ( " / " ) ) 
		+  if ( mExportCacheFilePath == null ) { -   cachePath += " / " ; 
		+   String cachePath = mCacheDir.getAbsolutePath () ; -   cachePath += " / " ; 
		+   if ( ! cachePath.endsWith ( " / " ) ) -  if ( ! cachePath.endsWith ( " / " ) ) 
		+   if ( ! cachePath.endsWith ( " / " ) ) -   cachePath += " / " ; 
		+    cachePath += " / " ; -   cachePath += " / " ; 
		+   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; -   cachePath += " / " ; 
		+   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; -  return cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; 
2
GnucashMobile/src/org/gnucash/android/ui/accounts/AddAccountFragment_java
1
3
2
		+ AddAccountFragment mAddAccountFragment ; - NewAccountDialogFragment mAddAccountFragment ; 
GnucashMobile/AndroidManifest_xml
GnucashMobile/src/org/gnucash/android/ui/accounts/NewAccountDialogFragment_java
1
GnucashMobile/src/org/gnucash/android/data/Money_java
1
2
		+ private AccountType mAccountType = AccountType.CASH ; - private AccountType mAccountType = AccountType.CHECKING ; 
GnucashMobile/src/org/gnucash/android/data/Account_java
1
GnucashMobile/res/layout/fragment_new_transaction_xml
GnucashMobile/src/org/gnucash/android/data/Transaction_java
1
2
GnucashMobile/src/org/gnucash/android/db/AccountsDbAdapter_java
1
2
GnucashMobile/src/org/gnucash/android/db/TransactionsDbAdapter_java
1
	+ " ( " + DatabaseHelper.KEY_ACCOUNT_UID + " = ' " + accountUID + " ' ) " -  DatabaseHelper.KEY_ACCOUNT_UID + " = ' " + accountUID + " ' " , 
	+  + " OR ( " + DatabaseHelper.KEY_SPLIT_ACCOUNT_UID + " = ' " + accountUID + " ' ) " , -  DatabaseHelper.KEY_ACCOUNT_UID + " = ' " + accountUID + " ' " , 
3
2
5
		+ Cursor c = fetchAllTransactionsForAccount ( accountId ) ; - Cursor c = mDb.query ( DatabaseHelper.TRANSACTIONS_TABLE_NAME , 
4
		+ long count = statement.simpleQueryForLong () ; - count = cursor.getCount () ; 
		+ return count ; - return count ; 
		+ return count ; - return count ; 
6
		+ Money money = new Money ( c.getString ( DatabaseAdapter.COLUMN_AMOUNT ) , currencyCode ) ; - amountSum = amountSum.add ( new Money ( c.getString ( 0 ) , currencyCode ) ) ; 
GnucashMobile/res/xml/fragment_transaction_preferences_xml
GnucashMobile/src/org/gnucash/android/ui/transactions/NewTransactionFragment_java
1
3
		+ mAccountsSpinner.setAdapter ( mCursorAdapter ) ; - mAccountsSpinner.setAdapter ( mCursorAdapter ) ; 
2
5
		+ final long splitAccountId = mAccountsDbAdapter.fetchAccountWithUID ( splitAccountUID ) ; -  mAccountsSpinner.setSelection ( pos ) ; 
		+ refreshSelectedSplitAccount ( splitAccountId ) ; -  mAccountsSpinner.setSelection ( pos ) ; 
4
7
6
GnucashMobile/src/org/gnucash/android/receivers/TransactionRecorder_java
1
GnucashMobile/src/org/gnucash/android/db/DatabaseHelper_java
1
	+ private static final int DATABASE_VERSION = 2 ; - private static final int DATABASE_VERSION = 1 ; 
3
	+ + KEY_ACCOUNT_UID + " varchar ( 255 ) not null , "  - + KEY_ACCOUNT_UID + " varchar ( 255 ) not null , " 
		+ + " FOREIGN KEY ( " + KEY_SPLIT_ACCOUNT_UID + " ) REFERENCES " + ACCOUNTS_TABLE_NAME + " ( " + KEY_UID + " ) , " - + KEY_ACCOUNT_UID + " varchar ( 255 ) not null , " 
2
4
GnucashMobile/src/org/gnucash/android/ui/accounts/ExportDialogFragment_java
1
2
	+ BufferedWriter writer = new BufferedWriter ( new OutputStreamWriter ( new FileOutputStream ( file ) , " UTF- 8 " ) ) ; - FileWriter writer = new FileWriter ( file ) ; 
	+ write ( doc , writer ) ; - write ( doc , writer ) ; 
		+ BufferedWriter writer = new BufferedWriter ( new OutputStreamWriter ( new FileOutputStream ( file ) , " UTF- 8 " ) ) ; - write ( doc , writer ) ; 
		+ write ( doc , stringWriter ) ; - write ( doc , writer ) ; 
		+ StringBuffer stringBuffer = new StringBuffer ( OfxFormatter.OFX_SGML_HEADER ) ; - FileWriter writer = new FileWriter ( file ) ; 
GnucashMobile/res/layout/dialog_new_account_xml
GnucashMobile/res/values/strings_xml
GnucashMobile/src/org/gnucash/android/app/GnuCashApplication_java
1
GnucashMobile/pom_xml
GnucashMobile/src/org/gnucash/android/util/OfxFormatter_java
1
GnucashMobile/src/org/gnucash/android/ui/accounts/AccountsActivity_java
1
		+ accountFragment.showAddAccountFragment ( 0 ) ; - accountFragment.showAddAccountDialog ( 0 ) ; 
3
2
	+ + KEY_TYPE + " varchar ( 255 ) , "  - + KEY_TYPE + " varchar ( 255 ) , " 
	+ + KEY_PARENT_ACCOUNT_UID + " varchar ( 255 ) , " - + KEY_TYPE + " varchar ( 255 ) , " 
5
4
GnucashMobile/src/org/gnucash/android/ui/accounts/AccountsListFragment_java
1
GnucashMobile/src/org/gnucash/android/db/DatabaseAdapter_java
1
CHANGELOG_md
1
3
2
GnucashMobile/res/xml/fragment_general_preferences_xml
app/src/org/gnucash/android/ui/transaction/dialog/SplitEditorDialogFragment_java
1
app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest_java
1
app/src/main/java/org/gnucash/android/model/ScheduledAction_java
1
		+   mRecurrence.setPeriodEnd ( new Timestamp ( mEndDate ) ) ; -   mRecurrence.setPeriodStart ( new Timestamp ( mEndDate ) ) ; 
app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity_java
1
app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment_java
1
2
app/src/main/java/org/gnucash/android/ui/account/AccountsActivity_java
1
3
2
app/src/main/AndroidManifest_xml
app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity_java
1
		+    createAccountsAndFinish () ; -     createAccountsAndFinish () ; 
2
app/src/main/java/org/gnucash/android/util/PreferencesHelper_java
1
app/src/main/java/org/gnucash/android/export/qif/QifExporter_java
1
		+ import org.gnucash.android.util.PreferencesHelper ; - import android.preference.PreferenceManager ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import android.preference.PreferenceManager ; 
3
		+   String lastExportTimeStamp = TimestampHelper.getUtcStringForTimestamp ( mExportParams.getExportStartTime () ) ; -   String lastExportTimeStamp = mExportParams.getExportStartTime () .toString () ; 
2
4
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText_java
1
app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/main/java/org/gnucash/android/export/Exporter_java
1
app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/main/java/org/gnucash/android/importer/GncXmlImporter_java
1
		+ import org.gnucash.android.util.PreferencesHelper ; - import android.preference.PreferenceManager ; 
		+ import org.gnucash.android.util.PreferencesHelper ; - import org.gnucash.android.app.GnuCashApplication ; 
		+ import org.gnucash.android.util.PreferencesHelper ; - import org.gnucash.android.export.Exporter ; 
3
2
app/src/main/java/org/gnucash/android/db/PricesDbAdapter_java
1
		+ import org.gnucash.android.util.TimestampHelper ; - import android.content.ContentValues ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import android.util.Log ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import java.sql.Timestamp ; 
3
		+  price.setDate ( TimestampHelper.getTimestampForUtcString ( dateString ) ) ; -  price.setDate ( Timestamp.valueOf ( dateString ) ) ; 
2
		+  mReplaceStatement.bindString ( 4 , TimestampHelper.getUtcStringForTimestamp ( price.getDate () ) ) ; -  mReplaceStatement.bindString ( 4 , price.getDate () .toString () ) ; 
app/src/main/java/org/gnucash/android/model/BaseModel_java
1
2
app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter_java
1
3
	+   long scheduleStartTime = TimestampHelper.getTimestampForUtcString ( createdTimestamp ) .getTime () ; -   long scheduleStartTime = Timestamp.valueOf ( createdTimestamp ) .getTime () ; 
2
		+    Timestamp timeEntered = TimestampHelper.getTimestampForUtcString ( cursor.getString ( cursor.getColumnIndexOrThrow ( " trans_date_posted " ) ) ) ; -    Timestamp timeEntered = Timestamp.valueOf ( cursor.getString ( cursor.getColumnIndexOrThrow ( " trans_date_posted " ) ) ) ; 
4
	+    String strDate = GncXmlHelper.formatDate ( TimestampHelper.getTimestampForUtcString ( cursor.getString ( cursor.getColumnIndexOrThrow ( DatabaseSchema.PriceEntry.COLUMN_DATE ) ) ) .getTime () ) ; -    String strDate = GncXmlHelper.formatDate ( Timestamp.valueOf ( cursor.getString ( cursor.getColumnIndexOrThrow ( DatabaseSchema.PriceEntry.COLUMN_DATE ) ) ) .getTime () ) ; 
app/src/main/res/values-ru/strings_xml
app/src/main/java/org/gnucash/android/db/DatabaseHelper_java
1
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
		+  contentValues.put ( CommonColumns.COLUMN_CREATED_AT , TimestampHelper.getUtcStringForTimestamp ( model.getCreatedTimestamp () ) ) ; -  contentValues.put ( CommonColumns.COLUMN_CREATED_AT , model.getCreatedTimestamp () .toString () ) ; 
app/src/main/java/org/gnucash/android/db/SplitsDbAdapter_java
1
		+ import org.gnucash.android.util.TimestampHelper ; - import org.gnucash.android.model.AccountType ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import java.sql.Timestamp ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import java.util.Currency ; 
3
		+  mReplaceStatement.bindString ( 8 , TimestampHelper.getUtcStringForTimestamp ( split.getCreatedTimestamp () ) ) ; -  mReplaceStatement.bindString ( 8 , split.getCreatedTimestamp () .toString () ) ; 
2
app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest_java
1
3
		+ package org.gnucash.android.test.unit.testutil ; - package org.gnucash.android.test.unit.util ; 
2
		+ package org.gnucash.android.test.unit.testutil ; - package org.gnucash.android.test.unit.util ; 
4
		+ package org.gnucash.android.test.unit.testutil ; - package org.gnucash.android.test.unit.util ; 
app/src/main/res/values-it-rIT/strings_xml
app/src/test/java/org/gnucash/android/test/unit/export/BackupTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/test/java/org/gnucash/android/test/unit/model/SplitTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import java.util.Currency ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import java.util.Currency ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import java.util.Currency ; 
app/src/main/java/org/gnucash/android/export/ofx/OfxExporter_java
1
3
2
app/src/main/java/org/gnucash/android/util/TimestampHelper_java
1
app/src/main/java/org/gnucash/android/export/ExportParams_java
1
		+ import org.gnucash.android.util.TimestampHelper ; - import android.preference.PreferenceManager ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import org.gnucash.android.BuildConfig ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import org.gnucash.android.R ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import org.gnucash.android.app.GnuCashApplication ; 
2
CHANGELOG_md
1
		+ < item > Owncloud < /item > - < item > < /item > 
app/src/main/res/values-lv-rLV/strings_xml
app/src/androidTest/java/org/gnucash/android/test/ui/CalculatorEditTextTest_java
1
app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter_java
1
3
		+  Timestamp timestamp = TimestampHelper.getTimestampForNow () ; -    timestamp = Timestamp.valueOf ( timeString ) ; 
		+    timestamp = TimestampHelper.getTimestampForUtcString ( timeString ) ; -    timestamp = Timestamp.valueOf ( timeString ) ; 
2
		+  mReplaceStatement.bindString ( 8 , TimestampHelper.getUtcStringForTimestamp ( transaction.getCreatedTimestamp () ) ) ; -  mReplaceStatement.bindString ( 8 , transaction.getCreatedTimestamp () .toString () ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest_java
1
2
app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest_java
1
app/src/main/res/values-zh-rCN/strings_xml
app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity_java
1
	+ public static void updateWidget ( final Context context , int appWidgetId , String accountUID ) { - public static void updateWidget ( Context context , int appWidgetId , String accountUID ) { 
		+ final Account account ; - Account account ; 
3
2
	+ final RemoteViews views = new RemoteViews ( context.getPackageName () , - RemoteViews views = new RemoteViews ( context.getPackageName () , 
	+ Money accountBalance = accountsDbAdapter.getAccountBalance ( accountUID , - 1 , System.currentTimeMillis () ) ; -  Money accountBalance = accountsDbAdapter.getAccountBalance ( accountUID , - 1 , System.currentTimeMillis () ) ; 
	+ Money accountBalance = accountsDbAdapter.getAccountBalance ( accountUID , - 1 , System.currentTimeMillis () ) ; -  views.setTextViewText ( R.id.transactions_summary , 
	+ Money accountBalance = accountsDbAdapter.getAccountBalance ( accountUID , - 1 , System.currentTimeMillis () ) ; - 
		+ final RemoteViews views = new RemoteViews ( context.getPackageName () , -  views.setTextViewText ( R.id.transactions_summary , 
		+ Money accountBalance = accountsDbAdapter.getAccountBalance ( accountUID , - 1 , System.currentTimeMillis () ) ; - RemoteViews views = new RemoteViews ( context.getPackageName () , 
		+ views.setTextViewText ( R.id.transactions_summary , -  views.setTextViewText ( R.id.transactions_summary , 
app/src/main/java/org/gnucash/android/db/AccountsDbAdapter_java
1
3
2
		+   long deletedCount = mDb.delete ( -   mDb.delete ( 
app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask_java
1
2
app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest_java
1
app/src/main/res/values-ja-rJP/strings_xml
app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter_java
1
2
		+  mReplaceStatement.bindString ( 9 , TimestampHelper.getUtcStringForTimestamp ( schedxAction.getCreatedTimestamp () ) ) ; -  mReplaceStatement.bindString ( 9 , schedxAction.getCreatedTimestamp () .toString () ) ; 
app/src/main/java/org/gnucash/android/db/DatabaseSchema_java
1
	+  public static final int DATABASE_VERSION = 12 ; -  public static final int DATABASE_VERSION = 11 ; 
app/src/test/java/org/gnucash/android/test/unit/model/AccountTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/main/res/layout/cardview_budget_amount_xml
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
3
2
4
app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/res/layout/fragment_budget_detail_xml
app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/res/values-ro-rRO/strings_xml
app/src/main/java/org/gnucash/android/model/Money_java
1
3
2
		+ return mAmount.setScale ( mCommodity.getSmallestFractionDigits () , RoundingMode.HALF_EVEN ) ; - return mAmount ; 
5
	+ * @throws CurrencyMismatchException if the < code > Money < /code > objects to be added have different Currencies - * @throws IllegalArgumentException if the < code > Money < /code > objects to be added have different Currencies 
4
	+ * @throws CurrencyMismatchException if the < code > Money < /code > objects to be added have different Currencies - * @throws IllegalArgumentException if the < code > Money < /code > objects to be added have different Currencies 
7
6
	+ * @throws CurrencyMismatchException if the < code > Money < /code > objects to be added have different Currencies - * @throws IllegalArgumentException if the < code > Money < /code > objects to be added have different Currencies 
9
8
		+  public Money abs () { -  public Money absolute () { 
app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity_java
1
3
2
4
app/src/main/java/org/gnucash/android/db/DatabaseHelper_java
1
2
app/src/main/res/values-it-rIT/strings_xml
app/src/main/res/values-sv-rSE/strings_xml
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
11
10
13
12
15
14
		+     mRecurrence.setPeriodStart ( new Timestamp ( date ) ) ; -     mScheduledAction.setStartTime ( date ) ; 
17
16
19
		+  if ( scheduledAction.getLastRunTime () > 0 ) { -  if ( scheduledAction.getLastRun () > 0 ) { 
		+   lastRuntime = scheduledAction.getLastRunTime () ; -   lastRuntime = scheduledAction.getLastRun () ; 
18
		+   mSplit.setValue ( amount.abs () ) ; -   mSplit.setValue ( amount.absolute () ) ; 
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
2
5
4
7
6
9
8
app/src/main/res/values-iw-rIL/strings_xml
app/src/main/res/values-pt-rPT/strings_xml
app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter_java
1
3
2
		+ package org.gnucash.android.db.adapter ; - package org.gnucash.android.db ; 
5
		+    Split split = new Split ( balance.abs () , accountUID ) ; -    Split split = new Split ( balance.absolute () , accountUID ) ; 
4
app/src/main/res/values-de/strings_xml
app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment_java
1
3
		+ import org.gnucash.android.ui.util.RecurrenceViewClickListener ; - import java.text.DateFormat ; 
		+ import org.gnucash.android.ui.util.RecurrenceViewClickListener ; - import java.util.List ; 
2
		+ import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment ; - import com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog ; 
		+ import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment ; - import com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialog ; 
		+ import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment ; - import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog ; 
		+ import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment ; - import com.crashlytics.android.Crashlytics ; 
		+ import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialog ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import com.crashlytics.android.Crashlytics ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
4
		+ RecurrencePickerDialogFragment.OnRecurrenceSetListener , - CalendarDatePickerDialog.OnDateSetListener , 
		+ RecurrencePickerDialogFragment.OnRecurrenceSetListener , - RadialTimePickerDialog.OnTimeSetListener { 
		+ CalendarDatePickerDialogFragment.OnDateSetListener , - CalendarDatePickerDialog.OnDateSetListener , 
		+ CalendarDatePickerDialogFragment.OnDateSetListener , - RadialTimePickerDialog.OnTimeSetListener { 
app/src/main/res/values-zh-rCN/strings_xml
app/src/main/res/values-ja-rJP/strings_xml
app/src/main/res/values-vi-rVN/strings_xml
app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText_java
1
2
	+    if ( v != null && ! isInEditMode () ) -    if ( v != null ) 
app/src/main/res/drawable/budget_progress_indicator_xml
app/src/main/java/org/gnucash/android/export/Exporter_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
2
	+   mSplitsDbAdapter  = new SplitsDbAdapter ( db ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
	+   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; -   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; 
	+   mAccountsDbAdapter  = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; -   mAccountsDbAdapter = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; 
		+  protected BudgetsDbAdapter mBudgetsDbAdapter ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mAccountsDbAdapter  = AccountsDbAdapter.getInstance () ; -   mAccountsDbAdapter = AccountsDbAdapter.getInstance () ; 
		+   mTransactionsDbAdapter = TransactionsDbAdapter.getInstance () ; -   mTransactionsDbAdapter = TransactionsDbAdapter.getInstance () ; 
		+   mSplitsDbAdapter  = SplitsDbAdapter.getInstance () ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mPricesDbAdapter  = PricesDbAdapter.getInstance () ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mCommoditiesDbAdapter = CommoditiesDbAdapter.getInstance () ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mBudgetsDbAdapter  = BudgetsDbAdapter.getInstance () ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mSplitsDbAdapter  = new SplitsDbAdapter ( db ) ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; -   mTransactionsDbAdapter = TransactionsDbAdapter.getInstance () ; 
		+   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
		+   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; -   mAccountsDbAdapter = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; 
		+   mAccountsDbAdapter  = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; -   mAccountsDbAdapter = AccountsDbAdapter.getInstance () ; 
		+   mAccountsDbAdapter  = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; -   mTransactionsDbAdapter = TransactionsDbAdapter.getInstance () ; 
		+   mAccountsDbAdapter  = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
		+   mAccountsDbAdapter  = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; -   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; 
		+   mPricesDbAdapter  = new PricesDbAdapter ( db ) ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mPricesDbAdapter  = new PricesDbAdapter ( db ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
		+   mCommoditiesDbAdapter = new CommoditiesDbAdapter ( db ) ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mCommoditiesDbAdapter = new CommoditiesDbAdapter ( db ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
		+   mBudgetsDbAdapter  = new BudgetsDbAdapter ( db ) ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mBudgetsDbAdapter  = new BudgetsDbAdapter ( db ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest_java
1
app/src/main/res/values-zh-rTW/strings_xml
app/src/main/res/values-ru/strings_xml
app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.model.PeriodType ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.PeriodType ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.model.PeriodType ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.model.PeriodType ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.model.PeriodType ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
2
4
app/src/main/java/org/gnucash/android/export/ExportAsyncTask_java
11
10
		+  int autoCreate = cursor.getInt ( cursor.getColumnIndexOrThrow ( ScheduledActionEntry.COLUMN_AUTO_CREATE ) ) ; -  event.setPeriod ( period ) ; 
		+  int autoNotify = cursor.getInt ( cursor.getColumnIndexOrThrow ( ScheduledActionEntry.COLUMN_AUTO_NOTIFY ) ) ; -  event.setPeriod ( period ) ; 
		+  String recurrenceUID = cursor.getString ( cursor.getColumnIndexOrThrow ( ScheduledActionEntry.COLUMN_RECURRENCE_UID ) ) ; -  event.setPeriod ( period ) ; 
13
12
15
		+ import org.gnucash.android.db.DatabaseSchema ; - import org.gnucash.android.model.AccountType ; 
14
		+ package org.gnucash.android.db.adapter ; - package org.gnucash.android.db ; 
17
	+  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; 
	+  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; 
	+  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; -  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; 
		+  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; 
		+  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; 
		+  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; 
		+  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; 
		+  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; -  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; 
		+  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; -  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; 
		+  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindString ( 9 , String.valueOf ( split.getReconcileState () ) ) ; -  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; 
		+  mReplaceStatement.bindString ( 9 , String.valueOf ( split.getReconcileState () ) ) ; -  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; 
		+  mReplaceStatement.bindString ( 9 , String.valueOf ( split.getReconcileState () ) ) ; -  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; 
		+  mReplaceStatement.bindString ( 9 , String.valueOf ( split.getReconcileState () ) ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindString ( 9 , String.valueOf ( split.getReconcileState () ) ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindString ( 10 , split.getReconcileDate () .toString () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindString ( 10 , split.getReconcileDate () .toString () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindString ( 11 , split.getAccountUID () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindString ( 11 , split.getAccountUID () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindString ( 12 , split.getTransactionUID () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindString ( 12 , split.getTransactionUID () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
16
	+    + SplitEntry.COLUMN_TRANSACTION_UID + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; -    + SplitEntry.COLUMN_TRANSACTION_UID + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; 
19
18
21
	+    Log.d ( LOG_TAG , String.format ( " %d splits inserted in %d ns " , nSplits , System.nanoTime () - start ) ) ; -    Log.d ( LOG_TAG , String.format ( " %d splits inserted in %d ns " , splitList.size () , System.nanoTime () - start ) ) ; 
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
2
5
4
7
	+    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
	+    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
	+    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
	+    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; -    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; 
		+    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_RECURRENCE_UID + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_RECURRENCE_UID + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
		+    + ScheduledActionEntry.COLUMN_AUTO_CREATE  + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_AUTO_CREATE  + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
		+    + ScheduledActionEntry.COLUMN_AUTO_NOTIFY  + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_AUTO_NOTIFY  + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
		+    + ScheduledActionEntry.COLUMN_ADVANCE_CREATION + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_ADVANCE_CREATION + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
		+    + ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
		+    + ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
6
		+  extractBaseModelAttributes ( contentValues , scheduledAction ) ; -  populateBaseModelAttributes ( contentValues , scheduledAction ) ; 
9
20
		+ package org.gnucash.android.db.adapter ; - package org.gnucash.android.db ; 
8
app/src/main/java/org/gnucash/android/export/ofx/OfxExporter_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
		+ onView ( withId ( R.id.drawer_layout ) ) .perform ( DrawerActions.open () ) ; - DrawerActions.openDrawer ( R.id.drawer_layout ) ; 
2
		+ onView ( withId ( R.id.drawer_layout ) ) .perform ( DrawerActions.open () ) ; - DrawerActions.openDrawer ( R.id.drawer_layout ) ; 
5
	+ assertThat ( action.getRecurrence () .getPeriodType () ) .isEqualTo ( PeriodType.WEEK ) ; - assertThat ( action.getPeriodType () ) .isEqualTo ( PeriodType.WEEK ) ; 
4
	+ onView ( withText ( " OK " ) ) .perform ( click () ) ; - onView ( withText ( " Done " ) ) .perform ( click () ) ; 
app/src/main/java/org/gnucash/android/receivers/AccountCreator_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
app/src/main/res/layout/cardview_account_xml
app/src/main/res/menu/budget_actions_xml
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
		+  RecurrencePickerDialogFragment.OnRecurrenceSetListener , OnTransferFundsListener { -  CalendarDatePickerDialog.OnDateSetListener , RadialTimePickerDialog.OnTimeSetListener , 
		+  RecurrencePickerDialogFragment.OnRecurrenceSetListener , OnTransferFundsListener { -  RecurrencePickerDialog.OnRecurrenceSetListener , OnTransferFundsListener { 
3
		+  int position = mAccountCursorAdapter.getPosition ( mAccountsDbAdapter.getUID ( accountId ) ) ; -     mTransferAccountSpinner.setSelection ( position ) ; 
		+   mTransferAccountSpinner.setSelection ( position ) ; -     mTransferAccountSpinner.setSelection ( position ) ; 
2
		+ private QualifiedAccountNameCursorAdapter mAccountCursorAdapter ; - private SimpleCursorAdapter mCursorAdapter ; 
app/src/main/res/layout/fragment_budget_form_xml
app/src/main/res/menu/budget_context_menu_xml
app/src/main/res/layout/cardview_budget_xml
app/src/main/res/values-af-rZA/strings_xml
app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter_java
1
app/src/main/java/org/gnucash/android/model/ScheduledAction_java
10
1
		+ import org.joda.time.LocalDate ; - import org.gnucash.android.ui.util.RecurrenceParser ; 
		+ import org.joda.time.LocalDate ; - import org.joda.time.format.DateTimeFormat ; 
		+ import org.joda.time.LocalDate ; - import org.joda.time.format.DateTimeFormatter ; 
		+ import org.joda.time.LocalDate ; - import java.io.IOException ; 
		+ import java.sql.Timestamp ; - import org.gnucash.android.ui.util.RecurrenceParser ; 
		+ import java.sql.Timestamp ; - import org.joda.time.format.DateTimeFormat ; 
		+ import java.sql.Timestamp ; - import org.joda.time.format.DateTimeFormatter ; 
		+ import java.sql.Timestamp ; - import java.io.IOException ; 
3
	+  private boolean mAutoCreate = true ; -  private boolean autoCreate = true ; 
		+  private boolean mAutoNotify = false ; -  private boolean autoCreate = true ; 
2
		+  public enum ActionType { TRANSACTION , BACKUP } -  public enum ActionType { TRANSACTION , BACKUP 
5
4
7
6
9
	+  StringBuilder ruleBuilder = new StringBuilder ( mRecurrence.getRuleString () ) ; -  StringBuilder ruleBuilder = new StringBuilder () ; 
		+  StringBuilder ruleBuilder = new StringBuilder ( mRecurrence.getRuleString () ) ; -  PeriodType periodType = getPeriodType () ; 
8
		+  StringBuilder ruleBuilder = new StringBuilder ( mRecurrence.getRepeatString () ) ; -  PeriodType periodType = getPeriodType () ; 
		+  StringBuilder ruleBuilder = new StringBuilder ( mRecurrence.getRepeatString () ) ; -  StringBuilder ruleBuilder = new StringBuilder ( periodType.getFrequencyRepeatString () ) ; 
app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment_java
1
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
2
app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/res/values-ar-rSA/strings_xml
app/src/main/java/org/gnucash/android/ui/account/AccountsActivity_java
1
		+ import android.support.v7.app.AppCompatActivity ; - import android.support.v4.app.FragmentActivity ; 
3
	+  public static void openExportFragment ( AppCompatActivity activity ) { -  public static void openExportFragment ( FragmentActivity activity ) { 
2
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
app/src/main/res/values-sr-rSP/strings_xml
app/src/main/java/org/gnucash/android/model/Commodity_java
1
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
app/src/test/java/org/gnucash/android/test/unit/db/BudgetsDbAdapterTest_java
1
app/src/main/java/org/gnucash/android/ui/common/UxArgument_java
1
app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity_java
1
app/src/main/res/values-cs-rCZ/strings_xml
app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter_java
11
		+    ScheduledActionEntry.COLUMN_TYPE + " = ? " , new String[] { ScheduledAction.ActionType.TRANSACTION.name () } , null ) ; -    ScheduledActionEntry.COLUMN_TYPE + " = ? " , new String[] { ScheduledAction.ActionType.TRANSACTION.name () } ) ; 
10
		+   xmlSerializer.text ( " n " ) ; -   xmlSerializer.text ( " n " ) ; 
13
	+   xmlSerializer.text ( scheduledAction.isEnabled () ? " y " : " n " ) ; -   xmlSerializer.text ( enabled ? " y " : " n " ) ; 
	+   xmlSerializer.text ( scheduledAction.shouldAutoCreate () ? " y " : " n " ) ; -   xmlSerializer.text ( enabled ? " y " : " n " ) ; 
	+   xmlSerializer.text ( scheduledAction.shouldAutoNotify () ? " y " : " n " ) ; -   xmlSerializer.text ( enabled ? " y " : " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.isEnabled () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.isEnabled () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.shouldAutoCreate () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.shouldAutoCreate () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.shouldAutoNotify () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.shouldAutoNotify () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
12
15
	+  private void exportCommodities ( XmlSerializer xmlSerializer , List < Currency > currencies ) throws IOException { -  private void exportCommodity ( XmlSerializer xmlSerializer , List < Currency > currencies ) throws IOException { 
		+   xmlSerializer.attribute ( null , GncXmlHelper.ATTR_KEY_VERSION , GncXmlHelper.BOOK_VERSION ) ; -   xmlSerializer.attribute ( null , GncXmlHelper.ATTR_KEY_VERSION , " 2.0.0 " ) ; 
14
17
	+    " split " , " trn " , " ts " , " sx " , " bgt " , " recurrence " } ; -    " split " , " trn " , " ts " , " sx " , " recurrence " } ; 
16
19
18
		+   exportCommodities ( xmlSerializer , currencies ) ; -   exportCommodity ( xmlSerializer , currencies ) ; 
1
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
2
5
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_SLOTS ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACT_SLOTS ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_SLOTS ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACT_SLOTS ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_SLOTS ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACT_SLOTS ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_SLOTS ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACT_SLOTS ) ; 
4
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
7
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
6
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
9
8
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
app/src/main/res/values-ca-rES/strings_xml
app/src/main/res/values-fr/strings_xml
app/src/main/java/org/gnucash/android/util/CommoditiesCursorAdapter_java
1
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import android.view.ContextMenu ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import java.util.Currency ; 
app/src/main/res/values-ko-rKR/strings_xml
app/src/main/java/org/gnucash/android/model/BudgetAmount_java
1
app/src/main/java/org/gnucash/android/model/PeriodType_java
1
3
2
app/src/main/res/values-nl-rNL/strings_xml
app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
app/src/main/java/org/gnucash/android/receivers/TransactionRecorder_java
1
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
2
	+   Split split = new Split ( amount.abs () , accountUID ) ; -   Split split = new Split ( amount.absolute () , accountUID ) ; 
app/src/main/res/values-el-rGR/strings_xml
app/src/main/res/values-fi-rFI/strings_xml
app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest_java
1
app/src/main/java/org/gnucash/android/ui/common/FormActivity_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.ui.budget.BudgetFormFragment ; - import org.gnucash.android.db.AccountsDbAdapter ; 
3
2
	+  public enum FormType { ACCOUNT , TRANSACTION , EXPORT , SPLIT_EDITOR , BUDGET } -  public enum FormType { ACCOUNT , TRANSACTION , EXPORT , SPLIT_EDITOR } 
4
app/src/main/java/org/gnucash/android/importer/CommoditiesXmlHandler_java
1
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
app/src/main/res/values-no-rNO/strings_xml
app/src/main/res/values-pl-rPL/strings_xml
app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter_java
1
app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest_java
1
2
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/res/layout/fragment_budget_list_xml
app/src/main/java/org/gnucash/android/ui/util/RecurrenceViewClickListener_java
1
app/src/main/res/values-hu-rHU/strings_xml
app/src/main/java/org/gnucash/android/export/qif/QifExporter_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/java/org/gnucash/android/db/DatabaseSchema_java
1
	+  public static final int DATABASE_VERSION = 12 ; -  public static final int DATABASE_VERSION = 11 ; 
	+  public static final int DATABASE_VERSION = 12 ; -  public static final int SPLITS_DB_VERSION = 7 ; 
3
	+  public static final String COLUMN_TAG   = " tag " ; -  public static final String COLUMN_PERIOD   = " period " ; 
	+  public static final String COLUMN_TAG   = " tag " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_RECURRENCE_UID  = " recurrence_uid " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_RECURRENCE_UID  = " recurrence_uid " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_AUTO_CREATE  = " auto_create " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_AUTO_CREATE  = " auto_create " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_AUTO_NOTIFY  = " auto_notify " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_AUTO_NOTIFY  = " auto_notify " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_ADVANCE_CREATION = " adv_creation " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_ADVANCE_CREATION = " adv_creation " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_ADVANCE_NOTIFY  = " adv_notify " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_ADVANCE_NOTIFY  = " adv_notify " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_TEMPLATE_ACCT_UID = " template_act_uid " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_TEMPLATE_ACCT_UID = " template_act_uid " ; -  public static final String COLUMN_TAG   = " tag " ; 
2
4
app/src/main/res/values-pt-rBR/strings_xml
app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter_java
11
	+ return fetchAllRecords ( null , null , null ) ; - return fetchAllRecords ( null , null ) ; 
	+  public Cursor fetchAllRecords ( String where , String[] whereArgs , String orderBy ) { -  public Cursor fetchAllRecords ( String where , String[] whereArgs ) { 
	+  return mDb.query ( mTableName , null , where , whereArgs , null , null , orderBy ) ; - return fetchAllRecords ( null , null ) ; 
	+  return mDb.query ( mTableName , null , where , whereArgs , null , null , orderBy ) ; -  return mDb.query ( mTableName , null , where , whereArgs , null , null , null ) ; 
10
		+  protected ContentValues extractBaseModelAttributes ( @NonNull ContentValues contentValues , @NonNull Model model ) { -  protected ContentValues populateBaseModelAttributes ( @NonNull ContentValues contentValues , @NonNull Model model ) { 
1
3
2
		+ package org.gnucash.android.db.adapter ; - package org.gnucash.android.db ; 
5
		+ package org.gnucash.android.db.adapter ; - package org.gnucash.android.db ; 
4
	+  Cursor cursor = fetchAllRecords ( CommodityEntry.COLUMN_MNEMONIC + " = ? " , new String[] { currencyCode } , null ) ; -  Cursor cursor = fetchAllRecords ( CommodityEntry.COLUMN_MNEMONIC + " = ? " , new String[] { currencyCode } ) ; 
7
6
9
		+  public abstract Model buildModelInstance ( @NonNull final Cursor cursor ) ; -  protected abstract Model buildModelInstance ( @NonNull final Cursor cursor ) ; 
8
app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment_java
1
		+ import android.widget.ProgressBar ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import android.widget.ProgressBar ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import org.gnucash.android.model.Money ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.Money ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import java.util.List ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import java.util.List ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
3
2
4
app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment_java
1
app/src/test/java/org/gnucash/android/test/unit/db/PriceDbAdapterTest_java
1
app/src/main/res/values-es/strings_xml
app/src/main/java/org/gnucash/android/service/SchedulerService_java
1
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
2
5
		+  int executionCount = scheduledAction.getExecutionCount () + 1 ; -  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT , scheduledAction.getExecutionCount () + 1 ) ; 
		+  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , lastRun ) ; -  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , System.currentTimeMillis () ) ; 
		+  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT , executionCount ) ; -  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , System.currentTimeMillis () ) ; 
4
		+    long transactionTime = scheduledAction.computeNextRunTime () ; -    long transactionTime ; 
app/src/main/res/layout/item_budget_amount_xml
app/src/main/res/menu/nav_drawer_menu_xml
app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper_java
1
3
	+  public static final String TAG_GNC_RECURRENCE  = " gnc:recurrence " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
	+  public static final String TAG_BUDGET_NUM_PERIODS  = " bgt:num- periods " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET    = " gnc:budget " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET_ID    = " bgt:id " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET_NAME   = " bgt:name " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET_DESCRIPTION  = " bgt:description " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET_RECURRENCE  = " bgt:recurrence " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET_SLOTS   = " bgt:slots " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
2
4
app/src/main/res/values-es-rMX/strings_xml
app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest_java
1
app/src/main/res/layout/list_item_2_lines_xml
app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser_java
1
2
app/src/main/java/org/gnucash/android/model/Budget_java
1
app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import android.widget.DatePicker ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import android.widget.DatePicker ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import android.widget.DatePicker ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
2
app/src/test/java/org/gnucash/android/test/unit/model/BudgetTest_java
1
app/src/main/java/org/gnucash/android/model/Split_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import java.sql.Timestamp ; - import org.gnucash.android.db.AccountsDbAdapter ; 
3
2
5
		+  return mValue.abs () .equals ( other.mValue.abs () ) -  return mValue.absolute () .equals ( other.mValue.absolute () ) 
4
	+  Split pair = new Split ( mValue.abs () , accountUID ) ; -  Split pair = new Split ( mValue.absolute () , accountUID ) ; 
7
6
		+  Money absAmount = amount.abs () ; -  Money absAmount = amount.absolute () ; 
9
8
app/src/main/res/values/strings_xml
app/src/main/res/layout/nav_drawer_header_xml
app/src/main/java/org/gnucash/android/ui/wizard/CurrencySelectFragment_java
1
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
app/src/main/res/values-uk-rUA/strings_xml
app/src/main/res/values-en-rGB/strings_xml
app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment_java
1
app/src/main/res/values-tr-rTR/strings_xml
app/src/main/AndroidManifest_xml
app/src/main/java/org/gnucash/android/model/Transaction_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
3
		+    absAmount = split.getValue () .abs () ; -    absAmount = split.getValue () .absolute () ; 
		+    absAmount = split.getValue () .abs () ; -    absAmount = split.getQuantity () .absolute () ; 
		+    absAmount = split.getQuantity () .abs () ; -    absAmount = split.getValue () .absolute () ; 
		+    absAmount = split.getQuantity () .abs () ; -    absAmount = split.getQuantity () .absolute () ; 
2
	+   Money amount = split.getValue () .abs () ; -   Money amount = split.getValue () .absolute () ; 
app/src/main/res/layout/activity_budgets_xml
app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest_java
1
		+ @Test ( expected = Money.CurrencyMismatchException.class ) - @Test ( expected = IllegalArgumentException.class ) 
3
		+ @Test ( expected = Money.CurrencyMismatchException.class ) - @Test ( expected = IllegalArgumentException.class ) 
2
		+ @Test ( expected = Money.CurrencyMismatchException.class ) - @Test ( expected = IllegalArgumentException.class ) 
4
		+ @Test ( expected = Money.CurrencyMismatchException.class ) - @Test ( expected = IllegalArgumentException.class ) 
app/src/main/java/org/gnucash/android/ui/account/AccountsActivity_java
1
		+  getSDWritePermission () ; -   getSDWritePermission () ; 
app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment_java
1
app/src/main/res/layout/dialog_transfer_funds_xml
app/src/org/gnucash/android/db/TransactionsDbAdapter_java
1
app/src/org/gnucash/android/db/AccountsDbAdapter_java
1
3
2
	+  long rowId = mDb.replace ( AccountEntry.TABLE_NAME , null , contentValues ) ; - rowId = mDb.insert ( AccountEntry.TABLE_NAME , null , contentValues ) ; 
		+  Log.d ( TAG , " Replace account to db " ) ; - Log.d ( TAG , " Updating existing account " ) ; 
		+  long rowId = mDb.replace ( AccountEntry.TABLE_NAME , null , contentValues ) ; - mDb.update ( AccountEntry.TABLE_NAME , contentValues , 
		+  long rowId = mDb.replace ( AccountEntry.TABLE_NAME , null , contentValues ) ; -    AccountEntry._ID + " = " + rowId , null ) ; 
app/src/org/gnucash/android/importer/GncXmlHandler_java
1
3
2
app/src/org/gnucash/android/db/SplitsDbAdapter_java
1
app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment_java
1
3
2
app/src/main/java/org/gnucash/android/ui/passcode/PassLockActivity_java
1
app/src/main/java/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity_java
1
		+    .setFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP  |  Intent.FLAG_ACTIVITY_NEW_TASK  |  Intent.FLAG_ACTIVITY_CLEAR_TASK ) -    .setFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) 
app/src/main/java/org/gnucash/android/ui/account/AccountsActivity_java
1
2
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest_java
1
app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter_java
1
3
2
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment_java
1
3
		+  setExportUriText ( null ) ; -  mTargetUriTextView.setText ( " " ) ; 
		+  mRecurrenceOptionsView.setVisibility ( View.VISIBLE ) ; -  mTargetUriTextView.setText ( " " ) ; 
		+  mRecurrenceOptionsView.setVisibility ( View.VISIBLE ) ; -  recurrenceOptionsView.setVisibility ( View.VISIBLE ) ; 
2
		+   String exportDestination = params.getExportTarget () .getDescription () ; -    + params.getExportTarget () .name () .toLowerCase () ) ; 
		+    exportDestination = exportDestination + " ( " + Uri.parse ( params.getExportLocation () ) .getHost () + " ) " ; -    + params.getExportTarget () .name () .toLowerCase () ) ; 
5
4
		+  mRecurrenceOptionsView.setVisibility ( View.GONE ) ; -  recurrenceOptionsView.setVisibility ( View.GONE ) ; 
app/src/main/java/org/gnucash/android/ui/settings/dialog/DeleteAllAccountsConfirmationDialog_java
1
app/src/main/res/values-ro-rRO/strings_xml
app/src/main/res/layout/fragment_account_detail_xml
app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest_java
1
2
app/src/main/res/layout/cardview_book_xml
app/src/main/res/values-it-rIT/strings_xml
app/src/main/res/values-sv-rSE/strings_xml
app/src/debug/java/org/gnucash/android/app/StethoUtils_java
1
app/src/main/res/values-iw-rIL/strings_xml
app/src/main/res/values/flags_xml
app/src/main/res/values-de/strings_xml
app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest_java
1
2
		+   BookUtils.loadBook ( bookUID ) ; -   GnuCashApplication.loadBook ( bookUID ) ; 
app/src/main/res/values-zh-rCN/strings_xml
app/src/main/res/values-ja-rJP/strings_xml
app/src/main/res/layout/list_item_scheduled_trxn_xml
app/src/main/res/layout/dialog_rename_book_xml
app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText_java
1
3
		+ public class CalculatorEditText extends AppCompatEditText { - public class CalculatorEditText extends EditText { 
2
app/src/main/java/org/gnucash/android/ui/util/widget/CheckableLinearLayout_java
1
app/src/main/java/org/gnucash/android/importer/ImportAsyncTask_java
1
		+ import org.gnucash.android.util.BookUtils ; - import org.gnucash.android.app.GnuCashApplication ; 
3
2
		+   BookUtils.loadBook ( mImportedBookUID ) ; -   GnuCashApplication.loadBook ( mImportedBookUID ) ; 
app/src/main/res/layout/activity_transaction_detail_xml
app/src/main/res/values-zh-rTW/strings_xml
app/src/main/res/values-sw600dp/flags_xml
app/src/main/res/layout/split_account_spinner_item_xml
app/src/main/res/values-ru/strings_xml
play_store_description_txt
1
app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity_java
1
2
	+    android.app.FragmentManager fm = getFragmentManager () ; -    android.app.FragmentManager fm = getFragmentManager () ; 
	+    if ( fm.getBackStackEntryCount () > 0 ) { -    if ( fm.getBackStackEntryCount () > 0 ) { 
		+    android.app.FragmentManager fm = getFragmentManager () ; -     fm.popBackStack () ; 
		+    android.app.FragmentManager fm = getFragmentManager () ; -     finish () ; 
		+    if ( fm.getBackStackEntryCount () > 0 ) { -     fm.popBackStack () ; 
		+    fm.popBackStack () ; -     fm.popBackStack () ; 
app/src/main/res/drawable/appwidget_button_right_xml
app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest_java
1
3
2
app/build_gradle
1
app/src/main/java/org/gnucash/android/ui/util/widget/ReselectSpinner_java
1
		+ import android.view.View ; - import android.widget.Spinner ; 
		+ import android.widget.AdapterView ; - import android.widget.Spinner ; 
		+ import org.gnucash.android.ui.export.ExportFormFragment ; - import android.widget.Spinner ; 
		+ public class ReselectSpinner extends AppCompatSpinner { - public class ReselectSpinner extends Spinner { 
2
		+    listener.onItemSelected ( this , getSelectedView () , position , getSelectedItemId () ) ; -  super.setSelection ( position ) ; 
app/src/main/res/layout/account_spinner_dropdown_item_xml
app/src/main/res/values/dimens_xml
app/src/test/java/org/gnucash/android/test/unit/export/OfxExporterTest_java
1
2
app/src/main/res/layout/account_spinner_item_xml
app/src/main/res/layout/cardview_budget_xml
app/src/main/res/values-af-rZA/strings_xml
app/src/main/res/drawable/appwidget_button_center_xml
CHANGELOG_md
1
3
2
4
	+   tools:text = " Last export: " -   tools:text = " Last export: " / > 
	+   tools:text = " Sat , 04 July " -   tools:text = " Sat , 04 July " / > 
		+   tools:text = " Sat , 04 July " -   tools:text = " Last export: " / > 
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
3
2
4
app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment_java
1
3
2
app/src/main/res/values-ar-rSA/strings_xml
app/src/main/res/values-sr-rSP/strings_xml
app/src/main/res/values-vi-rVN/strings_xml
app/src/main/res/menu/book_context_menu_xml
app/src/main/res/values-cs-rCZ/strings_xml
app/src/main/res/values-nb/strings_xml
app/src/main/res/values-ca-rES/strings_xml
app/src/main/res/layout/card_item_date_range_xml
app/src/main/res/values-fr/strings_xml
app/src/main/res/values-ko-rKR/strings_xml
app/src/main/res/values-nl-rNL/strings_xml
app/src/main/res/layout/fragment_export_form_xml
app/src/main/res/values-el-rGR/strings_xml
app/src/main/res/values-fi-rFI/strings_xml
app/src/test/java/org/gnucash/android/test/unit/export/QifExporterTest_java
1
3
2
app/src/main/java/org/gnucash/android/ui/common/FormActivity_java
1
2
		+   BookUtils.loadBook ( bookUID ) ; -   GnuCashApplication.loadBook ( bookUID ) ; 
app/src/main/res/drawable/appwidget_button_left_xml
app/src/main/res/values-no-rNO/strings_xml
app/src/main/res/xml/preference_headers_xml
app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest_java
1
2
_github/CONTRIBUTING_md
1
3
2
5
4
7
	+ < item quantity = " one " > Todas as horas < /item > - < item quantity = " one " > Hourly < /item > 
	+ < item quantity = " other " > Todas as %d horas < /item > - < item quantity = " other " > Every %d hours < /item > 
		+ < item quantity = " one " > Todas as horas < /item > - < item quantity = " other " > Every %d hours < /item > 
		+ < item quantity = " other " > Todas as %d horas < /item > - < item quantity = " one " > Hourly < /item > 
6
		+ < string name = " summary_create_backup_pref " > Criar uma cpia de segurana do livro activo < /string > - < string name = " summary_restore_backup_pref " > Restore most recent backup of active book < /string > 
		+ < string name = " summary_restore_backup_pref " > Restaurar a cpia de segurana do livro activo mais recente < /string > - < string name = " summary_create_backup_pref " > Create a backup of the active book < /string > 
		+ < string name = " summary_restore_backup_pref " > Restaurar a cpia de segurana do livro activo mais recente < /string > - < string name = " summary_restore_backup_pref " > Restore most recent backup of active book < /string > 
8
app/src/main/res/values-hu-rHU/strings_xml
app/src/main/java/org/gnucash/android/db/DatabaseSchema_java
1
	+  public static final int DATABASE_VERSION = 14 ; -  public static final int DATABASE_VERSION = 13 ; 
app/src/main/res/values-pt-rBR/strings_xml
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity_java
1
	+  new AccountBalanceTask ( mSumTextView ) .executeOnExecutor ( AsyncTask.THREAD_POOL_EXECUTOR , mAccountUID ) ; -   new AccountBalanceTask ( mSumTextView ) .executeOnExecutor ( AsyncTask.THREAD_POOL_EXECUTOR , mAccountUID ) ; 
	+  new AccountBalanceTask ( mSumTextView ) .executeOnExecutor ( AsyncTask.THREAD_POOL_EXECUTOR , mAccountUID ) ; -   new AccountBalanceTask ( mSumTextView ) .execute ( mAccountUID ) ; 
app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment_java
1
		+   String uid = mAccountsDbAdapter.getUID ( rowId ) ; -   mAccountsDbAdapter.deleteRecord ( rowId ) ; 
		+   mAccountsDbAdapter.deleteRecord ( uid ) ; -   mAccountsDbAdapter.deleteRecord ( rowId ) ; 
app/src/main/res/values-pl-rPL/strings_xml
app/src/main/res/values-es/strings_xml
app/src/main/res/values/styles_xml
app/src/main/res/layout/drawer_section_header_xml
app/src/main/res/xml/fragment_book_preferences_xml
app/src/main/res/values-in-rID/strings_xml
app/src/main/res/values-es-rMX/strings_xml
app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest_java
11
	+ < string name = " title_backup_prefs " > < /string > - < string name = " title_backup_prefs " > < /string > 
	+ < string name = " summary_create_backup_pref " > Create a backup of the active book < /string > - < string name = " title_backup_prefs " > < /string > 
	+ < string name = " summary_create_backup_pref " > Create a backup of the active book < /string > - < string name = " summary_restore_backup_pref " > < /string > 
	+ < string name = " summary_restore_backup_pref " > Restore most recent backup of active book < /string > - < string name = " summary_restore_backup_pref " > < /string > 
	+ < string name = " summary_restore_backup_pref " > Restore most recent backup of active book < /string > - < string name = " toast_install_file_manager " > < /string > 
	+ < string name = " toast_install_file_manager " > < /string > - < string name = " toast_install_file_manager " > < /string > 
	+ < string name = " nav_menu_export " > ... < /string > - < string name = " nav_menu_export " > ... < /string > 
		+ < string name = " title_backup_prefs " > < /string > - < string name = " summary_restore_backup_pref " > < /string > 
		+ < string name = " title_backup_prefs " > < /string > - < string name = " toast_install_file_manager " > < /string > 
		+ < string name = " summary_create_backup_pref " > Create a backup of the active book < /string > - < string name = " summary_create_backup_pref " > SD < /string > 
		+ < string name = " summary_create_backup_pref " > Create a backup of the active book < /string > - < string name = " toast_install_file_manager " > < /string > 
		+ < string name = " summary_create_backup_pref " > Create a backup of the active book < /string > - < string name = " nav_menu_export " > ... < /string > 
		+ < string name = " summary_restore_backup_pref " > Restore most recent backup of active book < /string > - < string name = " title_backup_prefs " > < /string > 
		+ < string name = " summary_restore_backup_pref " > Restore most recent backup of active book < /string > - < string name = " summary_create_backup_pref " > SD < /string > 
		+ < string name = " summary_restore_backup_pref " > Restore most recent backup of active book < /string > - < string name = " nav_menu_export " > ... < /string > 
		+ < string name = " toast_install_file_manager " > < /string > - < string name = " title_backup_prefs " > < /string > 
		+ < string name = " toast_install_file_manager " > < /string > - < string name = " summary_restore_backup_pref " > < /string > 
		+ < string name = " nav_menu_export " > ... < /string > - < string name = " title_backup_prefs " > < /string > 
		+ < string name = " nav_menu_export " > ... < /string > - < string name = " summary_create_backup_pref " > SD < /string > 
		+ < string name = " nav_menu_export " > ... < /string > - < string name = " summary_restore_backup_pref " > < /string > 
		+ < string name = " nav_menu_export " > ... < /string > - < string name = " toast_install_file_manager " > < /string > 
10
	+ < string name = " title_use_account_color " > < /string > - < string name = " title_use_account_color " > < /string > 
	+ < string name = " menu_order_by_size " > < /string > - < string name = " menu_order_by_size " > < /string > 
	+ < string name = " label_chart_total " > < /string > - < string name = " label_chart_total " > < /string > 
		+ < string name = " title_use_account_color " > < /string > - < string name = " menu_order_by_size " > < /string > 
		+ < string name = " title_use_account_color " > < /string > - < string name = " label_chart_total " > < /string > 
		+ < string name = " menu_order_by_size " > < /string > - < string name = " title_use_account_color " > < /string > 
		+ < string name = " menu_order_by_size " > < /string > - < string name = " label_chart_total " > < /string > 
		+ < string name = " label_chart_total " > < /string > - < string name = " title_use_account_color " > < /string > 
		+ < string name = " label_chart_total " > < /string > - < string name = " menu_order_by_size " > < /string > 
13
	+ < string name = " label_old_passcode " > < /string > - < string name = " label_old_passcode " > < /string > 
	+ < string name = " title_scheduled_exports " > < /string > - < string name = " title_scheduled_exports " > < /string > 
		+ < string name = " label_old_passcode " > < /string > - < string name = " title_scheduled_exports " > < /string > 
		+ < string name = " title_scheduled_exports " > < /string > - < string name = " label_old_passcode " > < /string > 
12
15
	+ < string name = " title_transfer_funds " > < /string > - < string name = " title_transfer_funds " > < /string > 
14
	+ < string name = " btn_wizard_next " > < /string > - < string name = " btn_wizard_next " > < /string > 
17
	+ < string name = " title_cash_flow_report " > < /string > - < string name = " title_cash_flow_report " > < /string > 
16
	+ < string name = " label_move_to " > < /string > - < string name = " label_move_to " > < /string > 
18
		+ < string name = " repeat_x_times " > for %1$d times < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " title_rename_book " > Rename Book < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " btn_rename " > Rename < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " menu_rename " > Rename < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " title_select_backup_file " > Select backup file < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " summary_select_backup_file " > Select a file for automatic backups < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " title_confirm_restore_backup " > Confirm restore from backup < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " msg_confirm_restore_backup_into_new_book " > A new book will be opened with the contents of this backup. Do you wish to proceed? < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " btn_restore " > Restore < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " title_no_backups_found " > No backups found < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " msg_no_backups_to_restore_from " > There are no existing backup files to restore from < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " label_backup_filename " > gnucash_android_backup.gnca < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " label_select_destination_after_export " > Select the destination after export is complete < /string > - < string name = " repeat_x_times " > %1$s < /string > 
		+ < string name = " label_dropbox_export_destination " > Export to \'/Apps/GnuCash Android/\' folder on Dropbox < /string > - < string name = " repeat_x_times " > %1$s < /string > 
1
3
2
5
4
7
	+ < string name = " summary_delete_all_transactions " > < /string > - < string name = " summary_delete_all_transactions " > < /string > 
	+ < string name = " section_header_transactions " > < /string > - < string name = " section_header_transactions " > < /string > 
	+ < string name = " label_recurring_transaction " > < /string > - < string name = " label_recurring_transaction " > < /string > 
		+ < string name = " summary_delete_all_transactions " > < /string > - < string name = " section_header_transactions " > < /string > 
		+ < string name = " summary_delete_all_transactions " > < /string > - < string name = " label_recurring_transaction " > < /string > 
		+ < string name = " section_header_transactions " > < /string > - < string name = " summary_delete_all_transactions " > < /string > 
		+ < string name = " section_header_transactions " > < /string > - < string name = " label_recurring_transaction " > < /string > 
		+ < string name = " label_recurring_transaction " > < /string > - < string name = " summary_delete_all_transactions " > < /string > 
		+ < string name = " label_recurring_transaction " > < /string > - < string name = " section_header_transactions " > < /string > 
6
	+ < string name = " toast_error_importing_accounts " > GnuCash < /string > - < string name = " toast_error_importing_accounts " > GnuCash < /string > 
9
	+ < string name = " account_name_opening_balances " > < /string > - < string name = " account_name_opening_balances " > < /string > 
	+ < string name = " label_imbalance " > < /string > - < string name = " label_imbalance " > < /string > 
		+ < string name = " account_name_opening_balances " > < /string > - < string name = " label_imbalance " > < /string > 
		+ < string name = " label_imbalance " > < /string > - < string name = " account_name_opening_balances " > < /string > 
8
	+ < string name = " title_scheduled_transactions " > < /string > - < string name = " title_scheduled_transactions " > < /string > 
app/src/main/java/org/gnucash/android/ui/util/ScrollingFABBehavior_java
1
	+   float ratio = ( float ) dependency.getY () / ( float ) toolbarHeight ; -    float ratio = ( float ) dependency.getY () / ( float ) toolbarHeight ; 
	+   fab.setTranslationY ( - distanceToScroll * ratio ) ; -    fab.setTranslationY ( - distanceToScroll * ratio ) ; 
	+   fab.setTranslationY ( - distanceToScroll * ratio ) ; -   } 
		+   fab.setTranslationY ( - distanceToScroll * ratio ) ; -   if ( Build.VERSION.SDK_INT > Build.VERSION_CODES.GINGERBREAD_MR1 ) { 
app/src/main/java/org/gnucash/android/ui/passcode/PasscodeLockActivity_java
1
	+   getWindow () .addFlags ( LayoutParams.FLAG_SECURE ) ; -    getWindow () .addFlags ( LayoutParams.FLAG_SECURE ) ; 
2
		+  mProgressDialog.setProgressNumberFormat ( null ) ; -   mProgressDialog.setProgressNumberFormat ( null ) ; 
		+  mProgressDialog.setProgressNumberFormat ( null ) ; -   mProgressDialog.setProgressPercentFormat ( null ) ; 
		+  mProgressDialog.setProgressPercentFormat ( null ) ; -   mProgressDialog.setProgressNumberFormat ( null ) ; 
		+  mProgressDialog.setProgressPercentFormat ( null ) ; -   mProgressDialog.setProgressPercentFormat ( null ) ; 
app/src/main/res/values/strings_xml
app/src/main/res/values-lv-rLV/strings_xml
app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest_java
1
2
app/src/main/res/values-uk-rUA/strings_xml
app/src/main/res/values-pt-rPT/strings_xml
app/src/main/java/org/gnucash/android/ui/settings/GeneralPreferenceFragment_java
1
3
2
4
README_md
1
2
app/src/main/res/values-tr-rTR/strings_xml
app/src/main/res/xml/fragment_general_preferences_xml
app/src/release/java/org/gnucash/android/app/StethoUtils_java
1
app/src/main/res/values-en-rGB/strings_xml
app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest_java
1
2
app/src/main/java/org/gnucash/android/service/ScheduledActionService_java
1
app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity_java
1
3
	+  if ( resultCode == Activity.RESULT_CANCELED ) { -  if ( resultCode == Activity.RESULT_CANCELED ) { 
2
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
app/src/main/java/org/gnucash/android/export/Exporter_java
1
2
app/src/main/java/org/gnucash/android/export/qif/QifExporter_java
1
	+      SplitEntry.TABLE_NAME + " _ " + SplitEntry.COLUMN_QUANTITY_DENOM + " AS split_quantity_denom " , -      SplitEntry.TABLE_NAME + " _ " + SplitEntry.COLUMN_QUANTITY_DENOM + " AS split_quantity_denum " , 
2
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
3
		+  private List < Integer > mByDays = Collections.emptyList () ; -  private String mByDay ; 
2
5
4
6
		+  return Collections.unmodifiableList ( mByDays ) ; -  this.mByDay = byDay ; 
		+  return Collections.unmodifiableList ( mByDays ) ; -  return mByDay ; 
		+  public void setByDays ( @NonNull List < Integer > byDays ) { -  public void setByDay ( String byDay ) { 
		+  public void setByDays ( @NonNull List < Integer > byDays ) { -  this.mByDay = byDay ; 
		+  mByDays = new ArrayList < > ( byDays ) ; -  this.mByDay = byDay ; 
app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter_java
1
3
		+  recurrence.setByDays ( stringToByDays ( byDays ) ) ; -  recurrence.setByDay ( byDay ) ; 
2
	+  String byDays = cursor.getString ( cursor.getColumnIndexOrThrow ( RecurrenceEntry.COLUMN_BYDAY ) ) ; -  String byDay = cursor.getString ( cursor.getColumnIndexOrThrow ( RecurrenceEntry.COLUMN_BYDAY ) ) ; 
5
4
		+   stmt.bindString ( 3 , byDaysToString ( recurrence.getByDays () ) ) ; -   stmt.bindString ( 3 , recurrence.getByDay () ) ; 
app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser_java
1
GnucashMobile/res/values-nl/strings_xml
app/src/main/java/org/gnucash/android/ui/report/ReportsActivity_java
1
	+    mReportStartTime = new DateTime () .dayOfMonth () .withMinimumValue () .millisOfDay () .withMinimumValue () -    mReportStartTime = new DateTime () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportStartTime = new DateTime () .dayOfMonth () .withMinimumValue () .millisOfDay () .withMinimumValue () -    mReportEndTime = new DateTime () .dayOfMonth () .withMaximumValue () .toDate () .getTime () ; 
app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter_java
1
2
app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest_java
1
app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest_java
1
2
app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment_java
1
	+   splitUidTextView.setText ( UUID.randomUUID () .toString () .replaceAll ( " - " , " " ) ) ; -   splitUidTextView.setText ( UUID.randomUUID () .toString () ) ; 
app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment_java
1
	+  Pair < Long , Long > pricePair = pricesDbAdapter.getPrice ( commodityUID , currencyUID ) ; -  Pair < Long , Long > price = pricesDbAdapter.getPrice ( commodityUID , currencyUID ) ; 
	+  if ( pricePair.first > 0 && pricePair.second > 0 ) { -  if ( price.first > 0 && price.second > 0 ) { 
	+   BigDecimal numerator = new BigDecimal ( pricePair.first ) ; -   BigDecimal numerator = new BigDecimal ( price.first ) ; 
	+   BigDecimal numerator = new BigDecimal ( pricePair.first ) ; -   BigDecimal denominator = new BigDecimal ( price.second ) ; 
	+   BigDecimal denominator = new BigDecimal ( pricePair.second ) ; -   BigDecimal numerator = new BigDecimal ( price.first ) ; 
	+   BigDecimal denominator = new BigDecimal ( pricePair.second ) ; -   BigDecimal denominator = new BigDecimal ( price.second ) ; 
	+   DecimalFormat formatter = ( DecimalFormat ) NumberFormat.getNumberInstance () ; -   DecimalFormat formatter = ( DecimalFormat ) NumberFormat.getNumberInstance () ; 
		+  Pair < Long , Long > pricePair = pricesDbAdapter.getPrice ( commodityUID , currencyUID ) ; -   DecimalFormat formatter = ( DecimalFormat ) NumberFormat.getNumberInstance () ; 
		+  Pair < Long , Long > pricePair = pricesDbAdapter.getPrice ( commodityUID , currencyUID ) ; -   mExchangeRateInput.setText ( formatter.format ( numerator.divide ( denominator , MathContext.DECIMAL32 ) ) ) ; 
		+   Price price = new Price ( commodityUID , currencyUID ) ; -   BigDecimal numerator = new BigDecimal ( price.first ) ; 
		+   Price price = new Price ( commodityUID , currencyUID ) ; -   BigDecimal denominator = new BigDecimal ( price.second ) ; 
		+   Price price = new Price ( commodityUID , currencyUID ) ; -   DecimalFormat formatter = ( DecimalFormat ) NumberFormat.getNumberInstance () ; 
		+   Price price = new Price ( commodityUID , currencyUID ) ; -   mExchangeRateInput.setText ( formatter.format ( numerator.divide ( denominator , MathContext.DECIMAL32 ) ) ) ; 
3
	+  if ( mOnTransferFundsListener != null ) -  if ( mOnTransferFundsListener != null ) { 
		+   price = new Price ( originCommodityUID , targetCommodityUID ) ; -   PricesDbAdapter pricesDbAdapter = PricesDbAdapter.getInstance () ; 
		+   price = new Price ( originCommodityUID , targetCommodityUID ) ; -   CommoditiesDbAdapter commoditiesDbAdapter = CommoditiesDbAdapter.getInstance () ; 
		+   price = new Price ( originCommodityUID , targetCommodityUID ) ; -    commoditiesDbAdapter.getCommodityUID ( mTargetCurrency.getCurrencyCode () ) ) ; 
		+   price = new Price ( originCommodityUID , targetCommodityUID ) ; -   price.setSource ( Price.SOURCE_USER ) ; 
		+   price = new Price ( originCommodityUID , targetCommodityUID ) ; -   price.reduce () ; 
		+   price = new Price ( originCommodityUID , targetCommodityUID ) ; -   pricesDbAdapter.addRecord ( price ) ; 
		+  price.setSource ( Price.SOURCE_USER ) ; -    commoditiesDbAdapter.getCommodityUID ( mTargetCurrency.getCurrencyCode () ) ) ; 
		+  price.setSource ( Price.SOURCE_USER ) ; -   price.setSource ( Price.SOURCE_USER ) ; 
		+  price.setSource ( Price.SOURCE_USER ) ; -   price.reduce () ; 
		+  price.setSource ( Price.SOURCE_USER ) ; -   pricesDbAdapter.addRecord ( price ) ; 
		+  price.reduce () ; -   price.reduce () ; 
		+  PricesDbAdapter.getInstance () .addRecord ( price ) ; -   PricesDbAdapter pricesDbAdapter = PricesDbAdapter.getInstance () ; 
		+  PricesDbAdapter.getInstance () .addRecord ( price ) ; -   CommoditiesDbAdapter commoditiesDbAdapter = CommoditiesDbAdapter.getInstance () ; 
		+  PricesDbAdapter.getInstance () .addRecord ( price ) ; -    commoditiesDbAdapter.getCommodityUID ( mTargetCurrency.getCurrencyCode () ) ) ; 
		+  PricesDbAdapter.getInstance () .addRecord ( price ) ; -   price.setSource ( Price.SOURCE_USER ) ; 
		+  PricesDbAdapter.getInstance () .addRecord ( price ) ; -   price.reduce () ; 
		+  PricesDbAdapter.getInstance () .addRecord ( price ) ; -   pricesDbAdapter.addRecord ( price ) ; 
		+  if ( mOnTransferFundsListener != null ) -   price.reduce () ; 
2
		+   BigDecimal rate ; -   BigDecimal rate ; 
app/src/main/java/org/gnucash/android/model/Price_java
1
3
2
app/src/test/java/org/gnucash/android/test/unit/model/PriceTest_java
1
app/src/org/gnucash/android/db/AccountsDbAdapter_java
1
2
app/src/main/res/layout/activity_transaction_detail_xml
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
3
2
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
	+    long transferAcctId = mTransferAccountSpinner.getSelectedItemId () ; -     long transferAcctId = mTransferAccountSpinner.getSelectedItemId () ; 
		+    if ( mUseDoubleEntry  |  |  transferAcctId < 0 ) { -    if ( mUseDoubleEntry ) { 
app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment_java
1
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity_java
1
3
2
5
4
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
app/src/main/java/org/gnucash/android/ui/account/AccountsActivity_java
1
	+  public static void importXmlFileFromIntent ( Activity context , Intent data , TaskDelegate onFinishTask ) { -  public static void importXmlFileFromIntent ( Activity context , Intent data ) { 
	+  new ImportAsyncTask ( context , onFinishTask ) .execute ( data.getData () ) ; -  new ImportAsyncTask ( context ) .execute ( data.getData () ) ; 
app/src/main/java/org/gnucash/android/db/AccountsDbAdapter_java
1
	+  public Money getAccountsBalance ( @NonNull List < String > accountUIDList , long startTimestamp , long endTimestamp ) { -  public Money getAccountsBalance ( List < String > accountUIDList , long startTimestamp , long endTimestamp ) { 
app/src/main/java/org/gnucash/android/export/Exporter_java
1
	+   super ( " Failed to generate export with parameters: " + params.toString () ) ; -   super ( " Failed to generate " + params.getExportFormat () .toString () ) ; 
	+   super ( " Failed to generate export with parameters: " + params.toString () + " - " + msg ) ; -   super ( " Failed to generate " + params.getExportFormat () .toString () ) ; 
	+   super ( " Failed to generate export with parameters: " + params.toString () + " - " + msg ) ; -   super ( " Failed to generate " + params.getExportFormat () .toString () + " - " + msg ) ; 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment_java
1
3
2
4
app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter_java
1
2
app/src/main/java/org/gnucash/android/export/qif/QifExporter_java
1
	+  BufferedReader in = new BufferedReader ( new FileReader ( src ) ) ; -  BufferedReader in = new BufferedReader ( new FileReader ( file ) ) ; 
		+  String[] pathParts = dst.getPath () .split ( " ( ? = \\.[^\\.]+ $ ) " ) ; -  String[] pathParts = file.getPath () .split ( " ( ? = \\.[^\\.]+ $ ) " ) ; 
2
	+     throw new IllegalArgumentException ( src.getPath () + " format is not correct " ) ; -     throw new IllegalArgumentException ( file.getPath () + " format is not correct " ) ; 
app/src/main/java/org/gnucash/android/export/ExportAsyncTask_java
1
app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity_java
1
2
app/src/main/res/values/strings_xml
app/src/main/res/layout/widget_4x1_xml
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
GnucashMobile/res/values-fr/strings_xml
GnucashMobile/res/values-es-rMX/strings_xml
GnucashMobile/AndroidManifest_xml
GnucashMobile/src/org/gnucash/android/ui/settings/TransactionsPreferenceFragment_java
1
	+ Preference pref = findPreference ( getString ( R.string.key_default_transaction_type ) ) ; - Preference pref = findPreference ( getString ( R.string.key_default_transaction_type ) ) ; 
	+ Preference pref = findPreference ( getString ( R.string.key_default_transaction_type ) ) ; - Preference pref = findPreference ( getString ( R.string.key_default_transaction_type ) ) ; 
		+ setLocalizedSummary ( pref , defaultTransactionType ) ; - pref.setSummary ( defaultTransactionType ) ; 
		+ setLocalizedSummary ( pref , defaultTransactionType ) ; - preference.setSummary ( newValue.toString () ) ; 
		+ setLocalizedSummary ( preference , newValue.toString () ) ; - pref.setSummary ( defaultTransactionType ) ; 
		+ setLocalizedSummary ( preference , newValue.toString () ) ; - preference.setSummary ( newValue.toString () ) ; 
		+ private void setLocalizedSummary ( Preference preference , String value ) { - pref.setSummary ( defaultTransactionType ) ; 
		+ private void setLocalizedSummary ( Preference preference , String value ) { - preference.setSummary ( newValue.toString () ) ; 
		+ String localizedLabel = value.equals ( " DEBIT " ) ? getString ( R.string.label_debit ) : getActivity () .getString ( R.string.label_credit ) ; - Preference pref = findPreference ( getString ( R.string.key_default_transaction_type ) ) ; 
		+ String localizedLabel = value.equals ( " DEBIT " ) ? getString ( R.string.label_debit ) : getActivity () .getString ( R.string.label_credit ) ; - pref.setSummary ( defaultTransactionType ) ; 
		+ String localizedLabel = value.equals ( " DEBIT " ) ? getString ( R.string.label_debit ) : getActivity () .getString ( R.string.label_credit ) ; - preference.setSummary ( newValue.toString () ) ; 
		+ pref.setSummary ( localizedLabel ) ; - pref.setSummary ( defaultTransactionType ) ; 
		+ pref.setSummary ( localizedLabel ) ; - preference.setSummary ( newValue.toString () ) ; 
GnucashMobile/res/values-el/strings_xml
GnucashMobile/res/values-es/strings_xml
GnucashMobileTest/src/org/gnucash/android/test/ui/TransactionsActivityTest_java
1
2
GnucashMobile/src/org/gnucash/android/util/OfxFormatter_java
1
		+ public static final String OFX_SGML_HEADER = " ENCODING:UTF- 8\nOFXHEADER:100\nDATA:OFXSGML\nVERSION:211\nSECURITY:NONE\nCHARSET:UTF- 8\nCOMPRESSION:NONE\nOLDFILEUID:NONE\nNEWFILEUID:NONE " ; - public static final String OFX_SGML_HEADER = " ENCODING:UTF- 8 \nOFXHEADER:100 \nDATA:OFXSGML \nVERSION:211 \nSECURITY:NONE \nCHARSET:UTF- 8 \nCOMPRESSION:NONE \nOLDFILEUID:NONE \nNEWFILEUID:NONE " ; 
2
	+ public void write ( Node node , Writer outputWriter , boolean omitXmlDeclaration ) { - public void write ( Document document , Writer outputWriter ) { 
	+ DOMSource source = new DOMSource ( node ) ; - DOMSource source = new DOMSource ( document ) ; 
GnucashMobileTest/src/org/gnucash/android/test/ui/AccountsActivityTest_java
1
3
2
4
GnucashMobile/res/values-nl/strings_xml
GnucashMobile/res/xml/fragment_transaction_preferences_xml
GnucashMobileTest/src/org/gnucash/android/test/ui/OfxExportTest_java
1
GnucashMobile/res/values-hu/strings_xml
GnucashMobile/src/org/gnucash/android/ui/accounts/ExportDialogFragment_java
1
		+ import org.gnucash.android.ui.transactions.TransactionsDeleteConfirmationDialog ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
2
		+  Fragment currentFragment = getActivity () .getSupportFragmentManager () - Fragment f = getActivity () 
		+  Fragment currentFragment = getActivity () .getSupportFragmentManager () - .getSupportFragmentManager () 
		+  Fragment currentFragment = getActivity () .getSupportFragmentManager () - .findFragmentByTag ( AccountsActivity.FRAGMENT_ACCOUNTS_LIST ) ; 
		+  Fragment currentFragment = getActivity () .getSupportFragmentManager () -  ( ( AccountsListFragment ) f ) .refreshList () ; 
		+  .findFragmentByTag ( AccountsActivity.FRAGMENT_ACCOUNTS_LIST ) ; - .findFragmentByTag ( AccountsActivity.FRAGMENT_ACCOUNTS_LIST ) ; 
		+  TransactionsDeleteConfirmationDialog alertFragment = TransactionsDeleteConfirmationDialog.newInstance ( R.string.title_confirm_delete , 0 ) ; -  trxnAdapter.close () ; 
		+  TransactionsDeleteConfirmationDialog alertFragment = TransactionsDeleteConfirmationDialog.newInstance ( R.string.title_confirm_delete , 0 ) ; - .findFragmentByTag ( AccountsActivity.FRAGMENT_ACCOUNTS_LIST ) ; 
		+  TransactionsDeleteConfirmationDialog alertFragment = TransactionsDeleteConfirmationDialog.newInstance ( R.string.title_confirm_delete , 0 ) ; -  ( ( AccountsListFragment ) f ) .refreshList () ; 
		+  alertFragment.setTargetFragment ( currentFragment , 0 ) ; -  trxnAdapter.close () ; 
		+  alertFragment.show ( getActivity () .getSupportFragmentManager () , " transactions_delete_confirmation_dialog " ) ; -  trxnAdapter.close () ; 
		+  alertFragment.show ( getActivity () .getSupportFragmentManager () , " transactions_delete_confirmation_dialog " ) ; - Fragment f = getActivity () 
		+  alertFragment.show ( getActivity () .getSupportFragmentManager () , " transactions_delete_confirmation_dialog " ) ; - .getSupportFragmentManager () 
		+  alertFragment.show ( getActivity () .getSupportFragmentManager () , " transactions_delete_confirmation_dialog " ) ; - .findFragmentByTag ( AccountsActivity.FRAGMENT_ACCOUNTS_LIST ) ; 
		+  alertFragment.show ( getActivity () .getSupportFragmentManager () , " transactions_delete_confirmation_dialog " ) ; -  ( ( AccountsListFragment ) f ) .refreshList () ; 
GnucashMobile/res/values/strings_xml
GnucashMobile/res/values-pt-rBR/strings_xml
GnucashMobile/res/values-nb/strings_xml
GnucashMobile/src/org/gnucash/android/ui/transactions/TransactionsDeleteConfirmationDialog_java
1
GnucashMobile/src/org/gnucash/android/ui/settings/GeneralPreferenceFragment_java
1
3
2
4
GnucashMobile/res/values-ru/strings_xml
GnucashMobile/res/values-de/strings_xml
GnucashMobile/res/values-it/strings_xml
GnucashMobile/src/org/gnucash/android/ui/accounts/AccountsListFragment_java
1
		+    .setTitle ( title ) .setMessage ( R.string.delete_account_confirmation_message ) -    .setTitle ( title ) .setMessage ( R.string.delete_confirmation_message ) 
GnucashMobile/res/xml/fragment_general_preferences_xml
app/src/org/gnucash/android/export/xml/GncXmlExporter_java
1
	+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_SLOT ) ; -  xmlSerializer.startTag ( null , GncXmlHelper.TAG_SLOT ) ; 
2
	+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_SLOT ) ; -  xmlSerializer.endTag ( null , GncXmlHelper.TAG_SLOT ) ; 
app/src/main/java/org/gnucash/android/util/PreferencesHelper_java
1
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
2
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
2
app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest_java
1
3
2
app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest_java
1
3
2
4
app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter_java
1
app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter_java
1
3
2
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment_java
1
app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest_java
1
3
2
5
4
6
app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity_java
1
		+  public static SharedPreferences getBookSharedPreferences ( String bookUID ) { -  public static SharedPreferences getActiveBookSharedPreferences ( Context context ) { 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
	+    long transferAcctId = mTransferAccountSpinner.getSelectedItemId () ; -     long transferAcctId = mTransferAccountSpinner.getSelectedItemId () ; 
		+    if ( mUseDoubleEntry  |  |  transferAcctId < 0 ) { -    if ( mUseDoubleEntry ) { 
app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment_java
1
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity_java
1
3
2
5
4
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
app/src/main/java/org/gnucash/android/ui/account/AccountsActivity_java
1
	+  public static void importXmlFileFromIntent ( Activity context , Intent data , TaskDelegate onFinishTask ) { -  public static void importXmlFileFromIntent ( Activity context , Intent data ) { 
	+  new ImportAsyncTask ( context , onFinishTask ) .execute ( data.getData () ) ; -  new ImportAsyncTask ( context ) .execute ( data.getData () ) ; 
app/src/main/java/org/gnucash/android/db/AccountsDbAdapter_java
1
	+  public Money getAccountsBalance ( @NonNull List < String > accountUIDList , long startTimestamp , long endTimestamp ) { -  public Money getAccountsBalance ( List < String > accountUIDList , long startTimestamp , long endTimestamp ) { 
app/src/main/java/org/gnucash/android/export/Exporter_java
1
	+   super ( " Failed to generate export with parameters: " + params.toString () ) ; -   super ( " Failed to generate " + params.getExportFormat () .toString () ) ; 
	+   super ( " Failed to generate export with parameters: " + params.toString () + " - " + msg ) ; -   super ( " Failed to generate " + params.getExportFormat () .toString () ) ; 
	+   super ( " Failed to generate export with parameters: " + params.toString () + " - " + msg ) ; -   super ( " Failed to generate " + params.getExportFormat () .toString () + " - " + msg ) ; 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment_java
1
3
2
4
app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter_java
1
2
app/src/org/gnucash/android/ui/transaction/TransactionsActivity_java
1
3
2
	+  boolean isFavoriteAccount = GnuCashApplication.getAccountsDbAdapter () .isFavoriteAccount ( mAccountsDbAdapter.getAccountID ( mAccountUID ) ) ; -  boolean isFavoriteAccount = accountsDbAdapter.isFavoriteAccount ( mAccountsDbAdapter.getAccountID ( mAccountUID ) ) ; 
		+  boolean isFavoriteAccount = GnuCashApplication.getAccountsDbAdapter () .isFavoriteAccount ( mAccountsDbAdapter.getAccountID ( mAccountUID ) ) ; -  accountsDbAdapter.close () ; 
4
app/src/org/gnucash/android/receivers/AccountCreator_java
1
2
		+ GnuCashApplication.getAccountsDbAdapter () .addAccount ( account ) ; - accountsAdapter.addAccount ( account ) ; 
app/src/org/gnucash/android/ui/widget/WidgetConfigurationActivity_java
1
2
app/src/org/gnucash/android/app/GnuCashApplication_java
1
2
app/src/org/gnucash/android/ui/account/AccountFormFragment_java
1
3
2
5
4
	+ static public AccountFormFragment newInstance ( @NonNull AccountsDbAdapter dbAdapter ) { - static public AccountFormFragment newInstance ( AccountsDbAdapter dbAdapter ) { 
7
6
9
8
app/src/org/gnucash/android/model/Transaction_java
1
2
		+   AccountsDbAdapter acctDbAdapter = GnuCashApplication.getAccountsDbAdapter () ; -   acctDbAdapter.close () ; 
app/src/org/gnucash/android/ui/transaction/dialog/SplitEditorDialogFragment_java
1
2
app/src/org/gnucash/android/ui/account/AccountsListFragment_java
1
3
2
app/src/org/gnucash/android/db/SplitsDbAdapter_java
1
3
2
	+  public SplitsDbAdapter ( @NonNull SQLiteDatabase db ) { -  public SplitsDbAdapter ( SQLiteDatabase db ) { 
app/src/org/gnucash/android/db/DatabaseCursorLoader_java
1
		+ c.close () ; - c.close () ; 
app/src/org/gnucash/android/db/MigrationHelper_java
1
app/src/org/gnucash/android/export/xml/GncXmlExporter_java
1
2
app/src/org/gnucash/android/db/DatabaseAdapter_java
1
	+  protected final SQLiteDatabase mDb ; - protected SQLiteDatabase mDb ; 
	+  public DatabaseAdapter ( @NonNull SQLiteDatabase db ) { -  public DatabaseAdapter ( SQLiteDatabase db ) { 
3
	+ protected Cursor fetchRecord ( @NonNull String tableName , long rowId ) { - protected Cursor fetchRecord ( String tableName , long rowId ) { 
2
5
4
	+ protected Cursor fetchAllRecords ( @NonNull String tableName ) { - protected Cursor fetchAllRecords ( String tableName ) { 
7
6
	+  public String getCurrencyCode ( @NonNull String accountUID ) { -  public String getCurrencyCode ( String accountUID ) { 
9
	+  public long getAccountID ( @Nullable String accountUID ) { -  public long getAccountID ( String accountUID ) { 
8
app/src/org/gnucash/android/receivers/TransactionRecorder_java
1
2
		+ GnuCashApplication.getTransactionDbAdapter () .addTransaction ( transaction ) ; - transactionsDbAdapter.addTransaction ( transaction ) ; 
		+ GnuCashApplication.getTransactionDbAdapter () .addTransaction ( transaction ) ; - transactionsDbAdapter.close () ; 
app/src/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
3
2
5
4
6
app/src/org/gnucash/android/ui/account/AccountsActivity_java
1
		+    GnuCashApplication.getAccountsDbAdapter () .updateAllAccounts ( DatabaseSchema.AccountEntry.COLUMN_CURRENCY , currencyCode ) ; -    accountsDbAdapter.updateAllAccounts ( DatabaseSchema.AccountEntry.COLUMN_CURRENCY , currencyCode ) ; 
app/src/org/gnucash/android/importer/GncXmlImporter_java
1
app/src/org/gnucash/android/db/TransactionsDbAdapter_java
1
3
2
	+  public TransactionsDbAdapter ( @NonNull SQLiteDatabase db , @NonNull SplitsDbAdapter splitsDbAdapter ) { -  public TransactionsDbAdapter ( SQLiteDatabase db ) { 
		+  private final SplitsDbAdapter mSplitsDbAdapter ; -  SplitsDbAdapter mSplitsDbAdapter ; 
		+  public TransactionsDbAdapter ( @NonNull SQLiteDatabase db , @NonNull SplitsDbAdapter splitsDbAdapter ) { -  SplitsDbAdapter mSplitsDbAdapter ; 
		+  mSplitsDbAdapter = splitsDbAdapter ; -  SplitsDbAdapter mSplitsDbAdapter ; 
		+  public SplitsDbAdapter getSplitDbAdapter () { -  SplitsDbAdapter mSplitsDbAdapter ; 
		+  public SplitsDbAdapter getSplitDbAdapter () { -  super.close () ; 
		+  public SplitsDbAdapter getSplitDbAdapter () { -  mSplitsDbAdapter.close () ; 
5
	+  AlarmManager alarmManager = ( AlarmManager ) GnuCashApplication.getAppContext () .getSystemService ( Context.ALARM_SERVICE ) ; -  AlarmManager alarmManager = ( AlarmManager ) mContext.getSystemService ( Context.ALARM_SERVICE ) ; 
		+  PendingIntent recurringPendingIntent = PendingIntent.getBroadcast ( GnuCashApplication.getAppContext () , -  PendingIntent recurringPendingIntent = PendingIntent.getBroadcast ( mContext , 
		+  AlarmManager alarmManager = ( AlarmManager ) GnuCashApplication.getAppContext () .getSystemService ( Context.ALARM_SERVICE ) ; -  PendingIntent recurringPendingIntent = PendingIntent.getBroadcast ( mContext , 
4
	+  public Cursor fetchTransactionsStartingWith ( @NonNull String prefix ) { -  public Cursor fetchTransactionsStartingWith ( String prefix ) { 
		+  public Cursor fetchTransactionsStartingWith ( @NonNull String prefix ) { -  String selection = stringBuffer.toString () ; 
		+  public Cursor fetchTransactionsStartingWith ( @NonNull String prefix ) { -    selection , 
		+    TransactionEntry.COLUMN_DESCRIPTION + " LIKE ' " + prefix + " %' " , -    .append ( " LIKE ' " ) .append ( prefix ) .append ( " %' " ) ; 
		+    TransactionEntry.COLUMN_DESCRIPTION + " LIKE ' " + prefix + " %' " , -    selection , 
app/src/org/gnucash/android/export/ofx/OfxExporter_java
1
app/src/org/gnucash/android/db/AccountsDbAdapter_java
1
	+ private final TransactionsDbAdapter mTransactionsAdapter ; - private TransactionsDbAdapter mTransactionsAdapter ; 
	+  public AccountsDbAdapter ( @NonNull SQLiteDatabase db , @NonNull TransactionsDbAdapter transactionsDbAdapter ) { -  public AccountsDbAdapter ( SQLiteDatabase db ) { 
3
	+   if ( parentUID != null ) { -   if ( parentUID != null ) { 
		+   } else { -   else { 
2
	+  public String createAccountHierarchy ( @NonNull String fullName , @NonNull AccountType accountType ) { -  public String createAccountHierarchy ( String fullName , AccountType accountType ) { 
5
	+  Money splitSum = mTransactionsAdapter.getSplitDbAdapter () .computeSplitBalance ( accountsList , currencyCode , hasDebitNormalBalance ) ; -  Money splitSum = splitsDbAdapter.computeSplitBalance ( accountsList , currencyCode , hasDebitNormalBalance ) ; 
		+  Money splitSum = mTransactionsAdapter.getSplitDbAdapter () .computeSplitBalance ( accountsList , currencyCode , hasDebitNormalBalance ) ; -  splitsDbAdapter.close () ; 
4
	+  Money splitSum = mTransactionsAdapter.getSplitDbAdapter () .computeSplitBalance ( getAccountUID ( accountId ) ) ; -  Money splitSum = splitsDbAdapter.computeSplitBalance ( getAccountUID ( accountId ) ) ; 
		+  Money splitSum = mTransactionsAdapter.getSplitDbAdapter () .computeSplitBalance ( getAccountUID ( accountId ) ) ; -  splitsDbAdapter.close () ; 
6
	+  return fetchAccounts ( " ( " + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " IS NULL OR " -  condition.append ( AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " IS NULL " ) ; 
	+  return fetchAccounts ( " ( " + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " IS NULL OR " -  condition.append ( AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " = " ) ; 
		+  return fetchAccounts ( " ( " + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " IS NULL OR " -  condition.append ( " OR " ) ; 
		+  return fetchAccounts ( " ( " + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " IS NULL OR " -  condition.append ( " ) " ) ; 
		+  return fetchAccounts ( " ( " + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " IS NULL OR " -  condition.append ( " AND " ) ; 
		+  return fetchAccounts ( " ( " + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " IS NULL OR " -  return fetchAccounts ( condition.toString () ) ; 
		+    + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " = ' " + getGnuCashRootAccountUID () + " ' ) AND " -  condition.append ( AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " IS NULL " ) ; 
		+    + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " = ' " + getGnuCashRootAccountUID () + " ' ) AND " -  condition.append ( " OR " ) ; 
		+    + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " = ' " + getGnuCashRootAccountUID () + " ' ) AND " -  condition.append ( AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " = " ) ; 
		+    + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " = ' " + getGnuCashRootAccountUID () + " ' ) AND " -  condition.append ( " ' " ) .append ( getGnuCashRootAccountUID () ) .append ( " ' " ) ; 
		+    + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " = ' " + getGnuCashRootAccountUID () + " ' ) AND " -  condition.append ( " AND " ) ; 
		+    + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " = ' " + getGnuCashRootAccountUID () + " ' ) AND " -  condition.append ( AccountEntry.COLUMN_TYPE + " != " + " ' " ) .append ( AccountType.ROOT.name () ) .append ( " ' " ) ; 
		+    + AccountEntry.COLUMN_TYPE + " != ' " + AccountType.ROOT.name () + " ' " ) ; -  condition.append ( AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " IS NULL " ) ; 
		+    + AccountEntry.COLUMN_TYPE + " != ' " + AccountType.ROOT.name () + " ' " ) ; -  condition.append ( " OR " ) ; 
		+    + AccountEntry.COLUMN_TYPE + " != ' " + AccountType.ROOT.name () + " ' " ) ; -  condition.append ( AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " = " ) ; 
		+    + AccountEntry.COLUMN_TYPE + " != ' " + AccountType.ROOT.name () + " ' " ) ; -  condition.append ( " ' " ) .append ( getGnuCashRootAccountUID () ) .append ( " ' " ) ; 
app/src/org/gnucash/android/importer/GncXmlHandler_java
1
3
2
app/src/org/gnucash/android/export/Exporter_java
1
app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment_java
1
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
3
	+  if ( pendingIntent != null ) -  if ( pendingIntent != null ) 
		+  if ( pendingIntent != null ) -    pendingIntent ) ; 
		+  alarmManager.setInexactRepeating ( AlarmManager.ELAPSED_REALTIME_WAKEUP , -  alarmManager.setInexactRepeating ( AlarmManager.RTC_WAKEUP , 
		+  alarmManager.setInexactRepeating ( AlarmManager.ELAPSED_REALTIME_WAKEUP , -    AlarmManager.INTERVAL_HALF_DAY , 
		+    SystemClock.elapsedRealtime () + AlarmManager.INTERVAL_FIFTEEN_MINUTES , -  alarmManager.setInexactRepeating ( AlarmManager.RTC_WAKEUP , 
		+    SystemClock.elapsedRealtime () + AlarmManager.INTERVAL_FIFTEEN_MINUTES , -    System.currentTimeMillis () + AlarmManager.INTERVAL_DAY , 
		+    SystemClock.elapsedRealtime () + AlarmManager.INTERVAL_FIFTEEN_MINUTES , -    AlarmManager.INTERVAL_HALF_DAY , 
		+    AlarmManager.INTERVAL_HALF_DAY , pendingIntent ) ; -  alarmManager.setInexactRepeating ( AlarmManager.RTC_WAKEUP , 
		+    AlarmManager.INTERVAL_HALF_DAY , pendingIntent ) ; -    AlarmManager.INTERVAL_HALF_DAY , 
		+    AlarmManager.INTERVAL_HALF_DAY , pendingIntent ) ; -    pendingIntent ) ; 
2
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
2
app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter_java
1
3
2
5
		+  SplitsDbAdapter splitsDbAdapter = mTransactionsAdapter.getSplitDbAdapter () ; -  SplitsDbAdapter splitsDbAdapter = SplitsDbAdapter.getInstance () ; 
4
		+  SplitsDbAdapter splitsDbAdapter = mTransactionsAdapter.getSplitDbAdapter () ; -  SplitsDbAdapter splitsDbAdapter = SplitsDbAdapter.getInstance () ; 
6
		+  SplitsDbAdapter splitsDbAdapter = mTransactionsAdapter.getSplitDbAdapter () ; -  SplitsDbAdapter splitsDbAdapter = SplitsDbAdapter.getInstance () ; 
app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment_java
1
	+ new ExportAsyncTask ( getActivity () , GnuCashApplication.getActiveDb () ) .execute ( exportParameters ) ; - new ExportAsyncTask ( getActivity () ) .execute ( exportParameters ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest_java
1
		+  scheduledAction.setTotalPlannedExecutionCount ( 4 ) ; -  scheduledAction.setTotalFrequency ( 4 ) ; 
3
	+ public class ScheduledActionService extends IntentService { - public class SchedulerService extends IntentService { 
	+  public static final String LOG_TAG = " ScheduledActionService " ; -  public static final String LOG_TAG = " SchedulerService " ; 
		+ public class ScheduledActionService extends IntentService { -  public SchedulerService () { 
		+  public static final String LOG_TAG = " ScheduledActionService " ; -  public SchedulerService () { 
		+  public ScheduledActionService () { -  public SchedulerService () { 
2
	+  public void setTotalPlannedExecutionCount ( int plannedExecutions ) { -  public int getTotalFrequency () { 
		+  public int getTotalPlannedExecutionCount () { -  public int getTotalFrequency () { 
		+  public void setTotalPlannedExecutionCount ( int plannedExecutions ) { -  public void setTotalFrequency ( int occurencesCount ) { 
		+  this.mTotalFrequency = plannedExecutions ; -  this.mTotalFrequency = occurencesCount ; 
5
		+    int totalPlannedExecutions = scheduledAction.getTotalPlannedExecutionCount () ; -    int totalPlannedExecutions = scheduledAction.getTotalFrequency () ; 
4
		+   int totalPlannedExecutions = scheduledAction.getTotalPlannedExecutionCount () ; -   int totalPlannedExecutions = scheduledAction.getTotalFrequency () ; 
app/src/main/java/org/gnucash/android/service/SchedulerService_java
1
3
	+  private void executeScheduledEvent ( ScheduledAction scheduledAction , SQLiteDatabase db ) { -  private void executeScheduledEvent ( ScheduledAction scheduledAction ) { 
	+    Transaction trxnTemplate = transactionsDbAdapter.getRecord ( actionUID ) ; -    Transaction trxnTemplate = transactionsDbAdapter.getRecord ( eventUID ) ; 
		+    executeScheduledEvent ( scheduledAction , db ) ; -    executeScheduledEvent ( scheduledAction ) ; 
		+  private void executeScheduledEvent ( ScheduledAction scheduledAction , SQLiteDatabase db ) { -    executeScheduledEvent ( scheduledAction ) ; 
		+    String actionUID = scheduledAction.getActionUID () ; -    String eventUID = scheduledAction.getActionUID () ; 
		+    TransactionsDbAdapter transactionsDbAdapter = new TransactionsDbAdapter ( db , new SplitsDbAdapter ( db ) ) ; -    TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance () ; 
2
5
	+  new ScheduledActionDbAdapter ( db , new RecurrenceDbAdapter ( db ) ) .updateRecord ( scheduledAction.getUID () , contentValues ) ; -  ScheduledActionDbAdapter.getInstance () .updateRecord ( scheduledAction.getUID () , contentValues ) ; 
4
	+    new ExportAsyncTask ( GnuCashApplication.getAppContext () , db ) .execute ( params ) .get () ; -    new ExportAsyncTask ( GnuCashApplication.getAppContext () ) .execute ( params ) .get () ; 
app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter_java
1
		+  RecurrenceDbAdapter recurrenceDbAdapter = new RecurrenceDbAdapter ( mDb ) ; -  RecurrenceDbAdapter recurrenceDbAdapter = RecurrenceDbAdapter.getInstance () ; 
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
2
app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest_java
1
app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest_java
1
2
app/src/main/java/org/gnucash/android/export/ExportAsyncTask_java
1
	+  public ExportAsyncTask ( Context context , SQLiteDatabase db ) { -  public ExportAsyncTask ( Context context ) { 
2
		+  TransactionsDbAdapter transactionsDbAdapter = new TransactionsDbAdapter ( mDb , new SplitsDbAdapter ( mDb ) ) ; -  TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance () ; 
		+   openingBalances = new AccountsDbAdapter ( mDb , transactionsDbAdapter ) .getAllOpeningBalanceTransactions () ; -   openingBalances = AccountsDbAdapter.getInstance () .getAllOpeningBalanceTransactions () ; 
		+   openingBalances = new AccountsDbAdapter ( mDb , transactionsDbAdapter ) .getAllOpeningBalanceTransactions () ; -  TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance () ; 
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
		+    mScheduledAction.setTotalPlannedExecutionCount ( Integer.parseInt ( characterString ) ) ; -    mScheduledAction.setTotalFrequency ( Integer.parseInt ( characterString ) ) ; 
2
	+     |  |  ( scheduledAction.getTotalPlannedExecutionCount () > 0 && scheduledAction.getExecutionCount () >= scheduledAction.getTotalPlannedExecutionCount () ) ) { -     |  |  ( scheduledAction.getTotalFrequency () > 0 && scheduledAction.getExecutionCount () >= scheduledAction.getTotalFrequency () ) ) { 
app/src/main/java/org/gnucash/android/export/ofx/OfxExporter_java
1
3
2
		+  stmt.bindString ( 9 , Integer.toString ( schedxAction.getTotalPlannedExecutionCount () ) ) ; -  stmt.bindString ( 9 , Integer.toString ( schedxAction.getTotalFrequency () ) ) ; 
app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter_java
1
		+  String transactionCurrency = getAttribute ( TransactionEntry.TABLE_NAME , transxUID , TransactionEntry.COLUMN_CURRENCY ) ; -  String transactionCurrency = TransactionsDbAdapter.getInstance () .getAttribute ( transxUID , TransactionEntry.COLUMN_CURRENCY ) ; 
app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment_java
1
	+  String dstAccountUID = AccountsDbAdapter.getInstance () .getUID ( dstAccountId ) ; -  String dstAccountUID = AccountsDbAdapter.getInstance () .getUID ( dstAccountId ) ; 
	+  if ( ! trxnAdapter.getAccountCurrencyCode ( dstAccountUID ) .equals ( trxnAdapter.getAccountCurrencyCode ( mOriginAccountUID ) ) ) { -  if ( ! trxnAdapter.getAccountCurrencyCode ( dstAccountId ) .equals ( trxnAdapter.getAccountCurrencyCode ( mOriginAccountUID ) ) ) { 
		+  if ( ! trxnAdapter.getAccountCurrencyCode ( dstAccountUID ) .equals ( trxnAdapter.getAccountCurrencyCode ( mOriginAccountUID ) ) ) { -  String dstAccountUID = AccountsDbAdapter.getInstance () .getUID ( dstAccountId ) ; 
app/build_gradle
10
		+  ScheduledActionService.processScheduledActions ( actions , mDb ) ; -  SchedulerService.processScheduledActions ( actions , mDb ) ; 
1
		+ import org.gnucash.android.service.ScheduledActionService ; - import org.gnucash.android.service.SchedulerService ; 
3
		+  ScheduledActionService.processScheduledActions ( actions , mDb ) ; -  SchedulerService.processScheduledActions ( actions , mDb ) ; 
2
		+  ScheduledActionService.processScheduledActions ( actions , mDb ) ; -  SchedulerService.processScheduledActions ( actions , mDb ) ; 
5
		+  ScheduledActionService.processScheduledActions ( actions , mDb ) ; -  SchedulerService.processScheduledActions ( actions , mDb ) ; 
4
		+  scheduledAction.setTotalPlannedExecutionCount ( 4 ) ; -  scheduledAction.setTotalFrequency ( 4 ) ; 
7
		+  ScheduledActionService.processScheduledActions ( actions , mDb ) ; -  SchedulerService.processScheduledActions ( actions , mDb ) ; 
6
		+  ScheduledActionService.processScheduledActions ( actions , mDb ) ; -  SchedulerService.processScheduledActions ( actions , mDb ) ; 
9
		+  ScheduledActionService.processScheduledActions ( actions , mDb ) ; -  SchedulerService.processScheduledActions ( actions , mDb ) ; 
8
		+  ScheduledActionService.processScheduledActions ( actions , mDb ) ; -  SchedulerService.processScheduledActions ( actions , mDb ) ; 
app/src/main/res/values-ca-rES/strings_xml
app/src/main/res/values-de/strings_xml
app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest_java
1
app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter_java
1
	+  Cursor cursor = mDb.query ( tableName , -  Cursor cursor = mDb.query ( mTableName , 
app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter_java
1
app/src/main/AndroidManifest_xml
app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter_java
1
	+  return new AccountsDbAdapter ( mDb ) .getAccountsBalance ( accountUIDs , periodStart , periodEnd ) ; -  return AccountsDbAdapter.getInstance () .getAccountsBalance ( accountUIDs , periodStart , periodEnd ) ; 
app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter_java
1
3
2
4
app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest_java
1
		+ assertThat ( 0 ) .isEqualTo ( mTransactionsDbAdapter.getTransactionsCount ( TRANSACTIONS_ACCOUNT_UID ) ) ; - assertThat ( 0 ) .isEqualTo ( mTransactionsDbAdapter.getTransactionsCount ( id ) ) ; 
app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment_java
1
	+   int periods = mBudget.getRecurrence () .getNumberOfPeriods ( budgetPeriods ) ; -   int periods = mBudget.getRecurrence () .getNumberOfPeriods ( budgetPeriods ) ; 
3
2
5
		+  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , System.currentTimeMillis () ) ; -  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , lastRun ) ; 
		+  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , System.currentTimeMillis () ) ; -  scheduledAction.setLastRun ( lastRun ) ; 
4
app/src/main/java/org/gnucash/android/ui/account/AccountsActivity_java
1
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
GnucashMobile/res/values-fr/strings_xml
GnucashMobile/res/values-es-rMX/strings_xml
GnucashMobile/AndroidManifest_xml
GnucashMobile/src/org/gnucash/android/ui/accounts/NewAccountDialogFragment_java
1
GnucashMobile/src/org/gnucash/android/ui/settings/TransactionsPreferenceFragment_java
1
	+ Preference pref = findPreference ( getString ( R.string.key_default_transaction_type ) ) ; - Preference pref = findPreference ( getString ( R.string.key_default_transaction_type ) ) ; 
	+ Preference pref = findPreference ( getString ( R.string.key_default_transaction_type ) ) ; - Preference pref = findPreference ( getString ( R.string.key_default_transaction_type ) ) ; 
		+ setLocalizedSummary ( pref , defaultTransactionType ) ; - pref.setSummary ( defaultTransactionType ) ; 
		+ setLocalizedSummary ( pref , defaultTransactionType ) ; - preference.setSummary ( newValue.toString () ) ; 
		+ setLocalizedSummary ( preference , newValue.toString () ) ; - pref.setSummary ( defaultTransactionType ) ; 
		+ setLocalizedSummary ( preference , newValue.toString () ) ; - preference.setSummary ( newValue.toString () ) ; 
		+ private void setLocalizedSummary ( Preference preference , String value ) { - pref.setSummary ( defaultTransactionType ) ; 
		+ private void setLocalizedSummary ( Preference preference , String value ) { - preference.setSummary ( newValue.toString () ) ; 
		+ String localizedLabel = value.equals ( " DEBIT " ) ? getString ( R.string.label_debit ) : getActivity () .getString ( R.string.label_credit ) ; - Preference pref = findPreference ( getString ( R.string.key_default_transaction_type ) ) ; 
		+ String localizedLabel = value.equals ( " DEBIT " ) ? getString ( R.string.label_debit ) : getActivity () .getString ( R.string.label_credit ) ; - pref.setSummary ( defaultTransactionType ) ; 
		+ String localizedLabel = value.equals ( " DEBIT " ) ? getString ( R.string.label_debit ) : getActivity () .getString ( R.string.label_credit ) ; - preference.setSummary ( newValue.toString () ) ; 
		+ pref.setSummary ( localizedLabel ) ; - pref.setSummary ( defaultTransactionType ) ; 
		+ pref.setSummary ( localizedLabel ) ; - preference.setSummary ( newValue.toString () ) ; 
GnucashMobile/res/values-nl/strings_xml
GnucashMobile/res/values-el/strings_xml
GnucashMobile/res/values-es/strings_xml
GnucashMobileTest/src/org/gnucash/android/test/ui/TransactionsActivityTest_java
1
2
GnucashMobileTest/src/org/gnucash/android/test/ui/AccountsActivityTest_java
1
3
2
4
GnucashMobile/src/org/gnucash/android/db/AccountsDbAdapter_java
1
	+ public String getCurrencyCode ( long id ) { - public String getCurrency ( long id ) { 
GnucashMobile/res/xml/fragment_transaction_preferences_xml
GnucashMobileTest/src/org/gnucash/android/test/ui/OfxExportTest_java
1
GnucashMobile/src/org/gnucash/android/ui/transactions/NewTransactionFragment_java
1
		+  mSaveMenuItem.setEnabled ( valid ) ; - mSaveMenuItem.setEnabled ( valid ) ; 
GnucashMobile/src/org/gnucash/android/ui/accounts/ExportDialogFragment_java
1
		+ import org.gnucash.android.ui.transactions.TransactionsDeleteConfirmationDialog ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
2
		+  Fragment currentFragment = getActivity () .getSupportFragmentManager () - Fragment f = getActivity () 
		+  Fragment currentFragment = getActivity () .getSupportFragmentManager () - .getSupportFragmentManager () 
		+  Fragment currentFragment = getActivity () .getSupportFragmentManager () - .findFragmentByTag ( AccountsActivity.FRAGMENT_ACCOUNTS_LIST ) ; 
		+  Fragment currentFragment = getActivity () .getSupportFragmentManager () -  ( ( AccountsListFragment ) f ) .refreshList () ; 
		+  .findFragmentByTag ( AccountsActivity.FRAGMENT_ACCOUNTS_LIST ) ; - .findFragmentByTag ( AccountsActivity.FRAGMENT_ACCOUNTS_LIST ) ; 
		+  TransactionsDeleteConfirmationDialog alertFragment = TransactionsDeleteConfirmationDialog.newInstance ( R.string.title_confirm_delete , 0 ) ; -  trxnAdapter.close () ; 
		+  TransactionsDeleteConfirmationDialog alertFragment = TransactionsDeleteConfirmationDialog.newInstance ( R.string.title_confirm_delete , 0 ) ; - .findFragmentByTag ( AccountsActivity.FRAGMENT_ACCOUNTS_LIST ) ; 
		+  TransactionsDeleteConfirmationDialog alertFragment = TransactionsDeleteConfirmationDialog.newInstance ( R.string.title_confirm_delete , 0 ) ; -  ( ( AccountsListFragment ) f ) .refreshList () ; 
		+  alertFragment.setTargetFragment ( currentFragment , 0 ) ; -  trxnAdapter.close () ; 
		+  alertFragment.show ( getActivity () .getSupportFragmentManager () , " transactions_delete_confirmation_dialog " ) ; -  trxnAdapter.close () ; 
		+  alertFragment.show ( getActivity () .getSupportFragmentManager () , " transactions_delete_confirmation_dialog " ) ; - Fragment f = getActivity () 
		+  alertFragment.show ( getActivity () .getSupportFragmentManager () , " transactions_delete_confirmation_dialog " ) ; - .getSupportFragmentManager () 
		+  alertFragment.show ( getActivity () .getSupportFragmentManager () , " transactions_delete_confirmation_dialog " ) ; - .findFragmentByTag ( AccountsActivity.FRAGMENT_ACCOUNTS_LIST ) ; 
		+  alertFragment.show ( getActivity () .getSupportFragmentManager () , " transactions_delete_confirmation_dialog " ) ; -  ( ( AccountsListFragment ) f ) .refreshList () ; 
GnucashMobile/res/values/strings_xml
GnucashMobile/res/values-pt-rBR/strings_xml
GnucashMobile/res/values-nb/strings_xml
GnucashMobile/src/org/gnucash/android/ui/transactions/TransactionsDeleteConfirmationDialog_java
1
GnucashMobile/src/org/gnucash/android/ui/settings/GeneralPreferenceFragment_java
1
3
2
4
GnucashMobile/res/values-ru/strings_xml
GnucashMobile/res/values-de/strings_xml
GnucashMobile/src/org/gnucash/android/ui/accounts/AccountsActivity_java
1
		+  Currency.getInstance ( locale ) .getCurrencyCode () ) ; -  Currency.getInstance ( Locale.getDefault () ) .getCurrencyCode () ) ; 
GnucashMobile/src/org/gnucash/android/ui/accounts/AccountsListFragment_java
1
		+    .setTitle ( title ) .setMessage ( R.string.delete_account_confirmation_message ) -    .setTitle ( title ) .setMessage ( R.string.delete_confirmation_message ) 
GnucashMobile/res/values-it/strings_xml
CHANGELOG_md
1
GnucashMobile/res/xml/fragment_general_preferences_xml
app/src/main/res/values-pt-rBR/strings_xml
app/src/main/res/values-vi-rVN/strings_xml
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
app/src/main/res/values-sr-rSP/strings_xml
app/src/main/java/org/gnucash/android/export/ofx/OfxExporter_java
1
2
app/src/main/java/org/gnucash/android/model/Commodity_java
1
app/src/main/res/values-pl-rPL/strings_xml
app/src/main/java/org/gnucash/android/export/Exporter_java
1
3
2
5
4
7
	+   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () , bookName ) ; -   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; 
	+  public static String getExportFolderPath ( String bookUID ) { -  public static String getExportFolderPath () { 
		+   String bookName = BooksDbAdapter.getInstance () .getAttribute ( mBookUID , DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME ) ; -   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; 
		+  String path = BASE_FOLDER_PATH + " / " + bookUID + " /exports/ " ; -   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; 
6
	+  return inputName.replaceAll ( " [^a- zA- Z0- 9- _\\.] " , " _ " ) ; -    + " _gnucash_export " + format.getExtension () ; 
	+  public static String buildExportFilename ( ExportFormat format , String bookName ) { -  public static String buildExportFilename ( ExportFormat format ) { 
	+    + " _gnucash_export_ " + sanitizeFilename ( bookName ) + format.getExtension () ; -    + " _gnucash_export " + format.getExtension () ; 
		+  public static String sanitizeFilename ( String inputName ) { -  public static String buildExportFilename ( ExportFormat format ) { 
		+  public static String sanitizeFilename ( String inputName ) { -    + " _gnucash_export " + format.getExtension () ; 
		+  public static String buildExportFilename ( ExportFormat format , String bookName ) { -    + " _gnucash_export " + format.getExtension () ; 
8
	+  public static String getBackupFolderPath ( String bookUID ) { -  public static String getBackupFolderPath () { 
app/src/main/res/values-es/strings_xml
app/src/main/res/values-zh-rTW/strings_xml
app/src/main/res/values-ro-rRO/strings_xml
app/src/main/res/values-cs-rCZ/strings_xml
app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter_java
1
3
	+   FileOutputStream fileOutputStream = new FileOutputStream ( getBackupFilePath ( bookUID ) ) ; -   FileOutputStream fileOutputStream = new FileOutputStream ( getBackupFilePath () ) ; 
2
4
	+  private static String getBackupFilePath ( String bookUID ) { -  private static String getBackupFilePath () { 
	+  return Exporter.getBackupFolderPath ( book.getUID () ) + buildExportFilename ( ExportFormat.XML , book.getDisplayName () ) + " .zip " ; -  return Exporter.getBackupFolderPath () + buildExportFilename ( ExportFormat.XML ) + " .zip " ; 
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
		+  DateTime localDate = new DateTime ( mPeriodStart.getTime () ) ; -  LocalDateTime localDate = new LocalDateTime ( mPeriodStart.getTime () ) ; 
		+  DateTime localDate = new DateTime ( mPeriodStart.getTime () ) ; -  mPeriodEnd = new Timestamp ( endDate.toDate () .getTime () ) ; 
		+  DateTime endDate ; -  LocalDateTime endDate ; 
		+    endDate = localDate.plusDays ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
		+    endDate = localDate.plusWeeks ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
		+   default: -   default: 
		+    endDate = localDate.plusMonths ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
		+    endDate = localDate.plusYears ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest_java
1
3
	+  assertThat ( Commodity.DEFAULT_COMMODITY ) .isEqualTo ( Commodity.USD ) ; -  assertThat ( Commodity.DEFAULT_COMMODITY ) .isEqualTo ( expectedDefaultCommodity ) ; 
	+  System.out.println ( " Default currency is now: " + Commodity.DEFAULT_COMMODITY ) ; -  System.out.println ( " Default currency is now: " + expectedCode ) ; 
		+  assertThat ( GnuCashApplication.getDefaultCurrencyCode () ) .isEqualTo ( " USD " ) ; -  assertThat ( GnuCashApplication.getDefaultCurrencyCode () ) .isEqualTo ( expectedCode ) ; 
		+  assertThat ( GnuCashApplication.getDefaultCurrencyCode () ) .isEqualTo ( " USD " ) ; -  assertThat ( Commodity.DEFAULT_COMMODITY ) .isEqualTo ( expectedDefaultCommodity ) ; 
		+  assertThat ( Commodity.DEFAULT_COMMODITY ) .isEqualTo ( Commodity.USD ) ; -  assertThat ( GnuCashApplication.getDefaultCurrencyCode () ) .isEqualTo ( expectedCode ) ; 
2
		+  public void importingXml_shouldSetDefaultCurrencyFromXml () { -  public void importingXml_shouldSetDefaultCurrency () { 
app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest_java
1
app/src/main/res/values-es-rMX/strings_xml
app/src/main/res/values-fr/strings_xml
app/src/main/java/org/gnucash/android/service/ScheduledActionService_java
1
2
app/src/main/java/org/gnucash/android/export/ExportAsyncTask_java
1
	+    mExporter = new QifExporter ( mExportParams , mDb ) ; -    mExporter = new QifExporter ( mExportParams ) ; 
	+    mExporter = new QifExporter ( mExportParams , mDb ) ; -    mExporter = new OfxExporter ( mExportParams ) ; 
	+    mExporter = new QifExporter ( mExportParams , mDb ) ; -    mExporter = new GncXmlExporter ( mExportParams ) ; 
	+    mExporter = new OfxExporter ( mExportParams , mDb ) ; -    mExporter = new QifExporter ( mExportParams ) ; 
	+    mExporter = new OfxExporter ( mExportParams , mDb ) ; -    mExporter = new OfxExporter ( mExportParams ) ; 
	+    mExporter = new OfxExporter ( mExportParams , mDb ) ; -    mExporter = new GncXmlExporter ( mExportParams ) ; 
	+    mExporter = new GncXmlExporter ( mExportParams , mDb ) ; -    mExporter = new QifExporter ( mExportParams ) ; 
	+    mExporter = new GncXmlExporter ( mExportParams , mDb ) ; -    mExporter = new OfxExporter ( mExportParams ) ; 
	+    mExporter = new GncXmlExporter ( mExportParams , mDb ) ; -    mExporter = new GncXmlExporter ( mExportParams ) ; 
2
	+  new File ( Exporter.getExportFolderPath ( mExporter.mBookUID ) ) ; -  new File ( Exporter.getExportFolderPath () ) ; 
	+   String dst = Exporter.getExportFolderPath ( mExporter.mBookUID ) + stripPathPart ( src ) ; -   String dst = Exporter.getExportFolderPath () + stripPathPart ( src ) ; 
app/src/main/res/values-ar-rSA/strings_xml
app/src/main/res/values-sv-rSE/strings_xml
app/src/main/res/values-ko-rKR/strings_xml
app/src/main/res/values-nl-rNL/strings_xml
app/src/main/res/values-iw-rIL/strings_xml
app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest_java
1
	+ File folder = new File ( Exporter.getExportFolderPath ( BooksDbAdapter.getInstance () .getActiveBookUID () ) ) ; - File folder = new File ( Exporter.getExportFolderPath () ) ; 
app/src/main/res/values-el-rGR/strings_xml
app/src/main/res/values-fi-rFI/strings_xml
app/src/main/res/values-ru/strings_xml
app/src/main/res/values-lv-rLV/strings_xml
app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment_java
1
3
2
	+ File[] backupFiles = new File ( Exporter.getBackupFolderPath ( bookUID ) ) .listFiles () ; - File[] backupFiles = new File ( Exporter.getBackupFolderPath () ) .listFiles () ; 
app/src/main/res/values-nb/strings_xml
app/src/main/res/values-uk-rUA/strings_xml
app/src/main/res/values-ca-rES/strings_xml
app/src/main/res/values-de/strings_xml
app/src/main/res/values-no-rNO/strings_xml
app/src/main/res/values-pt-rPT/strings_xml
app/src/main/res/values-ja-rJP/strings_xml
app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter_java
1
2
	+    throw new RuntimeException ( " There is no active book in the app. This should NEVER happen , fix your bugs ! " ) ; -    throw new RuntimeException ( " There is no active book in the app. This should NEVER happen ! " ) ; 
app/src/main/res/values-tr-rTR/strings_xml
app/src/main/res/values-af-rZA/strings_xml
app/src/main/res/values-zh-rCN/strings_xml
app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity_java
1
app/src/main/res/values-en-rGB/strings_xml
app/src/main/res/values-hu-rHU/strings_xml
app/src/main/java/org/gnucash/android/export/qif/QifExporter_java
1
		+  LOG_TAG = " OfxExporter " ; -  LOG_TAG = " QifExporter " ; 
		+  LOG_TAG = " OfxExporter " ; -  LOG_TAG = " QifExporter " ; 
app/src/main/res/values-it-rIT/strings_xml
app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity_java
1
2
app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment_java
1
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
		+  if ( BuildConfig.DEBUG && ! isRoboUnitTest () ) -  if ( BuildConfig.DEBUG ) 
2
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
2
app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest_java
1
app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment_java
1
	+   int periods = mBudget.getRecurrence () .getNumberOfPeriods ( budgetPeriods ) ; -   int periods = mBudget.getRecurrence () .getNumberOfPeriods ( budgetPeriods ) ; 
app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest_java
1
2
app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest_java
1
app/src/main/java/org/gnucash/android/model/ScheduledAction_java
1
3
2
app/src/main/java/org/gnucash/android/service/SchedulerService_java
1
3
2
4
		+  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , System.currentTimeMillis () ) ; -  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , lastRun ) ; 
		+  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , System.currentTimeMillis () ) ; -  scheduledAction.setLastRun ( lastRun ) ; 
app/src/main/java/org/gnucash/android/ui/passcode/PassLockActivity_java
1
2
app/src/androidTest/java/org/gnucash/android/test/ui/CalculatorEditTextTest_java
1
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity_java
1
	+   ( ( TextView ) view ) .setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , 0 , 0 ) ; -   ( ( TextView ) view ) .setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , 0 , 0 ) ; 
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
	+   if ( bytesCopied >= src.length () ) { -   if ( bytesCopied >= src.length () ) 
		+  Log.d ( LOG_TAG , String.format ( Locale.US , " Moving %s from %s to %s " , -    src.delete () ; 
		+    src.getName () , src.getParent () , dst.getParent () ) ) ; -    src.delete () ; 
		+   if ( bytesCopied >= src.length () ) { -    src.delete () ; 
		+    boolean result = src.delete () ; -    src.delete () ; 
		+    String msg = result ? " Deleted src file: " : " Could not delete src: " ; -    src.delete () ; 
		+    Log.d ( LOG_TAG , msg + src.getPath () ) ; -    src.delete () ; 
3
	+    File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /backups/ " + src.getName () ) ; -    File dst = new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " + src.getName () ) ; 
2
	+    File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /exports/ " + src.getName () ) ; -    File dst = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " + src.getName () ) ; 
5
4
	+  new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /backups/ " ) .mkdirs () ; -  new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) .mkdirs () ; 
	+  new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /backups/ " ) .mkdirs () ; -  new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) .mkdirs () ; 
	+  new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /exports/ " ) .mkdirs () ; -  new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) .mkdirs () ; 
	+  new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /exports/ " ) .mkdirs () ; -  new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) .mkdirs () ; 
app/src/main/java/org/gnucash/android/db/BookDbHelper_java
1
	+  File newBasePath = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID ) ; -  File newBasePath = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID ) ; 
	+  File newBasePath = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID ) ; -  File src = new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) ; 
	+  File src = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /backups/ " ) ; -  File src = new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) ; 
	+  File src = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /backups/ " ) ; -  src = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) ; 
	+  File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; -  File newBasePath = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID ) ; 
	+  File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; -  File src = new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) ; 
	+  File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; -  File dst = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; 
	+  File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; -  src = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) ; 
	+  File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; -  dst = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; 
	+  src = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /exports/ " ) ; -  src = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) ; 
	+  dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; -  File newBasePath = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID ) ; 
	+  dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; -  src = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) ; 
	+  dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; -  dst = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; 
		+  File newBasePath = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID ) ; -  src = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) ; 
		+  dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; -  File src = new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) ; 
app/src/main/java/org/gnucash/android/export/Exporter_java
1
	+  public static final String LEGACY_BASE_FOLDER_PATH = Environment.getExternalStorageDirectory () + " / " + BuildConfig.APPLICATION_ID ; -  public static final String BASE_FOLDER_PATH = Environment.getExternalStorageDirectory () + " / " + BuildConfig.APPLICATION_ID ; 
	+  public static final String BASE_FOLDER_PATH = GnuCashApplication.getAppContext () .getExternalFilesDir ( null ) .getAbsolutePath () ; -  public static final String BASE_FOLDER_PATH = Environment.getExternalStorageDirectory () + " / " + BuildConfig.APPLICATION_ID ; 
app/src/main/java/org/gnucash/android/db/DatabaseSchema_java
1
	+  public static final int DATABASE_VERSION = 14 ; -  public static final int DATABASE_VERSION = 13 ; 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
3
		+  intent.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , ( ArrayList < Split > ) extractSplitsFromView () ) ; -    splitStrings.add ( split.toCsv () ) ; 
		+  intent.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , ( ArrayList < Split > ) extractSplitsFromView () ) ; -   intent.putStringArrayListExtra ( UxArgument.SPLIT_LIST , splitStrings ) ; 
2
5
4
7
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   List < String > splits = data.getStringArrayListExtra ( UxArgument.SPLIT_LIST ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -    splitList.add ( Split.parseSplit ( splitCsv ) ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   List < String > removedSplits = data.getStringArrayListExtra ( UxArgument.REMOVED_SPLITS ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   setSplitList ( splitList , removedSplits ) ; 
6
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest_java
1
app/src/main/java/org/gnucash/android/model/Split_java
1
	+ onView ( withId ( R.id.input_transaction_name ) ) .perform ( clearText () , typeText ( trnName ) ) ; - onView ( withId ( R.id.input_transaction_name ) ) .perform ( clearText () , typeText ( " Pasta " ) ) ; 
app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText_java
1
		+  String text = evaluate () ; -  evaluate () ; 
app/src/main/java/org/gnucash/android/model/Transaction_java
1
	+  Money imbalance = getImbalance () ; -  Money imbalance = getImbalance () ; 
	+   Split split = new Split ( imbalance.negate () , mCurrencyCode ) ; -   Split split = new Split ( imbalance.negate () , 
		+  public Split createAutoBalanceSplit () { -  public Split getAutoBalanceSplit () { 
		+   Split split = new Split ( imbalance.negate () , mCurrencyCode ) ; -    currency.getCurrencyCode () ) ; 
2
	+   if ( ! split.getQuantity () .getCurrency () .getCurrencyCode () .equals ( mCurrencyCode ) ) { -   if ( ! split.getValue () .getCurrency () .getCurrencyCode () .equals ( mCurrencyCode ) ) { 
app/src/main/java/org/gnucash/android/ui/common/UxArgument_java
1
3
		+  setQuantity ( new Money ( amount ) ) ; -  setQuantity ( amount ) ; 
2
	+ public class Split extends BaseModel implements Parcelable { - public class Split extends BaseModel { 
5
4
6
app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest_java
1
app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest_java
1
		+  .doesNotContain ( " non- existent " ) -  .doesNotContain ( " random " ) 
		+  .doesNotContain ( " non- existent " ) -  .doesNotContain ( " account- something " ) ; 
		+  .doesNotContain ( " pre- existent " ) ; -  .doesNotContain ( " account- something " ) ; 
3
2
app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter_java
1
	+   Split imbalanceSplit = transaction.createAutoBalanceSplit () ; -   Split imbalanceSplit = transaction.getAutoBalanceSplit () ; 
		+  Log.d ( LOG_TAG , " Adding transaction to the db via " + updateMethod.name () ) ; -  Log.d ( LOG_TAG , " Replacing transaction in db " ) ; 
app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest_java
11
		+ childAccount.setParentUID ( TRANSACTIONS_ACCOUNT_UID ) ; - childAccount.setParentUID ( DUMMY_ACCOUNT_UID ) ; 
		+ mAccountsDbAdapter.updateRecord ( TRANSACTIONS_ACCOUNT_UID , contentValues ) ; - mAccountsDbAdapter.updateRecord ( DUMMY_ACCOUNT_UID , contentValues ) ; 
10
	+  List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; -  List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
13
	+ List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; - List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
	+ assertThat ( TRANSACTION_NAME ) .isEqualTo ( transaction.getDescription () ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
	+ Date trxDate = new Date ( transaction.getTimeMillis () ) ; - Date trxDate = new Date ( trx.getTimeMillis () ) ; 
		+ Transaction transaction = transactions.get ( 0 ) ; - Transaction trx = transactions.get ( 0 ) ; 
		+ Split baseSplit = transaction.getSplits ( TRANSACTIONS_ACCOUNT_UID ) .get ( 0 ) ; - Transaction trx = transactions.get ( 0 ) ; 
		+ Money expectedAmount = new Money ( TRANSACTION_AMOUNT , CURRENCY_CODE ) ; - Date trxDate = new Date ( trx.getTimeMillis () ) ; 
		+ assertThat ( baseSplit.getValue () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( baseSplit.getQuantity () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( baseSplit.getType () ) .isEqualTo ( TransactionType.DEBIT ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ Split transferSplit = transaction.getSplits ( TRANSFER_ACCOUNT_UID ) .get ( 0 ) ; - Transaction trx = transactions.get ( 0 ) ; 
		+ assertThat ( transferSplit.getValue () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( transferSplit.getQuantity () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( transferSplit.getType () ) .isEqualTo ( TransactionType.CREDIT ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
12
	+ List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; - List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
	+ assertThat ( trx.getBalance ( TRANSACTIONS_ACCOUNT_UID ) .isNegative () ) .isTrue () ; - assertThat ( trx.getBalance ( DUMMY_ACCOUNT_UID ) .isNegative () ) .isTrue () ; 
15
	+ assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ) .hasSize ( 0 ) ; - assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ) .hasSize ( 0 ) ; 
14
		+ long id = mAccountsDbAdapter.getID ( TRANSACTIONS_ACCOUNT_UID ) ; - long id = mAccountsDbAdapter.getID ( DUMMY_ACCOUNT_UID ) ; 
17
	+ assertThat ( mAccountsDbAdapter.getAccountBalance ( TRANSACTIONS_ACCOUNT_UID ) ) .isEqualTo ( Money.createZeroInstance ( CURRENCY_CODE ) ) ; - assertThat ( mAccountsDbAdapter.getAccountBalance ( DUMMY_ACCOUNT_UID ) ) .isEqualTo ( Money.createZeroInstance ( CURRENCY_CODE ) ) ; 
16
	+ onView ( withSpinnerText ( TRANSACTIONS_ACCOUNT_NAME ) ) .perform ( click () ) ; - onView ( withSpinnerText ( DUMMY_ACCOUNT_NAME ) ) .perform ( click () ) ; 
19
18
	+ assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ) .hasSize ( 1 ) ; - assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ) .hasSize ( 1 ) ; 
	+ List < Transaction > dummyAccountTrns = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; - List < Transaction > dummyAccountTrns = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
1
3
	+ mBaseAccount = new Account ( TRANSACTIONS_ACCOUNT_NAME , COMMODITY ) ; - mBaseAccount = new Account ( DUMMY_ACCOUNT_NAME , COMMODITY ) ; 
2
	+ private static final String TRANSACTIONS_ACCOUNT_UID = " transactions- account " ; - private static final String DUMMY_ACCOUNT_UID = " transactions- account " ; 
	+ private static final String TRANSACTIONS_ACCOUNT_NAME = " Transactions Account " ; - private static final String DUMMY_ACCOUNT_NAME = " Transactions Account " ; 
		+ private static final String TRANSACTIONS_ACCOUNT_UID = " transactions- account " ; - private static final String DUMMY_ACCOUNT_NAME = " Transactions Account " ; 
		+ private static final String TRANSACTIONS_ACCOUNT_NAME = " Transactions Account " ; - private static final String DUMMY_ACCOUNT_UID = " transactions- account " ; 
5
		+ intent.putExtra ( UxArgument.SELECTED_ACCOUNT_UID , TRANSACTIONS_ACCOUNT_UID ) ; - intent.putExtra ( UxArgument.SELECTED_ACCOUNT_UID , DUMMY_ACCOUNT_UID ) ; 
4
	+ Split split = new Split ( new Money ( TRANSACTION_AMOUNT , CURRENCY_CODE ) , TRANSACTIONS_ACCOUNT_UID ) ; - Split split = new Split ( new Money ( TRANSACTION_AMOUNT , CURRENCY_CODE ) , DUMMY_ACCOUNT_UID ) ; 
7
		+ int beforeCount = mTransactionsDbAdapter.getTransactionsCount ( TRANSACTIONS_ACCOUNT_UID ) ; - int beforeCount = mTransactionsDbAdapter.getTransactionsCount ( DUMMY_ACCOUNT_UID ) ; 
6
		+  return mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) .size () ; -  return mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) .size () ; 
9
		+ Money balance = transaction.getBalance ( TRANSACTIONS_ACCOUNT_UID ) ; - Money balance = transaction.getBalance ( DUMMY_ACCOUNT_UID ) ; 
8
		+ int afterCount = mTransactionsDbAdapter.getTransactionsCount ( TRANSACTIONS_ACCOUNT_UID ) ; - int afterCount = mTransactionsDbAdapter.getTransactionsCount ( DUMMY_ACCOUNT_UID ) ; 
app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter_java
1
3
		+ assertThat ( editedTransaction.getSplits () ) .hasSize ( 2 ) ; - assertThat ( editedTransaction.getSplits () ) .isEqualTo ( mTransaction.getSplits () ) ; 
		+ assertThat ( split.isEquivalentTo ( editedSplit ) ) .isTrue () ; - assertThat ( editedTransaction.getSplits () ) .isEqualTo ( mTransaction.getSplits () ) ; 
		+ assertThat ( split.isEquivalentTo ( editedSplit ) ) .isTrue () ; - assertThat ( editedTransaction.getSplits () ) .isEqualTo ( mTransaction.getSplits () ) ; 
2
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
		+    Split imbSplit = mTransaction.createAutoBalanceSplit () ; -    Split imbSplit = mTransaction.getAutoBalanceSplit () ; 
2
app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment_java
1
3
2
		+  List < Split > splitList = getArguments () .getParcelableArrayList ( UxArgument.SPLIT_LIST ) ; -  List < String > splitStrings = getArguments () .getStringArrayList ( UxArgument.SPLIT_LIST ) ; 
		+  List < Split > splitList = getArguments () .getParcelableArrayList ( UxArgument.SPLIT_LIST ) ; -    splitList.add ( Split.parseSplit ( splitString ) ) ; 
5
		+  private ArrayList < Split > extractSplitsFromView () { -  private List < Split > extractSplitsFromView () { 
		+  ArrayList < Split > splitList = new ArrayList < > () ; -  List < Split > splitList = new ArrayList < > () ; 
4
		+  data.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , extractSplitsFromView () ) ; -   splitStrings.add ( split.toCsv () ) ; 
		+  data.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , extractSplitsFromView () ) ; -  data.putStringArrayListExtra ( UxArgument.SPLIT_LIST , splitStrings ) ; 
		+  data.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , extractSplitsFromView () ) ; -  data.putStringArrayListExtra ( UxArgument.REMOVED_SPLITS , mRemovedSplitUIDs ) ; 
app/src/main/java/org/gnucash/android/model/ScheduledAction_java
1
		+   mRecurrence.setPeriodEnd ( new Timestamp ( mEndDate ) ) ; -   mRecurrence.setPeriodStart ( new Timestamp ( mEndDate ) ) ; 
app/src/main/java/org/gnucash/android/export/ExportAsyncTask_java
1
	+  if ( mContext instanceof Activity ) { -   if ( mContext instanceof Activity ) { 
	+   if ( mProgressDialog != null && mProgressDialog.isShowing () ) -    if ( mProgressDialog != null && mProgressDialog.isShowing () ) 
		+   if ( mProgressDialog != null && mProgressDialog.isShowing () ) -    mProgressDialog.dismiss () ; 
		+    mProgressDialog.dismiss () ; -    mProgressDialog.dismiss () ; 
app/src/main/java/org/gnucash/android/util/PreferencesHelper_java
1
app/src/main/java/org/gnucash/android/export/qif/QifExporter_java
1
		+ import org.gnucash.android.util.PreferencesHelper ; - import android.preference.PreferenceManager ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import android.preference.PreferenceManager ; 
3
		+   String lastExportTimeStamp = TimestampHelper.getUtcStringForTimestamp ( mExportParams.getExportStartTime () ) ; -   String lastExportTimeStamp = mExportParams.getExportStartTime () .toString () ; 
2
4
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/main/java/org/gnucash/android/export/Exporter_java
1
app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/main/java/org/gnucash/android/importer/GncXmlImporter_java
1
		+ import org.gnucash.android.util.PreferencesHelper ; - import android.preference.PreferenceManager ; 
		+ import org.gnucash.android.util.PreferencesHelper ; - import org.gnucash.android.app.GnuCashApplication ; 
		+ import org.gnucash.android.util.PreferencesHelper ; - import org.gnucash.android.export.Exporter ; 
3
2
app/src/main/java/org/gnucash/android/db/PricesDbAdapter_java
1
		+ import org.gnucash.android.util.TimestampHelper ; - import android.content.ContentValues ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import android.util.Log ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import java.sql.Timestamp ; 
3
		+  price.setDate ( TimestampHelper.getTimestampForUtcString ( dateString ) ) ; -  price.setDate ( Timestamp.valueOf ( dateString ) ) ; 
2
		+  mReplaceStatement.bindString ( 4 , TimestampHelper.getUtcStringForTimestamp ( price.getDate () ) ) ; -  mReplaceStatement.bindString ( 4 , price.getDate () .toString () ) ; 
app/src/main/java/org/gnucash/android/model/BaseModel_java
1
2
app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter_java
1
3
	+   long scheduleStartTime = TimestampHelper.getTimestampForUtcString ( createdTimestamp ) .getTime () ; -   long scheduleStartTime = Timestamp.valueOf ( createdTimestamp ) .getTime () ; 
2
		+    Timestamp timeEntered = TimestampHelper.getTimestampForUtcString ( cursor.getString ( cursor.getColumnIndexOrThrow ( " trans_date_posted " ) ) ) ; -    Timestamp timeEntered = Timestamp.valueOf ( cursor.getString ( cursor.getColumnIndexOrThrow ( " trans_date_posted " ) ) ) ; 
4
	+    String strDate = GncXmlHelper.formatDate ( TimestampHelper.getTimestampForUtcString ( cursor.getString ( cursor.getColumnIndexOrThrow ( DatabaseSchema.PriceEntry.COLUMN_DATE ) ) ) .getTime () ) ; -    String strDate = GncXmlHelper.formatDate ( Timestamp.valueOf ( cursor.getString ( cursor.getColumnIndexOrThrow ( DatabaseSchema.PriceEntry.COLUMN_DATE ) ) ) .getTime () ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
		+ import org.gnucash.android.util.TimestampHelper ; - import java.sql.Timestamp ; 
2
		+  contentValues.put ( CommonColumns.COLUMN_CREATED_AT , TimestampHelper.getUtcStringForTimestamp ( model.getCreatedTimestamp () ) ) ; -  contentValues.put ( CommonColumns.COLUMN_CREATED_AT , model.getCreatedTimestamp () .toString () ) ; 
app/src/main/java/org/gnucash/android/db/SplitsDbAdapter_java
1
		+ import org.gnucash.android.util.TimestampHelper ; - import org.gnucash.android.model.AccountType ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import java.sql.Timestamp ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import java.util.Currency ; 
3
		+  mReplaceStatement.bindString ( 8 , TimestampHelper.getUtcStringForTimestamp ( split.getCreatedTimestamp () ) ) ; -  mReplaceStatement.bindString ( 8 , split.getCreatedTimestamp () .toString () ) ; 
2
app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest_java
1
3
		+ package org.gnucash.android.test.unit.testutil ; - package org.gnucash.android.test.unit.util ; 
2
		+ package org.gnucash.android.test.unit.testutil ; - package org.gnucash.android.test.unit.util ; 
4
		+ package org.gnucash.android.test.unit.testutil ; - package org.gnucash.android.test.unit.util ; 
app/src/test/java/org/gnucash/android/test/unit/export/BackupTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/test/java/org/gnucash/android/test/unit/model/SplitTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import java.util.Currency ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import java.util.Currency ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import java.util.Currency ; 
app/src/main/java/org/gnucash/android/export/ofx/OfxExporter_java
1
3
2
app/src/main/java/org/gnucash/android/util/TimestampHelper_java
1
app/src/main/java/org/gnucash/android/export/ExportParams_java
1
		+ import org.gnucash.android.util.TimestampHelper ; - import android.preference.PreferenceManager ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import org.gnucash.android.BuildConfig ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import org.gnucash.android.R ; 
		+ import org.gnucash.android.util.TimestampHelper ; - import org.gnucash.android.app.GnuCashApplication ; 
2
app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter_java
1
3
		+  Timestamp timestamp = TimestampHelper.getTimestampForNow () ; -    timestamp = Timestamp.valueOf ( timeString ) ; 
		+    timestamp = TimestampHelper.getTimestampForUtcString ( timeString ) ; -    timestamp = Timestamp.valueOf ( timeString ) ; 
2
		+  mReplaceStatement.bindString ( 8 , TimestampHelper.getUtcStringForTimestamp ( transaction.getCreatedTimestamp () ) ) ; -  mReplaceStatement.bindString ( 8 , transaction.getCreatedTimestamp () .toString () ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest_java
1
app/src/main/java/org/gnucash/android/db/AccountsDbAdapter_java
1
3
		+    new String[] { TimestampHelper.getUtcStringForTimestamp ( lastExportTimeStamp ) } , -    new String[] { lastExportTimeStamp.toString () } , 
2
		+  mReplaceStatement.bindString ( 10 , TimestampHelper.getUtcStringForTimestamp ( account.getCreatedTimestamp () ) ) ; -  mReplaceStatement.bindString ( 10 , account.getCreatedTimestamp () .toString () ) ; 
app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest_java
1
app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter_java
1
2
		+  mReplaceStatement.bindString ( 9 , TimestampHelper.getUtcStringForTimestamp ( schedxAction.getCreatedTimestamp () ) ) ; -  mReplaceStatement.bindString ( 9 , schedxAction.getCreatedTimestamp () .toString () ) ; 
app/src/main/java/org/gnucash/android/db/DatabaseSchema_java
1
	+  public static final int DATABASE_VERSION = 12 ; -  public static final int DATABASE_VERSION = 11 ; 
app/src/test/java/org/gnucash/android/test/unit/model/AccountTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest_java
1
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.GnucashTestRunner ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowCrashlytics ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.GnucashTestRunner ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowCrashlytics ; 
		+ import org.gnucash.android.test.unit.testutil.ShadowUserVoice ; - import org.gnucash.android.test.unit.util.ShadowUserVoice ; 
app/src/main/java/org/gnucash/android/ui/report/ReportsActivity_java
1
		+   BaseReportFragment reportFragment = ( BaseReportFragment ) fragment ; -  BaseReportFragment reportFragment = ( BaseReportFragment ) fragment ; 
app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity_java
1
		+  mWizardModel = createWizardModel ( savedInstanceState ) ; -   mWizardModel.load ( savedInstanceState.getBundle ( " model " ) ) ; 
2
app/src/main/java/org/gnucash/android/util/AmountParser_java
1
app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment_java
1
		+ import org.gnucash.android.util.AmountParser ; - import org.gnucash.android.db.adapter.DatabaseAdapter ; 
3
	+    amount = AmountParser.parse ( mConvertedAmountInput.getText () .toString () ) ; -    amount = parseAmount ( mConvertedAmountInput.getText () .toString () ) ; 
2
	+    rate = AmountParser.parse ( mExchangeRateInput.getText () .toString () ) ; -    rate = parseAmount ( mExchangeRateInput.getText () .toString () ) ; 
4
app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment_java
1
3
2
		+  private boolean handleMenuRenameBook ( String bookName , final String bookUID ) { -   nameEditText.setText ( bookName ) ; 
		+  private boolean handleMenuRenameBook ( String bookName , final String bookUID ) { -    .setView ( nameEditText ) 
		+     EditText bookTitle = ( EditText ) ( ( AlertDialog ) dialog ) .findViewById ( R.id.input_book_title ) ; -   nameEditText.setText ( bookName ) ; 
		+     EditText bookTitle = ( EditText ) ( ( AlertDialog ) dialog ) .findViewById ( R.id.input_book_title ) ; -    .setView ( nameEditText ) 
		+        bookTitle.getText () .toString () .trim () ) ; -        nameEditText.getText () .toString () ) ; 
app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText_java
1
3
		+ public class CalculatorEditText extends AppCompatEditText { - public class CalculatorEditText extends EditText { 
2
app/src/main/res/layout/dialog_rename_book_xml
app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest_java
1
3
2
	+  private static final String ACCOUNTS_CURRENCY_CODE = " USD " ; -  private static final String DUMMY_ACCOUNT_CURRENCY_CODE = " USD " ; 
	+  private final Commodity ACCOUNTS_CURRENCY = Commodity.getInstance ( ACCOUNTS_CURRENCY_CODE ) ; -  private final Commodity DUMMY_ACCOUNT_CURRENCY = Commodity.getInstance ( DUMMY_ACCOUNT_CURRENCY_CODE ) ; 
	+  private static final String SIMPLE_ACCOUNT_NAME = " Simple account " ; -  private static final String DUMMY_ACCOUNT_CURRENCY_CODE = " USD " ; 
	+  private static final String SIMPLE_ACCOUNT_NAME = " Simple account " ; -  private static final String DUMMY_ACCOUNT_NAME = " Dummy account " ; 
	+  private static final String SIMPLE_ACCOUNT_NAME = " Simple account " ; -  private static final String DUMMY_ACCOUNT_UID = " dummy- account " ; 
	+  private static final String SIMPLE_ACCOUNT_UID = " simple- account " ; -  private static final String DUMMY_ACCOUNT_NAME = " Dummy account " ; 
	+  private static final String SIMPLE_ACCOUNT_UID = " simple- account " ; -  private static final String DUMMY_ACCOUNT_UID = " dummy- account " ; 
	+  private static final String ROOT_ACCOUNT_NAME = " Root account " ; -  private static final String DUMMY_ACCOUNT_CURRENCY_CODE = " USD " ; 
	+  private static final String ROOT_ACCOUNT_NAME = " Root account " ; -  private static final String DUMMY_ACCOUNT_NAME = " Dummy account " ; 
	+  private static final String ROOT_ACCOUNT_NAME = " Root account " ; -  private static final String DUMMY_ACCOUNT_UID = " dummy- account " ; 
	+  private static final String ROOT_ACCOUNT_UID = " root- account " ; -  private static final String DUMMY_ACCOUNT_NAME = " Dummy account " ; 
	+  private static final String ROOT_ACCOUNT_UID = " root- account " ; -  private static final String DUMMY_ACCOUNT_UID = " dummy- account " ; 
	+  private static final String PARENT_ACCOUNT_NAME = " Parent account " ; -  private static final String DUMMY_ACCOUNT_NAME = " Dummy account " ; 
	+  private static final String PARENT_ACCOUNT_NAME = " Parent account " ; -  private static final String DUMMY_ACCOUNT_UID = " dummy- account " ; 
	+  private static final String PARENT_ACCOUNT_UID = " parent- account " ; -  private static final String DUMMY_ACCOUNT_NAME = " Dummy account " ; 
	+  private static final String PARENT_ACCOUNT_UID = " parent- account " ; -  private static final String DUMMY_ACCOUNT_UID = " dummy- account " ; 
	+  private static final String CHILD_ACCOUNT_UID = " child- account " ; -  private static final String DUMMY_ACCOUNT_NAME = " Dummy account " ; 
	+  private static final String CHILD_ACCOUNT_UID = " child- account " ; -  private static final String DUMMY_ACCOUNT_UID = " dummy- account " ; 
	+  private static final String CHILD_ACCOUNT_NAME = " Child account " ; -  private static final String DUMMY_ACCOUNT_CURRENCY_CODE = " USD " ; 
	+  private static final String CHILD_ACCOUNT_NAME = " Child account " ; -  private static final String DUMMY_ACCOUNT_NAME = " Dummy account " ; 
	+  private static final String CHILD_ACCOUNT_NAME = " Child account " ; -  private static final String DUMMY_ACCOUNT_UID = " dummy- account " ; 
		+  private static final String SIMPLE_ACCOUNT_NAME = " Simple account " ; -  private final Commodity DUMMY_ACCOUNT_CURRENCY = Commodity.getInstance ( DUMMY_ACCOUNT_CURRENCY_CODE ) ; 
		+  private static final String SIMPLE_ACCOUNT_UID = " simple- account " ; -  private static final String DUMMY_ACCOUNT_CURRENCY_CODE = " USD " ; 
		+  private static final String ROOT_ACCOUNT_NAME = " Root account " ; -  private final Commodity DUMMY_ACCOUNT_CURRENCY = Commodity.getInstance ( DUMMY_ACCOUNT_CURRENCY_CODE ) ; 
		+  private static final String ROOT_ACCOUNT_UID = " root- account " ; -  private static final String DUMMY_ACCOUNT_CURRENCY_CODE = " USD " ; 
		+  private static final String PARENT_ACCOUNT_NAME = " Parent account " ; -  private static final String DUMMY_ACCOUNT_CURRENCY_CODE = " USD " ; 
		+  private static final String PARENT_ACCOUNT_UID = " parent- account " ; -  private static final String DUMMY_ACCOUNT_CURRENCY_CODE = " USD " ; 
		+  private static final String CHILD_ACCOUNT_UID = " child- account " ; -  private static final String DUMMY_ACCOUNT_CURRENCY_CODE = " USD " ; 
		+  private static final String CHILD_ACCOUNT_NAME = " Child account " ; -  private final Commodity DUMMY_ACCOUNT_CURRENCY = Commodity.getInstance ( DUMMY_ACCOUNT_CURRENCY_CODE ) ; 
5
	+  onView ( allOf ( withText ( SIMPLE_ACCOUNT_NAME ) , isDisplayed () ) ) .perform ( click () ) ; -  onView ( allOf ( withText ( DUMMY_ACCOUNT_NAME ) , isDisplayed () ) ) .perform ( click () ) ; 
4
		+  assertNotNull ( ACCOUNTS_CURRENCY ) ; -  assertNotNull ( DUMMY_ACCOUNT_CURRENCY ) ; 
7
6
	+  String editedAccountName = " An Edited Account " ; -  String editedAccountName = " Edited Account " ; 
		+  assertThat ( mAccountsDbAdapter.getSubAccountCount ( SIMPLE_ACCOUNT_UID ) ) .isEqualTo ( 0 ) ; -  assertThat ( mAccountsDbAdapter.getSubAccountCount ( DUMMY_ACCOUNT_UID ) ) .isEqualTo ( 0 ) ; 
		+  onView ( allOf ( withParent ( hasDescendant ( withText ( SIMPLE_ACCOUNT_NAME ) ) ) , -  onView ( withId ( R.id.options_menu ) ) .perform ( click () ) ; 
9
8
		+  onView ( allOf ( withParent ( hasDescendant ( withText ( SIMPLE_ACCOUNT_NAME ) ) ) , -  onView ( withId ( R.id.options_menu ) ) .perform ( click () ) ; 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
3
		+  intent.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , ( ArrayList < Split > ) extractSplitsFromView () ) ; -    splitStrings.add ( split.toCsv () ) ; 
		+  intent.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , ( ArrayList < Split > ) extractSplitsFromView () ) ; -   intent.putStringArrayListExtra ( UxArgument.SPLIT_LIST , splitStrings ) ; 
2
5
4
7
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   List < String > splits = data.getStringArrayListExtra ( UxArgument.SPLIT_LIST ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -    splitList.add ( Split.parseSplit ( splitCsv ) ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   List < String > removedSplits = data.getStringArrayListExtra ( UxArgument.REMOVED_SPLITS ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   setSplitList ( splitList , removedSplits ) ; 
6
app/src/main/java/org/gnucash/android/model/Split_java
1
3
		+  setQuantity ( new Money ( amount ) ) ; -  setQuantity ( amount ) ; 
2
	+ public class Split extends BaseModel implements Parcelable { - public class Split extends BaseModel { 
5
4
6
app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText_java
1
		+  String text = evaluate () ; -  evaluate () ; 
app/src/main/java/org/gnucash/android/model/Transaction_java
1
app/src/main/java/org/gnucash/android/ui/common/UxArgument_java
1
app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest_java
1
		+ Espresso.closeSoftKeyboard () ; - Espresso.closeSoftKeyboard () ; 
3
2
4
		+ assertThat ( editedTransaction.getSplits () ) .hasSize ( 2 ) ; - assertThat ( editedTransaction.getSplits () ) .isEqualTo ( mTransaction.getSplits () ) ; 
		+ assertThat ( split.isEquivalentTo ( editedSplit ) ) .isTrue () ; - assertThat ( editedTransaction.getSplits () ) .isEqualTo ( mTransaction.getSplits () ) ; 
		+ assertThat ( split.isEquivalentTo ( editedSplit ) ) .isTrue () ; - assertThat ( editedTransaction.getSplits () ) .isEqualTo ( mTransaction.getSplits () ) ; 
app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment_java
1
3
2
		+  List < Split > splitList = getArguments () .getParcelableArrayList ( UxArgument.SPLIT_LIST ) ; -  List < String > splitStrings = getArguments () .getStringArrayList ( UxArgument.SPLIT_LIST ) ; 
		+  List < Split > splitList = getArguments () .getParcelableArrayList ( UxArgument.SPLIT_LIST ) ; -    splitList.add ( Split.parseSplit ( splitString ) ) ; 
5
		+  private ArrayList < Split > extractSplitsFromView () { -  private List < Split > extractSplitsFromView () { 
		+  ArrayList < Split > splitList = new ArrayList < > () ; -  List < Split > splitList = new ArrayList < > () ; 
4
		+  data.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , extractSplitsFromView () ) ; -   splitStrings.add ( split.toCsv () ) ; 
		+  data.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , extractSplitsFromView () ) ; -  data.putStringArrayListExtra ( UxArgument.SPLIT_LIST , splitStrings ) ; 
		+  data.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , extractSplitsFromView () ) ; -  data.putStringArrayListExtra ( UxArgument.REMOVED_SPLITS , mRemovedSplitUIDs ) ; 
app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity_java
1
	+ public static void updateWidget ( final Context context , int appWidgetId , String accountUID ) { - public static void updateWidget ( Context context , int appWidgetId , String accountUID ) { 
		+ final Account account ; - Account account ; 
3
2
	+ final RemoteViews views = new RemoteViews ( context.getPackageName () , - RemoteViews views = new RemoteViews ( context.getPackageName () , 
	+ Money accountBalance = accountsDbAdapter.getAccountBalance ( accountUID , - 1 , System.currentTimeMillis () ) ; -  Money accountBalance = accountsDbAdapter.getAccountBalance ( accountUID , - 1 , System.currentTimeMillis () ) ; 
	+ Money accountBalance = accountsDbAdapter.getAccountBalance ( accountUID , - 1 , System.currentTimeMillis () ) ; -  views.setTextViewText ( R.id.transactions_summary , 
	+ Money accountBalance = accountsDbAdapter.getAccountBalance ( accountUID , - 1 , System.currentTimeMillis () ) ; - 
		+ final RemoteViews views = new RemoteViews ( context.getPackageName () , -  views.setTextViewText ( R.id.transactions_summary , 
		+ Money accountBalance = accountsDbAdapter.getAccountBalance ( accountUID , - 1 , System.currentTimeMillis () ) ; - RemoteViews views = new RemoteViews ( context.getPackageName () , 
		+ views.setTextViewText ( R.id.transactions_summary , -  views.setTextViewText ( R.id.transactions_summary , 
app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask_java
1
2
app/res/values-fr/strings_xml
app/res/menu/sub_account_actions_xml
app/src/org/gnucash/android/ui/colorpicker/ColorPickerSwatch_java
1
integration-tests/src/org/gnucash/android/test/ui/OfxExportTest_java
1
3
	+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - Spinner spinner = mSolo.getCurrentSpinners () .get ( 0 ) ; 
		+  mSolo.clickOnActionBarItem ( R.id.menu_export ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ;  
		+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ;  
2
	+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - Spinner spinner = mSolo.getCurrentSpinners () .get ( 0 ) ; 
		+  mSolo.clickOnActionBarItem ( R.id.menu_export ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ; 
		+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ; 
5
	+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - Spinner spinner = mSolo.getCurrentSpinners () .get ( 0 ) ; 
		+  mSolo.clickOnActionBarItem ( R.id.menu_export ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ; 
		+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ; 
4
	+ Button b = ( Button ) mSolo.getView ( R.id.btn_save ) ; - Button b = ( Button ) mSolo.getView ( R.id.btn_save ) ; 
	+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - Spinner spinner = mSolo.getCurrentSpinners () .get ( 0 ) ; 
		+ Button b = ( Button ) mSolo.getView ( R.id.btn_save ) ; - Button deleteButton = ( Button ) mSolo.getView ( android.R.id.button1 ) ; 
		+ Button b = ( Button ) mSolo.getView ( R.id.btn_save ) ; - mSolo.clickOnView ( deleteButton ) ; 
		+ Button b = ( Button ) mSolo.getView ( R.id.btn_save ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ; 
		+  String deleteConfirm = getActivity () .getString ( R.string.alert_dialog_ok_delete ) ; - mSolo.clickOnView ( deleteButton ) ; 
		+  String deleteConfirm = getActivity () .getString ( R.string.alert_dialog_ok_delete ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ; 
		+  mSolo.clickOnText ( deleteConfirm ) ; - mSolo.clickOnView ( deleteButton ) ; 
		+  mSolo.clickOnText ( deleteConfirm ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ; 
		+  mSolo.sleep ( 1000 ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ; 
		+  mSolo.clickOnActionBarItem ( R.id.menu_export ) ; - mSolo.clickOnView ( deleteButton ) ; 
		+  mSolo.clickOnActionBarItem ( R.id.menu_export ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ; 
		+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - Button b = ( Button ) mSolo.getView ( R.id.btn_save ) ; 
		+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - Button deleteButton = ( Button ) mSolo.getView ( android.R.id.button1 ) ; 
		+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - mSolo.clickOnView ( deleteButton ) ; 
		+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - mSolo.clickOnActionBarItem ( R.id.menu_export ) ; 
app/res/values-el/strings_xml
app/res/layout/fragment_new_account_xml
integration-tests/src/org/gnucash/android/test/util/ActionBarUtils_java
1
app/src/org/gnucash/android/ui/settings/AboutPreferenceFragment_java
1
3
	+    new AccountImporterTask ( this ) .execute ( accountInputStream ) ; -    new AccountImporterTask ( this ) .execute ( data.getData () ) ; 
2
	+   packageInfo = context.getPackageManager () .getPackageInfo ( context.getPackageName () , 0 ) ; -   packageInfo = getPackageManager () .getPackageInfo ( getPackageName () , 0 ) ; 
		+  StringBuilder releaseTitle = new StringBuilder ( resources.getString ( R.string.title_whats_new ) ) ; -   packageInfo = getPackageManager () .getPackageInfo ( getPackageName () , 0 ) ; 
5
	+  protected Boolean doInBackground ( InputStream... inputStreams ) { -  protected Boolean doInBackground ( Uri... uris ) { 
4
	+  public static class AccountImporterTask extends AsyncTask < InputStream , Void , Boolean > { -  public static class AccountImporterTask extends AsyncTask < Uri , Void , Boolean > { 
app/res/values-nb/strings_xml
app/res/values-nl/strings_xml
app/res/values-it/strings_xml
app/src/org/gnucash/android/export/ExportDialogFragment_java
1
	+  mFilePath = getActivity () .getExternalFilesDir ( null ) + " / " + buildExportFilename ( mExportFormat ) ; -  mFilePath = buildExportFilename ( mExportFormat ) ; 
3
	+   mAmountEditText.setText ( mTransaction.getAmount () .toPlainString () ) ; - mAmountEditText.setText ( mTransaction.getAmount () .toPlainString () ) ; 
2
4
pom_xml
app/res/menu/account_actions_xml
app/src/org/gnucash/android/export/ExporterTask_java
1
app/src/org/gnucash/android/ui/settings/GeneralPreferenceFragment_java
1
2
app/res/layout/color_picker_dialog_xml
app/src/org/gnucash/android/util/CheckableLinearLayout_java
1
app/pom_xml
app/src/org/gnucash/android/export/ExportFormat_java
1
3
	+ bankId.appendChild ( doc.createTextNode ( OfxExporter.APP_ID ) ) ; - bankId.appendChild ( doc.createTextNode ( OfxFormatter.APP_ID ) ) ; 
2
	+ datePosted.appendChild ( doc.createTextNode ( OfxExporter.getOfxFormattedTime ( mTimestamp ) ) ) ; - datePosted.appendChild ( doc.createTextNode ( OfxFormatter.getOfxFormattedTime ( mTimestamp ) ) ) ; 
		+ datePosted.appendChild ( doc.createTextNode ( OfxExporter.getOfxFormattedTime ( mTimestamp ) ) ) ; -  OfxFormatter.getOfxFormattedTime ( mTimestamp ) ) ) ; 
		+  OfxExporter.getOfxFormattedTime ( mTimestamp ) ) ) ; -  OfxFormatter.getOfxFormattedTime ( mTimestamp ) ) ) ; 
4
app/src/org/gnucash/android/ui/settings/TransactionsPreferenceFragment_java
1
		+ import org.gnucash.android.R ; - import com.actionbarsherlock.app.SherlockFragmentActivity ; 
		+ import org.gnucash.android.R ; - import org.gnucash.android.R ; 
		+ import org.gnucash.android.R ; - import org.gnucash.android.ui.transactions.TransactionsDeleteConfirmationDialog ; 
3
	+   TextView accountBalanceTextView = ( TextView ) v -   TextView summary = ( TextView ) v 
	+   new AccountBalanceTask ( accountBalanceTextView , getActivity () ) .execute ( accountId ) ; -   new AccountBalanceTask ( summary , getActivity () ) .execute ( accountId ) ; 
2
4
app/src/org/gnucash/android/ui/accounts/ExportDialogFragment_java
1
3
2
5
	+ public static String buildExportFilename ( ExportFormat format ) { - public static String buildExportFilename () { 
	+ SimpleDateFormat formatter = new SimpleDateFormat ( " yyyyMMdd_HHmmss " , Locale.US ) ; - SimpleDateFormat formatter = new SimpleDateFormat ( " yyyyMMdd_HHmm " , Locale.US ) ; 
		+ public static String buildExportFilename ( ExportFormat format ) { -  + " _gnucash_all.ofx " ; 
		+ SimpleDateFormat formatter = new SimpleDateFormat ( " yyyyMMdd_HHmmss " , Locale.US ) ; -  + " _gnucash_all.ofx " ; 
		+  + " _gnucash_all " ; -  + " _gnucash_all.ofx " ; 
		+    filename += " .qif " ; -  + " _gnucash_all.ofx " ; 
		+    filename += " .ofx " ; -  + " _gnucash_all.ofx " ; 
4
	+ private void writeOfxToExternalStorage ( Document doc ) throws IOException { - private void writeToExternalStorage ( Document doc ) throws IOException { 
app/res/xml-v11/fragment_account_preferences_xml
app/src/org/gnucash/android/db/TransactionsDbAdapter_java
1
app/res/layout/activity_transactions_xml
app/res/values-zh/strings_xml
app/res/values/strings_xml
app/src/org/gnucash/android/util/GnucashAccountXmlHandler_java
1
2
app/res/layout/dialog_export_ofx_xml
app/res/raw-de-rAT/default_accounts_gnucash
1
		+ import org.gnucash.android.db.DatabaseAdapter ; - import org.gnucash.android.data.Account ; 
		+ import org.gnucash.android.db.DatabaseAdapter ; - import org.gnucash.android.db.* ; 
		+ import org.gnucash.android.db.DatabaseCursorLoader ; - import org.gnucash.android.data.Account ; 
		+ import org.gnucash.android.db.DatabaseCursorLoader ; - import org.gnucash.android.db.* ; 
		+ import org.gnucash.android.db.DatabaseHelper ; - import org.gnucash.android.data.Account ; 
		+ import org.gnucash.android.db.DatabaseHelper ; - import org.gnucash.android.db.* ; 
		+ import org.gnucash.android.db.TransactionsDbAdapter ; - import org.gnucash.android.data.Account ; 
		+ import org.gnucash.android.db.TransactionsDbAdapter ; - import org.gnucash.android.db.* ; 
3
	+ String transferAccountUID = cursor.getString ( DatabaseAdapter.COLUMN_DOUBLE_ENTRY_ACCOUNT_UID ) ; - String doubleEntryAccountUID = cursor.getString ( DatabaseAdapter.COLUMN_DOUBLE_ENTRY_ACCOUNT_UID ) ; 
	+ && mTransactionsDbAdapter.isSameAccount ( mAccountID , transferAccountUID ) ) { - && mTransactionsDbAdapter.isSameAccount ( mAccountID , doubleEntryAccountUID ) ) { 
		+ if ( transferAccountUID != null - if ( doubleEntryAccountUID != null 
		+    amount = amount.negate () ; -  amount = amount.negate () ; 
2
	+     float extraPadding = getResources () .getDimension ( R.dimen.edge_padding ) ; -    float extraPadding = getResources () .getDimension ( R.dimen.edge_padding ) ; 
	+     float extraPadding = getResources () .getDimension ( R.dimen.edge_padding ) ; -    hitRect.right += extraPadding ; 
	+     final android.graphics.Rect hitRect = new Rect () ; -    final android.graphics.Rect hitRect = new Rect () ; 
	+     hitRect.right += extraPadding ; -    hitRect.right += extraPadding ; 
	+     hitRect.bottom += 3*extraPadding ; -    hitRect.bottom += 3*extraPadding ; 
	+     hitRect.top  -= extraPadding ; -    checkBoxView.getHitRect ( hitRect ) ; 
	+     hitRect.top  -= extraPadding ; -    hitRect.right += extraPadding ; 
	+     hitRect.top  -= extraPadding ; -    hitRect.bottom += 3*extraPadding ; 
	+     hitRect.top  -= extraPadding ; -    hitRect.top  -= extraPadding ; 
	+     hitRect.left -= 2*extraPadding ; -    checkBoxView.getHitRect ( hitRect ) ; 
	+     hitRect.left -= 2*extraPadding ; -    hitRect.right += extraPadding ; 
	+     hitRect.left -= 2*extraPadding ; -    hitRect.bottom += 3*extraPadding ; 
	+     hitRect.left -= 2*extraPadding ; -    hitRect.left -= 2*extraPadding ; 
	+     parentView.setTouchDelegate ( new TouchDelegate ( hitRect , checkBoxView ) ) ; -    parentView.setTouchDelegate ( new TouchDelegate ( hitRect , checkBoxView ) ) ; 
		+     float extraPadding = getResources () .getDimension ( R.dimen.edge_padding ) ; -    checkBoxView.getHitRect ( hitRect ) ; 
		+     float extraPadding = getResources () .getDimension ( R.dimen.edge_padding ) ; -    hitRect.bottom += 3*extraPadding ; 
		+     float extraPadding = getResources () .getDimension ( R.dimen.edge_padding ) ; -    hitRect.top  -= extraPadding ; 
		+     float extraPadding = getResources () .getDimension ( R.dimen.edge_padding ) ; -    hitRect.left -= 2*extraPadding ; 
		+     final android.graphics.Rect hitRect = new Rect () ; -    checkBoxView.getHitRect ( hitRect ) ; 
		+     final android.graphics.Rect hitRect = new Rect () ; -    hitRect.right += extraPadding ; 
		+     final android.graphics.Rect hitRect = new Rect () ; -    hitRect.bottom += 3*extraPadding ; 
		+     final android.graphics.Rect hitRect = new Rect () ; -    hitRect.left -= 2*extraPadding ; 
		+     final android.graphics.Rect hitRect = new Rect () ; -    parentView.setTouchDelegate ( new TouchDelegate ( hitRect , checkBoxView ) ) ; 
		+     checkBoxView.getHitRect ( hitRect ) ; -    checkBoxView.getHitRect ( hitRect ) ; 
		+     hitRect.right += extraPadding ; -    checkBoxView.getHitRect ( hitRect ) ; 
		+     hitRect.right += extraPadding ; -    hitRect.bottom += 3*extraPadding ; 
		+     hitRect.right += extraPadding ; -    hitRect.top  -= extraPadding ; 
		+     hitRect.bottom += 3*extraPadding ; -    checkBoxView.getHitRect ( hitRect ) ; 
		+     hitRect.bottom += 3*extraPadding ; -    hitRect.right += extraPadding ; 
		+     hitRect.bottom += 3*extraPadding ; -    hitRect.top  -= extraPadding ; 
		+     hitRect.bottom += 3*extraPadding ; -    hitRect.left -= 2*extraPadding ; 
		+     hitRect.top  -= extraPadding ; -    hitRect.left -= 2*extraPadding ; 
		+     hitRect.left -= 2*extraPadding ; -    hitRect.top  -= extraPadding ; 
		+     parentView.setTouchDelegate ( new TouchDelegate ( hitRect , checkBoxView ) ) ; -    final android.graphics.Rect hitRect = new Rect () ; 
		+     parentView.setTouchDelegate ( new TouchDelegate ( hitRect , checkBoxView ) ) ; -    checkBoxView.getHitRect ( hitRect ) ; 
		+     parentView.setTouchDelegate ( new TouchDelegate ( hitRect , checkBoxView ) ) ; -    hitRect.right += extraPadding ; 
		+     parentView.setTouchDelegate ( new TouchDelegate ( hitRect , checkBoxView ) ) ; -    hitRect.bottom += 3*extraPadding ; 
		+     parentView.setTouchDelegate ( new TouchDelegate ( hitRect , checkBoxView ) ) ; -    hitRect.top  -= extraPadding ; 
		+     parentView.setTouchDelegate ( new TouchDelegate ( hitRect , checkBoxView ) ) ; -    hitRect.left -= 2*extraPadding ; 
5
		+  if ( mAccountType.hasDebitNormalBalance () ) { -  if ( mAccountType.hasInvertedCredit () ) { 
4
7
6
		+  return new Money ( sumDecimal , currency ) ; -  return transactionSum ; 
app/res/layout/dialog_account_delete_xml
app/src/org/gnucash/android/receivers/TransactionAppWidgetProvider_java
1
2
app/res/drawable-hdpi/ic_colorpicker_swatch_selected_png
1
3
2
	+  boolean mInPlaceHolderSlot = false ; -  boolean mInPlaceHolderSlot = false ; 
	+  boolean mISO4217Currency  = false ; -  boolean mISO4217Currency = false ; 
		+  boolean mInColorSlot  = false ; -  boolean mInPlaceHolderSlot = false ; 
		+  boolean mInColorSlot  = false ; -  boolean mISO4217Currency = false ; 
		+  boolean mInPlaceHolderSlot = false ; -  boolean mISO4217Currency = false ; 
		+  boolean mISO4217Currency  = false ; -  boolean mInPlaceHolderSlot = false ; 
5
4
app/src/org/gnucash/android/ui/Refreshable_java
1
app/src/org/gnucash/android/ui/colorpicker/HsvColorComparator_java
1
app/src/org/gnucash/android/ui/colorpicker/ColorSquare_java
1
CONTRIBUTORS
1
	+ < string name = " imbalance_account_name " > Sbilancio < /string > - < string name = " imbalance_account_name " > Imbalance < /string > 
		+ < string name = " title_progress_exporting_transactions " > Esportazione transazioni < /string > - < string name = " imbalance_account_name " > Imbalance < /string > 
		+ < string name = " title_progress_exporting_transactions " > Esportazione transazioni < /string > - < string name = " title_progress_exporting_transactions " > Exporting transactions < /string > 
		+ < string name = " title_progress_exporting_transactions " > Esportazione transazioni < /string > - < string name = " label_placeholder_account " > Placeholder account < /string > 
		+ < string name = " label_no_recurring_transactions " > Nessuna transazione pianificata da visualizzare. < /string > - < string name = " imbalance_account_name " > Imbalance < /string > 
		+ < string name = " label_no_recurring_transactions " > Nessuna transazione pianificata da visualizzare. < /string > - < string name = " title_progress_exporting_transactions " > Exporting transactions < /string > 
		+ < string name = " label_no_recurring_transactions " > Nessuna transazione pianificata da visualizzare. < /string > - < string name = " toast_recurring_transaction_deleted " > Successfully deleted recurring transaction < /string > 
		+ < string name = " label_no_recurring_transactions " > Nessuna transazione pianificata da visualizzare. < /string > - < string name = " label_placeholder_account " > Placeholder account < /string > 
		+ < string name = " label_no_recurring_transactions " > Nessuna transazione pianificata da visualizzare. < /string > - < string name = " label_default_transfer_account " > Default Transfer Account < /string > 
		+ < string name = " label_no_recurring_transactions " > Nessuna transazione pianificata da visualizzare. < /string > - < string name = " label_account_color_and_type " > Account Color &amp ; Type < /string > 
		+ < string name = " toast_recurring_transaction_deleted " > Transazione pianificata eliminata < /string > - < string name = " imbalance_account_name " > Imbalance < /string > 
		+ < string name = " toast_recurring_transaction_deleted " > Transazione pianificata eliminata < /string > - < string name = " title_progress_exporting_transactions " > Exporting transactions < /string > 
		+ < string name = " toast_recurring_transaction_deleted " > Transazione pianificata eliminata < /string > - < string name = " label_placeholder_account " > Placeholder account < /string > 
		+ < string name = " toast_recurring_transaction_deleted " > Transazione pianificata eliminata < /string > - < string name = " label_default_transfer_account " > Default Transfer Account < /string > 
		+ < string name = " label_placeholder_account " > Conto segnalibro < /string > - < string name = " imbalance_account_name " > Imbalance < /string > 
		+ < string name = " label_placeholder_account " > Conto segnalibro < /string > - < string name = " title_progress_exporting_transactions " > Exporting transactions < /string > 
		+ < string name = " label_placeholder_account " > Conto segnalibro < /string > - < string name = " label_placeholder_account " > Placeholder account < /string > 
		+ < string name = " label_default_transfer_account " > DConto predefinito di trasferimento < /string > - < string name = " imbalance_account_name " > Imbalance < /string > 
		+ < string name = " label_default_transfer_account " > DConto predefinito di trasferimento < /string > - < string name = " title_progress_exporting_transactions " > Exporting transactions < /string > 
		+ < string name = " label_default_transfer_account " > DConto predefinito di trasferimento < /string > - < string name = " toast_recurring_transaction_deleted " > Successfully deleted recurring transaction < /string > 
		+ < string name = " label_default_transfer_account " > DConto predefinito di trasferimento < /string > - < string name = " label_placeholder_account " > Placeholder account < /string > 
		+ < string name = " label_default_transfer_account " > DConto predefinito di trasferimento < /string > - < string name = " label_default_transfer_account " > Default Transfer Account < /string > 
		+ < string name = " label_default_transfer_account " > DConto predefinito di trasferimento < /string > - < string name = " label_account_color_and_type " > Account Color &amp ; Type < /string > 
		+ < string name = " label_account_color_and_type " > Tipo e colore del conto < /string > - < string name = " imbalance_account_name " > Imbalance < /string > 
		+ < string name = " label_account_color_and_type " > Tipo e colore del conto < /string > - < string name = " title_progress_exporting_transactions " > Exporting transactions < /string > 
		+ < string name = " label_account_color_and_type " > Tipo e colore del conto < /string > - < string name = " toast_recurring_transaction_deleted " > Successfully deleted recurring transaction < /string > 
		+ < string name = " label_account_color_and_type " > Tipo e colore del conto < /string > - < string name = " label_placeholder_account " > Placeholder account < /string > 
		+ < string name = " label_account_color_and_type " > Tipo e colore del conto < /string > - < string name = " label_default_transfer_account " > Default Transfer Account < /string > 
		+ < string name = " label_account_color_and_type " > Tipo e colore del conto < /string > - < string name = " label_account_color_and_type " > Account Color &amp ; Type < /string > 
2
app/res/menu/global_actions_xml
app/src/org/gnucash/android/export/qif/QifHelper_java
1
app/src/org/gnucash/android/ui/transactions/TransactionsActivity_java
1
3
2
4
app/res/drawable/color_square_xml
app/res/raw-de/default_accounts_gnucash
11
10
1
	+    android:layout_marginBottom = " - 8dip " - 
3
2
5
		+  private SparseArray < Refreshable > mFragmentPageReferenceMap = new SparseArray < Refreshable > () ; -  private Map < Integer , Refreshable > mFragmentPageReferenceMap = new HashMap () ; 
4
7
	+  ViewPager pager = ( ViewPager ) findViewById ( R.id.pager ) ; -  mPager = ( ViewPager ) findViewById ( R.id.pager ) ; 
6
		+   mFragmentPageReferenceMap.valueAt ( i ) .refresh ( accountId ) ; -   refreshableFragment.refresh ( accountId ) ; 
9
	+  SpinnerAdapter mSpinnerAdapter = new QualifiedAccountNameCursorAdapter ( getSupportActionBar () .getThemedContext () , - mSpinnerAdapter = new QualifiedAccountNameCursorAdapter ( getSupportActionBar () .getThemedContext () , 
8
	+   PagerAdapter pagerAdapter = new AccountViewPagerAdapter ( getSupportFragmentManager () ) ; -   mPagerAdapter = new AccountViewPagerAdapter ( getSupportFragmentManager () ) ; 
		+   pager.setVisibility ( View.GONE ) ; -   mPager.setVisibility ( View.GONE ) ; 
		+   PagerAdapter pagerAdapter = new AccountViewPagerAdapter ( getSupportFragmentManager () ) ; -   mPager.setVisibility ( View.GONE ) ; 
		+   PagerAdapter pagerAdapter = new AccountViewPagerAdapter ( getSupportFragmentManager () ) ; -   mPager.setAdapter ( mPagerAdapter ) ; 
		+   PagerAdapter pagerAdapter = new AccountViewPagerAdapter ( getSupportFragmentManager () ) ; -   mTitlePageIndicator.setViewPager ( mPager ) ; 
		+   PagerAdapter pagerAdapter = new AccountViewPagerAdapter ( getSupportFragmentManager () ) ; -   mPager.setCurrentItem ( INDEX_TRANSACTIONS_FRAGMENT ) ; 
		+   pager.setAdapter ( pagerAdapter ) ; -   mPager.setAdapter ( mPagerAdapter ) ; 
		+   pager.setAdapter ( pagerAdapter ) ; -   mTitlePageIndicator.setViewPager ( mPager ) ; 
		+   pager.setAdapter ( pagerAdapter ) ; -   mPager.setCurrentItem ( INDEX_TRANSACTIONS_FRAGMENT ) ; 
		+   mTitlePageIndicator.setViewPager ( pager ) ; -   mPager.setAdapter ( mPagerAdapter ) ; 
		+   mTitlePageIndicator.setViewPager ( pager ) ; -   mTitlePageIndicator.setViewPager ( mPager ) ; 
		+   mTitlePageIndicator.setViewPager ( pager ) ; -   mPager.setCurrentItem ( INDEX_TRANSACTIONS_FRAGMENT ) ; 
		+   pager.setCurrentItem ( INDEX_TRANSACTIONS_FRAGMENT ) ; -   mPager.setAdapter ( mPagerAdapter ) ; 
		+   pager.setCurrentItem ( INDEX_TRANSACTIONS_FRAGMENT ) ; -   mTitlePageIndicator.setViewPager ( mPager ) ; 
		+   pager.setCurrentItem ( INDEX_TRANSACTIONS_FRAGMENT ) ; -   mPager.setCurrentItem ( INDEX_TRANSACTIONS_FRAGMENT ) ; 
app/src/org/gnucash/android/db/DatabaseAdapter_java
1
3
2
	+ public static final int COLUMN_CURRENCY_CODE  = 4 ; - public static final int COLUMN_CURRENCY_CODE = 4 ; 
	+ public static final int COLUMN_CURRENCY_CODE  = 4 ; - public static final int COLUMN_PARENT_ACCOUNT_UID = 5 ; 
	+ public static final int COLUMN_PARENT_ACCOUNT_UID = 5 ; - public static final int COLUMN_CURRENCY_CODE = 4 ; 
	+ public static final int COLUMN_PARENT_ACCOUNT_UID = 5 ; - public static final int COLUMN_PARENT_ACCOUNT_UID = 5 ; 
	+  public static final int COLUMN_PLACEHOLDER   = 6 ; - public static final int COLUMN_CURRENCY_CODE = 4 ; 
	+  public static final int COLUMN_PLACEHOLDER   = 6 ; - public static final int COLUMN_PARENT_ACCOUNT_UID = 5 ; 
app/src/org/gnucash/android/receivers/TransactionRecorder_java
1
3
	+ " ( ( " + DatabaseHelper.KEY_ACCOUNT_UID + " = ' " + accountUID + " ' ) " - " ( " + DatabaseHelper.KEY_ACCOUNT_UID + " = ' " + accountUID + " ' ) " 
	+  + " OR ( " + DatabaseHelper.KEY_DOUBLE_ENTRY_ACCOUNT_UID + " = ' " + accountUID + " ' ) ) " - " ( " + DatabaseHelper.KEY_ACCOUNT_UID + " = ' " + accountUID + " ' ) " 
	+  + " OR ( " + DatabaseHelper.KEY_DOUBLE_ENTRY_ACCOUNT_UID + " = ' " + accountUID + " ' ) ) " -  + " OR ( " + DatabaseHelper.KEY_DOUBLE_ENTRY_ACCOUNT_UID + " = ' " + accountUID + " ' ) " , 
2
	+ Log.i ( " TransactionRecorder " , " Received transaction recording intent " ) ; - Log.i ( " Gnucash " , " Received transaction recording intent " ) ; 
	+ if ( accountUID == null ) - if ( accountUID == null ) 
		+  if ( doubleAccountUID == null  |  |  doubleAccountUID.length () == 0 ) - if ( accountUID == null ) 
		+ Transaction.TransactionType type = Transaction.TransactionType.valueOf ( args.getString ( Transaction.EXTRA_TRANSACTION_TYPE ) ) ; - double amountDouble = args.getDouble ( Transaction.EXTRA_AMOUNT , 0 ) ; 
5
4
app/src/org/gnucash/android/ui/accounts/AccountsActivity_java
1
	+  releaseTitle.append ( " - v " ) .append ( packageInfo.versionName ) ; - .setTitle ( R.string.title_whats_new ) 
	+  new AlertDialog.Builder ( this ) - new AlertDialog.Builder ( this ) 
		+  StringBuilder releaseTitle = new StringBuilder ( getResources () .getString ( R.string.title_whats_new ) ) ; - .setTitle ( R.string.title_whats_new ) 
		+  PackageInfo packageInfo = null ; - .setTitle ( R.string.title_whats_new ) 
		+   packageInfo = getPackageManager () .getPackageInfo ( getPackageName () , 0 ) ; - .setTitle ( R.string.title_whats_new ) 
		+ .setTitle ( releaseTitle.toString () ) - .setTitle ( R.string.title_whats_new ) 
app/src/org/gnucash/android/ui/transactions/TransactionsListFragment_java
1
3
		+ uncheckAllItems () ; - deselectAllItems () ; 
2
5
	+ if ( checkedCount > 0  |  |  mActionMode == null ) - if ( mSelectedIds.size () > 0 ) 
4
7
6
		+ args.putLongArray ( SELECTED_TRANSACTION_IDS , getListView () .getCheckedItemIds () ) ; - selectedIds[i+ + ] = l ;  
		+ args.putLongArray ( SELECTED_TRANSACTION_IDS , getListView () .getCheckedItemIds () ) ; - args.putLongArray ( SELECTED_TRANSACTION_IDS , selectedIds ) ; 
8
app/res/drawable/color_picker_swatch_xml
app/src/org/gnucash/android/data/Money_java
1
	+  private static final Money sDefaultZero = Money.createInstance ( Currency.getInstance ( Locale.getDefault () ) .getCurrencyCode () ) ; -  public static final Money sDefaultZero = Money.createInstance ( Currency.getInstance ( Locale.getDefault () ) .getCurrencyCode () ) ; 
app/res/values-ru/strings_xml
app/src/org/gnucash/android/export/ExportParams_java
1
3
2
5
		+    mTransactionTypeButton.setChecked ( false ) ; - mTransactionTypeButton.setChecked ( false ) ; 
		+    mTransactionTypeButton.setChecked ( true ) ; - mTransactionTypeButton.setChecked ( false ) ; 
		+    mTransactionTypeButton.setChecked ( true ) ; - mTransactionTypeButton.setChecked ( false ) ; 
		+    mTransactionTypeButton.setChecked ( false ) ; - mTransactionTypeButton.setChecked ( false ) ; 
4
7
6
integration-tests/src/org/gnucash/android/test/unit/AccountTest_java
1
2
app/src/org/gnucash/android/ui/colorpicker/ColorStateDrawable_java
1
app/src/org/gnucash/android/export/qif/QifExporter_java
1
2
app/res/layout/widget_configuration_xml
app/res/values-pt-rBR/strings_xml
app/src/org/gnucash/android/ui/colorpicker/ColorPickerPalette_java
1
3
2
5
4
6
app/src/org/gnucash/android/ui/transactions/NewTransactionFragment_java
1
2
		+  new Handler () .postDelayed ( new Runnable () { -  mDoubleAccountSpinner.setSelection ( pos ) ; 
app/res/layout/color_picker_swatch_xml
app/src/org/gnucash/android/ui/colorpicker/ColorPickerDialog_java
1
3
2
	+   boolean isPlaceholderAccount = mAccountsDbAdapter.isPlaceholderAccount ( accountId ) ; -   boolean isPlaceholderAccount = mAccountsDbAdapter.isPlaceholderAccount ( accountId ) ; 
5
4
7
	+ if ( mParentAccountCursor == null  |  |  mParentAccountCursor.getCount () <= 0 ) { - if ( mCursor == null  |  |  mCursor.getCount () <= 0 ) { 
		+ mParentAccountCursor = mAccountsDbAdapter.fetchAccounts ( condition ) ; - mCursor = mAccountsDbAdapter.fetchAccounts ( condition ) ; 
		+ mParentAccountCursor = mAccountsDbAdapter.fetchAccounts ( condition ) ; -  mCursor ) ; 
		+ mParentAccountCursor = mAccountsDbAdapter.fetchAccounts ( condition ) ; - mCursorAdapter.setDropDownViewResource ( android.R.layout.simple_spinner_dropdown_item ) ; 
		+ mParentAccountCursor = mAccountsDbAdapter.fetchAccounts ( condition ) ; - mParentAccountSpinner.setAdapter ( mCursorAdapter ) ; 
		+ if ( mParentAccountCursor == null  |  |  mParentAccountCursor.getCount () <= 0 ) { - mCursorAdapter.setDropDownViewResource ( android.R.layout.simple_spinner_dropdown_item ) ; 
		+ if ( mParentAccountCursor == null  |  |  mParentAccountCursor.getCount () <= 0 ) { - mParentAccountSpinner.setAdapter ( mCursorAdapter ) ; 
		+ mParentAccountCursorAdapter = new QualifiedAccountNameCursorAdapter ( - mCursorAdapter = new QualifiedAccountNameCursorAdapter ( 
		+ mParentAccountCursorAdapter = new QualifiedAccountNameCursorAdapter ( - mCursorAdapter.setDropDownViewResource ( android.R.layout.simple_spinner_dropdown_item ) ; 
		+ mParentAccountCursorAdapter = new QualifiedAccountNameCursorAdapter ( - mParentAccountSpinner.setAdapter ( mCursorAdapter ) ; 
		+  android.R.layout.simple_spinner_item , -  android.R.layout.simple_spinner_item , 
		+ mParentAccountCursorAdapter.setDropDownViewResource ( android.R.layout.simple_spinner_dropdown_item ) ; - mCursorAdapter.setDropDownViewResource ( android.R.layout.simple_spinner_dropdown_item ) ; 
		+ mParentAccountCursorAdapter.setDropDownViewResource ( android.R.layout.simple_spinner_dropdown_item ) ; - mParentAccountSpinner.setAdapter ( mCursorAdapter ) ; 
		+ mParentAccountSpinner.setAdapter ( mParentAccountCursorAdapter ) ; - mCursorAdapter.setDropDownViewResource ( android.R.layout.simple_spinner_dropdown_item ) ; 
		+ mParentAccountSpinner.setAdapter ( mParentAccountCursorAdapter ) ; - mParentAccountSpinner.setAdapter ( mCursorAdapter ) ; 
6
app/res/values-hu/strings_xml
app/src/org/gnucash/android/ui/accounts/AddAccountFragment_java
1
2
	+ if ( mCursor == null  |  |  mCursor.getCount () <= 0 ) { - if ( mCursor.getCount () <= 0 ) { 
		+   condition = " ( " + DatabaseHelper.KEY_PARENT_ACCOUNT_UID + " IS NULL " - String condition = DatabaseHelper.KEY_ROW_ID + " != " + mSelectedAccountId ; 
		+    + " OR " + DatabaseHelper.KEY_PARENT_ACCOUNT_UID + " != ' " + mAccount.getUID () + " ' ) " - String condition = DatabaseHelper.KEY_ROW_ID + " != " + mSelectedAccountId ; 
		+    + " AND " + DatabaseHelper.KEY_ROW_ID + " != " + mSelectedAccountId ; - String condition = DatabaseHelper.KEY_ROW_ID + " != " + mSelectedAccountId ; 
		+ mCursorAdapter = new QualifiedAccountNameCursorAdapter ( - mCursorAdapter = new SimpleCursorAdapter ( 
app/src/org/gnucash/android/ui/settings/SettingsActivity_java
1
	+       ( ( AccountsListFragment ) getTargetFragment () ) .deleteAccount ( rowId , deleteSubAccountsCheckBox.isChecked () ) ; -       ( ( AccountsListFragment ) getTargetFragment () ) .deleteAccount ( rowId ) ; 
		+       } else { -       } else 
		+        CheckBox deleteSubAccountsCheckBox = ( CheckBox ) dialogLayout -    .create () ; 
		+         .findViewById ( R.id.checkbox_delete_sub_accounts ) ; -    .create () ; 
		+       ( ( AccountsListFragment ) getTargetFragment () ) .deleteAccount ( rowId , deleteSubAccountsCheckBox.isChecked () ) ; -    .create () ; 
		+   return dialogBuilder.create () ; -    .create () ; 
3
2
app/src/org/gnucash/android/util/QualifiedAccountNameCursorAdapter_java
1
app/res/values-es-rMX/strings_xml
integration-tests/src/org/gnucash/android/test/ui/TransactionsActivityTest_java
11
	+ AccountsDbAdapter accountsDbAdapter = new AccountsDbAdapter ( getActivity () ) ; - AccountsDbAdapter accAdapter = new AccountsDbAdapter ( getActivity () ) ; 
	+ long id = accountsDbAdapter.getId ( DUMMY_ACCOUNT_UID ) ; - long id = accAdapter.getId ( DUMMY_ACCOUNT_UID ) ; 
	+  Account account = new Account ( targetAccountName ) ; - Account account = new Account ( " Target " ) ; 
		+ clickSherlockActionBarItem ( R.id.context_menu_delete ) ; - accAdapter.close () ; 
		+  String targetAccountName = " Target " ; - accAdapter.close () ; 
10
		+ mSolo.waitForText ( " Edit transaction " ) ; - mSolo.waitForText ( " Note " ) ; 
		+ clickSherlockActionBarItem ( R.id.menu_save ) ; - mSolo.clickOnActionBarItem ( R.id.menu_save ) ; 
13
		+  mSolo.sleep ( 2000 ) ; -  mSolo.wait ( 2000 ) ; 
12
	+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - Spinner spinner = mSolo.getCurrentSpinners () .get ( 0 ) ; 
		+ clickSherlockActionBarItem ( R.id.context_menu_move_transactions ) ; - mSolo.clickOnText ( " Target " ) ; 
		+ Spinner spinner = mSolo.getCurrentViews ( Spinner.class ) .get ( 0 ) ; - mSolo.clickOnText ( " Target " ) ; 
		+  mSolo.sleep ( 500 ) ; - mSolo.clickOnText ( " Target " ) ; 
		+ mSolo.clickOnText ( targetAccountName ) ; - mSolo.clickOnText ( " Target " ) ; 
1
3
2
5
4
7
		+  clickSherlockActionBarItem ( R.id.menu_add_transaction ) ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+  clickSherlockActionBarItem ( R.id.menu_add_transaction ) ; - mSolo.clickOnActionBarItem ( R.id.menu_cancel ) ; 
		+  clickSherlockActionBarItem ( R.id.menu_add_transaction ) ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+  clickSherlockActionBarItem ( R.id.menu_add_transaction ) ; - assertTrue ( transactionTypeButton.isChecked () ) ; 
		+ assertThat ( transactionTypeButton ) .isNotChecked () ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+ assertThat ( transactionTypeButton ) .isNotChecked () ; - mSolo.clickOnActionBarItem ( R.id.menu_cancel ) ; 
		+ assertThat ( transactionTypeButton ) .isNotChecked () ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+ assertThat ( transactionTypeButton ) .isNotChecked () ; - assertTrue ( transactionTypeButton.isChecked () ) ; 
		+ clickSherlockActionBarItem ( R.id.menu_cancel ) ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+ clickSherlockActionBarItem ( R.id.menu_cancel ) ; - mSolo.clickOnActionBarItem ( R.id.menu_cancel ) ; 
		+ clickSherlockActionBarItem ( R.id.menu_cancel ) ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+ clickSherlockActionBarItem ( R.id.menu_cancel ) ; - assertTrue ( transactionTypeButton.isChecked () ) ; 
		+  clickSherlockActionBarItem ( R.id.menu_add_transaction ) ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+  clickSherlockActionBarItem ( R.id.menu_add_transaction ) ; - mSolo.clickOnActionBarItem ( R.id.menu_cancel ) ; 
		+  clickSherlockActionBarItem ( R.id.menu_add_transaction ) ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+  clickSherlockActionBarItem ( R.id.menu_add_transaction ) ; - assertTrue ( transactionTypeButton.isChecked () ) ; 
		+ assertThat ( transactionTypeButton ) .isChecked () ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+ assertThat ( transactionTypeButton ) .isChecked () ; - mSolo.clickOnActionBarItem ( R.id.menu_cancel ) ; 
		+ assertThat ( transactionTypeButton ) .isChecked () ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+ assertThat ( transactionTypeButton ) .isChecked () ; - assertTrue ( transactionTypeButton.isChecked () ) ; 
		+  clickSherlockActionBarItem ( R.id.menu_cancel ) ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+  clickSherlockActionBarItem ( R.id.menu_cancel ) ; - mSolo.clickOnActionBarItem ( R.id.menu_cancel ) ; 
		+  clickSherlockActionBarItem ( R.id.menu_cancel ) ; - mSolo.clickOnActionBarItem ( R.id.menu_add_transaction ) ; 
		+  clickSherlockActionBarItem ( R.id.menu_cancel ) ; - assertTrue ( transactionTypeButton.isChecked () ) ; 
6
		+ clickSherlockActionBarItem ( R.id.menu_save ) ; - mSolo.clickOnActionBarItem ( R.id.menu_save ) ; 
9
8
		+ clickSherlockActionBarItem ( R.id.menu_save ) ; - mSolo.clickOnActionBarItem ( R.id.menu_save ) ; 
app/src/org/gnucash/android/data/Account_java
1
2
integration-tests/src/org/gnucash/android/test/ui/AccountsActivityTest_java
1
3
2
	+ ListView lv = mSolo.getCurrentViews ( ListView.class ) .get ( 0 ) ; - ListView lv = mSolo.getCurrentListViews () .get ( 0 ) ; 
		+  clickSherlockActionBarItem ( R.id.context_menu_edit_accounts ) ; -  .findViewById ( R.id.account_name ) ;  
		+  mSolo.waitForView ( EditText.class ) ; -  .findViewById ( R.id.account_name ) ;  
		+ ListView lv = mSolo.getCurrentViews ( ListView.class ) .get ( 0 ) ; -  .findViewById ( R.id.account_name ) ;  
		+  .findViewById ( R.id.primary_text ) ; -  .findViewById ( R.id.account_name ) ;  
5
4
app/src/org/gnucash/android/db/DatabaseHelper_java
1
	+ private static final int DATABASE_VERSION = 3 ; - private static final int DATABASE_VERSION = 2 ; 
2
app/res/values-de/strings_xml
app/src/org/gnucash/android/db/AccountsDbAdapter_java
1
	+  List < Long > subAccounts = getSubAccountIds ( accountId ) ; -  List < Long > subAccounts = getSubAccountIds ( accountId ) ; 
2
app/res/xml/fragment_general_preferences_xml
integration-tests/pom_xml
app/src/org/gnucash/android/ui/settings/DeleteAllAccountsConfirmationDialog_java
1
3
2
	+  if ( subAccountCount > 0  |  |  isPlaceholderAccount ) { -  if ( subAccountCount > 0 ) { 
5
4
		+ String conditions = " ( " + DatabaseHelper.KEY_ROW_ID + " != " + accountId + " AND " -  DatabaseHelper.KEY_CURRENCY_CODE + " = ' " + mAccountsDbAdapter.getCurrencyCode ( accountId ) + " ' ) " ; 
		+      + " ' AND " + DatabaseHelper.KEY_UID + " != ' " + mAccountsDbAdapter.getGnuCashRootAccountUID () -  DatabaseHelper.KEY_CURRENCY_CODE + " = ' " + mAccountsDbAdapter.getCurrencyCode ( accountId ) + " ' ) " ; 
app/src/org/gnucash/android/ui/transactions/RecurringTransactionsListFragment_java
1
3
2
5
4
6
app/res/values/colors_xml
app/res/raw-de-rCH/default_accounts_gnucash
1
		+  < version > 1.3.0- SNAPSHOT < /version > -  < version > 1.2.7- SNAPSHOT < /version > 
3
		+ import java.util.Currency ; - import java.util.* ; 
		+ import java.util.Locale ; - import java.util.* ; 
2
5
4
6
app/res/values/arrays_xml
app/res/layout/fragment_new_transaction_xml
CHANGELOG_md
1
3
2
		+ import org.gnucash.android.export.ExportDialogFragment ; - import com.actionbarsherlock.widget.* ; 
4
app/res/xml/preference_headers_xml
app/res/values-fr/strings_xml
app/src/org/gnucash/android/ui/transactions/NewTransactionFragment_java
1
2
		+  new Handler () .postDelayed ( new Runnable () { -  mDoubleAccountSpinner.setSelection ( pos ) ; 
app/res/values-it/strings_xml
app/pom_xml
app/res/values-el/strings_xml
app/res/values-es-rMX/strings_xml
app/res/values-es/strings_xml
app/res/values-nl/strings_xml
app/res/values-hu/strings_xml
app/res/values-de/strings_xml
app/res/values-zh/strings_xml
app/src/org/gnucash/android/ui/accounts/AccountsActivity_java
1
	+  releaseTitle.append ( " - v " ) .append ( packageInfo.versionName ) ; - .setTitle ( R.string.title_whats_new ) 
	+  new AlertDialog.Builder ( this ) - new AlertDialog.Builder ( this ) 
		+  StringBuilder releaseTitle = new StringBuilder ( getResources () .getString ( R.string.title_whats_new ) ) ; - .setTitle ( R.string.title_whats_new ) 
		+  PackageInfo packageInfo = null ; - .setTitle ( R.string.title_whats_new ) 
		+   packageInfo = getPackageManager () .getPackageInfo ( getPackageName () , 0 ) ; - .setTitle ( R.string.title_whats_new ) 
		+ .setTitle ( releaseTitle.toString () ) - .setTitle ( R.string.title_whats_new ) 
integration-tests/pom_xml
app/res/values-ru/strings_xml
app/res/values-nb/strings_xml
app/res/values/strings_xml
pom_xml
app/res/values-pt-rBR/strings_xml
app/src/test/java/org/gnucash/android/importer/GncXmlHandlerTest_java
1
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
	+    BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; -   BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; 
	+    Money amount = new Money ( amountBigD , getCommodityForAccount ( mSplit.getAccountUID () ) ) ; -   Money amount = new Money ( amountBigD , getCommodityForAccount ( mSplit.getAccountUID () ) ) ; 
		+    new Money ( BigDecimal.ZERO , mSplit.getValue () .getCommodity () ) ) ) { -   BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; 
		+    new Money ( BigDecimal.ZERO , mSplit.getValue () .getCommodity () ) ) ) { -   mSplit.setValue ( amount.abs () ) ; 
		+    new Money ( BigDecimal.ZERO , mSplit.getValue () .getCommodity () ) ) ) { -   mSplit.setType ( splitType ) ; 
		+    BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; -   mSplit.setValue ( amount.abs () ) ; 
		+    BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; -   mSplit.setType ( splitType ) ; 
		+    Money amount = new Money ( amountBigD , getCommodityForAccount ( mSplit.getAccountUID () ) ) ; -   BigDecimal amountBigD = GncXmlHelper.parseSplitAmount ( characterString ) ; 
		+    Money amount = new Money ( amountBigD , getCommodityForAccount ( mSplit.getAccountUID () ) ) ; -   mSplit.setValue ( amount.abs () ) ; 
		+    Money amount = new Money ( amountBigD , getCommodityForAccount ( mSplit.getAccountUID () ) ) ; -   mSplit.setType ( splitType ) ; 
		+    mSplit.setValue ( amount.abs () ) ; -   mSplit.setValue ( amount.abs () ) ; 
		+    mSplit.setValue ( amount.abs () ) ; -   mSplit.setType ( splitType ) ; 
		+    mSplit.setType ( splitType ) ; -   mSplit.setValue ( amount.abs () ) ; 
		+    mSplit.setType ( splitType ) ; -   mSplit.setType ( splitType ) ; 
		+    mIgnoreTemplateTransaction = false ; -   mIgnoreTemplateTransaction = false ; 
app/src/test/resources/bug562_scheduledTransactionImportedWithImbalancedSplits_xml
app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest_java
1
	+  onView ( withId ( R.id.fab_create_transaction ) ) .perform ( click () ) ; -  onView ( withId ( R.id.menu_add_transaction ) ) .perform ( click () ) ; 
3
	+ onView ( withId ( R.id.fab_create_transaction ) ) .perform ( click () ) ; - onView ( withId ( R.id.menu_add_transaction ) ) .perform ( click () ) ; 
2
	+ onView ( withId ( R.id.fab_create_transaction ) ) .perform ( click () ) ; - onView ( withId ( R.id.menu_add_transaction ) ) .perform ( click () ) ; 
5
	+ onView ( withId ( R.id.fab_create_transaction ) ) .perform ( click () ) ; - onView ( withId ( R.id.menu_add_transaction ) ) .perform ( click () ) ; 
4
	+ onView ( withId ( R.id.fab_create_transaction ) ) .perform ( click () ) ; - onView ( withId ( R.id.menu_add_transaction ) ) .perform ( click () ) ; 
6
	+ onView ( withId ( R.id.fab_create_transaction ) ) .perform ( click () ) ; - onView ( withId ( R.id.menu_add_transaction ) ) .perform ( click () ) ; 
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
	+     + SplitEntry.TABLE_NAME + " . " + SplitEntry.COLUMN_QUANTITY_NUM + " AS " -     + SplitEntry.TABLE_NAME + " . " + SplitEntry.COLUMN_MEMO + " AS " 
	+     + SplitEntry.TABLE_NAME + " . " + SplitEntry.COLUMN_QUANTITY_DENOM + " AS " -     + SplitEntry.TABLE_NAME + " . " + SplitEntry.COLUMN_MEMO + " AS " 
	+     + SplitEntry.TABLE_NAME + " _ " + SplitEntry.COLUMN_QUANTITY_DENOM + " , "     + SplitEntry.TABLE_NAME + " . " + SplitEntry.COLUMN_MEMO + " AS " -     + SplitEntry.TABLE_NAME + " . " + SplitEntry.COLUMN_MEMO + " AS " 
app/src/main/java/org/gnucash/android/export/qif/QifExporter_java
1
	+      SplitEntry.TABLE_NAME + " _ " + SplitEntry.COLUMN_QUANTITY_NUM + " AS split_quantity_num " , -      SplitEntry.TABLE_NAME + " _ " + SplitEntry.COLUMN_AMOUNT + " AS split_amount " , 
	+      SplitEntry.TABLE_NAME + " _ " + SplitEntry.COLUMN_QUANTITY_DENOM + " AS split_quantity_denum " , -      SplitEntry.TABLE_NAME + " _ " + SplitEntry.COLUMN_AMOUNT + " AS split_amount " , 
2
		+    Double quantity_num = cursor.getDouble ( cursor.getColumnIndexOrThrow ( " split_quantity_num " ) ) ; -      .append ( cursor.getString ( cursor.getColumnIndexOrThrow ( " split_amount " ) ) ) 
		+    Double quantity_denom = cursor.getDouble ( cursor.getColumnIndexOrThrow ( " split_quantity_denom " ) ) ; -      .append ( cursor.getString ( cursor.getColumnIndexOrThrow ( " split_amount " ) ) ) 
app/src/main/java/org/gnucash/android/ui/util/dialog/DateRangePickerDialogFragment_java
1
2
	+    Date endDate = selectedDates.size () > 1 ? selectedDates.get ( selectedDates.size () - 1 ) : new Date ( startDate.getTime () ) ; -    Date endDate = selectedDates.size () == 2 ? selectedDates.get ( 1 ) : new Date () ; 
app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter_java
1
2
app/src/main/java/org/gnucash/android/ui/account/AccountsActivity_java
1
		+  int index = mViewPager.getCurrentItem () ; -  getCurrentAccountListFragment () .refresh () ; 
		+  Fragment fragment = ( Fragment ) mFragmentPageReferenceMap.get ( index ) ; -  getCurrentAccountListFragment () .refresh () ; 
		+   ( ( Refreshable ) fragment ) .refresh () ; -  getCurrentAccountListFragment () .refresh () ; 
app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest_java
1
app/src/main/res/values/strings_xml
app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment_java
1
	+  getLoaderManager () .restartLoader ( 0 , null , this ) ; -   getLoaderManager () .restartLoader ( 0 , null , this ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest_java
1
2
app/src/main/java/org/gnucash/android/ui/report/LineChartFragment_java
1
3
	+    xValues.add ( startDate.toString ( X_AXIS_PATTERN ) ) ; -   xValues.add ( startDate.toString ( X_AXIS_PATTERN ) ) ; 
	+    xValues.add ( startDate.toString ( X_AXIS_PATTERN ) ) ; -   xValues.add ( startDate.toString ( X_AXIS_PATTERN ) ) ; 
	+    Log.d ( TAG , " X axis " + startDate.toString ( " MM yy " ) ) ; -   Log.d ( TAG , " X axis " + startDate.toString ( " MM yy " ) ) ; 
	+    startDate = startDate.plusMonths ( 1 ) ; -   startDate = startDate.plusMonths ( 1 ) ; 
		+    Log.w ( TAG , " X axis " + startDate.toString ( " yy " ) ) ; -   xValues.add ( startDate.toString ( X_AXIS_PATTERN ) ) ; 
		+    startDate = startDate.plusYears ( 1 ) ; -   startDate = startDate.plusMonths ( 1 ) ; 
		+    Log.d ( TAG , " X axis " + startDate.toString ( " MM yy " ) ) ; -   xValues.add ( startDate.toString ( X_AXIS_PATTERN ) ) ; 
2
5
	+  public void onGroupingUpdated ( GroupInterval groupInterval ) { -  public void onGroupingUpdated ( ReportsActivity.GroupInterval groupInterval ) { 
4
app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest_java
1
2
	+  ScheduledActionService.processScheduledActions ( actions , mDb ) ; -  ScheduledActionService.processScheduledActions ( actions , mDb ) ; 
	+  ScheduledActionService.processScheduledActions ( actions , mDb ) ; -  ScheduledActionService.processScheduledActions ( actions , mDb ) ; 
		+  assertThat ( backupFiles[0] ) .exists () .hasExtension ( " gnca " ) ; -  ScheduledActionService.processScheduledActions ( actions , mDb ) ; 
app/src/main/java/org/gnucash/android/model/ScheduledAction_java
1
app/src/main/java/org/gnucash/android/service/ScheduledActionService_java
1
		+  if ( ! shouldExecuteScheduledBackup ( scheduledAction ) ) -  if ( scheduledAction.computeNextScheduledExecutionTime () > now ) 
2
app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest_java
1
2
app/src/main/java/org/gnucash/android/model/ScheduledAction_java
1
3
2
		+    nextScheduledExecution = computeNextWeeklyExecutionStartingAt ( nextScheduledExecution ) ; -    nextScheduledExecution = nextScheduledExecution.plusWeeks ( multiplier ) ; 
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
3
	+    moveDirectory ( srcDir , dstDir ) ; -    moveDirectory ( srcDir , dstDir ) ; 
	+    File readmeFile = new File ( Exporter.LEGACY_BASE_FOLDER_PATH , " README.txt " ) ; -    File readmeFile = new File ( Exporter.LEGACY_BASE_FOLDER_PATH , " README.txt " ) ; 
	+    FileWriter writer = null ; -    FileWriter writer = null ; 
		+    File readmeFile = new File ( Exporter.LEGACY_BASE_FOLDER_PATH , " README.txt " ) ; -    moveDirectory ( srcDir , dstDir ) ; 
		+   } catch ( IOException  |  IllegalArgumentException ex ) { -   } catch ( IOException e ) { 
		+    String msg = String.format ( " Error moving files from %s to %s " , srcDir.getPath () , dstDir.getPath () ) ; -    moveDirectory ( srcDir , dstDir ) ; 
		+    String msg = String.format ( " Error moving files from %s to %s " , srcDir.getPath () , dstDir.getPath () ) ; -    Log.e ( LOG_TAG , " Error creating README file " ) ; 
2
		+ * @return New database version - * @return 
GnucashMobile/res/values-nb/strings_xml
app/src/org/gnucash/android/db/DatabaseAdapter_java
1
app/src/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
3
2
app/src/org/gnucash/android/db/TransactionsDbAdapter_java
1
app/src/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
	+  if ( mSplitsList.size () == 2 && mSplitsList.get ( 0 ) .isPairOf ( mSplitsList.get ( 1 ) ) ) { -  if ( mTransaction.getSplits () .size () > 2 ) { 
		+  } else { -  } else { 
		+   setAmountEditViewVisible ( View.GONE ) ; -   setAmountEditViewVisible ( View.GONE ) ; 
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
app/src/main/java/org/gnucash/android/db/DatabaseSchema_java
1
	+  public static final int DATABASE_VERSION = 14 ; -  public static final int DATABASE_VERSION = 13 ; 
app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment_java
1
		+   String uid = mAccountsDbAdapter.getUID ( rowId ) ; -   mAccountsDbAdapter.deleteRecord ( rowId ) ; 
		+   mAccountsDbAdapter.deleteRecord ( uid ) ; -   mAccountsDbAdapter.deleteRecord ( rowId ) ; 
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
3
		+  switch ( qualifiedName ) { -  switch ( qualifiedName.toLowerCase () ) { 
2
5
	+   return Currency.getInstance ( Money.DEFAULT_CURRENCY_CODE ) ; -  return Currency.getInstance ( Money.DEFAULT_CURRENCY_CODE ) ; 
		+   return mAccountMap.get ( accountUID ) .getCurrency () ; -    return account.getCurrency () ; 
		+   return mAccountMap.get ( accountUID ) .getCurrency () ; -  return Currency.getInstance ( Money.DEFAULT_CURRENCY_CODE ) ; 
		+   return Currency.getInstance ( Money.DEFAULT_CURRENCY_CODE ) ; -    return account.getCurrency () ; 
4
app/src/main/res/layout/cardview_budget_amount_xml
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
3
2
4
app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/res/layout/fragment_budget_detail_xml
app/src/main/res/values-pt-rBR/strings_xml
app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/res/drawable-hdpi/ic_arrow_drop_down_white_24dp_png
1
3
	+  public @Nullable BigDecimal getValue () { -  public BigDecimal getValue () { 
2
	+  public @XmlRes int getCalculatorKeysLayout () { -  public int getCalculatorKeysLayout () { 
	+  public void setCalculatorKeysLayout ( @XmlRes int calculatorKeysLayout ) { -  public int getCalculatorKeysLayout () { 
		+  public void setCalculatorKeysLayout ( @XmlRes int calculatorKeysLayout ) { -  public void setCalculatorKeysLayout ( @XmlRes int mCalculatorKeysLayout ) { 
		+  public void setCalculatorKeysLayout ( @XmlRes int calculatorKeysLayout ) { -  this.mCalculatorKeysLayout = mCalculatorKeysLayout ; 
		+  this.mCalculatorKeysLayout = calculatorKeysLayout ; -  this.mCalculatorKeysLayout = mCalculatorKeysLayout ; 
5
4
app/src/main/res/xml/fragment_backup_preferences_xml
app/src/main/res/xml/fragment_transaction_preferences_xml
app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity_java
1
3
2
4
app/src/main/res/values-ro-rRO/strings_xml
app/src/main/java/org/gnucash/android/model/Money_java
1
3
2
		+ return mAmount.setScale ( mCommodity.getSmallestFractionDigits () , RoundingMode.HALF_EVEN ) ; - return mAmount ; 
5
	+ * @throws CurrencyMismatchException if the < code > Money < /code > objects to be added have different Currencies - * @throws IllegalArgumentException if the < code > Money < /code > objects to be added have different Currencies 
4
	+ * @throws CurrencyMismatchException if the < code > Money < /code > objects to be added have different Currencies - * @throws IllegalArgumentException if the < code > Money < /code > objects to be added have different Currencies 
7
6
	+ * @throws CurrencyMismatchException if the < code > Money < /code > objects to be added have different Currencies - * @throws IllegalArgumentException if the < code > Money < /code > objects to be added have different Currencies 
9
8
		+  public Money abs () { -  public Money absolute () { 
app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity_java
1
3
2
4
app/src/main/java/org/gnucash/android/db/DatabaseHelper_java
1
2
app/src/main/java/org/gnucash/android/ui/settings/AboutPreferenceFragment_java
1
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.Preference ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.PreferenceFragment ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.Preference ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.PreferenceFragment ; 
3
		+  BackupPreferenceFragment.mGoogleApiClient = BackupPreferenceFragment.getGoogleApiClient ( getActivity () ) ; -  SettingsActivity.mGoogleApiClient = SettingsActivity.getGoogleApiClient ( getActivity () ) ; 
2
	+ public class AboutPreferenceFragment extends PreferenceFragmentCompat { - public class AboutPreferenceFragment extends PreferenceFragment { 
	+ ActionBar actionBar = ( ( AppCompatActivity ) getActivity () ) .getSupportActionBar () ; - ActionBar actionBar = ( ( AppCompatPreferenceActivity ) getActivity () ) .getSupportActionBar () ; 
		+ public class AboutPreferenceFragment extends PreferenceFragmentCompat { - addPreferencesFromResource ( R.xml.fragment_about_preferences ) ; 
		+ public void onCreatePreferences ( Bundle bundle , String s ) { - addPreferencesFromResource ( R.xml.fragment_about_preferences ) ; 
		+ addPreferencesFromResource ( R.xml.fragment_about_preferences ) ; - addPreferencesFromResource ( R.xml.fragment_about_preferences ) ; 
5
		+  SharedPreferences sharedPrefs = PreferenceActivity.getBookSharedPreferences ( context ) ; -  SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences ( context ) ; 
4
		+ if ( requestCode == BackupPreferenceFragment.REQUEST_RESOLVE_CONNECTION && resultCode == Activity.RESULT_OK ) { - if ( requestCode == SettingsActivity.REQUEST_RESOLVE_CONNECTION && resultCode == Activity.RESULT_OK ) { 
7
6
		+  SharedPreferences prefs = PreferenceActivity.getBookSharedPreferences ( context ) ; -  SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences ( context ) ; 
app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment_java
1
3
2
	+  private void checkData () { -  private void checkdata () { 
5
		+   toggleOwnCloudSync ( preference ) ; -   toggleOwncloudSync ( preference ) ; 
		+   toggleOwnCloudSync ( preference ) ; -   toggleOwncloudPreference ( preference ) ; 
		+   toggleOwnCloudPreference ( preference ) ; -   toggleOwncloudSync ( preference ) ; 
		+   toggleOwnCloudPreference ( preference ) ; -   toggleOwncloudPreference ( preference ) ; 
4
		+    checkData () ; -    checkdata () ; 
7
	+  public void toggleOwnCloudPreference ( Preference pref ) { -  public void toggleOwncloudPreference ( Preference pref ) { 
6
	+  private void toggleOwnCloudSync ( Preference pref ) { -  private void toggleOwncloudSync ( Preference pref ) { 
	+   OwnCloudDialogFragment ocDialog = OwnCloudDialogFragment.newInstance ( pref ) ; -   OwncloudDialogFragment ocDialog = OwncloudDialogFragment.newInstance ( pref ) ; 
app/src/main/res/values-it-rIT/strings_xml
app/src/test/java/org/gnucash/android/test/unit/export/BackupTest_java
1
3
2
4
	+   String bookUID = GncXmlImporter.parse ( GnuCashApplication.getAppContext () .getResources () .openRawResource ( R.raw.default_accounts ) ) ; -   GncXmlImporter.parse ( GnuCashApplication.getAppContext () .getResources () .openRawResource ( R.raw.default_accounts ) ) ; 
app/src/main/res/values-sv-rSE/strings_xml
app/src/main/res/layout/activity_reports_xml
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
11
10
13
12
15
14
		+     mRecurrence.setPeriodStart ( new Timestamp ( date ) ) ; -     mScheduledAction.setStartTime ( date ) ; 
17
16
19
		+  if ( scheduledAction.getLastRunTime () > 0 ) { -  if ( scheduledAction.getLastRun () > 0 ) { 
		+   lastRuntime = scheduledAction.getLastRunTime () ; -   lastRuntime = scheduledAction.getLastRun () ; 
18
		+   mSplit.setValue ( amount.abs () ) ; -   mSplit.setValue ( amount.absolute () ) ; 
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.model.BudgetAmount ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
2
5
4
7
6
9
8
app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment_java
1
2
app/src/main/res/values-iw-rIL/strings_xml
app/src/main/res/values-sr-rSP/strings_xml
CONTRIBUTORS_md
1
	+ < string name = " owncloud_pref " > ownCloud < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " owncloud_server_invalid " > Finner ikke OC- server < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " owncloud_user_invalid " > OC brukernavn/passord ugyldig < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " owncloud_dir_invalid " > Ugyldige tegn: \\ &lt ; &gt ; : \ \ "  |  * ? < /string > - < string name = " owncloud_pref " > owncloud < /string > 
		+ < string name = " owncloud_server_invalid " > Finner ikke OC- server < /string > - < string name = " owncloud_server_invalid " > OC server not found < /string > 
		+ < string name = " owncloud_server_invalid " > Finner ikke OC- server < /string > - < string name = " owncloud_user_invalid " > OC username/password invalid < /string > 
		+ < string name = " owncloud_user_invalid " > OC brukernavn/passord ugyldig < /string > - < string name = " owncloud_server_invalid " > OC server not found < /string > 
		+ < string name = " owncloud_user_invalid " > OC brukernavn/passord ugyldig < /string > - < string name = " owncloud_user_invalid " > OC username/password invalid < /string > 
		+ < string name = " owncloud_dir_invalid " > Ugyldige tegn: \\ &lt ; &gt ; : \ \ "  |  * ? < /string > - < string name = " owncloud_server_invalid " > OC server not found < /string > 
		+ < string name = " owncloud_dir_invalid " > Ugyldige tegn: \\ &lt ; &gt ; : \ \ "  |  * ? < /string > - < string name = " owncloud_user_invalid " > OC username/password invalid < /string > 
3
2
		+ < string name = " error_invalid_exchange_rate " > Ugyldig valutakurs < /string > - < string name = " title_cash_flow_report " > Cash Flow < /string > 
		+ < string name = " error_invalid_exchange_rate " > Ugyldig valutakurs < /string > - < string name = " error_invalid_amount " > Invalid amount < /string > 
		+ < string name = " error_invalid_amount " > Ugyldig belp < /string > - < string name = " title_cash_flow_report " > Cash Flow < /string > 
		+ < string name = " error_invalid_amount " > Ugyldig belp < /string > - < string name = " error_invalid_amount " > Invalid amount < /string > 
app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter_java
1
	+  if ( reconcileDate != null && ! reconcileDate.isEmpty () ) -  if ( reconcileDate != null ) 
3
		+ package org.gnucash.android.ui.transaction ; - package org.gnucash.android.ui.util ; 
2
app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest_java
1
3
2
5
4
7
6
		+  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , System.currentTimeMillis () ) ; -  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , lastRun ) ; 
		+  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , System.currentTimeMillis () ) ; -  scheduledAction.setLastRun ( lastRun ) ; 
8
app/src/main/res/layout/dialog_owncloud_account_xml
app/src/main/res/values-pt-rPT/strings_xml
app/src/main/res/layout-sw600dp/activity_settings_xml
app/src/main/res/values-de/strings_xml
app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment_java
1
3
		+  public void showDeleteTransactionsDialog () { -  public void deleteAllTransactions () { 
		+  deleteTransactionsConfirmationDialog.show ( getActivity () .getSupportFragmentManager () , " transaction_settings " ) ; -  deleteTransactionsConfirmationDialog.show ( getFragmentManager () , " transaction_settings " ) ; 
		+  accountsDbAdapter.updateRecord ( uid , DatabaseSchema.AccountEntry.COLUMN_HIDDEN , isHidden ) ; -  deleteTransactionsConfirmationDialog.show ( getFragmentManager () , " transaction_settings " ) ; 
2
		+   setImbalanceAccountsHidden ( ( Boolean ) newValue ) ; -    deleteAllTransactions () ; 
4
		+ preference.setSummary ( localizedLabel ) ; - pref.setSummary ( localizedLabel ) ; 
app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment_java
1
2
		+     mReportPeriodStart , mReportPeriodEnd ) .asDouble () ; -     mReportStartTime , mReportEndTime ) .asDouble () ; 
app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment_java
1
3
		+ import org.gnucash.android.ui.util.RecurrenceViewClickListener ; - import java.text.DateFormat ; 
		+ import org.gnucash.android.ui.util.RecurrenceViewClickListener ; - import java.util.List ; 
2
		+ import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment ; - import com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog ; 
		+ import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment ; - import com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialog ; 
		+ import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment ; - import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog ; 
		+ import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment ; - import com.crashlytics.android.Crashlytics ; 
		+ import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialog ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import com.crashlytics.android.Crashlytics ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
4
		+ RecurrencePickerDialogFragment.OnRecurrenceSetListener , - CalendarDatePickerDialog.OnDateSetListener , 
		+ RecurrencePickerDialogFragment.OnRecurrenceSetListener , - RadialTimePickerDialog.OnTimeSetListener { 
		+ CalendarDatePickerDialogFragment.OnDateSetListener , - CalendarDatePickerDialog.OnDateSetListener , 
		+ CalendarDatePickerDialogFragment.OnDateSetListener , - RadialTimePickerDialog.OnTimeSetListener { 
app/src/main/res/values-ja-rJP/strings_xml
app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter_java
1
2
app/proguard-project_txt
1
		+  < item > OwnCloud < /item > -  < item > Owncloud < /item > 
2
app/src/main/res/values-zh-rCN/strings_xml
app/src/androidTest/java/org/gnucash/android/test/ui/util/DisableAnimationsRule_java
10
		+   mActivityRule.runOnUiThread ( new Runnable () { -   runTestOnUiThread ( new Runnable () { 
1
3
2
5
4
7
6
9
	+  assertThat ( parentUID ) .isEqualTo ( SIMPLE_ACCOUNT_UID ) ; -  assertThat ( ROOT_ACCOUNT_UID ) .isEqualTo ( parentUID ) ; 
8
		+  assertThat ( accounts ) .hasSize ( 2 ) ; -  assertThat ( accounts ) .hasSize ( 5 ) ; 
app/src/main/res/menu/book_list_actions_xml
app/src/main/res/layout/fragment_numeric_keyboard_xml
app/src/main/res/xml/fragment_account_preferences_xml
app/src/main/res/values-vi-rVN/strings_xml
app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest_java
1
2
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment_java
1
app/src/main/res/values/dimens_xml
app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter_java
1
	+  mDb.delete ( DatabaseSchema.PriceEntry.TABLE_NAME , null , null ) ; -  mDb.delete ( DatabaseSchema.PriceEntry.TABLE_NAME , null , null ) ; 
		+  mDb.delete ( DatabaseSchema.BudgetAmountEntry.TABLE_NAME , null , null ) ; -  mDb.delete ( DatabaseSchema.PriceEntry.TABLE_NAME , null , null ) ; 
		+  mDb.delete ( DatabaseSchema.BudgetEntry.TABLE_NAME , null , null ) ; -  mDb.delete ( DatabaseSchema.PriceEntry.TABLE_NAME , null , null ) ; 
		+  mDb.delete ( DatabaseSchema.RecurrenceEntry.TABLE_NAME , null , null ) ; -  mDb.delete ( DatabaseSchema.PriceEntry.TABLE_NAME , null , null ) ; 
app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText_java
1
2
	+    if ( v != null && ! isInEditMode () ) -    if ( v != null ) 
build_gradle
1
3
	+  assertThat ( BudgetAmountsDbAdapter.getInstance () .getRecordsCount () ) .isZero () ; -  assertThat ( PricesDbAdapter.getInstance () .getRecordsCount () ) .isZero () ; 
	+  assertThat ( PricesDbAdapter.getInstance () .getRecordsCount () ) .isZero () ; -  assertThat ( PricesDbAdapter.getInstance () .getRecordsCount () ) .isZero () ; 
2
app/src/main/res/drawable/budget_progress_indicator_xml
app/src/main/java/org/gnucash/android/importer/ImportAsyncTask_java
1
3
	+    mSplit.setValue ( new Money ( mValue , mCommoditiesDbAdapter.getCommodity ( mTransaction.getCurrency () .getCurrencyCode () ) ) ) ; -    mSplit.setValue ( new Money ( mValue , Commodity.getInstance ( mTransaction.getCurrency () .getCurrencyCode () ) ) ) ; 
2
		+  return handler.getBookUID () ; -  return handler.getRootAccountUID () ; 
5
4
	+    imbAccount = new Account ( imbalancePrefix + currencyCode , mCommoditiesDbAdapter.getCommodity ( currencyCode ) ) ; -    imbAccount = new Account ( imbalancePrefix + currencyCode , Commodity.getInstance ( currencyCode ) ) ; 
6
		+   booksDbAdapter.addRecord ( mBook ) ; -    mostCurrencyAppearance = entry.getValue () ; 
		+   booksDbAdapter.addRecord ( mBook ) ; -    mostAppearedCurrency = entry.getKey () ; 
		+   booksDbAdapter.addRecord ( mBook ) ; -   GnuCashApplication.setDefaultCurrencyCode ( mostAppearedCurrency ) ; 
		+  public @NonNull String getBookUID () { -  public @NonNull String getRootAccountUID () { 
		+  return mBook.getUID () ; -  return mRootAccount.getUID () ; 
app/src/main/res/layout/activity_scheduled_events_xml
app/src/main/java/org/gnucash/android/export/Exporter_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
2
	+   mSplitsDbAdapter  = new SplitsDbAdapter ( db ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
	+   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; -   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; 
	+   mAccountsDbAdapter  = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; -   mAccountsDbAdapter = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; 
		+  protected BudgetsDbAdapter mBudgetsDbAdapter ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mAccountsDbAdapter  = AccountsDbAdapter.getInstance () ; -   mAccountsDbAdapter = AccountsDbAdapter.getInstance () ; 
		+   mTransactionsDbAdapter = TransactionsDbAdapter.getInstance () ; -   mTransactionsDbAdapter = TransactionsDbAdapter.getInstance () ; 
		+   mSplitsDbAdapter  = SplitsDbAdapter.getInstance () ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mPricesDbAdapter  = PricesDbAdapter.getInstance () ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mCommoditiesDbAdapter = CommoditiesDbAdapter.getInstance () ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mBudgetsDbAdapter  = BudgetsDbAdapter.getInstance () ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mSplitsDbAdapter  = new SplitsDbAdapter ( db ) ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; -   mTransactionsDbAdapter = TransactionsDbAdapter.getInstance () ; 
		+   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
		+   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; -   mAccountsDbAdapter = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; 
		+   mAccountsDbAdapter  = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; -   mAccountsDbAdapter = AccountsDbAdapter.getInstance () ; 
		+   mAccountsDbAdapter  = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; -   mTransactionsDbAdapter = TransactionsDbAdapter.getInstance () ; 
		+   mAccountsDbAdapter  = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
		+   mAccountsDbAdapter  = new AccountsDbAdapter ( db , mTransactionsDbAdapter ) ; -   mTransactionsDbAdapter = new TransactionsDbAdapter ( db , mSplitsDbAdapter ) ; 
		+   mPricesDbAdapter  = new PricesDbAdapter ( db ) ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mPricesDbAdapter  = new PricesDbAdapter ( db ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
		+   mCommoditiesDbAdapter = new CommoditiesDbAdapter ( db ) ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mCommoditiesDbAdapter = new CommoditiesDbAdapter ( db ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
		+   mBudgetsDbAdapter  = new BudgetsDbAdapter ( db ) ; -   mSplitsDbAdapter = SplitsDbAdapter.getInstance () ; 
		+   mBudgetsDbAdapter  = new BudgetsDbAdapter ( db ) ; -   mSplitsDbAdapter = new SplitsDbAdapter ( db ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest_java
1
app/src/main/res/drawable/numeric_button_xml
app/src/main/res/xml/preference_fragment_headers_xml
app/src/main/res/values-zh-rTW/strings_xml
app/src/main/res/values-sw600dp/flags_xml
app/src/main/res/values-ru/strings_xml
app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.model.PeriodType ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.PeriodType ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.model.PeriodType ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.model.PeriodType ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.model.PeriodType ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.model.Recurrence ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
2
4
app/src/main/java/org/gnucash/android/export/ExportAsyncTask_java
11
10
		+  int autoCreate = cursor.getInt ( cursor.getColumnIndexOrThrow ( ScheduledActionEntry.COLUMN_AUTO_CREATE ) ) ; -  event.setPeriod ( period ) ; 
		+  int autoNotify = cursor.getInt ( cursor.getColumnIndexOrThrow ( ScheduledActionEntry.COLUMN_AUTO_NOTIFY ) ) ; -  event.setPeriod ( period ) ; 
		+  String recurrenceUID = cursor.getString ( cursor.getColumnIndexOrThrow ( ScheduledActionEntry.COLUMN_RECURRENCE_UID ) ) ; -  event.setPeriod ( period ) ; 
13
12
15
		+ import org.gnucash.android.db.DatabaseSchema ; - import org.gnucash.android.model.AccountType ; 
14
		+ package org.gnucash.android.db.adapter ; - package org.gnucash.android.db ; 
17
	+  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; 
	+  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; 
	+  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; -  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; 
		+  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; 
		+  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; 
		+  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; 
		+  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; -  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; 
		+  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; -  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; 
		+  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; -  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; 
		+  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindString ( 9 , String.valueOf ( split.getReconcileState () ) ) ; -  mReplaceStatement.bindLong ( 4 , split.getValue () .getNumerator () ) ; 
		+  mReplaceStatement.bindString ( 9 , String.valueOf ( split.getReconcileState () ) ) ; -  mReplaceStatement.bindLong ( 6 , split.getQuantity () .getNumerator () ) ; 
		+  mReplaceStatement.bindString ( 9 , String.valueOf ( split.getReconcileState () ) ) ; -  mReplaceStatement.bindLong ( 7 , split.getQuantity () .getDenominator () ) ; 
		+  mReplaceStatement.bindString ( 9 , String.valueOf ( split.getReconcileState () ) ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindString ( 9 , String.valueOf ( split.getReconcileState () ) ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindString ( 10 , split.getReconcileDate () .toString () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindString ( 10 , split.getReconcileDate () .toString () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindString ( 11 , split.getAccountUID () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindString ( 11 , split.getAccountUID () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
		+  mReplaceStatement.bindString ( 12 , split.getTransactionUID () ) ; -  mReplaceStatement.bindString ( 9 , split.getAccountUID () ) ; 
		+  mReplaceStatement.bindString ( 12 , split.getTransactionUID () ) ; -  mReplaceStatement.bindString ( 10 , split.getTransactionUID () ) ; 
16
	+    + SplitEntry.COLUMN_TRANSACTION_UID + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; -    + SplitEntry.COLUMN_TRANSACTION_UID + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; 
19
18
21
	+    Log.d ( LOG_TAG , String.format ( " %d splits inserted in %d ns " , nSplits , System.nanoTime () - start ) ) ; -    Log.d ( LOG_TAG , String.format ( " %d splits inserted in %d ns " , splitList.size () , System.nanoTime () - start ) ) ; 
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
2
5
4
7
	+    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
	+    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
	+    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
	+    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; -    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) " ) ; 
		+    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_RECURRENCE_UID + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_RECURRENCE_UID + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
		+    + ScheduledActionEntry.COLUMN_AUTO_CREATE  + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_AUTO_CREATE  + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
		+    + ScheduledActionEntry.COLUMN_AUTO_NOTIFY  + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_AUTO_NOTIFY  + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
		+    + ScheduledActionEntry.COLUMN_ADVANCE_CREATION + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_ADVANCE_CREATION + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
		+    + ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
		+    + ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID + " , " -    + ScheduledActionEntry.COLUMN_PERIOD  + " , " 
		+    + ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID + " , " -    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , " 
6
		+  extractBaseModelAttributes ( contentValues , scheduledAction ) ; -  populateBaseModelAttributes ( contentValues , scheduledAction ) ; 
9
20
		+ package org.gnucash.android.db.adapter ; - package org.gnucash.android.db ; 
8
app/src/main/java/org/gnucash/android/ui/settings/BookListFragment_java
1
3
2
4
app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity_java
1
app/src/test/java/org/gnucash/android/test/unit/model/SplitTest_java
11
	+ List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; - List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
	+ assertThat ( TRANSACTION_NAME ) .isEqualTo ( transaction.getDescription () ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
	+ Date trxDate = new Date ( transaction.getTimeMillis () ) ; - Date trxDate = new Date ( trx.getTimeMillis () ) ; 
		+ Transaction transaction = transactions.get ( 0 ) ; - Transaction trx = transactions.get ( 0 ) ; 
		+ Split baseSplit = transaction.getSplits ( TRANSACTIONS_ACCOUNT_UID ) .get ( 0 ) ; - Transaction trx = transactions.get ( 0 ) ; 
		+ Money expectedAmount = new Money ( TRANSACTION_AMOUNT , CURRENCY_CODE ) ; - Date trxDate = new Date ( trx.getTimeMillis () ) ; 
		+ assertThat ( baseSplit.getValue () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( baseSplit.getQuantity () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( baseSplit.getType () ) .isEqualTo ( TransactionType.DEBIT ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ Split transferSplit = transaction.getSplits ( TRANSFER_ACCOUNT_UID ) .get ( 0 ) ; - Transaction trx = transactions.get ( 0 ) ; 
		+ assertThat ( transferSplit.getValue () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( transferSplit.getQuantity () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( transferSplit.getType () ) .isEqualTo ( TransactionType.CREDIT ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
10
	+ List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; - List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
	+ assertThat ( trx.getBalance ( TRANSACTIONS_ACCOUNT_UID ) .isNegative () ) .isTrue () ; - assertThat ( trx.getBalance ( DUMMY_ACCOUNT_UID ) .isNegative () ) .isTrue () ; 
13
	+ assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ) .hasSize ( 0 ) ; - assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ) .hasSize ( 0 ) ; 
12
		+ long id = mAccountsDbAdapter.getID ( TRANSACTIONS_ACCOUNT_UID ) ; - long id = mAccountsDbAdapter.getID ( DUMMY_ACCOUNT_UID ) ; 
15
	+ assertThat ( mAccountsDbAdapter.getAccountBalance ( TRANSACTIONS_ACCOUNT_UID ) ) .isEqualTo ( Money.createZeroInstance ( CURRENCY_CODE ) ) ; - assertThat ( mAccountsDbAdapter.getAccountBalance ( DUMMY_ACCOUNT_UID ) ) .isEqualTo ( Money.createZeroInstance ( CURRENCY_CODE ) ) ; 
14
	+ onView ( withSpinnerText ( TRANSACTIONS_ACCOUNT_NAME ) ) .perform ( click () ) ; - onView ( withSpinnerText ( DUMMY_ACCOUNT_NAME ) ) .perform ( click () ) ; 
17
16
	+ assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ) .hasSize ( 1 ) ; - assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ) .hasSize ( 1 ) ; 
	+ List < Transaction > dummyAccountTrns = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; - List < Transaction > dummyAccountTrns = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
1
3
2
		+  intent.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , ( ArrayList < Split > ) extractSplitsFromView () ) ; -    splitStrings.add ( split.toCsv () ) ; 
		+  intent.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , ( ArrayList < Split > ) extractSplitsFromView () ) ; -   intent.putStringArrayListExtra ( UxArgument.SPLIT_LIST , splitStrings ) ; 
5
4
7
		+ Money balance = transaction.getBalance ( TRANSACTIONS_ACCOUNT_UID ) ; - Money balance = transaction.getBalance ( DUMMY_ACCOUNT_UID ) ; 
6
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   List < String > splits = data.getStringArrayListExtra ( UxArgument.SPLIT_LIST ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -    splitList.add ( Split.parseSplit ( splitCsv ) ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   List < String > removedSplits = data.getStringArrayListExtra ( UxArgument.REMOVED_SPLITS ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   setSplitList ( splitList , removedSplits ) ; 
9
		+ childAccount.setParentUID ( TRANSACTIONS_ACCOUNT_UID ) ; - childAccount.setParentUID ( DUMMY_ACCOUNT_UID ) ; 
		+ mAccountsDbAdapter.updateRecord ( TRANSACTIONS_ACCOUNT_UID , contentValues ) ; - mAccountsDbAdapter.updateRecord ( DUMMY_ACCOUNT_UID , contentValues ) ; 
8
	+  List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; -  List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
app/src/test/java/org/gnucash/android/test/unit/testutil/GnucashTestRunner_java
1
gradle/wrapper/gradle-wrapper_properties
1
3
2
app/src/main/java/org/gnucash/android/export/ofx/OfxExporter_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
		+ onView ( withId ( R.id.drawer_layout ) ) .perform ( DrawerActions.open () ) ; - DrawerActions.openDrawer ( R.id.drawer_layout ) ; 
2
		+ onView ( withId ( R.id.drawer_layout ) ) .perform ( DrawerActions.open () ) ; - DrawerActions.openDrawer ( R.id.drawer_layout ) ; 
5
	+ assertThat ( action.getRecurrence () .getPeriodType () ) .isEqualTo ( PeriodType.WEEK ) ; - assertThat ( action.getPeriodType () ) .isEqualTo ( PeriodType.WEEK ) ; 
4
	+ onView ( withText ( " OK " ) ) .perform ( click () ) ; - onView ( withText ( " Done " ) ) .perform ( click () ) ; 
app/src/main/res/layout/toolbar_with_spinner_xml
app/src/main/java/org/gnucash/android/ui/common/FormActivity_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.ui.budget.BudgetFormFragment ; - import org.gnucash.android.db.AccountsDbAdapter ; 
3
2
	+  public enum FormType { ACCOUNT , TRANSACTION , EXPORT , SPLIT_EDITOR , BUDGET } -  public enum FormType { ACCOUNT , TRANSACTION , EXPORT , SPLIT_EDITOR } 
4
app/src/main/res/layout/fragment_budget_amount_editor_xml
app/src/main/java/org/gnucash/android/ui/util/CursorRecyclerAdapter_java
10
1
	+ * @return Returns the previously set Cursor , or null if there was not one. - * @return Returns the previously set Cursor , or null if there wasa not one. 
3
2
5
4
7
		+ default: -   default: 
6
9
8
	+ .inflate ( layoutRes , parent , false ) ; - .inflate ( R.layout.cardview_transaction , parent , false ) ; 
app/src/main/res/layout/cardview_account_xml
app/src/main/java/org/gnucash/android/ui/util/RecurrenceViewClickListener_java
1
app/src/main/res/menu/budget_actions_xml
app/src/main/res/layout/cardview_compact_transaction_xml
app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest_java
1
3
2
	+  return Exporter.getBackupFolderPath () + buildExportFilename ( ExportFormat.XML ) + " .zip " ; -  return BACKUP_FOLDER_PATH + buildExportFilename ( ExportFormat.XML ) + " .zip " ; 
		+ * @see #getBackupFolderPath () - * @see #BACKUP_FOLDER_PATH 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
		+  RecurrencePickerDialogFragment.OnRecurrenceSetListener , OnTransferFundsListener { -  CalendarDatePickerDialog.OnDateSetListener , RadialTimePickerDialog.OnTimeSetListener , 
		+  RecurrencePickerDialogFragment.OnRecurrenceSetListener , OnTransferFundsListener { -  RecurrencePickerDialog.OnRecurrenceSetListener , OnTransferFundsListener { 
3
		+  int position = mAccountCursorAdapter.getPosition ( mAccountsDbAdapter.getUID ( accountId ) ) ; -     mTransferAccountSpinner.setSelection ( position ) ; 
		+   mTransferAccountSpinner.setSelection ( position ) ; -     mTransferAccountSpinner.setSelection ( position ) ; 
2
		+ private QualifiedAccountNameCursorAdapter mAccountCursorAdapter ; - private SimpleCursorAdapter mCursorAdapter ; 
app/src/main/res/layout/account_spinner_dropdown_item_xml
app/src/main/res/layout/fragment_budget_form_xml
app/src/main/java/org/gnucash/android/receivers/AccountCreator_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
app/src/main/res/menu/budget_context_menu_xml
app/src/main/res/layout/cardview_budget_xml
app/src/main/res/values-af-rZA/strings_xml
app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter_java
1
app/src/main/java/org/gnucash/android/model/ScheduledAction_java
10
1
		+ import org.joda.time.LocalDate ; - import org.gnucash.android.ui.util.RecurrenceParser ; 
		+ import org.joda.time.LocalDate ; - import org.joda.time.format.DateTimeFormat ; 
		+ import org.joda.time.LocalDate ; - import org.joda.time.format.DateTimeFormatter ; 
		+ import org.joda.time.LocalDate ; - import java.io.IOException ; 
		+ import java.sql.Timestamp ; - import org.gnucash.android.ui.util.RecurrenceParser ; 
		+ import java.sql.Timestamp ; - import org.joda.time.format.DateTimeFormat ; 
		+ import java.sql.Timestamp ; - import org.joda.time.format.DateTimeFormatter ; 
		+ import java.sql.Timestamp ; - import java.io.IOException ; 
3
	+  private boolean mAutoCreate = true ; -  private boolean autoCreate = true ; 
		+  private boolean mAutoNotify = false ; -  private boolean autoCreate = true ; 
2
		+  public enum ActionType { TRANSACTION , BACKUP } -  public enum ActionType { TRANSACTION , BACKUP 
5
4
7
6
9
	+  StringBuilder ruleBuilder = new StringBuilder ( mRecurrence.getRuleString () ) ; -  StringBuilder ruleBuilder = new StringBuilder () ; 
		+  StringBuilder ruleBuilder = new StringBuilder ( mRecurrence.getRuleString () ) ; -  PeriodType periodType = getPeriodType () ; 
8
		+  StringBuilder ruleBuilder = new StringBuilder ( mRecurrence.getRepeatString () ) ; -  PeriodType periodType = getPeriodType () ; 
		+  StringBuilder ruleBuilder = new StringBuilder ( mRecurrence.getRepeatString () ) ; -  StringBuilder ruleBuilder = new StringBuilder ( periodType.getFrequencyRepeatString () ) ; 
app/src/main/java/org/gnucash/android/ui/settings/PreferenceHeadersFragment_java
1
app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/res/values-pt/strings_xml
CHANGELOG_md
1
3
2
5
	+ < string name = " owncloud_pref " > ownCloud < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " owncloud_dir_invalid " > \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_pref " > owncloud < /string > 
		+ < string name = " owncloud_pref " > ownCloud < /string > - < string name = " password " > Password < /string > 
		+ < string name = " owncloud_server_invalid " > OC < /string > - < string name = " password " > Password < /string > 
		+ < string name = " owncloud_server_invalid " > OC < /string > - < string name = " owncloud_pref " > owncloud < /string > 
		+ < string name = " owncloud_user_invalid " > OC / < /string > - < string name = " password " > Password < /string > 
		+ < string name = " owncloud_user_invalid " > OC / < /string > - < string name = " owncloud_pref " > owncloud < /string > 
		+ < string name = " owncloud_dir_invalid " > \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " username " > User Name < /string > 
		+ < string name = " owncloud_dir_invalid " > \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " password " > Password < /string > 
		+ < string name = " owncloud_dir_invalid " > \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_server_invalid " > OC server not found < /string > 
		+ < string name = " owncloud_dir_invalid " > \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_user_invalid " > OC username/password invalid < /string > 
		+ < string name = " owncloud_dir_invalid " > \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_server_ok " > OC server OK < /string > 
		+ < string name = " owncloud_dir_invalid " > \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_user_ok " > OC username/password OK < /string > 
		+ < string name = " owncloud_dir_invalid " > \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_dir_ok " > Dir name OK < /string > 
		+ < string name = " owncloud_server_ok " > OC < /string > - < string name = " password " > Password < /string > 
		+ < string name = " owncloud_server_ok " > OC < /string > - < string name = " owncloud_pref " > owncloud < /string > 
		+ < string name = " owncloud_user_ok " > OC / < /string > - < string name = " password " > Password < /string > 
		+ < string name = " owncloud_user_ok " > OC / < /string > - < string name = " owncloud_pref " > owncloud < /string > 
4
7
6
	+ < string name = " menu_move_transaction " > ... < /string > - < string name = " menu_move_transaction " > Move&#8230 ; < /string > 
		+ < string name = " menu_move_transaction " > ... < /string > - < string name = " nav_menu_budgets " > Budgets < /string > 
		+ < string name = " menu_move_transaction " > ... < /string > - < string name = " title_budgets " > Budgets < /string > 
		+ < string name = " sample_exchange_rate " > 1 %1$s = x.xx %2$s < /string > - < string name = " menu_move_transaction " > Move&#8230 ; < /string > 
		+ < string name = " sample_exchange_rate " > 1 %1$s = x.xx %2$s < /string > - < string name = " nav_menu_budgets " > Budgets < /string > 
		+ < string name = " sample_exchange_rate " > 1 %1$s = x.xx %2$s < /string > - < string name = " title_cash_flow_report " > Cash Flow < /string > 
		+ < string name = " sample_exchange_rate " > 1 %1$s = x.xx %2$s < /string > - < string name = " title_budgets " > Budgets < /string > 
		+ < string name = " sample_exchange_rate " > 1 %1$s = x.xx %2$s < /string > - < string name = " error_invalid_exchange_rate " > Invalid exchange rate < /string > 
		+ < string name = " sample_exchange_rate " > 1 %1$s = x.xx %2$s < /string > - < string name = " error_invalid_amount " > Invalid amount < /string > 
8
app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment_java
1
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.PricesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.PricesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
2
app/src/main/java/org/gnucash/android/ui/settings/AppCompatPreferenceActivity_java
1
3
2
	+ public class AccountPreferencesFragment extends PreferenceFragmentCompat implements - public class AccountPreferencesFragment extends PreferenceFragment { 
	+  ActionBar actionBar = ( ( AppCompatActivity ) getActivity () ) .getSupportActionBar () ; -  ActionBar actionBar = ( ( AppCompatPreferenceActivity ) getActivity () ) .getSupportActionBar () ; 
		+ public class AccountPreferencesFragment extends PreferenceFragmentCompat implements -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+ public class AccountPreferencesFragment extends PreferenceFragmentCompat implements -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
		+  Preference.OnPreferenceChangeListener , Preference.OnPreferenceClickListener { -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+  Preference.OnPreferenceChangeListener , Preference.OnPreferenceClickListener { -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
		+  public void onCreatePreferences ( Bundle bundle , String s ) { -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+  public void onCreatePreferences ( Bundle bundle , String s ) { -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
		+  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
		+  getPreferenceManager () .setSharedPreferencesName ( BooksDbAdapter.getInstance () .getActiveBookUID () ) ; -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+  getPreferenceManager () .setSharedPreferencesName ( BooksDbAdapter.getInstance () .getActiveBookUID () ) ; -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
		+  ActionBar actionBar = ( ( AppCompatActivity ) getActivity () ) .getSupportActionBar () ; -  mActivity = getActivity () ; 
		+  actionBar.setTitle ( R.string.title_account_preferences ) ; -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+  actionBar.setTitle ( R.string.title_account_preferences ) ; -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
5
4
6
app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment_java
1
app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/res/values/donottranslate_xml
app/src/main/res/values-ar-rSA/strings_xml
app/src/main/java/org/gnucash/android/ui/account/AccountsActivity_java
1
		+ import android.support.v7.app.AppCompatActivity ; - import android.support.v4.app.FragmentActivity ; 
3
	+  public static void openExportFragment ( AppCompatActivity activity ) { -  public static void openExportFragment ( FragmentActivity activity ) { 
2
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest_java
1
2
	+  return ( date.getMonthOfYear () - 1 ) / 3 + 1 ; -  return ( ( date.getMonthOfYear () - 1 ) / 3 + 1 ) ; 
app/src/main/java/org/gnucash/android/model/Commodity_java
1
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
app/src/main/java/org/gnucash/android/util/RecursiveMoveFiles_java
1
3
2
5
4
		+  boolean useCompactTrnView = PreferenceManager.getDefaultSharedPreferences ( context ) -  boolean useCompactTrnView = ! GnuCashApplication.isDoubleEntryEnabled () ; 
		+  SharedPreferences bookPrefs = context.getSharedPreferences ( rootAccountUID , Context.MODE_PRIVATE ) ; -  SharedPreferences bookPrefs = PreferenceActivity.getActiveBookSharedPreferences ( context ) ; 
app/src/main/java/org/gnucash/android/ui/common/UxArgument_java
1
app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter_java
11
	+ return fetchAllRecords ( null , null , null ) ; - return fetchAllRecords ( null , null ) ; 
	+  public Cursor fetchAllRecords ( String where , String[] whereArgs , String orderBy ) { -  public Cursor fetchAllRecords ( String where , String[] whereArgs ) { 
	+  return mDb.query ( mTableName , null , where , whereArgs , null , null , orderBy ) ; - return fetchAllRecords ( null , null ) ; 
	+  return mDb.query ( mTableName , null , where , whereArgs , null , null , orderBy ) ; -  return mDb.query ( mTableName , null , where , whereArgs , null , null , null ) ; 
10
		+  protected ContentValues extractBaseModelAttributes ( @NonNull ContentValues contentValues , @NonNull Model model ) { -  protected ContentValues populateBaseModelAttributes ( @NonNull ContentValues contentValues , @NonNull Model model ) { 
1
3
2
		+ package org.gnucash.android.db.adapter ; - package org.gnucash.android.db ; 
5
		+ package org.gnucash.android.db.adapter ; - package org.gnucash.android.db ; 
4
	+  Cursor cursor = fetchAllRecords ( CommodityEntry.COLUMN_MNEMONIC + " = ? " , new String[] { currencyCode } , null ) ; -  Cursor cursor = fetchAllRecords ( CommodityEntry.COLUMN_MNEMONIC + " = ? " , new String[] { currencyCode } ) ; 
7
6
9
		+  public abstract Model buildModelInstance ( @NonNull final Cursor cursor ) ; -  protected abstract Model buildModelInstance ( @NonNull final Cursor cursor ) ; 
8
app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity_java
1
app/src/main/res/layout/nav_drawer_header_xml
app/src/main/java/org/gnucash/android/util/AmountParser_java
1
3
	+    amount = AmountParser.parse ( mConvertedAmountInput.getText () .toString () ) ; -    amount = parseAmount ( mConvertedAmountInput.getText () .toString () ) ; 
2
	+    rate = AmountParser.parse ( mExchangeRateInput.getText () .toString () ) ; -    rate = parseAmount ( mExchangeRateInput.getText () .toString () ) ; 
4
app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter_java
1
	+  super ( db , PriceEntry.TABLE_NAME , new String[] { -  super ( db , PriceEntry.TABLE_NAME ) ; 
3
	+  public DatabaseAdapter ( SQLiteDatabase db , @NonNull String tableName , @NonNull String[] columns ) { -  public DatabaseAdapter ( SQLiteDatabase db , @NonNull String tableName ) { 
2
5
	+  public long bulkAddRecords ( @NonNull List < Model > modelList ) { -  public long bulkAddRecords ( @NonNull List < Model > modelList ) { 
	+  public long bulkAddRecords ( @NonNull List < Model > modelList , UpdateMethod updateMethod ) { -  public long bulkAddRecords ( @NonNull List < Model > modelList ) { 
4
7
6
		+   doAddModels ( modelList , updateMethod ) ; -    compileReplaceStatement ( model ) .execute () ; 
		+   doAddModels ( modelList , updateMethod ) ; -    nRow+ + ; 
app/src/main/res/values-cs-rCZ/strings_xml
app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter_java
11
		+    ScheduledActionEntry.COLUMN_TYPE + " = ? " , new String[] { ScheduledAction.ActionType.TRANSACTION.name () } , null ) ; -    ScheduledActionEntry.COLUMN_TYPE + " = ? " , new String[] { ScheduledAction.ActionType.TRANSACTION.name () } ) ; 
10
		+   xmlSerializer.text ( " n " ) ; -   xmlSerializer.text ( " n " ) ; 
13
	+   xmlSerializer.text ( scheduledAction.isEnabled () ? " y " : " n " ) ; -   xmlSerializer.text ( enabled ? " y " : " n " ) ; 
	+   xmlSerializer.text ( scheduledAction.shouldAutoCreate () ? " y " : " n " ) ; -   xmlSerializer.text ( enabled ? " y " : " n " ) ; 
	+   xmlSerializer.text ( scheduledAction.shouldAutoNotify () ? " y " : " n " ) ; -   xmlSerializer.text ( enabled ? " y " : " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.isEnabled () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.isEnabled () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.shouldAutoCreate () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.shouldAutoCreate () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.shouldAutoNotify () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
		+   xmlSerializer.text ( scheduledAction.shouldAutoNotify () ? " y " : " n " ) ; -   xmlSerializer.text ( " n " ) ; 
12
15
	+  private void exportCommodities ( XmlSerializer xmlSerializer , List < Currency > currencies ) throws IOException { -  private void exportCommodity ( XmlSerializer xmlSerializer , List < Currency > currencies ) throws IOException { 
		+   xmlSerializer.attribute ( null , GncXmlHelper.ATTR_KEY_VERSION , GncXmlHelper.BOOK_VERSION ) ; -   xmlSerializer.attribute ( null , GncXmlHelper.ATTR_KEY_VERSION , " 2.0.0 " ) ; 
14
17
	+    " split " , " trn " , " ts " , " sx " , " bgt " , " recurrence " } ; -    " split " , " trn " , " ts " , " sx " , " recurrence " } ; 
16
19
18
		+   exportCommodities ( xmlSerializer , currencies ) ; -   exportCommodity ( xmlSerializer , currencies ) ; 
1
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.RecurrenceDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
2
5
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_SLOTS ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACT_SLOTS ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_SLOTS ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACT_SLOTS ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_SLOTS ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACT_SLOTS ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_SLOTS ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACT_SLOTS ) ; 
4
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
7
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
6
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_NAME ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.endTag ( null , GncXmlHelper.TAG_ACCT_TYPE ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_NAME ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.endTag ( null , GncXmlHelper.TAG_TYPE ) ; 
		+   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCT_COMMODITY ) ; -   xmlSerializer.startTag ( null , GncXmlHelper.TAG_ACCOUNT_COMMODITY ) ; 
9
8
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
app/src/main/res/values-nb/strings_xml
app/src/main/res/values-ca-rES/strings_xml
app/src/main/res/values/colors_xml
app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter_java
1
	+  super ( db , CommodityEntry.TABLE_NAME , new String[] { -  super ( db , CommodityEntry.TABLE_NAME ) ; 
3
	+ ScheduledActionDbAdapter scheduledactionDbAdapter = new ScheduledActionDbAdapter ( mDb , new RecurrenceDbAdapter ( mDb ) ) ; - ScheduledActionDbAdapter scheduledactionDbAdapter = new ScheduledActionDbAdapter ( mDb ) ; 
2
app/src/main/res/values-fr/strings_xml
app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper_java
1
3
	+  public static final String TAG_GNC_RECURRENCE  = " gnc:recurrence " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
	+  public static final String TAG_BUDGET_NUM_PERIODS  = " bgt:num- periods " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET    = " gnc:budget " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET_ID    = " bgt:id " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET_NAME   = " bgt:name " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET_DESCRIPTION  = " bgt:description " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET_RECURRENCE  = " bgt:recurrence " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
		+  public static final String TAG_BUDGET_SLOTS   = " bgt:slots " ; -  public static final String TAG_RECURRENCE   = " gnc:recurrence " ; 
2
4
app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment_java
1
		+  return R.string.title_cash_flow_report ; -  return R.string.title_line_chart ; 
3
	+  if ( mReportPeriodStart == - 1 && mReportPeriodEnd == - 1 ) { -  if ( mReportStartTime == - 1 && mReportEndTime == - 1 ) { 
	+   startDate = new LocalDate ( mReportPeriodStart ) .withDayOfMonth ( 1 ) ; -   startDate = new LocalDate ( mReportStartTime ) .withDayOfMonth ( 1 ) ; 
	+   startDate = new LocalDate ( mReportPeriodStart ) .withDayOfMonth ( 1 ) ; -   endDate = new LocalDate ( mReportEndTime ) .withDayOfMonth ( 1 ) ; 
	+   endDate = new LocalDate ( mReportPeriodEnd ) .withDayOfMonth ( 1 ) ; -   startDate = new LocalDate ( mReportStartTime ) .withDayOfMonth ( 1 ) ; 
	+   endDate = new LocalDate ( mReportPeriodEnd ) .withDayOfMonth ( 1 ) ; -   endDate = new LocalDate ( mReportEndTime ) .withDayOfMonth ( 1 ) ; 
2
5
	+  if ( mReportPeriodStart != - 1 && mReportPeriodEnd != - 1 ) { -  if ( mReportStartTime != - 1 && mReportEndTime != - 1 ) { 
	+  if ( mReportPeriodStart != - 1 && mReportPeriodEnd != - 1 ) { -   mEarliestTransactionTimestamp = mReportStartTime ; 
	+  if ( mReportPeriodStart != - 1 && mReportPeriodEnd != - 1 ) { -   mLatestTransactionTimestamp = mReportEndTime ; 
		+   mEarliestTransactionTimestamp = mReportPeriodStart ; -   mEarliestTransactionTimestamp = mReportStartTime ; 
		+   mEarliestTransactionTimestamp = mReportPeriodStart ; -   mLatestTransactionTimestamp = mReportEndTime ; 
		+   mLatestTransactionTimestamp = mReportPeriodEnd ; -   mEarliestTransactionTimestamp = mReportStartTime ; 
		+   mLatestTransactionTimestamp = mReportPeriodEnd ; -   mLatestTransactionTimestamp = mReportEndTime ; 
4
	+  if ( mReportPeriodStart == - 1 && mReportPeriodEnd == - 1 ) { -  if ( mReportStartTime == - 1 && mReportEndTime == - 1 ) { 
		+   earliest = new LocalDateTime ( mReportPeriodStart ) ; -   earliest = new LocalDateTime ( mReportStartTime ) ; 
		+   earliest = new LocalDateTime ( mReportPeriodStart ) ; -   latest = new LocalDateTime ( mReportEndTime ) ; 
		+   latest = new LocalDateTime ( mReportPeriodEnd ) ; -   earliest = new LocalDateTime ( mReportStartTime ) ; 
		+   latest = new LocalDateTime ( mReportPeriodEnd ) ; -   latest = new LocalDateTime ( mReportEndTime ) ; 
6
	+  if ( mReportPeriodStart != start  |  |  mReportPeriodEnd != end ) { -  if ( mReportStartTime != start  |  |  mReportEndTime != end ) { 
		+  if ( mReportPeriodStart != start  |  |  mReportPeriodEnd != end ) { -   mReportStartTime = start ; 
		+  if ( mReportPeriodStart != start  |  |  mReportPeriodEnd != end ) { -   mReportEndTime = end ; 
		+   mReportPeriodStart = start ; -   mReportStartTime = start ; 
		+   mReportPeriodEnd = end ; -   mReportEndTime = end ; 
app/src/main/java/org/gnucash/android/db/BookDbHelper_java
1
3
2
5
4
app/src/main/res/values-ko-rKR/strings_xml
app/src/main/java/org/gnucash/android/model/BudgetAmount_java
1
app/src/main/java/org/gnucash/android/model/PeriodType_java
1
3
2
app/proguard-rules_pro
1
2
	+   String msg = " Error parsing amount string " + getText () + " from CalculatorEditText " ; -   String msg = " Error parsing amount string " + amountString + " from CalculatorEditText " ; 
		+  } catch ( ParseException e ) { -  } catch ( NumberFormatException e ) { 
		+   String msg = " Error parsing amount string " + getText () + " from CalculatorEditText " ; -  String amountString = getCleanString () ; 
app/src/main/res/values-nl-rNL/strings_xml
app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
CONTRIBUTORS
1
		+   case BaseDrawerActivity.REQUEST_OPEN_DOCUMENT: -   case BaseDrawerActivity.REQUEST_OPEN_DOCUMENT: 
2
app/src/main/java/org/gnucash/android/receivers/TransactionRecorder_java
1
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
2
	+   Split split = new Split ( amount.abs () , accountUID ) ; -   Split split = new Split ( amount.absolute () , accountUID ) ; 
app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment_java
1
		+ import org.gnucash.android.ui.report.barchart.StackedBarChartFragment ; - import org.gnucash.android.ui.report.barchart.CashFlowBarChartFragment ; 
3
2
	+    fragment = new StackedBarChartFragment () ; -    fragment = new CashFlowBarChartFragment () ; 
5
		+    DatabaseSchema.BookEntry.COLUMN_MODIFIED_AT + " DESC " ) ; -    DatabaseSchema.BookEntry.COLUMN_MODIFIED_AT + " ASC " ) ; 
4
app/src/main/res/values-el-rGR/strings_xml
app/src/main/res/values-fi-rFI/strings_xml
app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest_java
1
app/src/main/res/xml-v11/fragment_transaction_preferences_xml
app/src/test/java/org/gnucash/android/test/unit/db/BudgetsDbAdapterTest_java
1
app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity_java
1
3
2
scripts/adb_all_bat
1
app/src/main/java/org/gnucash/android/importer/CommoditiesXmlHandler_java
1
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
app/src/main/java/org/gnucash/android/ui/budget/BudgetAmountEditorFragment_java
1
2
app/src/main/res/values-no-rNO/strings_xml
app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment_java
1
app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter_java
1
app/src/main/java/org/gnucash/android/model/Account_java
1
app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment_java
1
3
	+  String selectedText = String.format ( BaseReportFragment.SELECTED_VALUE_PATTERN , DINING_EXPENSE_ACCOUNT_NAME , TRANSACTION_AMOUNT , percent ) ; -  String selectedText = String.format ( PieChartFragment.SELECTED_VALUE_PATTERN , DINING_EXPENSE_ACCOUNT_NAME , TRANSACTION_AMOUNT , percent ) ; 
2
app/src/main/res/values-uk-rUA/strings_xml
app/src/main/res/layout/fragment_budget_list_xml
app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter_java
1
	+  super ( db , TransactionEntry.TABLE_NAME , new String[] { -  super ( db , TransactionEntry.TABLE_NAME ) ; 
app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment_java
11
10
13
12
		+  mChart.notifyDataSetChanged () ; -  mChart.notifyDataSetChanged () ; 
		+  mChart.highlightValues ( null ) ; -  mChart.highlightValues ( null ) ; 
		+   mSelectedValueTextView.setText ( R.string.label_chart_no_data ) ; -  mChart.notifyDataSetChanged () ; 
		+   mSelectedValueTextView.setText ( R.string.label_chart_no_data ) ; -  selectedValueTextView.setText ( " " ) ; 
14
	+  mSelectedValueTextView.setText ( String.format ( SELECTED_VALUE_PATTERN , label.trim () , value , value / sum * 100 ) ) ; -  selectedValueTextView.setText ( String.format ( SELECTED_VALUE_PATTERN , label.trim () , value , value / sum * 100 ) ) ; 
		+  mSelectedValueTextView.setText ( String.format ( SELECTED_VALUE_PATTERN , label.trim () , value , value / sum * 100 ) ) ; -  selectedValueTextView.setText ( R.string.label_select_bar_to_view_details ) ; 
1
3
2
5
		+ package org.gnucash.android.ui.report.barchart ; - package org.gnucash.android.ui.report ; 
4
7
6
		+ import org.gnucash.android.ui.report.BaseReportFragment ; - import com.github.mikephil.charting.listener.OnChartValueSelectedListener ; 
		+ import org.gnucash.android.ui.report.BaseReportFragment ; - import org.gnucash.android.app.GnuCashApplication ; 
		+ import org.gnucash.android.ui.report.BaseReportFragment ; - import org.joda.time.Months ; 
		+ import org.gnucash.android.ui.report.BaseReportFragment ; - import org.joda.time.Years ; 
		+ import org.gnucash.android.ui.report.BaseReportFragment ; - import java.util.Currency ; 
		+ import org.gnucash.android.ui.report.ReportType ; - import com.github.mikephil.charting.listener.OnChartValueSelectedListener ; 
		+ import org.gnucash.android.ui.report.ReportType ; - import org.gnucash.android.app.GnuCashApplication ; 
		+ import org.gnucash.android.ui.report.ReportType ; - import org.joda.time.Months ; 
		+ import org.gnucash.android.ui.report.ReportType ; - import org.joda.time.Years ; 
		+ import org.gnucash.android.ui.report.ReportType ; - import java.util.Currency ; 
9
8
app/src/main/res/values-tr-rTR/strings_xml
app/src/main/java/org/gnucash/android/model/Price_java
11
	+ < string name = " title_manage_books " > Gerenciar livros < /string > - < string name = " title_manage_books " > Manage Books < /string > 
	+ < string name = " select_chart_to_view_details " > Selecione qualquer parte do grfico para ver os detalhes < /string > - < string name = " title_manage_books " > Manage Books < /string > 
	+ < string name = " msg_all_book_data_will_be_deleted " > Todas as contas e transaes neste livro sero excludas ! < /string > - < string name = " title_manage_books " > Manage Books < /string > 
	+ < string name = " btn_delete_book " > Apagar livro < /string > - < string name = " title_manage_books " > Manage Books < /string > 
	+ < string name = " label_last_export_time " > ltima exportao: < /string > - < string name = " title_manage_books " > Manage Books < /string > 
	+ < string name = " menu_title_enable_sync " > Ativar a Sincronizao < /string > - < string name = " title_manage_books " > Manage Books < /string > 
	+ < string name = " toast_transaction_has_no_splits_and_cannot_open " > A transao selecionada no tem divises e no pode ser aberta < /string > - < string name = " title_manage_books " > Manage Books < /string > 
	+ < string name = " label_split_count " > %1$d divises < /string > - < string name = " label_split_count " > %1$d splits < /string > 
		+ < string name = " title_manage_books " > Gerenciar livros < /string > - < string name = " btn_delete_book " > Delete Book < /string > 
		+ < string name = " title_manage_books " > Gerenciar livros < /string > - < string name = " label_last_export_time " > Last Exported: < /string > 
		+ < string name = " title_manage_books " > Gerenciar livros < /string > - < string name = " menu_title_enable_sync " > Enable Sync < /string > 
		+ < string name = " title_manage_books " > Gerenciar livros < /string > - < string name = " label_split_count " > %1$d splits < /string > 
		+ < string name = " title_manage_books " > Gerenciar livros < /string > - < string name = " label_inside_account_with_name " > in %1$s < /string > 
		+ < string name = " select_chart_to_view_details " > Selecione qualquer parte do grfico para ver os detalhes < /string > - < string name = " btn_delete_book " > Delete Book < /string > 
		+ < string name = " select_chart_to_view_details " > Selecione qualquer parte do grfico para ver os detalhes < /string > - < string name = " label_last_export_time " > Last Exported: < /string > 
		+ < string name = " select_chart_to_view_details " > Selecione qualquer parte do grfico para ver os detalhes < /string > - < string name = " menu_title_enable_sync " > Enable Sync < /string > 
		+ < string name = " select_chart_to_view_details " > Selecione qualquer parte do grfico para ver os detalhes < /string > - < string name = " label_split_count " > %1$d splits < /string > 
		+ < string name = " select_chart_to_view_details " > Selecione qualquer parte do grfico para ver os detalhes < /string > - < string name = " label_inside_account_with_name " > in %1$s < /string > 
		+ < string name = " msg_all_book_data_will_be_deleted " > Todas as contas e transaes neste livro sero excludas ! < /string > - < string name = " btn_delete_book " > Delete Book < /string > 
		+ < string name = " msg_all_book_data_will_be_deleted " > Todas as contas e transaes neste livro sero excludas ! < /string > - < string name = " label_last_export_time " > Last Exported: < /string > 
		+ < string name = " msg_all_book_data_will_be_deleted " > Todas as contas e transaes neste livro sero excludas ! < /string > - < string name = " menu_title_enable_sync " > Enable Sync < /string > 
		+ < string name = " msg_all_book_data_will_be_deleted " > Todas as contas e transaes neste livro sero excludas ! < /string > - < string name = " label_split_count " > %1$d splits < /string > 
		+ < string name = " msg_all_book_data_will_be_deleted " > Todas as contas e transaes neste livro sero excludas ! < /string > - < string name = " label_inside_account_with_name " > in %1$s < /string > 
		+ < string name = " btn_delete_book " > Apagar livro < /string > - < string name = " btn_delete_book " > Delete Book < /string > 
		+ < string name = " btn_delete_book " > Apagar livro < /string > - < string name = " label_last_export_time " > Last Exported: < /string > 
		+ < string name = " btn_delete_book " > Apagar livro < /string > - < string name = " menu_title_enable_sync " > Enable Sync < /string > 
		+ < string name = " btn_delete_book " > Apagar livro < /string > - < string name = " label_split_count " > %1$d splits < /string > 
		+ < string name = " label_last_export_time " > ltima exportao: < /string > - < string name = " btn_delete_book " > Delete Book < /string > 
		+ < string name = " label_last_export_time " > ltima exportao: < /string > - < string name = " label_last_export_time " > Last Exported: < /string > 
		+ < string name = " label_last_export_time " > ltima exportao: < /string > - < string name = " menu_title_enable_sync " > Enable Sync < /string > 
		+ < string name = " label_last_export_time " > ltima exportao: < /string > - < string name = " label_split_count " > %1$d splits < /string > 
		+ < string name = " label_last_export_time " > ltima exportao: < /string > - < string name = " label_inside_account_with_name " > in %1$s < /string > 
		+ < string name = " menu_title_enable_sync " > Ativar a Sincronizao < /string > - < string name = " btn_delete_book " > Delete Book < /string > 
		+ < string name = " menu_title_enable_sync " > Ativar a Sincronizao < /string > - < string name = " label_last_export_time " > Last Exported: < /string > 
		+ < string name = " menu_title_enable_sync " > Ativar a Sincronizao < /string > - < string name = " menu_title_enable_sync " > Enable Sync < /string > 
		+ < string name = " menu_title_enable_sync " > Ativar a Sincronizao < /string > - < string name = " label_split_count " > %1$d splits < /string > 
		+ < string name = " toast_transaction_has_no_splits_and_cannot_open " > A transao selecionada no tem divises e no pode ser aberta < /string > - < string name = " btn_delete_book " > Delete Book < /string > 
		+ < string name = " toast_transaction_has_no_splits_and_cannot_open " > A transao selecionada no tem divises e no pode ser aberta < /string > - < string name = " label_last_export_time " > Last Exported: < /string > 
		+ < string name = " toast_transaction_has_no_splits_and_cannot_open " > A transao selecionada no tem divises e no pode ser aberta < /string > - < string name = " menu_title_enable_sync " > Enable Sync < /string > 
		+ < string name = " toast_transaction_has_no_splits_and_cannot_open " > A transao selecionada no tem divises e no pode ser aberta < /string > - < string name = " label_split_count " > %1$d splits < /string > 
		+ < string name = " toast_transaction_has_no_splits_and_cannot_open " > A transao selecionada no tem divises e no pode ser aberta < /string > - < string name = " label_inside_account_with_name " > in %1$s < /string > 
		+ < string name = " label_split_count " > %1$d divises < /string > - < string name = " title_manage_books " > Manage Books < /string > 
		+ < string name = " label_split_count " > %1$d divises < /string > - < string name = " btn_delete_book " > Delete Book < /string > 
		+ < string name = " label_split_count " > %1$d divises < /string > - < string name = " label_last_export_time " > Last Exported: < /string > 
		+ < string name = " label_split_count " > %1$d divises < /string > - < string name = " menu_title_enable_sync " > Enable Sync < /string > 
		+ < string name = " label_split_count " > %1$d divises < /string > - < string name = " label_inside_account_with_name " > in %1$s < /string > 
		+ < string name = " label_inside_account_with_name " > em %1$s < /string > - < string name = " title_manage_books " > Manage Books < /string > 
		+ < string name = " label_inside_account_with_name " > em %1$s < /string > - < string name = " btn_delete_book " > Delete Book < /string > 
		+ < string name = " label_inside_account_with_name " > em %1$s < /string > - < string name = " label_last_export_time " > Last Exported: < /string > 
		+ < string name = " label_inside_account_with_name " > em %1$s < /string > - < string name = " menu_title_enable_sync " > Enable Sync < /string > 
		+ < string name = " label_inside_account_with_name " > em %1$s < /string > - < string name = " label_split_count " > %1$d splits < /string > 
		+ < string name = " label_inside_account_with_name " > em %1$s < /string > - < string name = " label_inside_account_with_name " > in %1$s < /string > 
10
1
	+ < string name = " title_edit_transaction " > Editar Transao < /string > - < string name = " title_edit_transaction " > Editar Transaes < /string > 
	+ < string name = " title_selected " > %1$d selecionado < /string > - < string name = " title_selected " > %1$d seleccionado < /string > 
		+ < string name = " title_edit_transaction " > Editar Transao < /string > - < string name = " title_selected " > %1$d seleccionado < /string > 
		+ < string name = " title_selected " > %1$d selecionado < /string > - < string name = " title_edit_transaction " > Editar Transaes < /string > 
3
	+ < string name = " summary_default_export_format " > Formato de arquivo a ser usado por padro ao exportar transaes < /string > - < string name = " menu_export_transactions " > Exportar transaes < /string > 
		+ < string name = " menu_export_transactions " > Exportar transaes&#8230 ; < /string > - < string name = " menu_export_transactions " > Exportar transaes < /string > 
2
		+ < item > Enviar para&#8230 ; < /item > - < item > Send to&#8230 ; < /item > 
5
	+ < string name = " summary_save_opening_balances " > Permite salvar o saldo da conta atual ( antes de apagar as transaes ) como novo saldo de abertura aps a excluso das transaes - < string name = " summary_save_opening_balances " > Permite gravar o saldo da conta actual ( antes de apagar as transaes ) como novo saldo de abertura depois de apagadas as transaes 
4
		+ < item > ATIVO < /item > - < item > ACTIVO < /item > 
7
		+ < string name = " title_dropbox_sync_preference " > Habilitar o DropBox < /string > - < string name = " title_dropbox_sync_preference " > Enable DropBox < /string > 
		+ < string name = " title_dropbox_sync_preference " > Habilitar o DropBox < /string > - < string name = " title_owncloud_sync_preference " > Enable ownCloud < /string > 
		+ < string name = " title_owncloud_sync_preference " > Habilitar o ownCloud < /string > - < string name = " title_dropbox_sync_preference " > Enable DropBox < /string > 
		+ < string name = " title_owncloud_sync_preference " > Habilitar o ownCloud < /string > - < string name = " title_owncloud_sync_preference " > Enable ownCloud < /string > 
		+ < string name = " summary_dropbox_sync " > Habilitar a exportao para o DropBox < /string > - < string name = " title_dropbox_sync_preference " > Enable DropBox < /string > 
		+ < string name = " summary_dropbox_sync " > Habilitar a exportao para o DropBox < /string > - < string name = " title_owncloud_sync_preference " > Enable ownCloud < /string > 
		+ < string name = " summary_dropbox_sync " > Habilitar a exportao para o DropBox < /string > - < string name = " summary_dropbox_sync " > Enable exporting to DropBox < /string > 
		+ < string name = " summary_dropbox_sync " > Habilitar a exportao para o DropBox < /string > - < string name = " summary_owncloud_sync " > Enable exporting to ownCloud < /string > 
		+ < string name = " summary_owncloud_sync " > Habilitar a exportao para o ownCloud < /string > - < string name = " title_dropbox_sync_preference " > Enable DropBox < /string > 
		+ < string name = " summary_owncloud_sync " > Habilitar a exportao para o ownCloud < /string > - < string name = " title_owncloud_sync_preference " > Enable ownCloud < /string > 
		+ < string name = " summary_owncloud_sync " > Habilitar a exportao para o ownCloud < /string > - < string name = " summary_dropbox_sync " > Enable exporting to DropBox < /string > 
		+ < string name = " summary_owncloud_sync " > Habilitar a exportao para o ownCloud < /string > - < string name = " summary_owncloud_sync " > Enable exporting to ownCloud < /string > 
6
	+ < string name = " toast_chart_percentage_mode_total " > O percentual do valor selecionado em relao ao valor total < /string > - < string name = " toast_chart_percentage_mode_total " > A percentagem do valor seleccionado face ao valor total < /string > 
	+ < string name = " toast_chart_percentage_mode_current_bar " > O percentual do valor selecionado em relao ao valor da barra empilhada atual < /string > - < string name = " toast_chart_percentage_mode_total " > A percentagem do valor seleccionado face ao valor total < /string > 
	+ < string name = " toast_chart_percentage_mode_current_bar " > O percentual do valor selecionado em relao ao valor da barra empilhada atual < /string > - < string name = " toast_chart_percentage_mode_current_bar " > A percentagem do valor seleccionado face ao valor da barra actual < /string > 
9
	+ < string name = " username " > Nome do usurio < /string > - < string name = " username " > User Name < /string > 
	+ < string name = " username " > Nome do usurio < /string > - < string name = " password " > Password < /string > 
	+ < string name = " username " > Nome do usurio < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " password " > Senha < /string > - < string name = " password " > Password < /string > 
	+ < string name = " password " > Senha < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " owncloud_pref " > ownCloud < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " owncloud_server_invalid " > Servidor OC no encontrado < /string > - < string name = " password " > Password < /string > 
	+ < string name = " owncloud_server_invalid " > Servidor OC no encontrado < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " owncloud_server_invalid " > Servidor OC no encontrado < /string > - < string name = " owncloud_server_ok " > OC server OK < /string > 
	+ < string name = " owncloud_user_invalid " > Usurio/senha do OC invlido < /string > - < string name = " password " > Password < /string > 
	+ < string name = " owncloud_user_invalid " > Usurio/senha do OC invlido < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " owncloud_user_invalid " > Usurio/senha do OC invlido < /string > - < string name = " owncloud_user_invalid " > OC username/password invalid < /string > 
	+ < string name = " owncloud_user_invalid " > Usurio/senha do OC invlido < /string > - < string name = " owncloud_server_ok " > OC server OK < /string > 
	+ < string name = " owncloud_dir_invalid " > Caracteres invlidos: \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " username " > User Name < /string > 
	+ < string name = " owncloud_dir_invalid " > Caracteres invlidos: \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " password " > Password < /string > 
	+ < string name = " owncloud_dir_invalid " > Caracteres invlidos: \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " owncloud_dir_invalid " > Caracteres invlidos: \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_dir_invalid " > Invalid chars: \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > 
	+ < string name = " owncloud_server_ok " > Servidor OC OK < /string > - < string name = " password " > Password < /string > 
	+ < string name = " owncloud_server_ok " > Servidor OC OK < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " owncloud_server_ok " > Servidor OC OK < /string > - < string name = " owncloud_server_ok " > OC server OK < /string > 
	+ < string name = " owncloud_user_ok " > Usurio/senha do OC OK < /string > - < string name = " password " > Password < /string > 
	+ < string name = " owncloud_user_ok " > Usurio/senha do OC OK < /string > - < string name = " owncloud_pref " > owncloud < /string > 
	+ < string name = " owncloud_user_ok " > Usurio/senha do OC OK < /string > - < string name = " owncloud_server_ok " > OC server OK < /string > 
	+ < string name = " owncloud_user_ok " > Usurio/senha do OC OK < /string > - < string name = " owncloud_user_ok " > OC username/password OK < /string > 
	+ < string name = " owncloud_dir_ok " > Nome do diretrio OK < /string > - < string name = " password " > Password < /string > 
	+ < string name = " owncloud_dir_ok " > Nome do diretrio OK < /string > - < string name = " owncloud_pref " > owncloud < /string > 
		+ < string name = " username " > Nome do usurio < /string > - < string name = " owncloud_server_ok " > OC server OK < /string > 
		+ < string name = " username " > Nome do usurio < /string > - < string name = " owncloud_dir_ok " > Dir name OK < /string > 
		+ < string name = " owncloud_pref " > ownCloud < /string > - < string name = " password " > Password < /string > 
		+ < string name = " owncloud_server_invalid " > Servidor OC no encontrado < /string > - < string name = " username " > User Name < /string > 
		+ < string name = " owncloud_server_invalid " > Servidor OC no encontrado < /string > - < string name = " owncloud_server_invalid " > OC server not found < /string > 
		+ < string name = " owncloud_server_invalid " > Servidor OC no encontrado < /string > - < string name = " owncloud_user_invalid " > OC username/password invalid < /string > 
		+ < string name = " owncloud_server_invalid " > Servidor OC no encontrado < /string > - < string name = " owncloud_user_ok " > OC username/password OK < /string > 
		+ < string name = " owncloud_server_invalid " > Servidor OC no encontrado < /string > - < string name = " owncloud_dir_ok " > Dir name OK < /string > 
		+ < string name = " owncloud_user_invalid " > Usurio/senha do OC invlido < /string > - < string name = " username " > User Name < /string > 
		+ < string name = " owncloud_user_invalid " > Usurio/senha do OC invlido < /string > - < string name = " owncloud_server_invalid " > OC server not found < /string > 
		+ < string name = " owncloud_user_invalid " > Usurio/senha do OC invlido < /string > - < string name = " owncloud_user_ok " > OC username/password OK < /string > 
		+ < string name = " owncloud_user_invalid " > Usurio/senha do OC invlido < /string > - < string name = " owncloud_dir_ok " > Dir name OK < /string > 
		+ < string name = " owncloud_dir_invalid " > Caracteres invlidos: \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_server_invalid " > OC server not found < /string > 
		+ < string name = " owncloud_dir_invalid " > Caracteres invlidos: \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_user_invalid " > OC username/password invalid < /string > 
		+ < string name = " owncloud_dir_invalid " > Caracteres invlidos: \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_server_ok " > OC server OK < /string > 
		+ < string name = " owncloud_dir_invalid " > Caracteres invlidos: \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_user_ok " > OC username/password OK < /string > 
		+ < string name = " owncloud_dir_invalid " > Caracteres invlidos: \\ &lt ; &gt ; : \&quot ;  |  * ? < /string > - < string name = " owncloud_dir_ok " > Dir name OK < /string > 
		+ < string name = " owncloud_server_ok " > Servidor OC OK < /string > - < string name = " username " > User Name < /string > 
		+ < string name = " owncloud_server_ok " > Servidor OC OK < /string > - < string name = " owncloud_dir_ok " > Dir name OK < /string > 
		+ < string name = " owncloud_user_ok " > Usurio/senha do OC OK < /string > - < string name = " username " > User Name < /string > 
		+ < string name = " owncloud_user_ok " > Usurio/senha do OC OK < /string > - < string name = " owncloud_server_invalid " > OC server not found < /string > 
		+ < string name = " owncloud_user_ok " > Usurio/senha do OC OK < /string > - < string name = " owncloud_user_invalid " > OC username/password invalid < /string > 
		+ < string name = " owncloud_user_ok " > Usurio/senha do OC OK < /string > - < string name = " owncloud_dir_ok " > Dir name OK < /string > 
		+ < string name = " owncloud_dir_ok " > Nome do diretrio OK < /string > - < string name = " username " > User Name < /string > 
		+ < string name = " owncloud_dir_ok " > Nome do diretrio OK < /string > - < string name = " owncloud_server_invalid " > OC server not found < /string > 
		+ < string name = " owncloud_dir_ok " > Nome do diretrio OK < /string > - < string name = " owncloud_user_invalid " > OC username/password invalid < /string > 
		+ < string name = " owncloud_dir_ok " > Nome do diretrio OK < /string > - < string name = " owncloud_server_ok " > OC server OK < /string > 
		+ < string name = " owncloud_dir_ok " > Nome do diretrio OK < /string > - < string name = " owncloud_user_ok " > OC username/password OK < /string > 
		+ < string name = " owncloud_dir_ok " > Nome do diretrio OK < /string > - < string name = " owncloud_dir_ok " > Dir name OK < /string > 
8
	+ < string name = " title_google_drive_sync_pref " > Habilitar o Google Drive < /string > - < string name = " title_google_drive_sync_pref " > Enable Google Drive < /string > 
	+ < string name = " summary_google_drive_sync " > Habilitar a exportao para o Google Drive < /string > - < string name = " title_google_drive_sync_pref " > Enable Google Drive < /string > 
		+ < string name = " summary_google_drive_sync " > Habilitar a exportao para o Google Drive < /string > - < string name = " summary_google_drive_sync " > Enable exporting to Google Drive < /string > 
app/src/main/res/values-hu-rHU/strings_xml
app/src/main/java/org/gnucash/android/export/qif/QifExporter_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/java/org/gnucash/android/db/DatabaseSchema_java
1
	+  public static final int DATABASE_VERSION = 12 ; -  public static final int DATABASE_VERSION = 11 ; 
	+  public static final int DATABASE_VERSION = 12 ; -  public static final int SPLITS_DB_VERSION = 7 ; 
3
	+  public static final String COLUMN_TAG   = " tag " ; -  public static final String COLUMN_PERIOD   = " period " ; 
	+  public static final String COLUMN_TAG   = " tag " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_RECURRENCE_UID  = " recurrence_uid " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_RECURRENCE_UID  = " recurrence_uid " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_AUTO_CREATE  = " auto_create " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_AUTO_CREATE  = " auto_create " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_AUTO_NOTIFY  = " auto_notify " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_AUTO_NOTIFY  = " auto_notify " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_ADVANCE_CREATION = " adv_creation " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_ADVANCE_CREATION = " adv_creation " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_ADVANCE_NOTIFY  = " adv_notify " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_ADVANCE_NOTIFY  = " adv_notify " ; -  public static final String COLUMN_TAG   = " tag " ; 
		+  public static final String COLUMN_TEMPLATE_ACCT_UID = " template_act_uid " ; -  public static final String COLUMN_PERIOD   = " period " ; 
		+  public static final String COLUMN_TEMPLATE_ACCT_UID = " template_act_uid " ; -  public static final String COLUMN_TAG   = " tag " ; 
2
4
app/src/main/java/org/gnucash/android/util/PreferencesHelper_java
1
		+ import org.gnucash.android.ui.settings.PreferenceActivity ; - import android.preference.PreferenceManager ; 
3
	+  final String utcString = PreferenceActivity.getActiveBookSharedPreferences ( GnuCashApplication.getAppContext () ) -  final String utcString = PreferenceManager.getDefaultSharedPreferences ( GnuCashApplication.getAppContext () ) 
2
		+  public static final String PREFERENCE_LAST_EXPORT_TIME_KEY = " last_export_time " ; -  private static final String PREFERENCE_LAST_EXPORT_TIME_KEY = " last_export_time " ; 
app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment_java
1
2
		+     dialog.show () ; -     dialog.show () ; 
app/src/main/res/xml/fragment_about_preferences_xml
app/src/main/java/org/gnucash/android/ui/colorpicker/ColorPickerPalette_java
1
		+  assertNotNull ( ACCOUNTS_CURRENCY ) ; -  assertNotNull ( DUMMY_ACCOUNT_CURRENCY ) ; 
3
	+  String editedAccountName = " An Edited Account " ; -  String editedAccountName = " Edited Account " ; 
		+  assertThat ( mAccountsDbAdapter.getSubAccountCount ( SIMPLE_ACCOUNT_UID ) ) .isEqualTo ( 0 ) ; -  assertThat ( mAccountsDbAdapter.getSubAccountCount ( DUMMY_ACCOUNT_UID ) ) .isEqualTo ( 0 ) ; 
		+  onView ( allOf ( withParent ( hasDescendant ( withText ( SIMPLE_ACCOUNT_NAME ) ) ) , -  onView ( withId ( R.id.options_menu ) ) .perform ( click () ) ; 
2
	+  onView ( allOf ( withText ( SIMPLE_ACCOUNT_NAME ) , isDisplayed () ) ) .perform ( click () ) ; -  onView ( allOf ( withText ( DUMMY_ACCOUNT_NAME ) , isDisplayed () ) ) .perform ( click () ) ; 
5
		+  onView ( allOf ( withParent ( hasDescendant ( withText ( SIMPLE_ACCOUNT_NAME ) ) ) , -  onView ( withId ( R.id.options_menu ) ) .perform ( click () ) ; 
4
6
app/src/main/res/layout/activity_settings_xml
app/src/main/res/layout/account_spinner_item_xml
app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment_java
1
		+ import android.widget.ProgressBar ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import android.widget.ProgressBar ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BudgetsDbAdapter ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.Budget ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import org.gnucash.android.model.Money ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.model.Money ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
		+ import java.util.List ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import java.util.List ; - import org.gnucash.android.ui.util.widget.EmptyRecyclerView ; 
3
2
4
app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment_java
1
3
		+     && account.getCommodity () .equals ( mCommodity ) ) { -     && account.getCurrency () == mCurrency ) { 
2
5
		+  String code = mCommodity.getCurrencyCode () ; -  String code = mCurrency.getCurrencyCode () ; 
4
		+  String code = mCommodity.getCurrencyCode () ; -  String code = mCurrency.getCurrencyCode () ; 
app/src/main/res/values-pl-rPL/strings_xml
app/src/test/java/org/gnucash/android/test/unit/db/PriceDbAdapterTest_java
1
app/src/main/res/layout/toolbar_xml
app/src/main/res/values-es/strings_xml
app/src/main/java/org/gnucash/android/util/CommoditiesCursorAdapter_java
1
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import android.view.ContextMenu ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import java.util.Currency ; 
app/src/main/java/org/gnucash/android/service/SchedulerService_java
1
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.ScheduledActionDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.ScheduledActionDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
3
2
5
		+  int executionCount = scheduledAction.getExecutionCount () + 1 ; -  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT , scheduledAction.getExecutionCount () + 1 ) ; 
		+  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , lastRun ) ; -  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , System.currentTimeMillis () ) ; 
		+  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT , executionCount ) ; -  contentValues.put ( DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN , System.currentTimeMillis () ) ; 
4
		+    long transactionTime = scheduledAction.computeNextRunTime () ; -    long transactionTime ; 
app/src/main/res/menu/budget_amount_editor_actions_xml
app/src/main/res/layout/item_budget_amount_xml
app/src/main/res/menu/nav_drawer_menu_xml
app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest_java
1
app/src/main/java/org/gnucash/android/model/Transaction_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
3
		+    absAmount = split.getValue () .abs () ; -    absAmount = split.getValue () .absolute () ; 
		+    absAmount = split.getValue () .abs () ; -    absAmount = split.getQuantity () .absolute () ; 
		+    absAmount = split.getQuantity () .abs () ; -    absAmount = split.getValue () .absolute () ; 
		+    absAmount = split.getQuantity () .abs () ; -    absAmount = split.getQuantity () .absolute () ; 
2
	+   Money amount = split.getValue () .abs () ; -   Money amount = split.getValue () .absolute () ; 
app/src/main/res/values-es-rMX/strings_xml
app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest_java
1
app/src/main/java/org/gnucash/android/importer/GncXmlImporter_java
1
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
app/src/main/res/menu/transactions_list_actions_xml
app/src/main/res/layout/activity_transaction_detail_xml
app/src/main/java/org/gnucash/android/ui/report/ReportType_java
1
3
		+ import butterknife.OnClick ; - import butterknife.ButterKnife ; 
2
5
4
	+ public class ReportSummaryFragment extends BaseReportFragment { - public class ReportSummaryFragment extends Fragment { 
7
6
8
app/src/main/res/layout/list_item_2_lines_xml
app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser_java
1
2
app/src/main/res/values/themes_xml
app/src/main/res/layout/actionbar_progress_indicator_xml
app/src/main/java/org/gnucash/android/model/Book_java
1
3
2
app/src/main/res/xml-v11/fragment_account_preferences_xml
app/src/main/res/layout/toolbar_transactions_activity_xml
app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment_java
1
2
app/src/main/res/layout/fragment_export_form_xml
app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import android.widget.DatePicker ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import android.widget.DatePicker ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.SplitsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import android.widget.DatePicker ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.SplitsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.TransactionsDbAdapter ; - import org.gnucash.android.db.TransactionsDbAdapter ; 
2
app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment_java
11
	+    fragment = new CashFlowBarChartFragment () ; -    fragment = new BarChartFragment () ; 
10
13
12
		+    .replace ( R.id.fragment_container , fragment ) -  loadFragment ( fragment ) ; 
1
3
		+   ( ( ReportOptionsListener ) fragment ) .onTimeRangeUpdated ( mReportPeriodStart , mReportPeriodEnd ) ; -   ( ( ReportOptionsListener ) fragment ) .onTimeRangeUpdated ( mReportStartTime , mReportEndTime ) ; 
2
	+  public void updateReportTypeSpinner ( ReportType reportType , String reportName ) { -  public void updateReportTypeSpinner ( ReportType reportType ) { 
		+  public void updateReportTypeSpinner ( ReportType reportType , String reportName ) { -  mReportTypeSpinner.setOnItemSelectedListener ( mReportTypeSelectedListener ) ; 
		+  if ( reportType == mReportType ) -  mReportTypeSpinner.setOnItemSelectedListener ( mReportTypeSelectedListener ) ; 
		+  mSkipNextReportTypeSelectedRun = true ; -  mSkipNextReportTypeSelectedRun = true ; 
		+  mReportTypeSpinner.setOnItemSelectedListener ( mReportTypeSelectedListener ) ; -  mReportTypeSpinner.setOnItemSelectedListener ( mReportTypeSelectedListener ) ; 
		+  if ( mReportType == ReportType.NONE ) { -  mReportTypeSpinner.setOnItemSelectedListener ( mReportTypeSelectedListener ) ; 
5
		+  mReportPeriodStart = calendar.getTimeInMillis () ; -  mReportStartTime = calendar.getTimeInMillis () ; 
		+  mReportPeriodStart = calendar.getTimeInMillis () ; -  mReportStartTime = startDate.getTime () ; 
		+  mReportPeriodStart = calendar.getTimeInMillis () ; -  mReportEndTime = endDate.getTime () ; 
		+  mReportPeriodStart = startDate.getTime () ; -  mReportStartTime = calendar.getTimeInMillis () ; 
		+  mReportPeriodStart = startDate.getTime () ; -  mReportStartTime = startDate.getTime () ; 
		+  mReportPeriodStart = startDate.getTime () ; -  mReportEndTime = endDate.getTime () ; 
		+  mReportPeriodEnd = endDate.getTime () ; -  mReportStartTime = calendar.getTimeInMillis () ; 
		+  mReportPeriodEnd = endDate.getTime () ; -  mReportStartTime = startDate.getTime () ; 
		+  mReportPeriodEnd = endDate.getTime () ; -  mReportEndTime = endDate.getTime () ; 
4
	+  mReportPeriodEnd = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; -  mReportEndTime = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
		+  mReportPeriodEnd = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
		+  mReportPeriodEnd = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; -    mReportStartTime = - 1 ; 
		+  mReportPeriodEnd = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; -    mReportEndTime = - 1 ; 
		+    mReportPeriodStart = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -  mReportEndTime = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; 
		+    mReportPeriodStart = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -  mReportEndTime = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; 
		+    mReportPeriodStart = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -  mReportEndTime = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; 
		+    mReportPeriodStart = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -  mReportEndTime = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; 
		+    mReportPeriodStart = - 1 ; -    mReportStartTime = - 1 ; 
		+    mReportPeriodStart = - 1 ; -    mReportEndTime = - 1 ; 
		+    mReportPeriodEnd = - 1 ; -    mReportStartTime = - 1 ; 
		+    mReportPeriodEnd = - 1 ; -    mReportEndTime = - 1 ; 
7
6
		+  public long getReportPeriodEnd () { -  public long getReportEndTime () { 
		+  public long getReportPeriodEnd () { -  public long getReportStartTime () { 
		+  return mReportPeriodEnd ; -  return mReportEndTime ; 
		+  return mReportPeriodEnd ; -  return mReportStartTime ; 
		+  public long getReportPeriodStart () { -  public long getReportEndTime () { 
		+  public long getReportPeriodStart () { -  public long getReportStartTime () { 
		+  return mReportPeriodStart ; -  return mReportEndTime ; 
		+  return mReportPeriodStart ; -  return mReportStartTime ; 
		+  return super.onKeyUp ( keyCode , event ) ; -  return mReportEndTime ; 
		+  return super.onKeyUp ( keyCode , event ) ; -  return mReportStartTime ; 
9
		+ public class ReportsOverviewFragment extends BaseReportFragment { - public class ReportSummaryFragment extends BaseReportFragment { 
8
		+ import org.gnucash.android.ui.report.barchart.CashFlowBarChartFragment ; - import org.gnucash.android.ui.report.barchart.BarChartFragment ; 
app/src/test/java/org/gnucash/android/test/unit/model/BudgetTest_java
1
app/src/main/java/org/gnucash/android/util/TimestampHelper_java
1
2
app/src/main/java/org/gnucash/android/model/Split_java
1
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.AccountsDbAdapter ; 
		+ import java.sql.Timestamp ; - import org.gnucash.android.db.AccountsDbAdapter ; 
3
2
5
		+  return mValue.abs () .equals ( other.mValue.abs () ) -  return mValue.absolute () .equals ( other.mValue.absolute () ) 
4
	+  Split pair = new Split ( mValue.abs () , accountUID ) ; -  Split pair = new Split ( mValue.absolute () , accountUID ) ; 
7
6
		+  Money absAmount = amount.abs () ; -  Money absAmount = amount.absolute () ; 
9
8
app/src/main/res/values/strings_xml
app/src/main/java/org/gnucash/android/export/ExportParams_java
1
	+  public enum ExportTarget { SD_CARD , SHARING , DROPBOX , GOOGLE_DRIVE , OWNCLOUD } -  public enum ExportTarget { SD_CARD , SHARING , DROPBOX , GOOGLE_DRIVE } 
3
2
4
app/src/main/res/layout/cardview_transaction_xml
app/src/androidTest/java/org/gnucash/android/test/ui/CalculatorEditTextTest_java
1
		+ import android.support.test.rule.ActivityTestRule ; - import android.support.test.InstrumentationRegistry ; 
		+ import android.support.test.rule.ActivityTestRule ; - import android.test.ActivityInstrumentationTestCase2 ; 
		+ import android.support.test.rule.ActivityTestRule ; - import org.gnucash.android.db.DatabaseSchema ; 
		+ import android.support.test.rule.ActivityTestRule ; - import org.gnucash.android.db.adapter.AccountsDbAdapter ; 
		+ import org.gnucash.android.app.GnuCashApplication ; - import android.support.test.InstrumentationRegistry ; 
		+ import org.gnucash.android.app.GnuCashApplication ; - import android.test.ActivityInstrumentationTestCase2 ; 
		+ import org.gnucash.android.app.GnuCashApplication ; - import org.gnucash.android.db.DatabaseSchema ; 
		+ import org.gnucash.android.app.GnuCashApplication ; - import org.gnucash.android.db.adapter.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import android.support.test.InstrumentationRegistry ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import android.test.ActivityInstrumentationTestCase2 ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.DatabaseSchema ; 
		+ import org.gnucash.android.db.adapter.AccountsDbAdapter ; - import org.gnucash.android.db.adapter.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.support.test.InstrumentationRegistry ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.test.ActivityInstrumentationTestCase2 ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import org.gnucash.android.db.DatabaseSchema ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import org.gnucash.android.db.adapter.AccountsDbAdapter ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import android.support.test.InstrumentationRegistry ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import android.test.ActivityInstrumentationTestCase2 ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.DatabaseSchema ; 
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.adapter.AccountsDbAdapter ; 
		+ import org.gnucash.android.test.ui.util.DisableAnimationsRule ; - import android.support.test.InstrumentationRegistry ; 
		+ import org.gnucash.android.test.ui.util.DisableAnimationsRule ; - import android.test.ActivityInstrumentationTestCase2 ; 
		+ import org.gnucash.android.test.ui.util.DisableAnimationsRule ; - import org.gnucash.android.db.DatabaseSchema ; 
		+ import org.gnucash.android.test.ui.util.DisableAnimationsRule ; - import org.gnucash.android.db.adapter.AccountsDbAdapter ; 
		+ import org.junit.BeforeClass ; - import android.support.test.InstrumentationRegistry ; 
		+ import org.junit.BeforeClass ; - import android.test.ActivityInstrumentationTestCase2 ; 
		+ import org.junit.BeforeClass ; - import org.gnucash.android.db.DatabaseSchema ; 
		+ import org.junit.BeforeClass ; - import org.gnucash.android.db.adapter.AccountsDbAdapter ; 
		+ import org.junit.ClassRule ; - import android.support.test.InstrumentationRegistry ; 
		+ import org.junit.ClassRule ; - import android.test.ActivityInstrumentationTestCase2 ; 
		+ import org.junit.ClassRule ; - import org.gnucash.android.db.DatabaseSchema ; 
		+ import org.junit.ClassRule ; - import org.gnucash.android.db.adapter.AccountsDbAdapter ; 
		+ import org.junit.Rule ; - import android.support.test.InstrumentationRegistry ; 
		+ import org.junit.Rule ; - import android.test.ActivityInstrumentationTestCase2 ; 
		+ import org.junit.Rule ; - import org.gnucash.android.db.DatabaseSchema ; 
		+ import org.junit.Rule ; - import org.gnucash.android.db.adapter.AccountsDbAdapter ; 
3
2
4
		+   mAccountsDbAdapter.getID ( accountUID ) ; -   mAccountsDbAdapter.getID ( accountId ) ; 
app/src/main/java/org/gnucash/android/ui/wizard/CurrencySelectFragment_java
1
		+ import org.gnucash.android.db.adapter.CommoditiesDbAdapter ; - import org.gnucash.android.db.CommoditiesDbAdapter ; 
app/src/main/res/xml-v11/fragment_about_preferences_xml
app/src/main/res/layout/reports_toolbar_xml
app/src/main/res/values-en-rGB/strings_xml
app/src/main/res/layout/activity_transactions_xml
app/src/main/java/org/gnucash/android/service/ScheduledActionService_java
1
3
		+  DateTime localDate = new DateTime ( mPeriodStart.getTime () ) ; -  LocalDateTime localDate = new LocalDateTime ( mPeriodStart.getTime () ) ; 
		+  DateTime localDate = new DateTime ( mPeriodStart.getTime () ) ; -  mPeriodEnd = new Timestamp ( endDate.toDate () .getTime () ) ; 
		+  DateTime endDate ; -  LocalDateTime endDate ; 
		+    endDate = localDate.plusDays ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
		+    endDate = localDate.plusWeeks ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
		+   default: -   default: 
		+    endDate = localDate.plusMonths ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
		+    endDate = localDate.plusYears ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
2
5
	+  return inputName.replaceAll ( " [^a- zA- Z0- 9- _\\.] " , " _ " ) ; -    + " _gnucash_export " + format.getExtension () ; 
	+  public static String buildExportFilename ( ExportFormat format , String bookName ) { -  public static String buildExportFilename ( ExportFormat format ) { 
	+    + " _gnucash_export_ " + sanitizeFilename ( bookName ) + format.getExtension () ; -    + " _gnucash_export " + format.getExtension () ; 
		+  public static String sanitizeFilename ( String inputName ) { -  public static String buildExportFilename ( ExportFormat format ) { 
		+  public static String sanitizeFilename ( String inputName ) { -    + " _gnucash_export " + format.getExtension () ; 
		+  public static String buildExportFilename ( ExportFormat format , String bookName ) { -    + " _gnucash_export " + format.getExtension () ; 
4
7
	+  public static String getBackupFolderPath ( String bookUID ) { -  public static String getBackupFolderPath () { 
6
	+   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () , bookName ) ; -   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; 
	+  public static String getExportFolderPath ( String bookUID ) { -  public static String getExportFolderPath () { 
		+   String bookName = BooksDbAdapter.getInstance () .getAttribute ( mBookUID , DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME ) ; -   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; 
		+  String path = BASE_FOLDER_PATH + " / " + bookUID + " /exports/ " ; -   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; 
app/src/main/res/values/flags_xml
app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter_java
1
3
	+  if ( resultCode == Activity.RESULT_CANCELED ) { -  if ( resultCode == Activity.RESULT_CANCELED ) { 
2
5
4
7
		+  Recurrence recurrence = RecurrenceParser.parse ( mEventRecurrence ) ; -  mBudget.setRecurrence ( RecurrenceParser.parse ( mEventRecurrence ) ) ; 
6
9
8
app/src/main/java/org/gnucash/android/ui/settings/GeneralPreferenceFragment_java
1
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.CheckBoxPreference ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.Preference ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.Preference.OnPreferenceChangeListener ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.CheckBoxPreference ; - import android.preference.CheckBoxPreference ; 
		+ import android.support.v7.preference.CheckBoxPreference ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.CheckBoxPreference ; - import android.preference.Preference.OnPreferenceChangeListener ; 
		+ import android.support.v7.preference.CheckBoxPreference ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.CheckBoxPreference ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.Preference.OnPreferenceChangeListener ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.CheckBoxPreference ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.Preference.OnPreferenceChangeListener ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.PreferenceFragment ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.CheckBoxPreference ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.Preference ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.Preference.OnPreferenceChangeListener ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.PreferenceFragment ; 
2
app/src/main/res/layout/fragment_split_editor_xml
app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter_java
1
3
2
		+ package org.gnucash.android.db.adapter ; - package org.gnucash.android.db ; 
5
		+    Split split = new Split ( balance.abs () , accountUID ) ; -    Split split = new Split ( balance.absolute () , accountUID ) ; 
4
app/src/main/AndroidManifest_xml
app/src/main/java/org/gnucash/android/model/Budget_java
1
app/src/main/res/values/styles_xml
app/src/main/res/layout/activity_budgets_xml
app/src/main/res/drawable-hdpi/ic_owncloud_png
1
3
2
5
4
app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest_java
1
		+ @Test ( expected = Money.CurrencyMismatchException.class ) - @Test ( expected = IllegalArgumentException.class ) 
3
		+ @Test ( expected = Money.CurrencyMismatchException.class ) - @Test ( expected = IllegalArgumentException.class ) 
2
		+ @Test ( expected = Money.CurrencyMismatchException.class ) - @Test ( expected = IllegalArgumentException.class ) 
4
		+ @Test ( expected = Money.CurrencyMismatchException.class ) - @Test ( expected = IllegalArgumentException.class ) 
scripts/adb_all_sh
1
		+   BaseReportFragment reportFragment = ( BaseReportFragment ) fragment ; -  BaseReportFragment reportFragment = ( BaseReportFragment ) fragment ; 
3
	+   ImageView optionsMenu = ( ImageView ) view.findViewById ( R.id.options_menu ) ; -   ImageView optionsMenu = ( ImageView ) view.findViewById ( R.id.options_menu ) ; 
		+   TextView statsText = ( TextView ) view.findViewById ( R.id.secondary_text ) ; -   ImageView optionsMenu = ( ImageView ) view.findViewById ( R.id.options_menu ) ; 
2
4
app/src/test/java/org/gnucash/android/test/unit/model/AccountTest_java
1
3
2
	+ assertThat ( account.getCommodity () .getCurrencyCode () ) .isEqualTo ( Money.DEFAULT_CURRENCY_CODE ) ; - assertThat ( account.getCurrency () .getCurrencyCode () ) .isEqualTo ( Money.DEFAULT_CURRENCY_CODE ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest_java
1
3
2
5
4
6
app/src/main/java/org/gnucash/android/importer/ImportAsyncTask_java
1
		+ import android.content.Context ; - import android.database.sqlite.SQLiteDatabase ; 
2
app/src/main/java/org/gnucash/android/ui/report/ReportsActivity_java
1
3
2
		+  super.onCreate ( savedInstanceState ) ; -  super.onCreate ( savedInstanceState ) ; 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
	+  String targetCurrency = mAccountsDbAdapter.getCurrencyCode ( mAccountsDbAdapter.getUID ( id ) ) ; -  String targetCurrency = mAccountsDbAdapter.getCurrencyCode ( ( mAccountsDbAdapter.getUID ( id ) ) ) ; 
app/src/main/java/org/gnucash/android/ui/colorpicker/ColorPickerPalette_java
1
	+   int rowMax = ( rowNumber + 1 ) * mNumColumns ; -   int rowMax = ( ( rowNumber + 1 ) * mNumColumns ) ; 
app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment_java
1
	+   mSelectedColor = String.format ( " #%06X " , 0xFFFFFF & color ) ; -   mSelectedColor = String.format ( " #%06X " , ( 0xFFFFFF & color ) ) ; 
app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment_java
1
	+  mMoveTransactionsRadioButton = ( RadioButton ) transactionOptionsView.findViewById ( R.id.radio_move ) ; -  mMoveTransactionsRadioButton = ( ( RadioButton ) transactionOptionsView.findViewById ( R.id.radio_move ) ) ; 
app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment_java
1
	+    return getQuarter ( end ) - getQuarter ( start ) + y * 4 ; -    return ( getQuarter ( end ) - getQuarter ( start ) + y * 4 ) ; 
2
	+  return ( date.getMonthOfYear () - 1 ) / 3 + 1 ; -  return ( ( date.getMonthOfYear () - 1 ) / 3 + 1 ) ; 
app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment_java
1
	+   TextView balanceTextView = ( TextView ) view.findViewById ( R.id.account_balance ) ; -   TextView balanceTextView = ( ( TextView ) view.findViewById ( R.id.account_balance ) ) ; 
app/src/main/res/values/strings_xml
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
3
	+    moveDirectory ( srcDir , dstDir ) ; -    moveDirectory ( srcDir , dstDir ) ; 
	+    File readmeFile = new File ( Exporter.LEGACY_BASE_FOLDER_PATH , " README.txt " ) ; -    File readmeFile = new File ( Exporter.LEGACY_BASE_FOLDER_PATH , " README.txt " ) ; 
	+    FileWriter writer = null ; -    FileWriter writer = null ; 
		+    File readmeFile = new File ( Exporter.LEGACY_BASE_FOLDER_PATH , " README.txt " ) ; -    moveDirectory ( srcDir , dstDir ) ; 
		+   } catch ( IOException  |  IllegalArgumentException ex ) { -   } catch ( IOException e ) { 
		+    String msg = String.format ( " Error moving files from %s to %s " , srcDir.getPath () , dstDir.getPath () ) ; -    moveDirectory ( srcDir , dstDir ) ; 
		+    String msg = String.format ( " Error moving files from %s to %s " , srcDir.getPath () , dstDir.getPath () ) ; -    Log.e ( LOG_TAG , " Error creating README file " ) ; 
2
		+ * @return New database version - * @return 
app/src/org/gnucash/android/db/AccountsDbAdapter_java
1
app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest_java
1
3
2
4
app/src/main/java/org/gnucash/android/service/ScheduledActionService_java
1
2
app/src/main/res/values-cs-rCZ/strings_xml
app/src/main/res/values-pt-rBR/strings_xml
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
	+  public static final String FILE_PROVIDER_AUTHORITY = BuildConfig.APPLICATION_ID + " .fileprovider " ; -  public static final String FILE_PROVIDER_AUTHORITY = " org.gnucash.android.fileprovider " ; 
app/src/main/res/values-in-rID/strings_xml
app/src/main/res/values-nb/strings_xml
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
	+  String targetCurrencyCode = mAccountsDbAdapter.getCurrencyCode ( mAccountsDbAdapter.getUID ( id ) ) ; -  String targetCurrency = mAccountsDbAdapter.getCurrencyCode ( mAccountsDbAdapter.getUID ( id ) ) ; 
		+  Commodity fromCommodity = Commodity.getInstance ( ( mTransactionsDbAdapter.getAccountCurrencyCode ( mAccountUID ) ) ) ; -  Currency fromCurrency = Currency.getInstance ( mTransactionsDbAdapter.getAccountCurrencyCode ( mAccountUID ) ) ; 
		+  if ( fromCommodity.equals ( Commodity.getInstance ( targetCurrencyCode ) ) -  if ( fromCurrency.equals ( Currency.getInstance ( targetCurrency ) ) 
3
2
	+   = TransferFundsDialogFragment.getInstance ( amount , targetCurrencyCode , this ) ; -   = TransferFundsDialogFragment.getInstance ( amount , targetCurrency , this ) ; 
		+  Money amount = new Money ( amountBigd , fromCommodity ) .abs () ; -   = TransferFundsDialogFragment.getInstance ( amount , targetCurrency , this ) ; 
4
	+ Commodity commodity = Commodity.getInstance ( code ) ; -  Commodity commodity = Commodity.getInstance ( code ) ; 
		+  mCurrencyTextView.setText ( commodity.getSymbol () ) ; - mCurrencyTextView.setText ( accountCurrency.getSymbol () ) ; 
app/src/main/res/values-zh-rCN/strings_xml
app/src/main/res/values/strings_xml
app/src/main/res/values-es-rMX/strings_xml
app/src/main/res/values-fr/strings_xml
app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity_java
1
		+  } else { -  } else { 
app/src/main/res/values-sv-rSE/strings_xml
app/src/main/res/values-es/strings_xml
app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest_java
1
2
app/src/main/res/values-zh-rTW/strings_xml
app/src/main/java/org/gnucash/android/model/Money_java
1
app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity_java
1
		+ import com.github.mikephil.charting.highlight.Highlight ; - import com.github.mikephil.charting.utils.Highlight ; 
3
2
app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity_java
1
		+ import com.github.mikephil.charting.highlight.Highlight ; - import com.github.mikephil.charting.utils.Highlight ; 
app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity_java
1
		+ import com.github.mikephil.charting.highlight.Highlight ; - import com.github.mikephil.charting.utils.Highlight ; 
app/src/org/gnucash/android/ui/passcode/PassLockActivity_java
1
app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity_java
1
app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity_java
1
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
	+  public static void loadBook ( @NonNull String bookUID ) { -  public static void loadBook ( String bookUID ) { 
CONTRIBUTORS
1
		+   case BaseDrawerActivity.REQUEST_OPEN_DOCUMENT: -   case BaseDrawerActivity.REQUEST_OPEN_DOCUMENT: 
2
app/src/main/java/org/gnucash/android/ui/common/FormActivity_java
1
		+ import org.gnucash.android.ui.transaction.TransactionFormFragment ; - import org.gnucash.android.ui.transaction.TransactionFormFragment ; 
app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter_java
1
		+  public String setActive ( @NonNull String bookUID ) { -  public void setActive ( String bookUID ) { 
2
app/src/main/java/org/gnucash/android/importer/ImportAsyncTask_java
1
		+ import android.content.Context ; - import android.database.sqlite.SQLiteDatabase ; 
2
app/src/main/java/org/gnucash/android/model/ScheduledAction_java
1
2
	+  public void setRecurrence ( @NonNull Recurrence recurrence ) { -  public void setRecurrence ( Recurrence recurrence ) { 
app/src/main/java/org/gnucash/android/model/BudgetAmount_java
1
app/src/main/java/org/gnucash/android/service/SchedulerService_java
1
2
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
app/src/main/java/org/gnucash/android/util/PreferencesHelper_java
1
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
2
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
2
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
3
		+  LocalDateTime localDate = new LocalDateTime ( mPeriodStart.getTime () ) ; -  DateTime localDate = new DateTime ( mPeriodStart.getTime () ) ; 
		+  LocalDateTime endDate ; -  DateTime endDate ; 
2
4
	+  mPeriodEnd = new Timestamp ( endDate.toDateTime () .getMillis () ) ; -  mPeriodEnd = new Timestamp ( endDate.getMillis () ) ; 
app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest_java
1
3
2
4
app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter_java
1
app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest_java
1
3
2
5
4
6
app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter_java
1
3
2
app/src/main/res/values-af-rZA/strings_xml
app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest_java
1
3
2
app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity_java
1
		+  public static SharedPreferences getBookSharedPreferences ( String bookUID ) { -  public static SharedPreferences getActiveBookSharedPreferences ( Context context ) { 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment_java
1
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity_java
1
	+   ( ( TextView ) view ) .setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , 0 , 0 ) ; -   ( ( TextView ) view ) .setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , 0 , 0 ) ; 
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
	+   if ( bytesCopied >= src.length () ) { -   if ( bytesCopied >= src.length () ) 
		+  Log.d ( LOG_TAG , String.format ( Locale.US , " Moving %s from %s to %s " , -    src.delete () ; 
		+    src.getName () , src.getParent () , dst.getParent () ) ) ; -    src.delete () ; 
		+   if ( bytesCopied >= src.length () ) { -    src.delete () ; 
		+    boolean result = src.delete () ; -    src.delete () ; 
		+    String msg = result ? " Deleted src file: " : " Could not delete src: " ; -    src.delete () ; 
		+    Log.d ( LOG_TAG , msg + src.getPath () ) ; -    src.delete () ; 
3
	+    File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /backups/ " + src.getName () ) ; -    File dst = new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " + src.getName () ) ; 
2
	+    File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /exports/ " + src.getName () ) ; -    File dst = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " + src.getName () ) ; 
5
4
	+  new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /backups/ " ) .mkdirs () ; -  new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) .mkdirs () ; 
	+  new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /backups/ " ) .mkdirs () ; -  new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) .mkdirs () ; 
	+  new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /exports/ " ) .mkdirs () ; -  new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) .mkdirs () ; 
	+  new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /exports/ " ) .mkdirs () ; -  new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) .mkdirs () ; 
app/src/main/java/org/gnucash/android/db/BookDbHelper_java
1
	+  File newBasePath = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID ) ; -  File newBasePath = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID ) ; 
	+  File newBasePath = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID ) ; -  File src = new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) ; 
	+  File src = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /backups/ " ) ; -  File src = new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) ; 
	+  File src = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /backups/ " ) ; -  src = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) ; 
	+  File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; -  File newBasePath = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID ) ; 
	+  File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; -  File src = new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) ; 
	+  File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; -  File dst = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; 
	+  File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; -  src = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) ; 
	+  File dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /backups/ " ) ; -  dst = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; 
	+  src = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " /exports/ " ) ; -  src = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) ; 
	+  dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; -  File newBasePath = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID ) ; 
	+  dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; -  src = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) ; 
	+  dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; -  dst = new File ( Exporter.BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; 
		+  File newBasePath = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID ) ; -  src = new File ( Exporter.BASE_FOLDER_PATH + " /exports/ " ) ; 
		+  dst = new File ( Exporter.LEGACY_BASE_FOLDER_PATH + " / " + activeBookUID + " /exports/ " ) ; -  File src = new File ( Exporter.BASE_FOLDER_PATH + " /backups/ " ) ; 
app/src/main/java/org/gnucash/android/export/Exporter_java
1
	+  public static final String LEGACY_BASE_FOLDER_PATH = Environment.getExternalStorageDirectory () + " / " + BuildConfig.APPLICATION_ID ; -  public static final String BASE_FOLDER_PATH = Environment.getExternalStorageDirectory () + " / " + BuildConfig.APPLICATION_ID ; 
	+  public static final String BASE_FOLDER_PATH = GnuCashApplication.getAppContext () .getExternalFilesDir ( null ) .getAbsolutePath () ; -  public static final String BASE_FOLDER_PATH = Environment.getExternalStorageDirectory () + " / " + BuildConfig.APPLICATION_ID ; 
app/src/main/java/org/gnucash/android/db/DatabaseSchema_java
1
	+  public static final int DATABASE_VERSION = 14 ; -  public static final int DATABASE_VERSION = 13 ; 
app/src/main/res/values-pt-rBR/strings_xml
app/src/main/res/values-vi-rVN/strings_xml
app/src/main/res/values-ar-rSA/strings_xml
app/src/main/res/values-sr-rSP/strings_xml
app/src/main/res/values-pl-rPL/strings_xml
app/src/main/res/values-es/strings_xml
app/src/main/res/values-zh-rTW/strings_xml
app/src/main/res/values-ro-rRO/strings_xml
app/src/main/res/values-cs-rCZ/strings_xml
app/src/main/res/values-in-rID/strings_xml
app/src/main/res/values-nb/strings_xml
app/src/main/res/values-ca-rES/strings_xml
app/src/main/res/values-es-rMX/strings_xml
app/src/main/res/values-fr/strings_xml
app/src/main/res/values-it-rIT/strings_xml
app/src/main/res/values-sv-rSE/strings_xml
app/src/main/res/values-ko-rKR/strings_xml
app/src/main/res/values-nl-rNL/strings_xml
app/src/main/res/values-iw-rIL/strings_xml
app/src/main/res/values-el-rGR/strings_xml
app/src/main/res/values-fi-rFI/strings_xml
app/src/main/res/values-ru/strings_xml
app/src/main/res/values-lv-rLV/strings_xml
app/src/main/res/values-uk-rUA/strings_xml
app/src/main/res/values-de/strings_xml
app/src/main/res/values-no-rNO/strings_xml
app/src/main/res/values-pt-rPT/strings_xml
app/src/main/res/values-ja-rJP/strings_xml
app/src/main/res/values-tr-rTR/strings_xml
app/src/main/res/values-af-rZA/strings_xml
app/src/main/res/values-zh-rCN/strings_xml
app/src/main/res/values-en-rGB/strings_xml
app/src/main/res/values-hu-rHU/strings_xml
app/src/main/res/values/donottranslate_xml
app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment_java
1
app/src/main/res/xml/fragment_chart_preferences_xml
app/src/main/res/xml/preference_headers_xml
app/src/org/gnucash/android/db/AccountsDbAdapter_java
1
app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest_java
1
3
	+ ScheduledActionDbAdapter scheduledactionDbAdapter = new ScheduledActionDbAdapter ( mDb , new RecurrenceDbAdapter ( mDb ) ) ; - ScheduledActionDbAdapter scheduledactionDbAdapter = new ScheduledActionDbAdapter ( mDb ) ; 
2
	+  mDbHelper = new DatabaseHelper ( mActivity , BaseModel.generateUID () ) ; -  mDbHelper = new DatabaseHelper ( mActivity ) ; 
app/src/main/res/xml/fragment_backup_preferences_xml
app/src/main/res/xml/fragment_transaction_preferences_xml
app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity_java
1
app/src/main/res/values-ro-rRO/strings_xml
app/src/main/java/org/gnucash/android/model/Money_java
1
app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity_java
1
app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment_java
1
		+ import org.gnucash.android.ui.transaction.OnTransferFundsListener ; - import org.gnucash.android.ui.util.OnTransferFundsListener ; 
app/src/main/java/org/gnucash/android/db/DatabaseHelper_java
1
2
	+ public DatabaseHelper ( Context context , String databaseName ) { - public DatabaseHelper ( Context context ) { 
	+ super ( context , databaseName , null , DatabaseSchema.DATABASE_VERSION ) ; - super ( context , DATABASE_NAME , null , DatabaseSchema.DATABASE_VERSION ) ; 
app/src/main/java/org/gnucash/android/ui/settings/AboutPreferenceFragment_java
1
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.Preference ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.PreferenceFragment ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.Preference ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.PreferenceFragment ; 
3
		+  BackupPreferenceFragment.mGoogleApiClient = BackupPreferenceFragment.getGoogleApiClient ( getActivity () ) ; -  SettingsActivity.mGoogleApiClient = SettingsActivity.getGoogleApiClient ( getActivity () ) ; 
2
	+ public class AboutPreferenceFragment extends PreferenceFragmentCompat { - public class AboutPreferenceFragment extends PreferenceFragment { 
	+ ActionBar actionBar = ( ( AppCompatActivity ) getActivity () ) .getSupportActionBar () ; - ActionBar actionBar = ( ( AppCompatPreferenceActivity ) getActivity () ) .getSupportActionBar () ; 
		+ public class AboutPreferenceFragment extends PreferenceFragmentCompat { - addPreferencesFromResource ( R.xml.fragment_about_preferences ) ; 
		+ public void onCreatePreferences ( Bundle bundle , String s ) { - addPreferencesFromResource ( R.xml.fragment_about_preferences ) ; 
		+ addPreferencesFromResource ( R.xml.fragment_about_preferences ) ; - addPreferencesFromResource ( R.xml.fragment_about_preferences ) ; 
5
		+  SharedPreferences sharedPrefs = PreferenceActivity.getBookSharedPreferences ( context ) ; -  SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences ( context ) ; 
4
		+ if ( requestCode == BackupPreferenceFragment.REQUEST_RESOLVE_CONNECTION && resultCode == Activity.RESULT_OK ) { - if ( requestCode == SettingsActivity.REQUEST_RESOLVE_CONNECTION && resultCode == Activity.RESULT_OK ) { 
7
6
		+  SharedPreferences prefs = PreferenceActivity.getBookSharedPreferences ( context ) ; -  SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences ( context ) ; 
app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment_java
1
3
2
	+  private void checkData () { -  private void checkdata () { 
5
		+   toggleOwnCloudSync ( preference ) ; -   toggleOwncloudSync ( preference ) ; 
		+   toggleOwnCloudSync ( preference ) ; -   toggleOwncloudPreference ( preference ) ; 
		+   toggleOwnCloudPreference ( preference ) ; -   toggleOwncloudSync ( preference ) ; 
		+   toggleOwnCloudPreference ( preference ) ; -   toggleOwncloudPreference ( preference ) ; 
4
		+    checkData () ; -    checkdata () ; 
7
	+  public void toggleOwnCloudPreference ( Preference pref ) { -  public void toggleOwncloudPreference ( Preference pref ) { 
6
	+  private void toggleOwnCloudSync ( Preference pref ) { -  private void toggleOwncloudSync ( Preference pref ) { 
	+   OwnCloudDialogFragment ocDialog = OwnCloudDialogFragment.newInstance ( pref ) ; -   OwncloudDialogFragment ocDialog = OwncloudDialogFragment.newInstance ( pref ) ; 
app/src/main/res/values-it-rIT/strings_xml
app/src/test/java/org/gnucash/android/test/unit/export/BackupTest_java
1
3
2
4
	+   String bookUID = GncXmlImporter.parse ( GnuCashApplication.getAppContext () .getResources () .openRawResource ( R.raw.default_accounts ) ) ; -   GncXmlImporter.parse ( GnuCashApplication.getAppContext () .getResources () .openRawResource ( R.raw.default_accounts ) ) ; 
app/src/main/res/values-sv-rSE/strings_xml
app/src/main/res/layout/activity_reports_xml
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment_java
1
2
app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment_java
1
		+ import android.content.Intent ; - import android.annotation.TargetApi ; 
		+ import android.content.Intent ; - import android.preference.ListPreference ; 
		+ import android.content.Intent ; - import android.preference.Preference ; 
		+ import android.content.Intent ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.annotation.TargetApi ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.ListPreference ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.Preference ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.Preference ; - import android.annotation.TargetApi ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.ListPreference ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.annotation.TargetApi ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.ListPreference ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.PreferenceFragment ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.annotation.TargetApi ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.ListPreference ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.Preference ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.PreferenceFragment ; 
3
2
	+ public class AccountPreferencesFragment extends PreferenceFragmentCompat implements - public class AccountPreferencesFragment extends PreferenceFragment { 
	+  ActionBar actionBar = ( ( AppCompatActivity ) getActivity () ) .getSupportActionBar () ; -  ActionBar actionBar = ( ( AppCompatPreferenceActivity ) getActivity () ) .getSupportActionBar () ; 
		+ public class AccountPreferencesFragment extends PreferenceFragmentCompat implements -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+ public class AccountPreferencesFragment extends PreferenceFragmentCompat implements -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
		+  Preference.OnPreferenceChangeListener , Preference.OnPreferenceClickListener { -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+  Preference.OnPreferenceChangeListener , Preference.OnPreferenceClickListener { -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
		+  public void onCreatePreferences ( Bundle bundle , String s ) { -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+  public void onCreatePreferences ( Bundle bundle , String s ) { -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
		+  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
		+  getPreferenceManager () .setSharedPreferencesName ( BooksDbAdapter.getInstance () .getActiveBookUID () ) ; -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+  getPreferenceManager () .setSharedPreferencesName ( BooksDbAdapter.getInstance () .getActiveBookUID () ) ; -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
		+  ActionBar actionBar = ( ( AppCompatActivity ) getActivity () ) .getSupportActionBar () ; -  mActivity = getActivity () ; 
		+  actionBar.setTitle ( R.string.title_account_preferences ) ; -  addPreferencesFromResource ( R.xml.fragment_account_preferences ) ; 
		+  actionBar.setTitle ( R.string.title_account_preferences ) ; -  actionBar.setTitle ( R.string.title_account_preferences ) ; 
5
4
6
app/src/main/res/values-iw-rIL/strings_xml
app/src/main/res/layout/dialog_owncloud_account_xml
app/src/main/res/values/flags_xml
app/src/main/res/layout-sw600dp/activity_settings_xml
app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment_java
1
3
		+ package org.gnucash.android.ui.transaction ; - package org.gnucash.android.ui.util ; 
2
app/src/main/res/values-de/strings_xml
app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment_java
1
3
		+  public void showDeleteTransactionsDialog () { -  public void deleteAllTransactions () { 
		+  deleteTransactionsConfirmationDialog.show ( getActivity () .getSupportFragmentManager () , " transaction_settings " ) ; -  deleteTransactionsConfirmationDialog.show ( getFragmentManager () , " transaction_settings " ) ; 
		+  accountsDbAdapter.updateRecord ( uid , DatabaseSchema.AccountEntry.COLUMN_HIDDEN , isHidden ) ; -  deleteTransactionsConfirmationDialog.show ( getFragmentManager () , " transaction_settings " ) ; 
2
		+   setImbalanceAccountsHidden ( ( Boolean ) newValue ) ; -    deleteAllTransactions () ; 
4
		+ preference.setSummary ( localizedLabel ) ; - pref.setSummary ( localizedLabel ) ; 
app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment_java
1
2
		+     mReportPeriodStart , mReportPeriodEnd ) .asDouble () ; -     mReportStartTime , mReportEndTime ) .asDouble () ; 
app/src/main/res/values-ja-rJP/strings_xml
app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter_java
1
2
app/proguard-project_txt
1
2
app/src/main/res/values-zh-rCN/strings_xml
app/src/main/res/layout/fragment_numeric_keyboard_xml
app/src/main/res/xml/fragment_account_preferences_xml
app/src/main/res/values-vi-rVN/strings_xml
app/src/main/java/org/gnucash/android/model/Account_java
1
app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment_java
1
app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter_java
1
	+  mDb.delete ( DatabaseSchema.PriceEntry.TABLE_NAME , null , null ) ; -  mDb.delete ( DatabaseSchema.PriceEntry.TABLE_NAME , null , null ) ; 
		+  mDb.delete ( DatabaseSchema.BudgetAmountEntry.TABLE_NAME , null , null ) ; -  mDb.delete ( DatabaseSchema.PriceEntry.TABLE_NAME , null , null ) ; 
		+  mDb.delete ( DatabaseSchema.BudgetEntry.TABLE_NAME , null , null ) ; -  mDb.delete ( DatabaseSchema.PriceEntry.TABLE_NAME , null , null ) ; 
		+  mDb.delete ( DatabaseSchema.RecurrenceEntry.TABLE_NAME , null , null ) ; -  mDb.delete ( DatabaseSchema.PriceEntry.TABLE_NAME , null , null ) ; 
app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText_java
1
3
	+  public @Nullable BigDecimal getValue () { -  public BigDecimal getValue () { 
2
	+  public @XmlRes int getCalculatorKeysLayout () { -  public int getCalculatorKeysLayout () { 
	+  public void setCalculatorKeysLayout ( @XmlRes int calculatorKeysLayout ) { -  public int getCalculatorKeysLayout () { 
		+  public void setCalculatorKeysLayout ( @XmlRes int calculatorKeysLayout ) { -  public void setCalculatorKeysLayout ( @XmlRes int mCalculatorKeysLayout ) { 
		+  public void setCalculatorKeysLayout ( @XmlRes int calculatorKeysLayout ) { -  this.mCalculatorKeysLayout = mCalculatorKeysLayout ; 
		+  this.mCalculatorKeysLayout = calculatorKeysLayout ; -  this.mCalculatorKeysLayout = mCalculatorKeysLayout ; 
5
4
build_gradle
1
		+  < item > OwnCloud < /item > -  < item > Owncloud < /item > 
2
app/src/main/java/org/gnucash/android/importer/ImportAsyncTask_java
1
3
	+    mSplit.setValue ( new Money ( mValue , mCommoditiesDbAdapter.getCommodity ( mTransaction.getCurrency () .getCurrencyCode () ) ) ) ; -    mSplit.setValue ( new Money ( mValue , Commodity.getInstance ( mTransaction.getCurrency () .getCurrencyCode () ) ) ) ; 
2
		+  return handler.getBookUID () ; -  return handler.getRootAccountUID () ; 
5
4
	+    imbAccount = new Account ( imbalancePrefix + currencyCode , mCommoditiesDbAdapter.getCommodity ( currencyCode ) ) ; -    imbAccount = new Account ( imbalancePrefix + currencyCode , Commodity.getInstance ( currencyCode ) ) ; 
6
		+   booksDbAdapter.addRecord ( mBook ) ; -    mostCurrencyAppearance = entry.getValue () ; 
		+   booksDbAdapter.addRecord ( mBook ) ; -    mostAppearedCurrency = entry.getKey () ; 
		+   booksDbAdapter.addRecord ( mBook ) ; -   GnuCashApplication.setDefaultCurrencyCode ( mostAppearedCurrency ) ; 
		+  public @NonNull String getBookUID () { -  public @NonNull String getRootAccountUID () { 
		+  return mBook.getUID () ; -  return mRootAccount.getUID () ; 
app/src/main/res/layout/activity_scheduled_events_xml
app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment_java
1
app/src/main/res/layout/activity_transaction_detail_xml
app/src/main/res/drawable/numeric_button_xml
app/src/main/res/xml/preference_fragment_headers_xml
app/src/main/res/values-zh-rTW/strings_xml
app/src/main/java/org/gnucash/android/ui/report/ReportsActivity_java
1
	+  public static final int[] COLORS = { -  static final int[] COLORS = { 
3
2
4
app/src/main/res/values-ru/strings_xml
app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest_java
1
3
	+  assertThat ( BudgetAmountsDbAdapter.getInstance () .getRecordsCount () ) .isZero () ; -  assertThat ( PricesDbAdapter.getInstance () .getRecordsCount () ) .isZero () ; 
	+  assertThat ( PricesDbAdapter.getInstance () .getRecordsCount () ) .isZero () ; -  assertThat ( PricesDbAdapter.getInstance () .getRecordsCount () ) .isZero () ; 
2
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity_java
1
3
	+ public class CashFlowLineChartFragment extends BaseReportFragment { - public class LineChartFragment extends BaseReportFragment { 
2
	+ public class CashFlowBarChartFragment extends BaseReportFragment { - public class CashFlowFragment extends BaseReportFragment { 
4
		+ package org.gnucash.android.ui.transaction ; - package org.gnucash.android.ui.util ; 
app/src/main/java/org/gnucash/android/export/ExportAsyncTask_java
1
3
2
4
app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment_java
1
2
		+  ActionBar actionBar = ( ( AppCompatActivity ) getActivity () ) .getSupportActionBar () ; -  ( ( AppCompatActivity ) getActivity () ) .getSupportActionBar () .setTitle ( budgetName ) ; 
app/src/main/res/layout/activity_accounts_xml
app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity_java
1
app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest_java
1
2
		+ onView ( withId ( R.id.drawer_layout ) ) .perform ( DrawerActions.open () ) ; - DrawerActions.openDrawer ( R.id.drawer_layout ) ; 
app/src/main/res/layout/toolbar_with_spinner_xml
app/src/main/res/layout/fragment_budget_amount_editor_xml
app/build_gradle
1
		+ package org.gnucash.android.ui.util.dialog ; - package org.gnucash.android.ui.transaction.dialog ; 
3
		+ package org.gnucash.android.ui.util.dialog ; - package org.gnucash.android.ui.transaction.dialog ; 
2
		+ package org.gnucash.android.ui.util.dialog ; - package org.gnucash.android.ui.report.dialog ; 
app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment_java
11
	+  mSelectedValueTextView.setText ( String.format ( SELECTED_VALUE_PATTERN , label.trim () , value , value / sum * 100 ) ) ; -  selectedValueTextView.setText ( String.format ( SELECTED_VALUE_PATTERN , label.trim () , value , value / sum * 100 ) ) ; 
		+  mSelectedValueTextView.setText ( String.format ( SELECTED_VALUE_PATTERN , label.trim () , value , value / sum * 100 ) ) ; -  selectedValueTextView.setText ( R.string.label_select_bar_to_view_details ) ; 
10
1
3
		+ import org.gnucash.android.ui.report.BaseReportFragment ; - import com.github.mikephil.charting.listener.OnChartValueSelectedListener ; 
		+ import org.gnucash.android.ui.report.BaseReportFragment ; - import org.gnucash.android.app.GnuCashApplication ; 
		+ import org.gnucash.android.ui.report.BaseReportFragment ; - import org.joda.time.Months ; 
		+ import org.gnucash.android.ui.report.BaseReportFragment ; - import org.joda.time.Years ; 
		+ import org.gnucash.android.ui.report.BaseReportFragment ; - import java.util.Currency ; 
		+ import org.gnucash.android.ui.report.ReportType ; - import com.github.mikephil.charting.listener.OnChartValueSelectedListener ; 
		+ import org.gnucash.android.ui.report.ReportType ; - import org.gnucash.android.app.GnuCashApplication ; 
		+ import org.gnucash.android.ui.report.ReportType ; - import org.joda.time.Months ; 
		+ import org.gnucash.android.ui.report.ReportType ; - import org.joda.time.Years ; 
		+ import org.gnucash.android.ui.report.ReportType ; - import java.util.Currency ; 
2
		+ package org.gnucash.android.ui.report.barchart ; - package org.gnucash.android.ui.report ; 
5
4
7
6
9
		+  mChart.notifyDataSetChanged () ; -  mChart.notifyDataSetChanged () ; 
		+  mChart.highlightValues ( null ) ; -  mChart.highlightValues ( null ) ; 
		+   mSelectedValueTextView.setText ( R.string.label_chart_no_data ) ; -  mChart.notifyDataSetChanged () ; 
		+   mSelectedValueTextView.setText ( R.string.label_chart_no_data ) ; -  selectedValueTextView.setText ( " " ) ; 
8
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
2
app/src/main/res/layout/fragment_budget_form_xml
app/src/main/res/values/dimens_xml
app/src/main/java/org/gnucash/android/db/AccountsDbAdapter_java
1
	+  public Money getAccountsBalance ( @NonNull List < String > accountUIDList , long startTimestamp , long endTimestamp ) { -  public Money getAccountsBalance ( List < String > accountUIDList , long startTimestamp , long endTimestamp ) { 
app/src/main/res/values-af-rZA/strings_xml
app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter_java
1
	+  public BudgetsDbAdapter ( SQLiteDatabase db , BudgetAmountsDbAdapter budgetAmountsDbAdapter , -  public BudgetsDbAdapter ( SQLiteDatabase db ) { 
		+  public BudgetsDbAdapter ( SQLiteDatabase db , BudgetAmountsDbAdapter budgetAmountsDbAdapter , -  mRecurrenceDbAdapter = new RecurrenceDbAdapter ( db ) ; 
		+  public BudgetsDbAdapter ( SQLiteDatabase db , BudgetAmountsDbAdapter budgetAmountsDbAdapter , -  mBudgetAmountsDbAdapter = new BudgetAmountsDbAdapter ( db ) ; 
app/src/main/java/org/gnucash/android/ui/settings/PreferenceHeadersFragment_java
1
app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest_java
1
2
	+  mDbHelper = new DatabaseHelper ( getInstrumentation () .getTargetContext () , BaseModel.generateUID () ) ; -  mDbHelper = new DatabaseHelper ( getInstrumentation () .getTargetContext () ) ; 
app/src/main/res/values-pt/strings_xml
CHANGELOG_md
1
app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment_java
11
10
		+    && ! budgetName.isEmpty () -    && ! budgetName.isEmpty () ; 
		+    && ! mBudgetAmounts.isEmpty () ; -    && ! budgetName.isEmpty () ; 
		+  if ( ! canSave ) { -  if ( ! canSave ) { 
13
		+  public void onClickBudgetStartDate ( View v ) { -  public void onClick ( View v ) { 
12
		+  mBudget.setBudgetAmounts ( mBudgetAmounts ) ; -  mBudget.setBudgetAmounts ( extractBudgetAmounts () ) ; 
15
14
1
3
2
5
	+  private AccountsDbAdapter mAccountsDbAdapter ; -  private AccountsDbAdapter mAccountsDbAdapter ; 
		+  @Bind ( R.id.input_budget_amount ) CalculatorEditText mBudgetAmountInput ; -  @Bind ( R.id.budget_amount_table_layout ) TableLayout mBudgetAmountTableLayout ; 
		+  @Bind ( R.id.input_budget_account_spinner ) Spinner mBudgetAccountSpinner ; -  @Bind ( R.id.budget_amount_table_layout ) TableLayout mBudgetAmountTableLayout ; 
		+  private ArrayList < BudgetAmount > mBudgetAmounts ; -  private QualifiedAccountNameCursorAdapter mAccountCursorAdapter ; 
		+  private QualifiedAccountNameCursorAdapter mAccountsCursorAdapter ; -  private QualifiedAccountNameCursorAdapter mAccountCursorAdapter ; 
4
7
6
		+  view.findViewById ( R.id.btn_remove_item ) .setVisibility ( View.GONE ) ; -  setupAccountSpinnerAdapter () ; 
		+  view.findViewById ( R.id.btn_remove_item ) .setVisibility ( View.GONE ) ; -  mRecurrenceInput.setOnClickListener ( 
9
8
app/src/main/java/org/gnucash/android/app/GnuCashApplication_java
1
app/src/main/java/org/gnucash/android/ui/settings/AppCompatPreferenceActivity_java
1
app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment_java
1
		+ import org.gnucash.android.ui.common.Refreshable ; - import org.gnucash.android.ui.util.Refreshable ; 
		+ import org.gnucash.android.ui.common.Refreshable ; - import java.util.Currency ; 
app/src/main/res/values/donottranslate_xml
app/src/main/res/values-ar-rSA/strings_xml
app/src/main/java/org/gnucash/android/ui/account/AccountsActivity_java
1
app/src/main/res/values-sr-rSP/strings_xml
app/src/main/java/org/gnucash/android/ui/common/UxArgument_java
1
app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity_java
1
app/src/main/res/values-cs-rCZ/strings_xml
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
	+  StringBuilder repeatBuilder = new StringBuilder ( mPeriodType.getFrequencyRepeatString () ) ; -  StringBuilder ruleBuilder = new StringBuilder ( mPeriodType.getFrequencyRepeatString () ) ; 
	+   repeatBuilder.append ( " on " ) .append ( dayOfWeek ) ; -   ruleBuilder.append ( " on " ) .append ( dayOfWeek ) ; 
		+   repeatBuilder.append ( " until " + SimpleDateFormat.getDateInstance () .format ( new Date ( mPeriodEnd.getTime () ) ) ) ; -  StringBuilder ruleBuilder = new StringBuilder ( mPeriodType.getFrequencyRepeatString () ) ; 
		+   repeatBuilder.append ( " until " + SimpleDateFormat.getDateInstance () .format ( new Date ( mPeriodEnd.getTime () ) ) ) ; -   ruleBuilder.append ( " on " ) .append ( dayOfWeek ) ; 
		+  return repeatBuilder.toString () ; -  return ruleBuilder.toString () ; 
app/src/main/res/values-nb/strings_xml
app/src/main/res/values-ca-rES/strings_xml
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
app/src/main/res/values/colors_xml
app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter_java
1
2
app/src/main/res/values-fr/strings_xml
app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment_java
1
		+  return R.string.title_cash_flow_report ; -  return R.string.title_line_chart ; 
3
	+  if ( mReportPeriodStart == - 1 && mReportPeriodEnd == - 1 ) { -  if ( mReportStartTime == - 1 && mReportEndTime == - 1 ) { 
	+   startDate = new LocalDate ( mReportPeriodStart ) .withDayOfMonth ( 1 ) ; -   startDate = new LocalDate ( mReportStartTime ) .withDayOfMonth ( 1 ) ; 
	+   startDate = new LocalDate ( mReportPeriodStart ) .withDayOfMonth ( 1 ) ; -   endDate = new LocalDate ( mReportEndTime ) .withDayOfMonth ( 1 ) ; 
	+   endDate = new LocalDate ( mReportPeriodEnd ) .withDayOfMonth ( 1 ) ; -   startDate = new LocalDate ( mReportStartTime ) .withDayOfMonth ( 1 ) ; 
	+   endDate = new LocalDate ( mReportPeriodEnd ) .withDayOfMonth ( 1 ) ; -   endDate = new LocalDate ( mReportEndTime ) .withDayOfMonth ( 1 ) ; 
2
5
	+  if ( mReportPeriodStart != - 1 && mReportPeriodEnd != - 1 ) { -  if ( mReportStartTime != - 1 && mReportEndTime != - 1 ) { 
	+  if ( mReportPeriodStart != - 1 && mReportPeriodEnd != - 1 ) { -   mEarliestTransactionTimestamp = mReportStartTime ; 
	+  if ( mReportPeriodStart != - 1 && mReportPeriodEnd != - 1 ) { -   mLatestTransactionTimestamp = mReportEndTime ; 
		+   mEarliestTransactionTimestamp = mReportPeriodStart ; -   mEarliestTransactionTimestamp = mReportStartTime ; 
		+   mEarliestTransactionTimestamp = mReportPeriodStart ; -   mLatestTransactionTimestamp = mReportEndTime ; 
		+   mLatestTransactionTimestamp = mReportPeriodEnd ; -   mEarliestTransactionTimestamp = mReportStartTime ; 
		+   mLatestTransactionTimestamp = mReportPeriodEnd ; -   mLatestTransactionTimestamp = mReportEndTime ; 
4
	+  if ( mReportPeriodStart == - 1 && mReportPeriodEnd == - 1 ) { -  if ( mReportStartTime == - 1 && mReportEndTime == - 1 ) { 
		+   earliest = new LocalDateTime ( mReportPeriodStart ) ; -   earliest = new LocalDateTime ( mReportStartTime ) ; 
		+   earliest = new LocalDateTime ( mReportPeriodStart ) ; -   latest = new LocalDateTime ( mReportEndTime ) ; 
		+   latest = new LocalDateTime ( mReportPeriodEnd ) ; -   earliest = new LocalDateTime ( mReportStartTime ) ; 
		+   latest = new LocalDateTime ( mReportPeriodEnd ) ; -   latest = new LocalDateTime ( mReportEndTime ) ; 
6
	+  if ( mReportPeriodStart != start  |  |  mReportPeriodEnd != end ) { -  if ( mReportStartTime != start  |  |  mReportEndTime != end ) { 
		+  if ( mReportPeriodStart != start  |  |  mReportPeriodEnd != end ) { -   mReportStartTime = start ; 
		+  if ( mReportPeriodStart != start  |  |  mReportPeriodEnd != end ) { -   mReportEndTime = end ; 
		+   mReportPeriodStart = start ; -   mReportStartTime = start ; 
		+   mReportPeriodEnd = end ; -   mReportEndTime = end ; 
app/src/main/java/org/gnucash/android/db/BookDbHelper_java
1
3
2
5
4
app/src/main/res/values-ko-rKR/strings_xml
app/src/main/java/org/gnucash/android/model/BudgetAmount_java
1
	+ public class BudgetAmount extends BaseModel implements Parcelable { - public class BudgetAmount extends BaseModel { 
2
app/src/main/res/values-nl-rNL/strings_xml
app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment_java
1
CONTRIBUTORS
1
3
2
4
app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment_java
1
		+ import org.gnucash.android.ui.report.barchart.StackedBarChartFragment ; - import org.gnucash.android.ui.report.barchart.CashFlowBarChartFragment ; 
3
2
	+    fragment = new StackedBarChartFragment () ; -    fragment = new CashFlowBarChartFragment () ; 
5
		+    DatabaseSchema.BookEntry.COLUMN_MODIFIED_AT + " DESC " ) ; -    DatabaseSchema.BookEntry.COLUMN_MODIFIED_AT + " ASC " ) ; 
4
app/src/main/res/values-el-rGR/strings_xml
app/src/main/res/values-fi-rFI/strings_xml
app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter_java
1
2
app/src/main/res/xml-v11/fragment_transaction_preferences_xml
app/src/main/java/org/gnucash/android/ui/common/FormActivity_java
1
3
2
	+  public enum FormType { ACCOUNT , TRANSACTION , EXPORT , SPLIT_EDITOR , BUDGET , BUDGET_AMOUNT_EDITOR } -  public enum FormType { ACCOUNT , TRANSACTION , EXPORT , SPLIT_EDITOR , BUDGET } 
4
app/src/main/java/org/gnucash/android/ui/budget/BudgetAmountEditorFragment_java
1
app/src/main/res/values-no-rNO/strings_xml
app/src/main/res/values-pl-rPL/strings_xml
app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest_java
1
3
2
	+  mDbHelper = new DatabaseHelper ( mAcccountsActivity , book1.getUID () ) ; -  mDbHelper = new DatabaseHelper ( mAcccountsActivity ) ; 
		+  Book book1 = new Book () ; -  mDbHelper = new DatabaseHelper ( mAcccountsActivity ) ; 
app/src/main/res/layout/activity_transactions_xml
app/src/main/res/values-uk-rUA/strings_xml
app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment_java
1
		+ import com.github.mikephil.charting.components.Legend ; - import android.support.v7.app.AppCompatActivity ; 
		+ import com.github.mikephil.charting.components.Legend ; - import android.view.LayoutInflater ; 
		+ import com.github.mikephil.charting.components.Legend ; - import android.view.ViewGroup ; 
3
		+ import butterknife.OnClick ; - import butterknife.ButterKnife ; 
2
5
4
	+ public class ReportSummaryFragment extends BaseReportFragment { - public class ReportSummaryFragment extends Fragment { 
7
6
8
app/src/main/java/org/gnucash/android/ui/util/RecurrenceViewClickListener_java
1
app/src/main/res/values-hu-rHU/strings_xml
app/src/main/java/org/gnucash/android/db/DatabaseSchema_java
1
2
app/src/main/res/values-pt-rBR/strings_xml
app/src/main/res/xml/fragment_about_preferences_xml
app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity_java
1
3
2
5
4
app/src/main/java/org/gnucash/android/export/Exporter_java
1
	+   super ( " Failed to generate export with parameters: " + params.toString () ) ; -   super ( " Failed to generate " + params.getExportFormat () .toString () ) ; 
	+   super ( " Failed to generate export with parameters: " + params.toString () + " - " + msg ) ; -   super ( " Failed to generate " + params.getExportFormat () .toString () ) ; 
	+   super ( " Failed to generate export with parameters: " + params.toString () + " - " + msg ) ; -   super ( " Failed to generate " + params.getExportFormat () .toString () + " - " + msg ) ; 
app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment_java
1
		+ import org.gnucash.android.ui.common.Refreshable ; - import org.gnucash.android.ui.util.OnAccountClickedListener ; 
		+ import org.gnucash.android.ui.common.Refreshable ; - import org.gnucash.android.ui.util.Refreshable ; 
app/src/main/res/values-tr-rTR/strings_xml
app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment_java
1
		+ package org.gnucash.android.ui.account ; - package org.gnucash.android.ui.util ; 
app/src/main/res/layout/toolbar_xml
app/src/main/res/values-es/strings_xml
app/src/main/res/layout/activity_settings_xml
app/src/main/res/values/styles_xml
app/src/main/res/menu/budget_amount_editor_actions_xml
app/src/main/res/layout/item_budget_amount_xml
app/src/main/res/values-es-rMX/strings_xml
app/src/main/res/menu/transactions_list_actions_xml
app/src/main/java/org/gnucash/android/ui/report/ReportType_java
1
app/src/main/res/values-sw600dp/flags_xml
app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser_java
1
	+  builder.deleteCharAt ( builder.length () - 1 ) ; -  builder.deleteCharAt ( builder.length () ) ; 
app/src/main/res/values/themes_xml
app/src/main/res/layout/actionbar_progress_indicator_xml
app/src/main/java/org/gnucash/android/model/Book_java
1
2
app/src/main/res/xml-v11/fragment_account_preferences_xml
app/src/main/res/layout/toolbar_transactions_activity_xml
app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment_java
1
2
app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest_java
1
		+ import org.gnucash.android.ui.report.BaseReportFragment ; - import org.gnucash.android.ui.report.PieChartFragment ; 
		+ import org.gnucash.android.ui.report.piechart.PieChartFragment ; - import org.gnucash.android.ui.report.PieChartFragment ; 
3
	+  String selectedText = String.format ( BaseReportFragment.SELECTED_VALUE_PATTERN , DINING_EXPENSE_ACCOUNT_NAME , TRANSACTION_AMOUNT , percent ) ; -  String selectedText = String.format ( PieChartFragment.SELECTED_VALUE_PATTERN , DINING_EXPENSE_ACCOUNT_NAME , TRANSACTION_AMOUNT , percent ) ; 
2
app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment_java
11
	+    fragment = new CashFlowBarChartFragment () ; -    fragment = new BarChartFragment () ; 
10
13
12
		+    .replace ( R.id.fragment_container , fragment ) -  loadFragment ( fragment ) ; 
1
3
		+   ( ( ReportOptionsListener ) fragment ) .onTimeRangeUpdated ( mReportPeriodStart , mReportPeriodEnd ) ; -   ( ( ReportOptionsListener ) fragment ) .onTimeRangeUpdated ( mReportStartTime , mReportEndTime ) ; 
2
	+  public void updateReportTypeSpinner ( ReportType reportType , String reportName ) { -  public void updateReportTypeSpinner ( ReportType reportType ) { 
		+  public void updateReportTypeSpinner ( ReportType reportType , String reportName ) { -  mReportTypeSpinner.setOnItemSelectedListener ( mReportTypeSelectedListener ) ; 
		+  if ( reportType == mReportType ) -  mReportTypeSpinner.setOnItemSelectedListener ( mReportTypeSelectedListener ) ; 
		+  mSkipNextReportTypeSelectedRun = true ; -  mSkipNextReportTypeSelectedRun = true ; 
		+  mReportTypeSpinner.setOnItemSelectedListener ( mReportTypeSelectedListener ) ; -  mReportTypeSpinner.setOnItemSelectedListener ( mReportTypeSelectedListener ) ; 
		+  if ( mReportType == ReportType.NONE ) { -  mReportTypeSpinner.setOnItemSelectedListener ( mReportTypeSelectedListener ) ; 
5
		+  mReportPeriodStart = calendar.getTimeInMillis () ; -  mReportStartTime = calendar.getTimeInMillis () ; 
		+  mReportPeriodStart = calendar.getTimeInMillis () ; -  mReportStartTime = startDate.getTime () ; 
		+  mReportPeriodStart = calendar.getTimeInMillis () ; -  mReportEndTime = endDate.getTime () ; 
		+  mReportPeriodStart = startDate.getTime () ; -  mReportStartTime = calendar.getTimeInMillis () ; 
		+  mReportPeriodStart = startDate.getTime () ; -  mReportStartTime = startDate.getTime () ; 
		+  mReportPeriodStart = startDate.getTime () ; -  mReportEndTime = endDate.getTime () ; 
		+  mReportPeriodEnd = endDate.getTime () ; -  mReportStartTime = calendar.getTimeInMillis () ; 
		+  mReportPeriodEnd = endDate.getTime () ; -  mReportStartTime = startDate.getTime () ; 
		+  mReportPeriodEnd = endDate.getTime () ; -  mReportEndTime = endDate.getTime () ; 
4
	+  mReportPeriodEnd = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; -  mReportEndTime = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
	+    mReportPeriodStart = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
		+  mReportPeriodEnd = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; -    mReportStartTime = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; 
		+  mReportPeriodEnd = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; -    mReportStartTime = - 1 ; 
		+  mReportPeriodEnd = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; -    mReportEndTime = - 1 ; 
		+    mReportPeriodStart = new LocalDate () .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -  mReportEndTime = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; 
		+    mReportPeriodStart = new LocalDate () .minusMonths ( 2 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -  mReportEndTime = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; 
		+    mReportPeriodStart = new LocalDate () .minusMonths ( 5 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -  mReportEndTime = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; 
		+    mReportPeriodStart = new LocalDate () .minusMonths ( 11 ) .dayOfMonth () .withMinimumValue () .toDate () .getTime () ; -  mReportEndTime = new LocalDate () .plusDays ( 1 ) .toDate () .getTime () ; 
		+    mReportPeriodStart = - 1 ; -    mReportStartTime = - 1 ; 
		+    mReportPeriodStart = - 1 ; -    mReportEndTime = - 1 ; 
		+    mReportPeriodEnd = - 1 ; -    mReportStartTime = - 1 ; 
		+    mReportPeriodEnd = - 1 ; -    mReportEndTime = - 1 ; 
7
6
		+  public long getReportPeriodEnd () { -  public long getReportEndTime () { 
		+  public long getReportPeriodEnd () { -  public long getReportStartTime () { 
		+  return mReportPeriodEnd ; -  return mReportEndTime ; 
		+  return mReportPeriodEnd ; -  return mReportStartTime ; 
		+  public long getReportPeriodStart () { -  public long getReportEndTime () { 
		+  public long getReportPeriodStart () { -  public long getReportStartTime () { 
		+  return mReportPeriodStart ; -  return mReportEndTime ; 
		+  return mReportPeriodStart ; -  return mReportStartTime ; 
		+  return super.onKeyUp ( keyCode , event ) ; -  return mReportEndTime ; 
		+  return super.onKeyUp ( keyCode , event ) ; -  return mReportStartTime ; 
9
		+ public class ReportsOverviewFragment extends BaseReportFragment { - public class ReportSummaryFragment extends BaseReportFragment { 
8
		+ import org.gnucash.android.ui.report.barchart.CashFlowBarChartFragment ; - import org.gnucash.android.ui.report.barchart.BarChartFragment ; 
app/src/main/java/org/gnucash/android/ui/util/CursorRecyclerAdapter_java
10
1
	+ * @return Returns the previously set Cursor , or null if there was not one. - * @return Returns the previously set Cursor , or null if there wasa not one. 
3
2
5
4
7
		+ default: -   default: 
6
9
8
	+ .inflate ( layoutRes , parent , false ) ; - .inflate ( R.layout.cardview_transaction , parent , false ) ; 
app/src/main/res/values/strings_xml
app/src/main/java/org/gnucash/android/export/ExportParams_java
1
	+  public enum ExportTarget { SD_CARD , SHARING , DROPBOX , GOOGLE_DRIVE , OWNCLOUD } -  public enum ExportTarget { SD_CARD , SHARING , DROPBOX , GOOGLE_DRIVE } 
app/src/main/res/layout/nav_drawer_header_xml
app/src/main/res/xml-v11/fragment_about_preferences_xml
app/src/main/res/layout/reports_toolbar_xml
app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity_java
1
3
2
app/src/main/res/values-pt-rPT/strings_xml
app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter_java
1
	+    throw new IllegalArgumentException ( mTableName + " with GUID " + uid + " does not exist in the db " ) ; -    throw new IllegalArgumentException ( " GUID " + uid + " does not exist in the db " ) ; 
app/src/main/java/org/gnucash/android/ui/settings/GeneralPreferenceFragment_java
1
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.CheckBoxPreference ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.Preference ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.Preference.OnPreferenceChangeListener ; 
		+ import android.support.v7.app.AppCompatActivity ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.CheckBoxPreference ; - import android.preference.CheckBoxPreference ; 
		+ import android.support.v7.preference.CheckBoxPreference ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.CheckBoxPreference ; - import android.preference.Preference.OnPreferenceChangeListener ; 
		+ import android.support.v7.preference.CheckBoxPreference ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.CheckBoxPreference ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.Preference.OnPreferenceChangeListener ; 
		+ import android.support.v7.preference.Preference ; - import android.preference.PreferenceFragment ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.CheckBoxPreference ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.Preference ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.Preference.OnPreferenceChangeListener ; 
		+ import android.support.v7.preference.PreferenceFragmentCompat ; - import android.preference.PreferenceFragment ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.CheckBoxPreference ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.Preference ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.Preference.OnPreferenceChangeListener ; 
		+ import org.gnucash.android.db.adapter.BooksDbAdapter ; - import android.preference.PreferenceFragment ; 
2
app/src/main/res/layout/fragment_split_editor_xml
app/src/main/res/layout/cardview_compact_transaction_xml
app/src/main/AndroidManifest_xml
app/src/main/java/org/gnucash/android/model/Budget_java
1
app/src/main/res/values-en-rGB/strings_xml
app/src/main/java/org/gnucash/android/ui/report/ReportsActivity_java
1
		+   BaseReportFragment reportFragment = ( BaseReportFragment ) fragment ; -  BaseReportFragment reportFragment = ( BaseReportFragment ) fragment ; 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity_java
1
	+   ( ( TextView ) view ) .setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , 0 , 0 ) ; -   ( ( TextView ) view ) .setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , 0 , 0 ) ; 
app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
3
		+  intent.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , ( ArrayList < Split > ) extractSplitsFromView () ) ; -    splitStrings.add ( split.toCsv () ) ; 
		+  intent.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , ( ArrayList < Split > ) extractSplitsFromView () ) ; -   intent.putStringArrayListExtra ( UxArgument.SPLIT_LIST , splitStrings ) ; 
2
5
4
7
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   List < String > splits = data.getStringArrayListExtra ( UxArgument.SPLIT_LIST ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -    splitList.add ( Split.parseSplit ( splitCsv ) ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   List < String > removedSplits = data.getStringArrayListExtra ( UxArgument.REMOVED_SPLITS ) ; 
		+   List < Split > splitList = data.getParcelableArrayListExtra ( UxArgument.SPLIT_LIST ) ; -   setSplitList ( splitList , removedSplits ) ; 
6
app/src/main/java/org/gnucash/android/model/Split_java
1
	+ onView ( withId ( R.id.input_transaction_name ) ) .perform ( clearText () , typeText ( trnName ) ) ; - onView ( withId ( R.id.input_transaction_name ) ) .perform ( clearText () , typeText ( " Pasta " ) ) ; 
app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText_java
1
		+  String text = evaluate () ; -  evaluate () ; 
app/src/main/java/org/gnucash/android/model/Transaction_java
1
	+  Money imbalance = getImbalance () ; -  Money imbalance = getImbalance () ; 
	+   Split split = new Split ( imbalance.negate () , mCurrencyCode ) ; -   Split split = new Split ( imbalance.negate () , 
		+  public Split createAutoBalanceSplit () { -  public Split getAutoBalanceSplit () { 
		+   Split split = new Split ( imbalance.negate () , mCurrencyCode ) ; -    currency.getCurrencyCode () ) ; 
2
	+   if ( ! split.getQuantity () .getCurrency () .getCurrencyCode () .equals ( mCurrencyCode ) ) { -   if ( ! split.getValue () .getCurrency () .getCurrencyCode () .equals ( mCurrencyCode ) ) { 
app/src/main/java/org/gnucash/android/ui/common/UxArgument_java
1
3
		+  setQuantity ( new Money ( amount ) ) ; -  setQuantity ( amount ) ; 
2
	+ public class Split extends BaseModel implements Parcelable { - public class Split extends BaseModel { 
5
4
6
app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest_java
1
		+  .doesNotContain ( " non- existent " ) -  .doesNotContain ( " random " ) 
		+  .doesNotContain ( " non- existent " ) -  .doesNotContain ( " account- something " ) ; 
		+  .doesNotContain ( " pre- existent " ) ; -  .doesNotContain ( " account- something " ) ; 
3
2
app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter_java
1
	+   Split imbalanceSplit = transaction.createAutoBalanceSplit () ; -   Split imbalanceSplit = transaction.getAutoBalanceSplit () ; 
		+  Log.d ( LOG_TAG , " Adding transaction to the db via " + updateMethod.name () ) ; -  Log.d ( LOG_TAG , " Replacing transaction in db " ) ; 
app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest_java
11
		+ childAccount.setParentUID ( TRANSACTIONS_ACCOUNT_UID ) ; - childAccount.setParentUID ( DUMMY_ACCOUNT_UID ) ; 
		+ mAccountsDbAdapter.updateRecord ( TRANSACTIONS_ACCOUNT_UID , contentValues ) ; - mAccountsDbAdapter.updateRecord ( DUMMY_ACCOUNT_UID , contentValues ) ; 
10
	+  List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; -  List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
13
	+ List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; - List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
	+ assertThat ( TRANSACTION_NAME ) .isEqualTo ( transaction.getDescription () ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
	+ Date trxDate = new Date ( transaction.getTimeMillis () ) ; - Date trxDate = new Date ( trx.getTimeMillis () ) ; 
		+ Transaction transaction = transactions.get ( 0 ) ; - Transaction trx = transactions.get ( 0 ) ; 
		+ Split baseSplit = transaction.getSplits ( TRANSACTIONS_ACCOUNT_UID ) .get ( 0 ) ; - Transaction trx = transactions.get ( 0 ) ; 
		+ Money expectedAmount = new Money ( TRANSACTION_AMOUNT , CURRENCY_CODE ) ; - Date trxDate = new Date ( trx.getTimeMillis () ) ; 
		+ assertThat ( baseSplit.getValue () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( baseSplit.getQuantity () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( baseSplit.getType () ) .isEqualTo ( TransactionType.DEBIT ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ Split transferSplit = transaction.getSplits ( TRANSFER_ACCOUNT_UID ) .get ( 0 ) ; - Transaction trx = transactions.get ( 0 ) ; 
		+ assertThat ( transferSplit.getValue () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( transferSplit.getQuantity () ) .isEqualTo ( expectedAmount ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
		+ assertThat ( transferSplit.getType () ) .isEqualTo ( TransactionType.CREDIT ) ; - assertThat ( TRANSACTION_NAME ) .isEqualTo ( trx.getDescription () ) ; 
12
	+ List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; - List < Transaction > transactions = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
	+ assertThat ( trx.getBalance ( TRANSACTIONS_ACCOUNT_UID ) .isNegative () ) .isTrue () ; - assertThat ( trx.getBalance ( DUMMY_ACCOUNT_UID ) .isNegative () ) .isTrue () ; 
15
	+ assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ) .hasSize ( 0 ) ; - assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ) .hasSize ( 0 ) ; 
14
		+ long id = mAccountsDbAdapter.getID ( TRANSACTIONS_ACCOUNT_UID ) ; - long id = mAccountsDbAdapter.getID ( DUMMY_ACCOUNT_UID ) ; 
17
	+ assertThat ( mAccountsDbAdapter.getAccountBalance ( TRANSACTIONS_ACCOUNT_UID ) ) .isEqualTo ( Money.createZeroInstance ( CURRENCY_CODE ) ) ; - assertThat ( mAccountsDbAdapter.getAccountBalance ( DUMMY_ACCOUNT_UID ) ) .isEqualTo ( Money.createZeroInstance ( CURRENCY_CODE ) ) ; 
16
	+ onView ( withSpinnerText ( TRANSACTIONS_ACCOUNT_NAME ) ) .perform ( click () ) ; - onView ( withSpinnerText ( DUMMY_ACCOUNT_NAME ) ) .perform ( click () ) ; 
19
18
	+ assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ) .hasSize ( 1 ) ; - assertThat ( mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ) .hasSize ( 1 ) ; 
	+ List < Transaction > dummyAccountTrns = mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) ; - List < Transaction > dummyAccountTrns = mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) ; 
1
3
	+ mBaseAccount = new Account ( TRANSACTIONS_ACCOUNT_NAME , COMMODITY ) ; - mBaseAccount = new Account ( DUMMY_ACCOUNT_NAME , COMMODITY ) ; 
2
	+ private static final String TRANSACTIONS_ACCOUNT_UID = " transactions- account " ; - private static final String DUMMY_ACCOUNT_UID = " transactions- account " ; 
	+ private static final String TRANSACTIONS_ACCOUNT_NAME = " Transactions Account " ; - private static final String DUMMY_ACCOUNT_NAME = " Transactions Account " ; 
		+ private static final String TRANSACTIONS_ACCOUNT_UID = " transactions- account " ; - private static final String DUMMY_ACCOUNT_NAME = " Transactions Account " ; 
		+ private static final String TRANSACTIONS_ACCOUNT_NAME = " Transactions Account " ; - private static final String DUMMY_ACCOUNT_UID = " transactions- account " ; 
5
		+ intent.putExtra ( UxArgument.SELECTED_ACCOUNT_UID , TRANSACTIONS_ACCOUNT_UID ) ; - intent.putExtra ( UxArgument.SELECTED_ACCOUNT_UID , DUMMY_ACCOUNT_UID ) ; 
4
	+ Split split = new Split ( new Money ( TRANSACTION_AMOUNT , CURRENCY_CODE ) , TRANSACTIONS_ACCOUNT_UID ) ; - Split split = new Split ( new Money ( TRANSACTION_AMOUNT , CURRENCY_CODE ) , DUMMY_ACCOUNT_UID ) ; 
7
		+ int beforeCount = mTransactionsDbAdapter.getTransactionsCount ( TRANSACTIONS_ACCOUNT_UID ) ; - int beforeCount = mTransactionsDbAdapter.getTransactionsCount ( DUMMY_ACCOUNT_UID ) ; 
6
		+  return mTransactionsDbAdapter.getAllTransactionsForAccount ( TRANSACTIONS_ACCOUNT_UID ) .size () ; -  return mTransactionsDbAdapter.getAllTransactionsForAccount ( DUMMY_ACCOUNT_UID ) .size () ; 
9
		+ Money balance = transaction.getBalance ( TRANSACTIONS_ACCOUNT_UID ) ; - Money balance = transaction.getBalance ( DUMMY_ACCOUNT_UID ) ; 
8
		+ int afterCount = mTransactionsDbAdapter.getTransactionsCount ( TRANSACTIONS_ACCOUNT_UID ) ; - int afterCount = mTransactionsDbAdapter.getTransactionsCount ( DUMMY_ACCOUNT_UID ) ; 
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
		+    Split imbSplit = mTransaction.createAutoBalanceSplit () ; -    Split imbSplit = mTransaction.getAutoBalanceSplit () ; 
2
app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment_java
1
3
2
		+  List < Split > splitList = getArguments () .getParcelableArrayList ( UxArgument.SPLIT_LIST ) ; -  List < String > splitStrings = getArguments () .getStringArrayList ( UxArgument.SPLIT_LIST ) ; 
		+  List < Split > splitList = getArguments () .getParcelableArrayList ( UxArgument.SPLIT_LIST ) ; -    splitList.add ( Split.parseSplit ( splitString ) ) ; 
5
		+  private ArrayList < Split > extractSplitsFromView () { -  private List < Split > extractSplitsFromView () { 
		+  ArrayList < Split > splitList = new ArrayList < > () ; -  List < Split > splitList = new ArrayList < > () ; 
4
		+  data.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , extractSplitsFromView () ) ; -   splitStrings.add ( split.toCsv () ) ; 
		+  data.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , extractSplitsFromView () ) ; -  data.putStringArrayListExtra ( UxArgument.SPLIT_LIST , splitStrings ) ; 
		+  data.putParcelableArrayListExtra ( UxArgument.SPLIT_LIST , extractSplitsFromView () ) ; -  data.putStringArrayListExtra ( UxArgument.REMOVED_SPLITS , mRemovedSplitUIDs ) ; 
app/src/main/res/values-pl/strings_xml
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment_java
1
app/src/main/java/org/gnucash/android/export/qif/QifExporter_java
1
3
2
	+     " ( " + AccountEntry.TABLE_NAME + " _ " + AccountEntry.COLUMN_UID + " != account1. " + AccountEntry.COLUMN_UID + " OR " + -      AccountEntry.TABLE_NAME + " _ " + AccountEntry.COLUMN_UID + " != account1. " + AccountEntry.COLUMN_UID + 
app/src/test/java/org/gnucash/android/test/unit/model/PriceTest_java
1
2
app/src/main/java/org/gnucash/android/model/Price_java
1
2
	+  return formatter.format ( numerator.divide ( denominator , MathContext.DECIMAL32 ) ) ; -  return formatter.format ( numerator.divide ( denominator ) ) ; 
app/res/values-it/strings_xml
app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter_java
1
3
	+   FileOutputStream fileOutputStream = new FileOutputStream ( getBackupFilePath ( bookUID ) ) ; -   FileOutputStream fileOutputStream = new FileOutputStream ( getBackupFilePath () ) ; 
2
4
	+  private static String getBackupFilePath ( String bookUID ) { -  private static String getBackupFilePath () { 
	+  return Exporter.getBackupFolderPath ( book.getUID () ) + buildExportFilename ( ExportFormat.XML , book.getDisplayName () ) + " .zip " ; -  return Exporter.getBackupFolderPath () + buildExportFilename ( ExportFormat.XML ) + " .zip " ; 
app/src/main/java/org/gnucash/android/export/ofx/OfxExporter_java
1
2
app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest_java
1
	+ File folder = new File ( Exporter.getExportFolderPath ( BooksDbAdapter.getInstance () .getActiveBookUID () ) ) ; - File folder = new File ( Exporter.getExportFolderPath () ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest_java
1
3
	+  assertThat ( Commodity.DEFAULT_COMMODITY ) .isEqualTo ( Commodity.USD ) ; -  assertThat ( Commodity.DEFAULT_COMMODITY ) .isEqualTo ( expectedDefaultCommodity ) ; 
	+  System.out.println ( " Default currency is now: " + Commodity.DEFAULT_COMMODITY ) ; -  System.out.println ( " Default currency is now: " + expectedCode ) ; 
		+  assertThat ( GnuCashApplication.getDefaultCurrencyCode () ) .isEqualTo ( " USD " ) ; -  assertThat ( GnuCashApplication.getDefaultCurrencyCode () ) .isEqualTo ( expectedCode ) ; 
		+  assertThat ( GnuCashApplication.getDefaultCurrencyCode () ) .isEqualTo ( " USD " ) ; -  assertThat ( Commodity.DEFAULT_COMMODITY ) .isEqualTo ( expectedDefaultCommodity ) ; 
		+  assertThat ( Commodity.DEFAULT_COMMODITY ) .isEqualTo ( Commodity.USD ) ; -  assertThat ( GnuCashApplication.getDefaultCurrencyCode () ) .isEqualTo ( expectedCode ) ; 
2
		+  public void importingXml_shouldSetDefaultCurrencyFromXml () { -  public void importingXml_shouldSetDefaultCurrency () { 
app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest_java
1
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter_java
1
2
	+    throw new RuntimeException ( " There is no active book in the app. This should NEVER happen , fix your bugs ! " ) ; -    throw new RuntimeException ( " There is no active book in the app. This should NEVER happen ! " ) ; 
app/src/main/java/org/gnucash/android/service/ScheduledActionService_java
1
2
app/src/main/java/org/gnucash/android/export/ExportAsyncTask_java
1
	+    mExporter = new QifExporter ( mExportParams , mDb ) ; -    mExporter = new QifExporter ( mExportParams ) ; 
	+    mExporter = new QifExporter ( mExportParams , mDb ) ; -    mExporter = new OfxExporter ( mExportParams ) ; 
	+    mExporter = new QifExporter ( mExportParams , mDb ) ; -    mExporter = new GncXmlExporter ( mExportParams ) ; 
	+    mExporter = new OfxExporter ( mExportParams , mDb ) ; -    mExporter = new QifExporter ( mExportParams ) ; 
	+    mExporter = new OfxExporter ( mExportParams , mDb ) ; -    mExporter = new OfxExporter ( mExportParams ) ; 
	+    mExporter = new OfxExporter ( mExportParams , mDb ) ; -    mExporter = new GncXmlExporter ( mExportParams ) ; 
	+    mExporter = new GncXmlExporter ( mExportParams , mDb ) ; -    mExporter = new QifExporter ( mExportParams ) ; 
	+    mExporter = new GncXmlExporter ( mExportParams , mDb ) ; -    mExporter = new OfxExporter ( mExportParams ) ; 
	+    mExporter = new GncXmlExporter ( mExportParams , mDb ) ; -    mExporter = new GncXmlExporter ( mExportParams ) ; 
2
	+  new File ( Exporter.getExportFolderPath ( mExporter.mBookUID ) ) ; -  new File ( Exporter.getExportFolderPath () ) ; 
	+   String dst = Exporter.getExportFolderPath ( mExporter.mBookUID ) + stripPathPart ( src ) ; -   String dst = Exporter.getExportFolderPath () + stripPathPart ( src ) ; 
app/src/main/java/org/gnucash/android/export/Exporter_java
1
3
2
5
4
7
	+   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () , bookName ) ; -   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; 
	+  public static String getExportFolderPath ( String bookUID ) { -  public static String getExportFolderPath () { 
		+   String bookName = BooksDbAdapter.getInstance () .getAttribute ( mBookUID , DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME ) ; -   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; 
		+  String path = BASE_FOLDER_PATH + " / " + bookUID + " /exports/ " ; -   mExportCacheFilePath = cachePath + buildExportFilename ( mExportParams.getExportFormat () ) ; 
6
	+  return inputName.replaceAll ( " [^a- zA- Z0- 9- _\\.] " , " _ " ) ; -    + " _gnucash_export " + format.getExtension () ; 
	+  public static String buildExportFilename ( ExportFormat format , String bookName ) { -  public static String buildExportFilename ( ExportFormat format ) { 
	+    + " _gnucash_export_ " + sanitizeFilename ( bookName ) + format.getExtension () ; -    + " _gnucash_export " + format.getExtension () ; 
		+  public static String sanitizeFilename ( String inputName ) { -  public static String buildExportFilename ( ExportFormat format ) { 
		+  public static String sanitizeFilename ( String inputName ) { -    + " _gnucash_export " + format.getExtension () ; 
		+  public static String buildExportFilename ( ExportFormat format , String bookName ) { -    + " _gnucash_export " + format.getExtension () ; 
8
	+  public static String getBackupFolderPath ( String bookUID ) { -  public static String getBackupFolderPath () { 
app/src/main/java/org/gnucash/android/model/Recurrence_java
1
		+  DateTime localDate = new DateTime ( mPeriodStart.getTime () ) ; -  LocalDateTime localDate = new LocalDateTime ( mPeriodStart.getTime () ) ; 
		+  DateTime localDate = new DateTime ( mPeriodStart.getTime () ) ; -  mPeriodEnd = new Timestamp ( endDate.toDate () .getTime () ) ; 
		+  DateTime endDate ; -  LocalDateTime endDate ; 
		+    endDate = localDate.plusDays ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
		+    endDate = localDate.plusWeeks ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
		+   default: -   default: 
		+    endDate = localDate.plusMonths ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
		+    endDate = localDate.plusYears ( occurrenceDuration ) ; -  LocalDateTime endDate ; 
app/src/main/java/org/gnucash/android/model/Commodity_java
1
app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity_java
1
app/src/main/java/org/gnucash/android/export/qif/QifExporter_java
1
		+  LOG_TAG = " OfxExporter " ; -  LOG_TAG = " QifExporter " ; 
		+  LOG_TAG = " OfxExporter " ; -  LOG_TAG = " QifExporter " ; 
app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment_java
1
3
2
	+ File[] backupFiles = new File ( Exporter.getBackupFolderPath ( bookUID ) ) .listFiles () ; - File[] backupFiles = new File ( Exporter.getBackupFolderPath () ) .listFiles () ; 
app/src/main/java/org/gnucash/android/model/BaseModel_java
1
		+  mCreatedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mCreatedTimestamp = TimestampHelper.getTimestampForNow () ; 
		+  mCreatedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mModifiedTimestamp = TimestampHelper.getTimestampForNow () ; 
		+  mModifiedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mCreatedTimestamp = TimestampHelper.getTimestampForNow () ; 
		+  mModifiedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mModifiedTimestamp = TimestampHelper.getTimestampForNow () ; 
app/src/main/java/org/gnucash/android/util/PreferencesHelper_java
1
	+  final String utcString = TimestampHelper.getUtcStringFromTimestamp ( lastExportTime ) ; -  final String utcString = TimestampHelper.getUtcStringForTimestamp ( lastExportTime ) ; 
2
	+    TimestampHelper.getTimestampFromEpochZero () : TimestampHelper.getTimestampFromUtcString ( utcString ) ; -    TimestampHelper.getTimestampForEpochZero () : TimestampHelper.getTimestampForUtcString ( utcString ) ; 
app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest_java
1
	+  assertThat ( lastExportTime ) .isEqualTo ( TimestampHelper.getTimestampFromEpochZero () ) ; -  assertThat ( lastExportTime ) .isEqualTo ( TimestampHelper.getTimestampForEpochZero () ) ; 
app/src/main/java/org/gnucash/android/util/TimestampHelper_java
1
	+  public static String getUtcStringFromTimestamp ( Timestamp timestamp ) { -  public static String getUtcStringForTimestamp ( Timestamp timestamp ) { 
	+  public static String getUtcStringFromTimestamp ( Timestamp timestamp ) { -  public static Timestamp getTimestampForEpochZero () { 
	+  public static Timestamp getTimestampFromEpochZero () { -  public static Timestamp getTimestampForEpochZero () { 
3
		+  public static Timestamp getTimestampFromNow () { -  public static Timestamp getTimestampForNow () { 
2
	+  public static Timestamp getTimestampFromUtcString ( String utcString ) { -  public static Timestamp getTimestampForUtcString ( String utcString ) { 
app/src/main/java/org/gnucash/android/db/AccountsDbAdapter_java
1
	+  mReplaceStatement.bindString ( 10 , TimestampHelper.getUtcStringFromTimestamp ( account.getCreatedTimestamp () ) ) ; -  mReplaceStatement.bindString ( 10 , TimestampHelper.getUtcStringForTimestamp ( account.getCreatedTimestamp () ) ) ; 
2
	+    new String[] { TimestampHelper.getUtcStringFromTimestamp ( lastExportTimeStamp ) } , -    new String[] { TimestampHelper.getUtcStringForTimestamp ( lastExportTimeStamp ) } , 
app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest_java
1
		+  public void shouldGetUtcStringFromTimestamp () { -  public void shouldGetUtcStringForTimestamp () { 
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
	+  contentValues.put ( CommonColumns.COLUMN_CREATED_AT , TimestampHelper.getUtcStringFromTimestamp ( model.getCreatedTimestamp () ) ) ; -  contentValues.put ( CommonColumns.COLUMN_CREATED_AT , TimestampHelper.getUtcStringForTimestamp ( model.getCreatedTimestamp () ) ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest_java
1
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
app/src/main/java/org/gnucash/android/export/ExportParams_java
1
	+  private Timestamp mExportStartTime = TimestampHelper.getTimestampFromEpochZero () ; -  private Timestamp mExportStartTime = TimestampHelper.getTimestampForEpochZero () ; 
app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter_java
1
		+   textView.setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , R.drawable.ic_star_black_18dp , 0 ) ; -   textView.setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , R.drawable.ic_star_black_24dp , 0 ) ; 
app/res/values-fr/strings_xml
app/res/values-it/strings_xml
app/res/values-el/strings_xml
app/res/values-nl/strings_xml
app/pom_xml
app/res/values-zh/strings_xml
app/res/values/strings_xml
app/src/org/gnucash/android/util/GnucashAccountXmlHandler_java
1
2
app/src/org/gnucash/android/ui/transactions/NewTransactionFragment_java
1
2
		+  new Handler () .postDelayed ( new Runnable () { -  mDoubleAccountSpinner.setSelection ( pos ) ; 
app/src/org/gnucash/android/ui/transactions/TransactionsActivity_java
1
3
2
4
app/src/org/gnucash/android/data/Money_java
1
	+  private static final Money sDefaultZero = Money.createInstance ( Currency.getInstance ( Locale.getDefault () ) .getCurrencyCode () ) ; -  public static final Money sDefaultZero = Money.createInstance ( Currency.getInstance ( Locale.getDefault () ) .getCurrencyCode () ) ; 
app/src/org/gnucash/android/ui/accounts/AccountsActivity_java
1
	+  releaseTitle.append ( " - v " ) .append ( packageInfo.versionName ) ; - .setTitle ( R.string.title_whats_new ) 
	+  new AlertDialog.Builder ( this ) - new AlertDialog.Builder ( this ) 
		+  StringBuilder releaseTitle = new StringBuilder ( getResources () .getString ( R.string.title_whats_new ) ) ; - .setTitle ( R.string.title_whats_new ) 
		+  PackageInfo packageInfo = null ; - .setTitle ( R.string.title_whats_new ) 
		+   packageInfo = getPackageManager () .getPackageInfo ( getPackageName () , 0 ) ; - .setTitle ( R.string.title_whats_new ) 
		+ .setTitle ( releaseTitle.toString () ) - .setTitle ( R.string.title_whats_new ) 
app/res/values-ru/strings_xml
app/res/values-nb/strings_xml
app/res/values-pt-rBR/strings_xml
app/src/org/gnucash/android/db/TransactionsDbAdapter_java
1
app/res/values-hu/strings_xml
app/res/values-es-rMX/strings_xml
app/res/values-es/strings_xml
app/res/values-de/strings_xml
app/src/org/gnucash/android/db/AccountsDbAdapter_java
1
	+  List < Long > subAccounts = getSubAccountIds ( accountId ) ; -  List < Long > subAccounts = getSubAccountIds ( accountId ) ; 
2
integration-tests/pom_xml
app/res/layout/fragment_new_transaction_xml
app/src/org/gnucash/android/export/ExporterAsyncTask_java
1
	+   Log.e ( TAG , ( e.getMessage () == null ? " " : e.getMessage () ) ) ; -   Log.e ( TAG , e.getMessage () ) ; 
	+     Toast.makeText ( mContext , err_msg , Toast.LENGTH_LONG ) .show () ; -    Toast.makeText ( mContext , err_msg , Toast.LENGTH_LONG ) .show () ; 
app/src/main/res/layout/activity_transaction_detail_xml
app/src/main/java/org/gnucash/android/db/MigrationHelper_java
1
3
	+    moveDirectory ( srcDir , dstDir ) ; -    moveDirectory ( srcDir , dstDir ) ; 
	+    File readmeFile = new File ( Exporter.LEGACY_BASE_FOLDER_PATH , " README.txt " ) ; -    File readmeFile = new File ( Exporter.LEGACY_BASE_FOLDER_PATH , " README.txt " ) ; 
	+    FileWriter writer = null ; -    FileWriter writer = null ; 
		+    File readmeFile = new File ( Exporter.LEGACY_BASE_FOLDER_PATH , " README.txt " ) ; -    moveDirectory ( srcDir , dstDir ) ; 
		+   } catch ( IOException  |  IllegalArgumentException ex ) { -   } catch ( IOException e ) { 
		+    String msg = String.format ( " Error moving files from %s to %s " , srcDir.getPath () , dstDir.getPath () ) ; -    moveDirectory ( srcDir , dstDir ) ; 
		+    String msg = String.format ( " Error moving files from %s to %s " , srcDir.getPath () , dstDir.getPath () ) ; -    Log.e ( LOG_TAG , " Error creating README file " ) ; 
2
		+ * @return New database version - * @return 
app/src/main/java/org/gnucash/android/importer/GncXmlHandler_java
1
	+    if ( parentAccount == null  |  |  parentAccount.getAccountType () == AccountType.ROOT ) { -    if ( parentAccount.getAccountType () == AccountType.ROOT ) { 
app/src/main/java/org/gnucash/android/model/BaseModel_java
1
		+  mCreatedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mCreatedTimestamp = TimestampHelper.getTimestampForNow () ; 
		+  mCreatedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mModifiedTimestamp = TimestampHelper.getTimestampForNow () ; 
		+  mModifiedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mCreatedTimestamp = TimestampHelper.getTimestampForNow () ; 
		+  mModifiedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mModifiedTimestamp = TimestampHelper.getTimestampForNow () ; 
app/src/main/java/org/gnucash/android/util/PreferencesHelper_java
1
3
2
	+  final String utcString = TimestampHelper.getUtcStringFromTimestamp ( lastExportTime ) ; -  final String utcString = TimestampHelper.getUtcStringForTimestamp ( lastExportTime ) ; 
app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest_java
1
	+  assertThat ( lastExportTime ) .isEqualTo ( TimestampHelper.getTimestampFromEpochZero () ) ; -  assertThat ( lastExportTime ) .isEqualTo ( TimestampHelper.getTimestampForEpochZero () ) ; 
app/src/main/java/org/gnucash/android/util/TimestampHelper_java
1
	+  public static String getUtcStringFromTimestamp ( Timestamp timestamp ) { -  public static String getUtcStringForTimestamp ( Timestamp timestamp ) { 
	+  public static String getUtcStringFromTimestamp ( Timestamp timestamp ) { -  public static Timestamp getTimestampForEpochZero () { 
	+  public static Timestamp getTimestampFromEpochZero () { -  public static Timestamp getTimestampForEpochZero () { 
3
		+  public static Timestamp getTimestampFromNow () { -  public static Timestamp getTimestampForNow () { 
2
	+  public static Timestamp getTimestampFromUtcString ( String utcString ) { -  public static Timestamp getTimestampForUtcString ( String utcString ) { 
app/src/main/java/org/gnucash/android/db/AccountsDbAdapter_java
1
	+  mReplaceStatement.bindString ( 10 , TimestampHelper.getUtcStringFromTimestamp ( account.getCreatedTimestamp () ) ) ; -  mReplaceStatement.bindString ( 10 , TimestampHelper.getUtcStringForTimestamp ( account.getCreatedTimestamp () ) ) ; 
2
	+    new String[] { TimestampHelper.getUtcStringFromTimestamp ( lastExportTimeStamp ) } , -    new String[] { TimestampHelper.getUtcStringForTimestamp ( lastExportTimeStamp ) } , 
app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest_java
1
		+  public void shouldGetUtcStringFromTimestamp () { -  public void shouldGetUtcStringForTimestamp () { 
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
	+  contentValues.put ( CommonColumns.COLUMN_CREATED_AT , TimestampHelper.getUtcStringFromTimestamp ( model.getCreatedTimestamp () ) ) ; -  contentValues.put ( CommonColumns.COLUMN_CREATED_AT , TimestampHelper.getUtcStringForTimestamp ( model.getCreatedTimestamp () ) ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest_java
1
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
app/src/main/java/org/gnucash/android/export/ExportParams_java
1
	+  private Timestamp mExportStartTime = TimestampHelper.getTimestampFromEpochZero () ; -  private Timestamp mExportStartTime = TimestampHelper.getTimestampForEpochZero () ; 
app/src/org/gnucash/android/db/TransactionsDbAdapter_java
1
		+    new String[] { prefix+ " % " } , null , null , -    null , null , null , 
app/src/org/gnucash/android/ui/transaction/TransactionFormFragment_java
1
	+    return mTransactionsDbAdapter.fetchTransactionsStartingWith ( name == null? " " :name.toString () ) ; -    return mTransactionsDbAdapter.fetchTransactionsStartingWith ( name.toString () ) ; 
app/src/main/java/org/gnucash/android/model/BaseModel_java
1
		+  mCreatedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mCreatedTimestamp = TimestampHelper.getTimestampForNow () ; 
		+  mCreatedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mModifiedTimestamp = TimestampHelper.getTimestampForNow () ; 
		+  mModifiedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mCreatedTimestamp = TimestampHelper.getTimestampForNow () ; 
		+  mModifiedTimestamp = TimestampHelper.getTimestampFromNow () ; -  mModifiedTimestamp = TimestampHelper.getTimestampForNow () ; 
app/src/main/java/org/gnucash/android/util/PreferencesHelper_java
1
	+  final String utcString = TimestampHelper.getUtcStringFromTimestamp ( lastExportTime ) ; -  final String utcString = TimestampHelper.getUtcStringForTimestamp ( lastExportTime ) ; 
2
	+    TimestampHelper.getTimestampFromEpochZero () : TimestampHelper.getTimestampFromUtcString ( utcString ) ; -    TimestampHelper.getTimestampForEpochZero () : TimestampHelper.getTimestampForUtcString ( utcString ) ; 
app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest_java
1
	+  assertThat ( lastExportTime ) .isEqualTo ( TimestampHelper.getTimestampFromEpochZero () ) ; -  assertThat ( lastExportTime ) .isEqualTo ( TimestampHelper.getTimestampForEpochZero () ) ; 
app/src/main/java/org/gnucash/android/util/TimestampHelper_java
1
	+  public static String getUtcStringFromTimestamp ( Timestamp timestamp ) { -  public static String getUtcStringForTimestamp ( Timestamp timestamp ) { 
	+  public static String getUtcStringFromTimestamp ( Timestamp timestamp ) { -  public static Timestamp getTimestampForEpochZero () { 
	+  public static Timestamp getTimestampFromEpochZero () { -  public static Timestamp getTimestampForEpochZero () { 
3
		+  public static Timestamp getTimestampFromNow () { -  public static Timestamp getTimestampForNow () { 
2
	+  public static Timestamp getTimestampFromUtcString ( String utcString ) { -  public static Timestamp getTimestampForUtcString ( String utcString ) { 
app/src/main/java/org/gnucash/android/db/AccountsDbAdapter_java
1
	+  mReplaceStatement.bindString ( 10 , TimestampHelper.getUtcStringFromTimestamp ( account.getCreatedTimestamp () ) ) ; -  mReplaceStatement.bindString ( 10 , TimestampHelper.getUtcStringForTimestamp ( account.getCreatedTimestamp () ) ) ; 
2
	+    new String[] { TimestampHelper.getUtcStringFromTimestamp ( lastExportTimeStamp ) } , -    new String[] { TimestampHelper.getUtcStringForTimestamp ( lastExportTimeStamp ) } , 
app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest_java
1
		+  public void shouldGetUtcStringFromTimestamp () { -  public void shouldGetUtcStringForTimestamp () { 
app/src/main/java/org/gnucash/android/db/DatabaseAdapter_java
1
	+  contentValues.put ( CommonColumns.COLUMN_CREATED_AT , TimestampHelper.getUtcStringFromTimestamp ( model.getCreatedTimestamp () ) ) ; -  contentValues.put ( CommonColumns.COLUMN_CREATED_AT , TimestampHelper.getUtcStringForTimestamp ( model.getCreatedTimestamp () ) ) ; 
app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest_java
1
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
		+  assertThat ( TimestampHelper.getUtcStringFromTimestamp ( result ) ) -  assertThat ( TimestampHelper.getUtcStringForTimestamp ( result ) ) 
app/src/main/java/org/gnucash/android/export/ExportParams_java
1
	+  private Timestamp mExportStartTime = TimestampHelper.getTimestampFromEpochZero () ; -  private Timestamp mExportStartTime = TimestampHelper.getTimestampForEpochZero () ; 
app/src/main/java/org/gnucash/android/export/qif/QifExporter_java
1
app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest_java
1
	+  private static final String DUMMY_ACCOUNT_CURRENCY_CODE = " USD " ; - private static final String DUMMY_ACCOUNT_CURRENCY_CODE = " USD " ; 
app/src/test/java/org/gnucash/android/test/unit/model/PriceTest_java
1
2
app/src/main/java/org/gnucash/android/model/Price_java
1
2
	+  return formatter.format ( numerator.divide ( denominator , MathContext.DECIMAL32 ) ) ; -  return formatter.format ( numerator.divide ( denominator ) ) ; 
