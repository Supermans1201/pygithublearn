From 4893e8e45dfe980eb51710479a140df629dc9884 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 20 Nov 2015 10:47:27 +0100
Subject: [PATCH 001/121] Add support for budgeting and improve recurrence
 schedules

Import/export budgets from/to GnuCash XML
Create/display/edit budgets and budget amounts
Add budget indicator to account list view
Make parsing/computation of recurrence schedule more precise

Add support for GnuCash non-business tables/entries
    Add support for split reconcile state/date to the database
    Import/Export all scheduled transaction flags from/to GnuCash XML

Code refactoring
    Add CurrencyMismatchException to money operations
    Add unit and integration tests
    Refactor recurrence of scheduled actions into its own table
    Use recurrence for scheduled transactions, backups and budgets
    Update Android support / test library dependencies
    Upgrade betterpickers library  - fixes #359
    Upgrade database to version 12

Allow auto-backup of application data by Android system
---
 CHANGELOG.md                                       |   6 +
 app/build.gradle                                   |  23 +-
 .../android/test/ui/AccountsActivityTest.java      |   7 +-
 .../android/test/ui/ExportTransactionsTest.java    |  16 +-
 .../test/ui/FirstRunWizardActivityTest.java        |   6 +-
 .../android/test/ui/PieChartReportTest.java        |  14 +-
 .../android/test/ui/TransactionsActivityTest.java  |   6 +-
 app/src/main/AndroidManifest.xml                   |   5 +-
 .../gnucash/android/app/GnuCashApplication.java    |  36 +-
 .../gnucash/android/db/DatabaseCursorLoader.java   |   4 +-
 .../org/gnucash/android/db/DatabaseHelper.java     | 114 +++++-
 .../org/gnucash/android/db/DatabaseSchema.java     |  67 +++-
 .../org/gnucash/android/db/MigrationHelper.java    | 203 +++++++++-
 .../db/{ => adapter}/AccountsDbAdapter.java        |   6 +-
 .../android/db/adapter/BudgetAmountsDbAdapter.java | 145 ++++++++
 .../android/db/adapter/BudgetsDbAdapter.java       | 194 ++++++++++
 .../db/{ => adapter}/CommoditiesDbAdapter.java     |   5 +-
 .../android/db/{ => adapter}/DatabaseAdapter.java  |  27 +-
 .../android/db/{ => adapter}/PricesDbAdapter.java  |   4 +-
 .../android/db/adapter/RecurrenceDbAdapter.java    |  97 +++++
 .../db/{ => adapter}/ScheduledActionDbAdapter.java |  93 ++++-
 .../android/db/{ => adapter}/SplitsDbAdapter.java  |  25 +-
 .../db/{ => adapter}/TransactionsDbAdapter.java    |   4 +-
 .../gnucash/android/export/ExportAsyncTask.java    |   6 +-
 .../java/org/gnucash/android/export/Exporter.java  |  32 +-
 .../gnucash/android/export/ofx/OfxExporter.java    |   2 +-
 .../gnucash/android/export/qif/QifExporter.java    |   4 +-
 .../gnucash/android/export/xml/GncXmlExporter.java | 172 ++++++---
 .../gnucash/android/export/xml/GncXmlHelper.java   |  58 +--
 .../android/importer/CommoditiesXmlHandler.java    |   2 +-
 .../gnucash/android/importer/GncXmlHandler.java    | 137 ++++++-
 .../java/org/gnucash/android/model/Budget.java     | 407 +++++++++++++++++++++
 .../org/gnucash/android/model/BudgetAmount.java    | 104 ++++++
 .../java/org/gnucash/android/model/Commodity.java  |   2 +-
 .../main/java/org/gnucash/android/model/Money.java |  36 +-
 .../java/org/gnucash/android/model/PeriodType.java |  43 ++-
 .../java/org/gnucash/android/model/Recurrence.java | 323 ++++++++++++++++
 .../org/gnucash/android/model/ScheduledAction.java | 281 ++++++++------
 .../main/java/org/gnucash/android/model/Split.java |  94 ++++-
 .../org/gnucash/android/model/Transaction.java     |   8 +-
 .../gnucash/android/receivers/AccountCreator.java  |   2 +-
 .../android/receivers/TransactionRecorder.java     |   7 +-
 .../gnucash/android/service/SchedulerService.java  |  47 +--
 .../android/ui/account/AccountFormFragment.java    |   4 +-
 .../android/ui/account/AccountsActivity.java       |   6 +-
 .../android/ui/account/AccountsListFragment.java   |  28 +-
 .../ui/account/DeleteAccountDialogFragment.java    |   6 +-
 .../android/ui/budget/BudgetDetailFragment.java    | 307 ++++++++++++++++
 .../android/ui/budget/BudgetFormFragment.java      | 362 ++++++++++++++++++
 .../android/ui/budget/BudgetListFragment.java      | 327 +++++++++++++++++
 .../gnucash/android/ui/budget/BudgetsActivity.java |  85 +++++
 .../android/ui/common/BaseDrawerActivity.java      |  11 +-
 .../gnucash/android/ui/common/FormActivity.java    |  19 +-
 .../org/gnucash/android/ui/common/UxArgument.java  |   5 +
 .../android/ui/export/ExportFormFragment.java      |  66 +---
 .../ui/homescreen/WidgetConfigurationActivity.java |   2 +-
 .../android/ui/report/BalanceSheetFragment.java    |   2 +-
 .../android/ui/report/BarChartFragment.java        |   4 +-
 .../android/ui/report/LineChartFragment.java       |   4 +-
 .../android/ui/report/PieChartFragment.java        |   4 +-
 .../android/ui/report/ReportSummaryFragment.java   |   2 +-
 .../gnucash/android/ui/report/ReportsActivity.java |   2 +-
 .../ui/settings/AccountPreferencesFragment.java    |   3 +-
 .../DeleteAllAccountsConfirmationDialog.java       |   2 +-
 .../DeleteAllTransactionsConfirmationDialog.java   |   4 +-
 .../android/ui/settings/SettingsActivity.java      |   6 +-
 .../transaction/ScheduledActionsListFragment.java  |  10 +-
 .../ui/transaction/SplitEditorFragment.java        |   6 +-
 .../ui/transaction/TransactionDetailActivity.java  |   6 +-
 .../ui/transaction/TransactionFormFragment.java    | 111 ++----
 .../ui/transaction/TransactionsActivity.java       |   4 +-
 .../ui/transaction/TransactionsListFragment.java   |   6 +-
 .../transaction/dialog/BulkMoveDialogFragment.java |   4 +-
 ...ansactionsDeleteConfirmationDialogFragment.java |   4 +-
 .../dialog/TransferFundsDialogFragment.java        |   4 +-
 .../android/ui/util/AccountBalanceTask.java        |   3 +-
 .../gnucash/android/ui/util/RecurrenceParser.java  | 151 ++++----
 .../ui/util/RecurrenceViewClickListener.java       |  66 ++++
 .../android/ui/util/widget/CalculatorEditText.java |   4 +-
 .../android/ui/wizard/CurrencySelectFragment.java  |   2 +-
 .../android/util/CommoditiesCursorAdapter.java     |   5 +-
 .../util/QualifiedAccountNameCursorAdapter.java    |  17 +
 .../res/drawable-hdpi/ic_dashboard_black_24dp.png  | Bin 0 -> 126 bytes
 .../res/drawable-mdpi/ic_dashboard_black_24dp.png  | Bin 0 -> 92 bytes
 .../res/drawable-xhdpi/ic_dashboard_black_24dp.png | Bin 0 -> 115 bytes
 .../drawable-xxhdpi/ic_dashboard_black_24dp.png    | Bin 0 -> 126 bytes
 .../drawable-xxxhdpi/ic_dashboard_black_24dp.png   | Bin 0 -> 127 bytes
 .../res/drawable/budget_progress_indicator.xml     |  56 +++
 app/src/main/res/layout/activity_accounts.xml      |   2 +-
 app/src/main/res/layout/activity_budgets.xml       |  64 ++++
 app/src/main/res/layout/cardview_account.xml       |  22 +-
 app/src/main/res/layout/cardview_budget.xml        | 107 ++++++
 app/src/main/res/layout/cardview_budget_amount.xml | 139 +++++++
 app/src/main/res/layout/fragment_account_form.xml  |   2 +-
 app/src/main/res/layout/fragment_budget_detail.xml |  48 +++
 app/src/main/res/layout/fragment_budget_form.xml   | 121 ++++++
 app/src/main/res/layout/fragment_budget_list.xml   |  42 +++
 app/src/main/res/layout/item_budget_amount.xml     |  87 +++++
 app/src/main/res/layout/list_item_2_lines.xml      |   4 +-
 app/src/main/res/layout/nav_drawer_header.xml      |   9 +-
 app/src/main/res/menu/budget_actions.xml           |  17 +
 app/src/main/res/menu/budget_context_menu.xml      |  33 ++
 app/src/main/res/menu/nav_drawer_menu.xml          |  33 +-
 app/src/main/res/values-af-rZA/strings.xml         |   1 +
 app/src/main/res/values-ar-rSA/strings.xml         |   1 +
 app/src/main/res/values-ca-rES/strings.xml         |   1 +
 app/src/main/res/values-cs-rCZ/strings.xml         |   1 +
 app/src/main/res/values-de/strings.xml             |   1 +
 app/src/main/res/values-el-rGR/strings.xml         |   1 +
 app/src/main/res/values-en-rGB/strings.xml         |   1 +
 app/src/main/res/values-es-rMX/strings.xml         |   1 +
 app/src/main/res/values-es/strings.xml             |   1 +
 app/src/main/res/values-fi-rFI/strings.xml         |   1 +
 app/src/main/res/values-fr/strings.xml             |   1 +
 app/src/main/res/values-hu-rHU/strings.xml         |   1 +
 app/src/main/res/values-it-rIT/strings.xml         |   1 +
 app/src/main/res/values-iw-rIL/strings.xml         |   1 +
 app/src/main/res/values-ja-rJP/strings.xml         |   1 +
 app/src/main/res/values-ko-rKR/strings.xml         |   1 +
 app/src/main/res/values-nl-rNL/strings.xml         |   1 +
 app/src/main/res/values-no-rNO/strings.xml         |   1 +
 app/src/main/res/values-pl-rPL/strings.xml         |   1 +
 app/src/main/res/values-pt-rBR/strings.xml         |   1 +
 app/src/main/res/values-pt-rPT/strings.xml         |   1 +
 app/src/main/res/values-ro-rRO/strings.xml         |   1 +
 app/src/main/res/values-ru/strings.xml             |   1 +
 app/src/main/res/values-sr-rSP/strings.xml         |   1 +
 app/src/main/res/values-sv-rSE/strings.xml         |   1 +
 app/src/main/res/values-tr-rTR/strings.xml         |   1 +
 app/src/main/res/values-uk-rUA/strings.xml         |   1 +
 app/src/main/res/values-vi-rVN/strings.xml         |   1 +
 app/src/main/res/values-zh-rCN/strings.xml         |   1 +
 app/src/main/res/values-zh-rTW/strings.xml         |   1 +
 app/src/main/res/values/strings.xml                |   1 +
 .../test/unit/db/AccountsDbAdapterTest.java        |  64 +++-
 .../android/test/unit/db/BudgetsDbAdapterTest.java | 173 +++++++++
 .../android/test/unit/db/PriceDbAdapterTest.java   |  60 +++
 .../test/unit/db/ScheduledActionDbAdapterTest.java |  73 ++++
 .../android/test/unit/db/SplitsDbAdapterTest.java  |  21 +-
 .../test/unit/db/TransactionsDbAdapterTest.java    |   6 +-
 .../android/test/unit/model/BudgetTest.java        | 186 ++++++++++
 .../gnucash/android/test/unit/model/MoneyTest.java |   8 +-
 .../android/test/unit/model/RecurrenceTest.java    |  61 +++
 .../test/unit/model/ScheduledActionTest.java       |  82 +++++
 144 files changed, 5389 insertions(+), 700 deletions(-)
 rename app/src/main/java/org/gnucash/android/db/{ => adapter}/AccountsDbAdapter.java (99%)
 create mode 100644 app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java
 create mode 100644 app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
 rename app/src/main/java/org/gnucash/android/db/{ => adapter}/CommoditiesDbAdapter.java (97%)
 rename app/src/main/java/org/gnucash/android/db/{ => adapter}/DatabaseAdapter.java (96%)
 rename app/src/main/java/org/gnucash/android/db/{ => adapter}/PricesDbAdapter.java (98%)
 create mode 100644 app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter.java
 rename app/src/main/java/org/gnucash/android/db/{ => adapter}/ScheduledActionDbAdapter.java (66%)
 rename app/src/main/java/org/gnucash/android/db/{ => adapter}/SplitsDbAdapter.java (94%)
 rename app/src/main/java/org/gnucash/android/db/{ => adapter}/TransactionsDbAdapter.java (99%)
 create mode 100644 app/src/main/java/org/gnucash/android/model/Budget.java
 create mode 100644 app/src/main/java/org/gnucash/android/model/BudgetAmount.java
 create mode 100644 app/src/main/java/org/gnucash/android/model/Recurrence.java
 create mode 100644 app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
 create mode 100644 app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
 create mode 100644 app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
 create mode 100644 app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java
 create mode 100644 app/src/main/java/org/gnucash/android/ui/util/RecurrenceViewClickListener.java
 create mode 100644 app/src/main/res/drawable-hdpi/ic_dashboard_black_24dp.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_dashboard_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_dashboard_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_dashboard_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xxxhdpi/ic_dashboard_black_24dp.png
 create mode 100644 app/src/main/res/drawable/budget_progress_indicator.xml
 create mode 100644 app/src/main/res/layout/activity_budgets.xml
 create mode 100644 app/src/main/res/layout/cardview_budget.xml
 create mode 100644 app/src/main/res/layout/cardview_budget_amount.xml
 create mode 100644 app/src/main/res/layout/fragment_budget_detail.xml
 create mode 100644 app/src/main/res/layout/fragment_budget_form.xml
 create mode 100644 app/src/main/res/layout/fragment_budget_list.xml
 create mode 100644 app/src/main/res/layout/item_budget_amount.xml
 create mode 100644 app/src/main/res/menu/budget_actions.xml
 create mode 100644 app/src/main/res/menu/budget_context_menu.xml
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/db/BudgetsDbAdapterTest.java
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/db/PriceDbAdapterTest.java
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/model/BudgetTest.java
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 4c6ad17d..ea6e0e2e 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,11 @@
 Change Log
 ===============================================================================
+Version 2.1.0 *(2016-xx-xx)*
+----------------------------
+* Feature: Budgets
+* Improved: Scheduled transactions now have more accurate timestamps
+* Improved: Generate all scheduled transactions even if a scheduled is missed (e.g. device off)
+
 Version 2.0.2 *(2015-11-20)*
 ----------------------------
 * Fixed: Exporting to external service does not work in some devices
diff --git a/app/build.gradle b/app/build.gradle
index 3e0644c2..15868c43 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -90,6 +90,7 @@ android {
         }
         debug {
             debuggable true
+            testCoverageEnabled true
             signingConfig signingConfigs.debug
         }
     }
@@ -146,8 +147,8 @@ def adb = android.getAdbExe().toString()
 
 afterEvaluate {
     initCrashlyticsPropertiesIfNeeded()
-
-    task grantAnimationPermissionDevel(type: Exec, dependsOn: 'installDevelopmentDebug') { // or install{productFlavour}{buildType}
+    
+    task grantTestPermissionsDevel(type: Exec, dependsOn: 'installDevelopmentDebug') { // or install{productFlavour}{buildType}
         commandLine "$adb", 'devices'
         standardOutput = new ByteArrayOutputStream()
 
@@ -159,7 +160,7 @@ afterEvaluate {
         }
     }
 
-    task grantAnimationPermissionProduction(type: Exec, dependsOn: 'installProductionDebug'){
+    task grantTestPermissionsProduction(type: Exec, dependsOn: 'installProductionDebug'){
         commandLine "$adb -e shell pm grant $android.defaultConfig.applicationId android.permission.SET_ANIMATION_SCALE".split(' ')
         commandLine "$adb -e shell pm grant $android.defaultConfig.applicationId android.permission.WRITE_EXTERNAL_STORAGE".split(' ')
     }
@@ -167,18 +168,18 @@ afterEvaluate {
     // get called directly, not the install* versions
     tasks.each { task ->
         if (task.name.startsWith('assembleDevelopmentDebugAndroidTest')){
-            task.dependsOn grantAnimationPermissionDevel
+            task.dependsOn grantTestPermissionsDevel
         } else if (task.name.startsWith('assembleBetaDebugAndroidTest')){
-            task.dependsOn grantAnimationPermissionProduction
+            task.dependsOn grantTestPermissionsProduction
         } else if (task.name.startsWith('assembleProductionDebugAndroidTest')){
-            task.dependsOn grantAnimationPermissionProduction
+            task.dependsOn grantTestPermissionsProduction
         }
     }
 }
 
-def androidSupportVersion       = "22.2.1"
-def androidEspressoVersion      = "2.2"
-def androidSupportTestVersion   = "0.3"
+def androidSupportVersion       = "23.1.0"
+def androidEspressoVersion      = "2.2.1"
+def androidSupportTestVersion   = "0.4.1"
 
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
@@ -188,7 +189,7 @@ dependencies {
             'com.android.support:cardview-v7:'      + androidSupportVersion,
             'com.android.support:recyclerview-v7:'  + androidSupportVersion,
             'com.viewpagerindicator:library:2.4.1@aar',
-            'com.code-troopers.betterpickers:library:2.0.3',
+            'com.code-troopers.betterpickers:library:2.1.2',
             'org.jraf:android-switch-backport:2.0.1@aar',
             'com.github.PhilJay:MPAndroidChart:v2.1.3',
             'joda-time:joda-time:2.7',
@@ -223,7 +224,7 @@ dependencies {
         exclude module: 'recyclerview-v7'
     }
 
-    androidTestCompile('com.squareup.assertj:assertj-android:1.1.0'){
+    androidTestCompile('com.squareup.assertj:assertj-android:1.1.1'){
         exclude group: 'com.android.support', module:'support-annotations'
     }
 }
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 3d2d8f97..89c70f7d 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -24,7 +24,6 @@
 import android.preference.PreferenceManager;
 import android.support.test.InstrumentationRegistry;
 import android.support.test.espresso.Espresso;
-import android.support.test.espresso.ViewInteraction;
 import android.support.test.espresso.matcher.ViewMatchers;
 import android.support.test.runner.AndroidJUnit4;
 import android.support.v4.app.Fragment;
@@ -34,10 +33,10 @@
 import com.kobakei.ratethisapp.RateThisApp;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Commodity;
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index 05c9bbed..ca0cde76 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -33,11 +33,11 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
-import org.gnucash.android.db.ScheduledActionDbAdapter;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.model.Account;
@@ -193,7 +193,7 @@ public void testExport(ExportFormat format){
 			file.delete();
 		}
 
-		DrawerActions.openDrawer(R.id.drawer_layout);
+		onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
 		onView(withText(R.string.nav_menu_export)).perform(click());
 
 		onView(withId(R.id.spinner_export_destination)).perform(click());
@@ -229,7 +229,7 @@ public void testDeleteTransactionsAfterExport(){
 	 */
 	@Test
 	public void testShouldCreateExportSchedule(){
-		DrawerActions.openDrawer(R.id.drawer_layout);
+		onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
 		onView(withText(R.string.nav_menu_export)).perform(click());
 
 		onView(withText(ExportFormat.XML.name())).perform(click());
@@ -237,7 +237,7 @@ public void testShouldCreateExportSchedule(){
 
 		//switch on recurrence dialog
 		onView(allOf(isAssignableFrom(CompoundButton.class), isDisplayed(), isEnabled())).perform(click());
-		onView(withText("Done")).perform(click());
+		onView(withText("OK")).perform(click());
 
 		onView(withId(R.id.menu_save)).perform(click());
 		ScheduledActionDbAdapter scheduledactionDbAdapter = new ScheduledActionDbAdapter(mDb);
@@ -247,7 +247,7 @@ public void testShouldCreateExportSchedule(){
 				.extracting("mActionType").contains(ScheduledAction.ActionType.BACKUP);
 
 		ScheduledAction action = scheduledActions.get(0);
-		assertThat(action.getPeriodType()).isEqualTo(PeriodType.WEEK);
+		assertThat(action.getRecurrence().getPeriodType()).isEqualTo(PeriodType.WEEK);
 		assertThat(action.getEndTime()).isEqualTo(0);
 	}
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java
index 96de31a9..a480b56e 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java
@@ -24,10 +24,10 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.ui.wizard.FirstRunWizardActivity;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index 72ce5e0f..e2928529 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -26,19 +26,17 @@
 import android.support.test.espresso.action.GeneralClickAction;
 import android.support.test.espresso.action.Press;
 import android.support.test.espresso.action.Tap;
-import android.support.test.espresso.contrib.PickerActions;
 import android.support.test.runner.AndroidJUnit4;
 import android.test.ActivityInstrumentationTestCase2;
 import android.util.Log;
 import android.view.View;
-import android.widget.DatePicker;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.importer.GncXmlImporter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
@@ -61,14 +59,8 @@
 import static android.support.test.espresso.Espresso.onView;
 import static android.support.test.espresso.action.ViewActions.click;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
-import static android.support.test.espresso.matcher.ViewMatchers.isEnabled;
-import static android.support.test.espresso.matcher.ViewMatchers.withClassName;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
 import static android.support.test.espresso.matcher.ViewMatchers.withText;
-import static org.hamcrest.Matchers.anyOf;
-import static org.hamcrest.Matchers.containsString;
-import static org.hamcrest.Matchers.equalTo;
-import static org.hamcrest.Matchers.not;
 
 @RunWith(AndroidJUnit4.class)
 public class PieChartReportTest extends ActivityInstrumentationTestCase2<ReportsActivity> {
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 6ec47912..a3f93b2a 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -30,11 +30,11 @@
 import android.util.Log;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index b35c4450..320bf654 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -50,7 +50,8 @@
     <application android:name="org.gnucash.android.app.GnuCashApplication"
         android:icon="@drawable/ic_launcher"
         android:label="@string/app_name"
-        android:theme="@style/Theme.GnucashTheme.NoActionBar">
+        android:theme="@style/Theme.GnucashTheme.NoActionBar"
+        android:allowBackup="true">
         <activity
             android:name=".ui.account.AccountsActivity"
             android:label="@string/app_name">
@@ -102,6 +103,8 @@
             android:configChanges="orientation|screenSize"/>
         <activity android:name=".ui.report.ReportsActivity"
             android:launchMode="singleTop"/>
+        <activity android:name=".ui.budget.BudgetsActivity"
+            android:launchMode="singleTop"/>
         <activity android:name=".ui.wizard.FirstRunWizardActivity"
             android:theme="@style/Theme.GnucashTheme" />
         <activity android:name="com.dropbox.sync.android.DbxAuthActivity" />
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 8e998563..6ba557bf 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -34,13 +34,16 @@
 import com.uservoice.uservoicesdk.UserVoice;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
-import org.gnucash.android.db.PricesDbAdapter;
-import org.gnucash.android.db.ScheduledActionDbAdapter;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetsDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.PricesDbAdapter;
+import org.gnucash.android.db.adapter.RecurrenceDbAdapter;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.service.SchedulerService;
@@ -85,6 +88,12 @@
 
     private static PricesDbAdapter mPricesDbAdapter;
 
+    private static BudgetsDbAdapter mBudgetsDbAdapter;
+
+    private static BudgetAmountsDbAdapter mBudgetAmountsDbAdapter;
+
+    private static RecurrenceDbAdapter mRecurrenceDbAdapter;
+
     /**
      * Returns darker version of specified <code>color</code>.
      * Use for theming the status bar color when setting the color of the actionBar
@@ -125,6 +134,9 @@ public void onCreate(){
         mScheduledActionDbAdapter   = new ScheduledActionDbAdapter(mDb);
         mCommoditiesDbAdapter       = new CommoditiesDbAdapter(mDb);
         mPricesDbAdapter            = new PricesDbAdapter(mDb);
+        mBudgetAmountsDbAdapter     = new BudgetAmountsDbAdapter(mDb);
+        mBudgetsDbAdapter           = new BudgetsDbAdapter(mDb);
+        mRecurrenceDbAdapter        = new RecurrenceDbAdapter(mDb);
 
         setDefaultCurrencyCode(getDefaultCurrencyCode());
     }
@@ -153,6 +165,18 @@ public static PricesDbAdapter getPricesDbAdapter(){
         return mPricesDbAdapter;
     }
 
+    public static BudgetsDbAdapter getBudgetDbAdapter() {
+        return mBudgetsDbAdapter;
+    }
+
+    public static RecurrenceDbAdapter getRecurrenceDbAdapter() {
+        return mRecurrenceDbAdapter;
+    }
+
+    public static BudgetAmountsDbAdapter getBudgetAmountsDbAdapter(){
+        return mBudgetAmountsDbAdapter;
+    }
+
     /**
      * Returns the application context
      * @return Application {@link Context} object
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseCursorLoader.java b/app/src/main/java/org/gnucash/android/db/DatabaseCursorLoader.java
index 21a426e1..849400e6 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseCursorLoader.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseCursorLoader.java
@@ -21,11 +21,13 @@
 import android.support.v4.content.AsyncTaskLoader;
 import android.support.v4.content.Loader;
 
+import org.gnucash.android.db.adapter.DatabaseAdapter;
+
 /**
  * Abstract base class for asynchronously loads records from a database and manages the cursor.
  * In order to use this class, you must subclass it and implement the
  * {@link #loadInBackground()} method to load the particular records from the database.
- * Ideally, the database has {@link DatabaseAdapter} which is used for managing access to the 
+ * Ideally, the database has {@link DatabaseAdapter} which is used for managing access to the
  * records from the database
  * @author Ngewi Fet <ngewif@gmail.com>
  * @see DatabaseAdapter
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
index 440e5c7e..e3722c6c 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
@@ -34,7 +34,16 @@
 
 import javax.xml.parsers.ParserConfigurationException;
 
-import static org.gnucash.android.db.DatabaseSchema.*;
+import static org.gnucash.android.db.DatabaseSchema.AccountEntry;
+import static org.gnucash.android.db.DatabaseSchema.BudgetAmountEntry;
+import static org.gnucash.android.db.DatabaseSchema.BudgetEntry;
+import static org.gnucash.android.db.DatabaseSchema.CommodityEntry;
+import static org.gnucash.android.db.DatabaseSchema.CommonColumns;
+import static org.gnucash.android.db.DatabaseSchema.PriceEntry;
+import static org.gnucash.android.db.DatabaseSchema.RecurrenceEntry;
+import static org.gnucash.android.db.DatabaseSchema.ScheduledActionEntry;
+import static org.gnucash.android.db.DatabaseSchema.SplitEntry;
+import static org.gnucash.android.db.DatabaseSchema.TransactionEntry;
 /**
  * Helper class for managing the SQLite database.
  * Creates the database and handles upgrades
@@ -110,28 +119,36 @@
             + SplitEntry.COLUMN_QUANTITY_DENOM  + " integer not null, "
             + SplitEntry.COLUMN_ACCOUNT_UID 	+ " varchar(255) not null, "
             + SplitEntry.COLUMN_TRANSACTION_UID + " varchar(255) not null, "
-            + SplitEntry.COLUMN_CREATED_AT       + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
-            + SplitEntry.COLUMN_MODIFIED_AT      + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+            + SplitEntry.COLUMN_RECONCILE_STATE + " varchar(1) not null default 'n', "
+            + SplitEntry.COLUMN_RECONCILE_DATE  + " timestamp not null default current_timestamp, "
+            + SplitEntry.COLUMN_CREATED_AT      + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+            + SplitEntry.COLUMN_MODIFIED_AT     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
             + "FOREIGN KEY (" 	+ SplitEntry.COLUMN_ACCOUNT_UID + ") REFERENCES " + AccountEntry.TABLE_NAME + " (" + AccountEntry.COLUMN_UID + ") ON DELETE CASCADE, "
             + "FOREIGN KEY (" 	+ SplitEntry.COLUMN_TRANSACTION_UID + ") REFERENCES " + TransactionEntry.TABLE_NAME + " (" + TransactionEntry.COLUMN_UID + ") ON DELETE CASCADE "
             + ");" + createUpdatedAtTrigger(SplitEntry.TABLE_NAME);
 
 
     public static final String SCHEDULED_ACTIONS_TABLE_CREATE = "CREATE TABLE " + ScheduledActionEntry.TABLE_NAME + " ("
-            + ScheduledActionEntry._ID                   + " integer primary key autoincrement, "
-            + ScheduledActionEntry.COLUMN_UID            + " varchar(255) not null UNIQUE, "
-            + ScheduledActionEntry.COLUMN_ACTION_UID     + " varchar(255) not null, "
-            + ScheduledActionEntry.COLUMN_TYPE           + " varchar(255) not null, "
-            + ScheduledActionEntry.COLUMN_PERIOD         + " integer not null, "
-            + ScheduledActionEntry.COLUMN_LAST_RUN       + " integer default 0, "
-            + ScheduledActionEntry.COLUMN_START_TIME     + " integer not null, "
-            + ScheduledActionEntry.COLUMN_END_TIME       + " integer default 0, "
-            + ScheduledActionEntry.COLUMN_TAG            + " text, "
-            + ScheduledActionEntry.COLUMN_ENABLED        + " tinyint default 1, " //enabled by default
-            + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " integer default 0, "
-            + ScheduledActionEntry.COLUMN_EXECUTION_COUNT+ " integer default 0, "
-            + ScheduledActionEntry.COLUMN_CREATED_AT     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
-            + ScheduledActionEntry.COLUMN_MODIFIED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP "
+            + ScheduledActionEntry._ID                      + " integer primary key autoincrement, "
+            + ScheduledActionEntry.COLUMN_UID               + " varchar(255) not null UNIQUE, "
+            + ScheduledActionEntry.COLUMN_ACTION_UID        + " varchar(255) not null, "
+            + ScheduledActionEntry.COLUMN_TYPE              + " varchar(255) not null, "
+            + ScheduledActionEntry.COLUMN_RECURRENCE_UID    + " varchar(255) not null, "
+            + ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID + " varchar(255) not null, "
+            + ScheduledActionEntry.COLUMN_LAST_RUN          + " integer default 0, "
+            + ScheduledActionEntry.COLUMN_START_TIME        + " integer not null, "
+            + ScheduledActionEntry.COLUMN_END_TIME          + " integer default 0, "
+            + ScheduledActionEntry.COLUMN_TAG               + " text, "
+            + ScheduledActionEntry.COLUMN_ENABLED           + " tinyint default 1, " //enabled by default
+            + ScheduledActionEntry.COLUMN_AUTO_CREATE       + " tinyint default 1, "
+            + ScheduledActionEntry.COLUMN_AUTO_NOTIFY       + " tinyint default 0, "
+            + ScheduledActionEntry.COLUMN_ADVANCE_CREATION  + " integer default 0, "
+            + ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY    + " integer default 0, "
+            + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY   + " integer default 0, "
+            + ScheduledActionEntry.COLUMN_EXECUTION_COUNT   + " integer default 0, "
+            + ScheduledActionEntry.COLUMN_CREATED_AT        + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+            + ScheduledActionEntry.COLUMN_MODIFIED_AT       + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+            + "FOREIGN KEY (" 	+ ScheduledActionEntry.COLUMN_RECURRENCE_UID + ") REFERENCES " + RecurrenceEntry.TABLE_NAME + " (" + RecurrenceEntry.COLUMN_UID + ") "
             + ");" + createUpdatedAtTrigger(ScheduledActionEntry.TABLE_NAME);
 
     public static final String COMMODITIES_TABLE_CREATE = "CREATE TABLE " + DatabaseSchema.CommodityEntry.TABLE_NAME + " ("
@@ -168,6 +185,47 @@
             + "FOREIGN KEY (" 	+ PriceEntry.COLUMN_CURRENCY_UID + ") REFERENCES " + CommodityEntry.TABLE_NAME + " (" + CommodityEntry.COLUMN_UID + ") ON DELETE CASCADE "
             + ");" + createUpdatedAtTrigger(PriceEntry.TABLE_NAME);
 
+
+    private static final String BUDGETS_TABLE_CREATE = "CREATE TABLE " + BudgetEntry.TABLE_NAME + " ("
+            + BudgetEntry._ID                   + " integer primary key autoincrement, "
+            + BudgetEntry.COLUMN_UID            + " varchar(255) not null UNIQUE, "
+            + BudgetEntry.COLUMN_NAME           + " varchar(255) not null, "
+            + BudgetEntry.COLUMN_DESCRIPTION    + " varchar(255), "
+            + BudgetEntry.COLUMN_RECURRENCE_UID + " varchar(255) not null, "
+            + BudgetEntry.COLUMN_NUM_PERIODS    + " integer, "
+            + BudgetEntry.COLUMN_CREATED_AT     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+            + BudgetEntry.COLUMN_MODIFIED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+            + "FOREIGN KEY (" 	+ BudgetEntry.COLUMN_RECURRENCE_UID + ") REFERENCES " + RecurrenceEntry.TABLE_NAME + " (" + RecurrenceEntry.COLUMN_UID + ") "
+            + ");" + createUpdatedAtTrigger(BudgetEntry.TABLE_NAME);
+
+    private static final String BUDGET_AMOUNTS_TABLE_CREATE = "CREATE TABLE " + BudgetAmountEntry.TABLE_NAME + " ("
+            + BudgetAmountEntry._ID                   + " integer primary key autoincrement, "
+            + BudgetAmountEntry.COLUMN_UID            + " varchar(255) not null UNIQUE, "
+            + BudgetAmountEntry.COLUMN_BUDGET_UID     + " varchar(255) not null, "
+            + BudgetAmountEntry.COLUMN_ACCOUNT_UID    + " varchar(255) not null, "
+            + BudgetAmountEntry.COLUMN_AMOUNT_NUM     + " integer not null, "
+            + BudgetAmountEntry.COLUMN_AMOUNT_DENOM   + " integer not null, "
+            + BudgetAmountEntry.COLUMN_PERIOD_NUM     + " integer not null, "
+            + BudgetAmountEntry.COLUMN_CREATED_AT     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+            + BudgetAmountEntry.COLUMN_MODIFIED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+            + "FOREIGN KEY (" 	+ BudgetAmountEntry.COLUMN_ACCOUNT_UID + ") REFERENCES " + AccountEntry.TABLE_NAME + " (" + AccountEntry.COLUMN_UID + ") ON DELETE CASCADE, "
+            + "FOREIGN KEY (" 	+ BudgetAmountEntry.COLUMN_BUDGET_UID + ") REFERENCES " + BudgetEntry.TABLE_NAME + " (" + BudgetEntry.COLUMN_UID + ") ON DELETE CASCADE "
+            + ");" + createUpdatedAtTrigger(BudgetAmountEntry.TABLE_NAME);
+
+
+    private static final String RECURRENCE_TABLE_CREATE = "CREATE TABLE " + RecurrenceEntry.TABLE_NAME + " ("
+            + RecurrenceEntry._ID                   + " integer primary key autoincrement, "
+            + RecurrenceEntry.COLUMN_UID            + " varchar(255) not null UNIQUE, "
+            + RecurrenceEntry.COLUMN_MULTIPLIER     + " integer not null default 1, "
+            + RecurrenceEntry.COLUMN_PERIOD_TYPE    + " varchar(255) not null, "
+            + RecurrenceEntry.COLUMN_BYDAY          + " varchar(255), "
+            + RecurrenceEntry.COLUMN_PERIOD_START   + " timestamp not null, "
+            + RecurrenceEntry.COLUMN_PERIOD_END   + " timestamp, "
+            + RecurrenceEntry.COLUMN_CREATED_AT     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+            + RecurrenceEntry.COLUMN_MODIFIED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP); "
+            + createUpdatedAtTrigger(RecurrenceEntry.TABLE_NAME);
+
+
     /**
 	 * Constructor
 	 * @param context Application context
@@ -212,8 +270,8 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion){
         /*
         * NOTE: In order to modify the database, create a new static method in the MigrationHelper class
         * called upgradeDbToVersion<#>, e.g. int upgradeDbToVersion10(SQLiteDatabase) in order to upgrade to version 10.
-        * The upgrade method should return the upgraded database version as the return value.
-        * Then all you need to do is increment the DatabaseSchema.DATABASE_VERSION to the appropriate number.
+        * The upgrade method should return the new (upgraded) database version as the return value.
+        * Then all you need to do is increment the DatabaseSchema.DATABASE_VERSION to the appropriate number to trigger an upgrade.
         */
 		if (oldVersion > newVersion) {
             throw new IllegalArgumentException("Database downgrades are not supported at the moment");
@@ -246,7 +304,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion){
 
 
     /**
-     * Creates the tables in the database
+     * Creates the tables in the database and import default commodities into the database
      * @param db Database instance
      */
     private void createDatabaseTables(SQLiteDatabase db) {
@@ -257,6 +315,10 @@ private void createDatabaseTables(SQLiteDatabase db) {
         db.execSQL(SCHEDULED_ACTIONS_TABLE_CREATE);
         db.execSQL(COMMODITIES_TABLE_CREATE);
         db.execSQL(PRICES_TABLE_CREATE);
+        db.execSQL(RECURRENCE_TABLE_CREATE);
+        db.execSQL(BUDGETS_TABLE_CREATE);
+        db.execSQL(BUDGET_AMOUNTS_TABLE_CREATE);
+
 
         String createAccountUidIndex = "CREATE UNIQUE INDEX '" + AccountEntry.INDEX_UID + "' ON "
                 + AccountEntry.TABLE_NAME + "(" + AccountEntry.COLUMN_UID + ")";
@@ -276,12 +338,24 @@ private void createDatabaseTables(SQLiteDatabase db) {
         String createPriceUidIndex = "CREATE UNIQUE INDEX '" + PriceEntry.INDEX_UID
                 + "' ON " + PriceEntry.TABLE_NAME + "(" + PriceEntry.COLUMN_UID + ")";
 
+        String createBudgetUidIndex = "CREATE UNIQUE INDEX '" + BudgetEntry.INDEX_UID
+                + "' ON " + BudgetEntry.TABLE_NAME + "(" + BudgetEntry.COLUMN_UID + ")";
+
+        String createBudgetAmountUidIndex = "CREATE UNIQUE INDEX '" + BudgetAmountEntry.INDEX_UID
+                + "' ON " + BudgetAmountEntry.TABLE_NAME + "(" + BudgetAmountEntry.COLUMN_UID + ")";
+
+        String createRecurrenceUidIndex = "CREATE UNIQUE INDEX '" + RecurrenceEntry.INDEX_UID
+                + "' ON " + RecurrenceEntry.TABLE_NAME + "(" + RecurrenceEntry.COLUMN_UID + ")";
+
         db.execSQL(createAccountUidIndex);
         db.execSQL(createTransactionUidIndex);
         db.execSQL(createSplitUidIndex);
         db.execSQL(createScheduledEventUidIndex);
         db.execSQL(createCommodityUidIndex);
         db.execSQL(createPriceUidIndex);
+        db.execSQL(createBudgetUidIndex);
+        db.execSQL(createRecurrenceUidIndex);
+        db.execSQL(createBudgetAmountUidIndex);
 
         try {
             MigrationHelper.importCommodities(db);
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
index 15d7870c..78afc95f 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
@@ -28,12 +28,7 @@
      * Database version.
      * With any change to the database schema, this number must increase
      */
-    public static final int DATABASE_VERSION = 11;
-
-    /**
-     * Database version where Splits were introduced
-     */
-    public static final int SPLITS_DB_VERSION = 7;
+    public static final int DATABASE_VERSION = 12;
 
     //no instances are to be instantiated
     private DatabaseSchema(){}
@@ -116,6 +111,9 @@ private DatabaseSchema(){}
         public static final String COLUMN_ACCOUNT_UID           = "account_uid";
         public static final String COLUMN_TRANSACTION_UID       = "transaction_uid";
 
+        public static final String COLUMN_RECONCILE_STATE       = "reconcile_state";
+        public static final String COLUMN_RECONCILE_DATE        = "reconcile_date";
+
         public static final String INDEX_UID                    = "split_uid_index";
     }
 
@@ -127,12 +125,27 @@ private DatabaseSchema(){}
         public static final String COLUMN_START_TIME        = "start_time";
         public static final String COLUMN_END_TIME          = "end_time";
         public static final String COLUMN_LAST_RUN          = "last_run";
-        public static final String COLUMN_PERIOD            = "period";
-        public static final String COLUMN_TAG               = "tag"; //for any action-specific information
+
+        /**
+         * Tag for scheduledAction-specific information e.g. backup parameters for backup
+         */
+        public static final String COLUMN_TAG               = "tag";
         public static final String COLUMN_ENABLED           = "is_enabled";
         public static final String COLUMN_TOTAL_FREQUENCY   = "total_frequency";
+
+        /**
+         * Number of times this scheduledAction has been run. Analogous to instance_count in GnuCash desktop SQL
+         */
         public static final String COLUMN_EXECUTION_COUNT   = "execution_count";
 
+        public static final String COLUMN_RECURRENCE_UID    = "recurrence_uid";
+        public static final String COLUMN_AUTO_CREATE       = "auto_create";
+        public static final String COLUMN_AUTO_NOTIFY       = "auto_notify";
+        public static final String COLUMN_ADVANCE_CREATION  = "adv_creation";
+        public static final String COLUMN_ADVANCE_NOTIFY    = "adv_notify";
+        public static final String COLUMN_TEMPLATE_ACCT_UID = "template_act_uid";
+
+
         public static final String INDEX_UID            = "scheduled_action_uid_index";
     }
 
@@ -191,4 +204,42 @@ private DatabaseSchema(){}
         public static final String INDEX_UID = "prices_uid_index";
 
     }
+
+
+    public static abstract class BudgetEntry implements CommonColumns {
+        public static final String TABLE_NAME           = "budgets";
+
+        public static final String COLUMN_NAME          = "name";
+        public static final String COLUMN_DESCRIPTION   = "description";
+        public static final String COLUMN_NUM_PERIODS   = "num_periods";
+        public static final String COLUMN_RECURRENCE_UID = "recurrence_uid";
+
+        public static final String INDEX_UID = "budgets_uid_index";
+    }
+
+
+    public static abstract class BudgetAmountEntry implements CommonColumns {
+        public static final String TABLE_NAME           = "budget_amounts";
+
+        public static final String COLUMN_BUDGET_UID    = "budget_uid";
+        public static final String COLUMN_ACCOUNT_UID   = "account_uid";
+        public static final String COLUMN_PERIOD_NUM    = "period_num";
+        public static final String COLUMN_AMOUNT_NUM    = "amount_num";
+        public static final String COLUMN_AMOUNT_DENOM  = "amount_denom";
+
+        public static final String INDEX_UID            = "budget_amounts_uid_index";
+    }
+
+
+    public static abstract class RecurrenceEntry implements CommonColumns {
+        public static final String TABLE_NAME           = "recurrences";
+
+        public static final String COLUMN_MULTIPLIER    = "recurrence_mult";
+        public static final String COLUMN_PERIOD_TYPE   = "recurrence_period_type";
+        public static final String COLUMN_PERIOD_START  = "recurrence_period_start";
+        public static final String COLUMN_PERIOD_END    = "recurrence_period_end";
+        public static final String COLUMN_BYDAY         = "recurrence_byday";
+
+        public static final String INDEX_UID = "recurrence_uid_index";
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index f8d91f08..1617ccb1 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -32,6 +32,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
@@ -40,6 +41,8 @@
 import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.model.PeriodType;
+import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Transaction;
 import org.xml.sax.InputSource;
@@ -65,9 +68,12 @@
 import javax.xml.parsers.SAXParserFactory;
 
 import static org.gnucash.android.db.DatabaseSchema.AccountEntry;
+import static org.gnucash.android.db.DatabaseSchema.BudgetAmountEntry;
+import static org.gnucash.android.db.DatabaseSchema.BudgetEntry;
 import static org.gnucash.android.db.DatabaseSchema.CommodityEntry;
 import static org.gnucash.android.db.DatabaseSchema.CommonColumns;
 import static org.gnucash.android.db.DatabaseSchema.PriceEntry;
+import static org.gnucash.android.db.DatabaseSchema.RecurrenceEntry;
 import static org.gnucash.android.db.DatabaseSchema.ScheduledActionEntry;
 import static org.gnucash.android.db.DatabaseSchema.SplitEntry;
 import static org.gnucash.android.db.DatabaseSchema.TransactionEntry;
@@ -83,7 +89,7 @@
 
     /**
      * Performs same function as {@link AccountsDbAdapter#getFullyQualifiedAccountName(String)}
-     * <p>This method is only necessary because we cannot open the database again (by instantiating {@link org.gnucash.android.db.AccountsDbAdapter}
+     * <p>This method is only necessary because we cannot open the database again (by instantiating {@link AccountsDbAdapter}
      * while it is locked for upgrades. So we re-implement the method here.</p>
      * @param db SQLite database
      * @param accountUID Unique ID of account whose fully qualified name is to be determined
@@ -495,7 +501,7 @@ static int upgradeDbToVersion8(SQLiteDatabase db) {
                     + ScheduledActionEntry.COLUMN_UID            + " varchar(255) not null UNIQUE, "
                     + ScheduledActionEntry.COLUMN_ACTION_UID    + " varchar(255) not null, "
                     + ScheduledActionEntry.COLUMN_TYPE           + " varchar(255) not null, "
-                    + ScheduledActionEntry.COLUMN_PERIOD         + " integer not null, "
+                    + "period "                                 + " integer not null, "
                     + ScheduledActionEntry.COLUMN_LAST_RUN       + " integer default 0, "
                     + ScheduledActionEntry.COLUMN_START_TIME     + " integer not null, "
                     + ScheduledActionEntry.COLUMN_END_TIME       + " integer default 0, "
@@ -711,7 +717,7 @@ static int upgradeDbToVersion8(SQLiteDatabase db) {
                 contentValues.put(CommonColumns.COLUMN_UID, BaseModel.generateUID());
                 contentValues.put(CommonColumns.COLUMN_CREATED_AT, timestamp);
                 contentValues.put(ScheduledActionEntry.COLUMN_ACTION_UID, cursor.getString(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID)));
-                contentValues.put(ScheduledActionEntry.COLUMN_PERIOD,    cursor.getLong(cursor.getColumnIndexOrThrow("recurrence_period")));
+                contentValues.put("period", cursor.getLong(cursor.getColumnIndexOrThrow("recurrence_period")));
                 contentValues.put(ScheduledActionEntry.COLUMN_START_TIME, timestampT.getTime());
                 contentValues.put(ScheduledActionEntry.COLUMN_END_TIME, 0);
                 contentValues.put(ScheduledActionEntry.COLUMN_LAST_RUN, lastRun);
@@ -850,7 +856,7 @@ static int upgradeDbToVersion9(SQLiteDatabase db){
 
         db.beginTransaction();
         try {
-            String createCommoditiesSql = "CREATE TABLE " + CommodityEntry.TABLE_NAME + " ("
+            db.execSQL("CREATE TABLE " + CommodityEntry.TABLE_NAME + " ("
                     + CommodityEntry._ID                + " integer primary key autoincrement, "
                     + CommodityEntry.COLUMN_UID         + " varchar(255) not null UNIQUE, "
                     + CommodityEntry.COLUMN_NAMESPACE   + " varchar(255) not null default " + Commodity.Namespace.ISO4217.name() + ", "
@@ -862,8 +868,10 @@ static int upgradeDbToVersion9(SQLiteDatabase db){
                     + CommodityEntry.COLUMN_QUOTE_FLAG  + " integer not null, "
                     + CommodityEntry.COLUMN_CREATED_AT  + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
                     + CommodityEntry.COLUMN_MODIFIED_AT + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP "
-                    + ");" + DatabaseHelper.createUpdatedAtTrigger(CommodityEntry.TABLE_NAME);
-            db.execSQL(createCommoditiesSql);
+                    + ");" + DatabaseHelper.createUpdatedAtTrigger(CommodityEntry.TABLE_NAME));
+            db.execSQL("CREATE UNIQUE INDEX '" + CommodityEntry.INDEX_UID
+                    + "' ON " + CommodityEntry.TABLE_NAME + "(" + CommodityEntry.COLUMN_UID + ")");
+
             try {
                 importCommodities(db);
             } catch (SAXException | ParserConfigurationException | IOException e) {
@@ -892,7 +900,7 @@ static int upgradeDbToVersion9(SQLiteDatabase db){
                     + " WHERE " + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_COMMODITY_UID + " = " + CommodityEntry.TABLE_NAME + "." + CommodityEntry.COLUMN_UID
                     + ")");
 
-            String createPricesSql = "CREATE TABLE " + PriceEntry.TABLE_NAME + " ("
+            db.execSQL("CREATE TABLE " + PriceEntry.TABLE_NAME + " ("
                     + PriceEntry._ID                    + " integer primary key autoincrement, "
                     + PriceEntry.COLUMN_UID             + " varchar(255) not null UNIQUE, "
                     + PriceEntry.COLUMN_COMMODITY_UID 	+ " varchar(255) not null, "
@@ -907,12 +915,13 @@ static int upgradeDbToVersion9(SQLiteDatabase db){
                     + "UNIQUE (" + PriceEntry.COLUMN_COMMODITY_UID + ", " + PriceEntry.COLUMN_CURRENCY_UID + ") ON CONFLICT REPLACE, "
                     + "FOREIGN KEY (" 	+ PriceEntry.COLUMN_COMMODITY_UID + ") REFERENCES " + CommodityEntry.TABLE_NAME + " (" + CommodityEntry.COLUMN_UID + ") ON DELETE CASCADE, "
                     + "FOREIGN KEY (" 	+ PriceEntry.COLUMN_CURRENCY_UID + ") REFERENCES " + CommodityEntry.TABLE_NAME + " (" + CommodityEntry.COLUMN_UID + ") ON DELETE CASCADE "
-                    + ");" + DatabaseHelper.createUpdatedAtTrigger(PriceEntry.TABLE_NAME);
-            db.execSQL(createPricesSql);
+                    + ");" + DatabaseHelper.createUpdatedAtTrigger(PriceEntry.TABLE_NAME));
+            db.execSQL("CREATE UNIQUE INDEX '" + PriceEntry.INDEX_UID
+                    + "' ON " + PriceEntry.TABLE_NAME + "(" + PriceEntry.COLUMN_UID + ")");
 
 
             //store split amounts as integer components numerator and denominator
-            
+
             db.execSQL("ALTER TABLE " + SplitEntry.TABLE_NAME + " RENAME TO " + SplitEntry.TABLE_NAME + "_bak");
             // create new split table
             db.execSQL("CREATE TABLE " + SplitEntry.TABLE_NAME + " ("
@@ -1170,4 +1179,178 @@ static int upgradeDbToVersion11(SQLiteDatabase db){
         }
         return oldVersion;
     }
+
+    /**
+     * Upgrades the database to version 12.
+     * <p>This migration makes the following changes to the database:
+     * <ul>
+     *     <li>Adds a table for budgets</li>
+     *     <li>Adds an extra table for recurrences</li>
+     *     <li>Migrate scheduled transaction recurrences to own table</li>
+     *     <li>Adds flags for reconciled status to split table</li>
+     *     <li>Add flags for auto-/advance- create and notification to scheduled actions</li>
+     * </ul>
+     * </p>
+     * @param db SQlite database to be upgraded
+     * @return New database version, 12 if migration succeeds, 11 otherwise
+     */
+    static int upgradeDbToVersion12(SQLiteDatabase db){
+        Log.i(DatabaseHelper.LOG_TAG, "Upgrading database to version 9");
+        int oldVersion = 11;
+
+        db.beginTransaction();
+        try {
+            db.execSQL("CREATE TABLE " + RecurrenceEntry.TABLE_NAME + " ("
+                    + RecurrenceEntry._ID                   + " integer primary key autoincrement, "
+                    + RecurrenceEntry.COLUMN_UID            + " varchar(255) not null UNIQUE, "
+                    + RecurrenceEntry.COLUMN_MULTIPLIER     + " integer not null default 1, "
+                    + RecurrenceEntry.COLUMN_PERIOD_TYPE    + " varchar(255) not null, "
+                    + RecurrenceEntry.COLUMN_BYDAY          + " varchar(255), "
+                    + RecurrenceEntry.COLUMN_PERIOD_START   + " timestamp not null, "
+                    + RecurrenceEntry.COLUMN_PERIOD_END   + " timestamp, "
+                    + RecurrenceEntry.COLUMN_CREATED_AT     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + RecurrenceEntry.COLUMN_MODIFIED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP); "
+                    + DatabaseHelper.createUpdatedAtTrigger(RecurrenceEntry.TABLE_NAME));
+
+            db.execSQL("CREATE TABLE " + BudgetEntry.TABLE_NAME + " ("
+                    + BudgetEntry._ID                   + " integer primary key autoincrement, "
+                    + BudgetEntry.COLUMN_UID            + " varchar(255) not null UNIQUE, "
+                    + BudgetEntry.COLUMN_NAME           + " varchar(255) not null, "
+                    + BudgetEntry.COLUMN_DESCRIPTION    + " varchar(255), "
+                    + BudgetEntry.COLUMN_RECURRENCE_UID + " varchar(255) not null, "
+                    + BudgetEntry.COLUMN_NUM_PERIODS    + " integer, "
+                    + BudgetEntry.COLUMN_CREATED_AT     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + BudgetEntry.COLUMN_MODIFIED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + "FOREIGN KEY (" 	+ BudgetEntry.COLUMN_RECURRENCE_UID + ") REFERENCES " + RecurrenceEntry.TABLE_NAME + " (" + RecurrenceEntry.COLUMN_UID + ") "
+                    + ");" + DatabaseHelper.createUpdatedAtTrigger(BudgetEntry.TABLE_NAME));
+
+            db.execSQL("CREATE UNIQUE INDEX '" + BudgetEntry.INDEX_UID
+                    + "' ON " + BudgetEntry.TABLE_NAME + "(" + BudgetEntry.COLUMN_UID + ")");
+
+            db.execSQL("CREATE TABLE " + BudgetAmountEntry.TABLE_NAME + " ("
+                    + BudgetAmountEntry._ID                   + " integer primary key autoincrement, "
+                    + BudgetAmountEntry.COLUMN_UID            + " varchar(255) not null UNIQUE, "
+                    + BudgetAmountEntry.COLUMN_BUDGET_UID     + " varchar(255) not null, "
+                    + BudgetAmountEntry.COLUMN_ACCOUNT_UID    + " varchar(255) not null, "
+                    + BudgetAmountEntry.COLUMN_AMOUNT_NUM     + " integer not null, "
+                    + BudgetAmountEntry.COLUMN_AMOUNT_DENOM   + " integer not null, "
+                    + BudgetAmountEntry.COLUMN_PERIOD_NUM     + " integer not null, "
+                    + BudgetAmountEntry.COLUMN_CREATED_AT     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + BudgetAmountEntry.COLUMN_MODIFIED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + "FOREIGN KEY (" 	+ BudgetAmountEntry.COLUMN_ACCOUNT_UID + ") REFERENCES " + AccountEntry.TABLE_NAME + " (" + AccountEntry.COLUMN_UID + ") ON DELETE CASCADE, "
+                    + "FOREIGN KEY (" 	+ BudgetAmountEntry.COLUMN_BUDGET_UID + ") REFERENCES " + BudgetEntry.TABLE_NAME + " (" + BudgetEntry.COLUMN_UID + ") ON DELETE CASCADE "
+                    + ");" + DatabaseHelper.createUpdatedAtTrigger(BudgetAmountEntry.TABLE_NAME));
+
+            db.execSQL("CREATE UNIQUE INDEX '" + BudgetAmountEntry.INDEX_UID
+                    + "' ON " + BudgetAmountEntry.TABLE_NAME + "(" + BudgetAmountEntry.COLUMN_UID + ")");
+
+
+            //extract recurrences from scheduled actions table and put in the recurrence table
+            db.execSQL("ALTER TABLE " + ScheduledActionEntry.TABLE_NAME + " RENAME TO " + ScheduledActionEntry.TABLE_NAME + "_bak");
+
+            db.execSQL("CREATE TABLE " + ScheduledActionEntry.TABLE_NAME + " ("
+                    + ScheduledActionEntry._ID                      + " integer primary key autoincrement, "
+                    + ScheduledActionEntry.COLUMN_UID               + " varchar(255) not null UNIQUE, "
+                    + ScheduledActionEntry.COLUMN_ACTION_UID        + " varchar(255) not null, "
+                    + ScheduledActionEntry.COLUMN_TYPE              + " varchar(255) not null, "
+                    + ScheduledActionEntry.COLUMN_RECURRENCE_UID    + " varchar(255) not null, "
+                    + ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID + " varchar(255) not null, "
+                    + ScheduledActionEntry.COLUMN_LAST_RUN          + " integer default 0, "
+                    + ScheduledActionEntry.COLUMN_START_TIME        + " integer not null, "
+                    + ScheduledActionEntry.COLUMN_END_TIME          + " integer default 0, "
+                    + ScheduledActionEntry.COLUMN_TAG               + " text, "
+                    + ScheduledActionEntry.COLUMN_ENABLED           + " tinyint default 1, " //enabled by default
+                    + ScheduledActionEntry.COLUMN_AUTO_CREATE       + " tinyint default 1, "
+                    + ScheduledActionEntry.COLUMN_AUTO_NOTIFY       + " tinyint default 0, "
+                    + ScheduledActionEntry.COLUMN_ADVANCE_CREATION  + " integer default 0, "
+                    + ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY    + " integer default 0, "
+                    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY   + " integer default 0, "
+                    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT   + " integer default 0, "
+                    + ScheduledActionEntry.COLUMN_CREATED_AT        + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + ScheduledActionEntry.COLUMN_MODIFIED_AT       + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + "FOREIGN KEY (" 	+ ScheduledActionEntry.COLUMN_RECURRENCE_UID + ") REFERENCES " + RecurrenceEntry.TABLE_NAME + " (" + RecurrenceEntry.COLUMN_UID + ") "
+                    + ");" + DatabaseHelper.createUpdatedAtTrigger(ScheduledActionEntry.TABLE_NAME));
+
+
+            // initialize new transaction table with data from old table
+            db.execSQL("INSERT INTO " + ScheduledActionEntry.TABLE_NAME + " ( "
+                            + ScheduledActionEntry._ID + " , "
+                            + ScheduledActionEntry.COLUMN_UID + " , "
+                            + ScheduledActionEntry.COLUMN_ACTION_UID + " , "
+                            + ScheduledActionEntry.COLUMN_TYPE + " , "
+                            + ScheduledActionEntry.COLUMN_LAST_RUN + " , "
+                            + ScheduledActionEntry.COLUMN_START_TIME + " , "
+                            + ScheduledActionEntry.COLUMN_END_TIME + " , "
+                            + ScheduledActionEntry.COLUMN_ENABLED + " , "
+                            + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , "
+                            + ScheduledActionEntry.COLUMN_EXECUTION_COUNT + " , "
+                            + ScheduledActionEntry.COLUMN_CREATED_AT + " , "
+                            + ScheduledActionEntry.COLUMN_MODIFIED_AT + " , "
+                            + ScheduledActionEntry.COLUMN_RECURRENCE_UID + " , "
+                            + ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID + " , "
+                            + ScheduledActionEntry.COLUMN_TAG
+                            + ")  SELECT "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry._ID + " , "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_UID + " , "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_ACTION_UID + " , "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_TYPE + " , "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_LAST_RUN + " , "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_START_TIME + " , "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_END_TIME + " , "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_ENABLED + " , "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_EXECUTION_COUNT + " , "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_CREATED_AT + " , "
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_MODIFIED_AT + " , "
+                            + " 'dummy-string' ," //will be updated in next steps
+                            + " 'dummy-string' ,"
+                            + ScheduledActionEntry.TABLE_NAME + "_bak." + ScheduledActionEntry.COLUMN_TAG
+                            + " FROM " + ScheduledActionEntry.TABLE_NAME + "_bak;");
+
+            //update the template-account-guid and the recurrence guid for all scheduled actions
+            Cursor cursor = db.query(ScheduledActionEntry.TABLE_NAME + "_bak",
+                    new String[]{ScheduledActionEntry.COLUMN_UID,
+                            "period",
+                            ScheduledActionEntry.COLUMN_START_TIME
+                    },
+                    null, null, null, null, null);
+
+            ContentValues contentValues = new ContentValues();
+            while (cursor.moveToNext()){
+                String uid = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_UID));
+                long period = cursor.getLong(cursor.getColumnIndexOrThrow("period"));
+                long startTime = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_START_TIME));
+                PeriodType periodType = PeriodType.parse(period);
+                Recurrence recurrence = new Recurrence(periodType);
+                recurrence.setPeriodStart(new Timestamp(startTime));
+
+                contentValues.clear();
+                contentValues.put(RecurrenceEntry.COLUMN_UID, recurrence.getUID());
+                contentValues.put(RecurrenceEntry.COLUMN_MULTIPLIER, recurrence.getPeriodType().getMultiplier());
+                contentValues.put(RecurrenceEntry.COLUMN_PERIOD_TYPE, recurrence.getPeriodType().name());
+                contentValues.put(RecurrenceEntry.COLUMN_PERIOD_START, recurrence.getPeriodStart().toString());
+                db.insert(RecurrenceEntry.TABLE_NAME, null, contentValues);
+
+                contentValues.clear();
+                contentValues.put(ScheduledActionEntry.COLUMN_RECURRENCE_UID, recurrence.getUID());
+                contentValues.put(ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID, BaseModel.generateUID());
+                db.update(ScheduledActionEntry.TABLE_NAME, contentValues,
+                        ScheduledActionEntry.COLUMN_UID + " = ?", new String[]{uid});
+            }
+            cursor.close();
+
+            db.execSQL("DROP TABLE " + ScheduledActionEntry.TABLE_NAME + "_bak");
+
+            db.execSQL(" ALTER TABLE " + SplitEntry.TABLE_NAME
+                    + " ADD COLUMN " + SplitEntry.COLUMN_RECONCILE_STATE + " varchar(1) not null default 'n' ");
+            db.execSQL(" ALTER TABLE " + SplitEntry.TABLE_NAME
+                    + " ADD COLUMN " + SplitEntry.COLUMN_RECONCILE_DATE + " timestamp not null default CURRENT_TIMESTAMP ");
+
+            db.setTransactionSuccessful();
+            oldVersion = 12;
+        } finally {
+            db.endTransaction();
+        }
+        return oldVersion;
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
similarity index 99%
rename from app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
rename to app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index 63b189a3..906b9673 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.db;
+package org.gnucash.android.db.adapter;
 
 import android.content.ContentValues;
 import android.content.Context;
@@ -30,6 +30,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Commodity;
@@ -932,6 +933,7 @@ public String getOrCreateGnuCashRootAccountUID() {
         rootAccount.setAccountType(AccountType.ROOT);
         rootAccount.setFullName(ROOT_ACCOUNT_FULL_NAME);
         rootAccount.setHidden(true);
+        rootAccount.setPlaceHolderFlag(true);
         ContentValues contentValues = new ContentValues();
         contentValues.put(AccountEntry.COLUMN_UID, rootAccount.getUID());
         contentValues.put(AccountEntry.COLUMN_NAME, rootAccount.getName());
@@ -1102,7 +1104,7 @@ public boolean isFavoriteAccount(String accountUID){
                 transaction.setCurrencyCode(currencyCode);
                 TransactionType transactionType = Transaction.getTypeForBalance(getAccountType(accountUID),
                         balance.isNegative());
-                Split split = new Split(balance.absolute(), accountUID);
+                Split split = new Split(balance.abs(), accountUID);
                 split.setType(transactionType);
                 transaction.addSplit(split);
                 transaction.addSplit(split.createPair(getOrCreateOpeningBalanceAccountUID()));
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java
new file mode 100644
index 00000000..60ff4f30
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java
@@ -0,0 +1,145 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.db.adapter;
+
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteStatement;
+import android.support.annotation.NonNull;
+
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.model.BudgetAmount;
+import org.gnucash.android.model.Money;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static org.gnucash.android.db.DatabaseSchema.BudgetAmountEntry;
+
+/**
+ * Database adapter for {@link BudgetAmount}s
+ */
+public class BudgetAmountsDbAdapter extends DatabaseAdapter<BudgetAmount> {
+
+
+    /**
+     * Opens the database adapter with an existing database
+     *
+     * @param db        SQLiteDatabase object
+     */
+    public BudgetAmountsDbAdapter(SQLiteDatabase db) {
+        super(db, BudgetAmountEntry.TABLE_NAME);
+    }
+
+    public static BudgetAmountsDbAdapter getInstance(){
+        return GnuCashApplication.getBudgetAmountsDbAdapter();
+    }
+
+    @Override
+    public BudgetAmount buildModelInstance(@NonNull Cursor cursor) {
+        String budgetUID = cursor.getString(cursor.getColumnIndexOrThrow(BudgetAmountEntry.COLUMN_BUDGET_UID));
+        String accountUID = cursor.getString(cursor.getColumnIndexOrThrow(BudgetAmountEntry.COLUMN_ACCOUNT_UID));
+        long amountNum  = cursor.getLong(cursor.getColumnIndexOrThrow(BudgetAmountEntry.COLUMN_AMOUNT_NUM));
+        long amountDenom = cursor.getLong(cursor.getColumnIndexOrThrow(BudgetAmountEntry.COLUMN_AMOUNT_DENOM));
+        long periodNum  = cursor.getLong(cursor.getColumnIndexOrThrow(BudgetAmountEntry.COLUMN_PERIOD_NUM));
+
+        BudgetAmount budgetAmount = new BudgetAmount(budgetUID, accountUID);
+        budgetAmount.setAmount(new Money(amountNum, amountDenom, getAccountCurrencyCode(accountUID)));
+        budgetAmount.setPeriodNum(periodNum);
+        populateBaseModelAttributes(cursor, budgetAmount);
+
+        return budgetAmount;
+    }
+
+    @Override
+    protected SQLiteStatement compileReplaceStatement(@NonNull BudgetAmount budgetAmount) {
+        if (mReplaceStatement == null){
+            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + BudgetAmountEntry.TABLE_NAME + " ( "
+                    + BudgetAmountEntry.COLUMN_UID            + " , "
+                    + BudgetAmountEntry.COLUMN_BUDGET_UID     + " , "
+                    + BudgetAmountEntry.COLUMN_ACCOUNT_UID    + " , "
+                    + BudgetAmountEntry.COLUMN_AMOUNT_NUM     + " , "
+                    + BudgetAmountEntry.COLUMN_AMOUNT_DENOM   + " , "
+                    + BudgetAmountEntry.COLUMN_PERIOD_NUM     + " ) VALUES ( ? , ? , ? , ? , ? , ? ) ");
+        }
+
+        mReplaceStatement.clearBindings();
+        mReplaceStatement.bindString(1, budgetAmount.getUID());
+        mReplaceStatement.bindString(2, budgetAmount.getBudgetUID());
+        mReplaceStatement.bindString(3, budgetAmount.getAccountUID());
+        mReplaceStatement.bindLong(4, budgetAmount.getAmount().getNumerator());
+        mReplaceStatement.bindLong(5, budgetAmount.getAmount().getDenominator());
+        mReplaceStatement.bindLong(6, budgetAmount.getPeriodNum());
+
+        return mReplaceStatement;
+    }
+
+    /**
+     * Return budget amounts for the specific budget
+     * @param budgetUID GUID of the budget
+     * @return List of budget amounts
+     */
+    public List<BudgetAmount> getBudgetAmountsForBudget(String budgetUID){
+        Cursor cursor = fetchAllRecords(BudgetAmountEntry.COLUMN_BUDGET_UID + "=?",
+                new String[]{budgetUID}, null);
+
+        List<BudgetAmount> budgetAmounts = new ArrayList<>();
+        while (cursor.moveToNext()){
+            budgetAmounts.add(buildModelInstance(cursor));
+        }
+        cursor.close();
+        return budgetAmounts;
+    }
+
+    /**
+     * Delete all the budget amounts for a budget
+     * @param budgetUID GUID of the budget
+     * @return Number of records deleted
+     */
+    public int deleteBudgetAmountsForBudget(String budgetUID){
+        return mDb.delete(mTableName, BudgetAmountEntry.COLUMN_BUDGET_UID + "=?",
+                new String[]{budgetUID});
+    }
+
+    /**
+     * Returns the budgets associated with a specific account
+     * @param accountUID GUID of the account
+     * @return List of {@link BudgetAmount}s for the account
+     */
+    public List<BudgetAmount> getBudgetAmounts(String accountUID) {
+        Cursor cursor = fetchAllRecords(BudgetAmountEntry.COLUMN_ACCOUNT_UID + " = ?", new String[]{accountUID}, null);
+        List<BudgetAmount> budgetAmounts = new ArrayList<>();
+        while(cursor.moveToNext()){
+            budgetAmounts.add(buildModelInstance(cursor));
+        }
+        cursor.close();
+        return budgetAmounts;
+    }
+
+    /**
+     * Returns the sum of the budget amounts for a particular account
+     * @param accountUID GUID of the account
+     * @return Sum of the budget amounts
+     */
+    public Money getBudgetAmountSum(String accountUID){
+        List<BudgetAmount> budgetAmounts = getBudgetAmounts(accountUID);
+        Money sum = Money.createZeroInstance(getAccountCurrencyCode(accountUID));
+        for (BudgetAmount budgetAmount : budgetAmounts) {
+            sum = sum.add(budgetAmount.getAmount());
+        }
+        return sum;
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
new file mode 100644
index 00000000..9f03d0f2
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
@@ -0,0 +1,194 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.db.adapter;
+
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteQueryBuilder;
+import android.database.sqlite.SQLiteStatement;
+import android.support.annotation.NonNull;
+
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseSchema.BudgetAmountEntry;
+import org.gnucash.android.db.DatabaseSchema.BudgetEntry;
+import org.gnucash.android.model.Budget;
+import org.gnucash.android.model.BudgetAmount;
+import org.gnucash.android.model.Money;
+import org.gnucash.android.model.Recurrence;
+
+import java.util.ArrayList;
+import java.util.List;
+
+
+/**
+ * Database adapter for accessing {@link org.gnucash.android.model.Budget} records
+ */
+public class BudgetsDbAdapter extends DatabaseAdapter<Budget>{
+
+    private RecurrenceDbAdapter mRecurrenceDbAdapter;
+    private BudgetAmountsDbAdapter mBudgetAmountsDbAdapter;
+
+    /**
+     * Opens the database adapter with an existing database
+     *
+     * @param db        SQLiteDatabase object
+     */
+    public BudgetsDbAdapter(SQLiteDatabase db) {
+        super(db, BudgetEntry.TABLE_NAME);
+        mRecurrenceDbAdapter = new RecurrenceDbAdapter(db);
+        mBudgetAmountsDbAdapter = new BudgetAmountsDbAdapter(db);
+    }
+
+    /**
+     * Returns an instance of the budget database adapter
+     * @return BudgetsDbAdapter instance
+     */
+    public static BudgetsDbAdapter getInstance(){
+        return GnuCashApplication.getBudgetDbAdapter();
+    }
+
+    @Override
+    public void addRecord(@NonNull Budget budget) {
+        if (budget.getBudgetAmounts().size() == 0)
+            throw new IllegalArgumentException("Budgets must have budget amounts");
+
+        mRecurrenceDbAdapter.addRecord(budget.getRecurrence());
+        super.addRecord(budget);
+        mBudgetAmountsDbAdapter.deleteBudgetAmountsForBudget(budget.getUID());
+        for (BudgetAmount budgetAmount : budget.getBudgetAmounts()) {
+            mBudgetAmountsDbAdapter.addRecord(budgetAmount);
+        }
+    }
+
+    @Override
+    public long bulkAddRecords(@NonNull List<Budget> budgetList) {
+        List<BudgetAmount> budgetAmountList = new ArrayList<>(budgetList.size()*2);
+        for (Budget budget : budgetList) {
+            budgetAmountList.addAll(budget.getBudgetAmounts());
+        }
+
+        //first add the recurrences, they have no dependencies (foreign key constraints)
+        List<Recurrence> recurrenceList = new ArrayList<>(budgetList.size());
+        for (Budget budget : budgetList) {
+            recurrenceList.add(budget.getRecurrence());
+        }
+        mRecurrenceDbAdapter.bulkAddRecords(recurrenceList);
+
+        //now add the budgets themselves
+        long nRow = super.bulkAddRecords(budgetList);
+
+        //then add the budget amounts, they require the budgets to exist
+        if (nRow > 0 && !budgetAmountList.isEmpty()){
+            mBudgetAmountsDbAdapter.bulkAddRecords(budgetAmountList);
+        }
+
+        return nRow;
+    }
+
+    @Override
+    public Budget buildModelInstance(@NonNull Cursor cursor) {
+        String name = cursor.getString(cursor.getColumnIndexOrThrow(BudgetEntry.COLUMN_NAME));
+        String description = cursor.getString(cursor.getColumnIndexOrThrow(BudgetEntry.COLUMN_DESCRIPTION));
+        String recurrenceUID = cursor.getString(cursor.getColumnIndexOrThrow(BudgetEntry.COLUMN_RECURRENCE_UID));
+        long numPeriods = cursor.getLong(cursor.getColumnIndexOrThrow(BudgetEntry.COLUMN_NUM_PERIODS));
+
+
+        Budget budget = new Budget(name);
+        budget.setDescription(description);
+        budget.setRecurrence(mRecurrenceDbAdapter.getRecord(recurrenceUID));
+        budget.setNumberOfPeriods(numPeriods);
+        populateBaseModelAttributes(cursor, budget);
+        budget.setBudgetAmounts(mBudgetAmountsDbAdapter.getBudgetAmountsForBudget(budget.getUID()));
+
+        return budget;
+    }
+
+    @Override
+    protected SQLiteStatement compileReplaceStatement(@NonNull Budget budget) {
+        if (mReplaceStatement == null){
+            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + BudgetEntry.TABLE_NAME + " ( "
+                    + BudgetEntry.COLUMN_UID            + " , "
+                    + BudgetEntry.COLUMN_NAME           + " , "
+                    + BudgetEntry.COLUMN_DESCRIPTION    + " , "
+                    + BudgetEntry.COLUMN_RECURRENCE_UID + " , "
+                    + BudgetEntry.COLUMN_NUM_PERIODS    + " ) VALUES (? , ? , ? , ? , ? ) ");
+        }
+
+        mReplaceStatement.clearBindings();
+        mReplaceStatement.bindString(1, budget.getUID());
+        mReplaceStatement.bindString(2, budget.getName());
+        if (budget.getDescription() != null)
+            mReplaceStatement.bindString(3, budget.getDescription());
+        mReplaceStatement.bindString(4, budget.getRecurrence().getUID());
+        mReplaceStatement.bindLong(5, budget.getNumberOfPeriods());
+
+        return mReplaceStatement;
+    }
+
+    /**
+     * Fetch all budgets which have an amount specified for the account
+     * @param accountUID GUID of account
+     * @return Cursor with budgets data
+     */
+    public Cursor fetchBudgetsForAccount(String accountUID){
+        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();
+        queryBuilder.setTables(BudgetEntry.TABLE_NAME + "," + BudgetAmountEntry.TABLE_NAME
+                + " ON " + BudgetEntry.TABLE_NAME + "." + BudgetEntry.COLUMN_UID + " = "
+                + BudgetAmountEntry.TABLE_NAME + "." + BudgetAmountEntry.COLUMN_BUDGET_UID);
+
+        queryBuilder.setDistinct(true);
+        String[] projectionIn = new String[]{BudgetEntry.TABLE_NAME + ".*"};
+        String selection = BudgetAmountEntry.TABLE_NAME + "." + BudgetAmountEntry.COLUMN_ACCOUNT_UID + " = ?";
+        String[] selectionArgs = new String[]{accountUID};
+        String sortOrder = BudgetEntry.TABLE_NAME + "." + BudgetEntry.COLUMN_NAME + " ASC";
+
+        return queryBuilder.query(mDb, projectionIn, selection, selectionArgs, null, null, sortOrder);
+    }
+
+    /**
+     * Returns the budgets associated with a specific account
+     * @param accountUID GUID of the account
+     * @return List of budgets for the account
+     */
+    public List<Budget> getAccountBudgets(String accountUID) {
+        Cursor cursor = fetchBudgetsForAccount(accountUID);
+        List<Budget> budgets = new ArrayList<>();
+        while(cursor.moveToNext()){
+            budgets.add(buildModelInstance(cursor));
+        }
+        cursor.close();
+        return budgets;
+    }
+
+    /**
+     * Returns the sum of the account balances for all accounts in a budget for a specified time period
+     * <p>This represents the total amount spent within the account of this budget in a given period</p>
+     * @param budgetUID GUID of budget
+     * @param periodStart Start of the budgeting period in millis
+     * @param periodEnd End of the budgeting period in millis
+     * @return Balance of all the accounts
+     */
+    public Money getAccountSum(String budgetUID, long periodStart, long periodEnd){
+        List<BudgetAmount> budgetAmounts = mBudgetAmountsDbAdapter.getBudgetAmountsForBudget(budgetUID);
+        List<String> accountUIDs = new ArrayList<>();
+        for (BudgetAmount budgetAmount : budgetAmounts) {
+            accountUIDs.add(budgetAmount.getAccountUID());
+        }
+
+        return AccountsDbAdapter.getInstance().getAccountsBalance(accountUIDs, periodStart, periodEnd);
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/db/CommoditiesDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
similarity index 97%
rename from app/src/main/java/org/gnucash/android/db/CommoditiesDbAdapter.java
rename to app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
index b4e6d758..ade7fab7 100644
--- a/app/src/main/java/org/gnucash/android/db/CommoditiesDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
@@ -1,4 +1,4 @@
-package org.gnucash.android.db;
+package org.gnucash.android.db.adapter;
 
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
@@ -6,6 +6,7 @@
 import android.support.annotation.NonNull;
 
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.Commodity;
 
 import static org.gnucash.android.db.DatabaseSchema.CommodityEntry;
@@ -107,7 +108,7 @@ public Cursor fetchAllRecords(String orderBy) {
      * @return Commodity associated with code or null if none is found
      */
     public Commodity getCommodity(String currencyCode){
-        Cursor cursor = fetchAllRecords(CommodityEntry.COLUMN_MNEMONIC + "=?", new String[]{currencyCode});
+        Cursor cursor = fetchAllRecords(CommodityEntry.COLUMN_MNEMONIC + "=?", new String[]{currencyCode}, null);
         Commodity commodity = null;
         if (cursor.moveToNext()){
             commodity = buildModelInstance(cursor);
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
similarity index 96%
rename from app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
rename to app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index 5281404f..8881114f 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.db;
+package org.gnucash.android.db.adapter;
 
 import android.content.ContentValues;
 import android.database.Cursor;
@@ -23,6 +23,7 @@
 import android.support.annotation.NonNull;
 import android.util.Log;
 
+import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.DatabaseSchema.AccountEntry;
 import org.gnucash.android.db.DatabaseSchema.CommonColumns;
 import org.gnucash.android.db.DatabaseSchema.SplitEntry;
@@ -69,6 +70,7 @@ public DatabaseAdapter(SQLiteDatabase db, @NonNull String tableName) {
         if (mDb.getVersion() >= 9) {
             createTempView();
         }
+        LOG_TAG = getClass().getSimpleName();
     }
 
     private void createTempView() {
@@ -81,6 +83,8 @@ private void createTempView() {
         //
         // create a temporary view, combining accounts, transactions and splits, as this is often used
         // in the queries
+
+        //todo: would it be useful to add the split reconciled_state and reconciled_date to this view?
         mDb.execSQL("CREATE TEMP VIEW IF NOT EXISTS trans_split_acct AS SELECT "
                         + TransactionEntry.TABLE_NAME + "." + CommonColumns.COLUMN_MODIFIED_AT + " AS "
                         + TransactionEntry.TABLE_NAME + "_" + CommonColumns.COLUMN_MODIFIED_AT + " , "
@@ -227,11 +231,11 @@ public long bulkAddRecords(@NonNull List<Model> modelList) {
 
     /**
      * Builds an instance of the model from the database record entry
-     * <p>This method should not modify the cursor in any way</p>
+     * <p>When implementing this method, remember to call {@link #populateBaseModelAttributes(Cursor, BaseModel)}</p>
      * @param cursor Cursor pointing to the record
-     * @return
+     * @return New instance of the model from database record
      */
-    protected abstract Model buildModelInstance(@NonNull final Cursor cursor);
+    public abstract Model buildModelInstance(@NonNull final Cursor cursor);
 
     /**
      * Generates an {@link SQLiteStatement} with values from the {@code model}.
@@ -259,7 +263,7 @@ public Model getRecord(@NonNull String uid){
                 return buildModelInstance(cursor);
             }
             else {
-                throw new IllegalArgumentException("Record with " + uid + " does not exist");
+                throw new IllegalArgumentException(LOG_TAG + ": Record with " + uid + " does not exist");
             }
         } finally {
             cursor.close();
@@ -294,12 +298,12 @@ public Model getRecord(long id){
     }
 
     /**
-     * Adds the attributes of the base model to the ContentValues object provided
+     * Extracts the attributes of the base model and adds them to the ContentValues object provided
      * @param contentValues Content values to which to add attributes
      * @param model {@link org.gnucash.android.model.BaseModel} from which to extract values
      * @return {@link android.content.ContentValues} with the data to be inserted into the db
      */
-    protected ContentValues populateBaseModelAttributes(@NonNull ContentValues contentValues, @NonNull Model model){
+    protected ContentValues extractBaseModelAttributes(@NonNull ContentValues contentValues, @NonNull Model model){
         contentValues.put(CommonColumns.COLUMN_UID, model.getUID());
         contentValues.put(CommonColumns.COLUMN_CREATED_AT, model.getCreatedTimestamp().toString());
         //there is a trigger in the database for updated the modified_at column
@@ -350,17 +354,18 @@ public Cursor fetchRecord(@NonNull String uid){
 	 * @return {@link Cursor} to all records in table <code>tableName</code>
 	 */
 	public Cursor fetchAllRecords(){
-		return fetchAllRecords(null, null);
+		return fetchAllRecords(null, null, null);
 	}
 
     /**
      * Fetch all records from database matching conditions
      * @param where SQL where clause
      * @param whereArgs String arguments for where clause
+     * @param orderBy SQL orderby clause
      * @return Cursor to records matching conditions
      */
-    public Cursor fetchAllRecords(String where, String[] whereArgs){
-        return mDb.query(mTableName, null, where, whereArgs, null, null, null);
+    public Cursor fetchAllRecords(String where, String[] whereArgs, String orderBy){
+        return mDb.query(mTableName, null, where, whereArgs, null, null, orderBy);
     }
 
 	/**
@@ -423,7 +428,7 @@ public String getUID(long id){
             if (cursor.moveToFirst()) {
                 uid = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.CommonColumns.COLUMN_UID));
             } else {
-                throw new IllegalArgumentException("Account record ID " + id + " does not exist in the db");
+                throw new IllegalArgumentException("Record with ID " + id + " does not exist in the db");
             }
         } finally {
             cursor.close();
diff --git a/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter.java
similarity index 98%
rename from app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java
rename to app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter.java
index 83645f4f..86d92886 100644
--- a/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter.java
@@ -1,11 +1,9 @@
-package org.gnucash.android.db;
+package org.gnucash.android.db.adapter;
 
-import android.content.ContentValues;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteStatement;
 import android.support.annotation.NonNull;
-import android.util.Log;
 import android.util.Pair;
 
 import org.gnucash.android.app.GnuCashApplication;
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter.java
new file mode 100644
index 00000000..8235be4c
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter.java
@@ -0,0 +1,97 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.db.adapter;
+
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteStatement;
+import android.support.annotation.NonNull;
+
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.model.PeriodType;
+import org.gnucash.android.model.Recurrence;
+
+import java.sql.Timestamp;
+
+import static org.gnucash.android.db.DatabaseSchema.RecurrenceEntry;
+
+/**
+ * Database adapter for {@link Recurrence} entries
+ */
+public class RecurrenceDbAdapter extends DatabaseAdapter<Recurrence> {
+    /**
+     * Opens the database adapter with an existing database
+     *
+     * @param db        SQLiteDatabase object
+     */
+    public RecurrenceDbAdapter(SQLiteDatabase db) {
+        super(db, RecurrenceEntry.TABLE_NAME);
+    }
+
+    public static RecurrenceDbAdapter getInstance(){
+        return GnuCashApplication.getRecurrenceDbAdapter();
+    }
+
+    @Override
+    public Recurrence buildModelInstance(@NonNull Cursor cursor) {
+        String type = cursor.getString(cursor.getColumnIndexOrThrow(RecurrenceEntry.COLUMN_PERIOD_TYPE));
+        long multiplier = cursor.getLong(cursor.getColumnIndexOrThrow(RecurrenceEntry.COLUMN_MULTIPLIER));
+        String periodStart = cursor.getString(cursor.getColumnIndexOrThrow(RecurrenceEntry.COLUMN_PERIOD_START));
+        String periodEnd = cursor.getString(cursor.getColumnIndexOrThrow(RecurrenceEntry.COLUMN_PERIOD_END));
+        String byDay = cursor.getString(cursor.getColumnIndexOrThrow(RecurrenceEntry.COLUMN_BYDAY));
+
+        PeriodType periodType = PeriodType.valueOf(type);
+        periodType.setMultiplier((int) multiplier);
+
+        Recurrence recurrence = new Recurrence(periodType);
+        recurrence.setPeriodStart(Timestamp.valueOf(periodStart));
+        if (periodEnd != null)
+            recurrence.setPeriodEnd(Timestamp.valueOf(periodEnd));
+        recurrence.setByDay(byDay);
+
+        populateBaseModelAttributes(cursor, recurrence);
+
+        return recurrence;
+    }
+
+    @Override
+    protected SQLiteStatement compileReplaceStatement(@NonNull Recurrence recurrence) {
+        if (mReplaceStatement == null) {
+            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + RecurrenceEntry.TABLE_NAME + " ( "
+                    + RecurrenceEntry.COLUMN_UID + " , "
+                    + RecurrenceEntry.COLUMN_MULTIPLIER + " , "
+                    + RecurrenceEntry.COLUMN_PERIOD_TYPE + " , "
+                    + RecurrenceEntry.COLUMN_BYDAY + " , "
+                    + RecurrenceEntry.COLUMN_PERIOD_START + " , "
+                    + RecurrenceEntry.COLUMN_PERIOD_END + " ) VALUES ( ? , ? , ? , ? , ? , ? ) ");
+        }
+
+        mReplaceStatement.clearBindings();
+        mReplaceStatement.bindString(1, recurrence.getUID());
+        mReplaceStatement.bindLong(2, recurrence.getPeriodType().getMultiplier());
+        mReplaceStatement.bindString(3, recurrence.getPeriodType().name());
+        if (recurrence.getByDay() != null)
+            mReplaceStatement.bindString(4, recurrence.getByDay());
+        //recurrence should always have a start date
+        mReplaceStatement.bindString(5, recurrence.getPeriodStart().toString());
+
+        if (recurrence.getPeriodEnd() != null)
+            mReplaceStatement.bindString(6, recurrence.getPeriodEnd().toString());
+
+        return mReplaceStatement;
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
similarity index 66%
rename from app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
rename to app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
index 8a98500d..ade23f80 100644
--- a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.gnucash.android.db;
+package org.gnucash.android.db.adapter;
 
 import android.content.ContentValues;
 import android.database.Cursor;
@@ -23,6 +23,8 @@
 import android.util.Log;
 
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 
 import java.util.ArrayList;
@@ -37,8 +39,11 @@
  */
 public class ScheduledActionDbAdapter extends DatabaseAdapter<ScheduledAction> {
 
+    RecurrenceDbAdapter mRecurrenceDbAdapter;
+
     public ScheduledActionDbAdapter(SQLiteDatabase db){
         super(db, ScheduledActionEntry.TABLE_NAME);
+        mRecurrenceDbAdapter = new RecurrenceDbAdapter(db);
         LOG_TAG = "ScheduledActionDbAdapter";
     }
 
@@ -50,6 +55,26 @@ public static ScheduledActionDbAdapter getInstance(){
         return GnuCashApplication.getScheduledEventDbAdapter();
     }
 
+    @Override
+    public void addRecord(@NonNull ScheduledAction scheduledAction) {
+        mRecurrenceDbAdapter.addRecord(scheduledAction.getRecurrence());
+        super.addRecord(scheduledAction);
+    }
+
+    @Override
+    public long bulkAddRecords(@NonNull List<ScheduledAction> scheduledActions) {
+        List<Recurrence> recurrenceList = new ArrayList<>(scheduledActions.size());
+        for (ScheduledAction scheduledAction : scheduledActions) {
+            recurrenceList.add(scheduledAction.getRecurrence());
+        }
+
+        //first add the recurrences, they have no dependencies (foreign key constraints)
+        long nRecurrences = mRecurrenceDbAdapter.bulkAddRecords(recurrenceList);
+        Log.d(LOG_TAG, String.format("Added %d recurrences for scheduled actions", nRecurrences));
+
+        return super.bulkAddRecords(scheduledActions);
+    }
+
     /**
      * Updates only the recurrence attributes of the scheduled action.
      * The recurrence attributes are the period, start time, end time and/or total frequency.
@@ -60,9 +85,17 @@ public static ScheduledActionDbAdapter getInstance(){
      * @return Database record ID of the edited scheduled action
      */
     public long updateRecurrenceAttributes(ScheduledAction scheduledAction){
+        //since we are updating, first fetch the existing recurrence UID and set it to the object
+        //so that it will be updated and not a new one created
+        RecurrenceDbAdapter recurrenceDbAdapter = RecurrenceDbAdapter.getInstance();
+        String recurrenceUID = recurrenceDbAdapter.getAttribute(scheduledAction.getUID(), ScheduledActionEntry.COLUMN_RECURRENCE_UID);
+
+        Recurrence recurrence = scheduledAction.getRecurrence();
+        recurrence.setUID(recurrenceUID);
+        recurrenceDbAdapter.addRecord(recurrence);
+
         ContentValues contentValues = new ContentValues();
-        populateBaseModelAttributes(contentValues, scheduledAction);
-        contentValues.put(ScheduledActionEntry.COLUMN_PERIOD,    scheduledAction.getPeriod());
+        extractBaseModelAttributes(contentValues, scheduledAction);
         contentValues.put(ScheduledActionEntry.COLUMN_START_TIME, scheduledAction.getStartTime());
         contentValues.put(ScheduledActionEntry.COLUMN_END_TIME,  scheduledAction.getEndTime());
         contentValues.put(ScheduledActionEntry.COLUMN_TAG,       scheduledAction.getTag());
@@ -85,12 +118,17 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final ScheduledAction
                     + ScheduledActionEntry.COLUMN_START_TIME        + " , "
                     + ScheduledActionEntry.COLUMN_END_TIME          + " , "
                     + ScheduledActionEntry.COLUMN_LAST_RUN 		    + " , "
-                    + ScheduledActionEntry.COLUMN_PERIOD 	        + " , "
                     + ScheduledActionEntry.COLUMN_ENABLED           + " , "
                     + ScheduledActionEntry.COLUMN_CREATED_AT        + " , "
                     + ScheduledActionEntry.COLUMN_TAG               + " , "
-                    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY + " , "
-                    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT   + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )");
+                    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY   + " , "
+                    + ScheduledActionEntry.COLUMN_RECURRENCE_UID    + " , "
+                    + ScheduledActionEntry.COLUMN_AUTO_CREATE       + " , "
+                    + ScheduledActionEntry.COLUMN_AUTO_NOTIFY       + " , "
+                    + ScheduledActionEntry.COLUMN_ADVANCE_CREATION  + " , "
+                    + ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY    + " , "
+                    + ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID + " , "
+                    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT   + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )");
         }
 
         mReplaceStatement.clearBindings();
@@ -98,17 +136,23 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final ScheduledAction
         mReplaceStatement.bindString(2, schedxAction.getActionUID());
         mReplaceStatement.bindString(3, schedxAction.getActionType().name());
         mReplaceStatement.bindLong(4,   schedxAction.getStartTime());
-        mReplaceStatement.bindLong(5,   schedxAction.getEndTime());
-        mReplaceStatement.bindLong(6,   schedxAction.getLastRun());
-        mReplaceStatement.bindLong(7,   schedxAction.getPeriod());
-        mReplaceStatement.bindLong(8,   schedxAction.isEnabled() ? 1 : 0);
-        mReplaceStatement.bindString(9, schedxAction.getCreatedTimestamp().toString());
+        mReplaceStatement.bindLong(5, schedxAction.getEndTime());
+        mReplaceStatement.bindLong(6, schedxAction.getLastRunTime());
+        mReplaceStatement.bindLong(7, schedxAction.isEnabled() ? 1 : 0);
+        mReplaceStatement.bindString(8, schedxAction.getCreatedTimestamp().toString());
         if (schedxAction.getTag() == null)
-            mReplaceStatement.bindNull(10);
+            mReplaceStatement.bindNull(9);
         else
-            mReplaceStatement.bindString(10, schedxAction.getTag());
-        mReplaceStatement.bindString(11, Integer.toString(schedxAction.getTotalFrequency()));
-        mReplaceStatement.bindString(12, Integer.toString(schedxAction.getExecutionCount()));
+            mReplaceStatement.bindString(9, schedxAction.getTag());
+        mReplaceStatement.bindString(10, Integer.toString(schedxAction.getTotalFrequency()));
+        mReplaceStatement.bindString(11, schedxAction.getRecurrence().getUID());
+        mReplaceStatement.bindLong(12,   schedxAction.shouldAutoCreate() ? 1 : 0);
+        mReplaceStatement.bindLong(13,   schedxAction.shouldAutoNotify() ? 1 : 0);
+        mReplaceStatement.bindLong(14,   schedxAction.getAdvanceCreateDays());
+        mReplaceStatement.bindLong(15,   schedxAction.getAdvanceNotifyDays());
+        mReplaceStatement.bindString(16, schedxAction.getTemplateAccountUID());
+
+        mReplaceStatement.bindString(17, Integer.toString(schedxAction.getExecutionCount()));
 
         return mReplaceStatement;
     }
@@ -122,7 +166,6 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final ScheduledAction
     @Override
     public ScheduledAction buildModelInstance(@NonNull final Cursor cursor){
         String actionUid = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ACTION_UID));
-        long period     = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_PERIOD));
         long startTime  = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_START_TIME));
         long endTime    = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_END_TIME));
         long lastRun    = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_LAST_RUN));
@@ -131,10 +174,15 @@ public ScheduledAction buildModelInstance(@NonNull final Cursor cursor){
         boolean enabled = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ENABLED)) > 0;
         int numOccurrences = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY));
         int execCount = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_EXECUTION_COUNT));
+        int autoCreate = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_AUTO_CREATE));
+        int autoNotify = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_AUTO_NOTIFY));
+        int advanceCreate = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ADVANCE_CREATION));
+        int advanceNotify = cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY));
+        String recurrenceUID = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_RECURRENCE_UID));
+        String templateActUID = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID));
 
         ScheduledAction event = new ScheduledAction(ScheduledAction.ActionType.valueOf(typeString));
         populateBaseModelAttributes(cursor, event);
-        event.setPeriod(period);
         event.setStartTime(startTime);
         event.setEndTime(endTime);
         event.setActionUID(actionUid);
@@ -143,6 +191,13 @@ public ScheduledAction buildModelInstance(@NonNull final Cursor cursor){
         event.setEnabled(enabled);
         event.setTotalFrequency(numOccurrences);
         event.setExecutionCount(execCount);
+        event.setAutoCreate(autoCreate == 1);
+        event.setAutoNotify(autoNotify == 1);
+        event.setAdvanceCreateDays(advanceCreate);
+        event.setAdvanceNotifyDays(advanceNotify);
+        //TODO: optimize by doing overriding fetchRecord(String) and join the two tables
+        event.setRecurrence(mRecurrenceDbAdapter.getRecord(recurrenceUID));
+        event.setTemplateAccountUID(templateActUID);
 
         return event;
     }
@@ -158,7 +213,7 @@ public ScheduledAction buildModelInstance(@NonNull final Cursor cursor){
                 ScheduledActionEntry.COLUMN_ACTION_UID + "= ?",
                 new String[]{actionUID}, null, null, null);
 
-        List<ScheduledAction> scheduledActions = new ArrayList<ScheduledAction>();
+        List<ScheduledAction> scheduledActions = new ArrayList<>();
         try {
             while (cursor.moveToNext()) {
                 scheduledActions.add(buildModelInstance(cursor));
@@ -176,7 +231,7 @@ public ScheduledAction buildModelInstance(@NonNull final Cursor cursor){
     public List<ScheduledAction> getAllEnabledScheduledActions(){
         Cursor cursor = mDb.query(mTableName,
                 null, ScheduledActionEntry.COLUMN_ENABLED + "=1", null, null, null, null);
-        List<ScheduledAction> scheduledActions = new ArrayList<ScheduledAction>();
+        List<ScheduledAction> scheduledActions = new ArrayList<>();
         while (cursor.moveToNext()){
             scheduledActions.add(buildModelInstance(cursor));
         }
diff --git a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
similarity index 94%
rename from app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
rename to app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
index 84215fc8..5a0f2b6c 100644
--- a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.db;
+package org.gnucash.android.db.adapter;
 
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
@@ -27,7 +27,7 @@
 import android.util.Pair;
 
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.model.AccountType;
+import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
@@ -95,8 +95,10 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Split split) {
                     + SplitEntry.COLUMN_QUANTITY_NUM + " , "
                     + SplitEntry.COLUMN_QUANTITY_DENOM + " , "
                     + SplitEntry.COLUMN_CREATED_AT + " , "
+                    + SplitEntry.COLUMN_RECONCILE_STATE + " , "
+                    + SplitEntry.COLUMN_RECONCILE_DATE + " , "
                     + SplitEntry.COLUMN_ACCOUNT_UID + " , "
-                    + SplitEntry.COLUMN_TRANSACTION_UID + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ");
+                    + SplitEntry.COLUMN_TRANSACTION_UID + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ");
         }
 
         mReplaceStatement.clearBindings();
@@ -105,13 +107,15 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Split split) {
             mReplaceStatement.bindString(2, split.getMemo());
         }
         mReplaceStatement.bindString(3, split.getType().name());
-        mReplaceStatement.bindLong(4,   split.getValue().getNumerator());
+        mReplaceStatement.bindLong(4, split.getValue().getNumerator());
         mReplaceStatement.bindLong(5,   split.getValue().getDenominator());
-        mReplaceStatement.bindLong(6,   split.getQuantity().getNumerator());
-        mReplaceStatement.bindLong(7,   split.getQuantity().getDenominator());
+        mReplaceStatement.bindLong(6, split.getQuantity().getNumerator());
+        mReplaceStatement.bindLong(7, split.getQuantity().getDenominator());
         mReplaceStatement.bindString(8, split.getCreatedTimestamp().toString());
-        mReplaceStatement.bindString(9, split.getAccountUID());
-        mReplaceStatement.bindString(10, split.getTransactionUID());
+        mReplaceStatement.bindString(9, String.valueOf(split.getReconcileState()));
+        mReplaceStatement.bindString(10, split.getReconcileDate().toString());
+        mReplaceStatement.bindString(11, split.getAccountUID());
+        mReplaceStatement.bindString(12, split.getTransactionUID());
 
         return mReplaceStatement;
     }
@@ -131,6 +135,8 @@ public Split buildModelInstance(@NonNull final Cursor cursor){
         String accountUID   = cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_ACCOUNT_UID));
         String transxUID    = cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_TRANSACTION_UID));
         String memo         = cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_MEMO));
+        String reconcileState = cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_RECONCILE_STATE));
+        String reconcileDate  = cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_RECONCILE_DATE));
 
         String transactionCurrency = TransactionsDbAdapter.getInstance().getAttribute(transxUID, TransactionEntry.COLUMN_CURRENCY);
         Money value = new Money(valueNum, valueDenom, transactionCurrency);
@@ -143,6 +149,9 @@ public Split buildModelInstance(@NonNull final Cursor cursor){
         split.setTransactionUID(transxUID);
         split.setType(TransactionType.valueOf(typeName));
         split.setMemo(memo);
+        split.setReconcileState(reconcileState.charAt(0));
+        if (reconcileDate != null)
+            split.setReconcileDate(Timestamp.valueOf(reconcileDate));
 
         return split;
     }
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
similarity index 99%
rename from app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
rename to app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
index b522ea7f..1f25f5cc 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.db;
+package org.gnucash.android.db.adapter;
 
 import android.content.ContentValues;
 import android.database.Cursor;
@@ -143,7 +143,7 @@ public long bulkAddRecords(@NonNull List<Transaction> transactionList){
             try {
                 start = System.nanoTime();
                 long nSplits = mSplitsDbAdapter.bulkAddRecords(splitList);
-                Log.d(LOG_TAG, String.format("%d splits inserted in %d ns", splitList.size(), System.nanoTime()-start));
+                Log.d(LOG_TAG, String.format("%d splits inserted in %d ns", nSplits, System.nanoTime()-start));
             }
             finally {
                 SQLiteStatement deleteEmptyTransaction = mDb.compileStatement("DELETE FROM " +
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index 0e17ef28..3fcb3e10 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -49,8 +49,8 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ofx.OfxExporter;
 import org.gnucash.android.export.qif.QifExporter;
 import org.gnucash.android.export.xml.GncXmlExporter;
@@ -151,7 +151,7 @@ protected Boolean doInBackground(ExportParams... params) {
         } catch (final Exception e) {
             Log.e(TAG, "Error exporting: " + e.getMessage());
             Crashlytics.logException(e);
-
+            e.printStackTrace();
             if (mContext instanceof Activity) {
                 ((Activity)mContext).runOnUiThread(new Runnable() {
                     @Override
diff --git a/app/src/main/java/org/gnucash/android/export/Exporter.java b/app/src/main/java/org/gnucash/android/export/Exporter.java
index 9727f101..fd41a78f 100644
--- a/app/src/main/java/org/gnucash/android/export/Exporter.java
+++ b/app/src/main/java/org/gnucash/android/export/Exporter.java
@@ -27,12 +27,13 @@
 
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.CommoditiesDbAdapter;
-import org.gnucash.android.db.PricesDbAdapter;
-import org.gnucash.android.db.ScheduledActionDbAdapter;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetsDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.PricesDbAdapter;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 
 import java.io.File;
 import java.sql.Timestamp;
@@ -102,22 +103,29 @@
     protected ScheduledActionDbAdapter mScheduledActionDbAdapter;
     protected PricesDbAdapter mPricesDbAdapter;
     protected CommoditiesDbAdapter mCommoditiesDbAdapter;
+    protected BudgetsDbAdapter mBudgetsDbAdapter;
     protected Context mContext;
 
     public Exporter(ExportParams params, SQLiteDatabase db) {
         this.mExportParams = params;
         mContext = GnuCashApplication.getAppContext();
         if (db == null) {
-            mAccountsDbAdapter = AccountsDbAdapter.getInstance();
-            mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
-            mSplitsDbAdapter = SplitsDbAdapter.getInstance();
+            mAccountsDbAdapter      = AccountsDbAdapter.getInstance();
+            mTransactionsDbAdapter  = TransactionsDbAdapter.getInstance();
+            mSplitsDbAdapter        = SplitsDbAdapter.getInstance();
+            mPricesDbAdapter        = PricesDbAdapter.getInstance();
+            mCommoditiesDbAdapter   = CommoditiesDbAdapter.getInstance();
+            mBudgetsDbAdapter       = BudgetsDbAdapter.getInstance();
             mScheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
             mPricesDbAdapter = PricesDbAdapter.getInstance();
             mCommoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
         } else {
-            mSplitsDbAdapter = new SplitsDbAdapter(db);
-            mTransactionsDbAdapter = new TransactionsDbAdapter(db, mSplitsDbAdapter);
-            mAccountsDbAdapter = new AccountsDbAdapter(db, mTransactionsDbAdapter);
+            mSplitsDbAdapter        = new SplitsDbAdapter(db);
+            mTransactionsDbAdapter  = new TransactionsDbAdapter(db, mSplitsDbAdapter);
+            mAccountsDbAdapter      = new AccountsDbAdapter(db, mTransactionsDbAdapter);
+            mPricesDbAdapter        = new PricesDbAdapter(db);
+            mCommoditiesDbAdapter   = new CommoditiesDbAdapter(db);
+            mBudgetsDbAdapter       = new BudgetsDbAdapter(db);
             mScheduledActionDbAdapter = new ScheduledActionDbAdapter(db);
             mPricesDbAdapter = new PricesDbAdapter(db);
             mCommoditiesDbAdapter = new CommoditiesDbAdapter(db);
diff --git a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
index c29e426b..d719a3cc 100644
--- a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
@@ -24,7 +24,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.model.Account;
diff --git a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
index 6c1fcfde..6070bda2 100644
--- a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
@@ -20,8 +20,8 @@
 import android.database.Cursor;
 import android.preference.PreferenceManager;
 
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
 
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index 407d65ad..1ac2d7b8 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -23,9 +23,10 @@
 
 import com.crashlytics.android.Crashlytics;
 
-import org.gnucash.android.db.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.RecurrenceDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
@@ -33,8 +34,11 @@
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.Commodity;
+import org.gnucash.android.model.Budget;
+import org.gnucash.android.model.BudgetAmount;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.PeriodType;
+import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.TransactionType;
 import org.xmlpull.v1.XmlPullParserFactory;
@@ -125,21 +129,21 @@ private void exportAccounts(XmlSerializer xmlSerializer) throws IOException {
             xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCOUNT);
             xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_VERSION, GncXmlHelper.BOOK_VERSION);
             // account name
-            xmlSerializer.startTag(null, GncXmlHelper.TAG_NAME);
+            xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCT_NAME);
             xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_NAME)));
-            xmlSerializer.endTag(null, GncXmlHelper.TAG_NAME);
+            xmlSerializer.endTag(null, GncXmlHelper.TAG_ACCT_NAME);
             // account guid
             xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCT_ID);
             xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_TYPE, GncXmlHelper.ATTR_VALUE_GUID);
             xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_UID)));
             xmlSerializer.endTag(null, GncXmlHelper.TAG_ACCT_ID);
             // account type
-            xmlSerializer.startTag(null, GncXmlHelper.TAG_TYPE);
+            xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCT_TYPE);
             String acct_type = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_TYPE));
             xmlSerializer.text(acct_type);
-            xmlSerializer.endTag(null, GncXmlHelper.TAG_TYPE);
+            xmlSerializer.endTag(null, GncXmlHelper.TAG_ACCT_TYPE);
             // commodity
-            xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCOUNT_COMMODITY);
+            xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCT_COMMODITY);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COMMODITY_SPACE);
             xmlSerializer.text("ISO4217");
             xmlSerializer.endTag(null, GncXmlHelper.TAG_COMMODITY_SPACE);
@@ -147,7 +151,7 @@ private void exportAccounts(XmlSerializer xmlSerializer) throws IOException {
             String acctCurrencyCode = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_CURRENCY));
             xmlSerializer.text(acctCurrencyCode);
             xmlSerializer.endTag(null, GncXmlHelper.TAG_COMMODITY_ID);
-            xmlSerializer.endTag(null, GncXmlHelper.TAG_ACCOUNT_COMMODITY);
+            xmlSerializer.endTag(null, GncXmlHelper.TAG_ACCT_COMMODITY);
             // commodity scu
             Commodity commodity = CommoditiesDbAdapter.getInstance().getCommodity(acctCurrencyCode);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COMMODITY_SCU);
@@ -186,9 +190,9 @@ private void exportAccounts(XmlSerializer xmlSerializer) throws IOException {
             slotType.add(GncXmlHelper.ATTR_VALUE_STRING);
             slotValue.add(Boolean.toString(cursor.getInt(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_FAVORITE)) != 0));
 
-            xmlSerializer.startTag(null, GncXmlHelper.TAG_ACT_SLOTS);
+            xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCT_SLOTS);
             exportSlots(xmlSerializer, slotKey, slotType, slotValue);
-            xmlSerializer.endTag(null, GncXmlHelper.TAG_ACT_SLOTS);
+            xmlSerializer.endTag(null, GncXmlHelper.TAG_ACCT_SLOTS);
 
             // parent uid
             String parentUID = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_PARENT_ACCOUNT_UID));
@@ -217,20 +221,20 @@ private void exportTemplateAccounts(XmlSerializer xmlSerializer, Collection<Acco
             xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCOUNT);
             xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_VERSION, GncXmlHelper.BOOK_VERSION);
             // account name
-            xmlSerializer.startTag(null, GncXmlHelper.TAG_NAME);
+            xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCT_NAME);
             xmlSerializer.text(account.getName());
-            xmlSerializer.endTag(null, GncXmlHelper.TAG_NAME);
+            xmlSerializer.endTag(null, GncXmlHelper.TAG_ACCT_NAME);
             // account guid
             xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCT_ID);
             xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_TYPE, GncXmlHelper.ATTR_VALUE_GUID);
             xmlSerializer.text(account.getUID());
             xmlSerializer.endTag(null, GncXmlHelper.TAG_ACCT_ID);
             // account type
-            xmlSerializer.startTag(null, GncXmlHelper.TAG_TYPE);
+            xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCT_TYPE);
             xmlSerializer.text(account.getAccountType().name());
-            xmlSerializer.endTag(null, GncXmlHelper.TAG_TYPE);
+            xmlSerializer.endTag(null, GncXmlHelper.TAG_ACCT_TYPE);
             // commodity
-            xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCOUNT_COMMODITY);
+            xmlSerializer.startTag(null, GncXmlHelper.TAG_ACCT_COMMODITY);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COMMODITY_SPACE);
             xmlSerializer.text("template");
             xmlSerializer.endTag(null, GncXmlHelper.TAG_COMMODITY_SPACE);
@@ -238,7 +242,7 @@ private void exportTemplateAccounts(XmlSerializer xmlSerializer, Collection<Acco
             String acctCurrencyCode = "template";
             xmlSerializer.text(acctCurrencyCode);
             xmlSerializer.endTag(null, GncXmlHelper.TAG_COMMODITY_ID);
-            xmlSerializer.endTag(null, GncXmlHelper.TAG_ACCOUNT_COMMODITY);
+            xmlSerializer.endTag(null, GncXmlHelper.TAG_ACCT_COMMODITY);
             // commodity scu
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COMMODITY_SCU);
             xmlSerializer.text("1");
@@ -293,6 +297,9 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
             mRootTemplateAccount = new Account("Template Root");
             mRootTemplateAccount.setAccountType(AccountType.ROOT);
             mTransactionToTemplateAccountMap.put(" ", mRootTemplateAccount);
+
+            //FIXME: Retrieve the template account GUIDs from the scheduled action table and create accounts with that
+            //this will allow use to maintain the template account GUID when we import from the desktop and also use the same for the splits
             while (cursor.moveToNext()) {
                 Account account = new Account(BaseModel.generateUID());
                 account.setAccountType(AccountType.BANK);
@@ -306,6 +313,7 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
             cursor.moveToPrevious();
         }
 
+        //// FIXME: 12.10.2015 export split reconciled_state and reconciled_date to the export
         while (cursor.moveToNext()){
             String curTrxUID = cursor.getString(cursor.getColumnIndexOrThrow("trans_uid"));
             if (!lastTrxUID.equals(curTrxUID)) { // new transaction starts
@@ -400,8 +408,9 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
             }
             // reconciled
             xmlSerializer.startTag(null, GncXmlHelper.TAG_RECONCILED_STATE);
-            xmlSerializer.text("n");
+            xmlSerializer.text("n"); //fixme: retrieve reconciled state from the split in the db
             xmlSerializer.endTag(null, GncXmlHelper.TAG_RECONCILED_STATE);
+            //todo: if split is reconciled, add reconciled date
             // value, in the transaction's currency
             String trxType = cursor.getString(cursor.getColumnIndexOrThrow("split_type"));
             int splitValueNum = cursor.getInt(cursor.getColumnIndexOrThrow("split_value_num"));
@@ -493,10 +502,11 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
     private void exportScheduledTransactions(XmlSerializer xmlSerializer) throws IOException{
         //for now we will export only scheduled transactions to XML
         Cursor cursor = mScheduledActionDbAdapter.fetchAllRecords(
-                ScheduledActionEntry.COLUMN_TYPE + "=?", new String[]{ScheduledAction.ActionType.TRANSACTION.name()});
+                ScheduledActionEntry.COLUMN_TYPE + "=?", new String[]{ScheduledAction.ActionType.TRANSACTION.name()}, null);
 
         while (cursor.moveToNext()) {
-            String actionUID = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ACTION_UID));
+            ScheduledAction scheduledAction = mScheduledActionDbAdapter.buildModelInstance(cursor);
+            String actionUID = scheduledAction.getActionUID();
             Account accountUID = mTransactionToTemplateAccountMap.get(actionUID);
 
             if (accountUID == null) //if the action UID does not belong to a transaction we've seen before, skip it
@@ -512,7 +522,7 @@ private void exportScheduledTransactions(XmlSerializer xmlSerializer) throws IOE
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_ID);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_NAME);
 
-            ScheduledAction.ActionType actionType = ScheduledAction.ActionType.valueOf(cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TYPE)));
+            ScheduledAction.ActionType actionType = scheduledAction.getActionType();
             if (actionType == ScheduledAction.ActionType.TRANSACTION) {
                 String description = TransactionsDbAdapter.getInstance().getAttribute(actionUID, TransactionEntry.COLUMN_DESCRIPTION);
                 xmlSerializer.text(description);
@@ -521,20 +531,19 @@ private void exportScheduledTransactions(XmlSerializer xmlSerializer) throws IOE
             }
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_NAME);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_ENABLED);
-            boolean enabled = cursor.getShort(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ENABLED)) > 0;
-            xmlSerializer.text(enabled ? "y" : "n");
+            xmlSerializer.text(scheduledAction.isEnabled() ? "y" : "n");
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_ENABLED);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_AUTO_CREATE);
-            xmlSerializer.text("n"); //we do not want transactions auto-created on the desktop.
+            xmlSerializer.text(scheduledAction.shouldAutoCreate() ? "y" : "n");
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_AUTO_CREATE);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_AUTO_CREATE_NOTIFY);
-            xmlSerializer.text("n"); //TODO: if we ever support notifying before creating a scheduled transaction, then update this
+            xmlSerializer.text(scheduledAction.shouldAutoNotify() ? "y" : "n");
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_AUTO_CREATE_NOTIFY);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_ADVANCE_CREATE_DAYS);
-            xmlSerializer.text("0");
+            xmlSerializer.text(Integer.toString(scheduledAction.getAdvanceCreateDays()));
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_ADVANCE_CREATE_DAYS);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_ADVANCE_REMIND_DAYS);
-            xmlSerializer.text("0");
+            xmlSerializer.text(Integer.toString(scheduledAction.getAdvanceNotifyDays()));
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_ADVANCE_REMIND_DAYS);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_INSTANCE_COUNT);
             String scheduledActionUID = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_UID));
@@ -581,22 +590,15 @@ private void exportScheduledTransactions(XmlSerializer xmlSerializer) throws IOE
             xmlSerializer.text(accountUID.getUID());
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_TEMPL_ACCOUNT);
 
+            //// FIXME: 11.10.2015 Retrieve the information for this section from the recurrence table
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SX_SCHEDULE);
-            xmlSerializer.startTag(null, GncXmlHelper.TAG_RECURRENCE);
+            xmlSerializer.startTag(null, GncXmlHelper.TAG_GNC_RECURRENCE);
             xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_VERSION, GncXmlHelper.RECURRENCE_VERSION);
-            long period = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_PERIOD));
-            PeriodType periodType = ScheduledAction.getPeriodType(period);
-            xmlSerializer.startTag(null, GncXmlHelper.TAG_RX_MULT);
-            xmlSerializer.text(String.valueOf(periodType.getMultiplier()));
-            xmlSerializer.endTag(null, GncXmlHelper.TAG_RX_MULT);
-            xmlSerializer.startTag(null, GncXmlHelper.TAG_RX_PERIOD_TYPE);
-            xmlSerializer.text(periodType.name().toLowerCase());
-            xmlSerializer.endTag(null, GncXmlHelper.TAG_RX_PERIOD_TYPE);
-
-            long recurrenceStartTime = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_START_TIME));
-            serializeDate(xmlSerializer, GncXmlHelper.TAG_RX_START, recurrenceStartTime);
-
-            xmlSerializer.endTag(null, GncXmlHelper.TAG_RECURRENCE);
+
+            String recurrenceUID = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_RECURRENCE_UID));
+            Recurrence recurrence = RecurrenceDbAdapter.getInstance().getRecord(recurrenceUID);
+            exportRecurrence(xmlSerializer, recurrence);
+            xmlSerializer.endTag(null, GncXmlHelper.TAG_GNC_RECURRENCE);
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SX_SCHEDULE);
 
             xmlSerializer.endTag(null, GncXmlHelper.TAG_SCHEDULED_ACTION);
@@ -619,10 +621,10 @@ private void serializeDate(XmlSerializer xmlSerializer, String tag, long timeMil
         xmlSerializer.endTag(null, tag);
     }
 
-    private void exportCommodity(XmlSerializer xmlSerializer, List<Currency> currencies) throws IOException {
+    private void exportCommodities(XmlSerializer xmlSerializer, List<Currency> currencies) throws IOException {
         for (Currency currency : currencies) {
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COMMODITY);
-            xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_VERSION, "2.0.0");
+            xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_VERSION, GncXmlHelper.BOOK_VERSION);
             xmlSerializer.startTag(null, GncXmlHelper.TAG_COMMODITY_SPACE);
             xmlSerializer.text("ISO4217");
             xmlSerializer.endTag(null, GncXmlHelper.TAG_COMMODITY_SPACE);
@@ -694,6 +696,85 @@ private void exportPrices(XmlSerializer xmlSerializer) throws IOException {
         xmlSerializer.endTag(null, GncXmlHelper.TAG_PRICEDB);
     }
 
+    /**
+     * Exports the recurrence to GnuCash XML, except the recurrence tags itself i.e. the actual recurrence attributes only
+     * <p>This is because there are different recurrence start tags for transactions and budgets.<br>
+     *     So make sure to write the recurrence start/closing tags before/after calling this method.</p>
+     * @param xmlSerializer XML serializer
+     * @param recurrence Recurrence object
+     */
+    private void exportRecurrence(XmlSerializer xmlSerializer, Recurrence recurrence) throws IOException{
+        PeriodType periodType = recurrence.getPeriodType();
+        xmlSerializer.startTag(null, GncXmlHelper.TAG_RX_MULT);
+        xmlSerializer.text(String.valueOf(periodType.getMultiplier()));
+        xmlSerializer.endTag(null, GncXmlHelper.TAG_RX_MULT);
+        xmlSerializer.startTag(null, GncXmlHelper.TAG_RX_PERIOD_TYPE);
+        xmlSerializer.text(periodType.name().toLowerCase());
+        xmlSerializer.endTag(null, GncXmlHelper.TAG_RX_PERIOD_TYPE);
+
+        long recurrenceStartTime = recurrence.getPeriodStart().getTime();
+        serializeDate(xmlSerializer, GncXmlHelper.TAG_RX_START, recurrenceStartTime);
+    }
+
+    private void exportBudgets(XmlSerializer xmlSerializer) throws IOException {
+        Cursor cursor = mBudgetsDbAdapter.fetchAllRecords();
+        while(cursor.moveToNext()) {
+            Budget budget = mBudgetsDbAdapter.buildModelInstance(cursor);
+            xmlSerializer.startTag(null,    GncXmlHelper.TAG_BUDGET);
+            xmlSerializer.attribute(null,   GncXmlHelper.ATTR_KEY_VERSION, GncXmlHelper.BOOK_VERSION);
+            xmlSerializer.startTag(null,    GncXmlHelper.TAG_BUDGET_ID);
+            xmlSerializer.attribute(null,   GncXmlHelper.ATTR_KEY_TYPE, GncXmlHelper.ATTR_VALUE_GUID);
+            xmlSerializer.text(budget.getUID());
+            xmlSerializer.endTag(null,      GncXmlHelper.TAG_BUDGET_ID);
+            xmlSerializer.startTag(null,    GncXmlHelper.TAG_BUDGET_NAME);
+            xmlSerializer.text(budget.getName());
+            xmlSerializer.endTag(null,      GncXmlHelper.TAG_BUDGET_NAME);
+            xmlSerializer.startTag(null,    GncXmlHelper.TAG_BUDGET_DESCRIPTION);
+            xmlSerializer.text(budget.getDescription() == null ? "" : budget.getDescription());
+            xmlSerializer.endTag(null,      GncXmlHelper.TAG_BUDGET_DESCRIPTION);
+            xmlSerializer.startTag(null,    GncXmlHelper.TAG_BUDGET_NUM_PERIODS);
+            xmlSerializer.text(Long.toString(budget.getNumberOfPeriods()));
+            xmlSerializer.endTag(null,      GncXmlHelper.TAG_BUDGET_NUM_PERIODS);
+            xmlSerializer.startTag(null,    GncXmlHelper.TAG_BUDGET_RECURRENCE);
+            exportRecurrence(xmlSerializer, budget.getRecurrence());
+            xmlSerializer.endTag(null,      GncXmlHelper.TAG_BUDGET_RECURRENCE);
+
+            //export budget slots
+            ArrayList<String> slotKey = new ArrayList<>();
+            ArrayList<String> slotType = new ArrayList<>();
+            ArrayList<String> slotValue = new ArrayList<>();
+
+            xmlSerializer.startTag(null, GncXmlHelper.TAG_BUDGET_SLOTS);
+            for (BudgetAmount budgetAmount : budget.getExpandedBudgetAmounts()) {
+                xmlSerializer.startTag(null, GncXmlHelper.TAG_SLOT);
+                xmlSerializer.startTag(null, GncXmlHelper.TAG_SLOT_KEY);
+                xmlSerializer.text(budgetAmount.getAccountUID());
+                xmlSerializer.endTag(null, GncXmlHelper.TAG_SLOT_KEY);
+
+                Money amount = budgetAmount.getAmount();
+                slotKey.clear();
+                slotType.clear();
+                slotValue.clear();
+                for (int period = 0; period < budget.getNumberOfPeriods(); period++) {
+                    slotKey.add(String.valueOf(period));
+                    slotType.add(GncXmlHelper.ATTR_VALUE_NUMERIC);
+                    slotValue.add(amount.getNumerator() + "/" + amount.getDenominator());
+                }
+                //budget slots
+
+                xmlSerializer.startTag(null, GncXmlHelper.TAG_SLOT_VALUE);
+                xmlSerializer.attribute(null, GncXmlHelper.ATTR_KEY_TYPE, GncXmlHelper.ATTR_VALUE_FRAME);
+                exportSlots(xmlSerializer, slotKey, slotType, slotValue);
+                xmlSerializer.endTag(null, GncXmlHelper.TAG_SLOT_VALUE);
+                xmlSerializer.endTag(null, GncXmlHelper.TAG_SLOT);
+            }
+
+            xmlSerializer.endTag(null, GncXmlHelper.TAG_BUDGET_SLOTS);
+            xmlSerializer.endTag(null, GncXmlHelper.TAG_BUDGET);
+        }
+        cursor.close();
+    }
+
     @Override
     public List<String> generateExport() throws ExporterException {
         OutputStreamWriter writer = null;
@@ -731,7 +812,7 @@ private void exportPrices(XmlSerializer xmlSerializer) throws IOException {
     public void generateExport(Writer writer) throws ExporterException {
         try {
             String[] namespaces = new String[]{"gnc", "act", "book", "cd", "cmdty", "price", "slot",
-                    "split", "trn", "ts", "sx", "recurrence"};
+                    "split", "trn", "ts", "sx", "bgt", "recurrence"};
             XmlSerializer xmlSerializer = XmlPullParserFactory.newInstance().newSerializer();
             xmlSerializer.setOutput(writer);
             xmlSerializer.startDocument("utf-8", true);
@@ -783,7 +864,7 @@ public void generateExport(Writer writer) throws ExporterException {
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_COUNT_DATA);
             }
             // export the commodities used in the DB
-            exportCommodity(xmlSerializer, currencies);
+            exportCommodities(xmlSerializer, currencies);
             // prices
             if (priceCount > 0) {
                 exportPrices(xmlSerializer);
@@ -802,6 +883,9 @@ public void generateExport(Writer writer) throws ExporterException {
             //scheduled actions
             exportScheduledTransactions(xmlSerializer);
 
+            //budgets
+            exportBudgets(xmlSerializer);
+
             xmlSerializer.endTag(null, GncXmlHelper.TAG_BOOK);
             xmlSerializer.endTag(null, GncXmlHelper.TAG_ROOT);
             xmlSerializer.endDocument();
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
index 6a13908c..f1eee4af 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
@@ -17,9 +17,6 @@
 
 package org.gnucash.android.export.xml;
 
-import android.support.annotation.NonNull;
-
-import org.gnucash.android.db.CommoditiesDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 
@@ -28,11 +25,8 @@
 import java.text.NumberFormat;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
-import java.util.Currency;
 import java.util.Date;
 import java.util.Locale;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
 
 /**
  * Collection of helper tags and methods for Gnc XML export
@@ -50,6 +44,7 @@
     public static final String ATTR_VALUE_NUMERIC   = "numeric";
     public static final String ATTR_VALUE_GUID      = "guid";
     public static final String ATTR_VALUE_BOOK      = "book";
+    public static final String ATTR_VALUE_FRAME     = "frame";
     public static final String TAG_GDATE            = "gdate";
 
     /*
@@ -61,18 +56,20 @@
     public static final String TAG_COUNT_DATA       = "gnc:count-data";
 
     public static final String TAG_COMMODITY        = "gnc:commodity";
-    public static final String TAG_NAME             = "act:name";
-    public static final String TAG_ACCT_ID          = "act:id";
-    public static final String TAG_TYPE             = "act:type";
     public static final String TAG_COMMODITY_ID     = "cmdty:id";
     public static final String TAG_COMMODITY_SPACE  = "cmdty:space";
-    public static final String TAG_ACCOUNT_COMMODITY = "act:commodity";
+
+    public static final String TAG_ACCOUNT          = "gnc:account";
+    public static final String TAG_ACCT_NAME        = "act:name";
+    public static final String TAG_ACCT_ID          = "act:id";
+    public static final String TAG_ACCT_TYPE        = "act:type";
+    public static final String TAG_ACCT_COMMODITY   = "act:commodity";
     public static final String TAG_COMMODITY_SCU    = "act:commodity-scu";
     public static final String TAG_PARENT_UID       = "act:parent";
-    public static final String TAG_ACCOUNT          = "gnc:account";
+
     public static final String TAG_SLOT_KEY         = "slot:key";
     public static final String TAG_SLOT_VALUE       = "slot:value";
-    public static final String TAG_ACT_SLOTS        = "act:slots";
+    public static final String TAG_ACCT_SLOTS       = "act:slots";
     public static final String TAG_SLOT             = "slot";
     public static final String TAG_ACCT_DESCRIPTION = "act:description";
 
@@ -91,21 +88,27 @@
     public static final String TAG_SPLIT_ID         = "split:id";
     public static final String TAG_SPLIT_MEMO       = "split:memo";
     public static final String TAG_RECONCILED_STATE = "split:reconciled-state";
+    public static final String TAG_RECONCILED_DATE  = "split:recondiled-date";
     public static final String TAG_SPLIT_ACCOUNT    = "split:account";
     public static final String TAG_SPLIT_VALUE      = "split:value";
     public static final String TAG_SPLIT_QUANTITY   = "split:quantity";
     public static final String TAG_SPLIT_SLOTS      = "split:slots";
 
-    public static final String TAG_PRICEDB = "gnc:pricedb";
-    public static final String TAG_PRICE = "price";
-    public static final String TAG_PRICE_ID = "price:id";
-    public static final String TAG_PRICE_COMMODITY = "price:commodity";
-    public static final String TAG_PRICE_CURRENCY = "price:currency";
-    public static final String TAG_PRICE_TIME = "price:time";
-    public static final String TAG_PRICE_SOURCE = "price:source";
-    public static final String TAG_PRICE_TYPE = "price:type";
-    public static final String TAG_PRICE_VALUE = "price:value";
+    public static final String TAG_PRICEDB          = "gnc:pricedb";
+    public static final String TAG_PRICE            = "price";
+    public static final String TAG_PRICE_ID         = "price:id";
+    public static final String TAG_PRICE_COMMODITY  = "price:commodity";
+    public static final String TAG_PRICE_CURRENCY   = "price:currency";
+    public static final String TAG_PRICE_TIME       = "price:time";
+    public static final String TAG_PRICE_SOURCE     = "price:source";
+    public static final String TAG_PRICE_TYPE       = "price:type";
+    public static final String TAG_PRICE_VALUE      = "price:value";
 
+    /**
+     * Periodicity of the recurrence.
+     * <p>Only currently used for reading old backup files. May be removed in the future. </p>
+     * @deprecated Use {@link #TAG_GNC_RECURRENCE} instead
+     */
     @Deprecated
     public static final String TAG_RECURRENCE_PERIOD = "trn:recurrence_period";
 
@@ -126,12 +129,22 @@
     public static final String TAG_SX_TAG                   = "sx:tag";
     public static final String TAG_SX_TEMPL_ACCOUNT         = "sx:templ-acct";
     public static final String TAG_SX_SCHEDULE              = "sx:schedule";
-    public static final String TAG_RECURRENCE               = "gnc:recurrence";
+    public static final String TAG_GNC_RECURRENCE           = "gnc:recurrence";
+
     public static final String TAG_RX_MULT                  = "recurrence:mult";
     public static final String TAG_RX_PERIOD_TYPE           = "recurrence:period_type";
     public static final String TAG_RX_START                 = "recurrence:start";
 
 
+    public static final String TAG_BUDGET                   = "gnc:budget";
+    public static final String TAG_BUDGET_ID                = "bgt:id";
+    public static final String TAG_BUDGET_NAME              = "bgt:name";
+    public static final String TAG_BUDGET_DESCRIPTION       = "bgt:description";
+    public static final String TAG_BUDGET_NUM_PERIODS       = "bgt:num-periods";
+    public static final String TAG_BUDGET_RECURRENCE        = "bgt:recurrence";
+    public static final String TAG_BUDGET_SLOTS             = "bgt:slots";
+
+
     public static final String RECURRENCE_VERSION           = "1.0.0";
     public static final String BOOK_VERSION                 = "2.0.0";
     public static final SimpleDateFormat TIME_FORMATTER     = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z", Locale.US);
@@ -198,6 +211,7 @@ public static BigDecimal parseSplitAmount(String amountString) throws ParseExcep
      * @param amount Split amount as BigDecimal
      * @param commodity Commodity of the transaction
      * @return Formatted split amount
+     * @deprecated Just use the values for numerator and denominator which are saved in the database
      */
     public static String formatSplitAmount(BigDecimal amount, Commodity commodity){
         int denomInt = commodity.getSmallestFraction();
diff --git a/app/src/main/java/org/gnucash/android/importer/CommoditiesXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/CommoditiesXmlHandler.java
index 34e75e03..7f16dabc 100644
--- a/app/src/main/java/org/gnucash/android/importer/CommoditiesXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/CommoditiesXmlHandler.java
@@ -18,7 +18,7 @@
 import android.database.sqlite.SQLiteDatabase;
 
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.xml.sax.Attributes;
 import org.xml.sax.SAXException;
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index b4ac1235..677656c4 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -24,20 +24,24 @@
 import com.crashlytics.android.Crashlytics;
 
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.CommoditiesDbAdapter;
-import org.gnucash.android.db.PricesDbAdapter;
-import org.gnucash.android.db.ScheduledActionDbAdapter;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetsDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.PricesDbAdapter;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.xml.GncXmlHelper;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.Commodity;
+import org.gnucash.android.model.Budget;
+import org.gnucash.android.model.BudgetAmount;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.PeriodType;
 import org.gnucash.android.model.Price;
+import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
@@ -180,6 +184,13 @@
      */
     List<ScheduledAction> mScheduledActionsList;
 
+    /**
+     * List of budgets which have been parsed from XML
+     */
+    List<Budget> mBudgetList;
+    Budget mBudget;
+    Recurrence mRecurrence;
+    BudgetAmount mBudgetAmount;
 
     boolean mInColorSlot        = false;
     boolean mInPlaceHolderSlot  = false;
@@ -198,6 +209,15 @@
     boolean mIsScheduledEnd     = false;
     boolean mIsLastRun          = false;
     boolean mIsRecurrenceStart  = false;
+    boolean mInBudgetSlot       = false;
+
+    /**
+     * Saves the attribute of the slot tag
+     * Used for determining where we are in the budget amounts
+     */
+    String mSlotTagAttribute = null;
+
+    String mBudgetAmountAccountUID = null;
 
     /**
      * Multiplier for the recurrence period type. e.g. period type of week and multiplier of 2 means bi-weekly
@@ -233,6 +253,8 @@
 
     private Map<String, Integer> mCurrencyCount;
 
+    private BudgetsDbAdapter mBudgetsDbAdapter;
+
     /**
      * Creates a handler for handling XML stream events when parsing the XML backup file
      */
@@ -256,12 +278,14 @@ private void init(@Nullable SQLiteDatabase db) {
             mScheduledActionsDbAdapter = ScheduledActionDbAdapter.getInstance();
             mCommoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
             mPricesDbAdapter = PricesDbAdapter.getInstance();
+            mBudgetsDbAdapter = BudgetsDbAdapter.getInstance();
         } else {
             mTransactionsDbAdapter = new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
             mAccountsDbAdapter = new AccountsDbAdapter(db, mTransactionsDbAdapter);
             mScheduledActionsDbAdapter = new ScheduledActionDbAdapter(db);
             mCommoditiesDbAdapter = new CommoditiesDbAdapter(db);
             mPricesDbAdapter = new PricesDbAdapter(db);
+            mBudgetsDbAdapter = new BudgetsDbAdapter(db);
         }
 
         mContent = new StringBuilder();
@@ -270,6 +294,7 @@ private void init(@Nullable SQLiteDatabase db) {
         mAccountMap = new HashMap<>();
         mTransactionList = new ArrayList<>();
         mScheduledActionsList = new ArrayList<>();
+        mBudgetList = new ArrayList<>();
 
         mTemplatAccountList = new ArrayList<>();
         mTemplateTransactions = new ArrayList<>();
@@ -335,11 +360,33 @@ public void startElement(String uri, String localName,
                 mPriceCommodity = true;
                 mISO4217Currency = false;
                 break;
+
+            case GncXmlHelper.TAG_BUDGET:
+                mBudget = new Budget();
+                break;
+
+            case GncXmlHelper.TAG_GNC_RECURRENCE:
+            case GncXmlHelper.TAG_BUDGET_RECURRENCE:
+                mRecurrenceMultiplier = 1;
+                mRecurrence = new Recurrence(PeriodType.MONTH);
+                break;
+            case GncXmlHelper.TAG_BUDGET_SLOTS:
+                mInBudgetSlot = true;
+                break;
+            case GncXmlHelper.TAG_SLOT:
+                if (mInBudgetSlot){
+                    mBudgetAmount = new BudgetAmount(mBudget.getUID(), mBudgetAmountAccountUID);
+                }
+                break;
+            case GncXmlHelper.TAG_SLOT_VALUE:
+                mSlotTagAttribute = attributes.getValue(GncXmlHelper.ATTR_KEY_TYPE);
+                break;
         }
     }
 
     @Override
     public void endElement(String uri, String localName, String qualifiedName) throws SAXException {
+        // FIXME: 22.10.2015 First parse the number of accounts/transactions and use the numer to init the array lists
         String characterString = mContent.toString().trim();
 
         if (mIgnoreElement != null) {
@@ -352,14 +399,14 @@ public void endElement(String uri, String localName, String qualifiedName) throw
         }
 
         switch (qualifiedName) {
-            case GncXmlHelper.TAG_NAME:
+            case GncXmlHelper.TAG_ACCT_NAME:
                 mAccount.setName(characterString);
                 mAccount.setFullName(characterString);
                 break;
             case GncXmlHelper.TAG_ACCT_ID:
                 mAccount.setUID(characterString);
                 break;
-            case GncXmlHelper.TAG_TYPE:
+            case GncXmlHelper.TAG_ACCT_TYPE:
                 AccountType accountType = AccountType.valueOf(characterString);
                 mAccount.setAccountType(accountType);
                 mAccount.setHidden(accountType == AccountType.ROOT); //flag root account as hidden
@@ -420,6 +467,8 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     mISO4217Currency = false;
                 }
                 break;
+            case GncXmlHelper.TAG_SLOT:
+                break;
             case GncXmlHelper.TAG_SLOT_KEY:
                 switch (characterString) {
                     case GncXmlHelper.KEY_PLACEHOLDER:
@@ -450,6 +499,12 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                         mInDebitNumericSlot = true;
                         break;
                 }
+                if (mInBudgetSlot && mBudgetAmountAccountUID == null){
+                    mBudgetAmountAccountUID = characterString;
+                    mBudgetAmount.setAccountUID(characterString);
+                } else if (mInBudgetSlot){
+                    mBudgetAmount.setPeriodNum(Long.parseLong(characterString));
+                }
                 break;
             case GncXmlHelper.TAG_SLOT_VALUE:
                 if (mInPlaceHolderSlot) {
@@ -498,8 +553,29 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     handleEndOfTemplateNumericSlot(characterString, TransactionType.CREDIT);
                 } else if (mInTemplates && mInDebitNumericSlot) {
                     handleEndOfTemplateNumericSlot(characterString, TransactionType.DEBIT);
+                } else if (mInBudgetSlot){
+                    if (mSlotTagAttribute.equals(GncXmlHelper.ATTR_VALUE_NUMERIC)) {
+                        try {
+                            BigDecimal bigDecimal = GncXmlHelper.parseSplitAmount(characterString);
+                            //currency doesn't matter since we don't persist it in the budgets table
+                            mBudgetAmount.setAmount(new Money(bigDecimal, Commodity.DEFAULT_COMMODITY));
+                        } catch (ParseException e) {
+                            mBudgetAmount.setAmount(Money.getZeroInstance()); //just put zero, in case it was a formula we couldnt parse
+                            e.printStackTrace();
+                        } finally {
+                            mBudget.addBudgetAmount(mBudgetAmount);
+                        }
+                        mSlotTagAttribute = GncXmlHelper.ATTR_VALUE_FRAME;
+                    } else {
+                        mBudgetAmountAccountUID = null;
+                    }
                 }
                 break;
+
+            case GncXmlHelper.TAG_BUDGET_SLOTS:
+                mInBudgetSlot = false;
+                break;
+
             //================  PROCESSING OF TRANSACTION TAGS =====================================
             case GncXmlHelper.TAG_TRX_ID:
                 mTransaction.setUID(characterString);
@@ -583,6 +659,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                         mTemplateAccountToTransactionMap.put(characterString, mTransaction.getUID());
                 }
                 break;
+            //todo: import split reconciled state and date
             case GncXmlHelper.TAG_TRN_SPLIT:
                 mTransaction.addSplit(mSplit);
                 break;
@@ -627,6 +704,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
             case GncXmlHelper.TAG_SX_AUTO_CREATE:
                 mScheduledAction.setAutoCreate(characterString.equals("y"));
                 break;
+            //todo: export auto_notify, advance_create, advance_notify
             case GncXmlHelper.TAG_SX_NUM_OCCUR:
                 mScheduledAction.setTotalFrequency(Integer.parseInt(characterString));
                 break;
@@ -637,8 +715,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                 try {
                     PeriodType periodType = PeriodType.valueOf(characterString.toUpperCase());
                     periodType.setMultiplier(mRecurrenceMultiplier);
-                    if (mScheduledAction != null) //there might be recurrence tags for bugdets and other stuff
-                        mScheduledAction.setPeriod(periodType);
+                    mRecurrence.setPeriodType(periodType);
                 } catch (IllegalArgumentException ex){ //the period type constant is not supported
                     String msg = "Unsupported period constant: " + characterString;
                     Log.e(LOG_TAG, msg);
@@ -665,7 +742,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     }
 
                     if (mIsRecurrenceStart && mScheduledAction != null){
-                        mScheduledAction.setStartTime(date);
+                        mRecurrence.setPeriodStart(new Timestamp(date));
                         mIsRecurrenceStart = false;
                     }
                 } catch (ParseException e) {
@@ -683,13 +760,18 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     mScheduledAction.setActionUID(BaseModel.generateUID());
                 }
                 break;
+            case GncXmlHelper.TAG_GNC_RECURRENCE:
+                if (mScheduledAction != null){
+                    mScheduledAction.setRecurrence(mRecurrence);
+                }
+                break;
+
             case GncXmlHelper.TAG_SCHEDULED_ACTION:
                 if (mScheduledAction.getActionUID() != null && !mIgnoreScheduledAction) {
                     mScheduledActionsList.add(mScheduledAction);
                     int count = generateMissedScheduledTransactions(mScheduledAction);
                     Log.i(LOG_TAG, String.format("Generated %d transactions from scheduled action", count));
                 }
-                mRecurrenceMultiplier = 1; //reset it, even though it will be parsed from XML each time
                 mIgnoreScheduledAction = false;
                 break;
             // price table
@@ -728,6 +810,28 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     mPrice = null;
                 }
                 break;
+
+            case GncXmlHelper.TAG_BUDGET:
+                if (mBudget.getBudgetAmounts().size() > 0) //ignore if no budget amounts exist for the budget
+                    mBudgetList.add(mBudget);
+                break;
+
+            case GncXmlHelper.TAG_BUDGET_NAME:
+                mBudget.setName(characterString);
+                break;
+
+            case GncXmlHelper.TAG_BUDGET_DESCRIPTION:
+                mBudget.setDescription(characterString);
+                break;
+
+            case GncXmlHelper.TAG_BUDGET_NUM_PERIODS:
+                mBudget.setNumberOfPeriods(Long.parseLong(characterString));
+                break;
+
+            case GncXmlHelper.TAG_BUDGET_RECURRENCE:
+                mBudget.setRecurrence(mRecurrence);
+                break;
+
         }
 
         //reset the accumulated characters
@@ -846,6 +950,9 @@ public void endDocument() throws SAXException {
             long nPrices = mPricesDbAdapter.bulkAddRecords(mPriceList);
             Log.d(getClass().getSimpleName(), String.format("%d prices inserted", nPrices));
 
+            long nBudgets = mBudgetsDbAdapter.bulkAddRecords(mBudgetList);
+            Log.d(getClass().getSimpleName(), String.format("%d budgets inserted", nBudgets));
+
             long endTime = System.nanoTime();
             Log.d(getClass().getSimpleName(), String.format("bulk insert time: %d", endTime - startTime));
 
@@ -891,7 +998,7 @@ private void handleEndOfTemplateNumericSlot(String characterString, TransactionT
         try {
             BigDecimal amountBigD = GncXmlHelper.parseSplitAmount(characterString);
             Money amount = new Money(amountBigD, getCommodityForAccount(mSplit.getAccountUID()));
-            mSplit.setValue(amount.absolute());
+            mSplit.setValue(amount.abs());
             mSplit.setType(splitType);
             mIgnoreTemplateTransaction = false; //we have successfully parsed an amount
         } catch (NumberFormatException | ParseException e) {
@@ -922,8 +1029,8 @@ private int generateMissedScheduledTransactions(ScheduledAction scheduledAction)
         }
 
         long lastRuntime = scheduledAction.getStartTime();
-        if (scheduledAction.getLastRun() > 0){
-            lastRuntime = scheduledAction.getLastRun();
+        if (scheduledAction.getLastRunTime() > 0){
+            lastRuntime = scheduledAction.getLastRunTime();
         }
 
         int generatedTransactionCount = 0;
diff --git a/app/src/main/java/org/gnucash/android/model/Budget.java b/app/src/main/java/org/gnucash/android/model/Budget.java
new file mode 100644
index 00000000..8605146e
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/model/Budget.java
@@ -0,0 +1,407 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.model;
+
+import android.support.annotation.NonNull;
+import android.util.Log;
+
+import org.joda.time.LocalDateTime;
+
+import java.math.BigDecimal;
+import java.util.ArrayList;
+import java.util.Currency;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
+/**
+ * Budgets model
+ * @author Ngewi Fet <ngewif@gmail.com>
+ */
+public class Budget extends BaseModel {
+
+    private String mName;
+    private String mDescription;
+    private Recurrence mRecurrence;
+    private List<BudgetAmount> mBudgetAmounts = new ArrayList<>();
+    private long mNumberOfPeriods = 12; //default to 12 periods per year
+
+    /**
+     * Default constructor
+     */
+    public Budget(){
+        //nothing to see here, move along
+    }
+
+    /**
+     * Overloaded constructor.
+     * Initializes the name and amount of this budget
+     * @param name String name of the budget
+     */
+    public Budget(@NonNull String name){
+        this.mName = name;
+    }
+
+    public Budget(@NonNull String name, @NonNull Recurrence recurrence){
+        this.mName = name;
+        this.mRecurrence = recurrence;
+    }
+
+    /**
+     * Returns the name of the budget
+     * @return name of the budget
+     */
+    public String getName() {
+        return mName;
+    }
+
+    /**
+     * Sets the name of the budget
+     * @param name String name of budget
+     */
+    public void setName(@NonNull String name) {
+        this.mName = name;
+    }
+
+    /**
+     * Returns the description of the budget
+     * @return String description of budget
+     */
+    public String getDescription() {
+        return mDescription;
+    }
+
+    /**
+     * Sets the description of the budget
+     * @param description String description
+     */
+    public void setDescription(String description) {
+        this.mDescription = description;
+    }
+
+    /**
+     * Returns the recurrence for this budget
+     * @return Recurrence object for this budget
+     */
+    public Recurrence getRecurrence() {
+        return mRecurrence;
+    }
+
+    /**
+     * Set the recurrence pattern for this budget
+     * @param recurrence Recurrence object
+     */
+    public void setRecurrence(@NonNull Recurrence recurrence) {
+        this.mRecurrence = recurrence;
+    }
+
+    /**
+     * Return list of budget amounts associated with this budget
+     * @return List of budget amounts
+     */
+    public List<BudgetAmount> getBudgetAmounts() {
+        return mBudgetAmounts;
+    }
+
+    /**
+     * Set the list of budget amounts
+     * @param budgetAmounts List of budget amounts
+     */
+    public void setBudgetAmounts(List<BudgetAmount> budgetAmounts) {
+        this.mBudgetAmounts = budgetAmounts;
+        for (BudgetAmount budgetAmount : mBudgetAmounts) {
+            budgetAmount.setBudgetUID(getUID());
+        }
+    }
+
+    /**
+     * Adds a BudgetAmount to this budget
+     * @param budgetAmount Budget amount
+     */
+    public void addBudgetAmount(BudgetAmount budgetAmount){
+        budgetAmount.setBudgetUID(getUID());
+        mBudgetAmounts.add(budgetAmount);
+    }
+
+    /**
+     * Returns the budget amount for a specific account
+     * @param accountUID GUID of the account
+     * @return Money amount of the budget or null if the budget has no amount for the account
+     */
+    public Money getAmount(@NonNull String accountUID){
+        for (BudgetAmount budgetAmount : mBudgetAmounts) {
+            if (budgetAmount.getAccountUID().equals(accountUID))
+                return budgetAmount.getAmount();
+        }
+        return null;
+    }
+
+    /**
+     * Returns the budget amount for a specific account and period
+     * @param accountUID GUID of the account
+     * @param periodNum Budgeting period, zero-based index
+     * @return Money amount or zero if no matching {@link BudgetAmount} is found for the period
+     */
+    public Money getAmount(@NonNull String accountUID, int periodNum){
+        for (BudgetAmount budgetAmount : mBudgetAmounts) {
+            if (budgetAmount.getAccountUID().equals(accountUID)
+                    && (budgetAmount.getPeriodNum() == periodNum || budgetAmount.getPeriodNum() == -1)){
+                return budgetAmount.getAmount();
+            }
+        }
+        return Money.getZeroInstance();
+    }
+
+    /**
+     * Returns the sum of all budget amounts in this budget
+     * <p><b>NOTE:</b> This method ignores budgets of accounts which are in different currencies</p>
+     * @return Money sum of all amounts
+     */
+    public Money getAmountSum(){
+        Money sum = null; //we explicitly allow this null instead of a money instance, because this method should never return null for a budget
+        for (BudgetAmount budgetAmount : mBudgetAmounts) {
+            if (sum == null){
+                sum = budgetAmount.getAmount();
+            } else {
+                try {
+                    sum = sum.add(budgetAmount.getAmount().abs());
+                } catch (Money.CurrencyMismatchException ex){
+                    Log.i(getClass().getSimpleName(), "Skip some budget amounts with different currency");
+                }
+            }
+        }
+        return sum;
+    }
+
+    /**
+     * Returns the number of periods covered by this budget
+     * @return Number of periods
+     */
+    public long getNumberOfPeriods() {
+        return mNumberOfPeriods;
+    }
+
+    /**
+     * Returns the timestamp of the start of current period of the budget
+     * @return Start timestamp in milliseconds
+     */
+    public long getStartofCurrentPeriod(){
+        LocalDateTime localDate = new LocalDateTime();
+        int interval = mRecurrence.getPeriodType().getMultiplier();
+        switch (mRecurrence.getPeriodType()){
+            case DAY:
+                localDate = localDate.millisOfDay().withMinimumValue().plusDays(interval);
+                break;
+            case WEEK:
+                localDate = localDate.dayOfWeek().withMinimumValue().minusDays(interval);
+                break;
+            case MONTH:
+                localDate = localDate.dayOfMonth().withMinimumValue().minusMonths(interval);
+                break;
+            case YEAR:
+                localDate = localDate.dayOfYear().withMinimumValue().minusYears(interval);
+                break;
+        }
+        return localDate.toDate().getTime();
+    }
+
+    /**
+     * Returns the end timestamp of the current period
+     * @return End timestamp in milliseconds
+     */
+    public long getEndOfCurrentPeriod(){
+        LocalDateTime localDate = new LocalDateTime();
+        int interval = mRecurrence.getPeriodType().getMultiplier();
+        switch (mRecurrence.getPeriodType()){
+            case DAY:
+                localDate = localDate.millisOfDay().withMaximumValue().plusDays(interval);
+                break;
+            case WEEK:
+                localDate = localDate.dayOfWeek().withMaximumValue().plusWeeks(interval);
+                break;
+            case MONTH:
+                localDate = localDate.dayOfMonth().withMaximumValue().plusMonths(interval);
+                break;
+            case YEAR:
+                localDate = localDate.dayOfYear().withMaximumValue().plusYears(interval);
+                break;
+        }
+        return localDate.toDate().getTime();
+    }
+
+    public long getStartOfPeriod(int periodNum){
+        LocalDateTime localDate = new LocalDateTime(mRecurrence.getPeriodStart().getTime());
+        int interval = mRecurrence.getPeriodType().getMultiplier() * periodNum;
+        switch (mRecurrence.getPeriodType()){
+            case DAY:
+                localDate = localDate.millisOfDay().withMinimumValue().plusDays(interval);
+                break;
+            case WEEK:
+                localDate = localDate.dayOfWeek().withMinimumValue().minusDays(interval);
+                break;
+            case MONTH:
+                localDate = localDate.dayOfMonth().withMinimumValue().minusMonths(interval);
+                break;
+            case YEAR:
+                localDate = localDate.dayOfYear().withMinimumValue().minusYears(interval);
+                break;
+        }
+        return localDate.toDate().getTime();
+    }
+
+    /**
+     * Returns the end timestamp of the period
+     * @param periodNum Number of the period
+     * @return End timestamp in milliseconds of the period
+     */
+    public long getEndOfPeriod(int periodNum){
+        LocalDateTime localDate = new LocalDateTime();
+        int interval = mRecurrence.getPeriodType().getMultiplier() * periodNum;
+        switch (mRecurrence.getPeriodType()){
+            case DAY:
+                localDate = localDate.millisOfDay().withMaximumValue().plusDays(interval);
+                break;
+            case WEEK:
+                localDate = localDate.dayOfWeek().withMaximumValue().plusWeeks(interval);
+                break;
+            case MONTH:
+                localDate = localDate.dayOfMonth().withMaximumValue().plusMonths(interval);
+                break;
+            case YEAR:
+                localDate = localDate.dayOfYear().withMaximumValue().plusYears(interval);
+                break;
+        }
+        return localDate.toDate().getTime();
+    }
+
+    /**
+     * Sets the number of periods for the budget
+     * @param numberOfPeriods Number of periods as long
+     */
+    public void setNumberOfPeriods(long numberOfPeriods) {
+        this.mNumberOfPeriods = numberOfPeriods;
+    }
+
+    /**
+     * Returns the number of accounts in this budget
+     * @return Number of budgeted accounts
+     */
+    public int getNumberOfAccounts(){
+        Set<String> accountSet = new HashSet<>();
+        for (BudgetAmount budgetAmount : mBudgetAmounts) {
+            accountSet.add(budgetAmount.getAccountUID());
+        }
+        return accountSet.size();
+    }
+
+    /**
+     * Returns the list of budget amounts where only one BudgetAmount is present if the amount of the budget amount
+     * is the same for all periods in the budget.
+     * BudgetAmounts with different amounts per period are still return separately
+     * <p>
+     *     This method is used during import because GnuCash desktop saves one BudgetAmount per period for the whole budgeting period.
+     *     While this can be easily displayed in a table form on the desktop, it is not feasible in the Android app.
+     *     So we display only one BudgetAmount if it covers all periods in the budgeting period
+     * </p>
+     * @return List of {@link BudgetAmount}s
+     */
+    public List<BudgetAmount> getCompactedBudgetAmounts(){
+
+        Map<String, List<BigDecimal>> accountAmountMap = new HashMap<>();
+        for (BudgetAmount budgetAmount : mBudgetAmounts) {
+            String accountUID = budgetAmount.getAccountUID();
+            BigDecimal amount = budgetAmount.getAmount().asBigDecimal();
+            if (accountAmountMap.containsKey(accountUID)){
+                accountAmountMap.get(accountUID).add(amount);
+            } else {
+                List<BigDecimal> amounts = new ArrayList<>();
+                amounts.add(amount);
+                accountAmountMap.put(accountUID, amounts);
+            }
+        }
+
+        List<BudgetAmount> compactBudgetAmounts = new ArrayList<>();
+        for (Map.Entry<String, List<BigDecimal>> entry : accountAmountMap.entrySet()) {
+            List<BigDecimal> amounts = entry.getValue();
+            BigDecimal first = amounts.get(0);
+            boolean allSame = true;
+            for (BigDecimal bigDecimal : amounts) {
+                allSame &= bigDecimal.equals(first);
+            }
+
+            if (allSame){
+                if (amounts.size() == 1) {
+                    for (BudgetAmount bgtAmount : mBudgetAmounts) {
+                        if (bgtAmount.getAccountUID().equals(entry.getKey())) {
+                            compactBudgetAmounts.add(bgtAmount);
+                            break;
+                        }
+                    }
+                } else {
+                    BudgetAmount bgtAmount = new BudgetAmount(getUID(), entry.getKey());
+                    bgtAmount.setAmount(new Money(first, Commodity.DEFAULT_COMMODITY));
+                    bgtAmount.setPeriodNum(-1);
+                    compactBudgetAmounts.add(bgtAmount);
+                }
+            } else {
+                //if not all amounts are the same, then just add them as we read them
+                for (BudgetAmount bgtAmount : mBudgetAmounts) {
+                    if (bgtAmount.getAccountUID().equals(entry.getKey())){
+                        compactBudgetAmounts.add(bgtAmount);
+                    }
+                }
+            }
+        }
+
+        return compactBudgetAmounts;
+    }
+
+    /**
+     * Returns a list of budget amounts where each period has it's own budget amount
+     * <p>Any budget amounts in the database with a period number of -1 are expanded to individual budget amounts for all periods</p>
+     * <p>This method is useful with exporting budget amounts to XML</p>
+     * @return List of expande
+     */
+    public List<BudgetAmount> getExpandedBudgetAmounts(){
+        List<BudgetAmount> amountsToAdd = new ArrayList<>();
+        List<BudgetAmount> amountsToRemove = new ArrayList<>();
+        for (BudgetAmount budgetAmount : mBudgetAmounts) {
+            if (budgetAmount.getPeriodNum() == -1){
+                amountsToRemove.add(budgetAmount);
+                String accountUID = budgetAmount.getAccountUID();
+                for (int period = 0; period < mNumberOfPeriods; period++) {
+                    BudgetAmount bgtAmount = new BudgetAmount(getUID(), accountUID);
+                    bgtAmount.setAmount(budgetAmount.getAmount());
+                    bgtAmount.setPeriodNum(period);
+                    amountsToAdd.add(bgtAmount);
+                }
+            }
+        }
+
+        List<BudgetAmount> expandedBudgetAmounts = new ArrayList<>(mBudgetAmounts);
+        for (BudgetAmount bgtAmount : amountsToRemove) {
+            expandedBudgetAmounts.remove(bgtAmount);
+        }
+
+        for (BudgetAmount bgtAmount : amountsToAdd) {
+            expandedBudgetAmounts.add(bgtAmount);
+        }
+        return expandedBudgetAmounts;
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/model/BudgetAmount.java b/app/src/main/java/org/gnucash/android/model/BudgetAmount.java
new file mode 100644
index 00000000..8aa42b26
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/model/BudgetAmount.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.model;
+
+/**
+ * Budget amounts for the different accounts.
+ * The {@link Money} amounts are absolute values
+ * @see Budget
+ */
+public class BudgetAmount extends BaseModel {
+
+    private String mBudgetUID;
+    private String mAccountUID;
+    /**
+     * Period number for this budget amount
+     * A value of -1 indicates that this budget amount applies to all periods
+     */
+    private long mPeriodNum;
+    private Money mAmount;
+
+    /**
+     * Create a new budget amount
+     * @param budgetUID GUID of the budget
+     * @param accountUID GUID of the account
+     */
+    public BudgetAmount(String budgetUID, String accountUID){
+        this.mBudgetUID = budgetUID;
+        this.mAccountUID = accountUID;
+    }
+
+    /**
+     * Creates a new budget amount with the absolute value of {@code amount}
+     * @param amount Money amount of the budget
+     * @param accountUID GUID of the account
+     */
+    public BudgetAmount(Money amount, String accountUID){
+        this.mAmount = amount.abs();
+        this.mAccountUID = accountUID;
+    }
+    
+    public String getBudgetUID() {
+        return mBudgetUID;
+    }
+
+    public void setBudgetUID(String budgetUID) {
+        this.mBudgetUID = budgetUID;
+    }
+
+    public String getAccountUID() {
+        return mAccountUID;
+    }
+
+    public void setAccountUID(String accountUID) {
+        this.mAccountUID = accountUID;
+    }
+
+    /**
+     * Returns the period number of this budget amount
+     * <p>The period is zero-based index, and a value of -1 indicates that this budget amount is applicable to all budgeting periods</p>
+     * @return Period number
+     */
+    public long getPeriodNum() {
+        return mPeriodNum;
+    }
+
+    /**
+     * Set the period number for this budget amount
+     * <p>A value of -1 indicates that this BudgetAmount is for all periods</p>
+     * @param periodNum Zero-based period number of the budget amount
+     */
+    public void setPeriodNum(long periodNum) {
+        this.mPeriodNum = periodNum;
+    }
+
+    /**
+     * Returns the Money amount of this budget amount
+     * @return Money amount
+     */
+    public Money getAmount() {
+        return mAmount;
+    }
+
+    /**
+     * Sets the amount for the budget
+     * <p>The absolute value of the amount is used</p>
+     * @param amount Money amount
+     */
+    public void setAmount(Money amount) {
+        this.mAmount = amount.abs();
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/model/Commodity.java b/app/src/main/java/org/gnucash/android/model/Commodity.java
index f60b787e..fb2d7ac2 100644
--- a/app/src/main/java/org/gnucash/android/model/Commodity.java
+++ b/app/src/main/java/org/gnucash/android/model/Commodity.java
@@ -16,7 +16,7 @@
 package org.gnucash.android.model;
 
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 
 /**
  * Commodities are the currencies used in the application.
diff --git a/app/src/main/java/org/gnucash/android/model/Money.java b/app/src/main/java/org/gnucash/android/model/Money.java
index 02c6930c..7c5e0a70 100644
--- a/app/src/main/java/org/gnucash/android/model/Money.java
+++ b/app/src/main/java/org/gnucash/android/model/Money.java
@@ -22,8 +22,6 @@
 
 import com.crashlytics.android.Crashlytics;
 
-import org.gnucash.android.app.GnuCashApplication;
-
 import java.math.BigDecimal;
 import java.math.BigInteger;
 import java.math.RoundingMode;
@@ -84,8 +82,7 @@
      */
     public static Money getZeroInstance(){
 		if (sDefaultZero == null) {
-			String currencyCode = GnuCashApplication.getDefaultCurrencyCode();
-			sDefaultZero = new Money(BigDecimal.ZERO, Commodity.getInstance(currencyCode));
+			sDefaultZero = new Money(BigDecimal.ZERO, Commodity.DEFAULT_COMMODITY);
 		}
 		return sDefaultZero;
     }
@@ -249,10 +246,11 @@ private int getScale() {
 
 	/**
 	 * Returns the amount represented by this Money object
+	 * <p>The scale and rounding mode of the returned value are set to that of this Money object</p>
 	 * @return {@link BigDecimal} valure of amount in object
 	 */
 	public BigDecimal asBigDecimal() {
-		return mAmount;
+		return mAmount.setScale(mCommodity.getSmallestFractionDigits(), RoundingMode.HALF_EVEN);
 	}
 	
 	/**
@@ -339,11 +337,11 @@ private void setAmount(@NonNull BigDecimal amount) {
 	 * 
 	 * @param addend Second operand in the addition.
 	 * @return Money object whose value is the sum of this object and <code>money</code>
-	 * @throws IllegalArgumentException if the <code>Money</code> objects to be added have different Currencies
+	 * @throws CurrencyMismatchException if the <code>Money</code> objects to be added have different Currencies
 	 */
     public Money add(Money addend){
 		if (!mCommodity.equals(addend.mCommodity))
-			throw new IllegalArgumentException("Only Money with same currency can be added");
+			throw new CurrencyMismatchException();
 		
 		BigDecimal bigD = mAmount.add(addend.mAmount);
 		return new Money(bigD, mCommodity);
@@ -355,11 +353,11 @@ public Money add(Money addend){
 	 * This object is the minuend and the parameter is the subtrahend
 	 * @param subtrahend Second operand in the subtraction.
 	 * @return Money object whose value is the difference of this object and <code>subtrahend</code>
-	 * @throws IllegalArgumentException if the <code>Money</code> objects to be added have different Currencies
+	 * @throws CurrencyMismatchException if the <code>Money</code> objects to be added have different Currencies
 	 */
     public Money subtract(Money subtrahend){
 		if (!mCommodity.equals(subtrahend.mCommodity))
-			throw new IllegalArgumentException("Operation can only be performed on money with same currency");
+			throw new CurrencyMismatchException();
 		
 		BigDecimal bigD = mAmount.subtract(subtrahend.mAmount);		
 		return new Money(bigD, mCommodity);
@@ -369,13 +367,14 @@ public Money subtract(Money subtrahend){
 	 * Returns a new <code>Money</code> object whose value is the quotient of the values of 
 	 * this object and <code>divisor</code>.
 	 * This object is the dividend and <code>divisor</code> is the divisor
+	 * <p>This method uses the rounding mode {@link BigDecimal#ROUND_HALF_EVEN}</p>
 	 * @param divisor Second operand in the division.
 	 * @return Money object whose value is the quotient of this object and <code>divisor</code>
-	 * @throws IllegalArgumentException if the <code>Money</code> objects to be added have different Currencies
+	 * @throws CurrencyMismatchException if the <code>Money</code> objects to be added have different Currencies
 	 */
     public Money divide(Money divisor){
 		if (!mCommodity.equals(divisor.mCommodity))
-			throw new IllegalArgumentException("Operation can only be performed on money with same currency");
+			throw new CurrencyMismatchException();
 		
 		BigDecimal bigD = mAmount.divide(divisor.mAmount, mCommodity.getSmallestFractionDigits(), ROUNDING_MODE);
 		return new Money(bigD, mCommodity);
@@ -398,11 +397,11 @@ public Money divide(int divisor){
 	 * 
 	 * @param money Second operand in the multiplication.
 	 * @return Money object whose value is the product of this object and <code>money</code>
-	 * @throws IllegalArgumentException if the <code>Money</code> objects to be added have different Currencies
+	 * @throws CurrencyMismatchException if the <code>Money</code> objects to be added have different Currencies
 	 */
     public Money multiply(Money money){
 		if (!mCommodity.equals(money.mCommodity))
-			throw new IllegalArgumentException("Operation can only be performed on money with same currency");
+			throw new CurrencyMismatchException();
 		
 		BigDecimal bigD = mAmount.multiply(money.mAmount);		
 		return new Money(bigD, mCommodity);
@@ -490,7 +489,7 @@ public boolean equals(Object obj) {
 	@Override
 	public int compareTo(@NonNull Money another) {
 		if (!mCommodity.equals(another.mCommodity))
-			throw new IllegalArgumentException("Cannot compare different currencies yet");
+			throw new CurrencyMismatchException();
 		return mAmount.compareTo(another.mAmount);
 	}
 
@@ -498,7 +497,7 @@ public int compareTo(@NonNull Money another) {
      * Returns a new instance of {@link Money} object with the absolute value of the current object
      * @return Money object with absolute value of this instance
      */
-    public Money absolute() {
+    public Money abs() {
         return new Money(mAmount.abs(), mCommodity);
     }
 
@@ -509,4 +508,11 @@ public Money absolute() {
     public boolean isAmountZero() {
 		return mAmount.compareTo(BigDecimal.ZERO) == 0;
 	}
+
+	public class CurrencyMismatchException extends IllegalArgumentException{
+		@Override
+		public String getMessage() {
+			return "Cannot perform operation on Money instances with different currencies";
+		}
+	}
 }
diff --git a/app/src/main/java/org/gnucash/android/model/PeriodType.java b/app/src/main/java/org/gnucash/android/model/PeriodType.java
index dc3b2d25..06b13cc4 100644
--- a/app/src/main/java/org/gnucash/android/model/PeriodType.java
+++ b/app/src/main/java/org/gnucash/android/model/PeriodType.java
@@ -20,6 +20,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.ui.util.RecurrenceParser;
 
 import java.text.SimpleDateFormat;
 import java.util.Date;
@@ -31,11 +32,49 @@
  * @see org.gnucash.android.model.ScheduledAction
 */
 public enum PeriodType {
-    DAY, WEEK, MONTH, YEAR;
+    DAY, WEEK, MONTH, YEAR; // TODO: 22.10.2015 add support for hourly
 
     int mMultiplier = 1; //multiplier for the period type
 
     /**
+     * Computes the {@link PeriodType} for a given {@code period}
+     * @param period Period in milliseconds since Epoch
+     * @return PeriodType corresponding to the period
+     */
+    public static PeriodType parse(long period){
+        PeriodType periodType = DAY;
+        int result = (int) (period/ RecurrenceParser.YEAR_MILLIS);
+        if (result > 0) {
+            periodType = YEAR;
+            periodType.setMultiplier(result);
+            return periodType;
+        }
+
+        result = (int) (period/RecurrenceParser.MONTH_MILLIS);
+        if (result > 0) {
+            periodType = MONTH;
+            periodType.setMultiplier(result);
+            return periodType;
+        }
+
+        result = (int) (period/RecurrenceParser.WEEK_MILLIS);
+        if (result > 0) {
+            periodType = WEEK;
+            periodType.setMultiplier(result);
+            return periodType;
+        }
+
+        result = (int) (period/RecurrenceParser.DAY_MILLIS);
+        if (result > 0) {
+            periodType = DAY;
+            periodType.setMultiplier(result);
+            return periodType;
+        }
+
+        return periodType;
+    }
+
+    /**
      * Sets the multiplier for this period type
      * e.g. bi-weekly actions have period type {@link PeriodType#WEEK} and multiplier 2
      * @param multiplier Multiplier for this period type
@@ -79,7 +118,7 @@ public String getFrequencyDescription() {
      */
     public String getFrequencyRepeatString(){
         Resources res = GnuCashApplication.getAppContext().getResources();
-
+        //todo: take multiplier into account here
         switch (this) {
             case DAY:
                 return res.getQuantityString(R.plurals.label_every_x_days, mMultiplier, mMultiplier);
diff --git a/app/src/main/java/org/gnucash/android/model/Recurrence.java b/app/src/main/java/org/gnucash/android/model/Recurrence.java
new file mode 100644
index 00000000..87dcb562
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/model/Recurrence.java
@@ -0,0 +1,323 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.model;
+
+import android.support.annotation.NonNull;
+
+import org.gnucash.android.ui.util.RecurrenceParser;
+import org.joda.time.Days;
+import org.joda.time.LocalDate;
+import org.joda.time.LocalDateTime;
+import org.joda.time.Months;
+import org.joda.time.Weeks;
+import org.joda.time.Years;
+
+import java.sql.Timestamp;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Locale;
+
+/**
+ * Model for recurrences in the database
+ * <p>Basically a wrapper around {@link PeriodType}</p>
+ */
+public class Recurrence extends BaseModel {
+
+    private PeriodType mPeriodType;
+
+    /**
+     * Start time of the recurrence
+     */
+    private Timestamp mPeriodStart;
+
+    /**
+     * End time of this recurrence
+     * <p>This value is not persisted to the database</p>
+     */
+    private Timestamp mPeriodEnd;
+
+    /**
+     * Describes which day on which to run the recurrence
+     */
+    private String mByDay;
+
+    public Recurrence(@NonNull PeriodType periodType){
+        setPeriodType(periodType);
+        mPeriodStart = new Timestamp(System.currentTimeMillis());
+    }
+
+    /**
+     * Return the PeriodType for this recurrence
+     * @return PeriodType for the recurrence
+     */
+    public PeriodType getPeriodType() {
+        return mPeriodType;
+    }
+
+    /**
+     * Sets the period type for the recurrence
+     * @param periodType PeriodType
+     */
+    public void setPeriodType(PeriodType periodType) {
+        this.mPeriodType = periodType;
+    }
+
+    /**
+     * Return the start time for this recurrence
+     * @return Timestamp of start of recurrence
+     */
+    public Timestamp getPeriodStart() {
+        return mPeriodStart;
+    }
+
+    /**
+     * Set the start time of this recurrence
+     * @param periodStart {@link Timestamp} of recurrence
+     */
+    public void setPeriodStart(Timestamp periodStart) {
+        this.mPeriodStart = periodStart;
+    }
+
+
+    /**
+     * Returns an approximate period for this recurrence
+     * <p>The period is approximate because months do not all have the same number of days,
+     * but that is assumed</p>
+     * @return Milliseconds since Epoch representing the period
+     */
+    public long getPeriod(){
+        long baseMillis = 0;
+        switch (mPeriodType){
+            case DAY:
+                baseMillis = RecurrenceParser.DAY_MILLIS;
+                break;
+            case WEEK:
+                baseMillis = RecurrenceParser.WEEK_MILLIS;
+                break;
+            case MONTH:
+                baseMillis = RecurrenceParser.MONTH_MILLIS;
+                break;
+            case YEAR:
+                baseMillis = RecurrenceParser.YEAR_MILLIS;
+                break;
+        }
+        return mPeriodType.getMultiplier() * baseMillis;
+    }
+
+    /**
+     * Returns the event schedule (start, end and recurrence)
+     * @return String description of repeat schedule
+     */
+    public String getRepeatString(){
+        String dayOfWeek = new SimpleDateFormat("EEEE", Locale.US).format(new Date(mPeriodStart.getTime()));
+
+        StringBuilder ruleBuilder = new StringBuilder(mPeriodType.getFrequencyRepeatString());
+
+        if (mPeriodType == PeriodType.WEEK) {
+            ruleBuilder.append(" on ").append(dayOfWeek);
+        }
+
+        return ruleBuilder.toString();
+    }
+
+        /**
+         * Creates an RFC 2445 string which describes this recurring event.
+         * <p>See http://recurrance.sourceforge.net/</p>
+         * <p>The output of this method is not meant for human consumption</p>
+         * @return String describing event
+         */
+    public String getRuleString(){
+        String separator = ";";
+
+        StringBuilder ruleBuilder = new StringBuilder();
+
+//        =======================================================================
+        //This section complies with the formal rules, but the betterpickers library doesn't like/need it
+
+//        SimpleDateFormat startDateFormat = new SimpleDateFormat("'TZID'=zzzz':'yyyyMMdd'T'HHmmss", Locale.US);
+//        ruleBuilder.append("DTSTART;");
+//        ruleBuilder.append(startDateFormat.format(new Date(mStartDate)));
+//            ruleBuilder.append("\n");
+//        ruleBuilder.append("RRULE:");
+//        ========================================================================
+
+
+        ruleBuilder.append("FREQ=").append(mPeriodType.getFrequencyDescription()).append(separator);
+        ruleBuilder.append("INTERVAL=").append(mPeriodType.getMultiplier()).append(separator);
+        ruleBuilder.append(mPeriodType.getByParts(mPeriodStart.getTime())).append(separator);
+
+        return ruleBuilder.toString();
+    }
+
+    /**
+     * Return the number of days left in this period
+     * @return Number of days left in period
+     */
+    public int getDaysLeftInCurrentPeriod(){
+        LocalDate startDate = new LocalDate(System.currentTimeMillis());
+        int interval = mPeriodType.getMultiplier() - 1;
+        LocalDate endDate = null;
+        switch (mPeriodType){
+            case DAY:
+                endDate = new LocalDate(System.currentTimeMillis()).plusDays(interval);
+                break;
+            case WEEK:
+                endDate = startDate.dayOfWeek().withMaximumValue().plusWeeks(interval);
+                break;
+            case MONTH:
+                endDate = startDate.dayOfMonth().withMaximumValue().plusMonths(interval);
+                break;
+            case YEAR:
+                endDate = startDate.dayOfYear().withMaximumValue().plusYears(interval);
+                break;
+        }
+
+        return Days.daysBetween(startDate, endDate).getDays();
+    }
+
+    /**
+     * Returns the number of periods from the start date of this occurence until the end of the
+     * interval multiplier specified in the {@link PeriodType}
+     * @return Number of periods in this recurrence
+     */
+    public int getNumberOfPeriods(int numberOfPeriods) {
+        LocalDate startDate = new LocalDate(mPeriodStart.getTime());
+        LocalDate endDate;
+        int interval = mPeriodType.getMultiplier();
+        switch (mPeriodType){
+
+            case DAY:
+                return 1;
+            case WEEK:
+                endDate = startDate.dayOfWeek().withMaximumValue().plusWeeks(numberOfPeriods);
+                return Weeks.weeksBetween(startDate, endDate).getWeeks() / interval;
+            case MONTH:
+                endDate = startDate.dayOfMonth().withMaximumValue().plusMonths(numberOfPeriods);
+                return Months.monthsBetween(startDate, endDate).getMonths() / interval;
+            case YEAR:
+                endDate = startDate.dayOfYear().withMaximumValue().plusYears(numberOfPeriods);
+                return Years.yearsBetween(startDate, endDate).getYears() / interval;
+        }
+
+        return 0;
+    }
+
+    /**
+     * Return the name of the current period
+     * @return String of current period
+     */
+    public String getTextOfCurrentPeriod(int periodNum){
+        LocalDate startDate = new LocalDate(mPeriodStart.getTime());
+        switch (mPeriodType){
+
+            case DAY:
+                return startDate.dayOfWeek().getAsText();
+            case WEEK:
+                return startDate.weekOfWeekyear().getAsText();
+            case MONTH:
+                return startDate.monthOfYear().getAsText();
+            case YEAR:
+                return startDate.year().getAsText();
+        }
+        return "Period " + periodNum;
+    }
+
+    /**
+     * Sets the string which determines on which day the recurrence will be run
+     * @param byDay Byday string of recurrence rule (RFC 2445)
+     */
+    public void setByDay(String byDay){
+        this.mByDay = byDay;
+    }
+
+    /**
+     * Return the byDay string of recurrence rule (RFC 2445)
+     * @return String with by day specification
+     */
+    public String getByDay(){
+        return mByDay;
+    }
+
+    /**
+     * Computes the number of occurrences of this recurrences between start and end date
+     * <p>If there is no end date, it returns -1</p>
+     * @return Number of occurrences, or -1 if there is no end date
+     */
+    public int getCount(){
+        int count = 0;
+        LocalDate startDate = new LocalDate(mPeriodStart.getTime());
+        LocalDate endDate = new LocalDate(mPeriodEnd.getTime());
+        switch (mPeriodType){
+            case DAY:
+                count = Days.daysBetween(startDate, endDate).getDays();
+                break;
+            case WEEK:
+                count = Weeks.weeksBetween(startDate, endDate).getWeeks();
+                break;
+            case MONTH:
+                count = Months.monthsBetween(startDate, endDate).getMonths();
+                break;
+            case YEAR:
+                count = Years.yearsBetween(startDate, endDate).getYears();
+                break;
+        }
+        return count;
+    }
+
+    /**
+     * Sets the end time of this recurrence by specifying the number of occurences
+     * @param numberOfOccurences Number of occurences from the start time
+     */
+    public void setPeriodEnd(int numberOfOccurences){
+        LocalDateTime localDate = new LocalDateTime(mPeriodStart.getTime());
+        LocalDateTime endDate;
+        switch (mPeriodType){
+            case DAY:
+                endDate = localDate.dayOfWeek().getLocalDateTime().plusDays(numberOfOccurences);
+                break;
+            case WEEK:
+                endDate = localDate.dayOfWeek().getLocalDateTime().plusWeeks(numberOfOccurences);
+                break;
+            case MONTH:
+                endDate = localDate.dayOfMonth().getLocalDateTime().plusMonths(numberOfOccurences);
+                break;
+            case YEAR:
+                endDate = localDate.monthOfYear().getLocalDateTime().plusYears(numberOfOccurences);
+                break;
+            default: //default to monthly
+                endDate = localDate.dayOfMonth().getLocalDateTime().plusMonths(numberOfOccurences);
+                break;
+        }
+        mPeriodEnd = new Timestamp(endDate.toDate().getTime());
+    }
+
+    /**
+     * Return the end date of the period in milliseconds
+     * @return End date of the recurrence period
+     */
+    public Timestamp getPeriodEnd(){
+        return mPeriodEnd;
+    }
+
+    /**
+     * Set period end date
+     * @param endTimestamp End time in milliseconds
+     */
+    public void setPeriodEnd(Timestamp endTimestamp){
+        mPeriodEnd = endTimestamp;
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
index bea49f09..8bb062f7 100644
--- a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
+++ b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
@@ -15,11 +15,9 @@
  */
 package org.gnucash.android.model;
 
-import org.gnucash.android.ui.util.RecurrenceParser;
-import org.joda.time.format.DateTimeFormat;
-import org.joda.time.format.DateTimeFormatter;
+import org.joda.time.LocalDate;
 
-import java.io.IOException;
+import java.sql.Timestamp;
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.Date;
@@ -33,16 +31,19 @@
 */
 public class ScheduledAction extends BaseModel{
 
-    private long mPeriod;
     private long mStartDate;
     private long mEndDate;
     private String mTag;
 
     /**
+     * Recurrence of this scheduled action
+     */
+    private Recurrence mRecurrence;
+
+    /**
      * Types of events which can be scheduled
      */
-    public enum ActionType {TRANSACTION, BACKUP
-    }
+    public enum ActionType {TRANSACTION, BACKUP}
 
     /**
      * Next scheduled run of Event
@@ -79,11 +80,14 @@
      * Flag for whether the scheduled transaction should be auto-created
      * TODO: Add this flag to the database. At the moment we always treat it as true
      */
-    private boolean autoCreate = true;
+    private boolean mAutoCreate = true;
+    private boolean mAutoNotify = false;
+    private int mAdvanceCreateDays = 0;
+    private int mAdvanceNotifyDays = 0;
+    private String mTemplateAccountUID;
 
     public ScheduledAction(ActionType actionType){
         mActionType = actionType;
-        mStartDate = System.currentTimeMillis();
         mEndDate = 0;
         mIsEnabled = true; //all actions are enabled by default
     }
@@ -124,102 +128,55 @@ public void setActionUID(String actionUID) {
      * Returns the timestamp of the last execution of this scheduled action
      * @return Timestamp in milliseconds since Epoch
      */
-    public long getLastRun() {
+    public long getLastRunTime() {
         return mLastRun;
     }
 
     /**
-     * Set time of last execution of the scheduled action
-     * @param nextRun Timestamp in milliseconds since Epoch
+     * Computes the next time that this scheduled action is supposed to be executed, taking the
+     * last execution time into account
+     * <p>This method does not consider the end time, or number of times it should be run.
+     * It only considers when the next execution would theoretically be due</p>
+     * @return Next run time in milliseconds
      */
-    public void setLastRun(long nextRun) {
-        this.mLastRun = nextRun;
-    }
-
-    /**
-     * Returns the period of this scheduled action
-     * @return Period in milliseconds since Epoch
-     */
-    public long getPeriod() {
-        return mPeriod;
-    }
-
-    /**
-     * Sets the period of the scheduled action
-     * @param period Period in milliseconds since Epoch
-     */
-    public void setPeriod(long period) {
-        this.mPeriod = period;
-    }
-
-    /**
-     * Sets the period given the period type.
-     * The {@link PeriodType} should have the multiplier set,
-     * e.g. bi-weekly actions have period type {@link PeriodType#WEEK} and multiplier 2
-     * @param periodType Type of period
-     */
-    public void setPeriod(PeriodType periodType){
-        int multiplier = periodType.getMultiplier();
-        switch (periodType){
+    public long computeNextRunTime(){
+        int multiplier = mRecurrence.getPeriodType().getMultiplier();
+        long time = mLastRun;
+        if (time == 0) {
+            time = mStartDate;
+        }
+        LocalDate localDate = LocalDate.fromDateFields(new Date(mLastRun));
+        switch (mRecurrence.getPeriodType()) {
             case DAY:
-                mPeriod = RecurrenceParser.DAY_MILLIS * multiplier;
+                localDate.plusDays(multiplier);
                 break;
             case WEEK:
-                mPeriod = RecurrenceParser.WEEK_MILLIS * multiplier;
+                localDate.plusWeeks(multiplier);
                 break;
             case MONTH:
-                mPeriod = RecurrenceParser.MONTH_MILLIS * multiplier;
+                localDate.plusMonths(multiplier);
                 break;
             case YEAR:
-                mPeriod = RecurrenceParser.YEAR_MILLIS * multiplier;
+                localDate.plusYears(multiplier);
                 break;
         }
+        return localDate.toDate().getTime();
     }
 
     /**
-     * Returns the period type for this scheduled action
-     * @return Period type of the action
+     * Set time of last execution of the scheduled action
+     * @param nextRun Timestamp in milliseconds since Epoch
      */
-    public PeriodType getPeriodType(){
-        return getPeriodType(mPeriod);
+    public void setLastRun(long nextRun) {
+        this.mLastRun = nextRun;
     }
 
     /**
-     * Computes the {@link PeriodType} for a given {@code period}
-     * @param period Period in milliseconds since Epoch
-     * @return PeriodType corresponding to the period
-     */
-    public static PeriodType getPeriodType(long period){
-        PeriodType periodType = PeriodType.DAY;
-        int result = (int) (period/RecurrenceParser.YEAR_MILLIS);
-        if (result > 0) {
-            periodType = PeriodType.YEAR;
-            periodType.setMultiplier(result);
-            return periodType;
-        }
-
-        result = (int) (period/RecurrenceParser.MONTH_MILLIS);
-        if (result > 0) {
-            periodType = PeriodType.MONTH;
-            periodType.setMultiplier(result);
-            return periodType;
-        }
-
-        result = (int) (period/RecurrenceParser.WEEK_MILLIS);
-        if (result > 0) {
-            periodType = PeriodType.WEEK;
-            periodType.setMultiplier(result);
-            return periodType;
-        }
-
-        result = (int) (period/RecurrenceParser.DAY_MILLIS);
-        if (result > 0) {
-            periodType = PeriodType.DAY;
-            periodType.setMultiplier(result);
-            return periodType;
-        }
-
-        return periodType;
+     * Returns the period of this scheduled action
+     * @return Period in milliseconds since Epoch
+     */
+    public long getPeriod() {
+        return mRecurrence.getPeriod();
     }
 
     /**
@@ -236,6 +193,9 @@ public long getStartTime() {
      */
     public void setStartTime(long startDate) {
         this.mStartDate = startDate;
+        if (mRecurrence != null) {
+            mRecurrence.setPeriodStart(new Timestamp(startDate));
+        }
     }
 
     /**
@@ -247,21 +207,14 @@ public long getEndTime() {
     }
 
     /**
-     * Returns the approximate end time of this scheduled action.
-     * <p>This is useful when the number of occurences was set, rather than a specific end time.
-     * The end time is then computed from the start time, period and number of occurrences.</p>
-     * @return End time in milliseconds for the scheduled action
-     */
-    public long getApproxEndTime(){
-        return mStartDate + (mPeriod * mTotalFrequency);
-    }
-
-    /**
      * Sets the end time of the scheduled action
      * @param endDate Timestamp in milliseconds since Epoch
      */
     public void setEndTime(long endDate) {
         this.mEndDate = endDate;
+        if (mRecurrence != null){
+            mRecurrence.setPeriodStart(new Timestamp(mEndDate));
+        }
     }
 
     /**
@@ -335,18 +288,94 @@ public void setExecutionCount(int executionCount){
 
     /**
      * Returns flag if transactions should be automatically created or not
+     * <p>This flag is currently unused in the app. It is only included here for compatibility with GnuCash desktop XML</p>
      * @return {@code true} if the transaction should be auto-created, {@code false} otherwise
      */
     public boolean shouldAutoCreate() {
-        return autoCreate;
+        return mAutoCreate;
     }
 
     /**
      * Set flag for automatically creating transaction based on this scheduled action
+     * <p>This flag is currently unused in the app. It is only included here for compatibility with GnuCash desktop XML</p>
      * @param autoCreate Flag for auto creating transactions
      */
     public void setAutoCreate(boolean autoCreate) {
-        this.autoCreate = autoCreate;
+        this.mAutoCreate = autoCreate;
+    }
+
+    /**
+     * Check if user will be notified of creation of scheduled transactions
+     * <p>This flag is currently unused in the app. It is only included here for compatibility with GnuCash desktop XML</p>
+     * @return {@code true} if user will be notified, {@code false} otherwise
+     */
+    public boolean shouldAutoNotify() {
+        return mAutoNotify;
+    }
+
+    /**
+     * Sets whether to notify the user that scheduled transactions have been created
+     * <p>This flag is currently unused in the app. It is only included here for compatibility with GnuCash desktop XML</p>
+     * @param autoNotify Boolean flag
+     */
+    public void setAutoNotify(boolean autoNotify) {
+        this.mAutoNotify = autoNotify;
+    }
+
+    /**
+     * Returns number of days in advance to create the transaction
+     * <p>This flag is currently unused in the app. It is only included here for compatibility with GnuCash desktop XML</p>
+     * @return Number of days in advance to create transaction
+     */
+    public int getAdvanceCreateDays() {
+        return mAdvanceCreateDays;
+    }
+
+    /**
+     * Set number of days in advance to create the transaction
+     * <p>This flag is currently unused in the app. It is only included here for compatibility with GnuCash desktop XML</p>
+     * @param advanceCreateDays Number of days
+     */
+    public void setAdvanceCreateDays(int advanceCreateDays) {
+        this.mAdvanceCreateDays = advanceCreateDays;
+    }
+
+    /**
+     * Returns the number of days in advance to notify of scheduled transactions
+     * <p>This flag is currently unused in the app. It is only included here for compatibility with GnuCash desktop XML</p>
+     * @return {@code true} if user will be notified, {@code false} otherwise
+     */
+    public int getAdvanceNotifyDays() {
+        return mAdvanceNotifyDays;
+    }
+
+    /**
+     * Set number of days in advance to notify of scheduled transactions
+     * <p>This flag is currently unused in the app. It is only included here for compatibility with GnuCash desktop XML</p>
+     * @param advanceNotifyDays Number of days
+     */
+    public void setAdvanceNotifyDays(int advanceNotifyDays) {
+        this.mAdvanceNotifyDays = advanceNotifyDays;
+    }
+
+    /**
+     * Return the template account GUID for this scheduled action
+     * <p>This method generates one if none was set</p>
+     * @return String GUID of template account
+     */
+    public String getTemplateAccountUID() {
+        if (mTemplateAccountUID == null)
+            return mTemplateAccountUID = generateUID();
+        else
+            return mTemplateAccountUID;
+    }
+
+    /**
+     * Set the template account GUID
+     * @param templateAccountUID String GUID of template account
+     */
+    public void setTemplateAccountUID(String templateAccountUID) {
+        this.mTemplateAccountUID = templateAccountUID;
     }
 
     /**
@@ -354,13 +383,7 @@ public void setAutoCreate(boolean autoCreate) {
      * @return String description of repeat schedule
      */
     public String getRepeatString(){
-        String dayOfWeek = new SimpleDateFormat("EEEE", Locale.US).format(new Date(mStartDate));
-        PeriodType periodType = getPeriodType();
-        StringBuilder ruleBuilder = new StringBuilder(periodType.getFrequencyRepeatString());
-
-        if (periodType == PeriodType.WEEK) {
-            ruleBuilder.append(" on ").append(dayOfWeek);
-        }
+        StringBuilder ruleBuilder = new StringBuilder(mRecurrence.getRepeatString());
 
         if (mEndDate > 0){
             ruleBuilder.append(", ");
@@ -380,23 +403,8 @@ public String getRepeatString(){
      */
     public String getRuleString(){
         String separator = ";";
-        PeriodType periodType = getPeriodType();
-
-        StringBuilder ruleBuilder = new StringBuilder();
-
-//        =======================================================================
-        //This section complies with the formal rules, but the betterpickers library doesn't like/need it
-
-//        SimpleDateFormat startDateFormat = new SimpleDateFormat("'TZID'=zzzz':'yyyyMMdd'T'HHmmss", Locale.US);
-//        ruleBuilder.append("DTSTART;");
-//        ruleBuilder.append(startDateFormat.format(new Date(mStartDate)));
-//            ruleBuilder.append("\n");
-//        ruleBuilder.append("RRULE:");
-//        ========================================================================
 
-        ruleBuilder.append("FREQ=").append(periodType.getFrequencyDescription()).append(separator);
-        ruleBuilder.append("INTERVAL=").append(periodType.getMultiplier()).append(separator);
-        ruleBuilder.append(periodType.getByParts(mStartDate)).append(separator);
+        StringBuilder ruleBuilder = new StringBuilder(mRecurrence.getRuleString());
 
         if (mEndDate > 0){
             SimpleDateFormat df = new SimpleDateFormat("yyyyMMdd'T'HHmmss'Z'", Locale.US);
@@ -410,15 +418,48 @@ public String getRuleString(){
     }
 
     /**
+     * Return GUID of recurrence pattern for this scheduled action
+     * @return {@link Recurrence} object
+     */
+    public Recurrence getRecurrence() {
+        return mRecurrence;
+    }
+
+    /**
+     * Sets the recurrence pattern of this scheduled action
+     * <p>This also sets the start period of the recurrence object, if there is one</p>
+     * @param recurrence {@link Recurrence} object
+     */
+    public void setRecurrence(Recurrence recurrence) {
+        this.mRecurrence = recurrence;
+        //if we were parsing XML and parsed the start and end date from the scheduled action first,
+        //then use those over the values which might be gotten from the recurrence
+        if (mStartDate > 0){
+            mRecurrence.setPeriodStart(new Timestamp(mStartDate));
+        } else {
+            mStartDate = mRecurrence.getPeriodStart().getTime();
+        }
+
+        if (mEndDate > 0){
+            mRecurrence.setPeriodEnd(new Timestamp(mEndDate));
+        } else if (mRecurrence.getPeriodEnd() != null){
+            mEndDate = mRecurrence.getPeriodEnd().getTime();
+        }
+    }
+
+    /**
      * Creates a ScheduledAction from a Transaction and a period
      * @param transaction Transaction to be scheduled
      * @param period Period in milliseconds since Epoch
      * @return Scheduled Action
+     * @deprecated Used for parsing legacy backup files. Use {@link Recurrence} instead
      */
+    @Deprecated
     public static ScheduledAction parseScheduledAction(Transaction transaction, long period){
         ScheduledAction scheduledAction = new ScheduledAction(ActionType.TRANSACTION);
         scheduledAction.mActionUID = transaction.getUID();
-        scheduledAction.mPeriod = period;
+        Recurrence recurrence = new Recurrence(PeriodType.parse(period));
+        scheduledAction.setRecurrence(recurrence);
         return scheduledAction;
     }
 
diff --git a/app/src/main/java/org/gnucash/android/model/Split.java b/app/src/main/java/org/gnucash/android/model/Split.java
index 5e19936c..94eaf370 100644
--- a/app/src/main/java/org/gnucash/android/model/Split.java
+++ b/app/src/main/java/org/gnucash/android/model/Split.java
@@ -3,7 +3,9 @@
 
 import android.support.annotation.NonNull;
 
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+
+import java.sql.Timestamp;
 
 /**
  * A split amount in a transaction.
@@ -16,6 +18,23 @@
  * @author Ngewi Fet <ngewif@gmail.com>
  */
 public class Split extends BaseModel{
+
+    /**
+     * Flag indicating that the split has been reconciled
+     */
+    public static final char FLAG_RECONCILED        = 'y';
+
+    /**
+     * Flag indicating that the split has not been reconciled
+     */
+    public static final char FLAG_NOT_RECONCILED    = 'n';
+
+    /**
+     * Flag indicating that the split has been cleared, but not reconciled
+     */
+    public static final char FLAG_CLEARED           = 'c';
+
+
     /**
      * Amount value of this split which is in the currency of the transaction
      */
@@ -46,6 +65,13 @@
      */
     private String mMemo;
 
+    private char mReconcileState = FLAG_NOT_RECONCILED;
+
+    /**
+     * Database required non-null field
+     */
+    private Timestamp mReconcileDate = new Timestamp(System.currentTimeMillis());
+
     /**
      * Initialize split with a value amount and account
      * @param value Money value amount of this split
@@ -209,7 +235,7 @@ public void setMemo(String memo) {
      * @see TransactionType#invert()
      */
     public Split createPair(String accountUID){
-        Split pair = new Split(mValue.absolute(), accountUID);
+        Split pair = new Split(mValue.abs(), accountUID);
         pair.setType(mSplitType.invert());
         pair.setMemo(mMemo);
         pair.setTransactionUID(mTransactionUID);
@@ -239,7 +265,7 @@ protected Split clone() throws CloneNotSupportedException {
      * @return whether the two splits are a pair
      */
     public boolean isPairOf(Split other) {
-        return mValue.absolute().equals(other.mValue.absolute())
+        return mValue.abs().equals(other.mValue.abs())
                 && mSplitType.invert().equals(other.mSplitType);
     }
 
@@ -272,7 +298,7 @@ public Money getFormattedQuantity(){
      */
     public static Money getFormattedAmount(Money amount, String accountUID, TransactionType splitType){
         boolean isDebitAccount = AccountsDbAdapter.getInstance().getAccountType(accountUID).hasDebitNormalBalance();
-        Money absAmount = amount.absolute();
+        Money absAmount = amount.abs();
 
         boolean isDebitSplit = splitType == TransactionType.DEBIT;
         if (isDebitAccount) {
@@ -290,6 +316,63 @@ public static Money getFormattedAmount(Money amount, String accountUID, Transact
         }
     }
 
+    /**
+     * Return the reconciled state of this split
+     * <p>
+     *     The reconciled state is one of the following values:
+     *     <ul>
+     *         <li><b>y</b>: means this split has been reconciled</li>
+     *         <li><b>n</b>: means this split is not reconciled</li>
+     *         <li><b>c</b>: means split has been cleared, but not reconciled</li>
+     *     </ul>
+     * </p> <br>
+     * You can check the return value against the reconciled flags {@link #FLAG_RECONCILED}, {@link #FLAG_NOT_RECONCILED}, {@link #FLAG_CLEARED}
+     * @return Character showing reconciled state
+     */
+    public char getReconcileState() {
+        return mReconcileState;
+    }
+
+    /**
+     * Check if this split is reconciled
+     * @return {@code true} if the split is reconciled, {@code false} otherwise
+     */
+    public boolean isReconciled(){
+        return mReconcileState == FLAG_RECONCILED;
+    }
+
+    /**
+     * Set reconciled state of this split.
+     * <p>
+     *     The reconciled state is one of the following values:
+     *     <ul>
+     *         <li><b>y</b>: means this split has been reconciled</li>
+     *         <li><b>n</b>: means this split is not reconciled</li>
+     *         <li><b>c</b>: means split has been cleared, but not reconciled</li>
+     *     </ul>
+     * </p>
+     * @param reconcileState One of the following flags {@link #FLAG_RECONCILED}, {@link #FLAG_NOT_RECONCILED}, {@link #FLAG_CLEARED}
+     */
+    public void setReconcileState(char reconcileState) {
+        this.mReconcileState = reconcileState;
+    }
+
+    /**
+     * Return the date of reconciliation
+     * @return Timestamp
+     */
+    public Timestamp getReconcileDate() {
+        return mReconcileDate;
+    }
+
+    /**
+     * Set reconciliation date for this split
+     * @param reconcileDate Timestamp of reconciliation
+     */
+    public void setReconcileDate(Timestamp reconcileDate) {
+        this.mReconcileDate = reconcileDate;
+    }
+
     @Override
     public String toString() {
         return mSplitType.name() + " of " + mValue.toString() + " in account: " + mAccountUID;
@@ -305,7 +388,7 @@ public String toString() {
      */
     public String toCsv(){
         String sep = ";";
-
+        //TODO: add reconciled state and date
         String splitString = getUID() + sep + mValue.getNumerator() + sep + mValue.getDenominator() + sep + mValue.getCurrency().getCurrencyCode() + sep
                 + mQuantity.getNumerator() + sep + mQuantity.getDenominator() + sep + mQuantity.getCurrency().getCurrencyCode()
                 + sep + mTransactionUID + sep + mAccountUID + sep + mSplitType.name();
@@ -325,6 +408,7 @@ public String toCsv(){
      * @return Split instance parsed from the string
      */
     public static Split parseSplit(String splitCsvString) {
+        //TODO: parse reconciled state and date
         String[] tokens = splitCsvString.split(";");
         if (tokens.length < 8) { //old format splits
             Money amount = new Money(tokens[0], tokens[1]);
diff --git a/app/src/main/java/org/gnucash/android/model/Transaction.java b/app/src/main/java/org/gnucash/android/model/Transaction.java
index fd7528e4..e3ee904b 100644
--- a/app/src/main/java/org/gnucash/android/model/Transaction.java
+++ b/app/src/main/java/org/gnucash/android/model/Transaction.java
@@ -19,7 +19,7 @@
 import android.content.Intent;
 
 import org.gnucash.android.BuildConfig;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.export.ofx.OfxHelper;
 import org.gnucash.android.model.Account.OfxAccountType;
 import org.w3c.dom.Document;
@@ -262,7 +262,7 @@ public Money getImbalance(){
                 // so imbalance split should not be generated for them
                 return Money.createZeroInstance(mCurrencyCode);
             }
-            Money amount = split.getValue().absolute();
+            Money amount = split.getValue().abs();
             if (split.getType() == TransactionType.DEBIT)
                 imbalance = imbalance.subtract(amount);
             else
@@ -293,9 +293,9 @@ public static Money computeBalance(String accountUID, List<Split> splitList) {
                 continue;
             Money absAmount;
             if (split.getValue().getCurrency() == accountCurrency){
-                absAmount = split.getValue().absolute();
+                absAmount = split.getValue().abs();
             } else { //if this split belongs to the account, then either its value or quantity is in the account currency
-                absAmount = split.getQuantity().absolute();
+                absAmount = split.getQuantity().abs();
             }
             boolean isDebitSplit = split.getType() == TransactionType.DEBIT;
             if (isDebitAccount) {
diff --git a/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java b/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
index 100ae589..7c406111 100644
--- a/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
+++ b/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
@@ -22,7 +22,7 @@
 import android.os.Bundle;
 import android.util.Log;
 
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Commodity;
 
diff --git a/app/src/main/java/org/gnucash/android/receivers/TransactionRecorder.java b/app/src/main/java/org/gnucash/android/receivers/TransactionRecorder.java
index 469b0a99..aa0659cc 100644
--- a/app/src/main/java/org/gnucash/android/receivers/TransactionRecorder.java
+++ b/app/src/main/java/org/gnucash/android/receivers/TransactionRecorder.java
@@ -24,8 +24,9 @@
 
 import com.crashlytics.android.Crashlytics;
 
-import org.gnucash.android.db.CommoditiesDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
@@ -78,7 +79,7 @@ public void onReceive(Context context, Intent intent) {
             Commodity commodity = CommoditiesDbAdapter.getInstance().getCommodity(currencyCode);
             amountBigDecimal = amountBigDecimal.setScale(commodity.getSmallestFractionDigits(), BigDecimal.ROUND_HALF_EVEN).round(MathContext.DECIMAL128);
             Money amount = new Money(amountBigDecimal, Commodity.getInstance(currencyCode));
-            Split split = new Split(amount.absolute(), accountUID);
+            Split split = new Split(amount.abs(), accountUID);
             split.setType(type);
             transaction.addSplit(split);
 
diff --git a/app/src/main/java/org/gnucash/android/service/SchedulerService.java b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
index 232f48c6..9456100d 100644
--- a/app/src/main/java/org/gnucash/android/service/SchedulerService.java
+++ b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
@@ -27,8 +27,8 @@
 
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.ScheduledActionDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ExportAsyncTask;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.model.ScheduledAction;
@@ -69,20 +69,20 @@ protected void onHandleIntent(Intent intent) {
         List<ScheduledAction> scheduledActions = scheduledActionDbAdapter.getAllEnabledScheduledActions();
 
         for (ScheduledAction scheduledAction : scheduledActions) {
-            long lastRun    = scheduledAction.getLastRun();
-            long period     = scheduledAction.getPeriod();
             long endTime    = scheduledAction.getEndTime();
-
-            long now = System.currentTimeMillis();
-
-            if (((endTime > 0 && now < endTime) //if and endTime is set and we did not reach it yet
-                    || (scheduledAction.getExecutionCount() < scheduledAction.getTotalFrequency()) //or the number of scheduled runs
-                    || (endTime == 0 && scheduledAction.getTotalFrequency() == 0)) //or the action is to run forever
-                    && ((lastRun + period) <= now)  //one period has passed since last execution
-                    && scheduledAction.getStartTime() <= now
-                    && scheduledAction.isEnabled()){ //the start time has arrived
-                executeScheduledEvent(scheduledAction);
-            }
+            long now        = System.currentTimeMillis();
+            long nextRunTime;
+            do { //loop so that we can add transactions which were missed while device was off
+                nextRunTime = scheduledAction.computeNextRunTime();
+                if (((endTime > 0 && now < endTime) //if and endTime is set and we did not reach it yet
+                        || (scheduledAction.getExecutionCount() < scheduledAction.getTotalFrequency()) //or the number of scheduled runs
+                        || (endTime == 0 && scheduledAction.getTotalFrequency() == 0)) //or the action is to run forever
+                        && (nextRunTime <= now)  //one period has passed since last execution
+                        && scheduledAction.getStartTime() <= now
+                        && scheduledAction.isEnabled()) { //the start time has arrived
+                    executeScheduledEvent(scheduledAction);
+                }
+            } while (nextRunTime <= now && scheduledAction.getActionType() == ScheduledAction.ActionType.TRANSACTION);
         }
 
         Log.i(LOG_TAG, "Completed service @ " + SystemClock.elapsedRealtime());
@@ -95,6 +95,7 @@ protected void onHandleIntent(Intent intent) {
      * @param scheduledAction ScheduledEvent to be executed
      */
     private void executeScheduledEvent(ScheduledAction scheduledAction){
+        Log.i(LOG_TAG, "Executing scheduled action: " + scheduledAction.toString());
         switch (scheduledAction.getActionType()){
             case TRANSACTION:
                 String eventUID = scheduledAction.getActionUID();
@@ -104,12 +105,7 @@ private void executeScheduledEvent(ScheduledAction scheduledAction){
 
                 //we may be executing scheduled action significantly after scheduled time (depending on when Android fires the alarm)
                 //so compute the actual transaction time from pre-known values
-                long transactionTime; //default
-                if (scheduledAction.getLastRun() > 0){
-                    transactionTime = scheduledAction.getLastRun() + scheduledAction.getPeriod();
-                } else {
-                    transactionTime = scheduledAction.getStartTime() + scheduledAction.getPeriod();
-                }
+                long transactionTime = scheduledAction.computeNextRunTime(); //default
                 recurringTrxn.setTime(transactionTime);
                 recurringTrxn.setCreatedTimestamp(new Timestamp(transactionTime));
                 transactionsDbAdapter.addRecord(recurringTrxn);
@@ -129,10 +125,15 @@ private void executeScheduledEvent(ScheduledAction scheduledAction){
                 break;
         }
 
+        long lastRun = scheduledAction.computeNextRunTime();
+        int executionCount = scheduledAction.getExecutionCount() + 1;
         //update the last run time and execution count
         ContentValues contentValues = new ContentValues();
-        contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN, System.currentTimeMillis());
-        contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT, scheduledAction.getExecutionCount()+1);
+        contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN, lastRun);
+        contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT, executionCount);
         ScheduledActionDbAdapter.getInstance().updateRecord(scheduledAction.getUID(), contentValues);
+
+        scheduledAction.setLastRun(lastRun);
+        scheduledAction.setExecutionCount(executionCount);
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index b83b0288..9c98be70 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -54,8 +54,8 @@
 import android.widget.Spinner;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 494d817b..126094a1 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -40,11 +40,11 @@
 import android.support.design.widget.Snackbar;
 import android.support.design.widget.TabLayout;
 import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentActivity;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentPagerAdapter;
 import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.util.Log;
 import android.util.SparseArray;
@@ -61,8 +61,8 @@
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.ui.common.BaseDrawerActivity;
@@ -444,7 +444,7 @@ public void onClick(DialogInterface dialog, int which) {
     /**
      * Displays the dialog for exporting transactions
      */
-    public static void openExportFragment(FragmentActivity activity) {
+    public static void openExportFragment(AppCompatActivity activity) {
         Intent intent = new Intent(activity, FormActivity.class);
         intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.EXPORT.name());
         activity.startActivity(intent);
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index a1623f23..4c6128bc 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -46,21 +46,28 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
+import android.widget.ProgressBar;
 import android.widget.TextView;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
+
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.model.Account;
+import org.gnucash.android.model.Budget;
+import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.util.AccountBalanceTask;
 import org.gnucash.android.ui.util.CursorRecyclerAdapter;
-import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
 import org.gnucash.android.ui.util.OnAccountClickedListener;
 import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
+
+import java.util.List;
 
 import butterknife.Bind;
 import butterknife.ButterKnife;
@@ -468,7 +475,7 @@ public void onBindViewHolderCursor(final AccountViewHolder holder, final Cursor
 
             // add a summary of transactions to the account view
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
-                // Make sure the balance task is truely multithread
+                // Make sure the balance task is truly multithread
                 new AccountBalanceTask(holder.accountBalance).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, accountUID);
             } else {
                 new AccountBalanceTask(holder.accountBalance).execute(accountUID);
@@ -494,6 +501,20 @@ public void onClick(View v) {
                 });
             }
 
+            List<Budget> budgets = BudgetsDbAdapter.getInstance().getAccountBudgets(accountUID);
+            //TODO: include fetch only active budgets
+            if (budgets.size() == 1){
+                Budget budget = budgets.get(0);
+                Money balance = mAccountsDbAdapter.getAccountBalance(accountUID, budget.getStartofCurrentPeriod(), budget.getEndOfCurrentPeriod());
+                double budgetProgress = balance.divide(budget.getAmount(accountUID)).asBigDecimal().doubleValue() * 100;
+
+                holder.budgetIndicator.setVisibility(View.VISIBLE);
+                holder.budgetIndicator.setProgress((int) budgetProgress);
+            } else {
+                holder.budgetIndicator.setVisibility(View.GONE);
+            }
+
+
             if (mAccountsDbAdapter.isFavoriteAccount(accountUID)){
                 holder.favoriteStatus.setImageResource(R.drawable.ic_star_black_24dp);
             } else {
@@ -534,6 +555,7 @@ public void onClick(View v) {
             @Bind(R.id.favorite_status) ImageView favoriteStatus;
             @Bind(R.id.options_menu) ImageView optionsMenu;
             @Bind(R.id.account_color_strip) View colorStripView;
+            @Bind(R.id.budget_indicator) ProgressBar budgetIndicator;
             long accoundId;
 
             public AccountViewHolder(View itemView) {
diff --git a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
index c06d0282..97e11f3f 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
@@ -32,10 +32,10 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.ui.util.Refreshable;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
new file mode 100644
index 00000000..d103ab71
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
@@ -0,0 +1,307 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.budget;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.content.res.Configuration;
+import android.graphics.Color;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.GridLayoutManager;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.github.mikephil.charting.charts.BarChart;
+import com.github.mikephil.charting.components.LimitLine;
+import com.github.mikephil.charting.data.BarData;
+import com.github.mikephil.charting.data.BarDataSet;
+import com.github.mikephil.charting.data.BarEntry;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetsDbAdapter;
+import org.gnucash.android.model.Budget;
+import org.gnucash.android.model.BudgetAmount;
+import org.gnucash.android.model.Money;
+import org.gnucash.android.ui.common.FormActivity;
+import org.gnucash.android.ui.common.UxArgument;
+import org.gnucash.android.ui.transaction.TransactionsActivity;
+import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
+
+import java.math.BigDecimal;
+import java.math.RoundingMode;
+import java.util.ArrayList;
+import java.util.List;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
+/**
+ * Fragment for displaying budget details
+ */
+public class BudgetDetailFragment extends Fragment implements Refreshable {
+    @Bind(R.id.primary_text)        TextView mBudgetNameTextView;
+    @Bind(R.id.secondary_text)      TextView mBudgetDescriptionTextView;
+    @Bind(R.id.budget_recurrence)   TextView mBudgetRecurrence;
+    @Bind(R.id.budget_amount_recycler) EmptyRecyclerView mRecyclerView;
+
+    private String mBudgetUID;
+    private BudgetsDbAdapter mBudgetsDbAdapter;
+
+    public static BudgetDetailFragment newInstance(String budgetUID){
+        BudgetDetailFragment fragment = new BudgetDetailFragment();
+        Bundle args = new Bundle();
+        args.putString(UxArgument.BUDGET_UID, budgetUID);
+        fragment.setArguments(args);
+        return fragment;
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_budget_detail, container, false);
+        ButterKnife.bind(this, view);
+        mBudgetDescriptionTextView.setMaxLines(3);
+
+        mRecyclerView.setHasFixedSize(true);
+
+        if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
+            GridLayoutManager gridLayoutManager = new GridLayoutManager(getActivity(), 2);
+            mRecyclerView.setLayoutManager(gridLayoutManager);
+        } else {
+            LinearLayoutManager mLayoutManager = new LinearLayoutManager(getActivity());
+            mRecyclerView.setLayoutManager(mLayoutManager);
+        }
+        return view;
+    }
+
+
+    @Override
+    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+
+        mBudgetsDbAdapter = BudgetsDbAdapter.getInstance();
+        mBudgetUID = getArguments().getString(UxArgument.BUDGET_UID);
+        bindViews();
+
+        setHasOptionsMenu(true);
+    }
+
+    private void bindViews(){
+        Budget budget = mBudgetsDbAdapter.getRecord(mBudgetUID);
+        mBudgetNameTextView.setText(budget.getName());
+
+        String description = budget.getDescription();
+        if (description != null && !description.isEmpty())
+            mBudgetDescriptionTextView.setText(description);
+        else {
+            mBudgetDescriptionTextView.setVisibility(View.GONE);
+        }
+        mBudgetRecurrence.setText(budget.getRecurrence().getRepeatString());
+
+        mRecyclerView.setAdapter(new BudgetAmountAdapter());
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        refresh();
+
+        View view = getActivity().findViewById(R.id.fab_create_budget);
+        if (view != null){
+            view.setVisibility(View.GONE);
+        }
+    }
+
+    @Override
+    public void refresh() {
+        bindViews();
+        String budgetName = mBudgetsDbAdapter.getAttribute(mBudgetUID, DatabaseSchema.BudgetEntry.COLUMN_NAME);
+        ((AppCompatActivity) getActivity()).getSupportActionBar().setTitle(budgetName);
+    }
+
+    @Override
+    public void refresh(String budgetUID) {
+        mBudgetUID = budgetUID;
+        refresh();
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.budget_actions, menu);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()){
+            case R.id.menu_edit_budget:
+                Intent addAccountIntent = new Intent(getActivity(), FormActivity.class);
+                addAccountIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
+                addAccountIntent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.BUDGET.name());
+                addAccountIntent.putExtra(UxArgument.BUDGET_UID, mBudgetUID);
+                startActivityForResult(addAccountIntent, 0x11);
+                return true;
+
+            default:
+                return false;
+        }
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (resultCode == Activity.RESULT_OK){
+            refresh();
+        }
+    }
+
+
+    public class BudgetAmountAdapter extends RecyclerView.Adapter<BudgetAmountAdapter.BudgetAmountViewHolder>{
+        private List<BudgetAmount> mBudgetAmounts;
+        private Budget mBudget;
+
+        public BudgetAmountAdapter(){
+            mBudget = mBudgetsDbAdapter.getRecord(mBudgetUID);
+            mBudgetAmounts = mBudget.getCompactedBudgetAmounts();
+        }
+
+        @Override
+        public BudgetAmountViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+            View view = LayoutInflater.from(getActivity()).inflate(R.layout.cardview_budget_amount, parent, false);
+            return new BudgetAmountViewHolder(view);
+        }
+
+        @Override
+        public void onBindViewHolder(BudgetAmountViewHolder holder, final int position) {
+            BudgetAmount budgetAmount = mBudgetAmounts.get(position);
+            Money projectedAmount = budgetAmount.getAmount();
+            AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
+
+            holder.budgetAccount.setText(accountsDbAdapter.getAccountFullName(budgetAmount.getAccountUID()));
+            holder.budgetAmount.setText(projectedAmount.formattedString());
+
+            Money spentAmount = accountsDbAdapter.getAccountBalance(budgetAmount.getAccountUID(),
+                    mBudget.getStartofCurrentPeriod(), mBudget.getEndOfCurrentPeriod());
+
+            holder.budgetSpent.setText(spentAmount.abs().formattedString());
+            holder.budgetLeft.setText(projectedAmount.subtract(spentAmount.abs()).formattedString());
+
+            double budgetProgress = 0;
+            if (projectedAmount.asDouble() != 0){
+                budgetProgress = spentAmount.asBigDecimal().divide(projectedAmount.asBigDecimal(),
+                        spentAmount.getCurrency().getDefaultFractionDigits(), RoundingMode.HALF_EVEN)
+                        .doubleValue();
+            }
+
+            holder.budgetIndicator.setProgress((int) (budgetProgress * 100));
+            holder.budgetSpent.setTextColor(BudgetsActivity.getBudgetProgressColor(1 - budgetProgress));
+            holder.budgetLeft.setTextColor(BudgetsActivity.getBudgetProgressColor(1 - budgetProgress));
+
+            generateChartData(holder.budgetChart, budgetAmount);
+
+            holder.itemView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    Intent intent = new Intent(getActivity(), TransactionsActivity.class);
+                    intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, mBudgetAmounts.get(position).getAccountUID());
+                    startActivityForResult(intent, 0x10);
+                }
+            });
+        }
+
+        /**
+         * Generate the chart data for the chart
+         * @param barChart View where to display the chart
+         * @param budgetAmount BudgetAmount to visualize
+         */
+        public void generateChartData(BarChart barChart, BudgetAmount budgetAmount) {
+            // FIXME: 25.10.15 chart is broken
+
+            AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
+
+            List<BarEntry> barEntries = new ArrayList<>();
+            List<String> xVals = new ArrayList<>();
+
+            //todo: refactor getNumberOfPeriods into budget
+            int budgetPeriods = (int) mBudget.getNumberOfPeriods();
+            budgetPeriods = budgetPeriods == 0 ? 12 : budgetPeriods;
+            int periods = mBudget.getRecurrence().getNumberOfPeriods(budgetPeriods);
+
+            for (int periodNum = 1; periodNum <= periods; periodNum++) {
+                BigDecimal amount = accountsDbAdapter.getAccountBalance(budgetAmount.getAccountUID(),
+                        mBudget.getStartOfPeriod(periodNum), mBudget.getEndOfPeriod(periodNum))
+                        .asBigDecimal();
+
+                if (amount.equals(BigDecimal.ZERO))
+                    continue;
+
+                barEntries.add(new BarEntry(amount.floatValue(), periodNum));
+                xVals.add(mBudget.getRecurrence().getTextOfCurrentPeriod(periodNum));
+            }
+
+            String label = accountsDbAdapter.getAccountName(budgetAmount.getAccountUID());
+            BarDataSet barDataSet = new BarDataSet(barEntries, label);
+
+            BarData barData = new BarData(xVals, barDataSet);
+            LimitLine limitLine = new LimitLine(budgetAmount.getAmount().asBigDecimal().floatValue());
+            limitLine.setLineWidth(2f);
+            limitLine.setLineColor(Color.RED);
+
+
+            barChart.setData(barData);
+            barChart.getAxisLeft().addLimitLine(limitLine);
+            BigDecimal maxValue = budgetAmount.getAmount().add(budgetAmount.getAmount().multiply(new BigDecimal("0.2"))).asBigDecimal();
+            barChart.getAxisLeft().setAxisMaxValue(maxValue.floatValue());
+            barChart.animateX(1000);
+            barChart.setAutoScaleMinMaxEnabled(true);
+            barChart.setDrawValueAboveBar(true);
+            barChart.invalidate();
+        }
+
+        @Override
+        public int getItemCount() {
+            return mBudgetAmounts.size();
+        }
+
+        class BudgetAmountViewHolder extends RecyclerView.ViewHolder {
+            @Bind(R.id.budget_account)      TextView budgetAccount;
+            @Bind(R.id.budget_amount)       TextView budgetAmount;
+            @Bind(R.id.budget_spent)        TextView budgetSpent;
+            @Bind(R.id.budget_left)         TextView budgetLeft;
+            @Bind(R.id.budget_indicator)    ProgressBar budgetIndicator;
+            @Bind(R.id.budget_chart)        BarChart budgetChart;
+
+            public BudgetAmountViewHolder(View itemView) {
+                super(itemView);
+                ButterKnife.bind(this, itemView);
+            }
+
+        }
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
new file mode 100644
index 00000000..4ec87947
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
@@ -0,0 +1,362 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.budget;
+
+import android.database.Cursor;
+import android.inputmethodservice.KeyboardView;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.design.widget.TextInputLayout;
+import android.support.v4.app.Fragment;
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ImageView;
+import android.widget.Spinner;
+import android.widget.TableLayout;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;
+import com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter;
+import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetsDbAdapter;
+import org.gnucash.android.model.Budget;
+import org.gnucash.android.model.BudgetAmount;
+import org.gnucash.android.model.Commodity;
+import org.gnucash.android.model.Money;
+import org.gnucash.android.model.ScheduledAction;
+import org.gnucash.android.ui.common.UxArgument;
+import org.gnucash.android.ui.util.RecurrenceParser;
+import org.gnucash.android.ui.util.RecurrenceViewClickListener;
+import org.gnucash.android.ui.util.widget.CalculatorEditText;
+import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
+
+import java.math.BigDecimal;
+import java.util.ArrayList;
+import java.util.Currency;
+import java.util.List;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
+/**
+ * Fragment for creating or editing Budgets
+ */
+public class BudgetFormFragment extends Fragment implements RecurrencePickerDialogFragment.OnRecurrenceSetListener {
+
+    @Bind(R.id.input_budget_name)   EditText mBudgetNameInput;
+    @Bind(R.id.input_description)   EditText mDescriptionInput;
+    @Bind(R.id.input_recurrence)    TextView mRecurrenceInput;
+    @Bind(R.id.name_text_input_layout)  TextInputLayout mNameTextInputLayout;
+    @Bind(R.id.calculator_keyboard)     KeyboardView mKeyboardView;
+    @Bind(R.id.budget_amount_table_layout) TableLayout mBudgetAmountTableLayout;
+    @Bind(R.id.btn_add_budget_amount)   Button mAddBudgetAmount;
+
+    EventRecurrence mEventRecurrence = new EventRecurrence();
+    String mRecurrenceRule;
+
+    private Cursor mAccountCursor;
+    private AccountsDbAdapter mAccountsDbAdapter;
+    private BudgetsDbAdapter mBudgetsDbAdapter;
+
+    private Budget mBudget;
+    private QualifiedAccountNameCursorAdapter mAccountCursorAdapter;
+
+    private List<View> mBudgetAmountViews = new ArrayList<>();
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_budget_form, container, false);
+        ButterKnife.bind(this, view);
+
+        setupAccountSpinnerAdapter();
+        mRecurrenceInput.setOnClickListener(
+                new RecurrenceViewClickListener((AppCompatActivity) getActivity(), mRecurrenceRule, this));
+
+        mAddBudgetAmount.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                addBudgetAmountView(null);
+            }
+        });
+        return view;
+    }
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        mAccountsDbAdapter = AccountsDbAdapter.getInstance();
+        mBudgetsDbAdapter = BudgetsDbAdapter.getInstance();
+    }
+
+    @Override
+    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+        ActionBar actionbar = ((AppCompatActivity) getActivity()).getSupportActionBar();
+        actionbar.setTitle("Create Budget");
+
+        setHasOptionsMenu(true);
+
+        String budgetUID = getArguments().getString(UxArgument.BUDGET_UID);
+        if (budgetUID != null){ //if we are editing the budget
+            initViews(mBudget = mBudgetsDbAdapter.getRecord(budgetUID));
+            loadBudgetAmountViews(mBudget.getCompactedBudgetAmounts());
+        } else {
+            BudgetAmountViewHolder viewHolder = (BudgetAmountViewHolder) addBudgetAmountView(null).getTag();
+            viewHolder.removeItemBtn.setVisibility(View.GONE); //there should always be at least one
+        }
+    }
+
+    /**
+     * Load views for the budget amounts
+     * @param budgetAmounts List of {@link BudgetAmount}s
+     */
+    private void loadBudgetAmountViews(List<BudgetAmount> budgetAmounts){
+        for (BudgetAmount budgetAmount : budgetAmounts) {
+            addBudgetAmountView(budgetAmount);
+        }
+    }
+
+    /**
+     * Extract {@link BudgetAmount}s from the views
+     * @return List of budget amounts
+     */
+    private List<BudgetAmount> extractBudgetAmounts(){
+        List<BudgetAmount> budgetAmounts = new ArrayList<>();
+        for (View view : mBudgetAmountViews) {
+            BudgetAmountViewHolder viewHolder = (BudgetAmountViewHolder) view.getTag();
+            BigDecimal amountValue = viewHolder.amountEditText.getValue();
+            if (amountValue == null)
+                continue;
+            Money amount = new Money(amountValue, Commodity.DEFAULT_COMMODITY);
+            String accountUID = mAccountsDbAdapter.getUID(viewHolder.budgetAccountSpinner.getSelectedItemId());
+            BudgetAmount budgetAmount = new BudgetAmount(amount, accountUID);
+            budgetAmounts.add(budgetAmount);
+        }
+        return budgetAmounts;
+    }
+
+    /**
+     * Inflates a new BudgetAmount item view and adds it to the UI.
+     * <p>If the {@code budgetAmount} is not null, then it is used to initialize the view</p>
+     * @param budgetAmount Budget amount
+     */
+    private View addBudgetAmountView(BudgetAmount budgetAmount){
+        LayoutInflater layoutInflater = getActivity().getLayoutInflater();
+        View budgetAmountView = layoutInflater.inflate(R.layout.item_budget_amount,
+                mBudgetAmountTableLayout, false);
+        BudgetAmountViewHolder viewHolder = new BudgetAmountViewHolder(budgetAmountView);
+        if (budgetAmount != null){
+            viewHolder.bindViews(budgetAmount);
+        }
+        mBudgetAmountTableLayout.addView(budgetAmountView, 0);
+        mBudgetAmountViews.add(budgetAmountView);
+//        mScrollView.fullScroll(ScrollView.FOCUS_DOWN);
+        return budgetAmountView;
+    }
+
+    /**
+     * Initialize views when editing an existing budget
+     * @param budget Budget to use to initialize the views
+     */
+    private void initViews(Budget budget){
+        mBudgetNameInput.setText(budget.getName());
+        mDescriptionInput.setText(budget.getDescription());
+
+        String recurrenceRuleString = budget.getRecurrence().getRuleString();
+        mRecurrenceRule = recurrenceRuleString;
+        mEventRecurrence.parse(recurrenceRuleString);
+        mRecurrenceInput.setText(budget.getRecurrence().getRepeatString());
+    }
+
+    /**
+     * Loads the accounts in the spinner
+     */
+    private void setupAccountSpinnerAdapter(){
+        String conditions = "(" + DatabaseSchema.AccountEntry.COLUMN_HIDDEN + " = 0 )";
+
+        if (mAccountCursor != null) {
+            mAccountCursor.close();
+        }
+        mAccountCursor = mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions, null);
+
+        mAccountCursorAdapter = new QualifiedAccountNameCursorAdapter(getActivity(), mAccountCursor);
+    }
+
+    /**
+     * Checks that this budget can be saved
+     * Also sets the appropriate error messages on the relevant views
+     * <p>For a budget to be saved, it needs to have a name, an amount and a schedule</p>
+     * @return {@code true} if the budget can be saved, {@code false} otherwise
+     */
+    private boolean canSave(){
+        for (View budgetAmountView : mBudgetAmountViews) {
+            BudgetAmountViewHolder viewHolder = (BudgetAmountViewHolder) budgetAmountView.getTag();
+            viewHolder.amountEditText.evaluate();
+            if (viewHolder.amountEditText.getError() != null){
+                return false;
+            }
+            //at least one account should be loaded (don't create budget with empty account tree
+            if (viewHolder.budgetAccountSpinner.getCount() == 0){
+                Toast.makeText(getActivity(), "You need an account hierarchy to create a budget!",
+                        Toast.LENGTH_SHORT).show();
+                return false;
+            }
+        }
+
+        if (mEventRecurrence.until != null && mEventRecurrence.until.length() > 0
+                || mEventRecurrence.count <= 0){
+            Toast.makeText(getActivity(),
+                    "Set a number periods in the recurrence dialog to save the budget",
+                    Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+        String budgetName = mBudgetNameInput.getText().toString();
+        boolean canSave = mRecurrenceRule != null
+                && !budgetName.isEmpty();
+        if (!canSave){
+
+            if (budgetName.isEmpty()){
+                mNameTextInputLayout.setError("A name is required");
+                mNameTextInputLayout.setErrorEnabled(true);
+            } else {
+                mNameTextInputLayout.setErrorEnabled(false);
+            }
+
+            if (mRecurrenceRule == null){
+                Toast.makeText(getActivity(), "Set a repeat pattern to create a budget!", Toast.LENGTH_SHORT).show();
+            }
+        }
+
+        return canSave;
+    }
+
+    /**
+     * Extracts the information from the form and saves the budget
+     */
+    private void saveBudget(){
+        if (!canSave())
+            return;
+        String name = mBudgetNameInput.getText().toString().trim();
+
+
+        if (mBudget == null){
+            mBudget = new Budget(name);
+        } else {
+            mBudget.setName(name);
+        }
+
+        // TODO: 22.10.2015 set the period num of the budget amount
+        mBudget.setBudgetAmounts(extractBudgetAmounts());
+
+        mBudget.setDescription(mDescriptionInput.getText().toString().trim());
+
+        mBudget.setRecurrence(RecurrenceParser.parse(mEventRecurrence));
+
+        mBudgetsDbAdapter.addRecord(mBudget);
+        getActivity().finish();
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.default_save_actions, menu);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()){
+            case R.id.menu_save:
+                saveBudget();
+                return true;
+        }
+        return false;
+    }
+
+    @Override
+    public void onRecurrenceSet(String rrule) {
+        mRecurrenceRule = rrule;
+        String repeatString = getString(R.string.label_tap_to_create_schedule);
+        if (mRecurrenceRule != null){
+            mEventRecurrence.parse(mRecurrenceRule);
+            repeatString = EventRecurrenceFormatter.getRepeatString(getActivity(), getResources(), mEventRecurrence, true);
+        }
+
+        mRecurrenceInput.setText(repeatString);
+    }
+
+    /**
+     * View holder for budget amounts
+     */
+    class BudgetAmountViewHolder{
+        @Bind(R.id.currency_symbol) TextView currencySymbolTextView;
+        @Bind(R.id.input_budget_amount) CalculatorEditText amountEditText;
+        @Bind(R.id.input_budget_account_spinner) Spinner budgetAccountSpinner;
+        @Bind(R.id.btn_remove_item) ImageView removeItemBtn;
+        View itemView;
+
+        public BudgetAmountViewHolder(View view){
+            itemView = view;
+            ButterKnife.bind(this, view);
+            itemView.setTag(this);
+
+            amountEditText.bindListeners(mKeyboardView);
+            budgetAccountSpinner.setAdapter(mAccountCursorAdapter);
+
+            budgetAccountSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
+                @Override
+                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
+                    String currencyCode = mAccountsDbAdapter.getCurrencyCode(mAccountsDbAdapter.getUID(id));
+                    Currency currency = Currency.getInstance(currencyCode);
+                    currencySymbolTextView.setText(currency.getSymbol());
+                }
+
+                @Override
+                public void onNothingSelected(AdapterView<?> parent) {
+                    //nothing to see here, move along
+                }
+            });
+
+            removeItemBtn.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    mBudgetAmountTableLayout.removeView(itemView);
+                    mBudgetAmountViews.remove(itemView);
+                }
+            });
+        }
+
+        public void bindViews(BudgetAmount budgetAmount){
+            amountEditText.setValue(budgetAmount.getAmount().asBigDecimal());
+            budgetAccountSpinner.setSelection(mAccountCursorAdapter.getPosition(budgetAmount.getAccountUID()));
+        }
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
new file mode 100644
index 00000000..ab90c9d4
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
@@ -0,0 +1,327 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.budget;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.content.res.Configuration;
+import android.database.Cursor;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v4.app.LoaderManager;
+import android.support.v4.content.Loader;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.GridLayoutManager;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.PopupMenu;
+import android.support.v7.widget.RecyclerView;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.DatabaseCursorLoader;
+import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetsDbAdapter;
+import org.gnucash.android.model.Budget;
+import org.gnucash.android.model.BudgetAmount;
+import org.gnucash.android.model.Money;
+import org.gnucash.android.ui.common.FormActivity;
+import org.gnucash.android.ui.common.UxArgument;
+import org.gnucash.android.ui.util.CursorRecyclerAdapter;
+import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
+
+import java.math.BigDecimal;
+import java.math.RoundingMode;
+import java.util.Currency;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
+/**
+ * Budget list fragment
+ */
+public class BudgetListFragment extends Fragment implements Refreshable,
+        LoaderManager.LoaderCallbacks<Cursor> {
+
+    private static final String LOG_TAG = "BudgetListFragment";
+    private static final int REQUEST_EDIT_BUDGET = 0xB;
+    private static final int REQUEST_OPEN_ACCOUNT = 0xC;
+
+    private BudgetRecyclerAdapter mBudgetRecyclerAdapter;
+
+    private BudgetsDbAdapter mBudgetsDbAdapter;
+
+    @Bind(R.id.budget_recycler_view) EmptyRecyclerView mRecyclerView;
+    @Bind(R.id.empty_view) Button mProposeBudgets;
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_budget_list, container, false);
+        ButterKnife.bind(this, view);
+
+        mRecyclerView.setHasFixedSize(true);
+        mRecyclerView.setEmptyView(mProposeBudgets);
+
+        if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
+            GridLayoutManager gridLayoutManager = new GridLayoutManager(getActivity(), 2);
+            mRecyclerView.setLayoutManager(gridLayoutManager);
+        } else {
+            LinearLayoutManager mLayoutManager = new LinearLayoutManager(getActivity());
+            mRecyclerView.setLayoutManager(mLayoutManager);
+        }
+        return view;
+    }
+
+    @Override
+    public void onActivityCreated(Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+
+        mBudgetsDbAdapter = BudgetsDbAdapter.getInstance();
+        mBudgetRecyclerAdapter = new BudgetRecyclerAdapter(null);
+
+        mRecyclerView.setAdapter(mBudgetRecyclerAdapter);
+
+        getLoaderManager().initLoader(0, null, this);
+    }
+
+    @Override
+    public Loader<Cursor> onCreateLoader(int id, Bundle args) {
+        Log.d(LOG_TAG, "Creating the accounts loader");
+        return new BudgetsCursorLoader(getActivity());
+    }
+
+    @Override
+    public void onLoadFinished(Loader<Cursor> loaderCursor, Cursor cursor) {
+        Log.d(LOG_TAG, "Budget loader finished. Swapping in cursor");
+        mBudgetRecyclerAdapter.swapCursor(cursor);
+        mBudgetRecyclerAdapter.notifyDataSetChanged();
+    }
+
+    @Override
+    public void onLoaderReset(Loader<Cursor> arg0) {
+        Log.d(LOG_TAG, "Resetting the accounts loader");
+        mBudgetRecyclerAdapter.swapCursor(null);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        refresh();
+        getActivity().findViewById(R.id.fab_create_budget).setVisibility(View.VISIBLE);
+        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle("Budgets");
+    }
+
+    @Override
+    public void refresh() {
+        getLoaderManager().restartLoader(0, null, this);
+    }
+
+    /**
+     * This method does nothing with the GUID.
+     * Is equivalent to calling {@link #refresh()}
+     * @param uid GUID of relevant item to be refreshed
+     */
+    @Override
+    public void refresh(String uid) {
+        refresh();
+    }
+
+    /**
+     * Opens the budget detail fragment
+     * @param budgetUID GUID of budget
+     */
+    public void onClickBudget(String budgetUID){
+        FragmentManager fragmentManager = getActivity().getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction = fragmentManager
+                .beginTransaction();
+
+        fragmentTransaction.replace(R.id.fragment_container, BudgetDetailFragment.newInstance(budgetUID));
+        fragmentTransaction.addToBackStack(null);
+        fragmentTransaction.commit();
+    }
+
+    /**
+     * Launches the FormActivity for editing the budget
+     * @param budgetId Db record Id of the budget
+     */
+    private void editBudget(long budgetId){
+        Intent addAccountIntent = new Intent(getActivity(), FormActivity.class);
+        addAccountIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
+        addAccountIntent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.BUDGET.name());
+        addAccountIntent.putExtra(UxArgument.BUDGET_UID, mBudgetsDbAdapter.getUID(budgetId));
+        startActivityForResult(addAccountIntent, REQUEST_EDIT_BUDGET);
+    }
+
+    /**
+     * Delete the budget from the database
+     * @param budgetId Database record ID
+     */
+    private void deleteBudget(long budgetId){
+        BudgetsDbAdapter.getInstance().deleteRecord(budgetId);
+        refresh();
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (resultCode == Activity.RESULT_OK){
+            refresh();
+        }
+    }
+
+    class BudgetRecyclerAdapter extends CursorRecyclerAdapter<BudgetRecyclerAdapter.BudgetViewHolder>{
+
+        public BudgetRecyclerAdapter(Cursor cursor) {
+            super(cursor);
+        }
+
+        @Override
+        public void onBindViewHolderCursor(BudgetViewHolder holder, Cursor cursor) {
+            final Budget budget = mBudgetsDbAdapter.buildModelInstance(cursor);
+            holder.budgetId = mBudgetsDbAdapter.getID(budget.getUID());
+
+            holder.budgetName.setText(budget.getName());
+
+            AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
+            String accountString;
+            int numberOfAccounts = budget.getNumberOfAccounts();
+            if (numberOfAccounts == 1){
+                accountString = accountsDbAdapter.getAccountFullName(budget.getBudgetAmounts().get(0).getAccountUID());
+            } else {
+                accountString = numberOfAccounts + " budgeted accounts";
+            }
+            holder.accountName.setText(accountString);
+
+            holder.budgetRecurrence.setText(budget.getRecurrence().getRepeatString() + " - "
+                    + budget.getRecurrence().getDaysLeftInCurrentPeriod() + " days left");
+
+            BigDecimal spentAmountValue = BigDecimal.ZERO;
+            for (BudgetAmount budgetAmount : budget.getCompactedBudgetAmounts()) {
+                Money balance = accountsDbAdapter.getAccountBalance(budgetAmount.getAccountUID(),
+                        budget.getStartofCurrentPeriod(), budget.getEndOfCurrentPeriod());
+                spentAmountValue = spentAmountValue.add(balance.asBigDecimal());
+            }
+
+            Money budgetTotal = budget.getAmountSum();
+            Currency currency = budgetTotal.getCurrency();
+            String usedAmount = currency.getSymbol() + spentAmountValue+ " of "
+                    + budgetTotal.formattedString();
+            holder.budgetAmount.setText(usedAmount);
+
+            double budgetProgress = spentAmountValue.divide(budgetTotal.asBigDecimal(),
+                    currency.getDefaultFractionDigits(), RoundingMode.HALF_EVEN)
+                    .doubleValue();
+            holder.budgetIndicator.setProgress((int) (budgetProgress * 100));
+
+            holder.budgetAmount.setTextColor(BudgetsActivity.getBudgetProgressColor(1 - budgetProgress));
+
+            holder.itemView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    onClickBudget(budget.getUID());
+                }
+            });
+        }
+
+        @Override
+        public BudgetViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+            View v = LayoutInflater.from(parent.getContext())
+                    .inflate(R.layout.cardview_budget, parent, false);
+
+            return new BudgetViewHolder(v);
+        }
+
+        class BudgetViewHolder extends RecyclerView.ViewHolder implements PopupMenu.OnMenuItemClickListener{
+            @Bind(R.id.primary_text)        TextView budgetName;
+            @Bind(R.id.secondary_text)      TextView accountName;
+            @Bind(R.id.budget_amount)       TextView budgetAmount;
+            @Bind(R.id.options_menu)        ImageView optionsMenu;
+            @Bind(R.id.budget_indicator)    ProgressBar budgetIndicator;
+            @Bind(R.id.budget_recurrence)   TextView budgetRecurrence;
+            long budgetId;
+
+            public BudgetViewHolder(View itemView) {
+                super(itemView);
+                ButterKnife.bind(this, itemView);
+
+                optionsMenu.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        android.support.v7.widget.PopupMenu popup = new android.support.v7.widget.PopupMenu(getActivity(), v);
+                        popup.setOnMenuItemClickListener(BudgetViewHolder.this);
+                        MenuInflater inflater = popup.getMenuInflater();
+                        inflater.inflate(R.menu.budget_context_menu, popup.getMenu());
+                        popup.show();
+                    }
+                });
+
+            }
+
+            @Override
+            public boolean onMenuItemClick(MenuItem item) {
+                switch (item.getItemId()){
+                    case R.id.context_menu_edit_budget:
+                        editBudget(budgetId);
+                        return true;
+
+                    case R.id.context_menu_delete:
+                        deleteBudget(budgetId);
+                        return true;
+
+                    default:
+                        return false;
+                }
+            }
+        }
+    }
+
+    /**
+     * Loads Budgets asynchronously from the database
+     */
+    private static class BudgetsCursorLoader extends DatabaseCursorLoader {
+
+        /**
+         * Constructor
+         * Initializes the content observer
+         *
+         * @param context Application context
+         */
+        public BudgetsCursorLoader(Context context) {
+            super(context);
+        }
+
+        @Override
+        public Cursor loadInBackground() {
+            mDatabaseAdapter = BudgetsDbAdapter.getInstance();
+            return mDatabaseAdapter.fetchAllRecords(null, null, DatabaseSchema.BudgetEntry.COLUMN_NAME + " ASC");
+        }
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java
new file mode 100644
index 00000000..7edd4110
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.ui.budget;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v7.app.ActionBar;
+import android.support.v7.widget.Toolbar;
+import android.view.View;
+
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.ui.common.BaseDrawerActivity;
+import org.gnucash.android.ui.common.FormActivity;
+import org.gnucash.android.ui.common.UxArgument;
+
+import butterknife.ButterKnife;
+
+/**
+ * Activity for managing display and editing of budgets
+ */
+public class BudgetsActivity extends BaseDrawerActivity {
+
+    public static final int REQUEST_CREATE_BUDGET = 0xA;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_budgets);
+        setUpDrawer();
+        ButterKnife.bind(this);
+
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+
+        final ActionBar actionBar = getSupportActionBar();
+        assert actionBar != null;
+        actionBar.setTitle("Budgets");
+        actionBar.setDisplayHomeAsUpEnabled(true);
+
+        if (savedInstanceState == null) {
+            FragmentManager fragmentManager = getSupportFragmentManager();
+            FragmentTransaction fragmentTransaction = fragmentManager
+                    .beginTransaction();
+
+            fragmentTransaction.replace(R.id.fragment_container, new BudgetListFragment());
+            fragmentTransaction.commit();
+        }
+    }
+
+    /**
+     * Callback when create budget floating action button is clicked
+     * @param view View which was clicked
+     */
+    public void onCreateBudgetClick(View view){
+        Intent addAccountIntent = new Intent(BudgetsActivity.this, FormActivity.class);
+        addAccountIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
+        addAccountIntent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.BUDGET.name());
+        startActivityForResult(addAccountIntent, REQUEST_CREATE_BUDGET);
+    }
+
+    /**
+     * Returns a color between red and green depending on the value parameter
+     * @param value Value between 0 and 1 indicating the red to green ratio
+     * @return Color between red and green
+     */
+    public static int getBudgetProgressColor(double value){
+        return GnuCashApplication.darken(android.graphics.Color.HSVToColor(new float[]{(float)value*120f,1f,1f}));
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 49ffe5ad..6c1f4cf5 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -32,6 +32,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.ui.account.AccountsActivity;
+import org.gnucash.android.ui.budget.BudgetsActivity;
 import org.gnucash.android.ui.passcode.PasscodeLockActivity;
 import org.gnucash.android.ui.report.ReportsActivity;
 import org.gnucash.android.ui.settings.SettingsActivity;
@@ -133,6 +134,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
      * Handler for the navigation drawer items
      * */
     protected void onDrawerMenuItemClicked(int itemId) {
+        mNavigationView.getMenu().findItem(itemId).setChecked(true);
         switch (itemId){
             case R.id.nav_item_open: { //Open... files
                 AccountsActivity.startXmlFileChooser(this);
@@ -152,6 +154,10 @@ protected void onDrawerMenuItemClicked(int itemId) {
                 startActivity(new Intent(this, ReportsActivity.class));
                 break;
 
+            case R.id.nav_item_budgets:
+                startActivity(new Intent(this, BudgetsActivity.class));
+                break;
+
             case R.id.nav_item_scheduled_actions: { //show scheduled transactions
                 Intent intent = new Intent(this, ScheduledActionsActivity.class);
                 intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
@@ -180,13 +186,16 @@ protected void onDrawerMenuItemClicked(int itemId) {
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (resultCode == Activity.RESULT_CANCELED){
-            return;
+            super.onActivityResult(requestCode, resultCode, data);
         }
 
         switch (requestCode) {
             case AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE:
                 AccountsActivity.importXmlFileFromIntent(this, data);
                 break;
+            default:
+                super.onActivityResult(requestCode, resultCode, data);
+                break;
         }
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java b/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
index 4af30535..a079e8cd 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
@@ -28,8 +28,9 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.ui.account.AccountFormFragment;
+import org.gnucash.android.ui.budget.BudgetFormFragment;
 import org.gnucash.android.ui.export.ExportFormFragment;
 import org.gnucash.android.ui.passcode.PasscodeLockActivity;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
@@ -48,7 +49,7 @@
 
     private CalculatorKeyboard mOnBackListener;
 
-    public enum FormType {ACCOUNT, TRANSACTION, EXPORT, SPLIT_EDITOR}
+    public enum FormType {ACCOUNT, TRANSACTION, EXPORT, SPLIT_EDITOR, BUDGET}
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -95,6 +96,10 @@ protected void onCreate(Bundle savedInstanceState) {
                 showSplitEditorFragment(intent.getExtras());
                 break;
 
+            case BUDGET:
+                showBudgetFormFragment(intent.getExtras());
+                break;
+
             default:
                 throw new IllegalArgumentException("No form display type specified");
         }
@@ -165,6 +170,16 @@ private void showSplitEditorFragment(Bundle args){
     }
 
     /**
+     * Load the budget form
+     * @param args View arguments
+     */
+    private void showBudgetFormFragment(Bundle args){
+        BudgetFormFragment budgetFormFragment = new BudgetFormFragment();
+        budgetFormFragment.setArguments(args);
+        showFormFragment(budgetFormFragment);
+    }
+
+    /**
      * Loads the fragment into the fragment container, replacing whatever was there before
      * @param fragment Fragment to be displayed
      */
diff --git a/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java b/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java
index 9226a571..7d29f685 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java
@@ -93,6 +93,11 @@
     public static final String SPLIT_LIST = "split_list";
 
     /**
+     * GUID of a budget
+     */
+    public static final String BUDGET_UID = "budget_uid";
+
+    /**
      * GUID of splits which have been removed from the split editor
      */
     public static String REMOVED_SPLITS = "removed_split_guids";
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 410b48a7..733f5601 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -21,16 +21,13 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
-import android.content.res.Resources;
 import android.os.Build;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentManager;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.SwitchCompat;
-import android.text.format.Time;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -47,17 +44,16 @@
 import android.widget.Spinner;
 import android.widget.TextView;
 
-import com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;
-import com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialog;
+import com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialogFragment;
+import com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialogFragment;
 import com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;
 import com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter;
-import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog;
-import com.crashlytics.android.Crashlytics;
+import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment;
 import com.dropbox.sync.android.DbxAccountManager;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.export.ExportAsyncTask;
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.ExportParams;
@@ -69,14 +65,13 @@
 import org.gnucash.android.ui.settings.SettingsActivity;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.util.RecurrenceParser;
+import org.gnucash.android.ui.util.RecurrenceViewClickListener;
 
 import java.sql.Timestamp;
-import java.text.DateFormat;
 import java.text.ParseException;
 import java.util.Calendar;
 import java.util.Date;
 import java.util.GregorianCalendar;
-import java.util.List;
 
 import butterknife.Bind;
 import butterknife.ButterKnife;
@@ -89,9 +84,9 @@
  * @author Ngewi Fet <ngewif@gmail.com>
  */
 public class ExportFormFragment extends Fragment implements
-		RecurrencePickerDialog.OnRecurrenceSetListener,
-		CalendarDatePickerDialog.OnDateSetListener,
-		RadialTimePickerDialog.OnTimeSetListener {
+		RecurrencePickerDialogFragment.OnRecurrenceSetListener,
+		CalendarDatePickerDialogFragment.OnDateSetListener,
+		RadialTimePickerDialogFragment.OnTimeSetListener {
 		
 	/**
 	 * Spinner for selecting destination for the exported file.
@@ -275,13 +270,11 @@ private void startExport(){
 		exportParameters.setExportTarget(mExportTarget);
 		exportParameters.setDeleteTransactionsAfterExport(mDeleteAllCheckBox.isChecked());
 
-		List<ScheduledAction> scheduledActions = RecurrenceParser.parse(mEventRecurrence,
-				ScheduledAction.ActionType.BACKUP);
-		for (ScheduledAction scheduledAction : scheduledActions) {
-			scheduledAction.setTag(exportParameters.toCsv());
-			scheduledAction.setActionUID(BaseModel.generateUID());
-			ScheduledActionDbAdapter.getInstance().addRecord(scheduledAction);
-		}
+		ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
+		scheduledAction.setRecurrence(RecurrenceParser.parse(mEventRecurrence));
+		scheduledAction.setTag(exportParameters.toCsv());
+		scheduledAction.setActionUID(BaseModel.generateUID());
+		ScheduledActionDbAdapter.getInstance().addRecord(scheduledAction);
 
 		Log.i(TAG, "Commencing async export of transactions");
 		new ExportAsyncTask(getActivity()).execute(exportParameters);
@@ -376,7 +369,7 @@ public void onClick(View v) {
 				int year = calendar.get(Calendar.YEAR);
 				int monthOfYear = calendar.get(Calendar.MONTH);
 				int dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);
-				CalendarDatePickerDialog datePickerDialog = CalendarDatePickerDialog.newInstance(
+				CalendarDatePickerDialogFragment datePickerDialog = CalendarDatePickerDialogFragment.newInstance(
 						ExportFormFragment.this,
 						year, monthOfYear, dayOfMonth);
 				datePickerDialog.show(getFragmentManager(), "date_picker_fragment");
@@ -398,7 +391,7 @@ public void onClick(View v) {
 				Calendar calendar = Calendar.getInstance();
 				calendar.setTimeInMillis(timeMillis);
 
-				RadialTimePickerDialog timePickerDialog = RadialTimePickerDialog.newInstance(
+				RadialTimePickerDialogFragment timePickerDialog = RadialTimePickerDialogFragment.newInstance(
 						ExportFormFragment.this, calendar.get(Calendar.HOUR_OF_DAY),
 						calendar.get(Calendar.MINUTE), true);
 				timePickerDialog.show(getFragmentManager(), "time_picker_dialog_fragment");
@@ -420,30 +413,7 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
 		mExportAllSwitch.setChecked(sharedPrefs.getBoolean(getString(R.string.key_export_all_transactions), false));
 		mDeleteAllCheckBox.setChecked(sharedPrefs.getBoolean(getString(R.string.key_delete_transactions_after_export), false));
 
-		mRecurrenceTextView.setOnClickListener(new View.OnClickListener() {
-			@Override
-			public void onClick(View view) {
-				FragmentManager fm = getActivity().getSupportFragmentManager();
-				Bundle b = new Bundle();
-				Time t = new Time();
-				t.setToNow();
-				b.putLong(RecurrencePickerDialog.BUNDLE_START_TIME_MILLIS, t.toMillis(false));
-				b.putString(RecurrencePickerDialog.BUNDLE_TIME_ZONE, t.timezone);
-
-				// may be more efficient to serialize and pass in EventRecurrence
-				b.putString(RecurrencePickerDialog.BUNDLE_RRULE, mRecurrenceRule);
-
-				RecurrencePickerDialog rpd = (RecurrencePickerDialog) fm.findFragmentByTag(
-						"recurrence_picker");
-				if (rpd != null) {
-					rpd.dismiss();
-				}
-				rpd = new RecurrencePickerDialog();
-				rpd.setArguments(b);
-				rpd.setOnRecurrenceSetListener(ExportFormFragment.this);
-				rpd.show(fm, "recurrence_picker");
-			}
-		});
+		mRecurrenceTextView.setOnClickListener(new RecurrenceViewClickListener((AppCompatActivity) getActivity(), mRecurrenceRule, this));
 
 		//this part (setting the export format) must come after the recurrence view bindings above
         String defaultExportFormat = sharedPrefs.getString(getString(R.string.key_default_export_format), ExportFormat.QIF.name());
@@ -502,7 +472,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
 	}
 
 	@Override
-	public void onDateSet(CalendarDatePickerDialog dialog, int year, int monthOfYear, int dayOfMonth) {
+	public void onDateSet(CalendarDatePickerDialogFragment dialog, int year, int monthOfYear, int dayOfMonth) {
 		Calendar cal = new GregorianCalendar(year, monthOfYear, dayOfMonth);
 		mExportStartDate.setText(TransactionFormFragment.DATE_FORMATTER.format(cal.getTime()));
 		mExportStartCalendar.set(Calendar.YEAR, year);
@@ -511,7 +481,7 @@ public void onDateSet(CalendarDatePickerDialog dialog, int year, int monthOfYear
 	}
 
 	@Override
-	public void onTimeSet(RadialTimePickerDialog dialog, int hourOfDay, int minute) {
+	public void onTimeSet(RadialTimePickerDialogFragment dialog, int hourOfDay, int minute) {
 		Calendar cal = new GregorianCalendar(0, 0, 0, hourOfDay, minute);
 		mExportStartTime.setText(TransactionFormFragment.TIME_FORMATTER.format(cal.getTime()));
 		mExportStartCalendar.set(Calendar.HOUR_OF_DAY, hourOfDay);
diff --git a/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java b/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
index 99f55eab..f37e5211 100644
--- a/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
@@ -36,7 +36,7 @@
 import android.widget.Toast;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.receivers.TransactionAppWidgetProvider;
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BalanceSheetFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BalanceSheetFragment.java
index 79f77a5e..fed3004d 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BalanceSheetFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BalanceSheetFragment.java
@@ -30,7 +30,7 @@
 import android.widget.TextView;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
index 0cd2f3dd..8cee3a92 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
@@ -45,8 +45,8 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.joda.time.LocalDate;
diff --git a/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
index 5c9e12aa..0da60867 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
@@ -43,8 +43,8 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.ui.report.ReportsActivity.GroupInterval;
diff --git a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
index f4b4ea5e..7453262b 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
@@ -41,8 +41,8 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
index 88d2257a..5c523419 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
@@ -41,7 +41,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index a01c9be5..5e7fbeef 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -38,7 +38,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.ui.common.BaseDrawerActivity;
 import org.gnucash.android.ui.report.dialog.DateRangePickerDialogFragment;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
index 5242df81..b1215f19 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
@@ -29,9 +29,8 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.model.Commodity;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.account.AccountsActivity;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllAccountsConfirmationDialog.java b/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllAccountsConfirmationDialog.java
index 11001b53..fb928ee8 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllAccountsConfirmationDialog.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllAccountsConfirmationDialog.java
@@ -26,7 +26,7 @@
 import android.widget.Toast;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransactionsConfirmationDialog.java b/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransactionsConfirmationDialog.java
index 22ae7307..6bb41943 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransactionsConfirmationDialog.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransactionsConfirmationDialog.java
@@ -28,8 +28,8 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index 250a799c..f558623a 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -53,10 +53,10 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.importer.ImportAsyncTask;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
index 2358ddbf..418129a2 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
@@ -51,8 +51,8 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.ScheduledActionDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Transaction;
@@ -470,7 +470,7 @@ public void bindView(View view, Context context, Cursor cursor) {
             if (endTime > 0 && endTime < System.currentTimeMillis()){
                 ((TextView)view.findViewById(R.id.primary_text)).setTextColor(getResources().getColor(android.R.color.darker_gray));
                 descriptionTextView.setText(getString(R.string.label_scheduled_action_ended,
-                        DateFormat.getInstance().format(new Date(scheduledAction.getLastRun()))));
+                        DateFormat.getInstance().format(new Date(scheduledAction.getLastRunTime()))));
             } else {
                 descriptionTextView.setText(scheduledAction.getRepeatString());
             }
@@ -565,7 +565,7 @@ public void bindView(View view, Context context, Cursor cursor) {
             if (endTime > 0 && endTime < System.currentTimeMillis()){
                 ((TextView)view.findViewById(R.id.primary_text)).setTextColor(getResources().getColor(android.R.color.darker_gray));
                 descriptionTextView.setText(getString(R.string.label_scheduled_action_ended,
-                        DateFormat.getInstance().format(new Date(scheduledAction.getLastRun()))));
+                        DateFormat.getInstance().format(new Date(scheduledAction.getLastRunTime()))));
             } else {
                 descriptionTextView.setText(scheduledAction.getRepeatString());
             }
@@ -610,7 +610,7 @@ public Cursor loadInBackground() {
 
             Cursor c = mDatabaseAdapter.fetchAllRecords(
                     DatabaseSchema.ScheduledActionEntry.COLUMN_TYPE + "=?",
-                    new String[]{ScheduledAction.ActionType.BACKUP.name()});
+                    new String[]{ScheduledAction.ActionType.BACKUP.name()}, null);
 
             registerContentObserver(c);
             return c;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
index 0b641606..b4209968 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
@@ -43,8 +43,8 @@
 import android.widget.Toast;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.BaseModel;
@@ -379,7 +379,7 @@ private void saveSplits() {
             split.setType(viewHolder.splitTypeSwitch.getTransactionType());
             split.setUID(viewHolder.splitUidTextView.getText().toString().trim());
             if (viewHolder.quantity != null)
-                split.setQuantity(viewHolder.quantity.absolute());
+                split.setQuantity(viewHolder.quantity.abs());
             splitList.add(split);
         }
         return splitList;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
index 364966a0..173730fe 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
@@ -15,9 +15,9 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.ScheduledActionDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 6cd8d00b..844643bd 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -26,12 +26,10 @@
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentManager;
 import android.support.v4.widget.SimpleCursorAdapter;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.text.format.DateUtils;
-import android.text.format.Time;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -51,22 +49,23 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;
-import com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialog;
+import com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialogFragment;
+import com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialogFragment;
 import com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;
 import com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter;
-import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog;
+import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.ScheduledActionDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
@@ -77,6 +76,7 @@
 import org.gnucash.android.ui.transaction.dialog.TransferFundsDialogFragment;
 import org.gnucash.android.ui.util.OnTransferFundsListener;
 import org.gnucash.android.ui.util.RecurrenceParser;
+import org.gnucash.android.ui.util.RecurrenceViewClickListener;
 import org.gnucash.android.ui.util.widget.CalculatorEditText;
 import org.gnucash.android.ui.util.widget.TransactionTypeSwitch;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
@@ -101,10 +101,9 @@
  * @author Ngewi Fet <ngewif@gmail.com>
  */
 public class TransactionFormFragment extends Fragment implements
-        CalendarDatePickerDialog.OnDateSetListener, RadialTimePickerDialog.OnTimeSetListener,
-        RecurrencePickerDialog.OnRecurrenceSetListener, OnTransferFundsListener {
+        CalendarDatePickerDialogFragment.OnDateSetListener, RadialTimePickerDialogFragment.OnTimeSetListener,
+        RecurrencePickerDialogFragment.OnRecurrenceSetListener, OnTransferFundsListener {
 
-    private static final String FRAGMENT_TAG_RECURRENCE_PICKER  = "recurrence_picker";
     private static final int REQUEST_SPLIT_EDITOR = 0x11;
 
     /**
@@ -120,7 +119,7 @@
 	/**
 	 * Adapter for transfer account spinner
 	 */
-	private SimpleCursorAdapter mCursorAdapter;
+	private QualifiedAccountNameCursorAdapter mAccountCursorAdapter;
 
 	/**
 	 * Cursor for transfer account spinner
@@ -275,7 +274,7 @@ private void startTransferFunds() {
         BigDecimal amountBigd = mAmountEditText.getValue();
         if (amountBigd.equals(BigDecimal.ZERO))
             return;
-        Money amount 	= new Money(amountBigd, Commodity.getInstance(fromCurrency.getCurrencyCode())).absolute();
+        Money amount 	= new Money(amountBigd, Commodity.getInstance(fromCurrency.getCurrencyCode())).abs();
 
         TransferFundsDialogFragment fragment
                 = TransferFundsDialogFragment.getInstance(amount, targetCurrency, this);
@@ -574,8 +573,8 @@ private void updateTransferAccountsList(){
         }
 		mCursor = mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions, new String[]{mAccountUID, AccountType.ROOT.name()});
 
-        mCursorAdapter = new QualifiedAccountNameCursorAdapter(getActivity(), mCursor);
-		mTransferAccountSpinner.setAdapter(mCursorAdapter);
+        mAccountCursorAdapter = new QualifiedAccountNameCursorAdapter(getActivity(), mCursor);
+		mTransferAccountSpinner.setAdapter(mAccountCursorAdapter);
 	}
 
     /**
@@ -638,7 +637,7 @@ public void onClick(View v) {
                 int year = calendar.get(Calendar.YEAR);
                 int monthOfYear = calendar.get(Calendar.MONTH);
                 int dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);
-                CalendarDatePickerDialog datePickerDialog = CalendarDatePickerDialog.newInstance(
+                CalendarDatePickerDialogFragment datePickerDialog = CalendarDatePickerDialogFragment.newInstance(
                         TransactionFormFragment.this,
                         year, monthOfYear, dayOfMonth);
                 datePickerDialog.show(getFragmentManager(), "date_picker_fragment");
@@ -660,37 +659,14 @@ public void onClick(View v) {
                 Calendar calendar = Calendar.getInstance();
                 calendar.setTimeInMillis(timeMillis);
 
-                RadialTimePickerDialog timePickerDialog = RadialTimePickerDialog.newInstance(
+                RadialTimePickerDialogFragment timePickerDialog = RadialTimePickerDialogFragment.newInstance(
                         TransactionFormFragment.this, calendar.get(Calendar.HOUR_OF_DAY),
                         calendar.get(Calendar.MINUTE), true);
                 timePickerDialog.show(getFragmentManager(), "time_picker_dialog_fragment");
             }
         });
 
-        mRecurrenceTextView.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                FragmentManager fm = getActivity().getSupportFragmentManager();
-                Bundle b = new Bundle();
-                Time t = new Time();
-                t.setToNow();
-                b.putLong(RecurrencePickerDialog.BUNDLE_START_TIME_MILLIS, t.toMillis(false));
-                b.putString(RecurrencePickerDialog.BUNDLE_TIME_ZONE, t.timezone);
-
-                // may be more efficient to serialize and pass in EventRecurrence
-                b.putString(RecurrencePickerDialog.BUNDLE_RRULE, mRecurrenceRule);
-
-                RecurrencePickerDialog rpd = (RecurrencePickerDialog) fm.findFragmentByTag(
-                        FRAGMENT_TAG_RECURRENCE_PICKER);
-                if (rpd != null) {
-                    rpd.dismiss();
-                }
-                rpd = new RecurrencePickerDialog();
-                rpd.setArguments(b);
-                rpd.setOnRecurrenceSetListener(TransactionFormFragment.this);
-                rpd.show(fm, FRAGMENT_TAG_RECURRENCE_PICKER);
-            }
-        });
+        mRecurrenceTextView.setOnClickListener(new RecurrenceViewClickListener((AppCompatActivity) getActivity(), mRecurrenceRule, this));
 	}
 
     /**
@@ -698,18 +674,9 @@ public void onClick(View view) {
      * @param accountId Database ID of the transfer account
      */
 	private void setSelectedTransferAccount(long accountId){
-		for (int pos = 0; pos < mCursorAdapter.getCount(); pos++) {
-			if (mCursorAdapter.getItemId(pos) == accountId){
-                final int position = pos;
-                mTransferAccountSpinner.postDelayed(new Runnable() {
-                    @Override
-                    public void run() {
-                        mTransferAccountSpinner.setSelection(position);
-                    }
-                }, 100);
-				break;
-			}
-		}
+        int position = mAccountCursorAdapter.getPosition(mAccountsDbAdapter.getUID(accountId));
+        if (position >= 0)
+            mTransferAccountSpinner.setSelection(position);
 	}
 
 	/**
@@ -736,7 +703,7 @@ private void saveNewTransaction() {
         }
 
 		Currency currency = Currency.getInstance(mTransactionsDbAdapter.getAccountCurrencyCode(mAccountUID));
-		Money amount 	= new Money(amountBigd, Commodity.getInstance(currency.getCurrencyCode())).absolute();
+		Money amount 	= new Money(amountBigd, Commodity.getInstance(currency.getCurrencyCode())).abs();
 
         if (mSplitsList.size() == 1){ //means split editor was opened but no split was added
             String transferAcctUID;
@@ -852,33 +819,29 @@ private void saveNewTransaction() {
     private void scheduleRecurringTransaction(String transactionUID) {
         ScheduledActionDbAdapter scheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
 
-        List<ScheduledAction> events = RecurrenceParser.parse(mEventRecurrence,
-                ScheduledAction.ActionType.TRANSACTION);
+        Recurrence recurrence = RecurrenceParser.parse(mEventRecurrence);
+
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        scheduledAction.setRecurrence(recurrence);
 
         String scheduledActionUID = getArguments().getString(UxArgument.SCHEDULED_ACTION_UID);
 
         if (scheduledActionUID != null) { //if we are editing an existing schedule
-            if ( events.size() == 1) {
-                ScheduledAction scheduledAction = events.get(0);
+            if (recurrence == null){
+                scheduledActionDbAdapter.deleteRecord(scheduledActionUID);
+            } else {
                 scheduledAction.setUID(scheduledActionUID);
                 scheduledActionDbAdapter.updateRecurrenceAttributes(scheduledAction);
                 Toast.makeText(getActivity(), "Updated transaction schedule", Toast.LENGTH_SHORT).show();
-                return;
-            } else {
-                //if user changed scheduled action so that more than one new schedule would be saved,
-                // then remove the old one
-                ScheduledActionDbAdapter.getInstance().deleteRecord(scheduledActionUID);
+            }
+        } else {
+            if (recurrence != null) {
+                scheduledAction.setActionUID(transactionUID);
+                scheduledActionDbAdapter.addRecord(scheduledAction);
+                Toast.makeText(getActivity(), R.string.toast_scheduled_recurring_transaction, Toast.LENGTH_SHORT).show();
             }
         }
 
-        for (ScheduledAction event : events) {
-            event.setActionUID(transactionUID);
-            scheduledActionDbAdapter.addRecord(event);
-
-            Log.i("TransactionFormFragment", event.toString());
-        }
-        Toast.makeText(getActivity(), R.string.toast_scheduled_recurring_transaction, Toast.LENGTH_SHORT).show();
-
     }
 
 
@@ -970,7 +933,7 @@ private void finish(int resultCode) {
 	}
 
     @Override
-    public void onDateSet(CalendarDatePickerDialog calendarDatePickerDialog, int year, int monthOfYear, int dayOfMonth) {
+    public void onDateSet(CalendarDatePickerDialogFragment calendarDatePickerDialog, int year, int monthOfYear, int dayOfMonth) {
         Calendar cal = new GregorianCalendar(year, monthOfYear, dayOfMonth);
         mDateTextView.setText(DATE_FORMATTER.format(cal.getTime()));
         mDate.set(Calendar.YEAR, year);
@@ -979,7 +942,7 @@ public void onDateSet(CalendarDatePickerDialog calendarDatePickerDialog, int yea
     }
 
     @Override
-    public void onTimeSet(RadialTimePickerDialog radialTimePickerDialog, int hourOfDay, int minute) {
+    public void onTimeSet(RadialTimePickerDialogFragment radialTimePickerDialog, int hourOfDay, int minute) {
         Calendar cal = new GregorianCalendar(0, 0, 0, hourOfDay, minute);
         mTimeTextView.setText(TIME_FORMATTER.format(cal.getTime()));
         mTime.set(Calendar.HOUR_OF_DAY, hourOfDay);
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
index 350f0a50..0ea57b93 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -45,9 +45,9 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.common.BaseDrawerActivity;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index e59155ea..70ce38aa 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -42,11 +42,11 @@
 import android.widget.TextView;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
index 2122c96c..c74be57c 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
@@ -29,9 +29,9 @@
 import android.widget.Toast;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
index 3b9bcdbb..06998d7d 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
@@ -24,8 +24,8 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.common.UxArgument;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 20b28c6f..4cf1f4a8 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -35,8 +35,8 @@
 import android.widget.TextView;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.CommoditiesDbAdapter;
-import org.gnucash.android.db.PricesDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.PricesDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Price;
diff --git a/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java b/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
index 9dbcb6a5..45f02d4f 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
@@ -24,9 +24,8 @@
 
 import com.crashlytics.android.Crashlytics;
 
-import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
index 66041934..f408a8dd 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
@@ -20,8 +20,11 @@
 
 import com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;
 
+import org.gnucash.android.model.PeriodType;
+import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 
+import java.sql.Timestamp;
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.List;
@@ -40,98 +43,61 @@
     public static final long MONTH_MILLIS   = 30*DAY_MILLIS;
     public static final long YEAR_MILLIS    = 12*MONTH_MILLIS;
 
-
     /**
-     * Parses an event recurrence to produce {@link org.gnucash.android.model.ScheduledAction}s for each recurrence.
-     * <p>Each {@link org.gnucash.android.model.ScheduledAction} represents just one simple repeating schedule, e.g. every Monday.
-     * If there are multiple schedules in the recurrence e.g. every Monday and Tuesday, then two ScheduledEvents will be generated</p>
-     * @param eventRecurrence Event recurrence pattern obtained from dialog
-     * @param actionType Type of event recurrence
-     * @return List of ScheduledEvents
+     * Parse an {@link EventRecurrence} into a {@link Recurrence} object
+     * @param eventRecurrence EventRecurrence object
+     * @return Recurrence object
      */
-    public static List<ScheduledAction> parse(EventRecurrence eventRecurrence, ScheduledAction.ActionType actionType){
-        long period;
-        List<ScheduledAction> scheduledActionList = new ArrayList<ScheduledAction>();
+    public static Recurrence parse(EventRecurrence eventRecurrence){
         if (eventRecurrence == null)
-            return scheduledActionList;
+            return null;
 
+        PeriodType periodType;
         switch(eventRecurrence.freq){
-            case EventRecurrence.DAILY: {
-                if (eventRecurrence.interval == 0) //I assume this is a bug from the picker library
-                    period = DAY_MILLIS;
-                else
-                    period = eventRecurrence.interval * DAY_MILLIS;
-
-                ScheduledAction scheduledAction = new ScheduledAction(actionType);
-                scheduledAction.setPeriod(period);
-                parseEndTime(eventRecurrence, scheduledAction);
-                scheduledActionList.add(scheduledAction);
-            }
+            case EventRecurrence.DAILY:
+                periodType = PeriodType.DAY;
                 break;
 
-            case EventRecurrence.WEEKLY: {
-                if (eventRecurrence.interval == 0)
-                    period = WEEK_MILLIS;
-                else
-                    period = eventRecurrence.interval * WEEK_MILLIS;
-                for (int day : eventRecurrence.byday) {
-                    ScheduledAction scheduledAction = new ScheduledAction(actionType);
-                    scheduledAction.setPeriod(period);
-
-                    scheduledAction.setStartTime(nextDayOfWeek(day2CalendarDay(day)).getTimeInMillis());
-                    parseEndTime(eventRecurrence, scheduledAction);
-                    scheduledActionList.add(scheduledAction);
-                }
-            }
-            break;
-
-            case EventRecurrence.MONTHLY: {
-                if (eventRecurrence.interval == 0)
-                    period = MONTH_MILLIS;
-                else
-                    period = eventRecurrence.interval * MONTH_MILLIS;
-                ScheduledAction event = new ScheduledAction(actionType);
-                event.setPeriod(period);
-                Calendar now = Calendar.getInstance();
-                now.add(Calendar.MONTH, 1);
-                event.setStartTime(now.getTimeInMillis());
-                parseEndTime(eventRecurrence, event);
-
-                scheduledActionList.add(event);
-            }
+            case EventRecurrence.WEEKLY:
+                periodType = PeriodType.WEEK;
                 break;
 
-            case EventRecurrence.YEARLY: {
-                if (eventRecurrence.interval == 0)
-                    period = YEAR_MILLIS;
-                else
-                    period = eventRecurrence.interval * YEAR_MILLIS;
-                ScheduledAction event = new ScheduledAction(actionType);
-                event.setPeriod(period);
-                Calendar now = Calendar.getInstance();
-                now.add(Calendar.YEAR, 1);
-                event.setStartTime(now.getTimeInMillis());
-                parseEndTime(eventRecurrence, event);
-                scheduledActionList.add(event);
-            }
+            case EventRecurrence.MONTHLY:
+                periodType = PeriodType.MONTH;
+                break;
+
+            case EventRecurrence.YEARLY:
+                periodType = PeriodType.YEAR;
+                break;
+
+            default:
+                periodType = PeriodType.MONTH;
                 break;
         }
-        return scheduledActionList;
+
+        int interval = eventRecurrence.interval == 0 ? 1 : eventRecurrence.interval; //bug from betterpickers library sometimes returns 0 as the interval
+        periodType.setMultiplier(interval);
+        Recurrence recurrence = new Recurrence(periodType);
+        parseEndTime(eventRecurrence, recurrence);
+        recurrence.setByDay(parseByDay(eventRecurrence.byday));
+        recurrence.setPeriodStart(new Timestamp(eventRecurrence.startDate.toMillis(false)));
+
+        return recurrence;
     }
 
     /**
      * Parses the end time from an EventRecurrence object and sets it to the <code>scheduledEvent</code>.
      * The end time is specified in the dialog either by number of occurences or a date.
      * @param eventRecurrence Event recurrence pattern obtained from dialog
-     * @param scheduledAction ScheduledEvent to be to updated
+     * @param recurrence Recurrence event to set the end period to
      */
-    private static void parseEndTime(EventRecurrence eventRecurrence, ScheduledAction scheduledAction) {
+    private static void parseEndTime(EventRecurrence eventRecurrence, Recurrence recurrence) {
         if (eventRecurrence.until != null && eventRecurrence.until.length() > 0) {
             Time endTime = new Time();
             endTime.parse(eventRecurrence.until);
-            scheduledAction.setEndTime(endTime.toMillis(false));
+            recurrence.setPeriodEnd(new Timestamp(endTime.toMillis(false)));
         } else if (eventRecurrence.count > 0){
-            scheduledAction.setTotalFrequency(eventRecurrence.count);
+            recurrence.setPeriodEnd(eventRecurrence.count);
         }
     }
 
@@ -151,6 +117,51 @@ private static Calendar nextDayOfWeek(int dow) {
     }
 
     /**
+     * Parses an array of byday values to return the string concatenation of days of the week.
+     * <p>Currently only supports byDay values for weeks</p>
+     * @param byday Array of byday values
+     * @return String concat of days of the week or null if {@code byday} was empty
+     */
+    private static String parseByDay(int[] byday){
+        if (byday == null || byday.length == 0){
+            return null;
+        }
+        //todo: parse for month and year as well, when our dialog supports those
+        StringBuilder builder = new StringBuilder();
+        for (int day : byday) {
+            switch (day)
+            {
+                case EventRecurrence.SU:
+                    builder.append("SU");
+                    break;
+                case EventRecurrence.MO:
+                    builder.append("MO");
+                    break;
+                case EventRecurrence.TU:
+                    builder.append("TU");
+                    break;
+                case EventRecurrence.WE:
+                    builder.append("WE");
+                    break;
+                case EventRecurrence.TH:
+                    builder.append("TH");
+                    break;
+                case EventRecurrence.FR:
+                    builder.append("FR");
+                    break;
+                case EventRecurrence.SA:
+                    builder.append("SA");
+                    break;
+                default:
+                    throw new RuntimeException("bad day of week: " + day);
+            }
+            builder.append(",");
+        }
+        builder.deleteCharAt(builder.length());
+        return builder.toString();
+    }
+
+    /**
      * Converts one of the SU, MO, etc. constants to the Calendar.SUNDAY
      * constants.  btw, I think we should switch to those here too, to
      * get rid of this function, if possible.
diff --git a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceViewClickListener.java b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceViewClickListener.java
new file mode 100644
index 00000000..73891997
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceViewClickListener.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.util;
+
+import android.os.Bundle;
+import android.support.v4.app.FragmentManager;
+import android.support.v7.app.AppCompatActivity;
+import android.text.format.Time;
+import android.view.View;
+
+import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment;
+import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment.OnRecurrenceSetListener;
+
+/**
+ * Shows the recurrence dialog when the recurrence view is clicked
+ */
+public class RecurrenceViewClickListener implements View.OnClickListener{
+    private static final String FRAGMENT_TAG_RECURRENCE_PICKER  = "recurrence_picker";
+
+    AppCompatActivity mActivity;
+    String mRecurrenceRule;
+    OnRecurrenceSetListener mRecurrenceSetListener;
+
+    public RecurrenceViewClickListener(AppCompatActivity activity, String recurrenceRule, OnRecurrenceSetListener recurrenceSetListener){
+        this.mActivity = activity;
+        this.mRecurrenceRule = recurrenceRule;
+        this.mRecurrenceSetListener = recurrenceSetListener;
+    }
+
+    @Override
+    public void onClick(View v) {
+        FragmentManager fm = mActivity.getSupportFragmentManager();
+        Bundle b = new Bundle();
+        Time t = new Time();
+        t.setToNow();
+        b.putLong(RecurrencePickerDialogFragment.BUNDLE_START_TIME_MILLIS, t.toMillis(false));
+        b.putString(RecurrencePickerDialogFragment.BUNDLE_TIME_ZONE, t.timezone);
+
+        // may be more efficient to serialize and pass in EventRecurrence
+        b.putString(RecurrencePickerDialogFragment.BUNDLE_RRULE, mRecurrenceRule);
+
+        RecurrencePickerDialogFragment rpd = (RecurrencePickerDialogFragment) fm.findFragmentByTag(
+                FRAGMENT_TAG_RECURRENCE_PICKER);
+        if (rpd != null) {
+            rpd.dismiss();
+        }
+        rpd = new RecurrencePickerDialogFragment();
+        rpd.setArguments(b);
+        rpd.setOnRecurrenceSetListener(mRecurrenceSetListener);
+        rpd.show(fm, FRAGMENT_TAG_RECURRENCE_PICKER);
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
index cad60a0b..ffc2b9db 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
@@ -37,6 +37,8 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.model.Money;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.ui.common.FormActivity;
 
@@ -150,7 +152,7 @@ public void onClick(View v) {
         setOnLongClickListener(new View.OnLongClickListener() {
             @Override
             public boolean onLongClick(View v) {
-                if (v != null)
+                if (v != null && !isInEditMode())
                     ((InputMethodManager) GnuCashApplication.getAppContext()
                             .getSystemService(Activity.INPUT_METHOD_SERVICE))
                             .hideSoftInputFromWindow(v.getWindowToken(), 0);
diff --git a/app/src/main/java/org/gnucash/android/ui/wizard/CurrencySelectFragment.java b/app/src/main/java/org/gnucash/android/ui/wizard/CurrencySelectFragment.java
index 00cfe08f..fb0203bb 100644
--- a/app/src/main/java/org/gnucash/android/ui/wizard/CurrencySelectFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/wizard/CurrencySelectFragment.java
@@ -27,7 +27,7 @@
 import com.tech.freak.wizardpager.ui.PageFragmentCallbacks;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.util.CommoditiesCursorAdapter;
 
 import butterknife.ButterKnife;
diff --git a/app/src/main/java/org/gnucash/android/util/CommoditiesCursorAdapter.java b/app/src/main/java/org/gnucash/android/util/CommoditiesCursorAdapter.java
index 0a5e246c..ddc54895 100644
--- a/app/src/main/java/org/gnucash/android/util/CommoditiesCursorAdapter.java
+++ b/app/src/main/java/org/gnucash/android/util/CommoditiesCursorAdapter.java
@@ -21,15 +21,12 @@
 import android.support.annotation.LayoutRes;
 import android.support.v4.widget.SimpleCursorAdapter;
 import android.text.TextUtils;
-import android.view.ContextMenu;
 import android.view.View;
 import android.widget.TextView;
 
-import org.gnucash.android.db.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
 
-import java.util.Currency;
-
 /**
  * Cursor adapter for displaying list of commodities.
  * <p>You should provide the layout and the layout should contain a view with the id {@code android:id/text1},
diff --git a/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java b/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java
index c2183a25..8f4cc5fe 100644
--- a/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java
+++ b/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java
@@ -18,12 +18,14 @@
 
 import android.content.Context;
 import android.database.Cursor;
+import android.support.annotation.NonNull;
 import android.support.v4.widget.SimpleCursorAdapter;
 import android.text.TextUtils;
 import android.view.View;
 import android.widget.TextView;
 
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 
 /**
  * Cursor adapter which looks up the fully qualified account name and returns that instead of just the simple name.
@@ -46,4 +48,19 @@ public void bindView(View view, Context context, Cursor cursor) {
         TextView textView = (TextView) view.findViewById(android.R.id.text1);
         textView.setEllipsize(TextUtils.TruncateAt.MIDDLE);
     }
+
+    /**
+     * Returns the position of a given account in the adapter
+     * @param accountUID GUID of the account
+     * @return Position of the account or -1 if the account is not found
+     */
+    public int getPosition(@NonNull String accountUID){
+        long accountId = AccountsDbAdapter.getInstance().getID(accountUID);
+        for (int pos = 0; pos < getCount(); pos++) {
+            if (getItemId(pos) == accountId){
+                return pos;
+            }
+        }
+        return -1;
+    }
 }
diff --git a/app/src/main/res/drawable-hdpi/ic_dashboard_black_24dp.png b/app/src/main/res/drawable-hdpi/ic_dashboard_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..b832916f5e97b28900f42852d245eead209cdb4e
GIT binary patch
literal 126
zcmeAS@N?(olHy`uVBq!ia0vp^Dj>|k0wldT1B8K;tEY=&NCjiE0%H#odmG!D3ylpr
zRt#MKj&n(KobHoyi730G@JiK#so@_R@5?=H_dhxtYH57Gm9b3LwBui8Z-dUo1Q7;?
Y<Q_ZgHwPT}fCe&ny85}Sb4q9e0Gv-Ha{vGU

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_dashboard_black_24dp.png b/app/src/main/res/drawable-mdpi/ic_dashboard_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..c0cb8620dc2c227e1e774f4505011d81c5387510
GIT binary patch
literal 92
zcmeAS@N?(olHy`uVBq!ia0vp^5+KaM0wlfaz7_*1WltB!kP60Ri9HYOwT|eStzs0N
pB(tWZoBfyd<PDSEOnJf>7^36<GX}KD&jl)H@O1TaS?83{1OTp07xn-E

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_dashboard_black_24dp.png b/app/src/main/res/drawable-xhdpi/ic_dashboard_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..ba2911e39e0dc36f04a4fbd7a15fd96b6efdafe0
GIT binary patch
literal 115
zcmeAS@N?(olHy`uVBq!ia0vp^1|ZDA0wn)(8}a}tD^C~4kP61PR}XSBDDbd2{?3o`
z-l3o*bLN@!41a~!g_rn@@BC&0Ds<p`ApeEQ(&5}pCWeMOhg~ljE-(F~cl-A<d!QtP
Mr>mdKI;Vst0C>J5Hvj+t

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_dashboard_black_24dp.png b/app/src/main/res/drawable-xxhdpi/ic_dashboard_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..ad14dfeb9fcb3669d59c0077ab851f2cc95eff6b
GIT binary patch
literal 126
zcmeAS@N?(olHy`uVBq!ia0vp^9w5xf3?%cF6<L53TYyi9E06|)rRh7*11ZLmAirP+
zhi5m^fE+bX7srqa#^eQxEB^oA|MCC-dgtD&3`;!H15@-R3??0wn)J}ent{RguiS?q
SrT<kRV?15`T-G@yGywn{=_E1$

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxxhdpi/ic_dashboard_black_24dp.png b/app/src/main/res/drawable-xxxhdpi/ic_dashboard_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..8fad114fe9f3f5a207a2dd9008c5e94ce7f6330d
GIT binary patch
literal 127
zcmeAS@N?(olHy`uVBq!ia0vp^2_VeK3?y%aJ*@^(YymzYu0R?HmZtAK52P4Ng8YIR
z9G=}s19H?oT^vIy7?UNgH2enw`2#E`=LGUuuw<TC*ew3yDZkepvs0317#Mn%{S#Po
RN%SPh98Xt2mvv4FO#lFuCma9(

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable/budget_progress_indicator.xml b/app/src/main/res/drawable/budget_progress_indicator.xml
new file mode 100644
index 00000000..fb2bae40
--- /dev/null
+++ b/app/src/main/res/drawable/budget_progress_indicator.xml
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+
+        <item android:id="@android:id/background">
+            <shape>
+                <stroke android:width="1dp" android:color="#D0CFCC"  />
+                <solid android:color="#D0CFCC" />
+                <corners android:radius="3dp" />
+            </shape>
+
+        </item>
+
+    <item android:id="@android:id/secondaryProgress">
+        <clip>
+            <shape>
+                <gradient
+                    android:startColor="#234"
+                    android:centerColor="#234"
+                    android:centerY="0.75"
+                    android:endColor="#a24"
+                    android:angle="270"
+                    />
+            </shape>
+        </clip>
+    </item>
+
+    <item android:id="@android:id/progress">
+        <clip>
+            <shape>
+                <gradient
+                    android:startColor="#319d67"
+                    android:centerColor="#ee8600"
+                    android:centerY="0.75"
+                    android:endColor="#e00404"
+                    android:angle="0"
+                    />
+            </shape>
+        </clip>
+    </item>
+
+</layer-list>
\ No newline at end of file
diff --git a/app/src/main/res/layout/activity_accounts.xml b/app/src/main/res/layout/activity_accounts.xml
index 838e12f9..96bd30ba 100644
--- a/app/src/main/res/layout/activity_accounts.xml
+++ b/app/src/main/res/layout/activity_accounts.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <!--
- Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 - 2015 Ngewi Fet <ngewif@gmail.com>
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
diff --git a/app/src/main/res/layout/activity_budgets.xml b/app/src/main/res/layout/activity_budgets.xml
new file mode 100644
index 00000000..01ec6e26
--- /dev/null
+++ b/app/src/main/res/layout/activity_budgets.xml
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<android.support.v4.widget.DrawerLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <android.support.design.widget.CoordinatorLayout
+        android:id="@+id/coordinatorLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout
+            android:orientation="vertical"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent">
+            <include layout="@layout/toolbar" />
+
+            <FrameLayout
+                android:id="@+id/fragment_container"
+                android:orientation="vertical"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"/>
+        </LinearLayout>
+        <android.support.design.widget.FloatingActionButton
+            android:id="@+id/fab_create_budget"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="end|bottom|right"
+
+            android:layout_margin="20dp"
+            android:onClick="onCreateBudgetClick"
+            app:elevation="10dp"
+            android:src="@drawable/ic_add_white_48dp"/>
+
+    </android.support.design.widget.CoordinatorLayout>
+
+    <android.support.design.widget.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        app:headerLayout="@layout/nav_drawer_header"
+        app:menu="@menu/nav_drawer_menu"/>
+
+</android.support.v4.widget.DrawerLayout>
+
diff --git a/app/src/main/res/layout/cardview_account.xml b/app/src/main/res/layout/cardview_account.xml
index a689e025..36a1452c 100644
--- a/app/src/main/res/layout/cardview_account.xml
+++ b/app/src/main/res/layout/cardview_account.xml
@@ -94,14 +94,34 @@
         <TextView
             android:id="@+id/account_balance"
             android:layout_width="wrap_content"
-            android:layout_height="match_parent"
+            android:layout_height="wrap_content"
             android:singleLine="true"
             android:layout_alignParentBottom="true"
             android:paddingBottom="4dp"
             android:textSize="18sp"
+            tools:text="$ 2000.00"
             android:layout_alignBottom="@id/options_menu"
             android:layout_toLeftOf="@id/create_transaction"
             android:layout_marginRight="@dimen/edge_padding"/>
+
+        <ProgressBar
+            android:id="@+id/budget_indicator"
+            style="@android:style/Widget.ProgressBar.Horizontal"
+            android:progressDrawable="@drawable/budget_progress_indicator"
+            android:layout_width="100dp"
+            android:layout_height="8dp"
+            android:layout_alignParentBottom="true"
+            android:layout_alignParentLeft="true"
+            android:layout_marginLeft="@dimen/strip_width"
+            android:layout_marginStart="@dimen/strip_width"
+            android:max="100"
+            tools:progress="50"
+            android:indeterminate="false"
+            android:paddingBottom="4dp"
+            android:background="@android:color/transparent"
+            android:visibility="gone"
+            android:layout_alignBottom="@id/options_menu"
+            android:layout_marginRight="@dimen/edge_padding"/>
     </RelativeLayout>
 
 </android.support.v7.widget.CardView>
\ No newline at end of file
diff --git a/app/src/main/res/layout/cardview_budget.xml b/app/src/main/res/layout/cardview_budget.xml
new file mode 100644
index 00000000..689d1da9
--- /dev/null
+++ b/app/src/main/res/layout/cardview_budget.xml
@@ -0,0 +1,107 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:cardview="http://schemas.android.com/apk/res-auto"
+    cardview:cardCornerRadius="4dp"
+    cardview:cardUseCompatPadding="true"
+    cardview:cardPreventCornerOverlap="false"
+    android:layout_marginLeft="5dp"
+    android:layout_marginRight="5dp"
+    android:foreground="?selectableItemBackground"
+    android:focusable="true"
+    android:clickable="true"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:minHeight="@dimen/card_min_height">
+
+        <include android:id="@+id/list_item_2_lines"
+            layout="@layout/list_item_2_lines"
+            android:paddingTop="6dp"
+            android:layout_height="wrap_content"
+            android:layout_width="match_parent"
+            android:layout_toRightOf="@id/account_color_strip"
+            android:layout_marginTop="@dimen/dialog_padding"
+            android:layout_marginLeft="@dimen/dialog_padding"
+            android:layout_marginRight="@dimen/dialog_padding"/>
+
+        <TextView
+            android:id="@+id/budget_recurrence"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:singleLine="true"
+            android:textSize="15sp"
+            android:gravity="left|start"
+            android:layout_marginLeft="@dimen/dialog_padding"
+            android:layout_marginRight="@dimen/dialog_padding"
+            tools:text="$2,500 monthly until 02/14"/>
+
+        <RelativeLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+            <ImageView
+                android:id="@+id/options_menu"
+                android:layout_width="48dp"
+                android:layout_height="48dp"
+                android:layout_alignParentRight="true"
+                android:layout_alignParentBottom="true"
+                android:background="?attr/selectableItemBackgroundBorderless"
+                android:paddingTop="20dp"
+                android:paddingBottom="4dp"
+                android:paddingLeft="24dp"
+                android:scaleType="centerInside"
+                android:src="@drawable/ic_more_vert_black_24dp"
+                tools:ignore="ContentDescription" />
+
+            <LinearLayout android:id="@+id/budget_progress_layout"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_toLeftOf="@id/options_menu"
+                android:layout_marginRight="@dimen/dialog_padding"
+                android:layout_marginLeft="@dimen/dialog_padding"
+                android:orientation="vertical">
+                <TextView
+                    android:id="@+id/budget_amount"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:singleLine="true"
+                    android:padding="5dp"
+                    android:textSize="18sp"
+                    android:gravity="right"
+                    android:textColor="@android:color/black"
+                    tools:text="$ 2000 of $ 2,500"/>
+
+                <ProgressBar
+                    android:id="@+id/budget_indicator"
+                    style="@android:style/Widget.ProgressBar.Horizontal"
+                    android:progressDrawable="@drawable/budget_progress_indicator"
+                    android:layout_width="match_parent"
+                    android:layout_height="10dp"
+                    android:max="100"
+                    android:indeterminate="false"
+                    tools:background="@color/account_gold"
+                    android:paddingBottom="4dp"/>
+            </LinearLayout>
+
+        </RelativeLayout>
+</LinearLayout>
+</android.support.v7.widget.CardView>
\ No newline at end of file
diff --git a/app/src/main/res/layout/cardview_budget_amount.xml b/app/src/main/res/layout/cardview_budget_amount.xml
new file mode 100644
index 00000000..c920774b
--- /dev/null
+++ b/app/src/main/res/layout/cardview_budget_amount.xml
@@ -0,0 +1,139 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<android.support.v7.widget.CardView  xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    app:cardCornerRadius="4dp"
+    app:cardUseCompatPadding="true"
+    app:cardPreventCornerOverlap="false"
+    app:cardElevation="5dp"
+    android:foreground="?selectableItemBackground"
+    android:focusable="true"
+    android:clickable="true"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical">
+
+    <RelativeLayout
+        android:padding="@dimen/dialog_padding"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="@dimen/dialog_padding"
+        android:layout_marginBottom="@dimen/dialog_padding">
+
+        <LinearLayout android:id="@+id/budget_account_layout"
+            android:layout_alignParentTop="true"
+            android:layout_marginBottom="@dimen/dialog_padding"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+            <TextView
+                android:id="@+id/budget_account"
+                android:layout_width="0dp"
+                android:layout_weight="2"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textSize="16sp"
+                android:gravity="left|start"
+                android:textColor="@android:color/black"
+                tools:text="Expenses:Phone:Android"/>
+
+            <TextView
+                android:id="@+id/budget_amount"
+                android:layout_width="0dp"
+                android:layout_weight="1"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textSize="16sp"
+                android:textColor="@android:color/black"
+                android:gravity="right|end"
+                tools:text="$ 3000"/>
+        </LinearLayout>
+
+        <LinearLayout android:id="@+id/labels_layout"
+            android:layout_below="@id/budget_account_layout"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+            <TextView
+                android:id="@+id/label_spent"
+                android:layout_width="0dp"
+                android:layout_weight="1"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textSize="14sp"
+                android:gravity="left|start"
+                android:text="Spent"/>
+
+            <TextView
+                android:id="@+id/label_left"
+                android:layout_width="0dp"
+                android:layout_weight="1"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textSize="14sp"
+                android:gravity="right|end"
+                android:text="Left"/>
+        </LinearLayout>
+
+        <TextView
+            android:id="@+id/budget_spent"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:singleLine="true"
+            android:textSize="15sp"
+            android:gravity="left|start"
+            android:layout_alignParentLeft="true"
+            android:layout_below="@id/labels_layout"
+            android:textColor="@android:color/black"
+            tools:text="$500"/>
+
+        <TextView
+            android:id="@+id/budget_left"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:singleLine="true"
+            android:textSize="15sp"
+            android:gravity="right|end"
+            android:layout_toRightOf="@id/budget_spent"
+            android:layout_below="@id/labels_layout"
+            android:layout_alignParentRight="true"
+            android:textColor="@android:color/black"
+            tools:text="$2,500"/>
+
+
+        <ProgressBar
+            android:id="@+id/budget_indicator"
+            style="@android:style/Widget.ProgressBar.Horizontal"
+            android:progressDrawable="@drawable/budget_progress_indicator"
+            android:layout_width="match_parent"
+            android:layout_height="10dp"
+            android:layout_below="@id/budget_spent"
+            android:layout_marginTop="5dp"
+            android:max="100"
+            android:indeterminate="false"
+            tools:progress="40" />
+
+        <com.github.mikephil.charting.charts.BarChart
+            android:id="@+id/budget_chart"
+            android:minHeight="200dp"
+            android:layout_marginTop="@dimen/dialog_padding"
+            android:layout_below="@id/budget_indicator"
+            android:layout_alignParentBottom="true"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+    </RelativeLayout>
+
+</android.support.v7.widget.CardView>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_account_form.xml b/app/src/main/res/layout/fragment_account_form.xml
index 44d4f6fc..62230c94 100644
--- a/app/src/main/res/layout/fragment_account_form.xml
+++ b/app/src/main/res/layout/fragment_account_form.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <!--
- Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 - 2015 Ngewi Fet <ngewif@gmail.com>
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
diff --git a/app/src/main/res/layout/fragment_budget_detail.xml b/app/src/main/res/layout/fragment_budget_detail.xml
new file mode 100644
index 00000000..8351a0b6
--- /dev/null
+++ b/app/src/main/res/layout/fragment_budget_detail.xml
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <include android:id="@+id/list_item_2_lines"
+        layout="@layout/list_item_2_lines"
+        android:paddingTop="6dp"
+        android:layout_height="wrap_content"
+        android:layout_width="match_parent"
+        android:layout_margin="@dimen/dialog_padding"
+        android:layout_toRightOf="@id/account_color_strip" />
+
+    <TextView
+        android:id="@+id/budget_recurrence"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="@dimen/dialog_padding"
+        android:layout_marginRight="@dimen/dialog_padding"
+        android:singleLine="true"
+        android:textSize="15sp"
+        android:gravity="left|start"
+        tools:text="$2,500 monthly"/>
+
+    <org.gnucash.android.ui.util.widget.EmptyRecyclerView
+        android:id="@+id/budget_amount_recycler"
+        android:layout_marginTop="@dimen/edge_padding"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_budget_form.xml b/app/src/main/res/layout/fragment_budget_form.xml
new file mode 100644
index 00000000..386397e8
--- /dev/null
+++ b/app/src/main/res/layout/fragment_budget_form.xml
@@ -0,0 +1,121 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:animateLayoutChanges="true"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TableLayout android:id="@+id/budget_info_table"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="@dimen/dialog_padding"
+        android:orientation="vertical" >
+
+        <android.support.design.widget.TextInputLayout
+            android:id="@+id/name_text_input_layout"
+            android:paddingLeft="@dimen/dialog_padding"
+            android:paddingRight="@dimen/dialog_padding"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+            <EditText
+                android:id="@+id/input_budget_name"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:ems="15"
+                android:inputType="textCapWords"
+                android:singleLine="true"
+                android:ellipsize="start"
+                android:hint="Budget name"
+                style="@style/ListItemText">
+            </EditText>
+        </android.support.design.widget.TextInputLayout>
+
+        <TableRow style="@style/FormRow"
+            android:paddingLeft="@dimen/dialog_padding"
+            android:paddingRight="@dimen/dialog_padding">
+            <ImageView style="@style/FormIcon"
+                android:src="@drawable/ic_action_sort_by_size"/>
+
+            <EditText android:id="@+id/input_description"
+                android:layout_width="0dp"
+                android:layout_weight="5"
+                android:layout_height="wrap_content"
+                android:singleLine="false"
+                android:background="@android:color/transparent"
+                android:hint="Description"
+                android:inputType="textMultiLine|textCapSentences" />
+        </TableRow>
+        <View style="@style/Divider" />
+        <TableRow style="@style/FormRow"
+            android:paddingLeft="@dimen/dialog_padding"
+            android:paddingRight="@dimen/dialog_padding">
+
+            <ImageView style="@style/FormIcon"
+                android:src="@drawable/ic_action_rotate_right"/>
+
+            <TextView android:id="@+id/input_recurrence"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_weight="5"
+                android:gravity="left"
+                android:text="Set budget period"
+                style="@style/Dropdown.TextView" />
+
+        </TableRow>
+        <TableRow style="@style/FormRow"
+            android:paddingLeft="@dimen/dialog_padding"
+            android:layout_marginBottom="@dimen/dialog_padding"
+            android:layout_marginTop="@dimen/dialog_padding">
+            <TextView android:id="@+id/label_budgeted_accounts_header"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:padding="@dimen/dialog_padding"
+                android:textSize="18sp"
+                android:textColor="@color/theme_accent"
+                android:text="Budgeted Accounts"/>
+
+            <Button android:id="@+id/btn_add_budget_amount"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="right|end"
+                android:textColor="@android:color/white"
+                android:text="Add"/>
+        </TableRow>
+    </TableLayout>
+    <ScrollView
+        android:id="@+id/scroll_view"
+        android:layout_above="@id/calculator_keyboard"
+        android:layout_below="@id/budget_info_table"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <TableLayout android:id="@+id/budget_amount_table_layout"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+    </ScrollView>
+    <android.inputmethodservice.KeyboardView android:id="@+id/calculator_keyboard"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentRight="true"
+        android:focusable="true"
+        android:focusableInTouchMode="true"
+        android:visibility="gone" />
+</RelativeLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_budget_list.xml b/app/src/main/res/layout/fragment_budget_list.xml
new file mode 100644
index 00000000..b4617c26
--- /dev/null
+++ b/app/src/main/res/layout/fragment_budget_list.xml
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/fragment_budget_list"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:gravity="center"
+    android:orientation="vertical">
+
+    <org.gnucash.android.ui.util.widget.EmptyRecyclerView
+        android:id="@+id/budget_recycler_view"
+        android:scrollbars="vertical"
+        android:paddingBottom="@dimen/card_min_height"
+        android:clipToPadding="false"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"/>
+
+    <Button android:id="@+id/empty_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:layout_gravity="center"
+        android:visibility="gone"
+        android:textColor="@android:color/white"
+        android:text="Propose Budgets"/>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/item_budget_amount.xml b/app/src/main/res/layout/item_budget_amount.xml
new file mode 100644
index 00000000..e8393881
--- /dev/null
+++ b/app/src/main/res/layout/item_budget_amount.xml
@@ -0,0 +1,87 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    app:cardCornerRadius="4dp"
+    app:cardUseCompatPadding="true"
+    app:cardPreventCornerOverlap="false"
+    app:cardElevation="5dp"
+    android:foreground="?selectableItemBackground"
+    android:focusable="true"
+    android:clickable="true"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+    <LinearLayout
+        android:padding="5dp"
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <TableRow
+            android:padding="@dimen/dialog_padding"
+            android:layout_height="wrap_content"
+            android:layout_width="match_parent"
+            android:gravity="center_vertical">
+            <TextView
+                android:id="@+id/currency_symbol"
+                style="@style/FormIcon"
+                android:gravity="center"
+                android:textSize="22sp"
+                android:text="$" />
+
+            <org.gnucash.android.ui.util.widget.CalculatorEditText
+                android:id="@+id/input_budget_amount"
+                android:layout_width="0dp"
+                android:layout_weight="3"
+                android:layout_height="wrap_content"
+                android:hint="@string/label_transaction_amount"
+                android:inputType="none"
+                android:nextFocusDown="@+id/input_description"
+                android:background="@android:color/transparent"
+                android:textSize="20sp"
+                app:keyboardKeysLayout="@xml/calculator_keyboard"/>
+            <ImageView
+                android:id="@+id/btn_remove_item"
+                android:layout_width="48dp"
+                android:layout_height="48dp"
+                android:background="?attr/selectableItemBackgroundBorderless"
+                android:paddingTop="6dp"
+                android:paddingRight="6dp"
+                android:paddingLeft="22dp"
+                android:paddingBottom="22dp"
+                android:src="@drawable/ic_close_black_24dp"
+                tools:ignore="ContentDescription" />
+        </TableRow>
+        <View style="@style/Divider" />
+        <TableRow android:id="@+id/layout_double_entry"
+            android:layout_height="wrap_content"
+            android:layout_width="match_parent"
+            android:padding="@dimen/dialog_padding"
+            android:gravity="center_vertical" >
+
+            <ImageView style="@style/FormIcon"
+                android:src="@drawable/ic_action_forward"/>
+            <Spinner
+                android:id="@+id/input_budget_account_spinner"
+                android:layout_width="0dp"
+                android:layout_weight="5"
+                android:layout_height="wrap_content"  />
+        </TableRow>
+    </LinearLayout>
+</android.support.v7.widget.CardView>
\ No newline at end of file
diff --git a/app/src/main/res/layout/list_item_2_lines.xml b/app/src/main/res/layout/list_item_2_lines.xml
index e9badd10..f728b457 100644
--- a/app/src/main/res/layout/list_item_2_lines.xml
+++ b/app/src/main/res/layout/list_item_2_lines.xml
@@ -29,7 +29,7 @@ limitations under the License.
             android:layout_height="wrap_content"
             android:singleLine="true"
             android:ellipsize="end"
-            android:text="@string/label_transaction_name"
+            tools:text="Primary text"
             style="@style/ListItemText"/>
 
     <TextView
@@ -40,5 +40,5 @@ limitations under the License.
             android:ellipsize="middle"
             android:layout_below="@id/primary_text"
             android:textAppearance="?android:attr/textAppearanceSmall"
-            tools:text="@string/label_transaction_name"/>
+            tools:text="Secondary text"/>
 </RelativeLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/nav_drawer_header.xml b/app/src/main/res/layout/nav_drawer_header.xml
index ca8e4a09..1a596241 100644
--- a/app/src/main/res/layout/nav_drawer_header.xml
+++ b/app/src/main/res/layout/nav_drawer_header.xml
@@ -14,16 +14,13 @@
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="100dp"
     android:background="@color/theme_primary"
     android:orientation="vertical">
 
-    <RelativeLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
     <TextView android:id="@+id/drawer_title"
         style="@style/TextAppearance.AppCompat.Headline"
         android:layout_width="match_parent"
@@ -40,9 +37,7 @@
         style="@style/TextAppearance.AppCompat.Subhead"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_below="@id/drawer_title"
         android:textColor="@android:color/white"
         android:layout_marginLeft="75dp"
         tools:text="Current Book Name"/>
-    </RelativeLayout>
-</FrameLayout>
\ No newline at end of file
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/menu/budget_actions.xml b/app/src/main/res/menu/budget_actions.xml
new file mode 100644
index 00000000..25121878
--- /dev/null
+++ b/app/src/main/res/menu/budget_actions.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <item android:id="@+id/menu_goto_account"
+        android:icon="@drawable/ic_action_forward"
+        android:title="Go to Account"
+        app:showAsAction="never"
+        android:orderInCategory="1"/>
+
+    <item android:id="@+id/menu_edit_budget"
+        android:icon="@drawable/content_edit_holo_dark"
+        android:title="Edit Budget"
+        app:showAsAction="never"
+        android:orderInCategory="2"/>
+
+</menu>
\ No newline at end of file
diff --git a/app/src/main/res/menu/budget_context_menu.xml b/app/src/main/res/menu/budget_context_menu.xml
new file mode 100644
index 00000000..258a69de
--- /dev/null
+++ b/app/src/main/res/menu/budget_context_menu.xml
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <item android:id="@+id/context_menu_edit_budget"
+        android:icon="@drawable/content_edit_holo_dark"
+        android:title="Edit Budget"
+        app:showAsAction="always"
+        android:orderInCategory="1"/>
+
+    <item android:id="@+id/context_menu_delete"
+        android:icon="@drawable/content_discard_holo_dark"
+        android:title="@string/menu_delete"
+        app:showAsAction="ifRoom"
+        android:orderInCategory="2"/>
+
+</menu>
\ No newline at end of file
diff --git a/app/src/main/res/menu/nav_drawer_menu.xml b/app/src/main/res/menu/nav_drawer_menu.xml
index 5160f99c..161cff00 100644
--- a/app/src/main/res/menu/nav_drawer_menu.xml
+++ b/app/src/main/res/menu/nav_drawer_menu.xml
@@ -16,17 +16,21 @@
 -->
 <menu xmlns:android="http://schemas.android.com/apk/res/android">
     <item
+        android:id="@+id/nav_item_open"
+        android:icon="@drawable/ic_folder_open_black_24dp"
+        android:title="@string/nav_menu_open"/>
+    <item
         android:id="@+id/nav_section_accounts"
         android:title="@string/title_accounts">
         <menu>
             <item
-                android:id="@+id/nav_item_open"
-                android:icon="@drawable/ic_folder_open_black_24dp"
-                android:title="@string/nav_menu_open"/>
-            <item
                 android:id="@+id/nav_item_favorites"
                 android:icon="@drawable/ic_star_black_24dp"
                 android:title="@string/nav_menu_favorites"/>
+            <item android:id="@+id/nav_item_budgets"
+                android:icon="@drawable/ic_dashboard_black_24dp"
+                android:title="@string/nav_menu_budgets" />
+
             <item android:id="@+id/nav_item_reports"
                 android:icon="@drawable/ic_equalizer_black_24dp"
                 android:title="@string/nav_menu_reports" />
@@ -47,12 +51,17 @@
         </menu>
     </item>
     <item
-        android:id="@+id/nav_item_settings"
-        android:icon="@drawable/ic_settings_black_24dp"
-        android:title="@string/nav_menu_settings"/>
-    <item
-        android:id="@+id/nav_item_help"
-        android:icon="@drawable/ic_help_black_24dp"
-        android:title="@string/nav_menu_help"/>
-
+        android:id="@+id/nav_section_settings"
+        android:title="Preferences">
+        <menu>
+            <item
+                android:id="@+id/nav_item_settings"
+                android:icon="@drawable/ic_settings_black_24dp"
+                android:title="@string/nav_menu_settings"/>
+            <item
+                android:id="@+id/nav_item_help"
+                android:icon="@drawable/ic_help_black_24dp"
+                android:title="@string/nav_menu_help"/>
+        </menu>
+    </item>
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values-af-rZA/strings.xml b/app/src/main/res/values-af-rZA/strings.xml
index 54aa639b..1f422350 100644
--- a/app/src/main/res/values-af-rZA/strings.xml
+++ b/app/src/main/res/values-af-rZA/strings.xml
@@ -385,6 +385,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ar-rSA/strings.xml b/app/src/main/res/values-ar-rSA/strings.xml
index 107153ca..fd7573d1 100644
--- a/app/src/main/res/values-ar-rSA/strings.xml
+++ b/app/src/main/res/values-ar-rSA/strings.xml
@@ -405,6 +405,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ca-rES/strings.xml b/app/src/main/res/values-ca-rES/strings.xml
index 7b935d0b..76ad35a8 100644
--- a/app/src/main/res/values-ca-rES/strings.xml
+++ b/app/src/main/res/values-ca-rES/strings.xml
@@ -385,6 +385,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltims 3 mesos</item>
diff --git a/app/src/main/res/values-cs-rCZ/strings.xml b/app/src/main/res/values-cs-rCZ/strings.xml
index 92c01bd4..2522cfa4 100644
--- a/app/src/main/res/values-cs-rCZ/strings.xml
+++ b/app/src/main/res/values-cs-rCZ/strings.xml
@@ -390,6 +390,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index b16e201b..803247a1 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -382,6 +382,7 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-el-rGR/strings.xml b/app/src/main/res/values-el-rGR/strings.xml
index 9b033a1b..8d50732d 100644
--- a/app/src/main/res/values-el-rGR/strings.xml
+++ b/app/src/main/res/values-el-rGR/strings.xml
@@ -396,6 +396,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-en-rGB/strings.xml b/app/src/main/res/values-en-rGB/strings.xml
index 54aa639b..1f422350 100644
--- a/app/src/main/res/values-en-rGB/strings.xml
+++ b/app/src/main/res/values-en-rGB/strings.xml
@@ -385,6 +385,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index 276b7d0e..c261ae5a 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -382,6 +382,7 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index d0f5da33..1fa57f89 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -382,6 +382,7 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="toast_no_compatible_apps_to_receive_export">No hay aplicaciones compatibles para recibir las transacciones exportadas!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-fi-rFI/strings.xml b/app/src/main/res/values-fi-rFI/strings.xml
index 54aa639b..1f422350 100644
--- a/app/src/main/res/values-fi-rFI/strings.xml
+++ b/app/src/main/res/values-fi-rFI/strings.xml
@@ -385,6 +385,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 547ffb19..0d941565 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -382,6 +382,7 @@ Aucune information permettant d\'identifier l\'utilisateur ne sera recueillis da
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Mois actuel</item>
     <item>3 derniers mois</item>
diff --git a/app/src/main/res/values-hu-rHU/strings.xml b/app/src/main/res/values-hu-rHU/strings.xml
index f6e4e0ff..7fbd2da0 100644
--- a/app/src/main/res/values-hu-rHU/strings.xml
+++ b/app/src/main/res/values-hu-rHU/strings.xml
@@ -387,6 +387,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index 313ddee2..8b22157d 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -386,6 +386,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Mese corrente</item>
     <item>Ultimi 3 mesi</item>
diff --git a/app/src/main/res/values-iw-rIL/strings.xml b/app/src/main/res/values-iw-rIL/strings.xml
index 54aa639b..1f422350 100644
--- a/app/src/main/res/values-iw-rIL/strings.xml
+++ b/app/src/main/res/values-iw-rIL/strings.xml
@@ -385,6 +385,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index 52fe7ce5..3e24c66b 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -380,6 +380,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index 1656ad73..23768708 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -380,6 +380,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-nl-rNL/strings.xml b/app/src/main/res/values-nl-rNL/strings.xml
index 6654dae5..0adb2052 100644
--- a/app/src/main/res/values-nl-rNL/strings.xml
+++ b/app/src/main/res/values-nl-rNL/strings.xml
@@ -386,6 +386,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Huidige maand</item>
     <item>Afgelopen 3 maanden</item>
diff --git a/app/src/main/res/values-no-rNO/strings.xml b/app/src/main/res/values-no-rNO/strings.xml
index 05ee7407..cab3c1fd 100644
--- a/app/src/main/res/values-no-rNO/strings.xml
+++ b/app/src/main/res/values-no-rNO/strings.xml
@@ -376,6 +376,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">Ingen kompatible apper til  motta de eksporterte transaksjonene!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
diff --git a/app/src/main/res/values-pl-rPL/strings.xml b/app/src/main/res/values-pl-rPL/strings.xml
index aa736601..a1bddedc 100644
--- a/app/src/main/res/values-pl-rPL/strings.xml
+++ b/app/src/main/res/values-pl-rPL/strings.xml
@@ -383,6 +383,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Biecy miesic</item>
     <item>Ostatnie 3 miesice</item>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 443b85b8..69045948 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -380,6 +380,7 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="toast_no_compatible_apps_to_receive_export">No existem apps compatveis para receber as transaes exportadas!</string>
   <string name="menu_move_transaction">Mover...</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Ms atual</item>
     <item>Last 3 meses</item>
diff --git a/app/src/main/res/values-pt-rPT/strings.xml b/app/src/main/res/values-pt-rPT/strings.xml
index ce055634..af4dd033 100644
--- a/app/src/main/res/values-pt-rPT/strings.xml
+++ b/app/src/main/res/values-pt-rPT/strings.xml
@@ -380,6 +380,7 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="toast_no_compatible_apps_to_receive_export">No existem aplicaes compatveis para receber as transaes exportadas!</string>
   <string name="menu_move_transaction">Mover...</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Ms actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-ro-rRO/strings.xml b/app/src/main/res/values-ro-rRO/strings.xml
index 92c01bd4..2522cfa4 100644
--- a/app/src/main/res/values-ro-rRO/strings.xml
+++ b/app/src/main/res/values-ro-rRO/strings.xml
@@ -390,6 +390,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 764b17f0..429503f5 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -388,6 +388,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
diff --git a/app/src/main/res/values-sr-rSP/strings.xml b/app/src/main/res/values-sr-rSP/strings.xml
index c92cb105..413e6b9c 100644
--- a/app/src/main/res/values-sr-rSP/strings.xml
+++ b/app/src/main/res/values-sr-rSP/strings.xml
@@ -390,6 +390,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-sv-rSE/strings.xml b/app/src/main/res/values-sv-rSE/strings.xml
index 54aa639b..1f422350 100644
--- a/app/src/main/res/values-sv-rSE/strings.xml
+++ b/app/src/main/res/values-sv-rSE/strings.xml
@@ -385,6 +385,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-tr-rTR/strings.xml b/app/src/main/res/values-tr-rTR/strings.xml
index a9c76198..6e8132c5 100644
--- a/app/src/main/res/values-tr-rTR/strings.xml
+++ b/app/src/main/res/values-tr-rTR/strings.xml
@@ -385,6 +385,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-uk-rUA/strings.xml b/app/src/main/res/values-uk-rUA/strings.xml
index 0f843662..0015fd16 100644
--- a/app/src/main/res/values-uk-rUA/strings.xml
+++ b/app/src/main/res/values-uk-rUA/strings.xml
@@ -386,6 +386,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
diff --git a/app/src/main/res/values-vi-rVN/strings.xml b/app/src/main/res/values-vi-rVN/strings.xml
index 1656ad73..23768708 100644
--- a/app/src/main/res/values-vi-rVN/strings.xml
+++ b/app/src/main/res/values-vi-rVN/strings.xml
@@ -380,6 +380,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index 83f48ddf..019b9a6d 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -377,6 +377,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml
index fc5f6b5d..0a3e4c1c 100644
--- a/app/src/main/res/values-zh-rTW/strings.xml
+++ b/app/src/main/res/values-zh-rTW/strings.xml
@@ -377,6 +377,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 3f0394ec..75c837d8 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -391,6 +391,7 @@
     <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
     <string name="menu_move_transaction">Move...</string>
     <string name="menu_duplicate_transaction">Duplicate</string>
+    <string name="nav_menu_budgets">Budgets</string>
     <string-array name="report_time_range">
         <item>Current month</item>
         <item>Last 3 months</item>
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
index 260f98b5..cbb6ab78 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
@@ -4,16 +4,20 @@
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.CommoditiesDbAdapter;
-import org.gnucash.android.db.ScheduledActionDbAdapter;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetsDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.PricesDbAdapter;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.importer.GncXmlImporter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.model.PeriodType;
+import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
@@ -222,6 +226,7 @@ public void shouldClearAllTablesWhenDeletingAllAccounts(){
 
         ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
         scheduledAction.setActionUID("Test-uid");
+        scheduledAction.setRecurrence(new Recurrence(PeriodType.WEEK));
         ScheduledActionDbAdapter scheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
 
         scheduledActionDbAdapter.addRecord(scheduledAction);
@@ -232,6 +237,9 @@ public void shouldClearAllTablesWhenDeletingAllAccounts(){
         assertThat(mTransactionsDbAdapter.getRecordsCount()).isZero();
         assertThat(mSplitsDbAdapter.getRecordsCount()).isZero();
         assertThat(scheduledActionDbAdapter.getRecordsCount()).isZero();
+        assertThat(PricesDbAdapter.getInstance().getRecordsCount()).isZero();
+        assertThat(BudgetsDbAdapter.getInstance().getRecordsCount()).isZero();
+        assertThat(CommoditiesDbAdapter.getInstance().getRecordsCount()).isGreaterThan(50); //commodities should remain
     }
 
     @Test
@@ -376,6 +384,52 @@ public void shouldCreateImbalanceAccountOnDemand(){
         assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(2);
     }
 
+    @Test
+    public void editingAccountShouldNotDeleteTemplateSplits(){
+        Account account = new Account("First", Commodity.EUR);
+        Account transferAccount = new Account("Transfer", Commodity.EUR);
+
+        mAccountsDbAdapter.addRecord(account);
+        mAccountsDbAdapter.addRecord(transferAccount);
+
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(3); //plus root account
+
+        Money money = new Money(BigDecimal.TEN, Commodity.EUR);
+        Transaction transaction = new Transaction("Template");
+        transaction.setTemplate(true);
+        transaction.setCommodity(Commodity.EUR);
+        Split split = new Split(money, account.getUID());
+        transaction.addSplit(split);
+        transaction.addSplit(split.createPair(transferAccount.getUID()));
+
+        mTransactionsDbAdapter.addRecord(transaction);
+        List<Transaction> transactions = mTransactionsDbAdapter.getAllRecords();
+
+        assertThat(mTransactionsDbAdapter.getScheduledTransactionsForAccount(account.getUID())).hasSize(1);
+
+        //edit the account
+        account.setName("Edited account");
+        mAccountsDbAdapter.addRecord(account);
+
+        assertThat(mTransactionsDbAdapter.getScheduledTransactionsForAccount(account.getUID())).hasSize(1);
+        assertThat(mSplitsDbAdapter.getSplitsForTransaction(transaction.getUID())).hasSize(2);
+    }
+
+    @Test
+    public void testGetCurrenciesInUse(){
+        int expectedSize = 0;
+        List<Currency> currencies = mAccountsDbAdapter.getCurrenciesInUse();
+        assertThat(currencies).hasSize(expectedSize);
+
+        Account account = new Account("Dummy", Commodity.USD);
+        mAccountsDbAdapter.addRecord(account);
+        assertThat(mAccountsDbAdapter.getCurrenciesInUse()).hasSize(++expectedSize);
+
+        account = new Account("Dummy", Commodity.EUR);
+        mAccountsDbAdapter.addRecord(account);
+        assertThat(mAccountsDbAdapter.getCurrenciesInUse()).hasSize(++expectedSize);
+
+    }
 
     /**
      * Opening an XML file should set the default currency to that used by the most accounts in the file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/BudgetsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/BudgetsDbAdapterTest.java
new file mode 100644
index 00000000..de4c4ccd
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/BudgetsDbAdapterTest.java
@@ -0,0 +1,173 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.test.unit.db;
+
+import android.support.annotation.NonNull;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetsDbAdapter;
+import org.gnucash.android.db.adapter.RecurrenceDbAdapter;
+import org.gnucash.android.model.Account;
+import org.gnucash.android.model.Budget;
+import org.gnucash.android.model.BudgetAmount;
+import org.gnucash.android.model.Money;
+import org.gnucash.android.model.PeriodType;
+import org.gnucash.android.model.Recurrence;
+import org.gnucash.android.test.unit.util.GnucashTestRunner;
+import org.gnucash.android.test.unit.util.ShadowCrashlytics;
+import org.gnucash.android.test.unit.util.ShadowUserVoice;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * Tests for the budgets database adapter
+ */
+@RunWith(GnucashTestRunner.class) //package is required so that resources can be found in dev mode
+@Config(constants = BuildConfig.class, sdk = 21, packageName = "org.gnucash.android", shadows = {ShadowCrashlytics.class, ShadowUserVoice.class})
+public class BudgetsDbAdapterTest {
+
+    private BudgetsDbAdapter mBudgetsDbAdapter;
+    private RecurrenceDbAdapter mRecurrenceDbAdapter;
+    private BudgetAmountsDbAdapter mBudgetAmountsDbAdapter;
+    private AccountsDbAdapter mAccountsDbAdapter;
+
+    private Account mAccount;
+    private Account mSecondAccount;
+
+    @Before
+    public void setUp(){
+        mAccountsDbAdapter      = AccountsDbAdapter.getInstance();
+        mBudgetsDbAdapter       = BudgetsDbAdapter.getInstance();
+        mBudgetAmountsDbAdapter = BudgetAmountsDbAdapter.getInstance();
+        mRecurrenceDbAdapter    = RecurrenceDbAdapter.getInstance();
+
+        mAccount = new Account("Budgeted account");
+        mSecondAccount = new Account("Another account");
+        mAccountsDbAdapter.addRecord(mAccount);
+        mAccountsDbAdapter.addRecord(mSecondAccount);
+    }
+
+    @After
+    public void tearDown(){
+        mBudgetsDbAdapter.deleteAllRecords();
+        mBudgetAmountsDbAdapter.deleteAllRecords();
+        mRecurrenceDbAdapter.deleteAllRecords();
+    }
+
+    @Test
+    public void testAddingBudget(){
+        assertThat(mBudgetsDbAdapter.getRecordsCount()).isZero();
+        assertThat(mBudgetAmountsDbAdapter.getRecordsCount()).isZero();
+        assertThat(mRecurrenceDbAdapter.getRecordsCount()).isZero();
+
+        Budget budget = new Budget("Test");
+        budget.addBudgetAmount(new BudgetAmount(Money.getZeroInstance(), mAccount.getUID()));
+        budget.addBudgetAmount(new BudgetAmount(new Money("10", Money.DEFAULT_CURRENCY_CODE), mSecondAccount.getUID()));
+        Recurrence recurrence = new Recurrence(PeriodType.MONTH);
+        budget.setRecurrence(recurrence);
+
+        mBudgetsDbAdapter.addRecord(budget);
+        assertThat(mBudgetsDbAdapter.getRecordsCount()).isEqualTo(1);
+        assertThat(mBudgetAmountsDbAdapter.getRecordsCount()).isEqualTo(2);
+        assertThat(mRecurrenceDbAdapter.getRecordsCount()).isEqualTo(1);
+
+        budget.getBudgetAmounts().clear();
+        BudgetAmount budgetAmount = new BudgetAmount(new Money("5", Money.DEFAULT_CURRENCY_CODE), mAccount.getUID());
+        budget.addBudgetAmount(budgetAmount);
+        mBudgetsDbAdapter.addRecord(budget);
+
+        assertThat(mBudgetAmountsDbAdapter.getRecordsCount()).isEqualTo(1);
+        assertThat(mBudgetAmountsDbAdapter.getAllRecords().get(0).getUID()).isEqualTo(budgetAmount.getUID());
+    }
+
+    /**
+     * Test that when bulk adding budgets, all the associated budgetAmounts and recurrences are saved
+     */
+    @Test
+    public void testBulkAddBudgets(){
+        assertThat(mBudgetsDbAdapter.getRecordsCount()).isZero();
+        assertThat(mBudgetAmountsDbAdapter.getRecordsCount()).isZero();
+        assertThat(mRecurrenceDbAdapter.getRecordsCount()).isZero();
+
+        List<Budget> budgets = bulkCreateBudgets();
+
+        mBudgetsDbAdapter.bulkAddRecords(budgets);
+
+        assertThat(mBudgetsDbAdapter.getRecordsCount()).isEqualTo(2);
+        assertThat(mBudgetAmountsDbAdapter.getRecordsCount()).isEqualTo(3);
+        assertThat(mRecurrenceDbAdapter.getRecordsCount()).isEqualTo(2);
+
+    }
+
+    @Test
+    public void testGetAccountBudgets(){
+        mBudgetsDbAdapter.bulkAddRecords(bulkCreateBudgets());
+
+        List<Budget> budgets = mBudgetsDbAdapter.getAccountBudgets(mAccount.getUID());
+        assertThat(budgets).hasSize(2);
+
+        assertThat(mBudgetsDbAdapter.getAccountBudgets(mSecondAccount.getUID())).hasSize(1);
+    }
+
+    @NonNull
+    private List<Budget> bulkCreateBudgets() {
+        List<Budget> budgets = new ArrayList<>();
+        Budget budget = new Budget("", new Recurrence(PeriodType.MONTH));
+        budget.addBudgetAmount(new BudgetAmount(Money.getZeroInstance(), mAccount.getUID()));
+        budgets.add(budget);
+
+        budget = new Budget("Random", new Recurrence(PeriodType.WEEK));
+        budget.addBudgetAmount(new BudgetAmount(new Money("10.50", Money.DEFAULT_CURRENCY_CODE), mAccount.getUID()));
+        budget.addBudgetAmount(new BudgetAmount(new Money("32.35", Money.DEFAULT_CURRENCY_CODE), mSecondAccount.getUID()));
+
+        budgets.add(budget);
+        return budgets;
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void savingBudget_shouldRequireExistingAccount(){
+        Budget budget = new Budget("");
+        budget.addBudgetAmount(new BudgetAmount(Money.getZeroInstance(), "unknown-account"));
+
+        mBudgetsDbAdapter.addRecord(budget);
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void savingBudget_shouldRequireRecurrence(){
+        Budget budget = new Budget("");
+        budget.addBudgetAmount(new BudgetAmount(Money.getZeroInstance(), mAccount.getUID()));
+
+        mBudgetsDbAdapter.addRecord(budget);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void savingBudget_shouldRequireBudgetAmount(){
+        Budget budget = new Budget("");
+        budget.setRecurrence(new Recurrence(PeriodType.MONTH));
+
+        mBudgetsDbAdapter.addRecord(budget);
+    }
+}
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/PriceDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/PriceDbAdapterTest.java
new file mode 100644
index 00000000..8264390a
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/PriceDbAdapterTest.java
@@ -0,0 +1,60 @@
+package org.gnucash.android.test.unit.db;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.PricesDbAdapter;
+import org.gnucash.android.model.Price;
+import org.gnucash.android.test.unit.util.GnucashTestRunner;
+import org.gnucash.android.test.unit.util.ShadowCrashlytics;
+import org.gnucash.android.test.unit.util.ShadowUserVoice;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import static org.assertj.core.api.Assertions.assertThat;
+/**
+ * Test price functions
+ */
+@RunWith(GnucashTestRunner.class) //package is required so that resources can be found in dev mode
+@Config(constants = BuildConfig.class, sdk = 21, packageName = "org.gnucash.android", shadows = {ShadowCrashlytics.class, ShadowUserVoice.class})
+public class PriceDbAdapterTest {
+
+    /**
+     * The price table should override price for any commodity/currency pair
+     * todo: maybe move this to UI testing. Not sure how Robolectric handles this
+     */
+    @Test
+    public void shouldOnlySaveOnePricePerCommodityPair(){
+        String commodityUID = CommoditiesDbAdapter.getInstance().getCommodityUID("EUR");
+        String currencyUID = CommoditiesDbAdapter.getInstance().getCommodityUID("USD");
+        Price price = new Price(commodityUID, currencyUID);
+        price.setValueNum(134);
+        price.setValueDenom(100);
+
+        PricesDbAdapter pricesDbAdapter = PricesDbAdapter.getInstance();
+        pricesDbAdapter.addRecord(price);
+
+        price = pricesDbAdapter.getRecord(price.getUID());
+        assertThat(pricesDbAdapter.getRecordsCount()).isEqualTo(1);
+        assertThat(price.getValueNum()).isEqualTo(134);
+
+        Price price1 = new Price(commodityUID, currencyUID);
+        price1.setValueNum(187);
+        price1.setValueDenom(100);
+        pricesDbAdapter.addRecord(price1);
+
+        assertThat(pricesDbAdapter.getRecordsCount()).isEqualTo(1);
+        Price savedPrice = pricesDbAdapter.getAllRecords().get(0);
+        assertThat(savedPrice.getUID()).isEqualTo(price1.getUID()); //different records
+        assertThat(savedPrice.getValueNum()).isEqualTo(187);
+        assertThat(savedPrice.getValueDenom()).isEqualTo(100);
+
+
+        Price price2 = new Price(currencyUID, commodityUID);
+        price2.setValueNum(190);
+        price2.setValueDenom(100);
+        pricesDbAdapter.addRecord(price2);
+
+        assertThat(pricesDbAdapter.getRecordsCount()).isEqualTo(2);
+    }
+}
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
new file mode 100644
index 00000000..1f93e745
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
@@ -0,0 +1,73 @@
+package org.gnucash.android.test.unit.db;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.model.BaseModel;
+import org.gnucash.android.model.PeriodType;
+import org.gnucash.android.model.Recurrence;
+import org.gnucash.android.model.ScheduledAction;
+import org.gnucash.android.test.unit.util.GnucashTestRunner;
+import org.gnucash.android.test.unit.util.ShadowCrashlytics;
+import org.gnucash.android.test.unit.util.ShadowUserVoice;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import java.util.List;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * Test the scheduled actions database adapter
+ */
+@RunWith(GnucashTestRunner.class) //package is required so that resources can be found in dev mode
+@Config(constants = BuildConfig.class, sdk = 21, packageName = "org.gnucash.android", shadows = {ShadowCrashlytics.class, ShadowUserVoice.class})
+public class ScheduledActionDbAdapterTest {
+
+    ScheduledActionDbAdapter mScheduledActionDbAdapter;
+
+    @Before
+    public void setUp(){
+        mScheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
+    }
+
+    public void shouldFetchOnlyEnabledScheduledActions(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        scheduledAction.setRecurrence(new Recurrence(PeriodType.MONTH));
+        scheduledAction.setEnabled(false);
+
+        mScheduledActionDbAdapter.addRecord(scheduledAction);
+
+        scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        scheduledAction.setRecurrence(new Recurrence(PeriodType.WEEK));
+        mScheduledActionDbAdapter.addRecord(scheduledAction);
+
+        assertThat(mScheduledActionDbAdapter.getAllRecords()).hasSize(2);
+
+        List<ScheduledAction> enabledActions = mScheduledActionDbAdapter.getAllEnabledScheduledActions();
+        assertThat(enabledActions).hasSize(1);
+        assertThat(enabledActions.get(0).getRecurrence().getPeriodType()).isEqualTo(PeriodType.WEEK);
+    }
+
+    @Test(expected = NullPointerException.class) //no recurrence is set
+    public void everyScheduledActionShouldHaveRecurrence(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        scheduledAction.setActionUID(BaseModel.generateUID());
+        mScheduledActionDbAdapter.addRecord(scheduledAction);
+    }
+
+    @Test
+    public void testGenerateRepeatString(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        PeriodType periodType = PeriodType.MONTH;
+        periodType.setMultiplier(2);
+        scheduledAction.setRecurrence(new Recurrence(periodType));
+        scheduledAction.setTotalFrequency(4);
+
+        String repeatString = "Every 2 months,  for 4 times";
+        assertThat(scheduledAction.getRepeatString().trim()).isEqualTo(repeatString);
+
+    }
+
+}
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest.java
index 1685ee24..df3b954c 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest.java
@@ -1,12 +1,27 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 package org.gnucash.android.test.unit.db;
 
 import android.database.sqlite.SQLiteException;
 
 import org.gnucash.android.BuildConfig;
-import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
index 6b5432c7..2fedbe0c 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
@@ -2,9 +2,9 @@
 
 import org.assertj.core.data.Index;
 import org.gnucash.android.BuildConfig;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.SplitsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/BudgetTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/BudgetTest.java
new file mode 100644
index 00000000..7b2c4bcc
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/BudgetTest.java
@@ -0,0 +1,186 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.test.unit.model;
+
+import org.gnucash.android.model.Budget;
+import org.gnucash.android.model.BudgetAmount;
+import org.gnucash.android.model.Money;
+import org.junit.Test;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * Tests for budgets
+ */
+public class BudgetTest {
+    
+    @Test
+    public void addingBudgetAmount_shouldSetBudgetUID(){
+        Budget budget = new Budget("Test");
+
+        assertThat(budget.getBudgetAmounts()).isNotNull();
+        BudgetAmount budgetAmount = new BudgetAmount(Money.getZeroInstance(), "test");
+        budget.addBudgetAmount(budgetAmount);
+
+        assertThat(budget.getBudgetAmounts()).hasSize(1);
+        assertThat(budgetAmount.getBudgetUID()).isEqualTo(budget.getUID());
+
+        //setting a whole list should also set the budget UIDs
+        List<BudgetAmount> budgetAmounts = new ArrayList<>();
+        budgetAmounts.add(new BudgetAmount(Money.getZeroInstance(),"test"));
+        budgetAmounts.add(new BudgetAmount(Money.getZeroInstance(), "second"));
+
+        budget.setBudgetAmounts(budgetAmounts);
+
+        assertThat(budget.getBudgetAmounts()).extracting("mBudgetUID")
+                .contains(budget.getUID());
+    }
+
+    @Test
+    public void shouldComputeAbsoluteAmountSum(){
+        Budget budget = new Budget("Test");
+        Money accountAmount = new Money("-20", "USD");
+        BudgetAmount budgetAmount = new BudgetAmount(accountAmount, "account1");
+        BudgetAmount budgetAmount1 = new BudgetAmount(new Money("10", "USD"), "account2");
+
+        budget.addBudgetAmount(budgetAmount);
+        budget.addBudgetAmount(budgetAmount1);
+
+        assertThat(budget.getAmount("account1")).isEqualTo(accountAmount.abs());
+        assertThat(budget.getAmountSum()).isEqualTo(new Money("30", "USD"));
+    }
+
+    /**
+     * Tests that the method {@link Budget#getCompactedBudgetAmounts()} does not aggregate
+     * {@link BudgetAmount}s which have different money amounts
+     */
+    @Test
+    public void shouldNotCompactBudgetAmountsWithDifferentAmounts(){
+        Budget budget = new Budget("Test");
+        budget.setNumberOfPeriods(6);
+        BudgetAmount budgetAmount = new BudgetAmount(new Money("10", "USD"), "test");
+        budgetAmount.setPeriodNum(1);
+        budget.addBudgetAmount(budgetAmount);
+
+        budgetAmount = new BudgetAmount(new Money("15", "USD"), "test");
+        budgetAmount.setPeriodNum(2);
+        budget.addBudgetAmount(budgetAmount);
+
+        budgetAmount = new BudgetAmount(new Money("5", "USD"), "secondAccount");
+        budgetAmount.setPeriodNum(5);
+        budget.addBudgetAmount(budgetAmount);
+
+        List<BudgetAmount> compactedBudgetAmounts = budget.getCompactedBudgetAmounts();
+        assertThat(compactedBudgetAmounts).hasSize(3);
+        assertThat(compactedBudgetAmounts).extracting("mAccountUID")
+                .contains("test", "secondAccount");
+
+        assertThat(compactedBudgetAmounts).extracting("mPeriodNum")
+                .contains(1L, 2L, 5L).doesNotContain(-1L);
+    }
+
+    /**
+     * Tests that the method {@link Budget#getCompactedBudgetAmounts()} aggregates {@link BudgetAmount}s
+     * with the same amount but leaves others untouched
+     */
+    @Test
+    public void addingSameAmounts_shouldCompactOnRetrieval(){
+        Budget budget = new Budget("Test");
+        budget.setNumberOfPeriods(6);
+        BudgetAmount budgetAmount = new BudgetAmount(new Money("10", "USD"), "first");
+        budgetAmount.setPeriodNum(1);
+        budget.addBudgetAmount(budgetAmount);
+
+        budgetAmount = new BudgetAmount(new Money("10", "USD"), "first");
+        budgetAmount.setPeriodNum(2);
+        budget.addBudgetAmount(budgetAmount);
+
+        budgetAmount = new BudgetAmount(new Money("10", "USD"), "first");
+        budgetAmount.setPeriodNum(5);
+        budget.addBudgetAmount(budgetAmount);
+
+        budgetAmount = new BudgetAmount(new Money("10", "EUR"), "second");
+        budgetAmount.setPeriodNum(4);
+        budget.addBudgetAmount(budgetAmount);
+
+        budgetAmount = new BudgetAmount(new Money("13", "EUR"), "third");
+        budgetAmount.setPeriodNum(-1);
+        budget.addBudgetAmount(budgetAmount);
+
+        List<BudgetAmount> compactedBudgetAmounts = budget.getCompactedBudgetAmounts();
+
+        assertThat(compactedBudgetAmounts).hasSize(3);
+        assertThat(compactedBudgetAmounts).extracting("mPeriodNum").hasSize(3)
+                .contains(-1L, 4L).doesNotContain(1L, 2L, 3L);
+
+        assertThat(compactedBudgetAmounts).extracting("mAccountUID").hasSize(3)
+                .contains("first", "second", "third");
+
+    }
+
+    /**
+     * Test that when we set a periodNumber of -1 to a budget amount, the method {@link Budget#getExpandedBudgetAmounts()}
+     * should create new budget amounts for each of the periods in the budgeting period
+     */
+    @Test
+    public void addingNegativePeriodNum_shouldExpandOnRetrieval(){
+        Budget budget = new Budget("Test");
+        budget.setNumberOfPeriods(6);
+        BudgetAmount budgetAmount = new BudgetAmount(new Money("10", "USD"), "first");
+        budgetAmount.setPeriodNum(-1);
+        budget.addBudgetAmount(budgetAmount);
+
+        List<BudgetAmount> expandedBudgetAmount = budget.getExpandedBudgetAmounts();
+
+        assertThat(expandedBudgetAmount).hasSize(6);
+
+        assertThat(expandedBudgetAmount).extracting("mPeriodNum").hasSize(6)
+                .contains(0L,1L,2L,3L,4L,5L).doesNotContain(-1L);
+
+        assertThat(expandedBudgetAmount).extracting("mAccountUID").hasSize(6);
+    }
+
+    @Test
+    public void testGetNumberOfAccounts(){
+        Budget budget = new Budget("Test");
+        budget.setNumberOfPeriods(6);
+        BudgetAmount budgetAmount = new BudgetAmount(new Money("10", "USD"), "first");
+        budgetAmount.setPeriodNum(1);
+        budget.addBudgetAmount(budgetAmount);
+
+        budgetAmount = new BudgetAmount(new Money("10", "USD"), "first");
+        budgetAmount.setPeriodNum(2);
+        budget.addBudgetAmount(budgetAmount);
+
+        budgetAmount = new BudgetAmount(new Money("10", "USD"), "first");
+        budgetAmount.setPeriodNum(5);
+        budget.addBudgetAmount(budgetAmount);
+
+        budgetAmount = new BudgetAmount(new Money("10", "EUR"), "second");
+        budgetAmount.setPeriodNum(4);
+        budget.addBudgetAmount(budgetAmount);
+
+        budgetAmount = new BudgetAmount(new Money("13", "EUR"), "third");
+        budgetAmount.setPeriodNum(-1);
+        budget.addBudgetAmount(budgetAmount);
+
+        assertThat(budget.getNumberOfAccounts()).isEqualTo(3);
+    }
+}
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java
index fd5eb6a8..f84048a7 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java
@@ -76,7 +76,7 @@ public void testAddition(){
 		validateImmutability();				
 	}
 
-	@Test(expected = IllegalArgumentException.class)
+	@Test(expected = Money.CurrencyMismatchException.class)
 	public void testAdditionWithIncompatibleCurrency(){
 		Money addend = new Money("4", "USD");
 		mMoneyInEur.add(addend);
@@ -90,7 +90,7 @@ public void testSubtraction(){
 		validateImmutability();		
 	}
 
-	@Test(expected = IllegalArgumentException.class)
+	@Test(expected = Money.CurrencyMismatchException.class)
 	public void testSubtractionWithDifferentCurrency(){
 		Money addend = new Money("4", "USD");
 		mMoneyInEur.subtract(addend);
@@ -104,7 +104,7 @@ public void testMultiplication(){
 		validateImmutability();
 	}
 
-	@Test(expected = IllegalArgumentException.class)
+	@Test(expected = Money.CurrencyMismatchException.class)
 	public void testMultiplicationWithDifferentCurrencies(){
 		Money addend = new Money("4", "USD");
 		mMoneyInEur.multiply(addend);
@@ -118,7 +118,7 @@ public void testDivision(){
 		validateImmutability();
 	}
 
-	@Test(expected = IllegalArgumentException.class)
+	@Test(expected = Money.CurrencyMismatchException.class)
 	public void testDivisionWithDifferentCurrency(){
 		Money addend = new Money("4", "USD");
 		mMoneyInEur.divide(addend);
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java
new file mode 100644
index 00000000..ccc54f9b
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java
@@ -0,0 +1,61 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.test.unit.model;
+
+import org.gnucash.android.model.PeriodType;
+import org.gnucash.android.model.Recurrence;
+import org.junit.Test;
+
+import java.sql.Timestamp;
+import java.util.Calendar;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * Test {@link Recurrence}s
+ */
+public class RecurrenceTest {
+
+    @Test
+    public void settingCount_shouldComputeCorrectEndTime(){
+        Recurrence recurrence = new Recurrence(PeriodType.MONTH);
+        Calendar cal = Calendar.getInstance();
+        cal.set(2015, Calendar.OCTOBER, 5);
+
+        recurrence.setPeriodStart(new Timestamp(cal.getTimeInMillis()));
+        recurrence.setPeriodEnd(3);
+
+        cal.set(2016, Calendar.JANUARY, 5);
+        assertThat(recurrence.getPeriodEnd().getTime()).isEqualTo(cal.getTimeInMillis());
+    }
+
+    /**
+     * When the end date of a recurrence is set, we should be able to correctly get the number of occurrences
+     */
+    @Test
+    public void testRecurrenceCountComputation(){
+        Recurrence recurrence = new Recurrence(PeriodType.MONTH);
+        Calendar cal = Calendar.getInstance();
+        cal.set(2015, Calendar.OCTOBER, 5);
+
+        recurrence.setPeriodStart(new Timestamp(cal.getTimeInMillis()));
+        cal.set(2016, Calendar.AUGUST, 5);
+        recurrence.setPeriodEnd(new Timestamp(cal.getTimeInMillis()));
+
+        assertThat(recurrence.getCount()).isEqualTo(10);
+    }
+}
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java
new file mode 100644
index 00000000..f4bf0af5
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java
@@ -0,0 +1,82 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.test.unit.model;
+
+import org.gnucash.android.model.PeriodType;
+import org.gnucash.android.model.Recurrence;
+import org.gnucash.android.model.ScheduledAction;
+import org.junit.Test;
+
+import java.sql.Timestamp;
+import java.util.Calendar;
+
+import static org.assertj.core.api.Assertions.assertThat;
+/**
+ * Test scheduled actions
+ */
+public class ScheduledActionTest {
+
+    @Test
+    public void settingStartTime_shouldSetRecurrenceStart(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        Calendar calendar = Calendar.getInstance();
+        calendar.set(2014, 8, 26);
+        long startTime = calendar.getTimeInMillis();
+        scheduledAction.setStartTime(startTime);
+        assertThat(scheduledAction.getRecurrence()).isNull();
+
+        Recurrence recurrence = new Recurrence(PeriodType.MONTH);
+        assertThat(recurrence.getPeriodStart().getTime()).isNotEqualTo(startTime);
+        scheduledAction.setRecurrence(recurrence);
+        assertThat(recurrence.getPeriodStart().getTime()).isEqualTo(startTime);
+
+        calendar.clear();
+        calendar.set(2015, 6, 6);
+        long newStartTime = calendar.getTimeInMillis();
+        scheduledAction.setStartTime(newStartTime);
+        assertThat(recurrence.getPeriodStart().getTime()).isEqualTo(newStartTime);
+    }
+
+    @Test
+    public void settingRecurrence_shouldSetScheduledActionStartTime(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
+        assertThat(scheduledAction.getStartTime()).isEqualTo(0);
+
+        Calendar calendar = Calendar.getInstance();
+        calendar.set(2014, 8, 26);
+        Recurrence recurrence = new Recurrence(PeriodType.WEEK);
+        recurrence.setPeriodStart(new Timestamp(calendar.getTimeInMillis()));
+        scheduledAction.setRecurrence(recurrence);
+        assertThat(scheduledAction.getStartTime()).isEqualTo(calendar.getTimeInMillis());
+    }
+
+    @Test
+    public void settingRecurrence_shouldSetEndTime(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
+        assertThat(scheduledAction.getStartTime()).isEqualTo(0);
+
+        Calendar calendar = Calendar.getInstance();
+        calendar.set(2017, 8, 26);
+        Recurrence recurrence = new Recurrence(PeriodType.WEEK);
+        recurrence.setPeriodEnd(new Timestamp(calendar.getTimeInMillis()));
+        scheduledAction.setRecurrence(recurrence);
+
+        assertThat(scheduledAction.getEndTime()).isEqualTo(calendar.getTimeInMillis());
+    }
+
+    //todo add test for computing the scheduledaction endtime from the recurrence count
+}

From da8b36d22630bb27f209f75efc0b1414faa7d67d Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 23 Nov 2015 00:41:10 +0100
Subject: [PATCH 002/121] Fix crash when creating budgets

Add view for setting budget start
---
 .../org/gnucash/android/db/MigrationHelper.java    |  3 +-
 .../android/ui/budget/BudgetFormFragment.java      | 52 ++++++++++++++++++++--
 .../gnucash/android/ui/util/RecurrenceParser.java  |  6 +--
 app/src/main/res/layout/fragment_budget_form.xml   | 24 ++++++++++
 4 files changed, 77 insertions(+), 8 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index 1617ccb1..d9462664 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -1343,8 +1343,9 @@ static int upgradeDbToVersion12(SQLiteDatabase db){
 
             db.execSQL(" ALTER TABLE " + SplitEntry.TABLE_NAME
                     + " ADD COLUMN " + SplitEntry.COLUMN_RECONCILE_STATE + " varchar(1) not null default 'n' ");
+            //// FIXME: 22.11.15 Cannot add a column with non-constant default. Create new structure and migrate whole table
             db.execSQL(" ALTER TABLE " + SplitEntry.TABLE_NAME
-                    + " ADD COLUMN " + SplitEntry.COLUMN_RECONCILE_DATE + " timestamp not null default CURRENT_TIMESTAMP ");
+                    + " ADD COLUMN " + SplitEntry.COLUMN_RECONCILE_DATE + " timestamp not null default '' ");
 
             db.setTransactionSuccessful();
             oldVersion = 12;
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
index 4ec87947..fe50d322 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
@@ -24,6 +24,7 @@
 import android.support.v4.app.Fragment;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -39,6 +40,7 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
+import com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialogFragment;
 import com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;
 import com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter;
 import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment;
@@ -51,25 +53,32 @@
 import org.gnucash.android.model.BudgetAmount;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.model.ScheduledAction;
+import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.ui.common.UxArgument;
+import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.util.RecurrenceParser;
 import org.gnucash.android.ui.util.RecurrenceViewClickListener;
 import org.gnucash.android.ui.util.widget.CalculatorEditText;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
 import java.math.BigDecimal;
+import java.sql.Timestamp;
+import java.text.ParseException;
 import java.util.ArrayList;
+import java.util.Calendar;
 import java.util.Currency;
+import java.util.Date;
+import java.util.GregorianCalendar;
 import java.util.List;
 
 import butterknife.Bind;
 import butterknife.ButterKnife;
+import butterknife.OnClick;
 
 /**
  * Fragment for creating or editing Budgets
  */
-public class BudgetFormFragment extends Fragment implements RecurrencePickerDialogFragment.OnRecurrenceSetListener {
+public class BudgetFormFragment extends Fragment implements RecurrencePickerDialogFragment.OnRecurrenceSetListener, CalendarDatePickerDialogFragment.OnDateSetListener {
 
     @Bind(R.id.input_budget_name)   EditText mBudgetNameInput;
     @Bind(R.id.input_description)   EditText mDescriptionInput;
@@ -78,6 +87,7 @@
     @Bind(R.id.calculator_keyboard)     KeyboardView mKeyboardView;
     @Bind(R.id.budget_amount_table_layout) TableLayout mBudgetAmountTableLayout;
     @Bind(R.id.btn_add_budget_amount)   Button mAddBudgetAmount;
+    @Bind(R.id.input_start_date)        TextView mStartDateInput;
 
     EventRecurrence mEventRecurrence = new EventRecurrence();
     String mRecurrenceRule;
@@ -91,6 +101,8 @@
 
     private List<View> mBudgetAmountViews = new ArrayList<>();
 
+    private Calendar mStartDate;
+
     @Nullable
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
@@ -107,6 +119,7 @@ public void onClick(View v) {
                 addBudgetAmountView(null);
             }
         });
+        mStartDateInput.setText(TransactionFormFragment.DATE_FORMATTER.format(mStartDate.getTime()));
         return view;
     }
 
@@ -115,6 +128,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
         mBudgetsDbAdapter = BudgetsDbAdapter.getInstance();
+        mStartDate = Calendar.getInstance();
     }
 
     @Override
@@ -280,7 +294,9 @@ private void saveBudget(){
 
         mBudget.setDescription(mDescriptionInput.getText().toString().trim());
 
-        mBudget.setRecurrence(RecurrenceParser.parse(mEventRecurrence));
+        Recurrence recurrence = RecurrenceParser.parse(mEventRecurrence);
+        recurrence.setPeriodStart(new Timestamp(mStartDate.getTimeInMillis()));
+        mBudget.setRecurrence(recurrence);
 
         mBudgetsDbAdapter.addRecord(mBudget);
         getActivity().finish();
@@ -301,6 +317,27 @@ public boolean onOptionsItemSelected(MenuItem item) {
         return false;
     }
 
+    @OnClick(R.id.input_start_date)
+    public void onClick(View v) {
+        long dateMillis = 0;
+        try {
+            Date date = TransactionFormFragment.DATE_FORMATTER.parse(((TextView) v).getText().toString());
+            dateMillis = date.getTime();
+        } catch (ParseException e) {
+            Log.e(getTag(), "Error converting input time to Date object");
+        }
+        Calendar calendar = Calendar.getInstance();
+        calendar.setTimeInMillis(dateMillis);
+
+        int year = calendar.get(Calendar.YEAR);
+        int monthOfYear = calendar.get(Calendar.MONTH);
+        int dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);
+        CalendarDatePickerDialogFragment datePickerDialog = CalendarDatePickerDialogFragment.newInstance(
+                BudgetFormFragment.this,
+                year, monthOfYear, dayOfMonth);
+        datePickerDialog.show(getFragmentManager(), "date_picker_fragment");
+    }
+
     @Override
     public void onRecurrenceSet(String rrule) {
         mRecurrenceRule = rrule;
@@ -313,6 +350,15 @@ public void onRecurrenceSet(String rrule) {
         mRecurrenceInput.setText(repeatString);
     }
 
+    @Override
+    public void onDateSet(CalendarDatePickerDialogFragment dialog, int year, int monthOfYear, int dayOfMonth) {
+        Calendar cal = new GregorianCalendar(year, monthOfYear, dayOfMonth);
+        mStartDateInput.setText(TransactionFormFragment.DATE_FORMATTER.format(cal.getTime()));
+        mStartDate.set(Calendar.YEAR, year);
+        mStartDate.set(Calendar.MONTH, monthOfYear);
+        mStartDate.set(Calendar.DAY_OF_MONTH, dayOfMonth);
+    }
+
     /**
      * View holder for budget amounts
      */
diff --git a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
index f408a8dd..3e19812d 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
@@ -22,12 +22,9 @@
 
 import org.gnucash.android.model.PeriodType;
 import org.gnucash.android.model.Recurrence;
-import org.gnucash.android.model.ScheduledAction;
 
 import java.sql.Timestamp;
-import java.util.ArrayList;
 import java.util.Calendar;
-import java.util.List;
 
 /**
  * Parses {@link EventRecurrence}s to generate
@@ -80,7 +77,8 @@ public static Recurrence parse(EventRecurrence eventRecurrence){
         Recurrence recurrence = new Recurrence(periodType);
         parseEndTime(eventRecurrence, recurrence);
         recurrence.setByDay(parseByDay(eventRecurrence.byday));
-        recurrence.setPeriodStart(new Timestamp(eventRecurrence.startDate.toMillis(false)));
+        if (eventRecurrence.startDate != null)
+            recurrence.setPeriodStart(new Timestamp(eventRecurrence.startDate.toMillis(false)));
 
         return recurrence;
     }
diff --git a/app/src/main/res/layout/fragment_budget_form.xml b/app/src/main/res/layout/fragment_budget_form.xml
index 386397e8..43955696 100644
--- a/app/src/main/res/layout/fragment_budget_form.xml
+++ b/app/src/main/res/layout/fragment_budget_form.xml
@@ -16,6 +16,7 @@
 -->
 
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
     android:animateLayoutChanges="true"
     android:orientation="vertical"
     android:layout_width="match_parent"
@@ -62,6 +63,7 @@
                 android:inputType="textMultiLine|textCapSentences" />
         </TableRow>
         <View style="@style/Divider" />
+
         <TableRow style="@style/FormRow"
             android:paddingLeft="@dimen/dialog_padding"
             android:paddingRight="@dimen/dialog_padding">
@@ -78,6 +80,28 @@
                 style="@style/Dropdown.TextView" />
 
         </TableRow>
+
+        <TableRow style="@style/FormRow"
+            android:paddingLeft="@dimen/dialog_padding"
+            android:paddingRight="@dimen/dialog_padding">
+
+            <TextView
+                android:layout_width="0dp"
+                android:layout_weight="2"
+                android:layout_height="wrap_content"
+                android:textAllCaps="true"
+                android:text="START"/>
+
+            <TextView android:id="@+id/input_start_date"
+                android:layout_width="0dp"
+                android:layout_weight="5"
+                android:layout_height="wrap_content"
+                tools:text="29.11.2015"
+                android:clickable="true"
+                android:textColor="@android:color/black"
+                android:gravity="left"      />
+        </TableRow>
+
         <TableRow style="@style/FormRow"
             android:paddingLeft="@dimen/dialog_padding"
             android:layout_marginBottom="@dimen/dialog_padding"

From 56d37550baf148270c68356bb3e3acbe6145af34 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 23 Nov 2015 22:18:32 +0100
Subject: [PATCH 003/121] Fix crash when cancelling the open file intent.

Fixes https://github.com/codinguser/gnucash-android/issues/433
---
 .../gnucash/android/ui/common/BaseDrawerActivity.java   | 17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 1f702e25..5181e7cb 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -40,10 +40,13 @@
 
 
 /**
- * Base activity implementing the navigation drawer, to be extended by all activities requiring one
- * <p>All subclasses should call the {@link #setUpDrawer()} method in {@link #onCreate(Bundle)}, after the
- * activity layout has been set.<br/>
- * The activity layout of the subclass is expected to contain {@code DrawerLayout} and a {@code NavigationView}</p>
+ * Base activity implementing the navigation drawer, to be extended by all activities requiring one.
+ *
+ * All subclasses should call the {@link #setUpDrawer()} method in {@link #onCreate(Bundle)},
+ * after the activity layout has been set.
+ *
+ * The activity layout of the subclass is expected to contain {@code DrawerLayout} and
+ * a {@code NavigationView}.
  *
  * @author Ngewi Fet <ngewif@gmail.com>
  */
@@ -81,8 +84,8 @@ protected void setUpDrawer() {
         if (actionBar != null){
             actionBar.setHomeButtonEnabled(true);
             actionBar.setDisplayHomeAsUpEnabled(true);
-
         }
+
         mDrawerLayout   = (DrawerLayout) findViewById(R.id.drawer_layout);
         mNavigationView = (NavigationView) findViewById(R.id.nav_view);
 
@@ -108,6 +111,7 @@ public void onDrawerOpened(View drawerView) {
 
         mDrawerLayout.setDrawerListener(mDrawerToggle);
     }
+
     @Override
     protected void onPostCreate(Bundle savedInstanceState) {
         super.onPostCreate(savedInstanceState);
@@ -192,8 +196,9 @@ protected void onDrawerMenuItemClicked(int itemId) {
 
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        if (resultCode == Activity.RESULT_CANCELED){
+        if (resultCode == Activity.RESULT_CANCELED) {
             super.onActivityResult(requestCode, resultCode, data);
+            return;
         }
 
         switch (requestCode) {

From 789333b8a7304b4af8cb8b79c548bee10a305fd1 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Fri, 27 Nov 2015 14:00:30 +0800
Subject: [PATCH 004/121] fix the bug that modify account name will delete all
 transaction under the account

---
 .../gnucash/android/db/adapter/DatabaseAdapter.java    | 18 ++++++++++++++++++
 .../android/ui/account/AccountFormFragment.java        |  2 ++
 2 files changed, 20 insertions(+)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index 8881114f..a834379e 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -57,6 +57,10 @@
 
     protected SQLiteStatement mReplaceStatement;
 
+    public enum UpdateMethod {
+        insert, update, replace
+    };
+
     /**
      * Opens the database adapter with an existing database
      * @param db SQLiteDatabase object
@@ -625,6 +629,20 @@ public void setTransactionSuccessful() {
         mDb.setTransactionSuccessful();
     }
 
+    /// Foreign key constraits should be enabled in general.
+    /// But if it affects speed (check constraints takes time)
+    /// and the constrained can be assured by the program,
+    /// or if some SQL exec will cause deletion of records
+    /// (like use replace in accounts update will delete all transactions)
+    /// that need not be deleted, then it can be disabled temporarily
+    public void enableForeignKey(boolean enable) {
+        if (enable){
+            mDb.execSQL("PRAGMA foreign_keys=ON");
+        } else {
+            mDb.execSQL("PRAGMA foreign_keys=OFF");
+        }
+    }
+
     /**
      * Expose mDb.endTransaction()
      */
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 9c98be70..b1a48f45 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -846,7 +846,9 @@ private void saveAccount() {
 		if (mAccountsDbAdapter == null)
 			mAccountsDbAdapter = AccountsDbAdapter.getInstance();
         // bulk update, will not update transactions
+        mAccountsDbAdapter.enableForeignKey(false);
 		mAccountsDbAdapter.bulkAddRecords(accountsToUpdate);
+        mAccountsDbAdapter.enableForeignKey(true);
 
 		finishFragment();
 	}

From 5bbe6310f8969d4c6099e6924dc02123c4222bf9 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 27 Nov 2015 15:49:11 +0100
Subject: [PATCH 005/121] Add new editor for budget amounts (using
 FormActivity)

Fix crash when creating/editing budgets
Fix recurrence rule not including count/end time
Fix crash when parsing weekly recurrences

Upgrade gradle wrapper to version 2.9
Update Android build tools and plugin (for use with Android Studio 2.0.0)
---
 app/build.gradle                                   |   2 +-
 .../android/db/adapter/AccountsDbAdapter.java      |   6 +-
 .../java/org/gnucash/android/model/Account.java    |   4 -
 .../java/org/gnucash/android/model/Budget.java     |   1 -
 .../org/gnucash/android/model/BudgetAmount.java    |  50 +++-
 .../main/java/org/gnucash/android/model/Money.java |   2 -
 .../java/org/gnucash/android/model/Recurrence.java |  25 +-
 .../android/ui/account/AccountsActivity.java       |  47 ++--
 .../ui/budget/BudgetAmountEditorFragment.java      | 278 +++++++++++++++++++++
 .../android/ui/budget/BudgetDetailFragment.java    |   5 +-
 .../android/ui/budget/BudgetFormFragment.java      | 244 ++++++++----------
 .../gnucash/android/ui/common/FormActivity.java    |  16 +-
 .../org/gnucash/android/ui/common/UxArgument.java  |   5 +
 .../gnucash/android/ui/util/RecurrenceParser.java  |   2 +-
 .../ui/util/RecurrenceViewClickListener.java       |   3 +-
 .../res/layout/fragment_budget_amount_editor.xml   |  42 ++++
 app/src/main/res/layout/fragment_budget_form.xml   | 174 ++++++-------
 app/src/main/res/layout/fragment_split_editor.xml  |   2 +-
 app/src/main/res/layout/item_budget_amount.xml     |   5 +-
 .../main/res/menu/budget_amount_editor_actions.xml |  27 ++
 .../test/unit/db/AccountsDbAdapterTest.java        |  13 +-
 build.gradle                                       |   2 +-
 gradle/wrapper/gradle-wrapper.jar                  | Bin 52266 -> 53636 bytes
 gradle/wrapper/gradle-wrapper.properties           |   4 +-
 gradlew                                            |  10 +-
 25 files changed, 669 insertions(+), 300 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/budget/BudgetAmountEditorFragment.java
 create mode 100644 app/src/main/res/layout/fragment_budget_amount_editor.xml
 create mode 100644 app/src/main/res/menu/budget_amount_editor_actions.xml

diff --git a/app/build.gradle b/app/build.gradle
index c0952bdc..62c5c1c8 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -21,7 +21,7 @@ def gitSha() {
 
 android {
     compileSdkVersion 23
-    buildToolsVersion "23.0.1"
+    buildToolsVersion '23.0.2'
     defaultConfig {
         applicationId "org.gnucash.android"
         testApplicationId 'org.gnucash.android.test'
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index 906b9673..5ecc726f 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -1203,14 +1203,18 @@ public static int getActiveAccountColorResource(@NonNull String accountUID) {
 	 */
     @Override
 	public int deleteAllRecords() {
-        mDb.delete(DatabaseSchema.PriceEntry.TABLE_NAME, null, null);
         // Relies "ON DELETE CASCADE" takes too much time
         // It take more than 300s to complete the deletion on my dataset without
         // clearing the split table first, but only needs a little more that 1s
         // if the split table is cleared first.
+        mDb.delete(DatabaseSchema.PriceEntry.TABLE_NAME, null, null);
         mDb.delete(SplitEntry.TABLE_NAME, null, null);
         mDb.delete(TransactionEntry.TABLE_NAME, null, null);
         mDb.delete(DatabaseSchema.ScheduledActionEntry.TABLE_NAME, null, null);
+        mDb.delete(DatabaseSchema.BudgetAmountEntry.TABLE_NAME, null, null);
+        mDb.delete(DatabaseSchema.BudgetEntry.TABLE_NAME, null, null);
+        mDb.delete(DatabaseSchema.RecurrenceEntry.TABLE_NAME, null, null);
+
         return mDb.delete(AccountEntry.TABLE_NAME, null, null);
     }
 
diff --git a/app/src/main/java/org/gnucash/android/model/Account.java b/app/src/main/java/org/gnucash/android/model/Account.java
index 6df05036..5ae6bc42 100644
--- a/app/src/main/java/org/gnucash/android/model/Account.java
+++ b/app/src/main/java/org/gnucash/android/model/Account.java
@@ -17,11 +17,7 @@
 package org.gnucash.android.model;
 
 
-import android.preference.PreferenceManager;
-
 import org.gnucash.android.BuildConfig;
-import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.export.Exporter;
 import org.gnucash.android.export.ofx.OfxHelper;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
diff --git a/app/src/main/java/org/gnucash/android/model/Budget.java b/app/src/main/java/org/gnucash/android/model/Budget.java
index 8605146e..db199b36 100644
--- a/app/src/main/java/org/gnucash/android/model/Budget.java
+++ b/app/src/main/java/org/gnucash/android/model/Budget.java
@@ -23,7 +23,6 @@
 
 import java.math.BigDecimal;
 import java.util.ArrayList;
-import java.util.Currency;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
diff --git a/app/src/main/java/org/gnucash/android/model/BudgetAmount.java b/app/src/main/java/org/gnucash/android/model/BudgetAmount.java
index 8aa42b26..714e4478 100644
--- a/app/src/main/java/org/gnucash/android/model/BudgetAmount.java
+++ b/app/src/main/java/org/gnucash/android/model/BudgetAmount.java
@@ -15,12 +15,19 @@
  */
 package org.gnucash.android.model;
 
+import android.os.Parcel;
+import android.os.Parcelable;
+
+import org.gnucash.android.app.GnuCashApplication;
+
+import java.math.BigDecimal;
+
 /**
  * Budget amounts for the different accounts.
  * The {@link Money} amounts are absolute values
  * @see Budget
  */
-public class BudgetAmount extends BaseModel {
+public class BudgetAmount extends BaseModel implements Parcelable {
 
     private String mBudgetUID;
     private String mAccountUID;
@@ -101,4 +108,45 @@ public Money getAmount() {
     public void setAmount(Money amount) {
         this.mAmount = amount.abs();
     }
+
+    @Override
+    public int describeContents() {
+        return 0;
+    }
+
+    @Override
+    public void writeToParcel(Parcel dest, int flags) {
+        dest.writeString(getUID());
+        dest.writeString(mBudgetUID);
+        dest.writeString(mAccountUID);
+        dest.writeString(mAmount.toPlainString());
+        dest.writeLong(mPeriodNum);
+    }
+
+    public static final Parcelable.Creator<BudgetAmount> CREATOR = new Parcelable.Creator<BudgetAmount>(){
+
+        @Override
+        public BudgetAmount createFromParcel(Parcel source) {
+            return new BudgetAmount(source);
+        }
+
+        @Override
+        public BudgetAmount[] newArray(int size) {
+            return new BudgetAmount[size];
+        }
+    };
+
+    /**
+     * Private constructor for creating new BudgetAmounts from a Parcel
+     * @param source Parcel
+     */
+    private BudgetAmount(Parcel source){
+        setUID(source.readString());
+        mBudgetUID = source.readString();
+        mAccountUID = source.readString();
+        mAmount = new Money(new BigDecimal(source.readString()), Commodity.DEFAULT_COMMODITY);
+        mPeriodNum = source.readLong();
+    }
+
+
 }
diff --git a/app/src/main/java/org/gnucash/android/model/Money.java b/app/src/main/java/org/gnucash/android/model/Money.java
index 7c5e0a70..ef7cec86 100644
--- a/app/src/main/java/org/gnucash/android/model/Money.java
+++ b/app/src/main/java/org/gnucash/android/model/Money.java
@@ -25,11 +25,9 @@
 import java.math.BigDecimal;
 import java.math.BigInteger;
 import java.math.RoundingMode;
-import java.security.InvalidParameterException;
 import java.text.DecimalFormat;
 import java.text.DecimalFormatSymbols;
 import java.text.NumberFormat;
-import java.text.ParseException;
 import java.util.Currency;
 import java.util.Locale;
 
diff --git a/app/src/main/java/org/gnucash/android/model/Recurrence.java b/app/src/main/java/org/gnucash/android/model/Recurrence.java
index 87dcb562..331a0bd1 100644
--- a/app/src/main/java/org/gnucash/android/model/Recurrence.java
+++ b/app/src/main/java/org/gnucash/android/model/Recurrence.java
@@ -125,13 +125,16 @@ public long getPeriod(){
     public String getRepeatString(){
         String dayOfWeek = new SimpleDateFormat("EEEE", Locale.US).format(new Date(mPeriodStart.getTime()));
 
-        StringBuilder ruleBuilder = new StringBuilder(mPeriodType.getFrequencyRepeatString());
+        StringBuilder repeatBuilder = new StringBuilder(mPeriodType.getFrequencyRepeatString());
 
         if (mPeriodType == PeriodType.WEEK) {
-            ruleBuilder.append(" on ").append(dayOfWeek);
+            repeatBuilder.append(" on ").append(dayOfWeek);
         }
 
-        return ruleBuilder.toString();
+        if (mPeriodEnd != null){
+            repeatBuilder.append(" until " + SimpleDateFormat.getDateInstance().format(new Date(mPeriodEnd.getTime())));
+        }
+        return repeatBuilder.toString();
     }
 
         /**
@@ -158,6 +161,8 @@ public String getRuleString(){
 
         ruleBuilder.append("FREQ=").append(mPeriodType.getFrequencyDescription()).append(separator);
         ruleBuilder.append("INTERVAL=").append(mPeriodType.getMultiplier()).append(separator);
+        if (getCount() > 0)
+            ruleBuilder.append("COUNT=").append(getCount()).append(separator);
         ruleBuilder.append(mPeriodType.getByParts(mPeriodStart.getTime())).append(separator);
 
         return ruleBuilder.toString();
@@ -275,7 +280,8 @@ public int getCount(){
                 count = Years.yearsBetween(startDate, endDate).getYears();
                 break;
         }
-        return count;
+
+        return count/mPeriodType.getMultiplier();
     }
 
     /**
@@ -285,21 +291,22 @@ public int getCount(){
     public void setPeriodEnd(int numberOfOccurences){
         LocalDateTime localDate = new LocalDateTime(mPeriodStart.getTime());
         LocalDateTime endDate;
+        int occurrenceDuration = numberOfOccurences * mPeriodType.getMultiplier();
         switch (mPeriodType){
             case DAY:
-                endDate = localDate.dayOfWeek().getLocalDateTime().plusDays(numberOfOccurences);
+                endDate = localDate.dayOfWeek().getLocalDateTime().plusDays(occurrenceDuration);
                 break;
             case WEEK:
-                endDate = localDate.dayOfWeek().getLocalDateTime().plusWeeks(numberOfOccurences);
+                endDate = localDate.dayOfWeek().getLocalDateTime().plusWeeks(occurrenceDuration);
                 break;
             case MONTH:
-                endDate = localDate.dayOfMonth().getLocalDateTime().plusMonths(numberOfOccurences);
+                endDate = localDate.dayOfMonth().getLocalDateTime().plusMonths(occurrenceDuration);
                 break;
             case YEAR:
-                endDate = localDate.monthOfYear().getLocalDateTime().plusYears(numberOfOccurences);
+                endDate = localDate.monthOfYear().getLocalDateTime().plusYears(occurrenceDuration);
                 break;
             default: //default to monthly
-                endDate = localDate.dayOfMonth().getLocalDateTime().plusMonths(numberOfOccurences);
+                endDate = localDate.dayOfMonth().getLocalDateTime().plusMonths(occurrenceDuration);
                 break;
         }
         mPeriodEnd = new Timestamp(endDate.toDate().getTime());
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 126094a1..493ca6e2 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -163,23 +163,25 @@ public AccountViewPagerAdapter(FragmentManager fm){
 
         @Override
         public Fragment getItem(int i) {
-            AccountsListFragment currentFragment;
-            switch (i){
-                case INDEX_RECENT_ACCOUNTS_FRAGMENT:
-                    currentFragment = AccountsListFragment.newInstance(AccountsListFragment.DisplayMode.RECENT);
-                    break;
-
-                case INDEX_FAVORITE_ACCOUNTS_FRAGMENT:
-                    currentFragment = AccountsListFragment.newInstance(AccountsListFragment.DisplayMode.FAVORITES);
-                    break;
-
-                case INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT:
-                default:
-                    currentFragment = AccountsListFragment.newInstance(AccountsListFragment.DisplayMode.TOP_LEVEL);
-                    break;
+            AccountsListFragment currentFragment = (AccountsListFragment) mFragmentPageReferenceMap.get(i);
+            if (currentFragment == null) {
+                switch (i) {
+                    case INDEX_RECENT_ACCOUNTS_FRAGMENT:
+                        currentFragment = AccountsListFragment.newInstance(AccountsListFragment.DisplayMode.RECENT);
+                        break;
+
+                    case INDEX_FAVORITE_ACCOUNTS_FRAGMENT:
+                        currentFragment = AccountsListFragment.newInstance(AccountsListFragment.DisplayMode.FAVORITES);
+                        break;
+
+                    case INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT:
+                    default:
+                        currentFragment = AccountsListFragment.newInstance(AccountsListFragment.DisplayMode.TOP_LEVEL);
+                        break;
+                }
+                mFragmentPageReferenceMap.put(i, currentFragment);
             }
 
-            mFragmentPageReferenceMap.put(i, currentFragment);
             return currentFragment;
         }
 
@@ -259,10 +261,7 @@ public void onTabReselected(TabLayout.Tab tab) {
             }
         });
 
-        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
-        int lastTabIndex = preferences.getInt(LAST_OPEN_TAB_INDEX, INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT);
-        int index = intent.getIntExtra(EXTRA_TAB_INDEX, lastTabIndex);
-        mViewPager.setCurrentItem(index);
+        setCurrentTab();
 
         mFloatingActionButton.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -348,17 +347,19 @@ public void onRequestPermissionsResult(int requestCode, String[] permissions, in
     @Override
     protected void onNewIntent(Intent intent) {
         super.onNewIntent(intent);
-        int index = intent.getIntExtra(EXTRA_TAB_INDEX, INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT);
-        setTab(index);
+        setIntent(intent);
+        setCurrentTab();
 
         handleOpenFileIntent(intent);
     }
 
     /**
      * Sets the current tab in the ViewPager
-     * @param index Index of fragment to be loaded
      */
-    public void setTab(int index){
+    public void setCurrentTab(){
+        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
+        int lastTabIndex = preferences.getInt(LAST_OPEN_TAB_INDEX, INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT);
+        int index = getIntent().getIntExtra(EXTRA_TAB_INDEX, lastTabIndex);
         mViewPager.setCurrentItem(index);
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetAmountEditorFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetAmountEditorFragment.java
new file mode 100644
index 00000000..522ab0db
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetAmountEditorFragment.java
@@ -0,0 +1,278 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.ui.budget;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.database.Cursor;
+import android.inputmethodservice.KeyboardView;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.Spinner;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetsDbAdapter;
+import org.gnucash.android.model.BudgetAmount;
+import org.gnucash.android.model.Commodity;
+import org.gnucash.android.model.Money;
+import org.gnucash.android.ui.common.UxArgument;
+import org.gnucash.android.ui.util.widget.CalculatorEditText;
+import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
+
+import java.math.BigDecimal;
+import java.util.ArrayList;
+import java.util.Currency;
+import java.util.List;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
+/**
+ * Fragment for editing budgeting amounts
+ */
+public class BudgetAmountEditorFragment extends Fragment {
+
+    private Cursor mAccountCursor;
+    private QualifiedAccountNameCursorAdapter mAccountCursorAdapter;
+    private List<View> mBudgetAmountViews = new ArrayList<>();
+    private AccountsDbAdapter mAccountsDbAdapter;
+
+    @Bind(R.id.budget_amount_layout)    LinearLayout mBudgetAmountTableLayout;
+    @Bind(R.id.calculator_keyboard)     KeyboardView mKeyboardView;
+
+    public static BudgetAmountEditorFragment newInstance(Bundle args){
+        BudgetAmountEditorFragment fragment = new BudgetAmountEditorFragment();
+        fragment.setArguments(args);
+        return fragment;
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
+                             @Nullable Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_budget_amount_editor, container, false);
+        ButterKnife.bind(this, view);
+        setupAccountSpinnerAdapter();
+        return view;
+    }
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        mAccountsDbAdapter = AccountsDbAdapter.getInstance();
+    }
+
+    @Override
+    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+
+        ActionBar actionBar = ((AppCompatActivity)getActivity()).getSupportActionBar();
+        assert actionBar != null;
+        actionBar.setTitle("Edit Budget Amounts");
+        setHasOptionsMenu(true);
+
+        ArrayList<BudgetAmount> budgetAmounts = getArguments().getParcelableArrayList(UxArgument.BUDGET_AMOUNT_LIST);
+        if (budgetAmounts != null) {
+            if (budgetAmounts.isEmpty()){
+                BudgetAmountViewHolder viewHolder = (BudgetAmountViewHolder) addBudgetAmountView(null).getTag();
+                viewHolder.removeItemBtn.setVisibility(View.GONE); //there should always be at least one
+            } else {
+                loadBudgetAmountViews(budgetAmounts);
+            }
+        } else {
+            BudgetAmountViewHolder viewHolder = (BudgetAmountViewHolder) addBudgetAmountView(null).getTag();
+            viewHolder.removeItemBtn.setVisibility(View.GONE); //there should always be at least one
+        }
+
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.budget_amount_editor_actions, menu);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()){
+            case R.id.menu_add_budget_amount:
+                addBudgetAmountView(null);
+                return true;
+
+            case R.id.menu_save:
+                saveBudgetAmounts();
+                return true;
+
+            default:
+                return super.onOptionsItemSelected(item);
+        }
+    }
+
+    /**
+     * Checks if the budget amounts can be saved
+     * @return {@code true} if all amounts a properly entered, {@code false} otherwise
+     */
+    private boolean canSave(){
+        for (View budgetAmountView : mBudgetAmountViews) {
+            BudgetAmountViewHolder viewHolder = (BudgetAmountViewHolder) budgetAmountView.getTag();
+            viewHolder.amountEditText.evaluate();
+            if (viewHolder.amountEditText.getError() != null){
+                return false;
+            }
+            //at least one account should be loaded (don't create budget with empty account tree
+            if (viewHolder.budgetAccountSpinner.getCount() == 0){
+                Toast.makeText(getActivity(), "You need an account hierarchy to create a budget!",
+                        Toast.LENGTH_SHORT).show();
+                return false;
+            }
+        }
+        return true;
+    }
+
+    private void saveBudgetAmounts() {
+        if (canSave()){
+            ArrayList<BudgetAmount> budgetAmounts = (ArrayList<BudgetAmount>) extractBudgetAmounts();
+            Intent data = new Intent();
+            data.putParcelableArrayListExtra(UxArgument.BUDGET_AMOUNT_LIST, budgetAmounts);
+            getActivity().setResult(Activity.RESULT_OK, data);
+            getActivity().finish();
+        }
+    }
+
+    /**
+     * Load views for the budget amounts
+     * @param budgetAmounts List of {@link BudgetAmount}s
+     */
+    private void loadBudgetAmountViews(List<BudgetAmount> budgetAmounts){
+        for (BudgetAmount budgetAmount : budgetAmounts) {
+            addBudgetAmountView(budgetAmount);
+        }
+    }
+
+    /**
+     * Inflates a new BudgetAmount item view and adds it to the UI.
+     * <p>If the {@code budgetAmount} is not null, then it is used to initialize the view</p>
+     * @param budgetAmount Budget amount
+     */
+    private View addBudgetAmountView(BudgetAmount budgetAmount){
+        LayoutInflater layoutInflater = getActivity().getLayoutInflater();
+        View budgetAmountView = layoutInflater.inflate(R.layout.item_budget_amount,
+                mBudgetAmountTableLayout, false);
+        BudgetAmountViewHolder viewHolder = new BudgetAmountViewHolder(budgetAmountView);
+        if (budgetAmount != null){
+            viewHolder.bindViews(budgetAmount);
+        }
+        mBudgetAmountTableLayout.addView(budgetAmountView, 0);
+        mBudgetAmountViews.add(budgetAmountView);
+//        mScrollView.fullScroll(ScrollView.FOCUS_DOWN);
+        return budgetAmountView;
+    }
+
+    /**
+     * Loads the accounts in the spinner
+     */
+    private void setupAccountSpinnerAdapter(){
+        String conditions = "(" + DatabaseSchema.AccountEntry.COLUMN_HIDDEN + " = 0 )";
+
+        if (mAccountCursor != null) {
+            mAccountCursor.close();
+        }
+        mAccountCursor = mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions, null);
+
+        mAccountCursorAdapter = new QualifiedAccountNameCursorAdapter(getActivity(), mAccountCursor);
+    }
+
+    /**
+     * Extract {@link BudgetAmount}s from the views
+     * @return List of budget amounts
+     */
+    private List<BudgetAmount> extractBudgetAmounts(){
+        List<BudgetAmount> budgetAmounts = new ArrayList<>();
+        for (View view : mBudgetAmountViews) {
+            BudgetAmountViewHolder viewHolder = (BudgetAmountViewHolder) view.getTag();
+            BigDecimal amountValue = viewHolder.amountEditText.getValue();
+            if (amountValue == null)
+                continue;
+            Money amount = new Money(amountValue, Commodity.DEFAULT_COMMODITY);
+            String accountUID = mAccountsDbAdapter.getUID(viewHolder.budgetAccountSpinner.getSelectedItemId());
+            BudgetAmount budgetAmount = new BudgetAmount(amount, accountUID);
+            budgetAmounts.add(budgetAmount);
+        }
+        return budgetAmounts;
+    }
+
+    /**
+     * View holder for budget amounts
+     */
+    class BudgetAmountViewHolder{
+        @Bind(R.id.currency_symbol)     TextView currencySymbolTextView;
+        @Bind(R.id.input_budget_amount) CalculatorEditText amountEditText;
+        @Bind(R.id.btn_remove_item)     ImageView removeItemBtn;
+        @Bind(R.id.input_budget_account_spinner) Spinner budgetAccountSpinner;
+        View itemView;
+
+        public BudgetAmountViewHolder(View view){
+            itemView = view;
+            ButterKnife.bind(this, view);
+            itemView.setTag(this);
+
+            amountEditText.bindListeners(mKeyboardView);
+            budgetAccountSpinner.setAdapter(mAccountCursorAdapter);
+
+            budgetAccountSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
+                @Override
+                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
+                    String currencyCode = mAccountsDbAdapter.getCurrencyCode(mAccountsDbAdapter.getUID(id));
+                    Currency currency = Currency.getInstance(currencyCode);
+                    currencySymbolTextView.setText(currency.getSymbol());
+                }
+
+                @Override
+                public void onNothingSelected(AdapterView<?> parent) {
+                    //nothing to see here, move along
+                }
+            });
+
+            removeItemBtn.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    mBudgetAmountTableLayout.removeView(itemView);
+                    mBudgetAmountViews.remove(itemView);
+                }
+            });
+        }
+
+        public void bindViews(BudgetAmount budgetAmount){
+            amountEditText.setValue(budgetAmount.getAmount().asBigDecimal());
+            budgetAccountSpinner.setSelection(mAccountCursorAdapter.getPosition(budgetAmount.getAccountUID()));
+        }
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
index d103ab71..40d9eac8 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
@@ -23,6 +23,7 @@
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
+import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.GridLayoutManager;
 import android.support.v7.widget.LinearLayoutManager;
@@ -144,7 +145,9 @@ public void onResume() {
     public void refresh() {
         bindViews();
         String budgetName = mBudgetsDbAdapter.getAttribute(mBudgetUID, DatabaseSchema.BudgetEntry.COLUMN_NAME);
-        ((AppCompatActivity) getActivity()).getSupportActionBar().setTitle(budgetName);
+        ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
+        assert actionBar != null;
+        actionBar.setTitle("Budget: " + budgetName);
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
index fe50d322..d0210b76 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
@@ -16,9 +16,12 @@
 
 package org.gnucash.android.ui.budget;
 
+import android.app.Activity;
+import android.content.Intent;
 import android.database.Cursor;
 import android.inputmethodservice.KeyboardView;
 import android.os.Bundle;
+import android.os.Parcelable;
 import android.support.annotation.Nullable;
 import android.support.design.widget.TextInputLayout;
 import android.support.v4.app.Fragment;
@@ -31,12 +34,9 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.AdapterView;
 import android.widget.Button;
 import android.widget.EditText;
-import android.widget.ImageView;
 import android.widget.Spinner;
-import android.widget.TableLayout;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -54,6 +54,7 @@
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Recurrence;
+import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.util.RecurrenceParser;
@@ -66,9 +67,9 @@
 import java.text.ParseException;
 import java.util.ArrayList;
 import java.util.Calendar;
-import java.util.Currency;
 import java.util.Date;
 import java.util.GregorianCalendar;
+import java.util.IllegalFormatCodePointException;
 import java.util.List;
 
 import butterknife.Bind;
@@ -80,28 +81,28 @@
  */
 public class BudgetFormFragment extends Fragment implements RecurrencePickerDialogFragment.OnRecurrenceSetListener, CalendarDatePickerDialogFragment.OnDateSetListener {
 
+    public static final int REQUEST_EDIT_BUDGET_AMOUNTS = 0xBA;
     @Bind(R.id.input_budget_name)   EditText mBudgetNameInput;
     @Bind(R.id.input_description)   EditText mDescriptionInput;
     @Bind(R.id.input_recurrence)    TextView mRecurrenceInput;
     @Bind(R.id.name_text_input_layout)  TextInputLayout mNameTextInputLayout;
     @Bind(R.id.calculator_keyboard)     KeyboardView mKeyboardView;
-    @Bind(R.id.budget_amount_table_layout) TableLayout mBudgetAmountTableLayout;
+    @Bind(R.id.input_budget_amount)     CalculatorEditText mBudgetAmountInput;
+    @Bind(R.id.input_budget_account_spinner) Spinner mBudgetAccountSpinner;
     @Bind(R.id.btn_add_budget_amount)   Button mAddBudgetAmount;
     @Bind(R.id.input_start_date)        TextView mStartDateInput;
+    @Bind(R.id.budget_amount_layout)    View mBudgetAmountLayout;
 
     EventRecurrence mEventRecurrence = new EventRecurrence();
     String mRecurrenceRule;
 
-    private Cursor mAccountCursor;
-    private AccountsDbAdapter mAccountsDbAdapter;
     private BudgetsDbAdapter mBudgetsDbAdapter;
 
     private Budget mBudget;
-    private QualifiedAccountNameCursorAdapter mAccountCursorAdapter;
-
-    private List<View> mBudgetAmountViews = new ArrayList<>();
-
     private Calendar mStartDate;
+    private ArrayList<BudgetAmount> mBudgetAmounts;
+    private AccountsDbAdapter mAccountsDbAdapter;
+    private QualifiedAccountNameCursorAdapter mAccountsCursorAdapter;
 
     @Nullable
     @Override
@@ -109,16 +110,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         View view = inflater.inflate(R.layout.fragment_budget_form, container, false);
         ButterKnife.bind(this, view);
 
-        setupAccountSpinnerAdapter();
-        mRecurrenceInput.setOnClickListener(
-                new RecurrenceViewClickListener((AppCompatActivity) getActivity(), mRecurrenceRule, this));
-
-        mAddBudgetAmount.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                addBudgetAmountView(null);
-            }
-        });
+        view.findViewById(R.id.btn_remove_item).setVisibility(View.GONE);
+        mBudgetAmountInput.bindListeners(mKeyboardView);
         mStartDateInput.setText(TransactionFormFragment.DATE_FORMATTER.format(mStartDate.getTime()));
         return view;
     }
@@ -126,75 +119,35 @@ public void onClick(View v) {
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        mAccountsDbAdapter = AccountsDbAdapter.getInstance();
         mBudgetsDbAdapter = BudgetsDbAdapter.getInstance();
         mStartDate = Calendar.getInstance();
+        mBudgetAmounts = new ArrayList<>();
+        String conditions = "(" + DatabaseSchema.AccountEntry.COLUMN_HIDDEN + " = 0 )";
+        mAccountsDbAdapter = AccountsDbAdapter.getInstance();
+        Cursor accountCursor = mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions, null);
+        mAccountsCursorAdapter = new QualifiedAccountNameCursorAdapter(getActivity(), accountCursor);
     }
 
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
-        ActionBar actionbar = ((AppCompatActivity) getActivity()).getSupportActionBar();
-        actionbar.setTitle("Create Budget");
 
         setHasOptionsMenu(true);
 
+        mBudgetAccountSpinner.setAdapter(mAccountsCursorAdapter);
         String budgetUID = getArguments().getString(UxArgument.BUDGET_UID);
         if (budgetUID != null){ //if we are editing the budget
             initViews(mBudget = mBudgetsDbAdapter.getRecord(budgetUID));
-            loadBudgetAmountViews(mBudget.getCompactedBudgetAmounts());
-        } else {
-            BudgetAmountViewHolder viewHolder = (BudgetAmountViewHolder) addBudgetAmountView(null).getTag();
-            viewHolder.removeItemBtn.setVisibility(View.GONE); //there should always be at least one
-        }
-    }
-
-    /**
-     * Load views for the budget amounts
-     * @param budgetAmounts List of {@link BudgetAmount}s
-     */
-    private void loadBudgetAmountViews(List<BudgetAmount> budgetAmounts){
-        for (BudgetAmount budgetAmount : budgetAmounts) {
-            addBudgetAmountView(budgetAmount);
-        }
-    }
-
-    /**
-     * Extract {@link BudgetAmount}s from the views
-     * @return List of budget amounts
-     */
-    private List<BudgetAmount> extractBudgetAmounts(){
-        List<BudgetAmount> budgetAmounts = new ArrayList<>();
-        for (View view : mBudgetAmountViews) {
-            BudgetAmountViewHolder viewHolder = (BudgetAmountViewHolder) view.getTag();
-            BigDecimal amountValue = viewHolder.amountEditText.getValue();
-            if (amountValue == null)
-                continue;
-            Money amount = new Money(amountValue, Commodity.DEFAULT_COMMODITY);
-            String accountUID = mAccountsDbAdapter.getUID(viewHolder.budgetAccountSpinner.getSelectedItemId());
-            BudgetAmount budgetAmount = new BudgetAmount(amount, accountUID);
-            budgetAmounts.add(budgetAmount);
         }
-        return budgetAmounts;
-    }
+        ActionBar actionbar = ((AppCompatActivity) getActivity()).getSupportActionBar();
+        assert actionbar != null;
+        if (mBudget ==  null)
+            actionbar.setTitle("Create Budget");
+        else
+            actionbar.setTitle("Edit Budget");
 
-    /**
-     * Inflates a new BudgetAmount item view and adds it to the UI.
-     * <p>If the {@code budgetAmount} is not null, then it is used to initialize the view</p>
-     * @param budgetAmount Budget amount
-     */
-    private View addBudgetAmountView(BudgetAmount budgetAmount){
-        LayoutInflater layoutInflater = getActivity().getLayoutInflater();
-        View budgetAmountView = layoutInflater.inflate(R.layout.item_budget_amount,
-                mBudgetAmountTableLayout, false);
-        BudgetAmountViewHolder viewHolder = new BudgetAmountViewHolder(budgetAmountView);
-        if (budgetAmount != null){
-            viewHolder.bindViews(budgetAmount);
-        }
-        mBudgetAmountTableLayout.addView(budgetAmountView, 0);
-        mBudgetAmountViews.add(budgetAmountView);
-//        mScrollView.fullScroll(ScrollView.FOCUS_DOWN);
-        return budgetAmountView;
+        mRecurrenceInput.setOnClickListener(
+                new RecurrenceViewClickListener((AppCompatActivity) getActivity(), mRecurrenceRule, this));
     }
 
     /**
@@ -209,20 +162,32 @@ private void initViews(Budget budget){
         mRecurrenceRule = recurrenceRuleString;
         mEventRecurrence.parse(recurrenceRuleString);
         mRecurrenceInput.setText(budget.getRecurrence().getRepeatString());
+
+        mBudgetAmounts = (ArrayList<BudgetAmount>) budget.getCompactedBudgetAmounts();
+        toggleAmountInputVisibility();
     }
 
     /**
-     * Loads the accounts in the spinner
+     * Extracts the budget amounts from the form
+     * <p>If the budget amount was input using the simple form, then read the values.<br>
+     *     Else return the values gotten from the BudgetAmountEditor</p>
+     * @return List of budget amounts
      */
-    private void setupAccountSpinnerAdapter(){
-        String conditions = "(" + DatabaseSchema.AccountEntry.COLUMN_HIDDEN + " = 0 )";
-
-        if (mAccountCursor != null) {
-            mAccountCursor.close();
+    private ArrayList<BudgetAmount> extractBudgetAmounts(){
+        BigDecimal value = mBudgetAmountInput.getValue();
+        if (value == null)
+            return mBudgetAmounts;
+
+        if (mBudgetAmounts.isEmpty()){ //has not been set in budget amounts editor
+            ArrayList<BudgetAmount> budgetAmounts = new ArrayList<>();
+            Money amount = new Money(value, Commodity.DEFAULT_COMMODITY);
+            String accountUID = mAccountsDbAdapter.getUID(mBudgetAccountSpinner.getSelectedItemId());
+            BudgetAmount budgetAmount = new BudgetAmount(amount, accountUID);
+            budgetAmounts.add(budgetAmount);
+            return budgetAmounts;
+        } else {
+            return mBudgetAmounts;
         }
-        mAccountCursor = mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions, null);
-
-        mAccountCursorAdapter = new QualifiedAccountNameCursorAdapter(getActivity(), mAccountCursor);
     }
 
     /**
@@ -232,20 +197,6 @@ private void setupAccountSpinnerAdapter(){
      * @return {@code true} if the budget can be saved, {@code false} otherwise
      */
     private boolean canSave(){
-        for (View budgetAmountView : mBudgetAmountViews) {
-            BudgetAmountViewHolder viewHolder = (BudgetAmountViewHolder) budgetAmountView.getTag();
-            viewHolder.amountEditText.evaluate();
-            if (viewHolder.amountEditText.getError() != null){
-                return false;
-            }
-            //at least one account should be loaded (don't create budget with empty account tree
-            if (viewHolder.budgetAccountSpinner.getCount() == 0){
-                Toast.makeText(getActivity(), "You need an account hierarchy to create a budget!",
-                        Toast.LENGTH_SHORT).show();
-                return false;
-            }
-        }
-
         if (mEventRecurrence.until != null && mEventRecurrence.until.length() > 0
                 || mEventRecurrence.count <= 0){
             Toast.makeText(getActivity(),
@@ -254,11 +205,13 @@ private boolean canSave(){
             return false;
         }
 
+        mBudgetAmounts = extractBudgetAmounts();
         String budgetName = mBudgetNameInput.getText().toString();
         boolean canSave = mRecurrenceRule != null
-                && !budgetName.isEmpty();
-        if (!canSave){
+                && !budgetName.isEmpty()
+                && !mBudgetAmounts.isEmpty();
 
+        if (!canSave){
             if (budgetName.isEmpty()){
                 mNameTextInputLayout.setError("A name is required");
                 mNameTextInputLayout.setErrorEnabled(true);
@@ -266,8 +219,15 @@ private boolean canSave(){
                 mNameTextInputLayout.setErrorEnabled(false);
             }
 
+            if (mBudgetAmounts.isEmpty()){
+                mBudgetAmountInput.setError("Enter an amount for the budget");
+                Toast.makeText(getActivity(), "Add budget amounts in order to save the budget",
+                        Toast.LENGTH_SHORT).show();
+            }
+
             if (mRecurrenceRule == null){
-                Toast.makeText(getActivity(), "Set a repeat pattern to create a budget!", Toast.LENGTH_SHORT).show();
+                Toast.makeText(getActivity(), "Set a repeat pattern to create a budget!",
+                        Toast.LENGTH_SHORT).show();
             }
         }
 
@@ -290,7 +250,8 @@ private void saveBudget(){
         }
 
         // TODO: 22.10.2015 set the period num of the budget amount
-        mBudget.setBudgetAmounts(extractBudgetAmounts());
+        extractBudgetAmounts();
+        mBudget.setBudgetAmounts(mBudgetAmounts);
 
         mBudget.setDescription(mDescriptionInput.getText().toString().trim());
 
@@ -318,7 +279,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     }
 
     @OnClick(R.id.input_start_date)
-    public void onClick(View v) {
+    public void onClickBudgetStartDate(View v) {
         long dateMillis = 0;
         try {
             Date date = TransactionFormFragment.DATE_FORMATTER.parse(((TextView) v).getText().toString());
@@ -338,6 +299,15 @@ public void onClick(View v) {
         datePickerDialog.show(getFragmentManager(), "date_picker_fragment");
     }
 
+    @OnClick(R.id.btn_add_budget_amount)
+    public void onOpenBudgetAmountEditor(View v){
+        Intent intent = new Intent(getActivity(), FormActivity.class);
+        intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.BUDGET_AMOUNT_EDITOR.name());
+        mBudgetAmounts = extractBudgetAmounts();
+        intent.putParcelableArrayListExtra(UxArgument.BUDGET_AMOUNT_LIST, mBudgetAmounts);
+        startActivityForResult(intent, REQUEST_EDIT_BUDGET_AMOUNTS);
+    }
+
     @Override
     public void onRecurrenceSet(String rrule) {
         mRecurrenceRule = rrule;
@@ -359,50 +329,36 @@ public void onDateSet(CalendarDatePickerDialogFragment dialog, int year, int mon
         mStartDate.set(Calendar.DAY_OF_MONTH, dayOfMonth);
     }
 
-    /**
-     * View holder for budget amounts
-     */
-    class BudgetAmountViewHolder{
-        @Bind(R.id.currency_symbol) TextView currencySymbolTextView;
-        @Bind(R.id.input_budget_amount) CalculatorEditText amountEditText;
-        @Bind(R.id.input_budget_account_spinner) Spinner budgetAccountSpinner;
-        @Bind(R.id.btn_remove_item) ImageView removeItemBtn;
-        View itemView;
-
-        public BudgetAmountViewHolder(View view){
-            itemView = view;
-            ButterKnife.bind(this, view);
-            itemView.setTag(this);
-
-            amountEditText.bindListeners(mKeyboardView);
-            budgetAccountSpinner.setAdapter(mAccountCursorAdapter);
-
-            budgetAccountSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
-                @Override
-                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
-                    String currencyCode = mAccountsDbAdapter.getCurrencyCode(mAccountsDbAdapter.getUID(id));
-                    Currency currency = Currency.getInstance(currencyCode);
-                    currencySymbolTextView.setText(currency.getSymbol());
-                }
-
-                @Override
-                public void onNothingSelected(AdapterView<?> parent) {
-                    //nothing to see here, move along
-                }
-            });
-
-            removeItemBtn.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    mBudgetAmountTableLayout.removeView(itemView);
-                    mBudgetAmountViews.remove(itemView);
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (requestCode == REQUEST_EDIT_BUDGET_AMOUNTS){
+            if (resultCode == Activity.RESULT_OK){
+                ArrayList<BudgetAmount> budgetAmounts = data.getParcelableArrayListExtra(UxArgument.BUDGET_AMOUNT_LIST);
+                if (budgetAmounts != null){
+                    mBudgetAmounts = budgetAmounts;
+                    toggleAmountInputVisibility();
                 }
-            });
+                return;
+            }
         }
+        super.onActivityResult(requestCode, resultCode, data);
+    }
 
-        public void bindViews(BudgetAmount budgetAmount){
-            amountEditText.setValue(budgetAmount.getAmount().asBigDecimal());
-            budgetAccountSpinner.setSelection(mAccountCursorAdapter.getPosition(budgetAmount.getAccountUID()));
+    /**
+     * Toggles the visibility of the amount input based on {@link #mBudgetAmounts}
+     */
+    private void toggleAmountInputVisibility() {
+        if (mBudgetAmounts.size() > 1){
+            mBudgetAmountLayout.setVisibility(View.GONE);
+            mAddBudgetAmount.setText("Edit Budget Amounts");
+        } else {
+            mAddBudgetAmount.setText("Add Budget Amounts");
+            mBudgetAmountLayout.setVisibility(View.VISIBLE);
+            if (!mBudgetAmounts.isEmpty()) {
+                BudgetAmount budgetAmount = mBudgetAmounts.get(0);
+                mBudgetAmountInput.setValue(budgetAmount.getAmount().asBigDecimal());
+                mBudgetAccountSpinner.setSelection(mAccountsCursorAdapter.getPosition(budgetAmount.getAccountUID()));
+            }
         }
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java b/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
index a079e8cd..f6abfed8 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
@@ -30,6 +30,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.ui.account.AccountFormFragment;
+import org.gnucash.android.ui.budget.BudgetAmountEditorFragment;
 import org.gnucash.android.ui.budget.BudgetFormFragment;
 import org.gnucash.android.ui.export.ExportFormFragment;
 import org.gnucash.android.ui.passcode.PasscodeLockActivity;
@@ -49,7 +50,7 @@
 
     private CalculatorKeyboard mOnBackListener;
 
-    public enum FormType {ACCOUNT, TRANSACTION, EXPORT, SPLIT_EDITOR, BUDGET}
+    public enum FormType {ACCOUNT, TRANSACTION, EXPORT, SPLIT_EDITOR, BUDGET, BUDGET_AMOUNT_EDITOR}
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -100,6 +101,10 @@ protected void onCreate(Bundle savedInstanceState) {
                 showBudgetFormFragment(intent.getExtras());
                 break;
 
+            case BUDGET_AMOUNT_EDITOR:
+                showBudgetAmountEditorFragment(intent.getExtras());
+                break;
+
             default:
                 throw new IllegalArgumentException("No form display type specified");
         }
@@ -180,6 +185,15 @@ private void showBudgetFormFragment(Bundle args){
     }
 
     /**
+     * Load the budget amount editor fragment
+     * @param args Arguments
+     */
+    private void showBudgetAmountEditorFragment(Bundle args){
+        BudgetAmountEditorFragment fragment = BudgetAmountEditorFragment.newInstance(args);
+        showFormFragment(fragment);
+    }
+
+    /**
      * Loads the fragment into the fragment container, replacing whatever was there before
      * @param fragment Fragment to be displayed
      */
diff --git a/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java b/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java
index 7d29f685..7566ba15 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java
@@ -98,6 +98,11 @@
     public static final String BUDGET_UID = "budget_uid";
 
     /**
+     * List of budget amounts (as csv)
+     */
+    public static final String BUDGET_AMOUNT_LIST = "budget_amount_list";
+
+    /**
      * GUID of splits which have been removed from the split editor
      */
     public static String REMOVED_SPLITS = "removed_split_guids";
diff --git a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
index 3e19812d..6309db40 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
@@ -155,7 +155,7 @@ private static String parseByDay(int[] byday){
             }
             builder.append(",");
         }
-        builder.deleteCharAt(builder.length());
+        builder.deleteCharAt(builder.length()-1);
         return builder.toString();
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceViewClickListener.java b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceViewClickListener.java
index 73891997..457e9184 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceViewClickListener.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceViewClickListener.java
@@ -35,7 +35,8 @@
     String mRecurrenceRule;
     OnRecurrenceSetListener mRecurrenceSetListener;
 
-    public RecurrenceViewClickListener(AppCompatActivity activity, String recurrenceRule, OnRecurrenceSetListener recurrenceSetListener){
+    public RecurrenceViewClickListener(AppCompatActivity activity, String recurrenceRule,
+                                       OnRecurrenceSetListener recurrenceSetListener){
         this.mActivity = activity;
         this.mRecurrenceRule = recurrenceRule;
         this.mRecurrenceSetListener = recurrenceSetListener;
diff --git a/app/src/main/res/layout/fragment_budget_amount_editor.xml b/app/src/main/res/layout/fragment_budget_amount_editor.xml
new file mode 100644
index 00000000..e5a556a5
--- /dev/null
+++ b/app/src/main/res/layout/fragment_budget_amount_editor.xml
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:animateLayoutChanges="true"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".ui.common.FormActivity">
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+        <LinearLayout android:id="@+id/budget_amount_layout"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:minHeight="200dp"
+            android:orientation="vertical"/>
+    </ScrollView>
+
+    <android.inputmethodservice.KeyboardView android:id="@+id/calculator_keyboard"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentRight="true"
+        android:focusable="true"
+        android:focusableInTouchMode="true"
+        android:visibility="gone" />
+</RelativeLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_budget_form.xml b/app/src/main/res/layout/fragment_budget_form.xml
index 43955696..db920d07 100644
--- a/app/src/main/res/layout/fragment_budget_form.xml
+++ b/app/src/main/res/layout/fragment_budget_form.xml
@@ -21,117 +21,103 @@
     android:orientation="vertical"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
-
-    <TableLayout android:id="@+id/budget_info_table"
+    <ScrollView
+        android:id="@+id/scroll_view"
+        android:layout_above="@id/calculator_keyboard"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="@dimen/dialog_padding"
-        android:orientation="vertical" >
-
-        <android.support.design.widget.TextInputLayout
-            android:id="@+id/name_text_input_layout"
-            android:paddingLeft="@dimen/dialog_padding"
-            android:paddingRight="@dimen/dialog_padding"
+        android:layout_height="wrap_content">
+        <TableLayout android:id="@+id/budget_info_table"
             android:layout_width="match_parent"
-            android:layout_height="wrap_content">
-            <EditText
-                android:id="@+id/input_budget_name"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/dialog_padding"
+            android:orientation="vertical" >
+
+            <android.support.design.widget.TextInputLayout
+                android:id="@+id/name_text_input_layout"
+                android:paddingLeft="@dimen/dialog_padding"
+                android:paddingRight="@dimen/dialog_padding"
                 android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:ems="15"
-                android:inputType="textCapWords"
-                android:singleLine="true"
-                android:ellipsize="start"
-                android:hint="Budget name"
-                style="@style/ListItemText">
-            </EditText>
-        </android.support.design.widget.TextInputLayout>
+                android:layout_height="wrap_content">
+                <EditText
+                    android:id="@+id/input_budget_name"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:ems="15"
+                    android:inputType="textCapWords"
+                    android:singleLine="true"
+                    android:ellipsize="start"
+                    android:hint="Budget name"
+                    style="@style/ListItemText">
+                </EditText>
+            </android.support.design.widget.TextInputLayout>
 
-        <TableRow style="@style/FormRow"
-            android:paddingLeft="@dimen/dialog_padding"
-            android:paddingRight="@dimen/dialog_padding">
-            <ImageView style="@style/FormIcon"
-                android:src="@drawable/ic_action_sort_by_size"/>
+            <TableRow style="@style/FormRow"
+                android:paddingLeft="@dimen/dialog_padding"
+                android:paddingRight="@dimen/dialog_padding">
+                <ImageView style="@style/FormIcon"
+                    android:src="@drawable/ic_action_sort_by_size"/>
 
-            <EditText android:id="@+id/input_description"
-                android:layout_width="0dp"
-                android:layout_weight="5"
-                android:layout_height="wrap_content"
-                android:singleLine="false"
-                android:background="@android:color/transparent"
-                android:hint="Description"
-                android:inputType="textMultiLine|textCapSentences" />
-        </TableRow>
-        <View style="@style/Divider" />
+                <EditText android:id="@+id/input_description"
+                    android:layout_width="0dp"
+                    android:layout_weight="5"
+                    android:layout_height="wrap_content"
+                    android:singleLine="false"
+                    android:background="@android:color/transparent"
+                    android:hint="Description"
+                    android:inputType="textMultiLine|textCapSentences" />
+            </TableRow>
+            <View style="@style/Divider" />
 
-        <TableRow style="@style/FormRow"
-            android:paddingLeft="@dimen/dialog_padding"
-            android:paddingRight="@dimen/dialog_padding">
+            <TableRow style="@style/FormRow"
+                android:paddingLeft="@dimen/dialog_padding"
+                android:paddingRight="@dimen/dialog_padding">
 
-            <ImageView style="@style/FormIcon"
-                android:src="@drawable/ic_action_rotate_right"/>
+                <ImageView style="@style/FormIcon"
+                    android:src="@drawable/ic_action_rotate_right"/>
 
-            <TextView android:id="@+id/input_recurrence"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="5"
-                android:gravity="left"
-                android:text="Set budget period"
-                style="@style/Dropdown.TextView" />
+                <TextView android:id="@+id/input_recurrence"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="5"
+                    android:gravity="left"
+                    android:text="Set budget period"
+                    style="@style/Dropdown.TextView" />
 
-        </TableRow>
+            </TableRow>
 
-        <TableRow style="@style/FormRow"
-            android:paddingLeft="@dimen/dialog_padding"
-            android:paddingRight="@dimen/dialog_padding">
+            <TableRow style="@style/FormRow"
+                android:paddingLeft="@dimen/dialog_padding"
+                android:paddingRight="@dimen/dialog_padding">
 
-            <TextView
-                android:layout_width="0dp"
-                android:layout_weight="2"
-                android:layout_height="wrap_content"
-                android:textAllCaps="true"
-                android:text="START"/>
+                <TextView
+                    android:layout_width="0dp"
+                    android:layout_weight="1.2"
+                    android:layout_height="wrap_content"
+                    android:textAllCaps="true"
+                    android:text="START"/>
 
-            <TextView android:id="@+id/input_start_date"
-                android:layout_width="0dp"
-                android:layout_weight="5"
-                android:layout_height="wrap_content"
-                tools:text="29.11.2015"
-                android:clickable="true"
-                android:textColor="@android:color/black"
-                android:gravity="left"      />
-        </TableRow>
+                <TextView android:id="@+id/input_start_date"
+                    android:layout_width="0dp"
+                    android:layout_weight="5"
+                    android:layout_height="wrap_content"
+                    tools:text="29.11.2015"
+                    android:clickable="true"
+                    android:textSize="16sp"
+                    android:padding="3dp"
+                    android:textColor="@android:color/black"
+                    android:gravity="left"      />
+            </TableRow>
 
-        <TableRow style="@style/FormRow"
-            android:paddingLeft="@dimen/dialog_padding"
-            android:layout_marginBottom="@dimen/dialog_padding"
-            android:layout_marginTop="@dimen/dialog_padding">
-            <TextView android:id="@+id/label_budgeted_accounts_header"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:singleLine="true"
-                android:padding="@dimen/dialog_padding"
-                android:textSize="18sp"
-                android:textColor="@color/theme_accent"
-                android:text="Budgeted Accounts"/>
+            <include android:id="@+id/budget_amount_layout"
+                layout="@layout/item_budget_amount" />
 
             <Button android:id="@+id/btn_add_budget_amount"
+                style="?attr/borderlessButtonStyle"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:layout_gravity="right|end"
-                android:textColor="@android:color/white"
-                android:text="Add"/>
-        </TableRow>
-    </TableLayout>
-    <ScrollView
-        android:id="@+id/scroll_view"
-        android:layout_above="@id/calculator_keyboard"
-        android:layout_below="@id/budget_info_table"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content">
-        <TableLayout android:id="@+id/budget_amount_table_layout"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" />
+                android:textColor="@color/theme_accent"
+                android:text="Add Budget Amounts"/>
+        </TableLayout>
     </ScrollView>
     <android.inputmethodservice.KeyboardView android:id="@+id/calculator_keyboard"
         android:layout_width="match_parent"
diff --git a/app/src/main/res/layout/fragment_split_editor.xml b/app/src/main/res/layout/fragment_split_editor.xml
index ebc5337a..60f428ec 100644
--- a/app/src/main/res/layout/fragment_split_editor.xml
+++ b/app/src/main/res/layout/fragment_split_editor.xml
@@ -19,7 +19,7 @@ limitations under the License.
     android:animateLayoutChanges="true"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".ui.FormActivity">
+    tools:context=".ui.common.FormActivity">
 
     <LinearLayout android:id="@+id/imbalance_layout"
         android:layout_width="match_parent"
diff --git a/app/src/main/res/layout/item_budget_amount.xml b/app/src/main/res/layout/item_budget_amount.xml
index e8393881..80d75537 100644
--- a/app/src/main/res/layout/item_budget_amount.xml
+++ b/app/src/main/res/layout/item_budget_amount.xml
@@ -21,9 +21,6 @@
     app:cardUseCompatPadding="true"
     app:cardPreventCornerOverlap="false"
     app:cardElevation="5dp"
-    android:foreground="?selectableItemBackground"
-    android:focusable="true"
-    android:clickable="true"
     android:orientation="vertical"
     android:layout_width="match_parent"
     android:layout_height="wrap_content">
@@ -49,7 +46,7 @@
                 android:id="@+id/input_budget_amount"
                 android:layout_width="0dp"
                 android:layout_weight="3"
-                android:layout_height="wrap_content"
+                android:layout_height="match_parent"
                 android:hint="@string/label_transaction_amount"
                 android:inputType="none"
                 android:nextFocusDown="@+id/input_description"
diff --git a/app/src/main/res/menu/budget_amount_editor_actions.xml b/app/src/main/res/menu/budget_amount_editor_actions.xml
new file mode 100644
index 00000000..fc6348b3
--- /dev/null
+++ b/app/src/main/res/menu/budget_amount_editor_actions.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+-->
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item android:id="@+id/menu_add_budget_amount"
+        android:icon="@drawable/ic_add_white_24dp"
+        android:title="Add Budget Amount"
+        app:showAsAction="always"/>
+
+    <item android:id="@+id/menu_save"
+        android:title="@string/btn_save"
+        app:showAsAction="always|withText"/>
+</menu>
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
index cbb6ab78..6e10760b 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
@@ -5,6 +5,7 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;
 import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.PricesDbAdapter;
@@ -14,9 +15,12 @@
 import org.gnucash.android.importer.GncXmlImporter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.Budget;
+import org.gnucash.android.model.BudgetAmount;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.PeriodType;
+import org.gnucash.android.model.Price;
 import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
@@ -231,14 +235,21 @@ public void shouldClearAllTablesWhenDeletingAllAccounts(){
 
         scheduledActionDbAdapter.addRecord(scheduledAction);
 
+        Budget budget = new Budget("Test");
+        BudgetAmount budgetAmount = new BudgetAmount(Money.getZeroInstance(), account.getUID());
+        budget.addBudgetAmount(budgetAmount);
+        budget.setRecurrence(new Recurrence(PeriodType.MONTH));
+        BudgetsDbAdapter.getInstance().addRecord(budget);
+
         mAccountsDbAdapter.deleteAllRecords();
 
         assertThat(mAccountsDbAdapter.getRecordsCount()).isZero();
         assertThat(mTransactionsDbAdapter.getRecordsCount()).isZero();
         assertThat(mSplitsDbAdapter.getRecordsCount()).isZero();
         assertThat(scheduledActionDbAdapter.getRecordsCount()).isZero();
-        assertThat(PricesDbAdapter.getInstance().getRecordsCount()).isZero();
+        assertThat(BudgetAmountsDbAdapter.getInstance().getRecordsCount()).isZero();
         assertThat(BudgetsDbAdapter.getInstance().getRecordsCount()).isZero();
+        assertThat(PricesDbAdapter.getInstance().getRecordsCount()).isZero(); //prices should remain
         assertThat(CommoditiesDbAdapter.getInstance().getRecordsCount()).isGreaterThan(50); //commodities should remain
     }
 
diff --git a/build.gradle b/build.gradle
index b2d2eee5..87976eb1 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
 		jcenter()
 	}
 	dependencies {
-		classpath 'com.android.tools.build:gradle:1.3.0'
+		classpath 'com.android.tools.build:gradle:2.0.0-alpha1'
 		classpath 'io.fabric.tools:gradle:1.+'
 	}
 }
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index b5166dad4d90021f6a0b45268c0755719f1d5cd4..941144813d241db74e1bf25b6804c679fbe7f0a3 100644
GIT binary patch
delta 12505
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
AlK=n!

delta 11140
zcmZvC1yozn(r&QguEC|aySqc7I20)E4n>MJIK_&jxD|JIclS^V#jUtYky3aR`rrHd
zzn8VL_GI#XduGp`JvljNf^uMrlVH$P6k%YI000C8fRSpROe`8T!k^KF@!MLgpbl>G
ziOZ=A6yU$0w|_u|<gicUDDCrj#riaY8K735gc>wx7wBhI5bV~o$^kCtSyh9Jfb|0N
z58t%Hzu5>H0Kj+w05F4NVe!DqXhfj61&3)dj1WsOpE3#WcosABwpi9Dy}cKW09DP;
zJjA(TsuFr(sl)P-`wVljhkm{4{!&4`aOj<q6c)3}sZ2y+$P=UE<D%!D2P>ct_t1U<
zLMmeZx@eL7Nr9Kdb}FFg6eXKiHuYwOBTkuq^Y41-oCJFYFNL9lw~{Z1ID|oh9O!x#
z85nfR%c3<Bsbc))yLuU>^{3<SuA3XQTouIb*U?PiqSp1@7cLjALdA3|NH7NvZiHKB
zQ_3wnfFBO#x&%w6EjjPXXGE)^6EnbOGy-mt&~^D_eEHZqZSD3S&`P^H(MC7sj&GLX
zXMr#9`ox&Vs&al8@iOgk-;;pqVpth=r@24Zb=QR(+8ZxAc#*`bXtWkS=rP)m9ETrc
zTH==aiW-z+DU+_J<}#%T)&4e~tjlb1jbO~yv{z%n9aiZ=ZL>N&;w7RDJ(Sts{L!@^
zf^@Dz&L+Cd{rhVc5+RNTotk<!4LXB=-NPLh-wzXP_;k(|B5~XYMYso$5u#cxP=;P0
z$&>lCuQxGi0w!zF3jf44(lg*b<rL<ls&W*${bx?97@aips=KHm{3(_-axvo<RB$ZD
z`{t2aCs4%WgvRbb;Ug3lTFF-z7s?#%l1KZVHB5>I=@^RJ>x@a!eS$ja*)#pO2rl?^
zNF&QqO7U(w;U#fsT*Eb>a@g2%WHE@)U@^w#i%%GSxt<s#+;u?mi@?b)O^T1bfp!Su
z4q@UiNzIVCFM;H`&@OriaX-XKk;Jw7$ls7|V%m^S0O)DRJ%Y$N(5snYn;2ijdd3tK
zeou!|QxN->B=dm$Z#t{`l34$M1pt7L$AAq`gNsQ4_nfi<c+r1Tc8ow19_>%cW;F=E
z!AA!G>?y!(<a8iJADmgw2a!Yek{NO%ak&V7ycn^DUVCJq9=-*(yirgm@(Urzr`)cR
z^vi=%YGYb=EUX3R^_N`2PV+Qw8xR@?A}p%p!K4e9>5Et3Wryi+VGH?6ptj?XyN=|g
z83kRGv*^ra@AKuW_FwN;&gzaqH{6u-<M;tM1-xe0?|`6ti4ezllWRrby@JStfSj?H
zdX}U2$BvtL@_2~H<^ePCo<<I&2*S@jhOEHvBHqFS+Y2T|U(icEy!`S|I@$4gssqwN
ze{l?TiynN>Dd%=!C|;cVknsBfaq?mK4utd@6vG2a6)*mBJmLfcgFT+q1(ygrM<r+w
z?2GgZrW6FrM^2O{Ui{+=in+L!XL9!sahp6|m{wxW3XG)qY9u&M+zPEmi8XHMH^5xM
zCI&fg{?e0q@;c<xHXm8P*|osg5e&8Wk}(3FIo+}3Zs+{~N2HT2fFq&{_w460t>qW~
zjXa%h9J9!EFMx!&4oDDVhlH%WNIlOM6hWM2U@l0U2I!8s>JWTI*UBqL3(M2*F&x|?
zwOLPoyy1RhhkmxyYAA9XtJ%_h#Sz@%jpmB-lT>(`goMxQ<vjm;F0aCe(X~%G@W~Qw
zmUXgq2|)?O_P|PJD*onZ>o<wXuNHJ6BKg!DUVef}cZly?H5!tRcDT!?5>yo<XfF~F
z6%|2wt|fW1{Jmphi)nH+ub9Vcvj~i81-)4`)KY}M#VYS_NFsK%Hq8b11hX~PYGo2D
zn?d?>ZlS2MJW$a0cU?0Rz7j9%h8yoR?ZSOIZy=KIS)Ooh{%ODI<t^_p=Dx&E<CqAX
zO-{HXly4K|6v@?-<t7e?8#QKjepQ2VGwuNLI%KCBt1YK9uTr9fItuJbDF5!&5L=&o
z#K6$y>=7a^8#xu3_dO(eQG1(kiA_(6)+Btb`(1wXf(%^PI=LfI5_m&ei}mUU%WbYh
z0}5#vw3)et)B%g1dL#Bi8*)SPS1S%gLPXTzKxp?RwWgVf7{4!+LT*G_8HxO=nxTmx
zY#D|2EQ!X@j5u5C;Fct<s6BUzYN~w1rTTB<vNe2Gcty3<D$Gk>UUM93<sX+Djm2wm
zk5JQSb-kb>1Z}rkx-}TK(PH5$56_DZ69*L=DPi83K{dEV(0j@f@3y6wYxV@u;=3Fx
z?Z^{5eJ<+l%y#W0P_l9Fhu|}sQruF4Mm6)?S}fJb#^)#}jF$*`A=Xp;X+{+FrV?22
znm514M+ZMT?4D9J<9X!p*bj`M9H^;^-TGNa+14Kd-eZ5{Sd~YmFvTI*uQXS<^RS2v
ziU?C@yD<UqPo3{{NnEHbzyA4SY;Ex)jW}dD*G|{~0n63*=NEo7p^?RCmUlk-AVo^<
z;zna#U-BR>*dK(u8!}kQ*lON3`^sWsoJ$o$W01y-N$T!0$`t4?apQbI)VuWv)a$Mj
zf}k2#zWHKsUt9|<%b-v4CO=HKBh%jZ;Qo_c`Gu6>g`O$y@_O<huT3cvq<%SbyO_y3
zXXg##I7zr)67v+hQTuTfI9;}KpcrjDqa%5X{!1SR)$t$ewJz+Jr6nw6JnHIGW>CMk
z_>+--Ug2&JUp8zCnbK~vAHGik4LVD7W=L(Fy_D(@ADi-Zv$bVZcbvLN9hp&7CZh(I
zao8mq4-gj}N)*4(pNM5hX*q`z2(=0&w=opR?uO3jsXPDH=#U)a(&&y@4$9A46=3)9
zY|vkBFq6db@<yA<pgyNagddIME^Q$#u~<uidzBY)(W;<rrJI*oV5qWddf^;TnjfU_
zB3*OW+Dj%+wvmV{@ggWzQJ5k5vzm39iWYjI4;h&TAH#Wz#s}W3;>Cfs_lk@9pKTg}
zh{Ye`(NB#}4Cqq2uS$G^L_pCR0^1F;9P$eUv*+~DyIH@87h}7d@xN<<m+`_<y#(U8
z4iOB1^%gIwbX|~)5=87$<DgQggu(PaJEtG*Wn^NIsBUw4>}c~T7tWp3$LNyZU7(|;
z_tg)>_-GK2Y1|NySqiwR(^S_^lN-zQuK?j0L_66xXZVi~E1B#S^g%j5urEC0U!Mgs
zWX8={i{wDIrEI$>sFF2XD{nE>cE=bXLYPZm{a}TJcpS2A-v2yWF01aB3^3RE!Pmn@
z#Sk678jpPZgI(r@D-mQf-0>y1wl5V`{tTX~XC!L;1T?$os3a1t2C1bhscksE5f_d$
zN1k`SOPtagD|HXmxhp81b&^3ZviqP+e)eTwz%KFJokU4Bvk}p9`!|jmkK|;jMd!*3
zW+~|-p|r_5F5=$EL2NxCia>;<a004WdQR+Qu~{mS7^q0$eA()IE`s1+^cKzhVb!Hh
zGCyQJCD!EQ3$D|Kqfa;ZGMpkBhmY5;itk`Wi_U)aLNSCVu+V|z)VjGpbaa!c+_dtI
z!QV*o*RdAYFo;s)dFis1>scjBo+CMF8eij)hN)&?68Y-n8D<-5UB8JJ?Os9xY5dr}
zHe~>%iTbm3c;<KN(KJv|ycjvuxrGt7bQs8o3+Y{uT_&oVDjZ#KsDbN3HtI?xQPt3E
zsDuw&41b-^skjUJvaD)|rQ2C_UOvJpsQo+8Z=`{4%0qv0YhUd1-fZ<m->2+jk%8S9
z`cO_hgBW*3d^)+8KN#G__uvwLoR{!XcFJ8v7T5{l{iaf`6m*Q2j!p+h#LnP)7ir-%
z?bkxAH`0z8k>|0|HK@N#Wi#Dg%Fik(<_TlTrzhk%sP?FXEOJ}kd6LT2z4w9oO`P-I
z!LG@T7lB3FuZo4)ng;dSzwyQN-h8%8c@guOiiZRgO+E20((%|O9V5QI0v-f~s7T8W
zRW{Z=rznXO-+qi+8tXNQq%~)3m0RMepZ!*`>UDmFq9<OeAKk#E=ke(<G<@bmeL2Iu
z8vb|fF%t7%Ad&B=t3u2BTpovtXQk52*+Dw(FpQ<m>ehPj)8>4kY7`mQ=ie68*4l|_
zcxhfj$>9s|#XO{!t%{|M^LURTZsKX=@)HKLNn6tua^7xc#imNhecc63m#^U1L;ZHp
zMl}6~S8Vy=SX1=^u*{yH_v@A7vHZ@)Af{7Ob*_lDB}f!sz*7VZcW3(0`u7HUONU?3
z_N&%HYFm1Z{#N&Mi}u=P0v1nU>Q_@o#gq+S=uT;i_-O^D9orE{Fxu#@6BwjY>6DEr
z&y2rX2PMgzYD$>m#Dxleqwwq#<Xm1Ej~w9J!u9hFVv4l(5k^EY7@fJ~#3{_ogXqvT
z#<dGbnuE0E${ZUd?r-}UH%lCwB}P~TaqJ>(hoYUa9UO9JYJoy_S*RLORUsUFMIO$O
z94_(A(jZ!Qt!~Y*8mxAqx%6E60|eg8EWbcc?H;c9tC@~hBb7SKD_ly9^Q{Eh^*5D8
zA-**@;WMGW#*P~(WhwbHhFRgPn@xH!$scXlzk$^Gx&3-%oE8t9>R0+Qx9#xLa|SvC
zqjh(jz0lb{PiuLxwvnZk<s<m|jY}rfU0;cp`dm;fo<iT#i)Hf;+nj2u5r_TSC$bn^
zSaFU2#zt6D{H8cExVUwej`*AltyRL-a_7@N-&=SXkbrmVhqbD0279`!QmG7R-<9Z7
z1ZGeH)Q$tj8F3Da*B7ys-=0OcB<<hd_!2Cu2BgC8zPUv>@%@~ew|+4GZjL@SpVijC
z!c>dRV-(Uqha!Dz<fnvhO`AXVTdCsk)a&OpgAeX9J{?43ZDDE){a1nYh_o6}&wYu;
zTZw^*U)PW*NA7X<jxO<Q@>kwSqnRPb<0_0GVJQz|U-U&CSU!X#U0wN1z`_T*c7K*h
z^tBJT_BpR1=#s61<QLIK)cJ>l$n&wdTmU;t19<}>k8S>gyTT0u(Gbzv=JKv<R2BNZ
zdp)OLDG{4(LW;OmA(P*L^WO%3*Ju!(8|E}8(Q1fdoQDv;Flq0%wjoZ+%I9&M6I2=l
z*|%3Zrs!rAFgwXTFx5%CS&$UWx26Sn7^mbfP1kN?ktF4{RlRBEq&e{zQ&~VcwCxFY
z*Kcf5!n{0;u7fiu7_P)>9=Hs4GBQdz68^B;-_SG6^>`7S&CT+ig=u8b{55ELUqf5&
zu2W*&g`gQdVkD+5z#um>PucPw%gs^}^n**&ggEdgs?~w9Zt!ZUn9h+@wUuP^j#M#0
zKtB!O_siOQCap}F#&)^afCbYXDzXArqu<m)<G4X%Okc{Uf9;^cPI?#ttL(#vol25L
zq(#xnM8j}Su`j@1uDQzK%P}XH!dx$axAZzqs6wq`qNt1@w8~6464sO9JxgMI5Qx$7
zreP<}^hWan)yZW!_GJI!T_-JC)IAST3hfE?u7&;1DkIKs$~N1S<)sCTz4ZL{xQV!l
zUvb-cKI;hlTp5%%-%U{iT9D2x(t_5F1|eFplm;$p4q<m@ae3#IjW{cd3#+}7ocZ@6
z6Ze-<6>Vavdn8vj`W-O$+>#l>pk<`v^Ud>C*JY|I=t;?Uuk1o35HO3#X*6MbZGt3F
z1F}f{CqEvOIITy5n|$W9ckqn?tUAT{BM9i|M|OFv-Q?Y8%dO2nAtRrf6*db<dB5F2
zsl<^tvMGj|%IROVWVlJ4&H8P!!bIdmYH;l||Eh}6ppWAk9&jGyP(tri1a+`0vNv9b
z&9&A51^6Y=>u>gZ489BC{+yV!cD~|Fv`XH;w(K6hROA(*mm-TB^Q%FEFE<R4Do|l(
za<UX><QM^siu_3023oq;xdG$@S7pQ-$B-K32|@}(Y`MDWk3s|&k=4@!V#g&EX}HXc
zKM>z~c25o98hHT)(#L7DKsIJyfnIRU!ol<I@$Cm@%gCO>27VDO$(PX8?Tt%Fjknxh
zs43{(_T`d#%Rcctz5Mgv?HqjZyw@qY8QU&wzH~srDMcKfeh42XN)^Jz@ZEt#9d`jk
zF#9a=@D@r441+6Ytw`jg{OSomzWW5o^~AH?(caM}c^qcR{a!wRqAmn}3+OP(wt{Ac
z3Ow<&VRv|UY~QdRK}EvXsIB-77mv<pbObt;NwTd6OgdU1GF<4rNvFG5P_y?t^VspI
zq0?g<N!D-xIR_OZuTu8@Sdo0m+J4Z|HqsFtv})im64Jg>G~DOdl65#SvhHCHmEi~>
z!|73vVR1m8AcK&Jn;(iAHc=-=P<na)2=BqwJ&N9a9nL<~=e!ame{f#}^I$o+7zd|_
zLAoNHFXOS=IfeeeZY9-#IFaF=ZU%KplMhQi{sXVW0|4m$-VA~Vr}v?O;&nWXh-QEf
z=~S}SF3unAEZ6)HpaiSUITht3tc0NR4Rn;%LhE<mG|%CirSqk8?8xa^=`h>N<4?ko
z>^fM5p*D&sE=)q&u2`15CzWn|JuG)~^&uyrD=k;cyr7l$uRk0N!IMHem17}od}A}f
z?JCJB?6U1{WDeIQj+E#E*_v;=8MlfA@CKds(>V-~sD51=r^8z{B5({h!9@EOdp5?=
zDjm`=e8RKVt{Bo1ym^S(D!Jt`Jl?XouL66Va3jpo${TPsboT)$g3$$UejkGp+S5oI
zfF3a(jd0wi>bm|>hnv}u^UTc<_9~(eJ&2u=3w>}X{p@mzjWlu{<U<^}N|8+VY1I_d
zM<_s+@>&WuGjdhE+LtR*HfN5`EHmMTlY{uJ-@wV6*s~@!5i)7kc5;Pwg1*EPbM`|<
zRUcf#i1qzz8Q2w#%GLr_ZUM+_oq4UJmD4~%>^(^jm1IvFRgNi=$?ulhC0$Fc5hd4r
zyOBYqQtishg;88P5VNJ@Ottjeu5cu%x2bAvB8Z9&SE$EwQD{*YTA3QvsE&kfLP=$N
zFH;&uTOGcK7^qbC)>T*$eIH+gh}f61s@wBab5$?rag8d!iNN>fVw4RH33qR|N|fR+
zcNpHj)R!UhK-exATU0ic=t}u8owAcwS^G-sc+u4QWwk&<6X;!oq<Ssa0^2(?n>lM;
zE~~_hdT*479P2}MCu!R}+%AUKxdk2-87yi9nnBHDC?tAc9XBt!*1tA7L?N}nj=i$|
zUY24$IKO~1CuEDml;f7sxyF#T<;dm|(x%!)?O(4&<x7lS&!9qAI^?m~!dtd2>?-jy
zw`-?NgkLsslNlsj@y07!)d=YmzVsm8h>DZKKB2a_a)V$)<b`}ClEsul;>KH%umlvk
zpi}1l6-Zqq6=c!GJoyvuK54qbbV`|Jy)}wH2~;Y?POm{hnP1K>V<A7F`PCa8-)~<z
zdfKJz`RTdf8a~FF=IzdF$YXonx{RuNc>5BpSbU{*U5Ez3cdaT*<1tv-`U=n!eIpqR
zThc7kCegbRkGsu9H>>fte4B4QEy67NB}_Jjnl3DmVl0K65*13oDrhZSW73B*7>RHI
zW|OQy21dzPrqL`hRsF&fYVDk|>wV^uSE;jYz=39)NR6WkHoYy(wX&9)%t{e%%{!$!
z_Xa^;_A4dO2q_y993-AOGCxhqBci^l*h)aEJwWrJqqT50GZ9I*WM|17qUZj3p*WnY
zU2;Y|jLC8(o+4-6`&uNT<lsb(-I7S%tB4S{)|;nqq<cfq`c><XQVB&NQ<r4U!^ZZ+
zo8>Mk))7L&#00#4bd5U<QLJE5i=uS1;gY#eB^r?+lZf!Lx%~C-1nR~)h25PjxT0OJ
zi<mYTt69pvlw1QzwNG6Z3)i=^%L7bwYG^g@B<McShwjzMh)5^7C0=T~oa~3gByRA!
zoapgeA?zdt6)rGYaH63=-mH5=W7Le&!&jkot$8rKa$dipyhgvy2^Srj&8&)Oqf(!e
zt63id`8P?O5ax%s#;}wre=X0B9h1unj?i)sa?4w1y=H9jwZz485T=v&+FV&K)`J_!
zp}t=_D($~mw*I)P0-vRN$}1!SFJoSyc`}H29^6nj#=+XlnTJO@`%Xi;7;j=H;pcnB
zx~duPj67y%=ENc)dc6e*CRzGdWG|oS*s=Zr&}C!Z>*SWAN~4sfPuEUbmUA0@0hTEj
zJO&&jmOow^W+H4H2P}(fEK**xUgBq0tSRz66s;Rxdk{RRo*EXF`p)6@gBk7z#OT6{
zztWxK*b#DVD9?W3|7mt-<C|GhA2T~`;t=uz)?%F4ovB>?w|vaJEZx;Dq%zBu4E4r+
z0wi=_Vo|<UbvR)g@7%852WQ#TmYwicO|4P8EFc2LtLS0eDMGX{nFsFDvDi?fu$>3L
zK}!TDs5ooSC4Sw!z!p_wMg@Vg9FM~M15;TG5%r-v)iH+*@_n%PdMvI_L~j^t%9Q-b
zqPkc3jOr@};UYz8me1awqKncFfBu3H6@%_L92jB?7Dwg5{!m4AN|e0_*5it=#m{mb
z<SWcooO*e-vs>4!;jWSzv`i;!)VugU6fJ>M;vp6Edrh?l##(**ADlJM1Xyu)t9+;%
zUbJ_lp&;^+i|v-u8|yjWB_j7E(NrA@S)>z-eutlDH%4mS4lod?Ein>=(kHntF9Erb
zS)LSZK;L(k_qd=K#gtH#+r(^o%{3VGU&gmz?&?Qhe;d;;@Y&b=IAlI@oV3_5KFT<o
z?1}x(KrVfv>)p_)Q27h?O#ROAH*}^og+RsLtub=0i1{kusAH=5btRPt{J_m7l<tYo
zCq;c0t50Y*Sj?r+k%?wR2!a|zy<8wl52No)d;KO;lYu&HJgl+J=zA!5B1~S`{(F1u
z(WXSfwbNs0ne(~ZDLzd$6cgmyWz`A9b&E}c?15h422xW6#9ixBzc72T>}4lo<VeL$
ziK3cGel5%&ORBFMkWLs4aU}?3R+)1snckpiz1q<5sQA95w|kJjb(DT|)Rzuw<6Lah
zJX%g3U*40nGQf8c5?#1#RT45JO%WgIxtd(B*^KX*x@<x&7zDk==(b_%_O$A~K{<ir
zL&cBVqI_AIV2GcCzK?M3r5}j8+3^{RrE6^NV@u^w*Df@r6K8_NfbuXUUQ%an;M@|L
zd-yqZnA(O9V)*&>7%xy3(I5om<5Hi}So;&Zlsnp_2~2*KZA^%G#HOERT}$S`IKZ@J
zwV(CVps+D=cWygk!Db>{H~(~I5E4#bE|K<5h*z<>!u2OWoEJ|~IcI|oZz3B!l$_SZ
z&&hYiRwhs(p!uT6<zq76dZET!%nXH&Y#;e4>{07Ap)VH`>pojUaA9+x;IC{^mc1<N
zF(1n=weST?+;B@Smu+A|t@R}^iRjlM{y*n9ZI@osY7|weFeRt-=iBRZ*T2r$|KK`n
zv_Qc`;Iz2=ohG9$Oue?^1zvcbD_`m*?2FP6s6F!;G`1a}u0z#uc<$WTtv9B+;hoZC
z2b7CJ&op61Q2HwJ0lW|j$i_(+Nx6b92Q$8*F|_}K3B{Tof5b97bgSo=sGkP?9V6%z
z0(9@<`1K@n_NJt|Y5MDmaDs4Qu{AUYn2IfZOe3AJw=IgXVK&gdGAh=!K!!xEfl*u@
z=y{{bb%`J!A5Z&Dp>eF?k9yj^GpI$Y$R54#G`s5F`wy(_p3WkHK-}kbB3tuV=g48j
z5%LK#ikx9}E%OyR_zLyRmh+<f8N~<Q>{W}=eedOq0C~h)!z}&hzdt1q&>QUaQimk2
z37pAT|Gb2y)_@jUpU6bcfZ0!nz;=i61S{pu2k-mf;<3=9Y`mcT%B>7?hC}SfGP1T}
z$8#DmI-|1zhc58fo0BQC!FvyPFF7rDo-7UuZqU@{=uP@*v*k7<oJD0TAiciC8J<<T
zi{lEbLPQn#wxV`sG1r2dlAb?jxX;~J6{F6)T&D74-ChJgRgo}NI0~r@>sDI??%#(%
zH3gDCk)9s$td~2Pp+7#6yg&hef+YkW^}Ya)C?kTjcD1p!aUO&@Ub06LIy2(LYt4rk
zA%xE(SxJlK$!K7xl$1$wgiIOJq`wlgKQytm#cy$(^Q}u|_EPBe`gGWkF<tTDz;Fum
z<*+RoR_^1)WE%L_a?AellJ|=D`M^rYB5Wm|_I4KDujC7kT~o-hBnG??-%cP=sL=a4
zcvdvf$vWG_r}w7_(a{{+blAZ|0B|At(nrs%vvmU2bpw>@`mG-4G^0-jAru6qMrRzV
zAp=J76o{$v!x6?7(eIrh5$Zz1hdmp_WkjzlXMkkJK9Ilyq4)EFmaum{;RZRWs?wsl
z)b+N_43*?A`arGj6yTOyjTmshw>EdF{0%fH;vJ(Rk=*wb>kHl6+}N!7wdEsa4wr>M
z-RgYtFAOHSr%sD%Ce4JTRiC9K>blcqAX={Jm%3b%H4O-^FD%qY2Q=*Bk>4)RlGi1(
z&kuEfv?zRAlm#_2Ux9M6JWSO(Bhm+XpKh*zq6vU@DKIY7N-cj0W^mRT4=A)?_D>uH
z0qvK`3YkZfCrA}uS$xIa=#97HhE^n&R!Ac~s?}7iQi_-f#n}(C;omz))r_KE7{iq0
zjZgC9lNz++#8eH{Ot%pmyqjK>D#VNI<51EwdUKEVn%bqMl!eWDD6}<L)io`$7_r<M
z5?BMv)4=+ceSJ+BW?+U+Hf1)a54BGj^k%cpEx)^#Pj&iZK9eH%ffJE=xIYf^f@ywf
z;hvqr_*O&4Okog-j0P__1#_irKG0$`(9&Ee^c_cfha1N?@|QUo@&u?Hgr`EDNu*-^
z$a74UK1k;1+~t@n36P5<n<2hveDl_z#3F^uEkt0&Ni!zCS!?*LS?l;F>Q-AAr~y`C
zA3NN9<bCS*<JGs}2_@M4WfrfGJx|&rRrNogLWx|gQUS>}uz{KDoWRTtWc2pWr?~Au
zSK}fb=O!9HPFC4yyUke8er5VBGc6!})ZTOTIn!XHHbJg3a#-I!_2o5GqVTn9|7!xU
zb8uVjiAafst&UA<w+UitQk`y)Eoj)RS`e1Oku3B?hFP;}#@&X)Ur9RJt%I{Zxu2am
zBU@d}Ak~tXQri#x{I1dFSd$=Onu1i<gI?0c7$gw<gE82b$kj>0KY2YF@4FVcWQDx|
zlmCpriN~u9ssOEg>V<bR!<~8Hy>D@7<H12SZsgW`^m<DrbAg`;s0lT}t{_I9$u@%I
zb6;&UBK0Phfkx2RB63@PxzmH~fUkJiGNbQ>z)`IS<`X~dzLzwXaVkVPsHr95mB_B(
zY`UQ|nIFXnzO$^n;h{C!W4Y|7DJX%yL6`j?158Xz`9x^nL0?(;g{%?6KNt0Y+S2)c
z>#&VHQ?jb=U|&qz>r4H0i7H40tT<q*BJW;AI}~hY7D7CFiNeW+pEUim(LXBn;R<`~
z`{x2n@8R=){+@Ngt|pV_ub38DDeX1^7awND&wkyg0<20WK3#B`$#}8vw2VnV$du9^
zqH@{FA}UyyqI`>zgq@Adc}YMR%BVvTC5dDpxr-Z@U__<L``xc~`Lzb<@uK1skkVy{
z=K3oR&y#7F7UW=(-U4;iwK_p3-}4S;IdGP3;>`_&jxjMTm;Hgzmk)C`zQ0?wv{11}
zG~B!wW7HKkf<{GTOXrrgo9b=A=Da?4_(sjGq0nvz<LCak4?p?+^WOBGnZKk-_}uRT
zQP@C}HRx)cbkk_Ya7kMNeb1ES^e<+?D#NgfW60gtq2GyJ7_HHS?&w<5(8b6}G12%8
zc|lC~og6n0yRqZ}BHDpxwQ@+#;CwNnEvTrS#b3f_Ws{#5_R|?XuSkAaDu%|1HSetb
z9?6<X-HFA3ECI`2%x~TZn_D6%+$~AL^RvSH3_kqHpb?GHRE^;k&?&itG2^{N3EcpX
zYA{a~(xC~NK(Fcn29J9<=MIi#72`C@(nZvV47+-jo~FU#Pg@i=fucoi_1U;s4U+Ym
z(CY~Gu^OwDh0=QYP>yR10+l2zXRQc=aty|n^+UvOXm5N!@?kl<-{>Kl_FD7WIK*1_
zL5v9ftKN9kaUmN)=uoGYfWKJ|h9bSISgH19(5YcgVzrn#IzUkW>xaZ&^Tpq;fe394
z1k^uW195FjTCV{Bz-#b<p`?;hsRkRHCL32JG^M&CoaO8)1{@WPq<VQk_Fd`M%{Y^V
zi|pRdX&OtLX|Kw&A+2$viyC??|JQvJg~u7`$Ke-8A7=!DeT^tU><&F_D2q4olmRaV
zow=-rw7v{NvTeoHYjZl|P~>@T@8*>xlsyJoV1D(zK57oisEMNIxDY)30h1VRT(4W4
zvv|c6<*>5JBSsHvxRNd$mz7V;jEK8iBeD0Y;I%y`-8W?*zZHkQq?2Nv42m5|g+e57
zsh9Exrq4|zU!q>|8~4s4wngVY$ML=btN5LuyI4ZCrlT!%vcwhC)(aUc3iN^_HkZu<
z#I3ZWS2H3=<kRQuI!N0O_X>?9+Hm_+8v(&(c!$WMs6^-R{|)A!WrE)uGs6B6Y6^@)
zp)vnR9ERr6`Hw5#d3@7>r(9oxP0b!_;~xyE`91WrL~gb7S3<FkgL>kL;#)lozykoG
z*Z_d=6Ax#YxaQby3jUeW>q-jqENyuRz@Yt^kkV^NHx3Q}NJa%i1>%C8qLFKqy$j)<
zQMZ0KP|wm;z}LTXOoUH98{@Fku2*>MY=V7c%RCty7^SYciPZS(m1=YW)-(Ao>*TNQ
zBzNVnG+j^!`}}QWDKyNJ_w}8X?~)!TEPlK&`QtqUm~aBGW~CzgFD1BI|F1VcYQ+AM
z=^H2h>h7A<pMxh;k8mXn0{{#o0sw+fenpSLfl;P#Ycg78VX*!z8kKXiK>9JZf8JyO
zu+kI-n4l9V^nWESmE`{?Y4!d|RVZj2nEy7FfgL(I|I<|lF6tC`ZVlV+WO){VUEI%t
zT9@#%0Pa$H7B;&ao&~M$SI<IzxAwCD)${i0aQ&x?3~bw@{QOm04<Ym*2H3w37kt!1
z|EweGC4~Nk`=on|hXU5=MIrxlG{;@`!*L(e!T}8cpm|*K|GaAbKM_2EPYAHVrGLTy
z?fwA($o~iVIM(`alRbeCdx6i^kopLrg;<|-f_*ekmj1cH`43r<>k-KFOl)~1eieBl
z9`sQ?5&wHZ3II_4LmYqnOZ>RT!(Mo>Vn5Ck*oNFDrWOhS(0bfuzJI_ZDo@}O0#tBT
z|H~(EoT&m45CH&CeC%kV_y<g@_5?21Mgt=ZJV)w3MeGqs^$!@N3qCcZ2ETa({>h;K
z)TT!_2>t=0>w$v@Xr59VTrofhjj0bF86bK7eDL^LOdq^f00fU46M_W?QJ(dRgM`o{
z2H>hlDscE9_OmYQQP*Jjq+1=Nebyll5kfbafKSKi!74+PPmb(Rp`OV;I-&S@aM=HG
zB+vYjObjj`qIv@UQycyP3R;3shZLVJhz%1$zjb`F@XHkgd@%aF+)a}i+O<au4v$$R
z`VSf80`3}Cdb04}Qu4pktj+Do6=iP}a8v*DjA?fI69tcc=l?%@2=;z5Uo!GHXrm*9
z&@sN?lu}AC(&%$V0h5msLR$rcm%@eq1o6rGKjr8j7llF}t;_vc%kvuV9?5%Qk2*@Q
zz}VjjRmKRR<I}*#t#sheW58!z)uS#f^KZ0YfbYhzo(#RGS=TUnY^5VaeylJ57_!TL
z+*;xPZmah=AvATtqvtIDS@u6Q?jJH^@uQ{x*@X#0XwtH$m{nAx|7VGkQ+Qi@kMZ((
zv@G-w`9t|5m<s%D;%}lrO%g(PSA$6=WuIJT#<dE7f84&7N4GitA;#A}5t*AY!ED3N
mf&8a_{sTU!e+-cD(_#64tLT4`wf+Ikk2RJ31#HV7<^KUsjx&Y;

diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index c04ec63a..ffc4f428 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Sat May 09 23:59:20 CEST 2015
+#Tue Nov 24 14:46:11 CET 2015
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.4-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.9-bin.zip
diff --git a/gradlew b/gradlew
index 91a7e269..9d82f789 100755
--- a/gradlew
+++ b/gradlew
@@ -42,11 +42,6 @@ case "`uname`" in
     ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
 # Attempt to set APP_HOME
 # Resolve links: $0 may be a link
 PRG="$0"
@@ -61,9 +56,9 @@ while [ -h "$PRG" ] ; do
     fi
 done
 SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
+cd "`dirname \"$PRG\"`/" >/dev/null
 APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
+cd "$SAVED" >/dev/null
 
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
@@ -114,6 +109,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`

From 8e907f95eae2492bf9e4d84461ddff9bcbfbe096 Mon Sep 17 00:00:00 2001
From: Felipe Morato <me@fmorato.com>
Date: Fri, 27 Nov 2015 16:02:13 +0100
Subject: [PATCH 006/121] Add support for exporting to OwnCloud. Closes #437

---
 app/build.gradle                                   |  10 +-
 app/libs/owncloud_library.aar                      | Bin 0 -> 146647 bytes
 .../gnucash/android/export/ExportAsyncTask.java    |  69 +++++-
 .../org/gnucash/android/export/ExportParams.java   |   2 +-
 .../android/ui/export/ExportFormFragment.java      |  11 +
 .../ui/settings/BackupPreferenceFragment.java      |   4 +
 .../ui/settings/OwncloudDialogFragment.java        | 255 +++++++++++++++++++++
 .../android/ui/settings/SettingsActivity.java      |  34 +++
 app/src/main/res/drawable-hdpi/ic_owncloud.png     | Bin 0 -> 2939 bytes
 app/src/main/res/drawable-mdpi/ic_owncloud.png     | Bin 0 -> 1943 bytes
 app/src/main/res/drawable-xhdpi/ic_owncloud.png    | Bin 0 -> 4212 bytes
 app/src/main/res/drawable-xxhdpi/ic_owncloud.png   | Bin 0 -> 6584 bytes
 .../main/res/layout/dialog_owncloud_account.xml    |  79 +++++++
 app/src/main/res/values/donottranslate.xml         |   6 +
 app/src/main/res/values/strings.xml                |  14 ++
 .../main/res/xml/fragment_backup_preferences.xml   |   6 +
 16 files changed, 486 insertions(+), 4 deletions(-)
 create mode 100644 app/libs/owncloud_library.aar
 create mode 100644 app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java
 create mode 100644 app/src/main/res/drawable-hdpi/ic_owncloud.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_owncloud.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_owncloud.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_owncloud.png
 create mode 100644 app/src/main/res/layout/dialog_owncloud_account.xml

diff --git a/app/build.gradle b/app/build.gradle
index 62c5c1c8..96b836b0 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -181,8 +181,15 @@ def androidSupportVersion       = "23.1.0"
 def androidEspressoVersion      = "2.2.1"
 def androidSupportTestVersion   = "0.4.1"
 
+repositories{
+    flatDir{
+        dirs 'libs'
+    }
+}
+
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
+    compile(name:'owncloud_library', ext:'aar')
     compile('com.android.support:support-v4:'       + androidSupportVersion,
             'com.android.support:appcompat-v7:'     + androidSupportVersion,
             'com.android.support:design:'           + androidSupportVersion,
@@ -198,7 +205,8 @@ dependencies {
             'com.kobakei:ratethisapp:0.0.3',
             'com.squareup:android-times-square:1.6.4@aar',
             'com.github.techfreak:wizardpager:1.0.0',
-            'net.objecthunter:exp4j:0.4.5'
+            'net.objecthunter:exp4j:0.4.5',
+            'org.apache.jackrabbit:jackrabbit-webdav:2.11.1'
     )
 
     compile ('com.uservoice:uservoice-android-sdk:1.2.+') {
diff --git a/app/libs/owncloud_library.aar b/app/libs/owncloud_library.aar
new file mode 100644
index 0000000000000000000000000000000000000000..533ed701ac34aae36aff9e8715f5506fe3e0397a
GIT binary patch
literal 146647
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%0DTuxQHcW;kt=LSBp}3LS%2|l9
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

literal 0
HcmV?d00001

diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index 3fcb3e10..c2e229f2 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -46,6 +46,13 @@
 import com.google.android.gms.drive.DriveFolder;
 import com.google.android.gms.drive.DriveId;
 import com.google.android.gms.drive.MetadataChangeSet;
+import com.owncloud.android.lib.common.OwnCloudClientFactory;
+import com.owncloud.android.lib.common.OwnCloudClient;
+import com.owncloud.android.lib.common.OwnCloudCredentialsFactory;
+import com.owncloud.android.lib.common.operations.RemoteOperationResult;
+import com.owncloud.android.lib.resources.files.UploadRemoteFileOperation;
+import com.owncloud.android.lib.resources.files.CreateRemoteFolderOperation;
+import com.owncloud.android.lib.resources.files.FileUtils;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
@@ -180,6 +187,10 @@ public void run() {
                 moveExportToGoogleDrive();
                 return true;
 
+            case OWNCLOUD:
+                moveExportToOwncloud();
+                return true;
+
             case SD_CARD:
                 moveExportToSDCard();
                 return true;
@@ -213,6 +224,19 @@ protected void onPostExecute(Boolean exportResult) {
                     case GOOGLE_DRIVE:
                         targetLocation = "Google Drive -> " + mContext.getString(R.string.app_name);
                         break;
+                    case OWNCLOUD:
+                        targetLocation = mContext.getSharedPreferences(
+                                mContext.getString(R.string.owncloud_pref),
+                                Context.MODE_PRIVATE).getBoolean(
+                                mContext.getString(R.string.owncloud_sync), false) ?
+
+                                "Owncloud -> " +
+                                mContext.getSharedPreferences(
+                                        mContext.getString(R.string.owncloud_pref),
+                                        Context.MODE_PRIVATE).getString(
+                                        mContext.getString(R.string.key_owncloud_dir), null) :
+                                "Owncloud sync not enabled";
+                        break;
                     default:
                         targetLocation = "external service";
                 }
@@ -333,6 +357,49 @@ private void moveExportToDropbox() {
         }
     }
 
+    private void moveExportToOwncloud() {
+        Log.i(TAG, "Copying exported file to Owncloud");
+
+        SharedPreferences mPrefs = mContext.getSharedPreferences(mContext.getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
+
+        Boolean mOC_sync = mPrefs.getBoolean(mContext.getString(R.string.owncloud_sync), false);
+
+        if(!mOC_sync){
+            Log.e(TAG, "Owncloud not enabled.");
+            return;
+        }
+
+        String mOC_server = mPrefs.getString(mContext.getString(R.string.key_owncloud_server), null);
+        String mOC_username = mPrefs.getString(mContext.getString(R.string.key_owncloud_username), null);
+        String mOC_password = mPrefs.getString(mContext.getString(R.string.key_owncloud_password), null);
+        String mOC_dir = mPrefs.getString(mContext.getString(R.string.key_owncloud_dir), null);
+
+        Uri serverUri = Uri.parse(mOC_server);
+        OwnCloudClient mClient = OwnCloudClientFactory.createOwnCloudClient(serverUri, this.mContext, true);
+        mClient.setCredentials(
+                OwnCloudCredentialsFactory.newBasicCredentials(mOC_username, mOC_password)
+        );
+
+        if (mOC_dir.length() != 0) {
+            RemoteOperationResult dirResult = new CreateRemoteFolderOperation(
+                    mOC_dir, true).execute(mClient);
+            if (!dirResult.isSuccess())
+                Log.e(TAG, dirResult.getLogMessage(), dirResult.getException());
+        }
+        for (String exportedFilePath : mExportedFiles) {
+            String remotePath = mOC_dir + FileUtils.PATH_SEPARATOR + stripPathPart(exportedFilePath);
+            String mimeType = mExporter.getExportMimeType();
+
+            RemoteOperationResult result = new UploadRemoteFileOperation(
+                    exportedFilePath, remotePath, mimeType).execute(mClient);
+
+            if (!result.isSuccess())
+                Log.e(TAG, result.getLogMessage(), result.getException());
+            else {
+                new File(exportedFilePath).delete();
+            }
+        }
+    }
 
     /**
      * Moves the exported files from the internal storage where they are generated to
@@ -423,8 +490,6 @@ private void shareFiles(List<String> paths) {
         }
     }
 
-    //
-
     /**
      * Convert file paths to URIs by adding the file// prefix
      * <p>e.g. /some/path/file.ext --> file:///some/path/file.ext</p>
diff --git a/app/src/main/java/org/gnucash/android/export/ExportParams.java b/app/src/main/java/org/gnucash/android/export/ExportParams.java
index 97232940..755487fe 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportParams.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportParams.java
@@ -39,7 +39,7 @@
      * Options for the destination of the exported transctions file.
      * It could be stored on the {@link #SD_CARD} or exported through another program via {@link #SHARING}
      */
-    public enum ExportTarget {SD_CARD, SHARING, DROPBOX, GOOGLE_DRIVE }
+    public enum ExportTarget {SD_CARD, SHARING, DROPBOX, GOOGLE_DRIVE, OWNCLOUD }
 
     /**
      * Format to use for the exported transactions
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 733f5601..51448cb8 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -18,6 +18,7 @@
 
 import android.Manifest;
 import android.app.Activity;
+import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
@@ -62,6 +63,7 @@
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.UxArgument;
+import org.gnucash.android.ui.settings.OwncloudDialogFragment;
 import org.gnucash.android.ui.settings.SettingsActivity;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.util.RecurrenceParser;
@@ -322,6 +324,15 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
 						SettingsActivity.mGoogleApiClient.connect();
 						break;
 					case 3:
+						recurrenceOptionsView.setVisibility(View.VISIBLE);
+						mExportTarget = ExportParams.ExportTarget.OWNCLOUD;
+						if(!(PreferenceManager.getDefaultSharedPreferences(getActivity())
+								.getBoolean(getString(R.string.key_owncloud_sync), false))) {
+							OwncloudDialogFragment ocDialog = OwncloudDialogFragment.newInstance(null);
+							ocDialog.show(getActivity().getFragmentManager(), "owncloud_dialog");
+						}
+						break;
+					case 4:
 						mExportTarget = ExportParams.ExportTarget.SHARING;
 						recurrenceOptionsView.setVisibility(View.GONE);
 						break;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
index 32ff184f..24159994 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
@@ -83,6 +83,10 @@ public void onResume() {
 		pref = findPreference(getString(R.string.key_google_drive_sync));
 		pref.setOnPreferenceClickListener((SettingsActivity) getActivity());
 		((SettingsActivity)getActivity()).toggleGoogleDrivePreference(pref);
+
+		pref = findPreference(getString(R.string.key_owncloud_sync));
+		pref.setOnPreferenceClickListener((SettingsActivity)getActivity());
+		((SettingsActivity)getActivity()).toggleOwncloudPreference(pref);
 	}
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java
new file mode 100644
index 00000000..e49fc413
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java
@@ -0,0 +1,255 @@
+package org.gnucash.android.ui.settings;
+
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.net.Uri;
+import android.os.Bundle;
+import android.os.Handler;
+import android.app.DialogFragment;
+import android.preference.CheckBoxPreference;
+import android.preference.Preference;
+import android.preference.PreferenceManager;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.TextView;
+
+import com.owncloud.android.lib.common.OwnCloudClientFactory;
+import com.owncloud.android.lib.common.OwnCloudClient;
+import com.owncloud.android.lib.common.OwnCloudCredentialsFactory;
+import com.owncloud.android.lib.common.operations.OnRemoteOperationListener;
+import com.owncloud.android.lib.common.operations.RemoteOperation;
+import com.owncloud.android.lib.common.operations.RemoteOperationResult;
+import com.owncloud.android.lib.resources.status.GetRemoteStatusOperation;
+import com.owncloud.android.lib.resources.users.GetRemoteUserNameOperation;
+import com.owncloud.android.lib.resources.files.FileUtils;
+
+import org.gnucash.android.R;
+
+import java.util.prefs.PreferenceChangeEvent;
+
+/**
+ * A fragment for adding an owncloud account.
+ */
+@TargetApi(11)
+public class OwncloudDialogFragment extends DialogFragment {
+
+    /**
+     * Dialog positive button. Ok to save and validade the data
+     */
+    Button mOkButton;
+
+    /**
+     * Cancel button
+     */
+    Button mCancelButton;
+
+    /**
+     * Owncloud vars
+     */
+    String mOC_server;
+    String mOC_username;
+    String mOC_password;
+    String mOC_dir;
+
+    EditText mServer;
+    EditText mUsername;
+    EditText mPassword;
+    EditText mDir;
+
+    TextView mServerError;
+    TextView mUsernameError;
+    TextView mDirError;
+
+    SharedPreferences mPrefs;
+    Context mContext;
+
+    private static CheckBoxPreference ocCheckBox;
+
+    /**
+     * Use this factory method to create a new instance of
+     * this fragment using the provided parameters.
+     * @return A new instance of fragment OwncloudDialogFragment.
+     */
+    public static OwncloudDialogFragment newInstance(Preference pref) {
+        OwncloudDialogFragment fragment = new OwncloudDialogFragment();
+        ocCheckBox = pref == null ? null : (CheckBoxPreference) pref;
+        return fragment;
+    }
+
+    public OwncloudDialogFragment() {
+        // Required empty public constructor
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setStyle(DialogFragment.STYLE_NO_TITLE, 0);
+
+        mContext = getActivity();
+        mPrefs = mContext.getSharedPreferences(getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
+
+        mOC_server = mPrefs.getString(getString(R.string.key_owncloud_server), getString(R.string.owncloud_server));
+        mOC_username = mPrefs.getString(getString(R.string.key_owncloud_username), null);
+        mOC_password = mPrefs.getString(getString(R.string.key_owncloud_password), null);
+        mOC_dir = mPrefs.getString(getString(R.string.key_owncloud_dir), getString(R.string.app_name));
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        View view = inflater.inflate(R.layout.dialog_owncloud_account, container, false);
+
+        mServer = (EditText) view.findViewById(R.id.owncloud_hostname);
+        mUsername = (EditText) view.findViewById(R.id.owncloud_username);
+        mPassword = (EditText) view.findViewById(R.id.owncloud_password);
+        mDir = (EditText) view.findViewById(R.id.owncloud_dir);
+
+        mServer.setText(mOC_server);
+        mDir.setText(mOC_dir);
+        mPassword.setText(mOC_password); // TODO: Remove - debugging only
+        mUsername.setText(mOC_username);
+
+        mServerError = (TextView) view.findViewById(R.id.owncloud_hostname_invalid);
+        mUsernameError = (TextView) view.findViewById(R.id.owncloud_username_invalid);
+        mDirError = (TextView) view.findViewById(R.id.owncloud_dir_invalid);
+        mServerError.setVisibility(View.GONE);
+        mUsernameError.setVisibility(View.GONE);
+        mDirError.setVisibility(View.GONE);
+
+        mCancelButton = (Button) view.findViewById(R.id.btn_cancel);
+        mOkButton = (Button) view.findViewById(R.id.btn_save);
+        mOkButton.setText(R.string.btn_test);
+
+        return view;
+    }
+
+    @Override
+    public void onActivityCreated(Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+
+        setListeners();
+    }
+
+    private void saveButton() {
+        if (mDirError.getText().toString().equals(getString(R.string.owncloud_dir_ok)) &&
+                mUsernameError.getText().toString().equals(getString(R.string.owncloud_user_ok)) &&
+                mServerError.getText().toString().equals(getString(R.string.owncloud_server_ok)))
+            mOkButton.setText(R.string.btn_save);
+        else
+            mOkButton.setText(R.string.btn_test);
+    }
+
+    private void save() {
+        SharedPreferences.Editor edit = mPrefs.edit();
+        edit.clear();
+        edit.putString(getString(R.string.key_owncloud_server), mOC_server);
+        edit.putString(getString(R.string.key_owncloud_username), mOC_username);
+        edit.putString(getString(R.string.key_owncloud_password), mOC_password);
+        edit.putString(getString(R.string.key_owncloud_dir), mOC_dir);
+        edit.putBoolean(getString(R.string.owncloud_sync), true);
+        edit.apply();
+
+        if (ocCheckBox != null) ocCheckBox.setChecked(true);
+
+        dismiss();
+    }
+
+    private void checkdata() {
+        mServerError.setVisibility(View.GONE);
+        mUsernameError.setVisibility(View.GONE);
+        mDirError.setVisibility(View.GONE);
+
+        mOC_server = mServer.getText().toString().trim();
+        mOC_username = mUsername.getText().toString().trim();
+        mOC_password = mPassword.getText().toString().trim();
+        mOC_dir = mDir.getText().toString().trim();
+
+        Uri serverUri = Uri.parse(mOC_server);
+        OwnCloudClient mClient = OwnCloudClientFactory.createOwnCloudClient(serverUri, mContext, true);
+        mClient.setCredentials(
+                OwnCloudCredentialsFactory.newBasicCredentials(mOC_username, mOC_password)
+        );
+
+        final Handler mHandler = new Handler();
+
+        OnRemoteOperationListener listener = new OnRemoteOperationListener() {
+            @Override
+            public void onRemoteOperationFinish(RemoteOperation caller, RemoteOperationResult result) {
+                if (!result.isSuccess()) {
+                    Log.e("OC", result.getLogMessage(), result.getException());
+
+                    if (caller instanceof GetRemoteStatusOperation) {
+                        mServerError.setText(getString(R.string.owncloud_server_invalid));
+                        mServerError.setVisibility(View.VISIBLE);
+
+                    } else if (caller instanceof GetRemoteUserNameOperation &&
+                            mServerError.getText().toString().equals(getString(R.string.owncloud_server_ok))) {
+                        mUsernameError.setText(getString(R.string.owncloud_user_invalid));
+                        mUsernameError.setVisibility(View.VISIBLE);
+                    }
+                } else {
+                    if (caller instanceof GetRemoteStatusOperation) {
+                        mServerError.setText(getString(R.string.owncloud_server_ok));
+                        mServerError.setVisibility(View.VISIBLE);
+                    } else if (caller instanceof GetRemoteUserNameOperation) {
+                        mUsernameError.setText(getString(R.string.owncloud_user_ok));
+                        mUsernameError.setVisibility(View.VISIBLE);
+                    }
+                }
+                saveButton();
+            }
+        };
+
+        GetRemoteStatusOperation g = new GetRemoteStatusOperation(mContext);
+        g.execute(mClient, listener, mHandler);
+
+        GetRemoteUserNameOperation gu = new GetRemoteUserNameOperation();
+        gu.execute(mClient, listener, mHandler);
+
+        if (FileUtils.isValidPath(mOC_dir, false)) {
+            mDirError.setText(getString(R.string.owncloud_dir_ok));
+            mDirError.setVisibility(View.VISIBLE);
+        } else {
+            mDirError.setText(getString(R.string.owncloud_dir_invalid));
+            mDirError.setVisibility(View.VISIBLE);
+        }
+        saveButton();
+    }
+
+    /**
+     * Binds click listeners for the dialog buttons
+     */
+    protected void setListeners(){
+
+        mCancelButton.setOnClickListener(new View.OnClickListener() {
+
+            @Override
+            public void onClick(View v) {
+                dismiss();
+            }
+        });
+
+        mOkButton.setOnClickListener(new View.OnClickListener() {
+
+            @Override
+            public void onClick(View v) {
+                // If data didn't change
+                if(mOkButton.getText().toString().equals(getString(R.string.btn_save)) &&
+                        mOC_server.equals(mServer.getText().toString().trim()) &&
+                        mOC_username.equals(mUsername.getText().toString().trim()) &&
+                        mOC_password.equals(mPassword.getText().toString().trim()) &&
+                        mOC_dir.equals(mDir.getText().toString().trim())
+                        )
+                    save();
+                else
+                    checkdata();
+            }
+        });
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index f558623a..3247f944 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -21,6 +21,7 @@
 import android.annotation.TargetApi;
 import android.app.Activity;
 import android.app.AlertDialog;
+import android.app.FragmentManager;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
@@ -198,6 +199,10 @@ protected void onCreate(Bundle savedInstanceState) {
             pref.setOnPreferenceClickListener(this);
             toggleGoogleDrivePreference(pref);
 
+            pref = findPreference(getString(R.string.key_owncloud_sync));
+            pref.setOnPreferenceClickListener(this);
+            toggleOwncloudPreference(pref);
+
             pref = findPreference(getString(R.string.key_create_backup));
             pref.setOnPreferenceClickListener(this);
 
@@ -353,6 +358,11 @@ public boolean onPreferenceClick(Preference preference) {
             toggleGoogleDrivePreference(preference);
         }
 
+        if (key.equals(getString(R.string.key_owncloud_sync))){
+            toggleOwncloudSync(preference);
+            toggleOwncloudPreference(preference);
+        }
+
         if (key.equals(getString(R.string.key_create_backup))){
             boolean result = GncXmlExporter.createBackup();
             int msg = result ? R.string.toast_backup_successful : R.string.toast_backup_failed;
@@ -437,6 +447,21 @@ private void toggleGoogleDriveSync(){
     }
 
     /**
+     * Toggles synchronization with Owncloud on or off
+     */
+    @TargetApi(11)
+    private void toggleOwncloudSync(Preference pref){
+        SharedPreferences mPrefs = getSharedPreferences(getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
+
+        if (mPrefs.getBoolean(getString(R.string.owncloud_sync), false))
+            mPrefs.edit().putBoolean(getString(R.string.owncloud_sync), false).apply();
+        else {
+            OwncloudDialogFragment ocDialog = OwncloudDialogFragment.newInstance(pref);
+            ocDialog.show(getFragmentManager(), "owncloud_dialog");
+        }
+    }
+
+    /**
      * Toggles the checkbox of the DropBox Sync preference if a DropBox account is linked
      * @param pref DropBox Sync preference
      */
@@ -445,6 +470,15 @@ public void toggleDropboxPreference(Preference pref) {
     }
 
     /**
+     * Toggles the checkbox of the Oncloud Sync preference if a Owncloud account is linked
+     * @param pref Owncloud Sync preference
+     */
+    public void toggleOwncloudPreference(Preference pref) {
+        SharedPreferences mPrefs = getSharedPreferences(getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
+        ((CheckBoxPreference)pref).setChecked(mPrefs.getBoolean(getString(R.string.owncloud_sync), false));
+    }
+
+    /**
      * Toggles the checkbox of the GoogleDrive Sync preference if a Google Drive account is linked
      * @param pref Google Drive Sync preference
      */
diff --git a/app/src/main/res/drawable-hdpi/ic_owncloud.png b/app/src/main/res/drawable-hdpi/ic_owncloud.png
new file mode 100644
index 0000000000000000000000000000000000000000..83587e2cc9877b180c69fc049d839ee2befd2507
GIT binary patch
literal 2939
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

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_owncloud.png b/app/src/main/res/drawable-mdpi/ic_owncloud.png
new file mode 100644
index 0000000000000000000000000000000000000000..53b18c85aa3cf6c9e32366569a6cbdf0d302f73c
GIT binary patch
literal 1943
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

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_owncloud.png b/app/src/main/res/drawable-xhdpi/ic_owncloud.png
new file mode 100644
index 0000000000000000000000000000000000000000..3aaf9454f414feb1b6f4fdc76326432468eb1a24
GIT binary patch
literal 4212
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
KMNUMnLSTaDZbMT5

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_owncloud.png b/app/src/main/res/drawable-xxhdpi/ic_owncloud.png
new file mode 100644
index 0000000000000000000000000000000000000000..633ac813d632324ff2ec9767761e2f3a057f1741
GIT binary patch
literal 6584
zcmai3cQjmIxE(b_?<CRts6q5HMDJvXF6u-V-DrbIbP_#kh%(9`j86FJy^9bedhfly
zoA>`)Z`QhV*W7j1S!d3-&;It_H%eDqh3N5<#~=`hNKI8yAGjy}yYO&<?+xYU2H=M6
zsh|eM13rOxwvoVZe0No2PY{UY^S=uNyCgUdcu41^WaRbA&ECt`%EJ!i>+8$!;OgXQ
zW94qg@8$u^+?Rd=jCrA^C=d0^+ROGgN?yC}l@rcm!UPKvhW!a+2}6`5OSwiiCY$uu
zP7JJ-tQoHB_o8`ElE2Iq6&9_JPl@=Fc2H4~zHqlBWlmhcNzT5ydp>llTleeH>75x3
z4Nc4FP0Phl;D+(RO|YU+2BC}l5wSZ67n2^O(vCc>rxYA7^}sOKBm9Qh57FN`c>4#U
zps5-yN);nQmKfuU;1MLJCA`F7afu}rd?Lj3c=nOARwRC7g)5FDeqXl~1d|uU0V>*-
z)yz|Vg<Xz8&EEC?TNyk_9n<58Sn!cOs0M>ai;uE|$`(r_)DHhSv;Q;|$`Hc8h@su?
zx@w-%9`lk?P=uL-4OyzNT*}|%_s9!(ggJ6Usf$GXb!n(N68di}E5Zg5?z%@_q9hLL
zRY&VGQ~6jGmP+AHO=mh_qN6bLU<#Uj88Crl3f-;rjb{pjtcN1pkX~4?qK>y!VNJyX
z-ZB|i0#;QslvO>49%~pvD@Xv1XY`2U(gP-nd0$U9<Bwg+@zmXbS2Wcnl$t40B@bSn
z=!C=N5~_Ythhlct!7EWF`;$XT;bA(C8K+2^fY?rF`5F72;Hk5;DYhebIELbgMG$@B
z%||?bI?Qb*tY_VQ*&WzNcqK7-v|P&jYFtct`1D<U3pzO1A{~0Mzdss7AQV~esZ}9Q
zfuRMQ*w`ZSU}d~kvax4LU~>~3?9!K{i3meHO!BeE@(@fDW;|604>kt=+XyBmj0#e0
zwmd3<TAKU}WAkt1rfhX_e(BjS)lG0EBy?h33@er+$P){~-y?Few|<rpSTMMXIP1!O
z_@m~^P=CNi?y)P<VO87+XC1*yoniR5aI}V=A%S0GI89A)d|^Rl@!UlZCtHoj@WHOE
z`}@zIH|{I+GdD~isNt-u-IXKk({iDX_v&Vi485;;W;~X?YKeIRf(0FzT&l-rl{dpN
zFl1(LPsmN`or{vL*?i(?MN0(M?d`MTTM(&8_S~mA&D5%F<j;ear8INJAAeGnLoKSr
z=h|&&v9C%~<Nh995DDIo4LKSAHV&sCfml9hJKy``d+*GQ&kH*ejHVzykl@?iZi*2e
zmlMk}1j>Xo$>$g(`MdT&=mVvVY63AhaJ}9gzui+GSuq=V2<m<_TJA74`&?I;Mr97|
z-8(-?<fbELE7ah5!RXq<UgczomvO-e9*pj03G*rMXf^N*pU=p(L_GYtP}SCx5Z?Dx
zila!h3nEw_&g$#4s)U+whzaB_)gP?vr0j6<@-7d5y}Pm>k5wPs$uz%-7rc|xh&vCo
z(J$zMm|Hli^yNC0QIbGpJcV&j_q467$bg*)6uOe>q&32S`RJ@;a$&kels4uGYo4ep
z-{su~ySPLtHJb<5DJ7^ipd}V+U8XZxsswCTplV3L+#6oU_XtfbE#o#nj-sMcw_$ob
z34F+#1O96v4ZiEGH|S<jeO7D{yIWQ11=CV9S=JNTjfb`{WE6f7yro=a5Zc?X=a?+t
zQjH{QJ}OXYDKfljXntTy>OXY%?VcOZ*D*xu6vr=`HT!?;(Z_c&sb`Y9d5+x5_*Mw}
zl$Pt}d~zB#jx%Kh?x@qlLhq|-4Pv)1jwmy7IB41+u@NYNo9}@~L&Yd|_F|7yD5VuA
zD_%ka#C7q6nXACp%4NP}(VJUUZ4l&`gP;t*iXFOHLrF-e`@=4oW-9N)O2%9?8N|qA
z;OlDx)1tBbOj<oe$gN{)RsBh9TLBtfI1VN_2A#rQQxwm9J7%v8t+CaceBOlk?#WOV
zqyua%XpZ40(kVJd10*Q+YA=$^H1or)@88~XGoj*{I%Q=>EOs`7AX}JPRBQlpi|y7k
zp*gDmo1N{ut1q{<J>Tc)=Jd_<6-?k9+zuJPHMBU{UxX)55h}8f5uewo7W#<K4u<Tq
zi>7}`9##9gX_Eb<EbY*Cvt8B??a)0>vF<K__Hl`#HHXmHp!9TgFO!`VSFeoj>rX&5
zHkC=~S^3WIa@d8-wo&<#pZ5!^<u1ho!s9*G=3JsR)S*o}ywu~>=BBtf*TQ*jzPs$l
zDCjs^Qev*mMPrbf-}!or=R;f$O0UeBH<mxI{1J%+sYh7befDgl*n2)HV)qrFmSZ@8
zu`eR2Ea-YAaCM>HODFvaA-u;#8$A`xj&cGrtTA^Vb*jWRX#qgw@8T-4kdaG0-Q9Ce
zRClgQo3(a>y;M`fcc3%=SL)PHYL0Mf;|oS|f7#T&lWJbGYb*iuh4mY`5Y$rg{N8TK
zFXI;#rlKop2h>826U8aP4vtS=SPM^ESikf+w^^H-`PCoVzG#lWyO0v!mXjWt%TP*1
zP5pP}K@wo7$j1vs6NbvJ7P4hOU9E<D=m$uOT^A(1cBXRfTbs$pYJ}@Vi44Ary^u*t
zEP&xXmg?T>`@s!{Uw2wGTQlF?co`s3(MD(=f~DYx%$|#<pPw)@;RLt2WC#cG0=F_g
zDen>Tdr8`!(n>kIKE$FyDiJXO>~Ba23%3Ln0$5LM0F3tD{I0}JPlqS7#*={p&Jt!R
zy2o}tpaptjWGWQ0&USxhA{V#K%gf91X4Y?c|Gpr_<wKq_UWxah{ZNKzs_cC>v~6ST
z(<{wOKe9H9{oP;RoBk8>rARV9JR^CZ9gE#QjHat8jvH4??y2ds6*_;!xRH4vMw**Q
z2)P)cH){IB`lX~n-Yhi<mhT_%-!t<}q$f~VvQCS?WsR?<=Tve0)22|pJFDw!HTGAS
z7F+Xs$Q`or>J~XWeqaZIf(bee&@TF+8Lg{>Jxgh*Xll+z!+CFlS&c~;CfesdTfPn+
z8KiHSLX|!I;Ba4q4--3!e9<V2G8($gpvaK%CbX`;9@O*J)N0I3A6j#&2f9JLo*S{U
z*|sX9kI?7pSL-KiVkDLVzIBy1scCZoThrqfp+>wty)`ewG4Jq!Q$5ita{lab0kWoG
zE~Y3VLg^Vn!bDPGQwJ9&d5luIdA07!^RTe<MVHy89a3&2ow&s8WStfduo18c&KPbk
zUfbC`Szs8clT)W#gNdoJke4naYAJfd-V9UzYjIUwsZPLwDEQ}iivz`s%dbMSyz(eo
zC5R_X^UY-<q++MKs^lZU1z$N?8obV^f$m^6^PgREa^I!bwfK6F5ZS9&E9_q@OzVlm
zZ!TB_1aduT1U#3$L{P(-V@-vQe4iQ{=~Q%-XEwW)!U^62Gs<SmYQxUZE|bwKfAxOH
zYW&&kSG5&Nf8kBY7+-N(;u+3D9<{mHh(*G%=FYqh1{zl3D;2kt*JT10O{lDeX+^>&
znwfkDiqxS=7v2;j-sR4BtSKQs&ea7t(yp3|1Vh#pZ=1co<>e*5o1{+k63{BVacoNZ
zB99~Dw0$#$EST?h%h2qZi<81QJoj439F3#N)}!LEel8a*Me}ogMA|QX7-m^sUX`WE
z!OAU>GPVM{`unp2JLNj~CzP-*WgJx@g@p;<Y+0;mCMNTjrJh$NGOFM992y?-x+gTZ
zvNO&lDx(p8)5R8_6TMm)ZZ)7Zrt#YC_~!g>mq3<(H^QK6i2GoxWdtB)UgIMI5Mz+w
z+~zo4>DW;BCz77nKR?Q5YTj-o*ltL#CoIT!nYDf8wQ-tEwCC3rmr{3F<|>Rz!aC#I
z{*;;nPzMLnA;atk)hIgCH}+C}mDZM7&l=X*IOZa0`7z^S+ELVXUc-}yQ{ke#Y^*z<
z<8x-3PD1Db*!KVfSg&89o7m#Bx!jRpS#ay?C^c^Ej}a7<PqYCx4f<ln4S$MdY-$XC
z9fSq<nQ8R%@W`q1bi)GyhYk5+8Kd!IM=xVr*=@jnEPfWje9r*8=jO4#RLT+$jPp@X
z96USw2On%Sb^1w#k5kOdKd81$EynogYQFi|bATsTn_;>^?7<ya@6q~_vD$S00{i4r
zjla#}n$C19^Y2SchqXCMP;t+>iAvffys^fn(?hiUKFpr~gA}Ir%Jamokq`YV%E#M0
zt>Cy)RZVqyHuCW^cFQ=Tay+28Jrw~UTA5{o>=_p>%`WRje;X!()cd~s&R)7%9Wl!=
zfK(2hmQuNE(%es>-?X>OAEQl~cm}VBvW{hoiCvfP>OVliIX5H>pH43EMdO}qN|Q}4
zrB!-zGUHQJr!OuzDZly3ak|6qmeHxLxG6H!J2&u|Xi30+B3;be5N21x&ZOh}TEXY;
zzvLq~z0sEKEe~sCWlebNK1`WxV--vJ$GMBc)R@V}+0)0ID%=berinmZW~1=3XZWaN
z{++8<&KzB12-dX^>}OGmxTGo+oO?Jb18UW*V9mDyoi6{hd5Z}jF#US>F=40h9{CWQ
zDIa<dM?Qs8j%B{QIhp+KKV2tj=bxO71-ZMX{$gy1FO(5mLXZa9ym^LK;)bL!KUKQ3
zlQ2E+)<k=dl)OY^9-p`jzV<9e$`JWh)nkoaX&-05XJe2Z=$M*HwjV)1v~Q*InSmN>
zew6AlZ|jf#j-|33nTQcKPr>x?NdA7_9Pwn&lKc3UjlHbSp#<!(Weief7sY)?Iw=NV
z)yly^{+$~B7M(FXAU>dMy+u|WvT<g}o!6bKZ76jViplxN-x=x%S8go9ap`M%0F8~#
z4j6G+#IOkJSq@zu$_znczZj&b<4pY;RpH~jfK}Jlwhw#{cCbb6FQ&)xHX<m^S5FY%
zn{~!35zpw^2t%|2RNB5nxtKnwcKxQKs71B-zv2XGt5{4m@#AC|AG_Nl8B!m`Ml7Q@
zn{hB{Nyp5K&kVTo&Se?={A(wgjypnSFfKhUBWJw1bqTQv9Mx8fz+71L-n%>oWCFgY
zMWMt&T|AVDsB_e!-wV(y3JR8dn-uw=xrug@;GWl|7;P0F6g~-RI3iqsO?4@jeeJJ-
zvM>#IdJI|vCmBFrV!!Qe<3ptOHZ(8*5D#VC#sRus<{!S$Uc!+Kbo%sbbD97!hRw6Q
z&JkiC&pE|;vjFiSxW4z*sI<C@E2&>qYm`lvIpgv@Th8h_cfIPs^~979Wo5T6=ER!k
z070Mp-4vU_cugiF;3OL9bNiO<oD3xMR`q;{=Y4Rht#&L^e1bBJFSx<{D1%@K)zP6I
z@zoVhdSv(PTxsfWc~i=8pK7D79~K1P+LUBm7u1;6kBJzhhYZV59+(qnyFF7~@7F9x
ztY=FcZrwI8aL;z+>$UfI_#P&&<^Jh~gxpo|0}M8g=ayh7QdP&o&KC}#j~fhLKAtwc
ztaYh)6+omlw6+5hdFR2E7NKa#Wx_<3@1df|#!=|bD;-_P^OL8(pftY)aXJ=z4Q~{F
zH<WpMxMOI~Z>A0C{6TL!9Gr+Dv#QvIM+z8+Zx_P0C{$J^XS6czpdIPlC*mHrydM*C
zP-mEufu|y%*5)6!RWLC1A&&{v%g5u*)M3Zz&UD1D7(?g|yRP=}wIu)6idw-tx9O~J
ztI)+<=?moKeROmTpckBd81cG+KkGoTX!S6|xVcp9ByrUK;Fb?wyq(kRs}@FB$q-Q5
z@GIG)qXB()wRh7!lq*p^&@_N#H_)lcl=RlT+AotZGBF_~qaW-$s!6`v8^{geWRXn8
zok<16%ojSwHdDL0_%<0yX7Z?pU>=JtQT?ZlUS}Nr+*?M*GsQsf3zvC)M5p0gHtHee
zI<=#o5E{+J$rOb80IzlJh(8;ws&VOBN<#?;4iScR{&#hs_JDDCRh(pC(q5Z3%aufl
z9r0mj*dnN)sud<Chn}2&8xH2vHEzp!&?}5dSi}A{7*rO0=;hXrid*`-yV?%45?Z++
z=5BU&?DPGBvCtqWYU8f{Bd98PkpK9E;M5Ma*w^p>-}>GS$ZMUX0!(AGhINrTYz_sx
z2~_``Oz3&-SCNI-=in%NR$swAZ1(I|s{^~sZxfJ5+6VTNBBViYd+@!ugu0rx8mx2X
z$Ej73#nrnz(S13;_bNNorw0oa*H66^0lN6gIf4oO^+HC&?&BO(+*<Zo(SvJ;g>}L0
zI{L(;ccku<$wg*l_dkgVlDln6`Iu0e>oG$)F;Qc5al;R?*LhlYQSM+D6&t^HAFiUx
zUgsCkgbd7uTATju2T?udnuXLnRU%jOwoo-*gxfIjYdtvuPJtY1zDQ&8bl^Bw^b<hJ
zFgZrJxA5;%`aff2R}xM^FYwOGH$6*rA!HlY4MCiGSSM2}+JQ)fv<QVR;0o3T&YSp}
z8%P7RV0BwDhmi!g)jOmhPp@=NH7a0Xmo~nnOiP=FG(YXN2JR{qFsRa!56=d?9pxbA
zpY>O5_#!N;IR2?~F^fGFd3olQVgbQOow%YdPB!7KBmpjd?!OCUmCHM8u45ZKCT)u{
z7DeF+ALlNX;stVj8YT=n|5Ul#orbr$Cl6dK?Elu9D9ypC;TQ*mMeQkXk9M{tD~azQ
zP`h;GiQl1MCeZhJ)9*s%a~XXv80!v*6#(<=d3^I^T2C}QG7OxSy%F5_g|pHBiHs(d
ziAb7QRP-H_mctvDemA*5wN6~aE{n$gSpTJ&lB7VuTBS?hXt;K>|C#vqTuva<ZA|M=
zSeSzS&`oOovNhngoV@<?a)jGQXg?S{-rSB8m%Sd<Zw;c2_Kr;FSxc$l=ldf17ce<`
z#qr!XVev-?3Dh!ZW+z^t1zDYb8^x2Nivp5?nTqS*f5vM)Wgp@<W76IMo#(QK`^hvJ
z{MI?*q0(n%2QUh}5ATwcNh;#oEzC)y6wM+Vi;^7tKKd|-aBEr6J)<5O)0<4bf7$cL
z&<rzt={gbc1sGS#g<r!lW^U`kvja$M><!Z_4SB~@TL3#Ah+h8rxDuIM_<}|9LsoAi
zP#lYlAyb;!IT5z?0V32w%S%9n-QB#c&#QYkZ?Wbo+s7*Yk23)IKBE04JFkG-ij#%*
ztOGV6E}95~N&(Dt2lwt7_}*rbE0EN0)M!tzRK5sm7mJZCD*m8>n*<9ob`TXwnY_(;
zxOx0M&2{YO4+?v4ZyHk|46y3Wd4pPv>>TWjqo&fNGGGQ$ha}mnuohU|i{s<tU+4!s
zK*jm_H*DR7Hv@Jfq|K~btV~Q-SJ!ACK6Cf+8KFdINLoBNm-rihqyLp=M$LPzkX?iO
z(ceR{ISaQ_kI7Sj##DPxBI>qe=|G1*R_x_utG*c11F|J|PnRNZ+qb9PgXJd85zSG@
zooXXlH<|ZAP2BVw25T0MlB_)=<sz{r9N|1a-D>=AWEtc}x{E6^N3eE<4&-dN2D}5M
z4@^-DCD(y5yIGvh4?OAQ#`u7xlhpda;Qg2U;r=ZdEI)_1uql`)C$GxA=@R`)twF6H
zshNHxVfr9#WG4~l$p#N-dLFP%+tl{kVz2NLaLnbG4#I!QXa>w{N?;=}#snC^?qK{=
z0AW3v*_DP<DgaOk8Oc@O9H6`okEZ;1zLqqk_iY*hRQap=LJ;tHr9Zalva+A0%X#L{
zgc6FmEv*50Q}Vr1ik04I7D-QhUQI5^B7;uICv|n(u5L~bpg*n2xxxovWkR*u-yLA{
zk-;)jla;=&16zL&5=|T*pEP=kMKxT8G<b7{zJiTXkeLT5^zjRzZPt@79CjAJ|2MOI
zUEybly2=h`=H%iYzhwvDlsvywMzCM;g|)f{DZ*?R9E<@(1ZIuFnSZJ#pGgEOyD%;f
zxVx+mArSk7c$;63MWl8*UdBI@($L-Hj?amON=bwxk=!}^sD^q+?LY<cG}NMgz<TKk
zZv|l4Iu=K8qg+@ggb$JcLsVw>PqO?r5$zuABqE4`cP*%`8V0iTo6ML}5j{1sa)ZUR
zu5Pgk7#xw!;AmyjADw%3j>{_m!P6ro{n^m4s>UcBJnRNQ0Y13-6|5{Lpqb}mbLzQ*
z<0uw}z^+yJ{{q$jV^9~Qx;l=u1Wg%(v0w|L@gq~C!s_p-Q^=e7%!^w~ph@HRNsZiu
z3ByH|8f*N2pOf?95`)5QS`kfs2(0Dz>4}s~1G6)DQ<C}Q)(ZNR1W`A!j?oYoTgKZ5
z^;5$?R}z@IkR?jypRr~TAR@01ebG~^nrB#D1QpiVi{QibqS)j+lun8><AKm&{0rEz
zG~%p2K`N{rkcNok=A%JUdt1yDiU>1Sb;VKphJOJ+<_N}zVSG;ANi_^fj;{C8=re;6
z#**50!Mt<&P}V$w#|W#@=ttmpTpE%15?C!UOe`3UxQl$#iV_3fR(9`>h&Ks$6*fmK
zp!$jR(kbi1WfO(y)1G)dtR0$9T&p%Y;3R&-9SZZggEP=NOF2a=o-OM`c>q*o-9HuF
zTm=IrNCXie@S*Ou4Umc=yerqP{O>!`(_d2&lns858ZcQyI}nU-8dxu|y`l*HU!zH8
zOJ{R*AH`uqsc8;CkKQniVYp*wsfTD_bkeJ_>QZ(0g>!!X)GWx!>dPjryFF6y{Nd57
Yp(64u0h}t}Eel9ZNm~)6@Fwhk0H-^c)Bpeg

literal 0
HcmV?d00001

diff --git a/app/src/main/res/layout/dialog_owncloud_account.xml b/app/src/main/res/layout/dialog_owncloud_account.xml
new file mode 100644
index 00000000..ba58c058
--- /dev/null
+++ b/app/src/main/res/layout/dialog_owncloud_account.xml
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+android:orientation="vertical"
+android:layout_width="match_parent"
+android:layout_height="match_parent">
+
+    <EditText
+        android:id="@+id/owncloud_hostname"
+        android:inputType="textUri"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:layout_marginLeft="4dp"
+        android:layout_marginRight="4dp"
+        android:layout_marginBottom="4dp"
+        android:hint="@string/owncloud_server" />
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:textColor="@color/debit_red"
+        android:id="@+id/owncloud_hostname_invalid"
+        android:layout_gravity="center_horizontal"
+        android:gravity="center" />
+
+    <EditText
+        android:id="@+id/owncloud_username"
+        android:inputType="text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:layout_marginLeft="4dp"
+        android:layout_marginRight="4dp"
+        android:layout_marginBottom="4dp"
+        android:hint="@string/username" />
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:textColor="@color/debit_red"
+        android:id="@+id/owncloud_username_invalid"
+        android:layout_gravity="center_horizontal"
+        android:gravity="center" />
+
+    <EditText
+        android:id="@+id/owncloud_password"
+        android:inputType="textWebPassword"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="4dp"
+        android:layout_marginLeft="4dp"
+        android:layout_marginRight="4dp"
+        android:layout_marginBottom="16dp"
+        android:fontFamily="sans-serif"
+        android:hint="@string/password" />
+
+    <EditText
+        android:id="@+id/owncloud_dir"
+        android:inputType="textUri"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:layout_marginLeft="4dp"
+        android:layout_marginRight="4dp"
+        android:layout_marginBottom="4dp" />
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:textColor="@color/debit_red"
+        android:id="@+id/owncloud_dir_invalid"
+        android:layout_gravity="center_horizontal"
+        android:gravity="center" />
+
+    <include layout="@layout/default_buttons"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content" />
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/values/donottranslate.xml b/app/src/main/res/values/donottranslate.xml
index 21340b27..5be9ac0b 100644
--- a/app/src/main/res/values/donottranslate.xml
+++ b/app/src/main/res/values/donottranslate.xml
@@ -23,6 +23,12 @@
     <string name="key_save_opening_balances" translatable="false">save_opening_balances</string>
     <string name="key_restore_backup" translatable="false">restore_backup</string>
     <string name="key_dropbox_sync" translatable="false">dropbox_sync</string>
+    <string name="key_owncloud_sync" translatable="false">owncloud_sync</string>
+    <string name="owncloud_sync" translatable="false">owncloud_sync</string>
+    <string name="key_owncloud_server" translatable="false">owncloud_server_address</string>
+    <string name="key_owncloud_dir" translatable="false">owncloud_upload_dir</string>
+    <string name="key_owncloud_username" translatable="false">owncloud_sync_username</string>
+    <string name="key_owncloud_password" translatable="false">owncloud_sync_password</string>
     <string name="key_create_backup" translatable="false">create_backup</string>
     <string name="key_google_drive_sync" translatable="false">google_drive_sync</string>
     <string name="key_google_drive_app_folder_id" translatable="false">google_drive_app_folder</string>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 75c837d8..2323d8ba 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -25,6 +25,7 @@
     <string name="label_account_name">Account name</string>
     <string name="btn_cancel">Cancel</string>
     <string name="btn_save">Save</string>
+    <string name="btn_test">Test</string>
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
     <string name="toast_passcode_set">Passcode set</string>
@@ -64,6 +65,7 @@
         <item>SD Card</item>
         <item>DropBox</item>
         <item>Google Drive</item>
+        <item>Owncloud</item>
         <item>Send to&#8230;</item>
     </string-array>
     <string name="btn_move">Move</string>
@@ -282,8 +284,10 @@
     <string name="title_restore_backup">Restore Backup</string>
     <string name="header_backup_and_export_settings">Backup &amp; export</string>
     <string name="title_dropbox_sync_preference">DropBox Sync</string>
+    <string name="title_owncloud_sync_preference">Owncloud Sync</string>
     <string name="title_backup_preference_category">Backup</string>
     <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+    <string name="summary_owncloud_sync">Enable to sync to Owncloud</string>
     <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
     <string name="title_backup_prefs">Backup Preferences</string>
     <string name="title_create_backup_pref">Create Backup</string>
@@ -302,6 +306,16 @@
     <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
     <string name="nav_menu_export">Export</string>
     <string name="nav_menu_settings">Settings</string>
+    <string name="username">User Name</string>
+    <string name="password">Password</string>
+    <string name="owncloud_pref">owncloud</string>
+    <string name="owncloud_server">https://</string>
+    <string name="owncloud_server_invalid">OC server not found</string>
+    <string name="owncloud_user_invalid">OC username/password invalid</string>
+    <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+    <string name="owncloud_server_ok">OC server OK</string>
+    <string name="owncloud_user_ok">OC username/password OK</string>
+    <string name="owncloud_dir_ok">Dir name OK</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/xml/fragment_backup_preferences.xml b/app/src/main/res/xml/fragment_backup_preferences.xml
index 0b03b98c..463f89e0 100644
--- a/app/src/main/res/xml/fragment_backup_preferences.xml
+++ b/app/src/main/res/xml/fragment_backup_preferences.xml
@@ -34,6 +34,12 @@
             android:checked="false"
             android:key="@string/key_google_drive_sync"
             android:icon="@drawable/ic_google_drive" />
+
+        <CheckBoxPreference android:title="@string/title_owncloud_sync_preference"
+            android:summary="@string/summary_owncloud_sync"
+            android:checked="false"
+            android:key="@string/key_owncloud_sync"
+            android:icon="@drawable/ic_owncloud" />
     </PreferenceCategory>
     <PreferenceCategory android:title="@string/title_export_preference_category">
 

From 7e65d17a99481a6045592bb6cab325809c85e4c1 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sun, 29 Nov 2015 00:40:58 +0100
Subject: [PATCH 007/121] Refactor reports to make it easier to add new ones

Fix broken builds by updating build tools version
---
 .travis.yml                                        |   2 +-
 app/build.gradle                                   |   4 +-
 .../android/test/ui/ExportTransactionsTest.java    |   3 +-
 .../android/test/ui/PieChartReportTest.java        |   6 +-
 .../android/db/adapter/AccountsDbAdapter.java      |   4 +-
 .../android/ui/common/BaseDrawerActivity.java      |   2 -
 .../android/ui/report/BaseReportFragment.java      | 334 +++++++++++++++++++++
 .../android/ui/report/ReportSummaryFragment.java   | 170 ++++++-----
 .../org/gnucash/android/ui/report/ReportType.java  |  78 +++++
 .../gnucash/android/ui/report/ReportsActivity.java |  82 +++--
 .../ui/report/{ => barchart}/BarChartFragment.java | 162 ++--------
 .../ui/report/barchart/CashFlowFragment.java       |  56 ++++
 .../report/{ => linechart}/LineChartFragment.java  | 160 ++++------
 .../ui/report/{ => piechart}/PieChartFragment.java | 136 +++------
 .../report/{ => sheet}/BalanceSheetFragment.java   |  93 ++++--
 app/src/main/res/layout/activity_reports.xml       | 100 +++---
 app/src/main/res/layout/reports_toolbar.xml        |  45 +++
 app/src/main/res/layout/toolbar.xml                |  45 ++-
 app/src/main/res/values-af-rZA/strings.xml         |   1 +
 app/src/main/res/values-ar-rSA/strings.xml         |   1 +
 app/src/main/res/values-ca-rES/strings.xml         |   1 +
 app/src/main/res/values-cs-rCZ/strings.xml         |   1 +
 app/src/main/res/values-de/strings.xml             |   1 +
 app/src/main/res/values-el-rGR/strings.xml         |   1 +
 app/src/main/res/values-en-rGB/strings.xml         |   1 +
 app/src/main/res/values-es-rMX/strings.xml         |   1 +
 app/src/main/res/values-es/strings.xml             |   1 +
 app/src/main/res/values-fi-rFI/strings.xml         |   1 +
 app/src/main/res/values-fr/strings.xml             |   1 +
 app/src/main/res/values-hu-rHU/strings.xml         |   1 +
 app/src/main/res/values-it-rIT/strings.xml         |   1 +
 app/src/main/res/values-iw-rIL/strings.xml         |   1 +
 app/src/main/res/values-ja-rJP/strings.xml         |   1 +
 app/src/main/res/values-ko-rKR/strings.xml         |   1 +
 app/src/main/res/values-nb/strings.xml             |   1 +
 app/src/main/res/values-nl-rNL/strings.xml         |   1 +
 app/src/main/res/values-no-rNO/strings.xml         |   1 +
 app/src/main/res/values-pl-rPL/strings.xml         |   1 +
 app/src/main/res/values-pt-rBR/strings.xml         |   1 +
 app/src/main/res/values-pt-rPT/strings.xml         |   1 +
 app/src/main/res/values-pt/strings.xml             |   1 +
 app/src/main/res/values-ro-rRO/strings.xml         |   1 +
 app/src/main/res/values-ru/strings.xml             |   1 +
 app/src/main/res/values-sr-rSP/strings.xml         |   1 +
 app/src/main/res/values-sv-rSE/strings.xml         |   1 +
 app/src/main/res/values-tr-rTR/strings.xml         |   1 +
 app/src/main/res/values-uk-rUA/strings.xml         |   1 +
 app/src/main/res/values-vi-rVN/strings.xml         |   1 +
 app/src/main/res/values-zh-rCN/strings.xml         |   1 +
 app/src/main/res/values-zh-rTW/strings.xml         |   1 +
 app/src/main/res/values/strings.xml                |   1 +
 51 files changed, 967 insertions(+), 548 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
 create mode 100644 app/src/main/java/org/gnucash/android/ui/report/ReportType.java
 rename app/src/main/java/org/gnucash/android/ui/report/{ => barchart}/BarChartFragment.java (76%)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment.java
 rename app/src/main/java/org/gnucash/android/ui/report/{ => linechart}/LineChartFragment.java (79%)
 rename app/src/main/java/org/gnucash/android/ui/report/{ => piechart}/PieChartFragment.java (76%)
 rename app/src/main/java/org/gnucash/android/ui/report/{ => sheet}/BalanceSheetFragment.java (68%)
 create mode 100644 app/src/main/res/layout/reports_toolbar.xml

diff --git a/.travis.yml b/.travis.yml
index 7987359b..08f38141 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -4,7 +4,7 @@ android:
   components:
     - platform-tools
     - tools
-    - build-tools-23.0.1
+    - build-tools-23.0.2
 
     # The SDK version used to compile your project
     - android-23
diff --git a/app/build.gradle b/app/build.gradle
index 96b836b0..ccbe04b4 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -4,8 +4,8 @@ apply plugin: 'com.android.application'
 apply plugin: 'io.fabric'
 
 def versionMajor = 2
-def versionMinor = 0
-def versionPatch = 3
+def versionMinor = 1
+def versionPatch = 0
 def versionBuild = 0
 
 def buildTime() {
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index ca0cde76..36837cd8 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -24,6 +24,7 @@
 import android.os.Build;
 import android.preference.PreferenceManager;
 import android.support.test.InstrumentationRegistry;
+import android.support.test.espresso.ViewAction;
 import android.support.test.espresso.contrib.DrawerActions;
 import android.support.test.espresso.matcher.ViewMatchers;
 import android.support.test.runner.AndroidJUnit4;
@@ -253,7 +254,7 @@ public void testShouldCreateExportSchedule(){
 
 	@Test
 	public void testCreateBackup(){
-		DrawerActions.openDrawer(R.id.drawer_layout);
+		onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
 		onView(withText(R.string.title_settings)).perform(click());
 		onView(withText(R.string.header_backup_and_export_settings)).perform(click());
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index e2928529..bdea2115 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -45,7 +45,8 @@
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.model.TransactionType;
-import org.gnucash.android.ui.report.PieChartFragment;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.piechart.PieChartFragment;
 import org.gnucash.android.ui.report.ReportsActivity;
 import org.joda.time.LocalDateTime;
 import org.junit.After;
@@ -54,7 +55,6 @@
 import org.junit.runner.RunWith;
 
 import java.math.BigDecimal;
-import java.util.Currency;
 
 import static android.support.test.espresso.Espresso.onView;
 import static android.support.test.espresso.action.ViewActions.click;
@@ -180,7 +180,7 @@ public void testSelectingValue() throws Exception {
 
         onView(withId(R.id.pie_chart)).perform(clickXY(Position.BEGIN, Position.MIDDLE));
         float percent = (float) (TRANSACTION_AMOUNT / (TRANSACTION_AMOUNT + TRANSACTION2_AMOUNT) * 100);
-        String selectedText = String.format(PieChartFragment.SELECTED_VALUE_PATTERN, DINING_EXPENSE_ACCOUNT_NAME, TRANSACTION_AMOUNT, percent);
+        String selectedText = String.format(BaseReportFragment.SELECTED_VALUE_PATTERN, DINING_EXPENSE_ACCOUNT_NAME, TRANSACTION_AMOUNT, percent);
         onView(withId(R.id.selected_chart_slice)).check(matches(withText(selectedText)));
     }
 
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index 5ecc726f..bbef4e04 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -795,9 +795,11 @@ private Money computeBalance(String accountUID, long startTimestamp, long endTim
      * @param endTimestamp the end timestamp of the time range
      * @return Money balance of account list
      */
-    public Money getAccountsBalance(List<String> accountUIDList, long startTimestamp, long endTimestamp) {
+    public Money getAccountsBalance(@NonNull  List<String> accountUIDList, long startTimestamp, long endTimestamp) {
         String currencyCode = GnuCashApplication.getDefaultCurrencyCode();
         Money balance = Money.createZeroInstance(currencyCode);
+        if (accountUIDList.isEmpty())
+            return balance;
         boolean hasDebitNormalBalance = getAccountType(accountUIDList.get(0)).hasDebitNormalBalance();
 
         SplitsDbAdapter splitsDbAdapter = SplitsDbAdapter.getInstance();
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 5181e7cb..d1f16b61 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -158,8 +158,6 @@ protected void onDrawerMenuItemClicked(int itemId) {
                 break;
 
             case R.id.nav_item_reports: {
-                if (!(this instanceof AccountsActivity) || !(this instanceof ReportsActivity))
-                    this.finish();
                 Intent intent = new Intent(this, ReportsActivity.class);
                 intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
                 startActivity(intent);
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
new file mode 100644
index 00000000..ea909f83
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
@@ -0,0 +1,334 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.ui.report;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Color;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.annotation.ColorRes;
+import android.support.annotation.LayoutRes;
+import android.support.annotation.Nullable;
+import android.support.annotation.StringRes;
+import android.support.v4.app.Fragment;
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.github.mikephil.charting.data.Entry;
+import com.github.mikephil.charting.highlight.Highlight;
+import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
+
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.model.AccountType;
+import org.gnucash.android.ui.util.Refreshable;
+import org.joda.time.LocalDateTime;
+import org.joda.time.Months;
+import org.joda.time.Years;
+
+import java.util.Currency;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
+/**
+ * Base class for report fragments.
+ * <p>All report fragments should extend this class</p>
+ * @author Ngewi Fet <ngewif@gmail.com>
+ */
+public abstract class BaseReportFragment extends Fragment implements
+        OnChartValueSelectedListener, ReportOptionsListener, Refreshable {
+
+    /**
+     * Color for chart with no data
+     */
+    public static final int NO_DATA_COLOR = Color.LTGRAY;
+
+    protected static String TAG = "BaseReportFragment";
+
+    /**
+     * Reporting period start time
+     */
+    protected long mReportStartTime = -1;
+    /**
+     * Reporting period end time
+     */
+    protected long mReportEndTime = -1;
+
+    /**
+     * Account type for which to display reports
+     */
+    protected AccountType mAccountType;
+
+    /**
+     * Currency for which to display reports
+     */
+    protected Currency mCurrency;
+
+    /**
+     * Intervals in which to group reports
+     */
+    protected ReportsActivity.GroupInterval mGroupInterval = ReportsActivity.GroupInterval.MONTH;
+
+    /**
+     * Pattern to use to display selected chart values
+     */
+    public static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
+
+    @Nullable @Bind(R.id.selected_chart_slice) protected TextView mSelectedValueTextView;
+
+    /**
+     * Get the color which should use for decorating the app bar for this report
+     * @return Color resource
+     */
+    public @ColorRes int getTitleColor(){
+        return R.color.theme_primary;
+    }
+
+    /**
+     * Return the title of this report
+     * @return Title string identifier
+     */
+    public abstract @StringRes int getTitle();
+
+    /**
+     * Returns the layout resource to use for this report
+     * @return Layout resource identifier
+     */
+    public abstract @LayoutRes int getLayoutResource();
+
+    /**
+     * Returns what kind of report this is
+     * @return Type of report
+     */
+    public abstract ReportType getReportType();
+
+    /**
+     * Return {@code true} if this report fragment requires account type options.
+     * <p>Sub-classes should implement this method. The base implementation returns {@code true}</p>
+     * @return {@code true} if the fragment makes use of account type options, {@code false} otherwise
+     */
+    public boolean requiresAccountTypeOptions(){
+        return true;
+    }
+
+    /**
+     * Return {@code true} if this report fragment requires time range options.
+     * <p>Base implementation returns true</p>
+     * @return {@code true} if the report fragment requires time range options, {@code false} otherwise
+     */
+    public boolean requiresTimeRangeOptions(){
+        return true;
+    }
+
+    /**
+     * Generates the data for the report
+     * <p>This method should not call any methods which modify the UI as it will be run in a background thread
+     * <br>Put any code to update the UI in {@link #displayReport()}
+     * </p>
+     */
+    protected abstract void generateReport();
+
+    /**
+     * Update the view after the report chart has been generated <br/>
+     * Sub-classes should call to the base method
+     */
+    protected abstract void displayReport();
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        TAG = this.getClass().getSimpleName();
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View view = inflater.inflate(getLayoutResource(), container, false);
+        ButterKnife.bind(this, view);
+        return view;
+    }
+
+
+    @Override
+    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+
+        ActionBar actionBar = ((AppCompatActivity)getActivity()).getSupportActionBar();
+        assert actionBar != null;
+        actionBar.setTitle(getTitle());
+
+        setHasOptionsMenu(true);
+        mCurrency = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode());
+
+        ReportsActivity reportsActivity = (ReportsActivity) getActivity();
+        mReportStartTime = reportsActivity.getReportStartTime();
+        mReportEndTime = reportsActivity.getReportEndTime();
+        mAccountType = reportsActivity.getAccountType();
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        ((ReportsActivity)getActivity()).setAppBarColor(getTitleColor());
+        ((ReportsActivity) getActivity()).updateReportTypeSpinner(getReportType());
+        toggleBaseReportingOptions();
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (!(getActivity() instanceof ReportsActivity))
+            throw new RuntimeException("Report fragments can only be used with the ReportsActivity");
+    }
+
+    private void toggleBaseReportingOptions() {
+        final Activity activity = getActivity();
+        View timeRangeLayout = activity.findViewById(R.id.time_range_layout);
+        View dateRangeDivider = activity.findViewById(R.id.date_range_divider);
+        if (timeRangeLayout != null && dateRangeDivider != null) {
+            if (requiresTimeRangeOptions()) {
+                timeRangeLayout.setVisibility(View.VISIBLE);
+                dateRangeDivider.setVisibility(View.VISIBLE);
+            } else {
+                timeRangeLayout.setVisibility(View.GONE);
+                dateRangeDivider.setVisibility(View.GONE);
+            }
+        }
+
+        View accountTypeSpinner = activity.findViewById(R.id.report_account_type_spinner);
+        if (requiresAccountTypeOptions()) {
+            accountTypeSpinner.setVisibility(View.VISIBLE);
+        } else {
+            accountTypeSpinner.setVisibility(View.GONE);
+        }
+    }
+
+
+    /**
+     * Calculates difference between two date values accordingly to {@code mGroupInterval}
+     * @param start start date
+     * @param end end date
+     * @return difference between two dates or {@code -1}
+     */
+    protected int getDateDiff(LocalDateTime start, LocalDateTime end) {
+        switch (mGroupInterval) {
+            case QUARTER:
+                int y = Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
+                return (getQuarter(end) - getQuarter(start) + y * 4);
+            case MONTH:
+                return Months.monthsBetween(start.withDayOfMonth(1).withMillisOfDay(0), end.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
+            case YEAR:
+                return Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
+            default:
+                return -1;
+        }
+    }
+
+
+    /**
+     * Returns a quarter of the specified date
+     * @param date date
+     * @return a quarter
+     */
+    protected int getQuarter(LocalDateTime date) {
+        return ((date.getMonthOfYear() - 1) / 3 + 1);
+    }
+
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.chart_actions, menu);
+    }
+
+    @Override
+    public void refresh() {
+        new AsyncTask<Void, Void, Void>() {
+            ProgressBar progressBar = (ProgressBar) getActivity().findViewById(R.id.progress_indicator);
+            @Override
+            protected void onPreExecute() {
+                progressBar.setVisibility(View.VISIBLE);
+            }
+
+            @Override
+            protected Void doInBackground(Void... params) {
+                generateReport();
+                return null;
+            }
+
+            @Override
+            protected void onPostExecute(Void aVoid) {
+                displayReport();
+                progressBar.setVisibility(View.GONE);
+            }
+        }.execute();
+    }
+
+    /**
+     * Charts do not support account specific refreshes in general.
+     * So we provide a base implementation which just calls {@link #refresh()}
+     *
+     * @param uid GUID of relevant item to be refreshed
+     */
+    @Override
+    public void refresh(String uid) {
+        refresh();
+    }
+
+    @Override
+    public void onGroupingUpdated(ReportsActivity.GroupInterval groupInterval) {
+        if (mGroupInterval != groupInterval) {
+            mGroupInterval = groupInterval;
+            refresh();
+        }
+    }
+
+    @Override
+    public void onTimeRangeUpdated(long start, long end) {
+        if (mReportStartTime != start || mReportEndTime != end) {
+            mReportStartTime = start;
+            mReportEndTime = end;
+            refresh();
+        }
+    }
+
+    @Override
+    public void onAccountTypeUpdated(AccountType accountType) {
+        if (mAccountType != accountType) {
+            mAccountType = accountType;
+            refresh();
+        }
+    }
+
+    @Override
+    public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
+        //nothing to see here, move along
+    }
+
+    @Override
+    public void onNothingSelected() {
+        if (mSelectedValueTextView != null)
+            mSelectedValueTextView.setText("Select any part of the chart to view details");
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
index 5c523419..a64be8be 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
@@ -24,16 +24,14 @@
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.view.ViewCompat;
-import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.AppCompatButton;
-import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.View;
-import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.TextView;
 
 import com.github.mikephil.charting.charts.PieChart;
+import com.github.mikephil.charting.components.Legend;
 import com.github.mikephil.charting.components.Legend.LegendForm;
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.data.PieData;
@@ -45,6 +43,10 @@
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.ui.report.barchart.BarChartFragment;
+import org.gnucash.android.ui.report.linechart.LineChartFragment;
+import org.gnucash.android.ui.report.piechart.PieChartFragment;
+import org.gnucash.android.ui.report.sheet.BalanceSheetFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.joda.time.LocalDate;
 
@@ -55,7 +57,7 @@
 import java.util.Locale;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
+import butterknife.OnClick;
 
 import static com.github.mikephil.charting.components.Legend.LegendPosition;
 
@@ -63,7 +65,7 @@
  * Shows a summary of reports
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class ReportSummaryFragment extends Fragment {
+public class ReportSummaryFragment extends BaseReportFragment {
 
     public static final int LEGEND_TEXT_SIZE = 14;
 
@@ -78,6 +80,10 @@
     @Bind(R.id.net_worth) TextView mNetWorth;
 
     private AccountsDbAdapter mAccountsDbAdapter;
+    private Money mAssetsBalance;
+    private Money mLiabilitiesBalance;
+
+    private boolean mChartHasData = false;
 
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {
@@ -85,67 +91,46 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
     }
 
-    @Nullable
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_report_summary, container, false);
-        ButterKnife.bind(this, view);
-
-        mPieChartButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                loadFragment(new PieChartFragment());
-            }
-        });
-
-        mLineChartButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                loadFragment(new LineChartFragment());
-            }
-        });
-
-        mBarChartButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                loadFragment(new BarChartFragment());
-            }
-        });
+    public int getLayoutResource() {
+        return R.layout.fragment_report_summary;
+    }
 
-        mBalanceSheetButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                loadFragment(new BalanceSheetFragment());
-            }
-        });
+    @Override
+    public int getTitle() {
+        return R.string.title_reports;
+    }
 
-        return view;
+    @Override
+    public ReportType getReportType() {
+        return ReportType.NONE;
     }
 
     @Override
-    public void onResume() {
-        super.onResume();
-        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_reports);
-        ((ReportsActivity)getActivity()).setAppBarColor(R.color.theme_primary);
+    public boolean requiresAccountTypeOptions() {
+        return false;
+    }
 
-        getActivity().findViewById(R.id.time_range_layout).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.date_range_divider).setVisibility(View.GONE);
+    @Override
+    public boolean requiresTimeRangeOptions() {
+        return false;
     }
 
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        setHasOptionsMenu(true);
+        setHasOptionsMenu(false);
 
         mChart.setCenterTextSize(PieChartFragment.CENTER_TEXT_SIZE);
         mChart.setDescription("");
         mChart.setDrawSliceText(false);
-        mChart.getLegend().setEnabled(true);
-        mChart.getLegend().setWordWrapEnabled(true);
-        mChart.getLegend().setForm(LegendForm.CIRCLE);
-        mChart.getLegend().setPosition(LegendPosition.RIGHT_OF_CHART_CENTER);
-        mChart.getLegend().setTextSize(LEGEND_TEXT_SIZE);
+        Legend legend = mChart.getLegend();
+        legend.setEnabled(true);
+        legend.setWordWrapEnabled(true);
+        legend.setForm(LegendForm.CIRCLE);
+        legend.setPosition(LegendPosition.RIGHT_OF_CHART_CENTER);
+        legend.setTextSize(LEGEND_TEXT_SIZE);
 
         ColorStateList csl = new ColorStateList(new int[][]{new int[0]}, new int[]{getResources().getColor(R.color.account_green)});
         setButtonTint(mPieChartButton, csl);
@@ -156,28 +141,41 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         csl = new ColorStateList(new int[][]{new int[0]}, new int[]{getResources().getColor(R.color.account_purple)});
         setButtonTint(mBalanceSheetButton, csl);
 
+        refresh();
+    }
+
+    @Override
+    public void onPrepareOptionsMenu(Menu menu) {
+        menu.findItem(R.id.menu_group_reports_by).setVisible(false);
+    }
+
+    @Override
+    protected void generateReport() {
+        PieData pieData = PieChartFragment.groupSmallerSlices(getData(), getActivity());
+        if (pieData != null && pieData.getYValCount() != 0) {
+            mChart.setData(pieData);
+            float sum = mChart.getData().getYValueSum();
+            String total = getResources().getString(R.string.label_chart_total);
+            String currencySymbol = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode()).getSymbol(Locale.getDefault());
+            mChart.setCenterText(String.format(PieChartFragment.TOTAL_VALUE_LABEL_PATTERN, total, sum, currencySymbol));
+            mChartHasData = true;
+        } else {
+            mChart.setData(getEmptyData());
+            mChart.setCenterText(getResources().getString(R.string.label_chart_no_data));
+            mChart.getLegend().setEnabled(false);
+            mChartHasData = false;
+        }
 
         List<AccountType> accountTypes = new ArrayList<>();
         accountTypes.add(AccountType.ASSET);
         accountTypes.add(AccountType.CASH);
         accountTypes.add(AccountType.BANK);
-        Money assetsBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
+        mAssetsBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
 
         accountTypes.clear();
         accountTypes.add(AccountType.LIABILITY);
         accountTypes.add(AccountType.CREDIT);
-        Money liabilitiesBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
-
-        TransactionsActivity.displayBalance(mTotalAssets, assetsBalance);
-        TransactionsActivity.displayBalance(mTotalLiabilities, liabilitiesBalance);
-        TransactionsActivity.displayBalance(mNetWorth, assetsBalance.subtract(liabilitiesBalance));
-
-        displayChart();
-    }
-
-    @Override
-    public void onPrepareOptionsMenu(Menu menu) {
-        menu.findItem(R.id.menu_group_reports_by).setVisible(false);
+        mLiabilitiesBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
     }
 
     /**
@@ -212,30 +210,20 @@ private PieData getData() {
         return new PieData(labels, dataSet);
     }
 
-    /**
-     * Manages all actions about displaying the pie chart
-     */
-    private void displayChart() {
-        mChart.highlightValues(null);
-        mChart.clear();
-
-        PieData pieData = PieChartFragment.groupSmallerSlices(getData(), getActivity());
-        if (pieData != null && pieData.getYValCount() != 0) {
-            mChart.setData(pieData);
-            float sum = mChart.getData().getYValueSum();
-            String total = getResources().getString(R.string.label_chart_total);
-            String currencySymbol = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode()).getSymbol(Locale.getDefault());
-            mChart.setCenterText(String.format(PieChartFragment.TOTAL_VALUE_LABEL_PATTERN, total, sum, currencySymbol));
+    @Override
+    protected void displayReport() {
+        if (mChartHasData){
             mChart.animateXY(1800, 1800);
             mChart.setTouchEnabled(true);
         } else {
-            mChart.setData(getEmptyData());
-            mChart.setCenterText(getResources().getString(R.string.label_chart_no_data));
-            mChart.getLegend().setEnabled(false);
             mChart.setTouchEnabled(false);
         }
-
+        mChart.highlightValues(null);
         mChart.invalidate();
+
+        TransactionsActivity.displayBalance(mTotalAssets, mAssetsBalance);
+        TransactionsActivity.displayBalance(mTotalLiabilities, mLiabilitiesBalance);
+        TransactionsActivity.displayBalance(mNetWorth, mAssetsBalance.subtract(mLiabilitiesBalance));
     }
 
     /**
@@ -250,6 +238,28 @@ private PieData getEmptyData() {
         return new PieData(Collections.singletonList(""), dataSet);
     }
 
+    @OnClick({R.id.btn_bar_chart, R.id.btn_pie_chart, R.id.btn_line_chart, R.id.btn_balance_sheet})
+    public void onClickChartTypeButton(View view){
+        BaseReportFragment fragment;
+        switch (view.getId()){
+            case R.id.btn_pie_chart:
+                fragment = new PieChartFragment();
+                break;
+            case R.id.btn_bar_chart:
+                fragment = new BarChartFragment();
+                break;
+            case R.id.btn_line_chart:
+                fragment = new LineChartFragment();
+                break;
+            case R.id.btn_balance_sheet:
+                fragment = new BalanceSheetFragment();
+                break;
+            default:
+                fragment = this;
+                break;
+        }
+        loadFragment(fragment);
+    }
 
     public void setButtonTint(Button button, ColorStateList tint) {
         if (Build.VERSION.SDK_INT == Build.VERSION_CODES.LOLLIPOP && button instanceof AppCompatButton) {
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportType.java b/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
new file mode 100644
index 00000000..77266acb
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
@@ -0,0 +1,78 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.report;
+
+import android.content.Context;
+
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.ui.report.barchart.BarChartFragment;
+import org.gnucash.android.ui.report.barchart.CashFlowFragment;
+import org.gnucash.android.ui.report.linechart.LineChartFragment;
+import org.gnucash.android.ui.report.piechart.PieChartFragment;
+import org.gnucash.android.ui.report.sheet.BalanceSheetFragment;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Different types of reports
+ */
+public enum ReportType {
+    PIE_CHART(0), BAR_CHART(1), LINE_CHART(2), TEXT(3), NONE(4);
+
+    Map<String, Class> mReportTypeMap = new HashMap<>();
+
+    ReportType(int index){
+        Context context = GnuCashApplication.getAppContext();
+        switch (index){
+            case 0:
+                mReportTypeMap.put("Pie Chart", PieChartFragment.class);
+                break;
+            case 1:
+                mReportTypeMap.put(context.getString(R.string.title_cash_flow_report), CashFlowFragment.class);
+                mReportTypeMap.put("Bar Chart", BarChartFragment.class);
+                break;
+            case 2:
+                mReportTypeMap.put("Income/Expense Statement", LineChartFragment.class);
+                break;
+            case 3:
+                mReportTypeMap.put("Balance Sheet", BalanceSheetFragment.class);
+                break;
+            case 4:
+                break;
+        }
+    }
+
+    public List<String> getReportNames(){
+        return new ArrayList<>(mReportTypeMap.keySet());
+    }
+
+    public BaseReportFragment getFragment(String name){
+        BaseReportFragment fragment = null;
+        try {
+            fragment = (BaseReportFragment) mReportTypeMap.get(name).newInstance();
+        } catch (InstantiationException e) {
+            e.printStackTrace();
+        } catch (IllegalAccessException e) {
+            e.printStackTrace();
+        }
+        return fragment;
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index 5e7fbeef..e51f858d 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -61,7 +61,7 @@
 public class ReportsActivity extends BaseDrawerActivity implements AdapterView.OnItemSelectedListener,
         DatePickerDialog.OnDateSetListener, DateRangePickerDialogFragment.OnDateRangeSetListener{
 
-    static final int[] COLORS = {
+    public static final int[] COLORS = {
             Color.parseColor("#17ee4e"), Color.parseColor("#cc1f09"), Color.parseColor("#3940f7"),
             Color.parseColor("#f9cd04"), Color.parseColor("#5f33a8"), Color.parseColor("#e005b6"),
             Color.parseColor("#17d6ed"), Color.parseColor("#e4a9a2"), Color.parseColor("#8fe6cd"),
@@ -73,9 +73,11 @@
 
     @Bind(R.id.time_range_spinner) Spinner mTimeRangeSpinner;
     @Bind(R.id.report_account_type_spinner) Spinner mAccountTypeSpinner;
+    @Bind(R.id.report_type_spinner) Spinner mReportTypeSpinner;
 
     private TransactionsDbAdapter mTransactionsDbAdapter;
     private AccountType mAccountType = AccountType.EXPENSE;
+    private ReportType mReportType = ReportType.NONE;
 
     public enum GroupInterval {WEEK, MONTH, QUARTER, YEAR, ALL}
 
@@ -84,6 +86,25 @@
     private long mReportEndTime = new LocalDate().plusDays(1).toDate().getTime();
 
     private GroupInterval mReportGroupInterval = GroupInterval.MONTH;
+    private boolean mSkipNextReportTypeSelectedRun = false;
+
+    AdapterView.OnItemSelectedListener mReportTypeSelectedListener = new AdapterView.OnItemSelectedListener() {
+
+        @Override
+        public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
+            if (mSkipNextReportTypeSelectedRun){
+                mSkipNextReportTypeSelectedRun = false;
+            } else {
+                String reportName = parent.getItemAtPosition(position).toString();
+                loadFragment(mReportType.getFragment(reportName));
+            }
+        }
+
+        @Override
+        public void onNothingSelected(AdapterView<?> parent) {
+            //nothing to see here, move along
+        }
+    };
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -128,38 +149,43 @@ public void onNothingSelected(AdapterView<?> adapterView) {
             }
         });
 
-        if (savedInstanceState == null) {
-            FragmentManager fragmentManager = getSupportFragmentManager();
-            FragmentTransaction fragmentTransaction = fragmentManager
-                    .beginTransaction();
+        mReportTypeSpinner.setOnItemSelectedListener(mReportTypeSelectedListener);
 
-            fragmentTransaction.replace(R.id.fragment_container, new ReportSummaryFragment());
-            fragmentTransaction.commit();
+        if (savedInstanceState == null) {
+            loadFragment(new ReportSummaryFragment());
         }
     }
 
-    @Override
-    public void onAttachFragment(Fragment fragment) {
-        super.onAttachFragment(fragment);
-        View timeRangeLayout = findViewById(R.id.time_range_layout);
-        View dateRangeDivider = findViewById(R.id.date_range_divider);
-        if (timeRangeLayout != null && dateRangeDivider != null) {
-            if (fragment instanceof ReportSummaryFragment || fragment instanceof BalanceSheetFragment) {
-                timeRangeLayout.setVisibility(View.GONE);
-                dateRangeDivider.setVisibility(View.GONE);
-            } else {
-                timeRangeLayout.setVisibility(View.VISIBLE);
-                dateRangeDivider.setVisibility(View.VISIBLE);
-            }
-        }
-        View accountTypeSpinner = findViewById(R.id.report_account_type_spinner);
-        if (accountTypeSpinner != null) {
-            if (fragment instanceof LineChartFragment) {
-                accountTypeSpinner.setVisibility(View.GONE);
-            } else {
-                accountTypeSpinner.setVisibility(View.VISIBLE);
-            }
+    private void loadFragment(BaseReportFragment fragment) {
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction = fragmentManager
+                .beginTransaction();
+
+        fragmentTransaction.replace(R.id.fragment_container, fragment);
+        fragmentTransaction.commit();
+    }
+
+    /**
+     * Update the report type spinner
+     */
+    public void updateReportTypeSpinner(ReportType reportType) {
+        mReportType = reportType;
+        ActionBar actionBar = getSupportActionBar();
+        assert actionBar != null;
+        ArrayAdapter<String> arrayAdapter = new ArrayAdapter<>(actionBar.getThemedContext(),
+                android.R.layout.simple_list_item_1,
+                mReportType.getReportNames());
+        mSkipNextReportTypeSelectedRun = true;
+        mReportTypeSpinner.setOnItemSelectedListener(mReportTypeSelectedListener);
+        mReportTypeSpinner.setAdapter(arrayAdapter);
+
+
+        if (arrayAdapter.isEmpty() || mReportType == ReportType.NONE){
+            mReportTypeSpinner.setVisibility(View.GONE);
+        } else {
+            mReportTypeSpinner.setVisibility(View.VISIBLE);
         }
+        actionBar.setDisplayShowTitleEnabled(mReportType == ReportType.NONE);
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment.java
similarity index 76%
rename from app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment.java
index 8cee3a92..25d974ed 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment.java
@@ -15,22 +15,15 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.report;
+package org.gnucash.android.ui.report.barchart;
 
 import android.graphics.Color;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
-import android.view.LayoutInflater;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
 import android.widget.Toast;
 
 import com.github.mikephil.charting.charts.BarChart;
@@ -40,24 +33,21 @@
 import com.github.mikephil.charting.data.BarEntry;
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.highlight.Highlight;
-import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
 import com.github.mikephil.charting.utils.LargeValueFormatter;
 
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.ReportType;
 import org.joda.time.LocalDate;
 import org.joda.time.LocalDateTime;
-import org.joda.time.Months;
-import org.joda.time.Years;
 
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
-import java.util.Currency;
 import java.util.LinkedHashMap;
 import java.util.LinkedHashSet;
 import java.util.List;
@@ -65,10 +55,8 @@
 import java.util.Map;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
 
 import static org.gnucash.android.ui.report.ReportsActivity.COLORS;
-import static org.gnucash.android.ui.report.ReportsActivity.GroupInterval;
 
 /**
  * Activity used for drawing a bar chart
@@ -76,73 +64,50 @@
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class BarChartFragment extends Fragment implements OnChartValueSelectedListener,
-    ReportOptionsListener {
+public class BarChartFragment extends BaseReportFragment {
 
-    private static final String TAG = "BarChartFragment";
     private static final String X_AXIS_MONTH_PATTERN = "MMM YY";
     private static final String X_AXIS_QUARTER_PATTERN = "Q%d %s";
     private static final String X_AXIS_YEAR_PATTERN = "YYYY";
-    private static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
+
     private static final int ANIMATION_DURATION = 2000;
-    private static final int NO_DATA_COLOR = Color.LTGRAY;
     private static final int NO_DATA_BAR_COUNTS = 3;
 
     private AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
-    @Bind(R.id.selected_chart_slice) TextView selectedValueTextView;
     @Bind(R.id.bar_chart) BarChart mChart;
 
-    private Currency mCurrency;
-
-    private AccountType mAccountType;
-
     private boolean mUseAccountColor = true;
     private boolean mTotalPercentageMode = true;
     private boolean mChartDataPresent = true;
 
-    /**
-     * Reporting period start time
-     */
-    private long mReportStartTime = -1;
-    /**
-     * Reporting period end time
-     */
-    private long mReportEndTime = -1;
+    @Override
+    public int getTitleColor() {
+        return R.color.account_red;
+    }
 
-    private GroupInterval mGroupInterval = GroupInterval.MONTH;
+    @Override
+    public int getTitle() {
+        return R.string.title_bar_chart;
+    }
 
-    @Nullable
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_bar_chart, container, false);
-        ButterKnife.bind(this, view);
-        return view;
+    public int getLayoutResource() {
+        return R.layout.fragment_bar_chart;
     }
 
     @Override
-    public void onResume() {
-        super.onResume();
-        ((ReportsActivity)getActivity()).setAppBarColor(R.color.account_red);
+    public ReportType getReportType() {
+        return ReportType.BAR_CHART;
     }
 
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_bar_chart);
-        setHasOptionsMenu(true);
-
         mUseAccountColor = PreferenceManager.getDefaultSharedPreferences(getActivity())
                 .getBoolean(getString(R.string.key_use_account_color), false);
 
-        mCurrency = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode());
-
-        ReportsActivity reportsActivity = (ReportsActivity) getActivity();
-        mReportStartTime = reportsActivity.getReportStartTime();
-        mReportEndTime = reportsActivity.getReportEndTime();
-        mAccountType = reportsActivity.getAccountType();
-
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
 //        mChart.setDrawValuesForWholeStack(false);
@@ -156,8 +121,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         chartLegend.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER);
         chartLegend.setWordWrapEnabled(true);
 
-        mChart.setData(getData());
-        displayChart();
+        refresh();
     }
 
 
@@ -165,7 +129,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
      * Returns a data object that represents a user data of the specified account types
      * @return a {@code BarData} instance that represents a user data
      */
-    private BarData getData() {
+    protected BarData getData() {
         List<BarEntry> values = new ArrayList<>();
         List<String> labels = new ArrayList<>();
         List<Integer> colors = new ArrayList<>();
@@ -318,35 +282,6 @@ private LocalDate getEndDate(AccountType accountType) {
     }
 
     /**
-     * Calculates difference between two date values accordingly to {@code mGroupInterval}
-     * @param start start date
-     * @param end end date
-     * @return difference between two dates or {@code -1}
-     */
-    private int getDateDiff(LocalDateTime start, LocalDateTime end) {
-        switch (mGroupInterval) {
-            case QUARTER:
-                int y = Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
-                return (getQuarter(end) - getQuarter(start) + y * 4);
-            case MONTH:
-                return Months.monthsBetween(start.withDayOfMonth(1).withMillisOfDay(0), end.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
-            case YEAR:
-                return Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
-            default:
-                return -1;
-        }
-    }
-
-    /**
-     * Returns a quarter of the specified date
-     * @param date date
-     * @return a quarter
-     */
-    private int getQuarter(LocalDateTime date) {
-        return ((date.getMonthOfYear() - 1) / 3 + 1);
-    }
-
-    /**
      * Converts the specified list of floats to an array
      * @param list a list of floats
      * @return a float array
@@ -359,25 +294,26 @@ private int getQuarter(LocalDateTime date) {
         return array;
     }
 
-    /**
-     * Displays the stacked bar chart
-     */
-    private void displayChart() {
-        mChart.highlightValues(null);
+
+    @Override
+    public void generateReport() {
+        mChart.setData(getData());
         setCustomLegend();
-        mChart.notifyDataSetChanged();
 
         mChart.getAxisLeft().setDrawLabels(mChartDataPresent);
         mChart.getXAxis().setDrawLabels(mChartDataPresent);
         mChart.setTouchEnabled(mChartDataPresent);
+    }
 
-        selectedValueTextView.setText("");
-
+    @Override
+    protected void displayReport() {
+        mChart.notifyDataSetChanged();
+        mChart.highlightValues(null);
         if (mChartDataPresent) {
             mChart.animateY(ANIMATION_DURATION);
         } else {
             mChart.clearAnimation();
-            selectedValueTextView.setText(getResources().getString(R.string.label_chart_no_data));
+            mSelectedValueTextView.setText(R.string.label_chart_no_data);
         }
 
         mChart.invalidate();
@@ -401,40 +337,6 @@ private void setCustomLegend() {
     }
 
     @Override
-    public void onTimeRangeUpdated(long start, long end) {
-        if (mReportStartTime != start || mReportEndTime != end) {
-            mReportStartTime = start;
-            mReportEndTime = end;
-
-            mChart.setData(getData());
-            displayChart();
-        }
-    }
-
-    @Override
-    public void onGroupingUpdated(GroupInterval groupInterval) {
-        if (mGroupInterval != groupInterval) {
-            mGroupInterval = groupInterval;
-            mChart.setData(getData());
-            displayChart();
-        }
-    }
-
-    @Override
-    public void onAccountTypeUpdated(AccountType accountType) {
-        if (mAccountType != accountType) {
-            mAccountType = accountType;
-            mChart.setData(getData());
-            displayChart();
-        }
-    }
-
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.chart_actions, menu);
-    }
-
-    @Override
     public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_percentage_mode).setVisible(mChartDataPresent);
         // hide pie/line chart specific menu items
@@ -490,11 +392,7 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         } else {
             sum = entry.getNegativeSum() + entry.getPositiveSum();
         }
-        selectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label.trim(), value, value / sum * 100));
+        mSelectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label.trim(), value, value / sum * 100));
     }
 
-    @Override
-    public void onNothingSelected() {
-        selectedValueTextView.setText(R.string.label_select_bar_to_view_details);
-    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment.java b/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment.java
new file mode 100644
index 00000000..0cbc3529
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment.java
@@ -0,0 +1,56 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.ui.report.barchart;
+
+import org.gnucash.android.R;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.ReportType;
+
+/**
+ * Cash flow report fragment
+ */
+public class CashFlowFragment extends BaseReportFragment {
+
+    @Override
+    public int getTitle() {
+        return R.string.title_cash_flow_report;
+    }
+
+    @Override
+    public int getLayoutResource() {
+        return R.layout.fragment_bar_chart;
+    }
+
+    @Override
+    public ReportType getReportType() {
+        return ReportType.BAR_CHART;
+    }
+
+    @Override
+    public boolean requiresAccountTypeOptions() {
+        return false;
+    }
+
+    @Override
+    protected void generateReport() {
+        //// TODO: 29.11.2015 Generate cash flow report
+    }
+
+    @Override
+    protected void displayReport() {
+        // TODO: 29.11.2015 Display cash flow report
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/linechart/LineChartFragment.java
similarity index 79%
rename from app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/linechart/LineChartFragment.java
index 0da60867..321f290d 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/linechart/LineChartFragment.java
@@ -15,21 +15,13 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.report;
+package org.gnucash.android.ui.report.linechart;
 
 import android.graphics.Color;
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
-import android.view.LayoutInflater;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
 
 import com.github.mikephil.charting.charts.LineChart;
 import com.github.mikephil.charting.components.Legend;
@@ -38,25 +30,22 @@
 import com.github.mikephil.charting.data.LineData;
 import com.github.mikephil.charting.data.LineDataSet;
 import com.github.mikephil.charting.highlight.Highlight;
-import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
 import com.github.mikephil.charting.utils.LargeValueFormatter;
 
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.ReportType;
 import org.gnucash.android.ui.report.ReportsActivity.GroupInterval;
 import org.joda.time.LocalDate;
 import org.joda.time.LocalDateTime;
-import org.joda.time.Months;
-import org.joda.time.Years;
 
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
-import java.util.Currency;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
@@ -64,7 +53,6 @@
 import java.util.Map;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
 
 /**
  * Fragment for line chart reports
@@ -72,14 +60,10 @@
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class LineChartFragment extends Fragment implements OnChartValueSelectedListener,
-    ReportOptionsListener{
+public class LineChartFragment extends BaseReportFragment {
 
-    private static final String TAG = "LineChartFragment";
     private static final String X_AXIS_PATTERN = "MMM YY";
-    private static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
     private static final int ANIMATION_DURATION = 3000;
-    private static final int NO_DATA_COLOR = Color.GRAY;
     private static final int NO_DATA_BAR_COUNTS = 5;
     private static final int[] COLORS = {
             Color.parseColor("#68F1AF"), Color.parseColor("#cc1f09"), Color.parseColor("#EE8600"),
@@ -96,44 +80,23 @@
     private long mEarliestTransactionTimestamp;
     private long mLatestTransactionTimestamp;
     private boolean mChartDataPresent = true;
-    private Currency mCurrency;
-
-    private GroupInterval mGroupInterval = GroupInterval.MONTH;
-
-    /**
-     * Reporting period start time
-     */
-    private long mReportStartTime = -1;
-
-    /**
-     * Reporting period end time
-     */
-    private long mReportEndTime = -1;
 
     @Bind(R.id.line_chart) LineChart mChart;
-    @Bind(R.id.selected_chart_slice) TextView mChartSliceInfo;
 
-    @Nullable
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_line_chart, container, false);
-        ButterKnife.bind(this, view);
-        return view;
+    public int getLayoutResource() {
+        return R.layout.fragment_line_chart;
+    }
+
+    @Override
+    public int getTitle() {
+        return R.string.title_line_chart;
     }
 
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_line_chart);
-        setHasOptionsMenu(true);
-
-        mCurrency = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode());
-
-        ReportsActivity reportsActivity = (ReportsActivity) getActivity();
-        mReportStartTime = reportsActivity.getReportStartTime();
-        mReportEndTime = reportsActivity.getReportEndTime();
-
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
         mChart.getXAxis().setDrawGridLines(false);
@@ -141,30 +104,22 @@ public void onActivityCreated(Bundle savedInstanceState) {
         mChart.getAxisLeft().enableGridDashedLine(4.0f, 4.0f, 0);
         mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter(mCurrency.getSymbol(Locale.getDefault())));
 
-        // below we can add/remove displayed account's types
-        mChart.setData(getData(new ArrayList<>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
-
         Legend legend = mChart.getLegend();
         legend.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER);
         legend.setTextSize(16);
         legend.setForm(Legend.LegendForm.CIRCLE);
 
-        if (!mChartDataPresent) {
-            mChart.getAxisLeft().setAxisMaxValue(10);
-            mChart.getAxisLeft().setDrawLabels(false);
-            mChart.getXAxis().setDrawLabels(false);
-            mChart.setTouchEnabled(false);
-            mChartSliceInfo.setText(getResources().getString(R.string.label_chart_no_data));
-        } else {
-            mChart.animateX(ANIMATION_DURATION);
-        }
-        mChart.invalidate();
+        refresh();
+    }
+
+    @Override
+    public int getTitleColor() {
+        return R.color.account_blue;
     }
 
     @Override
-    public void onResume() {
-        super.onResume();
-        ((ReportsActivity)getActivity()).setAppBarColor(R.color.account_blue);
+    public ReportType getReportType() {
+        return ReportType.LINE_CHART;
     }
 
     /**
@@ -231,35 +186,6 @@ private LineData getData(List<AccountType> accountTypeList) {
     }
 
     /**
-     * Calculates difference between two date values accordingly to {@code mGroupInterval}
-     * @param start start date
-     * @param end end date
-     * @return difference between two dates or {@code -1}
-     */
-    private int getDateDiff(LocalDateTime start, LocalDateTime end) {
-        switch (mGroupInterval) {
-            case QUARTER:
-                int y = Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
-                return (getQuarter(end) - getQuarter(start) + y * 4);
-            case MONTH:
-                return Months.monthsBetween(start.withDayOfMonth(1).withMillisOfDay(0), end.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
-            case YEAR:
-                return Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
-            default:
-                return -1;
-        }
-    }
-
-    /**
-     * Returns a quarter of the specified date
-     * @param date date
-     * @return a quarter
-     */
-    private int getQuarter(LocalDateTime date) {
-        return ((date.getMonthOfYear() - 1) / 3 + 1);
-    }
-
-    /**
      * Returns a data object that represents situation when no user data available
      * @return a {@code LineData} instance for situation when no user data available
      */
@@ -289,7 +215,7 @@ private LineData getEmptyData() {
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
             if (account.getAccountType() == accountType
                     && !account.isPlaceholderAccount()
-                    && account.getCurrency() == mCurrency) {
+                    && account.getCurrency().equals(mCurrency)) {
                 accountUIDList.add(account.getUID());
             }
         }
@@ -378,6 +304,36 @@ private void calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeL
     }
 
     @Override
+    public boolean requiresAccountTypeOptions() {
+        return false;
+    }
+
+    @Override
+    protected void generateReport() {
+        LineData lineData = getData(new ArrayList<>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE)));
+        if (lineData != null) {
+            mChart.setData(lineData);
+            mChartDataPresent = true;
+        } else {
+            mChartDataPresent = false;
+        }
+    }
+
+    @Override
+    protected void displayReport() {
+        if (!mChartDataPresent) {
+            mChart.getAxisLeft().setAxisMaxValue(10);
+            mChart.getAxisLeft().setDrawLabels(false);
+            mChart.getXAxis().setDrawLabels(false);
+            mChart.setTouchEnabled(false);
+            mSelectedValueTextView.setText(getResources().getString(R.string.label_chart_no_data));
+        } else {
+            mChart.animateX(ANIMATION_DURATION);
+        }
+        mChart.invalidate();
+    }
+
+    @Override
     public void onTimeRangeUpdated(long start, long end) {
         if (mReportStartTime != start || mReportEndTime != end) {
             mReportStartTime = start;
@@ -397,16 +353,6 @@ public void onGroupingUpdated(GroupInterval groupInterval) {
     }
 
     @Override
-    public void onAccountTypeUpdated(AccountType accountType) {
-        //nothing to see here, line chart shows both income and expense
-    }
-
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.chart_actions, menu);
-    }
-
-    @Override
     public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_toggle_average_lines).setVisible(mChartDataPresent);
         // hide pie/bar chart specific menu items
@@ -451,11 +397,7 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         String label = mChart.getData().getXVals().get(e.getXIndex());
         double value = e.getVal();
         double sum = mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum();
-        mChartSliceInfo.setText(String.format(SELECTED_VALUE_PATTERN, label, value, value / sum * 100));
+        mSelectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label, value, value / sum * 100));
     }
 
-    @Override
-    public void onNothingSelected() {
-        mChartSliceInfo.setText("");
-    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
similarity index 76%
rename from app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
index 7453262b..3c0d86bd 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/PieChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
@@ -15,45 +15,35 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.report;
+package org.gnucash.android.ui.report.piechart;
 
 import android.content.Context;
 import android.graphics.Color;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
-import android.view.LayoutInflater;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
 
 import com.github.mikephil.charting.charts.PieChart;
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.data.PieData;
 import com.github.mikephil.charting.data.PieDataSet;
 import com.github.mikephil.charting.highlight.Highlight;
-import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
 
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
-import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
-import org.gnucash.android.model.AccountType;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.ReportType;
+import org.gnucash.android.ui.report.ReportsActivity;
 
 import java.util.ArrayList;
 import java.util.Collections;
-import java.util.Currency;
 import java.util.List;
 import java.util.Locale;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
 
 import static com.github.mikephil.charting.components.Legend.LegendForm;
 import static com.github.mikephil.charting.components.Legend.LegendPosition;
@@ -64,13 +54,10 @@
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class PieChartFragment extends Fragment implements OnChartValueSelectedListener,
-        ReportOptionsListener {
+public class PieChartFragment extends BaseReportFragment {
 
-    public static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
     public static final String TOTAL_VALUE_LABEL_PATTERN = "%s\n%.2f %s";
     private static final int ANIMATION_DURATION = 1800;
-    public static final int NO_DATA_COLOR = Color.LTGRAY;
     public static final int CENTER_TEXT_SIZE = 18;
     /**
      * The space in degrees between the chart slices
@@ -82,12 +69,8 @@
     private static final double GROUPING_SMALLER_SLICES_THRESHOLD = 5;
 
     @Bind(R.id.pie_chart) PieChart mChart;
-    @Bind(R.id.selected_chart_slice) TextView mSelectedValueTextView;
 
     private AccountsDbAdapter mAccountsDbAdapter;
-    private TransactionsDbAdapter mTransactionsDbAdapter;
-
-    private AccountType mAccountType;
 
     private boolean mChartDataPresent = true;
 
@@ -95,41 +78,15 @@
 
     private boolean mGroupSmallerSlices = true;
 
-    private String mCurrencyCode;
-
-    /**
-     * Start time for reporting period in millis
-     */
-    private long mReportStartTime = -1;
-
-    /**
-     * End time for reporting period in millis
-     */
-    private long mReportEndTime = -1;
-
-
-    @Nullable
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_pie_chart, container, false);
-        ButterKnife.bind(this, view);
-        return view;
-    }
-
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_pie_chart);
-        setHasOptionsMenu(true);
-
         mUseAccountColor = PreferenceManager.getDefaultSharedPreferences(getActivity())
                 .getBoolean(getString(R.string.key_use_account_color), false);
 
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
-        mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 
-        mCurrencyCode = GnuCashApplication.getDefaultCurrencyCode();
 
         mChart.setCenterTextSize(CENTER_TEXT_SIZE);
         mChart.setDescription("");
@@ -138,47 +95,55 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         mChart.getLegend().setWordWrapEnabled(true);
         mChart.getLegend().setPosition(LegendPosition.BELOW_CHART_CENTER);
 
-        ReportsActivity reportsActivity = (ReportsActivity) getActivity();
-        mReportStartTime = reportsActivity.getReportStartTime();
-        mReportEndTime = reportsActivity.getReportEndTime();
-        mAccountType = reportsActivity.getAccountType();
+        refresh();
+    }
 
-        displayChart();
+    @Override
+    public int getTitleColor() {
+        return R.color.account_green;
     }
 
-    /**
-     * Sets the app bar color
-     */
     @Override
-    public void onResume() {
-        super.onResume();
-        ((ReportsActivity)getActivity()).setAppBarColor(R.color.account_green);
+    public int getTitle() {
+        return R.string.title_pie_chart;
     }
 
-    /**
-     * Manages all actions about displaying the pie chart
-     */
-    private void displayChart() {
-        mSelectedValueTextView.setText(R.string.label_select_pie_slice_to_see_details);
-        mChart.highlightValues(null);
-        mChart.clear();
+    @Override
+    public ReportType getReportType() {
+        return ReportType.PIE_CHART;
+    }
+
+    @Override
+    public int getLayoutResource() {
+        return R.layout.fragment_pie_chart;
+    }
 
+    @Override
+    protected void generateReport() {
         PieData pieData = getData();
         if (pieData != null && pieData.getYValCount() != 0) {
             mChartDataPresent = true;
             mChart.setData(mGroupSmallerSlices ? groupSmallerSlices(pieData, getActivity()) : pieData);
             float sum = mChart.getData().getYValueSum();
             String total = getResources().getString(R.string.label_chart_total);
-            String currencySymbol = Currency.getInstance(mCurrencyCode).getSymbol(Locale.getDefault());
+            String currencySymbol = mCurrency.getSymbol(Locale.getDefault());
             mChart.setCenterText(String.format(TOTAL_VALUE_LABEL_PATTERN, total, sum, currencySymbol));
-            mChart.animateXY(ANIMATION_DURATION, ANIMATION_DURATION);
         } else {
             mChartDataPresent = false;
             mChart.setCenterText(getResources().getString(R.string.label_chart_no_data));
             mChart.setData(getEmptyData());
         }
+    }
+
+    @Override
+    protected void displayReport() {
+        if (mChartDataPresent){
+            mChart.animateXY(ANIMATION_DURATION, ANIMATION_DURATION);
+        }
 
+        mSelectedValueTextView.setText(R.string.label_select_pie_slice_to_see_details);
         mChart.setTouchEnabled(mChartDataPresent);
+        mChart.highlightValues(null);
         mChart.invalidate();
     }
 
@@ -193,7 +158,7 @@ private PieData getData() {
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
             if (account.getAccountType() == mAccountType
                     && !account.isPlaceholderAccount()
-                    && account.getCurrency() == Currency.getInstance(mCurrencyCode)) {
+                    && account.getCurrency() == mCurrency) {
 
                 double balance = mAccountsDbAdapter.getAccountsBalance(Collections.singletonList(account.getUID()),
                         mReportStartTime, mReportEndTime).asDouble();
@@ -211,27 +176,6 @@ private PieData getData() {
         return new PieData(labels, dataSet);
     }
 
-    @Override
-    public void onTimeRangeUpdated(long start, long end) {
-        if (mReportStartTime != start || mReportEndTime != end) {
-            mReportStartTime = start;
-            mReportEndTime = end;
-            displayChart();
-        }
-    }
-
-    @Override
-    public void onGroupingUpdated(ReportsActivity.GroupInterval groupInterval) {
-        //nothing to see here, this doesn't make sense for a pie chart
-    }
-
-    @Override
-    public void onAccountTypeUpdated(AccountType accountType) {
-        if (mAccountType != accountType) {
-            mAccountType = accountType;
-            displayChart();
-        }
-    }
 
     /**
      * Returns a data object that represents situation when no user data available
@@ -279,11 +223,6 @@ private void bubbleSort() {
     }
 
     @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.chart_actions, menu);
-    }
-
-    @Override
     public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.menu_order_by_size).setVisible(mChartDataPresent);
         menu.findItem(R.id.menu_toggle_labels).setVisible(mChartDataPresent);
@@ -317,7 +256,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             }
             case R.id.menu_group_other_slice: {
                 mGroupSmallerSlices = !mGroupSmallerSlices;
-                displayChart();
+                refresh();
                 return true;
             }
 
@@ -369,9 +308,4 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         float percent = value / mChart.getData().getYValueSum() * 100;
         mSelectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label, value, percent));
     }
-
-    @Override
-    public void onNothingSelected() {
-        mSelectedValueTextView.setText("");
-    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BalanceSheetFragment.java b/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
similarity index 68%
rename from app/src/main/java/org/gnucash/android/ui/report/BalanceSheetFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
index fed3004d..33cb5037 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BalanceSheetFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.gnucash.android.ui.report;
+package org.gnucash.android.ui.report.sheet;
 
 import android.database.Cursor;
 import android.graphics.Typeface;
@@ -34,6 +34,8 @@
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.ui.report.BaseReportFragment;
+import org.gnucash.android.ui.report.ReportType;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 
 import java.util.ArrayList;
@@ -46,7 +48,7 @@
  * Fragment report as text
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class BalanceSheetFragment extends Fragment {
+public class BalanceSheetFragment extends BaseReportFragment {
 
     @Bind(R.id.table_assets) TableLayout mAssetsTableLayout;
     @Bind(R.id.table_liabilities) TableLayout mLiabilitiesTableLayout;
@@ -54,47 +56,74 @@
 
     @Bind(R.id.total_liability_and_equity) TextView mNetWorth;
 
-
     AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
-    @Nullable
+    private Money mAssetsBalance;
+    private Money mLiabilitiesBalance;
+    private List<AccountType> mAssetAccountTypes;
+    private List<AccountType> mLiabilityAccountTypes;
+    private List<AccountType> mEquityAccountTypes;
+
+    @Override
+    public int getLayoutResource() {
+        return R.layout.fragment_text_report;
+    }
+
+    @Override
+    public int getTitleColor() {
+        return R.color.account_purple;
+    }
+
+    @Override
+    public int getTitle() {
+        return R.string.title_balance_sheet_report;
+    }
+
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_text_report, container, false);
-        ButterKnife.bind(this, view);
-        return view;
+    public ReportType getReportType() {
+        return ReportType.TEXT;
     }
 
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
-        ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_balance_sheet_report);
-        setHasOptionsMenu(true);
-
-        List<AccountType> accountTypes = new ArrayList<>();
-        accountTypes.add(AccountType.ASSET);
-        accountTypes.add(AccountType.CASH);
-        accountTypes.add(AccountType.BANK);
-        loadAccountViews(accountTypes, mAssetsTableLayout);
-        Money assetsBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
-
-        accountTypes.clear();
-        accountTypes.add(AccountType.LIABILITY);
-        accountTypes.add(AccountType.CREDIT);
-        loadAccountViews(accountTypes, mLiabilitiesTableLayout);
-        Money liabilitiesBalance = mAccountsDbAdapter.getAccountBalance(accountTypes, -1, System.currentTimeMillis());
-
-        accountTypes.clear();
-        accountTypes.add(AccountType.EQUITY);
-        loadAccountViews(accountTypes, mEquityTableLayout);
-
-        TransactionsActivity.displayBalance(mNetWorth, assetsBalance.subtract(liabilitiesBalance));
+        mAssetAccountTypes = new ArrayList<>();
+        mAssetAccountTypes.add(AccountType.ASSET);
+        mAssetAccountTypes.add(AccountType.CASH);
+        mAssetAccountTypes.add(AccountType.BANK);
+
+        mLiabilityAccountTypes = new ArrayList<>();
+        mLiabilityAccountTypes.add(AccountType.LIABILITY);
+        mLiabilityAccountTypes.add(AccountType.CREDIT);
+
+        mEquityAccountTypes = new ArrayList<>();
+        mEquityAccountTypes.add(AccountType.EQUITY);
+        refresh();
     }
 
     @Override
-    public void onResume() {
-        super.onResume();
-        ((ReportsActivity)getActivity()).setAppBarColor(R.color.account_purple);
+    public boolean requiresAccountTypeOptions() {
+        return false;
+    }
+
+    @Override
+    public boolean requiresTimeRangeOptions() {
+        return false;
+    }
+
+    @Override
+    protected void generateReport() {
+        mAssetsBalance = mAccountsDbAdapter.getAccountBalance(mAssetAccountTypes, -1, System.currentTimeMillis());
+        mLiabilitiesBalance = mAccountsDbAdapter.getAccountBalance(mLiabilityAccountTypes, -1, System.currentTimeMillis());
+    }
+
+    @Override
+    protected void displayReport() {
+        loadAccountViews(mAssetAccountTypes, mAssetsTableLayout);
+        loadAccountViews(mLiabilityAccountTypes, mLiabilitiesTableLayout);
+        loadAccountViews(mEquityAccountTypes, mEquityTableLayout);
+
+        TransactionsActivity.displayBalance(mNetWorth, mAssetsBalance.subtract(mLiabilitiesBalance));
     }
 
     @Override
diff --git a/app/src/main/res/layout/activity_reports.xml b/app/src/main/res/layout/activity_reports.xml
index 602d4d15..32cb53d5 100644
--- a/app/src/main/res/layout/activity_reports.xml
+++ b/app/src/main/res/layout/activity_reports.xml
@@ -24,65 +24,69 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <ScrollView
+    <RelativeLayout
         android:layout_width="match_parent"
         android:layout_height="match_parent">
-        <LinearLayout
-            android:orientation="vertical"
+        <ScrollView android:id="@+id/fragment_view"
             android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:gravity="center_vertical">
-
-            <android.support.v7.widget.Toolbar
-                android:id="@+id/toolbar"
-                android:background="?attr/colorPrimary"
+            android:layout_height="wrap_content">
+            <RelativeLayout
+                android:orientation="vertical"
                 android:layout_width="match_parent"
-                android:layout_height="?attr/actionBarSize"
-                app:layout_scrollFlags="enterAlways"
-                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-                app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
+                android:layout_height="wrap_content"
+                android:gravity="center_vertical">
 
-            <LinearLayout android:id="@+id/time_range_layout"
-                android:padding="@dimen/dialog_padding"
-                android:weightSum="4"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content">
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="0.8"
-                    android:gravity="center_vertical"
-                    android:textSize="14sp"
-                    android:layout_height="wrap_content"
-                    android:text="@string/label_report_period"/>
+                <include android:id="@+id/toolbar_layout"
+                    layout="@layout/reports_toolbar" />
 
-                <org.gnucash.android.ui.util.widget.ReselectSpinner
-                    android:id="@+id/time_range_spinner"
-                    android:layout_weight="1.8"
-                    android:layout_width="0dp"
+                <FrameLayout android:id="@+id/fragment_container"
+                    android:orientation="vertical"
+                    android:layout_width="match_parent"
+                    android:layout_below="@id/toolbar_layout"
                     android:layout_height="wrap_content" />
 
-                <Spinner
-                    android:id="@+id/report_account_type_spinner"
-                    android:layout_gravity="right"
-                    android:layout_width="0dp"
-                    android:layout_weight="1.4"
-                    android:layout_marginLeft="5dp"
-                    android:layout_height="wrap_content" />
-            </LinearLayout>
-            <View android:id="@+id/date_range_divider"
-                android:layout_width="match_parent"
-                android:layout_height="1dp"
-                android:layout_marginTop="5dp"
-                android:background="@android:color/darker_gray" />
+            </RelativeLayout>
+        </ScrollView>
 
+        <View android:id="@+id/date_range_divider"
+            android:layout_width="match_parent"
+            android:layout_height="1dp"
+            android:layout_marginTop="5dp"
+            android:layout_below="@id/fragment_view"
+            android:background="@android:color/darker_gray" />
 
-            <FrameLayout android:id="@+id/fragment_container"
-                android:orientation="vertical"
-                android:layout_weight="3"
-                android:layout_width="match_parent"
-                android:layout_height="0dp" />
+        <LinearLayout android:id="@+id/time_range_layout"
+            android:padding="@dimen/dialog_padding"
+            android:weightSum="4"
+            android:layout_below="@id/date_range_divider"
+            android:layout_alignParentBottom="true"
+            android:layout_width="match_parent"
+            android:layout_height="120dp">
+            <TextView
+                android:layout_width="0dp"
+                android:layout_weight="0.8"
+                android:gravity="center_vertical"
+                android:layout_gravity="center_vertical"
+                android:textSize="14sp"
+                android:layout_height="match_parent"
+                android:text="@string/label_report_period"/>
+
+            <org.gnucash.android.ui.util.widget.ReselectSpinner
+                android:id="@+id/time_range_spinner"
+                android:layout_weight="1.8"
+                android:layout_width="0dp"
+                android:layout_height="match_parent" />
+
+            <Spinner
+                android:id="@+id/report_account_type_spinner"
+                android:layout_gravity="right"
+                android:layout_width="0dp"
+                android:layout_weight="1.4"
+                android:layout_marginLeft="5dp"
+                android:layout_marginStart="5dp"
+                android:layout_height="match_parent" />
         </LinearLayout>
-    </ScrollView>
+    </RelativeLayout>
     <android.support.design.widget.NavigationView
         android:id="@+id/nav_view"
         android:layout_width="wrap_content"
diff --git a/app/src/main/res/layout/reports_toolbar.xml b/app/src/main/res/layout/reports_toolbar.xml
new file mode 100644
index 00000000..14feb0bc
--- /dev/null
+++ b/app/src/main/res/layout/reports_toolbar.xml
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<FrameLayout xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <ProgressBar android:id="@+id/progress_indicator"
+        android:layout_width="match_parent"
+        android:layout_height="5dp"
+        style="?android:attr/progressBarStyleHorizontal"
+        android:indeterminate="true"
+        android:visibility="visible"/>
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:background="?attr/colorPrimary"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        app:elevation="10dp"
+        app:layout_scrollFlags="enterAlways"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+        tools:showIn="@layout/activity_form">
+        <Spinner android:id="@+id/report_type_spinner"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            app:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>
+    </android.support.v7.widget.Toolbar>
+</FrameLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/toolbar.xml b/app/src/main/res/layout/toolbar.xml
index 6d66a5d1..e755d5cc 100644
--- a/app/src/main/res/layout/toolbar.xml
+++ b/app/src/main/res/layout/toolbar.xml
@@ -1,12 +1,41 @@
 <?xml version="1.0" encoding="utf-8"?>
-<android.support.v7.widget.Toolbar xmlns:app="http://schemas.android.com/apk/res-auto"
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<FrameLayout xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/toolbar"
-    android:background="?attr/colorPrimary"
     android:layout_width="match_parent"
-    android:layout_height="?attr/actionBarSize"
-    app:elevation="10dp"
-    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-    app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
-    tools:showIn="@layout/activity_form" />
\ No newline at end of file
+    android:layout_height="wrap_content">
+
+    <ProgressBar android:id="@+id/progress_indicator"
+        android:layout_width="match_parent"
+        android:layout_height="5dp"
+        style="?android:attr/progressBarStyleHorizontal"
+        android:indeterminate="true"
+        android:visibility="visible"/>
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:background="?attr/colorPrimary"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        app:elevation="10dp"
+        app:layout_scrollFlags="enterAlways"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+        tools:showIn="@layout/activity_form" />
+</FrameLayout>
\ No newline at end of file
diff --git a/app/src/main/res/values-af-rZA/strings.xml b/app/src/main/res/values-af-rZA/strings.xml
index 1f422350..35d5d72b 100644
--- a/app/src/main/res/values-af-rZA/strings.xml
+++ b/app/src/main/res/values-af-rZA/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ar-rSA/strings.xml b/app/src/main/res/values-ar-rSA/strings.xml
index fd7573d1..81d94b6a 100644
--- a/app/src/main/res/values-ar-rSA/strings.xml
+++ b/app/src/main/res/values-ar-rSA/strings.xml
@@ -406,6 +406,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ca-rES/strings.xml b/app/src/main/res/values-ca-rES/strings.xml
index 76ad35a8..26a22e59 100644
--- a/app/src/main/res/values-ca-rES/strings.xml
+++ b/app/src/main/res/values-ca-rES/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltims 3 mesos</item>
diff --git a/app/src/main/res/values-cs-rCZ/strings.xml b/app/src/main/res/values-cs-rCZ/strings.xml
index 2522cfa4..985141f1 100644
--- a/app/src/main/res/values-cs-rCZ/strings.xml
+++ b/app/src/main/res/values-cs-rCZ/strings.xml
@@ -391,6 +391,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 803247a1..a0d3c9d3 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -383,6 +383,7 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-el-rGR/strings.xml b/app/src/main/res/values-el-rGR/strings.xml
index 8d50732d..24f6f44d 100644
--- a/app/src/main/res/values-el-rGR/strings.xml
+++ b/app/src/main/res/values-el-rGR/strings.xml
@@ -397,6 +397,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-en-rGB/strings.xml b/app/src/main/res/values-en-rGB/strings.xml
index 1f422350..35d5d72b 100644
--- a/app/src/main/res/values-en-rGB/strings.xml
+++ b/app/src/main/res/values-en-rGB/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index c261ae5a..7435b820 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -383,6 +383,7 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 1fa57f89..a7ec8b1d 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -383,6 +383,7 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-fi-rFI/strings.xml b/app/src/main/res/values-fi-rFI/strings.xml
index 1f422350..35d5d72b 100644
--- a/app/src/main/res/values-fi-rFI/strings.xml
+++ b/app/src/main/res/values-fi-rFI/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 0d941565..841d5063 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -383,6 +383,7 @@ Aucune information permettant d\'identifier l\'utilisateur ne sera recueillis da
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Mois actuel</item>
     <item>3 derniers mois</item>
diff --git a/app/src/main/res/values-hu-rHU/strings.xml b/app/src/main/res/values-hu-rHU/strings.xml
index 7fbd2da0..dceba854 100644
--- a/app/src/main/res/values-hu-rHU/strings.xml
+++ b/app/src/main/res/values-hu-rHU/strings.xml
@@ -388,6 +388,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index 8b22157d..a83a2548 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -387,6 +387,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Mese corrente</item>
     <item>Ultimi 3 mesi</item>
diff --git a/app/src/main/res/values-iw-rIL/strings.xml b/app/src/main/res/values-iw-rIL/strings.xml
index 1f422350..35d5d72b 100644
--- a/app/src/main/res/values-iw-rIL/strings.xml
+++ b/app/src/main/res/values-iw-rIL/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index 3e24c66b..11e568f1 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -381,6 +381,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index 23768708..98933699 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -381,6 +381,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 05ee7407..d4dee755 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -376,6 +376,7 @@
   <string name="toast_no_compatible_apps_to_receive_export">Ingen kompatible apper til  motta de eksporterte transaksjonene!</string>
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
diff --git a/app/src/main/res/values-nl-rNL/strings.xml b/app/src/main/res/values-nl-rNL/strings.xml
index 0adb2052..2e0656f6 100644
--- a/app/src/main/res/values-nl-rNL/strings.xml
+++ b/app/src/main/res/values-nl-rNL/strings.xml
@@ -387,6 +387,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Huidige maand</item>
     <item>Afgelopen 3 maanden</item>
diff --git a/app/src/main/res/values-no-rNO/strings.xml b/app/src/main/res/values-no-rNO/strings.xml
index cab3c1fd..25e52af1 100644
--- a/app/src/main/res/values-no-rNO/strings.xml
+++ b/app/src/main/res/values-no-rNO/strings.xml
@@ -377,6 +377,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
diff --git a/app/src/main/res/values-pl-rPL/strings.xml b/app/src/main/res/values-pl-rPL/strings.xml
index a1bddedc..abd710d7 100644
--- a/app/src/main/res/values-pl-rPL/strings.xml
+++ b/app/src/main/res/values-pl-rPL/strings.xml
@@ -384,6 +384,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Biecy miesic</item>
     <item>Ostatnie 3 miesice</item>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 69045948..eb7a3533 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -381,6 +381,7 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="menu_move_transaction">Mover...</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Ms atual</item>
     <item>Last 3 meses</item>
diff --git a/app/src/main/res/values-pt-rPT/strings.xml b/app/src/main/res/values-pt-rPT/strings.xml
index af4dd033..2c944881 100644
--- a/app/src/main/res/values-pt-rPT/strings.xml
+++ b/app/src/main/res/values-pt-rPT/strings.xml
@@ -381,6 +381,7 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="menu_move_transaction">Mover...</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Ms actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-pt/strings.xml b/app/src/main/res/values-pt/strings.xml
index abbcfa58..c2d382bf 100644
--- a/app/src/main/res/values-pt/strings.xml
+++ b/app/src/main/res/values-pt/strings.xml
@@ -502,4 +502,5 @@ Neste processo n&#227;o ser&#227;o recolhidas informa&#231;&#245;es do utilizado
     <string name="label_no_scheduled_exports_to_display">N&#227;o existem exporta&#231;&#245;es agendadas para mostrar</string>
     <string name="title_create_export_schedule">Criar uma exporta&#231;&#227;o agendada</string>
     <string name="toast_exported_to">Exportado para : %1$s</string>
+    <string name="title_cash_flow_report">Cash Flow</string>
 </resources>
diff --git a/app/src/main/res/values-ro-rRO/strings.xml b/app/src/main/res/values-ro-rRO/strings.xml
index 2522cfa4..985141f1 100644
--- a/app/src/main/res/values-ro-rRO/strings.xml
+++ b/app/src/main/res/values-ro-rRO/strings.xml
@@ -391,6 +391,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 429503f5..b8c02f75 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -389,6 +389,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
diff --git a/app/src/main/res/values-sr-rSP/strings.xml b/app/src/main/res/values-sr-rSP/strings.xml
index 413e6b9c..78ac44d7 100644
--- a/app/src/main/res/values-sr-rSP/strings.xml
+++ b/app/src/main/res/values-sr-rSP/strings.xml
@@ -391,6 +391,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-sv-rSE/strings.xml b/app/src/main/res/values-sv-rSE/strings.xml
index 1f422350..35d5d72b 100644
--- a/app/src/main/res/values-sv-rSE/strings.xml
+++ b/app/src/main/res/values-sv-rSE/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-tr-rTR/strings.xml b/app/src/main/res/values-tr-rTR/strings.xml
index 6e8132c5..8a9913f8 100644
--- a/app/src/main/res/values-tr-rTR/strings.xml
+++ b/app/src/main/res/values-tr-rTR/strings.xml
@@ -386,6 +386,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-uk-rUA/strings.xml b/app/src/main/res/values-uk-rUA/strings.xml
index 0015fd16..6624da21 100644
--- a/app/src/main/res/values-uk-rUA/strings.xml
+++ b/app/src/main/res/values-uk-rUA/strings.xml
@@ -387,6 +387,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
diff --git a/app/src/main/res/values-vi-rVN/strings.xml b/app/src/main/res/values-vi-rVN/strings.xml
index 23768708..98933699 100644
--- a/app/src/main/res/values-vi-rVN/strings.xml
+++ b/app/src/main/res/values-vi-rVN/strings.xml
@@ -381,6 +381,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index 019b9a6d..7fc5c789 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -378,6 +378,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml
index 0a3e4c1c..44e14016 100644
--- a/app/src/main/res/values-zh-rTW/strings.xml
+++ b/app/src/main/res/values-zh-rTW/strings.xml
@@ -378,6 +378,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 2323d8ba..c4e84e74 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -406,6 +406,7 @@
     <string name="menu_move_transaction">Move...</string>
     <string name="menu_duplicate_transaction">Duplicate</string>
     <string name="nav_menu_budgets">Budgets</string>
+    <string name="title_cash_flow_report">Cash Flow</string>
     <string-array name="report_time_range">
         <item>Current month</item>
         <item>Last 3 months</item>

From 9dcdbf8ae8f57657ec25e9eefb4e0c79ed79af47 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 30 Nov 2015 18:59:30 +0100
Subject: [PATCH 008/121] Code refactoring

Move interfaces into the most relevant packages
Rename existing report classes
---
 .../java/org/gnucash/android/ui/account/AccountsActivity.java    | 6 +-----
 .../org/gnucash/android/ui/account/AccountsListFragment.java     | 3 +--
 .../gnucash/android/ui/account/DeleteAccountDialogFragment.java  | 3 +--
 .../android/ui/{util => account}/OnAccountClickedListener.java   | 2 +-
 .../java/org/gnucash/android/ui/budget/BudgetDetailFragment.java | 2 +-
 .../java/org/gnucash/android/ui/budget/BudgetListFragment.java   | 2 +-
 .../org/gnucash/android/ui/{util => common}/Refreshable.java     | 2 +-
 .../java/org/gnucash/android/ui/report/BaseReportFragment.java   | 2 +-
 .../org/gnucash/android/ui/report/ReportSummaryFragment.java     | 4 ++--
 app/src/main/java/org/gnucash/android/ui/report/ReportType.java  | 8 ++++----
 .../main/java/org/gnucash/android/ui/report/ReportsActivity.java | 9 ++++++++-
 .../{CashFlowFragment.java => CashFlowBarChartFragment.java}     | 2 +-
 .../{LineChartFragment.java => CashFlowLineChartFragment.java}   | 2 +-
 .../ui/{util => transaction}/OnTransactionClickedListener.java   | 2 +-
 .../org/gnucash/android/ui/transaction/TransactionsActivity.java | 5 ++---
 .../gnucash/android/ui/transaction/TransactionsListFragment.java | 3 +--
 .../android/ui/transaction/dialog/BulkMoveDialogFragment.java    | 2 +-
 .../dialog/TransactionsDeleteConfirmationDialogFragment.java     | 2 +-
 .../{transaction => util}/dialog/DatePickerDialogFragment.java   | 2 +-
 .../{report => util}/dialog/DateRangePickerDialogFragment.java   | 2 +-
 .../{transaction => util}/dialog/TimePickerDialogFragment.java   | 2 +-
 21 files changed, 33 insertions(+), 34 deletions(-)
 rename app/src/main/java/org/gnucash/android/ui/{util => account}/OnAccountClickedListener.java (96%)
 rename app/src/main/java/org/gnucash/android/ui/{util => common}/Refreshable.java (96%)
 rename app/src/main/java/org/gnucash/android/ui/report/barchart/{CashFlowFragment.java => CashFlowBarChartFragment.java} (95%)
 rename app/src/main/java/org/gnucash/android/ui/report/linechart/{LineChartFragment.java => CashFlowLineChartFragment.java} (99%)
 rename app/src/main/java/org/gnucash/android/ui/{util => transaction}/OnTransactionClickedListener.java (96%)
 rename app/src/main/java/org/gnucash/android/ui/{transaction => util}/dialog/DatePickerDialogFragment.java (98%)
 rename app/src/main/java/org/gnucash/android/ui/{report => util}/dialog/DateRangePickerDialogFragment.java (98%)
 rename app/src/main/java/org/gnucash/android/ui/{transaction => util}/dialog/TimePickerDialogFragment.java (98%)

diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 493ca6e2..54fbd042 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -69,14 +69,10 @@
 import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
-import org.gnucash.android.ui.util.OnAccountClickedListener;
-import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.TaskDelegate;
 import org.gnucash.android.ui.wizard.FirstRunWizardActivity;
 
-import java.io.FileNotFoundException;
-import java.io.InputStream;
-
 import butterknife.Bind;
 import butterknife.ButterKnife;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 4c6128bc..5023e914 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -63,8 +63,7 @@
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.util.AccountBalanceTask;
 import org.gnucash.android.ui.util.CursorRecyclerAdapter;
-import org.gnucash.android.ui.util.OnAccountClickedListener;
-import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
 
 import java.util.List;
diff --git a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
index 97e11f3f..42df0e7d 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
@@ -37,11 +37,10 @@
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.AccountType;
-import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
-import java.util.Currency;
 import java.util.List;
 
 /**
diff --git a/app/src/main/java/org/gnucash/android/ui/util/OnAccountClickedListener.java b/app/src/main/java/org/gnucash/android/ui/account/OnAccountClickedListener.java
similarity index 96%
rename from app/src/main/java/org/gnucash/android/ui/util/OnAccountClickedListener.java
rename to app/src/main/java/org/gnucash/android/ui/account/OnAccountClickedListener.java
index fb75cba2..3deae2d8 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/OnAccountClickedListener.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/OnAccountClickedListener.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.util;
+package org.gnucash.android.ui.account;
 
 /**
  * Interface for implemented by activities which wish to be notified when
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
index 40d9eac8..1b783bbf 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
@@ -53,7 +53,7 @@
 import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
-import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
 
 import java.math.BigDecimal;
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
index ab90c9d4..2eacfd79 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
@@ -55,7 +55,7 @@
 import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.util.CursorRecyclerAdapter;
-import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
 
 import java.math.BigDecimal;
diff --git a/app/src/main/java/org/gnucash/android/ui/util/Refreshable.java b/app/src/main/java/org/gnucash/android/ui/common/Refreshable.java
similarity index 96%
rename from app/src/main/java/org/gnucash/android/ui/util/Refreshable.java
rename to app/src/main/java/org/gnucash/android/ui/common/Refreshable.java
index eb1c78c0..3c09041b 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/Refreshable.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/Refreshable.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.gnucash.android.ui.util;
+package org.gnucash.android.ui.common;
 
 /**
  * Interface for fragments which are refreshable
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
index ea909f83..5e42e6d4 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
@@ -42,7 +42,7 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.model.AccountType;
-import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.common.Refreshable;
 import org.joda.time.LocalDateTime;
 import org.joda.time.Months;
 import org.joda.time.Years;
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
index a64be8be..18a2b582 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
@@ -44,7 +44,7 @@
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.report.barchart.BarChartFragment;
-import org.gnucash.android.ui.report.linechart.LineChartFragment;
+import org.gnucash.android.ui.report.linechart.CashFlowLineChartFragment;
 import org.gnucash.android.ui.report.piechart.PieChartFragment;
 import org.gnucash.android.ui.report.sheet.BalanceSheetFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
@@ -249,7 +249,7 @@ public void onClickChartTypeButton(View view){
                 fragment = new BarChartFragment();
                 break;
             case R.id.btn_line_chart:
-                fragment = new LineChartFragment();
+                fragment = new CashFlowLineChartFragment();
                 break;
             case R.id.btn_balance_sheet:
                 fragment = new BalanceSheetFragment();
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportType.java b/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
index 77266acb..99294809 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
@@ -21,8 +21,8 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.ui.report.barchart.BarChartFragment;
-import org.gnucash.android.ui.report.barchart.CashFlowFragment;
-import org.gnucash.android.ui.report.linechart.LineChartFragment;
+import org.gnucash.android.ui.report.barchart.CashFlowBarChartFragment;
+import org.gnucash.android.ui.report.linechart.CashFlowLineChartFragment;
 import org.gnucash.android.ui.report.piechart.PieChartFragment;
 import org.gnucash.android.ui.report.sheet.BalanceSheetFragment;
 
@@ -46,11 +46,11 @@
                 mReportTypeMap.put("Pie Chart", PieChartFragment.class);
                 break;
             case 1:
-                mReportTypeMap.put(context.getString(R.string.title_cash_flow_report), CashFlowFragment.class);
+                mReportTypeMap.put(context.getString(R.string.title_cash_flow_report), CashFlowBarChartFragment.class);
                 mReportTypeMap.put("Bar Chart", BarChartFragment.class);
                 break;
             case 2:
-                mReportTypeMap.put("Income/Expense Statement", LineChartFragment.class);
+                mReportTypeMap.put("Income/Expense Statement", CashFlowLineChartFragment.class);
                 break;
             case 3:
                 mReportTypeMap.put("Balance Sheet", BalanceSheetFragment.class);
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index e51f858d..81486f0b 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -41,7 +41,7 @@
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.ui.common.BaseDrawerActivity;
-import org.gnucash.android.ui.report.dialog.DateRangePickerDialogFragment;
+import org.gnucash.android.ui.util.dialog.DateRangePickerDialogFragment;
 import org.joda.time.LocalDate;
 
 import java.util.Arrays;
@@ -156,10 +156,17 @@ public void onNothingSelected(AdapterView<?> adapterView) {
         }
     }
 
+    /**
+     * Load the provided fragment into the view replacing the previous one
+     * @param fragment BaseReportFragment instance
+     */
     private void loadFragment(BaseReportFragment fragment) {
         FragmentManager fragmentManager = getSupportFragmentManager();
         FragmentTransaction fragmentTransaction = fragmentManager
                 .beginTransaction();
+        
+        if (fragment.getReportType() != ReportType.NONE)
+            fragmentTransaction.addToBackStack(null);
 
         fragmentTransaction.replace(R.id.fragment_container, fragment);
         fragmentTransaction.commit();
diff --git a/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment.java b/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment.java
similarity index 95%
rename from app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment.java
index 0cbc3529..c37d99e9 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment.java
@@ -22,7 +22,7 @@
 /**
  * Cash flow report fragment
  */
-public class CashFlowFragment extends BaseReportFragment {
+public class CashFlowBarChartFragment extends BaseReportFragment {
 
     @Override
     public int getTitle() {
diff --git a/app/src/main/java/org/gnucash/android/ui/report/linechart/LineChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
similarity index 99%
rename from app/src/main/java/org/gnucash/android/ui/report/linechart/LineChartFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
index 321f290d..ceef1cc7 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/linechart/LineChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
@@ -60,7 +60,7 @@
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class LineChartFragment extends BaseReportFragment {
+public class CashFlowLineChartFragment extends BaseReportFragment {
 
     private static final String X_AXIS_PATTERN = "MMM YY";
     private static final int ANIMATION_DURATION = 3000;
diff --git a/app/src/main/java/org/gnucash/android/ui/util/OnTransactionClickedListener.java b/app/src/main/java/org/gnucash/android/ui/transaction/OnTransactionClickedListener.java
similarity index 96%
rename from app/src/main/java/org/gnucash/android/ui/util/OnTransactionClickedListener.java
rename to app/src/main/java/org/gnucash/android/ui/transaction/OnTransactionClickedListener.java
index 9be53905..ba1c02f2 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/OnTransactionClickedListener.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/OnTransactionClickedListener.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.util;
+package org.gnucash.android.ui.transaction;
 
 /**
  * Interface for implemented by activities which wish to be notified when
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
index 0ea57b93..8a4bc2c4 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -56,9 +56,8 @@
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.account.AccountsListFragment;
 import org.gnucash.android.ui.util.AccountBalanceTask;
-import org.gnucash.android.ui.util.OnAccountClickedListener;
-import org.gnucash.android.ui.util.OnTransactionClickedListener;
-import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.account.OnAccountClickedListener;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
 import java.math.BigDecimal;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index 70ce38aa..f6940d77 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -55,11 +55,10 @@
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
 import org.gnucash.android.ui.transaction.dialog.BulkMoveDialogFragment;
 import org.gnucash.android.ui.util.CursorRecyclerAdapter;
-import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
 
 import java.text.DateFormat;
-import java.util.Date;
 import java.util.List;
 
 import butterknife.Bind;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
index c74be57c..ca85b50e 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
@@ -35,7 +35,7 @@
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
-import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
 /**
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
index 06998d7d..5638b37b 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
@@ -29,7 +29,7 @@
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.common.UxArgument;
-import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
 
 import java.util.ArrayList;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/DatePickerDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/util/dialog/DatePickerDialogFragment.java
similarity index 98%
rename from app/src/main/java/org/gnucash/android/ui/transaction/dialog/DatePickerDialogFragment.java
rename to app/src/main/java/org/gnucash/android/ui/util/dialog/DatePickerDialogFragment.java
index f2a70e9d..b7ef99e0 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/DatePickerDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/dialog/DatePickerDialogFragment.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.transaction.dialog;
+package org.gnucash.android.ui.util.dialog;
 
 import android.app.DatePickerDialog;
 import android.app.DatePickerDialog.OnDateSetListener;
diff --git a/app/src/main/java/org/gnucash/android/ui/report/dialog/DateRangePickerDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/util/dialog/DateRangePickerDialogFragment.java
similarity index 98%
rename from app/src/main/java/org/gnucash/android/ui/report/dialog/DateRangePickerDialogFragment.java
rename to app/src/main/java/org/gnucash/android/ui/util/dialog/DateRangePickerDialogFragment.java
index 7681e7a0..921a91d4 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/dialog/DateRangePickerDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/dialog/DateRangePickerDialogFragment.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.report.dialog;
+package org.gnucash.android.ui.util.dialog;
 
 import android.app.Dialog;
 import android.os.Bundle;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TimePickerDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/util/dialog/TimePickerDialogFragment.java
similarity index 98%
rename from app/src/main/java/org/gnucash/android/ui/transaction/dialog/TimePickerDialogFragment.java
rename to app/src/main/java/org/gnucash/android/ui/util/dialog/TimePickerDialogFragment.java
index 700f3865..06dbc250 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TimePickerDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/dialog/TimePickerDialogFragment.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.gnucash.android.ui.transaction.dialog;
+package org.gnucash.android.ui.util.dialog;
 
 import android.app.Dialog;
 import android.app.TimePickerDialog;

From 2ad18961d1e255cbc613f7e4147270d536b82e43 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 1 Dec 2015 10:32:00 +0100
Subject: [PATCH 009/121] Finish refactoring reports

Fix crash when switching report fragments
Fix double report fragments loaded into view

Temporarily disable test coverage (jacoco)

TODO: Fix toolbar progressbar visibility
---
 app/build.gradle                                   |   2 +-
 .../gnucash/android/app/GnuCashApplication.java    |   4 +-
 .../android/ui/report/BaseReportFragment.java      |  96 ++---
 .../org/gnucash/android/ui/report/ReportType.java  |  33 +-
 .../gnucash/android/ui/report/ReportsActivity.java |  93 +++--
 ...yFragment.java => ReportsOverviewFragment.java} |  23 +-
 .../ui/report/barchart/BarChartFragment.java       | 398 ---------------------
 .../report/barchart/CashFlowBarChartFragment.java  | 348 +++++++++++++++++-
 .../linechart/CashFlowLineChartFragment.java       |  32 +-
 .../ui/report/piechart/PieChartFragment.java       |   8 +-
 .../ui/report/sheet/BalanceSheetFragment.java      |   8 +-
 .../OnTransferFundsListener.java                   |   2 +-
 .../ui/transaction/SplitEditorFragment.java        |   3 -
 .../ui/transaction/TransactionFormFragment.java    |   2 -
 .../dialog/TransferFundsDialogFragment.java        |   2 +-
 app/src/main/res/layout/reports_toolbar.xml        |   1 +
 16 files changed, 519 insertions(+), 536 deletions(-)
 rename app/src/main/java/org/gnucash/android/ui/report/{ReportSummaryFragment.java => ReportsOverviewFragment.java} (94%)
 delete mode 100644 app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment.java
 rename app/src/main/java/org/gnucash/android/ui/{util => transaction}/OnTransferFundsListener.java (95%)

diff --git a/app/build.gradle b/app/build.gradle
index ccbe04b4..ddb9e6e5 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -90,7 +90,7 @@ android {
         }
         debug {
             debuggable true
-            testCoverageEnabled true
+//            testCoverageEnabled true
             signingConfig signingConfigs.debug
         }
     }
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 9495842c..de297b71 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -112,8 +112,8 @@ public void onCreate(){
         super.onCreate();
         GnuCashApplication.context = getApplicationContext();
 
-        Fabric.with(this, new Crashlytics.Builder().core(
-                new CrashlyticsCore.Builder().disabled(!isCrashlyticsEnabled()).build()).build());
+        if (isCrashlyticsEnabled())
+            Fabric.with(this, new Crashlytics());
 
         // Set this up once when your application launches
         Config config = new Config("gnucash.uservoice.com");
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
index 5e42e6d4..9399e325 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
@@ -15,12 +15,10 @@
  */
 package org.gnucash.android.ui.report;
 
-import android.app.Activity;
 import android.content.Context;
 import android.graphics.Color;
 import android.os.AsyncTask;
 import android.os.Bundle;
-import android.support.annotation.ColorRes;
 import android.support.annotation.LayoutRes;
 import android.support.annotation.Nullable;
 import android.support.annotation.StringRes;
@@ -54,7 +52,15 @@
 
 /**
  * Base class for report fragments.
- * <p>All report fragments should extend this class</p>
+ * <p>All report fragments should extend this class. At the minimum, reports must implement
+ * {@link #getLayoutResource()}, {@link #getReportType()}, {@link #generateReport()}, {@link #displayReport()} and {@link #getTitle()}</p>
+ * <p>Implementing classes should create their own XML layouts and provide it in {@link #getLayoutResource()}.
+ * Then annotate any views in the resource using {@code @Bind} annotation from ButterKnife library.
+ * This base activity will automatically call {@link ButterKnife#bind(View)} for the layout.
+ * </p>
+ * <p>Any custom information to be initialized for the report should be done in {@link #onActivityCreated(Bundle)} in implementing classes.
+ * The report is then generated in {@link #onStart()}
+ * </p>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
 public abstract class BaseReportFragment extends Fragment implements
@@ -70,11 +76,11 @@
     /**
      * Reporting period start time
      */
-    protected long mReportStartTime = -1;
+    protected long mReportPeriodStart = -1;
     /**
      * Reporting period end time
      */
-    protected long mReportEndTime = -1;
+    protected long mReportPeriodEnd = -1;
 
     /**
      * Account type for which to display reports
@@ -96,15 +102,11 @@
      */
     public static final String SELECTED_VALUE_PATTERN = "%s - %.2f (%.2f %%)";
 
+    protected ReportsActivity mReportsActivity;
+
     @Nullable @Bind(R.id.selected_chart_slice) protected TextView mSelectedValueTextView;
 
-    /**
-     * Get the color which should use for decorating the app bar for this report
-     * @return Color resource
-     */
-    public @ColorRes int getTitleColor(){
-        return R.color.theme_primary;
-    }
+    private AsyncTask<Void, Void, Void> mReportGenerator;
 
     /**
      * Return the title of this report
@@ -170,7 +172,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         return view;
     }
 
-
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
@@ -183,17 +184,23 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         mCurrency = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode());
 
         ReportsActivity reportsActivity = (ReportsActivity) getActivity();
-        mReportStartTime = reportsActivity.getReportStartTime();
-        mReportEndTime = reportsActivity.getReportEndTime();
+        mReportPeriodStart = reportsActivity.getReportPeriodStart();
+        mReportPeriodEnd = reportsActivity.getReportPeriodEnd();
         mAccountType = reportsActivity.getAccountType();
     }
 
     @Override
+    public void onStart() {
+        super.onStart();
+        refresh();
+    }
+
+    @Override
     public void onResume() {
         super.onResume();
-        ((ReportsActivity)getActivity()).setAppBarColor(getTitleColor());
-        ((ReportsActivity) getActivity()).updateReportTypeSpinner(getReportType());
-        toggleBaseReportingOptions();
+        mReportsActivity.setAppBarColor(getReportType().getTitleColor());
+        mReportsActivity.toggleToolbarTitleVisibility();
+        toggleBaseReportingOptionsVisibility();
     }
 
     @Override
@@ -201,28 +208,29 @@ public void onAttach(Context context) {
         super.onAttach(context);
         if (!(getActivity() instanceof ReportsActivity))
             throw new RuntimeException("Report fragments can only be used with the ReportsActivity");
+        else
+            mReportsActivity = (ReportsActivity) getActivity();
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        if (mReportGenerator != null)
+            mReportGenerator.cancel(true);
     }
 
-    private void toggleBaseReportingOptions() {
-        final Activity activity = getActivity();
-        View timeRangeLayout = activity.findViewById(R.id.time_range_layout);
-        View dateRangeDivider = activity.findViewById(R.id.date_range_divider);
+    private void toggleBaseReportingOptionsVisibility() {
+        View timeRangeLayout = mReportsActivity.findViewById(R.id.time_range_layout);
+        View dateRangeDivider = mReportsActivity.findViewById(R.id.date_range_divider);
         if (timeRangeLayout != null && dateRangeDivider != null) {
-            if (requiresTimeRangeOptions()) {
-                timeRangeLayout.setVisibility(View.VISIBLE);
-                dateRangeDivider.setVisibility(View.VISIBLE);
-            } else {
-                timeRangeLayout.setVisibility(View.GONE);
-                dateRangeDivider.setVisibility(View.GONE);
-            }
+            int visibility = requiresTimeRangeOptions() ? View.VISIBLE : View.GONE;
+            timeRangeLayout.setVisibility(visibility);
+            dateRangeDivider.setVisibility(visibility);
         }
 
-        View accountTypeSpinner = activity.findViewById(R.id.report_account_type_spinner);
-        if (requiresAccountTypeOptions()) {
-            accountTypeSpinner.setVisibility(View.VISIBLE);
-        } else {
-            accountTypeSpinner.setVisibility(View.GONE);
-        }
+        View accountTypeSpinner = mReportsActivity.findViewById(R.id.report_account_type_spinner);
+        int visibility = requiresAccountTypeOptions() ? View.VISIBLE : View.GONE;
+        accountTypeSpinner.setVisibility(visibility);
     }
 
 
@@ -264,10 +272,15 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
 
     @Override
     public void refresh() {
-        new AsyncTask<Void, Void, Void>() {
-            ProgressBar progressBar = (ProgressBar) getActivity().findViewById(R.id.progress_indicator);
+        if (mReportGenerator != null)
+            mReportGenerator.cancel(true);
+
+        mReportGenerator = new AsyncTask<Void, Void, Void>() {
+            ProgressBar progressBar;
+
             @Override
             protected void onPreExecute() {
+                progressBar = (ProgressBar) getActivity().findViewById(R.id.progress_indicator);
                 progressBar.setVisibility(View.VISIBLE);
             }
 
@@ -282,7 +295,8 @@ protected void onPostExecute(Void aVoid) {
                 displayReport();
                 progressBar.setVisibility(View.GONE);
             }
-        }.execute();
+        };
+        mReportGenerator.execute();
     }
 
     /**
@@ -306,9 +320,9 @@ public void onGroupingUpdated(ReportsActivity.GroupInterval groupInterval) {
 
     @Override
     public void onTimeRangeUpdated(long start, long end) {
-        if (mReportStartTime != start || mReportEndTime != end) {
-            mReportStartTime = start;
-            mReportEndTime = end;
+        if (mReportPeriodStart != start || mReportPeriodEnd != end) {
+            mReportPeriodStart = start;
+            mReportPeriodEnd = end;
             refresh();
         }
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportType.java b/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
index 99294809..a5f9f64d 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
@@ -17,10 +17,10 @@
 package org.gnucash.android.ui.report;
 
 import android.content.Context;
+import android.support.annotation.ColorRes;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.ui.report.barchart.BarChartFragment;
 import org.gnucash.android.ui.report.barchart.CashFlowBarChartFragment;
 import org.gnucash.android.ui.report.linechart.CashFlowLineChartFragment;
 import org.gnucash.android.ui.report.piechart.PieChartFragment;
@@ -33,33 +33,56 @@
 
 /**
  * Different types of reports
+ * <p>This class also contains mappings for the reports of the different types which are available
+ * in the system. When adding a new report, make sure to add a mapping in the constructor</p>
  */
 public enum ReportType {
     PIE_CHART(0), BAR_CHART(1), LINE_CHART(2), TEXT(3), NONE(4);
 
     Map<String, Class> mReportTypeMap = new HashMap<>();
+    int mValue = 4;
 
     ReportType(int index){
+        mValue = index;
         Context context = GnuCashApplication.getAppContext();
         switch (index){
             case 0:
-                mReportTypeMap.put("Pie Chart", PieChartFragment.class);
+                mReportTypeMap.put(context.getString(R.string.title_pie_chart), PieChartFragment.class);
                 break;
             case 1:
                 mReportTypeMap.put(context.getString(R.string.title_cash_flow_report), CashFlowBarChartFragment.class);
-                mReportTypeMap.put("Bar Chart", BarChartFragment.class);
                 break;
             case 2:
-                mReportTypeMap.put("Income/Expense Statement", CashFlowLineChartFragment.class);
+                mReportTypeMap.put(context.getString(R.string.title_cash_flow_report), CashFlowLineChartFragment.class);
                 break;
             case 3:
-                mReportTypeMap.put("Balance Sheet", BalanceSheetFragment.class);
+                mReportTypeMap.put(context.getString(R.string.title_balance_sheet_report), BalanceSheetFragment.class);
                 break;
             case 4:
                 break;
         }
     }
 
+    /**
+     * Returns the toolbar color to be used for this report type
+     * @return Color resource
+     */
+    public @ColorRes int getTitleColor(){
+        switch (mValue){
+            case 0:
+                return R.color.account_green;
+            case 1:
+                return R.color.account_red;
+            case 2:
+                return R.color.account_blue;
+            case 3:
+                return R.color.account_purple;
+            case 4:
+            default:
+                return R.color.theme_primary;
+        }
+    }
+
     public List<String> getReportNames(){
         return new ArrayList<>(mReportTypeMap.keySet());
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index 81486f0b..61ce3228 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -28,6 +28,7 @@
 import android.support.v4.app.FragmentTransaction;
 import android.support.v7.app.ActionBar;
 import android.support.v7.widget.Toolbar;
+import android.view.KeyEvent;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
@@ -53,7 +54,10 @@
 import butterknife.ButterKnife;
 
 /**
- * base activity for reporting
+ * Activity for displaying report fragments (which must implement {@link BaseReportFragment})
+ * <p>In order to add new reports, extend the {@link BaseReportFragment} class to provide the view
+ * for the report. Then add the report mapping in {@link ReportType} constructor depending on what
+ * kind of report it is. The report will be dynamically included at runtime.</p>
  *
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * @author Ngewi Fet <ngewif@gmail.com>
@@ -78,12 +82,13 @@
     private TransactionsDbAdapter mTransactionsDbAdapter;
     private AccountType mAccountType = AccountType.EXPENSE;
     private ReportType mReportType = ReportType.NONE;
+    private ReportsOverviewFragment mReportsOverviewFragment;
 
     public enum GroupInterval {WEEK, MONTH, QUARTER, YEAR, ALL}
 
     // default time range is the last 3 months
-    private long mReportStartTime = new LocalDate().minusMonths(2).dayOfMonth().withMinimumValue().toDate().getTime();
-    private long mReportEndTime = new LocalDate().plusDays(1).toDate().getTime();
+    private long mReportPeriodStart = new LocalDate().minusMonths(2).dayOfMonth().withMinimumValue().toDate().getTime();
+    private long mReportPeriodEnd = new LocalDate().plusDays(1).toDate().getTime();
 
     private GroupInterval mReportGroupInterval = GroupInterval.MONTH;
     private boolean mSkipNextReportTypeSelectedRun = false;
@@ -149,13 +154,20 @@ public void onNothingSelected(AdapterView<?> adapterView) {
             }
         });
 
-        mReportTypeSpinner.setOnItemSelectedListener(mReportTypeSelectedListener);
+        mReportsOverviewFragment = new ReportsOverviewFragment();
 
         if (savedInstanceState == null) {
-            loadFragment(new ReportSummaryFragment());
+            loadFragment(mReportsOverviewFragment);
         }
     }
 
+    @Override
+    public void onAttachFragment(Fragment fragment) {
+        super.onAttachFragment(fragment);
+        BaseReportFragment reportFragment = (BaseReportFragment)fragment;
+        updateReportTypeSpinner(reportFragment.getReportType(), getString(reportFragment.getTitle()));
+    }
+
     /**
      * Load the provided fragment into the view replacing the previous one
      * @param fragment BaseReportFragment instance
@@ -164,9 +176,6 @@ private void loadFragment(BaseReportFragment fragment) {
         FragmentManager fragmentManager = getSupportFragmentManager();
         FragmentTransaction fragmentTransaction = fragmentManager
                 .beginTransaction();
-        
-        if (fragment.getReportType() != ReportType.NONE)
-            fragmentTransaction.addToBackStack(null);
 
         fragmentTransaction.replace(R.id.fragment_container, fragment);
         fragmentTransaction.commit();
@@ -175,19 +184,31 @@ private void loadFragment(BaseReportFragment fragment) {
     /**
      * Update the report type spinner
      */
-    public void updateReportTypeSpinner(ReportType reportType) {
+    public void updateReportTypeSpinner(ReportType reportType, String reportName) {
+        if (reportType == mReportType)//if it is the same report type, don't change anything
+            return;
+
         mReportType = reportType;
         ActionBar actionBar = getSupportActionBar();
         assert actionBar != null;
         ArrayAdapter<String> arrayAdapter = new ArrayAdapter<>(actionBar.getThemedContext(),
                 android.R.layout.simple_list_item_1,
                 mReportType.getReportNames());
-        mSkipNextReportTypeSelectedRun = true;
-        mReportTypeSpinner.setOnItemSelectedListener(mReportTypeSelectedListener);
+
+        mSkipNextReportTypeSelectedRun = true; //selection event will be fired again
         mReportTypeSpinner.setAdapter(arrayAdapter);
+        mReportTypeSpinner.setSelection(arrayAdapter.getPosition(reportName));
+        mReportTypeSpinner.setOnItemSelectedListener(mReportTypeSelectedListener);
+
+
+        toggleToolbarTitleVisibility();
+    }
 
+    public void toggleToolbarTitleVisibility() {
+        ActionBar actionBar = getSupportActionBar();
+        assert actionBar != null;
 
-        if (arrayAdapter.isEmpty() || mReportType == ReportType.NONE){
+        if (mReportType == ReportType.NONE){
             mReportTypeSpinner.setVisibility(View.GONE);
         } else {
             mReportTypeSpinner.setVisibility(View.VISIBLE);
@@ -214,7 +235,7 @@ private void updateDateRangeOnFragment(){
         List<Fragment> fragments = getSupportFragmentManager().getFragments();
         for (Fragment fragment : fragments) {
             if (fragment instanceof ReportOptionsListener){
-                ((ReportOptionsListener) fragment).onTimeRangeUpdated(mReportStartTime, mReportEndTime);
+                ((ReportOptionsListener) fragment).onTimeRangeUpdated(mReportPeriodStart, mReportPeriodEnd);
             }
         }
     }
@@ -284,23 +305,23 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
     @Override
     public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
-        mReportEndTime = new LocalDate().plusDays(1).toDate().getTime();
+        mReportPeriodEnd = new LocalDate().plusDays(1).toDate().getTime();
         switch (position){
             case 0: //current month
-                mReportStartTime = new LocalDate().dayOfMonth().withMinimumValue().toDate().getTime();
+                mReportPeriodStart = new LocalDate().dayOfMonth().withMinimumValue().toDate().getTime();
                 break;
             case 1: // last 3 months. x-2, x-1, x
-                mReportStartTime = new LocalDate().minusMonths(2).dayOfMonth().withMinimumValue().toDate().getTime();
+                mReportPeriodStart = new LocalDate().minusMonths(2).dayOfMonth().withMinimumValue().toDate().getTime();
                 break;
             case 2:
-                mReportStartTime = new LocalDate().minusMonths(5).dayOfMonth().withMinimumValue().toDate().getTime();
+                mReportPeriodStart = new LocalDate().minusMonths(5).dayOfMonth().withMinimumValue().toDate().getTime();
                 break;
             case 3:
-                mReportStartTime = new LocalDate().minusMonths(11).dayOfMonth().withMinimumValue().toDate().getTime();
+                mReportPeriodStart = new LocalDate().minusMonths(11).dayOfMonth().withMinimumValue().toDate().getTime();
                 break;
             case 4: //ALL TIME
-                mReportStartTime = -1;
-                mReportEndTime = -1;
+                mReportPeriodStart = -1;
+                mReportPeriodEnd = -1;
                 break;
             case 5:
                 String mCurrencyCode = GnuCashApplication.getDefaultCurrencyCode();
@@ -326,14 +347,14 @@ public void onNothingSelected(AdapterView<?> parent) {
     public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
         Calendar calendar = Calendar.getInstance();
         calendar.set(year, monthOfYear, dayOfMonth);
-        mReportStartTime = calendar.getTimeInMillis();
+        mReportPeriodStart = calendar.getTimeInMillis();
         updateDateRangeOnFragment();
     }
 
     @Override
     public void onDateRangeSet(Date startDate, Date endDate) {
-        mReportStartTime = startDate.getTime();
-        mReportEndTime = endDate.getTime();
+        mReportPeriodStart = startDate.getTime();
+        mReportPeriodEnd = endDate.getTime();
         updateDateRangeOnFragment();
 
     }
@@ -342,12 +363,30 @@ public AccountType getAccountType(){
         return mAccountType;
     }
 
-    public long getReportEndTime() {
-        return mReportEndTime;
+    /**
+     * Return the end time of the reporting period
+     * @return Time in millis
+     */
+    public long getReportPeriodEnd() {
+        return mReportPeriodEnd;
     }
 
-    public long getReportStartTime() {
-        return mReportStartTime;
+    /**
+     * Return the start time of the reporting period
+     * @return Time in millis
+     */
+    public long getReportPeriodStart() {
+        return mReportPeriodStart;
     }
 
+    @Override
+    public boolean onKeyUp(int keyCode, KeyEvent event) {
+        if (keyCode == KeyEvent.KEYCODE_BACK){
+            if (mReportType != ReportType.NONE){
+                loadFragment(mReportsOverviewFragment);
+                return true;
+            }
+        }
+        return super.onKeyUp(keyCode, event);
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment.java
similarity index 94%
rename from app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment.java
index 18a2b582..ce9beb51 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment.java
@@ -20,9 +20,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentTransaction;
 import android.support.v4.view.ViewCompat;
 import android.support.v7.widget.AppCompatButton;
 import android.view.Menu;
@@ -43,7 +41,7 @@
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.ui.report.barchart.BarChartFragment;
+import org.gnucash.android.ui.report.barchart.CashFlowBarChartFragment;
 import org.gnucash.android.ui.report.linechart.CashFlowLineChartFragment;
 import org.gnucash.android.ui.report.piechart.PieChartFragment;
 import org.gnucash.android.ui.report.sheet.BalanceSheetFragment;
@@ -65,7 +63,7 @@
  * Shows a summary of reports
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class ReportSummaryFragment extends BaseReportFragment {
+public class ReportsOverviewFragment extends BaseReportFragment {
 
     public static final int LEGEND_TEXT_SIZE = 14;
 
@@ -140,8 +138,6 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         setButtonTint(mLineChartButton, csl);
         csl = new ColorStateList(new int[][]{new int[0]}, new int[]{getResources().getColor(R.color.account_purple)});
         setButtonTint(mBalanceSheetButton, csl);
-
-        refresh();
     }
 
     @Override
@@ -246,7 +242,7 @@ public void onClickChartTypeButton(View view){
                 fragment = new PieChartFragment();
                 break;
             case R.id.btn_bar_chart:
-                fragment = new BarChartFragment();
+                fragment = new CashFlowBarChartFragment();
                 break;
             case R.id.btn_line_chart:
                 fragment = new CashFlowLineChartFragment();
@@ -258,7 +254,10 @@ public void onClickChartTypeButton(View view){
                 fragment = this;
                 break;
         }
-        loadFragment(fragment);
+        FragmentManager fragmentManager = getActivity().getSupportFragmentManager();
+        fragmentManager.beginTransaction()
+                .replace(R.id.fragment_container, fragment)
+                .commit();
     }
 
     public void setButtonTint(Button button, ColorStateList tint) {
@@ -270,12 +269,4 @@ public void setButtonTint(Button button, ColorStateList tint) {
         button.setTextColor(getResources().getColor(android.R.color.white));
     }
 
-    private void loadFragment(Fragment fragment){
-        FragmentManager fragmentManager = getActivity().getSupportFragmentManager();
-        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
-
-        fragmentTransaction.replace(R.id.fragment_container, fragment);
-        fragmentTransaction.addToBackStack(null);
-        fragmentTransaction.commit();
-    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment.java
deleted file mode 100644
index 25d974ed..00000000
--- a/app/src/main/java/org/gnucash/android/ui/report/barchart/BarChartFragment.java
+++ /dev/null
@@ -1,398 +0,0 @@
-/*
- * Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
- * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gnucash.android.ui.report.barchart;
-
-import android.graphics.Color;
-import android.os.Bundle;
-import android.preference.PreferenceManager;
-import android.support.annotation.Nullable;
-import android.util.Log;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.widget.Toast;
-
-import com.github.mikephil.charting.charts.BarChart;
-import com.github.mikephil.charting.components.Legend;
-import com.github.mikephil.charting.data.BarData;
-import com.github.mikephil.charting.data.BarDataSet;
-import com.github.mikephil.charting.data.BarEntry;
-import com.github.mikephil.charting.data.Entry;
-import com.github.mikephil.charting.highlight.Highlight;
-import com.github.mikephil.charting.utils.LargeValueFormatter;
-
-import org.gnucash.android.R;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
-import org.gnucash.android.db.adapter.TransactionsDbAdapter;
-import org.gnucash.android.model.Account;
-import org.gnucash.android.model.AccountType;
-import org.gnucash.android.ui.report.BaseReportFragment;
-import org.gnucash.android.ui.report.ReportType;
-import org.joda.time.LocalDate;
-import org.joda.time.LocalDateTime;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.LinkedHashMap;
-import java.util.LinkedHashSet;
-import java.util.List;
-import java.util.Locale;
-import java.util.Map;
-
-import butterknife.Bind;
-
-import static org.gnucash.android.ui.report.ReportsActivity.COLORS;
-
-/**
- * Activity used for drawing a bar chart
- *
- * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
- * @author Ngewi Fet <ngewif@gmail.com>
- */
-public class BarChartFragment extends BaseReportFragment {
-
-    private static final String X_AXIS_MONTH_PATTERN = "MMM YY";
-    private static final String X_AXIS_QUARTER_PATTERN = "Q%d %s";
-    private static final String X_AXIS_YEAR_PATTERN = "YYYY";
-
-    private static final int ANIMATION_DURATION = 2000;
-    private static final int NO_DATA_BAR_COUNTS = 3;
-
-    private AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
-
-    @Bind(R.id.bar_chart) BarChart mChart;
-
-    private boolean mUseAccountColor = true;
-    private boolean mTotalPercentageMode = true;
-    private boolean mChartDataPresent = true;
-
-    @Override
-    public int getTitleColor() {
-        return R.color.account_red;
-    }
-
-    @Override
-    public int getTitle() {
-        return R.string.title_bar_chart;
-    }
-
-    @Override
-    public int getLayoutResource() {
-        return R.layout.fragment_bar_chart;
-    }
-
-    @Override
-    public ReportType getReportType() {
-        return ReportType.BAR_CHART;
-    }
-
-    @Override
-    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-
-        mUseAccountColor = PreferenceManager.getDefaultSharedPreferences(getActivity())
-                .getBoolean(getString(R.string.key_use_account_color), false);
-
-        mChart.setOnChartValueSelectedListener(this);
-        mChart.setDescription("");
-//        mChart.setDrawValuesForWholeStack(false);
-        mChart.getXAxis().setDrawGridLines(false);
-        mChart.getAxisRight().setEnabled(false);
-        mChart.getAxisLeft().setStartAtZero(false);
-        mChart.getAxisLeft().enableGridDashedLine(4.0f, 4.0f, 0);
-        mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter(mCurrency.getSymbol(Locale.getDefault())));
-        Legend chartLegend = mChart.getLegend();
-        chartLegend.setForm(Legend.LegendForm.CIRCLE);
-        chartLegend.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER);
-        chartLegend.setWordWrapEnabled(true);
-
-        refresh();
-    }
-
-
-    /**
-     * Returns a data object that represents a user data of the specified account types
-     * @return a {@code BarData} instance that represents a user data
-     */
-    protected BarData getData() {
-        List<BarEntry> values = new ArrayList<>();
-        List<String> labels = new ArrayList<>();
-        List<Integer> colors = new ArrayList<>();
-        Map<String, Integer> accountToColorMap = new LinkedHashMap<>();
-        List<String> xValues = new ArrayList<>();
-        LocalDateTime tmpDate = new LocalDateTime(getStartDate(mAccountType).toDate().getTime());
-        int count = getDateDiff(new LocalDateTime(getStartDate(mAccountType).toDate().getTime()),
-                new LocalDateTime(getEndDate(mAccountType).toDate().getTime()));
-        for (int i = 0; i <= count; i++) {
-            long start = 0;
-            long end = 0;
-            switch (mGroupInterval) {
-                case MONTH:
-                    start = tmpDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
-                    end = tmpDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
-
-                    xValues.add(tmpDate.toString(X_AXIS_MONTH_PATTERN));
-                    tmpDate = tmpDate.plusMonths(1);
-                    break;
-                case QUARTER:
-                    int quarter = getQuarter(tmpDate);
-                    start = tmpDate.withMonthOfYear(quarter * 3 - 2).dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
-                    end = tmpDate.withMonthOfYear(quarter * 3).dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
-
-                    xValues.add(String.format(X_AXIS_QUARTER_PATTERN, quarter, tmpDate.toString(" YY")));
-                    tmpDate = tmpDate.plusMonths(3);
-                    break;
-                case YEAR:
-                    start = tmpDate.dayOfYear().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
-                    end = tmpDate.dayOfYear().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
-
-                    xValues.add(tmpDate.toString(X_AXIS_YEAR_PATTERN));
-                    tmpDate = tmpDate.plusYears(1);
-                    break;
-            }
-            List<Float> stack = new ArrayList<>();
-            for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
-                if (account.getAccountType() == mAccountType
-                        && !account.isPlaceholderAccount()
-                        && account.getCurrency() == mCurrency) {
-
-                    double balance = mAccountsDbAdapter.getAccountsBalance(
-                            Collections.singletonList(account.getUID()), start, end).asDouble();
-                    if (balance != 0) {
-                        stack.add((float) balance);
-
-                        String accountName = account.getName();
-                        while (labels.contains(accountName)) {
-                            if (!accountToColorMap.containsKey(account.getUID())) {
-                                for (String label : labels) {
-                                    if (label.equals(accountName)) {
-                                        accountName += " ";
-                                    }
-                                }
-                            } else {
-                                break;
-                            }
-                        }
-                        labels.add(accountName);
-
-                        if (!accountToColorMap.containsKey(account.getUID())) {
-                            Integer color;
-                            if (mUseAccountColor) {
-                                color = (account.getColorHexCode() != null)
-                                        ? Color.parseColor(account.getColorHexCode())
-                                        : COLORS[accountToColorMap.size() % COLORS.length];
-                            } else {
-                                color = COLORS[accountToColorMap.size() % COLORS.length];
-                            }
-                            accountToColorMap.put(account.getUID(), color);
-                        }
-                        colors.add(accountToColorMap.get(account.getUID()));
-
-                        Log.d(TAG, mAccountType + tmpDate.toString(" MMMM yyyy ") + account.getName() + " = " + stack.get(stack.size() - 1));
-                    }
-                }
-            }
-
-            String stackLabels = labels.subList(labels.size() - stack.size(), labels.size()).toString();
-            values.add(new BarEntry(floatListToArray(stack), i, stackLabels));
-        }
-
-        BarDataSet set = new BarDataSet(values, "");
-        set.setDrawValues(false);
-        set.setStackLabels(labels.toArray(new String[labels.size()]));
-        set.setColors(colors);
-
-        if (set.getYValueSum() == 0) {
-            mChartDataPresent = false;
-            return getEmptyData();
-        }
-        mChartDataPresent = true;
-        return new BarData(xValues, set);
-    }
-
-    /**
-     * Returns a data object that represents situation when no user data available
-     * @return a {@code BarData} instance for situation when no user data available
-     */
-    private BarData getEmptyData() {
-        List<String> xValues = new ArrayList<>();
-        List<BarEntry> yValues = new ArrayList<>();
-        for (int i = 0; i < NO_DATA_BAR_COUNTS; i++) {
-            xValues.add("");
-            yValues.add(new BarEntry(i + 1, i));
-        }
-        BarDataSet set = new BarDataSet(yValues, getResources().getString(R.string.label_chart_no_data));
-        set.setDrawValues(false);
-        set.setColor(NO_DATA_COLOR);
-
-        return new BarData(xValues, set);
-    }
-
-    /**
-     * Returns the start data of x-axis for the specified account type
-     * @param accountType account type
-     * @return the start data
-     */
-    private LocalDate getStartDate(AccountType accountType) {
-        TransactionsDbAdapter adapter = TransactionsDbAdapter.getInstance();
-        String code = mCurrency.getCurrencyCode();
-        LocalDate startDate;
-        if (mReportStartTime == -1) {
-            startDate = new LocalDate(adapter.getTimestampOfEarliestTransaction(accountType, code));
-        } else {
-            startDate = new LocalDate(mReportStartTime);
-        }
-        startDate = startDate.withDayOfMonth(1);
-        Log.d(TAG, accountType + " X-axis star date: " + startDate.toString("dd MM yyyy"));
-        return startDate;
-    }
-
-    /**
-     * Returns the end data of x-axis for the specified account type
-     * @param accountType account type
-     * @return the end data
-     */
-    private LocalDate getEndDate(AccountType accountType) {
-        TransactionsDbAdapter adapter = TransactionsDbAdapter.getInstance();
-        String code = mCurrency.getCurrencyCode();
-        LocalDate endDate;
-        if (mReportEndTime == -1) {
-            endDate = new LocalDate(adapter.getTimestampOfLatestTransaction(accountType, code));
-        } else {
-            endDate = new LocalDate(mReportEndTime);
-        }
-        endDate = endDate.withDayOfMonth(1);
-        Log.d(TAG, accountType + " X-axis end date: " + endDate.toString("dd MM yyyy"));
-        return endDate;
-    }
-
-    /**
-     * Converts the specified list of floats to an array
-     * @param list a list of floats
-     * @return a float array
-     */
-    private float[] floatListToArray(List<Float> list) {
-        float array[] = new float[list.size()];
-        for (int i = 0;  i < list.size(); i++) {
-            array[i] = list.get(i);
-        }
-        return array;
-    }
-
-
-    @Override
-    public void generateReport() {
-        mChart.setData(getData());
-        setCustomLegend();
-
-        mChart.getAxisLeft().setDrawLabels(mChartDataPresent);
-        mChart.getXAxis().setDrawLabels(mChartDataPresent);
-        mChart.setTouchEnabled(mChartDataPresent);
-    }
-
-    @Override
-    protected void displayReport() {
-        mChart.notifyDataSetChanged();
-        mChart.highlightValues(null);
-        if (mChartDataPresent) {
-            mChart.animateY(ANIMATION_DURATION);
-        } else {
-            mChart.clearAnimation();
-            mSelectedValueTextView.setText(R.string.label_chart_no_data);
-        }
-
-        mChart.invalidate();
-    }
-
-    /**
-     * Sets custom legend. Disable legend if its items count greater than {@code COLORS} array size.
-     */
-    private void setCustomLegend() {
-        Legend legend = mChart.getLegend();
-        BarDataSet dataSet = mChart.getData().getDataSetByIndex(0);
-
-        LinkedHashSet<String> labels = new LinkedHashSet<>(Arrays.asList(dataSet.getStackLabels()));
-        LinkedHashSet<Integer> colors = new LinkedHashSet<>(dataSet.getColors());
-
-        if (COLORS.length >= labels.size()) {
-            legend.setCustom(new ArrayList<>(colors), new ArrayList<>(labels));
-            return;
-        }
-        legend.setEnabled(false);
-    }
-
-    @Override
-    public void onPrepareOptionsMenu(Menu menu) {
-        menu.findItem(R.id.menu_percentage_mode).setVisible(mChartDataPresent);
-        // hide pie/line chart specific menu items
-        menu.findItem(R.id.menu_order_by_size).setVisible(false);
-        menu.findItem(R.id.menu_toggle_labels).setVisible(false);
-        menu.findItem(R.id.menu_toggle_average_lines).setVisible(false);
-        menu.findItem(R.id.menu_group_other_slice).setVisible(false);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        if (item.isCheckable())
-            item.setChecked(!item.isChecked());
-        switch (item.getItemId()) {
-            case R.id.menu_toggle_legend:
-                Legend legend = mChart.getLegend();
-                if (!legend.isLegendCustom()) {
-                    Toast.makeText(getActivity(), R.string.toast_legend_too_long, Toast.LENGTH_LONG).show();
-                    item.setChecked(false);
-                } else {
-                    item.setChecked(!mChart.getLegend().isEnabled());
-                    legend.setEnabled(!mChart.getLegend().isEnabled());
-                    mChart.invalidate();
-                }
-                return true;
-
-            case R.id.menu_percentage_mode:
-                mTotalPercentageMode = !mTotalPercentageMode;
-                int msgId = mTotalPercentageMode ? R.string.toast_chart_percentage_mode_total
-                        : R.string.toast_chart_percentage_mode_current_bar;
-                Toast.makeText(getActivity(), msgId, Toast.LENGTH_LONG).show();
-                return true;
-
-            default:
-                return super.onOptionsItemSelected(item);
-        }
-    }
-
-    @Override
-    public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
-        if (e == null || ((BarEntry) e).getVals().length == 0) return;
-        BarEntry entry = (BarEntry) e;
-        int index = h.getStackIndex() == -1 ? 0 : h.getStackIndex();
-        String stackLabels = entry.getData().toString();
-        String label = mChart.getData().getXVals().get(entry.getXIndex()) + ", "
-                + stackLabels.substring(1, stackLabels.length() - 1).split(",")[index];
-        double value = Math.abs(entry.getVals()[index]);
-        double sum = 0;
-        if (mTotalPercentageMode) {
-            for (BarEntry barEntry : mChart.getData().getDataSetByIndex(dataSetIndex).getYVals()) {
-                sum += barEntry.getNegativeSum() + barEntry.getPositiveSum();
-            }
-        } else {
-            sum = entry.getNegativeSum() + entry.getPositiveSum();
-        }
-        mSelectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label.trim(), value, value / sum * 100));
-    }
-
-}
diff --git a/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment.java
index c37d99e9..7e3620fa 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment.java
@@ -1,4 +1,5 @@
 /*
+ * Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,17 +14,73 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package org.gnucash.android.ui.report.barchart;
 
+import android.graphics.Color;
+import android.os.Bundle;
+import android.preference.PreferenceManager;
+import android.support.annotation.Nullable;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.widget.Toast;
+
+import com.github.mikephil.charting.charts.BarChart;
+import com.github.mikephil.charting.components.Legend;
+import com.github.mikephil.charting.data.BarData;
+import com.github.mikephil.charting.data.BarDataSet;
+import com.github.mikephil.charting.data.BarEntry;
+import com.github.mikephil.charting.data.Entry;
+import com.github.mikephil.charting.highlight.Highlight;
+import com.github.mikephil.charting.utils.LargeValueFormatter;
+
 import org.gnucash.android.R;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
+import org.gnucash.android.model.Account;
+import org.gnucash.android.model.AccountType;
 import org.gnucash.android.ui.report.BaseReportFragment;
 import org.gnucash.android.ui.report.ReportType;
+import org.joda.time.LocalDate;
+import org.joda.time.LocalDateTime;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.LinkedHashMap;
+import java.util.LinkedHashSet;
+import java.util.List;
+import java.util.Locale;
+import java.util.Map;
+
+import butterknife.Bind;
+
+import static org.gnucash.android.ui.report.ReportsActivity.COLORS;
 
 /**
- * Cash flow report fragment
+ * Activity used for drawing a bar chart
+ *
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ * @author Ngewi Fet <ngewif@gmail.com>
  */
 public class CashFlowBarChartFragment extends BaseReportFragment {
 
+    private static final String X_AXIS_MONTH_PATTERN = "MMM YY";
+    private static final String X_AXIS_QUARTER_PATTERN = "Q%d %s";
+    private static final String X_AXIS_YEAR_PATTERN = "YYYY";
+
+    private static final int ANIMATION_DURATION = 2000;
+    private static final int NO_DATA_BAR_COUNTS = 3;
+
+    private AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
+
+    @Bind(R.id.bar_chart) BarChart mChart;
+
+    private boolean mUseAccountColor = true;
+    private boolean mTotalPercentageMode = true;
+    private boolean mChartDataPresent = true;
+
     @Override
     public int getTitle() {
         return R.string.title_cash_flow_report;
@@ -40,17 +97,296 @@ public ReportType getReportType() {
     }
 
     @Override
-    public boolean requiresAccountTypeOptions() {
-        return false;
+    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+
+        mUseAccountColor = PreferenceManager.getDefaultSharedPreferences(getActivity())
+                .getBoolean(getString(R.string.key_use_account_color), false);
+
+        mChart.setOnChartValueSelectedListener(this);
+        mChart.setDescription("");
+//        mChart.setDrawValuesForWholeStack(false);
+        mChart.getXAxis().setDrawGridLines(false);
+        mChart.getAxisRight().setEnabled(false);
+        mChart.getAxisLeft().setStartAtZero(false);
+        mChart.getAxisLeft().enableGridDashedLine(4.0f, 4.0f, 0);
+        mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter(mCurrency.getSymbol(Locale.getDefault())));
+        Legend chartLegend = mChart.getLegend();
+        chartLegend.setForm(Legend.LegendForm.CIRCLE);
+        chartLegend.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER);
+        chartLegend.setWordWrapEnabled(true);
+
+    }
+
+
+    /**
+     * Returns a data object that represents a user data of the specified account types
+     * @return a {@code BarData} instance that represents a user data
+     */
+    protected BarData getData() {
+        List<BarEntry> values = new ArrayList<>();
+        List<String> labels = new ArrayList<>();
+        List<Integer> colors = new ArrayList<>();
+        Map<String, Integer> accountToColorMap = new LinkedHashMap<>();
+        List<String> xValues = new ArrayList<>();
+        LocalDateTime tmpDate = new LocalDateTime(getStartDate(mAccountType).toDate().getTime());
+        int count = getDateDiff(new LocalDateTime(getStartDate(mAccountType).toDate().getTime()),
+                new LocalDateTime(getEndDate(mAccountType).toDate().getTime()));
+        for (int i = 0; i <= count; i++) {
+            long start = 0;
+            long end = 0;
+            switch (mGroupInterval) {
+                case MONTH:
+                    start = tmpDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
+                    end = tmpDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
+
+                    xValues.add(tmpDate.toString(X_AXIS_MONTH_PATTERN));
+                    tmpDate = tmpDate.plusMonths(1);
+                    break;
+                case QUARTER:
+                    int quarter = getQuarter(tmpDate);
+                    start = tmpDate.withMonthOfYear(quarter * 3 - 2).dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
+                    end = tmpDate.withMonthOfYear(quarter * 3).dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
+
+                    xValues.add(String.format(X_AXIS_QUARTER_PATTERN, quarter, tmpDate.toString(" YY")));
+                    tmpDate = tmpDate.plusMonths(3);
+                    break;
+                case YEAR:
+                    start = tmpDate.dayOfYear().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
+                    end = tmpDate.dayOfYear().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
+
+                    xValues.add(tmpDate.toString(X_AXIS_YEAR_PATTERN));
+                    tmpDate = tmpDate.plusYears(1);
+                    break;
+            }
+            List<Float> stack = new ArrayList<>();
+            for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
+                if (account.getAccountType() == mAccountType
+                        && !account.isPlaceholderAccount()
+                        && account.getCurrency() == mCurrency) {
+
+                    double balance = mAccountsDbAdapter.getAccountsBalance(
+                            Collections.singletonList(account.getUID()), start, end).asDouble();
+                    if (balance != 0) {
+                        stack.add((float) balance);
+
+                        String accountName = account.getName();
+                        while (labels.contains(accountName)) {
+                            if (!accountToColorMap.containsKey(account.getUID())) {
+                                for (String label : labels) {
+                                    if (label.equals(accountName)) {
+                                        accountName += " ";
+                                    }
+                                }
+                            } else {
+                                break;
+                            }
+                        }
+                        labels.add(accountName);
+
+                        if (!accountToColorMap.containsKey(account.getUID())) {
+                            Integer color;
+                            if (mUseAccountColor) {
+                                color = (account.getColorHexCode() != null)
+                                        ? Color.parseColor(account.getColorHexCode())
+                                        : COLORS[accountToColorMap.size() % COLORS.length];
+                            } else {
+                                color = COLORS[accountToColorMap.size() % COLORS.length];
+                            }
+                            accountToColorMap.put(account.getUID(), color);
+                        }
+                        colors.add(accountToColorMap.get(account.getUID()));
+
+                        Log.d(TAG, mAccountType + tmpDate.toString(" MMMM yyyy ") + account.getName() + " = " + stack.get(stack.size() - 1));
+                    }
+                }
+            }
+
+            String stackLabels = labels.subList(labels.size() - stack.size(), labels.size()).toString();
+            values.add(new BarEntry(floatListToArray(stack), i, stackLabels));
+        }
+
+        BarDataSet set = new BarDataSet(values, "");
+        set.setDrawValues(false);
+        set.setStackLabels(labels.toArray(new String[labels.size()]));
+        set.setColors(colors);
+
+        if (set.getYValueSum() == 0) {
+            mChartDataPresent = false;
+            return getEmptyData();
+        }
+        mChartDataPresent = true;
+        return new BarData(xValues, set);
     }
 
+    /**
+     * Returns a data object that represents situation when no user data available
+     * @return a {@code BarData} instance for situation when no user data available
+     */
+    private BarData getEmptyData() {
+        List<String> xValues = new ArrayList<>();
+        List<BarEntry> yValues = new ArrayList<>();
+        for (int i = 0; i < NO_DATA_BAR_COUNTS; i++) {
+            xValues.add("");
+            yValues.add(new BarEntry(i + 1, i));
+        }
+        BarDataSet set = new BarDataSet(yValues, getResources().getString(R.string.label_chart_no_data));
+        set.setDrawValues(false);
+        set.setColor(NO_DATA_COLOR);
+
+        return new BarData(xValues, set);
+    }
+
+    /**
+     * Returns the start data of x-axis for the specified account type
+     * @param accountType account type
+     * @return the start data
+     */
+    private LocalDate getStartDate(AccountType accountType) {
+        TransactionsDbAdapter adapter = TransactionsDbAdapter.getInstance();
+        String code = mCurrency.getCurrencyCode();
+        LocalDate startDate;
+        if (mReportPeriodStart == -1) {
+            startDate = new LocalDate(adapter.getTimestampOfEarliestTransaction(accountType, code));
+        } else {
+            startDate = new LocalDate(mReportPeriodStart);
+        }
+        startDate = startDate.withDayOfMonth(1);
+        Log.d(TAG, accountType + " X-axis star date: " + startDate.toString("dd MM yyyy"));
+        return startDate;
+    }
+
+    /**
+     * Returns the end data of x-axis for the specified account type
+     * @param accountType account type
+     * @return the end data
+     */
+    private LocalDate getEndDate(AccountType accountType) {
+        TransactionsDbAdapter adapter = TransactionsDbAdapter.getInstance();
+        String code = mCurrency.getCurrencyCode();
+        LocalDate endDate;
+        if (mReportPeriodEnd == -1) {
+            endDate = new LocalDate(adapter.getTimestampOfLatestTransaction(accountType, code));
+        } else {
+            endDate = new LocalDate(mReportPeriodEnd);
+        }
+        endDate = endDate.withDayOfMonth(1);
+        Log.d(TAG, accountType + " X-axis end date: " + endDate.toString("dd MM yyyy"));
+        return endDate;
+    }
+
+    /**
+     * Converts the specified list of floats to an array
+     * @param list a list of floats
+     * @return a float array
+     */
+    private float[] floatListToArray(List<Float> list) {
+        float array[] = new float[list.size()];
+        for (int i = 0;  i < list.size(); i++) {
+            array[i] = list.get(i);
+        }
+        return array;
+    }
+
+
     @Override
-    protected void generateReport() {
-        //// TODO: 29.11.2015 Generate cash flow report
+    public void generateReport() {
+        mChart.setData(getData());
+        setCustomLegend();
+
+        mChart.getAxisLeft().setDrawLabels(mChartDataPresent);
+        mChart.getXAxis().setDrawLabels(mChartDataPresent);
+        mChart.setTouchEnabled(mChartDataPresent);
     }
 
     @Override
     protected void displayReport() {
-        // TODO: 29.11.2015 Display cash flow report
+        mChart.notifyDataSetChanged();
+        mChart.highlightValues(null);
+        if (mChartDataPresent) {
+            mChart.animateY(ANIMATION_DURATION);
+        } else {
+            mChart.clearAnimation();
+            mSelectedValueTextView.setText(R.string.label_chart_no_data);
+        }
+
+        mChart.invalidate();
+    }
+
+    /**
+     * Sets custom legend. Disable legend if its items count greater than {@code COLORS} array size.
+     */
+    private void setCustomLegend() {
+        Legend legend = mChart.getLegend();
+        BarDataSet dataSet = mChart.getData().getDataSetByIndex(0);
+
+        LinkedHashSet<String> labels = new LinkedHashSet<>(Arrays.asList(dataSet.getStackLabels()));
+        LinkedHashSet<Integer> colors = new LinkedHashSet<>(dataSet.getColors());
+
+        if (COLORS.length >= labels.size()) {
+            legend.setCustom(new ArrayList<>(colors), new ArrayList<>(labels));
+            return;
+        }
+        legend.setEnabled(false);
+    }
+
+    @Override
+    public void onPrepareOptionsMenu(Menu menu) {
+        menu.findItem(R.id.menu_percentage_mode).setVisible(mChartDataPresent);
+        // hide pie/line chart specific menu items
+        menu.findItem(R.id.menu_order_by_size).setVisible(false);
+        menu.findItem(R.id.menu_toggle_labels).setVisible(false);
+        menu.findItem(R.id.menu_toggle_average_lines).setVisible(false);
+        menu.findItem(R.id.menu_group_other_slice).setVisible(false);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        if (item.isCheckable())
+            item.setChecked(!item.isChecked());
+        switch (item.getItemId()) {
+            case R.id.menu_toggle_legend:
+                Legend legend = mChart.getLegend();
+                if (!legend.isLegendCustom()) {
+                    Toast.makeText(getActivity(), R.string.toast_legend_too_long, Toast.LENGTH_LONG).show();
+                    item.setChecked(false);
+                } else {
+                    item.setChecked(!mChart.getLegend().isEnabled());
+                    legend.setEnabled(!mChart.getLegend().isEnabled());
+                    mChart.invalidate();
+                }
+                return true;
+
+            case R.id.menu_percentage_mode:
+                mTotalPercentageMode = !mTotalPercentageMode;
+                int msgId = mTotalPercentageMode ? R.string.toast_chart_percentage_mode_total
+                        : R.string.toast_chart_percentage_mode_current_bar;
+                Toast.makeText(getActivity(), msgId, Toast.LENGTH_LONG).show();
+                return true;
+
+            default:
+                return super.onOptionsItemSelected(item);
+        }
     }
+
+    @Override
+    public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
+        if (e == null || ((BarEntry) e).getVals().length == 0) return;
+        BarEntry entry = (BarEntry) e;
+        int index = h.getStackIndex() == -1 ? 0 : h.getStackIndex();
+        String stackLabels = entry.getData().toString();
+        String label = mChart.getData().getXVals().get(entry.getXIndex()) + ", "
+                + stackLabels.substring(1, stackLabels.length() - 1).split(",")[index];
+        double value = Math.abs(entry.getVals()[index]);
+        double sum = 0;
+        if (mTotalPercentageMode) {
+            for (BarEntry barEntry : mChart.getData().getDataSetByIndex(dataSetIndex).getYVals()) {
+                sum += barEntry.getNegativeSum() + barEntry.getPositiveSum();
+            }
+        } else {
+            sum = entry.getNegativeSum() + entry.getPositiveSum();
+        }
+        mSelectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label.trim(), value, value / sum * 100));
+    }
+
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
index ceef1cc7..7f72d7cd 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
@@ -90,7 +90,7 @@ public int getLayoutResource() {
 
     @Override
     public int getTitle() {
-        return R.string.title_line_chart;
+        return R.string.title_cash_flow_report;
     }
 
     @Override
@@ -109,12 +109,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
         legend.setTextSize(16);
         legend.setForm(Legend.LegendForm.CIRCLE);
 
-        refresh();
-    }
-
-    @Override
-    public int getTitleColor() {
-        return R.color.account_blue;
     }
 
     @Override
@@ -133,12 +127,12 @@ private LineData getData(List<AccountType> accountTypeList) {
         // LocalDateTime?
         LocalDate startDate;
         LocalDate endDate;
-        if (mReportStartTime == -1 && mReportEndTime == -1) {
+        if (mReportPeriodStart == -1 && mReportPeriodEnd == -1) {
             startDate = new LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1);
             endDate = new LocalDate(mLatestTransactionTimestamp).withDayOfMonth(1);
         } else {
-            startDate = new LocalDate(mReportStartTime).withDayOfMonth(1);
-            endDate = new LocalDate(mReportEndTime).withDayOfMonth(1);
+            startDate = new LocalDate(mReportPeriodStart).withDayOfMonth(1);
+            endDate = new LocalDate(mReportPeriodEnd).withDayOfMonth(1);
         }
 
         int count = getDateDiff(new LocalDateTime(startDate.toDate().getTime()), new LocalDateTime(endDate.toDate().getTime()));
@@ -222,12 +216,12 @@ private LineData getEmptyData() {
 
         LocalDateTime earliest;
         LocalDateTime latest;
-        if (mReportStartTime == -1 && mReportEndTime == -1) {
+        if (mReportPeriodStart == -1 && mReportPeriodEnd == -1) {
             earliest = new LocalDateTime(mEarliestTimestampsMap.get(accountType));
             latest = new LocalDateTime(mLatestTimestampsMap.get(accountType));
         } else {
-            earliest = new LocalDateTime(mReportStartTime);
-            latest = new LocalDateTime(mReportEndTime);
+            earliest = new LocalDateTime(mReportPeriodStart);
+            latest = new LocalDateTime(mReportPeriodEnd);
         }
         Log.d(TAG, "Earliest " + accountType + " date " + earliest.toString("dd MM yyyy"));
         Log.d(TAG, "Latest " + accountType + " date " + latest.toString("dd MM yyyy"));
@@ -273,9 +267,9 @@ private LineData getEmptyData() {
      * @param accountTypeList account's types which will be processed
      */
     private void calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
-        if (mReportStartTime != -1 && mReportEndTime != -1) {
-            mEarliestTransactionTimestamp = mReportStartTime;
-            mLatestTransactionTimestamp = mReportEndTime;
+        if (mReportPeriodStart != -1 && mReportPeriodEnd != -1) {
+            mEarliestTransactionTimestamp = mReportPeriodStart;
+            mLatestTransactionTimestamp = mReportPeriodEnd;
             return;
         }
 
@@ -335,9 +329,9 @@ protected void displayReport() {
 
     @Override
     public void onTimeRangeUpdated(long start, long end) {
-        if (mReportStartTime != start || mReportEndTime != end) {
-            mReportStartTime = start;
-            mReportEndTime = end;
+        if (mReportPeriodStart != start || mReportPeriodEnd != end) {
+            mReportPeriodStart = start;
+            mReportPeriodEnd = end;
             mChart.setData(getData(new ArrayList<>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
             mChart.invalidate();
         }
diff --git a/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
index 3c0d86bd..bbe321ce 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
@@ -95,12 +95,6 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         mChart.getLegend().setWordWrapEnabled(true);
         mChart.getLegend().setPosition(LegendPosition.BELOW_CHART_CENTER);
 
-        refresh();
-    }
-
-    @Override
-    public int getTitleColor() {
-        return R.color.account_green;
     }
 
     @Override
@@ -161,7 +155,7 @@ private PieData getData() {
                     && account.getCurrency() == mCurrency) {
 
                 double balance = mAccountsDbAdapter.getAccountsBalance(Collections.singletonList(account.getUID()),
-                        mReportStartTime, mReportEndTime).asDouble();
+                        mReportPeriodStart, mReportPeriodEnd).asDouble();
                 if (balance > 0) {
                     dataSet.addEntry(new Entry((float) balance, dataSet.getEntryCount()));
                     colors.add(mUseAccountColor && account.getColorHexCode() != null
diff --git a/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java b/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
index 33cb5037..7a9ff83c 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
@@ -45,7 +45,7 @@
 import butterknife.ButterKnife;
 
 /**
- * Fragment report as text
+ * Balance sheet report fragment
  * @author Ngewi Fet <ngewif@gmail.com>
  */
 public class BalanceSheetFragment extends BaseReportFragment {
@@ -70,11 +70,6 @@ public int getLayoutResource() {
     }
 
     @Override
-    public int getTitleColor() {
-        return R.color.account_purple;
-    }
-
-    @Override
     public int getTitle() {
         return R.string.title_balance_sheet_report;
     }
@@ -98,7 +93,6 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
 
         mEquityAccountTypes = new ArrayList<>();
         mEquityAccountTypes.add(AccountType.EQUITY);
-        refresh();
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/util/OnTransferFundsListener.java b/app/src/main/java/org/gnucash/android/ui/transaction/OnTransferFundsListener.java
similarity index 95%
rename from app/src/main/java/org/gnucash/android/ui/util/OnTransferFundsListener.java
rename to app/src/main/java/org/gnucash/android/ui/transaction/OnTransferFundsListener.java
index fb1c93d8..069b7943 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/OnTransferFundsListener.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/OnTransferFundsListener.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.util;
+package org.gnucash.android.ui.transaction;
 
 import org.gnucash.android.model.Money;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
index fba6886d..5a35d02f 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
@@ -43,8 +43,6 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import com.crashlytics.android.Crashlytics;
-
 import net.objecthunter.exp4j.Expression;
 import net.objecthunter.exp4j.ExpressionBuilder;
 
@@ -62,7 +60,6 @@
 import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.transaction.dialog.TransferFundsDialogFragment;
-import org.gnucash.android.ui.util.OnTransferFundsListener;
 import org.gnucash.android.ui.util.widget.CalculatorEditText;
 import org.gnucash.android.ui.util.widget.CalculatorKeyboard;
 import org.gnucash.android.ui.util.widget.TransactionTypeSwitch;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 624f4820..1f4fd62f 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -74,7 +74,6 @@
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
 import org.gnucash.android.ui.transaction.dialog.TransferFundsDialogFragment;
-import org.gnucash.android.ui.util.OnTransferFundsListener;
 import org.gnucash.android.ui.util.RecurrenceParser;
 import org.gnucash.android.ui.util.RecurrenceViewClickListener;
 import org.gnucash.android.ui.util.widget.CalculatorEditText;
@@ -91,7 +90,6 @@
 import java.util.Date;
 import java.util.GregorianCalendar;
 import java.util.List;
-import java.util.Locale;
 
 import butterknife.Bind;
 import butterknife.ButterKnife;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 4cf1f4a8..13bb7077 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -43,7 +43,7 @@
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.util.AmountInputFormatter;
-import org.gnucash.android.ui.util.OnTransferFundsListener;
+import org.gnucash.android.ui.transaction.OnTransferFundsListener;
 
 import java.math.BigDecimal;
 import java.math.MathContext;
diff --git a/app/src/main/res/layout/reports_toolbar.xml b/app/src/main/res/layout/reports_toolbar.xml
index 14feb0bc..594e0007 100644
--- a/app/src/main/res/layout/reports_toolbar.xml
+++ b/app/src/main/res/layout/reports_toolbar.xml
@@ -40,6 +40,7 @@
         <Spinner android:id="@+id/report_type_spinner"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
+            android:visibility="gone"
             app:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>
     </android.support.v7.widget.Toolbar>
 </FrameLayout>
\ No newline at end of file

From 1346f7a117a3cb63e17aca4f3e40e0f58ef401aa Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 2 Dec 2015 17:09:56 +0100
Subject: [PATCH 010/121] Add progress bar to all activities

Fix breaking tests
TODO: Actually use progress bar to indicate busy
---
 app/build.gradle                                   |  5 +-
 .../gnucash/android/app/GnuCashApplication.java    |  5 +-
 .../org/gnucash/android/db/MigrationHelper.java    |  2 +-
 .../android/db/adapter/SplitsDbAdapter.java        |  2 +-
 .../gnucash/android/importer/GncXmlImporter.java   |  2 +-
 .../android/ui/account/AccountsActivity.java       | 22 +++---
 .../gnucash/android/ui/budget/BudgetsActivity.java | 21 +++---
 .../android/ui/common/BaseDrawerActivity.java      | 80 ++++++++++++++++------
 .../android/ui/report/BaseReportFragment.java      |  6 +-
 .../gnucash/android/ui/report/ReportsActivity.java | 24 +++----
 .../ui/transaction/ScheduledActionsActivity.java   | 16 +++--
 .../ui/transaction/TransactionsActivity.java       | 26 ++++---
 app/src/main/res/layout/activity_accounts.xml      | 10 +--
 app/src/main/res/layout/activity_reports.xml       |  2 +-
 .../main/res/layout/activity_scheduled_events.xml  | 11 +--
 .../res/layout/activity_transaction_detail.xml     |  2 +-
 app/src/main/res/layout/activity_transactions.xml  |  2 +-
 app/src/main/res/layout/toolbar.xml                |  4 +-
 .../res/layout/toolbar_transactions_activity.xml   | 33 ---------
 ...eports_toolbar.xml => toolbar_with_spinner.xml} | 11 ++-
 app/src/main/res/values-af-rZA/strings.xml         |  2 +
 app/src/main/res/values-ar-rSA/strings.xml         |  1 +
 app/src/main/res/values-ca-rES/strings.xml         |  1 +
 app/src/main/res/values-cs-rCZ/strings.xml         |  1 +
 app/src/main/res/values-de/strings.xml             |  1 +
 app/src/main/res/values-el-rGR/strings.xml         |  1 +
 app/src/main/res/values-en-rGB/strings.xml         |  1 +
 app/src/main/res/values-es-rMX/strings.xml         |  1 +
 app/src/main/res/values-es/strings.xml             |  1 +
 app/src/main/res/values-fi-rFI/strings.xml         |  1 +
 app/src/main/res/values-fr/strings.xml             |  1 +
 app/src/main/res/values-hu-rHU/strings.xml         |  1 +
 app/src/main/res/values-it-rIT/strings.xml         |  1 +
 app/src/main/res/values-iw-rIL/strings.xml         |  1 +
 app/src/main/res/values-ja-rJP/strings.xml         |  1 +
 app/src/main/res/values-ko-rKR/strings.xml         |  1 +
 app/src/main/res/values-nb/strings.xml             |  1 +
 app/src/main/res/values-nl-rNL/strings.xml         |  1 +
 app/src/main/res/values-no-rNO/strings.xml         |  1 +
 app/src/main/res/values-pl-rPL/strings.xml         |  1 +
 app/src/main/res/values-pt-rBR/strings.xml         |  1 +
 app/src/main/res/values-pt-rPT/strings.xml         |  1 +
 app/src/main/res/values-pt/strings.xml             |  5 +-
 app/src/main/res/values-ro-rRO/strings.xml         |  1 +
 app/src/main/res/values-ru/strings.xml             |  1 +
 app/src/main/res/values-sr-rSP/strings.xml         |  1 +
 app/src/main/res/values-sv-rSE/strings.xml         |  1 +
 app/src/main/res/values-tr-rTR/strings.xml         |  1 +
 app/src/main/res/values-uk-rUA/strings.xml         |  1 +
 app/src/main/res/values-vi-rVN/strings.xml         |  1 +
 app/src/main/res/values-zh-rCN/strings.xml         |  1 +
 app/src/main/res/values-zh-rTW/strings.xml         |  1 +
 app/src/main/res/values/dimens.xml                 |  1 +
 app/src/main/res/values/strings.xml                |  3 +-
 build.gradle                                       |  2 +-
 55 files changed, 179 insertions(+), 150 deletions(-)
 delete mode 100644 app/src/main/res/layout/toolbar_transactions_activity.xml
 rename app/src/main/res/layout/{reports_toolbar.xml => toolbar_with_spinner.xml} (85%)

diff --git a/app/build.gradle b/app/build.gradle
index ddb9e6e5..3e469977 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -80,7 +80,8 @@ android {
 
     buildTypes {
         release {
-            minifyEnabled false
+            minifyEnabled true
+            shrinkResources true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
             if (project.hasProperty("RELEASE_STORE_FILE")){
                 signingConfig signingConfigs.release
@@ -90,7 +91,7 @@ android {
         }
         debug {
             debuggable true
-//            testCoverageEnabled true
+            testCoverageEnabled true
             signingConfig signingConfigs.debug
         }
     }
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index de297b71..bc04f7f4 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -112,8 +112,9 @@ public void onCreate(){
         super.onCreate();
         GnuCashApplication.context = getApplicationContext();
 
-        if (isCrashlyticsEnabled())
-            Fabric.with(this, new Crashlytics());
+        Fabric.with(this, new Crashlytics.Builder().core(
+                new CrashlyticsCore.Builder().disabled(!isCrashlyticsEnabled()).build())
+                .build());
 
         // Set this up once when your application launches
         Config config = new Config("gnucash.uservoice.com");
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index d9462664..9befedbc 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -1346,7 +1346,7 @@ static int upgradeDbToVersion12(SQLiteDatabase db){
             //// FIXME: 22.11.15 Cannot add a column with non-constant default. Create new structure and migrate whole table
             db.execSQL(" ALTER TABLE " + SplitEntry.TABLE_NAME
                     + " ADD COLUMN " + SplitEntry.COLUMN_RECONCILE_DATE + " timestamp not null default '' ");
-
+            //TODO Update just added reconcile column with the current date
             db.setTransactionSuccessful();
             oldVersion = 12;
         } finally {
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
index 5a0f2b6c..55810b1d 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
@@ -150,7 +150,7 @@ public Split buildModelInstance(@NonNull final Cursor cursor){
         split.setType(TransactionType.valueOf(typeName));
         split.setMemo(memo);
         split.setReconcileState(reconcileState.charAt(0));
-        if (reconcileDate != null)
+        if (reconcileDate != null && !reconcileDate.isEmpty())
             split.setReconcileDate(Timestamp.valueOf(reconcileDate));
 
         return split;
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
index eb9eea9a..12b4946e 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
@@ -21,7 +21,7 @@
 import android.util.Log;
 
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.Exporter;
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 176d30fb..69d00d16 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -35,6 +35,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
+import android.support.design.widget.AppBarLayout;
 import android.support.design.widget.CoordinatorLayout;
 import android.support.design.widget.FloatingActionButton;
 import android.support.design.widget.Snackbar;
@@ -213,16 +214,19 @@ public AccountsListFragment getCurrentAccountListFragment(){
         return (AccountsListFragment)(mFragmentPageReferenceMap.get(index));
     }
 
+    @Override
+    public int getContentView() {
+        return R.layout.activity_accounts;
+    }
 
-	@Override
+    @Override
+    public int getTitleRes() {
+        return R.string.title_accounts;
+    }
+
+    @Override
 	public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_accounts);
-        setUpDrawer();
-        ButterKnife.bind(this);
-
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
 
         final Intent intent = getIntent();
         handleOpenFileIntent(intent);
@@ -490,10 +494,10 @@ public void onTaskComplete() {
 
     /**
      * Starts Intent chooser for selecting a GnuCash accounts file to import.
-     * <p>The {@code activity} is responsible for the actual import of the file and can do so by calling {@link #importXmlFileFromIntent(Activity, Intent)}<br>
+     * <p>The {@code activity} is responsible for the actual import of the file and can do so by calling {@link #importXmlFileFromIntent(Activity, Intent, TaskDelegate)}<br>
      * The calling class should respond to the request code {@link AccountsActivity#REQUEST_PICK_ACCOUNTS_FILE} in its {@link #onActivityResult(int, int, Intent)} method</p>
      * @param activity Activity starting the request and will also handle the response
-     * @see #importXmlFileFromIntent(Activity, Intent)
+     * @see #importXmlFileFromIntent(Activity, Intent, TaskDelegate)
      */
     public static void startXmlFileChooser(Activity activity) {
         Intent pickIntent = new Intent(Intent.ACTION_GET_CONTENT);
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java
index 7edd4110..ca4fa4da 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java
@@ -39,19 +39,18 @@
     public static final int REQUEST_CREATE_BUDGET = 0xA;
 
     @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_budgets);
-        setUpDrawer();
-        ButterKnife.bind(this);
+    public int getContentView() {
+        return R.layout.activity_budgets;
+    }
 
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
+    @Override
+    public int getTitleRes() {
+        return R.string.title_budgets;
+    }
 
-        final ActionBar actionBar = getSupportActionBar();
-        assert actionBar != null;
-        actionBar.setTitle("Budgets");
-        actionBar.setDisplayHomeAsUpEnabled(true);
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
 
         if (savedInstanceState == null) {
             FragmentManager fragmentManager = getSupportFragmentManager();
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 47d386bf..1e90f7f5 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -21,12 +21,17 @@
 import android.content.res.Configuration;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
+import android.support.annotation.LayoutRes;
+import android.support.annotation.StringRes;
+import android.support.design.widget.AppBarLayout;
 import android.support.design.widget.NavigationView;
 import android.support.v4.widget.DrawerLayout;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.widget.Toolbar;
 import android.view.MenuItem;
 import android.view.View;
+import android.widget.ProgressBar;
 
 import com.uservoice.uservoicesdk.UserVoice;
 
@@ -38,24 +43,37 @@
 import org.gnucash.android.ui.settings.SettingsActivity;
 import org.gnucash.android.ui.transaction.ScheduledActionsActivity;
 
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
 
 /**
  * Base activity implementing the navigation drawer, to be extended by all activities requiring one.
+ * <p>
+ *     Each activity inheriting from this class has an indeterminate progress bar at the top,
+ *     (above the action bar) which can be used to display busy operations. See {@link #getProgressBar()}
+ * </p>
  *
- * All subclasses should call the {@link #setUpDrawer()} method in {@link #onCreate(Bundle)},
- * after the activity layout has been set.
- *
+ * <p>Sub-classes should simply provide their layout using {@link #getContentView()} and then annotate
+ * any variables they wish to use with {@link ButterKnife#bind(Activity)} annotations. The view
+ * binding will be done in this base abstract class.<br>
  * The activity layout of the subclass is expected to contain {@code DrawerLayout} and
- * a {@code NavigationView}.
- *
+ * a {@code NavigationView}.<br>
+ * Sub-class should also consider using the {@code toolbar.xml} or {@code toolbar_with_spinner.xml}
+ * for the action bar in their XML layout. Otherwise provide another which contains widgets for the
+ * toolbar and progress indicator with the IDs {@code R.id.toolbar} and {@code R.id.progress_indicator} respectively.
+ * </p>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class BaseDrawerActivity extends PasscodeLockActivity {
-    protected DrawerLayout  mDrawerLayout;
-    protected NavigationView mNavigationView;
+public abstract class BaseDrawerActivity extends PasscodeLockActivity {
+    @Bind(R.id.drawer_layout) DrawerLayout mDrawerLayout;
+    @Bind(R.id.nav_view) NavigationView mNavigationView;
+    @Bind(R.id.toolbar) Toolbar mToolbar;
+    @Bind(R.id.toolbar_progress) ProgressBar mToolbarProgress;
 
     protected ActionBarDrawerToggle mDrawerToggle;
 
+
     private class DrawerItemClickListener implements NavigationView.OnNavigationItemSelectedListener {
 
         @Override
@@ -69,26 +87,48 @@ public boolean onNavigationItemSelected(MenuItem menuItem) {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-    }
+        setContentView(getContentView());
 
-    /**
-     * Sets up the navigation drawer for this activity.
-     *
-     * This should be called from the activity's
-     * {@link Activity#onCreate(Bundle)} method after calling
-     * {@link Activity#setContentView(int)}.
-     *
-     */
-    protected void setUpDrawer() {
+        ButterKnife.bind(this);
+        setSupportActionBar(mToolbar);
         final ActionBar actionBar = getSupportActionBar();
         if (actionBar != null){
             actionBar.setHomeButtonEnabled(true);
             actionBar.setDisplayHomeAsUpEnabled(true);
+            actionBar.setTitle(getTitleRes());
         }
 
-        mDrawerLayout   = (DrawerLayout) findViewById(R.id.drawer_layout);
-        mNavigationView = (NavigationView) findViewById(R.id.nav_view);
+        setUpNavigationDrawer();
+    }
+
+    /**
+     * Return the layout to inflate for this activity
+     * @return Layout resource identifier
+     */
+    public abstract @LayoutRes int getContentView();
+
+    /**
+     * Return the title for this activity.
+     * This will be displayed in the action bar
+     * @return String resource identifier
+     */
+    public abstract @StringRes int getTitleRes();
 
+    /**
+     * Returns the progress bar for the activity.
+     * <p>This progress bar is displayed above the toolbar and should be used to show busy status
+     * for long operations.<br/>
+     * The progress bar visibility is set to {@link View#GONE} by default. Make visible to use </p>
+     * @return Indeterminate progress bar.
+     */
+    public ProgressBar getProgressBar(){
+        return mToolbarProgress;
+    }
+
+    /**
+     * Sets up the navigation drawer for this activity.
+     */
+    private void setUpNavigationDrawer() {
         mNavigationView.setNavigationItemSelectedListener(new DrawerItemClickListener());
 
         mDrawerToggle = new ActionBarDrawerToggle(
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
index 9399e325..5eae669b 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
@@ -276,12 +276,10 @@ public void refresh() {
             mReportGenerator.cancel(true);
 
         mReportGenerator = new AsyncTask<Void, Void, Void>() {
-            ProgressBar progressBar;
 
             @Override
             protected void onPreExecute() {
-                progressBar = (ProgressBar) getActivity().findViewById(R.id.progress_indicator);
-                progressBar.setVisibility(View.VISIBLE);
+                mReportsActivity.getProgressBar().setVisibility(View.VISIBLE);
             }
 
             @Override
@@ -293,7 +291,7 @@ protected Void doInBackground(Void... params) {
             @Override
             protected void onPostExecute(Void aVoid) {
                 displayReport();
-                progressBar.setVisibility(View.GONE);
+                mReportsActivity.getProgressBar().setVisibility(View.GONE);
             }
         };
         mReportGenerator.execute();
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index 61ce3228..90212622 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -77,7 +77,7 @@
 
     @Bind(R.id.time_range_spinner) Spinner mTimeRangeSpinner;
     @Bind(R.id.report_account_type_spinner) Spinner mAccountTypeSpinner;
-    @Bind(R.id.report_type_spinner) Spinner mReportTypeSpinner;
+    @Bind(R.id.toolbar_spinner) Spinner mReportTypeSpinner;
 
     private TransactionsDbAdapter mTransactionsDbAdapter;
     private AccountType mAccountType = AccountType.EXPENSE;
@@ -112,23 +112,21 @@ public void onNothingSelected(AdapterView<?> parent) {
     };
 
     @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_reports);
-        setUpDrawer();
-        ButterKnife.bind(this);
+    public int getContentView() {
+        return R.layout.activity_reports;
+    }
 
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
+    @Override
+    public int getTitleRes() {
+        return R.string.title_reports;
+    }
 
-        ActionBar actionBar = getSupportActionBar();
-        assert actionBar != null;
-        actionBar.setTitle(R.string.title_reports);
-        actionBar.setDisplayHomeAsUpEnabled(true);
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
 
         mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 
-
         ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this, R.array.report_time_range,
                 android.R.layout.simple_spinner_item);
         adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
index 594228dc..87af8636 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
@@ -40,14 +40,18 @@
     ViewPager mViewPager;
 
     @Override
+    public int getContentView() {
+        return R.layout.activity_scheduled_events;
+    }
+
+    @Override
+    public int getTitleRes() {
+        return R.string.nav_menu_scheduled_actions;
+    }
+
+    @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_scheduled_events);
-        setUpDrawer();
-
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
-        getSupportActionBar().setTitle(R.string.nav_menu_scheduled_actions);
 
         TabLayout tabLayout = (TabLayout) findViewById(R.id.tab_layout);
         tabLayout.addTab(tabLayout.newTab().setText(R.string.title_scheduled_transactions));
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
index c5dd7ab3..fa353fb3 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -25,6 +25,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
+import android.support.design.widget.AppBarLayout;
 import android.support.design.widget.FloatingActionButton;
 import android.support.design.widget.TabLayout;
 import android.support.v4.app.Fragment;
@@ -64,7 +65,6 @@
 import org.joda.time.LocalDate;
 
 import java.math.BigDecimal;
-import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.Date;
 
@@ -114,9 +114,9 @@
      */
     private Cursor mAccountsCursor = null;
 
-    @Bind(R.id.pager) ViewPager mViewPager;
-    @Bind(R.id.spinner_toolbar) Spinner mToolbarSpinner;
-    @Bind(R.id.tab_layout) TabLayout mTabLayout;
+    @Bind(R.id.pager)            ViewPager mViewPager;
+    @Bind(R.id.toolbar_spinner)  Spinner mToolbarSpinner;
+    @Bind(R.id.tab_layout)       TabLayout mTabLayout;
     @Bind(R.id.transactions_sum) TextView mSumTextView;
     @Bind(R.id.fab_create_transaction) FloatingActionButton mCreateFloatingButton;
 
@@ -273,18 +273,22 @@ public void refresh(){
         setTitleIndicatorColor();
     }
 
-	@Override
+    @Override
+    public int getContentView() {
+        return R.layout.activity_transactions;
+    }
+
+    @Override
+    public int getTitleRes() {
+        return R.string.title_transactions;
+    }
+
+    @Override
 	protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_transactions);
-        setUpDrawer();
 
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayShowTitleEnabled(false);
 
-        ButterKnife.bind(this);
-
 		mAccountUID = getIntent().getStringExtra(UxArgument.SELECTED_ACCOUNT_UID);
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
diff --git a/app/src/main/res/layout/activity_accounts.xml b/app/src/main/res/layout/activity_accounts.xml
index 96bd30ba..20ea2521 100644
--- a/app/src/main/res/layout/activity_accounts.xml
+++ b/app/src/main/res/layout/activity_accounts.xml
@@ -32,15 +32,7 @@
                   android:layout_width="match_parent"
                   android:layout_height="wrap_content">
 
-        <android.support.v7.widget.Toolbar
-            android:id="@+id/toolbar"
-            android:background="?attr/colorPrimary"
-            android:layout_width="match_parent"
-            android:layout_height="?attr/actionBarSize"
-            app:elevation="0dp"
-            app:layout_scrollFlags="scroll|enterAlways"
-            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-            app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
+        <include layout="@layout/toolbar" />
 
         <android.support.design.widget.TabLayout
             android:id="@+id/tab_layout"
diff --git a/app/src/main/res/layout/activity_reports.xml b/app/src/main/res/layout/activity_reports.xml
index 32cb53d5..628c334f 100644
--- a/app/src/main/res/layout/activity_reports.xml
+++ b/app/src/main/res/layout/activity_reports.xml
@@ -37,7 +37,7 @@
                 android:gravity="center_vertical">
 
                 <include android:id="@+id/toolbar_layout"
-                    layout="@layout/reports_toolbar" />
+                    layout="@layout/toolbar_with_spinner" />
 
                 <FrameLayout android:id="@+id/fragment_container"
                     android:orientation="vertical"
diff --git a/app/src/main/res/layout/activity_scheduled_events.xml b/app/src/main/res/layout/activity_scheduled_events.xml
index 6c7c3db6..5e202e52 100644
--- a/app/src/main/res/layout/activity_scheduled_events.xml
+++ b/app/src/main/res/layout/activity_scheduled_events.xml
@@ -32,16 +32,7 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content">
 
-            <android.support.v7.widget.Toolbar
-                android:id="@+id/toolbar"
-                android:background="?attr/colorPrimary"
-                android:layout_width="match_parent"
-                android:layout_height="?attr/actionBarSize"
-                app:elevation="0dp"
-                app:layout_scrollFlags="scroll|enterAlways"
-                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-                app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
-
+            <include layout="@layout/toolbar" />
             <android.support.design.widget.TabLayout
                 android:id="@+id/tab_layout"
                 android:layout_width="match_parent"
diff --git a/app/src/main/res/layout/activity_transaction_detail.xml b/app/src/main/res/layout/activity_transaction_detail.xml
index f04f239a..9a8f3b8f 100644
--- a/app/src/main/res/layout/activity_transaction_detail.xml
+++ b/app/src/main/res/layout/activity_transaction_detail.xml
@@ -26,7 +26,7 @@
         android:id="@+id/fab_edit_transaction"
         android:layout_height="40dp"
         android:layout_width="40dp"
-        app:layout_anchor="@id/toolbar"
+        app:layout_anchor="@+id/toolbar"
         app:layout_anchorGravity="bottom|left|start"
         android:layout_marginLeft="8dp"
         android:scaleType="center"
diff --git a/app/src/main/res/layout/activity_transactions.xml b/app/src/main/res/layout/activity_transactions.xml
index 4893f3a8..9127d481 100644
--- a/app/src/main/res/layout/activity_transactions.xml
+++ b/app/src/main/res/layout/activity_transactions.xml
@@ -33,7 +33,7 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content">
 
-            <include layout="@layout/toolbar_transactions_activity" />
+            <include layout="@layout/toolbar_with_spinner" />
 
             <android.support.design.widget.TabLayout
                 android:id="@+id/tab_layout"
diff --git a/app/src/main/res/layout/toolbar.xml b/app/src/main/res/layout/toolbar.xml
index e755d5cc..35aa3610 100644
--- a/app/src/main/res/layout/toolbar.xml
+++ b/app/src/main/res/layout/toolbar.xml
@@ -21,9 +21,9 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content">
 
-    <ProgressBar android:id="@+id/progress_indicator"
+    <ProgressBar android:id="@+id/toolbar_progress"
         android:layout_width="match_parent"
-        android:layout_height="5dp"
+        android:layout_height="@dimen/toolbar_progress_height"
         style="?android:attr/progressBarStyleHorizontal"
         android:indeterminate="true"
         android:visibility="visible"/>
diff --git a/app/src/main/res/layout/toolbar_transactions_activity.xml b/app/src/main/res/layout/toolbar_transactions_activity.xml
deleted file mode 100644
index 2f6d7745..00000000
--- a/app/src/main/res/layout/toolbar_transactions_activity.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
-
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<android.support.v7.widget.Toolbar
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/toolbar"
-    android:background="?attr/colorPrimary"
-    android:layout_width="match_parent"
-    app:elevation="10dp"
-    app:layout_scrollFlags="scroll|enterAlways"
-    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-    app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
-    android:layout_height="?attr/actionBarSize">
-    <Spinner
-        android:id="@+id/spinner_toolbar"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>
-</android.support.v7.widget.Toolbar>
\ No newline at end of file
diff --git a/app/src/main/res/layout/reports_toolbar.xml b/app/src/main/res/layout/toolbar_with_spinner.xml
similarity index 85%
rename from app/src/main/res/layout/reports_toolbar.xml
rename to app/src/main/res/layout/toolbar_with_spinner.xml
index 594e0007..3911fed8 100644
--- a/app/src/main/res/layout/reports_toolbar.xml
+++ b/app/src/main/res/layout/toolbar_with_spinner.xml
@@ -20,12 +20,12 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content">
 
-    <ProgressBar android:id="@+id/progress_indicator"
+    <ProgressBar android:id="@+id/toolbar_progress"
         android:layout_width="match_parent"
-        android:layout_height="5dp"
+        android:layout_height="@dimen/toolbar_progress_height"
         style="?android:attr/progressBarStyleHorizontal"
         android:indeterminate="true"
-        android:visibility="visible"/>
+        android:visibility="gone"/>
 
     <android.support.v7.widget.Toolbar
         android:id="@+id/toolbar"
@@ -33,14 +33,13 @@
         android:layout_width="match_parent"
         android:layout_height="?attr/actionBarSize"
         app:elevation="10dp"
-        app:layout_scrollFlags="enterAlways"
+        app:layout_scrollFlags="scroll|enterAlways"
         android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
         app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
         tools:showIn="@layout/activity_form">
-        <Spinner android:id="@+id/report_type_spinner"
+        <Spinner android:id="@+id/toolbar_spinner"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:visibility="gone"
             app:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>
     </android.support.v7.widget.Toolbar>
 </FrameLayout>
\ No newline at end of file
diff --git a/app/src/main/res/values-af-rZA/strings.xml b/app/src/main/res/values-af-rZA/strings.xml
index fb29721c..9e5deb39 100644
--- a/app/src/main/res/values-af-rZA/strings.xml
+++ b/app/src/main/res/values-af-rZA/strings.xml
@@ -64,6 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>Owncloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
@@ -387,6 +388,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ar-rSA/strings.xml b/app/src/main/res/values-ar-rSA/strings.xml
index 83c0b643..3289e894 100644
--- a/app/src/main/res/values-ar-rSA/strings.xml
+++ b/app/src/main/res/values-ar-rSA/strings.xml
@@ -407,6 +407,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ca-rES/strings.xml b/app/src/main/res/values-ca-rES/strings.xml
index f0bf139e..4e1034c6 100644
--- a/app/src/main/res/values-ca-rES/strings.xml
+++ b/app/src/main/res/values-ca-rES/strings.xml
@@ -387,6 +387,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltims 3 mesos</item>
diff --git a/app/src/main/res/values-cs-rCZ/strings.xml b/app/src/main/res/values-cs-rCZ/strings.xml
index 628d40d9..25849555 100644
--- a/app/src/main/res/values-cs-rCZ/strings.xml
+++ b/app/src/main/res/values-cs-rCZ/strings.xml
@@ -392,6 +392,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index d2a8e8de..77782e97 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -384,6 +384,7 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="menu_duplicate_transaction">Kopieren</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Aktueller Monat</item>
     <item>Letzte 3 Monate</item>
diff --git a/app/src/main/res/values-el-rGR/strings.xml b/app/src/main/res/values-el-rGR/strings.xml
index bcc1fac1..4722dc37 100644
--- a/app/src/main/res/values-el-rGR/strings.xml
+++ b/app/src/main/res/values-el-rGR/strings.xml
@@ -398,6 +398,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-en-rGB/strings.xml b/app/src/main/res/values-en-rGB/strings.xml
index 4a500736..833100e2 100644
--- a/app/src/main/res/values-en-rGB/strings.xml
+++ b/app/src/main/res/values-en-rGB/strings.xml
@@ -387,6 +387,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index 7f2430b6..4f872564 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -384,6 +384,7 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index e62f74b4..a7d83913 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -384,6 +384,7 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="menu_duplicate_transaction">Duplicar</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-fi-rFI/strings.xml b/app/src/main/res/values-fi-rFI/strings.xml
index fb29721c..be04b6ec 100644
--- a/app/src/main/res/values-fi-rFI/strings.xml
+++ b/app/src/main/res/values-fi-rFI/strings.xml
@@ -387,6 +387,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 186a9e0d..0fa6d660 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -384,6 +384,7 @@ Aucune information permettant d\'identifier l\'utilisateur ne sera recueillis da
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Mois actuel</item>
     <item>3 derniers mois</item>
diff --git a/app/src/main/res/values-hu-rHU/strings.xml b/app/src/main/res/values-hu-rHU/strings.xml
index a0432fba..85d26ee6 100644
--- a/app/src/main/res/values-hu-rHU/strings.xml
+++ b/app/src/main/res/values-hu-rHU/strings.xml
@@ -389,6 +389,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index 8c1b1f07..9bab2381 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -388,6 +388,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Mese corrente</item>
     <item>Ultimi 3 mesi</item>
diff --git a/app/src/main/res/values-iw-rIL/strings.xml b/app/src/main/res/values-iw-rIL/strings.xml
index fb29721c..be04b6ec 100644
--- a/app/src/main/res/values-iw-rIL/strings.xml
+++ b/app/src/main/res/values-iw-rIL/strings.xml
@@ -387,6 +387,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index fc5c2b74..2c4d6809 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -382,6 +382,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index b60fa85a..3e5caf59 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -382,6 +382,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index b32573bd..056fdddd 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -377,6 +377,7 @@
   <string name="menu_move_transaction">Move...</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
diff --git a/app/src/main/res/values-nl-rNL/strings.xml b/app/src/main/res/values-nl-rNL/strings.xml
index 0e54fdec..f5cc4a3f 100644
--- a/app/src/main/res/values-nl-rNL/strings.xml
+++ b/app/src/main/res/values-nl-rNL/strings.xml
@@ -388,6 +388,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Huidige maand</item>
     <item>Afgelopen 3 maanden</item>
diff --git a/app/src/main/res/values-no-rNO/strings.xml b/app/src/main/res/values-no-rNO/strings.xml
index e8842bdf..f04c288e 100644
--- a/app/src/main/res/values-no-rNO/strings.xml
+++ b/app/src/main/res/values-no-rNO/strings.xml
@@ -378,6 +378,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
diff --git a/app/src/main/res/values-pl-rPL/strings.xml b/app/src/main/res/values-pl-rPL/strings.xml
index 3b1a0e77..64236ed2 100644
--- a/app/src/main/res/values-pl-rPL/strings.xml
+++ b/app/src/main/res/values-pl-rPL/strings.xml
@@ -385,6 +385,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Biecy miesic</item>
     <item>Ostatnie 3 miesice</item>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 121db8ac..d315f02a 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -382,6 +382,7 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Ms atual</item>
     <item>Last 3 meses</item>
diff --git a/app/src/main/res/values-pt-rPT/strings.xml b/app/src/main/res/values-pt-rPT/strings.xml
index ee7cd6f1..27fbf395 100644
--- a/app/src/main/res/values-pt-rPT/strings.xml
+++ b/app/src/main/res/values-pt-rPT/strings.xml
@@ -382,6 +382,7 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Ms actual</item>
     <item>ltimos 3 meses</item>
diff --git a/app/src/main/res/values-pt/strings.xml b/app/src/main/res/values-pt/strings.xml
index c2d382bf..1cf82dba 100644
--- a/app/src/main/res/values-pt/strings.xml
+++ b/app/src/main/res/values-pt/strings.xml
@@ -376,10 +376,6 @@
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
     <string name="color_picker_default_title">Escolha uma c&#244;r</string>
-    <!-- Content description for a color square. -->
-    <string name="color_swatch_description" translatable="false">C&#244;r <xliff:g id="color_index" example="14">%1$d</xliff:g></string>
-    <!-- Content description for a selected color square. -->
-    <string name="color_swatch_description_selected" translatable="false">C&#244;r <xliff:g id="color_index" example="14">%1$d</xliff:g> selected</string>
     <string name="label_account_color_and_type">C&#244;r da Conta &amp; Tipo</string>
     <string name="label_delete_sub_accounts">Apagar sub-contas</string>
     <string name="title_recent_accounts">Recentes</string>
@@ -503,4 +499,5 @@ Neste processo n&#227;o ser&#227;o recolhidas informa&#231;&#245;es do utilizado
     <string name="title_create_export_schedule">Criar uma exporta&#231;&#227;o agendada</string>
     <string name="toast_exported_to">Exportado para : %1$s</string>
     <string name="title_cash_flow_report">Cash Flow</string>
+    <string name="title_budgets">Budgets</string>
 </resources>
diff --git a/app/src/main/res/values-ro-rRO/strings.xml b/app/src/main/res/values-ro-rRO/strings.xml
index e0ba9542..537511d1 100644
--- a/app/src/main/res/values-ro-rRO/strings.xml
+++ b/app/src/main/res/values-ro-rRO/strings.xml
@@ -392,6 +392,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index e55a0c18..027b2282 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -390,6 +390,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
diff --git a/app/src/main/res/values-sr-rSP/strings.xml b/app/src/main/res/values-sr-rSP/strings.xml
index 314cb68f..bb3fd51e 100644
--- a/app/src/main/res/values-sr-rSP/strings.xml
+++ b/app/src/main/res/values-sr-rSP/strings.xml
@@ -392,6 +392,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-sv-rSE/strings.xml b/app/src/main/res/values-sv-rSE/strings.xml
index fb29721c..be04b6ec 100644
--- a/app/src/main/res/values-sv-rSE/strings.xml
+++ b/app/src/main/res/values-sv-rSE/strings.xml
@@ -387,6 +387,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-tr-rTR/strings.xml b/app/src/main/res/values-tr-rTR/strings.xml
index 01abdf06..46745ae1 100644
--- a/app/src/main/res/values-tr-rTR/strings.xml
+++ b/app/src/main/res/values-tr-rTR/strings.xml
@@ -387,6 +387,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-uk-rUA/strings.xml b/app/src/main/res/values-uk-rUA/strings.xml
index 1cd55814..eb875888 100644
--- a/app/src/main/res/values-uk-rUA/strings.xml
+++ b/app/src/main/res/values-uk-rUA/strings.xml
@@ -388,6 +388,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
diff --git a/app/src/main/res/values-vi-rVN/strings.xml b/app/src/main/res/values-vi-rVN/strings.xml
index b60fa85a..3e5caf59 100644
--- a/app/src/main/res/values-vi-rVN/strings.xml
+++ b/app/src/main/res/values-vi-rVN/strings.xml
@@ -382,6 +382,7 @@
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index 3d9283af..ca94540b 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -377,6 +377,7 @@
   <string name="menu_duplicate_transaction"></string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item></item>
     <item>3</item>
diff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml
index e44bdd5e..c8ec5e87 100644
--- a/app/src/main/res/values-zh-rTW/strings.xml
+++ b/app/src/main/res/values-zh-rTW/strings.xml
@@ -379,6 +379,7 @@ No user-identifiable information will be collected as part of this process!
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
index f3d43379..ec96a25c 100644
--- a/app/src/main/res/values/dimens.xml
+++ b/app/src/main/res/values/dimens.xml
@@ -32,4 +32,5 @@
     <dimen name="color_swatch_margins_large">8dip</dimen>
     <dimen name="color_swatch_margins_small">4dip</dimen>
     <dimen name="card_min_height">80dp</dimen>
+    <dimen name="toolbar_progress_height">2dp</dimen>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index c4e84e74..4e08ecc1 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -65,7 +65,7 @@
         <item>SD Card</item>
         <item>DropBox</item>
         <item>Google Drive</item>
-        <item>Owncloud</item>
+        <item>OwnCloud</item>
         <item>Send to&#8230;</item>
     </string-array>
     <string name="btn_move">Move</string>
@@ -407,6 +407,7 @@
     <string name="menu_duplicate_transaction">Duplicate</string>
     <string name="nav_menu_budgets">Budgets</string>
     <string name="title_cash_flow_report">Cash Flow</string>
+    <string name="title_budgets">Budgets</string>
     <string-array name="report_time_range">
         <item>Current month</item>
         <item>Last 3 months</item>
diff --git a/build.gradle b/build.gradle
index 87976eb1..e9299274 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
 		jcenter()
 	}
 	dependencies {
-		classpath 'com.android.tools.build:gradle:2.0.0-alpha1'
+		classpath 'com.android.tools.build:gradle:2.0.0-alpha2'
 		classpath 'io.fabric.tools:gradle:1.+'
 	}
 }

From 926d807598f765f2e51c1d773e4c5ed4f9f4a048 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 4 Dec 2015 10:20:50 +0100
Subject: [PATCH 011/121] Start support for multiple books

---
 app/build.gradle                                   |  10 +-
 app/proguard-project.txt                           |   2 +-
 app/proguard-rules.pro                             |  12 ++
 .../gnucash/android/app/GnuCashApplication.java    |  62 +++++--
 .../java/org/gnucash/android/db/BookDbHelper.java  | 121 +++++++++++++
 .../org/gnucash/android/db/DatabaseHelper.java     |  12 +-
 .../org/gnucash/android/db/DatabaseSchema.java     |  33 +++-
 .../org/gnucash/android/db/MigrationHelper.java    |  58 ++++++-
 .../gnucash/android/db/adapter/BooksDbAdapter.java | 193 +++++++++++++++++++++
 .../android/db/adapter/BudgetsDbAdapter.java       |   7 +-
 .../db/adapter/ScheduledActionDbAdapter.java       |   4 +-
 .../java/org/gnucash/android/export/Exporter.java  |   7 +-
 .../gnucash/android/importer/GncXmlHandler.java    |  16 +-
 .../gnucash/android/importer/GncXmlImporter.java   |   5 +-
 .../main/java/org/gnucash/android/model/Book.java  | 127 ++++++++++++++
 .../android/ui/common/BaseDrawerActivity.java      |  59 ++++++-
 .../android/ui/util/widget/CalculatorEditText.java |  15 +-
 .../ic_arrow_drop_down_white_24dp.png              | Bin 0 -> 123 bytes
 app/src/main/res/drawable-hdpi/ic_nav_header.png   | Bin 0 -> 4830 bytes
 .../ic_arrow_drop_down_white_24dp.png              | Bin 0 -> 95 bytes
 app/src/main/res/drawable-mdpi/ic_nav_header.png   | Bin 0 -> 4830 bytes
 .../ic_arrow_drop_down_white_24dp.png              | Bin 0 -> 120 bytes
 app/src/main/res/drawable-xhdpi/ic_nav_header.png  | Bin 0 -> 8310 bytes
 .../ic_arrow_drop_down_white_24dp.png              | Bin 0 -> 152 bytes
 app/src/main/res/drawable-xxhdpi/ic_nav_header.png | Bin 0 -> 18667 bytes
 .../ic_arrow_drop_down_white_24dp.png              | Bin 0 -> 185 bytes
 .../res/layout/actionbar_progress_indicator.xml    |  29 ++++
 app/src/main/res/layout/nav_drawer_header.xml      |  13 +-
 app/src/main/res/layout/toolbar.xml                |   7 +-
 app/src/main/res/layout/toolbar_with_spinner.xml   |   7 +-
 app/src/main/res/values/dimens.xml                 |   2 +-
 31 files changed, 726 insertions(+), 75 deletions(-)
 create mode 100644 app/proguard-rules.pro
 create mode 100644 app/src/main/java/org/gnucash/android/db/BookDbHelper.java
 create mode 100644 app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
 create mode 100644 app/src/main/java/org/gnucash/android/model/Book.java
 create mode 100644 app/src/main/res/drawable-hdpi/ic_arrow_drop_down_white_24dp.png
 create mode 100644 app/src/main/res/drawable-hdpi/ic_nav_header.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_arrow_drop_down_white_24dp.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_nav_header.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_arrow_drop_down_white_24dp.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_nav_header.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_arrow_drop_down_white_24dp.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_nav_header.png
 create mode 100644 app/src/main/res/drawable-xxxhdpi/ic_arrow_drop_down_white_24dp.png
 create mode 100644 app/src/main/res/layout/actionbar_progress_indicator.xml

diff --git a/app/build.gradle b/app/build.gradle
index 3e469977..fafb1331 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -81,8 +81,8 @@ android {
     buildTypes {
         release {
             minifyEnabled true
-            shrinkResources true
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+//            shrinkResources true
+//            proguardFiles getDefaultProguardFile('proguard-android.txt'), proguard-rules.pro
             if (project.hasProperty("RELEASE_STORE_FILE")){
                 signingConfig signingConfigs.release
             } else {
@@ -121,7 +121,7 @@ android {
 
     }
 
-    
+
     compileOptions { //we want switch with strings during xml parsing
         encoding "UTF-8"
         sourceCompatibility JavaVersion.VERSION_1_7
@@ -148,7 +148,7 @@ def adb = android.getAdbExe().toString()
 
 afterEvaluate {
     initCrashlyticsPropertiesIfNeeded()
-    
+
     task grantTestPermissionsDevel(type: Exec, dependsOn: 'installDevelopmentDebug') { // or install{productFlavour}{buildType}
         commandLine "$adb", 'devices'
         standardOutput = new ByteArrayOutputStream()
@@ -178,7 +178,7 @@ afterEvaluate {
     }
 }
 
-def androidSupportVersion       = "23.1.0"
+def androidSupportVersion       = "23.1.1"
 def androidEspressoVersion      = "2.2.1"
 def androidSupportTestVersion   = "0.4.1"
 
diff --git a/app/proguard-project.txt b/app/proguard-project.txt
index c5f28521..c4a987c8 100644
--- a/app/proguard-project.txt
+++ b/app/proguard-project.txt
@@ -36,4 +36,4 @@
 
 -keepnames class * implements android.os.Parcelable {
     public static final ** CREATOR;
-}
\ No newline at end of file
+}
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
new file mode 100644
index 00000000..57520016
--- /dev/null
+++ b/app/proguard-rules.pro
@@ -0,0 +1,12 @@
+-dontwarn android.support.**
+-keep class butterknife.** { *; }
+-dontwarn butterknife.internal.**
+-keep class **$$ViewBinder { *; }
+
+-keepclasseswithmembernames class * {
+    @butterknife.* <fields>;
+}
+
+-keepclasseswithmembernames class * {
+    @butterknife.* <methods>;
+}
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index bc04f7f4..d6c697f9 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -36,8 +36,10 @@
 
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.R;
+import org.gnucash.android.db.BookDbHelper;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;
 import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
@@ -74,10 +76,6 @@
 
     private static Context context;
 
-    private static DatabaseHelper mDbHelper;
-
-    private static SQLiteDatabase mDb;
-
     private static AccountsDbAdapter mAccountsDbAdapter;
 
     private static TransactionsDbAdapter mTransactionsDbAdapter;
@@ -96,6 +94,8 @@
 
     private static RecurrenceDbAdapter mRecurrenceDbAdapter;
 
+    private static BooksDbAdapter mBooksDbAdapter;
+
     /**
      * Returns darker version of specified <code>color</code>.
      * Use for theming the status bar color when setting the color of the actionBar
@@ -126,25 +126,40 @@ public void onCreate(){
         // config.identifyUser("USER_ID", "User Name", "email@example.com");
         UserVoice.init(config, this);
 
-        mDbHelper = new DatabaseHelper(getApplicationContext());
+
+        BookDbHelper bookDbHelper = new BookDbHelper(getApplicationContext());
+        mBooksDbAdapter = new BooksDbAdapter(bookDbHelper.getWritableDatabase());
+
+        initDatabaseAdapters();
+
+        setDefaultCurrencyCode(getDefaultCurrencyCode());
+    }
+
+    /**
+     * Initialize database adapter singletons for use in the application
+     * This method should be called every time a new book is opened
+     */
+    private void initDatabaseAdapters() {
+        DatabaseHelper mDbHelper = new DatabaseHelper(getApplicationContext(),
+                mBooksDbAdapter.getActiveBookUID());
+        SQLiteDatabase mainDb;
         try {
-            mDb = mDbHelper.getWritableDatabase();
+            mainDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
             Crashlytics.logException(e);
             Log.e(getClass().getName(), "Error getting database: " + e.getMessage());
-            mDb = mDbHelper.getReadableDatabase();
+            mainDb = mDbHelper.getReadableDatabase();
         }
-        mSplitsDbAdapter            = new SplitsDbAdapter(mDb);
-        mTransactionsDbAdapter      = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
-        mAccountsDbAdapter          = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
-        mScheduledActionDbAdapter   = new ScheduledActionDbAdapter(mDb);
-        mCommoditiesDbAdapter       = new CommoditiesDbAdapter(mDb);
-        mPricesDbAdapter            = new PricesDbAdapter(mDb);
-        mBudgetAmountsDbAdapter     = new BudgetAmountsDbAdapter(mDb);
-        mBudgetsDbAdapter           = new BudgetsDbAdapter(mDb);
-        mRecurrenceDbAdapter        = new RecurrenceDbAdapter(mDb);
 
-        setDefaultCurrencyCode(getDefaultCurrencyCode());
+        mSplitsDbAdapter            = new SplitsDbAdapter(mainDb);
+        mTransactionsDbAdapter      = new TransactionsDbAdapter(mainDb, mSplitsDbAdapter);
+        mAccountsDbAdapter          = new AccountsDbAdapter(mainDb, mTransactionsDbAdapter);
+        mRecurrenceDbAdapter        = new RecurrenceDbAdapter(mainDb);
+        mScheduledActionDbAdapter   = new ScheduledActionDbAdapter(mainDb, mRecurrenceDbAdapter);
+        mPricesDbAdapter            = new PricesDbAdapter(mainDb);
+        mCommoditiesDbAdapter       = new CommoditiesDbAdapter(mainDb);
+        mBudgetAmountsDbAdapter     = new BudgetAmountsDbAdapter(mainDb);
+        mBudgetsDbAdapter           = new BudgetsDbAdapter(mainDb, mBudgetAmountsDbAdapter, mRecurrenceDbAdapter);
     }
 
     public static AccountsDbAdapter getAccountsDbAdapter() {
@@ -183,6 +198,19 @@ public static BudgetAmountsDbAdapter getBudgetAmountsDbAdapter(){
         return mBudgetAmountsDbAdapter;
     }
 
+    public static BooksDbAdapter getBooksDbAdapter(){
+        return mBooksDbAdapter;
+    }
+
+    /**
+     * Loads the book with GUID {@code bookUID}
+     * @param bookUID GUID of the book to be loaded
+     */
+    public void loadBook(String bookUID){
+        mBooksDbAdapter.setActive(bookUID);
+        initDatabaseAdapters();
+    }
+
     /**
      * Returns the application context
      * @return Application {@link Context} object
diff --git a/app/src/main/java/org/gnucash/android/db/BookDbHelper.java b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
new file mode 100644
index 00000000..daedf545
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
@@ -0,0 +1,121 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.db;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+import android.database.sqlite.SQLiteStatement;
+import android.util.Log;
+
+import com.crashlytics.android.Crashlytics;
+
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseSchema.BookEntry;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
+import org.gnucash.android.model.Book;
+
+import java.io.File;
+import java.io.IOException;
+
+/**
+ * Database helper for managing database which stores information about the books in the application
+ * This is a different database from the one which contains the accounts and transaction data because
+ * there are multiple accounts/transactions databases in the system and this one will be used to
+ * switch between them.
+ */
+public class BookDbHelper extends SQLiteOpenHelper {
+
+    public static final String LOG_TAG = "BookDbHelper";
+    /**
+     * Create the books table
+     */
+    private static final String BOOKS_TABLE_CREATE = "CREATE TABLE " + BookEntry.TABLE_NAME + " ("
+            + BookEntry._ID 		         + " integer primary key autoincrement, "
+            + BookEntry.COLUMN_UID 		     + " varchar(255) not null UNIQUE, "
+            + BookEntry.COLUMN_DISPLAY_NAME  + " varchar(255) not null, "
+            + BookEntry.COLUMN_ROOT_GUID     + " varchar(255) not null UNIQUE, "
+            + BookEntry.COLUMN_TEMPLATE_GUID + " varchar(255), "
+            + BookEntry.COLUMN_ACTIVE        + " tinyint default 0, "
+            + BookEntry.COLUMN_SOURCE_URI    + " varchar(255), "
+            + BookEntry.COLUMN_CREATED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+            + BookEntry.COLUMN_MODIFIED_AT   + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP "
+            + ");" + DatabaseHelper.createUpdatedAtTrigger(BookEntry.TABLE_NAME);
+
+    public BookDbHelper(Context context) {
+        super(context, DatabaseSchema.BOOK_DATABASE_NAME, null, DatabaseSchema.BOOK_DATABASE_VERSION);
+    }
+
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+        db.execSQL(BOOKS_TABLE_CREATE);
+    }
+
+    @Override
+    public void onOpen(SQLiteDatabase db) {
+        super.onOpen(db);
+
+        if (db.isReadOnly()) {
+            Log.w(LOG_TAG, "Database was opened in read-only mode");
+            return;
+        }
+
+        String sql = "SELECT COUNT(*) FROM " + BookEntry.TABLE_NAME;
+        SQLiteStatement statement = db.compileStatement(sql);
+        long count = statement.simpleQueryForLong();
+        if (count == 0) { //there is currently no book in the database
+            DatabaseHelper helper = new DatabaseHelper(GnuCashApplication.getAppContext(),
+                    DatabaseSchema.LEGACY_DATABASE_NAME);
+            SQLiteDatabase mainDb = helper.getWritableDatabase();
+            AccountsDbAdapter accountsDbAdapter = new AccountsDbAdapter(mainDb,
+                    new TransactionsDbAdapter(mainDb, new SplitsDbAdapter(mainDb)));
+
+            String rootAccountUID = accountsDbAdapter.getOrCreateGnuCashRootAccountUID();
+
+            Book book = new Book(rootAccountUID);
+            ContentValues contentValues = new ContentValues();
+            contentValues.put(BookEntry.COLUMN_UID, book.getUID());
+            contentValues.put(BookEntry.COLUMN_ROOT_GUID, rootAccountUID);
+            contentValues.put(BookEntry.COLUMN_TEMPLATE_GUID, Book.generateUID());
+            contentValues.put(BookEntry.COLUMN_DISPLAY_NAME, "Book1");
+            contentValues.put(BookEntry.COLUMN_ACTIVE, 1);
+
+            db.insert(BookEntry.TABLE_NAME, null, contentValues);
+
+            String mainDbPath = mainDb.getPath();
+            helper.close();
+
+            File src = new File(mainDbPath);
+            File dst = new File(src.getParent(), book.getUID());
+            try {
+                MigrationHelper.moveFile(src, dst);
+            } catch (IOException e) {
+                String err_msg = "Error renaming database file";
+                Crashlytics.log(err_msg);
+                Log.e(LOG_TAG, err_msg, e);
+            }
+        }
+    }
+
+    @Override
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+        //nothing to see here yet, move along
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
index e3722c6c..019a2ce1 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
@@ -56,13 +56,8 @@
 	 * Tag for logging
 	 */
 	public static final String LOG_TAG = DatabaseHelper.class.getName();
-	
-	/**
-	 * Name of the database
-	 */
-	private static final String DATABASE_NAME = "gnucash_db";
 
-	/**
+    /**
 	 * SQL statement to create the accounts table in the database
 	 */
 	private static final String ACCOUNTS_TABLE_CREATE = "create table " + AccountEntry.TABLE_NAME + " ("
@@ -229,9 +224,10 @@
     /**
 	 * Constructor
 	 * @param context Application context
+     * @param databaseName Name of the database
 	 */
-	public DatabaseHelper(Context context){
-		super(context, DATABASE_NAME, null, DatabaseSchema.DATABASE_VERSION);
+	public DatabaseHelper(Context context, String databaseName){
+		super(context, databaseName, null, DatabaseSchema.DATABASE_VERSION);
 
 	}
 
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
index 78afc95f..08ca8594 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
@@ -24,12 +24,33 @@
  * @author Ngewi Fet <ngewif@gmail.com>
  */
 public class DatabaseSchema {
+
+    /**
+     * Name of database storing information about the books in the application
+     */
+    public static final String BOOK_DATABASE_NAME = "gnucash_books.db";
+
+    /**
+     * Version number of database containing information about the books in the application
+     */
+    public static final int BOOK_DATABASE_VERSION = 1;
+
     /**
-     * Database version.
+     * Version number of database containing accounts and transactions info.
      * With any change to the database schema, this number must increase
      */
     public static final int DATABASE_VERSION = 12;
 
+    /**
+     * Name of the database
+     * <p>This was used when the application had only one database per instance.
+     * Now there can be multiple databases for each book imported
+     * </p>
+     * @deprecated Each database uses the GUID of the root account as name
+     */
+    @Deprecated
+    public static final String LEGACY_DATABASE_NAME = "gnucash_db";
+
     //no instances are to be instantiated
     private DatabaseSchema(){}
 
@@ -39,6 +60,16 @@ private DatabaseSchema(){}
         public static final String COLUMN_MODIFIED_AT   = "modified_at";
     }
 
+    public static abstract class BookEntry implements CommonColumns {
+        public static final String TABLE_NAME = "books";
+
+        public static final String COLUMN_DISPLAY_NAME  = "name";
+        public static final String COLUMN_SOURCE_URI    = "uri";
+        public static final String COLUMN_ROOT_GUID     = "root_account_guid";
+        public static final String COLUMN_TEMPLATE_GUID = "root_template_guid";
+        public static final String COLUMN_ACTIVE        = "is_active";
+    }
+
     /**
      * Columns for the account tables
      */
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index 9befedbc..806e522d 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -1184,6 +1184,7 @@ static int upgradeDbToVersion11(SQLiteDatabase db){
      * Upgrades the database to version 12.
      * <p>This migration makes the following changes to the database:
      * <ul>
+     *     <li>Adds support for multiple database for different books and one extra database for storing book info</li>
      *     <li>Adds a table for budgets</li>
      *     <li>Adds an extra table for recurrences</li>
      *     <li>Migrate scheduled transaction recurrences to own table</li>
@@ -1341,12 +1342,57 @@ static int upgradeDbToVersion12(SQLiteDatabase db){
 
             db.execSQL("DROP TABLE " + ScheduledActionEntry.TABLE_NAME + "_bak");
 
-            db.execSQL(" ALTER TABLE " + SplitEntry.TABLE_NAME
-                    + " ADD COLUMN " + SplitEntry.COLUMN_RECONCILE_STATE + " varchar(1) not null default 'n' ");
-            //// FIXME: 22.11.15 Cannot add a column with non-constant default. Create new structure and migrate whole table
-            db.execSQL(" ALTER TABLE " + SplitEntry.TABLE_NAME
-                    + " ADD COLUMN " + SplitEntry.COLUMN_RECONCILE_DATE + " timestamp not null default '' ");
-            //TODO Update just added reconcile column with the current date
+
+            //==============  Add RECONCILE_STATE and RECONCILE_DATE to the splits table ==========
+            //We migrate the whole table because we want those columns to have default values
+
+            db.execSQL("ALTER TABLE " + SplitEntry.TABLE_NAME + " RENAME TO " + SplitEntry.TABLE_NAME + "_bak");
+            db.execSQL("CREATE TABLE " + SplitEntry.TABLE_NAME + " ("
+                    + SplitEntry._ID                    + " integer primary key autoincrement, "
+                    + SplitEntry.COLUMN_UID             + " varchar(255) not null UNIQUE, "
+                    + SplitEntry.COLUMN_MEMO 	        + " text, "
+                    + SplitEntry.COLUMN_TYPE            + " varchar(255) not null, "
+                    + SplitEntry.COLUMN_VALUE_NUM       + " integer not null, "
+                    + SplitEntry.COLUMN_VALUE_DENOM     + " integer not null, "
+                    + SplitEntry.COLUMN_QUANTITY_NUM    + " integer not null, "
+                    + SplitEntry.COLUMN_QUANTITY_DENOM  + " integer not null, "
+                    + SplitEntry.COLUMN_ACCOUNT_UID 	+ " varchar(255) not null, "
+                    + SplitEntry.COLUMN_TRANSACTION_UID + " varchar(255) not null, "
+                    + SplitEntry.COLUMN_RECONCILE_STATE + " varchar(1) not null default 'n', "
+                    + SplitEntry.COLUMN_RECONCILE_DATE  + " timestamp not null default current_timestamp, "
+                    + SplitEntry.COLUMN_CREATED_AT      + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + SplitEntry.COLUMN_MODIFIED_AT     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+                    + "FOREIGN KEY (" 	+ SplitEntry.COLUMN_ACCOUNT_UID + ") REFERENCES " + AccountEntry.TABLE_NAME + " (" + AccountEntry.COLUMN_UID + ") ON DELETE CASCADE, "
+                    + "FOREIGN KEY (" 	+ SplitEntry.COLUMN_TRANSACTION_UID + ") REFERENCES " + TransactionEntry.TABLE_NAME + " (" + TransactionEntry.COLUMN_UID + ") ON DELETE CASCADE "
+                    + ");" + DatabaseHelper.createUpdatedAtTrigger(SplitEntry.TABLE_NAME));
+
+            db.execSQL("INSERT INTO " + SplitEntry.TABLE_NAME + " ( "
+                    + SplitEntry._ID                    + " , "
+                    + SplitEntry.COLUMN_UID             + " , "
+                    + SplitEntry.COLUMN_MEMO            + " , "
+                    + SplitEntry.COLUMN_TYPE            + " , "
+                    + SplitEntry.COLUMN_VALUE_NUM       + " , "
+                    + SplitEntry.COLUMN_VALUE_DENOM     + " , "
+                    + SplitEntry.COLUMN_QUANTITY_NUM    + " , "
+                    + SplitEntry.COLUMN_QUANTITY_DENOM  + " , "
+                    + SplitEntry.COLUMN_ACCOUNT_UID     + " , "
+                    + SplitEntry.COLUMN_TRANSACTION_UID
+                    + ")  SELECT "
+                    + SplitEntry.TABLE_NAME + "_bak." + SplitEntry._ID                  + " , "
+                    + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_UID           + " , "
+                    + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_MEMO          + " , "
+                    + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_TYPE          + " , "
+                    + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_VALUE_NUM     + " , "
+                    + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_VALUE_DENOM   + " , "
+                    + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_QUANTITY_NUM  + " , "
+                    + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_QUANTITY_DENOM + " , "
+                    + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_ACCOUNT_UID   + " , "
+                    + SplitEntry.TABLE_NAME + "_bak." + SplitEntry.COLUMN_TRANSACTION_UID
+                    + " FROM " + SplitEntry.TABLE_NAME + "_bak;");
+
+
+            db.execSQL("DROP TABLE " + SplitEntry.TABLE_NAME + "_bak");
+
             db.setTransactionSuccessful();
             oldVersion = 12;
         } finally {
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
new file mode 100644
index 00000000..316d557c
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
@@ -0,0 +1,193 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.db.adapter;
+
+import android.content.ContentValues;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteStatement;
+import android.net.Uri;
+import android.support.annotation.NonNull;
+
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseSchema.BookEntry;
+import org.gnucash.android.model.Book;
+
+/**
+ * Database adapter for creating/modifying book entries
+ */
+public class BooksDbAdapter extends DatabaseAdapter<Book> {
+
+    /**
+     * Opens the database adapter with an existing database
+     * @param db        SQLiteDatabase object
+     */
+    public BooksDbAdapter(SQLiteDatabase db) {
+        super(db, BookEntry.TABLE_NAME);
+    }
+
+    /**
+     * Return the application instance of the books database adapter
+     * @return Books database adapter
+     */
+    public static BooksDbAdapter getInstance(){
+        return GnuCashApplication.getBooksDbAdapter();
+    }
+
+    @Override
+    public Book buildModelInstance(@NonNull Cursor cursor) {
+        String rootAccountGUID = cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_ROOT_GUID));
+        String rootTemplateGUID =  cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_TEMPLATE_GUID));
+        String uriString = cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_SOURCE_URI));
+        String displayName = cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_DISPLAY_NAME));
+        int active = cursor.getInt(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_ACTIVE));
+
+        Book book = new Book(rootAccountGUID);
+        book.setDisplayName(displayName);
+        book.setRootTemplateUID(rootTemplateGUID);
+        book.setSourceUri(Uri.parse(uriString));
+        book.setActive(active > 0);
+
+        return book;
+    }
+
+    @Override
+    protected SQLiteStatement compileReplaceStatement(@NonNull Book book) {
+        if (mReplaceStatement == null){
+            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + BookEntry.TABLE_NAME + " ( "
+            + BookEntry.COLUMN_UID              + " , "
+            + BookEntry.COLUMN_DISPLAY_NAME     + " , "
+            + BookEntry.COLUMN_ROOT_GUID        + " , "
+            + BookEntry.COLUMN_TEMPLATE_GUID    + " , "
+            + BookEntry.COLUMN_SOURCE_URI       + " , "
+            + BookEntry.COLUMN_ACTIVE           + " ) VALUES (? , ? , ? , ? , ? , ? ");
+        }
+        mReplaceStatement.clearBindings();
+        mReplaceStatement.bindString(1, book.getUID());
+        mReplaceStatement.bindString(2, book.getDisplayName());
+        mReplaceStatement.bindString(3, book.getRootAccountUID());
+        mReplaceStatement.bindString(4, book.getRootTemplateUID());
+        if (book.getSourceUri() != null)
+            mReplaceStatement.bindString(5, book.getSourceUri().toString());
+        mReplaceStatement.bindLong(6, book.isActive() ? 1L : 0L);
+
+        return mReplaceStatement;
+    }
+
+    /**
+     * Sets the book with unique identifier {@code uid} as active
+     * @param bookUID Unique identifier of the book
+     */
+    public void setActive(String bookUID){
+        ContentValues contentValues = new ContentValues();
+        contentValues.put(BookEntry.COLUMN_ACTIVE, 1);
+        mDb.update(mTableName, contentValues, BookEntry.COLUMN_UID + " = ?", new String[]{bookUID});
+    }
+
+    /**
+     * Checks if the book is active or not
+     * @param bookUID GUID of the book
+     * @return {@code true} if the book is active, {@code false} otherwise
+     */
+    public boolean isActive(String bookUID){
+        String isActive = getAttribute(bookUID, BookEntry.COLUMN_ACTIVE);
+        return Integer.parseInt(isActive) > 0;
+    }
+
+    /**
+     * Returns the root account GUID of the current active book
+     * @return GUID of the root account
+     */
+    public @NonNull String getActiveRootAccountUID(){
+        Cursor cursor = mDb.query(mTableName, new String[]{BookEntry.COLUMN_ROOT_GUID},
+                BookEntry.COLUMN_ACTIVE + "= 1", null, null, null, null, "1");
+        try{
+            if (cursor.moveToFirst()){
+                return cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_ROOT_GUID));
+            }
+        } finally {
+            cursor.close();
+        }
+        return null;
+    }
+
+    /**
+     * Returns the GUID of the current active book
+     * @return GUID of the active book
+     */
+    public @NonNull String getActiveBookUID(){
+        Cursor cursor = mDb.query(mTableName, new String[]{BookEntry.COLUMN_UID},
+                BookEntry.COLUMN_ACTIVE + "= 1", null, null, null, null, "1");
+        try{
+            if (cursor.moveToFirst()){
+                return cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_UID));
+            }
+        } finally {
+            cursor.close();
+        }
+        return null;
+    }
+
+
+    /**
+     * Return the name of the currently active book.
+     * Or a generic name if there is no active book (should never happen)
+     * @return Display name of the book
+     */
+    public @NonNull String getActiveBookDisplayName(){
+        Cursor cursor = mDb.query(mTableName,
+                new String[]{BookEntry.COLUMN_DISPLAY_NAME}, BookEntry.COLUMN_ACTIVE + " = 1",
+                null, null, null, null);
+        try {
+            if (cursor.moveToFirst()){
+                return cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_DISPLAY_NAME));
+            }
+        } finally {
+            cursor.close();
+        }
+        return "Book1";
+    }
+
+    /**
+     * Generates a new default name for a new book
+     * @return String with default name
+     */
+    public @NonNull String generateDefaultBookName() {
+        long bookCount = getRecordsCount() + 1;
+
+        String sql = "SELECT COUNT(*) FROM " + mTableName + " WHERE " + BookEntry.COLUMN_DISPLAY_NAME + " = ?";
+        SQLiteStatement statement = mDb.compileStatement(sql);
+
+        while (true) {
+            String name = "Book" + " " + bookCount;
+
+            statement.clearBindings();
+            statement.bindString(1, name);
+            long nameCount = statement.simpleQueryForLong();
+
+            if (nameCount == 0) {
+                return name;
+            }
+
+            bookCount++;
+        }
+
+    }
+
+
+
+}
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
index 9f03d0f2..fb50daac 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
@@ -47,10 +47,11 @@
      *
      * @param db        SQLiteDatabase object
      */
-    public BudgetsDbAdapter(SQLiteDatabase db) {
+    public BudgetsDbAdapter(SQLiteDatabase db, BudgetAmountsDbAdapter budgetAmountsDbAdapter,
+                            RecurrenceDbAdapter recurrenceDbAdapter) {
         super(db, BudgetEntry.TABLE_NAME);
-        mRecurrenceDbAdapter = new RecurrenceDbAdapter(db);
-        mBudgetAmountsDbAdapter = new BudgetAmountsDbAdapter(db);
+        mRecurrenceDbAdapter = recurrenceDbAdapter;
+        mBudgetAmountsDbAdapter = budgetAmountsDbAdapter;
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
index ade23f80..06a878b4 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
@@ -41,9 +41,9 @@
 
     RecurrenceDbAdapter mRecurrenceDbAdapter;
 
-    public ScheduledActionDbAdapter(SQLiteDatabase db){
+    public ScheduledActionDbAdapter(SQLiteDatabase db, RecurrenceDbAdapter recurrenceDbAdapter){
         super(db, ScheduledActionEntry.TABLE_NAME);
-        mRecurrenceDbAdapter = new RecurrenceDbAdapter(db);
+        mRecurrenceDbAdapter = recurrenceDbAdapter;
         LOG_TAG = "ScheduledActionDbAdapter";
     }
 
diff --git a/app/src/main/java/org/gnucash/android/export/Exporter.java b/app/src/main/java/org/gnucash/android/export/Exporter.java
index d790c273..be908cd5 100644
--- a/app/src/main/java/org/gnucash/android/export/Exporter.java
+++ b/app/src/main/java/org/gnucash/android/export/Exporter.java
@@ -28,9 +28,11 @@
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;
 import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.PricesDbAdapter;
+import org.gnucash.android.db.adapter.RecurrenceDbAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
@@ -125,8 +127,9 @@ public Exporter(ExportParams params, SQLiteDatabase db) {
             mAccountsDbAdapter      = new AccountsDbAdapter(db, mTransactionsDbAdapter);
             mPricesDbAdapter        = new PricesDbAdapter(db);
             mCommoditiesDbAdapter   = new CommoditiesDbAdapter(db);
-            mBudgetsDbAdapter       = new BudgetsDbAdapter(db);
-            mScheduledActionDbAdapter = new ScheduledActionDbAdapter(db);
+            RecurrenceDbAdapter recurrenceDbAdapter = new RecurrenceDbAdapter(db);
+            mBudgetsDbAdapter       = new BudgetsDbAdapter(db, new BudgetAmountsDbAdapter(db), recurrenceDbAdapter);
+            mScheduledActionDbAdapter = new ScheduledActionDbAdapter(db, recurrenceDbAdapter);
             mPricesDbAdapter = new PricesDbAdapter(db);
             mCommoditiesDbAdapter = new CommoditiesDbAdapter(db);
         }
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 677656c4..b14c8144 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -18,6 +18,7 @@
 package org.gnucash.android.importer;
 
 import android.database.sqlite.SQLiteDatabase;
+import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.util.Log;
 
@@ -25,9 +26,11 @@
 
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;
 import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.PricesDbAdapter;
+import org.gnucash.android.db.adapter.RecurrenceDbAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
@@ -282,10 +285,11 @@ private void init(@Nullable SQLiteDatabase db) {
         } else {
             mTransactionsDbAdapter = new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
             mAccountsDbAdapter = new AccountsDbAdapter(db, mTransactionsDbAdapter);
-            mScheduledActionsDbAdapter = new ScheduledActionDbAdapter(db);
+            RecurrenceDbAdapter recurrenceDbAdapter = new RecurrenceDbAdapter(db);
+            mScheduledActionsDbAdapter = new ScheduledActionDbAdapter(db, recurrenceDbAdapter);
             mCommoditiesDbAdapter = new CommoditiesDbAdapter(db);
             mPricesDbAdapter = new PricesDbAdapter(db);
-            mBudgetsDbAdapter = new BudgetsDbAdapter(db);
+            mBudgetsDbAdapter = new BudgetsDbAdapter(db, new BudgetAmountsDbAdapter(db), recurrenceDbAdapter);
         }
 
         mContent = new StringBuilder();
@@ -975,6 +979,14 @@ public void endDocument() throws SAXException {
     }
 
     /**
+     * Returns the GUID of the root account in the XML book
+     * @return GUID of the root account
+     */
+    public @NonNull String getRootAccountUID() {
+        return mRootAccount.getUID();
+    }
+
+    /**
      * Returns the currency for an account which has been parsed (but not yet saved to the db)
      * <p>This is used when parsing splits to assign the right currencies to the splits</p>
      * @param accountUID GUID of the account
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
index 12b4946e..9e2a7eea 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
@@ -70,8 +70,9 @@ public static void parse(SQLiteDatabase db, InputStream gncXmlInputStream) throw
     /**
      * Parse GnuCash XML input and populates the database
      * @param gncXmlInputStream InputStream source of the GnuCash XML file
+     * @return GUID of the root account from the imported book
      */
-    public static void parse(InputStream gncXmlInputStream) throws ParserConfigurationException, SAXException, IOException {
+    public static String parse(InputStream gncXmlInputStream) throws ParserConfigurationException, SAXException, IOException {
         SAXParserFactory spf = SAXParserFactory.newInstance();
         SAXParser sp = spf.newSAXParser();
         XMLReader xr = sp.getXMLReader();
@@ -101,5 +102,7 @@ public static void parse(InputStream gncXmlInputStream) throws ParserConfigurati
                 .apply();
 
         Log.d(GncXmlImporter.class.getSimpleName(), String.format("%d ns spent on importing the file", endTime-startTime));
+
+        return handler.getRootAccountUID();
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/model/Book.java b/app/src/main/java/org/gnucash/android/model/Book.java
new file mode 100644
index 00000000..cfe7c6c2
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/model/Book.java
@@ -0,0 +1,127 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.model;
+
+import android.net.Uri;
+
+/**
+ * Represents a GnuCash book which is made up of accounts and transactions
+ * @author Ngewi Fet <ngewif@gmail.com>
+ */
+public class Book extends BaseModel {
+
+    private Uri mSourceUri;
+    private String mDisplayName;
+    private String mRootAccountUID;
+    private String mRootTemplateUID;
+    private boolean mActive;
+
+    /**
+     * Create a new book instance
+     * @param rootAccountUID GUID of root account
+     */
+    public Book(String rootAccountUID){
+        this.mRootAccountUID = rootAccountUID;
+    }
+
+    /**
+     * Return the root account GUID of this book
+     * @return GUID of the book root account
+     */
+    public String getRootAccountUID() {
+        return mRootAccountUID;
+    }
+
+    /**
+     * Sets the GUID of the root account of this book.
+     * <p>Each book has only one root account</p>
+     * @param rootAccountUID GUID of the book root account
+     */
+    public void setRootAccountUID(String rootAccountUID) {
+        mRootAccountUID = rootAccountUID;
+    }
+
+    /**
+     * Return GUID of the template root account
+     * @return GUID of template root acount
+     */
+    public String getRootTemplateUID() {
+        return mRootTemplateUID;
+    }
+
+    /**
+     * Set the GUID of the root template account
+     * @param rootTemplateUID GUID of the root template account
+     */
+    public void setRootTemplateUID(String rootTemplateUID) {
+        mRootTemplateUID = rootTemplateUID;
+    }
+
+    /**
+     * Check if this book is the currently active book in the app
+     * <p>An active book is one whose data is currently displayed in the UI</p>
+     * @return {@code true} if this is the currently active book, {@code false} otherwise
+     */
+    public boolean isActive() {
+        return mActive;
+    }
+
+    /**
+     * Sets this book as the currently active one in the application
+     * @param active Flag for activating/deactivating the book
+     */
+    public void setActive(boolean active) {
+        mActive = active;
+    }
+
+    /**
+     * Return the Uri of the XML file from which the book was imported.
+     * <p>In API level 16 and above, this is the Uri from the storage access framework which will
+     * be used for synchronization of the book</p>
+     * @return Uri of the book source XML
+     */
+    public Uri getSourceUri() {
+        return mSourceUri;
+    }
+
+    /**
+     * Set the Uri of the XML source for the book
+     * <p>This Uri will be used for sync where applicable</p>
+     * @param uri Uri of the GnuCash XML source file
+     */
+    public void setSourceUri(Uri uri) {
+        this.mSourceUri = uri;
+    }
+
+    /**
+     * Returns a name for the book
+     * <p>This is the user readable string which is used in UI unlike the root account GUID which
+     * is used for uniquely identifying each book</p>
+     * @return Name of the book
+     */
+    public String getDisplayName() {
+        return mDisplayName;
+    }
+
+    /**
+     * Set a name for the book
+     * @param name Name of the book
+     */
+    public void setDisplayName(String name) {
+        this.mDisplayName = name;
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 1e90f7f5..ea8133a3 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -19,23 +19,29 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
+import android.database.Cursor;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.annotation.LayoutRes;
 import android.support.annotation.StringRes;
-import android.support.design.widget.AppBarLayout;
 import android.support.design.widget.NavigationView;
 import android.support.v4.widget.DrawerLayout;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.widget.PopupMenu;
 import android.support.v7.widget.Toolbar;
+import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.ProgressBar;
+import android.widget.TextView;
 
 import com.uservoice.uservoicesdk.UserVoice;
 
 import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.budget.BudgetsActivity;
 import org.gnucash.android.ui.passcode.PasscodeLockActivity;
@@ -65,11 +71,14 @@
  * </p>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public abstract class BaseDrawerActivity extends PasscodeLockActivity {
+public abstract class BaseDrawerActivity extends PasscodeLockActivity implements
+    PopupMenu.OnMenuItemClickListener {
+
     @Bind(R.id.drawer_layout) DrawerLayout mDrawerLayout;
     @Bind(R.id.nav_view) NavigationView mNavigationView;
     @Bind(R.id.toolbar) Toolbar mToolbar;
     @Bind(R.id.toolbar_progress) ProgressBar mToolbarProgress;
+    TextView mBookNameTextView;
 
     protected ActionBarDrawerToggle mDrawerToggle;
 
@@ -98,6 +107,22 @@ protected void onCreate(Bundle savedInstanceState) {
             actionBar.setTitle(getTitleRes());
         }
 
+        View headerView = mNavigationView.getHeaderView(0);
+        headerView.findViewById(R.id.drawer_title).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                onClickAppTitle(v);
+            }
+        });
+
+        mBookNameTextView = (TextView) headerView.findViewById(R.id.book_name);
+        mBookNameTextView.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                onClickBook(v);
+            }
+        });
+        mBookNameTextView.setText(BooksDbAdapter.getInstance().getActiveBookDisplayName());
         setUpNavigationDrawer();
     }
 
@@ -249,4 +274,34 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         }
     }
 
+    @Override
+    public boolean onMenuItemClick(MenuItem item) {
+        long id = item.getItemId();
+        String bookUID = BooksDbAdapter.getInstance().getUID(id);
+        ((GnuCashApplication)getApplication()).loadBook(bookUID);
+        AccountsActivity.start(this);
+        return true;
+    }
+
+    public void onClickAppTitle(View view){
+        AccountsActivity.start(this);
+    }
+
+    public void onClickBook(View view){
+        PopupMenu popup = new PopupMenu(this, view);
+        popup.setOnMenuItemClickListener(this);
+
+        Menu menu = popup.getMenu();
+        int maxRecent = 0;
+        Cursor cursor = BooksDbAdapter.getInstance().fetchAllRecords(null, null,
+                DatabaseSchema.BookEntry.COLUMN_MODIFIED_AT + " ASC");
+        while (cursor.moveToNext() && maxRecent++ < 10) {
+            long id = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry._ID));
+            String name = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME));
+
+            menu.add(0, (int)id, maxRecent, name);
+        }
+
+        popup.show();
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
index ffc2b9db..f12caba5 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
@@ -19,6 +19,7 @@
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.inputmethodservice.KeyboardView;
+import android.support.annotation.Nullable;
 import android.support.annotation.XmlRes;
 import android.text.Editable;
 import android.text.InputType;
@@ -214,16 +215,16 @@ public void setCalculatorKeyboardView(KeyboardView calculatorKeyboardView) {
      * Returns the XML resource ID describing the calculator keys layout
      * @return XML resource ID
      */
-    public int getCalculatorKeysLayout() {
+    public @XmlRes int getCalculatorKeysLayout() {
         return mCalculatorKeysLayout;
     }
 
     /**
      * Sets the XML resource describing the layout of the calculator keys
-     * @param mCalculatorKeysLayout XML resource ID
+     * @param calculatorKeysLayout XML resource ID
      */
-    public void setCalculatorKeysLayout(@XmlRes int mCalculatorKeysLayout) {
-        this.mCalculatorKeysLayout = mCalculatorKeysLayout;
+    public void setCalculatorKeysLayout(@XmlRes int calculatorKeysLayout) {
+        this.mCalculatorKeysLayout = calculatorKeysLayout;
         bindListeners(mCalculatorKeyboardView);
     }
 
@@ -315,7 +316,7 @@ public boolean isInputModified(){
      * Performs an evaluation of the expression first
      * @return BigDecimal value
      */
-    public BigDecimal getValue(){
+    public @Nullable BigDecimal getValue(){
         evaluate();
         String amountString = getCleanString();
         if (amountString.isEmpty())
@@ -325,8 +326,6 @@ public BigDecimal getValue(){
         } catch (NumberFormatException e){
             String msg = "Error parsing amount string " + amountString + " from CalculatorEditText";
             Log.i(getClass().getSimpleName(), msg, e);
-            Crashlytics.log(msg);
-            Crashlytics.logException(e);
             return null;
         }
     }
@@ -346,7 +345,7 @@ public void setValue(BigDecimal amount){
         formatter.setGroupingUsed(false);
         String resultString = formatter.format(newAmount.doubleValue());
 
-        setText(resultString);
+        super.setText(resultString);
         setSelection(resultString.length());
     }
 }
diff --git a/app/src/main/res/drawable-hdpi/ic_arrow_drop_down_white_24dp.png b/app/src/main/res/drawable-hdpi/ic_arrow_drop_down_white_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..4c6076df77463404d7163c9929bad5798576c49b
GIT binary patch
literal 123
zcmeAS@N?(olHy`uVBq!ia0vp^Dj>|k0wldT1B8K;lc$Sgh)3t!GrM^i6gXHN+!Ft<
zyz%6wgzzGf8m{hg<~baK7i~0n1e^UrcB-xUbawM9)9}#zn5)@-SM$qEFA7|Y7jyVu
Ve}1-8%O{{|44$rjF6*2UngF%-Cs6<Z

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-hdpi/ic_nav_header.png b/app/src/main/res/drawable-hdpi/ic_nav_header.png
new file mode 100644
index 0000000000000000000000000000000000000000..13696e9ce65125f5549e106d6934da9598a01d86
GIT binary patch
literal 4830
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
Ef&%|qq5uE@

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_arrow_drop_down_white_24dp.png b/app/src/main/res/drawable-mdpi/ic_arrow_drop_down_white_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..4046a749029748201a03cf0b937551658fe94a2f
GIT binary patch
literal 95
zcmeAS@N?(olHy`uVBq!ia0vp^5+KaM0wlfaz7_*1HBT4E5R22v2@<TzLVxmq^z%u1
sT)yNmOP6<v<(fv5{U$xfUTk1u2#hg1UlVig1yBcrr>mdKI;Vst078Ep6aWAK

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_nav_header.png b/app/src/main/res/drawable-mdpi/ic_nav_header.png
new file mode 100644
index 0000000000000000000000000000000000000000..13696e9ce65125f5549e106d6934da9598a01d86
GIT binary patch
literal 4830
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
Ef&%|qq5uE@

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_arrow_drop_down_white_24dp.png b/app/src/main/res/drawable-xhdpi/ic_arrow_drop_down_white_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..da239e4f4e0169d670679e8af8c86c5c4fffa7ca
GIT binary patch
literal 120
zcmeAS@N?(olHy`uVBq!ia0vp^1|ZDA0wn)(8}a}tdrud~kch)?uUzB=N*oDrKmV+(
z^&bn@*=UC^S7xese%h0o|6tmIw@l>$J0c$(>)jo=!@Ij$e8+Nkehtr0i<whBE?PEP
SHk1O5V(@hJb6Mw<&;$T}|0*8<

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_nav_header.png b/app/src/main/res/drawable-xhdpi/ic_nav_header.png
new file mode 100644
index 0000000000000000000000000000000000000000..052f51dacbf185ff3260251fa33b5562f46dbc0c
GIT binary patch
literal 8310
zcmV-+Ac^0JP)<h;3K|Lk000e1NJLTq002M$002M;1^@s6s%dfF00004XF*Lt006O%
z3;baP00009a7bBm0059I0059I0kPqBivR#17)eAyRCr$PTL)BB*Vewn(CjUyy+6r{
zX(skq6ODk1A_!OzhN1{6Dz>Om5yer0qJn}_L=@~X_TE5>NK;XeCQ?MOfg)<uBu`<!
zfA4c=2v3c9$@_ily|w;X>s$BUbMHBG_ILLF_C9w&`v1>A@c|@-TCLXmZvstQp~b)U
z(GDi9Ter?&{`d1g@bdC%^B)bhSDT=qpyoVh0RI{RJiy42Bb6gY4)Y#1!ZzQ@+5WE6
zDAheD7u7xI|3HX&jdHwaXFt4j=y2QJ4x=4D(vt9(h){56=h4pNTt++L#L1(-78e)R
z2$U54$D)Lgo}T)2(&PykHo|5<8}gSt!NbGDfZV_FAWQSKwGp8;Po6x&g9p|B75M3=
z2RM5+?Ww(LM44JW>rGu4|EUkTzTv!i^IG@l-L3TCq5U<FAOD1V_wEW*S6BT<gGso0
zwfOI&$GF^^J$v?N9L8F+{`rrNfL^`3mmWB{ua1DbcPmkK@6JoV`1i<p6>)!b@1^b4
zuU?4PK*0W*M~@!jZdE0YpE!zh=hJcj!F`$tPe#VwsyisXR)RZsD(Z~VP4dRgauk;o
zqKckja66O8D7jjQ>o>}TQC0Q&G0}YQ`SJL<o42pyYH6|jy!QL~{6zws|BnfvN$uYA
zBTk=5z=MZGK;6WM0J>LLT!6|uw^3c!E_+J(^->gE$s^+{MVk&x#+AZ+Tq`S~=j7*g
zxO=xk+^ejtKb~wP6UN`gr1PTOq3`7Htt7HuD*-&=J$rW{=}e;dlHVr9D^`IbEdlas
z$}7z0Ou%I#fG1mZPY$8GS`?6xr9{B<eeP%psHnU}*V=YMHJ#re0<ILv_ik6*6i0^m
zZko>n^3Hz?0lG=?1et)sqRX^mx9SXGW7(Lp>sN_@Tq2-?jII#vRdnQYCZ@EkSRO;P
z%eZs*HZB+D3B#Truk>0mva&DW7KK7ZB@^%)2{Hk%+XIq`fQLi?uNvXreewV@?g|rd
zhbD1fCZ&qN_sYtzBL8xZ@Bm(QHb&<GmkV-*L2Q`r9*=p4#$(bdcsw3Q3-%25w2N8i
zY4vXqw5!h$&%Q<iIL`O(+l{#R7~H&7PKK3gaTTTIC1N$Nk}-VFZq2wx=j<7I`Po9a
zN=vDo#8P+Ub`As9fx3HytEENAyUcwG<$Hv};>+UMoZL)Y$UH|Ok|#oe+gTHeORfl#
zACf-3Rsv4O979n_ftU<~U6qZ`qgBo?s0Y3#BXY^eoV-iISO#C~ke!!>ocv4w(58D%
z*N4a870<YM78eK^7t?Y6Lb_;UWM0Y;A(5SPQDlwRMu08^PA4S@*JgJVAlBIp*`05Z
zTXI_^gG7n%@oKU$!d2@O`?hfJTr$3hR!;P(caO!5$+&szI>q`8N~L82oB|7o@C+j0
z`i*PC6J_vo*Z(~lzyws^uM)=Ta9a?NBPOdOfRF5wOaQNRg)o{7B!R2YB8S?GuU<hV
zJ;&FAIKpibHYSHNNS%>Hz%4p*N<DWW4cE1VFxYqo*8~414<G`xMlyJHIRuyhoe^v(
zlT*S3P~1N60i5GGo?qqx>`50g&yuDT;l}N9+#tglY$S{0xs24`JfI#4>;eA<0^)_*
z))`8QeT!U{MT=cgXB>kK<BIMQ#U~RWlR!r;vU4(pfC&=mn)}|kbrbo8MMyb&MtF~K
zf6Dzg$lx2d%8-902WN?Za=xZ2^QHiK1Cha5<h2u!csgFBES(XYf_UZGWqFlEyD;`9
z8Fovk^QG*IxJ}Pg(8`Lu%>@kM5)(jK;toGg*X;TkIR(hf%|jXyP(oRt{N^<>wp42{
z5kN$zpHC6>#dW$TL)HkcOI}+cq{{*)P97CPRA13q$=S_?s^`&>&Mz@&<yoOGYL&V^
zGA~`gg{*UQkCps_cs3y=716tn;7n?wKuY>)q^2h!mB>gt$4C}OzUDAsoF_dvPnm(o
zVh?)lY4B9sNs;?Gw%J7)yvl4er$;_#=*~GbI8|}J<|0PU+cMaA7D9eDGbbCXHXXsS
z_%qaYQ4o-oogwb)z+T4Mz}}IYpC!i5E1*<K0xYUcnxl?@QLk46s4642b>OOuSDsz5
zx|*}XO%dx{Ar_Ny>;b~{wPB+}7PWINagX{Oj5~+mtuZ8gR9I2rlah8?gn$r0;o=km
zx66dV>;c!W%OSzKz_>|b$#c9<0$o&8@N|ru^SybqrnOhAP4u;9{qvuf6HuwufH*oQ
z(c(B}qX@SvuH(q5Gq9Yo9X}pT#kK2Ybz&!0nhF+Hb|yxLTZGIkB7o9bL2(flh8;rE
zIVQ1Gs6TrEdqx?hLXLM`%(EAyo=p-}rmPL6A|u=&0lt6#9(h1DkzV-JeVp?>U*E|c
z5)xzr)M`n*E#|k}eErJL?-Q_75Wp*|Grr;uA8%li|86W?eGol8qT%ed4aw)TDP2|y
z4`8>wMI<o^^^tM$95P7{)@(Te_1eR<ir0jpG64yK05(uZ0H5blD5Q`sT%#~77o^bY
z)7S<1XOSAe8+)R?5wgf$GjFt1<1<DoUNT8Kx@yjwJ`uiOc3|6>2>j8D(m(P59Ra+O
zyvqAdrelQnc9fKrBCoKRT=^7+dHsONs}AF2Vj8Wq>;XD(KX&buv_$-P@Hk8-Z9rVg
zg*s!IfTWZc31AP%q1b0}WDj8DGc#hbF<=<NeA;5;(ywqR$^yxUY;itzD$d7v)W+=`
zT)SiS*9h}&UA1g-gV+_{84X|?UrEC65wMpCh);+W23!}hSB|W_%lOP?9k%X^rAd-o
z(xfWy+`y&F1@H?yh>ot2SQ37Ka(f}Ia2d+TAl?EOmRu$R5@0cF9Tu(LjiRe0kkrPN
zA#ZY$QsPP2a>R8JgUDb_$jZ5ZWYULX65rh1bOcOqi~Ui<P*oNQ{IU;tx*Pa)E1hqV
zk94j1d9S9bEaKUbEp}KnL#hg0@KL*0hQiATkh8!p96NDXs4lC1-sMY}x^ge3F5O9~
zh|(FSH&X746x*!enWXZ2j>cis_dCfWwqfbI12`5NOUA|Fbn+=gZrzPu&OtbI{1_6?
z#3C{26dh&6pN^$x;sg;K4y*}mcrtm-8S;+Q^hB&*F%0`6`l9B^4%9weg4(KysJY{e
zXO(t@;o?|R=`7m$e$A5~YmaR<uU+aXC2Uli7;DXa@$*U#NQ~9G@^!?gUcm70w$hGJ
zPJ^u8?3P@#=y0VdPmmFpavmKVg3z|>Qv9&*B(id|(QfE+c(2+;?p!EVzlcGez<t<w
zuKL&mim8p;bsoTk6c*(m+}8vNdn{>{_u$!`@px7-fMAZAiopac?a^GcJ-ahbJeP9B
zN%OsjRJt+9MErvE($A|jAb~W1>-;<_SHGIF8EbbXQb=4UBQJ`0mBmh5pVKjyyo6V*
zw5*U)SRMj5A4hM8)#z;<j5g*=aq6_J=vT{%L})PBU?$*7alW|6;C8M*vU9mcpz)~f
z$gUMwHS;axBzxoMs%U5)N22yo5UsW!Y9B0?k3R*8_Mh)XBR6%vCTzi5nw7JRqsYuZ
z9|D{O;uBAy`oSIeZ#W6ZIa_Gr@=9~%S9aqnmBr;kta!3K@rzWUB_zcPql!ye)QUw+
zuZ}*1fUqsd$V?Z;U%hsPP$&eD<DCg8AWvY!#eKrH^5QxIic9jbez^_SEi}eLHwoeD
zHb_1?38lF!aIZWJk1E#FF&x+O0+4cSG9ng#g!!W-Y+9<+ET1k_tehdW)SCO^=T!tG
zCdJ`gRzA$8Z$fGYZGgyNHk8Xzc2_ZBGNgnIDy2ztwU<D#%`RMAO72V$_sN}^7~a~l
zaeQ4O`pMyNIyqhtz=Y_)V{^&O1e6e&JJwCc)@4Sxn$iTPHXCB|QU%s7kPx<@8D)jH
z=-6CbZ}O86vyq=O#J*5HjsFxWWu01Ts5SS+&+icsxjq6rcI|}KxKOw*-a*F8iq3{}
zYAPg`Eu~fZZN*B25VE+H2*b6;3j(eP0=SkJeW;DWp~AHTiyv#jKaTgC2XOn*Jpoue
zP9ITzjZl)Tz)x3<@UWmcs&bm*E`g7H{ix6wW$6lR3y?JalO?SDPTE9f{<#p~*G<vU
z>)<xSA0K?<k64P`OEj5FBubgt=Y=}+hJ>>KU(2tn&WoyzRXu}>p$l0uG8lBt1nBy4
zTit!S$9>qVcnltok(HAnHb6|k#jJFM`whhQ0AuW4t-$KJ5`}|=oxu`LY?N?ntAvxA
zB)TUda*-tNZx58PCq&XLog!7PRR75kU;;L6UXNkp7h(OjgXFp?!Z-$3W<056k*atn
z$7w4;tRlxU8_Gvriqj!JF-D}j`fdDNT_5Vt1yTL689XlU40mo^KrXICMP>usI4|Ms
z0bw8_7n3HC>#rljcM$<8dnJ^gm2fv((rj5KX#!_RR3!Yq2Pj-!U5#hWn)PPSKHabJ
zZ-e}ctMGu0>kt?cLGes(N-?NQQS7Rmqc0cch*;+s=5XM1E`t-bg2t-;8{|}X?n0`z
zPrlrbz|XRg`B$>V_<UcdA)Hc~j6&+aeeHOxoMD9EIfghADIq^j5=7j-_#19!NGM1k
zuZWhtV9i`X0M!A~OY49-R+cSW)~r|0o+U?)9IpBMufK>F4N*~%ICAuW5I%li$F+Dl
zDL=<28^ROhYEYNDI4kfjkv)V3k#UVQLwDqDEoX_Mt6T#RVGKHFa(LCb4iLr@DNF?G
zhFl2}0Y%wZ>o*98);2^=42hqQ1TSX^3&%<z1F^=7Vttkb^*9N0og{?N^~IwiJTyxt
zOXcBSQVXrAbsu4TCugPA7xsqgFYKBw>}2`3>bd^YG+Xy?K=iI~c+Pjj9RI0^_#p^k
zTUTQJrZ7aT4?}1~FqW@ef_3Xdv35%kLbn76gl!E(K%_7HLcFnN^9qD)4nPRCGx+}E
zkU7|SWV29sod>Y7>;XCg*wgAffFKAU!DS&mymJ|OfId?8G$N6cNaZDD9+PnTM+tG;
z=(t0|g(DIPq#Oci`y>q$5jazd78ck4@GhyVhh)&jU6K3M6eD~yvjG)4O1wvmO2nYv
zC<*N+O89uZghrH4Te?Uv8Q2?+PAZI_Fb*CBtHD<IV)(mg;3}cT7zs`3_%`L}4`_^L
z)TarJ!Qk_E-D%um5*&T)g|`$G<%*SO<Wned>~j&tp(MhIh`CB0mqTqSX{V5vpN{Cj
zA(ZNxV(FA-2=z8V%oYiGrzBiIC!sRyH}{X*E_;Iy&1K_KNwaJkiD3OYK(|-^(#>d6
zFVCjW=Er>VY+<5ltxuc@7RH-l(dqtJl-M8Y1XHLJ`MMvx4-Uj&a|`S{xC@u^C==wI
zgL<J4To(+2Z>lLh-%miDK%hQqK93{B^L0P?CYfV&SbGfqZh%;Qexq}_kU&K6OAq#d
z+{;<Q8~DeUoZPdBITVVh71jt@&;w!W_7u}^A!J@_tolxZ|70b;pU?=)ryEn7l87O<
zpC=J95~9DC5KH8goRP3Ej8fqgDeWKXfRQ65rHN<jw?7&#Rj5{dtno`80P98n1JfyQ
z!gT7J7`EzdxE*{4V~@OpG5g+yedJphMia0cXoUpY#AN22r<KV>G-U}(l_`b=w}8{;
zci>LXb04?;@4!<1Hu_F(4YO%)!6vX3=Ee8IlpngIr~AhU4h_WW(3J=dkrA|JB?5z%
zBX~_9)`YD_WW+M8nAsjnCs2CZ<&44$eyAu3#r+$RRP9CJdcjI$Cwt*wv<;R`(MR+W
zc6)tRecaEN@VH14A+lo?#lNS7RkNkdWVWn#+SQl7aMYX7$;}XR5BJf`i0KH6P$l{;
z)ki;neb_`9K($XF7C}mU>7hhh3W?r!?J&k|G|p$HAv^yf@~&LM$+%;%8DWWzj?K}2
zv>v+Cstnzz57mAH3=Y+Y=@NbPUuFQSC<SJo>Hx2!Cg?ftf3W+&cEp}KiI~{qb%>2U
zA=>urjHF_R#A}-a9#(Fo+CB=JN5S&$kL&#hzSOpi+CuT{;U*#@5K;b}uywgU;<qcP
z@{_Qh(qZsyssjQ<UBDhtxxTIr&=SzrQ4wdq>@&@xBonB18^C_20UY-m!sW0b8BYZ4
zH9+s#dT2XT5A8^8O-FQt*Zeuc{Tb{5=^1C>?5cu^YX`Jb8Q>EOB`jAP!s(zP91j@4
z`LF>T_84Hq4-%#v{}{dr7U(gdF)rq&f&UDLUuSX3ee}~qas2t0Uyu^B9xK0<@T7V(
zp50wQJ3C8)1#NTdp<<9|dwSc7HbbGfdu<KHd=rGtZ_2BVGrQ#USdl4dwl0@6E9&Y1
zxfoD<>27G%eO!|#J~3vs6Lx%oE)xyV&BG8qJdI!*X#~f8M8X~;IP5aS;ME5BX1)>w
zNA^Zo<Z7BcRd3m8xR{fU3_4DnJRX)4dZFLq#u&D~860;vroP<Y5avq_&~>~LU8#IE
zpWhOT69=O0L}MH}wTE_?{QE*V_-_OFFFnNXd=DSs-02^&#Dj8rF|GQeaMawJPJ8}Q
zWVk(n_xlVLYVNwBwt5a~9?`BZZ5|au4R9^3fe^yN({gpVdX8KN1k98YMI9hwU){R#
z$0MX{RbX4q^79s0oNR`L2_{$&Yl6jR%;38I6LciS?lw_D?k}M$#Zb>_5<07z!NQ{l
z>}Qx`<hKLl<IMiB9&HADS6dAAG=ue6Q;ZmI0c+3R_>wY6w@G?vPg&p#3Lz%A@3dC<
z+);@E<2zx@yy38)WsbEwR^Z9wM}mO+_p6bY6^F(2{cF{qp)_YXYM$&8`+EGkU4HBH
z%T_wyL2Y~S^uZ3K9iNItly!n;D}@MtPr5P3k*_6Woe%{P>%h%$e{CJm$yv{(os$B#
zi$Bn~gnWkja9#U3dQWZ!v+v%3D(E9PtZV~^Rdgh%f<GW}{1BFbZD7R+XoEp3KZNas
zo|rmy3PM6wBRo75^X7WNYJ@o)0zQRm6(P6{f%*rv!N`>#h;tsNf51oR;r$^7O*6yY
zD%lHu`soppV>VzpZD0;YwBpr6q;DtekL-`Q-6N2EWGs>nxgzGr!T51aUsC>05#_5S
z#n-1oNDncaC1f0uP?SV<0HwyXy^<z$o}{6axRE_y5YW*@xw8`qRy!9-!{YWi#kUS$
z5SW~q2fu<}+5jv{Hib{TDdv-RsLxPJq-))AF{M7=bW^B22Z`dSpg0FtO7d{v@Lu%&
zsxNueKrG_)sOv-Ead^B%$tILK`(r_jIXaDh50~=K<Kcs9;Q{%V60nf!hI0p-kfJw3
z)^TI(50kKg>U}Z>;gse!EtNMuMM=$Q2iO2dH_(=NzJ$_LxeiF6f`~nU>wsuKssrl3
z59r{iSlVr(9xT@wYKDXvK?mz_Lzpcz##fV@Q{EqdNyk2h`Eq0QoYWBACp3WR{Du_Q
zjYuCFVQ5q%m@RGylbLVA#$gcl9M~zc0%r$KlQve?=s)pO^qJQXRw0exu)C4y&*Su<
z@dhq$0FNUd!Y^eII!<Vfjk_bnJAN*|&!5=^|4CfOH^a6S3aadsC`~gaQPU#Bm<k_b
z6rV9d>Rtsl_{zp|Z4gQ%gcG8u4u~OwxKgC7pz)tpuMX(oqVVnPriU-b>uCslBq-3;
zgS>(~!e+_eX!Qre^>8aV9%=yl-NvxnL4vr~7>);xVG(SI&nYu>a3*nd`xGOch9N06
zzK#G+lO7)9(AT~rdl}l>8KRGuKJ51xQ#LRX<2fB_2$w@G@O{bv^j+~0Y$uzD-y0r3
zd4kka(O6EplN;NTwzCSTDZUqyCaj>$!1aDG2^*y~ETGEMm*Sm0AtzS$fNN<I9#9?d
zs8FsB`F+5$sT2a=Nn6NtIRrX58TfuVP7l53>T7snjBn=Y<Exqac+XP8#BH77ozNQt
z$xt&t0@ViA8^{2v3mgbGQA%{5LS&87gXyR)7(0H9D2#FovIGH~BGrq1U^=WDJ|jZ8
zju=Sw1oyX&qB>(4VTmCIuF=QrxE`3Yvl|*&Qx&%%5IcU{q1hDahb1JSdqRwaLG0F-
zNX%09kZV&qO(gfG8o#at&OS-oV6{xnNm72U1K0z&4)`HZR|hDl4rnTeKqpmm|8DdJ
zL&7Ko)*8Y(!Vor*q|iS4Xh-Vl9b<wihdaRBrv<*5(gG&aTf$~#Ym7edrhw}q##>Nr
zeFH;heT7-y&Y<|u6?H*&ex~q*bsNGl#MuNR*SEr`eR3b}YaQ5{#%zh+p3Pytpamu!
z{v6&XP0)!}xVz1JkNXd_ygA<K{YUJ^YrK@0M;^rcecsja28RviP0kfcbE&lFr#fHk
z25HYPLLi)Wh&zLbB-$MDb5+{+0n4Ww?o_Ks8d4Rg*89@A>GIAb4ipBOF78S?D$&JV
z51*@)u<?5jK5?d4Kzo7(@g_pF=AR<rqCLR^60bVYGYhHacbd~5{!9FY_%Q)o%QFFo
zj_-qNtPK{%nNwdLOYSEGmB!<7d3^pJpLjFP&}AQ>lS8XK2Zu2Zb0@Zo;MKc$RG~S0
zP+r9dGK^iE>wE^EbG65-%^r|S9-#{XCW#4R4G5+zLd0mi+zrmS+kD+bnrboCsIz0!
z<(%WGz|mNSP?;KPfI)%!;LOl%tPy(A2BU`uiIs;jx{sH^=k?LkqcOgo@CM8*zeYr4
zIPz()&aTfPz@cy^Jwa$gzlm+p-NT6bFyy|^kJ)QNL;BtZHJx1apA51$n>TA*XTKm?
z&A=H7VO({dT;JchB){;W>Q2=B4=zi%mn**tn@_t?7DCnst^?R}balX9+6+x|P~KiL
zwR3ApZKBri;@CW(tA_$63-xOVwWf>oYx{U9YncE#;u~+$1TFe#QU6@NHiW5nE0_%F
zjxAd@iI*k(wus;K@*hI--v_8h4~K>KXXq{ZC|?+-{`d6u(y!^_s`z_vM-#946W)*F
zcYTM}DKx8SOUo<EHT|J=@~ZNio&(_$Hv7wOeE9tz@BCN;n2e0W<N=A~4e3(t>77!o
z-(>0Mxnr74=huEh1G>7jnA_1salM^`vZ%eivbepyesKpUWmzXzy_!L*3^YS19a@F`
z0YV$XCiD%M4DE^^e%OxNw{MC+qAV}Jh8s7^k(ZYZC-)H;vHEjZiSfwOUN#Pazi)7`
z(X%dN3?5lHn@yeL(O$h`Ivb)8E6guE4wLblDbCjtF>ElYyC`}t$IG6<WiQtVS57OQ
zU5ZiE94Ddzh`ebdC3v|tSV9{hJy%!lPh<Uuc5h|o)a8TzZr$2gIrjWyfMefJ`nt3?
z@9e6q?(DAjtP7>cKZYT?ySIeN;GT$zUXRO{^N^jLg`Au$<dX5JX~|HHvP0i-pP-YQ
zK0U8^uKz!x^BCo`&ZCu&`#G9UnCkM;3aZ@^^qoTU0~yM1c&<_=;MnFmpTXx`?WI%f
zM^PQXp5i-6s`VMKxI5QXuW*K=LCOrL#%p{gy=~&@Y0}ukV@N~t0QoOR_}^oOI1YKk
za-`+kHY%HURfGX<UHf!#Q{EdKWbl-;g7sR1S0lV3Y{Og18zd@!&z?&~N@^0}4ARn*
z5p(JUoZRd%e9gxg@<-#*ecC}j`*Mu(v59j(mub%Lg!@t*kbP27yLE+J18~l#d@f>~
z^?~>J9QTW8+st)9)^X`68DG8l+Yha0OtAW!WH+M$ue!6dMN=0SmqsuA8x6BTXl!R^
z*V4(!sfEd?F5M_AR8dXvwC{X<{2{!JNdsD7;PAd!wJK2T<N2Q}PMkc3lQGA!@4y~7
zy4qpjyboz7X+V9HFOE?UedZdl2mCbHrT1vh(On(qjMlH(8lcdWq$p}B{b_{KQ`+Nq
ze@TS1`{g=-R9|!Pm{c1ySE2E8H9FABW_A->TifPjTQfGE>}&9<{~_XklQU!@%v?Hm
z>O4lTibCKir^G)3ZKu)Ay*UOAHN{eYKk+mAuH8EXcJJMZ&09CZ!Nm?=k9{AV-6;gz
zDFj|Jjt-QHpLKFoJ{;)K)4|qmOb5@=z3gW?8I;YVmEX2fLh?ST_DYiUj5avWO4Fqp
zGXB}AZIUK}_6Kulw>j5UnKXG+$4}XKcXyj6Lxu>KmqqW7KJ=in&$xF#rHR}b9Bl9_
z6-O+DuSQryjde(K%@C)48Xuqeny8JDn#c`nHS41y2<tSV;j1+&*AW`q;P<tCgt)#G
z*7SXYgAJe30z4Qrs)wzkqhs5l4i2AsjOy8E#;DedzEv3?ojqDV$9t?^`GRqZO2Tb#
zcfHctqm=2>RYu!qyS8$kF?L`}c6E+*?SH`i?yA4=;dcaG+@%kQfNI_sbf-N$Z<c<8
zq8{Y;1l=bZpvS}}7~wnwW5$fe_z7d{;6dQ>*umKjUwOQVt`n8oe)XXnOFr*Pdy&p=
zipPDOIu9N-YSjDWx*s|@4R7<Yg<I>kLnpVIKykfbcHd8yeAlz1@0^~W`+4{Jo2PnY
zW1c@7>^ah;v58vEe;g&(`+w@Amh?I}HEYq)S<k1vlb*VRlfswL-cj*=dzFD-N2f+h
zI;ooYcT_c5*3q%a^3H@#jx7VaIKB~JZEq1g)XsLb%?PVCLj{Jcu^llagfYzCCZxOS
z{ou}y&4Z}+cmdol;LvmxT?cT5YN6`ckv#HkhDxP+OQo`Yi#*~DD=ViKJuIA?nwz^c
zvg>8nz=8@oc5$)VCV%12;-35bDb^rCLC{m1B<S-5cp?@S7DoK@8jB9c-w<*|c1h2X
zo{c?C)QvqyYQg7(SuV30%`%_W$YY4QA!7!qw%S!~Y-{V<oJE<&BoT9NYGY&5gva5r
z`FjY;zx0oh|I~-y7xD|!=fUkd&^5nRHX+tc)F%4R8_$zvP<vw=5+hb(8P4@!(UgUX
z@AGqVAM-}sf9h0uWxLA6a;DN5{1;sN`Hv+1FIUlIydADSYybcN07*qoM6N<$f?y#M
AKmY&$

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_arrow_drop_down_white_24dp.png b/app/src/main/res/drawable-xxhdpi/ic_arrow_drop_down_white_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..c19c19d2bd2709454a29d9140d5d0a1ff51302c4
GIT binary patch
literal 152
zcmeAS@N?(olHy`uVBq!ia0vp^9w5xY0wn)GsXhaw;yqm)Lo)8Yz2eB#U?9M9(5ALd
z&e6u>Lico@h_6j*yKfo-6){+xJ+uDO)G6!2y{<pFwAK4%)ccaZJ4$35OYSZ$nR_bM
yQs2|MSZ-3;a~)4!%k4|1&Cy<|$qv-^?=eGL-g&={tA1G^Q#@V$T-G@yGywoDJ2-6s

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_nav_header.png b/app/src/main/res/drawable-xxhdpi/ic_nav_header.png
new file mode 100644
index 0000000000000000000000000000000000000000..a970ef7537a14b1d216de6790e767ddb2029a2a5
GIT binary patch
literal 18667
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
O0000<MNUMnLSTZ7rmGPE

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxxhdpi/ic_arrow_drop_down_white_24dp.png b/app/src/main/res/drawable-xxxhdpi/ic_arrow_drop_down_white_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..452e5021691e4dc4f13ae7d6359216cd807bc215
GIT binary patch
literal 185
zcmeAS@N?(olHy`uVBq!ia0vp^2_VeD0wg^q?%xcg8a!PbLn>~)z3Rx<Y#`$7*!OPs
z;WpM)3wVRX?_WB@`G>`G8!u292#CG8`Cs!c=gWUwFaJ%vR4aC=cFyHm<)y!ae82BD
z$o+S^rSo&ViqG8rGYl&KIUV})(_TpGS-oe*%>NTEnEY2;nETJ&>G2<Lr`Las7gpLq
bjN~a{I8|-PcZJoh86@E8>gTe~DWM4fMkq+2

literal 0
HcmV?d00001

diff --git a/app/src/main/res/layout/actionbar_progress_indicator.xml b/app/src/main/res/layout/actionbar_progress_indicator.xml
new file mode 100644
index 00000000..d26e1f7a
--- /dev/null
+++ b/app/src/main/res/layout/actionbar_progress_indicator.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<!--
+This is a progress indicator that should be displayed above the toolbar.
+See toolbar.xml layout for example of how to include it
+-->
+<ProgressBar xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    style="?android:attr/progressBarStyleHorizontal"
+    android:id="@+id/toolbar_progress"
+    android:layout_width="match_parent"
+    android:layout_height="@dimen/toolbar_progress_height"
+    android:indeterminate="true"
+    android:visibility="gone"
+    tools:showIn="@layout/toolbar_with_spinner" />
\ No newline at end of file
diff --git a/app/src/main/res/layout/nav_drawer_header.xml b/app/src/main/res/layout/nav_drawer_header.xml
index 1a596241..e57c327e 100644
--- a/app/src/main/res/layout/nav_drawer_header.xml
+++ b/app/src/main/res/layout/nav_drawer_header.xml
@@ -22,22 +22,27 @@
     android:orientation="vertical">
 
     <TextView android:id="@+id/drawer_title"
-        style="@style/TextAppearance.AppCompat.Headline"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_gravity="bottom"
         android:layout_margin="16dp"
-        android:drawableLeft="@drawable/ic_launcher"
+        android:textSize="20sp"
+        android:drawableLeft="@drawable/ic_nav_header"
         android:drawablePadding="10dp"
         android:gravity="center_vertical"
+        android:clickable="true"
         android:text="@string/app_name"
         android:textColor="@android:color/white" />
     <TextView
         android:id="@+id/book_name"
-        style="@style/TextAppearance.AppCompat.Subhead"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
+        android:padding="5dp"
+        android:gravity="center_vertical"
         android:textColor="@android:color/white"
-        android:layout_marginLeft="75dp"
+        android:textSize="@dimen/text_size_medium"
+        android:layout_marginLeft="55dp"
+        android:drawableRight="@drawable/ic_arrow_drop_down_white_24dp"
+        android:clickable="true"
         tools:text="Current Book Name"/>
 </LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/toolbar.xml b/app/src/main/res/layout/toolbar.xml
index 35aa3610..b8ca5498 100644
--- a/app/src/main/res/layout/toolbar.xml
+++ b/app/src/main/res/layout/toolbar.xml
@@ -21,12 +21,7 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content">
 
-    <ProgressBar android:id="@+id/toolbar_progress"
-        android:layout_width="match_parent"
-        android:layout_height="@dimen/toolbar_progress_height"
-        style="?android:attr/progressBarStyleHorizontal"
-        android:indeterminate="true"
-        android:visibility="visible"/>
+    <include layout="@layout/actionbar_progress_indicator" />
 
     <android.support.v7.widget.Toolbar
         android:id="@+id/toolbar"
diff --git a/app/src/main/res/layout/toolbar_with_spinner.xml b/app/src/main/res/layout/toolbar_with_spinner.xml
index 3911fed8..f2068c1d 100644
--- a/app/src/main/res/layout/toolbar_with_spinner.xml
+++ b/app/src/main/res/layout/toolbar_with_spinner.xml
@@ -20,12 +20,7 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content">
 
-    <ProgressBar android:id="@+id/toolbar_progress"
-        android:layout_width="match_parent"
-        android:layout_height="@dimen/toolbar_progress_height"
-        style="?android:attr/progressBarStyleHorizontal"
-        android:indeterminate="true"
-        android:visibility="gone"/>
+    <include layout="@layout/actionbar_progress_indicator" />
 
     <android.support.v7.widget.Toolbar
         android:id="@+id/toolbar"
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
index ec96a25c..d195cdcd 100644
--- a/app/src/main/res/values/dimens.xml
+++ b/app/src/main/res/values/dimens.xml
@@ -20,7 +20,7 @@
     <dimen name="dialog_padding">10dp</dimen>
     <dimen name="hint_margin">-8dp</dimen>
     <dimen name="text_size_small">14sp</dimen>
-    <dimen name="text_size_medium">18sp</dimen>
+    <dimen name="text_size_medium">16sp</dimen>
     <dimen name="text_size_large">18sp</dimen>
     <dimen name="edge_padding">12dp</dimen>
     <dimen name="widget_margin">8dp</dimen>

From 9eb589cb0fe8cd3648fe68fd516974305d05e166 Mon Sep 17 00:00:00 2001
From: Salama AB <aksalj@aksalj.me>
Date: Sat, 5 Dec 2015 11:06:15 +0300
Subject: [PATCH 012/121] Update passcode lock screen

---
 app/src/main/res/drawable/numeric_button.xml       |  47 +--
 .../main/res/layout/fragment_numeric_keyboard.xml  | 406 +++++++++++++++------
 app/src/main/res/values/colors.xml                 |   1 +
 app/src/main/res/values/dimens.xml                 |   5 +
 app/src/main/res/values/donottranslate.xml         |   1 +
 app/src/main/res/values/strings.xml                |  23 ++
 app/src/main/res/values/styles.xml                 |   2 +-
 7 files changed, 336 insertions(+), 149 deletions(-)

diff --git a/app/src/main/res/drawable/numeric_button.xml b/app/src/main/res/drawable/numeric_button.xml
index 696f061c..4f7baa87 100644
--- a/app/src/main/res/drawable/numeric_button.xml
+++ b/app/src/main/res/drawable/numeric_button.xml
@@ -15,38 +15,25 @@
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
-
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true" >
-        <shape>
-            <solid
-                android:color="@color/default_line_indicator_selected_color" />
-            <corners
-                android:radius="200dp" />
-            <stroke
-                android:width="1dp"
-                android:color="@color/vpi__bright_foreground_disabled_holo_light" />
-        </shape>
-    </item>
-    <item android:state_enabled="false" >
-        <shape>
-            <solid
-                android:color="@color/abc_primary_text_disable_only_material_dark" />
-            <corners
-                android:radius="200dp" />
-            <stroke
-                android:width="1dp"
-                android:color="@color/vpi__bright_foreground_disabled_holo_light" />
+
+    <item android:state_pressed="true">
+        <shape android:shape="oval">
+            <padding
+                android:bottom="5dp" android:left="5dp"
+                android:right="5dp" android:top="5dp" />
+            <solid android:color="@color/credit_green"/>
         </shape>
+
     </item>
-    <item>
-        <shape>
-            <solid android:color="@android:color/transparent" />
-            <corners
-                android:radius="200dp" />
-            <stroke
-                android:width="1dp"
-                android:color="@color/vpi__bright_foreground_disabled_holo_light" />
+
+    <item android:state_enabled="true">
+        <shape android:shape="oval">
+            <padding
+                android:bottom="5dp" android:left="5dp"
+                android:right="5dp" android:top="5dp" />
+            <stroke android:color="@color/theme_primary" android:width="1dp"/>
+            <solid android:color="@color/transparent"/>
         </shape>
     </item>
-</selector>
+</selector>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_numeric_keyboard.xml b/app/src/main/res/layout/fragment_numeric_keyboard.xml
index 44dc9985..5eef4565 100644
--- a/app/src/main/res/layout/fragment_numeric_keyboard.xml
+++ b/app/src/main/res/layout/fragment_numeric_keyboard.xml
@@ -17,39 +17,29 @@
 -->
 
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:layout_width="fill_parent"
-              android:layout_height="fill_parent"
-              android:orientation="vertical"
-              android:weightSum="2">
-
-    <LinearLayout android:layout_width="fill_parent"
-                  android:layout_height="fill_parent"
-                  android:orientation="vertical"
-                  android:gravity="center"
-                  android:layout_weight="0.8"
-                  android:weightSum="1">
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical"
+    android:weightSum="2">
+
+    <LinearLayout
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:layout_weight="1.4"
+        android:gravity="center"
+        android:orientation="vertical">
 
         <ImageView
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:src="@drawable/ic_launcher"
-            android:layout_weight="0.1" />
-
-        <TextView
-            android:id="@+id/passcode_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="center"
-            android:text="@string/label_passcode"
-            android:textSize="25sp"
-            android:layout_weight="0.1" />
+            android:src="@drawable/ic_launcher" />
 
         <LinearLayout
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:orientation="horizontal"
             android:gravity="center"
-            android:layout_weight="0.1" >
+            android:layout_marginTop="25dp"
+            android:orientation="horizontal">
 
             <EditText
                 android:id="@+id/passcode1"
@@ -69,107 +59,287 @@
 
         </LinearLayout>
 
-    </LinearLayout>
-
-    <LinearLayout android:layout_width="fill_parent"
-                  android:layout_height="fill_parent"
-                  android:orientation="vertical"
-                  android:layout_weight="1.2"
-                  android:weightSum="4">
-
-        <LinearLayout android:id="@+id/one_to_three"
-                      android:layout_width="match_parent"
-                      android:layout_height="fill_parent"
-                      android:orientation="horizontal"
-                      android:weightSum="3"
-                      android:layout_weight="1">
-
-            <Button
-                android:id="@+id/one_btn"
-                android:text="1"
-                style="@style/NumericButton" />
-
-            <Button
-                android:id="@+id/two_btn"
-                android:text="2"
-                style="@style/NumericButton" />
-
-            <Button
-                android:id="@+id/three_btn"
-                android:text="3"
-                style="@style/NumericButton" />
-        </LinearLayout>
-
-        <LinearLayout android:id="@+id/four_to_six"
-                      android:layout_width="match_parent"
-                      android:layout_height="fill_parent"
-                      android:orientation="horizontal"
-                      android:weightSum="3"
-                      android:layout_weight="1">
-
-            <Button
-                android:id="@+id/four_btn"
-                android:text="4"
-                style="@style/NumericButton" />
-
-            <Button
-                android:id="@+id/five_btn"
-                android:text="5"
-                style="@style/NumericButton" />
-
-            <Button
-                android:id="@+id/six_btn"
-                android:text="6"
-                style="@style/NumericButton" />
-        </LinearLayout>
 
-        <LinearLayout android:id="@+id/seven_to_nine"
-                      android:layout_width="match_parent"
-                      android:layout_height="fill_parent"
-                      android:orientation="horizontal"
-                      android:weightSum="3"
-                      android:layout_weight="1">
-
-            <Button
-                android:id="@+id/seven_btn"
-                android:text="7"
-                style="@style/NumericButton" />
-
-            <Button
-                android:id="@+id/eight_btn"
-                android:text="8"
-                style="@style/NumericButton" />
-
-            <Button
-                android:id="@+id/nine_btn"
-                android:text="9"
-                style="@style/NumericButton" />
-        </LinearLayout>
+        <TextView
+            android:id="@+id/passcode_label"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:text="@string/label_passcode"
+            android:textSize="15sp" />
 
-        <LinearLayout android:id="@+id/zero"
-                      android:layout_width="match_parent"
-                      android:layout_height="fill_parent"
-                      android:orientation="horizontal"
-                      android:weightSum="3"
-                      android:layout_weight="1">
+    </LinearLayout>
 
-            <Button
-                android:id="@+id/empty_btn"
-                android:text=""
-                android:enabled="false"
-                style="@style/NumericButton" />
+    <TableLayout
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:layout_weight="0.6"
+        android:gravity="center">
 
-            <Button
-                android:id="@+id/zero_btn"
-                android:text="0"
-                style="@style/NumericButton" />
+        <TableRow
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center">
+
+
+            <LinearLayout
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
+                android:orientation="vertical"
+                android:background="@drawable/numeric_button"
+                android:gravity="center"
+                android:clickable="true"
+                android:id="@+id/one_btn">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="@string/digit_one"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceSmall"
+                    android:text="@string/digit_one_text"/>
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
+                android:orientation="vertical"
+                android:background="@drawable/numeric_button"
+                android:gravity="center"
+                android:clickable="true"
+                android:id="@+id/two_btn">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="@string/digit_two"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceSmall"
+                    android:text="@string/digit_two_text"/>
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
+                android:orientation="vertical"
+                android:background="@drawable/numeric_button"
+                android:gravity="center"
+                android:clickable="true"
+                android:id="@+id/three_btn">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="@string/digit_three"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceSmall"
+                    android:text="@string/digit_three_text"/>
+            </LinearLayout>
+
+
+        </TableRow>
+
+        <TableRow
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center">
+            <LinearLayout
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
+                android:orientation="vertical"
+                android:background="@drawable/numeric_button"
+                android:gravity="center"
+                android:clickable="true"
+                android:id="@+id/four_btn">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="@string/digit_four"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceSmall"
+                    android:text="@string/digit_four_text"/>
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
+                android:orientation="vertical"
+                android:background="@drawable/numeric_button"
+                android:gravity="center"
+                android:clickable="true"
+                android:id="@+id/five_btn">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="@string/digit_five"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceSmall"
+                    android:text="@string/digit_five_text"/>
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
+                android:orientation="vertical"
+                android:background="@drawable/numeric_button"
+                android:gravity="center"
+                android:clickable="true"
+                android:id="@+id/six_btn">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="@string/digit_six"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceSmall"
+                    android:text="@string/digit_six_text"/>
+            </LinearLayout>
+
+        </TableRow>
+
+
+        <TableRow
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center">
+
+            <LinearLayout
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
+                android:orientation="vertical"
+                android:background="@drawable/numeric_button"
+                android:gravity="center"
+                android:clickable="true"
+                android:id="@+id/seven_btn">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="@string/digit_seven"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceSmall"
+                    android:text="@string/digit_seven_text"/>
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
+                android:orientation="vertical"
+                android:background="@drawable/numeric_button"
+                android:gravity="center"
+                android:clickable="true"
+                android:id="@+id/eight_btn">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="@string/digit_eight"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceSmall"
+                    android:text="@string/digit_eight_text"/>
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
+                android:orientation="vertical"
+                android:background="@drawable/numeric_button"
+                android:gravity="center"
+                android:clickable="true"
+                android:id="@+id/nine_btn">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="@string/digit_nine"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceSmall"
+                    android:text="@string/digit_nine_text"/>
+            </LinearLayout>
+
+
+        </TableRow>
+
+        <TableRow
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center">
+            <View
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
+                android:visibility="invisible"/>
+
+            <LinearLayout
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
+                android:orientation="vertical"
+                android:background="@drawable/numeric_button"
+                android:gravity="center"
+                android:clickable="true"
+                android:id="@+id/zero_btn">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="@string/digit_zero"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceSmall"
+                    android:text="@string/digit_zero_text"/>
+            </LinearLayout>
 
             <ImageButton
-                android:id="@+id/delete_btn"
+                android:layout_width="@dimen/passcode_btn"
+                android:layout_height="@dimen/passcode_btn"
+                android:layout_margin="@dimen/passcode_btn_margin"
                 android:src="@drawable/ic_action_backspace"
-                style="@style/NumericButton" />
-        </LinearLayout>
+                android:hapticFeedbackEnabled="true"
+                android:id="@+id/delete_btn"
+                android:background="@color/transparent"/>
+        </TableRow>
 
-    </LinearLayout>
+    </TableLayout>
 
 </LinearLayout>
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
index 457a846e..9122dd7d 100644
--- a/app/src/main/res/values/colors.xml
+++ b/app/src/main/res/values/colors.xml
@@ -18,6 +18,7 @@
     <color name="debit_red">#c11b17</color>
     <color name="credit_green">#4cc552</color>
     <color name="light_gray">#FFAAAAAA</color>
+    <color name="transparent">#00000000</color>
     <color name="abs__holo_blue_light">#ff33b5e5</color>
     <color name="title_green">#319D67</color>
     <color name="account_green">#319D67</color>
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
index ec96a25c..53cf246f 100644
--- a/app/src/main/res/values/dimens.xml
+++ b/app/src/main/res/values/dimens.xml
@@ -33,4 +33,9 @@
     <dimen name="color_swatch_margins_small">4dip</dimen>
     <dimen name="card_min_height">80dp</dimen>
     <dimen name="toolbar_progress_height">2dp</dimen>
+
+
+    <dimen name="passcode_btn">70dp</dimen>
+    <dimen name="passcode_btn_margin">10dp</dimen>
+
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values/donottranslate.xml b/app/src/main/res/values/donottranslate.xml
index 5be9ac0b..b9f7cd09 100644
--- a/app/src/main/res/values/donottranslate.xml
+++ b/app/src/main/res/values/donottranslate.xml
@@ -36,6 +36,7 @@
     <string name="key_enable_crashlytics" translatable="false">enable_crashlytics</string>
     <string name="key_use_account_color" translatable="false">use_account_color</string>
     <string name="key_last_export_destination">last_export_destination</string>
+    <string name="empty"></string>
 
     <string-array name="key_transaction_type_values" translatable="false">
         <item>CREDIT</item>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 4e08ecc1..ed9dd816 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -416,4 +416,27 @@
         <item>All time</item>
         <item>Custom range</item>
     </string-array>
+
+    <!-- Passcode lock -->
+    <string name="digit_one">1</string>
+    <string name="digit_one_text">@string/empty</string>
+    <string name="digit_two">2</string>
+    <string name="digit_two_text">ABC</string>
+    <string name="digit_three">3</string>
+    <string name="digit_three_text">DEF</string>
+    <string name="digit_four">4</string>
+    <string name="digit_four_text">GHI</string>
+    <string name="digit_five">5</string>
+    <string name="digit_five_text">JKL</string>
+    <string name="digit_six">6</string>
+    <string name="digit_six_text">MNO</string>
+    <string name="digit_seven">7</string>
+    <string name="digit_seven_text">PQRS</string>
+    <string name="digit_eight">8</string>
+    <string name="digit_eight_text">TUV</string>
+    <string name="digit_nine">9</string>
+    <string name="digit_nine_text">WXYZ</string>
+    <string name="digit_zero">0</string>
+    <string name="digit_zero_text">+</string>
+
 </resources>
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
index 37a1f314..70c707e2 100644
--- a/app/src/main/res/values/styles.xml
+++ b/app/src/main/res/values/styles.xml
@@ -110,7 +110,7 @@
         <item name="android:password">true</item>
         <item name="android:maxLength">1</item>
         <item name="android:hint">*</item>
-        <item name="android:textSize">33sp</item>
+        <item name="android:textSize">23sp</item>
     </style>
 
     <style name="Divider">

From d871cf203abf703c63d6a439947839f2bc156b99 Mon Sep 17 00:00:00 2001
From: Falk Brockmann <falk.s.h.brockmann@gmail.com>
Date: Sat, 5 Dec 2015 16:07:29 +0100
Subject: [PATCH 013/121] Add compact view for transactions list

TODO: Fix crash when toggling modes to non-compact view and add global preference
---
 app/build.gradle                                   |   1 +
 .../ui/transaction/TransactionsListFragment.java   | 110 +++++++++++++--------
 .../android/ui/util/CursorRecyclerAdapter.java     |   4 +-
 .../res/layout/cardview_compact_transaction.xml    |  64 ++++++++++++
 .../main/res/menu/transactions_list_actions.xml    |   5 +
 app/src/main/res/values/donottranslate.xml         |   1 +
 6 files changed, 141 insertions(+), 44 deletions(-)
 create mode 100644 app/src/main/res/layout/cardview_compact_transaction.xml

diff --git a/app/build.gradle b/app/build.gradle
index fafb1331..4d8e61e1 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -79,6 +79,7 @@ android {
     }
 
     buildTypes {
+        //todo re-enable proguard and test coverage
         release {
             minifyEnabled true
 //            shrinkResources true
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index 8cb56f8c..9d781e19 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -21,7 +21,8 @@
 import android.content.res.Configuration;
 import android.database.Cursor;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
+import android.preference.PreferenceManager;
+import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.LoaderManager.LoaderCallbacks;
 import android.support.v4.content.Loader;
@@ -31,7 +32,6 @@
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.PopupMenu;
 import android.support.v7.widget.RecyclerView;
-import android.text.format.DateUtils;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -58,9 +58,7 @@
 import org.gnucash.android.ui.util.CursorRecyclerAdapter;
 import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
-import org.joda.time.LocalDate;
 
-import java.text.DateFormat;
 import java.util.List;
 
 import butterknife.Bind;
@@ -82,6 +80,7 @@
     private TransactionsDbAdapter mTransactionsDbAdapter;
     private String mAccountUID;
 
+	private boolean mUseCompactView = false;
 
 	private TransactionRecyclerAdapter mTransactionRecyclerAdapter;
 	@Bind(R.id.transaction_recycler_view) EmptyRecyclerView mRecyclerView;
@@ -94,9 +93,20 @@ public void onCreate(Bundle savedInstanceState) {
 		Bundle args = getArguments();
 		mAccountUID = args.getString(UxArgument.SELECTED_ACCOUNT_UID);
 
+		mUseCompactView = PreferenceManager.getDefaultSharedPreferences(getActivity())
+				.getBoolean(getActivity().getString(R.string.key_use_compact_list), false);
+		//if there was a local override of the global setting, respect it
+		if (savedInstanceState != null)
+			mUseCompactView = savedInstanceState.getBoolean(getString(R.string.key_use_compact_list), mUseCompactView);
 		mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 	}
-	
+
+	@Override
+	public void onSaveInstanceState(Bundle outState) {
+		super.onSaveInstanceState(outState);
+		outState.putBoolean(getString(R.string.key_use_compact_list), mUseCompactView);
+	}
+
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
@@ -146,7 +156,6 @@ public void refresh(String accountUID){
     @Override
 	public void refresh(){
 		getLoaderManager().restartLoader(0, null, this);
-
 	}
 	
 	@Override
@@ -164,16 +173,27 @@ public void onListItemClick(long id) {
 //		mTransactionEditListener.editTransaction(mTransactionsDbAdapter.getUID(id));
 	}
 
-
 	@Override
 	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
 		inflater.inflate(R.menu.transactions_list_actions, menu);	
 	}
 
 	@Override
+	public void onPrepareOptionsMenu(Menu menu) {
+		super.onPrepareOptionsMenu(menu);
+		MenuItem item = menu.findItem(R.id.menu_compact_trn_view);
+		item.setChecked(mUseCompactView);
+	}
+
+	@Override
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
-            default:
+			case R.id.menu_compact_trn_view:
+				item.setChecked(!item.isChecked());
+				mUseCompactView = !mUseCompactView;
+				mTransactionRecyclerAdapter.notifyItemRangeChanged(0, mTransactionRecyclerAdapter.getItemCount());
+				return true;
+			default:
                 return super.onOptionsItemSelected(item);
         }
 	}
@@ -227,8 +247,9 @@ public TransactionRecyclerAdapter(Cursor cursor) {
 
 		@Override
 		public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+			int layoutRes = mUseCompactView ? R.layout.cardview_compact_transaction : R.layout.cardview_transaction;
 			View v = LayoutInflater.from(parent.getContext())
-					.inflate(R.layout.cardview_transaction, parent, false);
+					.inflate(layoutRes, parent, false);
 			return new ViewHolder(v);
 		}
 
@@ -238,34 +259,15 @@ public void onBindViewHolderCursor(ViewHolder holder, Cursor cursor) {
 			holder.transactionId = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry._ID));
 
 			String description = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_DESCRIPTION));
-			holder.transactionDescription.setText(description);
+			holder.primaryText.setText(description);
 
 			final String transactionUID = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_UID));
 			Money amount = mTransactionsDbAdapter.getBalance(transactionUID, mAccountUID);
 			TransactionsActivity.displayBalance(holder.transactionAmount, amount);
 
-			List<Split> splits = SplitsDbAdapter.getInstance().getSplitsForTransaction(transactionUID);
-			String text = "";
-
-			if (splits.size() == 2 && splits.get(0).isPairOf(splits.get(1))){
-				for (Split split : splits) {
-					if (!split.getAccountUID().equals(mAccountUID)){
-						text = AccountsDbAdapter.getInstance().getFullyQualifiedAccountName(split.getAccountUID());
-						break;
-					}
-				}
-			}
-
-			if (splits.size() > 2){
-				text = splits.size() + " splits";
-			}
-			holder.transactionNote.setText(text);
-
 			long dateMillis = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_TIMESTAMP));
 			String dateText = TransactionsActivity.getPrettyDateFormat(getActivity(), dateMillis);
 
-			holder.transactionDate.setText(dateText);
-
 			final long id = holder.transactionId;
 			holder.itemView.setOnClickListener(new View.OnClickListener() {
 				@Override
@@ -274,27 +276,51 @@ public void onClick(View v) {
 				}
 			});
 
-			holder.editTransaction.setOnClickListener(new View.OnClickListener() {
-				@Override
-				public void onClick(View v) {
-					Intent intent = new Intent(getActivity(), FormActivity.class);
-					intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.TRANSACTION.name());
-					intent.putExtra(UxArgument.SELECTED_TRANSACTION_UID, transactionUID);
-					intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, mAccountUID);
-					startActivity(intent);
+			if (mUseCompactView) {
+				holder.secondaryText.setText(dateText);
+			} else {
+
+				List<Split> splits = SplitsDbAdapter.getInstance().getSplitsForTransaction(transactionUID);
+				String text = "";
+
+				if (splits.size() == 2 && splits.get(0).isPairOf(splits.get(1))) {
+					for (Split split : splits) {
+						if (!split.getAccountUID().equals(mAccountUID)) {
+							text = AccountsDbAdapter.getInstance().getFullyQualifiedAccountName(split.getAccountUID());
+							break;
+						}
+					}
 				}
-			});
 
+				if (splits.size() > 2) {
+					text = splits.size() + " splits";
+				}
+				holder.secondaryText.setText(text);
+				holder.transactionDate.setText(dateText);
+
+				holder.editTransaction.setOnClickListener(new View.OnClickListener() {
+					@Override
+					public void onClick(View v) {
+						Intent intent = new Intent(getActivity(), FormActivity.class);
+						intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.TRANSACTION.name());
+						intent.putExtra(UxArgument.SELECTED_TRANSACTION_UID, transactionUID);
+						intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, mAccountUID);
+						startActivity(intent);
+					}
+				});
+			}
 		}
 
 		public class ViewHolder extends RecyclerView.ViewHolder implements PopupMenu.OnMenuItemClickListener{
-			@Bind(R.id.primary_text) 		public TextView transactionDescription;
-			@Bind(R.id.secondary_text) 		public TextView transactionNote;
+			@Bind(R.id.primary_text) 		public TextView primaryText;
+			@Bind(R.id.secondary_text) 		public TextView secondaryText;
 			@Bind(R.id.transaction_amount)	public TextView transactionAmount;
-			@Bind(R.id.transaction_date)	public TextView transactionDate;
-			@Bind(R.id.edit_transaction)	public ImageView editTransaction;
 			@Bind(R.id.options_menu)		public ImageView optionsMenu;
 
+			//these views are not used in the compact view, hence the nullability
+			@Nullable @Bind(R.id.transaction_date)	public TextView transactionDate;
+			@Nullable @Bind(R.id.edit_transaction)	public ImageView editTransaction;
+
 			long transactionId;
 
 			public ViewHolder(View itemView) {
diff --git a/app/src/main/java/org/gnucash/android/ui/util/CursorRecyclerAdapter.java b/app/src/main/java/org/gnucash/android/ui/util/CursorRecyclerAdapter.java
index d71a7f79..93303aa0 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/CursorRecyclerAdapter.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/CursorRecyclerAdapter.java
@@ -159,7 +159,7 @@ public void changeCursor(Cursor cursor) {
      * closed.
      *
      * @param newCursor The new cursor to be used.
-     * @return Returns the previously set Cursor, or null if there wasa not one.
+     * @return Returns the previously set Cursor, or null if there was not one.
      * If the given new Cursor is the same instance is the previously set
      * Cursor, null is also returned.
      */
@@ -279,7 +279,7 @@ public void setFilterQueryProvider(FilterQueryProvider filterQueryProvider) {
      * @see ContentObserver#onChange(boolean)
      */
     protected void onContentChanged() {
-
+        notifyDataSetChanged();
     }
 
     private class ChangeObserver extends ContentObserver {
diff --git a/app/src/main/res/layout/cardview_compact_transaction.xml b/app/src/main/res/layout/cardview_compact_transaction.xml
new file mode 100644
index 00000000..c009d744
--- /dev/null
+++ b/app/src/main/res/layout/cardview_compact_transaction.xml
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:cardview="http://schemas.android.com/apk/res-auto"
+    cardview:cardUseCompatPadding="true"
+    cardview:cardPreventCornerOverlap="false"
+    android:foreground="?selectableItemBackground"
+    android:focusable="true"
+    android:clickable="true"
+    android:layout_marginLeft="5dp"
+    android:layout_marginRight="5dp"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="5dp"
+        android:minHeight="20dp">
+
+        <include android:id="@+id/list_item_2_lines"
+            layout="@layout/list_item_2_lines"
+            android:layout_height="match_parent"
+            android:layout_width="0dp"
+            android:layout_marginLeft="5dp"
+            android:layout_weight="2" />
+
+        <TextView
+            android:id="@+id/transaction_amount"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:singleLine="true"
+            android:textSize="18sp"
+            tools:text="$450.000.000"
+            android:layout_gravity="bottom"
+            android:layout_marginRight="@dimen/dialog_padding"/>
+
+        <ImageView
+            android:id="@+id/options_menu"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:background="?attr/selectableItemBackgroundBorderless"
+            android:paddingTop="20dp"
+            android:paddingLeft="24dp"
+            android:scaleType="centerInside"
+            android:src="@drawable/ic_more_vert_black_24dp"
+            tools:ignore="ContentDescription" />
+    </LinearLayout>
+</android.support.v7.widget.CardView>
\ No newline at end of file
diff --git a/app/src/main/res/menu/transactions_list_actions.xml b/app/src/main/res/menu/transactions_list_actions.xml
index f46eba02..b52c7933 100644
--- a/app/src/main/res/menu/transactions_list_actions.xml
+++ b/app/src/main/res/menu/transactions_list_actions.xml
@@ -26,4 +26,9 @@
           android:icon="@drawable/content_edit_holo_dark"
           android:title="@string/title_edit_account"
           app:showAsAction="never|withText" />
+    <item android:id="@+id/menu_compact_trn_view"
+          android:icon="@drawable/content_edit_holo_dark"
+          android:title="Compact View"
+          android:checkable="true"
+          app:showAsAction="never|withText" />
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values/donottranslate.xml b/app/src/main/res/values/donottranslate.xml
index 5be9ac0b..659ae424 100644
--- a/app/src/main/res/values/donottranslate.xml
+++ b/app/src/main/res/values/donottranslate.xml
@@ -36,6 +36,7 @@
     <string name="key_enable_crashlytics" translatable="false">enable_crashlytics</string>
     <string name="key_use_account_color" translatable="false">use_account_color</string>
     <string name="key_last_export_destination">last_export_destination</string>
+    <string name="key_use_compact_list">use_compact_list</string>
 
     <string-array name="key_transaction_type_values" translatable="false">
         <item>CREDIT</item>

From 4669a87d0b27f3babf9d4e4467056a837cff3ee4 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 7 Dec 2015 15:45:09 +0100
Subject: [PATCH 014/121] Update dependency versions

Fix test build broken (by changes for multiple book support)
---
 app/build.gradle                                            | 13 +++++++------
 .../org/gnucash/android/test/ui/AccountsActivityTest.java   | 13 ++++++++++++-
 .../org/gnucash/android/test/ui/ExportTransactionsTest.java |  6 ++++--
 .../gnucash/android/test/ui/FirstRunWizardActivityTest.java |  3 ++-
 .../org/gnucash/android/test/ui/PieChartReportTest.java     |  3 ++-
 .../gnucash/android/test/ui/TransactionsActivityTest.java   |  3 ++-
 app/src/main/java/org/gnucash/android/db/BookDbHelper.java  |  1 +
 app/src/main/java/org/gnucash/android/model/Book.java       |  9 +++++++++
 build.gradle                                                |  2 +-
 9 files changed, 40 insertions(+), 13 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 4d8e61e1..bcd3fe0b 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -26,7 +26,7 @@ android {
         applicationId "org.gnucash.android"
         testApplicationId 'org.gnucash.android.test'
         minSdkVersion 10
-        targetSdkVersion 23 //robolectric tests only support up to API level 21 at the moment
+        targetSdkVersion 23
         versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
         versionName "${versionMajor}.${versionMinor}.${versionPatch}"
         resValue "string", "app_version_name", "${versionName}"
@@ -92,7 +92,7 @@ android {
         }
         debug {
             debuggable true
-            testCoverageEnabled true
+//            testCoverageEnabled true
             signingConfig signingConfigs.debug
         }
     }
@@ -196,17 +196,18 @@ dependencies {
             'com.android.support:appcompat-v7:'     + androidSupportVersion,
             'com.android.support:design:'           + androidSupportVersion,
             'com.android.support:cardview-v7:'      + androidSupportVersion,
+            'com.android.support:preference-v7:'    + androidSupportVersion,
             'com.android.support:recyclerview-v7:'  + androidSupportVersion,
             'com.viewpagerindicator:library:2.4.1@aar',
-            'com.code-troopers.betterpickers:library:2.1.2',
+            'com.code-troopers.betterpickers:library:2.2.1',
             'org.jraf:android-switch-backport:2.0.1@aar',
             'com.github.PhilJay:MPAndroidChart:v2.1.3',
             'joda-time:joda-time:2.7',
-            'com.google.android.gms:play-services-drive:7.0.0',
+            'com.google.android.gms:play-services-drive:8.3.0',
             'com.jakewharton:butterknife:7.0.1',
-            'com.kobakei:ratethisapp:0.0.3',
+            'com.kobakei:ratethisapp:0.0.4',
             'com.squareup:android-times-square:1.6.4@aar',
-            'com.github.techfreak:wizardpager:1.0.0',
+            'com.github.techfreak:wizardpager:1.0.3',
             'net.objecthunter:exp4j:0.4.5',
             'org.apache.jackrabbit:jackrabbit-webdav:2.11.1'
     )
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 89c70f7d..cd6b6632 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -33,12 +33,15 @@
 import com.kobakei.ratethisapp.RateThisApp;
 
 import org.gnucash.android.R;
+import org.gnucash.android.db.BookDbHelper;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.Book;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
@@ -101,7 +104,8 @@ public void setUp() throws Exception {
         preventFirstRunDialogs(getInstrumentation().getTargetContext());
         mAcccountsActivity = getActivity();
 
-        mDbHelper = new DatabaseHelper(mAcccountsActivity);
+        Book book1 = new Book();
+        mDbHelper = new DatabaseHelper(mAcccountsActivity, book1.getUID());
         try {
             mDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
@@ -117,6 +121,13 @@ public void setUp() throws Exception {
         account.setUID(DUMMY_ACCOUNT_UID);
 		account.setCommodity(Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE));
 		mAccountsDbAdapter.addRecord(account);
+
+        String rootUID = mAccountsDbAdapter.getOrCreateGnuCashRootAccountUID();
+        book1.setRootAccountUID(rootUID);
+        book1.setActive(true);
+        BooksDbAdapter booksDbAdapter = new BooksDbAdapter(new BookDbHelper(mAcccountsActivity).getWritableDatabase());
+        booksDbAdapter.addRecord(book1);
+
         refreshAccountsList();
 	}
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index 36837cd8..30405027 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -36,12 +36,14 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.RecurrenceDbAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.model.Account;
+import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.PeriodType;
 import org.gnucash.android.model.ScheduledAction;
@@ -99,7 +101,7 @@ public void setUp() throws Exception {
 		AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext());
 		mAcccountsActivity = getActivity();
 
-        mDbHelper = new DatabaseHelper(getActivity());
+        mDbHelper = new DatabaseHelper(getActivity(), BaseModel.generateUID());
         try {
             mDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
@@ -241,7 +243,7 @@ public void testShouldCreateExportSchedule(){
 		onView(withText("OK")).perform(click());
 
 		onView(withId(R.id.menu_save)).perform(click());
-		ScheduledActionDbAdapter scheduledactionDbAdapter = new ScheduledActionDbAdapter(mDb);
+		ScheduledActionDbAdapter scheduledactionDbAdapter = new ScheduledActionDbAdapter(mDb, new RecurrenceDbAdapter(mDb));
 		List<ScheduledAction> scheduledActions = scheduledactionDbAdapter.getAllEnabledScheduledActions();
 		assertThat(scheduledActions)
 				.hasSize(1)
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java
index a480b56e..4d25d3f1 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java
@@ -28,6 +28,7 @@
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
+import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.ui.wizard.FirstRunWizardActivity;
 import org.junit.Before;
 import org.junit.Test;
@@ -65,7 +66,7 @@ public void setUp() throws Exception {
         injectInstrumentation(InstrumentationRegistry.getInstrumentation());
 
         mActivity = getActivity();
-        mDbHelper = new DatabaseHelper(mActivity);
+        mDbHelper = new DatabaseHelper(mActivity, BaseModel.generateUID());
         try {
             mDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index bdea2115..ab3b94d0 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -40,6 +40,7 @@
 import org.gnucash.android.importer.GncXmlImporter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
@@ -107,7 +108,7 @@ public void setUp() throws Exception {
         mReportsActivity = getActivity();
 
         SQLiteDatabase db;
-        DatabaseHelper dbHelper = new DatabaseHelper(getInstrumentation().getTargetContext());
+        DatabaseHelper dbHelper = new DatabaseHelper(mReportsActivity, BaseModel.generateUID());
         try {
             db = dbHelper.getWritableDatabase();
         } catch (SQLException e) {
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 2054dfc2..ce4b9196 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -36,6 +36,7 @@
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
+import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
@@ -109,7 +110,7 @@ public void setUp() throws Exception {
 		AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext());
 
 
-        mDbHelper = new DatabaseHelper(getInstrumentation().getTargetContext());
+        mDbHelper = new DatabaseHelper(getInstrumentation().getTargetContext(), BaseModel.generateUID());
         try {
             mDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
diff --git a/app/src/main/java/org/gnucash/android/db/BookDbHelper.java b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
index daedf545..0b14e579 100644
--- a/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
@@ -77,6 +77,7 @@ public void onOpen(SQLiteDatabase db) {
             return;
         }
 
+        //todo move this to the DatabaseHelper class
         String sql = "SELECT COUNT(*) FROM " + BookEntry.TABLE_NAME;
         SQLiteStatement statement = db.compileStatement(sql);
         long count = statement.simpleQueryForLong();
diff --git a/app/src/main/java/org/gnucash/android/model/Book.java b/app/src/main/java/org/gnucash/android/model/Book.java
index cfe7c6c2..665b34ab 100644
--- a/app/src/main/java/org/gnucash/android/model/Book.java
+++ b/app/src/main/java/org/gnucash/android/model/Book.java
@@ -31,11 +31,20 @@
     private boolean mActive;
 
     /**
+     * Default constructor
+     */
+    public Book(){
+        mRootTemplateUID = generateUID();
+        //nothing to see here, move along
+    }
+
+    /**
      * Create a new book instance
      * @param rootAccountUID GUID of root account
      */
     public Book(String rootAccountUID){
         this.mRootAccountUID = rootAccountUID;
+        this.mRootTemplateUID = generateUID();
     }
 
     /**
diff --git a/build.gradle b/build.gradle
index e9299274..17ec11be 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,7 @@ buildscript {
 	}
 	dependencies {
 		classpath 'com.android.tools.build:gradle:2.0.0-alpha2'
-		classpath 'io.fabric.tools:gradle:1.+'
+		classpath 'io.fabric.tools:gradle:1.21.0'
 	}
 }
 

From 0c75d357ce3b648590c3e603ebfaf18affd2a229 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Tue, 8 Dec 2015 13:57:35 +0800
Subject: [PATCH 015/121] rewrite db replace

---
 .../android/db/adapter/AccountsDbAdapter.java      |  70 ++++++------
 .../android/db/adapter/BudgetAmountsDbAdapter.java |  38 +++----
 .../android/db/adapter/BudgetsDbAdapter.java       |  32 +++---
 .../android/db/adapter/CommoditiesDbAdapter.java   |  46 ++++----
 .../android/db/adapter/DatabaseAdapter.java        | 117 +++++++++++++++++++--
 .../android/db/adapter/PricesDbAdapter.java        |  44 ++++----
 .../android/db/adapter/RecurrenceDbAdapter.java    |  36 +++----
 .../db/adapter/ScheduledActionDbAdapter.java       |  88 +++++++---------
 .../android/db/adapter/SplitsDbAdapter.java        |  64 +++++------
 .../android/db/adapter/TransactionsDbAdapter.java  |  55 +++++-----
 .../gnucash/android/importer/GncXmlHandler.java    |   4 +
 11 files changed, 326 insertions(+), 268 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index 906b9673..34704d2a 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -81,9 +81,22 @@
      * @param db SQliteDatabase instance
      */
     public AccountsDbAdapter(SQLiteDatabase db, TransactionsDbAdapter transactionsDbAdapter) {
-        super(db, AccountEntry.TABLE_NAME);
+        super(db, AccountEntry.TABLE_NAME, new String[]{
+                AccountEntry.COLUMN_NAME         ,
+                AccountEntry.COLUMN_DESCRIPTION  ,
+                AccountEntry.COLUMN_TYPE         ,
+                AccountEntry.COLUMN_CURRENCY     ,
+                AccountEntry.COLUMN_COLOR_CODE   ,
+                AccountEntry.COLUMN_FAVORITE     ,
+                AccountEntry.COLUMN_FULL_NAME    ,
+                AccountEntry.COLUMN_PLACEHOLDER  ,
+                AccountEntry.COLUMN_CREATED_AT   ,
+                AccountEntry.COLUMN_HIDDEN       ,
+                AccountEntry.COLUMN_COMMODITY_UID,
+                AccountEntry.COLUMN_PARENT_ACCOUNT_UID,
+                AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID
+        });
         mTransactionsAdapter = transactionsDbAdapter;
-        LOG_TAG = "AccountsDbAdapter";
     }
 
     /**
@@ -151,59 +164,40 @@ public long bulkAddRecords(@NonNull List<Account> accountList){
     }
 
     @Override
-    protected SQLiteStatement compileReplaceStatement(@NonNull final Account account) {
-        if (mReplaceStatement == null){
-            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + AccountEntry.TABLE_NAME + " ( "
-                    + AccountEntry.COLUMN_UID           + " , "
-                    + AccountEntry.COLUMN_NAME          + " , "
-                    + AccountEntry.COLUMN_DESCRIPTION   + " , "
-                    + AccountEntry.COLUMN_TYPE          + " , "
-                    + AccountEntry.COLUMN_CURRENCY      + " , "
-                    + AccountEntry.COLUMN_COLOR_CODE    + " , "
-                    + AccountEntry.COLUMN_FAVORITE      + " , "
-                    + AccountEntry.COLUMN_FULL_NAME     + " , "
-                    + AccountEntry.COLUMN_PLACEHOLDER   + " , "
-                    + AccountEntry.COLUMN_CREATED_AT    + " , "
-                    + AccountEntry.COLUMN_HIDDEN        + " , "
-                    + AccountEntry.COLUMN_COMMODITY_UID + " , "
-                    + AccountEntry.COLUMN_PARENT_ACCOUNT_UID + " , "
-                    + AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ?, ?)");
-            //commodity_uid is not forgotten. It will be inserted by a database trigger
-        }
-
-        mReplaceStatement.clearBindings();
-        mReplaceStatement.bindString(1, account.getUID());
-        mReplaceStatement.bindString(2, account.getName());
+    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Account account) {
+        stmt.clearBindings();
+        stmt.bindString(1, account.getName());
         if (account.getDescription() != null)
-            mReplaceStatement.bindString(3, account.getDescription());
-        mReplaceStatement.bindString(4, account.getAccountType().name());
-        mReplaceStatement.bindString(5, account.getCurrency().getCurrencyCode());
+            stmt.bindString(2, account.getDescription());
+        stmt.bindString(3, account.getAccountType().name());
+        stmt.bindString(4, account.getCurrency().getCurrencyCode());
         if (account.getColorHexCode() != null) {
-            mReplaceStatement.bindString(6, account.getColorHexCode());
+            stmt.bindString(5, account.getColorHexCode());
         }
-        mReplaceStatement.bindLong(7, account.isFavorite() ? 1 : 0);
-        mReplaceStatement.bindString(8, account.getFullName());
-        mReplaceStatement.bindLong(9, account.isPlaceholderAccount() ? 1 : 0);
-        mReplaceStatement.bindString(10, account.getCreatedTimestamp().toString());
-        mReplaceStatement.bindLong(11, account.isHidden() ? 1 : 0);
+        stmt.bindLong(6, account.isFavorite() ? 1 : 0);
+        stmt.bindString(7, account.getFullName());
+        stmt.bindLong(8, account.isPlaceholderAccount() ? 1 : 0);
+        stmt.bindString(9, account.getCreatedTimestamp().toString());
+        stmt.bindLong(10, account.isHidden() ? 1 : 0);
         Commodity commodity = account.getCommodity();
         if (commodity == null)
             commodity = CommoditiesDbAdapter.getInstance().getCommodity(account.getCurrency().getCurrencyCode());
 
-        mReplaceStatement.bindString(12, commodity.getUID());
+        stmt.bindString(11, commodity.getUID());
 
         String parentAccountUID = account.getParentUID();
         if (parentAccountUID == null && account.getAccountType() != AccountType.ROOT) {
             parentAccountUID = getOrCreateGnuCashRootAccountUID();
         }
         if (parentAccountUID != null) {
-            mReplaceStatement.bindString(13, parentAccountUID);
+            stmt.bindString(12, parentAccountUID);
         }
         if (account.getDefaultTransferAccountUID() != null) {
-            mReplaceStatement.bindString(14, account.getDefaultTransferAccountUID());
+            stmt.bindString(13, account.getDefaultTransferAccountUID());
         }
+        stmt.bindString(14, account.getUID());
 
-        return mReplaceStatement;
+        return stmt;
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java
index 60ff4f30..a698659d 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java
@@ -41,7 +41,13 @@
      * @param db        SQLiteDatabase object
      */
     public BudgetAmountsDbAdapter(SQLiteDatabase db) {
-        super(db, BudgetAmountEntry.TABLE_NAME);
+        super(db, BudgetAmountEntry.TABLE_NAME, new String[] {
+                BudgetAmountEntry.COLUMN_BUDGET_UID   ,
+                BudgetAmountEntry.COLUMN_ACCOUNT_UID  ,
+                BudgetAmountEntry.COLUMN_AMOUNT_NUM   ,
+                BudgetAmountEntry.COLUMN_AMOUNT_DENOM ,
+                BudgetAmountEntry.COLUMN_PERIOD_NUM
+        });
     }
 
     public static BudgetAmountsDbAdapter getInstance(){
@@ -65,26 +71,16 @@ public BudgetAmount buildModelInstance(@NonNull Cursor cursor) {
     }
 
     @Override
-    protected SQLiteStatement compileReplaceStatement(@NonNull BudgetAmount budgetAmount) {
-        if (mReplaceStatement == null){
-            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + BudgetAmountEntry.TABLE_NAME + " ( "
-                    + BudgetAmountEntry.COLUMN_UID            + " , "
-                    + BudgetAmountEntry.COLUMN_BUDGET_UID     + " , "
-                    + BudgetAmountEntry.COLUMN_ACCOUNT_UID    + " , "
-                    + BudgetAmountEntry.COLUMN_AMOUNT_NUM     + " , "
-                    + BudgetAmountEntry.COLUMN_AMOUNT_DENOM   + " , "
-                    + BudgetAmountEntry.COLUMN_PERIOD_NUM     + " ) VALUES ( ? , ? , ? , ? , ? , ? ) ");
-        }
-
-        mReplaceStatement.clearBindings();
-        mReplaceStatement.bindString(1, budgetAmount.getUID());
-        mReplaceStatement.bindString(2, budgetAmount.getBudgetUID());
-        mReplaceStatement.bindString(3, budgetAmount.getAccountUID());
-        mReplaceStatement.bindLong(4, budgetAmount.getAmount().getNumerator());
-        mReplaceStatement.bindLong(5, budgetAmount.getAmount().getDenominator());
-        mReplaceStatement.bindLong(6, budgetAmount.getPeriodNum());
-
-        return mReplaceStatement;
+    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final BudgetAmount budgetAmount) {
+        stmt.clearBindings();
+        stmt.bindString(1, budgetAmount.getBudgetUID());
+        stmt.bindString(2, budgetAmount.getAccountUID());
+        stmt.bindLong(3, budgetAmount.getAmount().getNumerator());
+        stmt.bindLong(4, budgetAmount.getAmount().getDenominator());
+        stmt.bindLong(6, budgetAmount.getPeriodNum());
+        stmt.bindString(7, budgetAmount.getUID());
+
+        return stmt;
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
index 9f03d0f2..bf0a7047 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
@@ -48,7 +48,12 @@
      * @param db        SQLiteDatabase object
      */
     public BudgetsDbAdapter(SQLiteDatabase db) {
-        super(db, BudgetEntry.TABLE_NAME);
+        super(db, BudgetEntry.TABLE_NAME, new String[]{
+                BudgetEntry.COLUMN_NAME,
+                BudgetEntry.COLUMN_DESCRIPTION,
+                BudgetEntry.COLUMN_RECURRENCE_UID,
+                BudgetEntry.COLUMN_NUM_PERIODS
+        });
         mRecurrenceDbAdapter = new RecurrenceDbAdapter(db);
         mBudgetAmountsDbAdapter = new BudgetAmountsDbAdapter(db);
     }
@@ -118,25 +123,16 @@ public Budget buildModelInstance(@NonNull Cursor cursor) {
     }
 
     @Override
-    protected SQLiteStatement compileReplaceStatement(@NonNull Budget budget) {
-        if (mReplaceStatement == null){
-            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + BudgetEntry.TABLE_NAME + " ( "
-                    + BudgetEntry.COLUMN_UID            + " , "
-                    + BudgetEntry.COLUMN_NAME           + " , "
-                    + BudgetEntry.COLUMN_DESCRIPTION    + " , "
-                    + BudgetEntry.COLUMN_RECURRENCE_UID + " , "
-                    + BudgetEntry.COLUMN_NUM_PERIODS    + " ) VALUES (? , ? , ? , ? , ? ) ");
-        }
-
-        mReplaceStatement.clearBindings();
-        mReplaceStatement.bindString(1, budget.getUID());
-        mReplaceStatement.bindString(2, budget.getName());
+    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Budge budge) {
+        stmt.clearBindings();
+        stmt.bindString(1, budget.getName());
         if (budget.getDescription() != null)
-            mReplaceStatement.bindString(3, budget.getDescription());
-        mReplaceStatement.bindString(4, budget.getRecurrence().getUID());
-        mReplaceStatement.bindLong(5, budget.getNumberOfPeriods());
+            stmt.bindString(2, budget.getDescription());
+        stmt.bindString(3, budget.getRecurrence().getUID());
+        stmt.bindLong(4, budget.getNumberOfPeriods());
+        stmt.bindString(5, budget.getUID());
 
-        return mReplaceStatement;
+        return stmt;
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
index ade7fab7..4b4129ad 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
@@ -21,7 +21,15 @@
      * @param db        SQLiteDatabase object
      */
     public CommoditiesDbAdapter(SQLiteDatabase db) {
-        super(db, CommodityEntry.TABLE_NAME);
+        super(db, CommodityEntry.TABLE_NAME, new String[]{
+                CommodityEntry.COLUMN_FULLNAME,
+                CommodityEntry.COLUMN_NAMESPACE,
+                CommodityEntry.COLUMN_MNEMONIC,
+                CommodityEntry.COLUMN_LOCAL_SYMBOL,
+                CommodityEntry.COLUMN_CUSIP,
+                CommodityEntry.COLUMN_SMALLEST_FRACTION,
+                CommodityEntry.COLUMN_QUOTE_FLAG
+        });
         /**
          * initialize commonly used commodities
          */
@@ -39,30 +47,18 @@ public static CommoditiesDbAdapter getInstance(){
     }
 
     @Override
-    protected SQLiteStatement compileReplaceStatement(@NonNull final Commodity commodity) {
-        if (mReplaceStatement == null) {
-            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + CommodityEntry.TABLE_NAME + " ( "
-                    + CommodityEntry.COLUMN_UID             + " , "
-                    + CommodityEntry.COLUMN_FULLNAME        + " , "
-                    + CommodityEntry.COLUMN_NAMESPACE       + " , "
-                    + CommodityEntry.COLUMN_MNEMONIC        + " , "
-                    + CommodityEntry.COLUMN_LOCAL_SYMBOL    + " , "
-                    + CommodityEntry.COLUMN_CUSIP           + " , "
-                    + CommodityEntry.COLUMN_SMALLEST_FRACTION + " , "
-                    + CommodityEntry.COLUMN_QUOTE_FLAG      + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? ) ");
-        }
-
-        mReplaceStatement.clearBindings();
-        mReplaceStatement.bindString(1, commodity.getUID());
-        mReplaceStatement.bindString(2, commodity.getFullname());
-        mReplaceStatement.bindString(3, commodity.getNamespace().name());
-        mReplaceStatement.bindString(4, commodity.getMnemonic());
-        mReplaceStatement.bindString(5, commodity.getLocalSymbol());
-        mReplaceStatement.bindString(6, commodity.getCusip());
-        mReplaceStatement.bindLong(7, commodity.getSmallestFraction());
-        mReplaceStatement.bindLong(8, commodity.getQuoteFlag());
-
-        return mReplaceStatement;
+    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Commodity commodity) {
+        stmt.clearBindings();
+        stmt.bindString(1, commodity.getFullname());
+        stmt.bindString(2, commodity.getNamespace().name());
+        stmt.bindString(3, commodity.getMnemonic());
+        stmt.bindString(4, commodity.getLocalSymbol());
+        stmt.bindString(5, commodity.getCusip());
+        stmt.bindLong(6, commodity.getSmallestFraction());
+        stmt.bindLong(7, commodity.getQuoteFlag());
+        stmt.bindString(8, commodity.getUID());
+
+        return stmt;
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index a834379e..4ed49211 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -21,6 +21,7 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteStatement;
 import android.support.annotation.NonNull;
+import android.text.TextUtils;
 import android.util.Log;
 
 import org.gnucash.android.db.DatabaseSchema;
@@ -55,7 +56,13 @@
 
     protected final String mTableName;
 
-    protected SQLiteStatement mReplaceStatement;
+    protected final String[] mColumns;
+
+    protected volatile SQLiteStatement mReplaceStatement;
+
+    protected volatile SQLiteStatement mUpdateStatement;
+
+    protected volatile SQLiteStatement mInsertStatement;
 
     public enum UpdateMethod {
         insert, update, replace
@@ -65,9 +72,10 @@
      * Opens the database adapter with an existing database
      * @param db SQLiteDatabase object
      */
-    public DatabaseAdapter(SQLiteDatabase db, @NonNull String tableName) {
+    public DatabaseAdapter(SQLiteDatabase db, @NonNull String tableName, @NonNull String[] columns) {
         this.mTableName = tableName;
         this.mDb = db;
+        this.mColumns = columns;
         if (!db.isOpen() || db.isReadOnly())
             throw new IllegalArgumentException("Database not open or is read-only. Require writeable database");
 
@@ -200,7 +208,41 @@ public boolean isOpen(){
      */
     public void addRecord(@NonNull final Model model){
         Log.d(LOG_TAG, String.format("Adding %s record to database: ", model.getClass().getSimpleName()));
-        compileReplaceStatement(model).execute();
+        synchronized(mReplaceStatement) {
+            setBindings(getReplaceStatement(), model).execute();
+        }
+    }
+
+    /// This function should be called in a db transaction
+    private long doAddModels(@NonNull final List<Model> modelList, UpdateMethod updateMethod) {
+        long nRow = 0;
+        switch (updateMethod) {
+            case update:
+                synchronized(mUpdateStatement) {
+                    for (Model model : modelList) {
+                        setBindings(getUpdateStatement(), model).execute();
+                        nRow++;
+                    }
+                }
+                break;
+            case insert:
+                synchronized(mInsertStatement) {
+                    for (Model model : modelList) {
+                        setBindings(getInsertStatement(), model).execute();
+                        nRow++;
+                    }
+                }
+                break;
+            default:
+                synchronized(mReplaceStatement) {
+                    for (Model model : modelList) {
+                        setBindings(getReplaceStatement(), model).execute();
+                        nRow++;
+                    }
+                }
+                break;
+        }
+        return nRow;
     }
 
     /**
@@ -209,7 +251,11 @@ public void addRecord(@NonNull final Model model){
      * @param modelList List of model records
      * @return Number of rows inserted
      */
-    public long bulkAddRecords(@NonNull List<Model> modelList) {
+    public long bulkAddRecords(@NonNull List<Model> modelList){
+        return bulkAddRecords(modelList, replace);
+    }
+
+    public long bulkAddRecords(@NonNull List<Model> modelList, UpdateMethod updateMethod) {
         if (modelList.isEmpty()) {
             Log.d(LOG_TAG, "Empty model list. Cannot bulk add records, returning 0");
             return 0;
@@ -220,10 +266,7 @@ public long bulkAddRecords(@NonNull List<Model> modelList) {
         long nRow = 0;
         try {
             mDb.beginTransaction();
-            for (Model model : modelList) {
-                compileReplaceStatement(model).execute();
-                nRow++;
-            }
+            doAddModels(modelList, updateMethod);
             mDb.setTransactionSuccessful();
         }
         finally {
@@ -249,7 +292,63 @@ public long bulkAddRecords(@NonNull List<Model> modelList) {
      * @param model Model whose attributes will be used as bindings
      * @return SQLiteStatement for replacing a record in the database
      */
-    protected abstract SQLiteStatement compileReplaceStatement(@NonNull final Model model);
+
+    protected final @NonNull SQLiteStatement getReplaceStatement() {
+        SQLiteStatement stmt = mReplaceStatement;
+        if (stmt == null) {
+            synchronized (this) {
+                stmt = mReplaceStatement;
+                if (stmt == null) {
+                    mReplaceStatement = stmt
+                            = mDb.compileStatement("REPLACE INTO " + mTableName + " ( "
+                            + TextUtils.join(" , ", mColumns) + " , "
+                            + TransactionEntry.COLUMN_UID
+                            + " ) VALUES ( "
+                            + (new String(new char[mColumns.length]).replace("\0", "? , "))
+                            + "?)");
+                }
+            }
+        }
+        return stmt;
+    }
+
+    protected final @NonNull SQLiteStatement getUpdateStatement() {
+        SQLiteStatement stmt = mUpdateStatement;
+        if (stmt == null) {
+            synchronized (this) {
+                stmt = mUpdateStatement;
+                if (stmt == null) {
+                    mUpdateStatement = stmt
+                            = mDb.compileStatement("UPDATE " + mTableName + " SET "
+                            + TextUtils.join(" = ? , ", mColumns) + " = ? WHERE "
+                            + TransactionEntry.COLUMN_UID
+                            + " = ?");
+                }
+            }
+        }
+        return stmt;
+    }
+
+    protected final @NonNull SQLiteStatement getInsertStatement() {
+        SQLiteStatement stmt = mInsertStatement;
+        if (stmt == null) {
+            synchronized (this) {
+                stmt = mInsertStatement;
+                if (stmt == null) {
+                    mInsertStatement = stmt
+                            = mDb.compileStatement("INSERT INTO " + mTableName + " ( "
+                            + TextUtils.join(" , ", mColumns) + " , "
+                            + TransactionEntry.COLUMN_UID
+                            + " ) VALUES ( "
+                            + (new String(new char[mColumns.length]).replace("\0", "? , "))
+                            + "?)");
+                }
+            }
+        }
+        return stmt;
+    }
+
+    protected abstract @NotNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull Model Model);
 
     /**
      * Returns a model instance populated with data from the record with GUID {@code uid}
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter.java
index 86d92886..88269b57 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter.java
@@ -22,7 +22,15 @@
      * @param db SQLiteDatabase object
      */
     public PricesDbAdapter(SQLiteDatabase db) {
-        super(db, PriceEntry.TABLE_NAME);
+        super(db, PriceEntry.TABLE_NAME, new String[]{
+                PriceEntry.COLUMN_COMMODITY_UID,
+                PriceEntry.COLUMN_CURRENCY_UID,
+                PriceEntry.COLUMN_DATE,
+                PriceEntry.COLUMN_SOURCE,
+                PriceEntry.COLUMN_TYPE,
+                PriceEntry.COLUMN_VALUE_NUM,
+                PriceEntry.COLUMN_VALUE_DENOM
+        });
     }
 
     public static PricesDbAdapter getInstance(){
@@ -30,34 +38,22 @@ public static PricesDbAdapter getInstance(){
     }
 
     @Override
-    protected SQLiteStatement compileReplaceStatement(@NonNull final Price price) {
-        if (mReplaceStatement == null) {
-            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + PriceEntry.TABLE_NAME + " ( "
-                    + PriceEntry.COLUMN_UID + " , "
-                    + PriceEntry.COLUMN_COMMODITY_UID + " , "
-                    + PriceEntry.COLUMN_CURRENCY_UID + " , "
-                    + PriceEntry.COLUMN_DATE + " , "
-                    + PriceEntry.COLUMN_SOURCE + " , "
-                    + PriceEntry.COLUMN_TYPE + " , "
-                    + PriceEntry.COLUMN_VALUE_NUM + " , "
-                    + PriceEntry.COLUMN_VALUE_DENOM + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? ) ");
-        }
-
-        mReplaceStatement.clearBindings();
-        mReplaceStatement.bindString(1, price.getUID());
-        mReplaceStatement.bindString(2, price.getCommodityUID());
-        mReplaceStatement.bindString(3, price.getCurrencyUID());
-        mReplaceStatement.bindString(4, price.getDate().toString());
+    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Price price) {
+        stmt.clearBindings();
+        stmt.bindString(1, price.getCommodityUID());
+        stmt.bindString(2, price.getCurrencyUID());
+        stmt.bindString(3, price.getDate().toString());
         if (price.getSource() != null) {
-            mReplaceStatement.bindString(5, price.getSource());
+            stmt.bindString(4, price.getSource());
         }
         if (price.getType() != null) {
-            mReplaceStatement.bindString(6, price.getType());
+            stmt.bindString(5, price.getType());
         }
-        mReplaceStatement.bindLong(7,   price.getValueNum());
-        mReplaceStatement.bindLong(8,   price.getValueDenom());
+        stmt.bindLong(6, price.getValueNum());
+        stmt.bindLong(7, price.getValueDenom());
+        stmt.bindString(8, price.getUID());
 
-        return mReplaceStatement;
+        return stmt;
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter.java
index 8235be4c..90ca5dcf 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/RecurrenceDbAdapter.java
@@ -39,7 +39,13 @@
      * @param db        SQLiteDatabase object
      */
     public RecurrenceDbAdapter(SQLiteDatabase db) {
-        super(db, RecurrenceEntry.TABLE_NAME);
+        super(db, RecurrenceEntry.TABLE_NAME, new String[]{
+                RecurrenceEntry.COLUMN_MULTIPLIER,
+                RecurrenceEntry.COLUMN_PERIOD_TYPE,
+                RecurrenceEntry.COLUMN_BYDAY,
+                RecurrenceEntry.COLUMN_PERIOD_START,
+                RecurrenceEntry.COLUMN_PERIOD_END
+        });
     }
 
     public static RecurrenceDbAdapter getInstance(){
@@ -69,29 +75,19 @@ public Recurrence buildModelInstance(@NonNull Cursor cursor) {
     }
 
     @Override
-    protected SQLiteStatement compileReplaceStatement(@NonNull Recurrence recurrence) {
-        if (mReplaceStatement == null) {
-            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + RecurrenceEntry.TABLE_NAME + " ( "
-                    + RecurrenceEntry.COLUMN_UID + " , "
-                    + RecurrenceEntry.COLUMN_MULTIPLIER + " , "
-                    + RecurrenceEntry.COLUMN_PERIOD_TYPE + " , "
-                    + RecurrenceEntry.COLUMN_BYDAY + " , "
-                    + RecurrenceEntry.COLUMN_PERIOD_START + " , "
-                    + RecurrenceEntry.COLUMN_PERIOD_END + " ) VALUES ( ? , ? , ? , ? , ? , ? ) ");
-        }
-
-        mReplaceStatement.clearBindings();
-        mReplaceStatement.bindString(1, recurrence.getUID());
-        mReplaceStatement.bindLong(2, recurrence.getPeriodType().getMultiplier());
-        mReplaceStatement.bindString(3, recurrence.getPeriodType().name());
+    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Recurrence recurrence) {
+        stmt.clearBindings();
+        stmt.bindLong(1, recurrence.getPeriodType().getMultiplier());
+        stmt.bindString(2, recurrence.getPeriodType().name());
         if (recurrence.getByDay() != null)
-            mReplaceStatement.bindString(4, recurrence.getByDay());
+            stmt.bindString(3, recurrence.getByDay());
         //recurrence should always have a start date
-        mReplaceStatement.bindString(5, recurrence.getPeriodStart().toString());
+        stmt.bindString(4, recurrence.getPeriodStart().toString());
 
         if (recurrence.getPeriodEnd() != null)
-            mReplaceStatement.bindString(6, recurrence.getPeriodEnd().toString());
+            stmt.bindString(5, recurrence.getPeriodEnd().toString());
+        stmt.bindString(6, recurrence.getUID());
 
-        return mReplaceStatement;
+        return stmt;
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
index ade23f80..0e554348 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
@@ -42,9 +42,25 @@
     RecurrenceDbAdapter mRecurrenceDbAdapter;
 
     public ScheduledActionDbAdapter(SQLiteDatabase db){
-        super(db, ScheduledActionEntry.TABLE_NAME);
+        super(db, ScheduledActionEntry.TABLE_NAME, new String[]{
+                ScheduledActionEntry.COLUMN_ACTION_UID        ,
+                ScheduledActionEntry.COLUMN_TYPE              ,
+                ScheduledActionEntry.COLUMN_START_TIME        ,
+                ScheduledActionEntry.COLUMN_END_TIME          ,
+                ScheduledActionEntry.COLUMN_LAST_RUN 		  ,
+                ScheduledActionEntry.COLUMN_ENABLED           ,
+                ScheduledActionEntry.COLUMN_CREATED_AT        ,
+                ScheduledActionEntry.COLUMN_TAG               ,
+                ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY   ,
+                ScheduledActionEntry.COLUMN_RECURRENCE_UID    ,
+                ScheduledActionEntry.COLUMN_AUTO_CREATE       ,
+                ScheduledActionEntry.COLUMN_AUTO_NOTIFY       ,
+                ScheduledActionEntry.COLUMN_ADVANCE_CREATION  ,
+                ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY    ,
+                ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID ,
+                ScheduledActionEntry.COLUMN_EXECUTION_COUNT
+        });
         mRecurrenceDbAdapter = new RecurrenceDbAdapter(db);
-        LOG_TAG = "ScheduledActionDbAdapter";
     }
 
     /**
@@ -107,56 +123,32 @@ public long updateRecurrenceAttributes(ScheduledAction scheduledAction){
         return mDb.update(ScheduledActionEntry.TABLE_NAME, contentValues, where, whereArgs);
     }
 
-
     @Override
-    protected SQLiteStatement compileReplaceStatement(@NonNull final ScheduledAction schedxAction) {
-        if (mReplaceStatement == null) {
-            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + ScheduledActionEntry.TABLE_NAME + " ( "
-                    + ScheduledActionEntry.COLUMN_UID 	            + " , "
-                    + ScheduledActionEntry.COLUMN_ACTION_UID        + " , "
-                    + ScheduledActionEntry.COLUMN_TYPE              + " , "
-                    + ScheduledActionEntry.COLUMN_START_TIME        + " , "
-                    + ScheduledActionEntry.COLUMN_END_TIME          + " , "
-                    + ScheduledActionEntry.COLUMN_LAST_RUN 		    + " , "
-                    + ScheduledActionEntry.COLUMN_ENABLED           + " , "
-                    + ScheduledActionEntry.COLUMN_CREATED_AT        + " , "
-                    + ScheduledActionEntry.COLUMN_TAG               + " , "
-                    + ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY   + " , "
-                    + ScheduledActionEntry.COLUMN_RECURRENCE_UID    + " , "
-                    + ScheduledActionEntry.COLUMN_AUTO_CREATE       + " , "
-                    + ScheduledActionEntry.COLUMN_AUTO_NOTIFY       + " , "
-                    + ScheduledActionEntry.COLUMN_ADVANCE_CREATION  + " , "
-                    + ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY    + " , "
-                    + ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID + " , "
-                    + ScheduledActionEntry.COLUMN_EXECUTION_COUNT   + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )");
-        }
-
-        mReplaceStatement.clearBindings();
-        mReplaceStatement.bindString(1, schedxAction.getUID());
-        mReplaceStatement.bindString(2, schedxAction.getActionUID());
-        mReplaceStatement.bindString(3, schedxAction.getActionType().name());
-        mReplaceStatement.bindLong(4,   schedxAction.getStartTime());
-        mReplaceStatement.bindLong(5, schedxAction.getEndTime());
-        mReplaceStatement.bindLong(6, schedxAction.getLastRunTime());
-        mReplaceStatement.bindLong(7, schedxAction.isEnabled() ? 1 : 0);
-        mReplaceStatement.bindString(8, schedxAction.getCreatedTimestamp().toString());
+    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final ScheduledAction schedxAction) {
+        stmt.clearBindings();
+        stmt.bindString(1, schedxAction.getActionUID());
+        stmt.bindString(2, schedxAction.getActionType().name());
+        stmt.bindLong(3,   schedxAction.getStartTime());
+        stmt.bindLong(4, schedxAction.getEndTime());
+        stmt.bindLong(5, schedxAction.getLastRunTime());
+        stmt.bindLong(6, schedxAction.isEnabled() ? 1 : 0);
+        stmt.bindString(7, schedxAction.getCreatedTimestamp().toString());
         if (schedxAction.getTag() == null)
-            mReplaceStatement.bindNull(9);
+            stmt.bindNull(8);
         else
-            mReplaceStatement.bindString(9, schedxAction.getTag());
-        mReplaceStatement.bindString(10, Integer.toString(schedxAction.getTotalFrequency()));
-        mReplaceStatement.bindString(11, schedxAction.getRecurrence().getUID());
-        mReplaceStatement.bindLong(12,   schedxAction.shouldAutoCreate() ? 1 : 0);
-        mReplaceStatement.bindLong(13,   schedxAction.shouldAutoNotify() ? 1 : 0);
-        mReplaceStatement.bindLong(14,   schedxAction.getAdvanceCreateDays());
-        mReplaceStatement.bindLong(15,   schedxAction.getAdvanceNotifyDays());
-        mReplaceStatement.bindString(16, schedxAction.getTemplateAccountUID());
-
-        mReplaceStatement.bindString(17, Integer.toString(schedxAction.getExecutionCount()));
-
-        return mReplaceStatement;
+            stmt.bindString(9, schedxAction.getTag());
+        stmt.bindString(9, Integer.toString(schedxAction.getTotalFrequency()));
+        stmt.bindString(10, schedxAction.getRecurrence().getUID());
+        stmt.bindLong(11,   schedxAction.shouldAutoCreate() ? 1 : 0);
+        stmt.bindLong(12,   schedxAction.shouldAutoNotify() ? 1 : 0);
+        stmt.bindLong(13,   schedxAction.getAdvanceCreateDays());
+        stmt.bindLong(14,   schedxAction.getAdvanceNotifyDays());
+        stmt.bindString(15, schedxAction.getTemplateAccountUID());
+
+        stmt.bindString(16, Integer.toString(schedxAction.getExecutionCount()));
+        stmt.bindString(17, schedxAction.getUID());
+        return stmt;
     }
-
     /**
      * Builds a {@link org.gnucash.android.model.ScheduledAction} instance from a row to cursor in the database.
      * The cursor should be already pointing to the right entry in the data set. It will not be modified in any way
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
index 5a0f2b6c..c056efba 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
@@ -52,8 +52,19 @@
 public class SplitsDbAdapter extends DatabaseAdapter<Split> {
 
     public SplitsDbAdapter(SQLiteDatabase db) {
-        super(db, SplitEntry.TABLE_NAME);
-        LOG_TAG = "SplitsDbAdapter";
+        super(db, SplitEntry.TABLE_NAME, new String[]{
+                SplitEntry.COLUMN_MEMO,
+                SplitEntry.COLUMN_TYPE,
+                SplitEntry.COLUMN_VALUE_NUM,
+                SplitEntry.COLUMN_VALUE_DENOM,
+                SplitEntry.COLUMN_QUANTITY_NUM,
+                SplitEntry.COLUMN_QUANTITY_DENOM,
+                SplitEntry.COLUMN_CREATED_AT,
+                SplitEntry.COLUMN_RECONCILE_STATE,
+                SplitEntry.COLUMN_RECONCILE_DATE,
+                SplitEntry.COLUMN_ACCOUNT_UID,
+                SplitEntry.COLUMN_TRANSACTION_UID
+        });
     }
 
     /**
@@ -84,42 +95,25 @@ public void addRecord(@NonNull final Split split){
     }
 
     @Override
-    protected SQLiteStatement compileReplaceStatement(@NonNull final Split split) {
-        if (mReplaceStatement == null) {
-            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + SplitEntry.TABLE_NAME + " ( "
-                    + SplitEntry.COLUMN_UID + " , "
-                    + SplitEntry.COLUMN_MEMO + " , "
-                    + SplitEntry.COLUMN_TYPE + " , "
-                    + SplitEntry.COLUMN_VALUE_NUM + " , "
-                    + SplitEntry.COLUMN_VALUE_DENOM + " , "
-                    + SplitEntry.COLUMN_QUANTITY_NUM + " , "
-                    + SplitEntry.COLUMN_QUANTITY_DENOM + " , "
-                    + SplitEntry.COLUMN_CREATED_AT + " , "
-                    + SplitEntry.COLUMN_RECONCILE_STATE + " , "
-                    + SplitEntry.COLUMN_RECONCILE_DATE + " , "
-                    + SplitEntry.COLUMN_ACCOUNT_UID + " , "
-                    + SplitEntry.COLUMN_TRANSACTION_UID + " ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ");
-        }
-
-        mReplaceStatement.clearBindings();
-        mReplaceStatement.bindString(1, split.getUID());
+    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Split split) {
+        stmt.clearBindings();
         if (split.getMemo() != null) {
-            mReplaceStatement.bindString(2, split.getMemo());
+            stmt.bindString(1, split.getMemo());
         }
-        mReplaceStatement.bindString(3, split.getType().name());
-        mReplaceStatement.bindLong(4, split.getValue().getNumerator());
-        mReplaceStatement.bindLong(5,   split.getValue().getDenominator());
-        mReplaceStatement.bindLong(6, split.getQuantity().getNumerator());
-        mReplaceStatement.bindLong(7, split.getQuantity().getDenominator());
-        mReplaceStatement.bindString(8, split.getCreatedTimestamp().toString());
-        mReplaceStatement.bindString(9, String.valueOf(split.getReconcileState()));
-        mReplaceStatement.bindString(10, split.getReconcileDate().toString());
-        mReplaceStatement.bindString(11, split.getAccountUID());
-        mReplaceStatement.bindString(12, split.getTransactionUID());
-
-        return mReplaceStatement;
+        stmt.bindString(2, split.getType().name());
+        stmt.bindLong(3, split.getValue().getNumerator());
+        stmt.bindLong(4, split.getValue().getDenominator());
+        stmt.bindLong(5, split.getQuantity().getNumerator());
+        stmt.bindLong(6, split.getQuantity().getDenominator());
+        stmt.bindString(7, split.getCreatedTimestamp().toString());
+        stmt.bindString(8, String.valueOf(split.getReconcileState()));
+        stmt.bindString(9, split.getReconcileDate().toString());
+        stmt.bindString(10, split.getAccountUID());
+        stmt.bindString(11, split.getTransactionUID());
+        stmt.bindString(12, split.getUID());
+
+        return stmt;
     }
-
     /**
      * Builds a split instance from the data pointed to by the cursor provided
      * <p>This method will not move the cursor in any way. So the cursor should already by pointing to the correct entry</p>
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
index 1f25f5cc..cc37951c 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
@@ -61,9 +61,18 @@
      * @param db SQlite db instance
      */
     public TransactionsDbAdapter(SQLiteDatabase db, SplitsDbAdapter splitsDbAdapter) {
-        super(db, TransactionEntry.TABLE_NAME);
+        super(db, TransactionEntry.TABLE_NAME, new String[]{
+                TransactionEntry.COLUMN_DESCRIPTION,
+                TransactionEntry.COLUMN_NOTES,
+                TransactionEntry.COLUMN_TIMESTAMP,
+                TransactionEntry.COLUMN_EXPORTED,
+                TransactionEntry.COLUMN_CURRENCY,
+                TransactionEntry.COLUMN_COMMODITY_UID,
+                TransactionEntry.COLUMN_CREATED_AT,
+                TransactionEntry.COLUMN_SCHEDX_ACTION_UID,
+                TransactionEntry.COLUMN_TEMPLATE
+        });
         mSplitsDbAdapter = splitsDbAdapter;
-        LOG_TAG = "TransactionsDbAdapter";
     }
 
     /**
@@ -158,43 +167,29 @@ public long bulkAddRecords(@NonNull List<Transaction> transactionList){
     }
 
     @Override
-    protected SQLiteStatement compileReplaceStatement(@NonNull final Transaction transaction) {
-        if (mReplaceStatement == null) {
-            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + TransactionEntry.TABLE_NAME + " ( "
-                    + TransactionEntry.COLUMN_UID + " , "
-                    + TransactionEntry.COLUMN_DESCRIPTION + " , "
-                    + TransactionEntry.COLUMN_NOTES + " , "
-                    + TransactionEntry.COLUMN_TIMESTAMP + " , "
-                    + TransactionEntry.COLUMN_EXPORTED + " , "
-                    + TransactionEntry.COLUMN_CURRENCY + " , "
-                    + TransactionEntry.COLUMN_COMMODITY_UID + " , "
-                    + TransactionEntry.COLUMN_CREATED_AT + " , "
-                    + TransactionEntry.COLUMN_SCHEDX_ACTION_UID + " , "
-                    + TransactionEntry.COLUMN_TEMPLATE + " ) VALUES ( ? , ? , ? , ?, ? , ? , ? , ?, ? , ?)");
-        }
-
-        mReplaceStatement.clearBindings();
-        mReplaceStatement.bindString(1, transaction.getUID());
-        mReplaceStatement.bindString(2, transaction.getDescription());
-        mReplaceStatement.bindString(3, transaction.getNote());
-        mReplaceStatement.bindLong(4,   transaction.getTimeMillis());
-        mReplaceStatement.bindLong(5, transaction.isExported() ? 1 : 0);
-        mReplaceStatement.bindString(6, transaction.getCurrencyCode());
+    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull Transaction transaction) {
+        stmt.clearBindings();
+        stmt.bindString(1, transaction.getDescription());
+        stmt.bindString(2, transaction.getNote());
+        stmt.bindLong(3, transaction.getTimeMillis());
+        stmt.bindLong(4, transaction.isExported() ? 1 : 0);
+        stmt.bindString(5, transaction.getCurrencyCode());
 
         Commodity commodity = transaction.getCommodity();
         if (commodity == null)
             commodity = CommoditiesDbAdapter.getInstance().getCommodity(transaction.getCurrencyCode());
 
-        mReplaceStatement.bindString(7, commodity.getUID());
-        mReplaceStatement.bindString(8, transaction.getCreatedTimestamp().toString());
+        stmt.bindString(6, commodity.getUID());
+        stmt.bindString(7, transaction.getCreatedTimestamp().toString());
 
         if (transaction.getScheduledActionUID() == null)
-            mReplaceStatement.bindNull(9);
+            stmt.bindNull(8);
         else
-            mReplaceStatement.bindString(9,  transaction.getScheduledActionUID());
-        mReplaceStatement.bindLong(10, transaction.isTemplate() ? 1 : 0);
+            stmt.bindString(8, transaction.getScheduledActionUID());
+        stmt.bindLong(9, transaction.isTemplate() ? 1 : 0);
+        stmt.bindString(10, transaction.getUID());
 
-        return mReplaceStatement;
+        return stmt;
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 677656c4..2f330c68 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -931,6 +931,9 @@ public void endDocument() throws SAXException {
         mAccountsDbAdapter.beginTransaction();
         Log.d(getClass().getSimpleName(), "bulk insert starts");
         try {
+            // disable foreign key. The database structure should be ensured by the data inserted.
+            // it will make insertion much faster.
+            mAccountsDbAdapter.enableForeignKey(false);
             Log.d(getClass().getSimpleName(), "before clean up db");
             mAccountsDbAdapter.deleteAllRecords();
             Log.d(getClass().getSimpleName(), String.format("deb clean up done %d ns", System.nanoTime()-startTime));
@@ -958,6 +961,7 @@ public void endDocument() throws SAXException {
 
             mAccountsDbAdapter.setTransactionSuccessful();
         } finally {
+            mAccountsDbAdapter.enableForeignKey(true);
             mAccountsDbAdapter.endTransaction();
         }
 

From 28a3b14873a29c9d17fa85e0262cbfd8bd759faf Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 8 Dec 2015 10:31:47 +0100
Subject: [PATCH 016/121] Fix ownCloud export not working for API 10 devices.

---
 .../main/java/org/gnucash/android/ui/export/ExportFormFragment.java    | 2 +-
 .../java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java   | 3 +--
 2 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 51448cb8..fb70f94b 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -329,7 +329,7 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
 						if(!(PreferenceManager.getDefaultSharedPreferences(getActivity())
 								.getBoolean(getString(R.string.key_owncloud_sync), false))) {
 							OwncloudDialogFragment ocDialog = OwncloudDialogFragment.newInstance(null);
-							ocDialog.show(getActivity().getFragmentManager(), "owncloud_dialog");
+							ocDialog.show(getActivity().getSupportFragmentManager(), "ownCloud dialog");
 						}
 						break;
 					case 4:
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java
index e49fc413..6c5f8aeb 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java
@@ -6,10 +6,10 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Handler;
-import android.app.DialogFragment;
 import android.preference.CheckBoxPreference;
 import android.preference.Preference;
 import android.preference.PreferenceManager;
+import android.support.v4.app.DialogFragment;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -35,7 +35,6 @@
 /**
  * A fragment for adding an owncloud account.
  */
-@TargetApi(11)
 public class OwncloudDialogFragment extends DialogFragment {
 
     /**

From 25d11c4177c891149813a28bcdf215bcd69de053 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 8 Dec 2015 11:03:03 +0100
Subject: [PATCH 017/121] Fix ownCloud export option not appearing in all
 languages.

---
 app/src/main/res/values-af-rZA/strings.xml | 2 +-
 app/src/main/res/values-ca-rES/strings.xml | 1 +
 app/src/main/res/values-cs-rCZ/strings.xml | 1 +
 app/src/main/res/values-de/strings.xml     | 1 +
 app/src/main/res/values-el-rGR/strings.xml | 1 +
 app/src/main/res/values-en-rGB/strings.xml | 1 +
 app/src/main/res/values-es-rMX/strings.xml | 1 +
 app/src/main/res/values-es/strings.xml     | 1 +
 app/src/main/res/values-fi-rFI/strings.xml | 1 +
 app/src/main/res/values-fr/strings.xml     | 1 +
 app/src/main/res/values-hu-rHU/strings.xml | 1 +
 app/src/main/res/values-it-rIT/strings.xml | 1 +
 app/src/main/res/values-iw-rIL/strings.xml | 1 +
 app/src/main/res/values-ja-rJP/strings.xml | 1 +
 app/src/main/res/values-ko-rKR/strings.xml | 1 +
 app/src/main/res/values-nb/strings.xml     | 1 +
 app/src/main/res/values-nl-rNL/strings.xml | 1 +
 app/src/main/res/values-no-rNO/strings.xml | 1 +
 app/src/main/res/values-pl-rPL/strings.xml | 1 +
 app/src/main/res/values-pt-rBR/strings.xml | 1 +
 app/src/main/res/values-pt-rPT/strings.xml | 1 +
 app/src/main/res/values-pt/strings.xml     | 1 +
 app/src/main/res/values-ro-rRO/strings.xml | 1 +
 app/src/main/res/values-ru/strings.xml     | 1 +
 app/src/main/res/values-sr-rSP/strings.xml | 1 +
 app/src/main/res/values-sv-rSE/strings.xml | 1 +
 app/src/main/res/values-tr-rTR/strings.xml | 1 +
 app/src/main/res/values-uk-rUA/strings.xml | 1 +
 app/src/main/res/values-vi-rVN/strings.xml | 1 +
 app/src/main/res/values-zh-rCN/strings.xml | 1 +
 app/src/main/res/values-zh-rTW/strings.xml | 1 +
 31 files changed, 31 insertions(+), 1 deletion(-)

diff --git a/app/src/main/res/values-af-rZA/strings.xml b/app/src/main/res/values-af-rZA/strings.xml
index 9e5deb39..cb2a0571 100644
--- a/app/src/main/res/values-af-rZA/strings.xml
+++ b/app/src/main/res/values-af-rZA/strings.xml
@@ -64,7 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
-    <item>Owncloud</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-ca-rES/strings.xml b/app/src/main/res/values-ca-rES/strings.xml
index 4e1034c6..fb13575a 100644
--- a/app/src/main/res/values-ca-rES/strings.xml
+++ b/app/src/main/res/values-ca-rES/strings.xml
@@ -64,6 +64,7 @@
     <item>Targeta SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Envia a&#8230;</item>
   </string-array>
   <string name="btn_move">Mou</string>
diff --git a/app/src/main/res/values-cs-rCZ/strings.xml b/app/src/main/res/values-cs-rCZ/strings.xml
index 25849555..5c21222d 100644
--- a/app/src/main/res/values-cs-rCZ/strings.xml
+++ b/app/src/main/res/values-cs-rCZ/strings.xml
@@ -64,6 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 77782e97..bf35e3a4 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -64,6 +64,7 @@
     <item>SD-Kartenspeicher</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Senden&#8230;</item>
   </string-array>
   <string name="btn_move">Verschieben</string>
diff --git a/app/src/main/res/values-el-rGR/strings.xml b/app/src/main/res/values-el-rGR/strings.xml
index 4722dc37..8327bf5c 100644
--- a/app/src/main/res/values-el-rGR/strings.xml
+++ b/app/src/main/res/values-el-rGR/strings.xml
@@ -64,6 +64,7 @@
     <item> SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item> &#8230;</item>
   </string-array>
   <string name="btn_move"></string>
diff --git a/app/src/main/res/values-en-rGB/strings.xml b/app/src/main/res/values-en-rGB/strings.xml
index 833100e2..ac269f2e 100644
--- a/app/src/main/res/values-en-rGB/strings.xml
+++ b/app/src/main/res/values-en-rGB/strings.xml
@@ -64,6 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index 4f872564..8f89eba0 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -64,6 +64,7 @@
     <item>Tarjeta SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Compartir archivo&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index a7d83913..afcdaa02 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -64,6 +64,7 @@
     <item>Tarjeta SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Compartir archivo&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
diff --git a/app/src/main/res/values-fi-rFI/strings.xml b/app/src/main/res/values-fi-rFI/strings.xml
index be04b6ec..cb2a0571 100644
--- a/app/src/main/res/values-fi-rFI/strings.xml
+++ b/app/src/main/res/values-fi-rFI/strings.xml
@@ -64,6 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 0fa6d660..181dd2e9 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -64,6 +64,7 @@
     <item>Carte SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Partager le fichier&#8230;</item>
   </string-array>
   <string name="btn_move">Dplacer</string>
diff --git a/app/src/main/res/values-hu-rHU/strings.xml b/app/src/main/res/values-hu-rHU/strings.xml
index 85d26ee6..db4cba87 100644
--- a/app/src/main/res/values-hu-rHU/strings.xml
+++ b/app/src/main/res/values-hu-rHU/strings.xml
@@ -64,6 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Share file&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index 9bab2381..7fcc92d4 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -64,6 +64,7 @@
     <item>Scheda SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Condividi file&#8230;</item>
   </string-array>
   <string name="btn_move">Sposta</string>
diff --git a/app/src/main/res/values-iw-rIL/strings.xml b/app/src/main/res/values-iw-rIL/strings.xml
index be04b6ec..cb2a0571 100644
--- a/app/src/main/res/values-iw-rIL/strings.xml
+++ b/app/src/main/res/values-iw-rIL/strings.xml
@@ -64,6 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index 2c4d6809..41e9c697 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -64,6 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index 3e5caf59..cc605942 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -64,6 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 056fdddd..85824b4d 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -64,6 +64,7 @@
     <item>SD-kort</item>
     <item>DropBox</item>
     <item>Google Disk</item>
+    <item>ownCloud</item>
     <item>Send til&#8230;</item>
   </string-array>
   <string name="btn_move">Flytt</string>
diff --git a/app/src/main/res/values-nl-rNL/strings.xml b/app/src/main/res/values-nl-rNL/strings.xml
index f5cc4a3f..19b6114a 100644
--- a/app/src/main/res/values-nl-rNL/strings.xml
+++ b/app/src/main/res/values-nl-rNL/strings.xml
@@ -64,6 +64,7 @@
     <item>SD-kaart</item>
     <item>Dropbox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Verzenden&#8230;</item>
   </string-array>
   <string name="btn_move">Verplaatsen</string>
diff --git a/app/src/main/res/values-no-rNO/strings.xml b/app/src/main/res/values-no-rNO/strings.xml
index f04c288e..ebeb783c 100644
--- a/app/src/main/res/values-no-rNO/strings.xml
+++ b/app/src/main/res/values-no-rNO/strings.xml
@@ -64,6 +64,7 @@
     <item>SD-kort</item>
     <item>DropBox</item>
     <item>Google Disk</item>
+    <item>ownCloud</item>
     <item>Send til&#8230;</item>
   </string-array>
   <string name="btn_move">Flytt</string>
diff --git a/app/src/main/res/values-pl-rPL/strings.xml b/app/src/main/res/values-pl-rPL/strings.xml
index 64236ed2..2ca3b8d8 100644
--- a/app/src/main/res/values-pl-rPL/strings.xml
+++ b/app/src/main/res/values-pl-rPL/strings.xml
@@ -64,6 +64,7 @@
     <item>Karta SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Udostpnij plik&#8230;</item>
   </string-array>
   <string name="btn_move">Przenie</string>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index d315f02a..483a6577 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -64,6 +64,7 @@
     <item>Carto SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Share file&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
diff --git a/app/src/main/res/values-pt-rPT/strings.xml b/app/src/main/res/values-pt-rPT/strings.xml
index 27fbf395..9178cde5 100644
--- a/app/src/main/res/values-pt-rPT/strings.xml
+++ b/app/src/main/res/values-pt-rPT/strings.xml
@@ -64,6 +64,7 @@
     <item>Carto SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Share file&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
diff --git a/app/src/main/res/values-pt/strings.xml b/app/src/main/res/values-pt/strings.xml
index 1cf82dba..23e98dce 100644
--- a/app/src/main/res/values-pt/strings.xml
+++ b/app/src/main/res/values-pt/strings.xml
@@ -64,6 +64,7 @@
         <item>Cart&#227;o SD</item>
         <item>DropBox</item>
         <item>Google Drive</item>
+        <item>ownCloud</item>
         <item>Share file&#8230;</item>
     </string-array>
     <string name="btn_move">Mover</string>
diff --git a/app/src/main/res/values-ro-rRO/strings.xml b/app/src/main/res/values-ro-rRO/strings.xml
index 537511d1..507ef390 100644
--- a/app/src/main/res/values-ro-rRO/strings.xml
+++ b/app/src/main/res/values-ro-rRO/strings.xml
@@ -64,6 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 027b2282..a36e1635 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -64,6 +64,7 @@
     <item> </item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item> &#8230;</item>
   </string-array>
   <string name="btn_move"></string>
diff --git a/app/src/main/res/values-sr-rSP/strings.xml b/app/src/main/res/values-sr-rSP/strings.xml
index bb3fd51e..8358188e 100644
--- a/app/src/main/res/values-sr-rSP/strings.xml
+++ b/app/src/main/res/values-sr-rSP/strings.xml
@@ -64,6 +64,7 @@
     <item>SD </item>
     <item>DropBox</item>
     <item>Google </item>
+    <item>ownCloud</item>
     <item> &#8230;</item>
   </string-array>
   <string name="btn_move"></string>
diff --git a/app/src/main/res/values-sv-rSE/strings.xml b/app/src/main/res/values-sv-rSE/strings.xml
index be04b6ec..cb2a0571 100644
--- a/app/src/main/res/values-sv-rSE/strings.xml
+++ b/app/src/main/res/values-sv-rSE/strings.xml
@@ -64,6 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-tr-rTR/strings.xml b/app/src/main/res/values-tr-rTR/strings.xml
index 46745ae1..b8a0edb2 100644
--- a/app/src/main/res/values-tr-rTR/strings.xml
+++ b/app/src/main/res/values-tr-rTR/strings.xml
@@ -64,6 +64,7 @@
     <item>Hafza Kart</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-uk-rUA/strings.xml b/app/src/main/res/values-uk-rUA/strings.xml
index eb875888..24b22343 100644
--- a/app/src/main/res/values-uk-rUA/strings.xml
+++ b/app/src/main/res/values-uk-rUA/strings.xml
@@ -64,6 +64,7 @@
     <item> \'</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item> &#8230;</item>
   </string-array>
   <string name="btn_move"></string>
diff --git a/app/src/main/res/values-vi-rVN/strings.xml b/app/src/main/res/values-vi-rVN/strings.xml
index 3e5caf59..cc605942 100644
--- a/app/src/main/res/values-vi-rVN/strings.xml
+++ b/app/src/main/res/values-vi-rVN/strings.xml
@@ -64,6 +64,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index ca94540b..415789f7 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -65,6 +65,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>Owncloud</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions"> %1$d </string>
diff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml
index c8ec5e87..fcd8fb78 100644
--- a/app/src/main/res/values-zh-rTW/strings.xml
+++ b/app/src/main/res/values-zh-rTW/strings.xml
@@ -64,6 +64,7 @@
     <item>SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>&#8230;</item>
   </string-array>
   <string name="btn_move"></string>

From 87699be8892bdee0fb927c4c9ea9b39f88c9cd0f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 8 Dec 2015 11:30:20 +0100
Subject: [PATCH 018/121] Write "ownCloud" properly.

---
 .../gnucash/android/export/ExportAsyncTask.java    | 12 ++++++------
 .../android/ui/export/ExportFormFragment.java      |  5 ++---
 .../ui/settings/BackupPreferenceFragment.java      |  2 +-
 ...ogFragment.java => OwnCloudDialogFragment.java} | 18 +++++++-----------
 .../android/ui/settings/SettingsActivity.java      | 22 +++++++++-------------
 app/src/main/res/values-zh-rCN/strings.xml         |  2 +-
 app/src/main/res/values/strings.xml                |  6 +++---
 7 files changed, 29 insertions(+), 38 deletions(-)
 rename app/src/main/java/org/gnucash/android/ui/settings/{OwncloudDialogFragment.java => OwnCloudDialogFragment.java} (94%)

diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index c2e229f2..14497586 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -188,7 +188,7 @@ public void run() {
                 return true;
 
             case OWNCLOUD:
-                moveExportToOwncloud();
+                moveExportToOwnCloud();
                 return true;
 
             case SD_CARD:
@@ -230,12 +230,12 @@ protected void onPostExecute(Boolean exportResult) {
                                 Context.MODE_PRIVATE).getBoolean(
                                 mContext.getString(R.string.owncloud_sync), false) ?
 
-                                "Owncloud -> " +
+                                "ownCloud -> " +
                                 mContext.getSharedPreferences(
                                         mContext.getString(R.string.owncloud_pref),
                                         Context.MODE_PRIVATE).getString(
                                         mContext.getString(R.string.key_owncloud_dir), null) :
-                                "Owncloud sync not enabled";
+                                "ownCloud sync not enabled";
                         break;
                     default:
                         targetLocation = "external service";
@@ -357,15 +357,15 @@ private void moveExportToDropbox() {
         }
     }
 
-    private void moveExportToOwncloud() {
-        Log.i(TAG, "Copying exported file to Owncloud");
+    private void moveExportToOwnCloud() {
+        Log.i(TAG, "Copying exported file to ownCloud");
 
         SharedPreferences mPrefs = mContext.getSharedPreferences(mContext.getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
 
         Boolean mOC_sync = mPrefs.getBoolean(mContext.getString(R.string.owncloud_sync), false);
 
         if(!mOC_sync){
-            Log.e(TAG, "Owncloud not enabled.");
+            Log.e(TAG, "ownCloud not enabled.");
             return;
         }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index fb70f94b..65a89123 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -18,7 +18,6 @@
 
 import android.Manifest;
 import android.app.Activity;
-import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
@@ -63,7 +62,7 @@
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.UxArgument;
-import org.gnucash.android.ui.settings.OwncloudDialogFragment;
+import org.gnucash.android.ui.settings.OwnCloudDialogFragment;
 import org.gnucash.android.ui.settings.SettingsActivity;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.util.RecurrenceParser;
@@ -328,7 +327,7 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
 						mExportTarget = ExportParams.ExportTarget.OWNCLOUD;
 						if(!(PreferenceManager.getDefaultSharedPreferences(getActivity())
 								.getBoolean(getString(R.string.key_owncloud_sync), false))) {
-							OwncloudDialogFragment ocDialog = OwncloudDialogFragment.newInstance(null);
+							OwnCloudDialogFragment ocDialog = OwnCloudDialogFragment.newInstance(null);
 							ocDialog.show(getActivity().getSupportFragmentManager(), "ownCloud dialog");
 						}
 						break;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
index 24159994..3470ca91 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
@@ -86,7 +86,7 @@ public void onResume() {
 
 		pref = findPreference(getString(R.string.key_owncloud_sync));
 		pref.setOnPreferenceClickListener((SettingsActivity)getActivity());
-		((SettingsActivity)getActivity()).toggleOwncloudPreference(pref);
+		((SettingsActivity)getActivity()).toggleOwnCloudPreference(pref);
 	}
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java
similarity index 94%
rename from app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java
rename to app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java
index 6c5f8aeb..aa841422 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/OwncloudDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java
@@ -1,6 +1,5 @@
 package org.gnucash.android.ui.settings;
 
-import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.net.Uri;
@@ -8,7 +7,6 @@
 import android.os.Handler;
 import android.preference.CheckBoxPreference;
 import android.preference.Preference;
-import android.preference.PreferenceManager;
 import android.support.v4.app.DialogFragment;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -30,12 +28,10 @@
 
 import org.gnucash.android.R;
 
-import java.util.prefs.PreferenceChangeEvent;
-
 /**
- * A fragment for adding an owncloud account.
+ * A fragment for adding an ownCloud account.
  */
-public class OwncloudDialogFragment extends DialogFragment {
+public class OwnCloudDialogFragment extends DialogFragment {
 
     /**
      * Dialog positive button. Ok to save and validade the data
@@ -48,7 +44,7 @@
     Button mCancelButton;
 
     /**
-     * Owncloud vars
+     * ownCloud vars
      */
     String mOC_server;
     String mOC_username;
@@ -72,15 +68,15 @@
     /**
      * Use this factory method to create a new instance of
      * this fragment using the provided parameters.
-     * @return A new instance of fragment OwncloudDialogFragment.
+     * @return A new instance of fragment OwnCloudDialogFragment.
      */
-    public static OwncloudDialogFragment newInstance(Preference pref) {
-        OwncloudDialogFragment fragment = new OwncloudDialogFragment();
+    public static OwnCloudDialogFragment newInstance(Preference pref) {
+        OwnCloudDialogFragment fragment = new OwnCloudDialogFragment();
         ocCheckBox = pref == null ? null : (CheckBoxPreference) pref;
         return fragment;
     }
 
-    public OwncloudDialogFragment() {
+    public OwnCloudDialogFragment() {
         // Required empty public constructor
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index b88f034f..45b7909d 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -21,7 +21,6 @@
 import android.annotation.TargetApi;
 import android.app.Activity;
 import android.app.AlertDialog;
-import android.app.FragmentManager;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
@@ -42,7 +41,6 @@
 import android.widget.ArrayAdapter;
 import android.widget.Toast;
 
-import com.crashlytics.android.Crashlytics;
 import com.dropbox.sync.android.DbxAccountManager;
 import com.google.android.gms.common.ConnectionResult;
 import com.google.android.gms.common.GooglePlayServicesUtil;
@@ -68,8 +66,6 @@
 import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
 
 import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
@@ -201,7 +197,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
             pref = findPreference(getString(R.string.key_owncloud_sync));
             pref.setOnPreferenceClickListener(this);
-            toggleOwncloudPreference(pref);
+            toggleOwnCloudPreference(pref);
 
             pref = findPreference(getString(R.string.key_create_backup));
             pref.setOnPreferenceClickListener(this);
@@ -359,8 +355,8 @@ public boolean onPreferenceClick(Preference preference) {
         }
 
         if (key.equals(getString(R.string.key_owncloud_sync))){
-            toggleOwncloudSync(preference);
-            toggleOwncloudPreference(preference);
+            toggleOwnCloudSync(preference);
+            toggleOwnCloudPreference(preference);
         }
 
         if (key.equals(getString(R.string.key_create_backup))){
@@ -447,16 +443,16 @@ private void toggleGoogleDriveSync(){
     }
 
     /**
-     * Toggles synchronization with Owncloud on or off
+     * Toggles synchronization with ownCloud on or off
      */
     @TargetApi(11)
-    private void toggleOwncloudSync(Preference pref){
+    private void toggleOwnCloudSync(Preference pref){
         SharedPreferences mPrefs = getSharedPreferences(getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
 
         if (mPrefs.getBoolean(getString(R.string.owncloud_sync), false))
             mPrefs.edit().putBoolean(getString(R.string.owncloud_sync), false).apply();
         else {
-            OwncloudDialogFragment ocDialog = OwncloudDialogFragment.newInstance(pref);
+            OwnCloudDialogFragment ocDialog = OwnCloudDialogFragment.newInstance(pref);
             ocDialog.show(getFragmentManager(), "owncloud_dialog");
         }
     }
@@ -470,10 +466,10 @@ public void toggleDropboxPreference(Preference pref) {
     }
 
     /**
-     * Toggles the checkbox of the Oncloud Sync preference if a Owncloud account is linked
-     * @param pref Owncloud Sync preference
+     * Toggles the checkbox of the ownCloud Sync preference if an ownCloud account is linked
+     * @param pref ownCloud Sync preference
      */
-    public void toggleOwncloudPreference(Preference pref) {
+    public void toggleOwnCloudPreference(Preference pref) {
         SharedPreferences mPrefs = getSharedPreferences(getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
         ((CheckBoxPreference)pref).setChecked(mPrefs.getBoolean(getString(R.string.owncloud_sync), false));
     }
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index 415789f7..966036b4 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -64,7 +64,7 @@
     <item>SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
-    <item>Owncloud</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move"></string>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index ed9dd816..e82dfc2a 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -65,7 +65,7 @@
         <item>SD Card</item>
         <item>DropBox</item>
         <item>Google Drive</item>
-        <item>OwnCloud</item>
+        <item>ownCloud</item>
         <item>Send to&#8230;</item>
     </string-array>
     <string name="btn_move">Move</string>
@@ -284,10 +284,10 @@
     <string name="title_restore_backup">Restore Backup</string>
     <string name="header_backup_and_export_settings">Backup &amp; export</string>
     <string name="title_dropbox_sync_preference">DropBox Sync</string>
-    <string name="title_owncloud_sync_preference">Owncloud Sync</string>
+    <string name="title_owncloud_sync_preference">ownCloud Sync</string>
     <string name="title_backup_preference_category">Backup</string>
     <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
-    <string name="summary_owncloud_sync">Enable to sync to Owncloud</string>
+    <string name="summary_owncloud_sync">Enable to sync to ownCloud</string>
     <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
     <string name="title_backup_prefs">Backup Preferences</string>
     <string name="title_create_backup_pref">Create Backup</string>

From af9f05b89d9dd488301332b324f299d31281e26d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 8 Dec 2015 11:48:15 +0100
Subject: [PATCH 019/121] Apply code inspector suggestions.

---
 .../android/ui/export/ExportFormFragment.java      |  8 ++---
 .../ui/settings/OwnCloudDialogFragment.java        | 38 +++++++++++-----------
 .../android/ui/settings/SettingsActivity.java      | 10 +++---
 3 files changed, 28 insertions(+), 28 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 65a89123..2414bd1e 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -132,14 +132,14 @@
 	/**
 	 * Event recurrence options
 	 */
-	EventRecurrence mEventRecurrence = new EventRecurrence();
+	private EventRecurrence mEventRecurrence = new EventRecurrence();
 
 	/**
 	 * Recurrence rule
 	 */
-	String mRecurrenceRule;
+	private String mRecurrenceRule;
 
-	Calendar mExportStartCalendar = Calendar.getInstance();
+	private Calendar mExportStartCalendar = Calendar.getInstance();
 
 	/**
 	 * Tag for logging
@@ -154,7 +154,7 @@
 	private ExportParams.ExportTarget mExportTarget = ExportParams.ExportTarget.SD_CARD;
 
 
-	public void onRadioButtonClicked(View view){
+	private void onRadioButtonClicked(View view){
         switch (view.getId()){
             case R.id.radio_ofx_format:
                 mExportFormat = ExportFormat.OFX;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java
index aa841422..29478f5e 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java
@@ -34,34 +34,34 @@
 public class OwnCloudDialogFragment extends DialogFragment {
 
     /**
-     * Dialog positive button. Ok to save and validade the data
+     * Dialog positive button. Ok to save and validate the data
      */
-    Button mOkButton;
+    private Button mOkButton;
 
     /**
      * Cancel button
      */
-    Button mCancelButton;
+    private Button mCancelButton;
 
     /**
      * ownCloud vars
      */
-    String mOC_server;
-    String mOC_username;
-    String mOC_password;
-    String mOC_dir;
+    private String mOC_server;
+    private String mOC_username;
+    private String mOC_password;
+    private String mOC_dir;
 
-    EditText mServer;
-    EditText mUsername;
-    EditText mPassword;
-    EditText mDir;
+    private EditText mServer;
+    private EditText mUsername;
+    private EditText mPassword;
+    private EditText mDir;
 
-    TextView mServerError;
-    TextView mUsernameError;
-    TextView mDirError;
+    private TextView mServerError;
+    private TextView mUsernameError;
+    private TextView mDirError;
 
-    SharedPreferences mPrefs;
-    Context mContext;
+    private SharedPreferences mPrefs;
+    private Context mContext;
 
     private static CheckBoxPreference ocCheckBox;
 
@@ -155,7 +155,7 @@ private void save() {
         dismiss();
     }
 
-    private void checkdata() {
+    private void checkData() {
         mServerError.setVisibility(View.GONE);
         mUsernameError.setVisibility(View.GONE);
         mDirError.setVisibility(View.GONE);
@@ -220,7 +220,7 @@ public void onRemoteOperationFinish(RemoteOperation caller, RemoteOperationResul
     /**
      * Binds click listeners for the dialog buttons
      */
-    protected void setListeners(){
+    private void setListeners(){
 
         mCancelButton.setOnClickListener(new View.OnClickListener() {
 
@@ -243,7 +243,7 @@ public void onClick(View v) {
                         )
                     save();
                 else
-                    checkdata();
+                    checkData();
             }
         });
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index 45b7909d..c263e708 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -86,13 +86,13 @@
 public class SettingsActivity extends AppCompatPreferenceActivity
         implements OnPreferenceChangeListener, Preference.OnPreferenceClickListener{
 
-    public static final String LOG_TAG = "SettingsActivity";
+    private static final String LOG_TAG = "SettingsActivity";
 
     /**
      * Allowed delay between two consecutive taps of a setting for it to be considered a double tap
      * Used on Android v2.3.3 or lower devices where dialogs cannot be instantiated easily in settings
      */
-    public static final int DOUBLE_TAP_DELAY = 2000;
+    private static final int DOUBLE_TAP_DELAY = 2000;
 
     /**
      * Testing app key for DropBox API
@@ -107,7 +107,7 @@
     /**
      * Collects references to the UI elements and binds click listeners
      */
-    public static final int REQUEST_LINK_TO_DBX = 0x11;
+    private static final int REQUEST_LINK_TO_DBX = 0x11;
     public static final int REQUEST_RESOLVE_CONNECTION = 0x12;
 
     /**
@@ -388,7 +388,7 @@ public boolean onPreferenceClick(Preference preference) {
                 Toast.makeText(this, R.string.toast_tap_again_to_confirm_delete, Toast.LENGTH_SHORT).show();
             } else {
                 GncXmlExporter.createBackup(); //create backup before deleting everything
-                List<Transaction> openingBalances = new ArrayList<Transaction>();
+                List<Transaction> openingBalances = new ArrayList<>();
                 boolean preserveOpeningBalances = GnuCashApplication.shouldSaveOpeningBalances(false);
                 if (preserveOpeningBalances) {
                     AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
@@ -559,7 +559,7 @@ public void run() {
     /**
      * Opens a dialog for a user to select a backup to restore and then restores the backup
      */
-    public void restoreBackup() {
+    private void restoreBackup() {
         Log.i("Settings", "Opening GnuCash XML backups for restore");
         File[] backupFiles = new File(Exporter.BACKUP_FOLDER_PATH).listFiles();
         if (backupFiles == null){

From 2cbdde2f7b71d6c16e84aba4df9a4b986261b898 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 10 Dec 2015 11:08:21 +0100
Subject: [PATCH 020/121] Improve support for multiple books

Create new book when new account structure is created
Fix rename barchart to Stacked Chart
Fix unit tests - revert android gradle build tools to 1.5.0

TODO: update text in import accounts dialog
---
 .../android/test/ui/AccountsActivityTest.java      |  5 +-
 .../android/test/ui/ExportTransactionsTest.java    |  5 +-
 .../gnucash/android/app/GnuCashApplication.java    |  4 +-
 .../java/org/gnucash/android/db/BookDbHelper.java  |  6 +-
 .../android/db/adapter/AccountsDbAdapter.java      |  4 +-
 .../gnucash/android/db/adapter/BooksDbAdapter.java |  8 +-
 .../android/db/adapter/CommoditiesDbAdapter.java   |  2 +
 .../android/db/adapter/DatabaseAdapter.java        |  2 +-
 .../gnucash/android/importer/GncXmlHandler.java    | 98 ++++++++++++----------
 .../gnucash/android/importer/GncXmlImporter.java   | 30 +------
 .../gnucash/android/importer/ImportAsyncTask.java  | 31 ++++++-
 .../android/ui/account/AccountsActivity.java       | 11 ++-
 .../android/ui/account/AccountsListFragment.java   |  1 +
 .../android/ui/common/BaseDrawerActivity.java      | 23 +++--
 .../org/gnucash/android/ui/report/ReportType.java  |  4 +-
 .../android/ui/report/ReportsOverviewFragment.java |  4 +-
 ...tFragment.java => StackedBarChartFragment.java} |  2 +-
 .../android/ui/settings/SettingsActivity.java      |  3 +-
 app/src/main/res/layout/nav_drawer_header.xml      |  6 +-
 .../test/unit/db/AccountsDbAdapterTest.java        | 44 +++++++---
 .../android/test/unit/export/BackupTest.java       | 24 +++++-
 build.gradle                                       |  2 +-
 22 files changed, 208 insertions(+), 111 deletions(-)
 rename app/src/main/java/org/gnucash/android/ui/report/barchart/{CashFlowBarChartFragment.java => StackedBarChartFragment.java} (99%)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index cd6b6632..3fff61e7 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -37,6 +37,7 @@
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
@@ -117,14 +118,14 @@ public void setUp() throws Exception {
         mAccountsDbAdapter = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
         mAccountsDbAdapter.deleteAllRecords(); //clear the data
 
-		Account account = new Account(DUMMY_ACCOUNT_NAME);
+		Account account = new Account(DUMMY_ACCOUNT_NAME, new CommoditiesDbAdapter(mDb).getCommodity(DUMMY_ACCOUNT_CURRENCY_CODE));
         account.setUID(DUMMY_ACCOUNT_UID);
-		account.setCommodity(Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE));
 		mAccountsDbAdapter.addRecord(account);
 
         String rootUID = mAccountsDbAdapter.getOrCreateGnuCashRootAccountUID();
         book1.setRootAccountUID(rootUID);
         book1.setActive(true);
+        book1.setDisplayName("Book 1");
         BooksDbAdapter booksDbAdapter = new BooksDbAdapter(new BookDbHelper(mAcccountsActivity).getWritableDatabase());
         booksDbAdapter.addRecord(book1);
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index 30405027..9c776049 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -36,6 +36,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.RecurrenceDbAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
@@ -113,11 +114,11 @@ public void setUp() throws Exception {
         mAccountsDbAdapter = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
 		mAccountsDbAdapter.deleteAllRecords();
 
-		Account account = new Account("Exportable");
+		String currencyCode = GnuCashApplication.getDefaultCurrencyCode();
+		Account account = new Account("Exportable", new CommoditiesDbAdapter(mDb).getCommodity(currencyCode));
 		Transaction transaction = new Transaction("Pizza");
 		transaction.setNote("What up?");
 		transaction.setTime(System.currentTimeMillis());
-		String currencyCode = GnuCashApplication.getDefaultCurrencyCode();
         Split split = new Split(new Money("8.99", currencyCode), account.getUID());
 		split.setMemo("Hawaii is the best!");
 		transaction.addSplit(split);
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index d6c697f9..76172912 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -51,6 +51,7 @@
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.service.SchedulerService;
+import org.gnucash.android.ui.account.AccountsActivity;
 
 import java.util.Currency;
 import java.util.Locale;
@@ -72,7 +73,7 @@
     /**
      * Init time of passcode session
      */
-    public static long PASSCODE_SESSION_INIT_TIME = 0l;
+    public static long PASSCODE_SESSION_INIT_TIME = 0L;
 
     private static Context context;
 
@@ -209,6 +210,7 @@ public static BooksDbAdapter getBooksDbAdapter(){
     public void loadBook(String bookUID){
         mBooksDbAdapter.setActive(bookUID);
         initDatabaseAdapters();
+        AccountsActivity.start(getAppContext());
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/db/BookDbHelper.java b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
index 0b14e579..2c5927b5 100644
--- a/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
@@ -28,6 +28,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema.BookEntry;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Book;
@@ -51,7 +52,7 @@
             + BookEntry._ID 		         + " integer primary key autoincrement, "
             + BookEntry.COLUMN_UID 		     + " varchar(255) not null UNIQUE, "
             + BookEntry.COLUMN_DISPLAY_NAME  + " varchar(255) not null, "
-            + BookEntry.COLUMN_ROOT_GUID     + " varchar(255) not null UNIQUE, "
+            + BookEntry.COLUMN_ROOT_GUID     + " varchar(255) not null, "
             + BookEntry.COLUMN_TEMPLATE_GUID + " varchar(255), "
             + BookEntry.COLUMN_ACTIVE        + " tinyint default 0, "
             + BookEntry.COLUMN_SOURCE_URI    + " varchar(255), "
@@ -77,7 +78,6 @@ public void onOpen(SQLiteDatabase db) {
             return;
         }
 
-        //todo move this to the DatabaseHelper class
         String sql = "SELECT COUNT(*) FROM " + BookEntry.TABLE_NAME;
         SQLiteStatement statement = db.compileStatement(sql);
         long count = statement.simpleQueryForLong();
@@ -95,7 +95,7 @@ public void onOpen(SQLiteDatabase db) {
             contentValues.put(BookEntry.COLUMN_UID, book.getUID());
             contentValues.put(BookEntry.COLUMN_ROOT_GUID, rootAccountUID);
             contentValues.put(BookEntry.COLUMN_TEMPLATE_GUID, Book.generateUID());
-            contentValues.put(BookEntry.COLUMN_DISPLAY_NAME, "Book1");
+            contentValues.put(BookEntry.COLUMN_DISPLAY_NAME, new BooksDbAdapter(db).generateDefaultBookName());
             contentValues.put(BookEntry.COLUMN_ACTIVE, 1);
 
             db.insert(BookEntry.TABLE_NAME, null, contentValues);
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index cc38c9a2..462888e3 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -188,7 +188,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Account account
         mReplaceStatement.bindLong(11, account.isHidden() ? 1 : 0);
         Commodity commodity = account.getCommodity();
         if (commodity == null)
-            commodity = CommoditiesDbAdapter.getInstance().getCommodity(account.getCurrency().getCurrencyCode());
+            commodity = new CommoditiesDbAdapter(mDb).getCommodity(account.getCurrency().getCurrencyCode());
 
         mReplaceStatement.bindString(12, commodity.getUID());
 
@@ -933,7 +933,7 @@ public String getOrCreateGnuCashRootAccountUID() {
             cursor.close();
         }
         // No ROOT exits, create a new one
-        Account rootAccount = new Account("ROOT Account");
+        Account rootAccount = new Account("ROOT Account", new CommoditiesDbAdapter(mDb).getCommodity("USD"));
         rootAccount.setAccountType(AccountType.ROOT);
         rootAccount.setFullName(ROOT_ACCOUNT_FULL_NAME);
         rootAccount.setHidden(true);
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
index 316d557c..a070578f 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
@@ -74,7 +74,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull Book book) {
             + BookEntry.COLUMN_ROOT_GUID        + " , "
             + BookEntry.COLUMN_TEMPLATE_GUID    + " , "
             + BookEntry.COLUMN_SOURCE_URI       + " , "
-            + BookEntry.COLUMN_ACTIVE           + " ) VALUES (? , ? , ? , ? , ? , ? ");
+            + BookEntry.COLUMN_ACTIVE           + " ) VALUES (? , ? , ? , ? , ? , ? )");
         }
         mReplaceStatement.clearBindings();
         mReplaceStatement.bindString(1, book.getUID());
@@ -89,11 +89,15 @@ protected SQLiteStatement compileReplaceStatement(@NonNull Book book) {
     }
 
     /**
-     * Sets the book with unique identifier {@code uid} as active
+     * Sets the book with unique identifier {@code uid} as active and all others as inactive
      * @param bookUID Unique identifier of the book
      */
     public void setActive(String bookUID){
         ContentValues contentValues = new ContentValues();
+        contentValues.put(BookEntry.COLUMN_ACTIVE, 0);
+        mDb.update(mTableName, contentValues, null, null); //disable all
+
+        contentValues.clear();
         contentValues.put(BookEntry.COLUMN_ACTIVE, 1);
         mDb.update(mTableName, contentValues, BookEntry.COLUMN_UID + " = ?", new String[]{bookUID});
     }
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
index ade7fab7..5e4e1328 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
@@ -32,6 +32,8 @@ public CommoditiesDbAdapter(SQLiteDatabase db) {
         Commodity.CAD = getCommodity("CAD");
         Commodity.JPY = getCommodity("JPY");
         Commodity.AUD = getCommodity("AUD");
+
+        Commodity.DEFAULT_COMMODITY = getCommodity(GnuCashApplication.getDefaultCurrencyCode());
     }
 
     public static CommoditiesDbAdapter getInstance(){
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index 9cda02e8..cb8c878b 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -403,7 +403,7 @@ public long getID(@NonNull String uid){
             if (cursor.moveToFirst()) {
                 result = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.CommonColumns._ID));
             } else {
-                throw new IllegalArgumentException("GUID " + uid + " does not exist in the db");
+                throw new IllegalArgumentException(mTableName + " with GUID " + uid + " does not exist in the db");
             }
         } finally {
             cursor.close();
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index b14c8144..641a0acb 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -25,7 +25,10 @@
 import com.crashlytics.android.Crashlytics;
 
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.BookDbHelper;
+import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;
 import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
@@ -38,6 +41,7 @@
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.BaseModel;
+import org.gnucash.android.model.Book;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Budget;
 import org.gnucash.android.model.BudgetAmount;
@@ -257,40 +261,32 @@
     private Map<String, Integer> mCurrencyCount;
 
     private BudgetsDbAdapter mBudgetsDbAdapter;
+    private Book mBook;
+    private SQLiteDatabase mainDb;
 
     /**
      * Creates a handler for handling XML stream events when parsing the XML backup file
      */
     public GncXmlHandler() {
-        init(null);
+        init();
     }
 
     /**
-     * Overloaded constructor.
-     * Useful when reading XML into an already open database connection e.g. during migration
-     * @param db SQLite database object
+     * Initialize the GnuCash XML handler
      */
-    public GncXmlHandler(SQLiteDatabase db) {
-        init(db);
-    }
+    private void init() {
+        mBook = new Book();
+
+        DatabaseHelper databaseHelper = new DatabaseHelper(GnuCashApplication.getAppContext(), mBook.getUID());
+        mainDb = databaseHelper.getWritableDatabase();
+        mTransactionsDbAdapter = new TransactionsDbAdapter(mainDb, new SplitsDbAdapter(mainDb));
+        mAccountsDbAdapter = new AccountsDbAdapter(mainDb, mTransactionsDbAdapter);
+        RecurrenceDbAdapter recurrenceDbAdapter = new RecurrenceDbAdapter(mainDb);
+        mScheduledActionsDbAdapter = new ScheduledActionDbAdapter(mainDb, recurrenceDbAdapter);
+        mCommoditiesDbAdapter = new CommoditiesDbAdapter(mainDb);
+        mPricesDbAdapter = new PricesDbAdapter(mainDb);
+        mBudgetsDbAdapter = new BudgetsDbAdapter(mainDb, new BudgetAmountsDbAdapter(mainDb), recurrenceDbAdapter);
 
-    private void init(@Nullable SQLiteDatabase db) {
-        if (db == null) {
-            mAccountsDbAdapter = AccountsDbAdapter.getInstance();
-            mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
-            mScheduledActionsDbAdapter = ScheduledActionDbAdapter.getInstance();
-            mCommoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
-            mPricesDbAdapter = PricesDbAdapter.getInstance();
-            mBudgetsDbAdapter = BudgetsDbAdapter.getInstance();
-        } else {
-            mTransactionsDbAdapter = new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
-            mAccountsDbAdapter = new AccountsDbAdapter(db, mTransactionsDbAdapter);
-            RecurrenceDbAdapter recurrenceDbAdapter = new RecurrenceDbAdapter(db);
-            mScheduledActionsDbAdapter = new ScheduledActionDbAdapter(db, recurrenceDbAdapter);
-            mCommoditiesDbAdapter = new CommoditiesDbAdapter(db);
-            mPricesDbAdapter = new PricesDbAdapter(db);
-            mBudgetsDbAdapter = new BudgetsDbAdapter(db, new BudgetAmountsDbAdapter(db), recurrenceDbAdapter);
-        }
 
         mContent = new StringBuilder();
 
@@ -454,7 +450,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                 mAccount.setParentUID(characterString);
                 break;
             case GncXmlHelper.TAG_ACCOUNT:
-                if (!mInTemplates) { //we ignore template accounts, we have no use for them
+                if (!mInTemplates) { //we ignore template accounts, we have no use for them. FIXME someday and import the templates too
                     mAccountList.add(mAccount);
                     mAccountMap.put(mAccount.getUID(), mAccount);
                     // check ROOT account
@@ -656,7 +652,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     //the split amount uses the account currency
                     mSplit.setQuantity(new Money(mQuantity, getCommodityForAccount(characterString)));
                     //the split value uses the transaction currency
-                    mSplit.setValue(new Money(mValue, Commodity.getInstance(mTransaction.getCurrency().getCurrencyCode())));
+                    mSplit.setValue(new Money(mValue, mCommoditiesDbAdapter.getCommodity(mTransaction.getCurrency().getCurrencyCode())));
                     mSplit.setAccountUID(characterString);
                 } else {
                     if (!mIgnoreTemplateTransaction)
@@ -883,7 +879,7 @@ public void endDocument() throws SAXException {
             String currencyCode = split.getAccountUID();
             Account imbAccount = mapImbalanceAccount.get(currencyCode);
             if (imbAccount == null) {
-                imbAccount = new Account(imbalancePrefix + currencyCode, Commodity.getInstance(currencyCode));
+                imbAccount = new Account(imbalancePrefix + currencyCode, mCommoditiesDbAdapter.getCommodity(currencyCode));
                 imbAccount.setParentUID(mRootAccount.getUID());
                 imbAccount.setAccountType(AccountType.BANK);
                 mapImbalanceAccount.put(currencyCode, imbAccount);
@@ -931,6 +927,31 @@ public void endDocument() throws SAXException {
         for (Account account:mAccountList){
             account.setFullName(mapFullName.get(account.getUID()));
         }
+
+        String mostAppearedCurrency = "";
+        int mostCurrencyAppearance = 0;
+        for (Map.Entry<String, Integer> entry : mCurrencyCount.entrySet()) {
+            if (entry.getValue() > mostCurrencyAppearance) {
+                mostCurrencyAppearance = entry.getValue();
+                mostAppearedCurrency = entry.getKey();
+            }
+        }
+        if (mostCurrencyAppearance > 0) {
+            GnuCashApplication.setDefaultCurrencyCode(mostAppearedCurrency);
+        }
+
+        saveToDatabase();
+    }
+
+    /**
+     * Saves the imported data to the database
+     * @return GUID of the newly created book, or null if not successful
+     */
+    private void saveToDatabase() {
+        BooksDbAdapter booksDbAdapter = BooksDbAdapter.getInstance();
+        mBook.setRootAccountUID(mRootAccount.getUID());
+        mBook.setDisplayName(booksDbAdapter.generateDefaultBookName());
+
         long startTime = System.nanoTime();
         mAccountsDbAdapter.beginTransaction();
         Log.d(getClass().getSimpleName(), "bulk insert starts");
@@ -960,30 +981,21 @@ public void endDocument() throws SAXException {
             long endTime = System.nanoTime();
             Log.d(getClass().getSimpleName(), String.format("bulk insert time: %d", endTime - startTime));
 
+            //if all of the import went smoothly, then add the book to the book db
+            booksDbAdapter.addRecord(mBook);
             mAccountsDbAdapter.setTransactionSuccessful();
         } finally {
             mAccountsDbAdapter.endTransaction();
-        }
-
-        String mostAppearedCurrency = "";
-        int mostCurrencyAppearance = 0;
-        for (Map.Entry<String, Integer> entry : mCurrencyCount.entrySet()) {
-            if (entry.getValue() > mostCurrencyAppearance) {
-                mostCurrencyAppearance = entry.getValue();
-                mostAppearedCurrency = entry.getKey();
-            }
-        }
-        if (mostCurrencyAppearance > 0) {
-            GnuCashApplication.setDefaultCurrencyCode(mostAppearedCurrency);
+            mainDb.close(); //close it after import
         }
     }
 
     /**
-     * Returns the GUID of the root account in the XML book
-     * @return GUID of the root account
+     * Returns the unique identifier of the just-imported book
+     * @return GUID of the newly imported book
      */
-    public @NonNull String getRootAccountUID() {
-        return mRootAccount.getUID();
+    public @NonNull String getBookUID(){
+        return mBook.getUID();
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
index 9e2a7eea..64a52500 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
@@ -16,7 +16,6 @@
  */
 package org.gnucash.android.importer;
 
-import android.database.sqlite.SQLiteDatabase;
 import android.preference.PreferenceManager;
 import android.util.Log;
 
@@ -46,31 +45,9 @@
 public class GncXmlImporter {
 
     /**
-     * Parses XML into an already open database.
-     * <p>This method is used mainly by the {@link org.gnucash.android.db.DatabaseHelper} for database migrations.<br>
-     *     You should probably use {@link #parse(java.io.InputStream)} instead</p>
-     * @param db SQLite Database
-     * @param gncXmlInputStream Input stream of GnuCash XML
-     */
-    public static void parse(SQLiteDatabase db, InputStream gncXmlInputStream) throws Exception {
-        SAXParserFactory spf = SAXParserFactory.newInstance();
-        SAXParser sp = spf.newSAXParser();
-        XMLReader xr = sp.getXMLReader();
-
-        BufferedInputStream bos = new BufferedInputStream(gncXmlInputStream);
-
-        /** Create handler to handle XML Tags ( extends DefaultHandler ) */
-
-        GncXmlHandler handler = new GncXmlHandler(db);
-
-        xr.setContentHandler(handler);
-        xr.parse(new InputSource(bos));
-    }
-
-    /**
      * Parse GnuCash XML input and populates the database
      * @param gncXmlInputStream InputStream source of the GnuCash XML file
-     * @return GUID of the root account from the imported book
+     * @return GUID of the book into which the XML was imported
      */
     public static String parse(InputStream gncXmlInputStream) throws ParserConfigurationException, SAXException, IOException {
         SAXParserFactory spf = SAXParserFactory.newInstance();
@@ -94,6 +71,7 @@ public static String parse(InputStream gncXmlInputStream) throws ParserConfigura
         long startTime = System.nanoTime();
         xr.parse(new InputSource(bos));
         long endTime = System.nanoTime();
+        Log.d(GncXmlImporter.class.getSimpleName(), String.format("%d ns spent on importing the file", endTime-startTime));
 
         Timestamp timeStamp = TransactionsDbAdapter.getInstance().getTimestampOfLastModification();
         PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
@@ -101,8 +79,6 @@ public static String parse(InputStream gncXmlInputStream) throws ParserConfigura
                 .putString(Exporter.PREF_LAST_EXPORT_TIME, timeStamp.toString())
                 .apply();
 
-        Log.d(GncXmlImporter.class.getSimpleName(), String.format("%d ns spent on importing the file", endTime-startTime));
-
-        return handler.getRootAccountUID();
+        return handler.getBookUID();
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
index 7f01f7d9..cee1e2a0 100644
--- a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
@@ -18,18 +18,27 @@
 import android.annotation.TargetApi;
 import android.app.Activity;
 import android.app.ProgressDialog;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Build;
+import android.provider.OpenableColumns;
 import android.util.Log;
 import android.widget.Toast;
 
 import com.crashlytics.android.Crashlytics;
 
 import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.util.TaskDelegate;
 
+import java.io.File;
 import java.io.InputStream;
 
 /**
@@ -69,9 +78,12 @@ protected void onPreExecute() {
 
     @Override
     protected Boolean doInBackground(Uri... uris) {
+        String bookUID = null;
         try {
             InputStream accountInputStream = mContext.getContentResolver().openInputStream(uris[0]);
-            GncXmlImporter.parse(accountInputStream);
+            bookUID = GncXmlImporter.parse(accountInputStream);
+
+            //// TODO: 08.12.2015 update book name in database table - get name from Uri
         } catch (Exception exception){
             Log.e(ImportAsyncTask.class.getName(), "" + exception.getMessage());
             Crashlytics.log("Could not open: " + uris[0].toString());
@@ -89,8 +101,25 @@ public void run() {
                 }
             });
 
+            //a database is always created at the beginning of import
+            //if there was an error during import, delete the created database
+            if (bookUID != null) {
+                mContext.deleteDatabase(bookUID);
+            }
+
             return false;
         }
+
+        Cursor cursor = mContext.getContentResolver().query(uris[0], null, null, null, null);
+        if (cursor != null && cursor.moveToFirst()) {
+            int nameIndex = cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME);
+            String displayName = cursor.getString(nameIndex);
+            BooksDbAdapter.getInstance().updateRecord(bookUID, DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME, displayName);
+            cursor.close();
+        }
+
+        ((GnuCashApplication)mContext.getApplication()).loadBook(bookUID);
+
         return true;
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 69d00d16..cfdc26ad 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -350,6 +350,8 @@ protected void onNewIntent(Intent intent) {
         setIntent(intent);
         setCurrentTab();
 
+        getCurrentAccountListFragment().refresh();
+
         handleOpenFileIntent(intent);
     }
 
@@ -500,7 +502,12 @@ public void onTaskComplete() {
      * @see #importXmlFileFromIntent(Activity, Intent, TaskDelegate)
      */
     public static void startXmlFileChooser(Activity activity) {
-        Intent pickIntent = new Intent(Intent.ACTION_GET_CONTENT);
+        Intent pickIntent;
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT){
+            pickIntent = new Intent(Intent.ACTION_OPEN_DOCUMENT);
+        } else
+            pickIntent = new Intent(Intent.ACTION_GET_CONTENT);
+
 //        ArrayList<String> mimeTypes = new ArrayList<>();
 //        mimeTypes.add("application/*");
 //        mimeTypes.add("file/*");
@@ -509,7 +516,7 @@ public static void startXmlFileChooser(Activity activity) {
 //        pickIntent.putStringArrayListExtra(Intent.EXTRA_MIME_TYPES, mimeTypes);
         pickIntent.addCategory(Intent.CATEGORY_OPENABLE);
         pickIntent.setType("*/*");
-        Intent chooser = Intent.createChooser(pickIntent, "Select GnuCash account file");
+        Intent chooser = Intent.createChooser(pickIntent, "Select GnuCash account file"); //todo internationalize string
 
         try {
             activity.startActivityForResult(chooser, REQUEST_PICK_ACCOUNTS_FILE);
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 5023e914..5c8dcd4d 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -300,6 +300,7 @@ public void refresh() {
     @Override
     public void onDestroy() {
         super.onDestroy();
+        mAccountRecyclerAdapter.swapCursor(null);
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index ea8133a3..10ff217d 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -78,7 +78,7 @@
     @Bind(R.id.nav_view) NavigationView mNavigationView;
     @Bind(R.id.toolbar) Toolbar mToolbar;
     @Bind(R.id.toolbar_progress) ProgressBar mToolbarProgress;
-    TextView mBookNameTextView;
+    protected TextView mBookNameTextView;
 
     protected ActionBarDrawerToggle mDrawerToggle;
 
@@ -122,10 +122,16 @@ public void onClick(View v) {
                 onClickBook(v);
             }
         });
-        mBookNameTextView.setText(BooksDbAdapter.getInstance().getActiveBookDisplayName());
+        updateActiveBookName();
         setUpNavigationDrawer();
     }
 
+    @Override
+    protected void onResume() {
+        super.onResume();
+        updateActiveBookName();
+    }
+
     /**
      * Return the layout to inflate for this activity
      * @return Layout resource identifier
@@ -203,6 +209,13 @@ public boolean onOptionsItemSelected(MenuItem item) {
     }
 
     /**
+     * Update the display name of the currently active book
+     */
+    protected void updateActiveBookName(){
+        mBookNameTextView.setText(BooksDbAdapter.getInstance().getActiveBookDisplayName());
+    }
+
+    /**
      * Handler for the navigation drawer items
      * */
     protected void onDrawerMenuItemClicked(int itemId) {
@@ -279,7 +292,8 @@ public boolean onMenuItemClick(MenuItem item) {
         long id = item.getItemId();
         String bookUID = BooksDbAdapter.getInstance().getUID(id);
         ((GnuCashApplication)getApplication()).loadBook(bookUID);
-        AccountsActivity.start(this);
+        finish();
+        AccountsActivity.start(GnuCashApplication.getAppContext());
         return true;
     }
 
@@ -294,11 +308,10 @@ public void onClickBook(View view){
         Menu menu = popup.getMenu();
         int maxRecent = 0;
         Cursor cursor = BooksDbAdapter.getInstance().fetchAllRecords(null, null,
-                DatabaseSchema.BookEntry.COLUMN_MODIFIED_AT + " ASC");
+                DatabaseSchema.BookEntry.COLUMN_MODIFIED_AT + " DESC");
         while (cursor.moveToNext() && maxRecent++ < 10) {
             long id = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry._ID));
             String name = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME));
-
             menu.add(0, (int)id, maxRecent, name);
         }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportType.java b/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
index a5f9f64d..d9887e1d 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportType.java
@@ -21,7 +21,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.ui.report.barchart.CashFlowBarChartFragment;
+import org.gnucash.android.ui.report.barchart.StackedBarChartFragment;
 import org.gnucash.android.ui.report.linechart.CashFlowLineChartFragment;
 import org.gnucash.android.ui.report.piechart.PieChartFragment;
 import org.gnucash.android.ui.report.sheet.BalanceSheetFragment;
@@ -50,7 +50,7 @@
                 mReportTypeMap.put(context.getString(R.string.title_pie_chart), PieChartFragment.class);
                 break;
             case 1:
-                mReportTypeMap.put(context.getString(R.string.title_cash_flow_report), CashFlowBarChartFragment.class);
+                mReportTypeMap.put(context.getString(R.string.title_bar_chart), StackedBarChartFragment.class);
                 break;
             case 2:
                 mReportTypeMap.put(context.getString(R.string.title_cash_flow_report), CashFlowLineChartFragment.class);
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment.java
index ce9beb51..1175963d 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment.java
@@ -41,7 +41,7 @@
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.ui.report.barchart.CashFlowBarChartFragment;
+import org.gnucash.android.ui.report.barchart.StackedBarChartFragment;
 import org.gnucash.android.ui.report.linechart.CashFlowLineChartFragment;
 import org.gnucash.android.ui.report.piechart.PieChartFragment;
 import org.gnucash.android.ui.report.sheet.BalanceSheetFragment;
@@ -242,7 +242,7 @@ public void onClickChartTypeButton(View view){
                 fragment = new PieChartFragment();
                 break;
             case R.id.btn_bar_chart:
-                fragment = new CashFlowBarChartFragment();
+                fragment = new StackedBarChartFragment();
                 break;
             case R.id.btn_line_chart:
                 fragment = new CashFlowLineChartFragment();
diff --git a/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment.java
similarity index 99%
rename from app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment.java
rename to app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment.java
index 7e3620fa..e63eef99 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/barchart/CashFlowBarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment.java
@@ -64,7 +64,7 @@
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class CashFlowBarChartFragment extends BaseReportFragment {
+public class StackedBarChartFragment extends BaseReportFragment {
 
     private static final String X_AXIS_MONTH_PATTERN = "MMM YY";
     private static final String X_AXIS_QUARTER_PATTERN = "Q%d %s";
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index c263e708..8ed922bd 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -453,7 +453,8 @@ private void toggleOwnCloudSync(Preference pref){
             mPrefs.edit().putBoolean(getString(R.string.owncloud_sync), false).apply();
         else {
             OwnCloudDialogFragment ocDialog = OwnCloudDialogFragment.newInstance(pref);
-            ocDialog.show(getFragmentManager(), "owncloud_dialog");
+            //// TODO: 08.12.2015 show dialog
+//            ocDialog.show(getFragmentManager(), "owncloud_dialog");
         }
     }
 
diff --git a/app/src/main/res/layout/nav_drawer_header.xml b/app/src/main/res/layout/nav_drawer_header.xml
index e57c327e..90124c11 100644
--- a/app/src/main/res/layout/nav_drawer_header.xml
+++ b/app/src/main/res/layout/nav_drawer_header.xml
@@ -41,8 +41,12 @@
         android:gravity="center_vertical"
         android:textColor="@android:color/white"
         android:textSize="@dimen/text_size_medium"
-        android:layout_marginLeft="55dp"
+        android:singleLine="true"
+        android:ellipsize="end"
+        android:layout_marginLeft="@dimen/dialog_padding"
+        android:layout_marginStart="@dimen/dialog_padding"
         android:drawableRight="@drawable/ic_arrow_drop_down_white_24dp"
+        android:drawableEnd="@drawable/ic_arrow_drop_down_white_24dp"
         android:clickable="true"
         tools:text="Current Book Name"/>
 </LinearLayout>
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
index 6e10760b..ed356eff 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
@@ -1,10 +1,14 @@
 package org.gnucash.android.test.unit.db;
 
+import android.database.sqlite.SQLiteDatabase;
+
 import org.assertj.core.data.Index;
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;
 import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
@@ -59,13 +63,30 @@
 
 	@Before
 	public void setUp() throws Exception {
-
-        mSplitsDbAdapter = SplitsDbAdapter.getInstance();
-        mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
-        mAccountsDbAdapter = AccountsDbAdapter.getInstance();
+        initAdapters(null);
 	}
 
     /**
+     * Initialize database adapters for a specific book.
+     * This method should be called everytime a new book is loaded into the database
+     * @param bookUID GUID of the GnuCash book
+     */
+    private void initAdapters(String bookUID){
+        if (bookUID == null){
+            mSplitsDbAdapter = SplitsDbAdapter.getInstance();
+            mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
+            mAccountsDbAdapter = AccountsDbAdapter.getInstance();
+        } else {
+            DatabaseHelper databaseHelper = new DatabaseHelper(GnuCashApplication.getAppContext(), bookUID);
+            SQLiteDatabase db = databaseHelper.getWritableDatabase();
+            mSplitsDbAdapter = new SplitsDbAdapter(db);
+            mTransactionsDbAdapter = new TransactionsDbAdapter(db, mSplitsDbAdapter);
+            mAccountsDbAdapter = new AccountsDbAdapter(db, mTransactionsDbAdapter);
+            BooksDbAdapter.getInstance().setActive(bookUID);
+        }
+    }
+
+    /**
      * Test that the list of accounts is always returned sorted alphabetically
      */
     @Test
@@ -383,12 +404,12 @@ public void shouldReassignDescendantAccounts(){
 
     @Test
     public void shouldCreateImbalanceAccountOnDemand(){
-        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(0);
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(1L);
 
         Currency usd = Currency.getInstance("USD");
         String imbalanceUID = mAccountsDbAdapter.getImbalanceAccountUID(usd);
         assertThat(imbalanceUID).isNull();
-        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(0);
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(1L);
 
         imbalanceUID = mAccountsDbAdapter.getOrCreateImbalanceAccountUID(usd);
         assertThat(imbalanceUID).isNotNull().isNotEmpty();
@@ -428,13 +449,13 @@ public void editingAccountShouldNotDeleteTemplateSplits(){
 
     @Test
     public void testGetCurrenciesInUse(){
-        int expectedSize = 0;
+        int expectedSize = 1; //there is already a root account in the database
         List<Currency> currencies = mAccountsDbAdapter.getCurrenciesInUse();
         assertThat(currencies).hasSize(expectedSize);
 
         Account account = new Account("Dummy", Commodity.USD);
-        mAccountsDbAdapter.addRecord(account);
-        assertThat(mAccountsDbAdapter.getCurrenciesInUse()).hasSize(++expectedSize);
+        mAccountsDbAdapter.addRecord(account); //default currency is also USD
+        assertThat(mAccountsDbAdapter.getCurrenciesInUse()).hasSize(expectedSize);
 
         account = new Account("Dummy", Commodity.EUR);
         mAccountsDbAdapter.addRecord(account);
@@ -470,9 +491,10 @@ public void importingXml_shouldSetDefaultCurrency(){
     /**
      * Loads the default accounts from file resource
      */
-    public static void loadDefaultAccounts(){
+    private void loadDefaultAccounts(){
         try {
-            GncXmlImporter.parse(GnuCashApplication.getAppContext().getResources().openRawResource(R.raw.default_accounts));
+            String bookUID = GncXmlImporter.parse(GnuCashApplication.getAppContext().getResources().openRawResource(R.raw.default_accounts));
+            initAdapters(bookUID);
         } catch (ParserConfigurationException | SAXException | IOException e) {
             e.printStackTrace();
             throw new RuntimeException("Could not create default accounts");
diff --git a/app/src/test/java/org/gnucash/android/test/unit/export/BackupTest.java b/app/src/test/java/org/gnucash/android/test/unit/export/BackupTest.java
index 411299b5..9d02feed 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/export/BackupTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/export/BackupTest.java
@@ -16,10 +16,15 @@
 package org.gnucash.android.test.unit.export;
 
 import org.gnucash.android.BuildConfig;
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.BookDbHelper;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.export.xml.GncXmlExporter;
+import org.gnucash.android.importer.GncXmlImporter;
 import org.gnucash.android.test.unit.db.AccountsDbAdapterTest;
 import org.gnucash.android.test.unit.util.GnucashTestRunner;
 import org.gnucash.android.test.unit.util.ShadowCrashlytics;
@@ -28,10 +33,14 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
+import org.xml.sax.SAXException;
 
 import java.io.File;
+import java.io.IOException;
 import java.util.List;
 
+import javax.xml.parsers.ParserConfigurationException;
+
 import static org.assertj.core.api.Assertions.assertThat;
 
 /**
@@ -43,7 +52,7 @@
 
     @Before
     public void setUp(){
-        AccountsDbAdapterTest.loadDefaultAccounts();
+        loadDefaultAccounts();
     }
 
     @Test
@@ -63,4 +72,17 @@ public void shouldCreateBackupFileName(){
                 .hasExtension(ExportFormat.XML.getExtension().substring(1));
 
     }
+
+    /**
+     * Loads the default accounts from file resource
+     */
+    private void loadDefaultAccounts(){
+        try {
+            String bookUID = GncXmlImporter.parse(GnuCashApplication.getAppContext().getResources().openRawResource(R.raw.default_accounts));
+            BooksDbAdapter.getInstance().setActive(bookUID);
+        } catch (ParserConfigurationException | SAXException | IOException e) {
+            e.printStackTrace();
+            throw new RuntimeException("Could not create default accounts");
+        }
+    }
 }
diff --git a/build.gradle b/build.gradle
index 17ec11be..8d339c5b 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
 		jcenter()
 	}
 	dependencies {
-		classpath 'com.android.tools.build:gradle:2.0.0-alpha2'
+		classpath 'com.android.tools.build:gradle:1.5.0'
 		classpath 'io.fabric.tools:gradle:1.21.0'
 	}
 }

From f66163b6e68fec793c739bcb86e3cd9e36f00474 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 11 Dec 2015 14:30:36 +0100
Subject: [PATCH 021/121] Fix crash when switching books

Compact transaction view enabled by default when in single-entry mode
Use smaller font size for transaction description text
Reduce number of days after install until rating requested to 14
Fix several failing instrumentation tests (due to multi-book support)
---
 app/build.gradle                                   |  4 ++--
 .../android/test/ui/AccountsActivityTest.java      | 21 +++++++++------------
 .../android/test/ui/ExportTransactionsTest.java    |  8 +++++++-
 .../android/test/ui/PieChartReportTest.java        | 22 +++++++++++++---------
 .../android/test/ui/TransactionsActivityTest.java  | 20 ++++++++++++--------
 .../gnucash/android/app/GnuCashApplication.java    |  7 ++++++-
 .../gnucash/android/importer/ImportAsyncTask.java  |  7 ++++++-
 .../android/ui/account/AccountsActivity.java       | 13 ++++++-------
 .../android/ui/account/AccountsListFragment.java   | 12 +++++++-----
 .../android/ui/common/BaseDrawerActivity.java      | 17 +++++++++++++----
 .../ui/transaction/TransactionsListFragment.java   |  7 +++++--
 .../android/ui/util/widget/CalculatorEditText.java |  1 +
 .../android/ui/wizard/FirstRunWizardActivity.java  |  3 +++
 13 files changed, 90 insertions(+), 52 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index bcd3fe0b..1def8805 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -82,8 +82,8 @@ android {
         //todo re-enable proguard and test coverage
         release {
             minifyEnabled true
-//            shrinkResources true
-//            proguardFiles getDefaultProguardFile('proguard-android.txt'), proguard-rules.pro
+            shrinkResources true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
             if (project.hasProperty("RELEASE_STORE_FILE")){
                 signingConfig signingConfigs.release
             } else {
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 3fff61e7..b087fe24 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -34,6 +34,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.BookDbHelper;
+import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
@@ -87,6 +88,8 @@
     private static final Commodity DUMMY_ACCOUNT_CURRENCY = Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE);
 	private static final String DUMMY_ACCOUNT_NAME = "Dummy account";
     public static final String  DUMMY_ACCOUNT_UID   = "dummy-account";
+    public static final String TEST_DB_NAME = "test_gnucash_db.sqlite";
+
     private DatabaseHelper mDbHelper;
     private SQLiteDatabase mDb;
     private AccountsDbAdapter mAccountsDbAdapter;
@@ -105,30 +108,23 @@ public void setUp() throws Exception {
         preventFirstRunDialogs(getInstrumentation().getTargetContext());
         mAcccountsActivity = getActivity();
 
-        Book book1 = new Book();
-        mDbHelper = new DatabaseHelper(mAcccountsActivity, book1.getUID());
+        String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
+        mDbHelper = new DatabaseHelper(mAcccountsActivity, activeBookUID);
         try {
             mDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
             Log.e(getClass().getName(), "Error getting database: " + e.getMessage());
             mDb = mDbHelper.getReadableDatabase();
         }
-        mSplitsDbAdapter = new SplitsDbAdapter(mDb);
-        mTransactionsDbAdapter = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
-        mAccountsDbAdapter = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
+        mSplitsDbAdapter        = new SplitsDbAdapter(mDb);
+        mTransactionsDbAdapter  = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
+        mAccountsDbAdapter      = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
         mAccountsDbAdapter.deleteAllRecords(); //clear the data
 
 		Account account = new Account(DUMMY_ACCOUNT_NAME, new CommoditiesDbAdapter(mDb).getCommodity(DUMMY_ACCOUNT_CURRENCY_CODE));
         account.setUID(DUMMY_ACCOUNT_UID);
 		mAccountsDbAdapter.addRecord(account);
 
-        String rootUID = mAccountsDbAdapter.getOrCreateGnuCashRootAccountUID();
-        book1.setRootAccountUID(rootUID);
-        book1.setActive(true);
-        book1.setDisplayName("Book 1");
-        BooksDbAdapter booksDbAdapter = new BooksDbAdapter(new BookDbHelper(mAcccountsActivity).getWritableDatabase());
-        booksDbAdapter.addRecord(book1);
-
         refreshAccountsList();
 	}
 
@@ -157,6 +153,7 @@ public void testDisplayAccountsList(){
         mAcccountsActivity.recreate();
 
         refreshAccountsList();
+        sleep(1000);
         onView(withText("Assets")).perform(scrollTo());
         onView(withText("Expenses")).perform(click());
         onView(withText("Books")).perform(scrollTo());
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index 9c776049..d5fbe27c 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -36,6 +36,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.RecurrenceDbAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
@@ -62,8 +63,11 @@
 import java.util.Currency;
 import java.util.List;
 
+import static android.support.test.espresso.Espresso.onData;
 import static android.support.test.espresso.Espresso.onView;
 import static android.support.test.espresso.action.ViewActions.click;
+import static android.support.test.espresso.action.ViewActions.scrollTo;
+import static android.support.test.espresso.action.ViewActions.swipeUp;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.RootMatchers.withDecorView;
 import static android.support.test.espresso.matcher.ViewMatchers.isAssignableFrom;
@@ -102,7 +106,8 @@ public void setUp() throws Exception {
 		AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext());
 		mAcccountsActivity = getActivity();
 
-        mDbHelper = new DatabaseHelper(getActivity(), BaseModel.generateUID());
+		String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
+        mDbHelper = new DatabaseHelper(getActivity(), activeBookUID);
         try {
             mDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
@@ -258,6 +263,7 @@ public void testShouldCreateExportSchedule(){
 	@Test
 	public void testCreateBackup(){
 		onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
+		onView(withId(R.id.nav_view)).perform(swipeUp());
 		onView(withText(R.string.title_settings)).perform(click());
 		onView(withText(R.string.header_backup_and_export_settings)).perform(click());
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index ab3b94d0..00ef29f6 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -35,6 +35,8 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.importer.GncXmlImporter;
@@ -88,7 +90,7 @@
     private static final String GIFTS_RECEIVED_INCOME_ACCOUNT_UID = "b01950c0df0890b6543209d51c8e0b0f";
     private static final String GIFTS_RECEIVED_INCOME_ACCOUNT_NAME = "Gifts Received";
 
-    public static final Commodity CURRENCY = Commodity.getInstance("USD");
+    public static Commodity CURRENCY;
 
     private AccountsDbAdapter mAccountsDbAdapter;
     private TransactionsDbAdapter mTransactionsDbAdapter;
@@ -97,6 +99,7 @@
 
 	public PieChartReportTest() {
 		super(ReportsActivity.class);
+        CURRENCY = new Commodity("US Dollars", "USD", 100);
 	}
 	
 	@Override
@@ -105,10 +108,14 @@ public void setUp() throws Exception {
 		super.setUp();
 		injectInstrumentation(InstrumentationRegistry.getInstrumentation());
 
+        // creates default accounts
+        String bookUID = GncXmlImporter.parse(GnuCashApplication.getAppContext().getResources().openRawResource(R.raw.default_accounts));
+        BooksDbAdapter.getInstance().setActive(bookUID);
+
         mReportsActivity = getActivity();
 
         SQLiteDatabase db;
-        DatabaseHelper dbHelper = new DatabaseHelper(mReportsActivity, BaseModel.generateUID());
+        DatabaseHelper dbHelper = new DatabaseHelper(mReportsActivity, bookUID);
         try {
             db = dbHelper.getWritableDatabase();
         } catch (SQLException e) {
@@ -119,11 +126,12 @@ public void setUp() throws Exception {
         mAccountsDbAdapter = new AccountsDbAdapter(db, mTransactionsDbAdapter);
         mAccountsDbAdapter.deleteAllRecords();
 
+        CURRENCY = new CommoditiesDbAdapter(db).getCommodity("USD");
+
         PreferenceManager.getDefaultSharedPreferences(mReportsActivity).edit()
                 .putString(mReportsActivity.getString(R.string.key_default_currency), CURRENCY.getCurrencyCode())
                 .commit();
-        // creates default accounts
-        GncXmlImporter.parse(GnuCashApplication.getAppContext().getResources().openRawResource(R.raw.default_accounts));
+
 	}
 
     /**
@@ -145,8 +153,6 @@ private void addTransactionForCurrentMonth() throws Exception {
         transaction.addSplit(split);
         transaction.addSplit(split.createPair(CASH_IN_WALLET_ASSET_ACCOUNT_UID));
 
-        Account account = mAccountsDbAdapter.getRecord(DINING_EXPENSE_ACCOUNT_UID);
-        account.addTransaction(transaction);
         mTransactionsDbAdapter.addRecord(transaction);
     }
 
@@ -160,8 +166,6 @@ private void addTransactionForPreviousMonth(int minusMonths) {
         transaction.addSplit(split);
         transaction.addSplit(split.createPair(CASH_IN_WALLET_ASSET_ACCOUNT_UID));
 
-        Account account = mAccountsDbAdapter.getRecord(BOOKS_EXPENSE_ACCOUNT_UID);
-        account.addTransaction(transaction);
         mTransactionsDbAdapter.addRecord(transaction);
     }
 
@@ -192,7 +196,6 @@ public void testSpinner() throws Exception {
         transaction.addSplit(split);
         transaction.addSplit(split.createPair(CASH_IN_WALLET_ASSET_ACCOUNT_UID));
 
-        mAccountsDbAdapter.getRecord(GIFTS_RECEIVED_INCOME_ACCOUNT_UID).addTransaction(transaction);
         mTransactionsDbAdapter.addRecord(transaction);
 
         getTestActivity();
@@ -205,6 +208,7 @@ public void testSpinner() throws Exception {
         Thread.sleep(1000);
 
         onView(withId(R.id.pie_chart)).perform(click());
+
         String selectedText = String.format(PieChartFragment.SELECTED_VALUE_PATTERN, GIFTS_RECEIVED_INCOME_ACCOUNT_NAME, TRANSACTION3_AMOUNT, 100f);
         onView(withId(R.id.selected_chart_slice)).check(matches(withText(selectedText)));
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index ce4b9196..ce7afd3d 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -33,6 +33,8 @@
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
@@ -87,6 +89,7 @@
     private static final String TRANSFER_ACCOUNT_NAME   = "Transfer account";
     private static final String TRANSFER_ACCOUNT_UID    = "transfer_account";
     public static final String CURRENCY_CODE = "USD";
+	public static Commodity COMMODITY = Commodity.DEFAULT_COMMODITY;
 
 	private Transaction mTransaction;
 	private long mTransactionTimeMillis;
@@ -109,8 +112,8 @@ public void setUp() throws Exception {
 		injectInstrumentation(InstrumentationRegistry.getInstrumentation());
 		AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext());
 
-
-        mDbHelper = new DatabaseHelper(getInstrumentation().getTargetContext(), BaseModel.generateUID());
+		String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
+        mDbHelper = new DatabaseHelper(getInstrumentation().getTargetContext(), activeBookUID);
         try {
             mDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
@@ -122,20 +125,20 @@ public void setUp() throws Exception {
         mAccountsDbAdapter = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
 		mAccountsDbAdapter.deleteAllRecords();
 
+		COMMODITY = new CommoditiesDbAdapter(mDb).getCommodity(CURRENCY_CODE);
+
 		mTransactionTimeMillis = System.currentTimeMillis();
-        Account account = new Account(DUMMY_ACCOUNT_NAME);
+        Account account = new Account(DUMMY_ACCOUNT_NAME, COMMODITY);
         account.setUID(DUMMY_ACCOUNT_UID);
-        account.setCommodity(Commodity.getInstance(CURRENCY_CODE));
 
-        Account account2 = new Account(TRANSFER_ACCOUNT_NAME);
+        Account account2 = new Account(TRANSFER_ACCOUNT_NAME, COMMODITY);
         account2.setUID(TRANSFER_ACCOUNT_UID);
-        account2.setCommodity(Commodity.getInstance(CURRENCY_CODE));
 
         mAccountsDbAdapter.addRecord(account);
         mAccountsDbAdapter.addRecord(account2);
 
         mTransaction = new Transaction(TRANSACTION_NAME);
-		mTransaction.setCurrencyCode(CURRENCY_CODE);
+		mTransaction.setCommodity(COMMODITY);
         mTransaction.setNote("What up?");
         mTransaction.setTime(mTransactionTimeMillis);
         Split split = new Split(new Money(TRANSACTION_AMOUNT, CURRENCY_CODE), DUMMY_ACCOUNT_UID);
@@ -584,7 +587,8 @@ private void clickOnView(int viewId){
 	@Override
 	@After
 	public void tearDown() throws Exception {
-		mTransactionsActivity.finish();
+		if (mTransactionsActivity != null)
+			mTransactionsActivity.finish();
 		super.tearDown();
 	}
 }
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 76172912..2f0c9bc9 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -96,6 +96,7 @@
     private static RecurrenceDbAdapter mRecurrenceDbAdapter;
 
     private static BooksDbAdapter mBooksDbAdapter;
+    private DatabaseHelper mDbHelper;
 
     /**
      * Returns darker version of specified <code>color</code>.
@@ -141,7 +142,11 @@ public void onCreate(){
      * This method should be called every time a new book is opened
      */
     private void initDatabaseAdapters() {
-        DatabaseHelper mDbHelper = new DatabaseHelper(getApplicationContext(),
+        if (mDbHelper != null){ //close if open
+            mDbHelper.getReadableDatabase().close();
+        }
+
+        mDbHelper = new DatabaseHelper(getApplicationContext(),
                 mBooksDbAdapter.getActiveBookUID());
         SQLiteDatabase mainDb;
         try {
diff --git a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
index cee1e2a0..ca698ded 100644
--- a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
@@ -18,6 +18,7 @@
 import android.annotation.TargetApi;
 import android.app.Activity;
 import android.app.ProgressDialog;
+import android.content.ContentValues;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.net.Uri;
@@ -114,7 +115,11 @@ public void run() {
         if (cursor != null && cursor.moveToFirst()) {
             int nameIndex = cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME);
             String displayName = cursor.getString(nameIndex);
-            BooksDbAdapter.getInstance().updateRecord(bookUID, DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME, displayName);
+            ContentValues contentValues = new ContentValues();
+            contentValues.put(DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME, displayName);
+            contentValues.put(DatabaseSchema.BookEntry.COLUMN_SOURCE_URI, uris[0].toString());
+            BooksDbAdapter.getInstance().updateRecord(bookUID, contentValues);
+
             cursor.close();
         }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index cfdc26ad..047af6ab 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -147,7 +147,7 @@
     /**
      * Configuration for rating the app
      */
-    public static RateThisApp.Config rateAppConfig = new RateThisApp.Config(30, 100);
+    public static RateThisApp.Config rateAppConfig = new RateThisApp.Config(14, 100);
 
     /**
      * Adapter for managing the sub-account and transaction fragment pages in the accounts view
@@ -178,7 +178,6 @@ public Fragment getItem(int i) {
                 }
                 mFragmentPageReferenceMap.put(i, currentFragment);
             }
-
             return currentFragment;
         }
 
@@ -252,12 +251,12 @@ public void onTabSelected(TabLayout.Tab tab) {
 
             @Override
             public void onTabUnselected(TabLayout.Tab tab) {
-
+                //nothing to see here, move along
             }
 
             @Override
             public void onTabReselected(TabLayout.Tab tab) {
-
+                //nothing to see here, move along
             }
         });
 
@@ -503,9 +502,9 @@ public void onTaskComplete() {
      */
     public static void startXmlFileChooser(Activity activity) {
         Intent pickIntent;
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT){
-            pickIntent = new Intent(Intent.ACTION_OPEN_DOCUMENT);
-        } else
+//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT){
+//            pickIntent = new Intent(Intent.ACTION_OPEN_DOCUMENT);
+//        } else
             pickIntent = new Intent(Intent.ACTION_GET_CONTENT);
 
 //        ArrayList<String> mimeTypes = new ArrayList<>();
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 5c8dcd4d..913714c7 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -176,8 +176,6 @@ public void onCreate(Bundle savedInstanceState) {
         Bundle args = getArguments();
         if (args != null)
             mParentAccountUID = args.getString(UxArgument.PARENT_ACCOUNT_UID);
-
-        mAccountsDbAdapter = AccountsDbAdapter.getInstance();
     }
 
     @Override
@@ -194,14 +192,17 @@ public void onActivityCreated(Bundle savedInstanceState) {
         mAccountRecyclerAdapter = new AccountRecyclerAdapter(null);
         mRecyclerView.setAdapter(mAccountRecyclerAdapter);
 
-        getLoaderManager().initLoader(0, null, this);
+    }
+
+    @Override
+    public void onStart() {
+        super.onStart();
+        mAccountsDbAdapter = AccountsDbAdapter.getInstance();
     }
 
     @Override
     public void onResume() {
         super.onResume();
-        ActionBar actionbar = ((AppCompatActivity) getActivity()).getSupportActionBar();
-        actionbar.setTitle(R.string.title_accounts);
         refresh();
     }
 
@@ -462,6 +463,7 @@ public AccountViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
         @Override
         public void onBindViewHolderCursor(final AccountViewHolder holder, final Cursor cursor) {
             final String accountUID = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_UID));
+            mAccountsDbAdapter = AccountsDbAdapter.getInstance();
             holder.accoundId = mAccountsDbAdapter.getID(accountUID);
 
             holder.accountName.setText(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_NAME)));
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 10ff217d..9c79a913 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -74,6 +74,7 @@
 public abstract class BaseDrawerActivity extends PasscodeLockActivity implements
     PopupMenu.OnMenuItemClickListener {
 
+    public static final int ID_MANAGE_BOOKS = 0xB00C;
     @Bind(R.id.drawer_layout) DrawerLayout mDrawerLayout;
     @Bind(R.id.nav_view) NavigationView mNavigationView;
     @Bind(R.id.toolbar) Toolbar mToolbar;
@@ -290,9 +291,16 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     @Override
     public boolean onMenuItemClick(MenuItem item) {
         long id = item.getItemId();
-        String bookUID = BooksDbAdapter.getInstance().getUID(id);
-        ((GnuCashApplication)getApplication()).loadBook(bookUID);
-        finish();
+        if (id == ID_MANAGE_BOOKS){
+            //// TODO: 11.12.2015 launch activity to manage books
+            return true;
+        }
+        BooksDbAdapter booksDbAdapter = BooksDbAdapter.getInstance();
+        String bookUID = booksDbAdapter.getUID(id);
+        if (!bookUID.equals(booksDbAdapter.getActiveBookUID())){
+            ((GnuCashApplication) getApplication()).loadBook(bookUID);
+            finish();
+        }
         AccountsActivity.start(GnuCashApplication.getAppContext());
         return true;
     }
@@ -309,11 +317,12 @@ public void onClickBook(View view){
         int maxRecent = 0;
         Cursor cursor = BooksDbAdapter.getInstance().fetchAllRecords(null, null,
                 DatabaseSchema.BookEntry.COLUMN_MODIFIED_AT + " DESC");
-        while (cursor.moveToNext() && maxRecent++ < 10) {
+        while (cursor.moveToNext() && maxRecent++ < 5) {
             long id = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry._ID));
             String name = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME));
             menu.add(0, (int)id, maxRecent, name);
         }
+        menu.add(0, ID_MANAGE_BOOKS, maxRecent, "Manage Books...");
 
         popup.show();
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index 9d781e19..fe3b1882 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -43,6 +43,7 @@
 import android.widget.TextView;
 
 import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
@@ -94,10 +95,11 @@ public void onCreate(Bundle savedInstanceState) {
 		mAccountUID = args.getString(UxArgument.SELECTED_ACCOUNT_UID);
 
 		mUseCompactView = PreferenceManager.getDefaultSharedPreferences(getActivity())
-				.getBoolean(getActivity().getString(R.string.key_use_compact_list), false);
+				.getBoolean(getActivity().getString(R.string.key_use_compact_list), !GnuCashApplication.isDoubleEntryEnabled());
 		//if there was a local override of the global setting, respect it
 		if (savedInstanceState != null)
 			mUseCompactView = savedInstanceState.getBoolean(getString(R.string.key_use_compact_list), mUseCompactView);
+
 		mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 	}
 
@@ -183,6 +185,7 @@ public void onPrepareOptionsMenu(Menu menu) {
 		super.onPrepareOptionsMenu(menu);
 		MenuItem item = menu.findItem(R.id.menu_compact_trn_view);
 		item.setChecked(mUseCompactView);
+		item.setEnabled(GnuCashApplication.isDoubleEntryEnabled()); //always compact for single-entry
 	}
 
 	@Override
@@ -326,7 +329,7 @@ public void onClick(View v) {
 			public ViewHolder(View itemView) {
 				super(itemView);
 				ButterKnife.bind(this, itemView);
-
+				primaryText.setTextSize(18);
 				optionsMenu.setOnClickListener(new View.OnClickListener() {
 					@Override
 					public void onClick(View v) {
diff --git a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
index f12caba5..835e35c0 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
@@ -30,6 +30,7 @@
 import android.view.View;
 import android.view.inputmethod.InputMethodManager;
 import android.widget.EditText;
+import android.widget.TextView;
 
 import com.crashlytics.android.Crashlytics;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java b/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
index 71732849..00a8b0c0 100644
--- a/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
@@ -50,6 +50,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.util.TaskDelegate;
@@ -209,6 +210,8 @@ private void createAccountsAndFinish() {
         AccountsActivity.removeFirstRunFlag();
 
         if (mAccountOptions.equals(getString(R.string.wizard_option_create_default_accounts))){
+            String bookUID = BooksDbAdapter.getInstance().getActiveBookUID();
+            BooksDbAdapter.getInstance().deleteRecord(bookUID); //a default book is usually created
             AccountsActivity.createDefaultAccounts(mCurrencyCode, FirstRunWizardActivity.this);
             finish();
         } else if (mAccountOptions.equals(getString(R.string.wizard_option_import_my_accounts))){

From 588c77806945076678d246b4c2938618f61f936f Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 21 Dec 2015 15:54:41 +0100
Subject: [PATCH 022/121] Overhaul settings activity

- use preference compat library to ensure uniform look down for all supported API levels
- use separate preferences per book
---
 .../android/test/ui/ExportTransactionsTest.java    |  22 +-
 .../android/test/ui/PieChartReportTest.java        |   3 +-
 .../android/test/ui/TransactionsActivityTest.java  |   5 +-
 app/src/main/AndroidManifest.xml                   |   4 +-
 .../gnucash/android/app/GnuCashApplication.java    |  12 +-
 .../gnucash/android/export/ExportAsyncTask.java    |  12 +-
 .../android/ui/account/AccountFormFragment.java    |   3 +-
 .../android/ui/common/BaseDrawerActivity.java      |   4 +-
 .../android/ui/export/ExportFormFragment.java      |  16 +-
 .../ui/settings/AboutPreferenceFragment.java       |  20 +-
 .../ui/settings/AccountPreferencesFragment.java    |  79 ++-
 .../ui/settings/AppCompatPreferenceActivity.java   | 128 ----
 .../ui/settings/BackupPreferenceFragment.java      | 339 +++++++++-
 .../ui/settings/GeneralPreferenceFragment.java     |  61 +-
 .../android/ui/settings/PreferenceActivity.java    | 160 +++++
 .../ui/settings/PreferenceHeadersFragment.java     |  35 ++
 .../android/ui/settings/SettingsActivity.java      | 680 ---------------------
 .../settings/TransactionsPreferenceFragment.java   |  66 +-
 .../DeleteAllAccountsConfirmationDialog.java       |   4 +-
 .../DeleteAllTransactionsConfirmationDialog.java   |   9 +-
 .../{ => dialog}/OwnCloudDialogFragment.java       |   6 +-
 .../ui/transaction/TransactionFormFragment.java    |   5 +-
 .../ui/transaction/TransactionsListFragment.java   |   3 +-
 .../main/res/layout-sw600dp/activity_settings.xml  |  37 ++
 app/src/main/res/layout/activity_settings.xml      |  33 +
 app/src/main/res/values-sw600dp/flags.xml          |  20 +
 app/src/main/res/values/dimens.xml                 |   1 -
 app/src/main/res/values/donottranslate.xml         |   2 +-
 app/src/main/res/values/flags.xml                  |  20 +
 app/src/main/res/values/strings.xml                |   2 +
 app/src/main/res/values/themes.xml                 |   2 +
 .../res/xml-v11/fragment_about_preferences.xml     |  40 --
 .../res/xml-v11/fragment_account_preferences.xml   |  19 -
 .../xml-v11/fragment_transaction_preferences.xml   |  34 --
 .../main/res/xml/fragment_about_preferences.xml    |   5 +-
 .../main/res/xml/fragment_account_preferences.xml  |  38 +-
 .../main/res/xml/fragment_backup_preferences.xml   |   6 +-
 .../res/xml/fragment_transaction_preferences.xml   |  34 +-
 .../main/res/xml/preference_fragment_headers.xml   |  35 ++
 39 files changed, 931 insertions(+), 1073 deletions(-)
 delete mode 100644 app/src/main/java/org/gnucash/android/ui/settings/AppCompatPreferenceActivity.java
 create mode 100644 app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
 create mode 100644 app/src/main/java/org/gnucash/android/ui/settings/PreferenceHeadersFragment.java
 delete mode 100644 app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
 rename app/src/main/java/org/gnucash/android/ui/settings/{ => dialog}/DeleteAllAccountsConfirmationDialog.java (96%)
 rename app/src/main/java/org/gnucash/android/ui/settings/{ => dialog}/DeleteAllTransactionsConfirmationDialog.java (95%)
 rename app/src/main/java/org/gnucash/android/ui/settings/{ => dialog}/OwnCloudDialogFragment.java (98%)
 create mode 100644 app/src/main/res/layout-sw600dp/activity_settings.xml
 create mode 100644 app/src/main/res/layout/activity_settings.xml
 create mode 100644 app/src/main/res/values-sw600dp/flags.xml
 create mode 100644 app/src/main/res/values/flags.xml
 delete mode 100644 app/src/main/res/xml-v11/fragment_about_preferences.xml
 delete mode 100644 app/src/main/res/xml-v11/fragment_account_preferences.xml
 delete mode 100644 app/src/main/res/xml-v11/fragment_transaction_preferences.xml
 create mode 100644 app/src/main/res/xml/preference_fragment_headers.xml

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index d5fbe27c..4f2741c6 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -18,6 +18,7 @@
 
 import android.Manifest;
 import android.app.AlertDialog;
+import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
@@ -52,6 +53,7 @@
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.account.AccountsActivity;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.FixMethodOrder;
@@ -142,27 +144,27 @@ public void setUp() throws Exception {
 	 */
 	@Test
 	public void testOfxExport(){
-		PreferenceManager.getDefaultSharedPreferences(mAcccountsActivity)
-				.edit().putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), false)
+		SharedPreferences.Editor prefsEditor = PreferenceActivity.getBookSharedPreferences(mAcccountsActivity)
+				.edit();
+		prefsEditor.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), false)
 				.commit();
         testExport(ExportFormat.OFX);
-		PreferenceManager.getDefaultSharedPreferences(mAcccountsActivity)
-				.edit().putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), true)
+		prefsEditor.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), true)
 				.commit();
 	}
 
 	@Test
 	public void whenInSingleEntry_shouldHideXmlExportOption(){
-		PreferenceManager.getDefaultSharedPreferences(mAcccountsActivity)
-				.edit().putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), false)
+		SharedPreferences.Editor prefsEditor = PreferenceActivity.getBookSharedPreferences(mAcccountsActivity)
+				.edit();
+		prefsEditor.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), false)
 				.commit();
 
 		DrawerActions.openDrawer(R.id.drawer_layout);
 		onView(withText(R.string.nav_menu_export)).perform(click());
 		onView(withId(R.id.radio_xml_format)).check(matches(withEffectiveVisibility(ViewMatchers.Visibility.GONE)));
 
-		PreferenceManager.getDefaultSharedPreferences(mAcccountsActivity)
-				.edit().putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), true)
+		prefsEditor.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), true)
 				.commit();
 	}
 
@@ -222,13 +224,13 @@ public void testExport(ExportFormat format){
 	public void testDeleteTransactionsAfterExport(){
 		assertThat(mTransactionsDbAdapter.getRecordsCount()).isGreaterThan(0);
 
-		PreferenceManager.getDefaultSharedPreferences(getActivity()).edit()
+		PreferenceActivity.getBookSharedPreferences(getActivity()).edit()
 				.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export), true).commit();
 
 		testExport(ExportFormat.XML);
 
 		assertThat(mTransactionsDbAdapter.getRecordsCount()).isEqualTo(0);
-		PreferenceManager.getDefaultSharedPreferences(getActivity()).edit()
+		PreferenceActivity.getBookSharedPreferences(getActivity()).edit()
 				.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export), false).commit();
 	}
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index 00ef29f6..0fc59cee 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -51,6 +51,7 @@
 import org.gnucash.android.ui.report.BaseReportFragment;
 import org.gnucash.android.ui.report.piechart.PieChartFragment;
 import org.gnucash.android.ui.report.ReportsActivity;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.joda.time.LocalDateTime;
 import org.junit.After;
 import org.junit.Before;
@@ -128,7 +129,7 @@ public void setUp() throws Exception {
 
         CURRENCY = new CommoditiesDbAdapter(db).getCommodity("USD");
 
-        PreferenceManager.getDefaultSharedPreferences(mReportsActivity).edit()
+        PreferenceActivity.getBookSharedPreferences(mReportsActivity).edit()
                 .putString(mReportsActivity.getString(R.string.key_default_currency), CURRENCY.getCurrencyCode())
                 .commit();
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index ce7afd3d..18a076df 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -46,6 +46,7 @@
 import org.gnucash.android.model.TransactionType;
 import org.gnucash.android.receivers.TransactionRecorder;
 import org.gnucash.android.ui.common.UxArgument;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.junit.After;
@@ -372,7 +373,7 @@ public void testSplitEditor(){
 
 
     private void setDoubleEntryEnabled(boolean enabled){
-        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
+        SharedPreferences prefs = PreferenceActivity.getBookSharedPreferences(getActivity());
         Editor editor = prefs.edit();
         editor.putBoolean(getActivity().getString(R.string.key_use_double_entry), enabled);
         editor.commit();
@@ -387,7 +388,7 @@ public void testDefaultTransactionType(){
 	}
 
 	private void setDefaultTransactionType(TransactionType type) {
-		SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
+		SharedPreferences prefs = PreferenceActivity.getBookSharedPreferences(getActivity());
 		Editor editor = prefs.edit();
 		editor.putString(getActivity().getString(R.string.key_default_transaction_type), type.name());
 		editor.commit();
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 320bf654..18d3dead 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -83,8 +83,6 @@
             android:noHistory="true"
             android:windowSoftInputMode="stateAlwaysHidden">
         </activity>
-        <activity android:name=".ui.settings.SettingsActivity"
-            android:theme="@style/Theme.GnucashTheme" />
         <activity android:name=".ui.transaction.ScheduledActionsActivity" />
         <activity android:name=".ui.passcode.PasscodePreferenceActivity"
             android:theme="@style/Theme.GnucashTheme" />
@@ -107,6 +105,8 @@
             android:launchMode="singleTop"/>
         <activity android:name=".ui.wizard.FirstRunWizardActivity"
             android:theme="@style/Theme.GnucashTheme" />
+        <activity android:name=".ui.settings.PreferenceActivity"
+            android:theme="@style/Theme.GnucashTheme" />
         <activity android:name="com.dropbox.sync.android.DbxAuthActivity" />
         <activity
             android:name="com.dropbox.client2.android.AuthActivity"
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 2f0c9bc9..b125ec6c 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -52,6 +52,7 @@
 import org.gnucash.android.model.Money;
 import org.gnucash.android.service.SchedulerService;
 import org.gnucash.android.ui.account.AccountsActivity;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 
 import java.util.Currency;
 import java.util.Locale;
@@ -134,6 +135,8 @@ public void onCreate(){
 
         initDatabaseAdapters();
 
+        //TODO: migrate preferences from defaultShared to book
+
         setDefaultCurrencyCode(getDefaultCurrencyCode());
     }
 
@@ -231,7 +234,6 @@ public static Context getAppContext() {
      * @return {@code true} if crashlytics is enabled, {@code false} otherwise
      */
     public static boolean isCrashlyticsEnabled(){
-        final Context context = getAppContext();
         return PreferenceManager.getDefaultSharedPreferences(context).getBoolean(context.getString(R.string.key_enable_crashlytics), false);
     }
 
@@ -241,7 +243,7 @@ public static boolean isCrashlyticsEnabled(){
      * @return <code>true</code> if double entry is enabled, <code>false</code> otherwise
      */
     public static boolean isDoubleEntryEnabled(){
-        SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);
+        SharedPreferences sharedPrefs = PreferenceActivity.getBookSharedPreferences(context);
         return sharedPrefs.getBoolean(context.getString(R.string.key_use_double_entry), false);
     }
 
@@ -252,7 +254,7 @@ public static boolean isDoubleEntryEnabled(){
      * @return <code>true</code> if opening balances should be saved, <code>false</code> otherwise
      */
     public static boolean shouldSaveOpeningBalances(boolean defaultValue){
-        SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);
+        SharedPreferences sharedPrefs = PreferenceActivity.getBookSharedPreferences(context);
         return sharedPrefs.getBoolean(context.getString(R.string.key_save_opening_balances), defaultValue);
     }
 
@@ -270,7 +272,7 @@ public static String getDefaultCurrencyCode(){
         Locale locale = getDefaultLocale();
 
         String currencyCode = "USD"; //start with USD as the default
-        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
+        SharedPreferences prefs = PreferenceActivity.getBookSharedPreferences(context);
         try { //there are some strange locales out there
             currencyCode = Currency.getInstance(locale).getCurrencyCode();
         } catch (Throwable e) {
@@ -293,7 +295,7 @@ public static String getDefaultCurrencyCode(){
      * @see #getDefaultCurrencyCode()
      */
     public static void setDefaultCurrencyCode(@NonNull String currencyCode){
-        PreferenceManager.getDefaultSharedPreferences(getAppContext()).edit()
+        PreferenceActivity.getBookSharedPreferences(context).edit()
                 .putString(getAppContext().getString(R.string.key_default_currency), currencyCode)
                 .apply();
         Money.DEFAULT_CURRENCY_CODE = currencyCode;
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index 14497586..b6322d4e 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -46,13 +46,13 @@
 import com.google.android.gms.drive.DriveFolder;
 import com.google.android.gms.drive.DriveId;
 import com.google.android.gms.drive.MetadataChangeSet;
-import com.owncloud.android.lib.common.OwnCloudClientFactory;
 import com.owncloud.android.lib.common.OwnCloudClient;
+import com.owncloud.android.lib.common.OwnCloudClientFactory;
 import com.owncloud.android.lib.common.OwnCloudCredentialsFactory;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
-import com.owncloud.android.lib.resources.files.UploadRemoteFileOperation;
 import com.owncloud.android.lib.resources.files.CreateRemoteFolderOperation;
 import com.owncloud.android.lib.resources.files.FileUtils;
+import com.owncloud.android.lib.resources.files.UploadRemoteFileOperation;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
@@ -64,7 +64,7 @@
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.account.AccountsListFragment;
-import org.gnucash.android.ui.settings.SettingsActivity;
+import org.gnucash.android.ui.settings.BackupPreferenceFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 
 import java.io.File;
@@ -270,7 +270,7 @@ protected void onPostExecute(Boolean exportResult) {
 
     private void moveExportToGoogleDrive(){
         Log.i(TAG, "Moving exported file to Google Drive");
-        final GoogleApiClient googleApiClient = SettingsActivity.getGoogleApiClient(GnuCashApplication.getAppContext());
+        final GoogleApiClient googleApiClient = BackupPreferenceFragment.getGoogleApiClient(GnuCashApplication.getAppContext());
         googleApiClient.blockingConnect();
         final ResultCallback<DriveFolder.DriveFileResult> fileCallback = new
                 ResultCallback<DriveFolder.DriveFileResult>() {
@@ -330,8 +330,8 @@ public void onResult(DriveApi.DriveContentsResult result) {
 
     private void moveExportToDropbox() {
         Log.i(TAG, "Copying exported file to DropBox");
-        String dropboxAppKey = mContext.getString(R.string.dropbox_app_key, SettingsActivity.DROPBOX_APP_KEY);
-        String dropboxAppSecret = mContext.getString(R.string.dropbox_app_secret, SettingsActivity.DROPBOX_APP_SECRET);
+        String dropboxAppKey = mContext.getString(R.string.dropbox_app_key, BackupPreferenceFragment.DROPBOX_APP_KEY);
+        String dropboxAppSecret = mContext.getString(R.string.dropbox_app_secret, BackupPreferenceFragment.DROPBOX_APP_SECRET);
         DbxAccountManager mDbxAcctMgr = DbxAccountManager.getInstance(mContext.getApplicationContext(),
                 dropboxAppKey, dropboxAppSecret);
         DbxFile dbExportFile = null;
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index b1a48f45..75be0e4d 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -65,6 +65,7 @@
 import org.gnucash.android.ui.colorpicker.ColorPickerSwatch;
 import org.gnucash.android.ui.colorpicker.ColorSquare;
 import org.gnucash.android.ui.common.UxArgument;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.util.CommoditiesCursorAdapter;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
@@ -246,7 +247,7 @@ public void onCreate(Bundle savedInstanceState) {
 		setHasOptionsMenu(true);
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
-        SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
+        SharedPreferences sharedPrefs = PreferenceActivity.getBookSharedPreferences(getActivity());
         mUseDoubleEntry = sharedPrefs.getBoolean(getString(R.string.key_use_double_entry), true);
 	}
 	
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 9c79a913..77f3af42 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -46,7 +46,7 @@
 import org.gnucash.android.ui.budget.BudgetsActivity;
 import org.gnucash.android.ui.passcode.PasscodeLockActivity;
 import org.gnucash.android.ui.report.ReportsActivity;
-import org.gnucash.android.ui.settings.SettingsActivity;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.ui.transaction.ScheduledActionsActivity;
 
 import butterknife.Bind;
@@ -259,7 +259,7 @@ protected void onDrawerMenuItemClicked(int itemId) {
                 break;
 
             case R.id.nav_item_settings: //Settings activity
-                startActivity(new Intent(this, SettingsActivity.class));
+                startActivity(new Intent(this, PreferenceActivity.class));
                 break;
 
             case R.id.nav_item_help:
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 2414bd1e..5ef90f04 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -62,8 +62,8 @@
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.UxArgument;
-import org.gnucash.android.ui.settings.OwnCloudDialogFragment;
-import org.gnucash.android.ui.settings.SettingsActivity;
+import org.gnucash.android.ui.settings.BackupPreferenceFragment;
+import org.gnucash.android.ui.settings.dialog.OwnCloudDialogFragment;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.util.RecurrenceParser;
 import org.gnucash.android.ui.util.RecurrenceViewClickListener;
@@ -308,8 +308,8 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
 					case 1:
 						recurrenceOptionsView.setVisibility(View.VISIBLE);
 						mExportTarget = ExportParams.ExportTarget.DROPBOX;
-						String dropboxAppKey = getString(R.string.dropbox_app_key, SettingsActivity.DROPBOX_APP_KEY);
-						String dropboxAppSecret = getString(R.string.dropbox_app_secret, SettingsActivity.DROPBOX_APP_SECRET);
+						String dropboxAppKey = getString(R.string.dropbox_app_key, BackupPreferenceFragment.DROPBOX_APP_KEY);
+						String dropboxAppSecret = getString(R.string.dropbox_app_secret, BackupPreferenceFragment.DROPBOX_APP_SECRET);
 						DbxAccountManager mDbxAccountManager = DbxAccountManager.getInstance(getActivity().getApplicationContext(),
 								dropboxAppKey, dropboxAppSecret);
 						if (!mDbxAccountManager.hasLinkedAccount()) {
@@ -319,8 +319,8 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
 					case 2:
 						recurrenceOptionsView.setVisibility(View.VISIBLE);
 						mExportTarget = ExportParams.ExportTarget.GOOGLE_DRIVE;
-						SettingsActivity.mGoogleApiClient = SettingsActivity.getGoogleApiClient(getActivity());
-						SettingsActivity.mGoogleApiClient.connect();
+						BackupPreferenceFragment.mGoogleApiClient = BackupPreferenceFragment.getGoogleApiClient(getActivity());
+						BackupPreferenceFragment.mGoogleApiClient.connect();
 						break;
 					case 3:
 						recurrenceOptionsView.setVisibility(View.VISIBLE);
@@ -476,8 +476,8 @@ public void onRecurrenceSet(String rrule) {
 	 */
 	@Override
 	public void onActivityResult(int requestCode, int resultCode, Intent data) {
-		if (requestCode == SettingsActivity.REQUEST_RESOLVE_CONNECTION && resultCode == Activity.RESULT_OK) {
-			SettingsActivity.mGoogleApiClient.connect();
+		if (requestCode == BackupPreferenceFragment.REQUEST_RESOLVE_CONNECTION && resultCode == Activity.RESULT_OK) {
+			BackupPreferenceFragment.mGoogleApiClient.connect();
 		}
 	}
 
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/AboutPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/AboutPreferenceFragment.java
index 6194f0c3..805a44cb 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/AboutPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/AboutPreferenceFragment.java
@@ -18,12 +18,14 @@
 
 import android.annotation.TargetApi;
 import android.os.Bundle;
-import android.preference.Preference;
-import android.preference.PreferenceFragment;
 import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.preference.Preference;
+import android.support.v7.preference.PreferenceFragmentCompat;
 
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.R;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.ui.account.AccountsActivity;
 
 
@@ -32,14 +34,18 @@
  * @author Ngewi Fet <ngewif@gmail.com>
  *
  */
-@TargetApi(11)
-public class AboutPreferenceFragment extends PreferenceFragment{
-	
+public class AboutPreferenceFragment extends PreferenceFragmentCompat{
+
+	@Override
+	public void onCreatePreferences(Bundle bundle, String s) {
+		addPreferencesFromResource(R.xml.fragment_about_preferences);
+	}
+
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
-		addPreferencesFromResource(R.xml.fragment_about_preferences);
-		ActionBar actionBar = ((AppCompatPreferenceActivity) getActivity()).getSupportActionBar();
+
+		ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
 		actionBar.setHomeButtonEnabled(true);
 		actionBar.setDisplayHomeAsUpEnabled(true);
 		actionBar.setTitle(R.string.title_about_gnucash);
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
index b1215f19..3ce550bc 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
@@ -16,23 +16,26 @@
 
 package org.gnucash.android.ui.settings;
 
-import android.annotation.TargetApi;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.DialogInterface;
+import android.content.Intent;
 import android.database.Cursor;
 import android.os.Bundle;
-import android.preference.ListPreference;
-import android.preference.Preference;
-import android.preference.PreferenceFragment;
 import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.preference.ListPreference;
+import android.support.v7.preference.Preference;
+import android.support.v7.preference.PreferenceFragmentCompat;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.account.AccountsActivity;
+import org.gnucash.android.ui.settings.dialog.DeleteAllAccountsConfirmationDialog;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -43,25 +46,25 @@
  * @author Ngewi Fet <ngewi.fet@gmail.com>
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-@TargetApi(11)
-public class AccountPreferencesFragment extends PreferenceFragment {
-
-    private Activity mActivity;
+public class AccountPreferencesFragment extends PreferenceFragmentCompat implements
+        Preference.OnPreferenceChangeListener, Preference.OnPreferenceClickListener{
 
     List<CharSequence> mCurrencyEntries = new ArrayList<>();
     List<CharSequence> mCurrencyEntryValues = new ArrayList<>();
 
     @Override
+    public void onCreatePreferences(Bundle bundle, String s) {
+        addPreferencesFromResource(R.xml.fragment_account_preferences);
+    }
+
+    @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        addPreferencesFromResource(R.xml.fragment_account_preferences);
-        ActionBar actionBar = ((AppCompatPreferenceActivity) getActivity()).getSupportActionBar();
-        actionBar.setHomeButtonEnabled(true);
-        actionBar.setDisplayHomeAsUpEnabled(true);
-        actionBar.setTitle(R.string.title_account_preferences);
+        getPreferenceManager().setSharedPreferencesName(BooksDbAdapter.getInstance().getActiveBookUID());
 
-        mActivity = getActivity();
+        ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
+        actionBar.setTitle(R.string.title_account_preferences);
 
         Cursor cursor = CommoditiesDbAdapter.getInstance().fetchAllRecords(DatabaseSchema.CommodityEntry.COLUMN_MNEMONIC + " ASC");
         while(cursor.moveToNext()){
@@ -81,7 +84,7 @@ public void onResume() {
         Preference pref = findPreference(getString(R.string.key_default_currency));
         String currencyName = CommoditiesDbAdapter.getInstance().getCommodity(defaultCurrency).getFullname();
         pref.setSummary(currencyName);
-        pref.setOnPreferenceChangeListener((SettingsActivity) getActivity());
+        pref.setOnPreferenceChangeListener(this);
 
         CharSequence[] entries = new CharSequence[mCurrencyEntries.size()];
         CharSequence[] entryValues = new CharSequence[mCurrencyEntryValues.size()];
@@ -89,13 +92,13 @@ public void onResume() {
         ((ListPreference) pref).setEntryValues(mCurrencyEntryValues.toArray(entryValues));
 
         Preference preference = findPreference(getString(R.string.key_import_accounts));
-        preference.setOnPreferenceClickListener((SettingsActivity)getActivity());
+        preference.setOnPreferenceClickListener(this);
 
         preference = findPreference(getString(R.string.key_delete_all_accounts));
         preference.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
             @Override
             public boolean onPreferenceClick(Preference preference) {
-                deleteAllAccounts();
+                showDeleteAccountsDialog();
                 return true;
             }
         });
@@ -111,7 +114,7 @@ public boolean onPreferenceClick(Preference preference) {
                         .setPositiveButton(R.string.btn_create_accounts, new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialogInterface, int i) {
-                                AccountsActivity.createDefaultAccounts(Money.DEFAULT_CURRENCY_CODE, mActivity);
+                                AccountsActivity.createDefaultAccounts(Money.DEFAULT_CURRENCY_CODE, getActivity());
                             }
                         })
                         .setNegativeButton(R.string.btn_cancel, new DialogInterface.OnClickListener() {
@@ -128,9 +131,45 @@ public void onClick(DialogInterface dialogInterface, int i) {
         });
     }
 
-    public void deleteAllAccounts(){
+    @Override
+    public boolean onPreferenceClick(Preference preference) {
+        String key = preference.getKey();
+
+        if (key.equals(getString(R.string.key_import_accounts))){
+            AccountsActivity.startXmlFileChooser(getActivity());
+            return true;
+        }
+
+        return false;
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object newValue) {
+        if (preference.getKey().equals(getString(R.string.key_default_currency))){
+            GnuCashApplication.setDefaultCurrencyCode(newValue.toString());
+            String fullname = CommoditiesDbAdapter.getInstance().getCommodity(newValue.toString()).getFullname();
+            preference.setSummary(fullname);
+            return true;
+        }
+        return false;
+    }
+
+    /**
+     * Show the dialog for deleting accounts
+     */
+    public void showDeleteAccountsDialog(){
         DeleteAllAccountsConfirmationDialog deleteConfirmationDialog = DeleteAllAccountsConfirmationDialog.newInstance();
-        deleteConfirmationDialog.show(getFragmentManager(), "account_settings");
+        deleteConfirmationDialog.show(getActivity().getSupportFragmentManager(), "account_settings");
+    }
 
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        switch (requestCode){
+            case AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE:
+                if (resultCode == Activity.RESULT_OK && data != null) {
+                    AccountsActivity.importXmlFileFromIntent(getActivity(), data, null);
+                }
+                break;
+        }
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/AppCompatPreferenceActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/AppCompatPreferenceActivity.java
deleted file mode 100644
index c0cea92c..00000000
--- a/app/src/main/java/org/gnucash/android/ui/settings/AppCompatPreferenceActivity.java
+++ /dev/null
@@ -1,128 +0,0 @@
-/*
- * Copyright (C) 2014 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gnucash.android.ui.settings;
-
-import android.content.res.Configuration;
-import android.os.Bundle;
-import android.preference.PreferenceActivity;
-import android.support.annotation.LayoutRes;
-import android.support.annotation.Nullable;
-import android.support.v7.app.ActionBar;
-import android.support.v7.app.AppCompatDelegate;
-import android.support.v7.widget.Toolbar;
-import android.view.MenuInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-/**
- * A {@link android.preference.PreferenceActivity} which implements and proxies the necessary calls
- * to be used with AppCompat.
- *
- * This technique can be used with an {@link android.app.Activity} class, not just
- * {@link android.preference.PreferenceActivity}.
- */
-public abstract class AppCompatPreferenceActivity extends PreferenceActivity {
-
-    private AppCompatDelegate mDelegate;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        getDelegate().installViewFactory();
-        getDelegate().onCreate(savedInstanceState);
-        super.onCreate(savedInstanceState);
-    }
-
-    @Override
-    protected void onPostCreate(Bundle savedInstanceState) {
-        super.onPostCreate(savedInstanceState);
-        getDelegate().onPostCreate(savedInstanceState);
-    }
-
-    public ActionBar getSupportActionBar() {
-        return getDelegate().getSupportActionBar();
-    }
-
-    public void setSupportActionBar(@Nullable Toolbar toolbar) {
-        getDelegate().setSupportActionBar(toolbar);
-    }
-
-    @Override
-    public MenuInflater getMenuInflater() {
-        return getDelegate().getMenuInflater();
-    }
-
-    @Override
-    public void setContentView(@LayoutRes int layoutResID) {
-        getDelegate().setContentView(layoutResID);
-    }
-
-    @Override
-    public void setContentView(View view) {
-        getDelegate().setContentView(view);
-    }
-
-    @Override
-    public void setContentView(View view, ViewGroup.LayoutParams params) {
-        getDelegate().setContentView(view, params);
-    }
-
-    @Override
-    public void addContentView(View view, ViewGroup.LayoutParams params) {
-        getDelegate().addContentView(view, params);
-    }
-
-    @Override
-    protected void onPostResume() {
-        super.onPostResume();
-        getDelegate().onPostResume();
-    }
-
-    @Override
-    protected void onTitleChanged(CharSequence title, int color) {
-        super.onTitleChanged(title, color);
-        getDelegate().setTitle(title);
-    }
-
-    @Override
-    public void onConfigurationChanged(Configuration newConfig) {
-        super.onConfigurationChanged(newConfig);
-        getDelegate().onConfigurationChanged(newConfig);
-    }
-
-    @Override
-    protected void onStop() {
-        super.onStop();
-        getDelegate().onStop();
-    }
-
-    @Override
-    protected void onDestroy() {
-        super.onDestroy();
-        getDelegate().onDestroy();
-    }
-
-    public void invalidateOptionsMenu() {
-        getDelegate().invalidateOptionsMenu();
-    }
-
-    private AppCompatDelegate getDelegate() {
-        if (mDelegate == null) {
-            mDelegate = AppCompatDelegate.create(this, null);
-        }
-        return mDelegate;
-    }
-}
\ No newline at end of file
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
index 3470ca91..2c2e1649 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
@@ -16,17 +16,49 @@
 
 package org.gnucash.android.ui.settings;
 
-import android.annotation.TargetApi;
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.IntentSender;
 import android.content.SharedPreferences;
+import android.net.Uri;
 import android.os.Bundle;
-import android.preference.Preference;
-import android.preference.Preference.OnPreferenceChangeListener;
-import android.preference.PreferenceFragment;
-import android.preference.PreferenceManager;
 import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.preference.CheckBoxPreference;
+import android.support.v7.preference.Preference;
+import android.support.v7.preference.PreferenceFragmentCompat;
+import android.support.v7.preference.PreferenceManager;
+import android.util.Log;
+import android.widget.ArrayAdapter;
+import android.widget.Toast;
+
+import com.dropbox.sync.android.DbxAccountManager;
+import com.google.android.gms.common.ConnectionResult;
+import com.google.android.gms.common.GooglePlayServicesUtil;
+import com.google.android.gms.common.api.GoogleApiClient;
+import com.google.android.gms.common.api.ResultCallback;
+import com.google.android.gms.drive.Drive;
+import com.google.android.gms.drive.DriveFolder;
+import com.google.android.gms.drive.MetadataChangeSet;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.export.Exporter;
+import org.gnucash.android.export.xml.GncXmlExporter;
+import org.gnucash.android.importer.ImportAsyncTask;
+import org.gnucash.android.ui.settings.dialog.OwnCloudDialogFragment;
+
+import java.io.File;
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.Date;
+import java.util.List;
 
 
 /**
@@ -34,18 +66,53 @@
  * @author Ngewi Fet <ngewif@gmail.com>
  *
  */
-@TargetApi(11)
-public class BackupPreferenceFragment extends PreferenceFragment implements OnPreferenceChangeListener{
-	
+public class BackupPreferenceFragment extends PreferenceFragmentCompat implements
+		Preference.OnPreferenceClickListener, Preference.OnPreferenceChangeListener {
+
+	/**
+	 * Collects references to the UI elements and binds click listeners
+	 */
+	private static final int REQUEST_LINK_TO_DBX = 0x11;
+	public static final int REQUEST_RESOLVE_CONNECTION = 0x12;
+
+	/**
+	 * Testing app key for DropBox API
+	 */
+	final static public String DROPBOX_APP_KEY      = "dhjh8ke9wf05948";
+
+	/**
+	 * Testing app secret for DropBox API
+	 */
+	final static public String DROPBOX_APP_SECRET   = "h2t9fphj3nr4wkw";
+	public static final String LOG_TAG = "BackupPrefFragment";
+
+	private DbxAccountManager mDbxAccountManager;
+	/**
+	 * Client for Google Drive Sync
+	 */
+	public static GoogleApiClient mGoogleApiClient;
+
+
+	@Override
+	public void onCreatePreferences(Bundle bundle, String s) {
+		addPreferencesFromResource(R.xml.fragment_backup_preferences);
+	}
+
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
-		
-		addPreferencesFromResource(R.xml.fragment_backup_preferences);
-		ActionBar actionBar = ((AppCompatPreferenceActivity) getActivity()).getSupportActionBar();
+
+		ActionBar actionBar = ((AppCompatActivity)getActivity()).getSupportActionBar();
 		actionBar.setHomeButtonEnabled(true);
 		actionBar.setDisplayHomeAsUpEnabled(true);
 		actionBar.setTitle(R.string.title_backup_prefs);
+
+		String dropboxAppKey = getString(R.string.dropbox_app_key, DROPBOX_APP_KEY);
+		String dropboxAppSecret = getString(R.string.dropbox_app_secret, DROPBOX_APP_SECRET);
+		mDbxAccountManager = DbxAccountManager.getInstance(getActivity().getApplicationContext(),
+				dropboxAppKey, dropboxAppSecret);
+
+		mGoogleApiClient = getGoogleApiClient(getActivity());
 		
 	}	
 	
@@ -71,25 +138,58 @@ public void onResume() {
         pref.setOnPreferenceChangeListener(this);
 
 		pref = findPreference(getString(R.string.key_restore_backup));
-		pref.setOnPreferenceClickListener((SettingsActivity)getActivity());
+		pref.setOnPreferenceClickListener(this);
 
 		pref = findPreference(getString(R.string.key_create_backup));
-		pref.setOnPreferenceClickListener((SettingsActivity)getActivity());
+		pref.setOnPreferenceClickListener(this);
 
 		pref = findPreference(getString(R.string.key_dropbox_sync));
-		pref.setOnPreferenceClickListener((SettingsActivity)getActivity());
-		((SettingsActivity)getActivity()).toggleDropboxPreference(pref);
+		pref.setOnPreferenceClickListener(this);
+		toggleDropboxPreference(pref);
 
 		pref = findPreference(getString(R.string.key_google_drive_sync));
-		pref.setOnPreferenceClickListener((SettingsActivity) getActivity());
-		((SettingsActivity)getActivity()).toggleGoogleDrivePreference(pref);
+		pref.setOnPreferenceClickListener(this);
+		toggleGoogleDrivePreference(pref);
 
 		pref = findPreference(getString(R.string.key_owncloud_sync));
-		pref.setOnPreferenceClickListener((SettingsActivity)getActivity());
-		((SettingsActivity)getActivity()).toggleOwnCloudPreference(pref);
+		pref.setOnPreferenceClickListener(this);
+		toggleOwnCloudPreference(pref);
 	}
 
-    /**
+	@Override
+	public boolean onPreferenceClick(Preference preference) {
+		String key = preference.getKey();
+
+		if (key.equals(getString(R.string.key_restore_backup))){
+			restoreBackup();
+		}
+
+
+		if (key.equals(getString(R.string.key_dropbox_sync))){
+			toggleDropboxSync();
+			toggleDropboxPreference(preference);
+		}
+
+		if (key.equals(getString(R.string.key_google_drive_sync))){
+			toggleGoogleDriveSync();
+			toggleGoogleDrivePreference(preference);
+		}
+
+		if (key.equals(getString(R.string.key_owncloud_sync))){
+			toggleOwnCloudSync(preference);
+			toggleOwnCloudPreference(preference);
+		}
+
+		if (key.equals(getString(R.string.key_create_backup))){
+			boolean result = GncXmlExporter.createBackup();
+			int msg = result ? R.string.toast_backup_successful : R.string.toast_backup_failed;
+			Toast.makeText(getActivity(), msg, Toast.LENGTH_SHORT).show();
+		}
+
+		return false;
+	}
+
+	/**
      * Listens for changes to the preference and sets the preference summary to the new value
      * @param preference Preference which has been changed
      * @param newValue New value for the changed preference
@@ -118,4 +218,203 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
 		return true;
 	}
 
+
+
+	/**
+	 * Toggles the checkbox of the DropBox Sync preference if a DropBox account is linked
+	 * @param pref DropBox Sync preference
+	 */
+	public void toggleDropboxPreference(Preference pref) {
+		((CheckBoxPreference)pref).setChecked(mDbxAccountManager.hasLinkedAccount());
+	}
+
+	/**
+	 * Toggles the checkbox of the ownCloud Sync preference if an ownCloud account is linked
+	 * @param pref ownCloud Sync preference
+	 */
+	public void toggleOwnCloudPreference(Preference pref) {
+		SharedPreferences mPrefs = getActivity().getSharedPreferences(getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
+		((CheckBoxPreference)pref).setChecked(mPrefs.getBoolean(getString(R.string.owncloud_sync), false));
+	}
+
+	/**
+	 * Toggles the checkbox of the GoogleDrive Sync preference if a Google Drive account is linked
+	 * @param pref Google Drive Sync preference
+	 */
+	public void toggleGoogleDrivePreference(Preference pref){
+		SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
+		String appFolderId = sharedPreferences.getString(getString(R.string.key_google_drive_app_folder_id),null);
+		((CheckBoxPreference)pref).setChecked(appFolderId != null);
+	}
+
+
+	/**
+	 * Toggles the authorization state of a DropBox account.
+	 * If a link exists, it is removed else DropBox authorization is started
+	 */
+	private void toggleDropboxSync() {
+		if (mDbxAccountManager.hasLinkedAccount()){
+			mDbxAccountManager.unlink();
+		} else {
+			mDbxAccountManager.startLink(getActivity(), REQUEST_LINK_TO_DBX);
+		}
+	}
+
+	/**
+	 * Toggles synchronization with Google Drive on or off
+	 */
+	private void toggleGoogleDriveSync(){
+		SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
+		final String appFolderId = sharedPreferences.getString(getString(R.string.key_google_drive_app_folder_id), null);
+		if (appFolderId != null){
+			sharedPreferences.edit().remove(getString(R.string.key_google_drive_app_folder_id)).commit(); //commit (not apply) because we need it to be saved *now*
+			mGoogleApiClient.disconnect();
+		} else {
+			mGoogleApiClient.connect();
+		}
+	}
+
+	/**
+	 * Toggles synchronization with ownCloud on or off
+	 */
+	private void toggleOwnCloudSync(Preference pref){
+		SharedPreferences mPrefs = getActivity().getSharedPreferences(getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
+
+		if (mPrefs.getBoolean(getString(R.string.owncloud_sync), false))
+			mPrefs.edit().putBoolean(getString(R.string.owncloud_sync), false).apply();
+		else {
+			OwnCloudDialogFragment ocDialog = OwnCloudDialogFragment.newInstance(pref);
+            ocDialog.show(getActivity().getSupportFragmentManager(), "owncloud_dialog");
+		}
+	}
+
+
+	public static GoogleApiClient getGoogleApiClient(final Context context) {
+		return new GoogleApiClient.Builder(context)
+				.addApi(Drive.API)
+				.addScope(Drive.SCOPE_APPFOLDER)
+				.addScope(Drive.SCOPE_FILE)
+				.addConnectionCallbacks(new GoogleApiClient.ConnectionCallbacks() {
+					@Override
+					public void onConnected(Bundle bundle) {
+						SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
+						String appFolderId = sharedPreferences.getString(context.getString(R.string.key_google_drive_app_folder_id), null);
+						if (appFolderId == null) {
+							MetadataChangeSet changeSet = new MetadataChangeSet.Builder()
+									.setTitle(context.getString(R.string.app_name)).build();
+							Drive.DriveApi.getRootFolder(mGoogleApiClient).createFolder(
+									mGoogleApiClient, changeSet).setResultCallback(new ResultCallback<DriveFolder.DriveFolderResult>() {
+								@Override
+								public void onResult(DriveFolder.DriveFolderResult result) {
+									if (!result.getStatus().isSuccess()) {
+										Log.e(LOG_TAG, "Error creating the application folder");
+										return;
+									}
+
+									String folderId = result.getDriveFolder().getDriveId().toString();
+									PreferenceManager.getDefaultSharedPreferences(context)
+											.edit().putString(context.getString(R.string.key_google_drive_app_folder_id),
+											folderId).commit(); //commit because we need it to be saved *now*
+								}
+							});
+
+						}
+						Toast.makeText(context, "Connected to Google Drive", Toast.LENGTH_SHORT).show();
+					}
+
+					@Override
+					public void onConnectionSuspended(int i) {
+						Toast.makeText(context, "Connection to Google Drive suspended!", Toast.LENGTH_LONG).show();
+					}
+				})
+				.addOnConnectionFailedListener(new GoogleApiClient.OnConnectionFailedListener() {
+					@Override
+					public void onConnectionFailed(ConnectionResult connectionResult) {
+						Log.e(PreferenceActivity.class.getName(), "Connection to Google Drive failed");
+						if (connectionResult.hasResolution() && context instanceof Activity) {
+							try {
+								Log.e(BackupPreferenceFragment.class.getName(), "Trying resolution of Google API connection failure");
+								connectionResult.startResolutionForResult((Activity) context, REQUEST_RESOLVE_CONNECTION);
+							} catch (IntentSender.SendIntentException e) {
+								Log.e(BackupPreferenceFragment.class.getName(), e.getMessage());
+								Toast.makeText(context, "Unable to link to Google Drive", Toast.LENGTH_LONG).show();
+							}
+						} else {
+							if (context instanceof Activity)
+								GooglePlayServicesUtil.getErrorDialog(connectionResult.getErrorCode(), (Activity) context, 0).show();
+						}
+					}
+				})
+				.build();
+	}
+
+	/**
+	 * Opens a dialog for a user to select a backup to restore and then restores the backup
+	 */
+	private void restoreBackup() {
+		Log.i("Settings", "Opening GnuCash XML backups for restore");
+		File[] backupFiles = new File(Exporter.BACKUP_FOLDER_PATH).listFiles();
+		if (backupFiles == null){
+			Toast.makeText(getActivity(), R.string.toast_backup_folder_not_found, Toast.LENGTH_LONG).show();
+			new File(Exporter.BACKUP_FOLDER_PATH).mkdirs();
+			return;
+		}
+
+		Arrays.sort(backupFiles);
+		List<File> backupFilesList = Arrays.asList(backupFiles);
+		Collections.reverse(backupFilesList);
+		final File[] sortedBackupFiles = (File[]) backupFilesList.toArray();
+
+		final ArrayAdapter<String> arrayAdapter = new ArrayAdapter<>(getActivity(), android.R.layout.select_dialog_singlechoice);
+		final DateFormat dateFormatter = SimpleDateFormat.getDateTimeInstance();
+		for (File backupFile : sortedBackupFiles) {
+			long time = Exporter.getExportTime(backupFile.getName());
+			if (time > 0)
+				arrayAdapter.add(dateFormatter.format(new Date(time)));
+			else //if no timestamp was found in the filename, just use the name
+				arrayAdapter.add(backupFile.getName());
+		}
+
+		AlertDialog.Builder restoreDialogBuilder =  new AlertDialog.Builder(getActivity());
+		restoreDialogBuilder.setTitle(R.string.title_select_backup_to_restore);
+		restoreDialogBuilder.setNegativeButton(R.string.alert_dialog_cancel,
+				new DialogInterface.OnClickListener() {
+					@Override
+					public void onClick(DialogInterface dialog, int which) {
+						dialog.dismiss();
+					}
+				});
+		restoreDialogBuilder.setAdapter(arrayAdapter, new DialogInterface.OnClickListener() {
+			@Override
+			public void onClick(DialogInterface dialog, int which) {
+				File backupFile = sortedBackupFiles[which];
+				new ImportAsyncTask(getActivity()).execute(Uri.fromFile(backupFile));
+			}
+		});
+
+		restoreDialogBuilder.create().show();
+	}
+
+	@Override
+	public void onActivityResult(int requestCode, int resultCode, Intent data) {
+		switch (requestCode){
+
+			case REQUEST_LINK_TO_DBX:
+				Preference preference = findPreference(getString(R.string.key_dropbox_sync));
+				if (preference == null) //if we are in a preference header fragment, this may return null
+					break;
+				toggleDropboxPreference(preference);
+				break;
+
+			case REQUEST_RESOLVE_CONNECTION:
+				if (resultCode == Activity.RESULT_OK) {
+					mGoogleApiClient.connect();
+					Preference pref = findPreference(getString(R.string.key_dropbox_sync));
+					if (pref == null) //if we are in a preference header fragment, this may return null
+						break;
+					toggleDropboxPreference(pref);
+				}
+				break;
+		}
+	}
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/GeneralPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/GeneralPreferenceFragment.java
index 18f8a901..effd9aba 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/GeneralPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/GeneralPreferenceFragment.java
@@ -21,16 +21,17 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.preference.CheckBoxPreference;
-import android.preference.Preference;
-import android.preference.Preference.OnPreferenceChangeListener;
-import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
 import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.preference.CheckBoxPreference;
+import android.support.v7.preference.Preference;
+import android.support.v7.preference.PreferenceFragmentCompat;
 import android.widget.Toast;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.passcode.PasscodeLockScreenActivity;
 import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
@@ -39,8 +40,8 @@
  * Fragment for general preferences. Currently caters to the passcode and reporting preferences
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-@TargetApi(11)
-public class GeneralPreferenceFragment extends PreferenceFragment implements OnPreferenceChangeListener{
+public class GeneralPreferenceFragment extends PreferenceFragmentCompat implements
+        android.support.v7.preference.Preference.OnPreferenceChangeListener, Preference.OnPreferenceClickListener {
 
     /**
      * Request code for retrieving passcode to store
@@ -59,11 +60,15 @@
     private CheckBoxPreference mCheckBoxPreference;
 
     @Override
+    public void onCreatePreferences(Bundle bundle, String s) {
+        addPreferencesFromResource(R.xml.fragment_general_preferences);
+    }
+
+    @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        addPreferencesFromResource(R.xml.fragment_general_preferences);
 
-        ActionBar actionBar = ((AppCompatPreferenceActivity) getActivity()).getSupportActionBar();
+        ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
         actionBar.setHomeButtonEnabled(true);
         actionBar.setDisplayHomeAsUpEnabled(true);
         actionBar.setTitle(R.string.title_general_prefs);
@@ -73,14 +78,13 @@ public void onCreate(Bundle savedInstanceState) {
     public void onResume() {
         super.onResume();
 
-        mEditor = PreferenceManager.getDefaultSharedPreferences(getActivity().getApplicationContext()).edit();
         final Intent intent = new Intent(getActivity(), PasscodePreferenceActivity.class);
 
         mCheckBoxPreference = (CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode));
         mCheckBoxPreference.setTitle(mCheckBoxPreference.isChecked()
                 ? getString(R.string.title_passcode_enabled)
                 : getString(R.string.title_passcode_disabled));
-        mCheckBoxPreference.setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
+        mCheckBoxPreference.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
             @Override
             public boolean onPreferenceChange(Preference preference, Object newValue) {
                 if ((Boolean) newValue) {
@@ -93,20 +97,37 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                 return true;
             }
         });
-        findPreference(getString(R.string.key_change_passcode))
-                .setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
-                    @Override
-                    public boolean onPreferenceClick(Preference preference) {
-                        startActivityForResult(intent, REQUEST_CHANGE_PASSCODE);
-                        return true;
-                    }
-                });
+        findPreference(getString(R.string.key_change_passcode)).setOnPreferenceClickListener(this);
+    }
+
+    @Override
+    public boolean onPreferenceClick(Preference preference) {
+        String key = preference.getKey();
+        if (key.equals(getString(R.string.key_change_passcode))) {
+            startActivityForResult(
+                    new Intent(getActivity(), PasscodePreferenceActivity.class),
+                    REQUEST_CHANGE_PASSCODE
+            );
+            return true;
+        }
+        return false;
     }
 
     @Override
     public boolean onPreferenceChange(Preference preference, Object newValue) {
+        if (preference.getKey().equals(getString(R.string.key_enable_passcode))) {
+            if ((Boolean) newValue) {
+                startActivityForResult(new Intent(getActivity(), PasscodePreferenceActivity.class),
+                        GeneralPreferenceFragment.PASSCODE_REQUEST_CODE);
+            } else {
+                Intent passIntent = new Intent(getActivity(), PasscodeLockScreenActivity.class);
+                passIntent.putExtra(UxArgument.DISABLE_PASSCODE, UxArgument.DISABLE_PASSCODE);
+                startActivityForResult(passIntent, GeneralPreferenceFragment.REQUEST_DISABLE_PASSCODE);
+            }
+        }
+
         if (preference.getKey().equals(getString(R.string.key_use_account_color))) {
-            PreferenceManager.getDefaultSharedPreferences(getActivity())
+            getPreferenceManager().getSharedPreferences()
                     .edit()
                     .putBoolean(getString(R.string.key_use_account_color), Boolean.valueOf(newValue.toString()))
                     .commit();
@@ -119,7 +140,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
 
         if (mEditor == null){
-            mEditor = PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext()).edit();
+            mEditor = getPreferenceManager().getSharedPreferences().edit();
         }
 
         switch (requestCode) {
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
new file mode 100644
index 00000000..0379bfc0
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
@@ -0,0 +1,160 @@
+/*
+ * Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.settings;
+
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.os.Build;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v4.widget.SlidingPaneLayout;
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.preference.Preference;
+import android.support.v7.preference.PreferenceFragmentCompat;
+import android.support.v7.preference.PreferenceManager;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.FrameLayout;
+import android.widget.Toast;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.ui.passcode.PasscodeLockActivity;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
+/**
+ * Activity for unified preferences
+ */
+public class PreferenceActivity extends PasscodeLockActivity implements
+        PreferenceFragmentCompat.OnPreferenceStartFragmentCallback{
+
+    @Bind(R.id.slidingpane_layout) SlidingPaneLayout mSlidingPaneLayout;
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_settings);
+
+        ButterKnife.bind(this);
+
+        mSlidingPaneLayout.setPanelSlideListener(new SlidingPaneLayout.PanelSlideListener() {
+            @Override
+            public void onPanelSlide(View panel, float slideOffset) {
+                //nothing to see here, move along
+            }
+
+            @Override
+            public void onPanelOpened(View panel) {
+                ActionBar actionBar = getSupportActionBar();
+                assert actionBar != null;
+                actionBar.setTitle(R.string.title_settings);
+            }
+
+            @Override
+            public void onPanelClosed(View panel) {
+                //nothing to see here, move along
+            }
+        });
+
+        mSlidingPaneLayout.openPane();
+        loadFragment(new GeneralPreferenceFragment());
+
+        ActionBar actionBar = getSupportActionBar();
+        assert actionBar != null;
+        actionBar.setTitle(R.string.title_settings);
+        actionBar.setHomeButtonEnabled(true);
+        actionBar.setDisplayHomeAsUpEnabled(true);
+    }
+
+    @TargetApi(Build.VERSION_CODES.KITKAT) //for one of the exceptions caught
+    @Override
+    public boolean onPreferenceStartFragment(PreferenceFragmentCompat caller, Preference pref) {
+        String key = pref.getKey();
+        Fragment fragment = null;
+        try {
+            Class<?> clazz = Class.forName(pref.getFragment());
+            fragment = (Fragment) clazz.newInstance();
+        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {
+            e.printStackTrace();
+            //if we do not have a matching class, do nothing
+            return false;
+        }
+        loadFragment(fragment);
+        mSlidingPaneLayout.closePane();
+        return false;
+    }
+
+    /**
+     * Load the provided fragment into the right pane, replacing the previous one
+     * @param fragment BaseReportFragment instance
+     */
+    private void loadFragment(Fragment fragment) {
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction = fragmentManager
+                .beginTransaction();
+
+        fragmentTransaction.replace(R.id.fragment_container, fragment);
+        fragmentTransaction.commit();
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case android.R.id.home:
+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
+                    android.app.FragmentManager fm = getFragmentManager();
+                    if (fm.getBackStackEntryCount() > 0) {
+                        fm.popBackStack();
+                    } else {
+                        finish();
+                    }
+                } else {
+                    finish();
+                }
+                return true;
+
+            default:
+                return false;
+        }
+    }
+
+    /**
+     * Returns the shared preferences file for the currently active book.
+     * Should be used instead of {@link PreferenceManager#getDefaultSharedPreferences(Context)}
+     * @param context Application context
+     * @return Shared preferences file
+     */
+    public static SharedPreferences getBookSharedPreferences(Context context){
+        //// TODO: 21.12.2015 optimize the getActiveBookUID retrieval by caching it somewhere
+        return context.getSharedPreferences(BooksDbAdapter.getInstance().getActiveBookUID(), Context.MODE_PRIVATE);
+    }
+
+    @Override
+    public void onBackPressed() {
+        if (mSlidingPaneLayout.isOpen())
+            super.onBackPressed();
+        else
+            mSlidingPaneLayout.openPane();
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/PreferenceHeadersFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceHeadersFragment.java
new file mode 100644
index 00000000..c55ef98f
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceHeadersFragment.java
@@ -0,0 +1,35 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.settings;
+
+import android.os.Bundle;
+import android.support.v7.preference.PreferenceFragmentCompat;
+
+import org.gnucash.android.R;
+
+/**
+ * Fragment for displaying preference headers
+ * @author Ngewi Fet <ngewif@gmail.com>
+ */
+public class PreferenceHeadersFragment extends PreferenceFragmentCompat {
+
+    @Override
+    public void onCreatePreferences(Bundle bundle, String s) {
+        addPreferencesFromResource(R.xml.preference_fragment_headers);
+    }
+
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
deleted file mode 100644
index 8ed922bd..00000000
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ /dev/null
@@ -1,680 +0,0 @@
-/*
- * Copyright (c) 2012 - 2015 Ngewi Fet <ngewif@gmail.com>
- * Copyright (c) 2014 - 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
- * Copyright (c) 2014 Yongxin Wang <fefe.wyx@gmail.com>
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gnucash.android.ui.settings;
-
-import android.annotation.TargetApi;
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.content.IntentSender;
-import android.content.SharedPreferences;
-import android.database.Cursor;
-import android.net.Uri;
-import android.os.Build;
-import android.os.Bundle;
-import android.preference.CheckBoxPreference;
-import android.preference.ListPreference;
-import android.preference.Preference;
-import android.preference.Preference.OnPreferenceChangeListener;
-import android.preference.PreferenceManager;
-import android.support.v7.app.ActionBar;
-import android.util.Log;
-import android.view.MenuItem;
-import android.widget.ArrayAdapter;
-import android.widget.Toast;
-
-import com.dropbox.sync.android.DbxAccountManager;
-import com.google.android.gms.common.ConnectionResult;
-import com.google.android.gms.common.GooglePlayServicesUtil;
-import com.google.android.gms.common.api.GoogleApiClient;
-import com.google.android.gms.common.api.ResultCallback;
-import com.google.android.gms.drive.Drive;
-import com.google.android.gms.drive.DriveFolder;
-import com.google.android.gms.drive.MetadataChangeSet;
-
-import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
-import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
-import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.adapter.TransactionsDbAdapter;
-import org.gnucash.android.export.Exporter;
-import org.gnucash.android.export.xml.GncXmlExporter;
-import org.gnucash.android.importer.ImportAsyncTask;
-import org.gnucash.android.model.Transaction;
-import org.gnucash.android.ui.account.AccountsActivity;
-import org.gnucash.android.ui.common.UxArgument;
-import org.gnucash.android.ui.passcode.PasscodeLockScreenActivity;
-import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
-
-import java.io.File;
-import java.text.DateFormat;
-import java.text.SimpleDateFormat;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.Currency;
-import java.util.Date;
-import java.util.List;
-import java.util.Timer;
-import java.util.TimerTask;
-
-/**
- * Activity for displaying settings and information about the application
- * @author Ngewi Fet <ngewif@gmail.com>
- * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
- * @author Yongxin Wang <fefe.wyx@gmail.com>
- */
-public class SettingsActivity extends AppCompatPreferenceActivity
-        implements OnPreferenceChangeListener, Preference.OnPreferenceClickListener{
-
-    private static final String LOG_TAG = "SettingsActivity";
-
-    /**
-     * Allowed delay between two consecutive taps of a setting for it to be considered a double tap
-     * Used on Android v2.3.3 or lower devices where dialogs cannot be instantiated easily in settings
-     */
-    private static final int DOUBLE_TAP_DELAY = 2000;
-
-    /**
-     * Testing app key for DropBox API
-     */
-    final static public String DROPBOX_APP_KEY      = "dhjh8ke9wf05948";
-
-    /**
-     * Testing app secret for DropBox API
-     */
-    final static public String DROPBOX_APP_SECRET   = "h2t9fphj3nr4wkw";
-
-    /**
-     * Collects references to the UI elements and binds click listeners
-     */
-    private static final int REQUEST_LINK_TO_DBX = 0x11;
-    public static final int REQUEST_RESOLVE_CONNECTION = 0x12;
-
-    /**
-     * Counts the number of times the preference for deleting all accounts has been clicked.
-     * It is reset every time the SettingsActivity is resumed.
-     * Only useful on devices with API level < 11
-     */
-    private int mDeleteAccountsClickCount;
-
-    /**
-     * Counts the number of times the preference for deleting all transactions has been clicked.
-     * It is reset every time the SettingsActivity is resumed.
-     * Only useful on devices with API level < 11
-     */
-    private int mDeleteTransactionsClickCount;
-    private DbxAccountManager mDbxAccountManager;
-    /**
-     * Client for Google Drive Sync
-     */
-    public static GoogleApiClient mGoogleApiClient;
-
-
-    /**
-	 * Constructs the headers to display in the header list when the Settings activity is first opened
-	 * Only available on Honeycomb and above
-	 */
-    @TargetApi(11)
-	@Override
-	public void onBuildHeaders(List<Header> target) {
-		loadHeadersFromResource(R.xml.preference_headers, target);
-	}
-
-	@SuppressWarnings("deprecation")
-	@Override
-	protected void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-
-        String dropboxAppKey = getString(R.string.dropbox_app_key, DROPBOX_APP_KEY);
-        String dropboxAppSecret = getString(R.string.dropbox_app_secret, DROPBOX_APP_SECRET);
-        mDbxAccountManager = DbxAccountManager.getInstance(getApplicationContext(),
-                dropboxAppKey, dropboxAppSecret);
-
-        mGoogleApiClient = getGoogleApiClient(this);
-
-		//retrieve version from Manifest and set it
-		ActionBar actionBar = getSupportActionBar();
-		actionBar.setTitle(R.string.title_settings);
-		actionBar.setHomeButtonEnabled(true);
-		actionBar.setDisplayHomeAsUpEnabled(true);
-		
-		if (Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB){
-            addPreferencesFromResource(R.xml.fragment_general_preferences);
-            addPreferencesFromResource(R.xml.fragment_account_preferences);
-			addPreferencesFromResource(R.xml.fragment_transaction_preferences);
-            addPreferencesFromResource(R.xml.fragment_backup_preferences);
-			addPreferencesFromResource(R.xml.fragment_about_preferences);
-			setDefaultCurrencyListener();
-
-            Preference pref = findPreference(getString(R.string.key_import_accounts));
-            pref.setOnPreferenceClickListener(this);
-
-            pref = findPreference(getString(R.string.key_restore_backup));
-            pref.setOnPreferenceClickListener(this);
-
-            pref = findPreference(getString(R.string.key_use_double_entry));
-            pref.setOnPreferenceChangeListener(this);
-
-            pref = findPreference(getString(R.string.key_delete_all_transactions));
-            pref.setOnPreferenceClickListener(this);
-
-            pref = findPreference(getString(R.string.key_delete_all_accounts));
-            pref.setOnPreferenceClickListener(this);
-
-            pref = findPreference(getString(R.string.key_about_gnucash));
-            pref.setOnPreferenceClickListener(this);
-
-            pref = findPreference(getString(R.string.key_change_passcode));
-            pref.setOnPreferenceClickListener(this);
-
-            pref = findPreference(getString(R.string.key_dropbox_sync));
-            toggleDropboxPreference(pref);
-            pref.setOnPreferenceClickListener(this);
-
-            pref = findPreference(getString(R.string.key_google_drive_sync));
-            pref.setOnPreferenceClickListener(this);
-            toggleGoogleDrivePreference(pref);
-
-            pref = findPreference(getString(R.string.key_owncloud_sync));
-            pref.setOnPreferenceClickListener(this);
-            toggleOwnCloudPreference(pref);
-
-            pref = findPreference(getString(R.string.key_create_backup));
-            pref.setOnPreferenceClickListener(this);
-
-            pref = findPreference(getString(R.string.key_enable_passcode));
-            pref.setOnPreferenceChangeListener(this);
-            pref.setTitle(((CheckBoxPreference) pref).isChecked()
-                    ? getString(R.string.title_passcode_enabled)
-                    : getString(R.string.title_passcode_disabled)
-            );
-
-            pref = findPreference(getString(R.string.key_change_passcode));
-            pref.setOnPreferenceClickListener(this);
-        }
-	}
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        mDeleteAccountsClickCount = 0;
-        mDeleteTransactionsClickCount = 0;
-    }
-
-    @Override
-    protected void onPause() {
-        super.onPause();
-        GnuCashApplication.PASSCODE_SESSION_INIT_TIME = System.currentTimeMillis();
-    }
-
-    @TargetApi(11)
-    @Override
-	public boolean onOptionsItemSelected(MenuItem item) {
-		switch (item.getItemId()) {
-		case android.R.id.home:		
-			if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
-				android.app.FragmentManager fm = getFragmentManager();
-				if (fm.getBackStackEntryCount() > 0) {
-					fm.popBackStack();
-				} else {
-					finish();
-				}
-			} else {
-				finish();
-			}
-	        return true;
-
-		default:
-			return false;
-		}
-	}
-	
-	@Override
- 	public boolean onPreferenceChange(Preference preference, Object newValue) {
-		if (preference.getKey().equals(getString(R.string.key_default_currency))){
-			GnuCashApplication.setDefaultCurrencyCode(newValue.toString());
-            String fullname = CommoditiesDbAdapter.getInstance().getCommodity(newValue.toString()).getFullname();
-            preference.setSummary(fullname);
-		} else if (preference.getKey().equals(getString(R.string.key_enable_passcode))) {
-            if ((Boolean) newValue) {
-                startActivityForResult(new Intent(this, PasscodePreferenceActivity.class),
-                        GeneralPreferenceFragment.PASSCODE_REQUEST_CODE);
-            } else {
-                Intent passIntent = new Intent(this, PasscodeLockScreenActivity.class);
-                passIntent.putExtra(UxArgument.DISABLE_PASSCODE, UxArgument.DISABLE_PASSCODE);
-                startActivityForResult(passIntent, GeneralPreferenceFragment.REQUEST_DISABLE_PASSCODE);
-            }
-        } else if (preference.getKey().equals(getString(R.string.key_use_double_entry))){
-            setImbalanceAccountsHidden((Boolean) newValue);
-        }
-
-		return true;
-	}
-
-    @Override
-    protected boolean isValidFragment(String fragmentName) {
-        return BackupPreferenceFragment.class.getName().equals(fragmentName)
-                || AccountPreferencesFragment.class.getName().equals(fragmentName)
-                || GeneralPreferenceFragment.class.getName().equals(fragmentName)
-                || TransactionsPreferenceFragment.class.getName().equals(fragmentName)
-                || AboutPreferenceFragment.class.getName().equals(fragmentName);
-    }
-
-    /**
-     * Hide all imbalance accounts when double-entry mode is disabled
-     * @param useDoubleEntry flag if double entry is enabled or not
-     */
-    public void setImbalanceAccountsHidden(boolean useDoubleEntry) {
-        String isHidden = useDoubleEntry ? "0" : "1";
-        AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
-        List<Currency> currencies = accountsDbAdapter.getCurrenciesInUse();
-        for (Currency currency : currencies) {
-            String uid = accountsDbAdapter.getImbalanceAccountUID(currency);
-            if (uid != null){
-                accountsDbAdapter.updateRecord(uid, DatabaseSchema.AccountEntry.COLUMN_HIDDEN, isHidden);
-            }
-        }
-    }
-
-    /**
-     * Load the commodities from the database and set the options on the list preference
-     * Also sets this activity as a listener for preference changes
-     */
-    private void setDefaultCurrencyListener() {
-        CommoditiesDbAdapter commoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
-        List<CharSequence> currencyEntries = new ArrayList<>((int)commoditiesDbAdapter.getRecordsCount());
-        List<CharSequence> currencyEntryValues = new ArrayList<>((int)commoditiesDbAdapter.getRecordsCount());
-        Cursor cursor = commoditiesDbAdapter.fetchAllRecords(DatabaseSchema.CommodityEntry.COLUMN_MNEMONIC + " ASC");
-        while(cursor.moveToNext()){
-            String code = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.CommodityEntry.COLUMN_MNEMONIC));
-            String name = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.CommodityEntry.COLUMN_FULLNAME));
-
-            currencyEntries.add(code + " - " + name);
-            currencyEntryValues.add(code);
-        }
-        cursor.close();
-
-        CharSequence[] entries = new CharSequence[currencyEntries.size()];
-        CharSequence[] entryValues = new CharSequence[currencyEntryValues.size()];
-
-		@SuppressWarnings("deprecation")
-		Preference pref = findPreference(getString(R.string.key_default_currency));
-		pref.setSummary(GnuCashApplication.getDefaultCurrencyCode());
-		pref.setOnPreferenceChangeListener(this);
-
-        ((ListPreference) pref).setEntries(currencyEntries.toArray(entries));
-        ((ListPreference) pref).setEntryValues(currencyEntryValues.toArray(entryValues));
-	}
-
-    @Override
-    public boolean onPreferenceClick(Preference preference) {
-        String key = preference.getKey();
-
-        if (key.equals(getString(R.string.key_import_accounts))){
-            AccountsActivity.startXmlFileChooser(this);
-            return true;
-        }
-
-        if (key.equals(getString(R.string.key_restore_backup))){
-            restoreBackup();
-        }
-
-        if (key.equals(getString(R.string.key_about_gnucash))){
-            AccountsActivity.showWhatsNewDialog(this);
-            return true;
-        }
-
-        if (key.equals(getString(R.string.key_dropbox_sync))){
-            toggleDropboxSync();
-            toggleDropboxPreference(preference);
-        }
-
-        if (key.equals(getString(R.string.key_google_drive_sync))){
-            toggleGoogleDriveSync();
-            toggleGoogleDrivePreference(preference);
-        }
-
-        if (key.equals(getString(R.string.key_owncloud_sync))){
-            toggleOwnCloudSync(preference);
-            toggleOwnCloudPreference(preference);
-        }
-
-        if (key.equals(getString(R.string.key_create_backup))){
-            boolean result = GncXmlExporter.createBackup();
-            int msg = result ? R.string.toast_backup_successful : R.string.toast_backup_failed;
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-        }
-
-        //since we cannot get a support FragmentManager in the SettingsActivity pre H0NEYCOMB,
-        //we will just use 2 taps within 2 seconds as confirmation
-        if (key.equals(getString(R.string.key_delete_all_accounts))){
-            mDeleteAccountsClickCount++;
-            if (mDeleteAccountsClickCount < 2){
-                Toast.makeText(this, R.string.toast_tap_again_to_confirm_delete, Toast.LENGTH_SHORT).show();
-            } else {
-                GncXmlExporter.createBackup(); //create backup before deleting everything
-                AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
-                accountsDbAdapter.deleteAllRecords();
-                Toast.makeText(this, R.string.toast_all_accounts_deleted, Toast.LENGTH_LONG).show();
-            }
-            Timer timer = new Timer();
-            timer.schedule(new ResetCounter(), DOUBLE_TAP_DELAY);
-            return true;
-        }
-
-        if (key.equals(getString(R.string.key_delete_all_transactions))){
-            mDeleteTransactionsClickCount++;
-            if (mDeleteTransactionsClickCount < 2){
-                Toast.makeText(this, R.string.toast_tap_again_to_confirm_delete, Toast.LENGTH_SHORT).show();
-            } else {
-                GncXmlExporter.createBackup(); //create backup before deleting everything
-                List<Transaction> openingBalances = new ArrayList<>();
-                boolean preserveOpeningBalances = GnuCashApplication.shouldSaveOpeningBalances(false);
-                if (preserveOpeningBalances) {
-                    AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
-                    openingBalances = accountsDbAdapter.getAllOpeningBalanceTransactions();
-                }
-                TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
-                transactionsDbAdapter.deleteAllRecords();
-
-                if (preserveOpeningBalances) {
-                    transactionsDbAdapter.bulkAddRecords(openingBalances);
-                }
-                Toast.makeText(this, R.string.toast_all_transactions_deleted, Toast.LENGTH_LONG).show();
-            }
-            Timer timer = new Timer();
-            timer.schedule(new ResetCounter(), DOUBLE_TAP_DELAY);
-            return true;
-        }
-
-        if (key.equals(getString(R.string.key_change_passcode))){
-            startActivityForResult(new Intent(this, PasscodePreferenceActivity.class),
-                    GeneralPreferenceFragment.REQUEST_CHANGE_PASSCODE);
-            return true;
-        }
-
-        return false;
-    }
-
-    /**
-     * Toggles the authorization state of a DropBox account.
-     * If a link exists, it is removed else DropBox authorization is started
-     */
-    private void toggleDropboxSync() {
-        if (mDbxAccountManager.hasLinkedAccount()){
-            mDbxAccountManager.unlink();
-        } else {
-            mDbxAccountManager.startLink(this, REQUEST_LINK_TO_DBX);
-        }
-    }
-
-    /**
-     * Toggles synchronization with Google Drive on or off
-     */
-    private void toggleGoogleDriveSync(){
-        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);
-        final String appFolderId = sharedPreferences.getString(getString(R.string.key_google_drive_app_folder_id), null);
-        if (appFolderId != null){
-            sharedPreferences.edit().remove(getString(R.string.key_google_drive_app_folder_id)).commit(); //commit (not apply) because we need it to be saved *now*
-            mGoogleApiClient.disconnect();
-        } else {
-            mGoogleApiClient.connect();
-        }
-    }
-
-    /**
-     * Toggles synchronization with ownCloud on or off
-     */
-    @TargetApi(11)
-    private void toggleOwnCloudSync(Preference pref){
-        SharedPreferences mPrefs = getSharedPreferences(getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
-
-        if (mPrefs.getBoolean(getString(R.string.owncloud_sync), false))
-            mPrefs.edit().putBoolean(getString(R.string.owncloud_sync), false).apply();
-        else {
-            OwnCloudDialogFragment ocDialog = OwnCloudDialogFragment.newInstance(pref);
-            //// TODO: 08.12.2015 show dialog
-//            ocDialog.show(getFragmentManager(), "owncloud_dialog");
-        }
-    }
-
-    /**
-     * Toggles the checkbox of the DropBox Sync preference if a DropBox account is linked
-     * @param pref DropBox Sync preference
-     */
-    public void toggleDropboxPreference(Preference pref) {
-        ((CheckBoxPreference)pref).setChecked(mDbxAccountManager.hasLinkedAccount());
-    }
-
-    /**
-     * Toggles the checkbox of the ownCloud Sync preference if an ownCloud account is linked
-     * @param pref ownCloud Sync preference
-     */
-    public void toggleOwnCloudPreference(Preference pref) {
-        SharedPreferences mPrefs = getSharedPreferences(getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
-        ((CheckBoxPreference)pref).setChecked(mPrefs.getBoolean(getString(R.string.owncloud_sync), false));
-    }
-
-    /**
-     * Toggles the checkbox of the GoogleDrive Sync preference if a Google Drive account is linked
-     * @param pref Google Drive Sync preference
-     */
-    public void toggleGoogleDrivePreference(Preference pref){
-        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);
-        String appFolderId = sharedPreferences.getString(getString(R.string.key_google_drive_app_folder_id),null);
-        ((CheckBoxPreference)pref).setChecked(appFolderId != null);
-    }
-
-
-    public static GoogleApiClient getGoogleApiClient(final Context context) {
-        return new GoogleApiClient.Builder(context)
-                .addApi(Drive.API)
-                .addScope(Drive.SCOPE_APPFOLDER)
-                .addScope(Drive.SCOPE_FILE)
-                .addConnectionCallbacks(new GoogleApiClient.ConnectionCallbacks() {
-                    @Override
-                    public void onConnected(Bundle bundle) {
-                        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
-                        String appFolderId = sharedPreferences.getString(context.getString(R.string.key_google_drive_app_folder_id), null);
-                        if (appFolderId == null) {
-                            MetadataChangeSet changeSet = new MetadataChangeSet.Builder()
-                                    .setTitle(context.getString(R.string.app_name)).build();
-                            Drive.DriveApi.getRootFolder(mGoogleApiClient).createFolder(
-                                    mGoogleApiClient, changeSet).setResultCallback(new ResultCallback<DriveFolder.DriveFolderResult>() {
-                                @Override
-                                public void onResult(DriveFolder.DriveFolderResult result) {
-                                    if (!result.getStatus().isSuccess()) {
-                                        Log.e(LOG_TAG, "Error creating the application folder");
-                                        return;
-                                    }
-
-                                    String folderId = result.getDriveFolder().getDriveId().toString();
-                                    PreferenceManager.getDefaultSharedPreferences(context)
-                                            .edit().putString(context.getString(R.string.key_google_drive_app_folder_id),
-                                            folderId).commit(); //commit because we need it to be saved *now*
-                                }
-                            });
-
-                        }
-                        Toast.makeText(context, "Connected to Google Drive", Toast.LENGTH_SHORT).show();
-                    }
-
-                    @Override
-                    public void onConnectionSuspended(int i) {
-                        Toast.makeText(context, "Connection to Google Drive suspended!", Toast.LENGTH_LONG).show();
-                    }
-                })
-                .addOnConnectionFailedListener(new GoogleApiClient.OnConnectionFailedListener() {
-                    @Override
-                    public void onConnectionFailed(ConnectionResult connectionResult) {
-                        Log.e(SettingsActivity.class.getName(), "Connection to Google Drive failed");
-                        if (connectionResult.hasResolution() && context instanceof Activity) {
-                            try {
-                                Log.e(SettingsActivity.class.getName(), "Trying resolution of Google API connection failure");
-                                connectionResult.startResolutionForResult((Activity) context, REQUEST_RESOLVE_CONNECTION);
-                            } catch (IntentSender.SendIntentException e) {
-                                Log.e(SettingsActivity.class.getName(), e.getMessage());
-                                Toast.makeText(context, "Unable to link to Google Drive", Toast.LENGTH_LONG).show();
-                            }
-                        } else {
-                            if (context instanceof Activity)
-                                GooglePlayServicesUtil.getErrorDialog(connectionResult.getErrorCode(), (Activity) context, 0).show();
-                        }
-                    }
-                })
-                .build();
-    }
-
-    /**
-     * Resets the tap counter for preferences which need to be double-tapped
-     */
-    private class ResetCounter extends TimerTask {
-
-        @Override
-        public void run() {
-            mDeleteAccountsClickCount = 0;
-            mDeleteTransactionsClickCount = 0;
-        }
-    }
-
-    /**
-     * Opens a dialog for a user to select a backup to restore and then restores the backup
-     */
-    private void restoreBackup() {
-        Log.i("Settings", "Opening GnuCash XML backups for restore");
-        File[] backupFiles = new File(Exporter.BACKUP_FOLDER_PATH).listFiles();
-        if (backupFiles == null){
-            Toast.makeText(this, R.string.toast_backup_folder_not_found, Toast.LENGTH_LONG).show();
-            new File(Exporter.BACKUP_FOLDER_PATH).mkdirs();
-            return;
-        }
-
-        Arrays.sort(backupFiles);
-        List<File> backupFilesList = Arrays.asList(backupFiles);
-        Collections.reverse(backupFilesList);
-        final File[] sortedBackupFiles = (File[]) backupFilesList.toArray();
-
-        final ArrayAdapter<String> arrayAdapter = new ArrayAdapter<>(this, android.R.layout.select_dialog_singlechoice);
-        final DateFormat dateFormatter = SimpleDateFormat.getDateTimeInstance();
-        for (File backupFile : sortedBackupFiles) {
-            long time = Exporter.getExportTime(backupFile.getName());
-            if (time > 0)
-                arrayAdapter.add(dateFormatter.format(new Date(time)));
-            else //if no timestamp was found in the filename, just use the name
-                arrayAdapter.add(backupFile.getName());
-        }
-
-        AlertDialog.Builder restoreDialogBuilder =  new AlertDialog.Builder(this);
-        restoreDialogBuilder.setTitle(R.string.title_select_backup_to_restore);
-        restoreDialogBuilder.setNegativeButton(R.string.alert_dialog_cancel,
-                new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        dialog.dismiss();
-                    }
-                });
-        restoreDialogBuilder.setAdapter(arrayAdapter, new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                File backupFile = sortedBackupFiles[which];
-                new ImportAsyncTask(SettingsActivity.this).execute(Uri.fromFile(backupFile));
-            }
-        });
-
-        restoreDialogBuilder.create().show();
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        switch (requestCode) {
-            case AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE:
-                if (resultCode == Activity.RESULT_OK && data != null) {
-                    AccountsActivity.importXmlFileFromIntent(this, data, null);
-                }
-                break;
-            case GeneralPreferenceFragment.PASSCODE_REQUEST_CODE:
-                if (resultCode == Activity.RESULT_OK && data != null) {
-                    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
-                            .edit()
-                            .putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE))
-                            .commit();
-                    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
-                            .edit()
-                            .putBoolean(UxArgument.ENABLED_PASSCODE, true)
-                            .commit();
-                    Toast.makeText(this, R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
-                    findPreference(getString(R.string.key_enable_passcode)).setTitle(getString(R.string.title_passcode_enabled));
-                }
-                if (resultCode == Activity.RESULT_CANCELED) {
-                    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
-                            .edit()
-                            .putBoolean(UxArgument.ENABLED_PASSCODE, false)
-                            .commit();
-                    ((CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode))).setChecked(false);
-                    findPreference(getString(R.string.key_enable_passcode)).setTitle(getString(R.string.title_passcode_disabled));
-                }
-                break;
-
-            case GeneralPreferenceFragment.REQUEST_DISABLE_PASSCODE:
-                boolean flag = resultCode != Activity.RESULT_OK;
-                PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
-                        .edit()
-                        .putBoolean(UxArgument.ENABLED_PASSCODE, flag)
-                        .commit();
-                ((CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode))).setChecked(flag);
-                break;
-
-            case GeneralPreferenceFragment.REQUEST_CHANGE_PASSCODE:
-                if (resultCode == Activity.RESULT_OK && data != null) {
-                    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
-                            .edit()
-                            .putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE))
-                            .commit();
-                    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
-                            .edit()
-                            .putBoolean(UxArgument.ENABLED_PASSCODE, true)
-                            .commit();
-                    Toast.makeText(this, R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
-                    findPreference(getString(R.string.key_enable_passcode)).setTitle(getString(R.string.title_passcode_enabled));
-                }
-                break;
-
-            case REQUEST_LINK_TO_DBX:
-                Preference preference = findPreference(getString(R.string.key_dropbox_sync));
-                if (preference == null) //if we are in a preference header fragment, this may return null
-                    break;
-                toggleDropboxPreference(preference);
-                break;
-
-            case REQUEST_RESOLVE_CONNECTION:
-                if (resultCode == RESULT_OK) {
-                    mGoogleApiClient.connect();
-                    Preference pref = findPreference(getString(R.string.key_dropbox_sync));
-                    if (pref == null) //if we are in a preference header fragment, this may return null
-                        break;
-                    toggleDropboxPreference(pref);
-                }
-                break;
-        }
-    }
-}
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
index b379eeac..20bc6817 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
@@ -16,44 +16,54 @@
 
 package org.gnucash.android.ui.settings;
 
-import android.annotation.TargetApi;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.preference.Preference;
-import android.preference.Preference.OnPreferenceChangeListener;
-import android.preference.PreferenceFragment;
-import android.preference.PreferenceManager;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
+import android.support.v7.preference.Preference;
+import android.support.v7.preference.PreferenceFragmentCompat;
 
 import org.gnucash.android.R;
+import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.ui.settings.dialog.DeleteAllTransactionsConfirmationDialog;
+
+import java.util.Currency;
+import java.util.List;
 
 /**
  * Fragment for displaying transaction preferences
  * @author Ngewi Fet <ngewif@gmail.com>
  *
  */
-@TargetApi(11)
-public class TransactionsPreferenceFragment extends PreferenceFragment implements OnPreferenceChangeListener{
+public class TransactionsPreferenceFragment extends PreferenceFragmentCompat implements Preference.OnPreferenceChangeListener {
 
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
-		
-		addPreferencesFromResource(R.xml.fragment_transaction_preferences);
-		ActionBar actionBar = ((AppCompatPreferenceActivity) getActivity()).getSupportActionBar();
+
+		getPreferenceManager().setSharedPreferencesName(BooksDbAdapter.getInstance().getActiveBookUID());
+
+		ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
 		actionBar.setHomeButtonEnabled(true);
 		actionBar.setDisplayHomeAsUpEnabled(true);
 		actionBar.setTitle(R.string.title_transaction_preferences);		
 	}
-	
-	
+
+	@Override
+	public void onCreatePreferences(Bundle bundle, String s) {
+		addPreferencesFromResource(R.xml.fragment_transaction_preferences);
+	}
+
 	@Override
 	public void onResume() {
 		super.onResume();
 		
-		SharedPreferences manager = PreferenceManager.getDefaultSharedPreferences(getActivity());
-		String defaultTransactionType = manager.getString(getString(R.string.key_default_transaction_type), "DEBIT");
+		SharedPreferences sharedPreferences = getPreferenceManager().getSharedPreferences();
+		String defaultTransactionType = sharedPreferences.getString(
+				getString(R.string.key_default_transaction_type),
+				getString(R.string.label_debit));
 		Preference pref = findPreference(getString(R.string.key_default_transaction_type));		
 		setLocalizedSummary(pref, defaultTransactionType);
 		pref.setOnPreferenceChangeListener(this);
@@ -65,17 +75,16 @@ public void onResume() {
         preference.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
             @Override
             public boolean onPreferenceClick(Preference preference) {
-                deleteAllTransactions();
+                showDeleteTransactionsDialog();
                 return true;
             }
         });
 	}
 
-
 	@Override
 	public boolean onPreferenceChange(Preference preference, Object newValue) {
 		if (preference.getKey().equals(getString(R.string.key_use_double_entry))){
-            ((SettingsActivity)getActivity()).setImbalanceAccountsHidden((Boolean)newValue);
+            setImbalanceAccountsHidden((Boolean)newValue);
         } else {
             setLocalizedSummary(preference, newValue.toString());
         }
@@ -85,12 +94,28 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
     /**
      * Deletes all transactions in the system
      */
-    public void deleteAllTransactions(){
+    public void showDeleteTransactionsDialog(){
         DeleteAllTransactionsConfirmationDialog deleteTransactionsConfirmationDialog =
                 DeleteAllTransactionsConfirmationDialog.newInstance();
-        deleteTransactionsConfirmationDialog.show(getFragmentManager(), "transaction_settings");
+        deleteTransactionsConfirmationDialog.show(getActivity().getSupportFragmentManager(), "transaction_settings");
     }
 
+
+	/**
+	 * Hide all imbalance accounts when double-entry mode is disabled
+	 * @param useDoubleEntry flag if double entry is enabled or not
+	 */
+	private void setImbalanceAccountsHidden(boolean useDoubleEntry) {
+		String isHidden = useDoubleEntry ? "0" : "1";
+		AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
+		List<Currency> currencies = accountsDbAdapter.getCurrenciesInUse();
+		for (Currency currency : currencies) {
+			String uid = accountsDbAdapter.getImbalanceAccountUID(currency);
+			if (uid != null){
+				accountsDbAdapter.updateRecord(uid, DatabaseSchema.AccountEntry.COLUMN_HIDDEN, isHidden);
+			}
+		}
+	}
     /**
      * Localizes the label for DEBIT/CREDIT in the settings summary
      * @param preference Preference whose summary is to be localized
@@ -98,8 +123,7 @@ public void deleteAllTransactions(){
      */
 	private void setLocalizedSummary(Preference preference, String value){
 		String localizedLabel = value.equals("DEBIT") ? getString(R.string.label_debit) : getActivity().getString(R.string.label_credit);
-		Preference pref = findPreference(getString(R.string.key_default_transaction_type));
-		pref.setSummary(localizedLabel);
+		preference.setSummary(localizedLabel);
 	}
 	
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllAccountsConfirmationDialog.java b/app/src/main/java/org/gnucash/android/ui/settings/dialog/DeleteAllAccountsConfirmationDialog.java
similarity index 96%
rename from app/src/main/java/org/gnucash/android/ui/settings/DeleteAllAccountsConfirmationDialog.java
rename to app/src/main/java/org/gnucash/android/ui/settings/dialog/DeleteAllAccountsConfirmationDialog.java
index fb928ee8..198b5b81 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllAccountsConfirmationDialog.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/dialog/DeleteAllAccountsConfirmationDialog.java
@@ -14,15 +14,15 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.ui.settings;
+package org.gnucash.android.ui.settings.dialog;
 
 import android.annotation.TargetApi;
 import android.app.AlertDialog;
 import android.app.Dialog;
-import android.app.DialogFragment;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.os.Bundle;
+import android.support.v4.app.DialogFragment;
 import android.widget.Toast;
 
 import org.gnucash.android.R;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransactionsConfirmationDialog.java b/app/src/main/java/org/gnucash/android/ui/settings/dialog/DeleteAllTransactionsConfirmationDialog.java
similarity index 95%
rename from app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransactionsConfirmationDialog.java
rename to app/src/main/java/org/gnucash/android/ui/settings/dialog/DeleteAllTransactionsConfirmationDialog.java
index 6bb41943..6a938270 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransactionsConfirmationDialog.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/dialog/DeleteAllTransactionsConfirmationDialog.java
@@ -14,15 +14,15 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.gnucash.android.ui.settings;
+package org.gnucash.android.ui.settings.dialog;
 
-import android.annotation.TargetApi;
 import android.app.AlertDialog;
 import android.app.Dialog;
-import android.app.DialogFragment;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.v4.app.DialogFragment;
 import android.util.Log;
 import android.widget.Toast;
 
@@ -43,7 +43,6 @@
  * @author ngewif <ngewif@gmail.com>
  * @author Yongxin Wang <fefe.wyx@gmail.com>
  */
-@TargetApi(11)
 public class DeleteAllTransactionsConfirmationDialog extends DialogFragment {
 
     public static DeleteAllTransactionsConfirmationDialog newInstance() {
@@ -52,7 +51,7 @@ public static DeleteAllTransactionsConfirmationDialog newInstance() {
     }
 
     @Override
-    public Dialog onCreateDialog(Bundle savedInstanceState) {
+    @NonNull public Dialog onCreateDialog(Bundle savedInstanceState) {
         return new AlertDialog.Builder(getActivity())
                 .setIcon(android.R.drawable.ic_delete)
                 .setTitle(R.string.title_confirm_delete).setMessage(R.string.msg_delete_all_transactions_confirmation)
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/dialog/OwnCloudDialogFragment.java
similarity index 98%
rename from app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java
rename to app/src/main/java/org/gnucash/android/ui/settings/dialog/OwnCloudDialogFragment.java
index 29478f5e..26cc24b4 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/dialog/OwnCloudDialogFragment.java
@@ -1,13 +1,13 @@
-package org.gnucash.android.ui.settings;
+package org.gnucash.android.ui.settings.dialog;
 
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Handler;
-import android.preference.CheckBoxPreference;
-import android.preference.Preference;
 import android.support.v4.app.DialogFragment;
+import android.support.v7.preference.CheckBoxPreference;
+import android.support.v7.preference.Preference;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 5893e282..9723e02d 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -73,6 +73,7 @@
 import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.ui.transaction.dialog.TransferFundsDialogFragment;
 import org.gnucash.android.ui.util.RecurrenceParser;
 import org.gnucash.android.ui.util.RecurrenceViewClickListener;
@@ -290,7 +291,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		setHasOptionsMenu(true);
 
-		SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
+		SharedPreferences sharedPrefs = PreferenceActivity.getBookSharedPreferences(getActivity());
 		mUseDoubleEntry = sharedPrefs.getBoolean(getString(R.string.key_use_double_entry), false);
 		if (!mUseDoubleEntry){
 			mDoubleEntryLayout.setVisibility(View.GONE);
@@ -534,7 +535,7 @@ private void initalizeViews() {
 		mTime = mDate = Calendar.getInstance();
 
         mTransactionTypeSwitch.setAccountType(mAccountType);
-		String typePref = PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(getString(R.string.key_default_transaction_type), "DEBIT");
+		String typePref = PreferenceActivity.getBookSharedPreferences(getActivity()).getString(getString(R.string.key_default_transaction_type), "DEBIT");
         mTransactionTypeSwitch.setChecked(TransactionType.valueOf(typePref));
 
 		String code = GnuCashApplication.getDefaultCurrencyCode();
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index fe3b1882..09ac23b8 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -55,6 +55,7 @@
 import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.ui.transaction.dialog.BulkMoveDialogFragment;
 import org.gnucash.android.ui.util.CursorRecyclerAdapter;
 import org.gnucash.android.ui.common.Refreshable;
@@ -94,7 +95,7 @@ public void onCreate(Bundle savedInstanceState) {
 		Bundle args = getArguments();
 		mAccountUID = args.getString(UxArgument.SELECTED_ACCOUNT_UID);
 
-		mUseCompactView = PreferenceManager.getDefaultSharedPreferences(getActivity())
+		mUseCompactView = PreferenceActivity.getBookSharedPreferences(getActivity())
 				.getBoolean(getActivity().getString(R.string.key_use_compact_list), !GnuCashApplication.isDoubleEntryEnabled());
 		//if there was a local override of the global setting, respect it
 		if (savedInstanceState != null)
diff --git a/app/src/main/res/layout-sw600dp/activity_settings.xml b/app/src/main/res/layout-sw600dp/activity_settings.xml
new file mode 100644
index 00000000..cb7e5e70
--- /dev/null
+++ b/app/src/main/res/layout-sw600dp/activity_settings.xml
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<!--
+Layout for displaying settings in tablet mode (or devices with wide screens)
+-->
+<android.support.v4.widget.SlidingPaneLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:id="@+id/slidingpane_layout">
+
+    <fragment android:name="org.gnucash.android.ui.settings.PreferenceHeadersFragment"
+        android:tag="PreferenceHeadersFragment"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="match_parent"
+        android:layout_gravity="left|start"/>
+
+    <FrameLayout android:id="@+id/fragment_container"
+        android:layout_width="0dp"
+        android:layout_weight="3"
+        android:layout_height="match_parent" />
+</android.support.v4.widget.SlidingPaneLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/activity_settings.xml b/app/src/main/res/layout/activity_settings.xml
new file mode 100644
index 00000000..c79624af
--- /dev/null
+++ b/app/src/main/res/layout/activity_settings.xml
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<android.support.v4.widget.SlidingPaneLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:id="@+id/slidingpane_layout">
+
+    <fragment android:name="org.gnucash.android.ui.settings.PreferenceHeadersFragment"
+        android:tag="PreferenceHeadersFragment"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_marginRight="0dp"
+        android:layout_gravity="left|start"/>
+
+    <FrameLayout android:id="@+id/fragment_container"
+        android:layout_width="match_parent"
+        android:layout_weight="1"
+        android:layout_height="match_parent" />
+</android.support.v4.widget.SlidingPaneLayout>
\ No newline at end of file
diff --git a/app/src/main/res/values-sw600dp/flags.xml b/app/src/main/res/values-sw600dp/flags.xml
new file mode 100644
index 00000000..b379cdfa
--- /dev/null
+++ b/app/src/main/res/values-sw600dp/flags.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<resources>
+    <bool name="isTablet">true</bool>
+</resources>
\ No newline at end of file
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
index 64afba57..128ab1c0 100644
--- a/app/src/main/res/values/dimens.xml
+++ b/app/src/main/res/values/dimens.xml
@@ -34,7 +34,6 @@
     <dimen name="card_min_height">80dp</dimen>
     <dimen name="toolbar_progress_height">2dp</dimen>
 
-
     <dimen name="passcode_btn">70dp</dimen>
     <dimen name="passcode_btn_margin">10dp</dimen>
 
diff --git a/app/src/main/res/values/donottranslate.xml b/app/src/main/res/values/donottranslate.xml
index f4625f82..5c88771b 100644
--- a/app/src/main/res/values/donottranslate.xml
+++ b/app/src/main/res/values/donottranslate.xml
@@ -38,7 +38,7 @@
     <string name="key_last_export_destination">last_export_destination</string>
     <string name="key_use_compact_list">use_compact_list</string>
     <string name="empty"></string>
-
+    <string name="key_prefs_header_general">prefs_header_general</string>
     <string-array name="key_transaction_type_values" translatable="false">
         <item>CREDIT</item>
         <item>DEBIT</item>
diff --git a/app/src/main/res/values/flags.xml b/app/src/main/res/values/flags.xml
new file mode 100644
index 00000000..c5248155
--- /dev/null
+++ b/app/src/main/res/values/flags.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<resources>
+    <bool name="isTablet">false</bool>
+</resources>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index e82dfc2a..2876d3ae 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -408,6 +408,8 @@
     <string name="nav_menu_budgets">Budgets</string>
     <string name="title_cash_flow_report">Cash Flow</string>
     <string name="title_budgets">Budgets</string>
+    <string name="title_use_compact_list">Enable compact view</string>
+    <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
     <string-array name="report_time_range">
         <item>Current month</item>
         <item>Last 3 months</item>
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
index 74b2dfd9..81e3aecf 100644
--- a/app/src/main/res/values/themes.xml
+++ b/app/src/main/res/values/themes.xml
@@ -32,6 +32,7 @@
         <item name="windowActionModeOverlay">true</item>
         <item name="colorButtonNormal">#FFAB00</item>
         <item name="actionMenuTextAppearance">@style/ActionMenuText</item>
+        <item name="preferenceTheme">@style/PreferenceThemeOverlay</item>
     </style>
 
     <style name="Theme.GnucashTheme.NoActionBar" parent="Theme.AppCompat.Light.NoActionBar">
@@ -47,6 +48,7 @@
         <item name="actionMenuTextAppearance">@style/ActionMenuText</item>
 
         <item name="drawerArrowStyle">@style/DrawerArrowStyle</item>
+        <item name="preferenceTheme">@style/PreferenceThemeOverlay</item>
         <!-- <item name="colorControlNormal">@android:color/white</item> -->
     </style>
 
diff --git a/app/src/main/res/xml-v11/fragment_about_preferences.xml b/app/src/main/res/xml-v11/fragment_about_preferences.xml
deleted file mode 100644
index fbe45e28..00000000
--- a/app/src/main/res/xml-v11/fragment_about_preferences.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
- 
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
- 
-    http://www.apache.org/licenses/LICENSE-2.0
- 
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android" >
-    <Preference android:key="@string/key_about_gnucash" android:summary="@string/app_version_name"
-                android:title="@string/title_about_gnucash"/>
-    <Preference android:title="@string/title_google_plus_community"
-        android:summary="@string/summary_google_plus" >
-        <intent android:action="android.intent.action.VIEW"
-            android:data="https://plus.google.com/communities/104728406764752407046"/>
-    </Preference>
-    <Preference android:title="@string/title_translate_gnucash"
-        android:summary="@string/summary_translate_gnucash">
-        <intent android:action="android.intent.action.VIEW"
-            android:data="https://crowdin.com/project/gnucash-android" />
-    </Preference>
-    <Preference android:summary="@string/summary_licence_details" 
-        android:title="@string/title_license" 
-        android:key="@string/key_license">
-        <intent android:action="android.intent.action.VIEW"
-        	android:data="http://www.apache.org/licenses/LICENSE-2.0.html" />
-	</Preference>
-    <CheckBoxPreference android:title="@string/title_enable_crashlytics"
-        android:summary="@string/msg_enable_crashlytics"
-        android:key="@string/key_enable_crashlytics" />
-</PreferenceScreen>
\ No newline at end of file
diff --git a/app/src/main/res/xml-v11/fragment_account_preferences.xml b/app/src/main/res/xml-v11/fragment_account_preferences.xml
deleted file mode 100644
index 8c3179e4..00000000
--- a/app/src/main/res/xml-v11/fragment_account_preferences.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-    <ListPreference android:summary="@string/summary_default_currency"
-                    android:key="@string/key_default_currency"
-                    android:dialogTitle="@string/title_choose_currency"
-                    android:title="@string/title_default_currency"
-                    android:entries="@array/key_currency_codes"
-                    android:entryValues="@array/key_currency_codes"/>
-    <Preference android:key="@string/key_create_default_accounts"
-                android:title="@string/title_create_default_accounts"
-                android:summary="@string/summary_create_default_accounts" />
-    <Preference android:key="@string/key_import_accounts"
-                android:summary="@string/summary_import_accounts"
-                android:title="@string/title_import_accounts" />
-    <Preference android:key="@string/key_delete_all_accounts"
-                android:summary="@string/summary_delete_all_accounts"
-                android:title="@string/title_delete_all_accounts" />
-</PreferenceScreen>
\ No newline at end of file
diff --git a/app/src/main/res/xml-v11/fragment_transaction_preferences.xml b/app/src/main/res/xml-v11/fragment_transaction_preferences.xml
deleted file mode 100644
index 084e26c8..00000000
--- a/app/src/main/res/xml-v11/fragment_transaction_preferences.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
- 
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
- 
-    http://www.apache.org/licenses/LICENSE-2.0
- 
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-    <ListPreference android:title="@string/title_default_transaction_type"
-                    android:entryValues="@array/key_transaction_type_values"
-                    android:entries="@array/transaction_types"
-                    android:key="@string/key_default_transaction_type"
-                    android:summary="@string/summary_default_transaction_type"/>
-
-    <CheckBoxPreference android:summary="@string/summary_use_double_entry"
-                        android:key="@string/key_use_double_entry"
-                        android:title="@string/title_use_double_entry"/>
-    <CheckBoxPreference android:summary="@string/summary_save_opening_balances"
-                        android:key="@string/key_save_opening_balances"
-                        android:defaultValue="false"
-                        android:title="@string/title_save_opening_balances" />
-    <Preference android:key="@string/key_delete_all_transactions"
-                android:summary="@string/summary_delete_all_transactions"
-                android:title="@string/title_delete_all_transactions" />
-</PreferenceScreen>
diff --git a/app/src/main/res/xml/fragment_about_preferences.xml b/app/src/main/res/xml/fragment_about_preferences.xml
index 02b879f1..47e375b2 100644
--- a/app/src/main/res/xml/fragment_about_preferences.xml
+++ b/app/src/main/res/xml/fragment_about_preferences.xml
@@ -16,7 +16,6 @@
 -->
 
 <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android" >
-    <PreferenceCategory android:title="@string/title_about_gnucash"/>
     <Preference android:key="@string/key_about_gnucash" android:summary="@string/app_version_name"
         android:title="@string/title_about_gnucash"/>
     <Preference android:title="@string/title_google_plus_community"
@@ -35,8 +34,8 @@
         <intent android:action="android.intent.action.VIEW"
             android:data="http://www.apache.org/licenses/LICENSE-2.0.html" />
     </Preference>
-    <CheckBoxPreference android:title="@string/title_enable_crashlytics"
+    <android.support.v7.preference.SwitchPreferenceCompat
+        android:title="@string/title_enable_crashlytics"
         android:summary="@string/msg_enable_crashlytics"
         android:key="@string/key_enable_crashlytics" />
-
 </PreferenceScreen>
\ No newline at end of file
diff --git a/app/src/main/res/xml/fragment_account_preferences.xml b/app/src/main/res/xml/fragment_account_preferences.xml
index aba9bff1..ace62559 100644
--- a/app/src/main/res/xml/fragment_account_preferences.xml
+++ b/app/src/main/res/xml/fragment_account_preferences.xml
@@ -1,18 +1,34 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
 
 <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-    <PreferenceCategory android:title="@string/title_account_preferences"/>
     <ListPreference android:summary="@string/summary_default_currency"
-                    android:key="@string/key_default_currency"
-                    android:dialogTitle="@string/title_choose_currency"
-                    android:title="@string/title_default_currency"
-                    android:entries="@array/key_currency_codes"
-                    android:entryValues="@array/key_currency_codes"
-                    android:defaultValue="USD"/>
+        android:key="@string/key_default_currency"
+        android:dialogTitle="@string/title_choose_currency"
+        android:title="@string/title_default_currency"
+        android:entries="@array/key_currency_codes"
+        android:entryValues="@array/key_currency_codes"/>
+    <Preference android:key="@string/key_create_default_accounts"
+        android:title="@string/title_create_default_accounts"
+        android:summary="@string/summary_create_default_accounts" />
     <Preference android:key="@string/key_import_accounts"
-                android:summary="@string/summary_import_accounts"
-                android:title="@string/title_import_accounts" />
+        android:summary="@string/summary_import_accounts"
+        android:title="@string/title_import_accounts" />
     <Preference android:key="@string/key_delete_all_accounts"
-                android:summary="@string/summary_delete_all_accounts"
-                android:title="@string/title_delete_all_accounts" />
+        android:summary="@string/summary_delete_all_accounts"
+        android:title="@string/title_delete_all_accounts" />
 </PreferenceScreen>
\ No newline at end of file
diff --git a/app/src/main/res/xml/fragment_backup_preferences.xml b/app/src/main/res/xml/fragment_backup_preferences.xml
index 463f89e0..be2fb59f 100644
--- a/app/src/main/res/xml/fragment_backup_preferences.xml
+++ b/app/src/main/res/xml/fragment_backup_preferences.xml
@@ -52,9 +52,9 @@
             android:key="@string/key_default_export_email" 
             android:summary="@string/summary_default_export_email"
             android:inputType="textEmailAddress"/>
-        <CheckBoxPreference android:summary="@string/hint_export_choice" android:key="@string/key_export_all_transactions" android:title="@string/title_export_all_transactions"/>
-        <CheckBoxPreference android:summary="@string/hint_delete_after_export" android:key="@string/key_delete_transactions_after_export" android:title="@string/title_always_delete_exported_transactions"/>
-        <CheckBoxPreference android:key="@string/key_xml_ofx_header" android:summary="@string/summary_xml_ofx_header" android:title="@string/title_xml_ofx_header"/>
+        <android.support.v7.preference.SwitchPreferenceCompat android:summary="@string/hint_export_choice" android:key="@string/key_export_all_transactions" android:title="@string/title_export_all_transactions"/>
+        <android.support.v7.preference.SwitchPreferenceCompat android:summary="@string/hint_delete_after_export" android:key="@string/key_delete_transactions_after_export" android:title="@string/title_always_delete_exported_transactions"/>
+        <android.support.v7.preference.SwitchPreferenceCompat android:key="@string/key_xml_ofx_header" android:summary="@string/summary_xml_ofx_header" android:title="@string/title_xml_ofx_header"/>
     </PreferenceCategory>
 
 </PreferenceScreen>
\ No newline at end of file
diff --git a/app/src/main/res/xml/fragment_transaction_preferences.xml b/app/src/main/res/xml/fragment_transaction_preferences.xml
index 36aefe5f..d92db4dc 100644
--- a/app/src/main/res/xml/fragment_transaction_preferences.xml
+++ b/app/src/main/res/xml/fragment_transaction_preferences.xml
@@ -15,21 +15,25 @@
  limitations under the License.
 -->
 <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-    <PreferenceCategory android:title="@string/title_transaction_preferences"/> <!-- needed for pre-Honeycomb devices -->
     <ListPreference android:title="@string/title_default_transaction_type"
-                    android:entryValues="@array/key_transaction_type_values"
-                    android:entries="@array/transaction_types"
-                    android:key="@string/key_default_transaction_type"
-                    android:summary="@string/summary_default_transaction_type"/>
-    <CheckBoxPreference android:summary="@string/summary_use_double_entry"
-                        android:key="@string/key_use_double_entry"
-                        android:defaultValue="true"
-                        android:title="@string/title_use_double_entry"/>
-    <CheckBoxPreference android:summary="@string/summary_save_opening_balances"
-                        android:key="@string/key_save_opening_balances"
-                        android:defaultValue="false"
-                        android:title="@string/title_save_opening_balances" />
+        android:entryValues="@array/key_transaction_type_values"
+        android:entries="@array/transaction_types"
+        android:key="@string/key_default_transaction_type"
+        android:summary="@string/summary_default_transaction_type"/>
+
+    <android.support.v7.preference.SwitchPreferenceCompat
+        android:summary="@string/summary_use_compact_list"
+        android:key="@string/key_use_compact_list"
+        android:title="@string/title_use_compact_list"/>
+
+    <android.support.v7.preference.SwitchPreferenceCompat android:summary="@string/summary_use_double_entry"
+        android:key="@string/key_use_double_entry"
+        android:title="@string/title_use_double_entry"/>
+    <android.support.v7.preference.SwitchPreferenceCompat android:summary="@string/summary_save_opening_balances"
+        android:key="@string/key_save_opening_balances"
+        android:defaultValue="false"
+        android:title="@string/title_save_opening_balances" />
     <Preference android:key="@string/key_delete_all_transactions"
-                android:summary="@string/summary_delete_all_transactions"
-                android:title="@string/title_delete_all_transactions" />
+        android:summary="@string/summary_delete_all_transactions"
+        android:title="@string/title_delete_all_transactions" />
 </PreferenceScreen>
diff --git a/app/src/main/res/xml/preference_fragment_headers.xml b/app/src/main/res/xml/preference_fragment_headers.xml
new file mode 100644
index 00000000..3acbd0dd
--- /dev/null
+++ b/app/src/main/res/xml/preference_fragment_headers.xml
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:title="GnuCash Settings">
+    <Preference android:key="@string/key_prefs_header_general"
+        android:title="@string/header_general_settings"
+        app:fragment="org.gnucash.android.ui.settings.GeneralPreferenceFragment"/>
+    <Preference app:fragment="org.gnucash.android.ui.settings.AccountPreferencesFragment"
+        android:title="@string/header_account_settings" />
+    <Preference app:fragment="org.gnucash.android.ui.settings.TransactionsPreferenceFragment"
+        android:title="@string/header_transaction_settings" />
+    <Preference app:fragment="org.gnucash.android.ui.settings.BackupPreferenceFragment"
+        android:title="@string/header_backup_and_export_settings" />
+    <Preference app:fragment="org.gnucash.android.ui.settings.AboutPreferenceFragment"
+        android:title="@string/header_about_gnucash" />
+    <Preference android:title="Rate in Play Store">
+        <intent android:action="android.intent.action.VIEW"
+            android:data="market://details?id=org.gnucash.android" />
+    </Preference>
+</PreferenceScreen>
\ No newline at end of file

From fa02d8ea9a16e97ae716dde03406be6727ce0b82 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 22 Dec 2015 16:48:37 +0100
Subject: [PATCH 023/121] Fix NullPointerException in AccountsActivityTest.

It seems test classes using ActivityInstrumentationTestCase2 get their
static members cleared on super.tearDown(). This was making some tests
fail with NullPointerException.

See http://stackoverflow.com/questions/6634360/activityinstrumentationtestcase2-and-use-of-static-finals-fields-become-null-af
---
 .../java/org/gnucash/android/test/ui/AccountsActivityTest.java       | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index b087fe24..ea7d66d1 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -84,8 +84,9 @@
 
 @RunWith(AndroidJUnit4.class)
 public class AccountsActivityTest extends ActivityInstrumentationTestCase2<AccountsActivity> {
-	private static final String DUMMY_ACCOUNT_CURRENCY_CODE = "USD";
-    private static final Commodity DUMMY_ACCOUNT_CURRENCY = Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE);
+    private static final String DUMMY_ACCOUNT_CURRENCY_CODE = "USD";
+    // Don't add static here, otherwise it gets set to null by super.tearDown()
+    private final Commodity DUMMY_ACCOUNT_CURRENCY = Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE);
 	private static final String DUMMY_ACCOUNT_NAME = "Dummy account";
     public static final String  DUMMY_ACCOUNT_UID   = "dummy-account";
     public static final String TEST_DB_NAME = "test_gnucash_db.sqlite";

From fc7f724f02a03d284969f9d674af9970f911a1bd Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 22 Dec 2015 17:57:42 +0100
Subject: [PATCH 024/121] Add test to check the test fixture has been set up
 properly.

See https://developer.android.com/training/activity-testing/activity-basic-testing.html#preconditions
---
 .../java/org/gnucash/android/test/ui/AccountsActivityTest.java | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index ea7d66d1..5600ea90 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -129,6 +129,16 @@ public void setUp() throws Exception {
         refreshAccountsList();
 	}
 
+    @Test
+    public void testPreconditions() {
+        assertNotNull(mAcccountsActivity);
+        assertNotNull(mDbHelper);
+        assertNotNull(mDb);
+        assertNotNull(mSplitsDbAdapter);
+        assertNotNull(mTransactionsDbAdapter);
+        assertNotNull(DUMMY_ACCOUNT_CURRENCY);
+    }
+
     /**
      * Prevents the first-run dialogs (Whats new, Create accounts etc) from being displayed when testing
      * @param context Application context

From 3fd6a0f00fa872569dd3ea5eb6dcd283b23656e0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 22 Dec 2015 18:16:46 +0100
Subject: [PATCH 025/121] Apply code inspector suggestions.

---
 .../android/test/ui/AccountsActivityTest.java      | 41 ++++++++++++----------
 1 file changed, 22 insertions(+), 19 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 5600ea90..e69080cd 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -16,11 +16,13 @@
 
 package org.gnucash.android.test.ui;
 
+import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences.Editor;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
+import android.os.Build;
 import android.preference.PreferenceManager;
 import android.support.test.InstrumentationRegistry;
 import android.support.test.espresso.Espresso;
@@ -57,7 +59,6 @@
 import org.junit.runner.RunWith;
 
 import java.math.BigDecimal;
-import java.util.Currency;
 import java.util.List;
 
 import static android.support.test.espresso.Espresso.onData;
@@ -82,13 +83,14 @@
 import static org.hamcrest.Matchers.is;
 import static org.hamcrest.Matchers.not;
 
+
 @RunWith(AndroidJUnit4.class)
 public class AccountsActivityTest extends ActivityInstrumentationTestCase2<AccountsActivity> {
     private static final String DUMMY_ACCOUNT_CURRENCY_CODE = "USD";
     // Don't add static here, otherwise it gets set to null by super.tearDown()
     private final Commodity DUMMY_ACCOUNT_CURRENCY = Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE);
 	private static final String DUMMY_ACCOUNT_NAME = "Dummy account";
-    public static final String  DUMMY_ACCOUNT_UID   = "dummy-account";
+    private static final String  DUMMY_ACCOUNT_UID   = "dummy-account";
     public static final String TEST_DB_NAME = "test_gnucash_db.sqlite";
 
     private DatabaseHelper mDbHelper;
@@ -96,7 +98,7 @@
     private AccountsDbAdapter mAccountsDbAdapter;
     private TransactionsDbAdapter mTransactionsDbAdapter;
     private SplitsDbAdapter mSplitsDbAdapter;
-    private AccountsActivity mAcccountsActivity;
+    private AccountsActivity mAccountsActivity;
 
     public AccountsActivityTest() {
 		super(AccountsActivity.class);
@@ -107,10 +109,10 @@ public void setUp() throws Exception {
         super.setUp();
         injectInstrumentation(InstrumentationRegistry.getInstrumentation());
         preventFirstRunDialogs(getInstrumentation().getTargetContext());
-        mAcccountsActivity = getActivity();
+        mAccountsActivity = getActivity();
 
         String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
-        mDbHelper = new DatabaseHelper(mAcccountsActivity, activeBookUID);
+        mDbHelper = new DatabaseHelper(mAccountsActivity, activeBookUID);
         try {
             mDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
@@ -131,7 +133,7 @@ public void setUp() throws Exception {
 
     @Test
     public void testPreconditions() {
-        assertNotNull(mAcccountsActivity);
+        assertNotNull(mAccountsActivity);
         assertNotNull(mDbHelper);
         assertNotNull(mDb);
         assertNotNull(mSplitsDbAdapter);
@@ -159,9 +161,10 @@ public static void preventFirstRunDialogs(Context context) {
     }
 
 
+    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
     public void testDisplayAccountsList(){
-        AccountsActivity.createDefaultAccounts("EUR", mAcccountsActivity);
-        mAcccountsActivity.recreate();
+        AccountsActivity.createDefaultAccounts("EUR", mAccountsActivity);
+        mAccountsActivity.recreate();
 
         refreshAccountsList();
         sleep(1000);
@@ -227,7 +230,7 @@ public void testChangeParentAccount() {
         refreshAccountsList();
 
         onView(withText(accountName)).perform(click());
-        openActionBarOverflowOrOptionsMenu(mAcccountsActivity);
+        openActionBarOverflowOrOptionsMenu(mAccountsActivity);
         onView(withText(R.string.title_edit_account)).perform(click());
         onView(withId(R.id.fragment_account_form)).check(matches(isDisplayed()));
         Espresso.closeSoftKeyboard();
@@ -303,7 +306,7 @@ public void editingAccountShouldNotDeleteTransactions(){
 
         Account account = new Account("Transfer Account");
         account.setCommodity(Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY.getCurrencyCode()));
-        Transaction transaction = new Transaction("Simple trxn");
+        Transaction transaction = new Transaction("Simple transaction");
         transaction.setCurrencyCode(DUMMY_ACCOUNT_CURRENCY.getCurrencyCode());
         Split split = new Split(new Money(BigDecimal.TEN, DUMMY_ACCOUNT_CURRENCY), account.getUID());
         transaction.addSplit(split);
@@ -350,7 +353,7 @@ public void testDeleteSimpleAccount() {
 //        onView(withId(R.id.btn_save)).perform(click());
 
         //should throw expected exception
-        mAccountsDbAdapter.getID(DUMMY_ACCOUNT_UID);;
+        mAccountsDbAdapter.getID(DUMMY_ACCOUNT_UID);
     }
 
 	//TODO: Test import of account file
@@ -363,7 +366,7 @@ public void testIntentAccountCreation(){
         intent.putExtra(Account.EXTRA_CURRENCY_CODE, "EUR");
         intent.setType(Account.MIME_TYPE);
 
-        new AccountCreator().onReceive(mAcccountsActivity, intent);
+        new AccountCreator().onReceive(mAccountsActivity, intent);
 
 		Account account = mAccountsDbAdapter.getRecord("intent-account");
 		assertThat(account).isNotNull();
@@ -375,28 +378,29 @@ public void testIntentAccountCreation(){
     /**
      * Tests that the setup wizard is displayed on first run
      */
+    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
     @Test
     public void shouldShowWizardOnFirstRun() throws Throwable {
-        PreferenceManager.getDefaultSharedPreferences(mAcccountsActivity)
+        PreferenceManager.getDefaultSharedPreferences(mAccountsActivity)
                 .edit()
-                .remove(mAcccountsActivity.getString(R.string.key_first_run))
+                .remove(mAccountsActivity.getString(R.string.key_first_run))
                 .commit();
 
         runTestOnUiThread(new Runnable() {
             @Override
             public void run() {
-                mAcccountsActivity.recreate();
+                mAccountsActivity.recreate();
             }
         });
 
         //check that wizard is shown
-        onView(withText(mAcccountsActivity.getString(R.string.title_setup_gnucash)))
+        onView(withText(mAccountsActivity.getString(R.string.title_setup_gnucash)))
                 .check(matches(isDisplayed()));
     }
 
 	@After
 	public void tearDown() throws Exception {
-        mAcccountsActivity.finish();
+        mAccountsActivity.finish();
 		super.tearDown();
 	}
 
@@ -408,13 +412,12 @@ private void refreshAccountsList(){
             runTestOnUiThread(new Runnable() {
                 @Override
                 public void run() {
-                    Fragment fragment = mAcccountsActivity.getCurrentAccountListFragment();
+                    Fragment fragment = mAccountsActivity.getCurrentAccountListFragment();
                     ((AccountsListFragment) fragment).refresh();
                 }
             });
         } catch (Throwable throwable) {
             System.err.println("Failed to refresh fragment");
         }
-
     }
 }

From 65782662b465a5ac2e63c7d35fa0b2b728cdd3d0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 22 Dec 2015 18:24:05 +0100
Subject: [PATCH 026/121] Fix mixed use of tabs and spaces for indenting.

---
 .../android/test/ui/AccountsActivityTest.java      | 58 +++++++++++-----------
 1 file changed, 29 insertions(+), 29 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index e69080cd..2b63b732 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -89,7 +89,7 @@
     private static final String DUMMY_ACCOUNT_CURRENCY_CODE = "USD";
     // Don't add static here, otherwise it gets set to null by super.tearDown()
     private final Commodity DUMMY_ACCOUNT_CURRENCY = Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE);
-	private static final String DUMMY_ACCOUNT_NAME = "Dummy account";
+    private static final String DUMMY_ACCOUNT_NAME = "Dummy account";
     private static final String  DUMMY_ACCOUNT_UID   = "dummy-account";
     public static final String TEST_DB_NAME = "test_gnucash_db.sqlite";
 
@@ -101,11 +101,11 @@
     private AccountsActivity mAccountsActivity;
 
     public AccountsActivityTest() {
-		super(AccountsActivity.class);
-	}
+        super(AccountsActivity.class);
+    }
 
     @Before
-	public void setUp() throws Exception {
+    public void setUp() throws Exception {
         super.setUp();
         injectInstrumentation(InstrumentationRegistry.getInstrumentation());
         preventFirstRunDialogs(getInstrumentation().getTargetContext());
@@ -124,12 +124,12 @@ public void setUp() throws Exception {
         mAccountsDbAdapter      = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
         mAccountsDbAdapter.deleteAllRecords(); //clear the data
 
-		Account account = new Account(DUMMY_ACCOUNT_NAME, new CommoditiesDbAdapter(mDb).getCommodity(DUMMY_ACCOUNT_CURRENCY_CODE));
+        Account account = new Account(DUMMY_ACCOUNT_NAME, new CommoditiesDbAdapter(mDb).getCommodity(DUMMY_ACCOUNT_CURRENCY_CODE));
         account.setUID(DUMMY_ACCOUNT_UID);
-		mAccountsDbAdapter.addRecord(account);
+        mAccountsDbAdapter.addRecord(account);
 
         refreshAccountsList();
-	}
+    }
 
     @Test
     public void testPreconditions() {
@@ -195,7 +195,7 @@ public void testSearchAccounts(){
      * Tests that an account can be created successfully and that the account list is sorted alphabetically.
      */
     @Test
-	public void testCreateAccount(){
+    public void testCreateAccount(){
         onView(allOf(isDisplayed(), withId(R.id.fab_create_account))).perform(click());
 
         String NEW_ACCOUNT_NAME = "A New Account";
@@ -211,15 +211,15 @@ public void testCreateAccount(){
 
         onView(withId(R.id.menu_save)).perform(click());
 
-		List<Account> accounts = mAccountsDbAdapter.getAllRecords();
+        List<Account> accounts = mAccountsDbAdapter.getAllRecords();
         assertThat(accounts).isNotNull();
         assertThat(accounts).hasSize(2);
-		Account newestAccount = accounts.get(0); //because of alphabetical sorting
+        Account newestAccount = accounts.get(0); //because of alphabetical sorting
 
-		assertThat(newestAccount.getName()).isEqualTo(NEW_ACCOUNT_NAME);
-		assertThat(newestAccount.getCurrency().getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE);
+        assertThat(newestAccount.getName()).isEqualTo(NEW_ACCOUNT_NAME);
+        assertThat(newestAccount.getCurrency().getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE);
         assertThat(newestAccount.isPlaceholderAccount()).isTrue();
-	}
+    }
 
     @Test
     public void testChangeParentAccount() {
@@ -280,8 +280,8 @@ public void shouldHideParentAccountViewWhenNoParentsExist(){
     }
 
     @Test
-	public void testEditAccount(){
-		String editedAccountName = "Edited Account";
+    public void testEditAccount(){
+        String editedAccountName = "Edited Account";
         sleep(2000);
         onView(withId(R.id.options_menu)).perform(click());
         onView(withText(R.string.title_edit_account)).perform(click());
@@ -292,12 +292,12 @@ public void testEditAccount(){
 
         onView(withId(R.id.menu_save)).perform(click());
 
-		List<Account> accounts = mAccountsDbAdapter.getAllRecords();
-		Account latest = accounts.get(0);  //will be the first due to alphabetical sorting
+        List<Account> accounts = mAccountsDbAdapter.getAllRecords();
+        Account latest = accounts.get(0);  //will be the first due to alphabetical sorting
 
         assertThat(latest.getName()).isEqualTo(editedAccountName);
         assertThat(latest.getCurrency().getCurrencyCode()).isEqualTo(DUMMY_ACCOUNT_CURRENCY_CODE);
-	}
+    }
 
     @Test
     public void editingAccountShouldNotDeleteTransactions(){
@@ -340,7 +340,7 @@ private void sleep(long millis) {
 
     //TODO: Add test for moving content of accounts before deleting it
     @Test(expected = IllegalArgumentException.class)
-	public void testDeleteSimpleAccount() {
+    public void testDeleteSimpleAccount() {
         sleep(2000);
         onView(withId(R.id.options_menu)).perform(click());
         onView(withText(R.string.menu_delete)).perform(click());
@@ -356,11 +356,11 @@ public void testDeleteSimpleAccount() {
         mAccountsDbAdapter.getID(DUMMY_ACCOUNT_UID);
     }
 
-	//TODO: Test import of account file
+    //TODO: Test import of account file
     //TODO: test settings activity
     @Test
-	public void testIntentAccountCreation(){
-		Intent intent = new Intent(Intent.ACTION_INSERT);
+    public void testIntentAccountCreation(){
+        Intent intent = new Intent(Intent.ACTION_INSERT);
         intent.putExtra(Intent.EXTRA_TITLE, "Intent Account");
         intent.putExtra(Intent.EXTRA_UID, "intent-account");
         intent.putExtra(Account.EXTRA_CURRENCY_CODE, "EUR");
@@ -368,12 +368,12 @@ public void testIntentAccountCreation(){
 
         new AccountCreator().onReceive(mAccountsActivity, intent);
 
-		Account account = mAccountsDbAdapter.getRecord("intent-account");
-		assertThat(account).isNotNull();
+        Account account = mAccountsDbAdapter.getRecord("intent-account");
+        assertThat(account).isNotNull();
         assertThat(account.getName()).isEqualTo("Intent Account");
         assertThat(account.getUID()).isEqualTo("intent-account");
         assertThat(account.getCurrency().getCurrencyCode()).isEqualTo("EUR");
-	}
+    }
 
     /**
      * Tests that the setup wizard is displayed on first run
@@ -398,11 +398,11 @@ public void run() {
                 .check(matches(isDisplayed()));
     }
 
-	@After
-	public void tearDown() throws Exception {
+    @After
+    public void tearDown() throws Exception {
         mAccountsActivity.finish();
-		super.tearDown();
-	}
+        super.tearDown();
+    }
 
     /**
      * Refresh the account list fragment

From 6375a515c3cd430eaf45d7b04456566802c82883 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 23 Dec 2015 10:57:42 +0100
Subject: [PATCH 027/121] Add elevation to the toolbar progress bar to match
 the toolbar

---
 .../main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java   | 4 ++++
 app/src/main/res/layout/actionbar_progress_indicator.xml              | 2 ++
 app/src/main/res/layout/toolbar.xml                                   | 2 +-
 app/src/main/res/layout/toolbar_with_spinner.xml                      | 2 +-
 app/src/main/res/values/dimens.xml                                    | 3 ++-
 5 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 77f3af42..ded39fd3 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -20,6 +20,8 @@
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
 import android.database.Cursor;
+import android.graphics.Color;
+import android.graphics.PorterDuff;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.annotation.LayoutRes;
@@ -108,6 +110,8 @@ protected void onCreate(Bundle savedInstanceState) {
             actionBar.setTitle(getTitleRes());
         }
 
+        mToolbarProgress.getIndeterminateDrawable().setColorFilter(Color.WHITE, PorterDuff.Mode.SRC_IN);
+
         View headerView = mNavigationView.getHeaderView(0);
         headerView.findViewById(R.id.drawer_title).setOnClickListener(new View.OnClickListener() {
             @Override
diff --git a/app/src/main/res/layout/actionbar_progress_indicator.xml b/app/src/main/res/layout/actionbar_progress_indicator.xml
index d26e1f7a..6761a74b 100644
--- a/app/src/main/res/layout/actionbar_progress_indicator.xml
+++ b/app/src/main/res/layout/actionbar_progress_indicator.xml
@@ -20,10 +20,12 @@ See toolbar.xml layout for example of how to include it
 -->
 <ProgressBar xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     style="?android:attr/progressBarStyleHorizontal"
     android:id="@+id/toolbar_progress"
     android:layout_width="match_parent"
     android:layout_height="@dimen/toolbar_progress_height"
     android:indeterminate="true"
     android:visibility="gone"
+    app:elevation="@dimen/elevation_default"
     tools:showIn="@layout/toolbar_with_spinner" />
\ No newline at end of file
diff --git a/app/src/main/res/layout/toolbar.xml b/app/src/main/res/layout/toolbar.xml
index b8ca5498..cce92e48 100644
--- a/app/src/main/res/layout/toolbar.xml
+++ b/app/src/main/res/layout/toolbar.xml
@@ -28,7 +28,7 @@
         android:background="?attr/colorPrimary"
         android:layout_width="match_parent"
         android:layout_height="?attr/actionBarSize"
-        app:elevation="10dp"
+        app:elevation="@dimen/elevation_default"
         app:layout_scrollFlags="enterAlways"
         android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
         app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
diff --git a/app/src/main/res/layout/toolbar_with_spinner.xml b/app/src/main/res/layout/toolbar_with_spinner.xml
index f2068c1d..b823bc1f 100644
--- a/app/src/main/res/layout/toolbar_with_spinner.xml
+++ b/app/src/main/res/layout/toolbar_with_spinner.xml
@@ -27,7 +27,7 @@
         android:background="?attr/colorPrimary"
         android:layout_width="match_parent"
         android:layout_height="?attr/actionBarSize"
-        app:elevation="10dp"
+        app:elevation="@dimen/elevation_default"
         app:layout_scrollFlags="scroll|enterAlways"
         android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
         app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
index 128ab1c0..f9e3843c 100644
--- a/app/src/main/res/values/dimens.xml
+++ b/app/src/main/res/values/dimens.xml
@@ -32,9 +32,10 @@
     <dimen name="color_swatch_margins_large">8dip</dimen>
     <dimen name="color_swatch_margins_small">4dip</dimen>
     <dimen name="card_min_height">80dp</dimen>
-    <dimen name="toolbar_progress_height">2dp</dimen>
+    <dimen name="toolbar_progress_height">5dp</dimen>
 
     <dimen name="passcode_btn">70dp</dimen>
     <dimen name="passcode_btn_margin">10dp</dimen>
+    <dimen name="elevation_default">10dp</dimen>
 
 </resources>
\ No newline at end of file

From 7721514eb7e5c4adf8b02cd60de4704f02c9a4a4 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Mon, 28 Dec 2015 15:43:33 +0800
Subject: [PATCH 028/121] compile the whole project

---
 .../main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java    | 2 +-
 app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
index bf0a7047..d15feb67 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
@@ -123,7 +123,7 @@ public Budget buildModelInstance(@NonNull Cursor cursor) {
     }
 
     @Override
-    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Budge budge) {
+    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Budget budget) {
         stmt.clearBindings();
         stmt.bindString(1, budget.getName());
         if (budget.getDescription() != null)
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index 4ed49211..d096c503 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -252,7 +252,7 @@ private long doAddModels(@NonNull final List<Model> modelList, UpdateMethod upda
      * @return Number of rows inserted
      */
     public long bulkAddRecords(@NonNull List<Model> modelList){
-        return bulkAddRecords(modelList, replace);
+        return bulkAddRecords(modelList, UpdateMethod.replace);
     }
 
     public long bulkAddRecords(@NonNull List<Model> modelList, UpdateMethod updateMethod) {
@@ -348,7 +348,7 @@ public long bulkAddRecords(@NonNull List<Model> modelList, UpdateMethod updateMe
         return stmt;
     }
 
-    protected abstract @NotNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull Model Model);
+    protected abstract @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Model Model);
 
     /**
      * Returns a model instance populated with data from the record with GUID {@code uid}

From 0b3f9fef2902d9d654b92386d43c0dd8d4115c7e Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Mon, 28 Dec 2015 16:35:37 +0800
Subject: [PATCH 029/121] bug fix

---
 .../java/org/gnucash/android/db/adapter/DatabaseAdapter.java   | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index d096c503..022eea2b 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -208,7 +208,7 @@ public boolean isOpen(){
      */
     public void addRecord(@NonNull final Model model){
         Log.d(LOG_TAG, String.format("Adding %s record to database: ", model.getClass().getSimpleName()));
-        synchronized(mReplaceStatement) {
+        synchronized(getReplaceStatement()) {
             setBindings(getReplaceStatement(), model).execute();
         }
     }
@@ -218,7 +218,7 @@ private long doAddModels(@NonNull final List<Model> modelList, UpdateMethod upda
         long nRow = 0;
         switch (updateMethod) {
             case update:
-                synchronized(mUpdateStatement) {
+                synchronized(getUpdateStatement()) {
                     for (Model model : modelList) {
                         setBindings(getUpdateStatement(), model).execute();
                         nRow++;
@@ -226,7 +226,7 @@ private long doAddModels(@NonNull final List<Model> modelList, UpdateMethod upda
                 }
                 break;
             case insert:
-                synchronized(mInsertStatement) {
+                synchronized(getInsertStatement()) {
                     for (Model model : modelList) {
                         setBindings(getInsertStatement(), model).execute();
                         nRow++;
@@ -234,7 +234,7 @@ private long doAddModels(@NonNull final List<Model> modelList, UpdateMethod upda
                 }
                 break;
             default:
-                synchronized(mReplaceStatement) {
+                synchronized(getReplaceStatement()) {
                     for (Model model : modelList) {
                         setBindings(getReplaceStatement(), model).execute();
                         nRow++;
@@ -266,7 +266,7 @@ public long bulkAddRecords(@NonNull List<Model> modelList, UpdateMethod updateMe
         long nRow = 0;
         try {
             mDb.beginTransaction();
-            doAddModels(modelList, updateMethod);
+            nRow = doAddModels(modelList, updateMethod);
             mDb.setTransactionSuccessful();
         }
         finally {

From 46922281b96e08aca748355f594980efa933c4ad Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Mon, 28 Dec 2015 18:06:46 +0800
Subject: [PATCH 030/121] update calls of (bulk)addRecord

---
 .../android/test/ui/AccountsActivityTest.java      |  9 ++++----
 .../android/test/ui/ExportTransactionsTest.java    |  3 ++-
 .../android/test/ui/PieChartReportTest.java        |  7 +++---
 .../android/test/ui/TransactionsActivityTest.java  | 17 +++++++-------
 .../android/db/adapter/AccountsDbAdapter.java      | 18 +++++++--------
 .../android/db/adapter/BudgetsDbAdapter.java       | 16 ++++++-------
 .../android/db/adapter/DatabaseAdapter.java        | 26 +++++++++++++++++-----
 .../db/adapter/ScheduledActionDbAdapter.java       | 14 ++++++------
 .../android/db/adapter/SplitsDbAdapter.java        |  4 ++--
 .../android/db/adapter/TransactionsDbAdapter.java  | 18 +++++++++------
 .../gnucash/android/export/ExportAsyncTask.java    |  3 ++-
 .../android/importer/CommoditiesXmlHandler.java    |  3 ++-
 .../gnucash/android/importer/GncXmlHandler.java    | 13 ++++++-----
 .../gnucash/android/receivers/AccountCreator.java  |  3 ++-
 .../android/receivers/TransactionRecorder.java     |  3 ++-
 .../gnucash/android/service/SchedulerService.java  |  3 ++-
 .../android/ui/account/AccountFormFragment.java    |  6 ++---
 .../android/ui/budget/BudgetFormFragment.java      |  3 ++-
 .../android/ui/export/ExportFormFragment.java      |  3 ++-
 .../DeleteAllTransactionsConfirmationDialog.java   |  3 ++-
 .../android/ui/settings/SettingsActivity.java      |  3 ++-
 .../ui/transaction/TransactionFormFragment.java    | 10 ++++++---
 .../ui/transaction/TransactionsListFragment.java   |  3 ++-
 ...ansactionsDeleteConfirmationDialogFragment.java |  3 ++-
 .../dialog/TransferFundsDialogFragment.java        |  3 ++-
 25 files changed, 117 insertions(+), 80 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 89c70f7d..b26dba0f 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -35,6 +35,7 @@
 import org.gnucash.android.R;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
@@ -116,7 +117,7 @@ public void setUp() throws Exception {
 		Account account = new Account(DUMMY_ACCOUNT_NAME);
         account.setUID(DUMMY_ACCOUNT_UID);
 		account.setCommodity(Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE));
-		mAccountsDbAdapter.addRecord(account);
+		mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
         refreshAccountsList();
 	}
 
@@ -156,7 +157,7 @@ public void testSearchAccounts(){
 
         Account account = new Account(SEARCH_ACCOUNT_NAME);
         account.setParentUID(DUMMY_ACCOUNT_UID);
-        mAccountsDbAdapter.addRecord(account);
+        mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
 
         //enter search query
 //        ActionBarUtils.clickSherlockActionBarItem(mSolo, R.id.menu_search);
@@ -202,7 +203,7 @@ public void testCreateAccount(){
     public void testChangeParentAccount() {
         final String accountName = "Euro Account";
         Account account = new Account(accountName, Commodity.EUR);
-        mAccountsDbAdapter.addRecord(account);
+        mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
 
         refreshAccountsList();
 
@@ -289,7 +290,7 @@ public void editingAccountShouldNotDeleteTransactions(){
         transaction.addSplit(split);
         transaction.addSplit(split.createPair(DUMMY_ACCOUNT_UID));
         account.addTransaction(transaction);
-        mAccountsDbAdapter.addRecord(account);
+        mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
 
         assertThat(mAccountsDbAdapter.getRecord(DUMMY_ACCOUNT_UID).getTransactionCount()).isEqualTo(1);
         assertThat(mSplitsDbAdapter.getSplitsForTransaction(transaction.getUID())).hasSize(2);
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index ca0cde76..de61404a 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -35,6 +35,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
@@ -121,7 +122,7 @@ public void setUp() throws Exception {
 		transaction.addSplit(split.createPair(mAccountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance(currencyCode))));
 		account.addTransaction(transaction);
 
-		mAccountsDbAdapter.addRecord(account);
+		mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
 
 	}
 	
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index e2928529..7624ca42 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -35,6 +35,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.importer.GncXmlImporter;
@@ -146,7 +147,7 @@ private void addTransactionForCurrentMonth() throws Exception {
 
         Account account = mAccountsDbAdapter.getRecord(DINING_EXPENSE_ACCOUNT_UID);
         account.addTransaction(transaction);
-        mTransactionsDbAdapter.addRecord(transaction);
+        mTransactionsDbAdapter.addRecord(transaction, DatabaseAdapter.UpdateMethod.insert);
     }
 
     private void addTransactionForPreviousMonth(int minusMonths) {
@@ -161,7 +162,7 @@ private void addTransactionForPreviousMonth(int minusMonths) {
 
         Account account = mAccountsDbAdapter.getRecord(BOOKS_EXPENSE_ACCOUNT_UID);
         account.addTransaction(transaction);
-        mTransactionsDbAdapter.addRecord(transaction);
+        mTransactionsDbAdapter.addRecord(transaction, DatabaseAdapter.UpdateMethod.insert);
     }
 
 
@@ -192,7 +193,7 @@ public void testSpinner() throws Exception {
         transaction.addSplit(split.createPair(CASH_IN_WALLET_ASSET_ACCOUNT_UID));
 
         mAccountsDbAdapter.getRecord(GIFTS_RECEIVED_INCOME_ACCOUNT_UID).addTransaction(transaction);
-        mTransactionsDbAdapter.addRecord(transaction);
+        mTransactionsDbAdapter.addRecord(transaction, DatabaseAdapter.UpdateMethod.insert);
 
         getTestActivity();
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 2054dfc2..541fe9d9 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -33,6 +33,7 @@
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
@@ -130,8 +131,8 @@ public void setUp() throws Exception {
         account2.setUID(TRANSFER_ACCOUNT_UID);
         account2.setCommodity(Commodity.getInstance(CURRENCY_CODE));
 
-        mAccountsDbAdapter.addRecord(account);
-        mAccountsDbAdapter.addRecord(account2);
+        mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
+        mAccountsDbAdapter.addRecord(account2, DatabaseAdapter.UpdateMethod.insert);
 
         mTransaction = new Transaction(TRANSACTION_NAME);
 		mTransaction.setCurrencyCode(CURRENCY_CODE);
@@ -144,7 +145,7 @@ public void setUp() throws Exception {
         mTransaction.addSplit(split.createPair(TRANSFER_ACCOUNT_UID));
         account.addTransaction(mTransaction);
 
-        mTransactionsDbAdapter.addRecord(mTransaction);
+        mTransactionsDbAdapter.addRecord(mTransaction, DatabaseAdapter.UpdateMethod.insert);
 
         Intent intent = new Intent(Intent.ACTION_VIEW);
         intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, DUMMY_ACCOUNT_UID);
@@ -392,12 +393,12 @@ private void setDefaultTransactionType(TransactionType type) {
 	//FIXME: Improve on this test
 	public void childAccountsShouldUseParentTransferAccountSetting(){
 		Account transferAccount = new Account("New Transfer Acct");
-		mAccountsDbAdapter.addRecord(transferAccount);
-		mAccountsDbAdapter.addRecord(new Account("Higher account"));
+		mAccountsDbAdapter.addRecord(transferAccount, DatabaseAdapter.UpdateMethod.insert);
+		mAccountsDbAdapter.addRecord(new Account("Higher account"), DatabaseAdapter.UpdateMethod.insert);
 
 		Account childAccount = new Account("Child Account");
 		childAccount.setParentUID(DUMMY_ACCOUNT_UID);
-		mAccountsDbAdapter.addRecord(childAccount);
+		mAccountsDbAdapter.addRecord(childAccount, DatabaseAdapter.UpdateMethod.insert);
 		ContentValues contentValues = new ContentValues();
 		contentValues.put(DatabaseSchema.AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID, transferAccount.getUID());
 		mAccountsDbAdapter.updateRecord(DUMMY_ACCOUNT_UID, contentValues);
@@ -474,7 +475,7 @@ public void testDeleteTransaction(){
 	public void testMoveTransaction(){
 		Account account = new Account("Move account");
 		account.setCommodity(Commodity.getInstance(CURRENCY_CODE));
-		mAccountsDbAdapter.addRecord(account);
+		mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
 
 		assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(account.getUID())).hasSize(0);
 
@@ -495,7 +496,7 @@ public void editingSplit_shouldNotSetAmountToZero(){
 		mTransactionsDbAdapter.deleteAllRecords();
 
 		Account account = new Account("Z Account", Commodity.getInstance(CURRENCY_CODE));
-		mAccountsDbAdapter.addRecord(account);
+		mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
 
 		onView(withId(R.id.fab_create_transaction)).perform(click());
 
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index 34704d2a..fe2d12bd 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -114,11 +114,11 @@ public static AccountsDbAdapter getInstance(){
 	 * @return Database row ID of the inserted account
 	 */
     @Override
-	public void addRecord(@NonNull Account account){
+	public void addRecord(@NonNull Account account, UpdateMethod updateMethod){
         Log.d(LOG_TAG, "Replace account to db");
         //in-case the account already existed, we want to update the templates based on it as well
         List<Transaction> templateTransactions = mTransactionsAdapter.getScheduledTransactionsForAccount(account.getUID());
-        super.addRecord(account);
+        super.addRecord(account, updateMethod);
         String accountUID = account.getUID();
 		//now add transactions if there are any
 		if (account.getAccountType() != AccountType.ROOT){
@@ -126,10 +126,10 @@ public void addRecord(@NonNull Account account){
             updateRecord(accountUID, AccountEntry.COLUMN_FULL_NAME, getFullyQualifiedAccountName(accountUID));
             for (Transaction t : account.getTransactions()) {
                 t.setCommodity(account.getCommodity());
-		        mTransactionsAdapter.addRecord(t);
+		        mTransactionsAdapter.addRecord(t, updateMethod);
 			}
             for (Transaction transaction : templateTransactions) {
-                mTransactionsAdapter.addRecord(transaction);
+                mTransactionsAdapter.addRecord(transaction, UpdateMethod.update);
             }
         }
 	}
@@ -144,7 +144,7 @@ public void addRecord(@NonNull Account account){
      * @return number of rows inserted
      */
     @Override
-    public long bulkAddRecords(@NonNull List<Account> accountList){
+    public long bulkAddRecords(@NonNull List<Account> accountList, UpdateMethod updateMethod){
         //scheduled transactions are not fetched from the database when getting account transactions
         //so we retrieve those which affect this account and then re-save them later
         //this is necessary because the database has ON DELETE CASCADE between accounts and splits
@@ -155,10 +155,10 @@ public long bulkAddRecords(@NonNull List<Account> accountList){
             transactionList.addAll(account.getTransactions());
             transactionList.addAll(mTransactionsAdapter.getScheduledTransactionsForAccount(account.getUID()));
         }
-        long nRow = super.bulkAddRecords(accountList);
+        long nRow = super.bulkAddRecords(accountList, updateMethod);
 
         if (nRow > 0 && !transactionList.isEmpty()){
-            mTransactionsAdapter.bulkAddRecords(transactionList);
+            mTransactionsAdapter.bulkAddRecords(transactionList, updateMethod);
         }
         return nRow;
     }
@@ -545,7 +545,7 @@ public String getOrCreateImbalanceAccountUID(Currency currency){
             account.setParentUID(getOrCreateGnuCashRootAccountUID());
             account.setHidden(!GnuCashApplication.isDoubleEntryEnabled());
             account.setColorCode("#964B00");
-            addRecord(account);
+            addRecord(account, UpdateMethod.insert);
             uid = account.getUID();
         }
         return uid;
@@ -595,7 +595,7 @@ public String createAccountHierarchy(String fullName, AccountType accountType) {
             parentName += ACCOUNT_NAME_SEPARATOR;
         }
         if (accountsList.size() > 0) {
-            bulkAddRecords(accountsList);
+            bulkAddRecords(accountsList, UpdateMethod.insert);
         }
         // if fullName is not empty, loop will be entered and then uid will never be null
         //noinspection ConstantConditions
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
index d15feb67..2306e880 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
@@ -67,20 +67,20 @@ public static BudgetsDbAdapter getInstance(){
     }
 
     @Override
-    public void addRecord(@NonNull Budget budget) {
+    public void addRecord(@NonNull Budget budget, UpdateMethod updateMethod) {
         if (budget.getBudgetAmounts().size() == 0)
             throw new IllegalArgumentException("Budgets must have budget amounts");
 
-        mRecurrenceDbAdapter.addRecord(budget.getRecurrence());
-        super.addRecord(budget);
+        mRecurrenceDbAdapter.addRecord(budget.getRecurrence(), updateMethod);
+        super.addRecord(budget, updateMethod);
         mBudgetAmountsDbAdapter.deleteBudgetAmountsForBudget(budget.getUID());
         for (BudgetAmount budgetAmount : budget.getBudgetAmounts()) {
-            mBudgetAmountsDbAdapter.addRecord(budgetAmount);
+            mBudgetAmountsDbAdapter.addRecord(budgetAmount, updateMethod);
         }
     }
 
     @Override
-    public long bulkAddRecords(@NonNull List<Budget> budgetList) {
+    public long bulkAddRecords(@NonNull List<Budget> budgetList, UpdateMethod updateMethod) {
         List<BudgetAmount> budgetAmountList = new ArrayList<>(budgetList.size()*2);
         for (Budget budget : budgetList) {
             budgetAmountList.addAll(budget.getBudgetAmounts());
@@ -91,14 +91,14 @@ public long bulkAddRecords(@NonNull List<Budget> budgetList) {
         for (Budget budget : budgetList) {
             recurrenceList.add(budget.getRecurrence());
         }
-        mRecurrenceDbAdapter.bulkAddRecords(recurrenceList);
+        mRecurrenceDbAdapter.bulkAddRecords(recurrenceList, updateMethod);
 
         //now add the budgets themselves
-        long nRow = super.bulkAddRecords(budgetList);
+        long nRow = super.bulkAddRecords(budgetList, updateMethod);
 
         //then add the budget amounts, they require the budgets to exist
         if (nRow > 0 && !budgetAmountList.isEmpty()){
-            mBudgetAmountsDbAdapter.bulkAddRecords(budgetAmountList);
+            mBudgetAmountsDbAdapter.bulkAddRecords(budgetAmountList, updateMethod);
         }
 
         return nRow;
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index 022eea2b..cd6f0935 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -206,10 +206,24 @@ public boolean isOpen(){
      * So beware of any foreign keys with cascade dependencies which might need to be re-added</p>
      * @param model Model to be saved to the database
      */
-    public void addRecord(@NonNull final Model model){
+    public void addRecord(@NonNull final Model model, UpdateMethod updateMethod){
         Log.d(LOG_TAG, String.format("Adding %s record to database: ", model.getClass().getSimpleName()));
-        synchronized(getReplaceStatement()) {
-            setBindings(getReplaceStatement(), model).execute();
+        switch(updateMethod){
+            case insert:
+                synchronized(getInsertStatement()) {
+                    setBindings(getInsertStatement(), model).execute();
+                }
+                break;
+            case update:
+                synchronized(getUpdateStatement()) {
+                    setBindings(getUpdateStatement(), model).execute();
+                }
+                break;
+            default:
+                synchronized(getReplaceStatement()) {
+                    setBindings(getReplaceStatement(), model).execute();
+                }
+                break;
         }
     }
 
@@ -251,9 +265,9 @@ private long doAddModels(@NonNull final List<Model> modelList, UpdateMethod upda
      * @param modelList List of model records
      * @return Number of rows inserted
      */
-    public long bulkAddRecords(@NonNull List<Model> modelList){
-        return bulkAddRecords(modelList, UpdateMethod.replace);
-    }
+    //public long bulkAddRecords(@NonNull List<Model> modelList){
+    //    return bulkAddRecords(modelList, UpdateMethod.replace);
+    //}
 
     public long bulkAddRecords(@NonNull List<Model> modelList, UpdateMethod updateMethod) {
         if (modelList.isEmpty()) {
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
index 0e554348..cfe8cd5c 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
@@ -72,23 +72,23 @@ public static ScheduledActionDbAdapter getInstance(){
     }
 
     @Override
-    public void addRecord(@NonNull ScheduledAction scheduledAction) {
-        mRecurrenceDbAdapter.addRecord(scheduledAction.getRecurrence());
-        super.addRecord(scheduledAction);
+    public void addRecord(@NonNull ScheduledAction scheduledAction, UpdateMethod updateMethod) {
+        mRecurrenceDbAdapter.addRecord(scheduledAction.getRecurrence(), updateMethod);
+        super.addRecord(scheduledAction, updateMethod);
     }
 
     @Override
-    public long bulkAddRecords(@NonNull List<ScheduledAction> scheduledActions) {
+    public long bulkAddRecords(@NonNull List<ScheduledAction> scheduledActions, UpdateMethod updateMethod) {
         List<Recurrence> recurrenceList = new ArrayList<>(scheduledActions.size());
         for (ScheduledAction scheduledAction : scheduledActions) {
             recurrenceList.add(scheduledAction.getRecurrence());
         }
 
         //first add the recurrences, they have no dependencies (foreign key constraints)
-        long nRecurrences = mRecurrenceDbAdapter.bulkAddRecords(recurrenceList);
+        long nRecurrences = mRecurrenceDbAdapter.bulkAddRecords(recurrenceList, updateMethod);
         Log.d(LOG_TAG, String.format("Added %d recurrences for scheduled actions", nRecurrences));
 
-        return super.bulkAddRecords(scheduledActions);
+        return super.bulkAddRecords(scheduledActions, updateMethod);
     }
 
     /**
@@ -108,7 +108,7 @@ public long updateRecurrenceAttributes(ScheduledAction scheduledAction){
 
         Recurrence recurrence = scheduledAction.getRecurrence();
         recurrence.setUID(recurrenceUID);
-        recurrenceDbAdapter.addRecord(recurrence);
+        recurrenceDbAdapter.addRecord(recurrence, UpdateMethod.update);
 
         ContentValues contentValues = new ContentValues();
         extractBaseModelAttributes(contentValues, scheduledAction);
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
index c056efba..aa856ee6 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
@@ -80,9 +80,9 @@ public static SplitsDbAdapter getInstance(){
      * The transactions belonging to the split are marked as exported
      * @param split {@link org.gnucash.android.model.Split} to be recorded in DB
      */
-    public void addRecord(@NonNull final Split split){
+    public void addRecord(@NonNull final Split split, UpdateMethod updateMethod){
         Log.d(LOG_TAG, "Replace transaction split in db");
-        super.addRecord(split);
+        super.addRecord(split, updateMethod);
 
         long transactionId = getTransactionID(split.getTransactionUID());
         //when a split is updated, we want mark the transaction as not exported
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
index cc37951c..05e7513c 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
@@ -94,7 +94,7 @@ public SplitsDbAdapter getSplitDbAdapter() {
 	 * @param transaction {@link Transaction} to be inserted to database
 	 */
     @Override
-	public void addRecord(@NonNull Transaction transaction){
+	public void addRecord(@NonNull Transaction transaction, UpdateMethod updateMethod){
         Log.d(LOG_TAG, "Replacing transaction in db");
         mDb.beginTransaction();
         try {
@@ -103,13 +103,17 @@ public void addRecord(@NonNull Transaction transaction){
                 String imbalanceAccountUID = AccountsDbAdapter.getInstance().getOrCreateImbalanceAccountUID(transaction.getCurrency());
                 imbalanceSplit.setAccountUID(imbalanceAccountUID);
             }
-            super.addRecord(transaction);
+            super.addRecord(transaction, updateMethod);
 
             Log.d(LOG_TAG, "Adding splits for transaction");
             ArrayList<String> splitUIDs = new ArrayList<>(transaction.getSplits().size());
             for (Split split : transaction.getSplits()) {
                 Log.d(LOG_TAG, "Replace transaction split in db");
-                mSplitsDbAdapter.addRecord(split);
+                if (imbalanceSplit == split) {
+                    mSplitsDbAdapter.addRecord(split, UpdateMethod.insert);
+                } else {
+                    mSplitsDbAdapter.addRecord(split, updateMethod);
+                }
                 splitUIDs.add(split.getUID());
             }
             Log.d(LOG_TAG, transaction.getSplits().size() + " splits added");
@@ -139,9 +143,9 @@ public void addRecord(@NonNull Transaction transaction){
      * @return Number of transactions inserted
      */
     @Override
-    public long bulkAddRecords(@NonNull List<Transaction> transactionList){
+    public long bulkAddRecords(@NonNull List<Transaction> transactionList, UpdateMethod updateMethod){
         long start = System.nanoTime();
-        long rowInserted = super.bulkAddRecords(transactionList);
+        long rowInserted = super.bulkAddRecords(transactionList, updateMethod);
         long end = System.nanoTime();
         Log.d(getClass().getSimpleName(), String.format("bulk add transaction time %d ", end - start));
         List<Split> splitList = new ArrayList<>(transactionList.size()*3);
@@ -151,7 +155,7 @@ public long bulkAddRecords(@NonNull List<Transaction> transactionList){
         if (rowInserted != 0 && !splitList.isEmpty()) {
             try {
                 start = System.nanoTime();
-                long nSplits = mSplitsDbAdapter.bulkAddRecords(splitList);
+                long nSplits = mSplitsDbAdapter.bulkAddRecords(splitList, updateMethod);
                 Log.d(LOG_TAG, String.format("%d splits inserted in %d ns", nSplits, System.nanoTime()-start));
             }
             finally {
@@ -459,7 +463,7 @@ public int moveTransaction(String transactionUID, String srcAccountUID, String d
         for (Split split : splits) {
             split.setAccountUID(dstAccountUID);
         }
-        mSplitsDbAdapter.bulkAddRecords(splits);
+        mSplitsDbAdapter.bulkAddRecords(splits, UpdateMethod.update);
         return splits.size();
 	}
 	
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index 3fcb3e10..4f142e8e 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -50,6 +50,7 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ofx.OfxExporter;
 import org.gnucash.android.export.qif.QifExporter;
@@ -380,7 +381,7 @@ private void backupAndDeleteTransactions(){
         transactionsDbAdapter.deleteAllNonTemplateTransactions();
 
         if (preserveOpeningBalances) {
-            transactionsDbAdapter.bulkAddRecords(openingBalances);
+            transactionsDbAdapter.bulkAddRecords(openingBalances, DatabaseAdapter.UpdateMethod.insert);
         }
     }
 
diff --git a/app/src/main/java/org/gnucash/android/importer/CommoditiesXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/CommoditiesXmlHandler.java
index 7f16dabc..977328fa 100644
--- a/app/src/main/java/org/gnucash/android/importer/CommoditiesXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/CommoditiesXmlHandler.java
@@ -19,6 +19,7 @@
 
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.model.Commodity;
 import org.xml.sax.Attributes;
 import org.xml.sax.SAXException;
@@ -81,6 +82,6 @@ public void startElement(String uri, String localName, String qName, Attributes
 
     @Override
     public void endDocument() throws SAXException {
-        mCommoditiesDbAdapter.bulkAddRecords(mCommodities);
+        mCommoditiesDbAdapter.bulkAddRecords(mCommodities, DatabaseAdapter.UpdateMethod.insert);
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 2f330c68..b0c05413 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -27,6 +27,7 @@
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.PricesDbAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
@@ -937,23 +938,23 @@ public void endDocument() throws SAXException {
             Log.d(getClass().getSimpleName(), "before clean up db");
             mAccountsDbAdapter.deleteAllRecords();
             Log.d(getClass().getSimpleName(), String.format("deb clean up done %d ns", System.nanoTime()-startTime));
-            long nAccounts = mAccountsDbAdapter.bulkAddRecords(mAccountList);
+            long nAccounts = mAccountsDbAdapter.bulkAddRecords(mAccountList, DatabaseAdapter.UpdateMethod.insert);
             Log.d("Handler:", String.format("%d accounts inserted", nAccounts));
             //We need to add scheduled actions first because there is a foreign key constraint on transactions
             //which are generated from scheduled actions (we do auto-create some transactions during import)
-            long nSchedActions = mScheduledActionsDbAdapter.bulkAddRecords(mScheduledActionsList);
+            long nSchedActions = mScheduledActionsDbAdapter.bulkAddRecords(mScheduledActionsList, DatabaseAdapter.UpdateMethod.insert);
             Log.d("Handler:", String.format("%d scheduled actions inserted", nSchedActions));
 
-            long nTempTransactions = mTransactionsDbAdapter.bulkAddRecords(mTemplateTransactions);
+            long nTempTransactions = mTransactionsDbAdapter.bulkAddRecords(mTemplateTransactions, DatabaseAdapter.UpdateMethod.insert);
             Log.d("Handler:", String.format("%d template transactions inserted", nTempTransactions));
 
-            long nTransactions = mTransactionsDbAdapter.bulkAddRecords(mTransactionList);
+            long nTransactions = mTransactionsDbAdapter.bulkAddRecords(mTransactionList, DatabaseAdapter.UpdateMethod.insert);
             Log.d("Handler:", String.format("%d transactions inserted", nTransactions));
 
-            long nPrices = mPricesDbAdapter.bulkAddRecords(mPriceList);
+            long nPrices = mPricesDbAdapter.bulkAddRecords(mPriceList, DatabaseAdapter.UpdateMethod.insert);
             Log.d(getClass().getSimpleName(), String.format("%d prices inserted", nPrices));
 
-            long nBudgets = mBudgetsDbAdapter.bulkAddRecords(mBudgetList);
+            long nBudgets = mBudgetsDbAdapter.bulkAddRecords(mBudgetList, DatabaseAdapter.UpdateMethod.insert);
             Log.d(getClass().getSimpleName(), String.format("%d budgets inserted", nBudgets));
 
             long endTime = System.nanoTime();
diff --git a/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java b/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
index 7c406111..16eaad10 100644
--- a/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
+++ b/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
@@ -23,6 +23,7 @@
 import android.util.Log;
 
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Commodity;
 
@@ -55,7 +56,7 @@ public void onReceive(Context context, Intent intent) {
 		if (uid != null)
 			account.setUID(uid);
 		
-		AccountsDbAdapter.getInstance().addRecord(account);
+		AccountsDbAdapter.getInstance().addRecord(account, DatabaseAdapter.UpdateMethod.insert);
 	}
 
 }
diff --git a/app/src/main/java/org/gnucash/android/receivers/TransactionRecorder.java b/app/src/main/java/org/gnucash/android/receivers/TransactionRecorder.java
index aa0659cc..a1c76c85 100644
--- a/app/src/main/java/org/gnucash/android/receivers/TransactionRecorder.java
+++ b/app/src/main/java/org/gnucash/android/receivers/TransactionRecorder.java
@@ -24,6 +24,7 @@
 
 import com.crashlytics.android.Crashlytics;
 
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 
@@ -104,7 +105,7 @@ public void onReceive(Context context, Intent intent) {
             }
         }
 
-		TransactionsDbAdapter.getInstance().addRecord(transaction);
+		TransactionsDbAdapter.getInstance().addRecord(transaction, DatabaseAdapter.UpdateMethod.insert);
 		
 		WidgetConfigurationActivity.updateAllWidgets(context);
 	}
diff --git a/app/src/main/java/org/gnucash/android/service/SchedulerService.java b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
index 9456100d..dd4802c3 100644
--- a/app/src/main/java/org/gnucash/android/service/SchedulerService.java
+++ b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
@@ -27,6 +27,7 @@
 
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ExportAsyncTask;
@@ -108,7 +109,7 @@ private void executeScheduledEvent(ScheduledAction scheduledAction){
                 long transactionTime = scheduledAction.computeNextRunTime(); //default
                 recurringTrxn.setTime(transactionTime);
                 recurringTrxn.setCreatedTimestamp(new Timestamp(transactionTime));
-                transactionsDbAdapter.addRecord(recurringTrxn);
+                transactionsDbAdapter.addRecord(recurringTrxn, DatabaseAdapter.UpdateMethod.insert);
                 break;
 
             case BACKUP:
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index b1a48f45..8045e653 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -57,6 +57,7 @@
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Commodity;
@@ -846,10 +847,7 @@ private void saveAccount() {
 		if (mAccountsDbAdapter == null)
 			mAccountsDbAdapter = AccountsDbAdapter.getInstance();
         // bulk update, will not update transactions
-        mAccountsDbAdapter.enableForeignKey(false);
-		mAccountsDbAdapter.bulkAddRecords(accountsToUpdate);
-        mAccountsDbAdapter.enableForeignKey(true);
-
+		mAccountsDbAdapter.bulkAddRecords(accountsToUpdate, DatabaseAdapter.UpdateMethod.update);
 		finishFragment();
 	}
 
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
index fe50d322..9c5e28ee 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
@@ -49,6 +49,7 @@
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BudgetsDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.model.Budget;
 import org.gnucash.android.model.BudgetAmount;
 import org.gnucash.android.model.Commodity;
@@ -298,7 +299,7 @@ private void saveBudget(){
         recurrence.setPeriodStart(new Timestamp(mStartDate.getTimeInMillis()));
         mBudget.setRecurrence(recurrence);
 
-        mBudgetsDbAdapter.addRecord(mBudget);
+        mBudgetsDbAdapter.addRecord(mBudget, DatabaseAdapter.UpdateMethod.insert);
         getActivity().finish();
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 733f5601..b32a318e 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -53,6 +53,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.export.ExportAsyncTask;
 import org.gnucash.android.export.ExportFormat;
@@ -274,7 +275,7 @@ private void startExport(){
 		scheduledAction.setRecurrence(RecurrenceParser.parse(mEventRecurrence));
 		scheduledAction.setTag(exportParameters.toCsv());
 		scheduledAction.setActionUID(BaseModel.generateUID());
-		ScheduledActionDbAdapter.getInstance().addRecord(scheduledAction);
+		ScheduledActionDbAdapter.getInstance().addRecord(scheduledAction, DatabaseAdapter.UpdateMethod.insert);
 
 		Log.i(TAG, "Commencing async export of transactions");
 		new ExportAsyncTask(getActivity()).execute(exportParameters);
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransactionsConfirmationDialog.java b/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransactionsConfirmationDialog.java
index 6bb41943..36d2c3a4 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransactionsConfirmationDialog.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/DeleteAllTransactionsConfirmationDialog.java
@@ -29,6 +29,7 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.model.Transaction;
@@ -73,7 +74,7 @@ public void onClick(DialogInterface dialog, int whichButton) {
                                 Log.i("DeleteDialog", String.format("Deleted %d transactions successfully", count));
 
                                 if (preserveOpeningBalances) {
-                                    transactionsDbAdapter.bulkAddRecords(openingBalances);
+                                    transactionsDbAdapter.bulkAddRecords(openingBalances, DatabaseAdapter.UpdateMethod.insert);
                                 }
                                 Toast.makeText(context, R.string.toast_all_transactions_deleted, Toast.LENGTH_SHORT).show();
                                 WidgetConfigurationActivity.updateAllWidgets(getActivity());
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index f558623a..ccd3617f 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -56,6 +56,7 @@
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.export.xml.GncXmlExporter;
@@ -392,7 +393,7 @@ public boolean onPreferenceClick(Preference preference) {
                 transactionsDbAdapter.deleteAllRecords();
 
                 if (preserveOpeningBalances) {
-                    transactionsDbAdapter.bulkAddRecords(openingBalances);
+                    transactionsDbAdapter.bulkAddRecords(openingBalances, DatabaseAdapter.UpdateMethod.insert);
                 }
                 Toast.makeText(this, R.string.toast_all_transactions_deleted, Toast.LENGTH_LONG).show();
             }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 624f4820..563bfe15 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -60,6 +60,7 @@
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.AccountType;
@@ -783,13 +784,16 @@ private void saveNewTransaction() {
 
             // set as not exported because we have just edited it
             mTransaction.setExported(false);
-            mTransactionsDbAdapter.addRecord(mTransaction);
+            // 1) mTransactions may be existing or non-existing
+            // 2) when mTransactions exists in the db, the splits may exist or not exist in the db
+            // So replace is chosen.
+            mTransactionsDbAdapter.addRecord(mTransaction, DatabaseAdapter.UpdateMethod.replace);
 
             if (mSaveTemplateCheckbox.isChecked()) {//template is automatically checked when a transaction is scheduled
                 if (!mEditMode) { //means it was new transaction, so a new template
                     Transaction templateTransaction = new Transaction(mTransaction, true);
                     templateTransaction.setTemplate(true);
-                    mTransactionsDbAdapter.addRecord(templateTransaction);
+                    mTransactionsDbAdapter.addRecord(templateTransaction, DatabaseAdapter.UpdateMethod.replace);
                     scheduleRecurringTransaction(templateTransaction.getUID());
                 } else
                     scheduleRecurringTransaction(mTransaction.getUID());
@@ -837,7 +841,7 @@ private void scheduleRecurringTransaction(String transactionUID) {
         } else {
             if (recurrence != null) {
                 scheduledAction.setActionUID(transactionUID);
-                scheduledActionDbAdapter.addRecord(scheduledAction);
+                scheduledActionDbAdapter.addRecord(scheduledAction, DatabaseAdapter.UpdateMethod.replace);
                 Toast.makeText(getActivity(), R.string.toast_scheduled_recurring_transaction, Toast.LENGTH_SHORT).show();
             }
         }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index 70ce38aa..114e15db 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -45,6 +45,7 @@
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Money;
@@ -328,7 +329,7 @@ public boolean onMenuItemClick(MenuItem item) {
 						Transaction transaction = mTransactionsDbAdapter.getRecord(transactionId);
 						Transaction duplicate = new Transaction(transaction, true);
 						duplicate.setTime(System.currentTimeMillis());
-						mTransactionsDbAdapter.addRecord(duplicate);
+						mTransactionsDbAdapter.addRecord(duplicate, DatabaseAdapter.UpdateMethod.insert);
 						refresh();
 						return true;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
index 06998d7d..51b5c1dc 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
@@ -25,6 +25,7 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.model.Transaction;
@@ -74,7 +75,7 @@ public void onClick(DialogInterface dialog, int whichButton) {
                                     transactionsDbAdapter.deleteAllRecords();
 
                                     if (preserveOpeningBalances) {
-                                        transactionsDbAdapter.bulkAddRecords(openingBalances);
+                                        transactionsDbAdapter.bulkAddRecords(openingBalances, DatabaseAdapter.UpdateMethod.insert);
                                     }
                                 } else {
                                     transactionsDbAdapter.deleteRecord(rowId);
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 4cf1f4a8..fa2eee0f 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -36,6 +36,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.PricesDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
@@ -218,7 +219,7 @@ private void transferFunds(){
             price.setValueNum(mConvertedAmount.getNumerator() * mOriginAmount.getDenominator());
             price.setValueDenom(mOriginAmount.getNumerator() * mConvertedAmount.getDenominator());
             price.reduce();
-            pricesDbAdapter.addRecord(price);
+            pricesDbAdapter.addRecord(price, DatabaseAdapter.UpdateMethod.insert);
 
             mOnTransferFundsListener.transferComplete(mConvertedAmount);
         }

From fda4502f1bcbe07eda17fdeac5a00ff0846eaebc Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Mon, 28 Dec 2015 19:17:12 +0800
Subject: [PATCH 031/121] update bookDbAdapter Interface

---
 .../android/test/ui/AccountsActivityTest.java      |  1 -
 .../gnucash/android/db/adapter/BooksDbAdapter.java | 36 ++++++++++------------
 .../android/db/adapter/DatabaseAdapter.java        |  4 +--
 .../gnucash/android/importer/GncXmlHandler.java    |  2 +-
 4 files changed, 19 insertions(+), 24 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 8a7720a6..8d1bd115 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -128,7 +128,6 @@ public void setUp() throws Exception {
         Account account = new Account(DUMMY_ACCOUNT_NAME, new CommoditiesDbAdapter(mDb).getCommodity(DUMMY_ACCOUNT_CURRENCY_CODE));
         account.setUID(DUMMY_ACCOUNT_UID);
 		mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
-        mAccountsDbAdapter.addRecord(account);
         refreshAccountsList();
     }
 
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
index a070578f..539b3661 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
@@ -37,7 +37,13 @@
      * @param db        SQLiteDatabase object
      */
     public BooksDbAdapter(SQLiteDatabase db) {
-        super(db, BookEntry.TABLE_NAME);
+        super(db, BookEntry.TABLE_NAME, new String[] {
+                BookEntry.COLUMN_DISPLAY_NAME,
+                BookEntry.COLUMN_ROOT_GUID,
+                BookEntry.COLUMN_TEMPLATE_GUID,
+                BookEntry.COLUMN_SOURCE_URI,
+                BookEntry.COLUMN_ACTIVE
+        });
     }
 
     /**
@@ -66,26 +72,16 @@ public Book buildModelInstance(@NonNull Cursor cursor) {
     }
 
     @Override
-    protected SQLiteStatement compileReplaceStatement(@NonNull Book book) {
-        if (mReplaceStatement == null){
-            mReplaceStatement = mDb.compileStatement("REPLACE INTO " + BookEntry.TABLE_NAME + " ( "
-            + BookEntry.COLUMN_UID              + " , "
-            + BookEntry.COLUMN_DISPLAY_NAME     + " , "
-            + BookEntry.COLUMN_ROOT_GUID        + " , "
-            + BookEntry.COLUMN_TEMPLATE_GUID    + " , "
-            + BookEntry.COLUMN_SOURCE_URI       + " , "
-            + BookEntry.COLUMN_ACTIVE           + " ) VALUES (? , ? , ? , ? , ? , ? )");
-        }
-        mReplaceStatement.clearBindings();
-        mReplaceStatement.bindString(1, book.getUID());
-        mReplaceStatement.bindString(2, book.getDisplayName());
-        mReplaceStatement.bindString(3, book.getRootAccountUID());
-        mReplaceStatement.bindString(4, book.getRootTemplateUID());
+    protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Book book) {
+        stmt.clearBindings();
+        stmt.bindString(1, book.getDisplayName());
+        stmt.bindString(2, book.getRootAccountUID());
+        stmt.bindString(3, book.getRootTemplateUID());
         if (book.getSourceUri() != null)
-            mReplaceStatement.bindString(5, book.getSourceUri().toString());
-        mReplaceStatement.bindLong(6, book.isActive() ? 1L : 0L);
-
-        return mReplaceStatement;
+            stmt.bindString(4, book.getSourceUri().toString());
+        stmt.bindLong(5, book.isActive() ? 1L : 0L);
+        stmt.bindString(6, book.getUID());
+        return stmt;
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index 73ae1736..1bb45599 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -750,9 +750,9 @@ public void setTransactionSuccessful() {
     /// that need not be deleted, then it can be disabled temporarily
     public void enableForeignKey(boolean enable) {
         if (enable){
-            mDb.execSQL("PRAGMA foreign_keys=ON");
+            mDb.execSQL("PRAGMA foreign_keys=ON;");
         } else {
-            mDb.execSQL("PRAGMA foreign_keys=OFF");
+            mDb.execSQL("PRAGMA foreign_keys=OFF;");
         }
     }
 
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 9bd33a0b..73d8cf01 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -986,7 +986,7 @@ private void saveToDatabase() {
             Log.d(getClass().getSimpleName(), String.format("bulk insert time: %d", endTime - startTime));
 
             //if all of the import went smoothly, then add the book to the book db
-            booksDbAdapter.addRecord(mBook);
+            booksDbAdapter.addRecord(mBook, DatabaseAdapter.UpdateMethod.insert);
             mAccountsDbAdapter.setTransactionSuccessful();
         } finally {
             mAccountsDbAdapter.enableForeignKey(true);

From 76227ca6879ca5d2bf61d886408416ad35d0ba79 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Mon, 4 Jan 2016 09:38:08 +0800
Subject: [PATCH 032/121] adding adpater back, defaulting to replace

---
 .../java/org/gnucash/android/db/adapter/DatabaseAdapter.java     | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index 1bb45599..651b18c4 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -206,6 +206,9 @@ public boolean isOpen(){
      * So beware of any foreign keys with cascade dependencies which might need to be re-added</p>
      * @param model Model to be saved to the database
      */
+    public void addRecord(@NonNull final Model model){
+        addRecord(model, UpdateMethod.replace);
+    }
     public void addRecord(@NonNull final Model model, UpdateMethod updateMethod){
         Log.d(LOG_TAG, String.format("Adding %s record to database: ", model.getClass().getSimpleName()));
         switch(updateMethod){
@@ -265,9 +268,9 @@ private long doAddModels(@NonNull final List<Model> modelList, UpdateMethod upda
      * @param modelList List of model records
      * @return Number of rows inserted
      */
-    //public long bulkAddRecords(@NonNull List<Model> modelList){
-    //    return bulkAddRecords(modelList, UpdateMethod.replace);
-    //}
+    public long bulkAddRecords(@NonNull List<Model> modelList){
+        return bulkAddRecords(modelList, UpdateMethod.replace);
+    }
 
     public long bulkAddRecords(@NonNull List<Model> modelList, UpdateMethod updateMethod) {
         if (modelList.isEmpty()) {

From e339c4ed6185bdb7fb5675075c0d413274efa639 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 5 Jan 2016 10:38:23 +0100
Subject: [PATCH 033/121] Fix app crashes for new installs - due to incorrectly
 initialized variables

Move the default currency from book setting to a global one
Code refactoring - fix imports
---
 .../org/gnucash/android/test/ui/ExportTransactionsTest.java | 13 ++++---------
 .../org/gnucash/android/test/ui/PieChartReportTest.java     |  5 +----
 .../gnucash/android/test/ui/TransactionsActivityTest.java   |  6 ++----
 .../java/org/gnucash/android/app/GnuCashApplication.java    | 10 +++++-----
 .../org/gnucash/android/ui/account/AccountFormFragment.java |  3 +--
 .../org/gnucash/android/ui/account/AccountsActivity.java    |  7 ++-----
 .../android/ui/settings/AccountPreferencesFragment.java     |  2 --
 .../org/gnucash/android/ui/settings/PreferenceActivity.java |  2 +-
 .../android/ui/transaction/TransactionFormFragment.java     |  5 ++---
 .../android/ui/transaction/TransactionsListFragment.java    |  3 +--
 10 files changed, 19 insertions(+), 37 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index 0e4b4a53..05e7c17b 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -23,9 +23,7 @@
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
 import android.os.Build;
-import android.preference.PreferenceManager;
 import android.support.test.InstrumentationRegistry;
-import android.support.test.espresso.ViewAction;
 import android.support.test.espresso.contrib.DrawerActions;
 import android.support.test.espresso.matcher.ViewMatchers;
 import android.support.test.runner.AndroidJUnit4;
@@ -47,7 +45,6 @@
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.model.Account;
-import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.PeriodType;
 import org.gnucash.android.model.ScheduledAction;
@@ -66,10 +63,8 @@
 import java.util.Currency;
 import java.util.List;
 
-import static android.support.test.espresso.Espresso.onData;
 import static android.support.test.espresso.Espresso.onView;
 import static android.support.test.espresso.action.ViewActions.click;
-import static android.support.test.espresso.action.ViewActions.scrollTo;
 import static android.support.test.espresso.action.ViewActions.swipeUp;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.RootMatchers.withDecorView;
@@ -145,7 +140,7 @@ public void setUp() throws Exception {
 	 */
 	@Test
 	public void testOfxExport(){
-		SharedPreferences.Editor prefsEditor = PreferenceActivity.getBookSharedPreferences(mAcccountsActivity)
+		SharedPreferences.Editor prefsEditor = PreferenceActivity.getActiveBookSharedPreferences(mAcccountsActivity)
 				.edit();
 		prefsEditor.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), false)
 				.commit();
@@ -156,7 +151,7 @@ public void testOfxExport(){
 
 	@Test
 	public void whenInSingleEntry_shouldHideXmlExportOption(){
-		SharedPreferences.Editor prefsEditor = PreferenceActivity.getBookSharedPreferences(mAcccountsActivity)
+		SharedPreferences.Editor prefsEditor = PreferenceActivity.getActiveBookSharedPreferences(mAcccountsActivity)
 				.edit();
 		prefsEditor.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), false)
 				.commit();
@@ -225,13 +220,13 @@ public void testExport(ExportFormat format){
 	public void testDeleteTransactionsAfterExport(){
 		assertThat(mTransactionsDbAdapter.getRecordsCount()).isGreaterThan(0);
 
-		PreferenceActivity.getBookSharedPreferences(getActivity()).edit()
+		PreferenceActivity.getActiveBookSharedPreferences(getActivity()).edit()
 				.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export), true).commit();
 
 		testExport(ExportFormat.XML);
 
 		assertThat(mTransactionsDbAdapter.getRecordsCount()).isEqualTo(0);
-		PreferenceActivity.getBookSharedPreferences(getActivity()).edit()
+		PreferenceActivity.getActiveBookSharedPreferences(getActivity()).edit()
 				.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export), false).commit();
 	}
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index 518b9227..cb6970f8 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -19,7 +19,6 @@
 import android.content.Intent;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
-import android.preference.PreferenceManager;
 import android.support.test.InstrumentationRegistry;
 import android.support.test.espresso.ViewAction;
 import android.support.test.espresso.action.CoordinatesProvider;
@@ -41,9 +40,7 @@
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.importer.GncXmlImporter;
-import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
-import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
@@ -130,7 +127,7 @@ public void setUp() throws Exception {
 
         CURRENCY = new CommoditiesDbAdapter(db).getCommodity("USD");
 
-        PreferenceActivity.getBookSharedPreferences(mReportsActivity).edit()
+        PreferenceActivity.getActiveBookSharedPreferences(mReportsActivity).edit()
                 .putString(mReportsActivity.getString(R.string.key_default_currency), CURRENCY.getCurrencyCode())
                 .commit();
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 282d210c..c762c6af 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -22,9 +22,7 @@
 import android.content.SharedPreferences.Editor;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
-import android.preference.PreferenceManager;
 import android.support.test.InstrumentationRegistry;
-import android.support.test.espresso.Espresso;
 import android.support.test.runner.AndroidJUnit4;
 import android.test.ActivityInstrumentationTestCase2;
 import android.util.Log;
@@ -373,7 +371,7 @@ public void testSplitEditor(){
 
 
     private void setDoubleEntryEnabled(boolean enabled){
-        SharedPreferences prefs = PreferenceActivity.getBookSharedPreferences(getActivity());
+        SharedPreferences prefs = PreferenceActivity.getActiveBookSharedPreferences(getActivity());
         Editor editor = prefs.edit();
         editor.putBoolean(getActivity().getString(R.string.key_use_double_entry), enabled);
         editor.commit();
@@ -388,7 +386,7 @@ public void testDefaultTransactionType(){
 	}
 
 	private void setDefaultTransactionType(TransactionType type) {
-		SharedPreferences prefs = PreferenceActivity.getBookSharedPreferences(getActivity());
+		SharedPreferences prefs = PreferenceActivity.getActiveBookSharedPreferences(getActivity());
 		Editor editor = prefs.edit();
 		editor.putString(getActivity().getString(R.string.key_default_transaction_type), type.name());
 		editor.commit();
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index b125ec6c..de9841fe 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -25,8 +25,8 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.graphics.Color;
 import android.os.Build;
-import android.preference.PreferenceManager;
 import android.support.annotation.NonNull;
+import android.support.v7.preference.PreferenceManager;
 import android.util.Log;
 
 import com.crashlytics.android.Crashlytics;
@@ -243,7 +243,7 @@ public static boolean isCrashlyticsEnabled(){
      * @return <code>true</code> if double entry is enabled, <code>false</code> otherwise
      */
     public static boolean isDoubleEntryEnabled(){
-        SharedPreferences sharedPrefs = PreferenceActivity.getBookSharedPreferences(context);
+        SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences(context);
         return sharedPrefs.getBoolean(context.getString(R.string.key_use_double_entry), false);
     }
 
@@ -254,7 +254,7 @@ public static boolean isDoubleEntryEnabled(){
      * @return <code>true</code> if opening balances should be saved, <code>false</code> otherwise
      */
     public static boolean shouldSaveOpeningBalances(boolean defaultValue){
-        SharedPreferences sharedPrefs = PreferenceActivity.getBookSharedPreferences(context);
+        SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences(context);
         return sharedPrefs.getBoolean(context.getString(R.string.key_save_opening_balances), defaultValue);
     }
 
@@ -272,7 +272,7 @@ public static String getDefaultCurrencyCode(){
         Locale locale = getDefaultLocale();
 
         String currencyCode = "USD"; //start with USD as the default
-        SharedPreferences prefs = PreferenceActivity.getBookSharedPreferences(context);
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         try { //there are some strange locales out there
             currencyCode = Currency.getInstance(locale).getCurrencyCode();
         } catch (Throwable e) {
@@ -295,7 +295,7 @@ public static String getDefaultCurrencyCode(){
      * @see #getDefaultCurrencyCode()
      */
     public static void setDefaultCurrencyCode(@NonNull String currencyCode){
-        PreferenceActivity.getBookSharedPreferences(context).edit()
+        PreferenceActivity.getActiveBookSharedPreferences(context).edit()
                 .putString(getAppContext().getString(R.string.key_default_currency), currencyCode)
                 .apply();
         Money.DEFAULT_CURRENCY_CODE = currencyCode;
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index a5a4842f..abd4b71f 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -26,7 +26,6 @@
 import android.database.Cursor;
 import android.graphics.Color;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.support.design.widget.TextInputLayout;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
@@ -248,7 +247,7 @@ public void onCreate(Bundle savedInstanceState) {
 		setHasOptionsMenu(true);
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
-        SharedPreferences sharedPrefs = PreferenceActivity.getBookSharedPreferences(getActivity());
+        SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences(getActivity());
         mUseDoubleEntry = sharedPrefs.getBoolean(getString(R.string.key_use_double_entry), true);
 	}
 	
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 047af6ab..521a85c4 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -34,8 +34,6 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
-import android.support.design.widget.AppBarLayout;
 import android.support.design.widget.CoordinatorLayout;
 import android.support.design.widget.FloatingActionButton;
 import android.support.design.widget.Snackbar;
@@ -46,7 +44,7 @@
 import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
 import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
+import android.support.v7.preference.PreferenceManager;
 import android.util.Log;
 import android.util.SparseArray;
 import android.view.Menu;
@@ -68,14 +66,13 @@
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.ui.common.BaseDrawerActivity;
 import org.gnucash.android.ui.common.FormActivity;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
-import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.TaskDelegate;
 import org.gnucash.android.ui.wizard.FirstRunWizardActivity;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
 
 /**
  * Manages actions related to accounts, displaying, exporting and creating new accounts
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
index 3ce550bc..e539f3bc 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
@@ -61,8 +61,6 @@ public void onCreatePreferences(Bundle bundle, String s) {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        getPreferenceManager().setSharedPreferencesName(BooksDbAdapter.getInstance().getActiveBookUID());
-
         ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
         actionBar.setTitle(R.string.title_account_preferences);
 
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
index 0379bfc0..5e6f980e 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
@@ -145,7 +145,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
      * @param context Application context
      * @return Shared preferences file
      */
-    public static SharedPreferences getBookSharedPreferences(Context context){
+    public static SharedPreferences getActiveBookSharedPreferences(Context context){
         //// TODO: 21.12.2015 optimize the getActiveBookUID retrieval by caching it somewhere
         return context.getSharedPreferences(BooksDbAdapter.getInstance().getActiveBookUID(), Context.MODE_PRIVATE);
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 0f281ba4..c2ed7d34 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -24,7 +24,6 @@
 import android.database.Cursor;
 import android.inputmethodservice.KeyboardView;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.support.v4.app.Fragment;
 import android.support.v4.widget.SimpleCursorAdapter;
 import android.support.v7.app.ActionBar;
@@ -292,7 +291,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		setHasOptionsMenu(true);
 
-		SharedPreferences sharedPrefs = PreferenceActivity.getBookSharedPreferences(getActivity());
+		SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences(getActivity());
 		mUseDoubleEntry = sharedPrefs.getBoolean(getString(R.string.key_use_double_entry), false);
 		if (!mUseDoubleEntry){
 			mDoubleEntryLayout.setVisibility(View.GONE);
@@ -536,7 +535,7 @@ private void initalizeViews() {
 		mTime = mDate = Calendar.getInstance();
 
         mTransactionTypeSwitch.setAccountType(mAccountType);
-		String typePref = PreferenceActivity.getBookSharedPreferences(getActivity()).getString(getString(R.string.key_default_transaction_type), "DEBIT");
+		String typePref = PreferenceActivity.getActiveBookSharedPreferences(getActivity()).getString(getString(R.string.key_default_transaction_type), "DEBIT");
         mTransactionTypeSwitch.setChecked(TransactionType.valueOf(typePref));
 
 		String code = GnuCashApplication.getDefaultCurrencyCode();
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index 14484216..c6430c01 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -21,7 +21,6 @@
 import android.content.res.Configuration;
 import android.database.Cursor;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.LoaderManager.LoaderCallbacks;
@@ -96,7 +95,7 @@ public void onCreate(Bundle savedInstanceState) {
 		Bundle args = getArguments();
 		mAccountUID = args.getString(UxArgument.SELECTED_ACCOUNT_UID);
 
-		mUseCompactView = PreferenceActivity.getBookSharedPreferences(getActivity())
+		mUseCompactView = PreferenceActivity.getActiveBookSharedPreferences(getActivity())
 				.getBoolean(getActivity().getString(R.string.key_use_compact_list), !GnuCashApplication.isDoubleEntryEnabled());
 		//if there was a local override of the global setting, respect it
 		if (savedInstanceState != null)

From 95fc7786ab5b85bae3fcb66cd3c68bc9c9497e81 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 29 Dec 2015 17:21:13 +0100
Subject: [PATCH 034/121] Add more tests for deleting accounts.

Ensure to reproduce https://github.com/codinguser/gnucash-android/issues/460
---
 .../android/test/ui/AccountsActivityTest.java      | 134 ++++++++++++++++-----
 1 file changed, 106 insertions(+), 28 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 8d1bd115..1f89c039 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -71,12 +71,15 @@
 import static android.support.test.espresso.action.ViewActions.scrollTo;
 import static android.support.test.espresso.action.ViewActions.swipeRight;
 import static android.support.test.espresso.action.ViewActions.typeText;
+import static android.support.test.espresso.assertion.ViewAssertions.doesNotExist;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
+import static android.support.test.espresso.matcher.ViewMatchers.hasDescendant;
 import static android.support.test.espresso.matcher.ViewMatchers.isChecked;
 import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static android.support.test.espresso.matcher.ViewMatchers.isNotChecked;
 import static android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
+import static android.support.test.espresso.matcher.ViewMatchers.withParent;
 import static android.support.test.espresso.matcher.ViewMatchers.withText;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.hamcrest.Matchers.allOf;
@@ -87,11 +90,17 @@
 
 @RunWith(AndroidJUnit4.class)
 public class AccountsActivityTest extends ActivityInstrumentationTestCase2<AccountsActivity> {
-    private static final String DUMMY_ACCOUNT_CURRENCY_CODE = "USD";
+    private static final String ACCOUNTS_CURRENCY_CODE = "USD";
     // Don't add static here, otherwise it gets set to null by super.tearDown()
-    private final Commodity DUMMY_ACCOUNT_CURRENCY = Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE);
-    private static final String DUMMY_ACCOUNT_NAME = "Dummy account";
-    private static final String  DUMMY_ACCOUNT_UID   = "dummy-account";
+    private final Commodity ACCOUNTS_CURRENCY = Commodity.getInstance(ACCOUNTS_CURRENCY_CODE);
+    private static final String SIMPLE_ACCOUNT_NAME = "Simple account";
+    private static final String SIMPLE_ACCOUNT_UID = "simple-account";
+    private static final String ROOT_ACCOUNT_NAME = "Root account";
+    private static final String ROOT_ACCOUNT_UID = "root-account";
+    private static final String PARENT_ACCOUNT_NAME = "Parent account";
+    private static final String PARENT_ACCOUNT_UID = "parent-account";
+    private static final String CHILD_ACCOUNT_UID = "child-account";
+    private static final String CHILD_ACCOUNT_NAME = "Child account";
     public static final String TEST_DB_NAME = "test_gnucash_db.sqlite";
 
     private DatabaseHelper mDbHelper;
@@ -125,9 +134,32 @@ public void setUp() throws Exception {
         mAccountsDbAdapter      = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
         mAccountsDbAdapter.deleteAllRecords(); //clear the data
 
-        Account account = new Account(DUMMY_ACCOUNT_NAME, new CommoditiesDbAdapter(mDb).getCommodity(DUMMY_ACCOUNT_CURRENCY_CODE));
-        account.setUID(DUMMY_ACCOUNT_UID);
-		mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
+		Account simpleAccount = new Account(SIMPLE_ACCOUNT_NAME);
+        simpleAccount.setUID(SIMPLE_ACCOUNT_UID);
+		simpleAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
+		mAccountsDbAdapter.addRecord(simpleAccount, DatabaseAdapter.UpdateMethod.insert);
+
+        Account rootAccount = new Account(ROOT_ACCOUNT_NAME);
+        rootAccount.setUID(ROOT_ACCOUNT_UID);
+        rootAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
+        rootAccount.setPlaceHolderFlag(true);
+        rootAccount.setAccountType(AccountType.LIABILITY);
+        mAccountsDbAdapter.addRecord(rootAccount);
+
+        Account parentAccount = new Account(PARENT_ACCOUNT_NAME);
+        parentAccount.setUID(PARENT_ACCOUNT_UID);
+        parentAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
+        parentAccount.setAccountType(AccountType.LIABILITY);
+        parentAccount.setParentUID(ROOT_ACCOUNT_UID);
+        mAccountsDbAdapter.addRecord(parentAccount);
+
+        Account childAccount = new Account(CHILD_ACCOUNT_NAME);
+        childAccount.setUID(CHILD_ACCOUNT_UID);
+        childAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
+        childAccount.setAccountType(AccountType.LIABILITY);
+        childAccount.setParentUID(PARENT_ACCOUNT_UID);
+        mAccountsDbAdapter.addRecord(childAccount);
+
         refreshAccountsList();
     }
 
@@ -138,7 +170,7 @@ public void testPreconditions() {
         assertNotNull(mDb);
         assertNotNull(mSplitsDbAdapter);
         assertNotNull(mTransactionsDbAdapter);
-        assertNotNull(DUMMY_ACCOUNT_CURRENCY);
+        assertNotNull(ACCOUNTS_CURRENCY);
     }
 
     /**
@@ -178,7 +210,7 @@ public void testSearchAccounts(){
         String SEARCH_ACCOUNT_NAME = "Search Account";
 
         Account account = new Account(SEARCH_ACCOUNT_NAME);
-        account.setParentUID(DUMMY_ACCOUNT_UID);
+        account.setParentUID(SIMPLE_ACCOUNT_UID);
         mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
 
         //enter search query
@@ -188,7 +220,7 @@ public void testSearchAccounts(){
         onView(withText(SEARCH_ACCOUNT_NAME)).check(matches(isDisplayed()));
 
         onView(withId(R.id.search_src_text)).perform(clearText());
-        onView(withId(R.id.primary_text)).check(matches(not(withText(SEARCH_ACCOUNT_NAME))));
+        onView(withText(SEARCH_ACCOUNT_NAME)).check(doesNotExist());
     }
 
     /**
@@ -213,7 +245,7 @@ public void testCreateAccount(){
 
         List<Account> accounts = mAccountsDbAdapter.getAllRecords();
         assertThat(accounts).isNotNull();
-        assertThat(accounts).hasSize(2);
+        assertThat(accounts).hasSize(5);
         Account newestAccount = accounts.get(0); //because of alphabetical sorting
 
         assertThat(newestAccount.getName()).isEqualTo(NEW_ACCOUNT_NAME);
@@ -237,6 +269,7 @@ public void testChangeParentAccount() {
         onView(withId(R.id.checkbox_parent_account)).perform(scrollTo())
                 .check(matches(isNotChecked()))
                 .perform(click());
+        // FIXME: explicitly select the parent account
 
         onView(withId(R.id.menu_save)).perform(click());
 
@@ -244,7 +277,7 @@ public void testChangeParentAccount() {
         String parentUID = editedAccount.getParentUID();
 
         assertThat(parentUID).isNotNull();
-        assertThat(DUMMY_ACCOUNT_UID).isEqualTo(parentUID);
+        assertThat(ROOT_ACCOUNT_UID).isEqualTo(parentUID);
     }
 
     /**
@@ -254,7 +287,7 @@ public void testChangeParentAccount() {
      */
     @Test
     public void shouldHideParentAccountViewWhenNoParentsExist(){
-        onView(allOf(withText(DUMMY_ACCOUNT_NAME), isDisplayed())).perform(click());
+        onView(allOf(withText(SIMPLE_ACCOUNT_NAME), isDisplayed())).perform(click());
         onView(withId(R.id.fragment_transaction_list)).perform(swipeRight());
         onView(withId(R.id.fab_create_transaction)).check(matches(isDisplayed())).perform(click());
         sleep(1000);
@@ -274,16 +307,17 @@ public void shouldHideParentAccountViewWhenNoParentsExist(){
         onView(withId(R.id.menu_save)).perform(click());
         sleep(1000);
         //no sub-accounts
-        assertThat(mAccountsDbAdapter.getSubAccountCount(DUMMY_ACCOUNT_UID)).isEqualTo(0);
+        assertThat(mAccountsDbAdapter.getSubAccountCount(SIMPLE_ACCOUNT_UID)).isEqualTo(0);
         assertThat(mAccountsDbAdapter.getSubAccountCount(mAccountsDbAdapter.getOrCreateGnuCashRootAccountUID())).isEqualTo(2);
         assertThat(mAccountsDbAdapter.getSimpleAccountList()).extracting("mAccountType").contains(AccountType.TRADING);
     }
 
     @Test
     public void testEditAccount(){
-        String editedAccountName = "Edited Account";
+        String editedAccountName = "An Edited Account";
         sleep(2000);
-        onView(withId(R.id.options_menu)).perform(click());
+        onView(allOf(withParent(hasDescendant(withText(SIMPLE_ACCOUNT_NAME))),
+                     withId(R.id.options_menu))).perform(click());
         onView(withText(R.string.title_edit_account)).perform(click());
 
         onView(withId(R.id.fragment_account_form)).check(matches(isDisplayed()));
@@ -296,32 +330,33 @@ public void testEditAccount(){
         Account latest = accounts.get(0);  //will be the first due to alphabetical sorting
 
         assertThat(latest.getName()).isEqualTo(editedAccountName);
-        assertThat(latest.getCurrency().getCurrencyCode()).isEqualTo(DUMMY_ACCOUNT_CURRENCY_CODE);
+        assertThat(latest.getCurrency().getCurrencyCode()).isEqualTo(ACCOUNTS_CURRENCY_CODE);
     }
 
     @Test
     public void editingAccountShouldNotDeleteTransactions(){
-        onView(allOf(withId(R.id.options_menu), isDisplayed()))
-                .perform(click());
+        onView(allOf(withParent(hasDescendant(withText(SIMPLE_ACCOUNT_NAME))),
+                     withId(R.id.options_menu),
+                     isDisplayed())).perform(click());
 
         Account account = new Account("Transfer Account");
-        account.setCommodity(Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY.getCurrencyCode()));
+        account.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY.getCurrencyCode()));
         Transaction transaction = new Transaction("Simple transaction");
-        transaction.setCurrencyCode(DUMMY_ACCOUNT_CURRENCY.getCurrencyCode());
-        Split split = new Split(new Money(BigDecimal.TEN, DUMMY_ACCOUNT_CURRENCY), account.getUID());
+        transaction.setCurrencyCode(ACCOUNTS_CURRENCY.getCurrencyCode());
+        Split split = new Split(new Money(BigDecimal.TEN, ACCOUNTS_CURRENCY), account.getUID());
         transaction.addSplit(split);
-        transaction.addSplit(split.createPair(DUMMY_ACCOUNT_UID));
+        transaction.addSplit(split.createPair(SIMPLE_ACCOUNT_UID));
         account.addTransaction(transaction);
         mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
 
-        assertThat(mAccountsDbAdapter.getRecord(DUMMY_ACCOUNT_UID).getTransactionCount()).isEqualTo(1);
+        assertThat(mAccountsDbAdapter.getRecord(SIMPLE_ACCOUNT_UID).getTransactionCount()).isEqualTo(1);
         assertThat(mSplitsDbAdapter.getSplitsForTransaction(transaction.getUID())).hasSize(2);
 
         onView(withText(R.string.title_edit_account)).perform(click());
 
         onView(withId(R.id.menu_save)).perform(click());
-        assertThat(mAccountsDbAdapter.getRecord(DUMMY_ACCOUNT_UID).getTransactionCount()).isEqualTo(1);
-        assertThat(mSplitsDbAdapter.fetchSplitsForAccount(DUMMY_ACCOUNT_UID).getCount()).isEqualTo(1);
+        assertThat(mAccountsDbAdapter.getRecord(SIMPLE_ACCOUNT_UID).getTransactionCount()).isEqualTo(1);
+        assertThat(mSplitsDbAdapter.fetchSplitsForAccount(SIMPLE_ACCOUNT_UID).getCount()).isEqualTo(1);
         assertThat(mSplitsDbAdapter.getSplitsForTransaction(transaction.getUID())).hasSize(2);
 
     }
@@ -342,7 +377,8 @@ private void sleep(long millis) {
     @Test(expected = IllegalArgumentException.class)
     public void testDeleteSimpleAccount() {
         sleep(2000);
-        onView(withId(R.id.options_menu)).perform(click());
+        onView(allOf(withParent(hasDescendant(withText(SIMPLE_ACCOUNT_NAME))),
+                withId(R.id.options_menu))).perform(click());
         onView(withText(R.string.menu_delete)).perform(click());
 
         //the account has no sub-accounts
@@ -353,7 +389,49 @@ public void testDeleteSimpleAccount() {
 //        onView(withId(R.id.btn_save)).perform(click());
 
         //should throw expected exception
-        mAccountsDbAdapter.getID(DUMMY_ACCOUNT_UID);
+        mAccountsDbAdapter.getID(SIMPLE_ACCOUNT_UID);
+    }
+
+    @Test
+    public void testDeleteAccountWithSubaccounts() {
+        sleep(2000);
+        onView(withText(ROOT_ACCOUNT_NAME)).perform(click());
+        onView(allOf(withParent(hasDescendant(withText(PARENT_ACCOUNT_NAME))),
+                     withId(R.id.options_menu))).perform(click());
+        onView(withText(R.string.menu_delete)).perform(click());
+
+        onView(allOf(withParent(withId(R.id.accounts_options)),
+                     withId(R.id.radio_delete))).perform(click());
+        onView(withText(R.string.alert_dialog_ok_delete)).perform(click());
+
+        assertTrue("Parent account has not been deleted.", !accountExists(PARENT_ACCOUNT_UID));
+        assertTrue("Child account has not been deleted after deleting its parent account.",
+                   !accountExists(CHILD_ACCOUNT_UID));
+    }
+
+    @Test
+    public void testDeleteAccountMovingSubaccounts() {
+        sleep(2000);
+        onView(withText(ROOT_ACCOUNT_NAME)).perform(click());
+        onView(allOf(withParent(hasDescendant(withText(PARENT_ACCOUNT_NAME))),
+                withId(R.id.options_menu))).perform(click());
+        onView(withText(R.string.menu_delete)).perform(click());
+
+        onView(allOf(withParent(withId(R.id.accounts_options)),
+                withId(R.id.radio_move))).perform(click());
+        onView(withText(R.string.alert_dialog_ok_delete)).perform(click());
+
+        assertTrue("Parent account has not been deleted.", !accountExists(PARENT_ACCOUNT_UID));
+        assertTrue("Child account should not have been deleted.", accountExists(CHILD_ACCOUNT_UID));
+    }
+
+    private boolean accountExists(String accountId) {
+        try {
+            mAccountsDbAdapter.getID(accountId);
+            return true;
+        } catch (IllegalArgumentException e) {
+            return false;
+        }
     }
 
     //TODO: Test import of account file

From 02f266231f03873586d88d7e541fc7a44232e7a4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 4 Jan 2016 13:01:38 +0100
Subject: [PATCH 035/121] Check if there're transactions or subaccounts before
 doing anything.

Fixes https://github.com/codinguser/gnucash-android/issues/460
---
 .../org/gnucash/android/ui/account/DeleteAccountDialogFragment.java   | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
index 42df0e7d..8b8d48cb 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
@@ -214,14 +214,14 @@ public void onClick(View v) {
 
                 AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
 
-                if (mMoveTransactionsRadioButton.isChecked()){
+                if ((mTransactionCount > 0) && mMoveTransactionsRadioButton.isChecked()){
                     long targetAccountId = mTransactionsDestinationAccountSpinner.getSelectedItemId();
                     //move all the splits
                     SplitsDbAdapter.getInstance().updateRecords(DatabaseSchema.SplitEntry.COLUMN_ACCOUNT_UID + " = ?",
                             new String[]{mOriginAccountUID}, DatabaseSchema.SplitEntry.COLUMN_ACCOUNT_UID, accountsDbAdapter.getUID(targetAccountId));
                 }
 
-                if (mMoveAccountsRadioButton.isChecked()){
+                if ((mSubAccountCount > 0) && mMoveAccountsRadioButton.isChecked()){
                     long targetAccountId = mAccountsDestinationAccountSpinner.getSelectedItemId();
                     AccountsDbAdapter.getInstance().reassignDescendantAccounts(mOriginAccountUID, accountsDbAdapter.getUID(targetAccountId));
                 }

From 3d1ee928abd5c6e8a74b5c72b1d48323e3b0a065 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 5 Jan 2016 20:39:44 +0100
Subject: [PATCH 036/121] Apply code inspector suggestions.

---
 .../android/test/ui/AccountsActivityTest.java      |  6 +--
 .../ui/account/DeleteAccountDialogFragment.java    | 48 +++++++++++-----------
 2 files changed, 24 insertions(+), 30 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 1f89c039..237a569e 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -35,18 +35,14 @@
 import com.kobakei.ratethisapp.RateThisApp;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.BookDbHelper;
-import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
-import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
-import org.gnucash.android.model.Book;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
diff --git a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
index 8b8d48cb..8a0fbe9a 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
@@ -56,31 +56,29 @@
     /**
      * Spinner for selecting the account to move the transactions to
      */
-    Spinner mTransactionsDestinationAccountSpinner;
+    private Spinner mTransactionsDestinationAccountSpinner;
 
-    Spinner mAccountsDestinationAccountSpinner;
+    private Spinner mAccountsDestinationAccountSpinner;
 
     /**
      * Dialog positive button. Ok to moving the transactions
      */
-    Button mOkButton;
+    private Button mOkButton;
 
     /**
      * Cancel button
      */
-    Button mCancelButton;
+    private Button mCancelButton;
 
     /**
      * GUID of account from which to move the transactions
      */
-    String mOriginAccountUID = null;
+    private String mOriginAccountUID = null;
 
-    View mAccountOptionsView;
-    View mTransactionOptionsView;
-    RadioButton mMoveAccountsRadioButton;
-    RadioButton mMoveTransactionsRadioButton;
-    RadioButton mDeleteAccountsRadioButton;
-    RadioButton mDeleteTransactionsRadioButton;
+    private RadioButton mMoveAccountsRadioButton;
+    private RadioButton mMoveTransactionsRadioButton;
+    private RadioButton mDeleteAccountsRadioButton;
+    private RadioButton mDeleteTransactionsRadioButton;
 
     private int mTransactionCount;
     private int mSubAccountCount;
@@ -107,24 +105,24 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
         View view = inflater.inflate(R.layout.dialog_account_delete, container, false);
-        mTransactionOptionsView = view.findViewById(R.id.transactions_options);
-        ((TextView)mTransactionOptionsView.findViewById(R.id.title_content)).setText(R.string.section_header_transactions);
-        ((TextView)mTransactionOptionsView.findViewById(R.id.description)).setText(R.string.label_delete_account_transactions_description);
-        mDeleteTransactionsRadioButton = (RadioButton) mTransactionOptionsView.findViewById(R.id.radio_delete);
+        View transactionOptionsView = view.findViewById(R.id.transactions_options);
+        ((TextView) transactionOptionsView.findViewById(R.id.title_content)).setText(R.string.section_header_transactions);
+        ((TextView) transactionOptionsView.findViewById(R.id.description)).setText(R.string.label_delete_account_transactions_description);
+        mDeleteTransactionsRadioButton = (RadioButton) transactionOptionsView.findViewById(R.id.radio_delete);
         mDeleteTransactionsRadioButton.setText(R.string.label_delete_transactions);
-        mMoveTransactionsRadioButton = ((RadioButton)mTransactionOptionsView.findViewById(R.id.radio_move));
-        mTransactionsDestinationAccountSpinner = (Spinner) mTransactionOptionsView.findViewById(R.id.target_accounts_spinner);
+        mMoveTransactionsRadioButton = ((RadioButton) transactionOptionsView.findViewById(R.id.radio_move));
+        mTransactionsDestinationAccountSpinner = (Spinner) transactionOptionsView.findViewById(R.id.target_accounts_spinner);
 
-        mAccountOptionsView = view.findViewById(R.id.accounts_options);
-        ((TextView)mAccountOptionsView.findViewById(R.id.title_content)).setText(R.string.section_header_subaccounts);
-        ((TextView)mAccountOptionsView.findViewById(R.id.description)).setText(R.string.label_delete_account_subaccounts_description);
-        mDeleteAccountsRadioButton = (RadioButton) mAccountOptionsView.findViewById(R.id.radio_delete);
+        View accountOptionsView = view.findViewById(R.id.accounts_options);
+        ((TextView) accountOptionsView.findViewById(R.id.title_content)).setText(R.string.section_header_subaccounts);
+        ((TextView) accountOptionsView.findViewById(R.id.description)).setText(R.string.label_delete_account_subaccounts_description);
+        mDeleteAccountsRadioButton = (RadioButton) accountOptionsView.findViewById(R.id.radio_delete);
         mDeleteAccountsRadioButton.setText(R.string.label_delete_sub_accounts);
-        mMoveAccountsRadioButton = (RadioButton)mAccountOptionsView.findViewById(R.id.radio_move);
-        mAccountsDestinationAccountSpinner = (Spinner) mAccountOptionsView.findViewById(R.id.target_accounts_spinner);
+        mMoveAccountsRadioButton = (RadioButton) accountOptionsView.findViewById(R.id.radio_move);
+        mAccountsDestinationAccountSpinner = (Spinner) accountOptionsView.findViewById(R.id.target_accounts_spinner);
 
-        mTransactionOptionsView.setVisibility(mTransactionCount > 0 ? View.VISIBLE : View.GONE);
-        mAccountOptionsView.setVisibility(mSubAccountCount > 0 ? View.VISIBLE : View.GONE);
+        transactionOptionsView.setVisibility(mTransactionCount > 0 ? View.VISIBLE : View.GONE);
+        accountOptionsView.setVisibility(mSubAccountCount > 0 ? View.VISIBLE : View.GONE);
 
         mCancelButton = (Button) view.findViewById(R.id.btn_cancel);
         mOkButton = (Button) view.findViewById(R.id.btn_save);

From ac76ec2adeabc31c8b394535cfaa6e718f07f460 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 6 Jan 2016 14:26:35 +0100
Subject: [PATCH 037/121] Fix CI builds failing due to proguard enabled Make
 default currency a global setting (and not per book)

TODO: figure out how to enable & configure proguard properly
---
 app/build.gradle                                        |  2 +-
 .../org/gnucash/android/app/GnuCashApplication.java     |  2 +-
 .../android/db/adapter/BudgetAmountsDbAdapter.java      |  4 ++--
 .../org/gnucash/android/db/adapter/DatabaseAdapter.java | 17 ++++++++++++++---
 .../android/test/unit/db/AccountsDbAdapterTest.java     |  5 ++++-
 build.gradle                                            |  2 +-
 6 files changed, 23 insertions(+), 9 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 1def8805..10e916a8 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -81,7 +81,7 @@ android {
     buildTypes {
         //todo re-enable proguard and test coverage
         release {
-            minifyEnabled true
+            //minifyEnabled true
             shrinkResources true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
             if (project.hasProperty("RELEASE_STORE_FILE")){
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index de9841fe..5dc0b6c0 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -295,7 +295,7 @@ public static String getDefaultCurrencyCode(){
      * @see #getDefaultCurrencyCode()
      */
     public static void setDefaultCurrencyCode(@NonNull String currencyCode){
-        PreferenceActivity.getActiveBookSharedPreferences(context).edit()
+        PreferenceManager.getDefaultSharedPreferences(context).edit()
                 .putString(getAppContext().getString(R.string.key_default_currency), currencyCode)
                 .apply();
         Money.DEFAULT_CURRENCY_CODE = currencyCode;
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java
index a698659d..069168d5 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BudgetAmountsDbAdapter.java
@@ -77,8 +77,8 @@ public BudgetAmount buildModelInstance(@NonNull Cursor cursor) {
         stmt.bindString(2, budgetAmount.getAccountUID());
         stmt.bindLong(3, budgetAmount.getAmount().getNumerator());
         stmt.bindLong(4, budgetAmount.getAmount().getDenominator());
-        stmt.bindLong(6, budgetAmount.getPeriodNum());
-        stmt.bindString(7, budgetAmount.getUID());
+        stmt.bindLong(5, budgetAmount.getPeriodNum());
+        stmt.bindString(6, budgetAmount.getUID());
 
         return stmt;
     }
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index 651b18c4..4022bd7a 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -209,6 +209,13 @@ public boolean isOpen(){
     public void addRecord(@NonNull final Model model){
         addRecord(model, UpdateMethod.replace);
     }
+
+    /**
+     * Add a model record to the database.
+     * <p>If unsure about which {@code updateMethod} to use, use {@link UpdateMethod#replace}</p>
+     * @param model Subclass of {@link BaseModel} to be added
+     * @param updateMethod Method to use for adding the record
+     */
     public void addRecord(@NonNull final Model model, UpdateMethod updateMethod){
         Log.d(LOG_TAG, String.format("Adding %s record to database: ", model.getClass().getSimpleName()));
         switch(updateMethod){
@@ -306,10 +313,8 @@ public long bulkAddRecords(@NonNull List<Model> modelList, UpdateMethod updateMe
      * This statement can be executed to replace a record in the database.
      * <p>If the {@link #mReplaceStatement} is null, subclasses should create a new statement and return.<br/>
      * If it is not null, the previous bindings will be cleared and replaced with those from the model</p>
-     * @param model Model whose attributes will be used as bindings
      * @return SQLiteStatement for replacing a record in the database
      */
-
     protected final @NonNull SQLiteStatement getReplaceStatement() {
         SQLiteStatement stmt = mReplaceStatement;
         if (stmt == null) {
@@ -365,7 +370,13 @@ public long bulkAddRecords(@NonNull List<Model> modelList, UpdateMethod updateMe
         return stmt;
     }
 
-    protected abstract @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Model Model);
+    /**
+     * Binds the values from the model the the SQL statement
+     * @param stmt SQL statement with placeholders
+     * @param model Model from which to read bind attributes
+     * @return SQL statement ready for execution
+     */
+    protected abstract @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Model model);
 
     /**
      * Returns a model instance populated with data from the record with GUID {@code uid}
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
index ed356eff..3361b82a 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
@@ -12,6 +12,7 @@
 import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;
 import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.PricesDbAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
@@ -34,6 +35,7 @@
 import org.gnucash.android.test.unit.util.ShadowCrashlytics;
 import org.gnucash.android.test.unit.util.ShadowUserVoice;
 import org.junit.After;
+import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -436,12 +438,13 @@ public void editingAccountShouldNotDeleteTemplateSplits(){
 
         mTransactionsDbAdapter.addRecord(transaction);
         List<Transaction> transactions = mTransactionsDbAdapter.getAllRecords();
+        assertThat(transactions).hasSize(1);
 
         assertThat(mTransactionsDbAdapter.getScheduledTransactionsForAccount(account.getUID())).hasSize(1);
 
         //edit the account
         account.setName("Edited account");
-        mAccountsDbAdapter.addRecord(account);
+        mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.update);
 
         assertThat(mTransactionsDbAdapter.getScheduledTransactionsForAccount(account.getUID())).hasSize(1);
         assertThat(mSplitsDbAdapter.getSplitsForTransaction(transaction.getUID())).hasSize(2);
diff --git a/build.gradle b/build.gradle
index 8d339c5b..ab63b8ab 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,7 @@ buildscript {
 	}
 	dependencies {
 		classpath 'com.android.tools.build:gradle:1.5.0'
-		classpath 'io.fabric.tools:gradle:1.21.0'
+		classpath 'io.fabric.tools:gradle:1.21.2'
 	}
 }
 

From bb9637f97c3d81e6b5507ab7b042e47dbfa898eb Mon Sep 17 00:00:00 2001
From: smisger <sameer.misger@prospectasoftware.com>
Date: Fri, 19 Feb 2016 12:40:57 +0530
Subject: [PATCH 038/121] Fixing squid:UselessParenthesesCheck-Useless
 parentheses around expressions should be removed to prevent any
 misunderstanding

---
 .../main/java/org/gnucash/android/ui/account/AccountFormFragment.java | 2 +-
 .../org/gnucash/android/ui/account/DeleteAccountDialogFragment.java   | 2 +-
 .../java/org/gnucash/android/ui/colorpicker/ColorPickerPalette.java   | 2 +-
 .../main/java/org/gnucash/android/ui/report/BaseReportFragment.java   | 4 ++--
 .../org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java     | 2 +-
 .../org/gnucash/android/ui/transaction/TransactionFormFragment.java   | 2 +-
 6 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index b1099de5..f0fb0c25 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -218,7 +218,7 @@
         @Override
         public void onColorSelected(int color) {
             mColorSquare.setBackgroundColor(color);
-            mSelectedColor = String.format("#%06X", (0xFFFFFF & color));
+            mSelectedColor = String.format("#%06X", 0xFFFFFF & color);
         }
     };
 
diff --git a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
index 8a0fbe9a..d2d6d773 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
@@ -110,7 +110,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
         ((TextView) transactionOptionsView.findViewById(R.id.description)).setText(R.string.label_delete_account_transactions_description);
         mDeleteTransactionsRadioButton = (RadioButton) transactionOptionsView.findViewById(R.id.radio_delete);
         mDeleteTransactionsRadioButton.setText(R.string.label_delete_transactions);
-        mMoveTransactionsRadioButton = ((RadioButton) transactionOptionsView.findViewById(R.id.radio_move));
+        mMoveTransactionsRadioButton = (RadioButton) transactionOptionsView.findViewById(R.id.radio_move);
         mTransactionsDestinationAccountSpinner = (Spinner) transactionOptionsView.findViewById(R.id.target_accounts_spinner);
 
         View accountOptionsView = view.findViewById(R.id.accounts_options);
diff --git a/app/src/main/java/org/gnucash/android/ui/colorpicker/ColorPickerPalette.java b/app/src/main/java/org/gnucash/android/ui/colorpicker/ColorPickerPalette.java
index 7a5c0572..346430c7 100644
--- a/app/src/main/java/org/gnucash/android/ui/colorpicker/ColorPickerPalette.java
+++ b/app/src/main/java/org/gnucash/android/ui/colorpicker/ColorPickerPalette.java
@@ -148,7 +148,7 @@ private void setSwatchDescription(int rowNumber, int index, int rowElements, boo
             accessibilityIndex = index;
         } else {
             // We're in a backwards-ordered row.
-            int rowMax = ((rowNumber + 1) * mNumColumns);
+            int rowMax = (rowNumber + 1) * mNumColumns;
             accessibilityIndex = rowMax - rowElements;
         }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
index 5eae669b..6cb6c9f4 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
@@ -244,7 +244,7 @@ protected int getDateDiff(LocalDateTime start, LocalDateTime end) {
         switch (mGroupInterval) {
             case QUARTER:
                 int y = Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
-                return (getQuarter(end) - getQuarter(start) + y * 4);
+                return getQuarter(end) - getQuarter(start) + y * 4;
             case MONTH:
                 return Months.monthsBetween(start.withDayOfMonth(1).withMillisOfDay(0), end.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
             case YEAR:
@@ -261,7 +261,7 @@ protected int getDateDiff(LocalDateTime start, LocalDateTime end) {
      * @return a quarter
      */
     protected int getQuarter(LocalDateTime date) {
-        return ((date.getMonthOfYear() - 1) / 3 + 1);
+        return (date.getMonthOfYear() - 1) / 3 + 1;
     }
 
 
diff --git a/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java b/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
index 7a9ff83c..7321f945 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
@@ -145,7 +145,7 @@ private void loadAccountViews(List<AccountType> accountTypes, TableLayout tableL
             Money balance = mAccountsDbAdapter.getAccountBalance(accountUID);
             View view = inflater.inflate(R.layout.row_balance_sheet, tableLayout, false);
             ((TextView)view.findViewById(R.id.account_name)).setText(name);
-            TextView balanceTextView = ((TextView) view.findViewById(R.id.account_balance));
+            TextView balanceTextView = (TextView) view.findViewById(R.id.account_balance);
             TransactionsActivity.displayBalance(balanceTextView, balance);
             tableLayout.addView(view);
         }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index f3f0d6cf..3cbda6f7 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -263,7 +263,7 @@ public void onClick(View v) {
     private void startTransferFunds() {
         Currency fromCurrency = Currency.getInstance(mTransactionsDbAdapter.getAccountCurrencyCode(mAccountUID));
         long id = mTransferAccountSpinner.getSelectedItemId();
-        String targetCurrency = mAccountsDbAdapter.getCurrencyCode((mAccountsDbAdapter.getUID(id)));
+        String targetCurrency = mAccountsDbAdapter.getCurrencyCode(mAccountsDbAdapter.getUID(id));
 
         if (fromCurrency.equals(Currency.getInstance(targetCurrency))
                 || !mAmountEditText.isInputModified()

From 4f29bcb44585b379f253774bf5a6340ecfb77381 Mon Sep 17 00:00:00 2001
From: Felipe Morato <me@fmorato.com>
Date: Mon, 29 Feb 2016 00:58:12 -0300
Subject: [PATCH 039/121] ownCloud Tests - Open Dialog

---
 .../android/test/ui/OwnCloudExportTest.java        | 109 +++++++++++++++++++++
 1 file changed, 109 insertions(+)
 create mode 100644 app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
new file mode 100644
index 00000000..83bfae54
--- /dev/null
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
@@ -0,0 +1,109 @@
+/*
+ * Copyright (c) 2016 Felipe Morato <me@fmorato.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.test.ui;
+
+import android.database.SQLException;
+import android.database.sqlite.SQLiteDatabase;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+import android.test.ActivityInstrumentationTestCase2;
+import android.util.Log;
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.*;
+import org.gnucash.android.model.Account;
+import org.gnucash.android.model.Money;
+import org.gnucash.android.model.Split;
+import org.gnucash.android.model.Transaction;
+import org.gnucash.android.ui.settings.PreferenceActivity;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import java.util.Currency;
+
+import static android.support.test.espresso.Espresso.onView;
+import static android.support.test.espresso.Espresso.pressBack;
+import static android.support.test.espresso.action.ViewActions.click;
+import static android.support.test.espresso.assertion.ViewAssertions.matches;
+import static android.support.test.espresso.matcher.ViewMatchers.*;
+
+
+@RunWith(AndroidJUnit4.class)
+public class OwnCloudExportTest extends ActivityInstrumentationTestCase2<PreferenceActivity> {
+
+    private PreferenceActivity mPreferenceActivity;
+
+    public OwnCloudExportTest() { super(PreferenceActivity.class); }
+
+    @Override
+	@Before
+	public void setUp() throws Exception {
+        super.setUp();
+		injectInstrumentation(InstrumentationRegistry.getInstrumentation());
+		AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext());
+
+        mPreferenceActivity = getActivity();
+
+        // creates Account and transaction
+        String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
+        DatabaseHelper mDbHelper = new DatabaseHelper(getActivity(), activeBookUID);
+        SQLiteDatabase mDb;
+        try {
+            mDb = mDbHelper.getWritableDatabase();
+        } catch (SQLException e) {
+            Log.e(getClass().getName(), "Error getting database: " + e.getMessage());
+            mDb = mDbHelper.getReadableDatabase();
+        }
+        SplitsDbAdapter mSplitsDbAdapter;
+        mSplitsDbAdapter = new SplitsDbAdapter(mDb);
+        TransactionsDbAdapter mTransactionsDbAdapter = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
+        AccountsDbAdapter mAccountsDbAdapter = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
+        mAccountsDbAdapter.deleteAllRecords();
+
+        String currencyCode = GnuCashApplication.getDefaultCurrencyCode();
+        Account account = new Account("ownCloud", new CommoditiesDbAdapter(mDb).getCommodity(currencyCode));
+        Transaction transaction = new Transaction("birds");
+        transaction.setTime(System.currentTimeMillis());
+        Split split = new Split(new Money("11.11", currencyCode), account.getUID());
+        transaction.addSplit(split);
+        transaction.addSplit(split.createPair(mAccountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance(currencyCode))));
+        account.addTransaction(transaction);
+
+        mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
+
+    }
+
+    @Test
+    public void OpenOwnCloudDialog() {
+        pressBack(); // The activity automatically opens General Settings. . let's go back first
+        onView(withText("Backup & export")).perform(click());
+        onView(withText("ownCloud Sync")).perform(click());
+        onView(withId(R.id.owncloud_hostname)).check(matches(isDisplayed()));
+    }
+
+
+    @After
+    public void tearDown() throws Exception {
+        mPreferenceActivity.finish();
+        super.tearDown();
+    }
+
+}
+

From 7832759bf3b5fe409ef2a1150e80ce5863336f03 Mon Sep 17 00:00:00 2001
From: Felipe Morato <me@fmorato.com>
Date: Mon, 29 Feb 2016 00:59:37 -0300
Subject: [PATCH 040/121] ownCloud Tests - Save credentials

---
 .../android/test/ui/OwnCloudExportTest.java        | 44 +++++++++++++++++++++-
 1 file changed, 42 insertions(+), 2 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
index 83bfae54..4d154ad1 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
@@ -16,6 +16,8 @@
 
 package org.gnucash.android.test.ui;
 
+import android.content.Context;
+import android.content.SharedPreferences;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
 import android.support.test.InstrumentationRegistry;
@@ -40,7 +42,7 @@
 
 import static android.support.test.espresso.Espresso.onView;
 import static android.support.test.espresso.Espresso.pressBack;
-import static android.support.test.espresso.action.ViewActions.click;
+import static android.support.test.espresso.action.ViewActions.*;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.ViewMatchers.*;
 
@@ -49,6 +51,7 @@
 public class OwnCloudExportTest extends ActivityInstrumentationTestCase2<PreferenceActivity> {
 
     private PreferenceActivity mPreferenceActivity;
+    private SharedPreferences mPrefs;
 
     public OwnCloudExportTest() { super(PreferenceActivity.class); }
 
@@ -98,12 +101,49 @@ public void OpenOwnCloudDialog() {
         onView(withId(R.id.owncloud_hostname)).check(matches(isDisplayed()));
     }
 
+    @Test
+    public void SetOwnCloudCredentials() {
+        pressBack(); // The activity automatically opens General Settings. . let's go back first
+        onView(withText("Backup & export")).perform(click());
+        onView(withText("ownCloud Sync")).perform(click());
+        onView(withId(R.id.owncloud_hostname)).check(matches(isDisplayed()));
+
+        String OC_SERVER = "https://demo.owncloud.org";
+        String OC_USERNAME = "test";
+        String OC_PASSWORD = "test";
+        String OC_DIR = "gc_test";
+
+        onView(withId(R.id.owncloud_hostname)).perform(clearText()).perform(typeText(OC_SERVER), closeSoftKeyboard());
+        onView(withId(R.id.owncloud_username)).perform(clearText()).perform(typeText(OC_USERNAME), closeSoftKeyboard());
+        onView(withId(R.id.owncloud_password)).perform(clearText()).perform(typeText(OC_PASSWORD), closeSoftKeyboard());
+        onView(withId(R.id.owncloud_dir)).perform(clearText()).perform(typeText(OC_DIR), closeSoftKeyboard());
+        onView(withId(R.id.btn_save)).perform(click());
+        sleep(5000);
+        onView(withId(R.id.btn_save)).perform(click());
+
+        mPrefs = mPreferenceActivity.getSharedPreferences(mPreferenceActivity.getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
+        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_server), null), OC_SERVER);
+        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_username), null), OC_USERNAME);
+        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_password), null), OC_PASSWORD);
+        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_dir), null), OC_DIR);
+
+    }
 
     @After
     public void tearDown() throws Exception {
         mPreferenceActivity.finish();
         super.tearDown();
     }
-
+    /**
+     * Sleep the thread for a specified period
+     * @param millis Duration to sleep in milliseconds
+     */
+    private void sleep(long millis) {
+        try {
+            Thread.sleep(millis);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+    }
 }
 

From 64dc95161301e171ed606915feabb0e3ceeac82a Mon Sep 17 00:00:00 2001
From: Felipe Morato <me@fmorato.com>
Date: Fri, 4 Mar 2016 01:21:55 -0300
Subject: [PATCH 041/121] Tests Export to ownCloud.

---
 .../android/test/ui/OwnCloudExportTest.java        | 128 ++++++++++++++-------
 1 file changed, 88 insertions(+), 40 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
index 4d154ad1..4bff7ede 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
@@ -20,7 +20,8 @@
 import android.content.SharedPreferences;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
-import android.support.test.InstrumentationRegistry;
+import android.support.test.espresso.contrib.DrawerActions;
+import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
 import android.test.ActivityInstrumentationTestCase2;
 import android.util.Log;
@@ -32,41 +33,68 @@
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
-import org.gnucash.android.ui.settings.PreferenceActivity;
-import org.junit.After;
+import org.gnucash.android.ui.account.AccountsActivity;
 import org.junit.Before;
+import org.junit.FixMethodOrder;
+import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.junit.runners.MethodSorters;
 
 import java.util.Currency;
 
+import static android.support.test.InstrumentationRegistry.getInstrumentation;
 import static android.support.test.espresso.Espresso.onView;
-import static android.support.test.espresso.Espresso.pressBack;
 import static android.support.test.espresso.action.ViewActions.*;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
+import static android.support.test.espresso.matcher.RootMatchers.withDecorView;
 import static android.support.test.espresso.matcher.ViewMatchers.*;
+import static junit.framework.Assert.assertEquals;
+import static junit.framework.Assert.assertTrue;
+import static org.gnucash.android.test.ui.AccountsActivityTest.preventFirstRunDialogs;
+import static org.hamcrest.Matchers.is;
+import static org.hamcrest.Matchers.not;
 
 
 @RunWith(AndroidJUnit4.class)
-public class OwnCloudExportTest extends ActivityInstrumentationTestCase2<PreferenceActivity> {
+@FixMethodOrder(MethodSorters.NAME_ASCENDING)
+public class OwnCloudExportTest {
 
-    private PreferenceActivity mPreferenceActivity;
+    private AccountsActivity mAccountsActivity;
     private SharedPreferences mPrefs;
 
-    public OwnCloudExportTest() { super(PreferenceActivity.class); }
+    private String OC_SERVER = "https://demo.owncloud.org";
+    private String OC_USERNAME = "test";
+    private String OC_PASSWORD = "test";
+    private String OC_DIR = "gc_test";
 
-    @Override
-	@Before
-	public void setUp() throws Exception {
-        super.setUp();
-		injectInstrumentation(InstrumentationRegistry.getInstrumentation());
-		AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext());
+    /**
+     * A JUnit {@link Rule @Rule} to launch your activity under test. This is a replacement
+     * for {@link ActivityInstrumentationTestCase2}.
+     * <p>
+     * Rules are interceptors which are executed for each test method and will run before
+     * any of your setup code in the {@link Before @Before} method.
+     * <p>
+     * {@link ActivityTestRule} will create and launch of the activity for you and also expose
+     * the activity under test. To get a reference to the activity you can use
+     * the {@link ActivityTestRule#getActivity()} method.
+     */
+    @Rule
+    public ActivityTestRule<AccountsActivity> mActivityRule = new ActivityTestRule<>(
+            AccountsActivity.class);
+
+    @Before
+    public void setUp() throws Exception {
 
-        mPreferenceActivity = getActivity();
+        mAccountsActivity = mActivityRule.getActivity();
+        mPrefs = mAccountsActivity.getSharedPreferences(
+                mAccountsActivity.getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
+
+        preventFirstRunDialogs(getInstrumentation().getTargetContext());
 
         // creates Account and transaction
         String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
-        DatabaseHelper mDbHelper = new DatabaseHelper(getActivity(), activeBookUID);
+        DatabaseHelper mDbHelper = new DatabaseHelper(mAccountsActivity, activeBookUID);
         SQLiteDatabase mDb;
         try {
             mDb = mDbHelper.getWritableDatabase();
@@ -86,33 +114,32 @@ public void setUp() throws Exception {
         transaction.setTime(System.currentTimeMillis());
         Split split = new Split(new Money("11.11", currencyCode), account.getUID());
         transaction.addSplit(split);
-        transaction.addSplit(split.createPair(mAccountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance(currencyCode))));
+        transaction.addSplit(split.createPair(
+                mAccountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance(currencyCode))));
         account.addTransaction(transaction);
 
         mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
 
-    }
 
-    @Test
-    public void OpenOwnCloudDialog() {
-        pressBack(); // The activity automatically opens General Settings. . let's go back first
-        onView(withText("Backup & export")).perform(click());
-        onView(withText("ownCloud Sync")).perform(click());
-        onView(withId(R.id.owncloud_hostname)).check(matches(isDisplayed()));
+        SharedPreferences.Editor editor = mPrefs.edit();
+
+        editor.putBoolean(mAccountsActivity.getString(R.string.key_owncloud_sync), false).apply();
+        editor.putInt(mAccountsActivity.getString(R.string.key_last_export_destination), 0);
+        editor.apply();
     }
 
+    /**
+     * It might fail if it takes too long to connect to the server or if there is no network
+     */
     @Test
-    public void SetOwnCloudCredentials() {
-        pressBack(); // The activity automatically opens General Settings. . let's go back first
-        onView(withText("Backup & export")).perform(click());
+    public void OwnCloudCredentials() {
+        onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
+        onView(withId(R.id.nav_view)).perform(swipeUp());
+        onView(withText(R.string.title_settings)).perform(click());
+        onView(withText(R.string.header_backup_and_export_settings)).perform(click());
         onView(withText("ownCloud Sync")).perform(click());
         onView(withId(R.id.owncloud_hostname)).check(matches(isDisplayed()));
 
-        String OC_SERVER = "https://demo.owncloud.org";
-        String OC_USERNAME = "test";
-        String OC_PASSWORD = "test";
-        String OC_DIR = "gc_test";
-
         onView(withId(R.id.owncloud_hostname)).perform(clearText()).perform(typeText(OC_SERVER), closeSoftKeyboard());
         onView(withId(R.id.owncloud_username)).perform(clearText()).perform(typeText(OC_USERNAME), closeSoftKeyboard());
         onView(withId(R.id.owncloud_password)).perform(clearText()).perform(typeText(OC_PASSWORD), closeSoftKeyboard());
@@ -121,18 +148,39 @@ public void SetOwnCloudCredentials() {
         sleep(5000);
         onView(withId(R.id.btn_save)).perform(click());
 
-        mPrefs = mPreferenceActivity.getSharedPreferences(mPreferenceActivity.getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
-        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_server), null), OC_SERVER);
-        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_username), null), OC_USERNAME);
-        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_password), null), OC_PASSWORD);
-        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_dir), null), OC_DIR);
+        assertEquals(mPrefs.getString(mAccountsActivity.getString(R.string.key_owncloud_server), null), OC_SERVER);
+        assertEquals(mPrefs.getString(mAccountsActivity.getString(R.string.key_owncloud_username), null), OC_USERNAME);
+        assertEquals(mPrefs.getString(mAccountsActivity.getString(R.string.key_owncloud_password), null), OC_PASSWORD);
+        assertEquals(mPrefs.getString(mAccountsActivity.getString(R.string.key_owncloud_dir), null), OC_DIR);
+
+        assertTrue(mPrefs.getBoolean(mAccountsActivity.getString(R.string.key_owncloud_sync), false));
+    }
 
+    @Test
+    public void OwnCloudExport() {
+
+        mPrefs.edit().putBoolean(mAccountsActivity.getString(R.string.key_owncloud_sync), true).commit();
+
+        onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
+        onView(withText(R.string.nav_menu_export)).perform(click());
+        onView(withId(R.id.spinner_export_destination)).perform(click());
+        String[] destinations = mAccountsActivity.getResources().getStringArray(R.array.export_destinations);
+        onView(withText(destinations[3])).perform(click());
+        onView(withId(R.id.menu_save)).perform(click());
+//        onView(withSpinnerText(
+//                mAccountsActivity.getResources().getStringArray(R.array.export_destinations)[3]))
+//                .perform(click());
+        assertToastDisplayed(String.format(mAccountsActivity.getString(R.string.toast_exported_to), "ownCloud -> " + OC_DIR));
     }
 
-    @After
-    public void tearDown() throws Exception {
-        mPreferenceActivity.finish();
-        super.tearDown();
+    /**
+     * Checks that a specific toast message is displayed
+     * @param toastString String that should be displayed
+     */
+    private void assertToastDisplayed(String toastString) {
+        onView(withText(toastString))
+                .inRoot(withDecorView(not(is(mActivityRule.getActivity().getWindow().getDecorView()))))
+                .check(matches(isDisplayed()));
     }
     /**
      * Sleep the thread for a specified period

From 4a34625499862ce17b29c02e26a3e3a8296037f0 Mon Sep 17 00:00:00 2001
From: Aleksey Ivanovski <alexei.ivanovski@gmail.com>
Date: Mon, 11 Apr 2016 23:54:36 +0300
Subject: [PATCH 042/121] Fix bug that caused displaying identical fragments
 inside ViewPager in main screen.

---
 .../gnucash/android/ui/account/AccountsListFragment.java   | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 913714c7..0b9d2fbc 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -105,6 +105,11 @@
      */
     protected static final String TAG = "AccountsListFragment";
 
+	/**
+	 * Tag to save {@link AccountsListFragment#mDisplayMode} to fragment state
+     */
+    private static final String STATE_DISPLAY_MODE = "mDisplayMode";
+
     /**
      * Database adapter for loading Account records from the database
      */
@@ -176,6 +181,9 @@ public void onCreate(Bundle savedInstanceState) {
         Bundle args = getArguments();
         if (args != null)
             mParentAccountUID = args.getString(UxArgument.PARENT_ACCOUNT_UID);
+
+        if (savedInstanceState != null)
+            mDisplayMode = (DisplayMode) savedInstanceState.getSerializable(STATE_DISPLAY_MODE);
     }
 
     @Override
@@ -295,6 +303,12 @@ public void refresh() {
         getLoaderManager().restartLoader(0, null, this);
     }
 
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+        outState.putSerializable(STATE_DISPLAY_MODE, mDisplayMode);
+    }
+
     /**
      * Closes any open database adapters used by the list
      */

From 11463b324526a70144add59bd153bc18e64e5fb8 Mon Sep 17 00:00:00 2001
From: Aleksey Ivanovski <alexei.ivanovski@gmail.com>
Date: Tue, 12 Apr 2016 00:21:54 +0300
Subject: [PATCH 043/121] Tabs are removed.

---
 .../java/org/gnucash/android/ui/account/AccountsListFragment.java     | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 0b9d2fbc..35369433 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -105,8 +105,8 @@
      */
     protected static final String TAG = "AccountsListFragment";
 
-	/**
-	 * Tag to save {@link AccountsListFragment#mDisplayMode} to fragment state
+    /**
+     * Tag to save {@link AccountsListFragment#mDisplayMode} to fragment state
      */
     private static final String STATE_DISPLAY_MODE = "mDisplayMode";
 

From fd5fe1e68c6676f4bb7865c3d0edce5dc6add20a Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 18 Apr 2016 17:47:27 +0200
Subject: [PATCH 044/121] Upgrade build tools to 2.0.0 and gradle version to
 v2.10

---
 app/build.gradle                         | 2 +-
 build.gradle                             | 2 +-
 gradle/wrapper/gradle-wrapper.properties | 4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index ba3f4225..95ad628c 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -21,7 +21,7 @@ def gitSha() {
 
 android {
     compileSdkVersion 23
-    buildToolsVersion '23.0.2'
+    buildToolsVersion '23.0.3'
     defaultConfig {
         applicationId "org.gnucash.android"
         testApplicationId 'org.gnucash.android.test'
diff --git a/build.gradle b/build.gradle
index ab63b8ab..0049c0f5 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
 		jcenter()
 	}
 	dependencies {
-		classpath 'com.android.tools.build:gradle:1.5.0'
+		classpath 'com.android.tools.build:gradle:2.0.0'
 		classpath 'io.fabric.tools:gradle:1.21.2'
 	}
 }
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index ffc4f428..703e4c4f 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Tue Nov 24 14:46:11 CET 2015
+#Mon Apr 18 17:32:46 CEST 2016
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.9-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip

From 4e1b1a868385fff52f58166b10908c1c52415ef0 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 19 Apr 2016 08:47:52 +0200
Subject: [PATCH 045/121] Update Travis CI build tools version

---
 .travis.yml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/.travis.yml b/.travis.yml
index 08f38141..a66c8696 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -4,7 +4,7 @@ android:
   components:
     - platform-tools
     - tools
-    - build-tools-23.0.2
+    - build-tools-23.0.3
 
     # The SDK version used to compile your project
     - android-23

From 3cb65fc5a4e8bffc95f6b689e3378bc2778e602a Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 28 Apr 2016 14:38:03 +0200
Subject: [PATCH 046/121] Start work on improving tests in a multi-book world

Fix disabling of animation during execution of tests
Fix execution of tests on multiple devices in parallel
---
 app/build.gradle                                   |  47 +++---
 .../android/test/ui/AccountsActivityTest.java      | 187 ++++++++++++---------
 .../test/ui/util/DisableAnimationsRule.java        |  59 +++++++
 .../ui/{ => util}/GnucashAndroidTestRunner.java    |   2 +-
 .../android/db/adapter/AccountsDbAdapter.java      |   1 +
 .../android/ui/account/AccountFormFragment.java    |  10 +-
 .../android/ui/account/AccountsActivity.java       |   8 +-
 app/src/main/res/layout/cardview_account.xml       |   2 +-
 scripts/adb_all.bat                                |  24 +++
 scripts/adb_all.sh                                 |  20 +++
 10 files changed, 257 insertions(+), 103 deletions(-)
 create mode 100644 app/src/androidTest/java/org/gnucash/android/test/ui/util/DisableAnimationsRule.java
 rename app/src/androidTest/java/org/gnucash/android/test/ui/{ => util}/GnucashAndroidTestRunner.java (99%)
 create mode 100644 scripts/adb_all.bat
 create mode 100644 scripts/adb_all.sh

diff --git a/app/build.gradle b/app/build.gradle
index 95ad628c..f0d0bed0 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -1,4 +1,5 @@
 import java.text.SimpleDateFormat
+import org.apache.tools.ant.taskdefs.condition.Os
 
 apply plugin: 'com.android.application'
 apply plugin: 'io.fabric'
@@ -43,7 +44,7 @@ android {
             resValue "string", "dropbox_app_secret", "h2t9fphj3nr4wkw"
             resValue "string", "manifest_dropbox_app_key", "db-dhjh8ke9wf05948"
         }
-        testInstrumentationRunner "org.gnucash.android.test.ui.GnucashAndroidTestRunner"
+        testInstrumentationRunner "org.gnucash.android.test.ui.util.GnucashAndroidTestRunner"
 
     }
 
@@ -145,27 +146,32 @@ def initCrashlyticsPropertiesIfNeeded() {
     }
 }
 
-def adb = android.getAdbExe().toString()
+def adb = Os.isFamily(Os.FAMILY_WINDOWS) ? "..\\scripts\\adb_all.bat" : "../scripts/adb_all.sh"
+//def adb = android.getAdbExe().toString()
 
 afterEvaluate {
     initCrashlyticsPropertiesIfNeeded()
 
     task grantTestPermissionsDevel(type: Exec, dependsOn: 'installDevelopmentDebug') { // or install{productFlavour}{buildType}
-        commandLine "$adb", 'devices'
-        standardOutput = new ByteArrayOutputStream()
-
-        String output = standardOutput.toString()
-        output.eachLine {
-            def serial = it.split("\\s")[0]
-            commandLine "$adb -s $serial shell pm grant $android.productFlavors.development.applicationId android.permission.SET_ANIMATION_SCALE".split(' ')
-            commandLine "$adb -s $serial shell pm grant $android.productFlavors.development.applicationId android.permission.WRITE_EXTERNAL_STORAGE".split(' ')
+        if (Os.isFamily(Os.FAMILY_WINDOWS)){
+            commandLine "cmd", "/c", "$adb", "shell pm grant $android.productFlavors.development.applicationId android.permission.SET_ANIMATION_SCALE"
+//            commandLine "cmd", "/c", "$adb", "shell pm grant $android.productFlavors.development.applicationId android.permission.WRITE_EXTERNAL_STORAGE"
+        } else {
+            commandLine "$adb shell pm grant $android.productFlavors.development.applicationId android.permission.SET_ANIMATION_SCALE".split(' ')
+//            commandLine "$adb shell pm grant $android.productFlavors.development.applicationId android.permission.WRITE_EXTERNAL_STORAGE".split(' ')
         }
     }
 
     task grantTestPermissionsProduction(type: Exec, dependsOn: 'installProductionDebug'){
-        commandLine "$adb -e shell pm grant $android.defaultConfig.applicationId android.permission.SET_ANIMATION_SCALE".split(' ')
-        commandLine "$adb -e shell pm grant $android.defaultConfig.applicationId android.permission.WRITE_EXTERNAL_STORAGE".split(' ')
+        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
+            commandLine "cmd", "/c", "$adb", "shell pm grant $android.productFlavors.development.applicationId android.permission.SET_ANIMATION_SCALE"
+            commandLine "cmd", "/c", "$adb", "shell pm grant $android.productFlavors.development.applicationId android.permission.WRITE_EXTERNAL_STORAGE"
+        } else {
+            commandLine "$adb shell pm grant $android.defaultConfig.applicationId android.permission.SET_ANIMATION_SCALE".split(' ')
+            commandLine "$adb shell pm grant $android.defaultConfig.applicationId android.permission.WRITE_EXTERNAL_STORAGE".split(' ')
+        }
     }
+
     // When launching individual tests from Android Studio, it seems that only the assemble tasks
     // get called directly, not the install* versions
     tasks.each { task ->
@@ -179,9 +185,9 @@ afterEvaluate {
     }
 }
 
-def androidSupportVersion       = "23.1.1"
-def androidEspressoVersion      = "2.2.1"
-def androidSupportTestVersion   = "0.4.1"
+def androidSupportVersion       = "23.3.0"
+def androidEspressoVersion      = "2.2.2"
+def androidSupportTestVersion   = "0.5"
 
 repositories{
     flatDir{
@@ -199,14 +205,14 @@ dependencies {
             'com.android.support:preference-v7:'    + androidSupportVersion,
             'com.android.support:recyclerview-v7:'  + androidSupportVersion,
             'com.viewpagerindicator:library:2.4.1@aar',
-            'com.code-troopers.betterpickers:library:2.2.1',
+            'com.code-troopers.betterpickers:library:2.5.3',
             'org.jraf:android-switch-backport:2.0.1@aar',
             'com.github.PhilJay:MPAndroidChart:v2.1.3',
             'joda-time:joda-time:2.7',
             'com.google.android.gms:play-services-drive:8.3.0',
             'com.jakewharton:butterknife:7.0.1',
-            'com.kobakei:ratethisapp:0.0.4',
-            'com.squareup:android-times-square:1.6.4@aar',
+            'io.github.kobakei:ratethisapp:1.0.3',
+            'com.squareup:android-times-square:1.6.5@aar',
             'com.github.techfreak:wizardpager:1.0.3',
             'net.objecthunter:exp4j:0.4.5',
             'org.apache.jackrabbit:jackrabbit-webdav:2.11.1'
@@ -230,7 +236,10 @@ dependencies {
     androidTestCompile ('com.android.support:support-annotations:'  + androidSupportVersion,
                         'com.android.support.test:runner:'          + androidSupportTestVersion,
                         'com.android.support.test:rules:'           + androidSupportTestVersion,
-                        'com.android.support.test.espresso:espresso-core:'      + androidEspressoVersion)
+                        'com.android.support.test.espresso:espresso-core:'      + androidEspressoVersion,
+            //the following are only added so that the app and test version both us the same versions
+                        'com.android.support:appcompat-v7:'     + androidSupportVersion,
+                        'com.android.support:design:'           + androidSupportVersion)
     androidTestCompile ('com.android.support.test.espresso:espresso-contrib:'   + androidEspressoVersion) {
         exclude group: 'com.android.support', module: 'support-v4'
         exclude module: 'recyclerview-v7'
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 237a569e..2f84027a 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -27,6 +27,7 @@
 import android.support.test.InstrumentationRegistry;
 import android.support.test.espresso.Espresso;
 import android.support.test.espresso.matcher.ViewMatchers;
+import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
 import android.support.v4.app.Fragment;
 import android.test.ActivityInstrumentationTestCase2;
@@ -35,9 +36,11 @@
 import com.kobakei.ratethisapp.RateThisApp;
 
 import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
@@ -48,10 +51,14 @@
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.receivers.AccountCreator;
+import org.gnucash.android.test.ui.util.DisableAnimationsRule;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.account.AccountsListFragment;
 import org.junit.After;
 import org.junit.Before;
+import org.junit.BeforeClass;
+import org.junit.ClassRule;
+import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -70,8 +77,10 @@
 import static android.support.test.espresso.assertion.ViewAssertions.doesNotExist;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.ViewMatchers.hasDescendant;
+import static android.support.test.espresso.matcher.ViewMatchers.hasSibling;
 import static android.support.test.espresso.matcher.ViewMatchers.isChecked;
 import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static android.support.test.espresso.matcher.ViewMatchers.isEnabled;
 import static android.support.test.espresso.matcher.ViewMatchers.isNotChecked;
 import static android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
@@ -79,13 +88,15 @@
 import static android.support.test.espresso.matcher.ViewMatchers.withText;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.equalTo;
+import static org.hamcrest.Matchers.hasEntry;
 import static org.hamcrest.Matchers.instanceOf;
 import static org.hamcrest.Matchers.is;
 import static org.hamcrest.Matchers.not;
 
 
 @RunWith(AndroidJUnit4.class)
-public class AccountsActivityTest extends ActivityInstrumentationTestCase2<AccountsActivity> {
+public class AccountsActivityTest {
     private static final String ACCOUNTS_CURRENCY_CODE = "USD";
     // Don't add static here, otherwise it gets set to null by super.tearDown()
     private final Commodity ACCOUNTS_CURRENCY = Commodity.getInstance(ACCOUNTS_CURRENCY_CODE);
@@ -99,75 +110,79 @@
     private static final String CHILD_ACCOUNT_NAME = "Child account";
     public static final String TEST_DB_NAME = "test_gnucash_db.sqlite";
 
-    private DatabaseHelper mDbHelper;
-    private SQLiteDatabase mDb;
-    private AccountsDbAdapter mAccountsDbAdapter;
-    private TransactionsDbAdapter mTransactionsDbAdapter;
-    private SplitsDbAdapter mSplitsDbAdapter;
+    private static DatabaseHelper mDbHelper;
+    private static SQLiteDatabase mDb;
+    private static AccountsDbAdapter mAccountsDbAdapter;
+    private static TransactionsDbAdapter mTransactionsDbAdapter;
+    private static SplitsDbAdapter mSplitsDbAdapter;
     private AccountsActivity mAccountsActivity;
 
     public AccountsActivityTest() {
-        super(AccountsActivity.class);
+//        super(AccountsActivity.class);
     }
 
-    @Before
-    public void setUp() throws Exception {
-        super.setUp();
-        injectInstrumentation(InstrumentationRegistry.getInstrumentation());
-        preventFirstRunDialogs(getInstrumentation().getTargetContext());
-        mAccountsActivity = getActivity();
+    @ClassRule public static DisableAnimationsRule disableAnimationsRule = new DisableAnimationsRule();
+
+    @Rule
+    public ActivityTestRule<AccountsActivity> mActivityRule = new ActivityTestRule<>(AccountsActivity.class);
+
+    @BeforeClass
+    public static void prepTest(){
+        preventFirstRunDialogs(GnuCashApplication.getAppContext());
 
         String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
-        mDbHelper = new DatabaseHelper(mAccountsActivity, activeBookUID);
+        mDbHelper = new DatabaseHelper(GnuCashApplication.getAppContext(), activeBookUID);
         try {
             mDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
-            Log.e(getClass().getName(), "Error getting database: " + e.getMessage());
+            Log.e("AccountsActivityTest", "Error getting database: " + e.getMessage());
             mDb = mDbHelper.getReadableDatabase();
         }
         mSplitsDbAdapter        = new SplitsDbAdapter(mDb);
         mTransactionsDbAdapter  = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
         mAccountsDbAdapter      = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
+        CommoditiesDbAdapter commoditiesDbAdapter = new CommoditiesDbAdapter(mDb); //initialize commodity constants
+    }
+
+    @Before
+    public void setUp() throws Exception {
+        mAccountsActivity = mActivityRule.getActivity();
+//        testPreconditions();
+
         mAccountsDbAdapter.deleteAllRecords(); //clear the data
 
-		Account simpleAccount = new Account(SIMPLE_ACCOUNT_NAME);
+        Account simpleAccount = new Account(SIMPLE_ACCOUNT_NAME);
         simpleAccount.setUID(SIMPLE_ACCOUNT_UID);
-		simpleAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
-		mAccountsDbAdapter.addRecord(simpleAccount, DatabaseAdapter.UpdateMethod.insert);
-
-        Account rootAccount = new Account(ROOT_ACCOUNT_NAME);
-        rootAccount.setUID(ROOT_ACCOUNT_UID);
-        rootAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
-        rootAccount.setPlaceHolderFlag(true);
-        rootAccount.setAccountType(AccountType.LIABILITY);
-        mAccountsDbAdapter.addRecord(rootAccount);
-
-        Account parentAccount = new Account(PARENT_ACCOUNT_NAME);
-        parentAccount.setUID(PARENT_ACCOUNT_UID);
-        parentAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
-        parentAccount.setAccountType(AccountType.LIABILITY);
-        parentAccount.setParentUID(ROOT_ACCOUNT_UID);
-        mAccountsDbAdapter.addRecord(parentAccount);
-
-        Account childAccount = new Account(CHILD_ACCOUNT_NAME);
-        childAccount.setUID(CHILD_ACCOUNT_UID);
-        childAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
-        childAccount.setAccountType(AccountType.LIABILITY);
-        childAccount.setParentUID(PARENT_ACCOUNT_UID);
-        mAccountsDbAdapter.addRecord(childAccount);
-
-        refreshAccountsList();
+        simpleAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
+        mAccountsDbAdapter.addRecord(simpleAccount, DatabaseAdapter.UpdateMethod.insert);
+
+//        Account rootAccount = new Account(ROOT_ACCOUNT_NAME);
+//        rootAccount.setUID(ROOT_ACCOUNT_UID);
+//        rootAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
+//        rootAccount.setPlaceHolderFlag(true);
+//        rootAccount.setAccountType(AccountType.ROOT);
+//        rootAccount.setHidden(true);
+//        mAccountsDbAdapter.addRecord(rootAccount);
+//
+//        Account parentAccount = new Account(PARENT_ACCOUNT_NAME);
+//        parentAccount.setUID(PARENT_ACCOUNT_UID);
+//        parentAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
+//        parentAccount.setAccountType(AccountType.LIABILITY);
+//        parentAccount.setParentUID(ROOT_ACCOUNT_UID);
+//        mAccountsDbAdapter.addRecord(parentAccount);
+//
+//        Account childAccount = new Account(CHILD_ACCOUNT_NAME);
+//        childAccount.setUID(CHILD_ACCOUNT_UID);
+//        childAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
+//        childAccount.setAccountType(AccountType.LIABILITY);
+//        childAccount.setParentUID(PARENT_ACCOUNT_UID);
+//        mAccountsDbAdapter.addRecord(childAccount);
+//
+//        refreshAccountsList();
+//        List<Account> accounts = mAccountsDbAdapter.getAllRecords();
+//        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(5L);
     }
 
-    @Test
-    public void testPreconditions() {
-        assertNotNull(mAccountsActivity);
-        assertNotNull(mDbHelper);
-        assertNotNull(mDb);
-        assertNotNull(mSplitsDbAdapter);
-        assertNotNull(mTransactionsDbAdapter);
-        assertNotNull(ACCOUNTS_CURRENCY);
-    }
 
     /**
      * Prevents the first-run dialogs (Whats new, Create accounts etc) from being displayed when testing
@@ -224,6 +239,7 @@ public void testSearchAccounts(){
      */
     @Test
     public void testCreateAccount(){
+        assertThat(mAccountsDbAdapter.getAllRecords()).hasSize(1);
         onView(allOf(isDisplayed(), withId(R.id.fab_create_account))).perform(click());
 
         String NEW_ACCOUNT_NAME = "A New Account";
@@ -233,15 +249,15 @@ public void testCreateAccount(){
                 .check(matches(isNotChecked()))
                 .perform(click());
 
-        onView(withId(R.id.checkbox_parent_account)).perform(scrollTo())
-                .check(matches(allOf(isDisplayed(), isNotChecked())))
-                .perform(click());
+//        onView(withId(R.id.checkbox_parent_account)).perform(scrollTo())
+//                .check(matches(allOf(isDisplayed(), isNotChecked())))
+//                .perform(click());
 
         onView(withId(R.id.menu_save)).perform(click());
 
         List<Account> accounts = mAccountsDbAdapter.getAllRecords();
         assertThat(accounts).isNotNull();
-        assertThat(accounts).hasSize(5);
+        assertThat(accounts).hasSize(2);
         Account newestAccount = accounts.get(0); //because of alphabetical sorting
 
         assertThat(newestAccount.getName()).isEqualTo(NEW_ACCOUNT_NAME);
@@ -267,13 +283,17 @@ public void testChangeParentAccount() {
                 .perform(click());
         // FIXME: explicitly select the parent account
 
+        onView(withId(R.id.input_parent_account)).check(matches(isEnabled())).perform(click());
+
+        onView(withText(SIMPLE_ACCOUNT_NAME)).perform(click());
+
         onView(withId(R.id.menu_save)).perform(click());
 
         Account editedAccount = mAccountsDbAdapter.getRecord(account.getUID());
         String parentUID = editedAccount.getParentUID();
 
         assertThat(parentUID).isNotNull();
-        assertThat(ROOT_ACCOUNT_UID).isEqualTo(parentUID);
+        assertThat(parentUID).isEqualTo(SIMPLE_ACCOUNT_UID);
     }
 
     /**
@@ -372,11 +392,13 @@ private void sleep(long millis) {
     //TODO: Add test for moving content of accounts before deleting it
     @Test(expected = IllegalArgumentException.class)
     public void testDeleteSimpleAccount() {
-        sleep(2000);
+        //sleep(2000);
         onView(allOf(withParent(hasDescendant(withText(SIMPLE_ACCOUNT_NAME))),
                 withId(R.id.options_menu))).perform(click());
-        onView(withText(R.string.menu_delete)).perform(click());
+//        onView(allOf(hasSibling(withText(SIMPLE_ACCOUNT_NAME)), withId(R.id.options_menu))).perform(click());
 
+        onView(withText(R.string.menu_delete)).perform(click());
+        sleep(2000);
         //the account has no sub-accounts
 //        onView(withId(R.id.accounts_options)).check(matches(not(isDisplayed())));
 //        onView(withId(R.id.transactions_options)).check(matches(isDisplayed()));
@@ -391,8 +413,8 @@ public void testDeleteSimpleAccount() {
     @Test
     public void testDeleteAccountWithSubaccounts() {
         sleep(2000);
-        onView(withText(ROOT_ACCOUNT_NAME)).perform(click());
-        onView(allOf(withParent(hasDescendant(withText(PARENT_ACCOUNT_NAME))),
+        onView(withText(SIMPLE_ACCOUNT_NAME)).perform(click());
+        onView(allOf(withParent(hasDescendant(withText(SIMPLE_ACCOUNT_NAME))),
                      withId(R.id.options_menu))).perform(click());
         onView(withText(R.string.menu_delete)).perform(click());
 
@@ -400,25 +422,36 @@ public void testDeleteAccountWithSubaccounts() {
                      withId(R.id.radio_delete))).perform(click());
         onView(withText(R.string.alert_dialog_ok_delete)).perform(click());
 
-        assertTrue("Parent account has not been deleted.", !accountExists(PARENT_ACCOUNT_UID));
-        assertTrue("Child account has not been deleted after deleting its parent account.",
-                   !accountExists(CHILD_ACCOUNT_UID));
+        assertThat(!accountExists(PARENT_ACCOUNT_UID)).isTrue();
+        assertThat(!accountExists(CHILD_ACCOUNT_UID)).isTrue();
     }
 
     @Test
     public void testDeleteAccountMovingSubaccounts() {
         sleep(2000);
-        onView(withText(ROOT_ACCOUNT_NAME)).perform(click());
-        onView(allOf(withParent(hasDescendant(withText(PARENT_ACCOUNT_NAME))),
+        Account subAccount = new Account("Child account");
+        subAccount.setParentUID(SIMPLE_ACCOUNT_UID);
+
+        Account tranferAcct = new Account("Other account");
+        mAccountsDbAdapter.addRecord(subAccount, DatabaseAdapter.UpdateMethod.insert);
+        mAccountsDbAdapter.addRecord(tranferAcct, DatabaseAdapter.UpdateMethod.insert);
+
+        refreshAccountsList();
+
+//        onView(withText(SIMPLE_ACCOUNT_NAME)).perform(click());
+        onView(allOf(withParent(hasDescendant(withText(SIMPLE_ACCOUNT_NAME))),
                 withId(R.id.options_menu))).perform(click());
         onView(withText(R.string.menu_delete)).perform(click());
 
         onView(allOf(withParent(withId(R.id.accounts_options)),
-                withId(R.id.radio_move))).perform(click());
+                withId(R.id.radio_move))).check(matches(isEnabled())).perform(click());
+
         onView(withText(R.string.alert_dialog_ok_delete)).perform(click());
 
-        assertTrue("Parent account has not been deleted.", !accountExists(PARENT_ACCOUNT_UID));
-        assertTrue("Child account should not have been deleted.", accountExists(CHILD_ACCOUNT_UID));
+        assertThat(!accountExists(SIMPLE_ACCOUNT_UID)).isTrue();
+//        assertTrue("Parent account has not been deleted.", );
+        assertThat(accountExists(subAccount.getUID())).isTrue();
+//        assertTrue("Child account should not have been deleted.", );
     }
 
     private boolean accountExists(String accountId) {
@@ -455,12 +488,13 @@ public void testIntentAccountCreation(){
     @TargetApi(Build.VERSION_CODES.HONEYCOMB)
     @Test
     public void shouldShowWizardOnFirstRun() throws Throwable {
-        PreferenceManager.getDefaultSharedPreferences(mAccountsActivity)
-                .edit()
-                .remove(mAccountsActivity.getString(R.string.key_first_run))
-                .commit();
+        Editor editor = PreferenceManager.getDefaultSharedPreferences(mAccountsActivity)
+                .edit();
+        //commit for immediate effect
+        editor.remove(mAccountsActivity.getString(R.string.key_first_run)).commit();
 
-        runTestOnUiThread(new Runnable() {
+
+        mActivityRule.runOnUiThread(new Runnable() {
             @Override
             public void run() {
                 mAccountsActivity.recreate();
@@ -470,12 +504,15 @@ public void run() {
         //check that wizard is shown
         onView(withText(mAccountsActivity.getString(R.string.title_setup_gnucash)))
                 .check(matches(isDisplayed()));
+
+        editor.putBoolean(mAccountsActivity.getString(R.string.key_first_run), false).apply();
     }
 
     @After
     public void tearDown() throws Exception {
-        mAccountsActivity.finish();
-        super.tearDown();
+        if (mAccountsActivity != null) {
+            mAccountsActivity.finish();
+        }
     }
 
     /**
@@ -483,7 +520,7 @@ public void tearDown() throws Exception {
      */
     private void refreshAccountsList(){
         try {
-            runTestOnUiThread(new Runnable() {
+            mActivityRule.runOnUiThread(new Runnable() {
                 @Override
                 public void run() {
                     Fragment fragment = mAccountsActivity.getCurrentAccountListFragment();
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/util/DisableAnimationsRule.java b/app/src/androidTest/java/org/gnucash/android/test/ui/util/DisableAnimationsRule.java
new file mode 100644
index 00000000..03fdbdef
--- /dev/null
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/util/DisableAnimationsRule.java
@@ -0,0 +1,59 @@
+package org.gnucash.android.test.ui.util;
+
+import android.os.IBinder;
+
+import org.junit.rules.TestRule;
+import org.junit.runner.Description;
+import org.junit.runners.model.Statement;
+
+import java.lang.reflect.Method;
+import java.util.Arrays;
+
+/**
+ * Created by Ngewi on 19.04.2016.
+ * Credit: https://product.reverb.com/2015/06/06/disabling-animations-in-espresso-for-android-testing/
+ */
+public class DisableAnimationsRule implements TestRule {
+    private Method mSetAnimationScalesMethod;
+    private Method mGetAnimationScalesMethod;
+    private Object mWindowManagerObject;
+
+    public DisableAnimationsRule() {
+        try {
+            Class<?> windowManagerStubClazz = Class.forName("android.view.IWindowManager$Stub");
+            Method asInterface = windowManagerStubClazz.getDeclaredMethod("asInterface", IBinder.class);
+
+            Class<?> serviceManagerClazz = Class.forName("android.os.ServiceManager");
+            Method getService = serviceManagerClazz.getDeclaredMethod("getService", String.class);
+
+            Class<?> windowManagerClazz = Class.forName("android.view.IWindowManager");
+
+            mSetAnimationScalesMethod = windowManagerClazz.getDeclaredMethod("setAnimationScales", float[].class);
+            mGetAnimationScalesMethod = windowManagerClazz.getDeclaredMethod("getAnimationScales");
+
+            IBinder windowManagerBinder = (IBinder) getService.invoke(null, "window");
+            mWindowManagerObject = asInterface.invoke(null, windowManagerBinder);
+        }
+        catch (Exception e) {
+            throw new RuntimeException("Failed to access animation methods", e);
+        }
+    }
+
+    @Override
+    public Statement apply(final Statement statement, Description description) {
+        return new Statement() {
+            @Override
+            public void evaluate() throws Throwable {
+                setAnimationScaleFactors(0.0f);
+                try { statement.evaluate(); }
+                finally { setAnimationScaleFactors(1.0f); }
+            }
+        };
+    }
+
+    private void setAnimationScaleFactors(float scaleFactor) throws Exception {
+        float[] scaleFactors = (float[]) mGetAnimationScalesMethod.invoke(mWindowManagerObject);
+        Arrays.fill(scaleFactors, scaleFactor);
+        mSetAnimationScalesMethod.invoke(mWindowManagerObject, scaleFactors);
+    }
+}
\ No newline at end of file
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/GnucashAndroidTestRunner.java b/app/src/androidTest/java/org/gnucash/android/test/ui/util/GnucashAndroidTestRunner.java
similarity index 99%
rename from app/src/androidTest/java/org/gnucash/android/test/ui/GnucashAndroidTestRunner.java
rename to app/src/androidTest/java/org/gnucash/android/test/ui/util/GnucashAndroidTestRunner.java
index 3418f879..939b7bb4 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/GnucashAndroidTestRunner.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/util/GnucashAndroidTestRunner.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.test.ui;
+package org.gnucash.android.test.ui.util;
 
 import android.content.pm.PackageManager;
 import android.os.Bundle;
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index 13ad514f..3c840614 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -150,6 +150,7 @@ public long bulkAddRecords(@NonNull List<Account> accountList, UpdateMethod upda
         //this is necessary because the database has ON DELETE CASCADE between accounts and splits
         //and all accounts are editing via SQL REPLACE
 
+        //// TODO: 20.04.2016 Investigate if we can safely remove updating the transactions when bulk updating accounts
         List<Transaction> transactionList = new ArrayList<>(accountList.size()*2);
         for (Account account : accountList) {
             transactionList.addAll(account.getTransactions());
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 18cf6657..2a90bdcc 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -725,6 +725,8 @@ public void onDestroy() {
      */
 	private void saveAccount() {
         Log.i("AccountFormFragment", "Saving account");
+        if (mAccountsDbAdapter == null)
+            mAccountsDbAdapter = AccountsDbAdapter.getInstance();
         // accounts to update, in case we're updating full names of a sub account tree
         ArrayList<Account> accountsToUpdate = new ArrayList<>();
         boolean nameChanged = false;
@@ -736,6 +738,7 @@ private void saveAccount() {
 				return;				
 			}
 			mAccount = new Account(getEnteredName());
+            mAccountsDbAdapter.addRecord(mAccount, DatabaseAdapter.UpdateMethod.insert); //new account, insert it
 		}
 		else {
             nameChanged = !mAccount.getName().equals(getEnteredName());
@@ -794,9 +797,7 @@ private void saveAccount() {
                     // parent change, update all full names of descent accounts
                     accountsToUpdate.addAll(mAccountsDbAdapter.getSimpleAccountList(
                             DatabaseSchema.AccountEntry.COLUMN_UID + " IN ('" +
-                                    TextUtils.join("','", mDescendantAccountUIDs) + "')",
-                            null,
-                            null
+                                    TextUtils.join("','", mDescendantAccountUIDs) + "')", null, null
                     ));
                 }
                 HashMap<String, Account> mapAccount = new HashMap<>();
@@ -819,8 +820,7 @@ private void saveAccount() {
             }
         }
         accountsToUpdate.add(mAccount);
-		if (mAccountsDbAdapter == null)
-			mAccountsDbAdapter = AccountsDbAdapter.getInstance();
+
         // bulk update, will not update transactions
 		mAccountsDbAdapter.bulkAddRecords(accountsToUpdate, DatabaseAdapter.UpdateMethod.update);
 
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 521a85c4..48a1b871 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -145,6 +145,7 @@
      * Configuration for rating the app
      */
     public static RateThisApp.Config rateAppConfig = new RateThisApp.Config(14, 100);
+    private AccountViewPagerAdapter mPagerAdapter;
 
     /**
      * Adapter for managing the sub-account and transaction fragment pages in the accounts view
@@ -207,7 +208,10 @@ public int getCount() {
 
     public AccountsListFragment getCurrentAccountListFragment(){
         int index = mViewPager.getCurrentItem();
-        return (AccountsListFragment)(mFragmentPageReferenceMap.get(index));
+        Fragment fragment = (Fragment) mFragmentPageReferenceMap.get(index);
+        if (fragment == null)
+            fragment = mPagerAdapter.getItem(index);
+        return (AccountsListFragment) fragment;
     }
 
     @Override
@@ -236,7 +240,7 @@ public void onCreate(Bundle savedInstanceState) {
         tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
 
         //show the simple accounts list
-        PagerAdapter mPagerAdapter = new AccountViewPagerAdapter(getSupportFragmentManager());
+        mPagerAdapter = new AccountViewPagerAdapter(getSupportFragmentManager());
         mViewPager.setAdapter(mPagerAdapter);
 
         mViewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
diff --git a/app/src/main/res/layout/cardview_account.xml b/app/src/main/res/layout/cardview_account.xml
index 36a1452c..7eb1ae8e 100644
--- a/app/src/main/res/layout/cardview_account.xml
+++ b/app/src/main/res/layout/cardview_account.xml
@@ -26,7 +26,7 @@
     android:focusable="true"
     android:clickable="true"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="wrap_content">
 
     <RelativeLayout
         android:layout_width="match_parent"
diff --git a/scripts/adb_all.bat b/scripts/adb_all.bat
new file mode 100644
index 00000000..b38971b4
--- /dev/null
+++ b/scripts/adb_all.bat
@@ -0,0 +1,24 @@
+:: Inspired by Linux version of the same https://gist.github.com/christopherperry/3208109
+
+@echo off
+SET ARGUMENTS=%~1
+
+if "%ARGUMENTS%" == "" (
+    GOTO EOF
+)
+
+SET "ARGUMENTS=%ARGUMENTS:""="%"
+
+SETLOCAL ENABLEDELAYEDEXPANSION 
+:: INSTALL ON ALL ATTACHED DEVICES ::
+FOR /F "tokens=1,2 skip=1" %%A IN ('adb devices') DO (
+    SET IS_DEV=%%B
+	if "!IS_DEV!" == "device" (
+	    SET SERIAL=%%A
+	    echo "adb -s !SERIAL! %ARGUMENTS%"
+	    call adb -s !SERIAL! %ARGUMENTS%
+	)
+)
+ENDLOCAL
+
+:EOF
\ No newline at end of file
diff --git a/scripts/adb_all.sh b/scripts/adb_all.sh
new file mode 100644
index 00000000..fbfedd90
--- /dev/null
+++ b/scripts/adb_all.sh
@@ -0,0 +1,20 @@
+#!/bin/bash
+# Script adb+
+# Usage
+# You can run any command adb provides on all your currently connected devices
+# ./adb+ <command> is the equivalent of ./adb -s <serial number> <command>
+#
+# Examples
+# ./adb+ version
+# ./adb+ install apidemo.apk
+# ./adb+ uninstall com.example.android.apis
+
+adb devices | while read line
+do
+    if [ ! "$line" = "" ] && [ `echo $line | awk '{print $2}'` = "device" ]
+    then
+        device=`echo $line | awk '{print $1}'`
+        echo "$device $@ ..."
+        adb -s $device $@
+    fi
+done
\ No newline at end of file

From e0a626bfe94590d74ba0d543cc55c2ee40c23429 Mon Sep 17 00:00:00 2001
From: Sandro Santilli <strk@keybit.net>
Date: Fri, 22 Apr 2016 11:17:01 +0200
Subject: [PATCH 047/121] Add GitHub releases as a way to obtain the
 application

See #491
---
 README.md | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 568d4947..bfce2523 100644
--- a/README.md
+++ b/README.md
@@ -33,7 +33,8 @@ Features include:
 
 # Installation
 
-There are different ways to get the GnuCash app for Android; through the app store, or building it yourself.
+There are different ways to get the GnuCash app for Android; through
+the app store, from github or building it yourself.
 
 
 ### App Store
@@ -42,6 +43,9 @@ There are different ways to get the GnuCash app for Android; through the app sto
   <img alt="Android app on Google Play" src="http://developer.android.com/images/brand/en_generic_rgb_wo_60.png" />
 </a>
 
+### From GitHub
+
+Download the .apk from https://github.com/codinguser/gnucash-android/releases
 
 ## Building
 

From 1617d80aff45d2da5ef502a0ba06bd109d5c06f6 Mon Sep 17 00:00:00 2001
From: Sandro Santilli <strk@keybit.net>
Date: Fri, 22 Apr 2016 10:04:20 +0200
Subject: [PATCH 048/121] Fix instructions to run gradlew

---
 README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 568d4947..18ff4981 100644
--- a/README.md
+++ b/README.md
@@ -55,7 +55,7 @@ the `ANDROID_HOME` environment variable to the location of your SDK. For example
 
 After satisfying those requirements, the build is pretty simple:
 
-* Run `gradlew build installDevelopmentDebug` from the within the project folder.
+* Run `./gradlew build installDevelopmentDebug` from the within the project folder.
 It will build the project for you and install it to the connected Android device or running emulator.
 
 The app is configured to allow you to install a development and production version in parallel on your device.

From 0b74ae0c48f81457b23d1d296ca94f44b54668ba Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 17 May 2016 17:12:37 +0200
Subject: [PATCH 049/121] Fix instrumentation tests to work with multi-book
 support

Made ReportActivity implement Refreshable
Fix Prices test to account for reducing of the fraction which now occurs
Add basic GitHub issue template
Add instructions for contributing
Upgrade betterpickers library to v2.5.4

FIXME: PieChartReportTest seems to be not detected
---
 .github/CONTRIBUTING.md                            |  31 ++++
 .github/ISSUE_TEMPLATE.md                          |  13 ++
 app/build.gradle                                   |   4 +-
 .../android/test/ui/AccountsActivityTest.java      | 105 +++++--------
 .../android/test/ui/CalculatorEditTextTest.java    |  91 +++++++----
 .../android/test/ui/ExportTransactionsTest.java    |  39 +++--
 .../test/ui/FirstRunWizardActivityTest.java        |   2 +-
 .../android/test/ui/OwnCloudExportTest.java        |  30 +++-
 .../android/test/ui/PieChartReportTest.java        | 113 +++++++++-----
 .../android/test/ui/TransactionsActivityTest.java  | 173 ++++++++++++---------
 .../android/ui/account/AccountsActivity.java       |   1 -
 .../android/ui/export/ExportFormFragment.java      |   1 +
 .../gnucash/android/ui/report/ReportsActivity.java |  22 ++-
 app/src/main/res/layout/cardview_transaction.xml   |   2 +-
 .../android/test/unit/db/PriceDbAdapterTest.java   |   2 +-
 build.gradle                                       |   2 +-
 16 files changed, 387 insertions(+), 244 deletions(-)
 create mode 100644 .github/CONTRIBUTING.md
 create mode 100644 .github/ISSUE_TEMPLATE.md

diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md
new file mode 100644
index 00000000..fbb47355
--- /dev/null
+++ b/.github/CONTRIBUTING.md
@@ -0,0 +1,31 @@
+GnuCash Android is built by people like you! Please [join us](https://github.com/codinguser/gnucash-android).
+
+## Git and Pull requests
+* Contributions are submitted, reviewed, and accepted using Github pull requests. [Read this article](https://help.github.com/articles/using-pull-requests) for some details. We use the _Fork and Pull_ model, as described there.
+* You can maintain your stable installation of GnuCash and test with another installation.
+The two instances of GnuCash Android will live side-by-side on your device and not affect each other. You can install the development version by executing `gradle installDD` inside the root project directory
+* The latest changes are in the `develop` branch.
+* The master branch contains only stable releases.
+  * Pull requests to the `master` branch will be rejected.
+* Make a new branch for every feature you're working on.
+* Try to make clean commits that are easily readable (including descriptive commit messages!)
+* Test before you push make sure all test pass on your machine.
+  * Unit tests can be run with `gradle test`
+  * UI tests can be run with `gradle cDDAT`
+* Make small pull requests that are easy to review but make sure they do add value by themselves.
+
+## Coding style
+* Do write comments. You don't have to comment every line, but if you come up with something thats a bit complex/weird, just leave a comment. Bear in mind that you will probably leave the project at some point and that other people will read your code. Undocumented huge amounts of code are nearly worthless!
+* Please make sure to document every method you write using Javadoc, even if the method seems trivial to you
+  * See [this guide](http://www.oracle.com/technetwork/articles/java/index-137868.html) on how to write good Javadoc comments
+* Don't overengineer. Don't try to solve any possible problem in one step, but try to solve problems as easy as possible and improve the solution over time!
+* Do generalize sooner or later! (if an old solution, quickly hacked together, poses more problems than it solves today, refactor it!)
+* Keep it compatible. Do not introduce changes to the public API, or configurations too lightly. Don't make incompatible changes without good reasons!
+
+## Translation
+* Tranlations for GnuCash Android are managed using [CrowdIn](crowdin.com/project/gnucash-android)
+* You can sign up for an account and create/vote for translations.
+* Translations will not be accepted via pull requests
+
+## Documentation
+* Documentation should be kept up-to-date. This means, whenever you add a new API method, add a new hook or change the database model, pack the relevant changes to the docs in the same pull request.
diff --git a/.github/ISSUE_TEMPLATE.md b/.github/ISSUE_TEMPLATE.md
new file mode 100644
index 00000000..a1624715
--- /dev/null
+++ b/.github/ISSUE_TEMPLATE.md
@@ -0,0 +1,13 @@
+#### Expected behaviour
+
+
+#### Actual behaviour
+
+
+#### Steps to reproduce the behaviour
+1. <!-- List the detail steps to reproduce the problem here -->
+
+#### Software specifications
+* GnuCash Android version:
+* System Android version:
+* Device type:
diff --git a/app/build.gradle b/app/build.gradle
index af65fc6a..9e0ae25c 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -7,7 +7,7 @@ apply plugin: 'io.fabric'
 def versionMajor = 2
 def versionMinor = 1
 def versionPatch = 0
-def versionBuild = 2
+def versionBuild = 0
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")
@@ -205,7 +205,7 @@ dependencies {
             'com.android.support:preference-v7:'    + androidSupportVersion,
             'com.android.support:recyclerview-v7:'  + androidSupportVersion,
             'com.viewpagerindicator:library:2.4.1@aar',
-            'com.code-troopers.betterpickers:library:2.5.3',
+            'com.code-troopers.betterpickers:library:2.5.4',
             'org.jraf:android-switch-backport:2.0.1@aar',
             'com.github.PhilJay:MPAndroidChart:v2.1.3',
             'joda-time:joda-time:2.7',
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 2f84027a..73eecf12 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -24,13 +24,11 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.os.Build;
 import android.preference.PreferenceManager;
-import android.support.test.InstrumentationRegistry;
 import android.support.test.espresso.Espresso;
 import android.support.test.espresso.matcher.ViewMatchers;
 import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
 import android.support.v4.app.Fragment;
-import android.test.ActivityInstrumentationTestCase2;
 import android.util.Log;
 
 import com.kobakei.ratethisapp.RateThisApp;
@@ -77,7 +75,6 @@
 import static android.support.test.espresso.assertion.ViewAssertions.doesNotExist;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.ViewMatchers.hasDescendant;
-import static android.support.test.espresso.matcher.ViewMatchers.hasSibling;
 import static android.support.test.espresso.matcher.ViewMatchers.isChecked;
 import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static android.support.test.espresso.matcher.ViewMatchers.isEnabled;
@@ -88,8 +85,6 @@
 import static android.support.test.espresso.matcher.ViewMatchers.withText;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.hamcrest.Matchers.allOf;
-import static org.hamcrest.Matchers.equalTo;
-import static org.hamcrest.Matchers.hasEntry;
 import static org.hamcrest.Matchers.instanceOf;
 import static org.hamcrest.Matchers.is;
 import static org.hamcrest.Matchers.not;
@@ -138,9 +133,9 @@ public static void prepTest(){
             Log.e("AccountsActivityTest", "Error getting database: " + e.getMessage());
             mDb = mDbHelper.getReadableDatabase();
         }
-        mSplitsDbAdapter        = new SplitsDbAdapter(mDb);
-        mTransactionsDbAdapter  = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
-        mAccountsDbAdapter      = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
+        mSplitsDbAdapter        = SplitsDbAdapter.getInstance();
+        mTransactionsDbAdapter  = TransactionsDbAdapter.getInstance();
+        mAccountsDbAdapter      = AccountsDbAdapter.getInstance();
         CommoditiesDbAdapter commoditiesDbAdapter = new CommoditiesDbAdapter(mDb); //initialize commodity constants
     }
 
@@ -156,31 +151,7 @@ public void setUp() throws Exception {
         simpleAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
         mAccountsDbAdapter.addRecord(simpleAccount, DatabaseAdapter.UpdateMethod.insert);
 
-//        Account rootAccount = new Account(ROOT_ACCOUNT_NAME);
-//        rootAccount.setUID(ROOT_ACCOUNT_UID);
-//        rootAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
-//        rootAccount.setPlaceHolderFlag(true);
-//        rootAccount.setAccountType(AccountType.ROOT);
-//        rootAccount.setHidden(true);
-//        mAccountsDbAdapter.addRecord(rootAccount);
-//
-//        Account parentAccount = new Account(PARENT_ACCOUNT_NAME);
-//        parentAccount.setUID(PARENT_ACCOUNT_UID);
-//        parentAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
-//        parentAccount.setAccountType(AccountType.LIABILITY);
-//        parentAccount.setParentUID(ROOT_ACCOUNT_UID);
-//        mAccountsDbAdapter.addRecord(parentAccount);
-//
-//        Account childAccount = new Account(CHILD_ACCOUNT_NAME);
-//        childAccount.setUID(CHILD_ACCOUNT_UID);
-//        childAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE));
-//        childAccount.setAccountType(AccountType.LIABILITY);
-//        childAccount.setParentUID(PARENT_ACCOUNT_UID);
-//        mAccountsDbAdapter.addRecord(childAccount);
-//
-//        refreshAccountsList();
-//        List<Account> accounts = mAccountsDbAdapter.getAllRecords();
-//        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(5L);
+        refreshAccountsList();
     }
 
 
@@ -249,10 +220,6 @@ public void testCreateAccount(){
                 .check(matches(isNotChecked()))
                 .perform(click());
 
-//        onView(withId(R.id.checkbox_parent_account)).perform(scrollTo())
-//                .check(matches(allOf(isDisplayed(), isNotChecked())))
-//                .perform(click());
-
         onView(withId(R.id.menu_save)).perform(click());
 
         List<Account> accounts = mAccountsDbAdapter.getAllRecords();
@@ -330,14 +297,17 @@ public void shouldHideParentAccountViewWhenNoParentsExist(){
 
     @Test
     public void testEditAccount(){
-        String editedAccountName = "An Edited Account";
-        sleep(2000);
+        refreshAccountsList();
+
         onView(allOf(withParent(hasDescendant(withText(SIMPLE_ACCOUNT_NAME))),
                      withId(R.id.options_menu))).perform(click());
-        onView(withText(R.string.title_edit_account)).perform(click());
-
+//        onView(withId(R.id.options_menu)).perform(click()); //there should only be one account visible
+        sleep(1000);
+        onView(withText(R.string.title_edit_account)).check(matches(isDisplayed())).perform(click());
+//        onView(withId(R.id.context_menu_edit_accounts)).check(matches(isDisplayed())).perform(click());
         onView(withId(R.id.fragment_account_form)).check(matches(isDisplayed()));
 
+        String editedAccountName = "An Edited Account";
         onView(withId(R.id.input_account_name)).perform(clearText()).perform(typeText(editedAccountName));
 
         onView(withId(R.id.menu_save)).perform(click());
@@ -389,31 +359,30 @@ private void sleep(long millis) {
         }
     }
 
-    //TODO: Add test for moving content of accounts before deleting it
-    @Test(expected = IllegalArgumentException.class)
     public void testDeleteSimpleAccount() {
-        //sleep(2000);
+        refreshAccountsList();
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(2);
         onView(allOf(withParent(hasDescendant(withText(SIMPLE_ACCOUNT_NAME))),
                 withId(R.id.options_menu))).perform(click());
-//        onView(allOf(hasSibling(withText(SIMPLE_ACCOUNT_NAME)), withId(R.id.options_menu))).perform(click());
 
         onView(withText(R.string.menu_delete)).perform(click());
-        sleep(2000);
-        //the account has no sub-accounts
-//        onView(withId(R.id.accounts_options)).check(matches(not(isDisplayed())));
-//        onView(withId(R.id.transactions_options)).check(matches(isDisplayed()));
 
-//        onView(withText(R.string.label_delete_transactions)).perform(click());
-//        onView(withId(R.id.btn_save)).perform(click());
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(1);
 
-        //should throw expected exception
-        mAccountsDbAdapter.getID(SIMPLE_ACCOUNT_UID);
+        List<Account> accounts = mAccountsDbAdapter.getAllRecords();
+        assertThat(accounts).hasSize(0); //root account is never returned
     }
 
     @Test
     public void testDeleteAccountWithSubaccounts() {
-        sleep(2000);
-        onView(withText(SIMPLE_ACCOUNT_NAME)).perform(click());
+        refreshAccountsList();
+        Account account = new Account("Sub-account");
+        account.setParentUID(SIMPLE_ACCOUNT_UID);
+        account.setUID(CHILD_ACCOUNT_UID);
+        mAccountsDbAdapter.addRecord(account);
+
+        refreshAccountsList();
+
         onView(allOf(withParent(hasDescendant(withText(SIMPLE_ACCOUNT_NAME))),
                      withId(R.id.options_menu))).perform(click());
         onView(withText(R.string.menu_delete)).perform(click());
@@ -422,23 +391,25 @@ public void testDeleteAccountWithSubaccounts() {
                      withId(R.id.radio_delete))).perform(click());
         onView(withText(R.string.alert_dialog_ok_delete)).perform(click());
 
-        assertThat(!accountExists(PARENT_ACCOUNT_UID)).isTrue();
-        assertThat(!accountExists(CHILD_ACCOUNT_UID)).isTrue();
+        assertThat(accountExists(SIMPLE_ACCOUNT_UID)).isFalse();
+        assertThat(accountExists(CHILD_ACCOUNT_UID)).isFalse();
     }
 
     @Test
     public void testDeleteAccountMovingSubaccounts() {
-        sleep(2000);
+        long accountCount = mAccountsDbAdapter.getRecordsCount();
         Account subAccount = new Account("Child account");
         subAccount.setParentUID(SIMPLE_ACCOUNT_UID);
 
         Account tranferAcct = new Account("Other account");
+        tranferAcct.setCurrencyCode(ACCOUNTS_CURRENCY_CODE);
         mAccountsDbAdapter.addRecord(subAccount, DatabaseAdapter.UpdateMethod.insert);
         mAccountsDbAdapter.addRecord(tranferAcct, DatabaseAdapter.UpdateMethod.insert);
 
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(accountCount+2);
+
         refreshAccountsList();
 
-//        onView(withText(SIMPLE_ACCOUNT_NAME)).perform(click());
         onView(allOf(withParent(hasDescendant(withText(SIMPLE_ACCOUNT_NAME))),
                 withId(R.id.options_menu))).perform(click());
         onView(withText(R.string.menu_delete)).perform(click());
@@ -448,15 +419,21 @@ public void testDeleteAccountMovingSubaccounts() {
 
         onView(withText(R.string.alert_dialog_ok_delete)).perform(click());
 
-        assertThat(!accountExists(SIMPLE_ACCOUNT_UID)).isTrue();
-//        assertTrue("Parent account has not been deleted.", );
+        assertThat(accountExists(SIMPLE_ACCOUNT_UID)).isFalse();
         assertThat(accountExists(subAccount.getUID())).isTrue();
-//        assertTrue("Child account should not have been deleted.", );
+
+        String newParentUID = mAccountsDbAdapter.getParentAccountUID(subAccount.getUID());
+        assertThat(newParentUID).isEqualTo(tranferAcct.getUID());
     }
 
-    private boolean accountExists(String accountId) {
+    /**
+     * Checks if an account exists in the database
+     * @param accountUID GUID of the account
+     * @return {@code true} if the account exists, {@code false} otherwise
+     */
+    private boolean accountExists(String accountUID) {
         try {
-            mAccountsDbAdapter.getID(accountId);
+            mAccountsDbAdapter.getID(accountUID);
             return true;
         } catch (IllegalArgumentException e) {
             return false;
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/CalculatorEditTextTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/CalculatorEditTextTest.java
index 89c88dd4..08c68731 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/CalculatorEditTextTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/CalculatorEditTextTest.java
@@ -19,23 +19,29 @@
 import android.content.Intent;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
-import android.support.test.InstrumentationRegistry;
+import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
-import android.test.ActivityInstrumentationTestCase2;
 import android.util.Log;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Commodity;
+import org.gnucash.android.test.ui.util.DisableAnimationsRule;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.junit.After;
+import org.junit.AfterClass;
 import org.junit.Before;
+import org.junit.BeforeClass;
+import org.junit.ClassRule;
+import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -49,8 +55,7 @@
 
 // TODO: Find out how to press the keys in the KeyboardView.
 @RunWith(AndroidJUnit4.class)
-public class CalculatorEditTextTest extends
-		ActivityInstrumentationTestCase2<TransactionsActivity> {
+public class CalculatorEditTextTest {
 	private static final String DUMMY_ACCOUNT_UID = "transactions-account";
 	private static final String DUMMY_ACCOUNT_NAME = "Transactions Account";
 
@@ -58,52 +63,68 @@
     private static final String TRANSFER_ACCOUNT_UID    = "transfer_account";
     public static final String CURRENCY_CODE = "USD";
 
-    private SQLiteDatabase mDb;
-    private DatabaseHelper mDbHelper;
-    private AccountsDbAdapter mAccountsDbAdapter;
-    private TransactionsDbAdapter mTransactionsDbAdapter;
-    private SplitsDbAdapter mSplitsDbAdapter;
+    private static DatabaseHelper mDbHelper;
+    private static AccountsDbAdapter mAccountsDbAdapter;
+    private static TransactionsDbAdapter mTransactionsDbAdapter;
+    private static SplitsDbAdapter mSplitsDbAdapter;
 	private TransactionsActivity mTransactionsActivity;
 
 	public CalculatorEditTextTest() {
-		super(TransactionsActivity.class);
 	}
-	
-	@Override
-	@Before
-	public void setUp() throws Exception {
-		super.setUp();
-		injectInstrumentation(InstrumentationRegistry.getInstrumentation());
-		AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext());
 
+    @ClassRule
+    public static DisableAnimationsRule disableAnimationsRule = new DisableAnimationsRule();
+
+    @Rule
+    public ActivityTestRule<TransactionsActivity> mActivityRule =
+            new ActivityTestRule<>(TransactionsActivity.class, true, false);
 
-        mDbHelper = new DatabaseHelper(getInstrumentation().getTargetContext(), DatabaseSchema.LEGACY_DATABASE_NAME);
+
+    @BeforeClass
+    public static void prepTestCase(){
+        String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
+        mDbHelper = new DatabaseHelper(GnuCashApplication.getAppContext(), activeBookUID);
+
+        SQLiteDatabase mDb;
         try {
             mDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
-            Log.e(getClass().getName(), "Error getting database: " + e.getMessage());
+            Log.e("CalculatorEditTextTest", "Error getting database: " + e.getMessage());
             mDb = mDbHelper.getReadableDatabase();
         }
-        mSplitsDbAdapter = new SplitsDbAdapter(mDb);
-        mTransactionsDbAdapter = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
-        mAccountsDbAdapter = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
-		mAccountsDbAdapter.deleteAllRecords();
+//        mSplitsDbAdapter = new SplitsDbAdapter(mDb);
+//        mTransactionsDbAdapter = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
+//        mAccountsDbAdapter = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
+
+        mSplitsDbAdapter        = SplitsDbAdapter.getInstance();
+        mTransactionsDbAdapter  = TransactionsDbAdapter.getInstance();
+        mAccountsDbAdapter      = AccountsDbAdapter.getInstance();
+
+        AccountsActivityTest.preventFirstRunDialogs(GnuCashApplication.getAppContext());
+    }
+
+    @Before
+	public void setUp() throws Exception {
+
+        mAccountsDbAdapter.deleteAllRecords();
 
-        Account account = new Account(DUMMY_ACCOUNT_NAME);
+        CommoditiesDbAdapter commoditiesDbAdapter = CommoditiesDbAdapter.getInstance();
+        Commodity commodity = commoditiesDbAdapter.getCommodity(CURRENCY_CODE);
+
+        Account account = new Account(DUMMY_ACCOUNT_NAME, commodity);
         account.setUID(DUMMY_ACCOUNT_UID);
-        account.setCommodity(Commodity.getInstance(CURRENCY_CODE));
 
-        Account account2 = new Account(TRANSFER_ACCOUNT_NAME);
+        Account account2 = new Account(TRANSFER_ACCOUNT_NAME, commodity);
         account2.setUID(TRANSFER_ACCOUNT_UID);
-        account2.setCommodity(Commodity.getInstance(CURRENCY_CODE));
 
         mAccountsDbAdapter.addRecord(account);
         mAccountsDbAdapter.addRecord(account2);
 
         Intent intent = new Intent(Intent.ACTION_VIEW);
         intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, DUMMY_ACCOUNT_UID);
-        setActivityIntent(intent);
-		mTransactionsActivity = getActivity();
+        mActivityRule.launchActivity(intent);
+        mTransactionsActivity = mActivityRule.getActivity();
+
 	}
 
     /**
@@ -138,11 +159,15 @@ private void clickOnView(int viewId){
 		onView(withId(viewId)).perform(click());
 	}
 
-	@Override
 	@After
 	public void tearDown() throws Exception {
 		if (mTransactionsActivity != null)
             mTransactionsActivity.finish();
-		super.tearDown();
 	}
+
+    @AfterClass
+    public static void cleanup(){
+        if (mDbHelper != null)
+            mDbHelper.close();
+    }
 }
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index 05e7c17b..f14b93fd 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -27,6 +27,7 @@
 import android.support.test.espresso.contrib.DrawerActions;
 import android.support.test.espresso.matcher.ViewMatchers;
 import android.support.test.runner.AndroidJUnit4;
+import android.support.v7.preference.PreferenceManager;
 import android.test.ActivityInstrumentationTestCase2;
 import android.util.Log;
 import android.widget.CompoundButton;
@@ -38,13 +39,13 @@
 import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
-import org.gnucash.android.db.adapter.RecurrenceDbAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.model.Account;
+import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.PeriodType;
 import org.gnucash.android.model.ScheduledAction;
@@ -95,7 +96,7 @@
     public ExportTransactionsTest() {
 		super(AccountsActivity.class);
 	}
-	
+
 	@Override
 	@Before
 	public void setUp() throws Exception {
@@ -112,13 +113,20 @@ public void setUp() throws Exception {
             Log.e(getClass().getName(), "Error getting database: " + e.getMessage());
             mDb = mDbHelper.getReadableDatabase();
         }
-        mSplitsDbAdapter = new SplitsDbAdapter(mDb);
-        mTransactionsDbAdapter = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
-        mAccountsDbAdapter = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
-		mAccountsDbAdapter.deleteAllRecords();
 
+		mSplitsDbAdapter        = SplitsDbAdapter.getInstance();
+		mTransactionsDbAdapter  = TransactionsDbAdapter.getInstance();
+		mAccountsDbAdapter      = AccountsDbAdapter.getInstance();
+
+		//this call initializes the static variables like DEFAULT_COMMODITY which are used implicitly by accounts/transactions
+		@SuppressWarnings("unused")
+		CommoditiesDbAdapter commoditiesDbAdapter = new CommoditiesDbAdapter(mDb);
 		String currencyCode = GnuCashApplication.getDefaultCurrencyCode();
-		Account account = new Account("Exportable", new CommoditiesDbAdapter(mDb).getCommodity(currencyCode));
+		Commodity.DEFAULT_COMMODITY = CommoditiesDbAdapter.getInstance().getCommodity(currencyCode);
+
+		mAccountsDbAdapter.deleteAllRecords();
+
+		Account account = new Account("Exportable");
 		Transaction transaction = new Transaction("Pizza");
 		transaction.setNote("What up?");
 		transaction.setTime(System.currentTimeMillis());
@@ -220,14 +228,21 @@ public void testExport(ExportFormat format){
 	public void testDeleteTransactionsAfterExport(){
 		assertThat(mTransactionsDbAdapter.getRecordsCount()).isGreaterThan(0);
 
-		PreferenceActivity.getActiveBookSharedPreferences(getActivity()).edit()
-				.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export), true).commit();
+		SharedPreferences.Editor editor = PreferenceManager.getDefaultSharedPreferences(getActivity()).edit(); //PreferenceActivity.getActiveBookSharedPreferences(getActivity()).edit();
+		editor.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export), true);
+		editor.commit();
+
+		PreferenceActivity.getActiveBookSharedPreferences(getActivity())
+				.edit()
+				.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), true)
+				.apply();
 
 		testExport(ExportFormat.XML);
 
 		assertThat(mTransactionsDbAdapter.getRecordsCount()).isEqualTo(0);
-		PreferenceActivity.getActiveBookSharedPreferences(getActivity()).edit()
-				.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export), false).commit();
+		List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactions();
+
+		editor.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export), false).commit();
 	}
 
 	/**
@@ -247,7 +262,7 @@ public void testShouldCreateExportSchedule(){
 		onView(withText("OK")).perform(click());
 
 		onView(withId(R.id.menu_save)).perform(click());
-		ScheduledActionDbAdapter scheduledactionDbAdapter = new ScheduledActionDbAdapter(mDb, new RecurrenceDbAdapter(mDb));
+		ScheduledActionDbAdapter scheduledactionDbAdapter = ScheduledActionDbAdapter.getInstance(); //new ScheduledActionDbAdapter(mDb, new RecurrenceDbAdapter(mDb));
 		List<ScheduledAction> scheduledActions = scheduledactionDbAdapter.getAllEnabledScheduledActions();
 		assertThat(scheduledActions)
 				.hasSize(1)
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java
index 4d25d3f1..2e033485 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/FirstRunWizardActivityTest.java
@@ -24,8 +24,8 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.BaseModel;
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
index 4bff7ede..6bfffe51 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
@@ -25,11 +25,16 @@
 import android.support.test.runner.AndroidJUnit4;
 import android.test.ActivityInstrumentationTestCase2;
 import android.util.Log;
+
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseHelper;
-import org.gnucash.android.db.adapter.*;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.model.Account;
+import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
@@ -45,10 +50,16 @@
 
 import static android.support.test.InstrumentationRegistry.getInstrumentation;
 import static android.support.test.espresso.Espresso.onView;
-import static android.support.test.espresso.action.ViewActions.*;
+import static android.support.test.espresso.action.ViewActions.clearText;
+import static android.support.test.espresso.action.ViewActions.click;
+import static android.support.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static android.support.test.espresso.action.ViewActions.swipeUp;
+import static android.support.test.espresso.action.ViewActions.typeText;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.RootMatchers.withDecorView;
-import static android.support.test.espresso.matcher.ViewMatchers.*;
+import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static android.support.test.espresso.matcher.ViewMatchers.withId;
+import static android.support.test.espresso.matcher.ViewMatchers.withText;
 import static junit.framework.Assert.assertEquals;
 import static junit.framework.Assert.assertTrue;
 import static org.gnucash.android.test.ui.AccountsActivityTest.preventFirstRunDialogs;
@@ -83,6 +94,7 @@
     public ActivityTestRule<AccountsActivity> mActivityRule = new ActivityTestRule<>(
             AccountsActivity.class);
 
+
     @Before
     public void setUp() throws Exception {
 
@@ -102,14 +114,16 @@ public void setUp() throws Exception {
             Log.e(getClass().getName(), "Error getting database: " + e.getMessage());
             mDb = mDbHelper.getReadableDatabase();
         }
-        SplitsDbAdapter mSplitsDbAdapter;
-        mSplitsDbAdapter = new SplitsDbAdapter(mDb);
-        TransactionsDbAdapter mTransactionsDbAdapter = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
-        AccountsDbAdapter mAccountsDbAdapter = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
+
+        @SuppressWarnings("unused") //this call initializes constants in Commodity
+        CommoditiesDbAdapter commoditiesDbAdapter = new CommoditiesDbAdapter(mDb);
+        AccountsDbAdapter mAccountsDbAdapter = AccountsDbAdapter.getInstance();
         mAccountsDbAdapter.deleteAllRecords();
 
         String currencyCode = GnuCashApplication.getDefaultCurrencyCode();
-        Account account = new Account("ownCloud", new CommoditiesDbAdapter(mDb).getCommodity(currencyCode));
+        Commodity.DEFAULT_COMMODITY = CommoditiesDbAdapter.getInstance().getCommodity(currencyCode);
+
+        Account account = new Account("ownCloud");
         Transaction transaction = new Transaction("birds");
         transaction.setTime(System.currentTimeMillis());
         Split split = new Split(new Money("11.11", currencyCode), account.getUID());
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index cb6970f8..a3490a54 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -16,24 +16,24 @@
 
 package org.gnucash.android.test.ui;
 
+import android.content.Context;
 import android.content.Intent;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
-import android.support.test.InstrumentationRegistry;
 import android.support.test.espresso.ViewAction;
 import android.support.test.espresso.action.CoordinatesProvider;
 import android.support.test.espresso.action.GeneralClickAction;
 import android.support.test.espresso.action.Press;
 import android.support.test.espresso.action.Tap;
+import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
-import android.test.ActivityInstrumentationTestCase2;
 import android.util.Log;
 import android.view.View;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
@@ -46,26 +46,33 @@
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.model.TransactionType;
+import org.gnucash.android.test.ui.util.DisableAnimationsRule;
 import org.gnucash.android.ui.report.BaseReportFragment;
-import org.gnucash.android.ui.report.piechart.PieChartFragment;
 import org.gnucash.android.ui.report.ReportsActivity;
+import org.gnucash.android.ui.report.piechart.PieChartFragment;
 import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.joda.time.LocalDateTime;
 import org.junit.After;
+import org.junit.AfterClass;
 import org.junit.Before;
+import org.junit.BeforeClass;
+import org.junit.ClassRule;
+import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
 import java.math.BigDecimal;
+import java.util.Locale;
 
 import static android.support.test.espresso.Espresso.onView;
 import static android.support.test.espresso.action.ViewActions.click;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
 import static android.support.test.espresso.matcher.ViewMatchers.withText;
+import static org.assertj.core.api.Assertions.assertThat;
 
 @RunWith(AndroidJUnit4.class)
-public class PieChartReportTest extends ActivityInstrumentationTestCase2<ReportsActivity> {
+public class PieChartReportTest {
 
     public static final String TAG = PieChartReportTest.class.getName();
 
@@ -91,55 +98,59 @@
 
     public static Commodity CURRENCY;
 
-    private AccountsDbAdapter mAccountsDbAdapter;
-    private TransactionsDbAdapter mTransactionsDbAdapter;
+    private static AccountsDbAdapter mAccountsDbAdapter;
+    private static TransactionsDbAdapter mTransactionsDbAdapter;
 
     private ReportsActivity mReportsActivity;
 
-	public PieChartReportTest() {
-		super(ReportsActivity.class);
-        CURRENCY = new Commodity("US Dollars", "USD", 100);
-	}
-	
-	@Override
-	@Before
-	public void setUp() throws Exception {
-		super.setUp();
-		injectInstrumentation(InstrumentationRegistry.getInstrumentation());
+    @Rule
+    public ActivityTestRule<ReportsActivity> mActivityRule =
+            new ActivityTestRule<>(ReportsActivity.class, true, false);
 
-        // creates default accounts
-        String bookUID = GncXmlImporter.parse(GnuCashApplication.getAppContext().getResources().openRawResource(R.raw.default_accounts));
-        BooksDbAdapter.getInstance().setActive(bookUID);
+    @ClassRule
+    public static DisableAnimationsRule disableAnimationsRule = new DisableAnimationsRule();
 
-        mReportsActivity = getActivity();
+    private static String testBookUID;
+    private static String oldActiveBookUID;
 
-        SQLiteDatabase db;
-        DatabaseHelper dbHelper = new DatabaseHelper(mReportsActivity, bookUID);
-        try {
-            db = dbHelper.getWritableDatabase();
-        } catch (SQLException e) {
-            Log.e(TAG, "Error getting database: " + e.getMessage());
-            db = dbHelper.getReadableDatabase();
-        }
-        mTransactionsDbAdapter = new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
-        mAccountsDbAdapter = new AccountsDbAdapter(db, mTransactionsDbAdapter);
+
+    public PieChartReportTest() {
+        //nothing to se here, move along
+        CURRENCY = new Commodity("US Dollars", "USD", 100);
+	}
+
+    @BeforeClass
+    public static void prepareTestCase() throws Exception {
         mAccountsDbAdapter.deleteAllRecords();
+        Context context = GnuCashApplication.getAppContext();
+        oldActiveBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
+        testBookUID = GncXmlImporter.parse(context.getResources().openRawResource(R.raw.default_accounts));
+        BooksDbAdapter.getInstance().setActive(testBookUID);
+
+        mTransactionsDbAdapter = TransactionsDbAdapter.getInstance(); //new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
+        mAccountsDbAdapter = AccountsDbAdapter.getInstance(); //new AccountsDbAdapter(db, mTransactionsDbAdapter);
 
-        CURRENCY = new CommoditiesDbAdapter(db).getCommodity("USD");
+        CURRENCY = CommoditiesDbAdapter.getInstance().getCommodity("USD");
 
-        PreferenceActivity.getActiveBookSharedPreferences(mReportsActivity).edit()
-                .putString(mReportsActivity.getString(R.string.key_default_currency), CURRENCY.getCurrencyCode())
+        PreferenceActivity.getActiveBookSharedPreferences(context).edit()
+                .putString(context.getString(R.string.key_default_currency), CURRENCY.getCurrencyCode())
                 .commit();
+    }
+	
 
+	@Before
+	public void setUp() throws Exception {
+        // creates default accounts
+        mReportsActivity = mActivityRule.launchActivity(new Intent());
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isGreaterThan(20); //lots of accounts in the default
 	}
 
     /**
      * Call this method in every tests after adding data
      */
     private void getTestActivity() {
-        setActivityIntent(new Intent(Intent.ACTION_VIEW));
-        mReportsActivity = getActivity();
         onView(withId(R.id.btn_pie_chart)).perform(click());
+        refreshReport();
     }
 
     private void addTransactionForCurrentMonth() throws Exception {
@@ -184,7 +195,7 @@ public void testSelectingValue() throws Exception {
 
         onView(withId(R.id.pie_chart)).perform(clickXY(Position.BEGIN, Position.MIDDLE));
         float percent = (float) (TRANSACTION_AMOUNT / (TRANSACTION_AMOUNT + TRANSACTION2_AMOUNT) * 100);
-        String selectedText = String.format(BaseReportFragment.SELECTED_VALUE_PATTERN, DINING_EXPENSE_ACCOUNT_NAME, TRANSACTION_AMOUNT, percent);
+        String selectedText = String.format(Locale.US, BaseReportFragment.SELECTED_VALUE_PATTERN, DINING_EXPENSE_ACCOUNT_NAME, TRANSACTION_AMOUNT, percent);
         onView(withId(R.id.selected_chart_slice)).check(matches(withText(selectedText)));
     }
 
@@ -204,10 +215,6 @@ public void testSpinner() throws Exception {
         onView(withId(R.id.report_account_type_spinner)).perform(click());
         onView(withText(AccountType.INCOME.name())).perform(click());
 
-        Thread.sleep(1000);
-
-        onView(withId(R.id.pie_chart)).perform(click());
-
         String selectedText = String.format(PieChartFragment.SELECTED_VALUE_PATTERN, GIFTS_RECEIVED_INCOME_ACCOUNT_NAME, TRANSACTION3_AMOUNT, 100f);
         onView(withId(R.id.selected_chart_slice)).check(matches(withText(selectedText)));
 
@@ -258,11 +265,31 @@ public float getPosition(int viewPos, int viewLength) {
         abstract float getPosition(int widgetPos, int widgetLength);
     }
 
-    @Override
+    /**
+     * Refresh reports
+     */
+    private void refreshReport(){
+        try {
+            mActivityRule.runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    mReportsActivity.refresh();
+                }
+            });
+        } catch (Throwable t){
+            System.err.println("Faile to refresh reports");
+        }
+    }
+
 	@After
 	public void tearDown() throws Exception {
 		mReportsActivity.finish();
-		super.tearDown();
 	}
 
+    @AfterClass
+    public static void cleanup(){
+        BooksDbAdapter booksDbAdapter = BooksDbAdapter.getInstance();
+        booksDbAdapter.setActive(oldActiveBookUID);
+        booksDbAdapter.deleteRecord(testBookUID);
+    }
 }
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index c762c6af..ba56da37 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -17,21 +17,17 @@
 package org.gnucash.android.test.ui;
 
 import android.content.ContentValues;
+import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.SharedPreferences.Editor;
-import android.database.SQLException;
-import android.database.sqlite.SQLiteDatabase;
-import android.support.test.InstrumentationRegistry;
+import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
-import android.test.ActivityInstrumentationTestCase2;
-import android.util.Log;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
-import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
@@ -43,12 +39,16 @@
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.model.TransactionType;
 import org.gnucash.android.receivers.TransactionRecorder;
+import org.gnucash.android.test.ui.util.DisableAnimationsRule;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.junit.After;
 import org.junit.Before;
+import org.junit.BeforeClass;
+import org.junit.ClassRule;
+import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -78,8 +78,7 @@
 import static org.hamcrest.Matchers.not;
 
 @RunWith(AndroidJUnit4.class)
-public class TransactionsActivityTest extends
-		ActivityInstrumentationTestCase2<TransactionsActivity> {
+public class TransactionsActivityTest {
     private static final String TRANSACTION_AMOUNT = "9.99";
 	private static final String TRANSACTION_NAME = "Pizza";
 	private static final String DUMMY_ACCOUNT_UID = "transactions-account";
@@ -93,66 +92,73 @@
 	private Transaction mTransaction;
 	private long mTransactionTimeMillis;
 
-    private SQLiteDatabase mDb;
-    private DatabaseHelper mDbHelper;
-    private AccountsDbAdapter mAccountsDbAdapter;
-    private TransactionsDbAdapter mTransactionsDbAdapter;
-    private SplitsDbAdapter mSplitsDbAdapter;
+    private static AccountsDbAdapter mAccountsDbAdapter;
+    private static TransactionsDbAdapter mTransactionsDbAdapter;
+    private static SplitsDbAdapter mSplitsDbAdapter;
 	private TransactionsActivity mTransactionsActivity;
 
+	@ClassRule
+	public static DisableAnimationsRule disableAnimationsRule = new DisableAnimationsRule();
+
+	@Rule
+	public ActivityTestRule<TransactionsActivity> mActivityRule =
+			new ActivityTestRule<>(TransactionsActivity.class, true, false);
+
+	private Account mBaseAccount;
+	private Account mTransferAccount;
+
 	public TransactionsActivityTest() {
-		super(TransactionsActivity.class);
-	}
-	
-	@Override
-	@Before
-	public void setUp() throws Exception {
-		super.setUp();
-		injectInstrumentation(InstrumentationRegistry.getInstrumentation());
-		AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext());
-
-		String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
-        mDbHelper = new DatabaseHelper(getInstrumentation().getTargetContext(), activeBookUID);
-        try {
-            mDb = mDbHelper.getWritableDatabase();
-        } catch (SQLException e) {
-            Log.e(getClass().getName(), "Error getting database: " + e.getMessage());
-            mDb = mDbHelper.getReadableDatabase();
-        }
-        mSplitsDbAdapter = new SplitsDbAdapter(mDb);
-        mTransactionsDbAdapter = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
-        mAccountsDbAdapter = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
-		mAccountsDbAdapter.deleteAllRecords();
+		mBaseAccount = new Account(DUMMY_ACCOUNT_NAME, COMMODITY);
+		mBaseAccount.setUID(DUMMY_ACCOUNT_UID);
 
-		COMMODITY = new CommoditiesDbAdapter(mDb).getCommodity(CURRENCY_CODE);
+		mTransferAccount = new Account(TRANSFER_ACCOUNT_NAME, COMMODITY);
+		mTransferAccount.setUID(TRANSFER_ACCOUNT_UID);
 
 		mTransactionTimeMillis = System.currentTimeMillis();
-        Account account = new Account(DUMMY_ACCOUNT_NAME, COMMODITY);
-        account.setUID(DUMMY_ACCOUNT_UID);
+		mTransaction = new Transaction(TRANSACTION_NAME);
+		mTransaction.setCommodity(COMMODITY);
+		mTransaction.setNote("What up?");
+		mTransaction.setTime(mTransactionTimeMillis);
+		Split split = new Split(new Money(TRANSACTION_AMOUNT, CURRENCY_CODE), DUMMY_ACCOUNT_UID);
+		split.setType(TransactionType.DEBIT);
 
-        Account account2 = new Account(TRANSFER_ACCOUNT_NAME, COMMODITY);
-        account2.setUID(TRANSFER_ACCOUNT_UID);
+		mTransaction.addSplit(split);
+		mTransaction.addSplit(split.createPair(TRANSFER_ACCOUNT_UID));
 
-        mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
-        mAccountsDbAdapter.addRecord(account2, DatabaseAdapter.UpdateMethod.insert);
+		mBaseAccount.addTransaction(mTransaction);
+	}
 
-        mTransaction = new Transaction(TRANSACTION_NAME);
-		mTransaction.setCommodity(COMMODITY);
-        mTransaction.setNote("What up?");
-        mTransaction.setTime(mTransactionTimeMillis);
-        Split split = new Split(new Money(TRANSACTION_AMOUNT, CURRENCY_CODE), DUMMY_ACCOUNT_UID);
-        split.setType(TransactionType.DEBIT);
+	@BeforeClass
+	public static void prepareTestCase(){
+		Context context = GnuCashApplication.getAppContext();
+		AccountsActivityTest.preventFirstRunDialogs(context);
+
+		mSplitsDbAdapter = SplitsDbAdapter.getInstance();
+		mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
+		mAccountsDbAdapter = AccountsDbAdapter.getInstance();
+		COMMODITY = CommoditiesDbAdapter.getInstance().getCommodity(CURRENCY_CODE);
 
-        mTransaction.addSplit(split);
-        mTransaction.addSplit(split.createPair(TRANSFER_ACCOUNT_UID));
-        account.addTransaction(mTransaction);
+		PreferenceActivity.getActiveBookSharedPreferences(context)
+				.edit().putBoolean(context.getString(R.string.key_use_compact_list), false)
+				.apply();
+	}
+
+	@Before
+	public void setUp() throws Exception {
+		mAccountsDbAdapter.deleteAllRecords();
+        mAccountsDbAdapter.addRecord(mBaseAccount, DatabaseAdapter.UpdateMethod.insert);
+        mAccountsDbAdapter.addRecord(mTransferAccount, DatabaseAdapter.UpdateMethod.insert);
 
         mTransactionsDbAdapter.addRecord(mTransaction, DatabaseAdapter.UpdateMethod.insert);
 
-        Intent intent = new Intent(Intent.ACTION_VIEW);
-        intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, DUMMY_ACCOUNT_UID);
-        setActivityIntent(intent);
-		mTransactionsActivity = getActivity();
+		assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(3); //including ROOT account
+		assertThat(mTransactionsDbAdapter.getRecordsCount()).isEqualTo(1);
+
+		Intent intent = new Intent(Intent.ACTION_VIEW);
+		intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, DUMMY_ACCOUNT_UID);
+		mTransactionsActivity = mActivityRule.launchActivity(intent);
+
+		refreshTransactionsList();
 	}
 
 
@@ -211,7 +217,7 @@ private void sleep(long millis) {
 	 */
 	private void assertToastDisplayed(int toastString) {
 		onView(withText(toastString))
-				.inRoot(withDecorView(not(is(getActivity().getWindow().getDecorView()))))
+				.inRoot(withDecorView(not(mTransactionsActivity.getWindow().getDecorView())))
 				.check(matches(isDisplayed()));
 	}
 
@@ -306,7 +312,7 @@ public void testAutoBalanceTransactions(){
 		imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(CURRENCY_CODE));
 		assertThat(imbalanceAcctUID).isNotNull();
 		assertThat(imbalanceAcctUID).isNotEmpty();
-		assertTrue(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID)); //imbalance account should be hidden in single entry mode
+		assertThat(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID)).isTrue(); //imbalance account should be hidden in single entry mode
 
 		assertThat(transaction.getSplits()).extracting("mAccountUID").contains(imbalanceAcctUID);
 
@@ -356,7 +362,7 @@ public void testSplitEditor(){
 		imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(CURRENCY_CODE));
 		assertThat(imbalanceAcctUID).isNotNull();
 		assertThat(imbalanceAcctUID).isNotEmpty();
-		assertFalse(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID));
+		assertThat(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID)).isFalse();
 
 		//at least one split will belong to the imbalance account
 		assertThat(transaction.getSplits()).extracting("mAccountUID").contains(imbalanceAcctUID);
@@ -371,10 +377,10 @@ public void testSplitEditor(){
 
 
     private void setDoubleEntryEnabled(boolean enabled){
-        SharedPreferences prefs = PreferenceActivity.getActiveBookSharedPreferences(getActivity());
+        SharedPreferences prefs = PreferenceActivity.getActiveBookSharedPreferences(mTransactionsActivity);
         Editor editor = prefs.edit();
-        editor.putBoolean(getActivity().getString(R.string.key_use_double_entry), enabled);
-        editor.commit();
+        editor.putBoolean(mTransactionsActivity.getString(R.string.key_use_double_entry), enabled);
+        editor.apply();
     }
 
 	@Test
@@ -386,9 +392,9 @@ public void testDefaultTransactionType(){
 	}
 
 	private void setDefaultTransactionType(TransactionType type) {
-		SharedPreferences prefs = PreferenceActivity.getActiveBookSharedPreferences(getActivity());
+		SharedPreferences prefs = PreferenceActivity.getActiveBookSharedPreferences(mTransactionsActivity);
 		Editor editor = prefs.edit();
-		editor.putString(getActivity().getString(R.string.key_default_transaction_type), type.name());
+		editor.putString(mTransactionsActivity.getString(R.string.key_default_transaction_type), type.name());
 		editor.commit();
 	}
 
@@ -439,7 +445,7 @@ public void testToggleTransactionType(){
 		assertThat(transactions).hasSize(1);
 		Transaction trx = transactions.get(0);
 		assertThat(trx.getSplits()).hasSize(2); //auto-balancing of splits
-		assertTrue(trx.getBalance(DUMMY_ACCOUNT_UID).isNegative());
+		assertThat(trx.getBalance(DUMMY_ACCOUNT_UID).isNegative()).isTrue();
 	}
 
 	@Test
@@ -455,13 +461,13 @@ public void testOpenTransactionEditShouldNotModifyTransaction(){
 
 		assertThat(transactions).hasSize(1);
 		Transaction trx = transactions.get(0);
-		assertEquals(TRANSACTION_NAME, trx.getDescription());
+		assertThat(TRANSACTION_NAME).isEqualTo(trx.getDescription());
 		Date expectedDate = new Date(mTransactionTimeMillis);
 		Date trxDate = new Date(trx.getTimeMillis());
-		assertEquals(TransactionFormFragment.DATE_FORMATTER.format(expectedDate),
-				TransactionFormFragment.DATE_FORMATTER.format(trxDate));
-		assertEquals(TransactionFormFragment.TIME_FORMATTER.format(expectedDate),
-				TransactionFormFragment.TIME_FORMATTER.format(trxDate));
+		assertThat(TransactionFormFragment.DATE_FORMATTER.format(expectedDate))
+				.isEqualTo(TransactionFormFragment.DATE_FORMATTER.format(trxDate));
+		assertThat(TransactionFormFragment.TIME_FORMATTER.format(expectedDate))
+				.isEqualTo(TransactionFormFragment.TIME_FORMATTER.format(trxDate));
 	}
 
 	@Test
@@ -470,7 +476,7 @@ public void testDeleteTransaction(){
 		onView(withText(R.string.menu_delete)).perform(click());
 
 		long id = mAccountsDbAdapter.getID(DUMMY_ACCOUNT_UID);
-		assertEquals(0, mTransactionsDbAdapter.getTransactionsCount(id));
+		assertThat(0).isEqualTo(mTransactionsDbAdapter.getTransactionsCount(id));
 	}
 
 	@Test
@@ -569,8 +575,8 @@ public void testLegacyIntentTransactionRecording(){
 		
 		for (Transaction transaction : transactions) {
 			if (transaction.getDescription().equals("Power intents")){
-				assertEquals("Intents for sale", transaction.getNote());
-				assertEquals(4.99, transaction.getBalance(DUMMY_ACCOUNT_UID).asDouble());
+				assertThat("Intents for sale").isEqualTo(transaction.getNote());
+				assertThat(4.99).isEqualTo(transaction.getBalance(DUMMY_ACCOUNT_UID).asDouble());
 			}
 		}
 	}
@@ -583,11 +589,26 @@ private void clickOnView(int viewId){
 		onView(withId(viewId)).perform(click());
 	}
 
-	@Override
+	/**
+	 * Refresh the account list fragment
+	 */
+	private void refreshTransactionsList(){
+		try {
+			mActivityRule.runOnUiThread(new Runnable() {
+				@Override
+				public void run() {
+					mTransactionsActivity.refresh();
+				}
+			});
+		} catch (Throwable throwable) {
+			System.err.println("Failed to refresh fragment");
+		}
+	}
+
 	@After
 	public void tearDown() throws Exception {
 		if (mTransactionsActivity != null)
 			mTransactionsActivity.finish();
-		super.tearDown();
 	}
+
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 48a1b871..3f08587a 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -41,7 +41,6 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentPagerAdapter;
-import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.preference.PreferenceManager;
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index ea09b0e8..b6ef4603 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -63,6 +63,7 @@
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.settings.BackupPreferenceFragment;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.ui.settings.dialog.OwnCloudDialogFragment;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.util.RecurrenceParser;
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index 90212622..0be7918c 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -42,6 +42,7 @@
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.ui.common.BaseDrawerActivity;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.dialog.DateRangePickerDialogFragment;
 import org.joda.time.LocalDate;
 
@@ -63,7 +64,8 @@
  * @author Ngewi Fet <ngewif@gmail.com>
  */
 public class ReportsActivity extends BaseDrawerActivity implements AdapterView.OnItemSelectedListener,
-        DatePickerDialog.OnDateSetListener, DateRangePickerDialogFragment.OnDateRangeSetListener{
+        DatePickerDialog.OnDateSetListener, DateRangePickerDialogFragment.OnDateRangeSetListener,
+        Refreshable{
 
     public static final int[] COLORS = {
             Color.parseColor("#17ee4e"), Color.parseColor("#cc1f09"), Color.parseColor("#3940f7"),
@@ -387,4 +389,22 @@ public boolean onKeyUp(int keyCode, KeyEvent event) {
         }
         return super.onKeyUp(keyCode, event);
     }
+
+    @Override
+    public void refresh() {
+        List<Fragment> fragments = getSupportFragmentManager().getFragments();
+        for (Fragment fragment : fragments) {
+            if (fragment instanceof Refreshable){
+                ((Refreshable) fragment).refresh();
+            }
+        }
+    }
+
+    @Override
+    /**
+     * Just another call to refresh
+     */
+    public void refresh(String uid) {
+        refresh();
+    }
 }
diff --git a/app/src/main/res/layout/cardview_transaction.xml b/app/src/main/res/layout/cardview_transaction.xml
index c2bfabd4..f5e31101 100644
--- a/app/src/main/res/layout/cardview_transaction.xml
+++ b/app/src/main/res/layout/cardview_transaction.xml
@@ -26,7 +26,7 @@
     android:layout_marginLeft="5dp"
     android:layout_marginRight="5dp"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="wrap_content">
     <RelativeLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/PriceDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/PriceDbAdapterTest.java
index daf0ba07..e53ecc5b 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/PriceDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/PriceDbAdapterTest.java
@@ -37,7 +37,7 @@ public void shouldOnlySaveOnePricePerCommodityPair(){
 
         price = pricesDbAdapter.getRecord(price.getUID());
         assertThat(pricesDbAdapter.getRecordsCount()).isEqualTo(1);
-        assertThat(price.getValueNum()).isEqualTo(134);
+        assertThat(price.getValueNum()).isEqualTo(67); //the price is reduced to 57/100 before saving
 
         Price price1 = new Price(commodityUID, currencyUID);
         price1.setValueNum(187);
diff --git a/build.gradle b/build.gradle
index 0049c0f5..8992686e 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
 		jcenter()
 	}
 	dependencies {
-		classpath 'com.android.tools.build:gradle:2.0.0'
+		classpath 'com.android.tools.build:gradle:2.1.0'
 		classpath 'io.fabric.tools:gradle:1.21.2'
 	}
 }

From f03baee36ddc5d5cf3cf03d07852d089ca989b76 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 18 May 2016 15:26:10 +0200
Subject: [PATCH 050/121] Add view for managing multiple books

Add time of last sync to the books database
Migrate shared preferences to book-specific preferences
---
 .../java/org/gnucash/android/db/BookDbHelper.java  |   1 +
 .../org/gnucash/android/db/DatabaseSchema.java     |   1 +
 .../org/gnucash/android/db/MigrationHelper.java    |  28 +++
 .../gnucash/android/db/adapter/BooksDbAdapter.java |   9 +-
 .../gnucash/android/importer/GncXmlHandler.java    |   3 +-
 .../main/java/org/gnucash/android/model/Book.java  |  31 ++-
 .../android/ui/common/BaseDrawerActivity.java      |   5 +-
 .../android/ui/settings/BookListFragment.java      | 208 +++++++++++++++++++++
 .../android/ui/settings/PreferenceActivity.java    |  13 +-
 .../gnucash/android/util/PreferencesHelper.java    |  11 +-
 .../org/gnucash/android/util/TimestampHelper.java  |   4 +-
 .../main/res/drawable-hdpi/ic_clear_black_24dp.png | Bin 0 -> 207 bytes
 .../main/res/drawable-mdpi/ic_clear_black_24dp.png | Bin 0 -> 164 bytes
 .../res/drawable-xhdpi/ic_clear_black_24dp.png     | Bin 0 -> 235 bytes
 .../res/drawable-xxhdpi/ic_clear_black_24dp.png    | Bin 0 -> 309 bytes
 .../res/drawable-xxxhdpi/ic_clear_black_24dp.png   | Bin 0 -> 377 bytes
 app/src/main/res/layout/cardview_book.xml          | 100 ++++++++++
 app/src/main/res/layout/fragment_book_list.xml     |  38 ++++
 .../res/layout/fragment_scheduled_events_list.xml  |  16 ++
 app/src/main/res/menu/book_context_menu.xml        |  27 +++
 app/src/main/res/values/strings.xml                |   2 +
 app/src/main/res/xml/fragment_book_preferences.xml |   4 +
 .../main/res/xml/preference_fragment_headers.xml   |   2 +
 23 files changed, 491 insertions(+), 12 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
 create mode 100644 app/src/main/res/drawable-hdpi/ic_clear_black_24dp.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_clear_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_clear_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_clear_black_24dp.png
 create mode 100644 app/src/main/res/drawable-xxxhdpi/ic_clear_black_24dp.png
 create mode 100644 app/src/main/res/layout/cardview_book.xml
 create mode 100644 app/src/main/res/layout/fragment_book_list.xml
 create mode 100644 app/src/main/res/menu/book_context_menu.xml
 create mode 100644 app/src/main/res/xml/fragment_book_preferences.xml

diff --git a/app/src/main/java/org/gnucash/android/db/BookDbHelper.java b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
index 2c5927b5..12c417a8 100644
--- a/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
@@ -56,6 +56,7 @@
             + BookEntry.COLUMN_TEMPLATE_GUID + " varchar(255), "
             + BookEntry.COLUMN_ACTIVE        + " tinyint default 0, "
             + BookEntry.COLUMN_SOURCE_URI    + " varchar(255), "
+            + BookEntry.COLUMN_LAST_SYNC     + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
             + BookEntry.COLUMN_CREATED_AT    + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
             + BookEntry.COLUMN_MODIFIED_AT   + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP "
             + ");" + DatabaseHelper.createUpdatedAtTrigger(BookEntry.TABLE_NAME);
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
index 08ca8594..3c9a4f32 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
@@ -68,6 +68,7 @@ private DatabaseSchema(){}
         public static final String COLUMN_ROOT_GUID     = "root_account_guid";
         public static final String COLUMN_TEMPLATE_GUID = "root_template_guid";
         public static final String COLUMN_ACTIVE        = "is_active";
+        public static final String COLUMN_LAST_SYNC     = "last_export_time";
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index 11c67eaa..184c22ec 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -21,9 +21,11 @@
 import android.content.ContentValues;
 import android.content.Context;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.os.Environment;
+import android.support.v7.preference.PreferenceManager;
 import android.text.TextUtils;
 import android.util.Log;
 
@@ -32,6 +34,7 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
@@ -44,6 +47,7 @@
 import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Transaction;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.util.PreferencesHelper;
 import org.gnucash.android.util.TimestampHelper;
 import org.xml.sax.InputSource;
@@ -1226,6 +1230,7 @@ static int upgradeDbToVersion12(SQLiteDatabase db){
      *     <li>Migrate scheduled transaction recurrences to own table</li>
      *     <li>Adds flags for reconciled status to split table</li>
      *     <li>Add flags for auto-/advance- create and notification to scheduled actions</li>
+     *     <li>Migrate old shared preferences into new book-specific preferences</li>
      * </ul>
      * </p>
      * @param db SQlite database to be upgraded
@@ -1429,6 +1434,29 @@ static int upgradeDbToVersion13(SQLiteDatabase db){
 
             db.execSQL("DROP TABLE " + SplitEntry.TABLE_NAME + "_bak");
 
+
+            //Migrate book-specific preferences away from shared preferences
+            Context context = GnuCashApplication.getAppContext();
+            String keyUseDoubleEntry = context.getString(R.string.key_use_double_entry);
+            String keySaveOpeningBalance = context.getString(R.string.key_save_opening_balances);
+            String keyLastExportTime = PreferencesHelper.PREFERENCE_LAST_EXPORT_TIME_KEY;
+
+            SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);
+            String lastExportTime = sharedPrefs.getString(keyLastExportTime, TimestampHelper.getTimestampFromEpochZero().toString());
+            boolean useDoubleEntry = sharedPrefs.getBoolean(keyUseDoubleEntry, true);
+            boolean saveOpeningBalance = sharedPrefs.getBoolean(keySaveOpeningBalance, false);
+
+
+            SharedPreferences bookPrefs = PreferenceActivity.getActiveBookSharedPreferences(context);
+            bookPrefs.edit()
+                    .putString(keyLastExportTime, lastExportTime)
+                    .putBoolean(keyUseDoubleEntry, useDoubleEntry)
+                    .putBoolean(keySaveOpeningBalance, saveOpeningBalance)
+                    .apply();
+
+
+            //// TODO: 18.05.2016 Move backup files from external storage?
+
             db.setTransactionSuccessful();
             oldVersion = 13;
         } finally {
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
index 539b3661..f1e28a0e 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
@@ -26,6 +26,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema.BookEntry;
 import org.gnucash.android.model.Book;
+import org.gnucash.android.util.TimestampHelper;
 
 /**
  * Database adapter for creating/modifying book entries
@@ -42,7 +43,9 @@ public BooksDbAdapter(SQLiteDatabase db) {
                 BookEntry.COLUMN_ROOT_GUID,
                 BookEntry.COLUMN_TEMPLATE_GUID,
                 BookEntry.COLUMN_SOURCE_URI,
-                BookEntry.COLUMN_ACTIVE
+                BookEntry.COLUMN_ACTIVE,
+                BookEntry.COLUMN_UID,
+                BookEntry.COLUMN_LAST_SYNC
         });
     }
 
@@ -61,13 +64,16 @@ public Book buildModelInstance(@NonNull Cursor cursor) {
         String uriString = cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_SOURCE_URI));
         String displayName = cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_DISPLAY_NAME));
         int active = cursor.getInt(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_ACTIVE));
+        String lastSync = cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_LAST_SYNC));
 
         Book book = new Book(rootAccountGUID);
         book.setDisplayName(displayName);
         book.setRootTemplateUID(rootTemplateGUID);
         book.setSourceUri(Uri.parse(uriString));
         book.setActive(active > 0);
+        book.setLastSync(TimestampHelper.getTimestampFromUtcString(lastSync));
 
+        populateBaseModelAttributes(cursor, book);
         return book;
     }
 
@@ -81,6 +87,7 @@ public Book buildModelInstance(@NonNull Cursor cursor) {
             stmt.bindString(4, book.getSourceUri().toString());
         stmt.bindLong(5, book.isActive() ? 1L : 0L);
         stmt.bindString(6, book.getUID());
+        stmt.bindString(7, TimestampHelper.getUtcStringFromTimestamp(book.getLastSync()));
         return stmt;
     }
 
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 9c44b5d9..25d02bcd 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -970,7 +970,8 @@ private void saveToDatabase() {
         BooksDbAdapter booksDbAdapter = BooksDbAdapter.getInstance();
         mBook.setRootAccountUID(mRootAccount.getUID());
         mBook.setDisplayName(booksDbAdapter.generateDefaultBookName());
-
+        //we on purpose do not set the book active. Only import. Caller should handle activation
+        
         long startTime = System.nanoTime();
         mAccountsDbAdapter.beginTransaction();
         Log.d(getClass().getSimpleName(), "bulk insert starts");
diff --git a/app/src/main/java/org/gnucash/android/model/Book.java b/app/src/main/java/org/gnucash/android/model/Book.java
index 665b34ab..84ada6f5 100644
--- a/app/src/main/java/org/gnucash/android/model/Book.java
+++ b/app/src/main/java/org/gnucash/android/model/Book.java
@@ -18,6 +18,8 @@
 
 import android.net.Uri;
 
+import java.sql.Timestamp;
+
 /**
  * Represents a GnuCash book which is made up of accounts and transactions
  * @author Ngewi Fet <ngewif@gmail.com>
@@ -30,12 +32,13 @@
     private String mRootTemplateUID;
     private boolean mActive;
 
+    private Timestamp mLastSync;
+
     /**
      * Default constructor
      */
     public Book(){
-        mRootTemplateUID = generateUID();
-        //nothing to see here, move along
+        init();
     }
 
     /**
@@ -44,7 +47,15 @@ public Book(){
      */
     public Book(String rootAccountUID){
         this.mRootAccountUID = rootAccountUID;
+        init();
+    }
+
+    /**
+     * Initialize default values for the book
+     */
+    private void init(){
         this.mRootTemplateUID = generateUID();
+        mLastSync = new Timestamp(System.currentTimeMillis());
     }
 
     /**
@@ -133,4 +144,20 @@ public String getDisplayName() {
     public void setDisplayName(String name) {
         this.mDisplayName = name;
     }
+
+    /**
+     * Get the time of last synchronization of the book
+     * @return Timestamp of last synchronization
+     */
+    public Timestamp getLastSync() {
+        return mLastSync;
+    }
+
+    /**
+     * Set the time of last synchronization of the book
+     * @param lastSync Timestamp of last synchronization
+     */
+    public void setLastSync(Timestamp lastSync) {
+        this.mLastSync = lastSync;
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index ded39fd3..e484ef24 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -296,7 +296,10 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     public boolean onMenuItemClick(MenuItem item) {
         long id = item.getItemId();
         if (id == ID_MANAGE_BOOKS){
-            //// TODO: 11.12.2015 launch activity to manage books
+            Intent intent = new Intent(this, PreferenceActivity.class);
+            intent.setAction(PreferenceActivity.ACTION_MANAGE_BOOKS);
+            startActivity(intent);
+            mDrawerLayout.closeDrawer(mNavigationView);
             return true;
         }
         BooksDbAdapter booksDbAdapter = BooksDbAdapter.getInstance();
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
new file mode 100644
index 00000000..e54bcd36
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
@@ -0,0 +1,208 @@
+/*
+ * Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.settings;
+
+import android.content.Context;
+import android.database.Cursor;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.ListFragment;
+import android.support.v4.app.LoaderManager;
+import android.support.v4.content.Loader;
+import android.support.v4.widget.SimpleCursorAdapter;
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.PopupMenu;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.ListView;
+import android.widget.TextView;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.BookDbHelper;
+import org.gnucash.android.db.DatabaseCursorLoader;
+import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+
+import java.text.DateFormat;
+import java.util.Date;
+
+import org.gnucash.android.db.DatabaseSchema.BookEntry;
+import org.gnucash.android.ui.common.Refreshable;
+import org.w3c.dom.Text;
+
+/**
+ * Fragment for managing the books in the database
+ */
+public class BookListFragment extends ListFragment implements
+        LoaderManager.LoaderCallbacks<Cursor>, Refreshable{
+
+    private static String LOG_TAG = "BookListFragment";
+
+    SimpleCursorAdapter mCursorAdapter;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.fragment_book_list, container, false);
+    }
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        mCursorAdapter = new BooksCursorAdapter(getActivity(), R.layout.cardview_book,
+                null, new String[]{BookEntry.COLUMN_DISPLAY_NAME, BookEntry.COLUMN_SOURCE_URI},
+                new int[]{R.id.primary_text, R.id.secondary_text});
+
+        setListAdapter(mCursorAdapter);
+    }
+
+    @Override
+    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+
+        ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
+        assert actionBar != null;
+        actionBar.setHomeButtonEnabled(true);
+        actionBar.setDisplayHomeAsUpEnabled(true);
+        actionBar.setTitle(R.string.title_manage_books);
+
+        getListView().setChoiceMode(ListView.CHOICE_MODE_NONE);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        refresh();
+    }
+
+    @Override
+    public void refresh() {
+        getLoaderManager().initLoader(0, null, this);
+    }
+
+    @Override
+    public void refresh(String uid) {
+        refresh();
+    }
+
+    @Override
+    public Loader<Cursor> onCreateLoader(int id, Bundle args) {
+        Log.d(LOG_TAG, "Creating loader for books");
+        return new BooksCursorLoader(getActivity());
+    }
+
+    @Override
+    public void onLoadFinished(Loader<Cursor> loader, Cursor data) {
+        Log.d(LOG_TAG, "Finished loading books from database");
+        mCursorAdapter.swapCursor(data);
+        mCursorAdapter.notifyDataSetChanged();
+    }
+
+    @Override
+    public void onLoaderReset(Loader<Cursor> loader) {
+        Log.d(LOG_TAG, "Resetting books list loader");
+        mCursorAdapter.swapCursor(null);
+    }
+
+    private class BooksCursorAdapter extends SimpleCursorAdapter {
+
+        public BooksCursorAdapter(Context context, int layout, Cursor c, String[] from, int[] to) {
+            super(context, layout, c, from, to, 0);
+        }
+
+        @Override
+        public void bindView(View view, final Context context, Cursor cursor) {
+            super.bindView(view, context, cursor);
+
+            final String bookUID = cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_UID));
+
+            DateFormat dateFormat = DateFormat.getDateTimeInstance();
+            //// TODO: 18.05.2016 Add last export time to the database
+            long lastSyncMillis = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry.COLUMN_CREATED_AT));
+
+            TextView lastSyncText = (TextView) view.findViewById(R.id.last_sync_time);
+            String lastSyncTime = dateFormat.format(new Date(lastSyncMillis));
+            lastSyncText.setText(lastSyncTime);
+
+            TextView labelLastSync = (TextView) view.findViewById(R.id.label_last_sync);
+            labelLastSync.setText("Last Sync:");
+            ImageView optionsMenu = (ImageView) view.findViewById(R.id.options_menu);
+
+            optionsMenu.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    PopupMenu popupMenu = new PopupMenu(context, v);
+                    MenuInflater menuInflater = popupMenu.getMenuInflater();
+                    menuInflater.inflate(R.menu.book_context_menu, popupMenu.getMenu());
+                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
+                        @Override
+                        public boolean onMenuItemClick(MenuItem item) {
+                            switch (item.getItemId()){
+                                case R.id.ctx_menu_sync_book:
+                                    //TODO implement sync
+                                    return false;
+                                default:
+                                    return true;
+                            }
+                        }
+                    });
+                    popupMenu.show();
+                }
+            });
+
+            ImageView deleteBookBtn = (ImageView) view.findViewById(R.id.delete_book);
+            String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
+            if (activeBookUID.equals(bookUID)) //we cannot delete the active book
+                deleteBookBtn.setVisibility(View.GONE);
+            else {
+                deleteBookBtn.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        //// TODO: 18.05.2016 Delete confirmation dialog
+                        BooksDbAdapter.getInstance().deleteRecord(bookUID);
+                        refresh();
+                    }
+                });
+            }
+        }
+    }
+
+    /**
+     * {@link DatabaseCursorLoader} for loading the book list from the database
+     * @author Ngewi Fet <ngewif@gmail.com>
+     */
+    private static class BooksCursorLoader extends DatabaseCursorLoader {
+        public BooksCursorLoader(Context context){
+            super(context);
+        }
+
+        @Override
+        public Cursor loadInBackground() {
+            BooksDbAdapter booksDbAdapter = BooksDbAdapter.getInstance();
+            Cursor cursor = booksDbAdapter.fetchAllRecords();
+
+            registerContentObserver(cursor);
+            return cursor;
+        }
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
index 5e6f980e..544ef8fc 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
@@ -18,6 +18,7 @@
 
 import android.annotation.TargetApi;
 import android.content.Context;
+import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Build;
 import android.os.Bundle;
@@ -49,6 +50,8 @@
 public class PreferenceActivity extends PasscodeLockActivity implements
         PreferenceFragmentCompat.OnPreferenceStartFragmentCallback{
 
+    public static final String ACTION_MANAGE_BOOKS = "org.gnucash.android.intent.action.MANAGE_BOOKS";
+
     @Bind(R.id.slidingpane_layout) SlidingPaneLayout mSlidingPaneLayout;
 
     @Override
@@ -77,8 +80,14 @@ public void onPanelClosed(View panel) {
             }
         });
 
-        mSlidingPaneLayout.openPane();
-        loadFragment(new GeneralPreferenceFragment());
+        String action = getIntent().getAction();
+        if (action != null && action.equals(ACTION_MANAGE_BOOKS)){
+            loadFragment(new BookListFragment());
+            mSlidingPaneLayout.closePane();
+        } else {
+            mSlidingPaneLayout.openPane();
+            loadFragment(new GeneralPreferenceFragment());
+        }
 
         ActionBar actionBar = getSupportActionBar();
         assert actionBar != null;
diff --git a/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
index a6d9d19a..ab372d5a 100644
--- a/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
+++ b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
@@ -15,10 +15,10 @@
  */
 package org.gnucash.android.util;
 
-import android.preference.PreferenceManager;
 import android.util.Log;
 
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 
 import java.sql.Timestamp;
 
@@ -37,7 +37,10 @@ private PreferencesHelper() {}
      */
     protected static final String LOG_TAG = "PreferencesHelper";
 
-    private static final String PREFERENCE_LAST_EXPORT_TIME_KEY = "last_export_time";
+    /**
+     * Preference key for saving the last export time
+     */
+    public static final String PREFERENCE_LAST_EXPORT_TIME_KEY = "last_export_time";
 
     /**
      * Set the last export time in UTC time zone.
@@ -48,7 +51,7 @@ private PreferencesHelper() {}
     public static void setLastExportTime(Timestamp lastExportTime) {
         final String utcString = TimestampHelper.getUtcStringFromTimestamp(lastExportTime);
         Log.d(LOG_TAG, "Storing '" + utcString + "' as lastExportTime in Android Preferences.");
-        PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
+        PreferenceActivity.getActiveBookSharedPreferences(GnuCashApplication.getAppContext())
                 .edit()
                 .putString(PREFERENCE_LAST_EXPORT_TIME_KEY, utcString)
                 .apply();
@@ -60,7 +63,7 @@ public static void setLastExportTime(Timestamp lastExportTime) {
      * @return A {@link Timestamp} with the time.
      */
     public static Timestamp getLastExportTime() {
-        final String utcString = PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
+        final String utcString = PreferenceActivity.getActiveBookSharedPreferences(GnuCashApplication.getAppContext())
                 .getString(PREFERENCE_LAST_EXPORT_TIME_KEY,
                         TimestampHelper.getUtcStringFromTimestamp(TimestampHelper.getTimestampFromEpochZero()));
         Log.d(LOG_TAG, "Retrieving '" + utcString + "' as lastExportTime from Android Preferences.");
diff --git a/app/src/main/java/org/gnucash/android/util/TimestampHelper.java b/app/src/main/java/org/gnucash/android/util/TimestampHelper.java
index 407f187c..c67b557f 100644
--- a/app/src/main/java/org/gnucash/android/util/TimestampHelper.java
+++ b/app/src/main/java/org/gnucash/android/util/TimestampHelper.java
@@ -27,6 +27,8 @@
  */
 public final class TimestampHelper {
 
+    public static final Timestamp EPOCH_ZERO_TIMESTAMP = new Timestamp(0);
+
     /**
      * Should be not instantiated.
      */
@@ -56,7 +58,7 @@ public static String getUtcStringFromTimestamp(Timestamp timestamp) {
      * @return A {@link Timestamp} with time in milliseconds equals to zero.
      */
     public static Timestamp getTimestampFromEpochZero() {
-        return new Timestamp(0);
+        return EPOCH_ZERO_TIMESTAMP;
     }
 
     /**
diff --git a/app/src/main/res/drawable-hdpi/ic_clear_black_24dp.png b/app/src/main/res/drawable-hdpi/ic_clear_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..1a9cd75a0d2692fa380f367bdb41c2420df310b0
GIT binary patch
literal 207
zcmeAS@N?(olHy`uVBq!ia0vp^Dj>|k0wldT1B8LpG*1`DkP61PSG>8J9RwIIzPh7b
zJflYMsk(bE^P@Beu4=(eGmA7oyR_x~a$D?{a5p37g|Cs|p&E~Q4@@WZu3cW0RzKfl
zOG4W1`7<rjzc~9@CSNI%iRiF;JjK{+?eT+CHH@6DO6**0r98#B^hN&uYw<r+LK-=x
z=P)g94o;{k(CP_bJ;t_t$BlC<pY$DneQ8zgpQNAtZt-*3r-keNYU~2KkipZ{&t;uc
GLK6TsDN>gJ

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_clear_black_24dp.png b/app/src/main/res/drawable-mdpi/ic_clear_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..40a1a84e34f4fb9c31b1dccf1b2bd7f5a50ac00d
GIT binary patch
literal 164
zcmeAS@N?(olHy`uVBq!ia0vp^5+KaM0wlfaz7_+iY)==*kP619lQs%6EAp^x=L~Fl
z``+Hk)n<pB%!Iph+z+<r>=Dm!pL5PtJwWQDwD%^7mKX72vfc*YT)xac;A{}-v*=ps
zr9JO5s)Jrvt$1~wJ<6?Hv?}9?*Yy)i*G<&jSt@L~vF4xM{qD^_8RvC6y^4F&G81Sm
NgQu&X%Q~loCIAp8KMVi>

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_clear_black_24dp.png b/app/src/main/res/drawable-xhdpi/ic_clear_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..6bc437298ab7bfbfbf128acdf5849e304b3c6903
GIT binary patch
literal 235
zcmeAS@N?(olHy`uVBq!ia0vp^1|ZDA0wn)(8}b0DO`a}}Ar*{or)}gqq9DL3|6^j{
z=hBm&C)~N@b{5Sp4w$_m*}geiNBekToKL{TWpQP5xqRwZuPjq53pI^Z3A|FbUaRcY
z{O^J0fmhZ3y?R?;$@JP$iP2W!Cd>8DEZ3V|*s2`1aV~kzx#D@}&nn~61<yHG#mh(7
zE3I3f=I(nvzf0xdSALCyU(F^idwFn~>{Xzi+b(jKntiPo%%5fP`-@uPgu|~7wTA~r
iR9eY#70Eo`TEl2=&Qt5V_=GOd^$eb_elF{r5}E*W<X(IL

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_clear_black_24dp.png b/app/src/main/res/drawable-xxhdpi/ic_clear_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..51b4401ca053ca8cad6e9903646709a2f44444df
GIT binary patch
literal 309
zcmeAS@N?(olHy`uVBq!ia0vp^9w5xY0wn)GsXhaw{&>1LhEy=Vy<yFF$UwmLV))FX
zs)>sgJ$~x+g}6OvsxLimbaeN-!xQItoH=3nd`|H@dF!kYp_dChV`b9AudQLRn7yg2
zv~UiON9*MGOYAy6D=_*g@;c3(5`S(Hi^X<huBlrXE*Z1OSSv8{sT%UBug&L=pK7t(
zuCv&pv-s5{i}uL^?UU{53W6WasStYJGTB0X+LZ~PA6Ee-z^V>;wk8Ms*3SMP^!WTf
z-E_DAd$kLMWY`Z`);MuKF9=d$?_mzLoFj7Xp~|_3ODg!(3;AT&wLoS^O+0tsvcZJ&
zD(m_$dNm(!9@n+CTyDa$w$*a^-$!>qK3P{4end8+qbAwoFEAV!JYD@<);T3K0RXh>
Be)#|Z

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxxhdpi/ic_clear_black_24dp.png b/app/src/main/res/drawable-xxxhdpi/ic_clear_black_24dp.png
new file mode 100644
index 0000000000000000000000000000000000000000..df42feecb812b02df59b016f4d9ba995be1da82a
GIT binary patch
literal 377
zcmeAS@N?(olHy`uVBq!ia0vp^2_VeD0wg^q?%&M7!06!V;uuoF`1aP_Or}5)*N1l-
zmd#l`*P1uuRG{<>g~}cLi3<F6%!<`_*{;osx0o{}$V+o6h<G}^Cgo(ugE`)OasQ38
z-$^?BpJ{qsX79gWa~ZzGKcA+2Z9b<%y_(10nG9bd4^8@dyfTI1@Ab$}Wo~i`iLaWg
zxrG|+JOqB(HNO7Mvi7~OpM!kiEw2X<{<`<VTlV=|FxMWb)CS1|`8)Rc10@+>NSnFL
zkGQYSP&@m;*IK6Q-#O#%t5^JG`{BMqf8+n2Z|={&zE4otx%%IU37m2NTYWzKGCBDA
zGRyk&LVN6HtbDhUpKVe#i0?1F$Iko1uY_g0mfJ~qyju(6`+^n!Z*4i<wr{7w^gVNv
z^LDSj9aHR4!W308>z5hh+Bv?p(-%zt$M-+!?Iw6Q#P16<$f#A@_7oVT44$rjF6*2U
FngA8*uUr5C

literal 0
HcmV?d00001

diff --git a/app/src/main/res/layout/cardview_book.xml b/app/src/main/res/layout/cardview_book.xml
new file mode 100644
index 00000000..be292e8e
--- /dev/null
+++ b/app/src/main/res/layout/cardview_book.xml
@@ -0,0 +1,100 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+                                    xmlns:tools="http://schemas.android.com/tools"
+                                    xmlns:cardview="http://schemas.android.com/apk/res-auto"
+                                    cardview:cardUseCompatPadding="true"
+                                    cardview:cardPreventCornerOverlap="false"
+                                    android:foreground="?selectableItemBackground"
+                                    android:focusable="false"
+                                    android:clickable="false"
+                                    android:layout_marginLeft="5dp"
+                                    android:layout_marginRight="5dp"
+                                    android:layout_width="match_parent"
+                                    android:layout_height="wrap_content">
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:minHeight="@dimen/card_min_height">
+
+        <include android:id="@+id/list_item_2_lines"
+                 layout="@layout/list_item_2_lines"
+                 android:paddingTop="6dp"
+                 android:layout_height="wrap_content"
+                 android:layout_width="match_parent"
+                 android:layout_toRightOf="@id/account_color_strip"
+                 android:layout_marginTop="6dp"
+                 android:layout_marginBottom="@dimen/dialog_padding"
+                 android:layout_marginLeft="@dimen/dialog_padding"
+                 android:layout_marginRight="52dp"/>
+
+        <ImageView android:visibility="gone"
+            android:id="@+id/options_menu"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:layout_alignParentBottom="true"
+            android:layout_alignParentRight="true"
+            android:background="?attr/selectableItemBackgroundBorderless"
+            android:paddingTop="20dp"
+            android:layout_marginBottom="4dp"
+            android:paddingLeft="24dp"
+            android:scaleType="centerInside"
+            android:src="@drawable/ic_more_vert_black_24dp"
+            tools:ignore="ContentDescription" />
+
+        <ImageView
+            android:id="@+id/delete_book"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:layout_alignParentRight="true"
+            android:background="?attr/selectableItemBackgroundBorderless"
+            android:paddingTop="6dp"
+            android:paddingRight="6dp"
+            android:paddingLeft="22dp"
+            android:paddingBottom="22dp"
+            android:src="@drawable/ic_clear_black_24dp"
+            tools:ignore="ContentDescription" />
+
+        <TextView
+            android:id="@+id/label_last_sync"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:singleLine="true"
+            android:layout_below="@id/list_item_2_lines"
+            android:layout_alignLeft="@id/list_item_2_lines"
+            android:layout_marginBottom="4dp"
+            android:gravity="left|bottom|start"
+            android:textSize="14sp"
+            android:textColor="@android:color/darker_gray"
+            tools:text="Last export:"/>
+
+        <TextView
+            android:id="@+id/last_sync_time"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:singleLine="true"
+            android:layout_below="@id/list_item_2_lines"
+            android:layout_toRightOf="@id/label_last_sync"
+            android:layout_marginBottom="4dp"
+            android:layout_marginLeft="5dp"
+            android:gravity="left|bottom|start"
+            android:textSize="14sp"
+            android:textColor="@android:color/darker_gray"
+            tools:text="Sat, 04 July"/>
+    </RelativeLayout>
+</android.support.v7.widget.CardView>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_book_list.xml b/app/src/main/res/layout/fragment_book_list.xml
new file mode 100644
index 00000000..9071c9e0
--- /dev/null
+++ b/app/src/main/res/layout/fragment_book_list.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              android:orientation="vertical"
+              android:padding="@dimen/dialog_padding"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent">
+
+    <ListView android:id="@id/android:list"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent"
+              android:divider="@null" />
+
+    <TextView android:id="@id/android:empty"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent"
+              android:gravity="center"
+              android:text="No books in the database"
+              android:layout_gravity="center"
+              android:textAppearance="?android:textAppearanceLarge"
+              style="@style/ListItem"/>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_scheduled_events_list.xml b/app/src/main/res/layout/fragment_scheduled_events_list.xml
index 24429295..456e9758 100644
--- a/app/src/main/res/layout/fragment_scheduled_events_list.xml
+++ b/app/src/main/res/layout/fragment_scheduled_events_list.xml
@@ -1,5 +1,21 @@
 <?xml version="1.0" encoding="utf-8"?>
 
+<!--
+ Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
diff --git a/app/src/main/res/menu/book_context_menu.xml b/app/src/main/res/menu/book_context_menu.xml
new file mode 100644
index 00000000..a75c6cd4
--- /dev/null
+++ b/app/src/main/res/menu/book_context_menu.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!--
+ Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+      xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <item android:id="@+id/ctx_menu_sync_book"
+          android:checkable="true"
+          android:title="Enable Sync"
+          app:showAsAction="always"
+          android:orderInCategory="1" />
+</menu>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 8262c884..5df6c498 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -444,4 +444,6 @@
     <string name="digit_zero">0</string>
     <string name="digit_zero_text">+</string>
 
+    <string name="header_manage_books">Manage Books</string>
+    <string name="title_manage_books">Manage Books</string>
 </resources>
diff --git a/app/src/main/res/xml/fragment_book_preferences.xml b/app/src/main/res/xml/fragment_book_preferences.xml
new file mode 100644
index 00000000..624ed13a
--- /dev/null
+++ b/app/src/main/res/xml/fragment_book_preferences.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
+
+</PreferenceScreen>
\ No newline at end of file
diff --git a/app/src/main/res/xml/preference_fragment_headers.xml b/app/src/main/res/xml/preference_fragment_headers.xml
index 3acbd0dd..fb5ecb30 100644
--- a/app/src/main/res/xml/preference_fragment_headers.xml
+++ b/app/src/main/res/xml/preference_fragment_headers.xml
@@ -20,6 +20,8 @@
     <Preference android:key="@string/key_prefs_header_general"
         android:title="@string/header_general_settings"
         app:fragment="org.gnucash.android.ui.settings.GeneralPreferenceFragment"/>
+    <Preference android:title="@string/header_manage_books"
+                app:fragment="org.gnucash.android.ui.settings.BookListFragment" />
     <Preference app:fragment="org.gnucash.android.ui.settings.AccountPreferencesFragment"
         android:title="@string/header_account_settings" />
     <Preference app:fragment="org.gnucash.android.ui.settings.TransactionsPreferenceFragment"

From a8379f38a3de08dde585f20a62f62d200adb7aec Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 18 May 2016 16:19:42 +0200
Subject: [PATCH 051/121] Move backups and exports on SD card into a
 book-specific folder

---
 .../android/test/ui/ExportTransactionsTest.java    |   2 +-
 .../org/gnucash/android/db/MigrationHelper.java    | 114 ++++++++++++++++-----
 .../gnucash/android/export/ExportAsyncTask.java    |   4 +-
 .../java/org/gnucash/android/export/Exporter.java  |  39 +++++--
 .../gnucash/android/export/xml/GncXmlExporter.java |   7 +-
 .../ui/settings/BackupPreferenceFragment.java      |   4 +-
 6 files changed, 126 insertions(+), 44 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index f14b93fd..47b67dc8 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -200,7 +200,7 @@ public void testExport(ExportFormat format){
 			}
 		}
 
-		File folder = new File(Exporter.EXPORT_FOLDER_PATH);
+		File folder = new File(Exporter.getExportFolderPath());
 		folder.mkdirs();
 		assertThat(folder).exists();
 
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index 184c22ec..c57fcd04 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -196,7 +196,7 @@ public void run() {
                 for (File src : oldExportFolder.listFiles()) {
                     if (src.isDirectory())
                         continue;
-                    File dst = new File(Exporter.EXPORT_FOLDER_PATH + "/" + src.getName());
+                    File dst = new File(Exporter.BASE_FOLDER_PATH + "/exports/" + src.getName());
                     try {
                         MigrationHelper.moveFile(src, dst);
                     } catch (IOException e) {
@@ -212,7 +212,7 @@ public void run() {
             File oldBackupFolder = new File(oldExportFolder, "backup");
             if (oldBackupFolder.exists()){
                 for (File src : new File(oldExportFolder, "backup").listFiles()) {
-                    File dst = new File(Exporter.BACKUP_FOLDER_PATH + "/" + src.getName());
+                    File dst = new File(Exporter.BASE_FOLDER_PATH + "/backups/" + src.getName());
                     try {
                         MigrationHelper.moveFile(src, dst);
                     } catch (IOException e) {
@@ -227,6 +227,48 @@ public void run() {
         }
     };
 
+    /**
+     * Moves all files from one directory  into another.
+     * The destination directory is assumed to already exist
+     */
+    static class RecursiveMoveFiles implements Runnable {
+        File mSource;
+        File mDestination;
+
+        /**
+         * Constructor, specify origin and target directories
+         * @param src Source directory/file. If directory, all files within it will be moved
+         * @param dst Destination directory/file. If directory, it should already exist
+         */
+        RecursiveMoveFiles(File src, File dst){
+            mSource = src;
+            mDestination = dst;
+        }
+
+        private boolean copy(File src, File dst){
+            boolean results = true;
+            if (src.isDirectory()){
+                dst.mkdirs(); //we assume it works everytime. Great, right?
+                for (File file : src.listFiles()) {
+                    File target = new File(dst, file.getName());
+                    results &= copy(file, target);
+                }
+            } else {
+                try {
+                    moveFile(src, dst);
+                } catch (IOException e) {
+                    results = false;
+                    Log.d(LOG_TAG, "Error moving file: " + src.getAbsolutePath());
+                }
+            }
+            return results;
+        }
+
+        @Override
+        public void run() {
+            copy(mSource, mDestination);
+        }
+    }
 
     /**
      * Imports commodities into the database from XML resource file
@@ -493,8 +535,8 @@ static int upgradeDbToVersion7(SQLiteDatabase db) {
     static int upgradeDbToVersion8(SQLiteDatabase db) {
         Log.i(DatabaseHelper.LOG_TAG, "Upgrading database to version 8");
         int oldVersion = 7;
-        new File(Exporter.BACKUP_FOLDER_PATH).mkdirs();
-        new File(Exporter.EXPORT_FOLDER_PATH).mkdirs();
+        new File(Exporter.BASE_FOLDER_PATH + "/backups/").mkdirs();
+        new File(Exporter.BASE_FOLDER_PATH + "/exports/").mkdirs();
         //start moving the files in background thread before we do the database stuff
         new Thread(moveExportedFilesToNewDefaultLocation).start();
 
@@ -1434,34 +1476,58 @@ static int upgradeDbToVersion13(SQLiteDatabase db){
 
             db.execSQL("DROP TABLE " + SplitEntry.TABLE_NAME + "_bak");
 
+            db.setTransactionSuccessful();
+            oldVersion = 13;
+        } finally {
+            db.endTransaction();
+        }
 
-            //Migrate book-specific preferences away from shared preferences
-            Context context = GnuCashApplication.getAppContext();
-            String keyUseDoubleEntry = context.getString(R.string.key_use_double_entry);
-            String keySaveOpeningBalance = context.getString(R.string.key_save_opening_balances);
-            String keyLastExportTime = PreferencesHelper.PREFERENCE_LAST_EXPORT_TIME_KEY;
 
-            SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);
-            String lastExportTime = sharedPrefs.getString(keyLastExportTime, TimestampHelper.getTimestampFromEpochZero().toString());
-            boolean useDoubleEntry = sharedPrefs.getBoolean(keyUseDoubleEntry, true);
-            boolean saveOpeningBalance = sharedPrefs.getBoolean(keySaveOpeningBalance, false);
+        //Migrate book-specific preferences away from shared preferences
+        Log.d(LOG_TAG, "Migrating shared preferences into book preferences");
+        Context context = GnuCashApplication.getAppContext();
+        String keyUseDoubleEntry = context.getString(R.string.key_use_double_entry);
+        String keySaveOpeningBalance = context.getString(R.string.key_save_opening_balances);
+        String keyLastExportTime = PreferencesHelper.PREFERENCE_LAST_EXPORT_TIME_KEY;
 
+        SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);
+        String lastExportTime = sharedPrefs.getString(keyLastExportTime, TimestampHelper.getTimestampFromEpochZero().toString());
+        boolean useDoubleEntry = sharedPrefs.getBoolean(keyUseDoubleEntry, true);
+        boolean saveOpeningBalance = sharedPrefs.getBoolean(keySaveOpeningBalance, false);
 
-            SharedPreferences bookPrefs = PreferenceActivity.getActiveBookSharedPreferences(context);
-            bookPrefs.edit()
-                    .putString(keyLastExportTime, lastExportTime)
-                    .putBoolean(keyUseDoubleEntry, useDoubleEntry)
-                    .putBoolean(keySaveOpeningBalance, saveOpeningBalance)
-                    .apply();
 
+        SharedPreferences bookPrefs = PreferenceActivity.getActiveBookSharedPreferences(context);
+        bookPrefs.edit()
+                .putString(keyLastExportTime, lastExportTime)
+                .putBoolean(keyUseDoubleEntry, useDoubleEntry)
+                .putBoolean(keySaveOpeningBalance, saveOpeningBalance)
+                .apply();
 
-            //// TODO: 18.05.2016 Move backup files from external storage?
+        String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
 
-            db.setTransactionSuccessful();
-            oldVersion = 13;
-        } finally {
-            db.endTransaction();
+
+        //// TODO: 18.05.2016 Move backup files from external storage?
+        Log.d(LOG_TAG, "Moving export and backup files to book-specific folders");
+        File newBasePath = new File(Exporter.BASE_FOLDER_PATH + "/" + activeBookUID);
+        newBasePath.mkdirs();
+
+        File src = new File(Exporter.BASE_FOLDER_PATH + "/backups/");
+        File dst = new File(Exporter.BASE_FOLDER_PATH + "/" + activeBookUID + "/backups/");
+        new Thread(new RecursiveMoveFiles(src, dst)).start();
+
+        src = new File(Exporter.BASE_FOLDER_PATH + "/exports/");
+        dst = new File(Exporter.BASE_FOLDER_PATH + "/" + activeBookUID + "/exports/");
+        new Thread(new RecursiveMoveFiles(src, dst)).start();
+
+        String activeBookName = BooksDbAdapter.getInstance().getActiveBookDisplayName();
+        File nameFile = new File(newBasePath, activeBookName.replaceAll("[^a-zA-Z0-9.-]", "_"));
+        try {
+            nameFile.createNewFile();
+        } catch (IOException e) {
+            Log.e(LOG_TAG, "Error creating name file for the database: " + nameFile.getName());
+            e.printStackTrace();
         }
+
         return oldVersion;
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index 10ec21c1..442f7d70 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -409,11 +409,11 @@ private void moveExportToOwnCloud() {
      */
     private List<String> moveExportToSDCard() {
         Log.i(TAG, "Moving exported file to external storage");
-        new File(Exporter.EXPORT_FOLDER_PATH).mkdirs();
+        new File(Exporter.getExportFolderPath());
         List<String> dstFiles = new ArrayList<>();
 
         for (String src: mExportedFiles) {
-            String dst = Exporter.EXPORT_FOLDER_PATH + stripPathPart(src);
+            String dst = Exporter.getExportFolderPath() + stripPathPart(src);
             try {
                 moveFile(src, dst);
                 dstFiles.add(dst);
diff --git a/app/src/main/java/org/gnucash/android/export/Exporter.java b/app/src/main/java/org/gnucash/android/export/Exporter.java
index 51eba4b0..34c26f7b 100644
--- a/app/src/main/java/org/gnucash/android/export/Exporter.java
+++ b/app/src/main/java/org/gnucash/android/export/Exporter.java
@@ -28,6 +28,7 @@
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;
 import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
@@ -60,17 +61,7 @@
     /**
      * Application folder on external storage
      */
-    private static final String BASE_FOLDER_PATH = Environment.getExternalStorageDirectory() + "/" + BuildConfig.APPLICATION_ID;
-
-    /**
-     * Folder where exports like QIF and OFX will be saved for access by external programs
-     */
-    public static final String EXPORT_FOLDER_PATH =  BASE_FOLDER_PATH + "/exports/";
-
-    /**
-     * Folder where XML backups will be saved
-     */
-    public static final String BACKUP_FOLDER_PATH = BASE_FOLDER_PATH + "/backups/";
+    public static final String BASE_FOLDER_PATH = Environment.getExternalStorageDirectory() + "/" + BuildConfig.APPLICATION_ID;
 
     /**
      * Export options
@@ -200,6 +191,32 @@ protected String getExportCacheFilePath(){
     }
 
     /**
+     * Returns that path to the export folder for the currently active book.
+     * This is the folder where exports like QIF and OFX will be saved for access by external programs
+     * @return Absolute path to export folder for active book
+     */
+    public static String getExportFolderPath(){
+        String path = BASE_FOLDER_PATH + "/" + BooksDbAdapter.getInstance().getActiveBookUID() + "/exports/";
+        File file = new File(path);
+        if (!file.exists())
+            file.mkdirs();
+        return path;
+    }
+
+    /**
+     * Returns the path to the backups folder for the currently active book
+     * @return Absolute path to backup folder for active book
+     */
+    public static String getBackupFolderPath(){
+        String path = BASE_FOLDER_PATH + "/" + BooksDbAdapter.getInstance().getActiveBookUID() + "/backups/";
+        File file = new File(path);
+        if (!file.exists())
+            file.mkdirs();
+        return path;
+    }
+
+
+    /**
      * Returns the MIME type for this exporter.
      * @return MIME type as string
      */
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index f55007ae..cd3cc5ef 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -900,7 +900,7 @@ public String getExportMimeType(){
     }
 
     /**
-     * Creates a backup of current database contents to the directory {@link Exporter#BACKUP_FOLDER_PATH}
+     * Creates a backup of current database contents to the directory {@link Exporter#getBackupFolderPath()}
      * @return {@code true} if backup was successful, {@code false} otherwise
      */
     public static boolean createBackup(){
@@ -925,10 +925,9 @@ public static boolean createBackup(){
      * Returns the full path of a file to make database backup.
      * Backups are done in XML format and are zipped (with ".zip" extension).
      * @return the file path for backups of the database.
-     * @see #BACKUP_FOLDER_PATH
+     * @see #getBackupFolderPath()
      */
     private static String getBackupFilePath(){
-        new File(BACKUP_FOLDER_PATH).mkdirs();
-        return BACKUP_FOLDER_PATH + buildExportFilename(ExportFormat.XML) + ".zip";
+        return Exporter.getBackupFolderPath() + buildExportFilename(ExportFormat.XML) + ".zip";
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
index 2c2e1649..c8ea6d28 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
@@ -353,10 +353,10 @@ public void onConnectionFailed(ConnectionResult connectionResult) {
 	 */
 	private void restoreBackup() {
 		Log.i("Settings", "Opening GnuCash XML backups for restore");
-		File[] backupFiles = new File(Exporter.BACKUP_FOLDER_PATH).listFiles();
+		File[] backupFiles = new File(Exporter.getBackupFolderPath()).listFiles();
 		if (backupFiles == null){
 			Toast.makeText(getActivity(), R.string.toast_backup_folder_not_found, Toast.LENGTH_LONG).show();
-			new File(Exporter.BACKUP_FOLDER_PATH).mkdirs();
+			new File(Exporter.getBackupFolderPath());
 			return;
 		}
 

From 2c6af58ed274b237026dc16200be56d6bc75c580 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 18 May 2016 23:25:27 +0200
Subject: [PATCH 052/121] Add unit and UX tests for multiple book support

Fix bug when retrieving books from database with no URI
Fix: book name is auto-generated prior to saving at database level
Extract some strings for i18n
---
 app/build.gradle                                   |   1 +
 .../org/gnucash/android/test/ui/MultiBookTest.java | 104 +++++++++++++++++++
 .../android/test/ui/PieChartReportTest.java        |  23 ++---
 .../android/test/ui/TransactionsActivityTest.java  |   4 +
 .../gnucash/android/db/adapter/BooksDbAdapter.java |   5 +-
 .../android/ui/common/BaseDrawerActivity.java      |   2 +-
 app/src/main/res/values/strings.xml                |   1 +
 .../test/unit/db/AccountsDbAdapterTest.java        |  17 +++-
 .../android/test/unit/db/BooksDbAdapterTest.java   | 112 +++++++++++++++++++++
 .../test/unit/db/TransactionsDbAdapterTest.java    |  15 +++
 10 files changed, 267 insertions(+), 17 deletions(-)
 create mode 100644 app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java

diff --git a/app/build.gradle b/app/build.gradle
index 9e0ae25c..856fcebf 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -237,6 +237,7 @@ dependencies {
                         'com.android.support.test:runner:'          + androidSupportTestVersion,
                         'com.android.support.test:rules:'           + androidSupportTestVersion,
                         'com.android.support.test.espresso:espresso-core:'      + androidEspressoVersion,
+                        'com.android.support.test.espresso:espresso-intents:'   + androidEspressoVersion,
             //the following are only added so that the app and test version both us the same versions
                         'com.android.support:appcompat-v7:'     + androidSupportVersion,
                         'com.android.support:design:'           + androidSupportVersion)
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
new file mode 100644
index 00000000..241223b8
--- /dev/null
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
@@ -0,0 +1,104 @@
+/*
+ * Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.test.ui;
+
+import android.support.test.espresso.contrib.DrawerActions;
+import android.support.test.espresso.intent.Intents;
+import android.support.test.espresso.intent.rule.IntentsTestRule;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.model.Book;
+import org.gnucash.android.test.ui.util.DisableAnimationsRule;
+import org.gnucash.android.ui.account.AccountsActivity;
+import org.gnucash.android.ui.settings.PreferenceActivity;
+import org.junit.BeforeClass;
+import org.junit.ClassRule;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static android.support.test.espresso.Espresso.onView;
+import static android.support.test.espresso.action.ViewActions.click;
+import static android.support.test.espresso.action.ViewActions.swipeUp;
+import static android.support.test.espresso.assertion.ViewAssertions.matches;
+import static android.support.test.espresso.intent.matcher.IntentMatchers.hasComponent;
+import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static android.support.test.espresso.matcher.ViewMatchers.withId;
+import static android.support.test.espresso.matcher.ViewMatchers.withText;
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * Test support for multiple books in the application
+ */
+@RunWith(AndroidJUnit4.class)
+public class MultiBookTest {
+
+    private static BooksDbAdapter mBooksDbAdapter;
+
+    @ClassRule
+    public static DisableAnimationsRule disableAnimationsRule = new DisableAnimationsRule();
+
+    @Rule
+    public IntentsTestRule<AccountsActivity> mActivityRule = new IntentsTestRule<>(AccountsActivity.class);
+
+    @BeforeClass
+    public static void prepTestCase(){
+        mBooksDbAdapter = BooksDbAdapter.getInstance();
+    }
+
+    @Test
+    public void shouldOpenBookManager(){
+        onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
+        onView(withId(R.id.book_name)).check(matches(isDisplayed())).perform(click());
+
+        onView(withText(R.string.menu_manage_books)).perform(click());
+
+        Intents.intended(hasComponent(PreferenceActivity.class.getName()));
+    }
+
+    @Test
+    public void creatingNewAccounts_shouldCreatedNewBook(){
+        long booksCount = mBooksDbAdapter.getRecordsCount();
+
+        onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
+        onView(withId(R.id.drawer_layout)).perform(swipeUp());
+        onView(withText(R.string.title_settings)).perform(click());
+
+        Intents.intended(hasComponent(PreferenceActivity.class.getName()));
+
+        onView(withText(R.string.header_account_settings)).perform(click());
+        onView(withText(R.string.title_create_default_accounts)).perform(click());
+        onView(withId(android.R.id.button1)).perform(click());
+
+        //// TODO: 18.05.2016 wait for import to finish instead
+        sleep(2000); //give import time to finish
+
+        assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(booksCount+1);
+
+        Book activeBook = mBooksDbAdapter.getRecord(mBooksDbAdapter.getActiveBookUID());
+        assertThat(activeBook.getDisplayName()).isEqualTo("Book " + (booksCount+1));
+    }
+
+    private static void sleep(long millis){
+        try {
+            Thread.sleep(millis);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+    }
+}
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index a3490a54..662a4cc2 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -104,8 +104,7 @@
     private ReportsActivity mReportsActivity;
 
     @Rule
-    public ActivityTestRule<ReportsActivity> mActivityRule =
-            new ActivityTestRule<>(ReportsActivity.class, true, false);
+    public ActivityTestRule<ReportsActivity> mActivityRule = new ActivityTestRule<>(ReportsActivity.class);
 
     @ClassRule
     public static DisableAnimationsRule disableAnimationsRule = new DisableAnimationsRule();
@@ -141,18 +140,15 @@ public static void prepareTestCase() throws Exception {
 	@Before
 	public void setUp() throws Exception {
         // creates default accounts
-        mReportsActivity = mActivityRule.launchActivity(new Intent());
+        mReportsActivity = mActivityRule.getActivity();
         assertThat(mAccountsDbAdapter.getRecordsCount()).isGreaterThan(20); //lots of accounts in the default
+        onView(withId(R.id.btn_pie_chart)).perform(click());
 	}
 
     /**
-     * Call this method in every tests after adding data
+     * Add a transaction for the current month in order to test the report view
+     * @throws Exception
      */
-    private void getTestActivity() {
-        onView(withId(R.id.btn_pie_chart)).perform(click());
-        refreshReport();
-    }
-
     private void addTransactionForCurrentMonth() throws Exception {
         Transaction transaction = new Transaction(TRANSACTION_NAME);
         transaction.setTime(System.currentTimeMillis());
@@ -166,6 +162,10 @@ private void addTransactionForCurrentMonth() throws Exception {
         mTransactionsDbAdapter.addRecord(transaction, DatabaseAdapter.UpdateMethod.insert);
     }
 
+    /**
+     * Add a transactions for the previous month for testing pie chart
+     * @param minusMonths Number of months prior
+     */
     private void addTransactionForPreviousMonth(int minusMonths) {
         Transaction transaction = new Transaction(TRANSACTION2_NAME);
         transaction.setTime(new LocalDateTime().minusMonths(minusMonths).toDate().getTime());
@@ -182,7 +182,6 @@ private void addTransactionForPreviousMonth(int minusMonths) {
 
     @Test
     public void testNoData() {
-        getTestActivity();
         onView(withId(R.id.pie_chart)).perform(click());
         onView(withId(R.id.selected_chart_slice)).check(matches(withText(R.string.label_select_pie_slice_to_see_details)));
     }
@@ -191,7 +190,7 @@ public void testNoData() {
     public void testSelectingValue() throws Exception {
         addTransactionForCurrentMonth();
         addTransactionForPreviousMonth(1);
-        getTestActivity();
+        refreshReport();
 
         onView(withId(R.id.pie_chart)).perform(clickXY(Position.BEGIN, Position.MIDDLE));
         float percent = (float) (TRANSACTION_AMOUNT / (TRANSACTION_AMOUNT + TRANSACTION2_AMOUNT) * 100);
@@ -208,7 +207,7 @@ public void testSpinner() throws Exception {
 
         mTransactionsDbAdapter.addRecord(transaction, DatabaseAdapter.UpdateMethod.insert);
 
-        getTestActivity();
+        refreshReport();
 
         Thread.sleep(1000);
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index ba56da37..2eb6b2af 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -21,6 +21,7 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.SharedPreferences.Editor;
+import android.support.test.espresso.Espresso;
 import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
 
@@ -192,6 +193,9 @@ public void testAddTransactionShouldRequireAmount(){
 		onView(withId(R.id.menu_save)).perform(click());
 		onView(withText(R.string.title_add_transaction)).check(matches(isDisplayed()));
 
+		Espresso.closeSoftKeyboard();
+		sleep(1000);
+
 		assertToastDisplayed(R.string.toast_transanction_amount_required);
 
 		int afterCount = mTransactionsDbAdapter.getTransactionsCount(DUMMY_ACCOUNT_UID);
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
index f1e28a0e..7993a919 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
@@ -69,7 +69,7 @@ public Book buildModelInstance(@NonNull Cursor cursor) {
         Book book = new Book(rootAccountGUID);
         book.setDisplayName(displayName);
         book.setRootTemplateUID(rootTemplateGUID);
-        book.setSourceUri(Uri.parse(uriString));
+        book.setSourceUri(uriString == null ? null : Uri.parse(uriString));
         book.setActive(active > 0);
         book.setLastSync(TimestampHelper.getTimestampFromUtcString(lastSync));
 
@@ -80,7 +80,8 @@ public Book buildModelInstance(@NonNull Cursor cursor) {
     @Override
     protected @NonNull SQLiteStatement setBindings(@NonNull SQLiteStatement stmt, @NonNull final Book book) {
         stmt.clearBindings();
-        stmt.bindString(1, book.getDisplayName());
+        String displayName = book.getDisplayName() == null ? generateDefaultBookName() : book.getDisplayName();
+        stmt.bindString(1, displayName);
         stmt.bindString(2, book.getRootAccountUID());
         stmt.bindString(3, book.getRootTemplateUID());
         if (book.getSourceUri() != null)
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index e484ef24..e03726e0 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -329,7 +329,7 @@ public void onClickBook(View view){
             String name = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME));
             menu.add(0, (int)id, maxRecent, name);
         }
-        menu.add(0, ID_MANAGE_BOOKS, maxRecent, "Manage Books...");
+        menu.add(0, ID_MANAGE_BOOKS, maxRecent, R.string.menu_manage_books);
 
         popup.show();
     }
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 5df6c498..d438ec1f 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -446,4 +446,5 @@
 
     <string name="header_manage_books">Manage Books</string>
     <string name="title_manage_books">Manage Books</string>
+    <string name="menu_manage_books">Manage Books...</string>
 </resources>
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
index b918cdc0..1b9f6384 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
@@ -1,3 +1,18 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 package org.gnucash.android.test.unit.db;
 
 import android.database.sqlite.SQLiteDatabase;
@@ -25,7 +40,6 @@
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.PeriodType;
-import org.gnucash.android.model.Price;
 import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
@@ -35,7 +49,6 @@
 import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
 import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
 import org.junit.After;
-import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
new file mode 100644
index 00000000..30214faf
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
@@ -0,0 +1,112 @@
+/*
+ * Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.test.unit.db;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
+import org.gnucash.android.model.BaseModel;
+import org.gnucash.android.model.Book;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * Test the book database adapter
+ */
+@RunWith(GnucashTestRunner.class) //package is required so that resources can be found in dev mode
+@Config(constants = BuildConfig.class, sdk = 21, packageName = "org.gnucash.android", shadows = {ShadowCrashlytics.class, ShadowUserVoice.class})
+public class BooksDbAdapterTest {
+
+    private BooksDbAdapter mBooksDbAdapter;
+
+    @Before
+    public void setUp() {
+        mBooksDbAdapter = BooksDbAdapter.getInstance();
+        assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(1); //there is always a default book after app start
+        assertThat(mBooksDbAdapter.getActiveBookUID()).isNotNull();
+
+        mBooksDbAdapter.deleteAllRecords();
+        assertThat(mBooksDbAdapter.getRecordsCount()).isZero();
+    }
+
+    @Test
+    public void addBook(){
+        Book book = new Book(BaseModel.generateUID());
+        mBooksDbAdapter.addRecord(book, DatabaseAdapter.UpdateMethod.insert);
+
+        assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(1);
+        assertThat(mBooksDbAdapter.getRecord(book.getUID()).getDisplayName()).isEqualTo("Book 1");
+        assertThat(mBooksDbAdapter.getActiveBookUID()).isNotEqualTo(book.getUID());
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void savingBook_requiresRootAccountGUID(){
+        Book book = new Book();
+        mBooksDbAdapter.addRecord(book);
+    }
+
+    @Test
+    public void deleteBook(){
+        Book book = new Book();
+        book.setRootAccountUID(BaseModel.generateUID());
+        mBooksDbAdapter.addRecord(book);
+
+        mBooksDbAdapter.deleteRecord(book.getUID());
+
+        assertThat(mBooksDbAdapter.getRecordsCount()).isZero();
+    }
+
+    @Test
+    public void setBookActive(){
+        Book book1 = new Book(BaseModel.generateUID());
+        Book book2 = new Book(BaseModel.generateUID());
+
+        mBooksDbAdapter.addRecord(book1);
+        mBooksDbAdapter.addRecord(book2);
+
+        mBooksDbAdapter.setActive(book1.getUID());
+
+        assertThat(mBooksDbAdapter.getActiveBookUID()).isEqualTo(book1.getUID());
+
+        mBooksDbAdapter.setActive(book2.getUID());
+        assertThat(mBooksDbAdapter.isActive(book2.getUID())).isTrue();
+        //setting book2 as active should disable book1 as active
+        Book book = mBooksDbAdapter.getRecord(book1.getUID());
+        assertThat(book.isActive()).isFalse();
+    }
+
+    /**
+     * Test that the generated display name has an ordinal greater than the number of
+     * book records in the database
+     */
+    @Test
+    public void testGeneratedDisplayName(){
+        Book book1 = new Book(BaseModel.generateUID());
+        Book book2 = new Book(BaseModel.generateUID());
+
+        mBooksDbAdapter.addRecord(book1);
+        mBooksDbAdapter.addRecord(book2);
+
+        assertThat(mBooksDbAdapter.generateDefaultBookName()).isEqualTo("Book 3");
+    }
+}
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
index 2477fa09..245aa92b 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
@@ -1,3 +1,18 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 package org.gnucash.android.test.unit.db;
 
 import org.assertj.core.data.Index;

From 2404282c4d725cbf3abee6b0bdb68a59277c8242 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 27 May 2016 23:38:43 +0200
Subject: [PATCH 053/121] Add delete confirmation dialog before deleting book

Add option to create new book from Book manager interface
Add multi book support tests
---
 .../org/gnucash/android/test/ui/MultiBookTest.java | 13 ++++++
 .../android/ui/settings/BookListFragment.java      | 49 ++++++++++++++++++++--
 app/src/main/res/menu/book_list_actions.xml        | 23 ++++++++++
 .../android/test/unit/db/BooksDbAdapterTest.java   | 24 +++++++++++
 4 files changed, 105 insertions(+), 4 deletions(-)
 create mode 100644 app/src/main/res/menu/book_list_actions.xml

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
index 241223b8..3a964482 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
@@ -94,6 +94,19 @@ public void creatingNewAccounts_shouldCreatedNewBook(){
         assertThat(activeBook.getDisplayName()).isEqualTo("Book " + (booksCount+1));
     }
 
+    @Test
+    public void testCreateNewBook(){
+        long bookCount = mBooksDbAdapter.getRecordsCount();
+
+        shouldOpenBookManager();
+
+        onView(withId(R.id.menu_create_book))
+                .check(matches(isDisplayed()))
+                .perform(click());
+
+        assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(bookCount+1);
+    }
+
     private static void sleep(long millis){
         try {
             Thread.sleep(millis);
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
index e54bcd36..16b45c68 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
@@ -17,6 +17,7 @@
 package org.gnucash.android.ui.settings;
 
 import android.content.Context;
+import android.content.DialogInterface;
 import android.database.Cursor;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
@@ -25,10 +26,12 @@
 import android.support.v4.content.Loader;
 import android.support.v4.widget.SimpleCursorAdapter;
 import android.support.v7.app.ActionBar;
+import android.support.v7.app.AlertDialog;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.PopupMenu;
 import android.util.Log;
 import android.view.LayoutInflater;
+import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
@@ -38,6 +41,7 @@
 import android.widget.TextView;
 
 import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.BookDbHelper;
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
@@ -47,6 +51,7 @@
 import java.util.Date;
 
 import org.gnucash.android.db.DatabaseSchema.BookEntry;
+import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.Refreshable;
 import org.w3c.dom.Text;
 
@@ -85,6 +90,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         actionBar.setHomeButtonEnabled(true);
         actionBar.setDisplayHomeAsUpEnabled(true);
         actionBar.setTitle(R.string.title_manage_books);
+        setHasOptionsMenu(true);
 
         getListView().setChoiceMode(ListView.CHOICE_MODE_NONE);
     }
@@ -96,8 +102,26 @@ public void onResume() {
     }
 
     @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.book_list_actions, menu);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()){
+            case R.id.menu_create_book:
+                AccountsActivity.createDefaultAccounts(GnuCashApplication.getDefaultCurrencyCode(), getActivity());
+                return true;
+
+            default:
+                return false;
+        }
+
+    }
+
+    @Override
     public void refresh() {
-        getLoaderManager().initLoader(0, null, this);
+        getLoaderManager().restartLoader(0, null, this);
     }
 
     @Override
@@ -178,9 +202,26 @@ public boolean onMenuItemClick(MenuItem item) {
                 deleteBookBtn.setOnClickListener(new View.OnClickListener() {
                     @Override
                     public void onClick(View v) {
-                        //// TODO: 18.05.2016 Delete confirmation dialog
-                        BooksDbAdapter.getInstance().deleteRecord(bookUID);
-                        refresh();
+                        //// TODO: extract strings
+                        AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(getActivity());
+                        dialogBuilder.setTitle("Confirm delete Book")
+                                .setIcon(R.drawable.ic_close_white_24dp)
+                                .setMessage("Are you sure you want to delete this book.\nThis action cannot be undone!");
+                        dialogBuilder.setPositiveButton("Delete Book", new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                BooksDbAdapter.getInstance().deleteRecord(bookUID);
+                                refresh();
+                            }
+                        });
+                        dialogBuilder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                dialog.dismiss();
+                            }
+                        });
+                        dialogBuilder.create().show();
+
                     }
                 });
             }
diff --git a/app/src/main/res/menu/book_list_actions.xml b/app/src/main/res/menu/book_list_actions.xml
new file mode 100644
index 00000000..79631a36
--- /dev/null
+++ b/app/src/main/res/menu/book_list_actions.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+      xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item android:id="@+id/menu_create_book"
+          android:icon="@drawable/ic_add_white_24dp"
+          app:showAsAction="always"
+          android:title="New Book"/>
+</menu>
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
index 30214faf..13ecbe7d 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
@@ -109,4 +109,28 @@ public void testGeneratedDisplayName(){
 
         assertThat(mBooksDbAdapter.generateDefaultBookName()).isEqualTo("Book 3");
     }
+
+    /**
+     * Test that book names never conflict and that the ordinal attached to the book name is
+     * increased irrespective of the order in which books are added to and deleted from the db
+     */
+    @Test
+    public void testGeneratedDisplayNames_shouldBeUnique(){
+        Book book1 = new Book(BaseModel.generateUID());
+        Book book2 = new Book(BaseModel.generateUID());
+        Book book3 = new Book(BaseModel.generateUID());
+
+        mBooksDbAdapter.addRecord(book1);
+        mBooksDbAdapter.addRecord(book2);
+        mBooksDbAdapter.addRecord(book3);
+
+        assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(3L);
+
+        mBooksDbAdapter.deleteRecord(book2.getUID());
+        assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(2L);
+
+        String generatedName = mBooksDbAdapter.generateDefaultBookName();
+        assertThat(generatedName).isNotEqualTo(book3.getDisplayName());
+        assertThat(generatedName).isEqualTo("Book 4");
+    }
 }

From 945fd36b6239a1fe01526d91797c37d36e700092 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 23 May 2016 19:42:57 +0200
Subject: [PATCH 054/121] Extract TransferFundsDialogFragment.parseAmount into
 a new class AmountParser.

This makes testing easier.
---
 .../dialog/TransferFundsDialogFragment.java        | 20 ++------------
 .../org/gnucash/android/util/AmountParser.java     | 32 ++++++++++++++++++++++
 2 files changed, 35 insertions(+), 17 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/util/AmountParser.java

diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index fa6bd5c6..3c7f3e91 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -36,19 +36,18 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
-import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.PricesDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Price;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.transaction.OnTransferFundsListener;
+import org.gnucash.android.util.AmountParser;
 
 import java.math.BigDecimal;
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
 import java.text.ParseException;
-import java.text.ParsePosition;
 import java.util.Currency;
 
 import butterknife.Bind;
@@ -205,7 +204,7 @@ private void transferFunds() {
         if (mExchangeRateRadioButton.isChecked()) {
             BigDecimal rate;
             try {
-                rate = parseAmount(mExchangeRateInput.getText().toString());
+                rate = AmountParser.parse(mExchangeRateInput.getText().toString());
             } catch (ParseException e) {
                 mExchangeRateInputLayout.setError(getString(R.string.error_invalid_exchange_rate));
                 return;
@@ -219,7 +218,7 @@ private void transferFunds() {
         if (mConvertedAmountRadioButton.isChecked()) {
             BigDecimal amount;
             try {
-                amount = parseAmount(mConvertedAmountInput.getText().toString());
+                amount = AmountParser.parse(mConvertedAmountInput.getText().toString());
             } catch (ParseException e) {
                 mConvertedAmountInputLayout.setError(getString(R.string.error_invalid_amount));
                 return;
@@ -241,19 +240,6 @@ private void transferFunds() {
         dismiss();
     }
 
-    private BigDecimal parseAmount(String amount) throws ParseException {
-        DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
-        formatter.setParseBigDecimal(true);
-        ParsePosition parsePosition = new ParsePosition(0);
-        BigDecimal parsedAmount = (BigDecimal) formatter.parse(amount, parsePosition);
-
-        // Ensure any mistyping by the user is caught instead of partially parsed
-        if (parsePosition.getIndex() < amount.length())
-            throw new ParseException("Parse error", parsePosition.getErrorIndex());
-
-        return parsedAmount;
-    }
-
     /**
      * Hides the error message from mConvertedAmountInputLayout and mExchangeRateInputLayout
      * when the user edits their content.
diff --git a/app/src/main/java/org/gnucash/android/util/AmountParser.java b/app/src/main/java/org/gnucash/android/util/AmountParser.java
new file mode 100644
index 00000000..f8595cd5
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/util/AmountParser.java
@@ -0,0 +1,32 @@
+package org.gnucash.android.util;
+
+import java.math.BigDecimal;
+import java.text.DecimalFormat;
+import java.text.NumberFormat;
+import java.text.ParseException;
+import java.text.ParsePosition;
+
+/**
+ * Parses amounts as String into BigDecimal.
+ */
+public class AmountParser {
+    /**
+     * Parses {@code amount} and returns it as a BigDecimal.
+     *
+     * @param amount String with the amount to parse.
+     * @return The amount parsed as a BigDecimal.
+     * @throws ParseException if the full string couldn't be parsed as an amount.
+     */
+    public static BigDecimal parse(String amount) throws ParseException {
+        DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
+        formatter.setParseBigDecimal(true);
+        ParsePosition parsePosition = new ParsePosition(0);
+        BigDecimal parsedAmount = (BigDecimal) formatter.parse(amount, parsePosition);
+
+        // Ensure any mistyping by the user is caught instead of partially parsed
+        if (parsePosition.getIndex() < amount.length())
+            throw new ParseException("Parse error", parsePosition.getErrorIndex());
+
+        return parsedAmount;
+    }
+}
\ No newline at end of file

From bd8210ac5e1962b954f60f8d0c463443455c4a6d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 23 May 2016 20:48:32 +0200
Subject: [PATCH 055/121] Add test case for AmountParser.

---
 .../android/test/unit/util/AmountParserTest.java   | 58 ++++++++++++++++++++++
 1 file changed, 58 insertions(+)
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java

diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java b/app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java
new file mode 100644
index 00000000..0d0ad72a
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java
@@ -0,0 +1,58 @@
+package org.gnucash.android.test.unit.util;
+
+import org.gnucash.android.util.AmountParser;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+import java.math.BigDecimal;
+import java.text.ParseException;
+import java.util.Locale;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+public class AmountParserTest {
+    private Locale mPreviousLocale;
+
+    @Before
+    public void setUp() throws Exception {
+        mPreviousLocale = Locale.getDefault();
+        Locale.setDefault(Locale.US);
+    }
+
+    @After
+    public void tearDown() throws Exception {
+        Locale.setDefault(mPreviousLocale);
+    }
+
+    @Test
+    public void testParseIntegerAmount() throws ParseException {
+        assertThat(AmountParser.parse("123")).isEqualTo(new BigDecimal(123));
+    }
+
+    @Test
+    public void parseDecimalAmount() throws ParseException {
+        assertThat(AmountParser.parse("123.45")).isEqualTo(new BigDecimal("123.45"));
+    }
+
+    @Test
+    public void parseDecimalAmountWithDifferentSeparator() throws ParseException {
+        Locale.setDefault(Locale.GERMANY);
+        assertThat(AmountParser.parse("123,45")).isEqualTo(new BigDecimal("123.45"));
+    }
+
+    @Test(expected = ParseException.class)
+    public void withGarbageAtTheBeginning_shouldFailWithException() throws ParseException {
+        AmountParser.parse("asdf123.45");
+    }
+
+    @Test(expected = ParseException.class)
+    public void withGarbageAtTheEnd_shouldFailWithException() throws ParseException {
+        AmountParser.parse("123.45asdf");
+    }
+
+    @Test(expected = ParseException.class)
+    public void emptyString_shouldFailWithException() throws ParseException {
+        AmountParser.parse("");
+    }
+}
\ No newline at end of file

From 009d73d683735154b594ea659e489a702790c0a7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Thu, 26 May 2016 20:23:25 +0200
Subject: [PATCH 056/121] Avoid returning null when parsing an empty string as
 an amount.

Parsing an empty string wasn't throwing a ParseException as expected, it
was returning null. Now we ensure the exception is thrown.

Fixes https://github.com/codinguser/gnucash-android/issues/505
---
 app/src/main/java/org/gnucash/android/util/AmountParser.java | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/src/main/java/org/gnucash/android/util/AmountParser.java b/app/src/main/java/org/gnucash/android/util/AmountParser.java
index f8595cd5..f873a780 100644
--- a/app/src/main/java/org/gnucash/android/util/AmountParser.java
+++ b/app/src/main/java/org/gnucash/android/util/AmountParser.java
@@ -24,7 +24,7 @@ public static BigDecimal parse(String amount) throws ParseException {
         BigDecimal parsedAmount = (BigDecimal) formatter.parse(amount, parsePosition);
 
         // Ensure any mistyping by the user is caught instead of partially parsed
-        if (parsePosition.getIndex() < amount.length())
+        if ((parsedAmount == null) || (parsePosition.getIndex() < amount.length()))
             throw new ParseException("Parse error", parsePosition.getErrorIndex());
 
         return parsedAmount;

From c57aa77de5ad4304b4c1d81124d03a989315e830 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Fri, 27 May 2016 20:32:58 +0200
Subject: [PATCH 057/121] Simplify CalculatorEditText.getValue() by using
 AmountParser.

---
 .../gnucash/android/ui/util/widget/CalculatorEditText.java    | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
index 190cd050..edb49dd8 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
@@ -43,10 +43,12 @@
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.ui.common.FormActivity;
+import org.gnucash.android.util.AmountParser;
 
 import java.math.BigDecimal;
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
+import java.text.ParseException;
 import java.util.Locale;
 
 /**
@@ -315,13 +317,10 @@ public boolean isInputModified(){
      */
     public @Nullable BigDecimal getValue(){
         evaluate();
-        String amountString = getCleanString();
-        if (amountString.isEmpty())
-            return null;
         try { //catch any exceptions in the conversion e.g. if a string with only "-" is entered
-            return new BigDecimal(amountString);
-        } catch (NumberFormatException e){
-            String msg = "Error parsing amount string " + amountString + " from CalculatorEditText";
+            return AmountParser.parse(getText().toString());
+        } catch (ParseException e){
+            String msg = "Error parsing amount string " + getText() + " from CalculatorEditText";
             Log.i(getClass().getSimpleName(), msg, e);
             return null;
         }

From 19d99e2e6714511cd8ce87e2ef9cf4d23d659c87 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 1 Jun 2016 19:00:59 +0200
Subject: [PATCH 058/121] Upgrade database version to v13

Switch "Open" menu to use Storage Access Framework
Update delete confirmation dialog for deleting books
---
 app/build.gradle                                     |  6 +++---
 app/proguard-rules.pro                               |  3 +++
 .../java/org/gnucash/android/db/DatabaseSchema.java  |  2 +-
 .../android/ui/account/AccountsListFragment.java     |  4 +++-
 .../android/ui/common/BaseDrawerActivity.java        | 20 +++++++++++++++++++-
 .../android/ui/settings/BookListFragment.java        | 11 +++++++----
 6 files changed, 36 insertions(+), 10 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 856fcebf..7bbf5830 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -82,8 +82,8 @@ android {
     buildTypes {
         //todo re-enable proguard and test coverage
         release {
-            //minifyEnabled true
-            shrinkResources true
+//            minifyEnabled true
+//            shrinkResources true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
             if (project.hasProperty("RELEASE_STORE_FILE")){
                 signingConfig signingConfigs.release
@@ -205,7 +205,7 @@ dependencies {
             'com.android.support:preference-v7:'    + androidSupportVersion,
             'com.android.support:recyclerview-v7:'  + androidSupportVersion,
             'com.viewpagerindicator:library:2.4.1@aar',
-            'com.code-troopers.betterpickers:library:2.5.4',
+            'com.code-troopers.betterpickers:library:2.5.5',
             'org.jraf:android-switch-backport:2.0.1@aar',
             'com.github.PhilJay:MPAndroidChart:v2.1.3',
             'joda-time:joda-time:2.7',
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
index 57520016..9e7ef5e6 100644
--- a/app/proguard-rules.pro
+++ b/app/proguard-rules.pro
@@ -10,3 +10,6 @@
 -keepclasseswithmembernames class * {
     @butterknife.* <methods>;
 }
+
+-keep class org.gnucash.android.** {*;}
+-keep class com.dropbox.** {*;}
\ No newline at end of file
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
index 3c9a4f32..0f32f068 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
@@ -39,7 +39,7 @@
      * Version number of database containing accounts and transactions info.
      * With any change to the database schema, this number must increase
      */
-    public static final int DATABASE_VERSION = 12;
+    public static final int DATABASE_VERSION = 13;
 
     /**
      * Name of the database
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 35369433..39fe510e 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -300,7 +300,9 @@ public void refresh(String parentAccountUID) {
      */
     @Override
     public void refresh() {
-        getLoaderManager().restartLoader(0, null, this);
+        if (!isDetached()) {
+            getLoaderManager().restartLoader(0, null, this);
+        }
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index e03726e0..d18ebdc8 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -22,6 +22,7 @@
 import android.database.Cursor;
 import android.graphics.Color;
 import android.graphics.PorterDuff;
+import android.os.Build;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.annotation.LayoutRes;
@@ -85,6 +86,7 @@
 
     protected ActionBarDrawerToggle mDrawerToggle;
 
+    public static final int REQUEST_OPEN_DOCUMENT = 0x20;
 
     private class DrawerItemClickListener implements NavigationView.OnNavigationItemSelectedListener {
 
@@ -227,7 +229,16 @@ protected void onDrawerMenuItemClicked(int itemId) {
         mNavigationView.getMenu().findItem(itemId).setChecked(true);
         switch (itemId){
             case R.id.nav_item_open: { //Open... files
-                AccountsActivity.startXmlFileChooser(this);
+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT){
+                    //use the storage access framework
+                    Intent openDocument = new Intent(Intent.ACTION_OPEN_DOCUMENT);
+                    openDocument.addCategory(Intent.CATEGORY_OPENABLE);
+                    openDocument.setType("*/*");
+                    startActivityForResult(openDocument, REQUEST_OPEN_DOCUMENT);
+
+                } else {
+                    AccountsActivity.startXmlFileChooser(this);
+                }
             }
             break;
 
@@ -286,6 +297,12 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
             case AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE:
                 AccountsActivity.importXmlFileFromIntent(this, data, null);
                 break;
+            case BaseDrawerActivity.REQUEST_OPEN_DOCUMENT:
+                final int takeFlags = data.getFlags()
+                        & (Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
+                AccountsActivity.importXmlFileFromIntent(this, data, null);
+                getContentResolver().takePersistableUriPermission(data.getData(), takeFlags);
+                break;
             default:
                 super.onActivityResult(requestCode, resultCode, data);
                 break;
@@ -313,6 +330,7 @@ public boolean onMenuItemClick(MenuItem item) {
     }
 
     public void onClickAppTitle(View view){
+        mDrawerLayout.closeDrawer(mNavigationView);
         AccountsActivity.start(this);
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
index 16b45c68..7954e90b 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
@@ -205,8 +205,8 @@ public void onClick(View v) {
                         //// TODO: extract strings
                         AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(getActivity());
                         dialogBuilder.setTitle("Confirm delete Book")
-                                .setIcon(R.drawable.ic_close_white_24dp)
-                                .setMessage("Are you sure you want to delete this book.\nThis action cannot be undone!");
+                                .setIcon(R.drawable.ic_close_black_24dp)
+                                .setMessage("All accounts and transactions in this book will be deleted!");
                         dialogBuilder.setPositiveButton("Delete Book", new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialog, int which) {
@@ -214,13 +214,16 @@ public void onClick(DialogInterface dialog, int which) {
                                 refresh();
                             }
                         });
-                        dialogBuilder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
+                        dialogBuilder.setNegativeButton(R.string.btn_cancel, new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialog, int which) {
                                 dialog.dismiss();
                             }
                         });
-                        dialogBuilder.create().show();
+                        AlertDialog dialog = dialogBuilder.create();
+                        dialog.getButton(AlertDialog.BUTTON_POSITIVE)
+                                .setTextColor(getResources().getColor(R.color.account_red));
+                        dialog.show();
 
                     }
                 });

From 4dd5230f79356535cec01fad2350536d02121125 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 1 Jun 2016 20:10:27 +0200
Subject: [PATCH 059/121] Hide Budget features in the UX. Prevent importing of
 Budgets from XML

Budgets will be re-enabled when the UX is complete. Postponed for this release
Fixed: Regression causing import of GnuCash XML to fail silently when importing from settings
Remove (incomplete) highlighting of navigation menu items when selected
---
 .../android/db/adapter/DatabaseAdapter.java        |  7 ++++-
 .../gnucash/android/importer/GncXmlHandler.java    |  5 ++--
 .../android/ui/account/AccountsActivity.java       | 33 ++++++++++++++--------
 .../android/ui/common/BaseDrawerActivity.java      |  5 ++--
 .../ui/settings/AccountPreferencesFragment.java    |  3 +-
 app/src/main/res/menu/nav_drawer_menu.xml          |  3 +-
 6 files changed, 36 insertions(+), 20 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index 34d63625..8c24eb8e 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -237,7 +237,12 @@ public void addRecord(@NonNull final Model model, UpdateMethod updateMethod){
         }
     }
 
-    /// This function should be called in a db transaction
+    /**
+     * Persist the model object to the database as records using the {@code updateMethod}
+     * @param modelList List of records
+     * @param updateMethod Method to use when persisting them
+     * @return Number of rows affected in the database
+     */
     private long doAddModels(@NonNull final List<Model> modelList, UpdateMethod updateMethod) {
         long nRow = 0;
         switch (updateMethod) {
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 25d02bcd..7166b400 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -998,8 +998,9 @@ private void saveToDatabase() {
             long nPrices = mPricesDbAdapter.bulkAddRecords(mPriceList, DatabaseAdapter.UpdateMethod.insert);
             Log.d(getClass().getSimpleName(), String.format("%d prices inserted", nPrices));
 
-            long nBudgets = mBudgetsDbAdapter.bulkAddRecords(mBudgetList, DatabaseAdapter.UpdateMethod.insert);
-            Log.d(getClass().getSimpleName(), String.format("%d budgets inserted", nBudgets));
+            //// TODO: 01.06.2016 Re-enable import of Budget stuff when the UI is complete
+//            long nBudgets = mBudgetsDbAdapter.bulkAddRecords(mBudgetList, DatabaseAdapter.UpdateMethod.insert);
+//            Log.d(getClass().getSimpleName(), String.format("%d budgets inserted", nBudgets));
 
             long endTime = System.nanoTime();
             Log.d(getClass().getSimpleName(), String.format("bulk insert time: %d", endTime - startTime));
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 3f08587a..ab81985d 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -501,18 +501,7 @@ public void onTaskComplete() {
      * @see #importXmlFileFromIntent(Activity, Intent, TaskDelegate)
      */
     public static void startXmlFileChooser(Activity activity) {
-        Intent pickIntent;
-//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT){
-//            pickIntent = new Intent(Intent.ACTION_OPEN_DOCUMENT);
-//        } else
-            pickIntent = new Intent(Intent.ACTION_GET_CONTENT);
-
-//        ArrayList<String> mimeTypes = new ArrayList<>();
-//        mimeTypes.add("application/*");
-//        mimeTypes.add("file/*");
-//        mimeTypes.add("text/*");
-//        mimeTypes.add("application/vnd.google-apps.file");
-//        pickIntent.putStringArrayListExtra(Intent.EXTRA_MIME_TYPES, mimeTypes);
+        Intent pickIntent = new Intent(Intent.ACTION_GET_CONTENT);
         pickIntent.addCategory(Intent.CATEGORY_OPENABLE);
         pickIntent.setType("*/*");
         Intent chooser = Intent.createChooser(pickIntent, "Select GnuCash account file"); //todo internationalize string
@@ -526,6 +515,26 @@ public static void startXmlFileChooser(Activity activity) {
         }
     }
 
+    /**
+     * Overloaded method.
+     * Starts chooser for selecting a GnuCash account file to import
+     * @param fragment Fragment creating the chooser and which will also handle the result
+     * @see #startXmlFileChooser(Activity)
+     */
+    public static void startXmlFileChooser(Fragment fragment) {
+        Intent pickIntent = new Intent(Intent.ACTION_GET_CONTENT);
+        pickIntent.addCategory(Intent.CATEGORY_OPENABLE);
+        pickIntent.setType("*/*");
+        Intent chooser = Intent.createChooser(pickIntent, "Select GnuCash account file"); //todo internationalize string
+
+        try {
+            fragment.startActivityForResult(chooser, REQUEST_PICK_ACCOUNTS_FILE);
+        } catch (ActivityNotFoundException ex){
+            Crashlytics.log("No file manager for selecting files available");
+            Crashlytics.logException(ex);
+            Toast.makeText(fragment.getActivity(), R.string.toast_install_file_manager, Toast.LENGTH_LONG).show();
+        }
+    }
 
     /**
      * Reads and XML file from an intent and imports it into the database
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index d18ebdc8..40bc5efc 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -226,7 +226,6 @@ protected void updateActiveBookName(){
      * Handler for the navigation drawer items
      * */
     protected void onDrawerMenuItemClicked(int itemId) {
-        mNavigationView.getMenu().findItem(itemId).setChecked(true);
         switch (itemId){
             case R.id.nav_item_open: { //Open... files
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT){
@@ -258,10 +257,12 @@ protected void onDrawerMenuItemClicked(int itemId) {
             }
                 break;
 
+/*
+            //todo: Re-enable this when Budget UI is complete
             case R.id.nav_item_budgets:
                 startActivity(new Intent(this, BudgetsActivity.class));
                 break;
-
+*/
             case R.id.nav_item_scheduled_actions: { //show scheduled transactions
                 Intent intent = new Intent(this, ScheduledActionsActivity.class);
                 intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
index e539f3bc..7a35d542 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
@@ -31,7 +31,6 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.account.AccountsActivity;
@@ -134,7 +133,7 @@ public boolean onPreferenceClick(Preference preference) {
         String key = preference.getKey();
 
         if (key.equals(getString(R.string.key_import_accounts))){
-            AccountsActivity.startXmlFileChooser(getActivity());
+            AccountsActivity.startXmlFileChooser(this);
             return true;
         }
 
diff --git a/app/src/main/res/menu/nav_drawer_menu.xml b/app/src/main/res/menu/nav_drawer_menu.xml
index 161cff00..195cf219 100644
--- a/app/src/main/res/menu/nav_drawer_menu.xml
+++ b/app/src/main/res/menu/nav_drawer_menu.xml
@@ -27,10 +27,11 @@
                 android:id="@+id/nav_item_favorites"
                 android:icon="@drawable/ic_star_black_24dp"
                 android:title="@string/nav_menu_favorites"/>
+<!--
             <item android:id="@+id/nav_item_budgets"
                 android:icon="@drawable/ic_dashboard_black_24dp"
                 android:title="@string/nav_menu_budgets" />
-
+-->
             <item android:id="@+id/nav_item_reports"
                 android:icon="@drawable/ic_equalizer_black_24dp"
                 android:title="@string/nav_menu_reports" />

From 134c6cbe8e1eef1e018155293dd7ac436c3de38e Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 3 Jun 2016 11:19:29 +0200
Subject: [PATCH 060/121] Set a compact view active if the book was
 single-entry

---
 app/src/main/java/org/gnucash/android/db/MigrationHelper.java | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index c57fcd04..35c774d2 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -1489,24 +1489,25 @@ static int upgradeDbToVersion13(SQLiteDatabase db){
         String keyUseDoubleEntry = context.getString(R.string.key_use_double_entry);
         String keySaveOpeningBalance = context.getString(R.string.key_save_opening_balances);
         String keyLastExportTime = PreferencesHelper.PREFERENCE_LAST_EXPORT_TIME_KEY;
+        String keyUseCompactView = context.getString(R.string.key_use_compact_list);
 
         SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);
         String lastExportTime = sharedPrefs.getString(keyLastExportTime, TimestampHelper.getTimestampFromEpochZero().toString());
         boolean useDoubleEntry = sharedPrefs.getBoolean(keyUseDoubleEntry, true);
         boolean saveOpeningBalance = sharedPrefs.getBoolean(keySaveOpeningBalance, false);
-
+        boolean useCompactTrnView = !GnuCashApplication.isDoubleEntryEnabled();
 
         SharedPreferences bookPrefs = PreferenceActivity.getActiveBookSharedPreferences(context);
         bookPrefs.edit()
                 .putString(keyLastExportTime, lastExportTime)
                 .putBoolean(keyUseDoubleEntry, useDoubleEntry)
                 .putBoolean(keySaveOpeningBalance, saveOpeningBalance)
+                .putBoolean(keyUseCompactView, useCompactTrnView)
                 .apply();
 
         String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
 
 
-        //// TODO: 18.05.2016 Move backup files from external storage?
         Log.d(LOG_TAG, "Moving export and backup files to book-specific folders");
         File newBasePath = new File(Exporter.BASE_FOLDER_PATH + "/" + activeBookUID);
         newBasePath.mkdirs();

From ad1fe31c181590d0616eb6b1d809bffafa4396fe Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 6 Jun 2016 10:35:18 +0200
Subject: [PATCH 061/121] Fix errors during database migration

Properly migrate double-entry flags to book-specific format
fixes #508
---
 .../java/org/gnucash/android/db/BookDbHelper.java  |  35 +++++++-
 .../org/gnucash/android/db/MigrationHelper.java    |  76 ++--------------
 .../gnucash/android/db/adapter/BooksDbAdapter.java |   8 +-
 .../gnucash/android/util/RecursiveMoveFiles.java   | 100 +++++++++++++++++++++
 4 files changed, 143 insertions(+), 76 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/util/RecursiveMoveFiles.java

diff --git a/app/src/main/java/org/gnucash/android/db/BookDbHelper.java b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
index 12c417a8..9d12f376 100644
--- a/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
@@ -31,7 +31,9 @@
 import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
+import org.gnucash.android.export.Exporter;
 import org.gnucash.android.model.Book;
+import org.gnucash.android.util.RecursiveMoveFiles;
 
 import java.io.File;
 import java.io.IOException;
@@ -82,7 +84,7 @@ public void onOpen(SQLiteDatabase db) {
         String sql = "SELECT COUNT(*) FROM " + BookEntry.TABLE_NAME;
         SQLiteStatement statement = db.compileStatement(sql);
         long count = statement.simpleQueryForLong();
-        if (count == 0) { //there is currently no book in the database
+        if (count == 0) { //there is currently no book in the database, should only be true once, during migration
             DatabaseHelper helper = new DatabaseHelper(GnuCashApplication.getAppContext(),
                     DatabaseSchema.LEGACY_DATABASE_NAME);
             SQLiteDatabase mainDb = helper.getWritableDatabase();
@@ -113,6 +115,37 @@ public void onOpen(SQLiteDatabase db) {
                 Crashlytics.log(err_msg);
                 Log.e(LOG_TAG, err_msg, e);
             }
+
+            migrateBackupFiles(book.getUID());
+        }
+    }
+
+    /**
+     * Move the backup and export files from the old location (single-book) to the new multi-book
+     * backup folder structure. Each book has its own directory as well as backups and exports.
+     * <p>This method should be called only once during the initial migration to multi-book support</p>
+     * @param activeBookUID GUID of the book for which to migrate the files
+     */
+    private void migrateBackupFiles(String activeBookUID){
+
+        Log.d(LOG_TAG, "Moving export and backup files to book-specific folders");
+        File newBasePath = new File(Exporter.BASE_FOLDER_PATH + "/" + activeBookUID);
+        newBasePath.mkdirs();
+
+        File src = new File(Exporter.BASE_FOLDER_PATH + "/backups/");
+        File dst = new File(Exporter.BASE_FOLDER_PATH + "/" + activeBookUID + "/backups/");
+        new Thread(new RecursiveMoveFiles(src, dst)).start();
+
+        src = new File(Exporter.BASE_FOLDER_PATH + "/exports/");
+        dst = new File(Exporter.BASE_FOLDER_PATH + "/" + activeBookUID + "/exports/");
+        new Thread(new RecursiveMoveFiles(src, dst)).start();
+
+        File nameFile = new File(newBasePath, "Book 1");
+        try {
+            nameFile.createNewFile();
+        } catch (IOException e) {
+            Log.e(LOG_TAG, "Error creating name file for the database: " + nameFile.getName());
+            e.printStackTrace();
         }
     }
 
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index 35c774d2..f32c5145 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -34,7 +34,6 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
-import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
@@ -47,7 +46,6 @@
 import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Transaction;
-import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.util.PreferencesHelper;
 import org.gnucash.android.util.TimestampHelper;
 import org.xml.sax.InputSource;
@@ -228,49 +226,6 @@ public void run() {
     };
 
     /**
-     * Moves all files from one directory  into another.
-     * The destination directory is assumed to already exist
-     */
-    static class RecursiveMoveFiles implements Runnable {
-        File mSource;
-        File mDestination;
-
-        /**
-         * Constructor, specify origin and target directories
-         * @param src Source directory/file. If directory, all files within it will be moved
-         * @param dst Destination directory/file. If directory, it should already exist
-         */
-        RecursiveMoveFiles(File src, File dst){
-            mSource = src;
-            mDestination = dst;
-        }
-
-        private boolean copy(File src, File dst){
-            boolean results = true;
-            if (src.isDirectory()){
-                dst.mkdirs(); //we assume it works everytime. Great, right?
-                for (File file : src.listFiles()) {
-                    File target = new File(dst, file.getName());
-                    results &= copy(file, target);
-                }
-            } else {
-                try {
-                    moveFile(src, dst);
-                } catch (IOException e) {
-                    results = false;
-                    Log.d(LOG_TAG, "Error moving file: " + src.getAbsolutePath());
-                }
-            }
-            return results;
-        }
-
-        @Override
-        public void run() {
-            copy(mSource, mDestination);
-        }
-    }
-
-    /**
      * Imports commodities into the database from XML resource file
      */
     static void importCommodities(SQLiteDatabase db) throws SAXException, ParserConfigurationException, IOException {
@@ -1495,9 +1450,12 @@ static int upgradeDbToVersion13(SQLiteDatabase db){
         String lastExportTime = sharedPrefs.getString(keyLastExportTime, TimestampHelper.getTimestampFromEpochZero().toString());
         boolean useDoubleEntry = sharedPrefs.getBoolean(keyUseDoubleEntry, true);
         boolean saveOpeningBalance = sharedPrefs.getBoolean(keySaveOpeningBalance, false);
-        boolean useCompactTrnView = !GnuCashApplication.isDoubleEntryEnabled();
+        boolean useCompactTrnView = PreferenceManager.getDefaultSharedPreferences(context)
+                .getBoolean(context.getString(R.string.key_use_double_entry), !useDoubleEntry);
+
+        String rootAccountUID = getGnuCashRootAccountUID(db);
+        SharedPreferences bookPrefs = context.getSharedPreferences(rootAccountUID, Context.MODE_PRIVATE);
 
-        SharedPreferences bookPrefs = PreferenceActivity.getActiveBookSharedPreferences(context);
         bookPrefs.edit()
                 .putString(keyLastExportTime, lastExportTime)
                 .putBoolean(keyUseDoubleEntry, useDoubleEntry)
@@ -1505,30 +1463,6 @@ static int upgradeDbToVersion13(SQLiteDatabase db){
                 .putBoolean(keyUseCompactView, useCompactTrnView)
                 .apply();
 
-        String activeBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
-
-
-        Log.d(LOG_TAG, "Moving export and backup files to book-specific folders");
-        File newBasePath = new File(Exporter.BASE_FOLDER_PATH + "/" + activeBookUID);
-        newBasePath.mkdirs();
-
-        File src = new File(Exporter.BASE_FOLDER_PATH + "/backups/");
-        File dst = new File(Exporter.BASE_FOLDER_PATH + "/" + activeBookUID + "/backups/");
-        new Thread(new RecursiveMoveFiles(src, dst)).start();
-
-        src = new File(Exporter.BASE_FOLDER_PATH + "/exports/");
-        dst = new File(Exporter.BASE_FOLDER_PATH + "/" + activeBookUID + "/exports/");
-        new Thread(new RecursiveMoveFiles(src, dst)).start();
-
-        String activeBookName = BooksDbAdapter.getInstance().getActiveBookDisplayName();
-        File nameFile = new File(newBasePath, activeBookName.replaceAll("[^a-zA-Z0-9.-]", "_"));
-        try {
-            nameFile.createNewFile();
-        } catch (IOException e) {
-            Log.e(LOG_TAG, "Error creating name file for the database: " + nameFile.getName());
-            e.printStackTrace();
-        }
-
         return oldVersion;
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
index 7993a919..4306dc17 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
@@ -141,13 +141,13 @@ public boolean isActive(String bookUID){
         Cursor cursor = mDb.query(mTableName, new String[]{BookEntry.COLUMN_UID},
                 BookEntry.COLUMN_ACTIVE + "= 1", null, null, null, null, "1");
         try{
-            if (cursor.moveToFirst()){
-                return cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_UID));
-            }
+            if (cursor.getCount() == 0)
+                throw new RuntimeException("There is no active book in the app. This should NEVER happen!");
+            cursor.moveToFirst();
+            return cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_UID));
         } finally {
             cursor.close();
         }
-        return null;
     }
 
 
diff --git a/app/src/main/java/org/gnucash/android/util/RecursiveMoveFiles.java b/app/src/main/java/org/gnucash/android/util/RecursiveMoveFiles.java
new file mode 100644
index 00000000..04ece4f8
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/util/RecursiveMoveFiles.java
@@ -0,0 +1,100 @@
+/*
+ * Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.util;
+
+import android.util.Log;
+
+import org.gnucash.android.db.MigrationHelper;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.nio.channels.FileChannel;
+
+/**
+ * Moves all files from one directory  into another.
+ * The destination directory is assumed to already exist
+ */
+public class RecursiveMoveFiles implements Runnable {
+    File mSource;
+    File mDestination;
+
+    /**
+     * Constructor, specify origin and target directories
+     * @param src Source directory/file. If directory, all files within it will be moved
+     * @param dst Destination directory/file. If directory, it should already exist
+     */
+    public RecursiveMoveFiles(File src, File dst){
+        mSource = src;
+        mDestination = dst;
+    }
+
+    /**
+     * Copy file from one location to another.
+     * Does not support copying of directories
+     * @param src Source file
+     * @param dst Destination of the file
+     * @return {@code true} if the file was successfully copied, {@code false} otherwise
+     * @throws IOException
+     */
+    private boolean copy(File src, File dst) throws IOException {
+        FileChannel inChannel = new FileInputStream(src).getChannel();
+        FileChannel outChannel = new FileOutputStream(dst).getChannel();
+        try {
+            long bytesCopied = inChannel.transferTo(0, inChannel.size(), outChannel);
+            return bytesCopied >= src.length();
+        } finally {
+            if (inChannel != null)
+                inChannel.close();
+            outChannel.close();
+        }
+    }
+
+    /**
+     * Recursively copy files from one location to another and deletes the origin files after copy.
+     * If the source file is a directory, all of the files in it will be moved.
+     * This method will create the destination directory if the {@code src} is also a directory
+     * @param src origin file
+     * @param dst destination file or directory
+     * @return number of files copied (excluding parent directory)
+     */
+    private int recursiveMove(File src, File dst){
+        int copyCount = 0;
+        if (src.isDirectory()){
+            dst.mkdirs(); //we assume it works everytime. Great, right?
+            for (File file : src.listFiles()) {
+                File target = new File(dst, file.getName());
+                 copyCount += recursiveMove(file, target);
+            }
+            src.delete();
+        } else {
+            try {
+                if(copy(src, dst))
+                    src.delete();
+            } catch (IOException e) {
+                Log.d(MigrationHelper.LOG_TAG, "Error moving file: " + src.getAbsolutePath());
+            }
+        }
+        Log.d("RecursiveMoveFiles", String.format("Moved %d files from %s to %s", copyCount, src.getPath(), dst.getPath()));
+        return copyCount;
+    }
+
+    @Override
+    public void run() {
+        recursiveMove(mSource, mDestination);
+    }
+}

From 9db85bd95d32dd6d9dfbe2ce89d14ada6c81efc6 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 6 Jun 2016 13:41:36 +0200
Subject: [PATCH 062/121] Display notification if there are no backups to
 restore

Rename BookListFragment to BookManagerFragment
Use of double-entry defaults to true
Create main db at the same time as creating book db
---
 .../gnucash/android/app/GnuCashApplication.java    |  2 +-
 .../java/org/gnucash/android/db/BookDbHelper.java  | 64 ++++++++++++++--------
 .../org/gnucash/android/db/DatabaseHelper.java     |  1 +
 .../gnucash/android/importer/GncXmlHandler.java    |  4 +-
 .../gnucash/android/importer/ImportAsyncTask.java  |  1 -
 .../ui/settings/BackupPreferenceFragment.java      | 15 ++++-
 ...kListFragment.java => BookManagerFragment.java} | 17 +++---
 .../android/ui/settings/PreferenceActivity.java    |  6 +-
 .../res/xml/fragment_transaction_preferences.xml   |  1 +
 .../main/res/xml/preference_fragment_headers.xml   |  2 +-
 .../android/test/unit/db/BooksDbAdapterTest.java   |  1 -
 11 files changed, 67 insertions(+), 47 deletions(-)
 rename app/src/main/java/org/gnucash/android/ui/settings/{BookListFragment.java => BookManagerFragment.java} (93%)

diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 5dc0b6c0..3ebda503 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -244,7 +244,7 @@ public static boolean isCrashlyticsEnabled(){
      */
     public static boolean isDoubleEntryEnabled(){
         SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences(context);
-        return sharedPrefs.getBoolean(context.getString(R.string.key_use_double_entry), false);
+        return sharedPrefs.getBoolean(context.getString(R.string.key_use_double_entry), true);
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/db/BookDbHelper.java b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
index 9d12f376..87adc17d 100644
--- a/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/BookDbHelper.java
@@ -47,6 +47,9 @@
 public class BookDbHelper extends SQLiteOpenHelper {
 
     public static final String LOG_TAG = "BookDbHelper";
+
+    private Context mContext;
+
     /**
      * Create the books table
      */
@@ -65,26 +68,15 @@
 
     public BookDbHelper(Context context) {
         super(context, DatabaseSchema.BOOK_DATABASE_NAME, null, DatabaseSchema.BOOK_DATABASE_VERSION);
+        mContext = context;
     }
 
     @Override
     public void onCreate(SQLiteDatabase db) {
         db.execSQL(BOOKS_TABLE_CREATE);
-    }
-
-    @Override
-    public void onOpen(SQLiteDatabase db) {
-        super.onOpen(db);
-
-        if (db.isReadOnly()) {
-            Log.w(LOG_TAG, "Database was opened in read-only mode");
-            return;
-        }
 
-        String sql = "SELECT COUNT(*) FROM " + BookEntry.TABLE_NAME;
-        SQLiteStatement statement = db.compileStatement(sql);
-        long count = statement.simpleQueryForLong();
-        if (count == 0) { //there is currently no book in the database, should only be true once, during migration
+        if (mContext.getDatabasePath(DatabaseSchema.LEGACY_DATABASE_NAME).exists()){
+            Log.d(LOG_TAG, "Legacy database found. Migrating to multibook format");
             DatabaseHelper helper = new DatabaseHelper(GnuCashApplication.getAppContext(),
                     DatabaseSchema.LEGACY_DATABASE_NAME);
             SQLiteDatabase mainDb = helper.getWritableDatabase();
@@ -94,14 +86,8 @@ public void onOpen(SQLiteDatabase db) {
             String rootAccountUID = accountsDbAdapter.getOrCreateGnuCashRootAccountUID();
 
             Book book = new Book(rootAccountUID);
-            ContentValues contentValues = new ContentValues();
-            contentValues.put(BookEntry.COLUMN_UID, book.getUID());
-            contentValues.put(BookEntry.COLUMN_ROOT_GUID, rootAccountUID);
-            contentValues.put(BookEntry.COLUMN_TEMPLATE_GUID, Book.generateUID());
-            contentValues.put(BookEntry.COLUMN_DISPLAY_NAME, new BooksDbAdapter(db).generateDefaultBookName());
-            contentValues.put(BookEntry.COLUMN_ACTIVE, 1);
-
-            db.insert(BookEntry.TABLE_NAME, null, contentValues);
+            book.setActive(true);
+            insertBook(db, book);
 
             String mainDbPath = mainDb.getPath();
             helper.close();
@@ -118,6 +104,40 @@ public void onOpen(SQLiteDatabase db) {
 
             migrateBackupFiles(book.getUID());
         }
+
+        String sql = "SELECT COUNT(*) FROM " + BookEntry.TABLE_NAME;
+        SQLiteStatement statement = db.compileStatement(sql);
+        long count = statement.simpleQueryForLong();
+        if (count == 0) { //no book in the database, create a default one
+            Log.i(LOG_TAG, "No books found in database, creating default book");
+            Book book = new Book();
+            DatabaseHelper helper = new DatabaseHelper(GnuCashApplication.getAppContext(), book.getUID());
+            SQLiteDatabase mainDb = helper.getWritableDatabase(); //actually create the db
+            AccountsDbAdapter accountsDbAdapter = new AccountsDbAdapter(mainDb,
+                    new TransactionsDbAdapter(mainDb, new SplitsDbAdapter(mainDb)));
+
+            String rootAccountUID = accountsDbAdapter.getOrCreateGnuCashRootAccountUID();
+            book.setRootAccountUID(rootAccountUID);
+            book.setActive(true);
+            insertBook(db, book);
+        }
+
+    }
+
+    /**
+     * Inserts the book into the database
+     * @param db Book database
+     * @param book Book to insert
+     */
+    private void insertBook(SQLiteDatabase db, Book book) {
+        ContentValues contentValues = new ContentValues();
+        contentValues.put(BookEntry.COLUMN_UID, book.getUID());
+        contentValues.put(BookEntry.COLUMN_ROOT_GUID, book.getRootAccountUID());
+        contentValues.put(BookEntry.COLUMN_TEMPLATE_GUID, Book.generateUID());
+        contentValues.put(BookEntry.COLUMN_DISPLAY_NAME, new BooksDbAdapter(db).generateDefaultBookName());
+        contentValues.put(BookEntry.COLUMN_ACTIVE, book.isActive() ? 1 : 0);
+
+        db.insert(BookEntry.TABLE_NAME, null, contentValues);
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
index df43c5a2..ac7dbabd 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
@@ -250,6 +250,7 @@ static String createUpdatedAtTrigger(String tableName){
 	@Override
 	public void onCreate(SQLiteDatabase db) {
 		createDatabaseTables(db);
+
 	}
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 7166b400..227adfa1 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -19,13 +19,11 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
 import android.util.Log;
 
 import com.crashlytics.android.Crashlytics;
 
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.BookDbHelper;
 import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
@@ -43,9 +41,9 @@
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.Book;
-import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Budget;
 import org.gnucash.android.model.BudgetAmount;
+import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.PeriodType;
 import org.gnucash.android.model.Price;
diff --git a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
index ca698ded..b6b2231d 100644
--- a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
@@ -84,7 +84,6 @@ protected Boolean doInBackground(Uri... uris) {
             InputStream accountInputStream = mContext.getContentResolver().openInputStream(uris[0]);
             bookUID = GncXmlImporter.parse(accountInputStream);
 
-            //// TODO: 08.12.2015 update book name in database table - get name from Uri
         } catch (Exception exception){
             Log.e(ImportAsyncTask.class.getName(), "" + exception.getMessage());
             Crashlytics.log("Could not open: " + uris[0].toString());
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
index c8ea6d28..f1017b55 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
@@ -354,9 +354,18 @@ public void onConnectionFailed(ConnectionResult connectionResult) {
 	private void restoreBackup() {
 		Log.i("Settings", "Opening GnuCash XML backups for restore");
 		File[] backupFiles = new File(Exporter.getBackupFolderPath()).listFiles();
-		if (backupFiles == null){
-			Toast.makeText(getActivity(), R.string.toast_backup_folder_not_found, Toast.LENGTH_LONG).show();
-			new File(Exporter.getBackupFolderPath());
+		if (backupFiles == null || backupFiles.length == 0){
+			android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(getActivity())
+					.setTitle("No backups found")
+					.setMessage("There are no existing backup files to restore from")
+					.setNegativeButton(R.string.label_dismiss, new DialogInterface.OnClickListener() {
+						@Override
+						public void onClick(DialogInterface dialog, int which) {
+							dialog.dismiss();
+						}
+					});
+			builder.create().show();
+			Exporter.getBackupFolderPath(); //creates the directory
 			return;
 		}
 
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
similarity index 93%
rename from app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
rename to app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
index 7954e90b..ec488e61 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
@@ -53,15 +53,16 @@
 import org.gnucash.android.db.DatabaseSchema.BookEntry;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.Refreshable;
+import org.gnucash.android.util.PreferencesHelper;
 import org.w3c.dom.Text;
 
 /**
  * Fragment for managing the books in the database
  */
-public class BookListFragment extends ListFragment implements
+public class BookManagerFragment extends ListFragment implements
         LoaderManager.LoaderCallbacks<Cursor>, Refreshable{
 
-    private static String LOG_TAG = "BookListFragment";
+    private static String LOG_TAG = "BookManagerFragment";
 
     SimpleCursorAdapter mCursorAdapter;
 
@@ -160,16 +161,11 @@ public void bindView(View view, final Context context, Cursor cursor) {
 
             final String bookUID = cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_UID));
 
-            DateFormat dateFormat = DateFormat.getDateTimeInstance();
-            //// TODO: 18.05.2016 Add last export time to the database
-            long lastSyncMillis = cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry.COLUMN_CREATED_AT));
-
             TextView lastSyncText = (TextView) view.findViewById(R.id.last_sync_time);
-            String lastSyncTime = dateFormat.format(new Date(lastSyncMillis));
-            lastSyncText.setText(lastSyncTime);
+            lastSyncText.setText(PreferencesHelper.getLastExportTime().toString());
 
             TextView labelLastSync = (TextView) view.findViewById(R.id.label_last_sync);
-            labelLastSync.setText("Last Sync:");
+            labelLastSync.setText("Last Export:");
             ImageView optionsMenu = (ImageView) view.findViewById(R.id.options_menu);
 
             optionsMenu.setOnClickListener(new View.OnClickListener() {
@@ -221,9 +217,10 @@ public void onClick(DialogInterface dialog, int which) {
                             }
                         });
                         AlertDialog dialog = dialogBuilder.create();
+                        dialog.show(); //must be called before you can access buttons
                         dialog.getButton(AlertDialog.BUTTON_POSITIVE)
                                 .setTextColor(getResources().getColor(R.color.account_red));
-                        dialog.show();
+
 
                     }
                 });
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
index 544ef8fc..a5016ece 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
@@ -18,7 +18,6 @@
 
 import android.annotation.TargetApi;
 import android.content.Context;
-import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Build;
 import android.os.Bundle;
@@ -28,14 +27,11 @@
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.widget.SlidingPaneLayout;
 import android.support.v7.app.ActionBar;
-import android.support.v7.app.AppCompatActivity;
 import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceFragmentCompat;
 import android.support.v7.preference.PreferenceManager;
 import android.view.MenuItem;
 import android.view.View;
-import android.widget.FrameLayout;
-import android.widget.Toast;
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
@@ -82,7 +78,7 @@ public void onPanelClosed(View panel) {
 
         String action = getIntent().getAction();
         if (action != null && action.equals(ACTION_MANAGE_BOOKS)){
-            loadFragment(new BookListFragment());
+            loadFragment(new BookManagerFragment());
             mSlidingPaneLayout.closePane();
         } else {
             mSlidingPaneLayout.openPane();
diff --git a/app/src/main/res/xml/fragment_transaction_preferences.xml b/app/src/main/res/xml/fragment_transaction_preferences.xml
index d92db4dc..35d70f1b 100644
--- a/app/src/main/res/xml/fragment_transaction_preferences.xml
+++ b/app/src/main/res/xml/fragment_transaction_preferences.xml
@@ -28,6 +28,7 @@
 
     <android.support.v7.preference.SwitchPreferenceCompat android:summary="@string/summary_use_double_entry"
         android:key="@string/key_use_double_entry"
+        android:defaultValue="true"
         android:title="@string/title_use_double_entry"/>
     <android.support.v7.preference.SwitchPreferenceCompat android:summary="@string/summary_save_opening_balances"
         android:key="@string/key_save_opening_balances"
diff --git a/app/src/main/res/xml/preference_fragment_headers.xml b/app/src/main/res/xml/preference_fragment_headers.xml
index fb5ecb30..d13e5d6d 100644
--- a/app/src/main/res/xml/preference_fragment_headers.xml
+++ b/app/src/main/res/xml/preference_fragment_headers.xml
@@ -21,7 +21,7 @@
         android:title="@string/header_general_settings"
         app:fragment="org.gnucash.android.ui.settings.GeneralPreferenceFragment"/>
     <Preference android:title="@string/header_manage_books"
-                app:fragment="org.gnucash.android.ui.settings.BookListFragment" />
+                app:fragment="org.gnucash.android.ui.settings.BookManagerFragment" />
     <Preference app:fragment="org.gnucash.android.ui.settings.AccountPreferencesFragment"
         android:title="@string/header_account_settings" />
     <Preference app:fragment="org.gnucash.android.ui.settings.TransactionsPreferenceFragment"
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
index 13ecbe7d..fffdaecc 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
@@ -56,7 +56,6 @@ public void addBook(){
 
         assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(1);
         assertThat(mBooksDbAdapter.getRecord(book.getUID()).getDisplayName()).isEqualTo("Book 1");
-        assertThat(mBooksDbAdapter.getActiveBookUID()).isNotEqualTo(book.getUID());
     }
 
     @Test(expected = IllegalArgumentException.class)

From bb16fb964957afa808c8a37e81f8a2303d3f7849 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 6 Jun 2016 14:44:58 +0200
Subject: [PATCH 063/121] Fix: transactions not properly refreshed after
 switching to compact list mode

Update preferences screen when book is changed
---
 .../android/ui/account/AccountsActivity.java        |  4 +++-
 .../ui/settings/TransactionsPreferenceFragment.java | 21 +++++++++++++++++++--
 .../ui/transaction/TransactionsListFragment.java    | 11 +++++++++--
 .../res/xml/fragment_transaction_preferences.xml    | 10 ++++++----
 4 files changed, 37 insertions(+), 9 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index ab81985d..827c91dc 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -61,6 +61,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.ui.common.BaseDrawerActivity;
@@ -369,7 +370,8 @@ public void setCurrentTab(){
      * <p>Also handles displaying the What's New dialog</p>
      */
     private void init() {
-        PreferenceManager.setDefaultValues(this, R.xml.fragment_transaction_preferences, false);
+        PreferenceManager.setDefaultValues(this, BooksDbAdapter.getInstance().getActiveBookUID(),
+                Context.MODE_PRIVATE, R.xml.fragment_transaction_preferences, true);
 
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         boolean firstRun = prefs.getBoolean(getString(R.string.key_first_run), true);
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
index 20bc6817..19740109 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
@@ -16,14 +16,18 @@
 
 package org.gnucash.android.ui.settings;
 
+import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceFragmentCompat;
+import android.support.v7.preference.PreferenceManager;
+import android.support.v7.preference.SwitchPreferenceCompat;
 
 import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
@@ -71,7 +75,19 @@ public void onResume() {
         pref = findPreference(getString(R.string.key_use_double_entry));
         pref.setOnPreferenceChangeListener(this);
 
-        Preference preference = findPreference(getString(R.string.key_delete_all_transactions));
+		String keyCompactView = getString(R.string.key_use_compact_list);
+		SwitchPreferenceCompat switchPref = (SwitchPreferenceCompat) findPreference(keyCompactView);
+		switchPref.setChecked(sharedPreferences.getBoolean(keyCompactView, false));
+
+		String keySaveBalance = getString(R.string.key_save_opening_balances);
+		switchPref = (SwitchPreferenceCompat) findPreference(keySaveBalance);
+		switchPref.setChecked(sharedPreferences.getBoolean(keySaveBalance, false));
+
+		String keyDoubleEntry = getString(R.string.key_use_double_entry);
+		switchPref = (SwitchPreferenceCompat) findPreference(keyDoubleEntry);
+		switchPref.setChecked(sharedPreferences.getBoolean(keyDoubleEntry, true));
+
+		Preference preference = findPreference(getString(R.string.key_delete_all_transactions));
         preference.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
             @Override
             public boolean onPreferenceClick(Preference preference) {
@@ -84,7 +100,8 @@ public boolean onPreferenceClick(Preference preference) {
 	@Override
 	public boolean onPreferenceChange(Preference preference, Object newValue) {
 		if (preference.getKey().equals(getString(R.string.key_use_double_entry))){
-            setImbalanceAccountsHidden((Boolean)newValue);
+			boolean useDoubleEntry = (Boolean) newValue;
+			setImbalanceAccountsHidden(useDoubleEntry);
         } else {
             setLocalizedSummary(preference, newValue.toString());
         }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index c6430c01..00bf6584 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -195,7 +195,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 			case R.id.menu_compact_trn_view:
 				item.setChecked(!item.isChecked());
 				mUseCompactView = !mUseCompactView;
-				mTransactionRecyclerAdapter.notifyItemRangeChanged(0, mTransactionRecyclerAdapter.getItemCount());
+				refresh();
 				return true;
 			default:
                 return super.onOptionsItemSelected(item);
@@ -245,18 +245,25 @@ public Cursor loadInBackground() {
 
 	public class TransactionRecyclerAdapter extends CursorRecyclerAdapter<TransactionRecyclerAdapter.ViewHolder>{
 
+		public static final int ITEM_TYPE_COMPACT 	= 0x111;
+		public static final int ITEM_TYPE_FULL		= 0x100;
+
 		public TransactionRecyclerAdapter(Cursor cursor) {
 			super(cursor);
 		}
 
 		@Override
 		public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-			int layoutRes = mUseCompactView ? R.layout.cardview_compact_transaction : R.layout.cardview_transaction;
+			int layoutRes = viewType == ITEM_TYPE_COMPACT ? R.layout.cardview_compact_transaction : R.layout.cardview_transaction;
 			View v = LayoutInflater.from(parent.getContext())
 					.inflate(layoutRes, parent, false);
 			return new ViewHolder(v);
 		}
 
+		@Override
+		public int getItemViewType(int position) {
+			return mUseCompactView ? ITEM_TYPE_COMPACT : ITEM_TYPE_FULL;
+		}
 
 		@Override
 		public void onBindViewHolderCursor(ViewHolder holder, Cursor cursor) {
diff --git a/app/src/main/res/xml/fragment_transaction_preferences.xml b/app/src/main/res/xml/fragment_transaction_preferences.xml
index 35d70f1b..b565114d 100644
--- a/app/src/main/res/xml/fragment_transaction_preferences.xml
+++ b/app/src/main/res/xml/fragment_transaction_preferences.xml
@@ -21,15 +21,17 @@
         android:key="@string/key_default_transaction_type"
         android:summary="@string/summary_default_transaction_type"/>
 
+    <android.support.v7.preference.SwitchPreferenceCompat android:summary="@string/summary_use_double_entry"
+                                                          android:key="@string/key_use_double_entry"
+                                                          android:defaultValue="true"
+                                                          android:title="@string/title_use_double_entry"/>
+
     <android.support.v7.preference.SwitchPreferenceCompat
         android:summary="@string/summary_use_compact_list"
         android:key="@string/key_use_compact_list"
+        android:dependency="@string/key_use_double_entry"
         android:title="@string/title_use_compact_list"/>
 
-    <android.support.v7.preference.SwitchPreferenceCompat android:summary="@string/summary_use_double_entry"
-        android:key="@string/key_use_double_entry"
-        android:defaultValue="true"
-        android:title="@string/title_use_double_entry"/>
     <android.support.v7.preference.SwitchPreferenceCompat android:summary="@string/summary_save_opening_balances"
         android:key="@string/key_save_opening_balances"
         android:defaultValue="false"

From a3f49b869db928c3ddb9a20abec0cb232547ce4c Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 6 Jun 2016 15:22:01 +0200
Subject: [PATCH 064/121] Extracted strings for internationalization

Rename 3rd party "Sync" to "Enable"
- This will reduce confusion of what the functionality does
---
 .../android/ui/report/BaseReportFragment.java      |  2 +-
 .../android/ui/settings/BookManagerFragment.java   | 14 ++++--------
 .../transaction/ScheduledActionsListFragment.java  |  4 ++--
 .../ui/transaction/TransactionDetailActivity.java  |  2 +-
 .../util/dialog/DateRangePickerDialogFragment.java |  2 +-
 app/src/main/res/menu/book_context_menu.xml        |  2 +-
 app/src/main/res/menu/book_list_actions.xml        |  2 +-
 app/src/main/res/values/strings.xml                | 25 +++++++++++++++-------
 8 files changed, 28 insertions(+), 25 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
index 6cb6c9f4..ee53923b 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
@@ -341,6 +341,6 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
     @Override
     public void onNothingSelected() {
         if (mSelectedValueTextView != null)
-            mSelectedValueTextView.setText("Select any part of the chart to view details");
+            mSelectedValueTextView.setText(R.string.select_chart_to_view_details);
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
index ec488e61..40bf6306 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
@@ -42,19 +42,13 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.BookDbHelper;
 import org.gnucash.android.db.DatabaseCursorLoader;
-import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
 
-import java.text.DateFormat;
-import java.util.Date;
-
 import org.gnucash.android.db.DatabaseSchema.BookEntry;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.util.PreferencesHelper;
-import org.w3c.dom.Text;
 
 /**
  * Fragment for managing the books in the database
@@ -165,7 +159,7 @@ public void bindView(View view, final Context context, Cursor cursor) {
             lastSyncText.setText(PreferencesHelper.getLastExportTime().toString());
 
             TextView labelLastSync = (TextView) view.findViewById(R.id.label_last_sync);
-            labelLastSync.setText("Last Export:");
+            labelLastSync.setText(R.string.label_last_export_time);
             ImageView optionsMenu = (ImageView) view.findViewById(R.id.options_menu);
 
             optionsMenu.setOnClickListener(new View.OnClickListener() {
@@ -200,10 +194,10 @@ public boolean onMenuItemClick(MenuItem item) {
                     public void onClick(View v) {
                         //// TODO: extract strings
                         AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(getActivity());
-                        dialogBuilder.setTitle("Confirm delete Book")
+                        dialogBuilder.setTitle(getString(R.string.title_confirm_delete_book))
                                 .setIcon(R.drawable.ic_close_black_24dp)
-                                .setMessage("All accounts and transactions in this book will be deleted!");
-                        dialogBuilder.setPositiveButton("Delete Book", new DialogInterface.OnClickListener() {
+                                .setMessage(getString(R.string.msg_all_book_data_will_be_deleted));
+                        dialogBuilder.setPositiveButton(getString(R.string.btn_delete_book), new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialog, int which) {
                                 BooksDbAdapter.getInstance().deleteRecord(bookUID);
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
index 9327821c..ccff3c1b 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
@@ -267,7 +267,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
 
         //this should actually never happen, but has happened once. So perform check for the future
         if (transaction.getSplits().size() == 0){
-            Toast.makeText(getActivity(), "The selected transaction has no splits and cannot be opened", Toast.LENGTH_SHORT).show();
+            Toast.makeText(getActivity(), R.string.toast_transaction_has_no_splits_and_cannot_open, Toast.LENGTH_SHORT).show();
             return;
         }
 
@@ -466,7 +466,7 @@ public void bindView(View view, Context context, Cursor cursor) {
                     amountTextView.setText(transaction.getSplits().get(0).getValue().formattedString());
                 }
             } else {
-                amountTextView.setText(transaction.getSplits().size() + " splits");
+                amountTextView.setText(getString(R.string.label_split_count, transaction.getSplits().size()));
             }
             TextView descriptionTextView = (TextView) view.findViewById(R.id.secondary_text);
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
index 173730fe..2d90c3c4 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionDetailActivity.java
@@ -118,7 +118,7 @@ private void bindViews(){
         Transaction transaction = transactionsDbAdapter.getRecord(mTransactionUID);
 
         mTransactionDescription.setText(transaction.getDescription());
-        mTransactionAccount.setText("in " + AccountsDbAdapter.getInstance().getAccountFullName(mAccountUID));
+        mTransactionAccount.setText(getString(R.string.label_inside_account_with_name, AccountsDbAdapter.getInstance().getAccountFullName(mAccountUID)));
 
         AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
 
diff --git a/app/src/main/java/org/gnucash/android/ui/util/dialog/DateRangePickerDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/util/dialog/DateRangePickerDialogFragment.java
index 921a91d4..954c10f2 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/dialog/DateRangePickerDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/dialog/DateRangePickerDialogFragment.java
@@ -83,7 +83,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
                 .inMode(CalendarPickerView.SelectionMode.RANGE)
                 .withSelectedDate(today);
 
-        mDoneButton.setText("Done");
+        mDoneButton.setText(R.string.done_label);
         mDoneButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
diff --git a/app/src/main/res/menu/book_context_menu.xml b/app/src/main/res/menu/book_context_menu.xml
index a75c6cd4..8c7a9ae8 100644
--- a/app/src/main/res/menu/book_context_menu.xml
+++ b/app/src/main/res/menu/book_context_menu.xml
@@ -21,7 +21,7 @@
 
     <item android:id="@+id/ctx_menu_sync_book"
           android:checkable="true"
-          android:title="Enable Sync"
+          android:title="@string/menu_title_enable_sync"
           app:showAsAction="always"
           android:orderInCategory="1" />
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/menu/book_list_actions.xml b/app/src/main/res/menu/book_list_actions.xml
index 79631a36..4ec906bc 100644
--- a/app/src/main/res/menu/book_list_actions.xml
+++ b/app/src/main/res/menu/book_list_actions.xml
@@ -19,5 +19,5 @@
     <item android:id="@+id/menu_create_book"
           android:icon="@drawable/ic_add_white_24dp"
           app:showAsAction="always"
-          android:title="New Book"/>
+          android:title="@string/menu_title_new_book"/>
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index d438ec1f..88a625b2 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -283,11 +283,11 @@
     <string name="label_tap_to_create_schedule">Tap to create schedule</string>
     <string name="title_restore_backup">Restore Backup</string>
     <string name="header_backup_and_export_settings">Backup &amp; export</string>
-    <string name="title_dropbox_sync_preference">DropBox Sync</string>
-    <string name="title_owncloud_sync_preference">ownCloud Sync</string>
+    <string name="title_dropbox_sync_preference">Enable DropBox</string>
+    <string name="title_owncloud_sync_preference">Enable ownCloud </string>
     <string name="title_backup_preference_category">Backup</string>
-    <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
-    <string name="summary_owncloud_sync">Enable to sync to ownCloud</string>
+    <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+    <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
     <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
     <string name="title_backup_prefs">Backup Preferences</string>
     <string name="title_create_backup_pref">Create Backup</string>
@@ -296,8 +296,8 @@
     <string name="toast_backup_successful">Backup successful</string>
     <string name="toast_backup_failed">Backup failed</string>
     <string name="export_warning_xml">Exports all accounts and transactions</string>
-    <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-    <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+    <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+    <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
     <string name="nav_menu_favorites">Favorites</string>
@@ -444,7 +444,16 @@
     <string name="digit_zero">0</string>
     <string name="digit_zero_text">+</string>
 
-    <string name="header_manage_books">Manage Books</string>
     <string name="title_manage_books">Manage Books</string>
-    <string name="menu_manage_books">Manage Books...</string>
+    <string name="menu_manage_books">Manage Books</string>
+    <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+    <string name="title_confirm_delete_book">Confirm delete Book</string>
+    <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+    <string name="btn_delete_book">Delete Book</string>
+    <string name="label_last_export_time">Last Exported:</string>
+    <string name="menu_title_enable_sync">Enable Sync</string>
+    <string name="menu_title_new_book">New Book</string>
+    <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+    <string name="label_split_count">%1$d splits</string>
+    <string name="label_inside_account_with_name">in %1$s</string>
 </resources>

From ee9614580ab2cd9c24d7e04234814ba7ef02bfab Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 6 Jun 2016 15:25:19 +0200
Subject: [PATCH 065/121] Translation updates for Japanese, Hungarian, Greek,
 Polish, and Portuguese

---
 app/src/main/res/values-af-rZA/strings.xml |  59 ++++-
 app/src/main/res/values-ar-rSA/strings.xml |  60 ++++-
 app/src/main/res/values-ca-rES/strings.xml |  61 ++++-
 app/src/main/res/values-cs-rCZ/strings.xml |  59 ++++-
 app/src/main/res/values-de/strings.xml     |  65 +++++-
 app/src/main/res/values-el-rGR/strings.xml |  91 ++++++--
 app/src/main/res/values-en-rGB/strings.xml |  59 ++++-
 app/src/main/res/values-es-rMX/strings.xml |  65 +++++-
 app/src/main/res/values-es/strings.xml     |  61 ++++-
 app/src/main/res/values-fi-rFI/strings.xml |  59 ++++-
 app/src/main/res/values-fr/strings.xml     |  61 ++++-
 app/src/main/res/values-hu-rHU/strings.xml | 103 +++++++--
 app/src/main/res/values-it-rIT/strings.xml |  61 ++++-
 app/src/main/res/values-iw-rIL/strings.xml |  69 +++++-
 app/src/main/res/values-ja-rJP/strings.xml | 355 ++++++++++++++++-------------
 app/src/main/res/values-ko-rKR/strings.xml |  59 ++++-
 app/src/main/res/values-lv-rLV/strings.xml |  67 +++++-
 app/src/main/res/values-nb/strings.xml     |  66 +++++-
 app/src/main/res/values-nl-rNL/strings.xml |  65 +++++-
 app/src/main/res/values-no-rNO/strings.xml |  65 +++++-
 app/src/main/res/values-pl-rPL/strings.xml |  77 +++++--
 app/src/main/res/values-pt-rBR/strings.xml |  91 ++++++--
 app/src/main/res/values-pt-rPT/strings.xml |  65 +++++-
 app/src/main/res/values-ro-rRO/strings.xml |  63 ++++-
 app/src/main/res/values-ru/strings.xml     |  65 +++++-
 app/src/main/res/values-sr-rSP/strings.xml |  65 +++++-
 app/src/main/res/values-sv-rSE/strings.xml |  59 ++++-
 app/src/main/res/values-tr-rTR/strings.xml |  63 ++++-
 app/src/main/res/values-uk-rUA/strings.xml |  65 +++++-
 app/src/main/res/values-vi-rVN/strings.xml |  59 ++++-
 app/src/main/res/values-zh-rCN/strings.xml |  59 ++++-
 app/src/main/res/values-zh-rTW/strings.xml |  65 +++++-
 32 files changed, 2024 insertions(+), 382 deletions(-)

diff --git a/app/src/main/res/values-af-rZA/strings.xml b/app/src/main/res/values-af-rZA/strings.xml
index d068d6b5..024af6aa 100644
--- a/app/src/main/res/values-af-rZA/strings.xml
+++ b/app/src/main/res/values-af-rZA/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Account name</string>
   <string name="btn_cancel">Cancel</string>
   <string name="btn_save">Save</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Enter Passcode</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -280,9 +281,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -291,8 +294,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -301,6 +304,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
     <item quantity="other">Every %d days</item>
@@ -388,13 +401,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -403,4 +419,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-ar-rSA/strings.xml b/app/src/main/res/values-ar-rSA/strings.xml
index 55d14972..d6a7b9db 100644
--- a/app/src/main/res/values-ar-rSA/strings.xml
+++ b/app/src/main/res/values-ar-rSA/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Account name</string>
   <string name="btn_cancel">Cancel</string>
   <string name="btn_save">Save</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Enter Passcode</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -64,6 +65,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
@@ -283,9 +285,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -294,8 +298,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -304,6 +308,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="zero">Every %d days</item>
     <item quantity="one">Daily</item>
@@ -407,13 +421,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -422,4 +439,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-ca-rES/strings.xml b/app/src/main/res/values-ca-rES/strings.xml
index 1651e6ae..c67640b5 100644
--- a/app/src/main/res/values-ca-rES/strings.xml
+++ b/app/src/main/res/values-ca-rES/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Nom del compte</string>
   <string name="btn_cancel">Cancella</string>
   <string name="btn_save">Desa</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Introdueix la contrasenya</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Envia a&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Mou</string>
   <string name="title_move_transactions">Move %1$d transaction(s)</string>
@@ -280,9 +281,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Cpia de seguretat</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Preferncies de cpia de seguretat</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -291,8 +294,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Preferits</string>
@@ -301,6 +304,16 @@
   <string name="nav_menu_scheduled_transactions">Assentaments peridics</string>
   <string name="nav_menu_export">Exporta&#8230;</string>
   <string name="nav_menu_settings">Preferncies</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
     <item quantity="other">Every %d days</item>
@@ -388,13 +401,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltims 3 mesos</item>
@@ -403,4 +419,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-cs-rCZ/strings.xml b/app/src/main/res/values-cs-rCZ/strings.xml
index 22abb955..3a85864c 100644
--- a/app/src/main/res/values-cs-rCZ/strings.xml
+++ b/app/src/main/res/values-cs-rCZ/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Account name</string>
   <string name="btn_cancel">Cancel</string>
   <string name="btn_save">Save</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Enter Passcode</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -281,9 +282,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -292,8 +295,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -302,6 +305,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
     <item quantity="few">Every %d days</item>
@@ -393,13 +406,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -408,4 +424,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 9530745a..ca4188fe 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Kontoname</string>
   <string name="btn_cancel">Abbrechen</string>
   <string name="btn_save">Speichern</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Zugangscode eingeben</string>
   <string name="toast_wrong_passcode">Falscher Zugangscode, bitte versuchen Sie es erneut</string>
   <string name="toast_passcode_set">Zugangscode festgelegt</string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Senden&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Verschieben</string>
   <string name="title_move_transactions">%1$d Buchung(en) verschieben</string>
@@ -167,6 +168,7 @@
   <string name="summary_default_export_format">Dateiformat, welches standardmig verwendet wird, wenn Buchungen exportiert werden</string>
   <string name="menu_export_transactions">Buchungen exportieren&#8230;</string>
   <string name="label_recurring_transaction">Wiederholung</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Ausgleichskonto</string>
   <string name="title_progress_exporting_transactions">Die Buchungen werden exportiert</string>
   <string name="label_no_recurring_transactions">Keine wiederkehrende Buchungen vorhanden</string>
@@ -198,7 +200,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Farbe auswhlen</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Kontofarbe &amp; -art</string>
   <string name="label_delete_sub_accounts">Unterkonten lschen</string>
   <string name="title_recent_accounts">Krzlich</string>
@@ -272,9 +277,11 @@
   <string name="label_tap_to_create_schedule">Wiederholung erstellen</string>
   <string name="title_restore_backup">Sicherung wiederherstellen&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; Exporte</string>
-  <string name="title_dropbox_sync_preference">Dropbox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Aktiviert Synchronisierung mit DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">GnuCash XML Datei auswhlen</string>
   <string name="title_backup_prefs">Sicherungs-Einstellungen</string>
   <string name="title_create_backup_pref">Sicherung erstellen</string>
@@ -283,8 +290,8 @@
   <string name="toast_backup_successful">Sicherung erfolgreich</string>
   <string name="toast_backup_failed">Sicherung fehlgeschlagen</string>
   <string name="export_warning_xml">Alle Konten und Buchungen werden exportiert</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Aktiviert Synchronisierung mit Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Installieren Sie einen Dateimanager um Dateien auszuwhlen</string>
   <string name="title_select_backup_to_restore">Whle eine Sicherungskopie</string>
   <string name="nav_menu_favorites">Favoriten</string>
@@ -293,6 +300,16 @@
   <string name="nav_menu_scheduled_transactions">Geplante Buchungen</string>
   <string name="nav_menu_export">Exportieren&#8230;</string>
   <string name="nav_menu_settings">Einstellungen</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Tglich</item>
     <item quantity="other">Jeden %d. Tag</item>
@@ -381,13 +398,16 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="summary_google_plus">Teile deine Ideen und Verbesserungsvorschlge mit oder berichte ber Probleme mit GnuCash</string>
   <string name="summary_translate_gnucash">bersetze oder korrigiere bersetzungen auf CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">Es gibt keine kompatible App, welche die exportierten Buchungen empfangen kann!</string>
-  <string name="menu_move_transaction">Verschieben</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Kopieren</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Aktueller Monat</item>
     <item>Letzte 3 Monate</item>
@@ -396,4 +416,37 @@ No user-identifiable information will be collected as part of this process!</str
     <item>Unbegrenzt</item>
     <item>Benutzerdefiniert&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-el-rGR/strings.xml b/app/src/main/res/values-el-rGR/strings.xml
index bcc91384..6cec92f0 100644
--- a/app/src/main/res/values-el-rGR/strings.xml
+++ b/app/src/main/res/values-el-rGR/strings.xml
@@ -25,11 +25,12 @@
   <string name="label_account_name"> </string>
   <string name="btn_cancel"></string>
   <string name="btn_save"></string>
-  <string name="label_passcode">Enter Passcode</string>
-  <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
-  <string name="toast_passcode_set">Passcode set</string>
-  <string name="label_confirm_passcode">Please confirm your passcode</string>
-  <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
+  <string name="btn_test">Test</string>
+  <string name="label_passcode"> </string>
+  <string name="toast_wrong_passcode"> ,   </string>
+  <string name="toast_passcode_set"> </string>
+  <string name="label_confirm_passcode">    </string>
+  <string name="toast_invalid_passcode_confirmation">  .   </string>
   <string name="label_transaction_name"></string>
   <string name="label_transaction_amount"></string>
   <string name="title_add_transaction"> </string>
@@ -50,14 +51,14 @@
   <string name="label_transaction_description"></string>
   <string name="menu_move"></string>
   <string name="title_selected">%1$d </string>
-  <string name="label_account_balance">Balance:</string>
-  <string name="label_export_destination">Export To:</string>
+  <string name="label_account_balance">:</string>
+  <string name="label_export_destination"> :</string>
   <string name="title_export_dialog">Export transactions</string>
   <string name="option_export_all_transactions">   </string>
   <string name="hint_export_choice">,          .          </string>
   <string name="toast_export_error">   %1$s</string>
   <string name="btn_export"></string>
-  <string name="option_delete_after_export">Delete transactions after export</string>
+  <string name="option_delete_after_export">    </string>
   <string name="hint_delete_after_export">    ,       </string>
   <string name="title_settings"></string>
   <string-array name="export_destinations">
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item> &#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions"> %1$d ()</string>
@@ -81,8 +82,8 @@
   <string name="label_permission_create_accounts">    GnuCash  Android</string>
   <string name="label_permission_group">    GnuCash</string>
   <string name="description_permission_group">    GnuCash</string>
-  <string name="label_permission_record_transaction">Record transactions in GnuCash</string>
-  <string name="label_permission_create_account">Create accounts in GnuCash</string>
+  <string name="label_permission_record_transaction">   GnuCash</string>
+  <string name="label_permission_create_account">   GnuCash</string>
   <string name="label_display_account"> </string>
   <string name="btn_create_accounts"> </string>
   <string name="title_default_accounts">   </string>
@@ -94,11 +95,11 @@
   <string name="title_general_prefs"></string>
   <string name="label_widget_configuration"> </string>
   <string name="toast_no_transactions_to_export">     </string>
-  <string name="header_passcode_settings">Passcode</string>
-  <string name="title_passcode_preferences">Passcode Preferences</string>
-  <string name="title_passcode_enabled">Passcode Turned On</string>
-  <string name="title_passcode_disabled">Passcode Turned Off</string>
-  <string name="title_change_passcode">Change Passcode</string>
+  <string name="header_passcode_settings"></string>
+  <string name="title_passcode_preferences"> </string>
+  <string name="title_passcode_enabled"> </string>
+  <string name="title_passcode_disabled"> </string>
+  <string name="title_change_passcode"> </string>
   <string name="title_about_gnucash">  GnuCash</string>
   <string name="summary_about_gnucash">A mobile finance management and expense-tracker designed for Android</string>
   <string name="title_about"></string>
@@ -289,9 +290,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -300,8 +303,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -310,6 +313,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export...</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
     <item quantity="other">Every %d days</item>
@@ -399,13 +412,16 @@ No user-identifiable information will be collected as part of this process!
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -414,4 +430,37 @@ No user-identifiable information will be collected as part of this process!
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-en-rGB/strings.xml b/app/src/main/res/values-en-rGB/strings.xml
index c3c04aeb..9d7178b6 100644
--- a/app/src/main/res/values-en-rGB/strings.xml
+++ b/app/src/main/res/values-en-rGB/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Account name</string>
   <string name="btn_cancel">Cancel</string>
   <string name="btn_save">Save</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Enter Passcode</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -280,9 +281,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -291,8 +294,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favourites</string>
@@ -301,6 +304,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
     <item quantity="other">Every %d days</item>
@@ -388,13 +401,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -403,4 +419,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index 7b6d21a7..1472fea4 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Nombre de la cuenta</string>
   <string name="btn_cancel">Cancelar</string>
   <string name="btn_save">Guardar</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Introducir contrasea</string>
   <string name="toast_wrong_passcode">Contrasea incorrecta, intentar otra vez</string>
   <string name="toast_passcode_set">Contrasea establecida</string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Compartir archivo&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
   <string name="title_move_transactions">Mover %1$d transaccin(es)</string>
@@ -167,6 +168,7 @@
   <string name="summary_default_export_format">Formato de archivo para usar por defecto al exportar transacciones</string>
   <string name="menu_export_transactions">Exportar transacciones&#8230;</string>
   <string name="label_recurring_transaction">Recurrencia</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Descuadre</string>
   <string name="title_progress_exporting_transactions">Exportando transacciones</string>
   <string name="label_no_recurring_transactions">No hay transacciones recurrentes que mostrar.</string>
@@ -198,7 +200,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Seleccionar un color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Color y tipo de cuenta</string>
   <string name="label_delete_sub_accounts">Borrar sub-cuentas</string>
   <string name="title_recent_accounts">Reciente</string>
@@ -272,9 +277,11 @@
   <string name="label_tap_to_create_schedule">Toque para crear la programacin</string>
   <string name="title_restore_backup">Restaurar copia de seguridad&#8230;</string>
   <string name="header_backup_and_export_settings">Copia de seguridad y exportacin</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Copia de seguridad</string>
-  <string name="summary_dropbox_sync">Activar sincronizacin con DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Seleccionar archivo XML GnuCash</string>
   <string name="title_backup_prefs">Preferencias de copia de seguridad</string>
   <string name="title_create_backup_pref">Crear copia de seguridad</string>
@@ -283,8 +290,8 @@
   <string name="toast_backup_successful">Copia de seguridad exitosa</string>
   <string name="toast_backup_failed">Copia de seguridad fallida</string>
   <string name="export_warning_xml">Exportar todas las cuentas y transacciones</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Activar sincronizacin con Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Instale un gestor de archivos para seleccionar archivos</string>
   <string name="title_select_backup_to_restore">Seleccione la copia de seguridad a restaurar</string>
   <string name="nav_menu_favorites">Favoritos</string>
@@ -293,6 +300,16 @@
   <string name="nav_menu_scheduled_transactions">Transacciones Programadas</string>
   <string name="nav_menu_export">Exportar&#8230;</string>
   <string name="nav_menu_settings">Ajustes</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Diario</item>
     <item quantity="other">Cada %d das</item>
@@ -381,13 +398,16 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
@@ -396,4 +416,37 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
     <item>Todo el tiempo</item>
     <item>Rango personalizado&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 422057f5..1ea2022b 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Nombre de la cuenta</string>
   <string name="btn_cancel">Cancelar</string>
   <string name="btn_save">Guardar</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Introducir contrasea</string>
   <string name="toast_wrong_passcode">Contrasea incorrecta, intentar otra vez</string>
   <string name="toast_passcode_set">Contrasea establecida</string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Compartir archivo&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
   <string name="title_move_transactions">Mover %1$d transaccin(es)</string>
@@ -276,9 +277,11 @@
   <string name="label_tap_to_create_schedule">Toque para crear la programacin</string>
   <string name="title_restore_backup">Restaurar copia de seguridad&#8230;</string>
   <string name="header_backup_and_export_settings">Copia de seguridad y exportacin</string>
-  <string name="title_dropbox_sync_preference">Sincronizacin de DropBox</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Copia de seguridad</string>
-  <string name="summary_dropbox_sync">Activar sincronizacin con DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Seleccionar archivo XML GnuCash</string>
   <string name="title_backup_prefs">Preferencias de copia de seguridad</string>
   <string name="title_create_backup_pref">Crear copia de seguridad</string>
@@ -287,8 +290,8 @@
   <string name="toast_backup_successful">Copia de seguridad exitosa</string>
   <string name="toast_backup_failed">Copia de seguridad fallida</string>
   <string name="export_warning_xml">Exportar todas las cuentas y transacciones</string>
-  <string name="title_google_drive_sync_pref">Sincronizacin de Google Drive</string>
-  <string name="summary_google_drive_sync">Activar sincronizacin con Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Instale un gestor de archivos para seleccionar archivos</string>
   <string name="title_select_backup_to_restore">Seleccione la copia de seguridad a restaurar</string>
   <string name="nav_menu_favorites">Favoritos</string>
@@ -297,6 +300,16 @@
   <string name="nav_menu_scheduled_transactions">Transacciones Programadas</string>
   <string name="nav_menu_export">Exportar&#8230;</string>
   <string name="nav_menu_settings">Ajustes</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Diario</item>
     <item quantity="other">Cada %d das</item>
@@ -385,13 +398,16 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="summary_google_plus">Compartir ideas, discutir cambios o reportar problemas</string>
   <string name="summary_translate_gnucash">Traducir o revisar en CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No hay aplicaciones compatibles para recibir las transacciones exportadas!</string>
-  <string name="menu_move_transaction">Mover...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
@@ -400,4 +416,37 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
     <item>Todo el tiempo</item>
     <item>Rango personalizado&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-fi-rFI/strings.xml b/app/src/main/res/values-fi-rFI/strings.xml
index d068d6b5..024af6aa 100644
--- a/app/src/main/res/values-fi-rFI/strings.xml
+++ b/app/src/main/res/values-fi-rFI/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Account name</string>
   <string name="btn_cancel">Cancel</string>
   <string name="btn_save">Save</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Enter Passcode</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -280,9 +281,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -291,8 +294,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -301,6 +304,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
     <item quantity="other">Every %d days</item>
@@ -388,13 +401,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -403,4 +419,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index a788d892..52ca0081 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Nom du compte</string>
   <string name="btn_cancel">Annuler</string>
   <string name="btn_save">Sauvegarder</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Entrer code</string>
   <string name="toast_wrong_passcode">Mauvais code, veuillez ressayer</string>
   <string name="toast_passcode_set">Code ajout</string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Partager le fichier&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Dplacer</string>
   <string name="title_move_transactions">Dplacer %1$d transaction(s)</string>
@@ -275,9 +276,11 @@
   <string name="label_tap_to_create_schedule">Appuyez sur pour crer le calendrier</string>
   <string name="title_restore_backup">Restaurer Sauvegarde&#8230;</string>
   <string name="header_backup_and_export_settings">Sauvegarde &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Sauvegarde</string>
-  <string name="summary_dropbox_sync">Activer pour synchroniser avec DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Selectionner un fichier GnuCash XML</string>
   <string name="title_backup_prefs">Sauvergarde Prfrences</string>
   <string name="title_create_backup_pref">Crer Sauvegarde</string>
@@ -286,8 +289,8 @@
   <string name="toast_backup_successful">Sauvegarde russie</string>
   <string name="toast_backup_failed">chec de la sauvegarde</string>
   <string name="export_warning_xml">Exporte tous les comptes et les transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Activer pour synchroniser avec Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Installez un gestionnaire de fichiers pour slectionner les fichiers</string>
   <string name="title_select_backup_to_restore">Slectionnez une sauvegarde  restaurer</string>
   <string name="nav_menu_favorites">Favoris</string>
@@ -296,6 +299,16 @@
   <string name="nav_menu_scheduled_transactions">Transactions planifies</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Paramtres</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Journalier</item>
     <item quantity="other">Tous les %d jours</item>
@@ -385,13 +398,16 @@ Aucune information permettant d\'identifier l\'utilisateur ne sera recueillis da
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Mois actuel</item>
     <item>3 derniers mois</item>
@@ -400,4 +416,37 @@ Aucune information permettant d\'identifier l\'utilisateur ne sera recueillis da
     <item>Tout le temps</item>
     <item>Priode&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-hu-rHU/strings.xml b/app/src/main/res/values-hu-rHU/strings.xml
index 089479ab..d34ec273 100644
--- a/app/src/main/res/values-hu-rHU/strings.xml
+++ b/app/src/main/res/values-hu-rHU/strings.xml
@@ -16,26 +16,27 @@
  limitations under the License.
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-  <string name="title_create_account">Create Account</string>
-  <string name="title_edit_account">Edit Account</string>
-  <string name="info_details">Info</string>
+  <string name="title_create_account">Fik ltrehozsa</string>
+  <string name="title_edit_account">Fik szerkesztse</string>
+  <string name="info_details">Informci</string>
   <string name="menu_export">Export OFX</string>
-  <string name="description_add_transaction_icon">Add a new transaction to an account</string>
-  <string name="label_no_accounts">No accounts to display</string>
-  <string name="label_account_name">Account name</string>
-  <string name="btn_cancel">Cancel</string>
-  <string name="btn_save">Save</string>
-  <string name="label_passcode">Enter Passcode</string>
-  <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
-  <string name="toast_passcode_set">Passcode set</string>
+  <string name="description_add_transaction_icon">j tranzakci hozzadsa egy fikhoz</string>
+  <string name="label_no_accounts">Nincs megjelenthet fik</string>
+  <string name="label_account_name">Fik neve</string>
+  <string name="btn_cancel">Mgsem</string>
+  <string name="btn_save">Ments</string>
+  <string name="btn_test">Test</string>
+  <string name="label_passcode">Jelsz megadsa</string>
+  <string name="toast_wrong_passcode">Rossz jelsz, krjk prblja meg jra</string>
+  <string name="toast_passcode_set">Jelsz belltsa</string>
   <string name="label_confirm_passcode">Please confirm your passcode</string>
   <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
-  <string name="label_transaction_name">Description</string>
-  <string name="label_transaction_amount">Amount</string>
-  <string name="title_add_transaction">New transaction</string>
-  <string name="label_no_transactions">No transactions to display</string>
+  <string name="label_transaction_name">Lers</string>
+  <string name="label_transaction_amount">sszeg</string>
+  <string name="title_add_transaction">j tranzakci</string>
+  <string name="label_no_transactions">Nincs megjelenthet tranzakci</string>
   <string name="label_timeanddate">DATE &amp; TIME</string>
-  <string name="label_account">Account</string>
+  <string name="label_account">Fik</string>
   <string name="label_debit">DEBIT</string>
   <string name="label_credit">CREDIT</string>
   <string name="title_accounts">Accounts</string>
@@ -59,15 +60,15 @@
   <string name="btn_export">Export</string>
   <string name="option_delete_after_export">Delete transactions after export</string>
   <string name="hint_delete_after_export">All exported transactions will be deleted when exporting is completed</string>
-  <string name="title_settings">Settings</string>
+  <string name="title_settings">Belltsok</string>
   <string-array name="export_destinations">
-    <item>SD Card</item>
+    <item>SD-krtya</item>
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Share file&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
-  <string name="btn_move">Move</string>
+  <string name="btn_move">Mozgats</string>
   <string name="title_move_transactions">Move %1$d transaction(s)</string>
   <string name="label_move_destination">Destination Account</string>
   <string name="permission_access_sdcard">Access SD Card</string>
@@ -169,6 +170,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -200,7 +202,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
@@ -276,9 +281,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -287,8 +294,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -297,6 +304,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export...</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
     <item quantity="other">Every %d days</item>
@@ -386,13 +403,16 @@ No user-identifiable information will be collected as part of this process!
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -401,4 +421,37 @@ No user-identifiable information will be collected as part of this process!
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index a7e03948..53a0ecaf 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Nome conto</string>
   <string name="btn_cancel">Annulla</string>
   <string name="btn_save">Salva</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Inserisci codice di accesso</string>
   <string name="toast_wrong_passcode">Codice di accesso errato, riprova</string>
   <string name="toast_passcode_set">Codice di accesso impostato</string>
@@ -65,7 +66,7 @@
     <item>Dropbox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Condividi file&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Sposta</string>
   <string name="title_move_transactions">Sposta %1$d transazioni</string>
@@ -277,9 +278,11 @@
   <string name="label_tap_to_create_schedule">Tocca per creare una pianificazione</string>
   <string name="title_restore_backup">Ripristina backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup e esportazione</string>
-  <string name="title_dropbox_sync_preference">Sincronizzazione Dropbox</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Abilita la sincronizzazione con Dropbox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Seleziona un file XML di GnuCash</string>
   <string name="title_backup_prefs">Preferenze di backup</string>
   <string name="title_create_backup_pref">Crea backup</string>
@@ -288,8 +291,8 @@
   <string name="toast_backup_successful">Backup riuscito</string>
   <string name="toast_backup_failed">Backup non riuscito</string>
   <string name="export_warning_xml">Esporta tutti i conti e tutte le transazioni</string>
-  <string name="title_google_drive_sync_pref">Sincronizzazione Google Drive</string>
-  <string name="summary_google_drive_sync">Abilita la sincronizzazione con Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Installa un file manager per selezionare i file</string>
   <string name="title_select_backup_to_restore">Seleziona il backup da ripristinare</string>
   <string name="nav_menu_favorites">Preferiti</string>
@@ -298,6 +301,16 @@
   <string name="nav_menu_scheduled_transactions">Transazioni pianificate</string>
   <string name="nav_menu_export">Esporta&#8230;</string>
   <string name="nav_menu_settings">Impostazioni</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Ogni giorno</item>
     <item quantity="other">Ogni %d giorni</item>
@@ -385,13 +398,16 @@
   <string name="summary_google_plus">Condivi idee, discuti dei cambiamenti o segnala dei problemi</string>
   <string name="summary_translate_gnucash">Traduci o revisiona su Crowdin</string>
   <string name="toast_no_compatible_apps_to_receive_export">Nessuna app compatibile con la ricezione delle transazioni esportate!</string>
-  <string name="menu_move_transaction">Sposta...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplica</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Mese corrente</item>
     <item>Ultimi 3 mesi</item>
@@ -400,4 +416,37 @@
     <item>Da sempre</item>
     <item>Intervallo personalizzato&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-iw-rIL/strings.xml b/app/src/main/res/values-iw-rIL/strings.xml
index d068d6b5..b81f813b 100644
--- a/app/src/main/res/values-iw-rIL/strings.xml
+++ b/app/src/main/res/values-iw-rIL/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Account name</string>
   <string name="btn_cancel">Cancel</string>
   <string name="btn_save">Save</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Enter Passcode</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -178,6 +179,8 @@
   <string name="label_default_transfer_account">Default Transfer Account</string>
   <plurals name="label_sub_accounts">
     <item quantity="one">%d sub-account</item>
+    <item quantity="two">%d sub-accounts</item>
+    <item quantity="many">%d sub-accounts</item>
     <item quantity="other">%d sub-accounts</item>
   </plurals>
   <string-array name="account_type_entry_values">
@@ -280,9 +283,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -291,8 +296,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -301,20 +306,38 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
+    <item quantity="two">Every %d days</item>
+    <item quantity="many">Every %d days</item>
     <item quantity="other">Every %d days</item>
   </plurals>
   <plurals name="label_every_x_weeks">
     <item quantity="one">Weekly</item>
+    <item quantity="two">Every %d weeks</item>
+    <item quantity="many">Every %d weeks</item>
     <item quantity="other">Every %d weeks</item>
   </plurals>
   <plurals name="label_every_x_months">
     <item quantity="one">Monthly</item>
+    <item quantity="two">Every %d months</item>
+    <item quantity="many">Every %d months</item>
     <item quantity="other">Every %d months</item>
   </plurals>
   <plurals name="label_every_x_years">
     <item quantity="one">Yearly</item>
+    <item quantity="two">Every %d years</item>
+    <item quantity="many">Every %d years</item>
     <item quantity="other">Every %d years</item>
   </plurals>
   <string name="title_enable_crashlytics">Enable Crash Logging</string>
@@ -388,13 +411,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -403,4 +429,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index cd1a1561..1e279f01 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name"></string>
   <string name="btn_cancel"></string>
   <string name="btn_save"></string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode"></string>
   <string name="toast_wrong_passcode"></string>
   <string name="toast_passcode_set"></string>
@@ -65,7 +66,7 @@
     <item>Dropbox</item>
     <item>Google </item>
     <item>ownCloud</item>
-    <item>...</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions">%1$d</string>
@@ -102,8 +103,8 @@
   <string name="summary_about_gnucash"></string>
   <string name="title_about"></string>
   <string name="toast_format_exported_to">%1$s\n</string>
-  <string name="title_export_email">GnuCash Android %1$s export</string>
-  <string name="description_export_email">GnuCash Android Export from </string>
+  <string name="title_export_email">GnuCash Android %1$s </string>
+  <string name="description_export_email">GnuCash Android  </string>
   <string name="header_transaction_settings"></string>
   <string name="title_transaction_preferences"></string>
   <string name="title_account_preferences"></string>
@@ -139,7 +140,7 @@
         </string>
   <string name="label_dismiss"></string>
   <string name="toast_transanction_amount_required"></string>
-  <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
+  <string name="toast_error_edit_multi_currency_transaction"></string>
   <string name="menu_import_accounts">GnuCash</string>
   <string name="btn_import_accounts"></string>
   <string name="toast_error_importing_accounts">GnuCash</string>
@@ -165,7 +166,7 @@
   <string name="menu_export_transactions">...</string>
   <string name="label_recurring_transaction"></string>
   <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
-  <string name="imbalance_account_name">Imbalance</string>
+  <string name="imbalance_account_name"></string>
   <string name="title_progress_exporting_transactions"></string>
   <string name="label_no_recurring_transactions"></string>
   <string name="toast_recurring_transaction_deleted"></string>
@@ -204,193 +205,239 @@
   <string name="title_recent_accounts"></string>
   <string name="title_favorite_accounts"></string>
   <string name="title_all_accounts"></string>
-  <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
-  <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
-  <string name="menu_scheduled_transactions">Scheduled Transactions</string>
-  <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
-        a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
-        available in app Settings so you can decide later.
-    </string>
-  <string name="title_scheduled_transactions">Transactions</string>
-  <string name="title_select_export_destination">Select destination for export</string>
-  <string name="hint_split_memo">Memo</string>
-  <string name="label_spend">Spend</string>
-  <string name="label_receive">Receive</string>
+  <string name="summary_create_default_accounts"> GnuCash </string>
+  <string name="title_create_default_accounts"></string>
+  <string name="msg_confirm_create_default_accounts_setting">\n\n?</string>
+  <string name="menu_scheduled_transactions"></string>
+  <string name="msg_confirm_create_default_accounts_first_run">GnuCash Android !\n
+ GnuCash \n\n
+    </string>
+  <string name="title_scheduled_transactions"></string>
+  <string name="title_select_export_destination"></string>
+  <string name="hint_split_memo"></string>
+  <string name="label_spend"></string>
+  <string name="label_receive"></string>
   <string name="label_withdrawal"></string>
   <string name="label_deposit"></string>
   <string name="label_payment"></string>
   <string name="label_charge"></string>
-  <string name="label_decrease">Decrease</string>
-  <string name="label_increase">Increase</string>
+  <string name="label_decrease"></string>
+  <string name="label_increase"></string>
   <string name="label_income"></string>
-  <string name="label_rebate">Rebate</string>
-  <string name="label_expense">Expense</string>
-  <string name="label_bill">Bill</string>
-  <string name="label_invoice">Invoice</string>
+  <string name="label_rebate"></string>
+  <string name="label_expense"></string>
+  <string name="label_bill"></string>
+  <string name="label_invoice"></string>
   <string name="label_buy"></string>
-  <string name="label_sell">Sell</string>
-  <string name="label_repeats">Repeats</string>
-  <string name="toast_no_recent_backup">No recent backup found</string>
-  <string name="account_name_opening_balances">Opening Balances</string>
-  <string name="account_name_equity">Equity</string>
-  <string name="summary_save_opening_balances">Enable to save the current account balance (before deleting transactions) as new opening balance after deleting transactions
-    </string>
-  <string name="title_save_opening_balances">Save account opening balances</string>
-  <string name="export_warning_ofx">OFX does not support double-entry transactions</string>
-  <string name="export_warning_qif">Generates separate QIF files per currency</string>
-  <string name="title_transaction_splits">Transaction splits</string>
-  <string name="label_imbalance">Imbalance:</string>
-  <string name="btn_add_split">Add split</string>
+  <string name="label_sell"></string>
+  <string name="label_repeats"></string>
+  <string name="toast_no_recent_backup"></string>
+  <string name="account_name_opening_balances"></string>
+  <string name="account_name_equity"></string>
+  <string name="summary_save_opening_balances"> ()     </string>
+  <string name="title_save_opening_balances"></string>
+  <string name="export_warning_ofx">OFX </string>
+  <string name="export_warning_qif"> QIF </string>
+  <string name="title_transaction_splits"></string>
+  <string name="label_imbalance">:</string>
+  <string name="btn_add_split"></string>
   <string name="menu_title_favorite"></string>
-  <string name="drawer_open">Navigation drawer opened</string>
-  <string name="drawer_close">Navigation drawer closed</string>
+  <string name="drawer_open"> </string>
+  <string name="drawer_close"> </string>
   <string name="title_reports"></string>
   <string name="title_pie_chart"></string>
   <string name="title_line_chart"></string>
   <string name="title_bar_chart"></string>
-  <string name="title_report_prefs">Report Preferences</string>
+  <string name="title_report_prefs"></string>
   <string name="label_report_currency"></string>
-  <string name="title_use_account_color">Account color in reports</string>
-  <string name="summary_use_account_color">Use account color in the bar/pie chart</string>
-  <string name="header_report_settings">Reports</string>
-  <string name="menu_order_by_size">Order by size</string>
-  <string name="menu_toggle_legend">Show legend</string>
-  <string name="menu_toggle_labels">Show labels</string>
-  <string name="menu_toggle_percentage_mode">Show percentage</string>
-  <string name="menu_toggle_average_lines">Show average lines</string>
-  <string name="menu_group_smaller_slices">Group Smaller Slices</string>
-  <string name="label_chart_no_data">No chart data available</string>
-  <string name="label_chart_overall">Overall</string>
+  <string name="title_use_account_color"></string>
+  <string name="summary_use_account_color">/</string>
+  <string name="header_report_settings"></string>
+  <string name="menu_order_by_size"></string>
+  <string name="menu_toggle_legend"></string>
+  <string name="menu_toggle_labels"></string>
+  <string name="menu_toggle_percentage_mode"></string>
+  <string name="menu_toggle_average_lines"></string>
+  <string name="menu_group_smaller_slices"></string>
+  <string name="label_chart_no_data"></string>
+  <string name="label_chart_overall"></string>
   <string name="label_chart_total"></string>
   <string name="label_other_slice"></string>
-  <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
-  <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
-  <string name="label_save_template">Save as template</string>
-  <string name="label_delete_account_transactions_description">This account contains transactions. \nWhat would you like to do with these transactions</string>
-  <string name="label_delete_account_subaccounts_description">This account contains sub-accounts. \nWhat would you like to do with these sub-accounts</string>
-  <string name="label_delete_transactions">Delete transactions</string>
-  <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
-  <string name="label_tap_to_create_schedule">Tap to create schedule</string>
-  <string name="title_restore_backup">Restore Backup&#8230;</string>
-  <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="toast_chart_percentage_mode_total"></string>
+  <string name="toast_chart_percentage_mode_current_bar"></string>
+  <string name="label_save_template"></string>
+  <string name="label_delete_account_transactions_description">\n</string>
+  <string name="label_delete_account_subaccounts_description">\n</string>
+  <string name="label_delete_transactions"></string>
+  <string name="toast_disable_double_entry_to_save_transaction"></string>
+  <string name="label_tap_to_create_schedule"></string>
+  <string name="title_restore_backup">&#8230;</string>
+  <string name="header_backup_and_export_settings"></string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category"></string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
-  <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="title_select_gnucash_xml_file">GnuCash XML </string>
   <string name="title_backup_prefs"></string>
   <string name="title_create_backup_pref"></string>
-  <string name="summary_create_backup_pref">By default backups are saved to the SDCARD</string>
-  <string name="summary_restore_backup_pref">Select a specific backup to restore</string>
-  <string name="toast_backup_successful">Backup successful</string>
-  <string name="toast_backup_failed">Backup failed</string>
-  <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
-  <string name="toast_install_file_manager">Install a file manager to select files</string>
-  <string name="title_select_backup_to_restore">Select backup to restore</string>
-  <string name="nav_menu_favorites">Favorites</string>
+  <string name="summary_create_backup_pref"> SD </string>
+  <string name="summary_restore_backup_pref"></string>
+  <string name="toast_backup_successful"></string>
+  <string name="toast_backup_failed"></string>
+  <string name="export_warning_xml"></string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="toast_install_file_manager"> </string>
+  <string name="title_select_backup_to_restore"></string>
+  <string name="nav_menu_favorites"></string>
   <string name="nav_menu_open">&#8230;</string>
-  <string name="nav_menu_reports">Reports</string>
-  <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+  <string name="nav_menu_reports"></string>
+  <string name="nav_menu_scheduled_transactions"></string>
   <string name="nav_menu_export">&#8230;</string>
   <string name="nav_menu_settings"></string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
-    <item quantity="other">Every %d days</item>
+    <item quantity="other">%d </item>
   </plurals>
   <plurals name="label_every_x_weeks">
-    <item quantity="other">Every %d weeks</item>
+    <item quantity="other">%d </item>
   </plurals>
   <plurals name="label_every_x_months">
-    <item quantity="other">Every %d months</item>
+    <item quantity="other">%d </item>
   </plurals>
   <plurals name="label_every_x_years">
-    <item quantity="other">Every %d years</item>
+    <item quantity="other">%d </item>
   </plurals>
-  <string name="title_enable_crashlytics">Enable Crash Logging</string>
-  <string name="msg_enable_crashlytics">Automatically send information about app malfunction to the developers.</string>
+  <string name="title_enable_crashlytics"> </string>
+  <string name="msg_enable_crashlytics"></string>
   <string name="label_export_format"> </string>
-  <string name="toast_backup_folder_not_found">Backup folder cannot be found. Make sure the SD Card is mounted!</string>
-  <string name="label_old_passcode">Enter your old passcode</string>
-  <string name="label_new_passcode">Enter your new passcode</string>
-  <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
-  <string name="title_scheduled_exports">Exports</string>
-  <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
-  <string name="title_create_export_schedule">Create export schedule</string>
-  <string name="toast_exported_to">Exported to: %1$s</string>
-  <string name="toast_legend_too_long">The legend is too long</string>
-  <string name="hint_account_description">Account description</string>
-  <string name="label_no_recent_accounts">No recent accounts</string>
-  <string name="label_no_favorite_accounts">No favorite accounts</string>
-  <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
-  <string name="label_scheduled_action_ended">"Ended, last executed on %1$s"</string>
-  <string name="label_select_bar_to_view_details">Select a bar to view details</string>
+  <string name="toast_backup_folder_not_found"> SD !</string>
+  <string name="label_old_passcode"></string>
+  <string name="label_new_passcode"></string>
+  <string name="nav_menu_scheduled_backups"></string>
+  <string name="title_scheduled_exports"></string>
+  <string name="label_no_scheduled_exports_to_display"></string>
+  <string name="title_create_export_schedule"></string>
+  <string name="toast_exported_to">: %1$s</string>
+  <string name="toast_legend_too_long"></string>
+  <string name="hint_account_description"></string>
+  <string name="label_no_recent_accounts"></string>
+  <string name="label_no_favorite_accounts"></string>
+  <string name="nav_menu_scheduled_actions"></string>
+  <string name="label_scheduled_action_ended">" %1$s"</string>
+  <string name="label_select_bar_to_view_details"></string>
   <string name="btn_wizard_next"></string>
-  <string name="btn_wizard_finish">Done</string>
-  <string name="wizard_title_default_currency">Default Currency</string>
-  <string name="wizard_title_account_setup">Account Setup</string>
-  <string name="wizard_title_select_currency">Select Currency</string>
-  <string name="wizard_title_feedback_options">Feedback Options</string>
-  <string name="wizard_option_create_default_accounts">Create default accounts</string>
-  <string name="wizard_option_import_my_accounts">Import my accounts</string>
-  <string name="wizard_option_let_me_handle_it">Let me handle it</string>
-  <string name="wizard_option_currency_other">Other&#8230;</string>
-  <string name="wizard_option_auto_send_crash_reports">Automatically send crash reports</string>
-  <string name="wizard_option_disable_crash_reports">Disable crash reports</string>
-  <string name="wizard_btn_back">Back</string>
-  <string name="title_setup_gnucash">Setup GnuCash</string>
-  <string name="wizard_title_welcome_to_gnucash">Welcome to GnuCash</string>
-  <string name="msg_wizard_welcome_page">Before you dive in, \nlet\'s setup a few things first\n\nTo continue, press Next</string>
-  <string name="title_split_editor">Split Editor</string>
-  <string name="toast_error_check_split_amounts">Check that all splits have valid amounts before saving!</string>
-  <string name="label_error_invalid_expression">Invalid expression!</string>
-  <string name="toast_scheduled_recurring_transaction">Scheduled recurring transaction</string>
-  <string name="error_exchange_rate_required">An exchange rate is required</string>
-  <string name="error_converted_amount_required">The converted amount is required</string>
-  <string name="title_transfer_funds">Transfer Funds</string>
-  <string name="nav_menu_help"><![CDATA[Help & Feedback]]></string>
-  <string name="label_select_pie_slice_to_see_details">Select a slice to see details</string>
-  <string name="label_report_period">Period:</string>
-  <string name="label_convert_from">From:</string>
-  <string name="label_convert_to">To:</string>
-  <string name="msg_provide_exchange_rate">Provide either the converted amount or exchange rate in order to transfer funds</string>
-  <string name="hint_exchange_rate">Exchange rate</string>
-  <string name="btn_fetch_quote">Fetch quote</string>
-  <string name="hint_converted_amount">Converted Amount</string>
-  <string name="title_report_sheet">Sheet</string>
-  <string name="label_last_3_months_expenses">Expenses for last 3 months</string>
-  <string name="label_total_assets">Total Assets</string>
-  <string name="label_total_liabilities">Total Liabilities</string>
-  <string name="label_net_worth">Net Worth</string>
-  <string name="label_assets">Assets</string>
-  <string name="label_liabilities">Liabilities</string>
-  <string name="label_equity">Equity</string>
-  <string name="label_total_liabilities_and_equity"><![CDATA[Total Liabilites & Equity]]></string>
-  <string name="label_move_to">Move to:</string>
-  <string name="menu_group_by">Group By</string>
-  <string name="menu_group_by_month">Month</string>
-  <string name="menu_group_by_quarter">Quarter</string>
-  <string name="menu_group_by_year">Year</string>
-  <string name="title_balance_sheet_report">Balance Sheet</string>
+  <string name="btn_wizard_finish"></string>
+  <string name="wizard_title_default_currency"></string>
+  <string name="wizard_title_account_setup"></string>
+  <string name="wizard_title_select_currency"></string>
+  <string name="wizard_title_feedback_options"></string>
+  <string name="wizard_option_create_default_accounts"></string>
+  <string name="wizard_option_import_my_accounts"></string>
+  <string name="wizard_option_let_me_handle_it"></string>
+  <string name="wizard_option_currency_other">&#8230;</string>
+  <string name="wizard_option_auto_send_crash_reports"> </string>
+  <string name="wizard_option_disable_crash_reports"> </string>
+  <string name="wizard_btn_back"></string>
+  <string name="title_setup_gnucash">GnuCash </string>
+  <string name="wizard_title_welcome_to_gnucash">GnuCash </string>
+  <string name="msg_wizard_welcome_page">\n\n\n</string>
+  <string name="title_split_editor"></string>
+  <string name="toast_error_check_split_amounts">!</string>
+  <string name="label_error_invalid_expression">!</string>
+  <string name="toast_scheduled_recurring_transaction"></string>
+  <string name="error_exchange_rate_required"></string>
+  <string name="error_converted_amount_required"></string>
+  <string name="title_transfer_funds"></string>
+  <string name="nav_menu_help"><![CDATA[]]></string>
+  <string name="label_select_pie_slice_to_see_details"></string>
+  <string name="label_report_period">:</string>
+  <string name="label_convert_from">:</string>
+  <string name="label_convert_to">:</string>
+  <string name="msg_provide_exchange_rate"></string>
+  <string name="hint_exchange_rate"></string>
+  <string name="btn_fetch_quote"></string>
+  <string name="hint_converted_amount"></string>
+  <string name="title_report_sheet"></string>
+  <string name="label_last_3_months_expenses"> 3 </string>
+  <string name="label_total_assets"></string>
+  <string name="label_total_liabilities"></string>
+  <string name="label_net_worth"></string>
+  <string name="label_assets"></string>
+  <string name="label_liabilities"></string>
+  <string name="label_equity"></string>
+  <string name="label_total_liabilities_and_equity"><![CDATA[]]></string>
+  <string name="label_move_to">:</string>
+  <string name="menu_group_by"></string>
+  <string name="menu_group_by_month"></string>
+  <string name="menu_group_by_quarter"></string>
+  <string name="menu_group_by_year"></string>
+  <string name="title_balance_sheet_report"></string>
   <string name="label_balance_sheet_total">:</string>
   <string name="title_google_plus_community">Google+ </string>
   <string name="title_translate_gnucash">GnuCash </string>
-  <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
-  <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
-  <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
-  <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="summary_google_plus"></string>
+  <string name="summary_translate_gnucash">CrowdIn </string>
+  <string name="toast_no_compatible_apps_to_receive_export">!</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
+  <string name="menu_duplicate_transaction"></string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
-    <item>Current month</item>
-    <item>Last 3 months</item>
-    <item>Last 6 months</item>
-    <item>Last 12 months</item>
-    <item>All time</item>
-    <item>Custom range&#8230;</item>
+    <item></item>
+    <item> 3 </item>
+    <item> 6 </item>
+    <item> 12 </item>
+    <item></item>
+    <item>&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index b1c47dde..eabb1e8c 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Account name</string>
   <string name="btn_cancel">Cancel</string>
   <string name="btn_save">Save</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Enter Passcode</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -279,9 +280,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -290,8 +293,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -300,6 +303,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="other">Every %d days</item>
   </plurals>
@@ -383,13 +396,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -398,4 +414,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-lv-rLV/strings.xml b/app/src/main/res/values-lv-rLV/strings.xml
index fce7059c..9cb37c9f 100644
--- a/app/src/main/res/values-lv-rLV/strings.xml
+++ b/app/src/main/res/values-lv-rLV/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Account name</string>
   <string name="btn_cancel">Cancel</string>
   <string name="btn_save">Save</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Enter Passcode</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -64,6 +65,7 @@
     <item>SD Card</item>
     <item>DropBox</item>
     <item>Google Drive</item>
+    <item>ownCloud</item>
     <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Move</string>
@@ -168,6 +170,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -200,7 +203,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
@@ -276,9 +282,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -287,8 +295,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -297,6 +305,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="zero">Every %d days</item>
     <item quantity="one">Daily</item>
@@ -388,10 +406,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
+  <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -400,4 +424,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 2185e5be..6ba6b484 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Kontonavn</string>
   <string name="btn_cancel">Avbryt</string>
   <string name="btn_save">Lagre</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Angi passord</string>
   <string name="toast_wrong_passcode">Feil passord, prv igjen</string>
   <string name="toast_passcode_set">Passord satt</string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Disk</item>
     <item>ownCloud</item>
-    <item>Send til&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Flytt</string>
   <string name="title_move_transactions">Flytt %1$d transaksjon(er)</string>
@@ -164,6 +165,7 @@
   <string name="summary_default_export_format">Filformat som skal brukes som standard nr du eksporterer transaksjoner</string>
   <string name="menu_export_transactions">Eksporter transaksjoner&#8230;</string>
   <string name="label_recurring_transaction">Gjentakelse</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Ubalanse</string>
   <string name="title_progress_exporting_transactions">Eksportere transaksjoner</string>
   <string name="label_no_recurring_transactions">Ingen gjentakende transaksjoner  vise.</string>
@@ -195,7 +197,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Velg en farge</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Konto farge &amp; Type</string>
   <string name="label_delete_sub_accounts">Slett underkontoer</string>
   <string name="title_recent_accounts">Siste</string>
@@ -267,9 +272,11 @@
   <string name="label_tap_to_create_schedule">Trykk for  opprette plan</string>
   <string name="title_restore_backup">Gjenopprette sikkerhetskopi&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; eksport</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Sikkerhetskopiering</string>
-  <string name="summary_dropbox_sync">Aktiver synkronisering til DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Velg GnuCash XML-fil</string>
   <string name="title_backup_prefs">Innstillinger for sikkerhetskopiering</string>
   <string name="title_create_backup_pref">Opprett sikkerhetskopi</string>
@@ -278,8 +285,8 @@
   <string name="toast_backup_successful">Sikkerhetskopiering vellykket</string>
   <string name="toast_backup_failed">Sikkerhetskopiering mislyktes</string>
   <string name="export_warning_xml">Eksporterer alle kontoer og transaksjoner</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Aktiver Sync til Google Disk</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Installer en filbehandler for  velge filer</string>
   <string name="title_select_backup_to_restore">Velg sikkerhetskopien som skal gjenopprettes</string>
   <string name="nav_menu_favorites">Favoritter</string>
@@ -288,6 +295,16 @@
   <string name="nav_menu_scheduled_transactions">Planlagte transaksjoner</string>
   <string name="nav_menu_export">Eksport&#8230;</string>
   <string name="nav_menu_settings">Innstillinger</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daglig</item>
     <item quantity="other">Hver %d dag</item>
@@ -375,12 +392,16 @@
   <string name="summary_google_plus">Dele ideer, diskutere endringer eller rapportere problemer</string>
   <string name="summary_translate_gnucash">Oversette eller korrekturles p CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">Ingen kompatible apper til  motta de eksporterte transaksjonene!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
@@ -389,4 +410,37 @@
     <item>Tidsrom</item>
     <item>Tilpasset tidsrom&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-nl-rNL/strings.xml b/app/src/main/res/values-nl-rNL/strings.xml
index ac31c47e..45c06442 100644
--- a/app/src/main/res/values-nl-rNL/strings.xml
+++ b/app/src/main/res/values-nl-rNL/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Rekeningnaam</string>
   <string name="btn_cancel">Annuleren</string>
   <string name="btn_save">Bewaren</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Vul wachtwoord in</string>
   <string name="toast_wrong_passcode">Onjuist wachtwoord, probeer het opnieuw</string>
   <string name="toast_passcode_set">Toegangscode ingesteld</string>
@@ -65,7 +66,7 @@
     <item>Dropbox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Verzenden&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Verplaatsen</string>
   <string name="title_move_transactions">%1$d boeking(en) verplaatsen</string>
@@ -169,6 +170,7 @@
   <string name="summary_default_export_format">Bestandsformaat om standaard te gebruiken bij het experteren van transacties</string>
   <string name="menu_export_transactions">Transacties exporteren&#8230;</string>
   <string name="label_recurring_transaction">Herhaling</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Onbalans</string>
   <string name="title_progress_exporting_transactions">Transactions exporteren</string>
   <string name="label_no_recurring_transactions">Geen repetitieve transacties gevonden.</string>
@@ -200,7 +202,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Kies een kleur</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Rekening kleur &amp; type</string>
   <string name="label_delete_sub_accounts">Subrekeningen verwijderen</string>
   <string name="title_recent_accounts">Recente</string>
@@ -275,9 +280,11 @@
   <string name="label_tap_to_create_schedule">Tik op om schema te maken</string>
   <string name="title_restore_backup">Back-up terugzetten&#8230;</string>
   <string name="header_backup_and_export_settings">Back-up &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Back-up</string>
-  <string name="summary_dropbox_sync">Activeer om te synchroniseren met DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Selecteer GnuCash XML bestand</string>
   <string name="title_backup_prefs">Back-up voorkeuren</string>
   <string name="title_create_backup_pref">Back-up maken</string>
@@ -286,8 +293,8 @@
   <string name="toast_backup_successful">Maken back-up succesvol</string>
   <string name="toast_backup_failed">Back-up mislukt</string>
   <string name="export_warning_xml">Exporteert alle rekeningen en boekingen</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Activeren om te synchroniseren met Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Installeer een bestandsbeheerder om bestanden te selecteren</string>
   <string name="title_select_backup_to_restore">Selecteer back-up om te herstellen</string>
   <string name="nav_menu_favorites">Favorieten</string>
@@ -296,6 +303,16 @@
   <string name="nav_menu_scheduled_transactions">Vaste journaalposten</string>
   <string name="nav_menu_export">Export...</string>
   <string name="nav_menu_settings">Instellingen</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Dagelijks</item>
     <item quantity="other">Elke %d dagen</item>
@@ -385,13 +402,16 @@ No user-identifiable information will be collected as part of this process!
   <string name="summary_google_plus">Ideen uitwisselen, bespreken van wijzigingen of problemen melden</string>
   <string name="summary_translate_gnucash">Vertalen of nalezen op CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Huidige maand</item>
     <item>Afgelopen 3 maanden</item>
@@ -400,4 +420,37 @@ No user-identifiable information will be collected as part of this process!
     <item>Alle boekingen</item>
     <item>Aangepast bereik&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-no-rNO/strings.xml b/app/src/main/res/values-no-rNO/strings.xml
index 19aa4ae7..6ba6b484 100644
--- a/app/src/main/res/values-no-rNO/strings.xml
+++ b/app/src/main/res/values-no-rNO/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Kontonavn</string>
   <string name="btn_cancel">Avbryt</string>
   <string name="btn_save">Lagre</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Angi passord</string>
   <string name="toast_wrong_passcode">Feil passord, prv igjen</string>
   <string name="toast_passcode_set">Passord satt</string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Disk</item>
     <item>ownCloud</item>
-    <item>Send til&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Flytt</string>
   <string name="title_move_transactions">Flytt %1$d transaksjon(er)</string>
@@ -164,6 +165,7 @@
   <string name="summary_default_export_format">Filformat som skal brukes som standard nr du eksporterer transaksjoner</string>
   <string name="menu_export_transactions">Eksporter transaksjoner&#8230;</string>
   <string name="label_recurring_transaction">Gjentakelse</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Ubalanse</string>
   <string name="title_progress_exporting_transactions">Eksportere transaksjoner</string>
   <string name="label_no_recurring_transactions">Ingen gjentakende transaksjoner  vise.</string>
@@ -195,7 +197,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Velg en farge</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Konto farge &amp; Type</string>
   <string name="label_delete_sub_accounts">Slett underkontoer</string>
   <string name="title_recent_accounts">Siste</string>
@@ -267,9 +272,11 @@
   <string name="label_tap_to_create_schedule">Trykk for  opprette plan</string>
   <string name="title_restore_backup">Gjenopprette sikkerhetskopi&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; eksport</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Sikkerhetskopiering</string>
-  <string name="summary_dropbox_sync">Aktiver synkronisering til DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Velg GnuCash XML-fil</string>
   <string name="title_backup_prefs">Innstillinger for sikkerhetskopiering</string>
   <string name="title_create_backup_pref">Opprett sikkerhetskopi</string>
@@ -278,8 +285,8 @@
   <string name="toast_backup_successful">Sikkerhetskopiering vellykket</string>
   <string name="toast_backup_failed">Sikkerhetskopiering mislyktes</string>
   <string name="export_warning_xml">Eksporterer alle kontoer og transaksjoner</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Aktiver Sync til Google Disk</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Installer en filbehandler for  velge filer</string>
   <string name="title_select_backup_to_restore">Velg sikkerhetskopien som skal gjenopprettes</string>
   <string name="nav_menu_favorites">Favoritter</string>
@@ -288,6 +295,16 @@
   <string name="nav_menu_scheduled_transactions">Planlagte transaksjoner</string>
   <string name="nav_menu_export">Eksport&#8230;</string>
   <string name="nav_menu_settings">Innstillinger</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daglig</item>
     <item quantity="other">Hver %d dag</item>
@@ -375,13 +392,16 @@
   <string name="summary_google_plus">Dele ideer, diskutere endringer eller rapportere problemer</string>
   <string name="summary_translate_gnucash">Oversette eller korrekturles p CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">Ingen kompatible apper til  motta de eksporterte transaksjonene!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
@@ -390,4 +410,37 @@
     <item>Tidsrom</item>
     <item>Tilpasset tidsrom&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-pl-rPL/strings.xml b/app/src/main/res/values-pl-rPL/strings.xml
index 6418e9fa..886dea27 100644
--- a/app/src/main/res/values-pl-rPL/strings.xml
+++ b/app/src/main/res/values-pl-rPL/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Nazwa konta</string>
   <string name="btn_cancel">Anuluj</string>
   <string name="btn_save">Zapisz</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Wprowad haso</string>
   <string name="toast_wrong_passcode">Ze haso, sprbuj ponownie</string>
   <string name="toast_passcode_set">Haso ustawione</string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Dysk Google</item>
     <item>ownCloud</item>
-    <item>Udostpnij plik&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Przenie</string>
   <string name="title_move_transactions">Przenie %1$d transakcji</string>
@@ -250,7 +251,7 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   <string name="title_bar_chart">Wykres supkowy</string>
   <string name="title_report_prefs">Ustawienia raportu</string>
   <string name="label_report_currency">Wybierz walut</string>
-  <string name="title_use_account_color">Kolor konra w raporctach</string>
+  <string name="title_use_account_color">Kolor konta w raportach</string>
   <string name="summary_use_account_color">Uyj koloru konta w wykresie koowym/supkowym</string>
   <string name="header_report_settings">Raporty</string>
   <string name="menu_order_by_size">Sortuj po rozmarze</string>
@@ -269,23 +270,25 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   <string name="label_delete_account_transactions_description">To konto zawiera transakcje.\nCo chciaby zrobi z tymi transakcjami</string>
   <string name="label_delete_account_subaccounts_description">To konto zawiera sub-konta.\nCo chciaby zrobi z tymi sub-kontami</string>
   <string name="label_delete_transactions">Usu transakcje</string>
-  <string name="toast_disable_double_entry_to_save_transaction">Utwrz i okre konto transferowe LUB wycz pdwjne wpisy w ustawieniach aby zachowa transakcj</string>
+  <string name="toast_disable_double_entry_to_save_transaction">Utwrz i okrel konto transferowe LUB wycz podwjne wpisy w ustawieniach aby zachowa transakcj</string>
   <string name="label_tap_to_create_schedule">Stuknij aby zaplanowa</string>
   <string name="title_restore_backup">Przywrc kopi zapasow&#8230;</string>
   <string name="header_backup_and_export_settings">Kopia zapasowa i eksport</string>
-  <string name="title_dropbox_sync_preference">Synchronizacja z DropBox</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Kopia zapasowa</string>
-  <string name="summary_dropbox_sync">Zaznaczy by synchronizowac z DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Wybierz plik GnuCash XML</string>
   <string name="title_backup_prefs">Ustawienia kopii zapasowej</string>
   <string name="title_create_backup_pref">Utwrz kopi zapasow</string>
-  <string name="summary_create_backup_pref">Domylnie kopie zapasowe s zachowywane na KARCIE SD</string>
+  <string name="summary_create_backup_pref">Domylnie kopie zapasowe s zachowywane na karcie SD</string>
   <string name="summary_restore_backup_pref">Wybierz konkretn kopi zapasow by j przywrci</string>
   <string name="toast_backup_successful">Kopia zapasowa utworzona pomylnie</string>
   <string name="toast_backup_failed">Bd tworzenia kopii zapasowej</string>
   <string name="export_warning_xml">Wyeksportowano wszystkie konta i transakcje</string>
-  <string name="title_google_drive_sync_pref">Synchronizacja z Dyskiem Google</string>
-  <string name="summary_google_drive_sync">Wybierz aby synchronizowa z Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Zainstaluj managera plikw aby wybra pliki</string>
   <string name="title_select_backup_to_restore">Wybierz kopi zapasw aby j przywrci</string>
   <string name="nav_menu_favorites">Ulubione</string>
@@ -294,6 +297,16 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   <string name="nav_menu_scheduled_transactions">Transakcje zaplanowane</string>
   <string name="nav_menu_export">Eksport&#8230;</string>
   <string name="nav_menu_settings">Ustawienia</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Codziennie</item>
     <item quantity="few">Co %d dni</item>
@@ -318,7 +331,7 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   <string name="msg_enable_crashlytics">Wcz by wysya inforamcje o bdach do twrcw w celu poleszania aplikacji (zalecane).
 adne informacje umoliwiajce identyfikacj uytkownika nie bd zbierane w ramach tego procesu!</string>
   <string name="label_export_format">Format</string>
-  <string name="toast_backup_folder_not_found">Folder kopii zapasowej nie moe by odnaleziony. Upewnij si, e KARTA SD jest zamontowana!</string>
+  <string name="toast_backup_folder_not_found">Folder kopii zapasowej nie moe by odnaleziony. Upewnij si, e karta SD jest zamontowana!</string>
   <string name="label_old_passcode">Wpisz stare haso</string>
   <string name="label_new_passcode">Wpisz nowe haso</string>
   <string name="nav_menu_scheduled_backups">Zaplanowane eksporty</string>
@@ -356,12 +369,12 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   <string name="error_exchange_rate_required">Kurs wymiany jest wymagany</string>
   <string name="error_converted_amount_required">Wymieniona warto jest wymagana</string>
   <string name="title_transfer_funds">Transferuj rodki</string>
-  <string name="nav_menu_help"><![CDATA[Pomoc i Feedback]]></string>
-  <string name="label_select_pie_slice_to_see_details">Wybie wycinek aby zobaczy szczegy</string>
+  <string name="nav_menu_help"><![CDATA[Pomoc i opinie]]></string>
+  <string name="label_select_pie_slice_to_see_details">Wybierz wycinek aby zobaczy szczegy</string>
   <string name="label_report_period">Okres:</string>
   <string name="label_convert_from">Od:</string>
   <string name="label_convert_to">Do:</string>
-  <string name="msg_provide_exchange_rate">Aby przetranferowa rodki podaj wymienion warto lub kurs wymiany</string>
+  <string name="msg_provide_exchange_rate">Aby przetransferowa rodki podaj wymienion warto lub kurs wymiany</string>
   <string name="hint_exchange_rate">Kurs wymiany</string>
   <string name="btn_fetch_quote">Pobierz notowania</string>
   <string name="hint_converted_amount">Wymieniona warto</string>
@@ -383,16 +396,19 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   <string name="label_balance_sheet_total">Suma:</string>
   <string name="title_google_plus_community">Spoeczno Google+</string>
   <string name="title_translate_gnucash">Tumacz GnuCash</string>
-  <string name="summary_google_plus">Udostpnij pomysy, dyskutuj zmiany, lub zgo problem</string>
+  <string name="summary_google_plus">Udostpnij pomysy, przedyskutuj zmiany lub zgo problem</string>
   <string name="summary_translate_gnucash">Tumacz lub sprawdzaj na Crowdin</string>
   <string name="toast_no_compatible_apps_to_receive_export">Brak kompatybilnych aplikacji do otrzymania eksportowanych transakcji!</string>
-  <string name="menu_move_transaction">Przenie...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplikuj</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Biecy miesic</item>
     <item>Ostatnie 3 miesice</item>
@@ -401,4 +417,37 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
     <item>Od pocztku</item>
     <item>Wasny zakres&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 215b97f9..95db7541 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Nome da Conta</string>
   <string name="btn_cancel">Cancelar</string>
   <string name="btn_save">Gravar</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Introduza a palavra passe</string>
   <string name="toast_wrong_passcode">Senha incorreta, tente novamente</string>
   <string name="toast_passcode_set">Definio de palavra passe</string>
@@ -55,7 +56,7 @@
   <string name="title_export_dialog">Exportar Transaes</string>
   <string name="option_export_all_transactions">Exportar todas as transaes</string>
   <string name="hint_export_choice">Por padro, apenas as novas transaes aps a ltima exportao sero exportadas. Marque esta opo para exportar todas as transaes</string>
-  <string name="toast_export_error">Erro ao exportar o ficheiro %1$s</string>
+  <string name="toast_export_error">Erro ao exportar o arquivo %1$s</string>
   <string name="btn_export">Exportar</string>
   <string name="option_delete_after_export">Excluir transaes aps exportar</string>
   <string name="hint_delete_after_export">Todas as transaes exportadas sero apagadas quando a exportao estiver completa</string>
@@ -65,12 +66,12 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Share file&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
-  <string name="title_move_transactions">Move %1$d transao</string>
+  <string name="title_move_transactions">Mover %1$d transao(es)</string>
   <string name="label_move_destination">Conta Destino</string>
-  <string name="permission_access_sdcard">Aceder ao SD Card</string>
+  <string name="permission_access_sdcard">Acessar carto SD</string>
   <string name="toast_incompatible_currency">Impossvel mover transao.\nA conta destino usa uma moeda diferente da conta de origem.</string>
   <string name="header_general_settings">Geral</string>
   <string name="header_about_gnucash">Sobre</string>
@@ -88,27 +89,27 @@
   <string name="title_default_accounts">Escolha as contas a criar</string>
   <string name="error_no_accounts">No existem contas no GnuCash.\nCrie uma conta antes de adicionar um widget</string>
   <string name="title_build_version">Verso</string>
-  <string name="title_license">Licensa</string>
+  <string name="title_license">Licena</string>
   <string name="summary_licence_details">Apache License v2.0. Clique para obter detalhes</string>
   <string name="title_general_prefs">Preferncias</string>
   <string name="label_widget_configuration">Escolha uma conta</string>
-  <string name="toast_no_transactions_to_export">No existem transaces para exportar</string>
-  <string name="header_passcode_settings">Palavra passe</string>
-  <string name="title_passcode_preferences">Preferncias de palavra passe</string>
-  <string name="title_passcode_enabled">Palavra passe ligada</string>
-  <string name="title_passcode_disabled">Palavra passe desligada</string>
-  <string name="title_change_passcode">Mudar Palavra Passe</string>
+  <string name="toast_no_transactions_to_export">No existem transaes para exportar</string>
+  <string name="header_passcode_settings">Senha</string>
+  <string name="title_passcode_preferences">Preferncias de Senha</string>
+  <string name="title_passcode_enabled">Senha habilitada</string>
+  <string name="title_passcode_disabled">Senha  desabilitada</string>
+  <string name="title_change_passcode">Modificar senha</string>
   <string name="title_about_gnucash">Sobre o GnuCash</string>
   <string name="summary_about_gnucash">Um gerenciador financeiro mobile desenvolvido para Android</string>
   <string name="title_about">Sobre</string>
-  <string name="toast_format_exported_to">%1$s ficheiro exportado para:\n</string>
+  <string name="toast_format_exported_to">Arquivo %1$s exportado para:\n</string>
   <string name="title_export_email">GnuCash Android %1$s exportao</string>
   <string name="description_export_email">Exportao do GnuCash Android de</string>
   <string name="header_transaction_settings">Transaes</string>
   <string name="title_transaction_preferences">Preferncias de Transaes</string>
   <string name="title_account_preferences">Preferncias de Contas</string>
   <string name="title_default_transaction_type">Tipo de Transao padro</string>
-  <string name="summary_default_transaction_type">Tipo de transao a ser usada por defeito, CRDITO ou DBITO</string>
+  <string name="summary_default_transaction_type">Tipo de transao a ser usada por padro, CRDITO ou DBITO</string>
   <string-array name="transaction_types">
     <item>CRDITO</item>
     <item>DBITO</item>
@@ -119,7 +120,7 @@
   <string name="title_export_all_transactions">Exportar todas as transaes</string>
   <string name="title_always_delete_exported_transactions">Apagar as transaes exportadas</string>
   <string name="title_default_export_email">Email de exportao padro</string>
-  <string name="summary_default_export_email">O endereo de email por defeito para onde sero enviadas as exportaes. Pode ser alterado no momento da exportao</string>
+  <string name="summary_default_export_email">O endereo de email padro para onde sero enviadas as exportaes. Pode ser alterado no momento da exportao.</string>
   <string name="label_double_entry_account">Conta para transferncia</string>
   <string name="summary_use_double_entry">Todas as transaes sero uma transferncia de uma conta para a outra</string>
   <string name="title_use_double_entry">Activar a entrada dupla</string>
@@ -165,6 +166,7 @@
   <string name="summary_default_export_format">Formato de ficheiro usado por defeito quando  feita uma exportao de transaes</string>
   <string name="menu_export_transactions">Exportar transaes</string>
   <string name="label_recurring_transaction">Recorrente</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Desequilibrio</string>
   <string name="title_progress_exporting_transactions">Exportando transaes</string>
   <string name="label_no_recurring_transactions">No existem transaes recorrentes para mostrar</string>
@@ -196,7 +198,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Escolha uma cr</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Cr da Conta &amp; Tipo</string>
   <string name="label_delete_sub_accounts">Apagar sub-contas</string>
   <string name="title_recent_accounts">Recentes</string>
@@ -270,9 +275,11 @@
   <string name="label_tap_to_create_schedule">Toque para criar um agendamento</string>
   <string name="title_restore_backup">Restore Backup</string>
   <string name="header_backup_and_export_settings">Backup &amp; exportao</string>
-  <string name="title_dropbox_sync_preference">Sincronizao com DropBox</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Permite a sincronizao com DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Escolha um ficheiro XML do GnuCash</string>
   <string name="title_backup_prefs">Preferncias de Backup</string>
   <string name="title_create_backup_pref">Criar Backup</string>
@@ -281,8 +288,8 @@
   <string name="toast_backup_successful">Backup efectuado com sucesso</string>
   <string name="toast_backup_failed">Erro ao efectuar o Backup</string>
   <string name="export_warning_xml">Exporta todas as contas e transaes</string>
-  <string name="title_google_drive_sync_pref">Sincronizao com Google Drive</string>
-  <string name="summary_google_drive_sync">Permite a sincronizao com o Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Instale um gestor de ficheiros para escolher um ficheiro</string>
   <string name="title_select_backup_to_restore">Escolha um backup para restaurar</string>
   <string name="nav_menu_favorites">Favoritos</string>
@@ -291,6 +298,16 @@
   <string name="nav_menu_scheduled_transactions">Transaes agendadas</string>
   <string name="nav_menu_export">Exportar&#8230;</string>
   <string name="nav_menu_settings">Definies</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Diariamente</item>
     <item quantity="other">Todos os %d dias</item>
@@ -379,13 +396,16 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="summary_google_plus">Compartilhe ideias, discuta alteraes ou reporte problemas</string>
   <string name="summary_translate_gnucash">Traduza ou corrija as tradues no Crowdln</string>
   <string name="toast_no_compatible_apps_to_receive_export">No existem apps compatveis para receber as transaes exportadas!</string>
-  <string name="menu_move_transaction">Mover...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Ms atual</item>
     <item>Last 3 meses</item>
@@ -394,4 +414,37 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
     <item>Tudo</item>
     <item>Intervalo personalizado&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rPT/strings.xml b/app/src/main/res/values-pt-rPT/strings.xml
index 8953a97f..a9894d66 100644
--- a/app/src/main/res/values-pt-rPT/strings.xml
+++ b/app/src/main/res/values-pt-rPT/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Nome da Conta</string>
   <string name="btn_cancel">Cancelar</string>
   <string name="btn_save">Gravar</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Introduza a palavra passe</string>
   <string name="toast_wrong_passcode">Password incorrecta, por favor tente novamente</string>
   <string name="toast_passcode_set">Definio de palavra passe</string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Share file&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
   <string name="title_move_transactions">Move %1$d transao</string>
@@ -165,6 +166,7 @@
   <string name="summary_default_export_format">Formato de ficheiro usado por defeito quando  feita uma exportao de transaes</string>
   <string name="menu_export_transactions">Exportar transaes</string>
   <string name="label_recurring_transaction">Agendadas</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Desequilbrio</string>
   <string name="title_progress_exporting_transactions">Exportando transaes</string>
   <string name="label_no_recurring_transactions">No existem transaes agendadas para mostrar.</string>
@@ -196,7 +198,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Escolha uma cr</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Cr da Conta &amp; Tipo</string>
   <string name="label_delete_sub_accounts">Apagar sub-contas</string>
   <string name="title_recent_accounts">Recentes</string>
@@ -270,9 +275,11 @@
   <string name="label_tap_to_create_schedule">Toque para criar um agendamento</string>
   <string name="title_restore_backup">Restore Backup</string>
   <string name="header_backup_and_export_settings">Backup &amp; exportao</string>
-  <string name="title_dropbox_sync_preference">Sincronizao com DropBox</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Cpia de Segurana</string>
-  <string name="summary_dropbox_sync">Permite a sincronizao com DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Escolha um ficheiro XML do GnuCash</string>
   <string name="title_backup_prefs">Preferncias de Backup</string>
   <string name="title_create_backup_pref">Criar Backup</string>
@@ -281,8 +288,8 @@
   <string name="toast_backup_successful">Backup efectuado com sucesso</string>
   <string name="toast_backup_failed">Erro ao efectuar o Backup</string>
   <string name="export_warning_xml">Exporta todas as contas e transaes</string>
-  <string name="title_google_drive_sync_pref">Sincronizao com Google Drive</string>
-  <string name="summary_google_drive_sync">Permite a sincronizao com o Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Instale um gestor de ficheiros para escolher um ficheiro</string>
   <string name="title_select_backup_to_restore">Escolha um backup para restaurar</string>
   <string name="nav_menu_favorites">Favoritos</string>
@@ -291,6 +298,16 @@
   <string name="nav_menu_scheduled_transactions">Transaes agendadas</string>
   <string name="nav_menu_export">Exportar&#8230;</string>
   <string name="nav_menu_settings">Definies</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Diariamente</item>
     <item quantity="other">Todos os %d dias</item>
@@ -379,13 +396,16 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="summary_google_plus">Partilhe ideias, discuta alteraes ou reporte problemas</string>
   <string name="summary_translate_gnucash">Traduza ou reveja em Crowdin</string>
   <string name="toast_no_compatible_apps_to_receive_export">No existem aplicaes compatveis para receber as transaes exportadas!</string>
-  <string name="menu_move_transaction">Mover...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Ms actual</item>
     <item>ltimos 3 meses</item>
@@ -394,4 +414,37 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
     <item>Todos os tempos</item>
     <item>Intervalo personalizado&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-ro-rRO/strings.xml b/app/src/main/res/values-ro-rRO/strings.xml
index c55433f9..b5b2a12d 100644
--- a/app/src/main/res/values-ro-rRO/strings.xml
+++ b/app/src/main/res/values-ro-rRO/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Numele contului</string>
   <string name="btn_cancel">Rezilia</string>
   <string name="btn_save">Salvai</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Introducei parola</string>
   <string name="toast_wrong_passcode">Greit parola, v rugm s ncercai din nou</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -169,6 +170,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -201,7 +203,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
@@ -277,9 +282,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -288,8 +295,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -298,6 +305,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
     <item quantity="few">Every %d days</item>
@@ -389,13 +406,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -404,4 +424,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 181c7bfe..8d63f4a0 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name"> </string>
   <string name="btn_cancel"></string>
   <string name="btn_save"></string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode"> </string>
   <string name="toast_wrong_passcode"> ,  </string>
   <string name="toast_passcode_set"> </string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google </item>
     <item>ownCloud</item>
-    <item> &#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions"> %1$d (,,)</string>
@@ -165,6 +166,7 @@
   <string name="summary_default_export_format"> ,     </string>
   <string name="menu_export_transactions"> &#8230;</string>
   <string name="label_recurring_transaction"> </string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name"></string>
   <string name="title_progress_exporting_transactions"> </string>
   <string name="label_no_recurring_transactions">  .</string>
@@ -197,7 +199,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title"> </string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type"> &amp;  </string>
   <string name="label_delete_sub_accounts">  </string>
   <string name="title_recent_accounts"></string>
@@ -275,9 +280,11 @@
   <string name="label_tap_to_create_schedule">,   </string>
   <string name="title_restore_backup">   &#8230;</string>
   <string name="header_backup_and_export_settings">  &amp; </string>
-  <string name="title_dropbox_sync_preference">  DropBox</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category"> </string>
-  <string name="summary_dropbox_sync">   DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">  GnuCash XML</string>
   <string name="title_backup_prefs">  </string>
   <string name="title_create_backup_pref">  </string>
@@ -286,8 +293,8 @@
   <string name="toast_backup_successful">  </string>
   <string name="toast_backup_failed">    </string>
   <string name="export_warning_xml">     </string>
-  <string name="title_google_drive_sync_pref">  Google Drive</string>
-  <string name="summary_google_drive_sync">   Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">     </string>
   <string name="title_select_backup_to_restore">    </string>
   <string name="nav_menu_favorites"></string>
@@ -296,6 +303,16 @@
   <string name="nav_menu_scheduled_transactions"> </string>
   <string name="nav_menu_export">...</string>
   <string name="nav_menu_settings"></string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one"></item>
     <item quantity="few"> %d </item>
@@ -387,13 +404,16 @@
   <string name="summary_google_plus"> ,      </string>
   <string name="summary_translate_gnucash">    CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">  ,    !</string>
-  <string name="menu_move_transaction">...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction"></string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
@@ -402,4 +422,37 @@
     <item> </item>
     <item> &#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-sr-rSP/strings.xml b/app/src/main/res/values-sr-rSP/strings.xml
index 7660b9e2..3eea4161 100644
--- a/app/src/main/res/values-sr-rSP/strings.xml
+++ b/app/src/main/res/values-sr-rSP/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name"> </string>
   <string name="btn_cancel"></string>
   <string name="btn_save">&amp;</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode"> </string>
   <string name="toast_wrong_passcode"> ,  </string>
   <string name="toast_passcode_set"> </string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google </item>
     <item>ownCloud</item>
-    <item> &#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions"> %1$d ()</string>
@@ -169,6 +170,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -201,7 +203,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
@@ -277,9 +282,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -288,8 +295,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -298,6 +305,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
     <item quantity="few">Every %d days</item>
@@ -389,13 +406,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -404,4 +424,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-sv-rSE/strings.xml b/app/src/main/res/values-sv-rSE/strings.xml
index d068d6b5..024af6aa 100644
--- a/app/src/main/res/values-sv-rSE/strings.xml
+++ b/app/src/main/res/values-sv-rSE/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Account name</string>
   <string name="btn_cancel">Cancel</string>
   <string name="btn_save">Save</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Enter Passcode</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -280,9 +281,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -291,8 +294,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -301,6 +304,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
     <item quantity="other">Every %d days</item>
@@ -388,13 +401,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -403,4 +419,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-tr-rTR/strings.xml b/app/src/main/res/values-tr-rTR/strings.xml
index b52425c4..2cbd3993 100644
--- a/app/src/main/res/values-tr-rTR/strings.xml
+++ b/app/src/main/res/values-tr-rTR/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Hesap ad</string>
   <string name="btn_cancel">ptal</string>
   <string name="btn_save">Kaydet</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">ifre girin</string>
   <string name="toast_wrong_passcode">Yanl ifre, ltfen tekrar deneyin</string>
   <string name="toast_passcode_set">ifre ayarla</string>
@@ -169,6 +170,7 @@
   <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
   <string name="menu_export_transactions">Export transactions&#8230;</string>
   <string name="label_recurring_transaction">Recurrence</string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Imbalance</string>
   <string name="title_progress_exporting_transactions">Exporting transactions</string>
   <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
@@ -200,7 +202,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title">Select a Color</string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type">Account Color &amp; Type</string>
   <string name="label_delete_sub_accounts">Delete sub-accounts</string>
   <string name="title_recent_accounts">Recent</string>
@@ -276,9 +281,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -287,8 +294,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -297,6 +304,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Daily</item>
     <item quantity="other">Every %d days</item>
@@ -384,13 +401,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -399,4 +419,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-uk-rUA/strings.xml b/app/src/main/res/values-uk-rUA/strings.xml
index d584fdce..7123370c 100644
--- a/app/src/main/res/values-uk-rUA/strings.xml
+++ b/app/src/main/res/values-uk-rUA/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">\' </string>
   <string name="btn_cancel"></string>
   <string name="btn_save"></string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode"> </string>
   <string name="toast_wrong_passcode"> ,   </string>
   <string name="toast_passcode_set"> </string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item> &#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions"> %1$d (,,)</string>
@@ -165,6 +166,7 @@
   <string name="summary_default_export_format"> ,      </string>
   <string name="menu_export_transactions"> &#8230;</string>
   <string name="label_recurring_transaction"> </string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name"></string>
   <string name="title_progress_exporting_transactions"> </string>
   <string name="label_no_recurring_transactions">  .</string>
@@ -197,7 +199,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title"> </string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type"> &amp;  </string>
   <string name="label_delete_sub_accounts">  </string>
   <string name="title_recent_accounts"></string>
@@ -273,9 +278,11 @@
   <string name="label_tap_to_create_schedule">,   </string>
   <string name="title_restore_backup">   &#8230;</string>
   <string name="header_backup_and_export_settings">  &amp; </string>
-  <string name="title_dropbox_sync_preference">  DropBox</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category"> </string>
-  <string name="summary_dropbox_sync">   DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">  GnuCash XML</string>
   <string name="title_backup_prefs">  </string>
   <string name="title_create_backup_pref">  </string>
@@ -284,8 +291,8 @@
   <string name="toast_backup_successful">  </string>
   <string name="toast_backup_failed">    </string>
   <string name="export_warning_xml">     </string>
-  <string name="title_google_drive_sync_pref">  Google Drive</string>
-  <string name="summary_google_drive_sync">    Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">     </string>
   <string name="title_select_backup_to_restore">    </string>
   <string name="nav_menu_favorites"></string>
@@ -294,6 +301,16 @@
   <string name="nav_menu_scheduled_transactions"> </string>
   <string name="nav_menu_export">&#8230;</string>
   <string name="nav_menu_settings"></string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one"></item>
     <item quantity="few"> %d </item>
@@ -385,13 +402,16 @@
   <string name="summary_google_plus"> ,      </string>
   <string name="summary_translate_gnucash">    CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
@@ -400,4 +420,37 @@
     <item> </item>
     <item> &#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-vi-rVN/strings.xml b/app/src/main/res/values-vi-rVN/strings.xml
index b1c47dde..eabb1e8c 100644
--- a/app/src/main/res/values-vi-rVN/strings.xml
+++ b/app/src/main/res/values-vi-rVN/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name">Account name</string>
   <string name="btn_cancel">Cancel</string>
   <string name="btn_save">Save</string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode">Enter Passcode</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -279,9 +280,11 @@
   <string name="label_tap_to_create_schedule">Tap to create schedule</string>
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs">Backup Preferences</string>
   <string name="title_create_backup_pref">Create Backup</string>
@@ -290,8 +293,8 @@
   <string name="toast_backup_successful">Backup successful</string>
   <string name="toast_backup_failed">Backup failed</string>
   <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
@@ -300,6 +303,16 @@
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="nav_menu_export">Export&#8230;</string>
   <string name="nav_menu_settings">Settings</string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="other">Every %d days</item>
   </plurals>
@@ -383,13 +396,16 @@
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -398,4 +414,37 @@
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index e0e450cc..08788091 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name"></string>
   <string name="btn_cancel"></string>
   <string name="btn_save"></string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode"></string>
   <string name="toast_wrong_passcode"></string>
   <string name="toast_passcode_set"></string>
@@ -274,9 +275,11 @@
   <string name="label_tap_to_create_schedule"></string>
   <string name="title_restore_backup">&#8230;</string>
   <string name="header_backup_and_export_settings"></string>
-  <string name="title_dropbox_sync_preference">DropBox </string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category"></string>
-  <string name="summary_dropbox_sync">DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">GnuCash XML</string>
   <string name="title_backup_prefs"></string>
   <string name="title_create_backup_pref"></string>
@@ -285,8 +288,8 @@
   <string name="toast_backup_successful"></string>
   <string name="toast_backup_failed"></string>
   <string name="export_warning_xml"></string>
-  <string name="title_google_drive_sync_pref">Google Drive </string>
-  <string name="summary_google_drive_sync">Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager"></string>
   <string name="title_select_backup_to_restore"></string>
   <string name="nav_menu_favorites"></string>
@@ -295,6 +298,16 @@
   <string name="nav_menu_scheduled_transactions"></string>
   <string name="nav_menu_export">...</string>
   <string name="nav_menu_settings"></string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="other"> %d </item>
   </plurals>
@@ -378,13 +391,16 @@
   <string name="summary_google_plus">Google+</string>
   <string name="summary_translate_gnucash">CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export"></string>
-  <string name="menu_move_transaction"></string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction"></string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item></item>
     <item>3</item>
@@ -393,4 +409,37 @@
     <item></item>
     <item>&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml
index 01d8e11e..4c7ff4c2 100644
--- a/app/src/main/res/values-zh-rTW/strings.xml
+++ b/app/src/main/res/values-zh-rTW/strings.xml
@@ -25,6 +25,7 @@
   <string name="label_account_name"></string>
   <string name="btn_cancel"></string>
   <string name="btn_save"></string>
+  <string name="btn_test">Test</string>
   <string name="label_passcode"></string>
   <string name="toast_wrong_passcode"></string>
   <string name="toast_passcode_set"></string>
@@ -65,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>&#8230;</item>
+    <item>Send to&#8230;</item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions"> %1$d </string>
@@ -167,6 +168,7 @@
   <string name="summary_default_export_format"></string>
   <string name="menu_export_transactions">&#8230;</string>
   <string name="label_recurring_transaction"></string>
+  <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name"></string>
   <string name="title_progress_exporting_transactions"></string>
   <string name="label_no_recurring_transactions"></string>
@@ -197,7 +199,10 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
+  <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
   <string name="color_picker_default_title"></string>
+  <!-- Content description for a color square. -->
+  <!-- Content description for a selected color square. -->
   <string name="label_account_color_and_type"></string>
   <string name="label_delete_sub_accounts"></string>
   <string name="title_recent_accounts"></string>
@@ -270,9 +275,11 @@
   <string name="label_tap_to_create_schedule"></string>
   <string name="title_restore_backup">&#8230;</string>
   <string name="header_backup_and_export_settings"></string>
-  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
   <string name="title_backup_preference_category"></string>
-  <string name="summary_dropbox_sync">DropBox</string>
+  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
   <string name="title_backup_prefs"></string>
   <string name="title_create_backup_pref"></string>
@@ -281,8 +288,8 @@
   <string name="toast_backup_successful"></string>
   <string name="toast_backup_failed"></string>
   <string name="export_warning_xml"></string>
-  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
-  <string name="summary_google_drive_sync">Google Drive</string>
+  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager"></string>
   <string name="title_select_backup_to_restore"></string>
   <string name="nav_menu_favorites"></string>
@@ -291,6 +298,16 @@
   <string name="nav_menu_scheduled_transactions"></string>
   <string name="nav_menu_export">...</string>
   <string name="nav_menu_settings"></string>
+  <string name="username">User Name</string>
+  <string name="password">Password</string>
+  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_server">https://</string>
+  <string name="owncloud_server_invalid">OC server not found</string>
+  <string name="owncloud_user_invalid">OC username/password invalid</string>
+  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC server OK</string>
+  <string name="owncloud_user_ok">OC username/password OK</string>
+  <string name="owncloud_dir_ok">Dir name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="other"> %d </item>
   </plurals>
@@ -376,13 +393,16 @@ No user-identifiable information will be collected as part of this process!
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Cash Flow</string>
   <string name="title_budgets">Budgets</string>
+  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
   <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Invalid amount</string>
   <string-array name="report_time_range">
     <item>Current month</item>
     <item>Last 3 months</item>
@@ -391,4 +411,37 @@ No user-identifiable information will be collected as part of this process!
     <item>All time</item>
     <item>Custom range&#8230;</item>
   </string-array>
+  <!-- Passcode lock -->
+  <string name="digit_one">1</string>
+  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_two">2</string>
+  <string name="digit_two_text">ABC</string>
+  <string name="digit_three">3</string>
+  <string name="digit_three_text">DEF</string>
+  <string name="digit_four">4</string>
+  <string name="digit_four_text">GHI</string>
+  <string name="digit_five">5</string>
+  <string name="digit_five_text">JKL</string>
+  <string name="digit_six">6</string>
+  <string name="digit_six_text">MNO</string>
+  <string name="digit_seven">7</string>
+  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_eight">8</string>
+  <string name="digit_eight_text">TUV</string>
+  <string name="digit_nine">9</string>
+  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_zero">0</string>
+  <string name="digit_zero_text">+</string>
+  <string name="title_manage_books">Manage Books</string>
+  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="title_confirm_delete_book">Confirm delete Book</string>
+  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
+  <string name="btn_delete_book">Delete Book</string>
+  <string name="label_last_export_time">Last Exported:</string>
+  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="menu_title_new_book">New Book</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="label_split_count">%1$d splits</string>
+  <string name="label_inside_account_with_name">in %1$s</string>
 </resources>

From 38328e99801b165e10e4d4fa1437d727cd914268 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 6 Jun 2016 15:43:29 +0200
Subject: [PATCH 066/121] Fix breaking build due to missing string resource

---
 app/src/main/res/xml/preference_fragment_headers.xml | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/app/src/main/res/xml/preference_fragment_headers.xml b/app/src/main/res/xml/preference_fragment_headers.xml
index d13e5d6d..2b53f6d0 100644
--- a/app/src/main/res/xml/preference_fragment_headers.xml
+++ b/app/src/main/res/xml/preference_fragment_headers.xml
@@ -20,7 +20,7 @@
     <Preference android:key="@string/key_prefs_header_general"
         android:title="@string/header_general_settings"
         app:fragment="org.gnucash.android.ui.settings.GeneralPreferenceFragment"/>
-    <Preference android:title="@string/header_manage_books"
+    <Preference android:title="@string/title_manage_books"
                 app:fragment="org.gnucash.android.ui.settings.BookManagerFragment" />
     <Preference app:fragment="org.gnucash.android.ui.settings.AccountPreferencesFragment"
         android:title="@string/header_account_settings" />
@@ -34,4 +34,4 @@
         <intent android:action="android.intent.action.VIEW"
             android:data="market://details?id=org.gnucash.android" />
     </Preference>
-</PreferenceScreen>
\ No newline at end of file
+</PreferenceScreen>

From 256f390b390b38157f1182968a4f68f2c16542dc Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 9 Jun 2016 17:11:31 +0200
Subject: [PATCH 067/121] Fix crash when creating new account structure from
 FirstRunWizard

No active book was set
---
 .../gnucash/android/importer/GncXmlImporter.java    |  6 ++++--
 .../android/ui/wizard/FirstRunWizardActivity.java   |  3 ++-
 .../org/gnucash/android/util/PreferencesHelper.java | 21 ++++++++++++++++++---
 3 files changed, 24 insertions(+), 6 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
index 7dff7b7f..5d774aa4 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
@@ -70,10 +70,12 @@ public static String parse(InputStream gncXmlInputStream) throws ParserConfigura
         long endTime = System.nanoTime();
         Log.d(GncXmlImporter.class.getSimpleName(), String.format("%d ns spent on importing the file", endTime-startTime));
 
+        String bookUID = handler.getBookUID();
         PreferencesHelper.setLastExportTime(
-                TransactionsDbAdapter.getInstance().getTimestampOfLastModification()
+                TransactionsDbAdapter.getInstance().getTimestampOfLastModification(),
+                bookUID
         );
 
-        return handler.getBookUID();
+        return bookUID;
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java b/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
index 00a8b0c0..d6ffd8cf 100644
--- a/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
@@ -210,9 +210,10 @@ private void createAccountsAndFinish() {
         AccountsActivity.removeFirstRunFlag();
 
         if (mAccountOptions.equals(getString(R.string.wizard_option_create_default_accounts))){
+            //save the UID of the active book, and then delete it after successful import
             String bookUID = BooksDbAdapter.getInstance().getActiveBookUID();
-            BooksDbAdapter.getInstance().deleteRecord(bookUID); //a default book is usually created
             AccountsActivity.createDefaultAccounts(mCurrencyCode, FirstRunWizardActivity.this);
+            BooksDbAdapter.getInstance().deleteRecord(bookUID); //a default book is usually created
             finish();
         } else if (mAccountOptions.equals(getString(R.string.wizard_option_import_my_accounts))){
             AccountsActivity.startXmlFileChooser(this);
diff --git a/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
index ab372d5a..2b67ac6c 100644
--- a/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
+++ b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
@@ -15,9 +15,11 @@
  */
 package org.gnucash.android.util;
 
+import android.content.Context;
 import android.util.Log;
 
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.ui.settings.PreferenceActivity;
 
 import java.sql.Timestamp;
@@ -43,15 +45,28 @@ private PreferencesHelper() {}
     public static final String PREFERENCE_LAST_EXPORT_TIME_KEY = "last_export_time";
 
     /**
-     * Set the last export time in UTC time zone.
-     * A new export operations will fetch transactions based on this value.
+     * Set the last export time in UTC time zone of the currently active Book in the application.
+     * This method calls through to {@link #setLastExportTime(Timestamp, String)}
      *
      * @param lastExportTime the last export time to set.
+     * @see #setLastExportTime(Timestamp, String)
      */
     public static void setLastExportTime(Timestamp lastExportTime) {
         final String utcString = TimestampHelper.getUtcStringFromTimestamp(lastExportTime);
+        Log.v(LOG_TAG, "Saving last export time for the currently active book");
+        setLastExportTime(lastExportTime, BooksDbAdapter.getInstance().getActiveBookUID());
+    }
+
+    /**
+     * Set the last export time in UTC time zone for a specific book.
+     * This value vill be used during export to determine new transactions since the last export
+     *
+     * @param lastExportTime the last export time to set.
+     */
+    public static void setLastExportTime(Timestamp lastExportTime, String bookUID) {
+        final String utcString = TimestampHelper.getUtcStringFromTimestamp(lastExportTime);
         Log.d(LOG_TAG, "Storing '" + utcString + "' as lastExportTime in Android Preferences.");
-        PreferenceActivity.getActiveBookSharedPreferences(GnuCashApplication.getAppContext())
+        GnuCashApplication.getAppContext().getSharedPreferences(bookUID, Context.MODE_PRIVATE)
                 .edit()
                 .putString(PREFERENCE_LAST_EXPORT_TIME_KEY, utcString)
                 .apply();

From a42e5c75aa6c4cf84e861ccd65611d1ef97f9109 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 9 Jun 2016 17:49:10 +0200
Subject: [PATCH 068/121] Fix account spinner dropdown text is white on white
 background

Increase size of Account title in Toolbar
Upgrade gradle Android tools
---
 .../util/QualifiedAccountNameCursorAdapter.java    |  5 +++--
 .../res/layout/account_spinner_dropdown_item.xml   | 24 +++++++++++++++++++++
 app/src/main/res/layout/account_spinner_item.xml   | 25 ++++++++++++++++++++++
 build.gradle                                       |  2 +-
 4 files changed, 53 insertions(+), 3 deletions(-)
 create mode 100644 app/src/main/res/layout/account_spinner_dropdown_item.xml
 create mode 100644 app/src/main/res/layout/account_spinner_item.xml

diff --git a/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java b/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java
index 8f4cc5fe..a4f60e96 100644
--- a/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java
+++ b/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java
@@ -24,6 +24,7 @@
 import android.view.View;
 import android.widget.TextView;
 
+import org.gnucash.android.R;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 
@@ -36,10 +37,10 @@
 public class QualifiedAccountNameCursorAdapter extends SimpleCursorAdapter {
 
     public QualifiedAccountNameCursorAdapter(Context context, Cursor cursor) {
-        super(context, android.R.layout.simple_spinner_item, cursor,
+        super(context, R.layout.account_spinner_item, cursor,
                 new String[]{DatabaseSchema.AccountEntry.COLUMN_FULL_NAME},
                 new int[]{android.R.id.text1}, 0);
-        setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+        setDropDownViewResource(R.layout.account_spinner_dropdown_item);
     }
 
     @Override
diff --git a/app/src/main/res/layout/account_spinner_dropdown_item.xml b/app/src/main/res/layout/account_spinner_dropdown_item.xml
new file mode 100644
index 00000000..f2705199
--- /dev/null
+++ b/app/src/main/res/layout/account_spinner_dropdown_item.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<CheckedTextView xmlns:android="http://schemas.android.com/apk/res/android"
+                 android:id="@android:id/text1"
+                 style="?android:attr/spinnerDropDownItemStyle"
+                 android:singleLine="true"
+                 android:textColor="@android:color/black"
+                 android:layout_width="match_parent"
+                 android:layout_height="?attr/dropdownListPreferredItemHeight"
+                 android:ellipsize="marquee"/>
\ No newline at end of file
diff --git a/app/src/main/res/layout/account_spinner_item.xml b/app/src/main/res/layout/account_spinner_item.xml
new file mode 100644
index 00000000..f4b7442b
--- /dev/null
+++ b/app/src/main/res/layout/account_spinner_item.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<TextView xmlns:android="http://schemas.android.com/apk/res/android"
+          android:id="@android:id/text1"
+          style="?android:attr/spinnerItemStyle"
+          android:singleLine="true"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:textSize="20sp"
+          android:ellipsize="marquee"
+          android:textAlignment="inherit"/>
\ No newline at end of file
diff --git a/build.gradle b/build.gradle
index 8992686e..8969b3cd 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
 		jcenter()
 	}
 	dependencies {
-		classpath 'com.android.tools.build:gradle:2.1.0'
+		classpath 'com.android.tools.build:gradle:2.1.2'
 		classpath 'io.fabric.tools:gradle:1.21.2'
 	}
 }

From 6cb113b31b8a430f894c23504006edfe272f3415 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 10 Jun 2016 11:26:21 +0200
Subject: [PATCH 069/121] Ignore ownCloud tests on device with no internet
 connection

Fix PieChartReportTest broken due to wrong book loaded during test
---
 .../gnucash/android/test/ui/OwnCloudExportTest.java   | 19 +++++++++++++++++--
 .../gnucash/android/test/ui/PieChartReportTest.java   | 12 ++++++------
 .../android/test/ui/TransactionsActivityTest.java     |  6 +++---
 .../org/gnucash/android/app/GnuCashApplication.java   | 10 +++++-----
 4 files changed, 31 insertions(+), 16 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
index 6bfffe51..c40414e8 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
@@ -20,6 +20,8 @@
 import android.content.SharedPreferences;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
+import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
 import android.support.test.espresso.contrib.DrawerActions;
 import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
@@ -39,6 +41,7 @@
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.account.AccountsActivity;
+import org.junit.Assume;
 import org.junit.Before;
 import org.junit.FixMethodOrder;
 import org.junit.Rule;
@@ -143,15 +146,27 @@ public void setUp() throws Exception {
     }
 
     /**
+     * Test if there is an active internet connection on the device/emulator
+     * @return {@code true} is an internet connection is available, {@code false} otherwise
+     */
+    public static boolean hasActiveInternetConnection(){
+        ConnectivityManager connectivityManager
+                = (ConnectivityManager) GnuCashApplication.getAppContext().getSystemService(Context.CONNECTIVITY_SERVICE);
+        NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();
+        return activeNetworkInfo != null && activeNetworkInfo.isConnected();
+    }
+
+    /**
      * It might fail if it takes too long to connect to the server or if there is no network
      */
     @Test
     public void OwnCloudCredentials() {
+        Assume.assumeTrue(hasActiveInternetConnection());
         onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
         onView(withId(R.id.nav_view)).perform(swipeUp());
         onView(withText(R.string.title_settings)).perform(click());
         onView(withText(R.string.header_backup_and_export_settings)).perform(click());
-        onView(withText("ownCloud Sync")).perform(click());
+        onView(withText(R.string.title_owncloud_sync_preference)).perform(click());
         onView(withId(R.id.owncloud_hostname)).check(matches(isDisplayed()));
 
         onView(withId(R.id.owncloud_hostname)).perform(clearText()).perform(typeText(OC_SERVER), closeSoftKeyboard());
@@ -172,7 +187,7 @@ public void OwnCloudCredentials() {
 
     @Test
     public void OwnCloudExport() {
-
+        Assume.assumeTrue(hasActiveInternetConnection());
         mPrefs.edit().putBoolean(mAccountsActivity.getString(R.string.key_owncloud_sync), true).commit();
 
         onView(withId(R.id.drawer_layout)).perform(DrawerActions.open());
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index 662a4cc2..1f171074 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -47,6 +47,7 @@
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.model.TransactionType;
 import org.gnucash.android.test.ui.util.DisableAnimationsRule;
+import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.report.BaseReportFragment;
 import org.gnucash.android.ui.report.ReportsActivity;
 import org.gnucash.android.ui.report.piechart.PieChartFragment;
@@ -120,14 +121,13 @@ public PieChartReportTest() {
 
     @BeforeClass
     public static void prepareTestCase() throws Exception {
-        mAccountsDbAdapter.deleteAllRecords();
         Context context = GnuCashApplication.getAppContext();
         oldActiveBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
         testBookUID = GncXmlImporter.parse(context.getResources().openRawResource(R.raw.default_accounts));
-        BooksDbAdapter.getInstance().setActive(testBookUID);
 
-        mTransactionsDbAdapter = TransactionsDbAdapter.getInstance(); //new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
-        mAccountsDbAdapter = AccountsDbAdapter.getInstance(); //new AccountsDbAdapter(db, mTransactionsDbAdapter);
+        GnuCashApplication.loadBook(testBookUID);
+        mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
         CURRENCY = CommoditiesDbAdapter.getInstance().getCommodity("USD");
 
@@ -139,7 +139,7 @@ public static void prepareTestCase() throws Exception {
 
 	@Before
 	public void setUp() throws Exception {
-        // creates default accounts
+        mTransactionsDbAdapter.deleteAllRecords();
         mReportsActivity = mActivityRule.getActivity();
         assertThat(mAccountsDbAdapter.getRecordsCount()).isGreaterThan(20); //lots of accounts in the default
         onView(withId(R.id.btn_pie_chart)).perform(click());
@@ -213,7 +213,7 @@ public void testSpinner() throws Exception {
 
         onView(withId(R.id.report_account_type_spinner)).perform(click());
         onView(withText(AccountType.INCOME.name())).perform(click());
-
+        onView(withId(R.id.pie_chart)).perform(clickXY(Position.BEGIN, Position.MIDDLE));
         String selectedText = String.format(PieChartFragment.SELECTED_VALUE_PATTERN, GIFTS_RECEIVED_INCOME_ACCOUNT_NAME, TRANSACTION3_AMOUNT, 100f);
         onView(withId(R.id.selected_chart_slice)).check(matches(withText(selectedText)));
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 2eb6b2af..6a52692b 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -139,9 +139,9 @@ public static void prepareTestCase(){
 		mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 		COMMODITY = CommoditiesDbAdapter.getInstance().getCommodity(CURRENCY_CODE);
 
-		PreferenceActivity.getActiveBookSharedPreferences(context)
-				.edit().putBoolean(context.getString(R.string.key_use_compact_list), false)
-				.apply();
+//		PreferenceActivity.getActiveBookSharedPreferences(context)
+//				.edit().putBoolean(context.getString(R.string.key_use_compact_list), false)
+//				.apply();
 	}
 
 	@Before
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 3ebda503..d328c5bb 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -97,7 +97,7 @@
     private static RecurrenceDbAdapter mRecurrenceDbAdapter;
 
     private static BooksDbAdapter mBooksDbAdapter;
-    private DatabaseHelper mDbHelper;
+    private static DatabaseHelper mDbHelper;
 
     /**
      * Returns darker version of specified <code>color</code>.
@@ -144,19 +144,19 @@ public void onCreate(){
      * Initialize database adapter singletons for use in the application
      * This method should be called every time a new book is opened
      */
-    private void initDatabaseAdapters() {
+    private static void initDatabaseAdapters() {
         if (mDbHelper != null){ //close if open
             mDbHelper.getReadableDatabase().close();
         }
 
-        mDbHelper = new DatabaseHelper(getApplicationContext(),
+        mDbHelper = new DatabaseHelper(getAppContext(),
                 mBooksDbAdapter.getActiveBookUID());
         SQLiteDatabase mainDb;
         try {
             mainDb = mDbHelper.getWritableDatabase();
         } catch (SQLException e) {
             Crashlytics.logException(e);
-            Log.e(getClass().getName(), "Error getting database: " + e.getMessage());
+            Log.e("GnuCashApplication", "Error getting database: " + e.getMessage());
             mainDb = mDbHelper.getReadableDatabase();
         }
 
@@ -215,7 +215,7 @@ public static BooksDbAdapter getBooksDbAdapter(){
      * Loads the book with GUID {@code bookUID}
      * @param bookUID GUID of the book to be loaded
      */
-    public void loadBook(String bookUID){
+    public static void loadBook(String bookUID){
         mBooksDbAdapter.setActive(bookUID);
         initDatabaseAdapters();
         AccountsActivity.start(getAppContext());

From c5c11b833863df2475b6618dd1a8a31c9198464d Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 10 Jun 2016 11:35:44 +0200
Subject: [PATCH 070/121] Upgrade Robolectric to v3.1 and Gradle wrapper to
 v2.13

---
 app/build.gradle                         | 2 +-
 gradle/wrapper/gradle-wrapper.properties | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 7bbf5830..3fb2930e 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -228,7 +228,7 @@ dependencies {
         transitive = true;
     }
 
-    testCompile('org.robolectric:robolectric:3.0',
+    testCompile('org.robolectric:robolectric:3.1',
             'junit:junit:4.12',
             'joda-time:joda-time:2.7',
             'org.assertj:assertj-core:1.7.1'
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 703e4c4f..1e6262f3 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.13-all.zip

From c9ddda5607c96c3124aff87c0dcba87947052d4f Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 10 Jun 2016 11:38:24 +0200
Subject: [PATCH 071/121] Update translations

---
 app/src/main/res/values-hu-rHU/strings.xml |  20 +++---
 app/src/main/res/values-it-rIT/strings.xml |  70 ++++++++++----------
 app/src/main/res/values-ja-rJP/strings.xml |  74 ++++++++++-----------
 app/src/main/res/values-pt-rPT/strings.xml |  76 +++++++++++-----------
 app/src/main/res/values-ru/strings.xml     | 100 ++++++++++++++---------------
 app/src/main/res/values-zh-rCN/strings.xml |  72 ++++++++++-----------
 6 files changed, 206 insertions(+), 206 deletions(-)

diff --git a/app/src/main/res/values-hu-rHU/strings.xml b/app/src/main/res/values-hu-rHU/strings.xml
index d34ec273..a7b76f1b 100644
--- a/app/src/main/res/values-hu-rHU/strings.xml
+++ b/app/src/main/res/values-hu-rHU/strings.xml
@@ -25,27 +25,27 @@
   <string name="label_account_name">Fik neve</string>
   <string name="btn_cancel">Mgsem</string>
   <string name="btn_save">Ments</string>
-  <string name="btn_test">Test</string>
+  <string name="btn_test">Teszt</string>
   <string name="label_passcode">Jelsz megadsa</string>
   <string name="toast_wrong_passcode">Rossz jelsz, krjk prblja meg jra</string>
   <string name="toast_passcode_set">Jelsz belltsa</string>
-  <string name="label_confirm_passcode">Please confirm your passcode</string>
-  <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
+  <string name="label_confirm_passcode">Krjk, erstse meg a jelszavt</string>
+  <string name="toast_invalid_passcode_confirmation">rvnytelen jelsz-megersts. Krjk, prblja jra</string>
   <string name="label_transaction_name">Lers</string>
   <string name="label_transaction_amount">sszeg</string>
   <string name="title_add_transaction">j tranzakci</string>
   <string name="label_no_transactions">Nincs megjelenthet tranzakci</string>
-  <string name="label_timeanddate">DATE &amp; TIME</string>
+  <string name="label_timeanddate">DTUM &amp; ID</string>
   <string name="label_account">Fik</string>
   <string name="label_debit">DEBIT</string>
   <string name="label_credit">CREDIT</string>
-  <string name="title_accounts">Accounts</string>
-  <string name="title_transactions">Transactions</string>
+  <string name="title_accounts">Fikok</string>
+  <string name="title_transactions">Tranzakick</string>
   <string name="menu_delete">DELETE</string>
-  <string name="alert_dialog_ok_delete">Delete</string>
-  <string name="alert_dialog_cancel">Cancel</string>
-  <string name="toast_account_deleted">Account deleted</string>
-  <string name="title_confirm_delete">Confirm delete</string>
+  <string name="alert_dialog_ok_delete">Trls</string>
+  <string name="alert_dialog_cancel">Mgsem</string>
+  <string name="toast_account_deleted">Fik trlve</string>
+  <string name="title_confirm_delete">Trlse megerstse</string>
   <string name="delete_account_confirmation_message">All transactions in this account will also be deleted</string>
   <string name="title_edit_transaction">Edit Transaction</string>
   <string name="label_transaction_description">Note</string>
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index 53a0ecaf..a7c3a3e3 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -25,7 +25,7 @@
   <string name="label_account_name">Nome conto</string>
   <string name="btn_cancel">Annulla</string>
   <string name="btn_save">Salva</string>
-  <string name="btn_test">Test</string>
+  <string name="btn_test">Prova</string>
   <string name="label_passcode">Inserisci codice di accesso</string>
   <string name="toast_wrong_passcode">Codice di accesso errato, riprova</string>
   <string name="toast_passcode_set">Codice di accesso impostato</string>
@@ -66,7 +66,7 @@
     <item>Dropbox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>Invia a&#8230;</item>
   </string-array>
   <string name="btn_move">Sposta</string>
   <string name="title_move_transactions">Sposta %1$d transazioni</string>
@@ -278,11 +278,11 @@
   <string name="label_tap_to_create_schedule">Tocca per creare una pianificazione</string>
   <string name="title_restore_backup">Ripristina backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup e esportazione</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference">Abilita DropBox</string>
+  <string name="title_owncloud_sync_preference">Abilita ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_dropbox_sync">Attiva l\'esportazione su DropBox</string>
+  <string name="summary_owncloud_sync">Attiva l\'esportazione su ownCloud</string>
   <string name="title_select_gnucash_xml_file">Seleziona un file XML di GnuCash</string>
   <string name="title_backup_prefs">Preferenze di backup</string>
   <string name="title_create_backup_pref">Crea backup</string>
@@ -291,8 +291,8 @@
   <string name="toast_backup_successful">Backup riuscito</string>
   <string name="toast_backup_failed">Backup non riuscito</string>
   <string name="export_warning_xml">Esporta tutti i conti e tutte le transazioni</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Abilita Google Drive</string>
+  <string name="summary_google_drive_sync">Attiva l\'esportazione su Google Drive</string>
   <string name="toast_install_file_manager">Installa un file manager per selezionare i file</string>
   <string name="title_select_backup_to_restore">Seleziona il backup da ripristinare</string>
   <string name="nav_menu_favorites">Preferiti</string>
@@ -301,16 +301,16 @@
   <string name="nav_menu_scheduled_transactions">Transazioni pianificate</string>
   <string name="nav_menu_export">Esporta&#8230;</string>
   <string name="nav_menu_settings">Impostazioni</string>
-  <string name="username">User Name</string>
+  <string name="username">Nome utente</string>
   <string name="password">Password</string>
   <string name="owncloud_pref">owncloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">Server OC non trovato</string>
+  <string name="owncloud_user_invalid">Nome utente/password OC non validi</string>
+  <string name="owncloud_dir_invalid">Caratteri non validi: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">Server OC OK</string>
+  <string name="owncloud_user_ok">Nome utente/password OC OK</string>
+  <string name="owncloud_dir_ok">Nome directory OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Ogni giorno</item>
     <item quantity="other">Ogni %d giorni</item>
@@ -398,16 +398,16 @@
   <string name="summary_google_plus">Condivi idee, discuti dei cambiamenti o segnala dei problemi</string>
   <string name="summary_translate_gnucash">Traduci o revisiona su Crowdin</string>
   <string name="toast_no_compatible_apps_to_receive_export">Nessuna app compatibile con la ricezione delle transazioni esportate!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
+  <string name="menu_move_transaction">Sposta&#8230;</string>
   <string name="menu_duplicate_transaction">Duplica</string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
-  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="nav_menu_budgets">Bilanci</string>
+  <string name="title_cash_flow_report">Flusso di liquidi</string>
+  <string name="title_budgets">Bilanci</string>
+  <string name="title_use_compact_list">Attiva visualizzazione compatta</string>
+  <string name="summary_use_compact_list">Attiva per visualizzare sempre la lista delle transazioni in forma compatta</string>
+  <string name="error_invalid_exchange_rate">Tasso di cambio non valido</string>
+  <string name="sample_exchange_rate">es. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Importo non valido</string>
   <string-array name="report_time_range">
     <item>Mese corrente</item>
     <item>Ultimi 3 mesi</item>
@@ -437,16 +437,16 @@
   <string name="digit_nine_text">WXYZ</string>
   <string name="digit_zero">0</string>
   <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
-  <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
-  <string name="menu_title_new_book">New Book</string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
-  <string name="label_split_count">%1$d splits</string>
+  <string name="title_manage_books">Gestione libri</string>
+  <string name="menu_manage_books">Gestione libri&#8230;</string>
+  <string name="select_chart_to_view_details">Seleziona qualsiasi parte del grafico per vederne i dettagli</string>
+  <string name="title_confirm_delete_book">Conferma eliminazione libro</string>
+  <string name="msg_all_book_data_will_be_deleted">Tutti i conti e le transazioni in questo libro verranno eliminate!</string>
+  <string name="btn_delete_book">Elimina libro</string>
+  <string name="label_last_export_time">Ultima esportazione:</string>
+  <string name="menu_title_enable_sync">Attiva sincronizzazione</string>
+  <string name="menu_title_new_book">Nuovo libro</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">La transazione selezionata non ha suddivisioni e non pu essere aperta</string>
+  <string name="label_split_count">%1$d suddivisioni</string>
   <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index 1e279f01..fe2f9e76 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -25,7 +25,7 @@
   <string name="label_account_name"></string>
   <string name="btn_cancel"></string>
   <string name="btn_save"></string>
-  <string name="btn_test">Test</string>
+  <string name="btn_test"></string>
   <string name="label_passcode"></string>
   <string name="toast_wrong_passcode"></string>
   <string name="toast_passcode_set"></string>
@@ -66,7 +66,7 @@
     <item>Dropbox</item>
     <item>Google </item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>&#8230;</item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions">%1$d</string>
@@ -273,11 +273,11 @@
   <string name="label_tap_to_create_schedule"></string>
   <string name="title_restore_backup">&#8230;</string>
   <string name="header_backup_and_export_settings"></string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference">DropBox </string>
+  <string name="title_owncloud_sync_preference">ownCloud </string>
   <string name="title_backup_preference_category"></string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_dropbox_sync">DropBox </string>
+  <string name="summary_owncloud_sync">ownCloud </string>
   <string name="title_select_gnucash_xml_file">GnuCash XML </string>
   <string name="title_backup_prefs"></string>
   <string name="title_create_backup_pref"></string>
@@ -286,8 +286,8 @@
   <string name="toast_backup_successful"></string>
   <string name="toast_backup_failed"></string>
   <string name="export_warning_xml"></string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Google </string>
+  <string name="summary_google_drive_sync">Google </string>
   <string name="toast_install_file_manager"> </string>
   <string name="title_select_backup_to_restore"></string>
   <string name="nav_menu_favorites"></string>
@@ -296,16 +296,16 @@
   <string name="nav_menu_scheduled_transactions"></string>
   <string name="nav_menu_export">&#8230;</string>
   <string name="nav_menu_settings"></string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
+  <string name="username"></string>
+  <string name="password"></string>
   <string name="owncloud_pref">owncloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">OC </string>
+  <string name="owncloud_user_invalid">OC /</string>
+  <string name="owncloud_dir_invalid">: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC  OK</string>
+  <string name="owncloud_user_ok">OC / OK</string>
+  <string name="owncloud_dir_ok"> OK</string>
   <plurals name="label_every_x_days">
     <item quantity="other">%d </item>
   </plurals>
@@ -389,16 +389,16 @@
   <string name="summary_google_plus"></string>
   <string name="summary_translate_gnucash">CrowdIn </string>
   <string name="toast_no_compatible_apps_to_receive_export">!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
+  <string name="menu_move_transaction">&#8230;</string>
   <string name="menu_duplicate_transaction"></string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
-  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="nav_menu_budgets"></string>
+  <string name="title_cash_flow_report"></string>
+  <string name="title_budgets"></string>
+  <string name="title_use_compact_list"></string>
+  <string name="summary_use_compact_list"></string>
+  <string name="error_invalid_exchange_rate"></string>
+  <string name="sample_exchange_rate"> 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount"></string>
   <string-array name="report_time_range">
     <item></item>
     <item> 3 </item>
@@ -428,16 +428,16 @@
   <string name="digit_nine_text">WXYZ</string>
   <string name="digit_zero">0</string>
   <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
-  <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
-  <string name="menu_title_new_book">New Book</string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
-  <string name="label_split_count">%1$d splits</string>
-  <string name="label_inside_account_with_name">in %1$s</string>
+  <string name="title_manage_books"></string>
+  <string name="menu_manage_books">&#8230;</string>
+  <string name="select_chart_to_view_details"></string>
+  <string name="title_confirm_delete_book"></string>
+  <string name="msg_all_book_data_will_be_deleted">!</string>
+  <string name="btn_delete_book"></string>
+  <string name="label_last_export_time">:</string>
+  <string name="menu_title_enable_sync"></string>
+  <string name="menu_title_new_book"></string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open"></string>
+  <string name="label_split_count">%1$d </string>
+  <string name="label_inside_account_with_name">%1$s </string>
 </resources>
diff --git a/app/src/main/res/values-pt-rPT/strings.xml b/app/src/main/res/values-pt-rPT/strings.xml
index a9894d66..ea6b41d6 100644
--- a/app/src/main/res/values-pt-rPT/strings.xml
+++ b/app/src/main/res/values-pt-rPT/strings.xml
@@ -25,7 +25,7 @@
   <string name="label_account_name">Nome da Conta</string>
   <string name="btn_cancel">Cancelar</string>
   <string name="btn_save">Gravar</string>
-  <string name="btn_test">Test</string>
+  <string name="btn_test">Testar</string>
   <string name="label_passcode">Introduza a palavra passe</string>
   <string name="toast_wrong_passcode">Password incorrecta, por favor tente novamente</string>
   <string name="toast_passcode_set">Definio de palavra passe</string>
@@ -66,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>Enviar para&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
   <string name="title_move_transactions">Move %1$d transao</string>
@@ -275,11 +275,11 @@
   <string name="label_tap_to_create_schedule">Toque para criar um agendamento</string>
   <string name="title_restore_backup">Restore Backup</string>
   <string name="header_backup_and_export_settings">Backup &amp; exportao</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference">Permitir o DropBox</string>
+  <string name="title_owncloud_sync_preference">Permitir o ownCloud </string>
   <string name="title_backup_preference_category">Cpia de Segurana</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_dropbox_sync">Permitir a exportao para o DropBox</string>
+  <string name="summary_owncloud_sync">Permitir a exportao para o ownCloud</string>
   <string name="title_select_gnucash_xml_file">Escolha um ficheiro XML do GnuCash</string>
   <string name="title_backup_prefs">Preferncias de Backup</string>
   <string name="title_create_backup_pref">Criar Backup</string>
@@ -288,8 +288,8 @@
   <string name="toast_backup_successful">Backup efectuado com sucesso</string>
   <string name="toast_backup_failed">Erro ao efectuar o Backup</string>
   <string name="export_warning_xml">Exporta todas as contas e transaes</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Permitir o Google Drive</string>
+  <string name="summary_google_drive_sync">Permitir a exportao para o Google Drive</string>
   <string name="toast_install_file_manager">Instale um gestor de ficheiros para escolher um ficheiro</string>
   <string name="title_select_backup_to_restore">Escolha um backup para restaurar</string>
   <string name="nav_menu_favorites">Favoritos</string>
@@ -298,16 +298,16 @@
   <string name="nav_menu_scheduled_transactions">Transaes agendadas</string>
   <string name="nav_menu_export">Exportar&#8230;</string>
   <string name="nav_menu_settings">Definies</string>
-  <string name="username">User Name</string>
+  <string name="username">Nome de utilizador</string>
   <string name="password">Password</string>
-  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_pref">ownCloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">Servidor OC no encontrado</string>
+  <string name="owncloud_user_invalid">Utilizador/password OC invlido</string>
+  <string name="owncloud_dir_invalid">Caracteres invlidos: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">Servidor OC OK</string>
+  <string name="owncloud_user_ok">Nome de utilizador/password OK</string>
+  <string name="owncloud_dir_ok">Nome de directrio OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Diariamente</item>
     <item quantity="other">Todos os %d dias</item>
@@ -396,16 +396,16 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="summary_google_plus">Partilhe ideias, discuta alteraes ou reporte problemas</string>
   <string name="summary_translate_gnucash">Traduza ou reveja em Crowdin</string>
   <string name="toast_no_compatible_apps_to_receive_export">No existem aplicaes compatveis para receber as transaes exportadas!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
+  <string name="menu_move_transaction">Mover&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
-  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="nav_menu_budgets">Oramentos</string>
+  <string name="title_cash_flow_report">Fluxo de caixa</string>
+  <string name="title_budgets">Oramentos</string>
+  <string name="title_use_compact_list">Permitir a vista compacta</string>
+  <string name="summary_use_compact_list">Permitir sempre a utilizao da vista compacta para a lista de transaes</string>
+  <string name="error_invalid_exchange_rate">Taxa de cmbio invlida</string>
+  <string name="sample_exchange_rate">por exemplo, 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Quantia invlida</string>
   <string-array name="report_time_range">
     <item>Ms actual</item>
     <item>ltimos 3 meses</item>
@@ -416,7 +416,7 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_one_text">@string/vazia</string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
@@ -435,16 +435,16 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="digit_nine_text">WXYZ</string>
   <string name="digit_zero">0</string>
   <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
-  <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
-  <string name="menu_title_new_book">New Book</string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
-  <string name="label_split_count">%1$d splits</string>
-  <string name="label_inside_account_with_name">in %1$s</string>
+  <string name="title_manage_books">Gerir Livros</string>
+  <string name="menu_manage_books">Gerir Livros&#8230;</string>
+  <string name="select_chart_to_view_details">Seleccione qualquer parte do grfico para ver os detalhes</string>
+  <string name="title_confirm_delete_book">Confirme o apagar do Livro</string>
+  <string name="msg_all_book_data_will_be_deleted">Todas as transaes neste livro sero apagadas!</string>
+  <string name="btn_delete_book">Apagar livro</string>
+  <string name="label_last_export_time">ltima exportao:</string>
+  <string name="menu_title_enable_sync">Permitir a sincronizao</string>
+  <string name="menu_title_new_book">Novo Livro</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">A transao selecionadas no tem divises e no pode ser aberta</string>
+  <string name="label_split_count">Servidor OC no encontrado</string>
+  <string name="label_inside_account_with_name">em %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 8d63f4a0..8481ec4c 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -25,7 +25,7 @@
   <string name="label_account_name"> </string>
   <string name="btn_cancel"></string>
   <string name="btn_save"></string>
-  <string name="btn_test">Test</string>
+  <string name="btn_test"></string>
   <string name="label_passcode"> </string>
   <string name="toast_wrong_passcode"> ,  </string>
   <string name="toast_passcode_set"> </string>
@@ -66,7 +66,7 @@
     <item>DropBox</item>
     <item>Google </item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>&#8230;</item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions"> %1$d (,,)</string>
@@ -280,11 +280,11 @@
   <string name="label_tap_to_create_schedule">,   </string>
   <string name="title_restore_backup">   &#8230;</string>
   <string name="header_backup_and_export_settings">  &amp; </string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference"> DropBox</string>
+  <string name="title_owncloud_sync_preference"> ownCloud </string>
   <string name="title_backup_preference_category"> </string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_dropbox_sync">   DropBox</string>
+  <string name="summary_owncloud_sync">   ownCloud</string>
   <string name="title_select_gnucash_xml_file">  GnuCash XML</string>
   <string name="title_backup_prefs">  </string>
   <string name="title_create_backup_pref">  </string>
@@ -293,8 +293,8 @@
   <string name="toast_backup_successful">  </string>
   <string name="toast_backup_failed">    </string>
   <string name="export_warning_xml">     </string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref"> Google Drive</string>
+  <string name="summary_google_drive_sync">   Google Drive</string>
   <string name="toast_install_file_manager">     </string>
   <string name="title_select_backup_to_restore">    </string>
   <string name="nav_menu_favorites"></string>
@@ -303,35 +303,35 @@
   <string name="nav_menu_scheduled_transactions"> </string>
   <string name="nav_menu_export">...</string>
   <string name="nav_menu_settings"></string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
+  <string name="username"> </string>
+  <string name="password"></string>
   <string name="owncloud_pref">owncloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">OC   </string>
+  <string name="owncloud_user_invalid">OC  /</string>
+  <string name="owncloud_dir_invalid"> : \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC  </string>
+  <string name="owncloud_user_ok">OC / </string>
+  <string name="owncloud_dir_ok">  </string>
   <plurals name="label_every_x_days">
     <item quantity="one"></item>
     <item quantity="few"> %d </item>
-    <item quantity="other">Every %d days</item>
+    <item quantity="other"> %d </item>
   </plurals>
   <plurals name="label_every_x_weeks">
-    <item quantity="one"></item>
+    <item quantity="one"></item>
     <item quantity="few"> %d </item>
-    <item quantity="other">Every %d weeks</item>
+    <item quantity="other"> %d </item>
   </plurals>
   <plurals name="label_every_x_months">
     <item quantity="one"></item>
     <item quantity="few"> %d </item>
-    <item quantity="other">Every %d months</item>
+    <item quantity="other"> %d </item>
   </plurals>
   <plurals name="label_every_x_years">
     <item quantity="one"></item>
     <item quantity="few"> %d </item>
-    <item quantity="other">Every %d years</item>
+    <item quantity="other"> %d </item>
   </plurals>
   <string name="title_enable_crashlytics">  </string>
   <string name="msg_enable_crashlytics">    ().     .</string>
@@ -404,16 +404,16 @@
   <string name="summary_google_plus"> ,      </string>
   <string name="summary_translate_gnucash">    CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">  ,    !</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
+  <string name="menu_move_transaction">&#8230;</string>
   <string name="menu_duplicate_transaction"></string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
-  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="nav_menu_budgets"></string>
+  <string name="title_cash_flow_report"> </string>
+  <string name="title_budgets"></string>
+  <string name="title_use_compact_list">  </string>
+  <string name="summary_use_compact_list">       </string>
+  <string name="error_invalid_exchange_rate">  </string>
+  <string name="sample_exchange_rate">, 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount"> </string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
@@ -426,33 +426,33 @@
   <string name="digit_one">1</string>
   <string name="digit_one_text">@string/empty</string>
   <string name="digit_two">2</string>
-  <string name="digit_two_text">ABC</string>
+  <string name="digit_two_text"></string>
   <string name="digit_three">3</string>
-  <string name="digit_three_text">DEF</string>
+  <string name="digit_three_text"></string>
   <string name="digit_four">4</string>
-  <string name="digit_four_text">GHI</string>
+  <string name="digit_four_text"></string>
   <string name="digit_five">5</string>
-  <string name="digit_five_text">JKL</string>
+  <string name="digit_five_text"></string>
   <string name="digit_six">6</string>
-  <string name="digit_six_text">MNO</string>
+  <string name="digit_six_text"></string>
   <string name="digit_seven">7</string>
-  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_seven_text"></string>
   <string name="digit_eight">8</string>
-  <string name="digit_eight_text">TUV</string>
+  <string name="digit_eight_text"></string>
   <string name="digit_nine">9</string>
-  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_nine_text"></string>
   <string name="digit_zero">0</string>
   <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
-  <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
-  <string name="menu_title_new_book">New Book</string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
-  <string name="label_split_count">%1$d splits</string>
-  <string name="label_inside_account_with_name">in %1$s</string>
+  <string name="title_manage_books"> </string>
+  <string name="menu_manage_books"> &#8230;</string>
+  <string name="select_chart_to_view_details">      </string>
+  <string name="title_confirm_delete_book">  </string>
+  <string name="msg_all_book_data_will_be_deleted">       !</string>
+  <string name="btn_delete_book"> </string>
+  <string name="label_last_export_time"> :</string>
+  <string name="menu_title_enable_sync"> </string>
+  <string name="menu_title_new_book"> </string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">         </string>
+  <string name="label_split_count">%1$d </string>
+  <string name="label_inside_account_with_name"> %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index 08788091..53b60369 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -25,7 +25,7 @@
   <string name="label_account_name"></string>
   <string name="btn_cancel"></string>
   <string name="btn_save"></string>
-  <string name="btn_test">Test</string>
+  <string name="btn_test"></string>
   <string name="label_passcode"></string>
   <string name="toast_wrong_passcode"></string>
   <string name="toast_passcode_set"></string>
@@ -66,7 +66,7 @@
     <item>Dropbox</item>
     <item>Google </item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>...</item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions"> %1$d </string>
@@ -275,11 +275,11 @@
   <string name="label_tap_to_create_schedule"></string>
   <string name="title_restore_backup">&#8230;</string>
   <string name="header_backup_and_export_settings"></string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference"> DropBox</string>
+  <string name="title_owncloud_sync_preference"> ownCloud </string>
   <string name="title_backup_preference_category"></string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_dropbox_sync">DropBox</string>
+  <string name="summary_owncloud_sync"> ownCloud</string>
   <string name="title_select_gnucash_xml_file">GnuCash XML</string>
   <string name="title_backup_prefs"></string>
   <string name="title_create_backup_pref"></string>
@@ -288,8 +288,8 @@
   <string name="toast_backup_successful"></string>
   <string name="toast_backup_failed"></string>
   <string name="export_warning_xml"></string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref"> Google Drive</string>
+  <string name="summary_google_drive_sync"> Google Drive</string>
   <string name="toast_install_file_manager"></string>
   <string name="title_select_backup_to_restore"></string>
   <string name="nav_menu_favorites"></string>
@@ -298,16 +298,16 @@
   <string name="nav_menu_scheduled_transactions"></string>
   <string name="nav_menu_export">...</string>
   <string name="nav_menu_settings"></string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
-  <string name="owncloud_pref">owncloud</string>
+  <string name="username"></string>
+  <string name="password"></string>
+  <string name="owncloud_pref">ownCloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid"> OC </string>
+  <string name="owncloud_user_invalid">OC /</string>
+  <string name="owncloud_dir_invalid"> \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC </string>
+  <string name="owncloud_user_ok">OC /</string>
+  <string name="owncloud_dir_ok"></string>
   <plurals name="label_every_x_days">
     <item quantity="other"> %d </item>
   </plurals>
@@ -391,16 +391,16 @@
   <string name="summary_google_plus">Google+</string>
   <string name="summary_translate_gnucash">CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export"></string>
-  <string name="menu_move_transaction">Move&#8230;</string>
+  <string name="menu_move_transaction">...</string>
   <string name="menu_duplicate_transaction"></string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
-  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="nav_menu_budgets"></string>
+  <string name="title_cash_flow_report"></string>
+  <string name="title_budgets"></string>
+  <string name="title_use_compact_list"></string>
+  <string name="summary_use_compact_list"></string>
+  <string name="error_invalid_exchange_rate"></string>
+  <string name="sample_exchange_rate"> 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount"></string>
   <string-array name="report_time_range">
     <item></item>
     <item>3</item>
@@ -411,7 +411,7 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <string name="digit_one_text">\@string/</string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
@@ -430,15 +430,15 @@
   <string name="digit_nine_text">WXYZ</string>
   <string name="digit_zero">0</string>
   <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
-  <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
-  <string name="menu_title_new_book">New Book</string>
+  <string name="title_manage_books"></string>
+  <string name="menu_manage_books"></string>
+  <string name="select_chart_to_view_details"></string>
+  <string name="title_confirm_delete_book"></string>
+  <string name="msg_all_book_data_will_be_deleted"></string>
+  <string name="btn_delete_book"></string>
+  <string name="label_last_export_time"></string>
+  <string name="menu_title_enable_sync"></string>
+  <string name="menu_title_new_book"></string>
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>

From c40d748bc0982a415d023d2b074125d2db6fad3a Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 10 Jun 2016 12:21:43 +0200
Subject: [PATCH 072/121] Increase font size of account spinner in toolbar, use
 smaller size everywhere else

Fix translation bug for digit 1 text (passcode screen)
Remove Robolectric 3.0 Shadowing code (not needed in v3.1)
Update changelog
---
 CHANGELOG.md                                       |  6 +++++-
 .../ui/transaction/TransactionsActivity.java       |  2 +-
 .../util/QualifiedAccountNameCursorAdapter.java    | 22 +++++++++++++++++++++-
 app/src/main/res/layout/account_spinner_item.xml   |  2 +-
 app/src/main/res/values-af-rZA/strings.xml         |  3 ++-
 app/src/main/res/values-ar-rSA/strings.xml         |  3 ++-
 app/src/main/res/values-ca-rES/strings.xml         |  3 ++-
 app/src/main/res/values-cs-rCZ/strings.xml         |  3 ++-
 app/src/main/res/values-de/strings.xml             |  3 ++-
 app/src/main/res/values-el-rGR/strings.xml         |  3 ++-
 app/src/main/res/values-en-rGB/strings.xml         |  3 ++-
 app/src/main/res/values-es-rMX/strings.xml         |  3 ++-
 app/src/main/res/values-es/strings.xml             |  3 ++-
 app/src/main/res/values-fi-rFI/strings.xml         |  3 ++-
 app/src/main/res/values-fr/strings.xml             |  3 ++-
 app/src/main/res/values-hu-rHU/strings.xml         |  3 ++-
 app/src/main/res/values-it-rIT/strings.xml         |  3 ++-
 app/src/main/res/values-iw-rIL/strings.xml         |  3 ++-
 app/src/main/res/values-ja-rJP/strings.xml         |  3 ++-
 app/src/main/res/values-ko-rKR/strings.xml         |  3 ++-
 app/src/main/res/values-lv-rLV/strings.xml         |  3 ++-
 app/src/main/res/values-nb/strings.xml             |  3 ++-
 app/src/main/res/values-nl-rNL/strings.xml         |  3 ++-
 app/src/main/res/values-no-rNO/strings.xml         |  3 ++-
 app/src/main/res/values-pl-rPL/strings.xml         |  3 ++-
 app/src/main/res/values-pt-rBR/strings.xml         |  3 ++-
 app/src/main/res/values-pt-rPT/strings.xml         |  3 ++-
 app/src/main/res/values-ro-rRO/strings.xml         |  3 ++-
 app/src/main/res/values-ru/strings.xml             |  3 ++-
 app/src/main/res/values-sr-rSP/strings.xml         |  3 ++-
 app/src/main/res/values-sv-rSE/strings.xml         |  3 ++-
 app/src/main/res/values-tr-rTR/strings.xml         |  3 ++-
 app/src/main/res/values-uk-rUA/strings.xml         |  3 ++-
 app/src/main/res/values-vi-rVN/strings.xml         |  3 ++-
 app/src/main/res/values-zh-rCN/strings.xml         |  3 ++-
 app/src/main/res/values-zh-rTW/strings.xml         |  3 ++-
 app/src/main/res/values/strings.xml                |  3 ++-
 .../test/unit/testutil/GnucashTestRunner.java      | 12 ------------
 38 files changed, 94 insertions(+), 49 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 7233bb1f..c1c4b109 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -2,9 +2,13 @@ Change Log
 ===============================================================================
 Version 2.1.0 *(2016-xx-xx)*
 ----------------------------
-* Feature: Budgets
+* Feature: Use multiple GnuCash books in single application
+* Feature: Backup/Export to ownCloud servers
+* Feature: Compact transactions list view for single-entry mode
+* Improved: Redesign of passcode screen with included alphabet keys
 * Improved: Scheduled transactions now have more accurate timestamps
 * Improved: Generate all scheduled transactions even if a scheduled is missed (e.g. device off)
+* Fixed: Accounts lists not properly refreshed after switching between recent and all
 
 Version 2.0.7 *(2016-05-05)*
 ----------------------------
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
index fa353fb3..43726750 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -384,7 +384,7 @@ private void setupActionBarNavigation() {
 		mAccountsCursor = mAccountsDbAdapter.fetchAllRecordsOrderedByFullName();
 
         SpinnerAdapter mSpinnerAdapter = new QualifiedAccountNameCursorAdapter(
-                getSupportActionBar().getThemedContext(), mAccountsCursor);
+                getSupportActionBar().getThemedContext(), mAccountsCursor, R.layout.account_spinner_item);
 
         mToolbarSpinner.setAdapter(mSpinnerAdapter);
         mToolbarSpinner.setOnItemSelectedListener(mTransactionListNavigationListener);
diff --git a/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java b/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java
index a4f60e96..a2b31093 100644
--- a/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java
+++ b/app/src/main/java/org/gnucash/android/util/QualifiedAccountNameCursorAdapter.java
@@ -18,6 +18,7 @@
 
 import android.content.Context;
 import android.database.Cursor;
+import android.support.annotation.LayoutRes;
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SimpleCursorAdapter;
 import android.text.TextUtils;
@@ -36,8 +37,27 @@
  */
 public class QualifiedAccountNameCursorAdapter extends SimpleCursorAdapter {
 
+    /**
+     * Initialize the Cursor adapter for account names using default spinner views
+     * @param context Application context
+     * @param cursor Cursor to accounts
+     */
     public QualifiedAccountNameCursorAdapter(Context context, Cursor cursor) {
-        super(context, R.layout.account_spinner_item, cursor,
+        super(context, android.R.layout.simple_spinner_item, cursor,
+                new String[]{DatabaseSchema.AccountEntry.COLUMN_FULL_NAME},
+                new int[]{android.R.id.text1}, 0);
+        setDropDownViewResource(R.layout.account_spinner_dropdown_item);
+    }
+
+    /**
+     * Overloaded constructor. Specifies the view to use for displaying selected spinner text
+     * @param context Application context
+     * @param cursor Cursor to account data
+     * @param selectedSpinnerItem Layout resource for selected item text
+     */
+    public QualifiedAccountNameCursorAdapter(Context context, Cursor cursor,
+                                             @LayoutRes int selectedSpinnerItem) {
+        super(context, selectedSpinnerItem, cursor,
                 new String[]{DatabaseSchema.AccountEntry.COLUMN_FULL_NAME},
                 new int[]{android.R.id.text1}, 0);
         setDropDownViewResource(R.layout.account_spinner_dropdown_item);
diff --git a/app/src/main/res/layout/account_spinner_item.xml b/app/src/main/res/layout/account_spinner_item.xml
index f4b7442b..a0119acc 100644
--- a/app/src/main/res/layout/account_spinner_item.xml
+++ b/app/src/main/res/layout/account_spinner_item.xml
@@ -20,6 +20,6 @@
           android:singleLine="true"
           android:layout_width="match_parent"
           android:layout_height="wrap_content"
-          android:textSize="20sp"
+          android:textSize="18sp"
           android:ellipsize="marquee"
           android:textAlignment="inherit"/>
\ No newline at end of file
diff --git a/app/src/main/res/values-af-rZA/strings.xml b/app/src/main/res/values-af-rZA/strings.xml
index 024af6aa..8f590695 100644
--- a/app/src/main/res/values-af-rZA/strings.xml
+++ b/app/src/main/res/values-af-rZA/strings.xml
@@ -421,7 +421,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-ar-rSA/strings.xml b/app/src/main/res/values-ar-rSA/strings.xml
index d6a7b9db..1ab47d7b 100644
--- a/app/src/main/res/values-ar-rSA/strings.xml
+++ b/app/src/main/res/values-ar-rSA/strings.xml
@@ -441,7 +441,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-ca-rES/strings.xml b/app/src/main/res/values-ca-rES/strings.xml
index c67640b5..8d4291b2 100644
--- a/app/src/main/res/values-ca-rES/strings.xml
+++ b/app/src/main/res/values-ca-rES/strings.xml
@@ -421,7 +421,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-cs-rCZ/strings.xml b/app/src/main/res/values-cs-rCZ/strings.xml
index 3a85864c..83ce45a1 100644
--- a/app/src/main/res/values-cs-rCZ/strings.xml
+++ b/app/src/main/res/values-cs-rCZ/strings.xml
@@ -426,7 +426,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index ca4188fe..045b6232 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -418,7 +418,8 @@ No user-identifiable information will be collected as part of this process!</str
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-el-rGR/strings.xml b/app/src/main/res/values-el-rGR/strings.xml
index 6cec92f0..ea1ab287 100644
--- a/app/src/main/res/values-el-rGR/strings.xml
+++ b/app/src/main/res/values-el-rGR/strings.xml
@@ -432,7 +432,8 @@ No user-identifiable information will be collected as part of this process!
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-en-rGB/strings.xml b/app/src/main/res/values-en-rGB/strings.xml
index 9d7178b6..07056ed5 100644
--- a/app/src/main/res/values-en-rGB/strings.xml
+++ b/app/src/main/res/values-en-rGB/strings.xml
@@ -421,7 +421,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index 1472fea4..ba57591a 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -418,7 +418,8 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 1ea2022b..e13dcf77 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -418,7 +418,8 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-fi-rFI/strings.xml b/app/src/main/res/values-fi-rFI/strings.xml
index 024af6aa..8f590695 100644
--- a/app/src/main/res/values-fi-rFI/strings.xml
+++ b/app/src/main/res/values-fi-rFI/strings.xml
@@ -421,7 +421,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 52ca0081..07783354 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -418,7 +418,8 @@ Aucune information permettant d\'identifier l\'utilisateur ne sera recueillis da
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-hu-rHU/strings.xml b/app/src/main/res/values-hu-rHU/strings.xml
index a7b76f1b..ca718686 100644
--- a/app/src/main/res/values-hu-rHU/strings.xml
+++ b/app/src/main/res/values-hu-rHU/strings.xml
@@ -423,7 +423,8 @@ No user-identifiable information will be collected as part of this process!
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index a7c3a3e3..20c2f4e9 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -418,7 +418,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-iw-rIL/strings.xml b/app/src/main/res/values-iw-rIL/strings.xml
index b81f813b..9e0d61f1 100644
--- a/app/src/main/res/values-iw-rIL/strings.xml
+++ b/app/src/main/res/values-iw-rIL/strings.xml
@@ -431,7 +431,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index fe2f9e76..c2925e2e 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -409,7 +409,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index eabb1e8c..0e127f76 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -416,7 +416,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-lv-rLV/strings.xml b/app/src/main/res/values-lv-rLV/strings.xml
index 9cb37c9f..b7ef2ee2 100644
--- a/app/src/main/res/values-lv-rLV/strings.xml
+++ b/app/src/main/res/values-lv-rLV/strings.xml
@@ -426,7 +426,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 6ba6b484..c48fbffd 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -412,7 +412,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-nl-rNL/strings.xml b/app/src/main/res/values-nl-rNL/strings.xml
index 45c06442..b84f4c39 100644
--- a/app/src/main/res/values-nl-rNL/strings.xml
+++ b/app/src/main/res/values-nl-rNL/strings.xml
@@ -422,7 +422,8 @@ No user-identifiable information will be collected as part of this process!
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-no-rNO/strings.xml b/app/src/main/res/values-no-rNO/strings.xml
index 6ba6b484..c48fbffd 100644
--- a/app/src/main/res/values-no-rNO/strings.xml
+++ b/app/src/main/res/values-no-rNO/strings.xml
@@ -412,7 +412,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-pl-rPL/strings.xml b/app/src/main/res/values-pl-rPL/strings.xml
index 886dea27..f47715d0 100644
--- a/app/src/main/res/values-pl-rPL/strings.xml
+++ b/app/src/main/res/values-pl-rPL/strings.xml
@@ -419,7 +419,8 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 95db7541..0bb1f1f6 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -416,7 +416,8 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-pt-rPT/strings.xml b/app/src/main/res/values-pt-rPT/strings.xml
index ea6b41d6..5c196078 100644
--- a/app/src/main/res/values-pt-rPT/strings.xml
+++ b/app/src/main/res/values-pt-rPT/strings.xml
@@ -416,7 +416,8 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/vazia</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-ro-rRO/strings.xml b/app/src/main/res/values-ro-rRO/strings.xml
index b5b2a12d..31833158 100644
--- a/app/src/main/res/values-ro-rRO/strings.xml
+++ b/app/src/main/res/values-ro-rRO/strings.xml
@@ -426,7 +426,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 8481ec4c..b7ba8b8f 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -424,7 +424,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text"></string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-sr-rSP/strings.xml b/app/src/main/res/values-sr-rSP/strings.xml
index 3eea4161..f2edbb93 100644
--- a/app/src/main/res/values-sr-rSP/strings.xml
+++ b/app/src/main/res/values-sr-rSP/strings.xml
@@ -426,7 +426,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-sv-rSE/strings.xml b/app/src/main/res/values-sv-rSE/strings.xml
index 024af6aa..8f590695 100644
--- a/app/src/main/res/values-sv-rSE/strings.xml
+++ b/app/src/main/res/values-sv-rSE/strings.xml
@@ -421,7 +421,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-tr-rTR/strings.xml b/app/src/main/res/values-tr-rTR/strings.xml
index 2cbd3993..5a5e5a04 100644
--- a/app/src/main/res/values-tr-rTR/strings.xml
+++ b/app/src/main/res/values-tr-rTR/strings.xml
@@ -421,7 +421,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-uk-rUA/strings.xml b/app/src/main/res/values-uk-rUA/strings.xml
index 7123370c..b2dd85d8 100644
--- a/app/src/main/res/values-uk-rUA/strings.xml
+++ b/app/src/main/res/values-uk-rUA/strings.xml
@@ -422,7 +422,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-vi-rVN/strings.xml b/app/src/main/res/values-vi-rVN/strings.xml
index eabb1e8c..0e127f76 100644
--- a/app/src/main/res/values-vi-rVN/strings.xml
+++ b/app/src/main/res/values-vi-rVN/strings.xml
@@ -416,7 +416,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index 53b60369..ac461d3b 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -411,7 +411,8 @@
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">\@string/</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml
index 4c7ff4c2..0f26a521 100644
--- a/app/src/main/res/values-zh-rTW/strings.xml
+++ b/app/src/main/res/values-zh-rTW/strings.xml
@@ -413,7 +413,8 @@ No user-identifiable information will be collected as part of this process!
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
-  <string name="digit_one_text">@string/empty</string>
+  <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 88a625b2..b0f627c5 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -424,7 +424,8 @@
 
     <!-- Passcode lock -->
     <string name="digit_one">1</string>
-    <string name="digit_one_text">@string/empty</string>
+    <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
+    <string name="digit_one_text">&#8203;</string>
     <string name="digit_two">2</string>
     <string name="digit_two_text">ABC</string>
     <string name="digit_three">3</string>
diff --git a/app/src/test/java/org/gnucash/android/test/unit/testutil/GnucashTestRunner.java b/app/src/test/java/org/gnucash/android/test/unit/testutil/GnucashTestRunner.java
index 635d3ce2..95b6721c 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/testutil/GnucashTestRunner.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/testutil/GnucashTestRunner.java
@@ -1,11 +1,7 @@
 package org.gnucash.android.test.unit.testutil;
 
-import com.crashlytics.android.Crashlytics;
-import com.uservoice.uservoicesdk.UserVoice;
-
 import org.junit.runners.model.InitializationError;
 import org.robolectric.RobolectricGradleTestRunner;
-import org.robolectric.internal.bytecode.InstrumentationConfiguration;
 
 /**
  * Test runner for application
@@ -16,12 +12,4 @@ public GnucashTestRunner(Class<?> klass) throws InitializationError {
         super(klass);
     }
 
-    @Override
-    public InstrumentationConfiguration createClassLoaderConfig() {
-        InstrumentationConfiguration.Builder builder = InstrumentationConfiguration.newBuilder()
-                .addInstrumentedClass(Crashlytics.class.getName())
-                .addInstrumentedClass(UserVoice.class.getName());
-
-        return builder.build();
-    }
 }

From 351ebca81537174c5eca6df4bb8712167ab064c3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Wed, 15 Jun 2016 18:33:08 +0200
Subject: [PATCH 073/121] Annotate Account for its commodity to be always
 non-null.

---
 app/src/main/java/org/gnucash/android/model/Account.java | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/model/Account.java b/app/src/main/java/org/gnucash/android/model/Account.java
index 53fa57aa..b4569a49 100644
--- a/app/src/main/java/org/gnucash/android/model/Account.java
+++ b/app/src/main/java/org/gnucash/android/model/Account.java
@@ -157,7 +157,7 @@ public Account(String name) {
 	 * @param name Name of the account
 	 * @param commodity {@link Commodity} to be used by transactions in this account
 	 */
-	public Account(String name, Commodity commodity){
+	public Account(String name, @NonNull Commodity commodity){
 		setName(name);
         this.mFullName  = mName;
 		setCommodity(commodity);
@@ -343,6 +343,7 @@ public void setCurrencyCode(String currencyCode){
 	/**
 	 * Return the commodity for this account
 	 */
+	@NonNull
 	public Commodity getCommodity(){
 		return mCommodity;
 	}
@@ -351,7 +352,7 @@ public Commodity getCommodity(){
 	 * Sets the commodity of this account
 	 * @param commodity Commodity of the account
 	 */
-	public void setCommodity(Commodity commodity){
+	public void setCommodity(@NonNull Commodity commodity){
 		this.mCommodity = commodity;
 		this.mCurrencyCode = commodity.getCurrencyCode();
 		//todo: should we also change commodity of transactions? Transactions can have splits from different accounts

From 686fc9b68be9b9aabb7a039395598550ea66601c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Thu, 16 Jun 2016 18:24:19 +0200
Subject: [PATCH 074/121] Remove null check for Account.getCommodity().

We'll now ensure it's never null.
---
 .../main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index 3c840614..5048eda0 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -180,11 +180,7 @@ public long bulkAddRecords(@NonNull List<Account> accountList, UpdateMethod upda
         stmt.bindLong(8, account.isPlaceholderAccount() ? 1 : 0);
         stmt.bindString(9, TimestampHelper.getUtcStringFromTimestamp(account.getCreatedTimestamp()));
         stmt.bindLong(10, account.isHidden() ? 1 : 0);
-        Commodity commodity = account.getCommodity();
-        if (commodity == null)
-            commodity = new CommoditiesDbAdapter(mDb).getCommodity(account.getCurrency().getCurrencyCode());
-
-        stmt.bindString(11, commodity.getUID());
+        stmt.bindString(11, account.getCommodity().getUID());
 
         String parentAccountUID = account.getParentUID();
         if (parentAccountUID == null && account.getAccountType() != AccountType.ROOT) {

From 07486c3d4319dbe4a0135682ec740f03d982c149 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Thu, 16 Jun 2016 18:10:30 +0200
Subject: [PATCH 075/121] Log a message if a commodity isn't found in the
 database.

We load an extensive list of currencies in the database, so it should be
unusual when don't find one.
---
 .../java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java  | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
index ccd58f45..84b5f56b 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/CommoditiesDbAdapter.java
@@ -4,6 +4,9 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteStatement;
 import android.support.annotation.NonNull;
+import android.util.Log;
+
+import com.crashlytics.android.Crashlytics;
 
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
@@ -110,6 +113,10 @@ public Commodity getCommodity(String currencyCode){
         Commodity commodity = null;
         if (cursor.moveToNext()){
             commodity = buildModelInstance(cursor);
+        } else {
+            String msg = "Commodity not found in the database: " + currencyCode;
+            Log.e(LOG_TAG, msg);
+            Crashlytics.log(msg);
         }
         cursor.close();
         return commodity;

From 17a4e5be256dd77e8a83b0b7bcace1e5589d4b1b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sat, 18 Jun 2016 14:16:55 +0200
Subject: [PATCH 076/121] Remove Currency and currency code uses from Account.

Account already holds a reference to a Commodity which substitutes Currency.
---
 .../android/test/ui/AccountsActivityTest.java      |  7 +++----
 .../android/db/adapter/AccountsDbAdapter.java      |  2 +-
 .../gnucash/android/importer/GncXmlHandler.java    |  3 ++-
 .../java/org/gnucash/android/model/Account.java    | 24 +---------------------
 .../android/ui/account/AccountFormFragment.java    |  2 +-
 .../android/ui/report/BaseReportFragment.java      | 12 +++++------
 .../android/ui/report/ReportsOverviewFragment.java |  8 ++------
 .../report/barchart/StackedBarChartFragment.java   |  9 ++++----
 .../linechart/CashFlowLineChartFragment.java       |  8 ++++----
 .../ui/report/piechart/PieChartFragment.java       |  4 ++--
 .../android/test/unit/model/AccountTest.java       | 21 +------------------
 11 files changed, 27 insertions(+), 73 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 73eecf12..69f6e4a0 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -228,7 +228,7 @@ public void testCreateAccount(){
         Account newestAccount = accounts.get(0); //because of alphabetical sorting
 
         assertThat(newestAccount.getName()).isEqualTo(NEW_ACCOUNT_NAME);
-        assertThat(newestAccount.getCurrency().getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE);
+        assertThat(newestAccount.getCommodity().getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE);
         assertThat(newestAccount.isPlaceholderAccount()).isTrue();
     }
 
@@ -316,7 +316,7 @@ public void testEditAccount(){
         Account latest = accounts.get(0);  //will be the first due to alphabetical sorting
 
         assertThat(latest.getName()).isEqualTo(editedAccountName);
-        assertThat(latest.getCurrency().getCurrencyCode()).isEqualTo(ACCOUNTS_CURRENCY_CODE);
+        assertThat(latest.getCommodity().getCurrencyCode()).isEqualTo(ACCOUNTS_CURRENCY_CODE);
     }
 
     @Test
@@ -402,7 +402,6 @@ public void testDeleteAccountMovingSubaccounts() {
         subAccount.setParentUID(SIMPLE_ACCOUNT_UID);
 
         Account tranferAcct = new Account("Other account");
-        tranferAcct.setCurrencyCode(ACCOUNTS_CURRENCY_CODE);
         mAccountsDbAdapter.addRecord(subAccount, DatabaseAdapter.UpdateMethod.insert);
         mAccountsDbAdapter.addRecord(tranferAcct, DatabaseAdapter.UpdateMethod.insert);
 
@@ -456,7 +455,7 @@ public void testIntentAccountCreation(){
         assertThat(account).isNotNull();
         assertThat(account.getName()).isEqualTo("Intent Account");
         assertThat(account.getUID()).isEqualTo("intent-account");
-        assertThat(account.getCurrency().getCurrencyCode()).isEqualTo("EUR");
+        assertThat(account.getCommodity().getCurrencyCode()).isEqualTo("EUR");
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index 5048eda0..dd8d26dc 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -171,7 +171,7 @@ public long bulkAddRecords(@NonNull List<Account> accountList, UpdateMethod upda
         if (account.getDescription() != null)
             stmt.bindString(2, account.getDescription());
         stmt.bindString(3, account.getAccountType().name());
-        stmt.bindString(4, account.getCurrency().getCurrencyCode());
+        stmt.bindString(4, account.getCommodity().getCurrencyCode());
         if (account.getColor() != Account.DEFAULT_COLOR) {
             stmt.bindString(5, convertToRGBHexString(account.getColor()));
         }
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 227adfa1..86dd7818 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -439,7 +439,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
             case GncXmlHelper.TAG_COMMODITY_ID:
                 String currencyCode = mISO4217Currency ? characterString : NO_CURRENCY_CODE;
                 if (mAccount != null) {
-                    mAccount.setCurrencyCode(currencyCode);
+                    mAccount.setCommodity(mCommoditiesDbAdapter.getCommodity(currencyCode));
                     if (mCurrencyCount.containsKey(currencyCode)) {
                         mCurrencyCount.put(currencyCode, mCurrencyCount.get(currencyCode) + 1);
                     } else {
@@ -893,6 +893,7 @@ public void endDocument() throws SAXException {
 
         // Set the account for created balancing splits to correct imbalance accounts
         for (Split split: mAutoBalanceSplits) {
+            // XXX: yes, getAccountUID() returns a currency code in this case (see Transaction.getAutoBalanceSplit())
             String currencyCode = split.getAccountUID();
             Account imbAccount = mapImbalanceAccount.get(currencyCode);
             if (imbAccount == null) {
diff --git a/app/src/main/java/org/gnucash/android/model/Account.java b/app/src/main/java/org/gnucash/android/model/Account.java
index b4569a49..71f30ff8 100644
--- a/app/src/main/java/org/gnucash/android/model/Account.java
+++ b/app/src/main/java/org/gnucash/android/model/Account.java
@@ -27,7 +27,6 @@
 
 import java.sql.Timestamp;
 import java.util.ArrayList;
-import java.util.Currency;
 import java.util.List;
 
 /**
@@ -77,11 +76,6 @@
 	private String mDescription = "";
 
 	/**
-	 * Currency used by transactions in this account
-	 */
-	private String mCurrencyCode;
-
-	/**
 	 * Commodity used by this account
 	 */
 	private Commodity mCommodity;
@@ -271,7 +265,7 @@ public int getTransactionCount(){
 	 * @return {@link Money} aggregate amount of all transactions in account.
 	 */
 	public Money getBalance(){
-		Money balance = Money.createZeroInstance(mCurrencyCode);
+		Money balance = Money.createZeroInstance(mCommodity.getCurrencyCode());
         for (Transaction transaction : mTransactionsList) {
             balance.add(transaction.getBalance(getUID()));
 		}
@@ -325,21 +319,6 @@ public void setFavorite(boolean isFavorite) {
         this.mIsFavorite = isFavorite;
     }
 
-    /**
-	 * Returns the currency for this account.
-	 */
-	public Currency getCurrency() {
-		return Currency.getInstance(mCurrencyCode);
-	}
-
-	/**
-	 * Sets the currency code of this account
-	 * @param currencyCode ISO 4217 3-letter currency code
-	 */
-	public void setCurrencyCode(String currencyCode){
-		this.mCurrencyCode = currencyCode;
-	}
-
 	/**
 	 * Return the commodity for this account
 	 */
@@ -354,7 +333,6 @@ public Commodity getCommodity(){
 	 */
 	public void setCommodity(@NonNull Commodity commodity){
 		this.mCommodity = commodity;
-		this.mCurrencyCode = commodity.getCurrencyCode();
 		//todo: should we also change commodity of transactions? Transactions can have splits from different accounts
 	}
 
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 2a90bdcc..d714dd15 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -376,7 +376,7 @@ private void initializeViewsWithAccount(Account account){
             setParentAccountSelection(mAccountsDbAdapter.getID(mParentAccountUID));
         }
 
-        String currencyCode = account.getCurrency().getCurrencyCode();
+        String currencyCode = account.getCommodity().getCurrencyCode();
         setSelectedCurrency(currencyCode);
 
         if (mAccountsDbAdapter.getTransactionMaxSplitNum(mAccount.getUID()) > 1)
diff --git a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
index ee53923b..e6f849e4 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BaseReportFragment.java
@@ -30,7 +30,6 @@
 import android.view.MenuInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.ProgressBar;
 import android.widget.TextView;
 
 import com.github.mikephil.charting.data.Entry;
@@ -39,14 +38,14 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.Commodity;
 import org.gnucash.android.ui.common.Refreshable;
 import org.joda.time.LocalDateTime;
 import org.joda.time.Months;
 import org.joda.time.Years;
 
-import java.util.Currency;
-
 import butterknife.Bind;
 import butterknife.ButterKnife;
 
@@ -88,9 +87,9 @@
     protected AccountType mAccountType;
 
     /**
-     * Currency for which to display reports
+     * Commodity for which to display reports
      */
-    protected Currency mCurrency;
+    protected Commodity mCommodity;
 
     /**
      * Intervals in which to group reports
@@ -181,7 +180,8 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         actionBar.setTitle(getTitle());
 
         setHasOptionsMenu(true);
-        mCurrency = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode());
+        mCommodity = CommoditiesDbAdapter.getInstance()
+                    .getCommodity(GnuCashApplication.getDefaultCurrencyCode());
 
         ReportsActivity reportsActivity = (ReportsActivity) getActivity();
         mReportPeriodStart = reportsActivity.getReportPeriodStart();
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment.java
index bae16da2..f0139f67 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsOverviewFragment.java
@@ -35,7 +35,6 @@
 import com.github.mikephil.charting.data.PieDataSet;
 
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
@@ -49,9 +48,7 @@
 
 import java.util.ArrayList;
 import java.util.Collections;
-import java.util.Currency;
 import java.util.List;
-import java.util.Locale;
 
 import butterknife.Bind;
 import butterknife.OnClick;
@@ -151,7 +148,7 @@ protected void generateReport() {
             mChart.setData(pieData);
             float sum = mChart.getData().getYValueSum();
             String total = getResources().getString(R.string.label_chart_total);
-            String currencySymbol = Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode()).getSymbol(Locale.getDefault());
+            String currencySymbol = mCommodity.getSymbol();
             mChart.setCenterText(String.format(PieChartFragment.TOTAL_VALUE_LABEL_PATTERN, total, sum, currencySymbol));
             mChartHasData = true;
         } else {
@@ -178,14 +175,13 @@ protected void generateReport() {
      * @return {@code PieData} instance
      */
     private PieData getData() {
-        String mCurrencyCode = GnuCashApplication.getDefaultCurrencyCode();
         PieDataSet dataSet = new PieDataSet(null, "");
         List<String> labels = new ArrayList<>();
         List<Integer> colors = new ArrayList<>();
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
             if (account.getAccountType() == AccountType.EXPENSE
                     && !account.isPlaceholderAccount()
-                    && account.getCurrency() == Currency.getInstance(mCurrencyCode)) {
+                    && account.getCommodity().equals(mCommodity)) {
 
                 long start = new LocalDate().minusMonths(2).dayOfMonth().withMinimumValue().toDate().getTime();
                 long end = new LocalDate().plusDays(1).toDate().getTime();
diff --git a/app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment.java
index c834dd5f..3297b230 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment.java
@@ -17,7 +17,6 @@
 
 package org.gnucash.android.ui.report.barchart;
 
-import android.graphics.Color;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.annotation.Nullable;
@@ -110,7 +109,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         mChart.getAxisRight().setEnabled(false);
         mChart.getAxisLeft().setStartAtZero(false);
         mChart.getAxisLeft().enableGridDashedLine(4.0f, 4.0f, 0);
-        mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter(mCurrency.getSymbol(Locale.getDefault())));
+        mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter(mCommodity.getSymbol()));
         Legend chartLegend = mChart.getLegend();
         chartLegend.setForm(Legend.LegendForm.CIRCLE);
         chartLegend.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER);
@@ -163,7 +162,7 @@ protected BarData getData() {
             for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
                 if (account.getAccountType() == mAccountType
                         && !account.isPlaceholderAccount()
-                        && account.getCurrency() == mCurrency) {
+                        && account.getCommodity().equals(mCommodity)) {
 
                     double balance = mAccountsDbAdapter.getAccountsBalance(
                             Collections.singletonList(account.getUID()), start, end).asDouble();
@@ -244,7 +243,7 @@ private BarData getEmptyData() {
      */
     private LocalDate getStartDate(AccountType accountType) {
         TransactionsDbAdapter adapter = TransactionsDbAdapter.getInstance();
-        String code = mCurrency.getCurrencyCode();
+        String code = mCommodity.getCurrencyCode();
         LocalDate startDate;
         if (mReportPeriodStart == -1) {
             startDate = new LocalDate(adapter.getTimestampOfEarliestTransaction(accountType, code));
@@ -263,7 +262,7 @@ private LocalDate getStartDate(AccountType accountType) {
      */
     private LocalDate getEndDate(AccountType accountType) {
         TransactionsDbAdapter adapter = TransactionsDbAdapter.getInstance();
-        String code = mCurrency.getCurrencyCode();
+        String code = mCommodity.getCurrencyCode();
         LocalDate endDate;
         if (mReportPeriodEnd == -1) {
             endDate = new LocalDate(adapter.getTimestampOfLatestTransaction(accountType, code));
diff --git a/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
index 7f72d7cd..69670658 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
@@ -102,7 +102,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         mChart.getXAxis().setDrawGridLines(false);
         mChart.getAxisRight().setEnabled(false);
         mChart.getAxisLeft().enableGridDashedLine(4.0f, 4.0f, 0);
-        mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter(mCurrency.getSymbol(Locale.getDefault())));
+        mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter(mCommodity.getSymbol()));
 
         Legend legend = mChart.getLegend();
         legend.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER);
@@ -209,7 +209,7 @@ private LineData getEmptyData() {
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
             if (account.getAccountType() == accountType
                     && !account.isPlaceholderAccount()
-                    && account.getCurrency().equals(mCurrency)) {
+                    && account.getCommodity().equals(mCommodity)) {
                 accountUIDList.add(account.getUID());
             }
         }
@@ -276,8 +276,8 @@ private void calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeL
         TransactionsDbAdapter dbAdapter = TransactionsDbAdapter.getInstance();
         for (Iterator<AccountType> iter = accountTypeList.iterator(); iter.hasNext();) {
             AccountType type = iter.next();
-            long earliest = dbAdapter.getTimestampOfEarliestTransaction(type, mCurrency.getCurrencyCode());
-            long latest = dbAdapter.getTimestampOfLatestTransaction(type, mCurrency.getCurrencyCode());
+            long earliest = dbAdapter.getTimestampOfEarliestTransaction(type, mCommodity.getCurrencyCode());
+            long latest = dbAdapter.getTimestampOfLatestTransaction(type, mCommodity.getCurrencyCode());
             if (earliest > 0 && latest > 0) {
                 mEarliestTimestampsMap.put(type, earliest);
                 mLatestTimestampsMap.put(type, latest);
diff --git a/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
index 6ff5bfa8..7f20203f 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
@@ -120,7 +120,7 @@ protected void generateReport() {
             mChart.setData(mGroupSmallerSlices ? groupSmallerSlices(pieData, getActivity()) : pieData);
             float sum = mChart.getData().getYValueSum();
             String total = getResources().getString(R.string.label_chart_total);
-            String currencySymbol = mCurrency.getSymbol(Locale.getDefault());
+            String currencySymbol = mCommodity.getSymbol();
             mChart.setCenterText(String.format(TOTAL_VALUE_LABEL_PATTERN, total, sum, currencySymbol));
         } else {
             mChartDataPresent = false;
@@ -152,7 +152,7 @@ private PieData getData() {
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
             if (account.getAccountType() == mAccountType
                     && !account.isPlaceholderAccount()
-                    && account.getCurrency() == mCurrency) {
+                    && account.getCommodity().equals(mCommodity)) {
 
                 double balance = mAccountsDbAdapter.getAccountsBalance(Collections.singletonList(account.getUID()),
                         mReportPeriodStart, mReportPeriodEnd).asDouble();
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
index a172e361..106897bd 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
@@ -29,8 +29,6 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
-import java.util.Currency;
-
 import static org.assertj.core.api.Assertions.assertThat;
 
 @RunWith(GnucashTestRunner.class)
@@ -40,7 +38,7 @@
 	@Test
 	public void testAccountUsesDefaultCurrency(){
 		Account account = new Account("Dummy account");
-		assertThat(account.getCurrency().getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE);
+		assertThat(account.getCommodity().getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE);
 	}
 
 	@Test
@@ -96,23 +94,6 @@ public void settingNameShouldNotChangeFullName(){
 	}
 
 	@Test
-	public void settingCommodity_shouldSetCurrencyCode(){
-		Account account = new Account("Test", Commodity.USD);
-		account.setCommodity(Commodity.JPY);
-
-		assertThat(account.getCurrency()).isEqualTo(Currency.getInstance("JPY"));
-	}
-
-	@Test
-	public void settingCurrencyCode_shouldNotSetCommodity(){
-		Account account = new Account("Test EUR account", Commodity.EUR);
-		account.setCurrencyCode("USD");
-
-		assertThat(account.getCommodity()).isEqualTo(Commodity.EUR);
-		assertThat(account.getCurrency()).isEqualTo(Currency.getInstance("USD"));
-	}
-
-	@Test
 	public void newInstance_shouldReturnNonNullValues() {
 		Account account = new Account("Test account");
 		assertThat(account.getDescription()).isEqualTo("");

From c6016d70b8a95b554fcf9c974084f789e12e33e2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sun, 19 Jun 2016 12:57:22 +0200
Subject: [PATCH 077/121] Ensure we don't create Account objects with a null
 Commodity.

---
 .../main/java/org/gnucash/android/importer/GncXmlHandler.java  |  8 +++++++-
 .../java/org/gnucash/android/receivers/AccountCreator.java     | 10 ++++++++--
 2 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 86dd7818..a358561f 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -439,7 +439,13 @@ public void endElement(String uri, String localName, String qualifiedName) throw
             case GncXmlHelper.TAG_COMMODITY_ID:
                 String currencyCode = mISO4217Currency ? characterString : NO_CURRENCY_CODE;
                 if (mAccount != null) {
-                    mAccount.setCommodity(mCommoditiesDbAdapter.getCommodity(currencyCode));
+                    Commodity commodity = mCommoditiesDbAdapter.getCommodity(currencyCode);
+                    if (commodity != null) {
+                        mAccount.setCommodity(commodity);
+                    } else {
+                        throw new SAXException("Commodity with '" + currencyCode
+                                + "' currency code not found in the database");
+                    }
                     if (mCurrencyCount.containsKey(currencyCode)) {
                         mCurrencyCount.put(currencyCode, mCurrencyCount.get(currencyCode) + 1);
                     } else {
diff --git a/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java b/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
index 16eaad10..dd0e77ee 100644
--- a/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
+++ b/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
@@ -48,8 +48,14 @@ public void onReceive(Context context, Intent intent) {
 		account.setParentUID(args.getString(Account.EXTRA_PARENT_UID));
 		
 		String currencyCode = args.getString(Account.EXTRA_CURRENCY_CODE);				
-		if (currencyCode != null){
-			account.setCommodity(Commodity.getInstance(currencyCode));
+        if (currencyCode != null) {
+            Commodity commodity = Commodity.getInstance(currencyCode);
+            if (commodity != null) {
+                account.setCommodity(commodity);
+            } else {
+                throw new IllegalArgumentException("Commodity with '" + currencyCode
+                                        + "' currency code not found in the database");
+            }
 		}
 		
 		String uid = args.getString(Intent.EXTRA_UID);

From bfe1c98200897d871a6e26c889cfb93984628b23 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sun, 19 Jun 2016 20:59:10 +0200
Subject: [PATCH 078/121] Code inspector and formatting fixes.

---
 .../android/db/adapter/AccountsDbAdapter.java      |   7 +-
 .../java/org/gnucash/android/model/Account.java    | 654 +++++++++++----------
 .../gnucash/android/receivers/AccountCreator.java  |  41 +-
 3 files changed, 352 insertions(+), 350 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index dd8d26dc..cd942a92 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -273,7 +273,7 @@ public void reassignDescendantAccounts(@NonNull String accountUID, @NonNull Stri
             for (Account account : descendantAccounts)
                 mapAccounts.put(account.getUID(), account);
             String parentAccountFullName;
-            if (newParentAccountUID == null || getAccountType(newParentAccountUID) == AccountType.ROOT) {
+            if (getAccountType(newParentAccountUID) == AccountType.ROOT) {
                 parentAccountFullName = "";
             } else {
                 parentAccountFullName = getAccountFullName(newParentAccountUID);
@@ -756,11 +756,10 @@ public Money getAccountBalance(AccountType accountType, long startTimestamp, lon
 
         Log.d(LOG_TAG, "all account list : " + accountUidList.size());
         SplitsDbAdapter splitsDbAdapter = SplitsDbAdapter.getInstance();
-        Money splitSum = (startTimestamp == -1 && endTimestamp == -1)
+
+        return (startTimestamp == -1 && endTimestamp == -1)
                 ? splitsDbAdapter.computeSplitBalance(accountUidList, currencyCode, hasDebitNormalBalance)
                 : splitsDbAdapter.computeSplitBalance(accountUidList, currencyCode, hasDebitNormalBalance, startTimestamp, endTimestamp);
-
-        return splitSum;
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/model/Account.java b/app/src/main/java/org/gnucash/android/model/Account.java
index 71f30ff8..57545686 100644
--- a/app/src/main/java/org/gnucash/android/model/Account.java
+++ b/app/src/main/java/org/gnucash/android/model/Account.java
@@ -36,33 +36,35 @@
  * By default, an account is made an {@link AccountType#CASH} and the default currency is
  * the currency of the Locale of the device on which the software is running. US Dollars is used
  * if the platform locale cannot be determined.
- * 
+ *
  * @author Ngewi Fet <ngewif@gmail.com>
  * @see AccountType
  */
-public class Account extends BaseModel{
+public class Account extends BaseModel {
 
-	/**
-	 * The MIME type for accounts in GnucashMobile
-	 * This is used when sending intents from third-party applications
-	 */
-	public static final String MIME_TYPE = "vnd.android.cursor.item/vnd." + BuildConfig.APPLICATION_ID + ".account";
+    /**
+     * The MIME type for accounts in GnucashMobile
+     * This is used when sending intents from third-party applications
+     */
+    public static final String MIME_TYPE = "vnd.android.cursor.item/vnd." + BuildConfig.APPLICATION_ID + ".account";
 
-	/**
-	 * Default color, if not set explicitly through {@link #setColor(String)}.
-	 */
-	// TODO: get it from a theme value?
-	public static final int DEFAULT_COLOR = Color.LTGRAY;
+    /**
+     * Default color, if not set explicitly through {@link #setColor(String)}.
+     */
+    // TODO: get it from a theme value?
+    public static final int DEFAULT_COLOR = Color.LTGRAY;
 
-	/**
+    /**
      * Accounts types which are used by the OFX standard
      */
-	public enum OfxAccountType {CHECKING, SAVINGS, MONEYMRKT, CREDITLINE }
+    public enum OfxAccountType {
+        CHECKING, SAVINGS, MONEYMRKT, CREDITLINE
+    }
 
-	/**
-	 * Name of this account
-	 */
-	private String mName;
+    /**
+     * Name of this account
+     */
+    private String mName;
 
     /**
      * Fully qualified name of this account including the parent hierarchy.
@@ -70,32 +72,32 @@
      */
     private String mFullName;
 
-	/**
-	 * Account description
-	 */
-	private String mDescription = "";
+    /**
+     * Account description
+     */
+    private String mDescription = "";
 
-	/**
-	 * Commodity used by this account
-	 */
-	private Commodity mCommodity;
+    /**
+     * Commodity used by this account
+     */
+    private Commodity mCommodity;
 
 
-	/**
-	 * Type of account
-	 * Defaults to {@link AccountType#CASH}
-	 */
-	private AccountType mAccountType = AccountType.CASH;
+    /**
+     * Type of account
+     * Defaults to {@link AccountType#CASH}
+     */
+    private AccountType mAccountType = AccountType.CASH;
 
-	/**
-	 * List of transactions in this account
-	 */
-	private List<Transaction> mTransactionsList = new ArrayList<>();
+    /**
+     * List of transactions in this account
+     */
+    private List<Transaction> mTransactionsList = new ArrayList<>();
 
-	/**
-	 * Account UID of the parent account. Can be null
-	 */
-	private String mParentAccountUID;
+    /**
+     * Account UID of the parent account. Can be null
+     */
+    private String mParentAccountUID;
 
     /**
      * Save UID of a default account for transfers.
@@ -124,54 +126,54 @@
      */
     private boolean mIsHidden;
 
-	/**
-	 * An extra key for passing the currency code (according ISO 4217) in an intent
-	 */
-	public static final String EXTRA_CURRENCY_CODE 	= "org.gnucash.android.extra.currency_code";
-
-	/**
-	 * Extra key for passing the unique ID of the parent account when creating a
-	 * new account using Intents
-	 */
-	public static final String EXTRA_PARENT_UID 	= "org.gnucash.android.extra.parent_uid";
-
-	/**
-	 * Constructor
-	 * Creates a new account with the default currency and a generated unique ID
-	 * @param name Name of the account
-	 */
-	public Account(String name) {
-		setName(name);
-        this.mFullName  = mName;
-		setCommodity(Commodity.DEFAULT_COMMODITY);
-	}
-
-	/**
-	 * Overloaded constructor
-	 * @param name Name of the account
-	 * @param commodity {@link Commodity} to be used by transactions in this account
-	 */
-	public Account(String name, @NonNull Commodity commodity){
-		setName(name);
-        this.mFullName  = mName;
-		setCommodity(commodity);
-	}
-
-	/**
-	 * Sets the name of the account
-	 * @param name String name of the account
-	 */
-	public void setName(String name) {
-		this.mName = name.trim();
-	}
-
-	/**
-	 * Returns the name of the account
-	 * @return String containing name of the account
-	 */
-	public String getName() {
-		return mName;
-	}
+    /**
+     * An extra key for passing the currency code (according ISO 4217) in an intent
+     */
+    public static final String EXTRA_CURRENCY_CODE = "org.gnucash.android.extra.currency_code";
+
+    /**
+     * Extra key for passing the unique ID of the parent account when creating a
+     * new account using Intents
+     */
+    public static final String EXTRA_PARENT_UID = "org.gnucash.android.extra.parent_uid";
+
+    /**
+     * Constructor
+     * Creates a new account with the default currency and a generated unique ID
+     * @param name Name of the account
+     */
+    public Account(String name) {
+        setName(name);
+        this.mFullName = mName;
+        setCommodity(Commodity.DEFAULT_COMMODITY);
+    }
+
+    /**
+     * Overloaded constructor
+     * @param name      Name of the account
+     * @param commodity {@link Commodity} to be used by transactions in this account
+     */
+    public Account(String name, @NonNull Commodity commodity) {
+        setName(name);
+        this.mFullName = mName;
+        setCommodity(commodity);
+    }
+
+    /**
+     * Sets the name of the account
+     * @param name String name of the account
+     */
+    public void setName(String name) {
+        this.mName = name.trim();
+    }
+
+    /**
+     * Returns the name of the account
+     * @return String containing name of the account
+     */
+    public String getName() {
+        return mName;
+    }
 
     /**
      * Returns the full name of this account.
@@ -190,87 +192,87 @@ public void setFullName(String fullName) {
         this.mFullName = fullName;
     }
 
-	/**
-	 * Returns the account description
-	 * @return String with description
-	 */
-	public String getDescription() {
-		return mDescription;
-	}
-
-	/**
-	 * Sets the account description
-	 * @param description Account description
-	 */
-	public void setDescription(@NonNull String description) {
-		this.mDescription = description;
-	}
-
-	/**
-	 * Get the type of account
-	 * @return {@link AccountType} type of account
-	 */
-	public AccountType getAccountType() {
-		return mAccountType;
-	}
-
-	/**
-	 * Sets the type of account
-	 * @param mAccountType Type of account
-	 * @see AccountType
-	 */
-	public void setAccountType(AccountType mAccountType) {
-		this.mAccountType = mAccountType;
-	}
-
-	/**
-	 * Adds a transaction to this account
-	 * @param transaction {@link Transaction} to be added to the account
-	 */
-	public void addTransaction(Transaction transaction){
-		transaction.setCommodity(mCommodity);
-		mTransactionsList.add(transaction);
-	}
-
-	/**
-	 * Sets a list of transactions for this account.
-	 * Overrides any previous transactions with those in the list.
-	 * The account UID and currency of the transactions will be set to the unique ID
-	 * and currency of the account respectively
-	 * @param transactionsList List of {@link Transaction}s to be set.
-	 */
-	public void setTransactions(List<Transaction> transactionsList){
-		this.mTransactionsList = transactionsList;
-	}
-
-	/**
-	 * Returns a list of transactions for this account
-	 * @return Array list of transactions for the account
-	 */
-	public List<Transaction> getTransactions(){
-		return mTransactionsList;
-	}
-
-	/**
-	 * Returns the number of transactions in this account
-	 * @return Number transactions in account
-	 */
-	public int getTransactionCount(){
-		return mTransactionsList.size();
-	}
-
-	/**
-	 * Returns the aggregate of all transactions in this account.
-	 * It takes into account debit and credit amounts, it does not however consider sub-accounts
-	 * @return {@link Money} aggregate amount of all transactions in account.
-	 */
-	public Money getBalance(){
-		Money balance = Money.createZeroInstance(mCommodity.getCurrencyCode());
+    /**
+     * Returns the account description
+     * @return String with description
+     */
+    public String getDescription() {
+        return mDescription;
+    }
+
+    /**
+     * Sets the account description
+     * @param description Account description
+     */
+    public void setDescription(@NonNull String description) {
+        this.mDescription = description;
+    }
+
+    /**
+     * Get the type of account
+     * @return {@link AccountType} type of account
+     */
+    public AccountType getAccountType() {
+        return mAccountType;
+    }
+
+    /**
+     * Sets the type of account
+     * @param mAccountType Type of account
+     * @see AccountType
+     */
+    public void setAccountType(AccountType mAccountType) {
+        this.mAccountType = mAccountType;
+    }
+
+    /**
+     * Adds a transaction to this account
+     * @param transaction {@link Transaction} to be added to the account
+     */
+    public void addTransaction(Transaction transaction) {
+        transaction.setCommodity(mCommodity);
+        mTransactionsList.add(transaction);
+    }
+
+    /**
+     * Sets a list of transactions for this account.
+     * Overrides any previous transactions with those in the list.
+     * The account UID and currency of the transactions will be set to the unique ID
+     * and currency of the account respectively
+     * @param transactionsList List of {@link Transaction}s to be set.
+     */
+    public void setTransactions(List<Transaction> transactionsList) {
+        this.mTransactionsList = transactionsList;
+    }
+
+    /**
+     * Returns a list of transactions for this account
+     * @return Array list of transactions for the account
+     */
+    public List<Transaction> getTransactions() {
+        return mTransactionsList;
+    }
+
+    /**
+     * Returns the number of transactions in this account
+     * @return Number transactions in account
+     */
+    public int getTransactionCount() {
+        return mTransactionsList.size();
+    }
+
+    /**
+     * Returns the aggregate of all transactions in this account.
+     * It takes into account debit and credit amounts, it does not however consider sub-accounts
+     * @return {@link Money} aggregate amount of all transactions in account.
+     */
+    public Money getBalance() {
+        Money balance = Money.createZeroInstance(mCommodity.getCurrencyCode());
         for (Transaction transaction : mTransactionsList) {
             balance.add(transaction.getBalance(getUID()));
-		}
-		return balance;
-	}
+        }
+        return balance;
+    }
 
     /**
      * Returns the color of the account.
@@ -280,17 +282,17 @@ public int getColor() {
         return mColor;
     }
 
-	/**
-	 * Sets the color of the account.
-	 * @param color Color as an int as returned by {@link Color}.
-	 * @throws java.lang.IllegalArgumentException if the color is transparent,
-	 *   which is not supported.
-	 */
-	public void setColor(int color) {
-		if (Color.alpha(color) < 255)
-			throw new IllegalArgumentException("Transparent colors are not supported: " + color);
-		mColor = color;
-	}
+    /**
+     * Sets the color of the account.
+     * @param color Color as an int as returned by {@link Color}.
+     * @throws java.lang.IllegalArgumentException if the color is transparent,
+     *   which is not supported.
+     */
+    public void setColor(int color) {
+        if (Color.alpha(color) < 255)
+            throw new IllegalArgumentException("Transparent colors are not supported: " + color);
+        mColor = color;
+    }
 
     /**
      * Sets the color of the account.
@@ -298,7 +300,7 @@ public void setColor(int color) {
      * @throws java.lang.IllegalArgumentException if the color code is not properly formatted or
 	 *   the color is transparent.
      */
-	//TODO: Allow use of #aarrggbb format as well
+    //TODO: Allow use of #aarrggbb format as well
     public void setColor(@NonNull String colorCode) {
         setColor(Color.parseColor(colorCode));
     }
@@ -319,44 +321,44 @@ public void setFavorite(boolean isFavorite) {
         this.mIsFavorite = isFavorite;
     }
 
-	/**
-	 * Return the commodity for this account
-	 */
-	@NonNull
-	public Commodity getCommodity(){
-		return mCommodity;
-	}
-
-	/**
-	 * Sets the commodity of this account
-	 * @param commodity Commodity of the account
-	 */
-	public void setCommodity(@NonNull Commodity commodity){
-		this.mCommodity = commodity;
-		//todo: should we also change commodity of transactions? Transactions can have splits from different accounts
-	}
-
-	/**
-	 * Sets the Unique Account Identifier of the parent account
-	 * @param parentUID String Unique ID of parent account
-	 */
-	public void setParentUID(String parentUID){
-		mParentAccountUID = parentUID;
-	}
-	
-	/**
-	 * Returns the Unique Account Identifier of the parent account
-	 * @return String Unique ID of parent account
-	 */
-	public String getParentUID() {
-		return mParentAccountUID;
-	}
+    /**
+     * Return the commodity for this account
+     */
+    @NonNull
+    public Commodity getCommodity() {
+        return mCommodity;
+    }
+
+    /**
+     * Sets the commodity of this account
+     * @param commodity Commodity of the account
+     */
+    public void setCommodity(@NonNull Commodity commodity) {
+        this.mCommodity = commodity;
+        //todo: should we also change commodity of transactions? Transactions can have splits from different accounts
+    }
+
+    /**
+     * Sets the Unique Account Identifier of the parent account
+     * @param parentUID String Unique ID of parent account
+     */
+    public void setParentUID(String parentUID) {
+        mParentAccountUID = parentUID;
+    }
+
+    /**
+     * Returns the Unique Account Identifier of the parent account
+     * @return String Unique ID of parent account
+     */
+    public String getParentUID() {
+        return mParentAccountUID;
+    }
 
     /**
      * Returns <code>true</code> if this account is a placeholder account, <code>false</code> otherwise.
      * @return <code>true</code> if this account is a placeholder account, <code>false</code> otherwise
      */
-    public boolean isPlaceholderAccount(){
+    public boolean isPlaceholderAccount() {
         return mIsPlaceholderAccount;
     }
 
@@ -365,7 +367,7 @@ public boolean isPlaceholderAccount(){
      * <p>Hidden accounts are not visible in the UI</p>
      * @return <code>true</code> if the account is hidden, <code>false</code> otherwise.
      */
-    public boolean isHidden(){
+    public boolean isHidden() {
         return mIsHidden;
     }
 
@@ -374,7 +376,7 @@ public boolean isHidden(){
      * <p>Hidden accounts are not visible in the UI</p>
      * @param hidden boolean specifying is hidden or not
      */
-    public void setHidden(boolean hidden){
+    public void setHidden(boolean hidden) {
         this.mIsHidden = hidden;
     }
 
@@ -383,7 +385,7 @@ public void setHidden(boolean hidden){
      * Placeholder accounts cannot have transactions
      * @param isPlaceholder Boolean flag indicating if the account is a placeholder account or not
      */
-    public void setPlaceHolderFlag(boolean isPlaceholder){
+    public void setPlaceHolderFlag(boolean isPlaceholder) {
         mIsPlaceholderAccount = isPlaceholder;
     }
 
@@ -405,117 +407,117 @@ public void setDefaultTransferAccountUID(String defaultTransferAccountUID) {
 
 
     /**
-	 * Maps the <code>accountType</code> to the corresponding account type.
-	 * <code>accountType</code> have corresponding values to GnuCash desktop
-	 * @param accountType {@link AccountType} of an account
-	 * @return Corresponding {@link OfxAccountType} for the <code>accountType</code>
-	 * @see AccountType
-	 * @see OfxAccountType
-	 */
-    public static OfxAccountType convertToOfxAccountType(AccountType accountType){
-		switch (accountType) {
-		case CREDIT:
-		case LIABILITY:
-			return OfxAccountType.CREDITLINE;
-			
-		case CASH:
-		case INCOME:
-		case EXPENSE:
-		case PAYABLE:
-		case RECEIVABLE:
-			return OfxAccountType.CHECKING;
-			
-		case BANK:
-		case ASSET:
-			return OfxAccountType.SAVINGS;
-			
-		case MUTUAL:
-		case STOCK:
-		case EQUITY:
-		case CURRENCY:
-			return OfxAccountType.MONEYMRKT;
-
-		default:
-			return OfxAccountType.CHECKING;
-		}
-	}
-	
-	/**
-	 * Converts this account's transactions into XML and adds them to the DOM document
-	 * @param doc XML DOM document for the OFX data
-	 * @param parent Parent node to which to add this account's transactions in XML
-	 * @param exportStartTime Time from which to export transactions which are created/modified after
-	 */
-	public void toOfx(Document doc, Element parent, Timestamp exportStartTime){
-		Element currency = doc.createElement(OfxHelper.TAG_CURRENCY_DEF);
-		currency.appendChild(doc.createTextNode(mCommodity.getCurrencyCode()));
-		
-		//================= BEGIN BANK ACCOUNT INFO (BANKACCTFROM) =================================
-		
-		Element bankId = doc.createElement(OfxHelper.TAG_BANK_ID);
-		bankId.appendChild(doc.createTextNode(OfxHelper.APP_ID));
-		
-		Element acctId = doc.createElement(OfxHelper.TAG_ACCOUNT_ID);
-		acctId.appendChild(doc.createTextNode(getUID()));
-		
-		Element accttype = doc.createElement(OfxHelper.TAG_ACCOUNT_TYPE);
-		String ofxAccountType = convertToOfxAccountType(mAccountType).toString();
-		accttype.appendChild(doc.createTextNode(ofxAccountType));
-		
-		Element bankFrom = doc.createElement(OfxHelper.TAG_BANK_ACCOUNT_FROM);
-		bankFrom.appendChild(bankId);
-		bankFrom.appendChild(acctId);
-		bankFrom.appendChild(accttype);
-		
-		//================= END BANK ACCOUNT INFO ============================================
-		
-		
-		//================= BEGIN ACCOUNT BALANCE INFO =================================
-		String balance = getBalance().toPlainString();
-		String formattedCurrentTimeString = OfxHelper.getFormattedCurrentTime();
-		
-		Element balanceAmount = doc.createElement(OfxHelper.TAG_BALANCE_AMOUNT);
-		balanceAmount.appendChild(doc.createTextNode(balance));			
-		Element dtasof = doc.createElement(OfxHelper.TAG_DATE_AS_OF);
-		dtasof.appendChild(doc.createTextNode(formattedCurrentTimeString));
-		
-		Element ledgerBalance = doc.createElement(OfxHelper.TAG_LEDGER_BALANCE);
-		ledgerBalance.appendChild(balanceAmount);
-		ledgerBalance.appendChild(dtasof);
-		
-		//================= END ACCOUNT BALANCE INFO =================================
-		
-		
-		//================= BEGIN TIME PERIOD INFO =================================
-		
-		Element dtstart = doc.createElement(OfxHelper.TAG_DATE_START);
-		dtstart.appendChild(doc.createTextNode(formattedCurrentTimeString));
-		
-		Element dtend = doc.createElement(OfxHelper.TAG_DATE_END);
-		dtend.appendChild(doc.createTextNode(formattedCurrentTimeString));
-		
-		//================= END TIME PERIOD INFO =================================
-		
-		
-		//================= BEGIN TRANSACTIONS LIST =================================
-		Element bankTransactionsList = doc.createElement(OfxHelper.TAG_BANK_TRANSACTION_LIST);
-		bankTransactionsList.appendChild(dtstart);
-		bankTransactionsList.appendChild(dtend);
-
-		for (Transaction transaction : mTransactionsList) {
-			if (transaction.getModifiedTimestamp().before(exportStartTime))
-				continue;
+     * Maps the <code>accountType</code> to the corresponding account type.
+     * <code>accountType</code> have corresponding values to GnuCash desktop
+     * @param accountType {@link AccountType} of an account
+     * @return Corresponding {@link OfxAccountType} for the <code>accountType</code>
+     * @see AccountType
+     * @see OfxAccountType
+     */
+    public static OfxAccountType convertToOfxAccountType(AccountType accountType) {
+        switch (accountType) {
+            case CREDIT:
+            case LIABILITY:
+                return OfxAccountType.CREDITLINE;
+
+            case CASH:
+            case INCOME:
+            case EXPENSE:
+            case PAYABLE:
+            case RECEIVABLE:
+                return OfxAccountType.CHECKING;
+
+            case BANK:
+            case ASSET:
+                return OfxAccountType.SAVINGS;
+
+            case MUTUAL:
+            case STOCK:
+            case EQUITY:
+            case CURRENCY:
+                return OfxAccountType.MONEYMRKT;
+
+            default:
+                return OfxAccountType.CHECKING;
+        }
+    }
+
+    /**
+     * Converts this account's transactions into XML and adds them to the DOM document
+     * @param doc             XML DOM document for the OFX data
+     * @param parent          Parent node to which to add this account's transactions in XML
+     * @param exportStartTime Time from which to export transactions which are created/modified after
+     */
+    public void toOfx(Document doc, Element parent, Timestamp exportStartTime) {
+        Element currency = doc.createElement(OfxHelper.TAG_CURRENCY_DEF);
+        currency.appendChild(doc.createTextNode(mCommodity.getCurrencyCode()));
+
+        //================= BEGIN BANK ACCOUNT INFO (BANKACCTFROM) =================================
+
+        Element bankId = doc.createElement(OfxHelper.TAG_BANK_ID);
+        bankId.appendChild(doc.createTextNode(OfxHelper.APP_ID));
+
+        Element acctId = doc.createElement(OfxHelper.TAG_ACCOUNT_ID);
+        acctId.appendChild(doc.createTextNode(getUID()));
+
+        Element accttype = doc.createElement(OfxHelper.TAG_ACCOUNT_TYPE);
+        String ofxAccountType = convertToOfxAccountType(mAccountType).toString();
+        accttype.appendChild(doc.createTextNode(ofxAccountType));
+
+        Element bankFrom = doc.createElement(OfxHelper.TAG_BANK_ACCOUNT_FROM);
+        bankFrom.appendChild(bankId);
+        bankFrom.appendChild(acctId);
+        bankFrom.appendChild(accttype);
+
+        //================= END BANK ACCOUNT INFO ============================================
+
+
+        //================= BEGIN ACCOUNT BALANCE INFO =================================
+        String balance = getBalance().toPlainString();
+        String formattedCurrentTimeString = OfxHelper.getFormattedCurrentTime();
+
+        Element balanceAmount = doc.createElement(OfxHelper.TAG_BALANCE_AMOUNT);
+        balanceAmount.appendChild(doc.createTextNode(balance));
+        Element dtasof = doc.createElement(OfxHelper.TAG_DATE_AS_OF);
+        dtasof.appendChild(doc.createTextNode(formattedCurrentTimeString));
+
+        Element ledgerBalance = doc.createElement(OfxHelper.TAG_LEDGER_BALANCE);
+        ledgerBalance.appendChild(balanceAmount);
+        ledgerBalance.appendChild(dtasof);
+
+        //================= END ACCOUNT BALANCE INFO =================================
+
+
+        //================= BEGIN TIME PERIOD INFO =================================
+
+        Element dtstart = doc.createElement(OfxHelper.TAG_DATE_START);
+        dtstart.appendChild(doc.createTextNode(formattedCurrentTimeString));
+
+        Element dtend = doc.createElement(OfxHelper.TAG_DATE_END);
+        dtend.appendChild(doc.createTextNode(formattedCurrentTimeString));
+
+        //================= END TIME PERIOD INFO =================================
+
+
+        //================= BEGIN TRANSACTIONS LIST =================================
+        Element bankTransactionsList = doc.createElement(OfxHelper.TAG_BANK_TRANSACTION_LIST);
+        bankTransactionsList.appendChild(dtstart);
+        bankTransactionsList.appendChild(dtend);
+
+        for (Transaction transaction : mTransactionsList) {
+            if (transaction.getModifiedTimestamp().before(exportStartTime))
+                continue;
             bankTransactionsList.appendChild(transaction.toOFX(doc, getUID()));
-		}		
-		//================= END TRANSACTIONS LIST =================================
-					
-		Element statementTransactions = doc.createElement(OfxHelper.TAG_STATEMENT_TRANSACTIONS);
-		statementTransactions.appendChild(currency);
-		statementTransactions.appendChild(bankFrom);
-		statementTransactions.appendChild(bankTransactionsList);
-		statementTransactions.appendChild(ledgerBalance);
-		
-		parent.appendChild(statementTransactions);
-				
-	}
+        }
+        //================= END TRANSACTIONS LIST =================================
+
+        Element statementTransactions = doc.createElement(OfxHelper.TAG_STATEMENT_TRANSACTIONS);
+        statementTransactions.appendChild(currency);
+        statementTransactions.appendChild(bankFrom);
+        statementTransactions.appendChild(bankTransactionsList);
+        statementTransactions.appendChild(ledgerBalance);
+
+        parent.appendChild(statementTransactions);
+
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java b/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
index dd0e77ee..2daf8244 100644
--- a/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
+++ b/app/src/main/java/org/gnucash/android/receivers/AccountCreator.java
@@ -29,25 +29,26 @@
 
 /**
  * Broadcast receiver responsible for creating {@link Account}s received through intents.
- * In order to create an <code>Account</code>, you need to broadcast an {@link Intent} with arguments 
- * for the name, currency and optionally, a unique identifier for the account (which should be unique to Gnucash) 
+ * In order to create an <code>Account</code>, you need to broadcast an {@link Intent} with arguments
+ * for the name, currency and optionally, a unique identifier for the account (which should be unique to Gnucash)
  * of the Account to be created. Also remember to set the right mime type so that Android can properly route the Intent
- * <b>Note</b> This Broadcast receiver requires the permission "org.gnucash.android.permission.CREATE_ACCOUNT" 
+ * <b>Note</b> This Broadcast receiver requires the permission "org.gnucash.android.permission.CREATE_ACCOUNT"
  * in order to be able to use Intents to create accounts. So remember to declare it in your manifest
+ *
  * @author Ngewi Fet <ngewif@gmail.com>
  * @see {@link Account#EXTRA_CURRENCY_CODE}, {@link Account#MIME_TYPE} {@link Intent#EXTRA_TITLE}, {@link Intent#EXTRA_UID}
  */
 public class AccountCreator extends BroadcastReceiver {
 
-	@Override
-	public void onReceive(Context context, Intent intent) {
-		Log.i("Gnucash", "Received account creation intent");
-		Bundle args = intent.getExtras();		
-		
-		Account account = new Account(args.getString(Intent.EXTRA_TITLE));
-		account.setParentUID(args.getString(Account.EXTRA_PARENT_UID));
-		
-		String currencyCode = args.getString(Account.EXTRA_CURRENCY_CODE);				
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        Log.i("Gnucash", "Received account creation intent");
+        Bundle args = intent.getExtras();
+
+        Account account = new Account(args.getString(Intent.EXTRA_TITLE));
+        account.setParentUID(args.getString(Account.EXTRA_PARENT_UID));
+
+        String currencyCode = args.getString(Account.EXTRA_CURRENCY_CODE);
         if (currencyCode != null) {
             Commodity commodity = Commodity.getInstance(currencyCode);
             if (commodity != null) {
@@ -56,13 +57,13 @@ public void onReceive(Context context, Intent intent) {
                 throw new IllegalArgumentException("Commodity with '" + currencyCode
                                         + "' currency code not found in the database");
             }
-		}
-		
-		String uid = args.getString(Intent.EXTRA_UID);
-		if (uid != null)
-			account.setUID(uid);
-		
-		AccountsDbAdapter.getInstance().addRecord(account, DatabaseAdapter.UpdateMethod.insert);
-	}
+        }
+
+        String uid = args.getString(Intent.EXTRA_UID);
+        if (uid != null)
+            account.setUID(uid);
+
+        AccountsDbAdapter.getInstance().addRecord(account, DatabaseAdapter.UpdateMethod.insert);
+    }
 
 }

From 6915fd516ee884b0ecb13cb83c4e937c345e5160 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Fri, 24 Jun 2016 18:51:27 +0200
Subject: [PATCH 079/121] Enable remote debugging from Chrome developer tools
 in debug builds.

This adds Stetho, a debug bridge that, among other things, allows to
access the database and preferences of the application through Chrome
developer tools.
---
 app/build.gradle                                      |  2 ++
 .../org/gnucash/android/app/GnuCashApplication.java   | 19 +++++++++++++++++++
 2 files changed, 21 insertions(+)

diff --git a/app/build.gradle b/app/build.gradle
index 3fb2930e..c5915a89 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -228,6 +228,8 @@ dependencies {
         transitive = true;
     }
 
+    compile 'com.facebook.stetho:stetho:1.3.1'
+
     testCompile('org.robolectric:robolectric:3.1',
             'junit:junit:4.12',
             'joda-time:joda-time:2.7',
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index d328c5bb..a6524ccc 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -31,6 +31,7 @@
 
 import com.crashlytics.android.Crashlytics;
 import com.crashlytics.android.core.CrashlyticsCore;
+import com.facebook.stetho.Stetho;
 import com.uservoice.uservoicesdk.Config;
 import com.uservoice.uservoicesdk.UserVoice;
 
@@ -138,6 +139,9 @@ public void onCreate(){
         //TODO: migrate preferences from defaultShared to book
 
         setDefaultCurrencyCode(getDefaultCurrencyCode());
+
+        if (BuildConfig.DEBUG)
+            setUpRemoteDebuggingFromChrome();
     }
 
     /**
@@ -347,4 +351,19 @@ public static void startScheduledActionExecutionService(Context context){
 
         context.startService(alarmIntent); //run the service the first time
     }
+
+    /**
+     * Sets up Stetho to enable remote debugging from Chrome developer tools.
+     *
+     * <p>Among other things, allows access to the database and preferences.
+     * See http://facebook.github.io/stetho/#features</p>
+     */
+    private void setUpRemoteDebuggingFromChrome() {
+        Stetho.Initializer initializer =
+                Stetho.newInitializerBuilder(this)
+                        .enableWebKitInspector(
+                                Stetho.defaultInspectorModulesProvider(this))
+                        .build();
+        Stetho.initialize(initializer);
+    }
 }
\ No newline at end of file

From 4933882ae9019eee806dea5c15db1d1038d04589 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Fri, 24 Jun 2016 19:01:56 +0200
Subject: [PATCH 080/121] Extract code to set up UserVoice into a new method.

Just to improve readability.
---
 .../gnucash/android/app/GnuCashApplication.java    | 28 ++++++++++++++--------
 1 file changed, 18 insertions(+), 10 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index a6524ccc..518de619 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -120,16 +120,7 @@ public void onCreate(){
                 new CrashlyticsCore.Builder().disabled(!isCrashlyticsEnabled()).build())
                 .build());
 
-        // Set this up once when your application launches
-        Config config = new Config("gnucash.uservoice.com");
-        config.setTopicId(107400);
-        config.setForumId(320493);
-        config.putUserTrait("app_version_name", BuildConfig.VERSION_NAME);
-        config.putUserTrait("app_version_code", BuildConfig.VERSION_CODE);
-        config.putUserTrait("android_version", Build.VERSION.RELEASE);
-        // config.identifyUser("USER_ID", "User Name", "email@example.com");
-        UserVoice.init(config, this);
-
+        setUpUserVoice();
 
         BookDbHelper bookDbHelper = new BookDbHelper(getApplicationContext());
         mBooksDbAdapter = new BooksDbAdapter(bookDbHelper.getWritableDatabase());
@@ -353,6 +344,23 @@ public static void startScheduledActionExecutionService(Context context){
     }
 
     /**
+     * Sets up UserVoice.
+     *
+     * <p>Allows users to contact with us and access help topics.</p>
+     */
+    private void setUpUserVoice() {
+        // Set this up once when your application launches
+        Config config = new Config("gnucash.uservoice.com");
+        config.setTopicId(107400);
+        config.setForumId(320493);
+        config.putUserTrait("app_version_name", BuildConfig.VERSION_NAME);
+        config.putUserTrait("app_version_code", BuildConfig.VERSION_CODE);
+        config.putUserTrait("android_version", Build.VERSION.RELEASE);
+        // config.identifyUser("USER_ID", "User Name", "email@example.com");
+        UserVoice.init(config, this);
+    }
+
+    /**
      * Sets up Stetho to enable remote debugging from Chrome developer tools.
      *
      * <p>Among other things, allows access to the database and preferences.

From 2894466858715e5583932ff4751aa1c6eb5d2dde Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sat, 25 Jun 2016 18:00:04 +0200
Subject: [PATCH 081/121] Store ScheduledAction tag in the correct database
 field.

It was being stored in the total_frequency field instead, which caused a
NullPointerException when listing scheduled actions.

Fixes https://github.com/codinguser/gnucash-android/issues/512
---
 .../java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java   | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
index e83fb699..47e46e12 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
@@ -138,7 +138,7 @@ public long updateRecurrenceAttributes(ScheduledAction scheduledAction){
         if (schedxAction.getTag() == null)
             stmt.bindNull(8);
         else
-            stmt.bindString(9, schedxAction.getTag());
+            stmt.bindString(8, schedxAction.getTag());
         stmt.bindString(9, Integer.toString(schedxAction.getTotalFrequency()));
         stmt.bindString(10, schedxAction.getRecurrence().getUID());
         stmt.bindLong(11,   schedxAction.shouldAutoCreate() ? 1 : 0);

From 8ed56abde7520a72b603eef4eca5e016727353e6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Sun, 26 Jun 2016 13:20:00 +0200
Subject: [PATCH 082/121] Fix code inspector issues.

---
 .../org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java   | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
index 47e46e12..329f4722 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
@@ -26,7 +26,6 @@
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
-import org.gnucash.android.util.TimestampHelper;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -40,7 +39,7 @@
  */
 public class ScheduledActionDbAdapter extends DatabaseAdapter<ScheduledAction> {
 
-    RecurrenceDbAdapter mRecurrenceDbAdapter;
+    private RecurrenceDbAdapter mRecurrenceDbAdapter;
 
     public ScheduledActionDbAdapter(SQLiteDatabase db, RecurrenceDbAdapter recurrenceDbAdapter){
         super(db, ScheduledActionEntry.TABLE_NAME,  new String[]{
@@ -96,7 +95,7 @@ public long bulkAddRecords(@NonNull List<ScheduledAction> scheduledActions, Upda
     /**
      * Updates only the recurrence attributes of the scheduled action.
      * The recurrence attributes are the period, start time, end time and/or total frequency.
-     * All other properties of a scheduled event are only used for interal database tracking and are
+     * All other properties of a scheduled event are only used for internal database tracking and are
      * not central to the recurrence schedule.
      * <p><b>The GUID of the scheduled action should already exist in the database</b></p>
      * @param scheduledAction Scheduled action
@@ -220,7 +219,7 @@ public ScheduledAction buildModelInstance(@NonNull final Cursor cursor){
 
     /**
      * Returns all enabled scheduled actions in the database
-     * @return List of enalbed scheduled actions
+     * @return List of enabled scheduled actions
      */
     public List<ScheduledAction> getAllEnabledScheduledActions(){
         Cursor cursor = mDb.query(mTableName,

From d8ca01164e733fd3ca07706f263cacf7cc1ba8e6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 27 Jun 2016 18:58:28 +0200
Subject: [PATCH 083/121] Add test case for #512.

---
 .../test/unit/db/ScheduledActionDbAdapterTest.java | 46 ++++++++++++++++++++++
 1 file changed, 46 insertions(+)

diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
index 74218a4e..39e702e9 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
@@ -70,4 +70,50 @@ public void testGenerateRepeatString(){
 
     }
 
+    @Test
+    public void testAddGetRecord() {
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
+        scheduledAction.setActionUID("Some UID");
+        scheduledAction.setAdvanceCreateDays(1);
+        scheduledAction.setAdvanceNotifyDays(2);
+        scheduledAction.setAutoCreate(true);
+        scheduledAction.setAutoNotify(true);
+        scheduledAction.setEnabled(true);
+        scheduledAction.setStartTime(11111);
+        scheduledAction.setEndTime(33333);
+        scheduledAction.setLastRun(22222);
+        scheduledAction.setExecutionCount(3);
+        scheduledAction.setRecurrence(new Recurrence(PeriodType.MONTH));
+        scheduledAction.setTag("QIF;SD_CARD;2016-06-25 12:56:07.175;false");
+        mScheduledActionDbAdapter.addRecord(scheduledAction);
+
+        ScheduledAction scheduledActionFromDb =
+                mScheduledActionDbAdapter.getRecord(scheduledAction.getUID());
+        assertThat(scheduledActionFromDb.getUID()).isEqualTo(
+                scheduledAction.getUID());
+        assertThat(scheduledActionFromDb.getActionUID()).isEqualTo(
+                scheduledAction.getActionUID());
+        assertThat(scheduledActionFromDb.getAdvanceCreateDays()).isEqualTo(
+                scheduledAction.getAdvanceCreateDays());
+        assertThat(scheduledActionFromDb.getAdvanceNotifyDays()).isEqualTo(
+                scheduledAction.getAdvanceNotifyDays());
+        assertThat(scheduledActionFromDb.shouldAutoCreate()).isEqualTo(
+                scheduledAction.shouldAutoCreate());
+        assertThat(scheduledActionFromDb.shouldAutoNotify()).isEqualTo(
+                scheduledAction.shouldAutoNotify());
+        assertThat(scheduledActionFromDb.isEnabled()).isEqualTo(
+                scheduledAction.isEnabled());
+        assertThat(scheduledActionFromDb.getStartTime()).isEqualTo(
+                scheduledAction.getStartTime());
+        assertThat(scheduledActionFromDb.getEndTime()).isEqualTo(
+                scheduledAction.getEndTime());
+        assertThat(scheduledActionFromDb.getLastRunTime()).isEqualTo(
+                scheduledAction.getLastRunTime());
+        assertThat(scheduledActionFromDb.getExecutionCount()).isEqualTo(
+                scheduledAction.getExecutionCount());
+        assertThat(scheduledActionFromDb.getRecurrence()).isEqualTo(
+                scheduledAction.getRecurrence());
+        assertThat(scheduledActionFromDb.getTag()).isEqualTo(
+                scheduledAction.getTag());
+    }
 }

From d326bb4b446f2fccfe591a81c4c6c640654cceb8 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 30 Jun 2016 10:25:58 +0200
Subject: [PATCH 084/121] Update German, Spanish, Norwegian, Korean and Chinese
 translations

---
 app/src/main/res/values-de/strings.xml     |  46 +-
 app/src/main/res/values-es/strings.xml     |  76 +--
 app/src/main/res/values-ko-rKR/strings.xml | 736 ++++++++++++++---------------
 app/src/main/res/values-nb/strings.xml     |  10 +-
 app/src/main/res/values-no-rNO/strings.xml |  34 +-
 app/src/main/res/values-zh-rCN/strings.xml |  12 +-
 6 files changed, 454 insertions(+), 460 deletions(-)

diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 045b6232..abb15c41 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -66,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>Senden an&#8230;</item>
   </string-array>
   <string name="btn_move">Verschieben</string>
   <string name="title_move_transactions">%1$d Buchung(en) verschieben</string>
@@ -277,11 +277,11 @@
   <string name="label_tap_to_create_schedule">Wiederholung erstellen</string>
   <string name="title_restore_backup">Sicherung wiederherstellen&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; Exporte</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference">DropBox aktivieren</string>
+  <string name="title_owncloud_sync_preference">OwnCloud aktivieren </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_dropbox_sync">Dropbox-Export aktivieren</string>
+  <string name="summary_owncloud_sync">ownCload-Export aktivieren</string>
   <string name="title_select_gnucash_xml_file">GnuCash XML Datei auswhlen</string>
   <string name="title_backup_prefs">Sicherungs-Einstellungen</string>
   <string name="title_create_backup_pref">Sicherung erstellen</string>
@@ -290,8 +290,8 @@
   <string name="toast_backup_successful">Sicherung erfolgreich</string>
   <string name="toast_backup_failed">Sicherung fehlgeschlagen</string>
   <string name="export_warning_xml">Alle Konten und Buchungen werden exportiert</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Google Drive aktivieren</string>
+  <string name="summary_google_drive_sync">Google Drive - Export aktivieren</string>
   <string name="toast_install_file_manager">Installieren Sie einen Dateimanager um Dateien auszuwhlen</string>
   <string name="title_select_backup_to_restore">Whle eine Sicherungskopie</string>
   <string name="nav_menu_favorites">Favoriten</string>
@@ -300,16 +300,16 @@
   <string name="nav_menu_scheduled_transactions">Geplante Buchungen</string>
   <string name="nav_menu_export">Exportieren&#8230;</string>
   <string name="nav_menu_settings">Einstellungen</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
+  <string name="username">Benutzername</string>
+  <string name="password">Passwort</string>
   <string name="owncloud_pref">owncloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">OC-Server nicht gefunden</string>
+  <string name="owncloud_user_invalid">OC Benutzername/Kennwort ungltig</string>
+  <string name="owncloud_dir_invalid">Ungltige Zeichen: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC-Server OK</string>
+  <string name="owncloud_user_ok">OC Benutzername/Passwort OK</string>
+  <string name="owncloud_dir_ok">Dir-Name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Tglich</item>
     <item quantity="other">Jeden %d. Tag</item>
@@ -398,16 +398,16 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="summary_google_plus">Teile deine Ideen und Verbesserungsvorschlge mit oder berichte ber Probleme mit GnuCash</string>
   <string name="summary_translate_gnucash">bersetze oder korrigiere bersetzungen auf CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">Es gibt keine kompatible App, welche die exportierten Buchungen empfangen kann!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
+  <string name="menu_move_transaction">Bewegen&#8230;</string>
   <string name="menu_duplicate_transaction">Kopieren</string>
   <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_cash_flow_report">Geldfluss</string>
   <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="title_use_compact_list">Kompaktansicht verwenden</string>
   <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="error_invalid_exchange_rate">Ungltiger Wechselkurs</string>
+  <string name="sample_exchange_rate">z. B. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Ungltiger Betrag</string>
   <string-array name="report_time_range">
     <item>Aktueller Monat</item>
     <item>Letzte 3 Monate</item>
@@ -438,8 +438,8 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="digit_nine_text">WXYZ</string>
   <string name="digit_zero">0</string>
   <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="title_manage_books">Bcher verwalten</string>
+  <string name="menu_manage_books">Bcher verwalten&#8230;</string>
   <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
   <string name="title_confirm_delete_book">Confirm delete Book</string>
   <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index e13dcf77..24e31266 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -25,7 +25,7 @@
   <string name="label_account_name">Nombre de la cuenta</string>
   <string name="btn_cancel">Cancelar</string>
   <string name="btn_save">Guardar</string>
-  <string name="btn_test">Test</string>
+  <string name="btn_test">Probar</string>
   <string name="label_passcode">Introducir contrasea</string>
   <string name="toast_wrong_passcode">Contrasea incorrecta, intentar otra vez</string>
   <string name="toast_passcode_set">Contrasea establecida</string>
@@ -66,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>Enviar a&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
   <string name="title_move_transactions">Mover %1$d transaccin(es)</string>
@@ -277,11 +277,11 @@
   <string name="label_tap_to_create_schedule">Toque para crear la programacin</string>
   <string name="title_restore_backup">Restaurar copia de seguridad&#8230;</string>
   <string name="header_backup_and_export_settings">Copia de seguridad y exportacin</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference">Habilitar DropBox</string>
+  <string name="title_owncloud_sync_preference">Habilitar ownCloud</string>
   <string name="title_backup_preference_category">Copia de seguridad</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_dropbox_sync">Habilitar exportar a DropBox</string>
+  <string name="summary_owncloud_sync">Habilitar exportar a ownCloud</string>
   <string name="title_select_gnucash_xml_file">Seleccionar archivo XML GnuCash</string>
   <string name="title_backup_prefs">Preferencias de copia de seguridad</string>
   <string name="title_create_backup_pref">Crear copia de seguridad</string>
@@ -290,8 +290,8 @@
   <string name="toast_backup_successful">Copia de seguridad exitosa</string>
   <string name="toast_backup_failed">Copia de seguridad fallida</string>
   <string name="export_warning_xml">Exportar todas las cuentas y transacciones</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Habilitar Google Drive</string>
+  <string name="summary_google_drive_sync">Habilitar exportar a Google Drive</string>
   <string name="toast_install_file_manager">Instale un gestor de archivos para seleccionar archivos</string>
   <string name="title_select_backup_to_restore">Seleccione la copia de seguridad a restaurar</string>
   <string name="nav_menu_favorites">Favoritos</string>
@@ -300,16 +300,16 @@
   <string name="nav_menu_scheduled_transactions">Transacciones Programadas</string>
   <string name="nav_menu_export">Exportar&#8230;</string>
   <string name="nav_menu_settings">Ajustes</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
-  <string name="owncloud_pref">owncloud</string>
+  <string name="username">Nombre de usuario</string>
+  <string name="password">Contrasea</string>
+  <string name="owncloud_pref">ownCloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">Servidor OC no encontrado</string>
+  <string name="owncloud_user_invalid">Usuario/contrasea OC no vlidos</string>
+  <string name="owncloud_dir_invalid">Caracteres invlidos: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">Servidor OC correcto</string>
+  <string name="owncloud_user_ok">Usuario/contrasea OC correctos</string>
+  <string name="owncloud_dir_ok">Nombre del directorio correcto</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Diario</item>
     <item quantity="other">Cada %d das</item>
@@ -398,16 +398,16 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="summary_google_plus">Compartir ideas, discutir cambios o reportar problemas</string>
   <string name="summary_translate_gnucash">Traducir o revisar en CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No hay aplicaciones compatibles para recibir las transacciones exportadas!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
+  <string name="menu_move_transaction">Mover&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
-  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="nav_menu_budgets">Presupuesto</string>
+  <string name="title_cash_flow_report">Flujo de efectivo</string>
+  <string name="title_budgets">Presupuestos</string>
+  <string name="title_use_compact_list">Activar la vista compacta</string>
+  <string name="summary_use_compact_list">Activar para usar siempre la vista compacta en la lista de transacciones</string>
+  <string name="error_invalid_exchange_rate">Tipo de cambio no vlido</string>
+  <string name="sample_exchange_rate">p.ej. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Cantidad no vlida</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
@@ -438,16 +438,16 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="digit_nine_text">WXYZ</string>
   <string name="digit_zero">0</string>
   <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
-  <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
-  <string name="menu_title_new_book">New Book</string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
-  <string name="label_split_count">%1$d splits</string>
-  <string name="label_inside_account_with_name">in %1$s</string>
+  <string name="title_manage_books">Administrar libros</string>
+  <string name="menu_manage_books">Administrar libros&#8230;</string>
+  <string name="select_chart_to_view_details">Seleccione cualquier parte del grfico para ver los detalles</string>
+  <string name="title_confirm_delete_book">Confirmar borrar libro</string>
+  <string name="msg_all_book_data_will_be_deleted">Se eliminarn todas las cuentas y transacciones en este libro!</string>
+  <string name="btn_delete_book">Borrar el libro</string>
+  <string name="label_last_export_time">ltima exportacin:</string>
+  <string name="menu_title_enable_sync">Habilitar sincronizacin</string>
+  <string name="menu_title_new_book">Nuevo libro</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">La transaccin seleccionada tiene ningn desglose y no se puede abrir</string>
+  <string name="label_split_count">%1$d desglose</string>
+  <string name="label_inside_account_with_name">en %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index 0e127f76..640361a1 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -16,184 +16,182 @@
  limitations under the License.
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-  <string name="title_create_account">Create Account</string>
-  <string name="title_edit_account">Edit Account</string>
-  <string name="info_details">Info</string>
-  <string name="menu_export">Export&#8230;</string>
-  <string name="description_add_transaction_icon">Add a new transaction to an account</string>
-  <string name="label_no_accounts">No accounts to display</string>
-  <string name="label_account_name">Account name</string>
-  <string name="btn_cancel">Cancel</string>
-  <string name="btn_save">Save</string>
-  <string name="btn_test">Test</string>
-  <string name="label_passcode">Enter Passcode</string>
-  <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
-  <string name="toast_passcode_set">Passcode set</string>
-  <string name="label_confirm_passcode">Please confirm your passcode</string>
-  <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
-  <string name="label_transaction_name">Description</string>
-  <string name="label_transaction_amount">Amount</string>
-  <string name="title_add_transaction">New transaction</string>
-  <string name="label_no_transactions">No transactions to display</string>
-  <string name="label_timeanddate">DATE &amp; TIME</string>
-  <string name="label_account">Account</string>
-  <string name="label_debit">DEBIT</string>
-  <string name="label_credit">CREDIT</string>
-  <string name="title_accounts">Accounts</string>
-  <string name="title_transactions">Transactions</string>
-  <string name="menu_delete">Delete</string>
-  <string name="alert_dialog_ok_delete">Delete</string>
-  <string name="alert_dialog_cancel">Cancel</string>
-  <string name="toast_account_deleted">Account deleted</string>
-  <string name="title_confirm_delete">Confirm delete</string>
-  <string name="delete_account_confirmation_message">All transactions in this account will also be deleted</string>
-  <string name="title_edit_transaction">Edit Transaction</string>
-  <string name="label_transaction_description">Add note</string>
-  <string name="menu_move">MOVE</string>
-  <string name="title_selected">%1$d selected</string>
-  <string name="label_account_balance">Balance:</string>
-  <string name="label_export_destination">Export To:</string>
-  <string name="title_export_dialog">Export Transactions</string>
-  <string name="option_export_all_transactions">Export all transactions</string>
-  <string name="hint_export_choice">By default, only new transactions since last export will be exported. Check this option to export all transactions</string>
-  <string name="toast_export_error">Error exporting %1$s file</string>
-  <string name="btn_export">Export</string>
-  <string name="option_delete_after_export">Delete transactions after export</string>
-  <string name="hint_delete_after_export">All exported transactions will be deleted when exporting is completed</string>
-  <string name="title_settings">Settings</string>
+  <string name="title_create_account"> </string>
+  <string name="title_edit_account"> </string>
+  <string name="info_details"></string>
+  <string name="menu_export">...</string>
+  <string name="description_add_transaction_icon">   </string>
+  <string name="label_no_accounts"> </string>
+  <string name="label_account_name"> </string>
+  <string name="btn_cancel"></string>
+  <string name="btn_save"></string>
+  <string name="btn_test"></string>
+  <string name="label_passcode"> </string>
+  <string name="toast_wrong_passcode">  .   .</string>
+  <string name="toast_passcode_set"> .</string>
+  <string name="label_confirm_passcode">  .</string>
+  <string name="toast_invalid_passcode_confirmation"> .   .</string>
+  <string name="label_transaction_name"></string>
+  <string name="label_transaction_amount"></string>
+  <string name="title_add_transaction"> </string>
+  <string name="label_no_transactions">  .</string>
+  <string name="label_timeanddate">  </string>
+  <string name="label_account"></string>
+  <string name="label_debit"></string>
+  <string name="label_credit"></string>
+  <string name="title_accounts"></string>
+  <string name="title_transactions"></string>
+  <string name="menu_delete"></string>
+  <string name="alert_dialog_ok_delete"></string>
+  <string name="alert_dialog_cancel"></string>
+  <string name="toast_account_deleted"> .</string>
+  <string name="title_confirm_delete"> </string>
+  <string name="delete_account_confirmation_message">    </string>
+  <string name="title_edit_transaction"> </string>
+  <string name="label_transaction_description"> </string>
+  <string name="menu_move"></string>
+  <string name="title_selected">%1$d </string>
+  <string name="label_account_balance">:</string>
+  <string name="label_export_destination"> :</string>
+  <string name="title_export_dialog"> </string>
+  <string name="option_export_all_transactions">  </string>
+  <string name="hint_export_choice">      .    .</string>
+  <string name="toast_export_error">%1$s     .</string>
+  <string name="btn_export"></string>
+  <string name="option_delete_after_export">   </string>
+  <string name="hint_delete_after_export">     .</string>
+  <string name="title_settings"></string>
   <string-array name="export_destinations">
-    <item>SD Card</item>
+    <item>SD </item>
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>  ...</item>
   </string-array>
-  <string name="btn_move">Move</string>
-  <string name="title_move_transactions">Move %1$d transaction(s)</string>
-  <string name="label_move_destination">Destination Account</string>
-  <string name="permission_access_sdcard">Access SD Card</string>
-  <string name="toast_incompatible_currency">Cannot move transactions.\nThe destination account uses a different currency from origin account</string>
-  <string name="header_general_settings">General</string>
-  <string name="header_about_gnucash">About</string>
-  <string name="title_choose_currency">Choose default currency</string>
-  <string name="title_default_currency">Default currency</string>
-  <string name="summary_default_currency">Default currency to assign to new accounts</string>
-  <string name="label_permission_record_transactions">Enables recording transactions in GnuCash for Android</string>
-  <string name="label_permission_create_accounts">Enables creation of accounts in GnuCash for Android</string>
-  <string name="label_permission_group">Your GnuCash data</string>
-  <string name="description_permission_group">Read and modify GnuCash data</string>
-  <string name="label_permission_record_transaction">Record transactions in GnuCash</string>
-  <string name="label_permission_create_account">Create accounts in GnuCash</string>
-  <string name="label_display_account">Display account</string>
-  <string name="btn_create_accounts">Create Accounts</string>
-  <string name="title_default_accounts">Select accounts to create</string>
-  <string name="error_no_accounts">No accounts exist in GnuCash.\nCreate an account before adding a widget</string>
-  <string name="title_build_version">Build version</string>
-  <string name="title_license">License</string>
-  <string name="summary_licence_details">Apache License v2.0. Click for details</string>
-  <string name="title_general_prefs">General Preferences</string>
-  <string name="label_widget_configuration">Select Account</string>
-  <string name="toast_no_transactions_to_export">There are no transactions available to export</string>
-  <string name="header_passcode_settings">Passcode</string>
-  <string name="title_passcode_preferences">Passcode Preferences</string>
-  <string name="title_passcode_enabled">Passcode Turned On</string>
-  <string name="title_passcode_disabled">Passcode Turned Off</string>
-  <string name="title_change_passcode">Change Passcode</string>
-  <string name="title_about_gnucash">About GnuCash</string>
-  <string name="summary_about_gnucash">A mobile finance management and expense-tracker designed for Android</string>
-  <string name="title_about">About</string>
-  <string name="toast_format_exported_to">%1$s file exported to:\n</string>
-  <string name="title_export_email">GnuCash Android %1$s export</string>
-  <string name="description_export_email">GnuCash Android Export from </string>
-  <string name="header_transaction_settings">Transactions</string>
-  <string name="title_transaction_preferences">Transaction Preferences</string>
-  <string name="title_account_preferences">Account Preferences</string>
-  <string name="title_default_transaction_type">Default Transaction Type</string>
-  <string name="summary_default_transaction_type">The type of transaction to use by default, CREDIT or DEBIT</string>
+  <string name="btn_move"></string>
+  <string name="title_move_transactions">%1$d  </string>
+  <string name="label_move_destination"> </string>
+  <string name="permission_access_sdcard">SD  </string>
+  <string name="toast_incompatible_currency">   . \n     .</string>
+  <string name="header_general_settings"></string>
+  <string name="header_about_gnucash"></string>
+  <string name="title_choose_currency">  </string>
+  <string name="title_default_currency"> </string>
+  <string name="summary_default_currency">    </string>
+  <string name="label_permission_record_transactions"> GnuCash   </string>
+  <string name="label_permission_create_accounts"> GnuCash   </string>
+  <string name="label_permission_group">GnuCash </string>
+  <string name="description_permission_group">GnuCash  /</string>
+  <string name="label_permission_record_transaction">GnuCash  </string>
+  <string name="label_permission_create_account">GnuCash  </string>
+  <string name="label_display_account"> </string>
+  <string name="btn_create_accounts"> </string>
+  <string name="title_default_accounts">  </string>
+  <string name="error_no_accounts">GnuCash  .\n    </string>
+  <string name="title_build_version"> </string>
+  <string name="title_license"></string>
+  <string name="summary_licence_details">  v 2.0.    </string>
+  <string name="title_general_prefs"> </string>
+  <string name="label_widget_configuration"> </string>
+  <string name="toast_no_transactions_to_export">  </string>
+  <string name="header_passcode_settings"></string>
+  <string name="title_passcode_preferences"> </string>
+  <string name="title_passcode_enabled"> </string>
+  <string name="title_passcode_disabled"> </string>
+  <string name="title_change_passcode"> </string>
+  <string name="title_about_gnucash">GnuCash </string>
+  <string name="summary_about_gnucash">    </string>
+  <string name="title_about"> </string>
+  <string name="toast_format_exported_to">%1$s   :\n</string>
+  <string name="title_export_email"> GnuCash %1$s </string>
+  <string name="description_export_email"> GnuCash . : </string>
+  <string name="header_transaction_settings"></string>
+  <string name="title_transaction_preferences"> </string>
+  <string name="title_account_preferences"> </string>
+  <string name="title_default_transaction_type">  </string>
+  <string name="summary_default_transaction_type">   ,   </string>
   <string-array name="transaction_types">
-    <item>CREDIT</item>
-    <item>DEBIT</item>
+    <item></item>
+    <item></item>
   </string-array>
-  <string name="msg_delete_all_transactions_confirmation">Are you sure you want to delete ALL transactions?</string>
-  <string name="msg_delete_transaction_confirmation">Are you sure you want to delete this transaction?</string>
-  <string name="title_export_preference_category">Export</string>
-  <string name="title_export_all_transactions">Export all transactions</string>
-  <string name="title_always_delete_exported_transactions">Delete exported transactions</string>
-  <string name="title_default_export_email">Default export email</string>
-  <string name="summary_default_export_email">The default email address to send exports to. You can still change this when you export.</string>
-  <string name="label_double_entry_account">Transfer Account</string>
-  <string name="summary_use_double_entry">All transactions will be a transfer from one account to another</string>
-  <string name="title_use_double_entry">Activate Double Entry</string>
-  <string name="account_balance">Balance</string>
-  <string name="toast_no_account_name_entered">Enter an account name to create an account</string>
-  <string name="label_account_currency">Currency</string>
-  <string name="label_parent_account">Parent account</string>
-  <string name="title_xml_ofx_header">Use XML OFX header</string>
-  <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
-  <string name="title_whats_new">What\'s New</string>
+  <string name="msg_delete_all_transactions_confirmation">   ?</string>
+  <string name="msg_delete_transaction_confirmation">   ?</string>
+  <string name="title_export_preference_category"></string>
+  <string name="title_export_all_transactions">  </string>
+  <string name="title_always_delete_exported_transactions">  </string>
+  <string name="title_default_export_email">  </string>
+  <string name="summary_default_export_email">     .      .</string>
+  <string name="label_double_entry_account"> </string>
+  <string name="summary_use_double_entry">         </string>
+  <string name="title_use_double_entry"> </string>
+  <string name="account_balance"></string>
+  <string name="toast_no_account_name_entered">   </string>
+  <string name="label_account_currency"></string>
+  <string name="label_parent_account"> </string>
+  <string name="title_xml_ofx_header">XML OFX  </string>
+  <string name="summary_xml_ofx_header"> GnuCash       </string>
+  <string name="title_whats_new"> </string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
-        - Multiple bug fixes and improvements\n
+        -    \n
+        -     \n
+        -  \n
+        -   \n
+        -    \n
+        -     \n
 	</string>
-  <string name="label_dismiss">Dismiss</string>
-  <string name="toast_transanction_amount_required">Enter an amount to save the transaction</string>
-  <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
-  <string name="menu_import_accounts">Import GnuCash Accounts</string>
-  <string name="btn_import_accounts">Import Accounts</string>
-  <string name="toast_error_importing_accounts">An error occurred while importing the GnuCash accounts</string>
-  <string name="toast_success_importing_accounts">GnuCash Accounts successfully imported</string>
-  <string name="summary_import_accounts">Import account structure exported from GnuCash desktop</string>
-  <string name="title_import_accounts">Import GnuCash XML</string>
-  <string name="summary_delete_all_accounts">Delete all accounts in the database. All transactions will be deleted as
-        well.
+  <string name="label_dismiss"></string>
+  <string name="toast_transanction_amount_required">    </string>
+  <string name="toast_error_edit_multi_currency_transaction">     .</string>
+  <string name="menu_import_accounts">GnuCash  </string>
+  <string name="btn_import_accounts"> </string>
+  <string name="toast_error_importing_accounts">GnuCash     .</string>
+  <string name="toast_success_importing_accounts">GnuCash  </string>
+  <string name="summary_import_accounts"> GnuCash    .</string>
+  <string name="title_import_accounts">GnuCash XML </string>
+  <string name="summary_delete_all_accounts">    .    </string>
+  <string name="title_delete_all_accounts">  </string>
+  <string name="header_account_settings"></string>
+  <string name="toast_all_accounts_deleted">  </string>
+  <string name="confirm_delete_all_accounts">   ?\n\n
+          !
     </string>
-  <string name="title_delete_all_accounts">Delete all accounts</string>
-  <string name="header_account_settings">Accounts</string>
-  <string name="toast_all_accounts_deleted">All accounts have been successfully deleted</string>
-  <string name="confirm_delete_all_accounts">Are you sure you want to delete all accounts and transactions?\n\nThis
-        operation cannot be undone!
-    </string>
-  <string name="label_account_type">Account Type</string>
-  <string name="summary_delete_all_transactions">All transactions in all accounts will be deleted!</string>
-  <string name="title_delete_all_transactions">Delete all transactions</string>
-  <string name="toast_all_transactions_deleted">All transactions successfully deleted!</string>
-  <string name="title_progress_importing_accounts">Importing accounts</string>
-  <string name="toast_tap_again_to_confirm_delete">Tap again to confirm. ALL entries will be deleted!!</string>
-  <string name="section_header_transactions">Transactions</string>
-  <string name="section_header_subaccounts">Sub-Accounts</string>
-  <string name="menu_search_accounts">Search</string>
-  <string name="title_default_export_format">Default Export Format</string>
-  <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
-  <string name="menu_export_transactions">Export transactions&#8230;</string>
-  <string name="label_recurring_transaction">Recurrence</string>
+  <string name="label_account_type"> </string>
+  <string name="summary_delete_all_transactions">    !</string>
+  <string name="title_delete_all_transactions">  </string>
+  <string name="toast_all_transactions_deleted">  !</string>
+  <string name="title_progress_importing_accounts"> </string>
+  <string name="toast_tap_again_to_confirm_delete">    .   !!</string>
+  <string name="section_header_transactions"></string>
+  <string name="section_header_subaccounts"> </string>
+  <string name="menu_search_accounts"></string>
+  <string name="title_default_export_format">  </string>
+  <string name="summary_default_export_format">     </string>
+  <string name="menu_export_transactions"> &#8230;</string>
+  <string name="label_recurring_transaction"></string>
   <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
-  <string name="imbalance_account_name">Imbalance</string>
-  <string name="title_progress_exporting_transactions">Exporting transactions</string>
-  <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
-  <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
-  <string name="label_placeholder_account">Placeholder account</string>
+  <string name="imbalance_account_name"></string>
+  <string name="title_progress_exporting_transactions">  </string>
+  <string name="label_no_recurring_transactions">  </string>
+  <string name="toast_recurring_transaction_deleted">  </string>
+  <string name="label_placeholder_account"> </string>
   <string name="label_default_transfer_account">Default Transfer Account</string>
   <plurals name="label_sub_accounts">
-    <item quantity="other">%d sub-accounts</item>
+    <item quantity="other">%d  </item>
   </plurals>
   <string-array name="account_type_entry_values">
-    <item>CASH</item>
-    <item>BANK</item>
-    <item>CREDIT CARD</item>
-    <item>ASSET</item>
-    <item>LIABILITY</item>
-    <item>INCOME</item>
-    <item>EXPENSE</item>
-    <item>PAYABLE</item>
-    <item>RECEIVABLE</item>
-    <item>EQUITY</item>
-    <item>CURRENCY</item>
-    <item>STOCK</item>
-    <item>MUTUAL FUND</item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item> </item>
     <item>TRADING</item>
   </string-array>
   <string-array name="export_formats">
@@ -202,250 +200,246 @@
     <item>XML</item>
   </string-array>
   <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
-  <string name="color_picker_default_title">Select a Color</string>
+  <string name="color_picker_default_title"> </string>
   <!-- Content description for a color square. -->
   <!-- Content description for a selected color square. -->
-  <string name="label_account_color_and_type">Account Color &amp; Type</string>
-  <string name="label_delete_sub_accounts">Delete sub-accounts</string>
-  <string name="title_recent_accounts">Recent</string>
-  <string name="title_favorite_accounts">Favorites</string>
-  <string name="title_all_accounts">All</string>
-  <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
-  <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
-  <string name="menu_scheduled_transactions">Scheduled Transactions</string>
-  <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
-        a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
-        available in app Settings so you can decide later.
-    </string>
-  <string name="title_scheduled_transactions">Transactions</string>
-  <string name="title_select_export_destination">Select destination for export</string>
-  <string name="hint_split_memo">Memo</string>
-  <string name="label_spend">Spend</string>
-  <string name="label_receive">Receive</string>
-  <string name="label_withdrawal">Withdrawal</string>
-  <string name="label_deposit">Deposit</string>
-  <string name="label_payment">Payment</string>
-  <string name="label_charge">Charge</string>
-  <string name="label_decrease">Decrease</string>
-  <string name="label_increase">Increase</string>
-  <string name="label_income">Income</string>
-  <string name="label_rebate">Rebate</string>
-  <string name="label_expense">Expense</string>
-  <string name="label_bill">Bill</string>
-  <string name="label_invoice">Invoice</string>
-  <string name="label_buy">Buy</string>
-  <string name="label_sell">Sell</string>
-  <string name="label_repeats">Repeats</string>
-  <string name="toast_no_recent_backup">No recent backup found</string>
-  <string name="account_name_opening_balances">Opening Balances</string>
-  <string name="account_name_equity">Equity</string>
-  <string name="summary_save_opening_balances">Enable to save the current account balance (before deleting transactions) as new opening balance after deleting transactions
-    </string>
-  <string name="title_save_opening_balances">Save account opening balances</string>
-  <string name="export_warning_ofx">OFX does not support double-entry transactions</string>
-  <string name="export_warning_qif">Generates separate QIF files per currency</string>
-  <string name="title_transaction_splits">Transaction splits</string>
-  <string name="label_imbalance">Imbalance:</string>
-  <string name="btn_add_split">Add split</string>
-  <string name="menu_title_favorite">Favorite</string>
+  <string name="label_account_color_and_type">  </string>
+  <string name="label_delete_sub_accounts">  </string>
+  <string name="title_recent_accounts"> </string>
+  <string name="title_favorite_accounts"> </string>
+  <string name="title_all_accounts"> </string>
+  <string name="summary_create_default_accounts">GnuCash     .</string>
+  <string name="title_create_default_accounts">  </string>
+  <string name="msg_confirm_create_default_accounts_setting">     . \n\n?</string>
+  <string name="menu_scheduled_transactions"></string>
+  <string name="msg_confirm_create_default_accounts_first_run"> GnuCash  ! \n    ,   GnuCash    . \n\n         .    </string>
+  <string name="title_scheduled_transactions"></string>
+  <string name="title_select_export_destination">  </string>
+  <string name="hint_split_memo"></string>
+  <string name="label_spend"></string>
+  <string name="label_receive"></string>
+  <string name="label_withdrawal"></string>
+  <string name="label_deposit"></string>
+  <string name="label_payment"></string>
+  <string name="label_charge"></string>
+  <string name="label_decrease"></string>
+  <string name="label_increase"></string>
+  <string name="label_income"></string>
+  <string name="label_rebate"></string>
+  <string name="label_expense"></string>
+  <string name="label_bill"></string>
+  <string name="label_invoice"></string>
+  <string name="label_buy"></string>
+  <string name="label_sell"></string>
+  <string name="label_repeats"></string>
+  <string name="toast_no_recent_backup">  </string>
+  <string name="account_name_opening_balances"> </string>
+  <string name="account_name_equity"></string>
+  <string name="summary_save_opening_balances">      .    </string>
+  <string name="title_save_opening_balances">  </string>
+  <string name="export_warning_ofx">OFX      </string>
+  <string name="export_warning_qif">  QIF  </string>
+  <string name="title_transaction_splits"> </string>
+  <string name="label_imbalance">:</string>
+  <string name="btn_add_split"> </string>
+  <string name="menu_title_favorite"></string>
   <string name="drawer_open">Navigation drawer opened</string>
   <string name="drawer_close">Navigation drawer closed</string>
-  <string name="title_reports">Reports</string>
-  <string name="title_pie_chart">Pie Chart</string>
-  <string name="title_line_chart">Line Chart</string>
-  <string name="title_bar_chart">Bar Chart</string>
-  <string name="title_report_prefs">Report Preferences</string>
-  <string name="label_report_currency">Select currency</string>
-  <string name="title_use_account_color">Account color in reports</string>
-  <string name="summary_use_account_color">Use account color in the bar/pie chart</string>
-  <string name="header_report_settings">Reports</string>
-  <string name="menu_order_by_size">Order by size</string>
-  <string name="menu_toggle_legend">Show legend</string>
-  <string name="menu_toggle_labels">Show labels</string>
-  <string name="menu_toggle_percentage_mode">Show percentage</string>
+  <string name="title_reports"></string>
+  <string name="title_pie_chart"> </string>
+  <string name="title_line_chart"> </string>
+  <string name="title_bar_chart"> </string>
+  <string name="title_report_prefs"> </string>
+  <string name="label_report_currency"> </string>
+  <string name="title_use_account_color">   </string>
+  <string name="summary_use_account_color">/    </string>
+  <string name="header_report_settings"></string>
+  <string name="menu_order_by_size"></string>
+  <string name="menu_toggle_legend"> </string>
+  <string name="menu_toggle_labels"> </string>
+  <string name="menu_toggle_percentage_mode"> </string>
   <string name="menu_toggle_average_lines">Show average lines</string>
   <string name="menu_group_smaller_slices">Group Smaller Slices</string>
-  <string name="label_chart_no_data">No chart data available</string>
-  <string name="label_chart_overall">Overall</string>
-  <string name="label_chart_total">Total</string>
-  <string name="label_other_slice">Other</string>
-  <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+  <string name="label_chart_no_data">  </string>
+  <string name="label_chart_overall"></string>
+  <string name="label_chart_total"></string>
+  <string name="label_other_slice"></string>
+  <string name="toast_chart_percentage_mode_total">   </string>
   <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
   <string name="label_save_template">Save as template</string>
-  <string name="label_delete_account_transactions_description">This account contains transactions. \nWhat would you like to do with these transactions</string>
-  <string name="label_delete_account_subaccounts_description">This account contains sub-accounts. \nWhat would you like to do with these sub-accounts</string>
-  <string name="label_delete_transactions">Delete transactions</string>
-  <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
-  <string name="label_tap_to_create_schedule">Tap to create schedule</string>
-  <string name="title_restore_backup">Restore Backup&#8230;</string>
-  <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
-  <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
-  <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
-  <string name="title_backup_prefs">Backup Preferences</string>
-  <string name="title_create_backup_pref">Create Backup</string>
-  <string name="summary_create_backup_pref">By default backups are saved to the SDCARD</string>
-  <string name="summary_restore_backup_pref">Select a specific backup to restore</string>
-  <string name="toast_backup_successful">Backup successful</string>
-  <string name="toast_backup_failed">Backup failed</string>
-  <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
-  <string name="toast_install_file_manager">Install a file manager to select files</string>
-  <string name="title_select_backup_to_restore">Select backup to restore</string>
-  <string name="nav_menu_favorites">Favorites</string>
-  <string name="nav_menu_open">Open&#8230;</string>
-  <string name="nav_menu_reports">Reports</string>
-  <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
-  <string name="nav_menu_export">Export&#8230;</string>
-  <string name="nav_menu_settings">Settings</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
+  <string name="label_delete_account_transactions_description">  . \n  </string>
+  <string name="label_delete_account_subaccounts_description">  . \n   </string>
+  <string name="label_delete_transactions"> </string>
+  <string name="toast_disable_double_entry_to_save_transaction">     ,   </string>
+  <string name="label_tap_to_create_schedule">  </string>
+  <string name="title_restore_backup">  </string>
+  <string name="header_backup_and_export_settings"> </string>
+  <string name="title_dropbox_sync_preference">DropBox </string>
+  <string name="title_owncloud_sync_preference">ownCloud  </string>
+  <string name="title_backup_preference_category"></string>
+  <string name="summary_dropbox_sync">DropBox  </string>
+  <string name="summary_owncloud_sync">ownCloud  </string>
+  <string name="title_select_gnucash_xml_file">GnuCash XML  </string>
+  <string name="title_backup_prefs"> </string>
+  <string name="title_create_backup_pref"> </string>
+  <string name="summary_create_backup_pref">  SD </string>
+  <string name="summary_restore_backup_pref">   </string>
+  <string name="toast_backup_successful"></string>
+  <string name="toast_backup_failed"> </string>
+  <string name="export_warning_xml">    </string>
+  <string name="title_google_drive_sync_pref">  </string>
+  <string name="summary_google_drive_sync">   </string>
+  <string name="toast_install_file_manager">     </string>
+  <string name="title_select_backup_to_restore">   </string>
+  <string name="nav_menu_favorites"></string>
+  <string name="nav_menu_open">...</string>
+  <string name="nav_menu_reports"></string>
+  <string name="nav_menu_scheduled_transactions"></string>
+  <string name="nav_menu_export">...</string>
+  <string name="nav_menu_settings"></string>
+  <string name="username"> </string>
+  <string name="password"></string>
   <string name="owncloud_pref">owncloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">Owncloud    </string>
+  <string name="owncloud_user_invalid">Owncloud      </string>
+  <string name="owncloud_dir_invalid">   : \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">Owncloud </string>
+  <string name="owncloud_user_ok">  </string>
+  <string name="owncloud_dir_ok"> </string>
   <plurals name="label_every_x_days">
-    <item quantity="other">Every %d days</item>
+    <item quantity="other">%d</item>
   </plurals>
   <plurals name="label_every_x_weeks">
-    <item quantity="other">Every %d weeks</item>
+    <item quantity="other">%d</item>
   </plurals>
   <plurals name="label_every_x_months">
-    <item quantity="other">Every %d months</item>
+    <item quantity="other">%d</item>
   </plurals>
   <plurals name="label_every_x_years">
-    <item quantity="other">Every %d years</item>
+    <item quantity="other">%d</item>
   </plurals>
-  <string name="title_enable_crashlytics">Enable Crash Logging</string>
-  <string name="msg_enable_crashlytics">Automatically send information about app malfunction to the developers.</string>
-  <string name="label_export_format"> Format</string>
-  <string name="toast_backup_folder_not_found">Backup folder cannot be found. Make sure the SD Card is mounted!</string>
-  <string name="label_old_passcode">Enter your old passcode</string>
-  <string name="label_new_passcode">Enter your new passcode</string>
-  <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
-  <string name="title_scheduled_exports">Exports</string>
-  <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
-  <string name="title_create_export_schedule">Create export schedule</string>
-  <string name="toast_exported_to">Exported to: %1$s</string>
-  <string name="toast_legend_too_long">The legend is too long</string>
-  <string name="hint_account_description">Account description</string>
-  <string name="label_no_recent_accounts">No recent accounts</string>
-  <string name="label_no_favorite_accounts">No favorite accounts</string>
-  <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
-  <string name="label_scheduled_action_ended">"Ended, last executed on %1$s"</string>
-  <string name="label_select_bar_to_view_details">Select a bar to view details</string>
-  <string name="btn_wizard_next">Next</string>
-  <string name="btn_wizard_finish">Done</string>
-  <string name="wizard_title_default_currency">Default Currency</string>
-  <string name="wizard_title_account_setup">Account Setup</string>
-  <string name="wizard_title_select_currency">Select Currency</string>
-  <string name="wizard_title_feedback_options">Feedback Options</string>
-  <string name="wizard_option_create_default_accounts">Create default accounts</string>
-  <string name="wizard_option_import_my_accounts">Import my accounts</string>
-  <string name="wizard_option_let_me_handle_it">Let me handle it</string>
-  <string name="wizard_option_currency_other">Other&#8230;</string>
-  <string name="wizard_option_auto_send_crash_reports">Automatically send crash reports</string>
-  <string name="wizard_option_disable_crash_reports">Disable crash reports</string>
-  <string name="wizard_btn_back">Back</string>
-  <string name="title_setup_gnucash">Setup GnuCash</string>
-  <string name="wizard_title_welcome_to_gnucash">Welcome to GnuCash</string>
-  <string name="msg_wizard_welcome_page">Before you dive in, \nlet\'s setup a few things first\n\nTo continue, press Next</string>
+  <string name="title_enable_crashlytics">  </string>
+  <string name="msg_enable_crashlytics">       .</string>
+  <string name="label_export_format">  </string>
+  <string name="toast_backup_folder_not_found">    . SD    .</string>
+  <string name="label_old_passcode"> </string>
+  <string name="label_new_passcode"> </string>
+  <string name="nav_menu_scheduled_backups"> </string>
+  <string name="title_scheduled_exports"></string>
+  <string name="label_no_scheduled_exports_to_display">  </string>
+  <string name="title_create_export_schedule">  </string>
+  <string name="toast_exported_to"> : %1$s</string>
+  <string name="toast_legend_too_long">  </string>
+  <string name="hint_account_description"> </string>
+  <string name="label_no_recent_accounts">  </string>
+  <string name="label_no_favorite_accounts">   </string>
+  <string name="nav_menu_scheduled_actions"> </string>
+  <string name="label_scheduled_action_ended">",  %1$s "</string>
+  <string name="label_select_bar_to_view_details">   </string>
+  <string name="btn_wizard_next"></string>
+  <string name="btn_wizard_finish"></string>
+  <string name="wizard_title_default_currency"> </string>
+  <string name="wizard_title_account_setup"> </string>
+  <string name="wizard_title_select_currency"> </string>
+  <string name="wizard_title_feedback_options"> </string>
+  <string name="wizard_option_create_default_accounts">  </string>
+  <string name="wizard_option_import_my_accounts">  </string>
+  <string name="wizard_option_let_me_handle_it"> </string>
+  <string name="wizard_option_currency_other">...</string>
+  <string name="wizard_option_auto_send_crash_reports">    </string>
+  <string name="wizard_option_disable_crash_reports">  </string>
+  <string name="wizard_btn_back"></string>
+  <string name="title_setup_gnucash">GnuCash </string>
+  <string name="wizard_title_welcome_to_gnucash">GnuCash  </string>
+  <string name="msg_wizard_welcome_page">  \n  \n\n .</string>
   <string name="title_split_editor">Split Editor</string>
   <string name="toast_error_check_split_amounts">Check that all splits have valid amounts before saving!</string>
-  <string name="label_error_invalid_expression">Invalid expression!</string>
-  <string name="toast_scheduled_recurring_transaction">Scheduled recurring transaction</string>
-  <string name="error_exchange_rate_required">An exchange rate is required</string>
-  <string name="error_converted_amount_required">The converted amount is required</string>
-  <string name="title_transfer_funds">Transfer Funds</string>
-  <string name="nav_menu_help"><![CDATA[Help & Feedback]]></string>
+  <string name="label_error_invalid_expression">  !</string>
+  <string name="toast_scheduled_recurring_transaction">  </string>
+  <string name="error_exchange_rate_required"> </string>
+  <string name="error_converted_amount_required">  </string>
+  <string name="title_transfer_funds"> </string>
+  <string name="nav_menu_help"><![CDATA[ & ]]></string>
   <string name="label_select_pie_slice_to_see_details">Select a slice to see details</string>
-  <string name="label_report_period">Period:</string>
-  <string name="label_convert_from">From:</string>
-  <string name="label_convert_to">To:</string>
-  <string name="msg_provide_exchange_rate">Provide either the converted amount or exchange rate in order to transfer funds</string>
-  <string name="hint_exchange_rate">Exchange rate</string>
+  <string name="label_report_period">:</string>
+  <string name="label_convert_from">:</string>
+  <string name="label_convert_to">:</string>
+  <string name="msg_provide_exchange_rate">     .</string>
+  <string name="hint_exchange_rate"></string>
   <string name="btn_fetch_quote">Fetch quote</string>
-  <string name="hint_converted_amount">Converted Amount</string>
+  <string name="hint_converted_amount"> </string>
   <string name="title_report_sheet">Sheet</string>
-  <string name="label_last_3_months_expenses">Expenses for last 3 months</string>
-  <string name="label_total_assets">Total Assets</string>
-  <string name="label_total_liabilities">Total Liabilities</string>
-  <string name="label_net_worth">Net Worth</string>
-  <string name="label_assets">Assets</string>
-  <string name="label_liabilities">Liabilities</string>
-  <string name="label_equity">Equity</string>
-  <string name="label_total_liabilities_and_equity"><![CDATA[Total Liabilites & Equity]]></string>
-  <string name="label_move_to">Move to:</string>
+  <string name="label_last_3_months_expenses"> 3 </string>
+  <string name="label_total_assets"></string>
+  <string name="label_total_liabilities"></string>
+  <string name="label_net_worth"></string>
+  <string name="label_assets"></string>
+  <string name="label_liabilities"></string>
+  <string name="label_equity"></string>
+  <string name="label_total_liabilities_and_equity"><![CDATA[  ]]></string>
+  <string name="label_move_to"> :</string>
   <string name="menu_group_by">Group By</string>
-  <string name="menu_group_by_month">Month</string>
-  <string name="menu_group_by_quarter">Quarter</string>
-  <string name="menu_group_by_year">Year</string>
-  <string name="title_balance_sheet_report">Balance Sheet</string>
-  <string name="label_balance_sheet_total">Total:</string>
-  <string name="title_google_plus_community">Google+ Community</string>
-  <string name="title_translate_gnucash">Translate GnuCash</string>
-  <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
-  <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
-  <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
-  <string name="menu_duplicate_transaction">Duplicate</string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
-  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="menu_group_by_month"></string>
+  <string name="menu_group_by_quarter"></string>
+  <string name="menu_group_by_year"></string>
+  <string name="title_balance_sheet_report"></string>
+  <string name="label_balance_sheet_total">:</string>
+  <string name="title_google_plus_community">Google+ </string>
+  <string name="title_translate_gnucash">GnuCash </string>
+  <string name="summary_google_plus">    ,  .</string>
+  <string name="summary_translate_gnucash">CrowdIn ,  </string>
+  <string name="toast_no_compatible_apps_to_receive_export">    </string>
+  <string name="menu_move_transaction">...</string>
+  <string name="menu_duplicate_transaction"></string>
+  <string name="nav_menu_budgets"></string>
+  <string name="title_cash_flow_report"></string>
+  <string name="title_budgets"></string>
+  <string name="title_use_compact_list"> </string>
+  <string name="summary_use_compact_list">   </string>
+  <string name="error_invalid_exchange_rate"> </string>
+  <string name="sample_exchange_rate">) 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount"> </string>
   <string-array name="report_time_range">
-    <item>Current month</item>
-    <item>Last 3 months</item>
-    <item>Last 6 months</item>
-    <item>Last 12 months</item>
-    <item>All time</item>
-    <item>Custom range&#8230;</item>
+    <item></item>
+    <item> 3</item>
+    <item> 6</item>
+    <item> 12</item>
+    <item> </item>
+    <item>  </item>
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
   <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
-  <string name="digit_one_text"></string>
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
-  <string name="digit_two_text">ABC</string>
+  <string name="digit_two_text"></string>
   <string name="digit_three">3</string>
-  <string name="digit_three_text">DEF</string>
+  <string name="digit_three_text"></string>
   <string name="digit_four">4</string>
-  <string name="digit_four_text">GHI</string>
+  <string name="digit_four_text"></string>
   <string name="digit_five">5</string>
-  <string name="digit_five_text">JKL</string>
+  <string name="digit_five_text"></string>
   <string name="digit_six">6</string>
-  <string name="digit_six_text">MNO</string>
+  <string name="digit_six_text"></string>
   <string name="digit_seven">7</string>
-  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_seven_text"></string>
   <string name="digit_eight">8</string>
-  <string name="digit_eight_text">TUV</string>
+  <string name="digit_eight_text"></string>
   <string name="digit_nine">9</string>
-  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_nine_text"></string>
   <string name="digit_zero">0</string>
-  <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
-  <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
-  <string name="menu_title_new_book">New Book</string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
-  <string name="label_split_count">%1$d splits</string>
-  <string name="label_inside_account_with_name">in %1$s</string>
+  <string name="digit_zero_text"></string>
+  <string name="title_manage_books"> </string>
+  <string name="menu_manage_books"> ...</string>
+  <string name="select_chart_to_view_details">   </string>
+  <string name="title_confirm_delete_book">  </string>
+  <string name="msg_all_book_data_will_be_deleted">     !</string>
+  <string name="btn_delete_book"> </string>
+  <string name="label_last_export_time">  :</string>
+  <string name="menu_title_enable_sync"> </string>
+  <string name="menu_title_new_book"> </string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">  .    .</string>
+  <string name="label_split_count">%1$d </string>
+  <string name="label_inside_account_with_name">%1$s </string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index c48fbffd..6d2c0afd 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -273,10 +273,10 @@
   <string name="title_restore_backup">Gjenopprette sikkerhetskopi&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; eksport</string>
   <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_owncloud_sync_preference">Aktiver ownCloud </string>
   <string name="title_backup_preference_category">Sikkerhetskopiering</string>
   <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_owncloud_sync">Aktiver eksport til ownCloud</string>
   <string name="title_select_gnucash_xml_file">Velg GnuCash XML-fil</string>
   <string name="title_backup_prefs">Innstillinger for sikkerhetskopiering</string>
   <string name="title_create_backup_pref">Opprett sikkerhetskopi</string>
@@ -285,7 +285,7 @@
   <string name="toast_backup_successful">Sikkerhetskopiering vellykket</string>
   <string name="toast_backup_failed">Sikkerhetskopiering mislyktes</string>
   <string name="export_warning_xml">Eksporterer alle kontoer og transaksjoner</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="title_google_drive_sync_pref">Aktiver Google Drive</string>
   <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Installer en filbehandler for  velge filer</string>
   <string name="title_select_backup_to_restore">Velg sikkerhetskopien som skal gjenopprettes</string>
@@ -295,8 +295,8 @@
   <string name="nav_menu_scheduled_transactions">Planlagte transaksjoner</string>
   <string name="nav_menu_export">Eksport&#8230;</string>
   <string name="nav_menu_settings">Innstillinger</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
+  <string name="username">Brukernavn</string>
+  <string name="password">Passord</string>
   <string name="owncloud_pref">owncloud</string>
   <string name="owncloud_server">https://</string>
   <string name="owncloud_server_invalid">OC server not found</string>
diff --git a/app/src/main/res/values-no-rNO/strings.xml b/app/src/main/res/values-no-rNO/strings.xml
index c48fbffd..b3ee830e 100644
--- a/app/src/main/res/values-no-rNO/strings.xml
+++ b/app/src/main/res/values-no-rNO/strings.xml
@@ -58,7 +58,7 @@
   <string name="hint_export_choice">Standard eksporteres bare nye transaksjoner siden siste eksport. Merk dette alternativet for  eksportere alle transaksjoner</string>
   <string name="toast_export_error">Feil ved eksport av %1$s</string>
   <string name="btn_export">Eksporter</string>
-  <string name="option_delete_after_export">Delete transactions after export</string>
+  <string name="option_delete_after_export">Slett transaksjoner etter eksport</string>
   <string name="hint_delete_after_export">Alle eksporterte transaksjoner slettes nr eksport er fullfrt</string>
   <string name="title_settings">Innstillinger</string>
   <string-array name="export_destinations">
@@ -66,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Disk</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>Send til&#8230;</item>
   </string-array>
   <string name="btn_move">Flytt</string>
   <string name="title_move_transactions">Flytt %1$d transaksjon(er)</string>
@@ -272,10 +272,10 @@
   <string name="label_tap_to_create_schedule">Trykk for  opprette plan</string>
   <string name="title_restore_backup">Gjenopprette sikkerhetskopi&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; eksport</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference">Aktiver DropBox</string>
+  <string name="title_owncloud_sync_preference">Aktiver ownCloud </string>
   <string name="title_backup_preference_category">Sikkerhetskopiering</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_dropbox_sync">Aktiver eksportering til DropBox</string>
   <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Velg GnuCash XML-fil</string>
   <string name="title_backup_prefs">Innstillinger for sikkerhetskopiering</string>
@@ -285,8 +285,8 @@
   <string name="toast_backup_successful">Sikkerhetskopiering vellykket</string>
   <string name="toast_backup_failed">Sikkerhetskopiering mislyktes</string>
   <string name="export_warning_xml">Eksporterer alle kontoer og transaksjoner</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Aktiver Google Drive</string>
+  <string name="summary_google_drive_sync">Aktiver eksportering til Google Drive</string>
   <string name="toast_install_file_manager">Installer en filbehandler for  velge filer</string>
   <string name="title_select_backup_to_restore">Velg sikkerhetskopien som skal gjenopprettes</string>
   <string name="nav_menu_favorites">Favoritter</string>
@@ -295,8 +295,8 @@
   <string name="nav_menu_scheduled_transactions">Planlagte transaksjoner</string>
   <string name="nav_menu_export">Eksport&#8230;</string>
   <string name="nav_menu_settings">Innstillinger</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
+  <string name="username">Brukernavn</string>
+  <string name="password">Passord</string>
   <string name="owncloud_pref">owncloud</string>
   <string name="owncloud_server">https://</string>
   <string name="owncloud_server_invalid">OC server not found</string>
@@ -392,16 +392,16 @@
   <string name="summary_google_plus">Dele ideer, diskutere endringer eller rapportere problemer</string>
   <string name="summary_translate_gnucash">Oversette eller korrekturles p CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">Ingen kompatible apper til  motta de eksporterte transaksjonene!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
-  <string name="menu_duplicate_transaction">Duplicate</string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="menu_move_transaction">Flytt&#8230;</string>
+  <string name="menu_duplicate_transaction">Dupliser</string>
+  <string name="nav_menu_budgets">Budsjetter</string>
+  <string name="title_cash_flow_report">Kontantstrm</string>
+  <string name="title_budgets">Budsjetter</string>
+  <string name="title_use_compact_list">Aktiver Kompaktvisning</string>
   <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
+  <string name="error_invalid_exchange_rate">Ugyldig valutakurs</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="error_invalid_amount">Ugyldig belp</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index ac461d3b..8fefef89 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -104,7 +104,7 @@
   <string name="title_about"></string>
   <string name="toast_format_exported_to">%1$s\n</string>
   <string name="title_export_email">GnuCash Android %1$s </string>
-  <string name="description_export_email">GnuCash Android Export from </string>
+  <string name="description_export_email">GnuCash  </string>
   <string name="header_transaction_settings"></string>
   <string name="title_transaction_preferences"></string>
   <string name="title_account_preferences"></string>
@@ -121,7 +121,7 @@
   <string name="title_always_delete_exported_transactions"></string>
   <string name="title_default_export_email">Email</string>
   <string name="summary_default_export_email">OFXemail</string>
-  <string name="label_double_entry_account"></string>
+  <string name="label_double_entry_account"></string>
   <string name="summary_use_double_entry"></string>
   <string name="title_use_double_entry"></string>
   <string name="account_balance"></string>
@@ -435,12 +435,12 @@
   <string name="menu_manage_books"></string>
   <string name="select_chart_to_view_details"></string>
   <string name="title_confirm_delete_book"></string>
-  <string name="msg_all_book_data_will_be_deleted"></string>
+  <string name="msg_all_book_data_will_be_deleted"></string>
   <string name="btn_delete_book"></string>
   <string name="label_last_export_time"></string>
   <string name="menu_title_enable_sync"></string>
   <string name="menu_title_new_book"></string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
-  <string name="label_split_count">%1$d splits</string>
-  <string name="label_inside_account_with_name">in %1$s</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open"></string>
+  <string name="label_split_count">%1$d </string>
+  <string name="label_inside_account_with_name"> %1$s</string>
 </resources>

From 1aa3af1d4f54a09010ef9cc4a42b4058552f6617 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 30 Jun 2016 10:25:58 +0200
Subject: [PATCH 085/121] Update German, Spanish, Norwegian, Korean and Chinese
 translations

---
 app/src/main/res/values-de/strings.xml     |  46 +-
 app/src/main/res/values-es/strings.xml     |  76 +--
 app/src/main/res/values-ko-rKR/strings.xml | 736 ++++++++++++++---------------
 app/src/main/res/values-nb/strings.xml     |  10 +-
 app/src/main/res/values-no-rNO/strings.xml |  34 +-
 app/src/main/res/values-zh-rCN/strings.xml |  12 +-
 6 files changed, 454 insertions(+), 460 deletions(-)

diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 045b6232..abb15c41 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -66,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>Senden an&#8230;</item>
   </string-array>
   <string name="btn_move">Verschieben</string>
   <string name="title_move_transactions">%1$d Buchung(en) verschieben</string>
@@ -277,11 +277,11 @@
   <string name="label_tap_to_create_schedule">Wiederholung erstellen</string>
   <string name="title_restore_backup">Sicherung wiederherstellen&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; Exporte</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference">DropBox aktivieren</string>
+  <string name="title_owncloud_sync_preference">OwnCloud aktivieren </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_dropbox_sync">Dropbox-Export aktivieren</string>
+  <string name="summary_owncloud_sync">ownCload-Export aktivieren</string>
   <string name="title_select_gnucash_xml_file">GnuCash XML Datei auswhlen</string>
   <string name="title_backup_prefs">Sicherungs-Einstellungen</string>
   <string name="title_create_backup_pref">Sicherung erstellen</string>
@@ -290,8 +290,8 @@
   <string name="toast_backup_successful">Sicherung erfolgreich</string>
   <string name="toast_backup_failed">Sicherung fehlgeschlagen</string>
   <string name="export_warning_xml">Alle Konten und Buchungen werden exportiert</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Google Drive aktivieren</string>
+  <string name="summary_google_drive_sync">Google Drive - Export aktivieren</string>
   <string name="toast_install_file_manager">Installieren Sie einen Dateimanager um Dateien auszuwhlen</string>
   <string name="title_select_backup_to_restore">Whle eine Sicherungskopie</string>
   <string name="nav_menu_favorites">Favoriten</string>
@@ -300,16 +300,16 @@
   <string name="nav_menu_scheduled_transactions">Geplante Buchungen</string>
   <string name="nav_menu_export">Exportieren&#8230;</string>
   <string name="nav_menu_settings">Einstellungen</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
+  <string name="username">Benutzername</string>
+  <string name="password">Passwort</string>
   <string name="owncloud_pref">owncloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">OC-Server nicht gefunden</string>
+  <string name="owncloud_user_invalid">OC Benutzername/Kennwort ungltig</string>
+  <string name="owncloud_dir_invalid">Ungltige Zeichen: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">OC-Server OK</string>
+  <string name="owncloud_user_ok">OC Benutzername/Passwort OK</string>
+  <string name="owncloud_dir_ok">Dir-Name OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Tglich</item>
     <item quantity="other">Jeden %d. Tag</item>
@@ -398,16 +398,16 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="summary_google_plus">Teile deine Ideen und Verbesserungsvorschlge mit oder berichte ber Probleme mit GnuCash</string>
   <string name="summary_translate_gnucash">bersetze oder korrigiere bersetzungen auf CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">Es gibt keine kompatible App, welche die exportierten Buchungen empfangen kann!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
+  <string name="menu_move_transaction">Bewegen&#8230;</string>
   <string name="menu_duplicate_transaction">Kopieren</string>
   <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_cash_flow_report">Geldfluss</string>
   <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="title_use_compact_list">Kompaktansicht verwenden</string>
   <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="error_invalid_exchange_rate">Ungltiger Wechselkurs</string>
+  <string name="sample_exchange_rate">z. B. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Ungltiger Betrag</string>
   <string-array name="report_time_range">
     <item>Aktueller Monat</item>
     <item>Letzte 3 Monate</item>
@@ -438,8 +438,8 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="digit_nine_text">WXYZ</string>
   <string name="digit_zero">0</string>
   <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
+  <string name="title_manage_books">Bcher verwalten</string>
+  <string name="menu_manage_books">Bcher verwalten&#8230;</string>
   <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
   <string name="title_confirm_delete_book">Confirm delete Book</string>
   <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index e13dcf77..24e31266 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -25,7 +25,7 @@
   <string name="label_account_name">Nombre de la cuenta</string>
   <string name="btn_cancel">Cancelar</string>
   <string name="btn_save">Guardar</string>
-  <string name="btn_test">Test</string>
+  <string name="btn_test">Probar</string>
   <string name="label_passcode">Introducir contrasea</string>
   <string name="toast_wrong_passcode">Contrasea incorrecta, intentar otra vez</string>
   <string name="toast_passcode_set">Contrasea establecida</string>
@@ -66,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>Enviar a&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
   <string name="title_move_transactions">Mover %1$d transaccin(es)</string>
@@ -277,11 +277,11 @@
   <string name="label_tap_to_create_schedule">Toque para crear la programacin</string>
   <string name="title_restore_backup">Restaurar copia de seguridad&#8230;</string>
   <string name="header_backup_and_export_settings">Copia de seguridad y exportacin</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference">Habilitar DropBox</string>
+  <string name="title_owncloud_sync_preference">Habilitar ownCloud</string>
   <string name="title_backup_preference_category">Copia de seguridad</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_dropbox_sync">Habilitar exportar a DropBox</string>
+  <string name="summary_owncloud_sync">Habilitar exportar a ownCloud</string>
   <string name="title_select_gnucash_xml_file">Seleccionar archivo XML GnuCash</string>
   <string name="title_backup_prefs">Preferencias de copia de seguridad</string>
   <string name="title_create_backup_pref">Crear copia de seguridad</string>
@@ -290,8 +290,8 @@
   <string name="toast_backup_successful">Copia de seguridad exitosa</string>
   <string name="toast_backup_failed">Copia de seguridad fallida</string>
   <string name="export_warning_xml">Exportar todas las cuentas y transacciones</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Habilitar Google Drive</string>
+  <string name="summary_google_drive_sync">Habilitar exportar a Google Drive</string>
   <string name="toast_install_file_manager">Instale un gestor de archivos para seleccionar archivos</string>
   <string name="title_select_backup_to_restore">Seleccione la copia de seguridad a restaurar</string>
   <string name="nav_menu_favorites">Favoritos</string>
@@ -300,16 +300,16 @@
   <string name="nav_menu_scheduled_transactions">Transacciones Programadas</string>
   <string name="nav_menu_export">Exportar&#8230;</string>
   <string name="nav_menu_settings">Ajustes</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
-  <string name="owncloud_pref">owncloud</string>
+  <string name="username">Nombre de usuario</string>
+  <string name="password">Contrasea</string>
+  <string name="owncloud_pref">ownCloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">Servidor OC no encontrado</string>
+  <string name="owncloud_user_invalid">Usuario/contrasea OC no vlidos</string>
+  <string name="owncloud_dir_invalid">Caracteres invlidos: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">Servidor OC correcto</string>
+  <string name="owncloud_user_ok">Usuario/contrasea OC correctos</string>
+  <string name="owncloud_dir_ok">Nombre del directorio correcto</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Diario</item>
     <item quantity="other">Cada %d das</item>
@@ -398,16 +398,16 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="summary_google_plus">Compartir ideas, discutir cambios o reportar problemas</string>
   <string name="summary_translate_gnucash">Traducir o revisar en CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No hay aplicaciones compatibles para recibir las transacciones exportadas!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
+  <string name="menu_move_transaction">Mover&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
-  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="nav_menu_budgets">Presupuesto</string>
+  <string name="title_cash_flow_report">Flujo de efectivo</string>
+  <string name="title_budgets">Presupuestos</string>
+  <string name="title_use_compact_list">Activar la vista compacta</string>
+  <string name="summary_use_compact_list">Activar para usar siempre la vista compacta en la lista de transacciones</string>
+  <string name="error_invalid_exchange_rate">Tipo de cambio no vlido</string>
+  <string name="sample_exchange_rate">p.ej. 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Cantidad no vlida</string>
   <string-array name="report_time_range">
     <item>Mes actual</item>
     <item>ltimos 3 meses</item>
@@ -438,16 +438,16 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="digit_nine_text">WXYZ</string>
   <string name="digit_zero">0</string>
   <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
-  <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
-  <string name="menu_title_new_book">New Book</string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
-  <string name="label_split_count">%1$d splits</string>
-  <string name="label_inside_account_with_name">in %1$s</string>
+  <string name="title_manage_books">Administrar libros</string>
+  <string name="menu_manage_books">Administrar libros&#8230;</string>
+  <string name="select_chart_to_view_details">Seleccione cualquier parte del grfico para ver los detalles</string>
+  <string name="title_confirm_delete_book">Confirmar borrar libro</string>
+  <string name="msg_all_book_data_will_be_deleted">Se eliminarn todas las cuentas y transacciones en este libro!</string>
+  <string name="btn_delete_book">Borrar el libro</string>
+  <string name="label_last_export_time">ltima exportacin:</string>
+  <string name="menu_title_enable_sync">Habilitar sincronizacin</string>
+  <string name="menu_title_new_book">Nuevo libro</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">La transaccin seleccionada tiene ningn desglose y no se puede abrir</string>
+  <string name="label_split_count">%1$d desglose</string>
+  <string name="label_inside_account_with_name">en %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index 0e127f76..640361a1 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -16,184 +16,182 @@
  limitations under the License.
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-  <string name="title_create_account">Create Account</string>
-  <string name="title_edit_account">Edit Account</string>
-  <string name="info_details">Info</string>
-  <string name="menu_export">Export&#8230;</string>
-  <string name="description_add_transaction_icon">Add a new transaction to an account</string>
-  <string name="label_no_accounts">No accounts to display</string>
-  <string name="label_account_name">Account name</string>
-  <string name="btn_cancel">Cancel</string>
-  <string name="btn_save">Save</string>
-  <string name="btn_test">Test</string>
-  <string name="label_passcode">Enter Passcode</string>
-  <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
-  <string name="toast_passcode_set">Passcode set</string>
-  <string name="label_confirm_passcode">Please confirm your passcode</string>
-  <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
-  <string name="label_transaction_name">Description</string>
-  <string name="label_transaction_amount">Amount</string>
-  <string name="title_add_transaction">New transaction</string>
-  <string name="label_no_transactions">No transactions to display</string>
-  <string name="label_timeanddate">DATE &amp; TIME</string>
-  <string name="label_account">Account</string>
-  <string name="label_debit">DEBIT</string>
-  <string name="label_credit">CREDIT</string>
-  <string name="title_accounts">Accounts</string>
-  <string name="title_transactions">Transactions</string>
-  <string name="menu_delete">Delete</string>
-  <string name="alert_dialog_ok_delete">Delete</string>
-  <string name="alert_dialog_cancel">Cancel</string>
-  <string name="toast_account_deleted">Account deleted</string>
-  <string name="title_confirm_delete">Confirm delete</string>
-  <string name="delete_account_confirmation_message">All transactions in this account will also be deleted</string>
-  <string name="title_edit_transaction">Edit Transaction</string>
-  <string name="label_transaction_description">Add note</string>
-  <string name="menu_move">MOVE</string>
-  <string name="title_selected">%1$d selected</string>
-  <string name="label_account_balance">Balance:</string>
-  <string name="label_export_destination">Export To:</string>
-  <string name="title_export_dialog">Export Transactions</string>
-  <string name="option_export_all_transactions">Export all transactions</string>
-  <string name="hint_export_choice">By default, only new transactions since last export will be exported. Check this option to export all transactions</string>
-  <string name="toast_export_error">Error exporting %1$s file</string>
-  <string name="btn_export">Export</string>
-  <string name="option_delete_after_export">Delete transactions after export</string>
-  <string name="hint_delete_after_export">All exported transactions will be deleted when exporting is completed</string>
-  <string name="title_settings">Settings</string>
+  <string name="title_create_account"> </string>
+  <string name="title_edit_account"> </string>
+  <string name="info_details"></string>
+  <string name="menu_export">...</string>
+  <string name="description_add_transaction_icon">   </string>
+  <string name="label_no_accounts"> </string>
+  <string name="label_account_name"> </string>
+  <string name="btn_cancel"></string>
+  <string name="btn_save"></string>
+  <string name="btn_test"></string>
+  <string name="label_passcode"> </string>
+  <string name="toast_wrong_passcode">  .   .</string>
+  <string name="toast_passcode_set"> .</string>
+  <string name="label_confirm_passcode">  .</string>
+  <string name="toast_invalid_passcode_confirmation"> .   .</string>
+  <string name="label_transaction_name"></string>
+  <string name="label_transaction_amount"></string>
+  <string name="title_add_transaction"> </string>
+  <string name="label_no_transactions">  .</string>
+  <string name="label_timeanddate">  </string>
+  <string name="label_account"></string>
+  <string name="label_debit"></string>
+  <string name="label_credit"></string>
+  <string name="title_accounts"></string>
+  <string name="title_transactions"></string>
+  <string name="menu_delete"></string>
+  <string name="alert_dialog_ok_delete"></string>
+  <string name="alert_dialog_cancel"></string>
+  <string name="toast_account_deleted"> .</string>
+  <string name="title_confirm_delete"> </string>
+  <string name="delete_account_confirmation_message">    </string>
+  <string name="title_edit_transaction"> </string>
+  <string name="label_transaction_description"> </string>
+  <string name="menu_move"></string>
+  <string name="title_selected">%1$d </string>
+  <string name="label_account_balance">:</string>
+  <string name="label_export_destination"> :</string>
+  <string name="title_export_dialog"> </string>
+  <string name="option_export_all_transactions">  </string>
+  <string name="hint_export_choice">      .    .</string>
+  <string name="toast_export_error">%1$s     .</string>
+  <string name="btn_export"></string>
+  <string name="option_delete_after_export">   </string>
+  <string name="hint_delete_after_export">     .</string>
+  <string name="title_settings"></string>
   <string-array name="export_destinations">
-    <item>SD Card</item>
+    <item>SD </item>
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>  ...</item>
   </string-array>
-  <string name="btn_move">Move</string>
-  <string name="title_move_transactions">Move %1$d transaction(s)</string>
-  <string name="label_move_destination">Destination Account</string>
-  <string name="permission_access_sdcard">Access SD Card</string>
-  <string name="toast_incompatible_currency">Cannot move transactions.\nThe destination account uses a different currency from origin account</string>
-  <string name="header_general_settings">General</string>
-  <string name="header_about_gnucash">About</string>
-  <string name="title_choose_currency">Choose default currency</string>
-  <string name="title_default_currency">Default currency</string>
-  <string name="summary_default_currency">Default currency to assign to new accounts</string>
-  <string name="label_permission_record_transactions">Enables recording transactions in GnuCash for Android</string>
-  <string name="label_permission_create_accounts">Enables creation of accounts in GnuCash for Android</string>
-  <string name="label_permission_group">Your GnuCash data</string>
-  <string name="description_permission_group">Read and modify GnuCash data</string>
-  <string name="label_permission_record_transaction">Record transactions in GnuCash</string>
-  <string name="label_permission_create_account">Create accounts in GnuCash</string>
-  <string name="label_display_account">Display account</string>
-  <string name="btn_create_accounts">Create Accounts</string>
-  <string name="title_default_accounts">Select accounts to create</string>
-  <string name="error_no_accounts">No accounts exist in GnuCash.\nCreate an account before adding a widget</string>
-  <string name="title_build_version">Build version</string>
-  <string name="title_license">License</string>
-  <string name="summary_licence_details">Apache License v2.0. Click for details</string>
-  <string name="title_general_prefs">General Preferences</string>
-  <string name="label_widget_configuration">Select Account</string>
-  <string name="toast_no_transactions_to_export">There are no transactions available to export</string>
-  <string name="header_passcode_settings">Passcode</string>
-  <string name="title_passcode_preferences">Passcode Preferences</string>
-  <string name="title_passcode_enabled">Passcode Turned On</string>
-  <string name="title_passcode_disabled">Passcode Turned Off</string>
-  <string name="title_change_passcode">Change Passcode</string>
-  <string name="title_about_gnucash">About GnuCash</string>
-  <string name="summary_about_gnucash">A mobile finance management and expense-tracker designed for Android</string>
-  <string name="title_about">About</string>
-  <string name="toast_format_exported_to">%1$s file exported to:\n</string>
-  <string name="title_export_email">GnuCash Android %1$s export</string>
-  <string name="description_export_email">GnuCash Android Export from </string>
-  <string name="header_transaction_settings">Transactions</string>
-  <string name="title_transaction_preferences">Transaction Preferences</string>
-  <string name="title_account_preferences">Account Preferences</string>
-  <string name="title_default_transaction_type">Default Transaction Type</string>
-  <string name="summary_default_transaction_type">The type of transaction to use by default, CREDIT or DEBIT</string>
+  <string name="btn_move"></string>
+  <string name="title_move_transactions">%1$d  </string>
+  <string name="label_move_destination"> </string>
+  <string name="permission_access_sdcard">SD  </string>
+  <string name="toast_incompatible_currency">   . \n     .</string>
+  <string name="header_general_settings"></string>
+  <string name="header_about_gnucash"></string>
+  <string name="title_choose_currency">  </string>
+  <string name="title_default_currency"> </string>
+  <string name="summary_default_currency">    </string>
+  <string name="label_permission_record_transactions"> GnuCash   </string>
+  <string name="label_permission_create_accounts"> GnuCash   </string>
+  <string name="label_permission_group">GnuCash </string>
+  <string name="description_permission_group">GnuCash  /</string>
+  <string name="label_permission_record_transaction">GnuCash  </string>
+  <string name="label_permission_create_account">GnuCash  </string>
+  <string name="label_display_account"> </string>
+  <string name="btn_create_accounts"> </string>
+  <string name="title_default_accounts">  </string>
+  <string name="error_no_accounts">GnuCash  .\n    </string>
+  <string name="title_build_version"> </string>
+  <string name="title_license"></string>
+  <string name="summary_licence_details">  v 2.0.    </string>
+  <string name="title_general_prefs"> </string>
+  <string name="label_widget_configuration"> </string>
+  <string name="toast_no_transactions_to_export">  </string>
+  <string name="header_passcode_settings"></string>
+  <string name="title_passcode_preferences"> </string>
+  <string name="title_passcode_enabled"> </string>
+  <string name="title_passcode_disabled"> </string>
+  <string name="title_change_passcode"> </string>
+  <string name="title_about_gnucash">GnuCash </string>
+  <string name="summary_about_gnucash">    </string>
+  <string name="title_about"> </string>
+  <string name="toast_format_exported_to">%1$s   :\n</string>
+  <string name="title_export_email"> GnuCash %1$s </string>
+  <string name="description_export_email"> GnuCash . : </string>
+  <string name="header_transaction_settings"></string>
+  <string name="title_transaction_preferences"> </string>
+  <string name="title_account_preferences"> </string>
+  <string name="title_default_transaction_type">  </string>
+  <string name="summary_default_transaction_type">   ,   </string>
   <string-array name="transaction_types">
-    <item>CREDIT</item>
-    <item>DEBIT</item>
+    <item></item>
+    <item></item>
   </string-array>
-  <string name="msg_delete_all_transactions_confirmation">Are you sure you want to delete ALL transactions?</string>
-  <string name="msg_delete_transaction_confirmation">Are you sure you want to delete this transaction?</string>
-  <string name="title_export_preference_category">Export</string>
-  <string name="title_export_all_transactions">Export all transactions</string>
-  <string name="title_always_delete_exported_transactions">Delete exported transactions</string>
-  <string name="title_default_export_email">Default export email</string>
-  <string name="summary_default_export_email">The default email address to send exports to. You can still change this when you export.</string>
-  <string name="label_double_entry_account">Transfer Account</string>
-  <string name="summary_use_double_entry">All transactions will be a transfer from one account to another</string>
-  <string name="title_use_double_entry">Activate Double Entry</string>
-  <string name="account_balance">Balance</string>
-  <string name="toast_no_account_name_entered">Enter an account name to create an account</string>
-  <string name="label_account_currency">Currency</string>
-  <string name="label_parent_account">Parent account</string>
-  <string name="title_xml_ofx_header">Use XML OFX header</string>
-  <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
-  <string name="title_whats_new">What\'s New</string>
+  <string name="msg_delete_all_transactions_confirmation">   ?</string>
+  <string name="msg_delete_transaction_confirmation">   ?</string>
+  <string name="title_export_preference_category"></string>
+  <string name="title_export_all_transactions">  </string>
+  <string name="title_always_delete_exported_transactions">  </string>
+  <string name="title_default_export_email">  </string>
+  <string name="summary_default_export_email">     .      .</string>
+  <string name="label_double_entry_account"> </string>
+  <string name="summary_use_double_entry">         </string>
+  <string name="title_use_double_entry"> </string>
+  <string name="account_balance"></string>
+  <string name="toast_no_account_name_entered">   </string>
+  <string name="label_account_currency"></string>
+  <string name="label_parent_account"> </string>
+  <string name="title_xml_ofx_header">XML OFX  </string>
+  <string name="summary_xml_ofx_header"> GnuCash       </string>
+  <string name="title_whats_new"> </string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
-        - Multiple bug fixes and improvements\n
+        -    \n
+        -     \n
+        -  \n
+        -   \n
+        -    \n
+        -     \n
 	</string>
-  <string name="label_dismiss">Dismiss</string>
-  <string name="toast_transanction_amount_required">Enter an amount to save the transaction</string>
-  <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
-  <string name="menu_import_accounts">Import GnuCash Accounts</string>
-  <string name="btn_import_accounts">Import Accounts</string>
-  <string name="toast_error_importing_accounts">An error occurred while importing the GnuCash accounts</string>
-  <string name="toast_success_importing_accounts">GnuCash Accounts successfully imported</string>
-  <string name="summary_import_accounts">Import account structure exported from GnuCash desktop</string>
-  <string name="title_import_accounts">Import GnuCash XML</string>
-  <string name="summary_delete_all_accounts">Delete all accounts in the database. All transactions will be deleted as
-        well.
+  <string name="label_dismiss"></string>
+  <string name="toast_transanction_amount_required">    </string>
+  <string name="toast_error_edit_multi_currency_transaction">     .</string>
+  <string name="menu_import_accounts">GnuCash  </string>
+  <string name="btn_import_accounts"> </string>
+  <string name="toast_error_importing_accounts">GnuCash     .</string>
+  <string name="toast_success_importing_accounts">GnuCash  </string>
+  <string name="summary_import_accounts"> GnuCash    .</string>
+  <string name="title_import_accounts">GnuCash XML </string>
+  <string name="summary_delete_all_accounts">    .    </string>
+  <string name="title_delete_all_accounts">  </string>
+  <string name="header_account_settings"></string>
+  <string name="toast_all_accounts_deleted">  </string>
+  <string name="confirm_delete_all_accounts">   ?\n\n
+          !
     </string>
-  <string name="title_delete_all_accounts">Delete all accounts</string>
-  <string name="header_account_settings">Accounts</string>
-  <string name="toast_all_accounts_deleted">All accounts have been successfully deleted</string>
-  <string name="confirm_delete_all_accounts">Are you sure you want to delete all accounts and transactions?\n\nThis
-        operation cannot be undone!
-    </string>
-  <string name="label_account_type">Account Type</string>
-  <string name="summary_delete_all_transactions">All transactions in all accounts will be deleted!</string>
-  <string name="title_delete_all_transactions">Delete all transactions</string>
-  <string name="toast_all_transactions_deleted">All transactions successfully deleted!</string>
-  <string name="title_progress_importing_accounts">Importing accounts</string>
-  <string name="toast_tap_again_to_confirm_delete">Tap again to confirm. ALL entries will be deleted!!</string>
-  <string name="section_header_transactions">Transactions</string>
-  <string name="section_header_subaccounts">Sub-Accounts</string>
-  <string name="menu_search_accounts">Search</string>
-  <string name="title_default_export_format">Default Export Format</string>
-  <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
-  <string name="menu_export_transactions">Export transactions&#8230;</string>
-  <string name="label_recurring_transaction">Recurrence</string>
+  <string name="label_account_type"> </string>
+  <string name="summary_delete_all_transactions">    !</string>
+  <string name="title_delete_all_transactions">  </string>
+  <string name="toast_all_transactions_deleted">  !</string>
+  <string name="title_progress_importing_accounts"> </string>
+  <string name="toast_tap_again_to_confirm_delete">    .   !!</string>
+  <string name="section_header_transactions"></string>
+  <string name="section_header_subaccounts"> </string>
+  <string name="menu_search_accounts"></string>
+  <string name="title_default_export_format">  </string>
+  <string name="summary_default_export_format">     </string>
+  <string name="menu_export_transactions"> &#8230;</string>
+  <string name="label_recurring_transaction"></string>
   <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
-  <string name="imbalance_account_name">Imbalance</string>
-  <string name="title_progress_exporting_transactions">Exporting transactions</string>
-  <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
-  <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
-  <string name="label_placeholder_account">Placeholder account</string>
+  <string name="imbalance_account_name"></string>
+  <string name="title_progress_exporting_transactions">  </string>
+  <string name="label_no_recurring_transactions">  </string>
+  <string name="toast_recurring_transaction_deleted">  </string>
+  <string name="label_placeholder_account"> </string>
   <string name="label_default_transfer_account">Default Transfer Account</string>
   <plurals name="label_sub_accounts">
-    <item quantity="other">%d sub-accounts</item>
+    <item quantity="other">%d  </item>
   </plurals>
   <string-array name="account_type_entry_values">
-    <item>CASH</item>
-    <item>BANK</item>
-    <item>CREDIT CARD</item>
-    <item>ASSET</item>
-    <item>LIABILITY</item>
-    <item>INCOME</item>
-    <item>EXPENSE</item>
-    <item>PAYABLE</item>
-    <item>RECEIVABLE</item>
-    <item>EQUITY</item>
-    <item>CURRENCY</item>
-    <item>STOCK</item>
-    <item>MUTUAL FUND</item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item> </item>
     <item>TRADING</item>
   </string-array>
   <string-array name="export_formats">
@@ -202,250 +200,246 @@
     <item>XML</item>
   </string-array>
   <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
-  <string name="color_picker_default_title">Select a Color</string>
+  <string name="color_picker_default_title"> </string>
   <!-- Content description for a color square. -->
   <!-- Content description for a selected color square. -->
-  <string name="label_account_color_and_type">Account Color &amp; Type</string>
-  <string name="label_delete_sub_accounts">Delete sub-accounts</string>
-  <string name="title_recent_accounts">Recent</string>
-  <string name="title_favorite_accounts">Favorites</string>
-  <string name="title_all_accounts">All</string>
-  <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
-  <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
-  <string name="menu_scheduled_transactions">Scheduled Transactions</string>
-  <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
-        a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
-        available in app Settings so you can decide later.
-    </string>
-  <string name="title_scheduled_transactions">Transactions</string>
-  <string name="title_select_export_destination">Select destination for export</string>
-  <string name="hint_split_memo">Memo</string>
-  <string name="label_spend">Spend</string>
-  <string name="label_receive">Receive</string>
-  <string name="label_withdrawal">Withdrawal</string>
-  <string name="label_deposit">Deposit</string>
-  <string name="label_payment">Payment</string>
-  <string name="label_charge">Charge</string>
-  <string name="label_decrease">Decrease</string>
-  <string name="label_increase">Increase</string>
-  <string name="label_income">Income</string>
-  <string name="label_rebate">Rebate</string>
-  <string name="label_expense">Expense</string>
-  <string name="label_bill">Bill</string>
-  <string name="label_invoice">Invoice</string>
-  <string name="label_buy">Buy</string>
-  <string name="label_sell">Sell</string>
-  <string name="label_repeats">Repeats</string>
-  <string name="toast_no_recent_backup">No recent backup found</string>
-  <string name="account_name_opening_balances">Opening Balances</string>
-  <string name="account_name_equity">Equity</string>
-  <string name="summary_save_opening_balances">Enable to save the current account balance (before deleting transactions) as new opening balance after deleting transactions
-    </string>
-  <string name="title_save_opening_balances">Save account opening balances</string>
-  <string name="export_warning_ofx">OFX does not support double-entry transactions</string>
-  <string name="export_warning_qif">Generates separate QIF files per currency</string>
-  <string name="title_transaction_splits">Transaction splits</string>
-  <string name="label_imbalance">Imbalance:</string>
-  <string name="btn_add_split">Add split</string>
-  <string name="menu_title_favorite">Favorite</string>
+  <string name="label_account_color_and_type">  </string>
+  <string name="label_delete_sub_accounts">  </string>
+  <string name="title_recent_accounts"> </string>
+  <string name="title_favorite_accounts"> </string>
+  <string name="title_all_accounts"> </string>
+  <string name="summary_create_default_accounts">GnuCash     .</string>
+  <string name="title_create_default_accounts">  </string>
+  <string name="msg_confirm_create_default_accounts_setting">     . \n\n?</string>
+  <string name="menu_scheduled_transactions"></string>
+  <string name="msg_confirm_create_default_accounts_first_run"> GnuCash  ! \n    ,   GnuCash    . \n\n         .    </string>
+  <string name="title_scheduled_transactions"></string>
+  <string name="title_select_export_destination">  </string>
+  <string name="hint_split_memo"></string>
+  <string name="label_spend"></string>
+  <string name="label_receive"></string>
+  <string name="label_withdrawal"></string>
+  <string name="label_deposit"></string>
+  <string name="label_payment"></string>
+  <string name="label_charge"></string>
+  <string name="label_decrease"></string>
+  <string name="label_increase"></string>
+  <string name="label_income"></string>
+  <string name="label_rebate"></string>
+  <string name="label_expense"></string>
+  <string name="label_bill"></string>
+  <string name="label_invoice"></string>
+  <string name="label_buy"></string>
+  <string name="label_sell"></string>
+  <string name="label_repeats"></string>
+  <string name="toast_no_recent_backup">  </string>
+  <string name="account_name_opening_balances"> </string>
+  <string name="account_name_equity"></string>
+  <string name="summary_save_opening_balances">      .    </string>
+  <string name="title_save_opening_balances">  </string>
+  <string name="export_warning_ofx">OFX      </string>
+  <string name="export_warning_qif">  QIF  </string>
+  <string name="title_transaction_splits"> </string>
+  <string name="label_imbalance">:</string>
+  <string name="btn_add_split"> </string>
+  <string name="menu_title_favorite"></string>
   <string name="drawer_open">Navigation drawer opened</string>
   <string name="drawer_close">Navigation drawer closed</string>
-  <string name="title_reports">Reports</string>
-  <string name="title_pie_chart">Pie Chart</string>
-  <string name="title_line_chart">Line Chart</string>
-  <string name="title_bar_chart">Bar Chart</string>
-  <string name="title_report_prefs">Report Preferences</string>
-  <string name="label_report_currency">Select currency</string>
-  <string name="title_use_account_color">Account color in reports</string>
-  <string name="summary_use_account_color">Use account color in the bar/pie chart</string>
-  <string name="header_report_settings">Reports</string>
-  <string name="menu_order_by_size">Order by size</string>
-  <string name="menu_toggle_legend">Show legend</string>
-  <string name="menu_toggle_labels">Show labels</string>
-  <string name="menu_toggle_percentage_mode">Show percentage</string>
+  <string name="title_reports"></string>
+  <string name="title_pie_chart"> </string>
+  <string name="title_line_chart"> </string>
+  <string name="title_bar_chart"> </string>
+  <string name="title_report_prefs"> </string>
+  <string name="label_report_currency"> </string>
+  <string name="title_use_account_color">   </string>
+  <string name="summary_use_account_color">/    </string>
+  <string name="header_report_settings"></string>
+  <string name="menu_order_by_size"></string>
+  <string name="menu_toggle_legend"> </string>
+  <string name="menu_toggle_labels"> </string>
+  <string name="menu_toggle_percentage_mode"> </string>
   <string name="menu_toggle_average_lines">Show average lines</string>
   <string name="menu_group_smaller_slices">Group Smaller Slices</string>
-  <string name="label_chart_no_data">No chart data available</string>
-  <string name="label_chart_overall">Overall</string>
-  <string name="label_chart_total">Total</string>
-  <string name="label_other_slice">Other</string>
-  <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+  <string name="label_chart_no_data">  </string>
+  <string name="label_chart_overall"></string>
+  <string name="label_chart_total"></string>
+  <string name="label_other_slice"></string>
+  <string name="toast_chart_percentage_mode_total">   </string>
   <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
   <string name="label_save_template">Save as template</string>
-  <string name="label_delete_account_transactions_description">This account contains transactions. \nWhat would you like to do with these transactions</string>
-  <string name="label_delete_account_subaccounts_description">This account contains sub-accounts. \nWhat would you like to do with these sub-accounts</string>
-  <string name="label_delete_transactions">Delete transactions</string>
-  <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
-  <string name="label_tap_to_create_schedule">Tap to create schedule</string>
-  <string name="title_restore_backup">Restore Backup&#8230;</string>
-  <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
-  <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
-  <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
-  <string name="title_backup_prefs">Backup Preferences</string>
-  <string name="title_create_backup_pref">Create Backup</string>
-  <string name="summary_create_backup_pref">By default backups are saved to the SDCARD</string>
-  <string name="summary_restore_backup_pref">Select a specific backup to restore</string>
-  <string name="toast_backup_successful">Backup successful</string>
-  <string name="toast_backup_failed">Backup failed</string>
-  <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
-  <string name="toast_install_file_manager">Install a file manager to select files</string>
-  <string name="title_select_backup_to_restore">Select backup to restore</string>
-  <string name="nav_menu_favorites">Favorites</string>
-  <string name="nav_menu_open">Open&#8230;</string>
-  <string name="nav_menu_reports">Reports</string>
-  <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
-  <string name="nav_menu_export">Export&#8230;</string>
-  <string name="nav_menu_settings">Settings</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
+  <string name="label_delete_account_transactions_description">  . \n  </string>
+  <string name="label_delete_account_subaccounts_description">  . \n   </string>
+  <string name="label_delete_transactions"> </string>
+  <string name="toast_disable_double_entry_to_save_transaction">     ,   </string>
+  <string name="label_tap_to_create_schedule">  </string>
+  <string name="title_restore_backup">  </string>
+  <string name="header_backup_and_export_settings"> </string>
+  <string name="title_dropbox_sync_preference">DropBox </string>
+  <string name="title_owncloud_sync_preference">ownCloud  </string>
+  <string name="title_backup_preference_category"></string>
+  <string name="summary_dropbox_sync">DropBox  </string>
+  <string name="summary_owncloud_sync">ownCloud  </string>
+  <string name="title_select_gnucash_xml_file">GnuCash XML  </string>
+  <string name="title_backup_prefs"> </string>
+  <string name="title_create_backup_pref"> </string>
+  <string name="summary_create_backup_pref">  SD </string>
+  <string name="summary_restore_backup_pref">   </string>
+  <string name="toast_backup_successful"></string>
+  <string name="toast_backup_failed"> </string>
+  <string name="export_warning_xml">    </string>
+  <string name="title_google_drive_sync_pref">  </string>
+  <string name="summary_google_drive_sync">   </string>
+  <string name="toast_install_file_manager">     </string>
+  <string name="title_select_backup_to_restore">   </string>
+  <string name="nav_menu_favorites"></string>
+  <string name="nav_menu_open">...</string>
+  <string name="nav_menu_reports"></string>
+  <string name="nav_menu_scheduled_transactions"></string>
+  <string name="nav_menu_export">...</string>
+  <string name="nav_menu_settings"></string>
+  <string name="username"> </string>
+  <string name="password"></string>
   <string name="owncloud_pref">owncloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">Owncloud    </string>
+  <string name="owncloud_user_invalid">Owncloud      </string>
+  <string name="owncloud_dir_invalid">   : \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">Owncloud </string>
+  <string name="owncloud_user_ok">  </string>
+  <string name="owncloud_dir_ok"> </string>
   <plurals name="label_every_x_days">
-    <item quantity="other">Every %d days</item>
+    <item quantity="other">%d</item>
   </plurals>
   <plurals name="label_every_x_weeks">
-    <item quantity="other">Every %d weeks</item>
+    <item quantity="other">%d</item>
   </plurals>
   <plurals name="label_every_x_months">
-    <item quantity="other">Every %d months</item>
+    <item quantity="other">%d</item>
   </plurals>
   <plurals name="label_every_x_years">
-    <item quantity="other">Every %d years</item>
+    <item quantity="other">%d</item>
   </plurals>
-  <string name="title_enable_crashlytics">Enable Crash Logging</string>
-  <string name="msg_enable_crashlytics">Automatically send information about app malfunction to the developers.</string>
-  <string name="label_export_format"> Format</string>
-  <string name="toast_backup_folder_not_found">Backup folder cannot be found. Make sure the SD Card is mounted!</string>
-  <string name="label_old_passcode">Enter your old passcode</string>
-  <string name="label_new_passcode">Enter your new passcode</string>
-  <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
-  <string name="title_scheduled_exports">Exports</string>
-  <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
-  <string name="title_create_export_schedule">Create export schedule</string>
-  <string name="toast_exported_to">Exported to: %1$s</string>
-  <string name="toast_legend_too_long">The legend is too long</string>
-  <string name="hint_account_description">Account description</string>
-  <string name="label_no_recent_accounts">No recent accounts</string>
-  <string name="label_no_favorite_accounts">No favorite accounts</string>
-  <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
-  <string name="label_scheduled_action_ended">"Ended, last executed on %1$s"</string>
-  <string name="label_select_bar_to_view_details">Select a bar to view details</string>
-  <string name="btn_wizard_next">Next</string>
-  <string name="btn_wizard_finish">Done</string>
-  <string name="wizard_title_default_currency">Default Currency</string>
-  <string name="wizard_title_account_setup">Account Setup</string>
-  <string name="wizard_title_select_currency">Select Currency</string>
-  <string name="wizard_title_feedback_options">Feedback Options</string>
-  <string name="wizard_option_create_default_accounts">Create default accounts</string>
-  <string name="wizard_option_import_my_accounts">Import my accounts</string>
-  <string name="wizard_option_let_me_handle_it">Let me handle it</string>
-  <string name="wizard_option_currency_other">Other&#8230;</string>
-  <string name="wizard_option_auto_send_crash_reports">Automatically send crash reports</string>
-  <string name="wizard_option_disable_crash_reports">Disable crash reports</string>
-  <string name="wizard_btn_back">Back</string>
-  <string name="title_setup_gnucash">Setup GnuCash</string>
-  <string name="wizard_title_welcome_to_gnucash">Welcome to GnuCash</string>
-  <string name="msg_wizard_welcome_page">Before you dive in, \nlet\'s setup a few things first\n\nTo continue, press Next</string>
+  <string name="title_enable_crashlytics">  </string>
+  <string name="msg_enable_crashlytics">       .</string>
+  <string name="label_export_format">  </string>
+  <string name="toast_backup_folder_not_found">    . SD    .</string>
+  <string name="label_old_passcode"> </string>
+  <string name="label_new_passcode"> </string>
+  <string name="nav_menu_scheduled_backups"> </string>
+  <string name="title_scheduled_exports"></string>
+  <string name="label_no_scheduled_exports_to_display">  </string>
+  <string name="title_create_export_schedule">  </string>
+  <string name="toast_exported_to"> : %1$s</string>
+  <string name="toast_legend_too_long">  </string>
+  <string name="hint_account_description"> </string>
+  <string name="label_no_recent_accounts">  </string>
+  <string name="label_no_favorite_accounts">   </string>
+  <string name="nav_menu_scheduled_actions"> </string>
+  <string name="label_scheduled_action_ended">",  %1$s "</string>
+  <string name="label_select_bar_to_view_details">   </string>
+  <string name="btn_wizard_next"></string>
+  <string name="btn_wizard_finish"></string>
+  <string name="wizard_title_default_currency"> </string>
+  <string name="wizard_title_account_setup"> </string>
+  <string name="wizard_title_select_currency"> </string>
+  <string name="wizard_title_feedback_options"> </string>
+  <string name="wizard_option_create_default_accounts">  </string>
+  <string name="wizard_option_import_my_accounts">  </string>
+  <string name="wizard_option_let_me_handle_it"> </string>
+  <string name="wizard_option_currency_other">...</string>
+  <string name="wizard_option_auto_send_crash_reports">    </string>
+  <string name="wizard_option_disable_crash_reports">  </string>
+  <string name="wizard_btn_back"></string>
+  <string name="title_setup_gnucash">GnuCash </string>
+  <string name="wizard_title_welcome_to_gnucash">GnuCash  </string>
+  <string name="msg_wizard_welcome_page">  \n  \n\n .</string>
   <string name="title_split_editor">Split Editor</string>
   <string name="toast_error_check_split_amounts">Check that all splits have valid amounts before saving!</string>
-  <string name="label_error_invalid_expression">Invalid expression!</string>
-  <string name="toast_scheduled_recurring_transaction">Scheduled recurring transaction</string>
-  <string name="error_exchange_rate_required">An exchange rate is required</string>
-  <string name="error_converted_amount_required">The converted amount is required</string>
-  <string name="title_transfer_funds">Transfer Funds</string>
-  <string name="nav_menu_help"><![CDATA[Help & Feedback]]></string>
+  <string name="label_error_invalid_expression">  !</string>
+  <string name="toast_scheduled_recurring_transaction">  </string>
+  <string name="error_exchange_rate_required"> </string>
+  <string name="error_converted_amount_required">  </string>
+  <string name="title_transfer_funds"> </string>
+  <string name="nav_menu_help"><![CDATA[ & ]]></string>
   <string name="label_select_pie_slice_to_see_details">Select a slice to see details</string>
-  <string name="label_report_period">Period:</string>
-  <string name="label_convert_from">From:</string>
-  <string name="label_convert_to">To:</string>
-  <string name="msg_provide_exchange_rate">Provide either the converted amount or exchange rate in order to transfer funds</string>
-  <string name="hint_exchange_rate">Exchange rate</string>
+  <string name="label_report_period">:</string>
+  <string name="label_convert_from">:</string>
+  <string name="label_convert_to">:</string>
+  <string name="msg_provide_exchange_rate">     .</string>
+  <string name="hint_exchange_rate"></string>
   <string name="btn_fetch_quote">Fetch quote</string>
-  <string name="hint_converted_amount">Converted Amount</string>
+  <string name="hint_converted_amount"> </string>
   <string name="title_report_sheet">Sheet</string>
-  <string name="label_last_3_months_expenses">Expenses for last 3 months</string>
-  <string name="label_total_assets">Total Assets</string>
-  <string name="label_total_liabilities">Total Liabilities</string>
-  <string name="label_net_worth">Net Worth</string>
-  <string name="label_assets">Assets</string>
-  <string name="label_liabilities">Liabilities</string>
-  <string name="label_equity">Equity</string>
-  <string name="label_total_liabilities_and_equity"><![CDATA[Total Liabilites & Equity]]></string>
-  <string name="label_move_to">Move to:</string>
+  <string name="label_last_3_months_expenses"> 3 </string>
+  <string name="label_total_assets"></string>
+  <string name="label_total_liabilities"></string>
+  <string name="label_net_worth"></string>
+  <string name="label_assets"></string>
+  <string name="label_liabilities"></string>
+  <string name="label_equity"></string>
+  <string name="label_total_liabilities_and_equity"><![CDATA[  ]]></string>
+  <string name="label_move_to"> :</string>
   <string name="menu_group_by">Group By</string>
-  <string name="menu_group_by_month">Month</string>
-  <string name="menu_group_by_quarter">Quarter</string>
-  <string name="menu_group_by_year">Year</string>
-  <string name="title_balance_sheet_report">Balance Sheet</string>
-  <string name="label_balance_sheet_total">Total:</string>
-  <string name="title_google_plus_community">Google+ Community</string>
-  <string name="title_translate_gnucash">Translate GnuCash</string>
-  <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
-  <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
-  <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
-  <string name="menu_duplicate_transaction">Duplicate</string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
-  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="menu_group_by_month"></string>
+  <string name="menu_group_by_quarter"></string>
+  <string name="menu_group_by_year"></string>
+  <string name="title_balance_sheet_report"></string>
+  <string name="label_balance_sheet_total">:</string>
+  <string name="title_google_plus_community">Google+ </string>
+  <string name="title_translate_gnucash">GnuCash </string>
+  <string name="summary_google_plus">    ,  .</string>
+  <string name="summary_translate_gnucash">CrowdIn ,  </string>
+  <string name="toast_no_compatible_apps_to_receive_export">    </string>
+  <string name="menu_move_transaction">...</string>
+  <string name="menu_duplicate_transaction"></string>
+  <string name="nav_menu_budgets"></string>
+  <string name="title_cash_flow_report"></string>
+  <string name="title_budgets"></string>
+  <string name="title_use_compact_list"> </string>
+  <string name="summary_use_compact_list">   </string>
+  <string name="error_invalid_exchange_rate"> </string>
+  <string name="sample_exchange_rate">) 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount"> </string>
   <string-array name="report_time_range">
-    <item>Current month</item>
-    <item>Last 3 months</item>
-    <item>Last 6 months</item>
-    <item>Last 12 months</item>
-    <item>All time</item>
-    <item>Custom range&#8230;</item>
+    <item></item>
+    <item> 3</item>
+    <item> 6</item>
+    <item> 12</item>
+    <item> </item>
+    <item>  </item>
   </string-array>
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
   <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
-  <string name="digit_one_text"></string>
+  <string name="digit_one_text"></string>
   <string name="digit_two">2</string>
-  <string name="digit_two_text">ABC</string>
+  <string name="digit_two_text"></string>
   <string name="digit_three">3</string>
-  <string name="digit_three_text">DEF</string>
+  <string name="digit_three_text"></string>
   <string name="digit_four">4</string>
-  <string name="digit_four_text">GHI</string>
+  <string name="digit_four_text"></string>
   <string name="digit_five">5</string>
-  <string name="digit_five_text">JKL</string>
+  <string name="digit_five_text"></string>
   <string name="digit_six">6</string>
-  <string name="digit_six_text">MNO</string>
+  <string name="digit_six_text"></string>
   <string name="digit_seven">7</string>
-  <string name="digit_seven_text">PQRS</string>
+  <string name="digit_seven_text"></string>
   <string name="digit_eight">8</string>
-  <string name="digit_eight_text">TUV</string>
+  <string name="digit_eight_text"></string>
   <string name="digit_nine">9</string>
-  <string name="digit_nine_text">WXYZ</string>
+  <string name="digit_nine_text"></string>
   <string name="digit_zero">0</string>
-  <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
-  <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
-  <string name="menu_title_new_book">New Book</string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
-  <string name="label_split_count">%1$d splits</string>
-  <string name="label_inside_account_with_name">in %1$s</string>
+  <string name="digit_zero_text"></string>
+  <string name="title_manage_books"> </string>
+  <string name="menu_manage_books"> ...</string>
+  <string name="select_chart_to_view_details">   </string>
+  <string name="title_confirm_delete_book">  </string>
+  <string name="msg_all_book_data_will_be_deleted">     !</string>
+  <string name="btn_delete_book"> </string>
+  <string name="label_last_export_time">  :</string>
+  <string name="menu_title_enable_sync"> </string>
+  <string name="menu_title_new_book"> </string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">  .    .</string>
+  <string name="label_split_count">%1$d </string>
+  <string name="label_inside_account_with_name">%1$s </string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index c48fbffd..6d2c0afd 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -273,10 +273,10 @@
   <string name="title_restore_backup">Gjenopprette sikkerhetskopi&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; eksport</string>
   <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_owncloud_sync_preference">Aktiver ownCloud </string>
   <string name="title_backup_preference_category">Sikkerhetskopiering</string>
   <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_owncloud_sync">Aktiver eksport til ownCloud</string>
   <string name="title_select_gnucash_xml_file">Velg GnuCash XML-fil</string>
   <string name="title_backup_prefs">Innstillinger for sikkerhetskopiering</string>
   <string name="title_create_backup_pref">Opprett sikkerhetskopi</string>
@@ -285,7 +285,7 @@
   <string name="toast_backup_successful">Sikkerhetskopiering vellykket</string>
   <string name="toast_backup_failed">Sikkerhetskopiering mislyktes</string>
   <string name="export_warning_xml">Eksporterer alle kontoer og transaksjoner</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
+  <string name="title_google_drive_sync_pref">Aktiver Google Drive</string>
   <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
   <string name="toast_install_file_manager">Installer en filbehandler for  velge filer</string>
   <string name="title_select_backup_to_restore">Velg sikkerhetskopien som skal gjenopprettes</string>
@@ -295,8 +295,8 @@
   <string name="nav_menu_scheduled_transactions">Planlagte transaksjoner</string>
   <string name="nav_menu_export">Eksport&#8230;</string>
   <string name="nav_menu_settings">Innstillinger</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
+  <string name="username">Brukernavn</string>
+  <string name="password">Passord</string>
   <string name="owncloud_pref">owncloud</string>
   <string name="owncloud_server">https://</string>
   <string name="owncloud_server_invalid">OC server not found</string>
diff --git a/app/src/main/res/values-no-rNO/strings.xml b/app/src/main/res/values-no-rNO/strings.xml
index c48fbffd..b3ee830e 100644
--- a/app/src/main/res/values-no-rNO/strings.xml
+++ b/app/src/main/res/values-no-rNO/strings.xml
@@ -58,7 +58,7 @@
   <string name="hint_export_choice">Standard eksporteres bare nye transaksjoner siden siste eksport. Merk dette alternativet for  eksportere alle transaksjoner</string>
   <string name="toast_export_error">Feil ved eksport av %1$s</string>
   <string name="btn_export">Eksporter</string>
-  <string name="option_delete_after_export">Delete transactions after export</string>
+  <string name="option_delete_after_export">Slett transaksjoner etter eksport</string>
   <string name="hint_delete_after_export">Alle eksporterte transaksjoner slettes nr eksport er fullfrt</string>
   <string name="title_settings">Innstillinger</string>
   <string-array name="export_destinations">
@@ -66,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Disk</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>Send til&#8230;</item>
   </string-array>
   <string name="btn_move">Flytt</string>
   <string name="title_move_transactions">Flytt %1$d transaksjon(er)</string>
@@ -272,10 +272,10 @@
   <string name="label_tap_to_create_schedule">Trykk for  opprette plan</string>
   <string name="title_restore_backup">Gjenopprette sikkerhetskopi&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; eksport</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference">Aktiver DropBox</string>
+  <string name="title_owncloud_sync_preference">Aktiver ownCloud </string>
   <string name="title_backup_preference_category">Sikkerhetskopiering</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_dropbox_sync">Aktiver eksportering til DropBox</string>
   <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
   <string name="title_select_gnucash_xml_file">Velg GnuCash XML-fil</string>
   <string name="title_backup_prefs">Innstillinger for sikkerhetskopiering</string>
@@ -285,8 +285,8 @@
   <string name="toast_backup_successful">Sikkerhetskopiering vellykket</string>
   <string name="toast_backup_failed">Sikkerhetskopiering mislyktes</string>
   <string name="export_warning_xml">Eksporterer alle kontoer og transaksjoner</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Aktiver Google Drive</string>
+  <string name="summary_google_drive_sync">Aktiver eksportering til Google Drive</string>
   <string name="toast_install_file_manager">Installer en filbehandler for  velge filer</string>
   <string name="title_select_backup_to_restore">Velg sikkerhetskopien som skal gjenopprettes</string>
   <string name="nav_menu_favorites">Favoritter</string>
@@ -295,8 +295,8 @@
   <string name="nav_menu_scheduled_transactions">Planlagte transaksjoner</string>
   <string name="nav_menu_export">Eksport&#8230;</string>
   <string name="nav_menu_settings">Innstillinger</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
+  <string name="username">Brukernavn</string>
+  <string name="password">Passord</string>
   <string name="owncloud_pref">owncloud</string>
   <string name="owncloud_server">https://</string>
   <string name="owncloud_server_invalid">OC server not found</string>
@@ -392,16 +392,16 @@
   <string name="summary_google_plus">Dele ideer, diskutere endringer eller rapportere problemer</string>
   <string name="summary_translate_gnucash">Oversette eller korrekturles p CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">Ingen kompatible apper til  motta de eksporterte transaksjonene!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
-  <string name="menu_duplicate_transaction">Duplicate</string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
+  <string name="menu_move_transaction">Flytt&#8230;</string>
+  <string name="menu_duplicate_transaction">Dupliser</string>
+  <string name="nav_menu_budgets">Budsjetter</string>
+  <string name="title_cash_flow_report">Kontantstrm</string>
+  <string name="title_budgets">Budsjetter</string>
+  <string name="title_use_compact_list">Aktiver Kompaktvisning</string>
   <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
+  <string name="error_invalid_exchange_rate">Ugyldig valutakurs</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="error_invalid_amount">Ugyldig belp</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index ac461d3b..8fefef89 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -104,7 +104,7 @@
   <string name="title_about"></string>
   <string name="toast_format_exported_to">%1$s\n</string>
   <string name="title_export_email">GnuCash Android %1$s </string>
-  <string name="description_export_email">GnuCash Android Export from </string>
+  <string name="description_export_email">GnuCash  </string>
   <string name="header_transaction_settings"></string>
   <string name="title_transaction_preferences"></string>
   <string name="title_account_preferences"></string>
@@ -121,7 +121,7 @@
   <string name="title_always_delete_exported_transactions"></string>
   <string name="title_default_export_email">Email</string>
   <string name="summary_default_export_email">OFXemail</string>
-  <string name="label_double_entry_account"></string>
+  <string name="label_double_entry_account"></string>
   <string name="summary_use_double_entry"></string>
   <string name="title_use_double_entry"></string>
   <string name="account_balance"></string>
@@ -435,12 +435,12 @@
   <string name="menu_manage_books"></string>
   <string name="select_chart_to_view_details"></string>
   <string name="title_confirm_delete_book"></string>
-  <string name="msg_all_book_data_will_be_deleted"></string>
+  <string name="msg_all_book_data_will_be_deleted"></string>
   <string name="btn_delete_book"></string>
   <string name="label_last_export_time"></string>
   <string name="menu_title_enable_sync"></string>
   <string name="menu_title_new_book"></string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
-  <string name="label_split_count">%1$d splits</string>
-  <string name="label_inside_account_with_name">in %1$s</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open"></string>
+  <string name="label_split_count">%1$d </string>
+  <string name="label_inside_account_with_name"> %1$s</string>
 </resources>

From ec23d695d2c0d5d500bf9057dc260299adfbf61d Mon Sep 17 00:00:00 2001
From: Weslly Oliveira <weslly99@hotmail.com>
Date: Thu, 21 Jul 2016 17:38:27 +0200
Subject: [PATCH 086/121] Fix edit button in transaction view overlapped by
 header for API level 4.x and below - fixes #446

---
 .../res/layout/activity_transaction_detail.xml     | 24 +++++++++++++---------
 1 file changed, 14 insertions(+), 10 deletions(-)

diff --git a/app/src/main/res/layout/activity_transaction_detail.xml b/app/src/main/res/layout/activity_transaction_detail.xml
index 9a8f3b8f..b8db1544 100644
--- a/app/src/main/res/layout/activity_transaction_detail.xml
+++ b/app/src/main/res/layout/activity_transaction_detail.xml
@@ -22,16 +22,7 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/fab_edit_transaction"
-        android:layout_height="40dp"
-        android:layout_width="40dp"
-        app:layout_anchor="@+id/toolbar"
-        app:layout_anchorGravity="bottom|left|start"
-        android:layout_marginLeft="8dp"
-        android:scaleType="center"
-        android:src="@drawable/ic_mode_edit_white_24dp"
-        />
+
 
     <LinearLayout
         android:orientation="vertical"
@@ -58,11 +49,14 @@
                     android:maxLines="3"
                     android:paddingBottom="20dp"
                     android:textAppearance="@style/TextAppearance.AppCompat.Widget.ActionBar.Title"/>
+
                 <TextView android:id="@+id/transaction_account"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:gravity="bottom"
                     android:layout_gravity="bottom"
+                    android:layout_marginStart="8dp"
+                    android:layout_marginLeft="8dp"
                     android:maxLines="1"
                     android:singleLine="true"
                     android:ellipsize="start"
@@ -154,4 +148,14 @@
 
         </TableLayout>
     </LinearLayout>
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab_edit_transaction"
+        android:layout_height="40dp"
+        android:layout_width="40dp"
+        app:layout_anchor="@id/toolbar"
+        app:layout_anchorGravity="bottom|left|start"
+        android:layout_marginLeft="6dp"
+        android:scaleType="center"
+        android:src="@drawable/ic_mode_edit_white_24dp"
+        />
 </android.support.design.widget.CoordinatorLayout>
\ No newline at end of file

From edf7ae5f04342a12c57b533612d276136203b033 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 3 Aug 2016 22:53:19 +0200
Subject: [PATCH 087/121] Add tests for GitHub issue #506 bug

Test that opening a multi-currency transaction and saving it again should not modify the transaction
Test that opening a multicurrency transaction and then changing it to be no longer multi-currency should maintain consistent amount for the split value and quantity

Fix getImbalance() method of transactions to ignore multicurrency transactions.
---
 .../android/test/ui/TransactionsActivityTest.java  | 266 ++++++++++++++++++---
 .../android/db/adapter/TransactionsDbAdapter.java  |   4 +-
 .../gnucash/android/importer/GncXmlHandler.java    |   4 +-
 .../org/gnucash/android/model/Transaction.java     |  17 +-
 4 files changed, 247 insertions(+), 44 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 6a52692b..1694ae59 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -71,6 +71,7 @@
 import static android.support.test.espresso.matcher.ViewMatchers.isChecked;
 import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
+import static android.support.test.espresso.matcher.ViewMatchers.withParent;
 import static android.support.test.espresso.matcher.ViewMatchers.withText;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.hamcrest.Matchers.allOf;
@@ -82,8 +83,8 @@
 public class TransactionsActivityTest {
     private static final String TRANSACTION_AMOUNT = "9.99";
 	private static final String TRANSACTION_NAME = "Pizza";
-	private static final String DUMMY_ACCOUNT_UID = "transactions-account";
-	private static final String DUMMY_ACCOUNT_NAME = "Transactions Account";
+	private static final String TRANSACTIONS_ACCOUNT_UID = "transactions-account";
+	private static final String TRANSACTIONS_ACCOUNT_NAME = "Transactions Account";
 
     private static final String TRANSFER_ACCOUNT_NAME   = "Transfer account";
     private static final String TRANSFER_ACCOUNT_UID    = "transfer_account";
@@ -109,8 +110,8 @@
 	private Account mTransferAccount;
 
 	public TransactionsActivityTest() {
-		mBaseAccount = new Account(DUMMY_ACCOUNT_NAME, COMMODITY);
-		mBaseAccount.setUID(DUMMY_ACCOUNT_UID);
+		mBaseAccount = new Account(TRANSACTIONS_ACCOUNT_NAME, COMMODITY);
+		mBaseAccount.setUID(TRANSACTIONS_ACCOUNT_UID);
 
 		mTransferAccount = new Account(TRANSFER_ACCOUNT_NAME, COMMODITY);
 		mTransferAccount.setUID(TRANSFER_ACCOUNT_UID);
@@ -120,7 +121,7 @@ public TransactionsActivityTest() {
 		mTransaction.setCommodity(COMMODITY);
 		mTransaction.setNote("What up?");
 		mTransaction.setTime(mTransactionTimeMillis);
-		Split split = new Split(new Money(TRANSACTION_AMOUNT, CURRENCY_CODE), DUMMY_ACCOUNT_UID);
+		Split split = new Split(new Money(TRANSACTION_AMOUNT, CURRENCY_CODE), TRANSACTIONS_ACCOUNT_UID);
 		split.setType(TransactionType.DEBIT);
 
 		mTransaction.addSplit(split);
@@ -156,10 +157,10 @@ public void setUp() throws Exception {
 		assertThat(mTransactionsDbAdapter.getRecordsCount()).isEqualTo(1);
 
 		Intent intent = new Intent(Intent.ACTION_VIEW);
-		intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, DUMMY_ACCOUNT_UID);
+		intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, TRANSACTIONS_ACCOUNT_UID);
 		mTransactionsActivity = mActivityRule.launchActivity(intent);
 
-		refreshTransactionsList();
+		//refreshTransactionsList();
 	}
 
 
@@ -168,7 +169,7 @@ private void validateTransactionListDisplayed(){
 	}
 	
 	private int getTransactionCount(){
-        return mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID).size();
+        return mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID).size();
 	}
 	
 	private void validateTimeInput(long timeMillis){
@@ -183,7 +184,7 @@ private void validateTimeInput(long timeMillis){
 	public void testAddTransactionShouldRequireAmount(){
 		validateTransactionListDisplayed();
 		
-		int beforeCount = mTransactionsDbAdapter.getTransactionsCount(DUMMY_ACCOUNT_UID);
+		int beforeCount = mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID);
         onView(withId(R.id.fab_create_transaction)).perform(click());
 
 		onView(withId(R.id.input_transaction_name))
@@ -198,7 +199,7 @@ public void testAddTransactionShouldRequireAmount(){
 
 		assertToastDisplayed(R.string.toast_transanction_amount_required);
 
-		int afterCount = mTransactionsDbAdapter.getTransactionsCount(DUMMY_ACCOUNT_UID);
+		int afterCount = mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID);
 		assertThat(afterCount).isEqualTo(beforeCount);
 
 	}
@@ -230,7 +231,7 @@ private void validateEditTransactionFields(Transaction transaction){
 
 		onView(withId(R.id.input_transaction_name)).check(matches(withText(transaction.getDescription())));
 
-		Money balance = transaction.getBalance(DUMMY_ACCOUNT_UID);
+		Money balance = transaction.getBalance(TRANSACTIONS_ACCOUNT_UID);
 		NumberFormat formatter = NumberFormat.getInstance(Locale.getDefault());
 		formatter.setMinimumFractionDigits(2);
 		formatter.setMaximumFractionDigits(2);
@@ -266,7 +267,7 @@ public void testAddTransaction(){
 
         validateTransactionListDisplayed();
 
-        List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID);
+        List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID);
         assertThat(transactions).hasSize(2);
         Transaction transaction = transactions.get(0);
 		assertThat(transaction.getSplits()).hasSize(2);
@@ -409,11 +410,11 @@ public void childAccountsShouldUseParentTransferAccountSetting(){
 		mAccountsDbAdapter.addRecord(new Account("Higher account"), DatabaseAdapter.UpdateMethod.insert);
 
 		Account childAccount = new Account("Child Account");
-		childAccount.setParentUID(DUMMY_ACCOUNT_UID);
+		childAccount.setParentUID(TRANSACTIONS_ACCOUNT_UID);
 		mAccountsDbAdapter.addRecord(childAccount, DatabaseAdapter.UpdateMethod.insert);
 		ContentValues contentValues = new ContentValues();
 		contentValues.put(DatabaseSchema.AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID, transferAccount.getUID());
-		mAccountsDbAdapter.updateRecord(DUMMY_ACCOUNT_UID, contentValues);
+		mAccountsDbAdapter.updateRecord(TRANSACTIONS_ACCOUNT_UID, contentValues);
 
 		Intent intent = new Intent(mTransactionsActivity, TransactionsActivity.class);
 		intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
@@ -445,11 +446,11 @@ public void testToggleTransactionType(){
 
 		onView(withId(R.id.menu_save)).perform(click());
 		
-		List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID);
+		List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID);
 		assertThat(transactions).hasSize(1);
 		Transaction trx = transactions.get(0);
 		assertThat(trx.getSplits()).hasSize(2); //auto-balancing of splits
-		assertThat(trx.getBalance(DUMMY_ACCOUNT_UID).isNegative()).isTrue();
+		assertThat(trx.getBalance(TRANSACTIONS_ACCOUNT_UID).isNegative()).isTrue();
 	}
 
 	@Test
@@ -461,17 +462,29 @@ public void testOpenTransactionEditShouldNotModifyTransaction(){
 
 		clickOnView(R.id.menu_save);
 
-		List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID);
+		List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID);
 
 		assertThat(transactions).hasSize(1);
-		Transaction trx = transactions.get(0);
-		assertThat(TRANSACTION_NAME).isEqualTo(trx.getDescription());
+		Transaction transaction = transactions.get(0);
+		assertThat(TRANSACTION_NAME).isEqualTo(transaction.getDescription());
 		Date expectedDate = new Date(mTransactionTimeMillis);
-		Date trxDate = new Date(trx.getTimeMillis());
+		Date trxDate = new Date(transaction.getTimeMillis());
 		assertThat(TransactionFormFragment.DATE_FORMATTER.format(expectedDate))
 				.isEqualTo(TransactionFormFragment.DATE_FORMATTER.format(trxDate));
 		assertThat(TransactionFormFragment.TIME_FORMATTER.format(expectedDate))
 				.isEqualTo(TransactionFormFragment.TIME_FORMATTER.format(trxDate));
+
+		Split baseSplit = transaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0);
+		Money expectedAmount = new Money(TRANSACTION_AMOUNT, CURRENCY_CODE);
+		assertThat(baseSplit.getValue()).isEqualTo(expectedAmount);
+		assertThat(baseSplit.getQuantity()).isEqualTo(expectedAmount);
+		assertThat(baseSplit.getType()).isEqualTo(TransactionType.DEBIT);
+
+		Split transferSplit = transaction.getSplits(TRANSFER_ACCOUNT_UID).get(0);
+		assertThat(transferSplit.getValue()).isEqualTo(expectedAmount);
+		assertThat(transferSplit.getQuantity()).isEqualTo(expectedAmount);
+		assertThat(transferSplit.getType()).isEqualTo(TransactionType.CREDIT);
+
 	}
 
 	@Test
@@ -479,7 +492,7 @@ public void testDeleteTransaction(){
 		onView(withId(R.id.options_menu)).perform(click());
 		onView(withText(R.string.menu_delete)).perform(click());
 
-		long id = mAccountsDbAdapter.getID(DUMMY_ACCOUNT_UID);
+		long id = mAccountsDbAdapter.getID(TRANSACTIONS_ACCOUNT_UID);
 		assertThat(0).isEqualTo(mTransactionsDbAdapter.getTransactionsCount(id));
 	}
 
@@ -496,7 +509,7 @@ public void testMoveTransaction(){
 
 		onView(withId(R.id.btn_save)).perform(click());
 
-		assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID)).hasSize(0);
+		assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID)).hasSize(0);
 
 		assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(account.getUID())).hasSize(1);
 
@@ -522,7 +535,7 @@ public void editingSplit_shouldNotSetAmountToZero(){
 
 		onView(withId(R.id.btn_split_editor)).perform(click());
 
-//		onView(withSpinnerText(DUMMY_ACCOUNT_NAME)).perform(click()); //// FIXME: 03.11.2015 properly select the spinner
+//		onView(withSpinnerText(TRANSACTIONS_ACCOUNT_NAME)).perform(click()); //// FIXME: 03.11.2015 properly select the spinner
 		onData(withId(R.id.input_accounts_spinner))
 				.inAdapterView(withId(R.id.split_list_layout))
 				.atPosition(1)
@@ -536,7 +549,7 @@ public void editingSplit_shouldNotSetAmountToZero(){
 		//split should have moved from account, it should now be empty
 		onView(withId(R.id.empty_view)).check(matches(isDisplayed()));
 
-		assertThat(mAccountsDbAdapter.getAccountBalance(DUMMY_ACCOUNT_UID)).isEqualTo(Money.createZeroInstance(CURRENCY_CODE));
+		assertThat(mAccountsDbAdapter.getAccountBalance(TRANSACTIONS_ACCOUNT_UID)).isEqualTo(Money.createZeroInstance(CURRENCY_CODE));
 
 		//split
 		assertThat(mAccountsDbAdapter.getAccountBalance(account.getUID())).isEqualTo(new Money("1024", CURRENCY_CODE));
@@ -544,12 +557,12 @@ public void editingSplit_shouldNotSetAmountToZero(){
 
 	@Test
 	public void testDuplicateTransaction(){
-		assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID)).hasSize(1);
+		assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID)).hasSize(1);
 
 		onView(withId(R.id.options_menu)).perform(click());
 		onView(withText(R.string.menu_duplicate_transaction)).perform(click());
 
-		List<Transaction> dummyAccountTrns = mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID);
+		List<Transaction> dummyAccountTrns = mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID);
 		assertThat(dummyAccountTrns).hasSize(2);
 
 		assertThat(dummyAccountTrns.get(0).getDescription()).isEqualTo(dummyAccountTrns.get(1).getDescription());
@@ -559,33 +572,224 @@ public void testDuplicateTransaction(){
 	//TODO: add normal transaction recording
 	@Test
 	public void testLegacyIntentTransactionRecording(){
-		int beforeCount = mTransactionsDbAdapter.getTransactionsCount(DUMMY_ACCOUNT_UID);
+		int beforeCount = mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID);
 		Intent transactionIntent = new Intent(Intent.ACTION_INSERT);
 		transactionIntent.setType(Transaction.MIME_TYPE);
 		transactionIntent.putExtra(Intent.EXTRA_TITLE, "Power intents");
 		transactionIntent.putExtra(Intent.EXTRA_TEXT, "Intents for sale");
 		transactionIntent.putExtra(Transaction.EXTRA_AMOUNT, new BigDecimal(4.99));
-		transactionIntent.putExtra(Transaction.EXTRA_ACCOUNT_UID, DUMMY_ACCOUNT_UID);
+		transactionIntent.putExtra(Transaction.EXTRA_ACCOUNT_UID, TRANSACTIONS_ACCOUNT_UID);
 		transactionIntent.putExtra(Transaction.EXTRA_TRANSACTION_TYPE, TransactionType.DEBIT.name());
 		transactionIntent.putExtra(Account.EXTRA_CURRENCY_CODE, "USD");
 
 		new TransactionRecorder().onReceive(mTransactionsActivity, transactionIntent);
 
-		int afterCount = mTransactionsDbAdapter.getTransactionsCount(DUMMY_ACCOUNT_UID);
+		int afterCount = mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID);
 		
 		assertThat(beforeCount + 1).isEqualTo(afterCount);
 		
-		List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID);
+		List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID);
 		
 		for (Transaction transaction : transactions) {
 			if (transaction.getDescription().equals("Power intents")){
 				assertThat("Intents for sale").isEqualTo(transaction.getNote());
-				assertThat(4.99).isEqualTo(transaction.getBalance(DUMMY_ACCOUNT_UID).asDouble());
+				assertThat(4.99).isEqualTo(transaction.getBalance(TRANSACTIONS_ACCOUNT_UID).asDouble());
 			}
 		}
 	}
 
 	/**
+	 * Opening a transactions and then hitting save button without changing anything should have no side-effects
+	 * This is similar to the test @{@link #testOpenTransactionEditShouldNotModifyTransaction()}
+	 * with the difference that this test checks multi-currency transactions
+	 */
+	@Test
+	public void openingAndSavingMultiCurrencyTransaction_shouldNotModifyTheSplits(){
+		Commodity bgnCommodity = CommoditiesDbAdapter.getInstance().getCommodity("BGN");
+		Account account = new Account("Zen Account", bgnCommodity);
+
+		mAccountsDbAdapter.addRecord(account);
+
+		onView(withId(R.id.fab_create_transaction)).perform(click());
+		String trnDescription = "Multi-currency trn";
+		onView(withId(R.id.input_transaction_name)).perform(typeText(trnDescription));
+		onView(withId(R.id.input_transaction_amount)).perform(typeText("10"));
+		Espresso.closeSoftKeyboard();
+
+		onView(withId(R.id.input_transfer_account_spinner)).perform(click());
+		onView(withText(account.getFullName())).perform(click());
+
+		//at this point, the transfer funds dialog should be shown
+		onView(withText(R.string.msg_provide_exchange_rate)).check(matches(isDisplayed()));
+		onView(withId(R.id.radio_converted_amount)).perform(click());
+		onView(withId(R.id.input_converted_amount)).perform(typeText("5"));
+
+		Espresso.closeSoftKeyboard();
+		onView(withId(R.id.btn_save)).perform(click()); //close currency exchange dialog
+		onView(withId(R.id.menu_save)).perform(click()); //save transaction
+
+		List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactionsForAccount(account.getUID());
+		assertThat(transactions).hasSize(1);
+		Transaction transaction = transactions.get(0);
+		assertThat(transaction.getSplits()).hasSize(2);
+		assertThat(transaction.getSplits()).extracting("mAccountUID")
+				.contains(account.getUID()).contains(mBaseAccount.getUID());
+
+
+		onView(allOf(withParent(hasDescendant(withText(trnDescription))),
+				withId(R.id.edit_transaction))).perform(click());
+
+		//do nothing to the transaction, just save it
+		onView(withId(R.id.menu_save)).perform(click());
+
+		transaction = mTransactionsDbAdapter.getRecord(transaction.getUID());
+
+		Split baseSplit = transaction.getSplits(mBaseAccount.getUID()).get(0);
+		Money expectedValueAmount = new Money(BigDecimal.TEN, COMMODITY);
+		assertThat(baseSplit.getValue()).isEqualTo(expectedValueAmount);
+		assertThat(baseSplit.getQuantity()).isEqualTo(expectedValueAmount);
+
+		Split transferSplit = transaction.getSplits(account.getUID()).get(0);
+		Money convertedQuantity = new Money("5", "BGN");
+		assertThat(transferSplit.getValue()).isEqualTo(expectedValueAmount);
+		assertThat(transferSplit.getQuantity()).isEqualTo(convertedQuantity);
+	}
+
+	/**
+	 * If a multi-currency transaction is edited so that it is no longer multicurrency, then the
+	 * values for split and quantity should be adjusted accordingly so that they are consistent
+	 * <p>
+	 *     Basically the test works like this:
+	 *     <ol>
+	 *         <li>Create a multicurrency transaction</li>
+	 *         <li>Change the transfer account so that both splits are of the same currency</li>
+	 *         <li>We now expect both the values and quantities of the splits to be the same</li>
+	 *     </ol>
+	 * </p>
+	 */
+	@Test
+	public void testEditingTransferAccountOfMultiCurrencyTransaction(){
+		mTransactionsDbAdapter.deleteAllRecords(); //clean slate
+		Commodity euroCommodity = CommoditiesDbAdapter.getInstance().getCommodity("EUR");
+		Account euroAccount = new Account("Euro Account", euroCommodity);
+
+		mAccountsDbAdapter.addRecord(euroAccount);
+
+		Money expectedValue = new Money(BigDecimal.TEN, COMMODITY);
+		Money expectedQty = new Money("5", "EUR");
+
+		String trnDescription = "Multicurrency Test Trn";
+		Transaction multiTransaction = new Transaction(trnDescription);
+		Split split1 = new Split(expectedValue, TRANSACTIONS_ACCOUNT_UID);
+		split1.setType(TransactionType.DEBIT);
+		Split split2 = new Split(expectedValue, expectedQty, euroAccount.getUID());
+		split2.setType(TransactionType.CREDIT);
+		multiTransaction.addSplit(split1);
+		multiTransaction.addSplit(split2);
+		multiTransaction.setCommodity(COMMODITY);
+
+		mTransactionsDbAdapter.addRecord(multiTransaction);
+
+		Transaction savedTransaction = mTransactionsDbAdapter.getRecord(multiTransaction.getUID());
+		assertThat(savedTransaction.getSplits()).extracting("mQuantity").contains(expectedQty);
+		assertThat(savedTransaction.getSplits()).extracting("mValue").contains(expectedValue);
+
+		refreshTransactionsList();
+		onView(withText(trnDescription)).check(matches(isDisplayed())); //transaction was added
+		onView(allOf(withParent(hasDescendant(withText(trnDescription))),
+				withId(R.id.edit_transaction))).perform(click());
+
+		//now change the transfer account to be no longer multi-currency
+		onView(withId(R.id.input_transfer_account_spinner)).perform(click());
+		onView(withText(mTransferAccount.getFullName())).perform(click());
+
+		onView(withId(R.id.menu_save)).perform(click());
+
+		//no splits should be in the euro account anymore
+		List<Transaction> euroTransxns = mTransactionsDbAdapter.getAllTransactionsForAccount(euroAccount.getUID());
+		assertThat(euroTransxns).hasSize(0);
+
+		List<Transaction> transferAcctTrns = mTransactionsDbAdapter.getAllTransactionsForAccount(mTransferAccount.getUID());
+		assertThat(transferAcctTrns).hasSize(1);
+
+		Transaction singleCurrencyTrn = transferAcctTrns.get(0);
+		assertThat(singleCurrencyTrn.getUID()).isEqualTo(multiTransaction.getUID()); //should be the same one, just different splits
+
+		//the crux of the test. All splits should now have value and quantity of USD $10
+		List<Split> allSplits = singleCurrencyTrn.getSplits();
+		assertThat(allSplits).extracting("mAccountUID")
+				.contains(mTransferAccount.getUID())
+				.doesNotContain(euroAccount.getUID());
+		assertThat(allSplits).extracting("mValue").contains(expectedValue).doesNotContain(expectedQty);
+		assertThat(allSplits).extracting("mQuantity").contains(expectedValue).doesNotContain(expectedQty);
+	}
+
+	/**
+	 * In this test we check that editing a transaction and switching the transfer account to one
+	 * which is of a different currency and then back again should not have side-effects.
+	 * The split value and quantity should remain consistent.
+	 */
+	@Test
+	public void editingTransferAccount_shouldKeepSplitAmountsConsistent() {
+		mTransactionsDbAdapter.deleteAllRecords(); //clean slate
+		Commodity euroCommodity = CommoditiesDbAdapter.getInstance().getCommodity("EUR");
+		Account euroAccount = new Account("Euro Account", euroCommodity);
+
+		mAccountsDbAdapter.addRecord(euroAccount);
+
+		Money expectedValue = new Money(BigDecimal.TEN, COMMODITY);
+		Money expectedQty = new Money("5", "EUR");
+
+		String trnDescription = "Multicurrency Test Trn";
+		Transaction multiTransaction = new Transaction(trnDescription);
+		Split split1 = new Split(expectedValue, TRANSACTIONS_ACCOUNT_UID);
+		split1.setType(TransactionType.DEBIT);
+		Split split2 = new Split(expectedValue, expectedQty, euroAccount.getUID());
+		split2.setType(TransactionType.CREDIT);
+		multiTransaction.addSplit(split1);
+		multiTransaction.addSplit(split2);
+		multiTransaction.setCommodity(COMMODITY);
+
+		mTransactionsDbAdapter.addRecord(multiTransaction);
+
+		Transaction savedTransaction = mTransactionsDbAdapter.getRecord(multiTransaction.getUID());
+		assertThat(savedTransaction.getSplits()).extracting("mQuantity").contains(expectedQty);
+		assertThat(savedTransaction.getSplits()).extracting("mValue").contains(expectedValue);
+
+		refreshTransactionsList();
+
+		//open transaction for editing
+		onView(withText(trnDescription)).check(matches(isDisplayed())); //transaction was added
+		onView(allOf(withParent(hasDescendant(withText(trnDescription))),
+				withId(R.id.edit_transaction))).perform(click());
+
+		onView(withId(R.id.input_transfer_account_spinner)).perform(click());
+		onView(withText(TRANSFER_ACCOUNT_NAME)).perform(click());
+
+		onView(withId(R.id.input_transfer_account_spinner)).perform(click());
+		onView(withText(euroAccount.getFullName())).perform(click());
+		onView(withId(R.id.input_converted_amount)).perform(typeText("5"));
+		Espresso.closeSoftKeyboard();
+		onView(withId(R.id.btn_save)).perform(click());
+
+		onView(withId(R.id.input_transfer_account_spinner)).perform(click());
+		onView(withText(TRANSFER_ACCOUNT_NAME)).perform(click());
+
+		onView(withId(R.id.menu_save)).perform(click());
+
+		Money transferBalance = mAccountsDbAdapter.getAccountBalance(TRANSFER_ACCOUNT_UID);
+		assertThat(transferBalance).isEqualTo(expectedValue);
+
+		Transaction editedTransaction = mTransactionsDbAdapter.getRecord(multiTransaction.getUID());
+		assertThat(editedTransaction.getBalance(TRANSFER_ACCOUNT_UID)).isEqualTo(expectedValue);
+
+		Split transferAcctSplit = editedTransaction.getSplits(TRANSFER_ACCOUNT_UID).get(0);
+		assertThat(transferAcctSplit.getQuantity()).isEqualTo(expectedValue);
+		assertThat(transferAcctSplit.getValue()).isEqualTo(expectedValue);
+
+	}
+
+	/**
 	 * Simple wrapper for clicking on views with espresso
 	 * @param viewId View resource ID
 	 */
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
index 1a9fb18c..da9341b3 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
@@ -97,10 +97,10 @@ public SplitsDbAdapter getSplitDbAdapter() {
 	 */
     @Override
 	public void addRecord(@NonNull Transaction transaction, UpdateMethod updateMethod){
-        Log.d(LOG_TAG, "Replacing transaction in db");
+        Log.d(LOG_TAG, "Adding transaction to the db via " + updateMethod.name());
         mDb.beginTransaction();
         try {
-            Split imbalanceSplit = transaction.getAutoBalanceSplit();
+            Split imbalanceSplit = transaction.createAutoBalanceSplit();
             if (imbalanceSplit != null){
                 String imbalanceAccountUID = AccountsDbAdapter.getInstance().getOrCreateImbalanceAccountUID(transaction.getCurrency());
                 imbalanceSplit.setAccountUID(imbalanceAccountUID);
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index a358561f..4a610ea6 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -688,7 +688,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                 break;
             case GncXmlHelper.TAG_TRANSACTION:
                 mTransaction.setTemplate(mInTemplates);
-                Split imbSplit = mTransaction.getAutoBalanceSplit();
+                Split imbSplit = mTransaction.createAutoBalanceSplit();
                 if (imbSplit != null) {
                     mAutoBalanceSplits.add(imbSplit);
                 }
@@ -899,7 +899,7 @@ public void endDocument() throws SAXException {
 
         // Set the account for created balancing splits to correct imbalance accounts
         for (Split split: mAutoBalanceSplits) {
-            // XXX: yes, getAccountUID() returns a currency code in this case (see Transaction.getAutoBalanceSplit())
+            // XXX: yes, getAccountUID() returns a currency code in this case (see Transaction.createAutoBalanceSplit())
             String currencyCode = split.getAccountUID();
             Account imbAccount = mapImbalanceAccount.get(currencyCode);
             if (imbAccount == null) {
diff --git a/app/src/main/java/org/gnucash/android/model/Transaction.java b/app/src/main/java/org/gnucash/android/model/Transaction.java
index e3ee904b..2f661676 100644
--- a/app/src/main/java/org/gnucash/android/model/Transaction.java
+++ b/app/src/main/java/org/gnucash/android/model/Transaction.java
@@ -171,19 +171,18 @@ private void initDefaults(){
 	}
 
     /**
-     * Creates a split which will balance the transaction
-     * <p><b>Note:</b>If a transaction has splits with different currencies, not auto-balancing will be performed.</p>
+     * Creates a split which will balance the transaction, in value.
+     * <p><b>Note:</b>If a transaction has splits with different currencies, no auto-balancing will be performed.</p>
      *
      * <p>The added split will not use any account in db, but will use currency code as account UID.
      * The added split will be returned, to be filled with proper account UID later.</p>
      * @return Split whose amount is the imbalance of this transaction
      */
-    public Split getAutoBalanceSplit(){
-        Money imbalance = getImbalance();
+    public Split createAutoBalanceSplit(){
+        Money imbalance = getImbalance(); //returns imbalance of 0 for multicurrency transactions
         if (!imbalance.isAmountZero()){
-            Currency currency = Currency.getInstance(mCurrencyCode);
-            Split split = new Split(imbalance.negate(),
-                    currency.getCurrencyCode());
+            Split split = new Split(imbalance.negate(), mCurrencyCode); //yes, this is on purpose
+            //the account UID is set to the currency. This should be overridden before saving to db
             addSplit(split);
             return split;
         }
@@ -250,13 +249,13 @@ public Money getBalance(String accountUID){
     /**
      * Computes the imbalance amount for the given transaction.
      * In double entry, all transactions should resolve to zero. But imbalance occurs when there are unresolved splits.
-     * <p>If it is a multi-currency transaction, an imbalance of zero will be returned</p>
+     * <p><b>Note:</b> If this is a multi-currency transaction, an imbalance of zero will be returned</p>
      * @return Money imbalance of the transaction or zero if it is a multi-currency transaction
      */
     public Money getImbalance(){
         Money imbalance = Money.createZeroInstance(mCurrencyCode);
         for (Split split : mSplitList) {
-            if (!split.getValue().getCurrency().getCurrencyCode().equals(mCurrencyCode)) {
+            if (!split.getQuantity().getCurrency().getCurrencyCode().equals(mCurrencyCode)) {
                 // this may happen when importing XML exported from GNCA before 2.0.0
                 // these transactions should only be imported from XML exported from GNC desktop
                 // so imbalance split should not be generated for them

From 6ee97a12912175030d45c5d8822c11e9e1bcfa76 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 4 Aug 2016 08:36:32 +0200
Subject: [PATCH 088/121] Add equals() and hashcode() methods for Splits

Add test for simple adding of multicurrency transactions
---
 .../android/test/ui/TransactionsActivityTest.java  | 57 +++++++++++++++++++++-
 .../main/java/org/gnucash/android/model/Split.java | 31 ++++++++++++
 2 files changed, 87 insertions(+), 1 deletion(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 1694ae59..5b4fe1d4 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -276,6 +276,56 @@ public void testAddTransaction(){
     }
 
 	@Test
+	public void testAddMultiCurrencyTransaction(){
+		Commodity euro = Commodity.getInstance("EUR");
+		Account euroAccount = new Account("Euro Konto", euro);
+		mAccountsDbAdapter.addRecord(euroAccount);
+
+		int transactionCount = mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID);
+		setDoubleEntryEnabled(true);
+		setDefaultTransactionType(TransactionType.DEBIT);
+		validateTransactionListDisplayed();
+
+		onView(withId(R.id.fab_create_transaction)).perform(click());
+
+		String transactionName = "Multicurrency lunch";
+		onView(withId(R.id.input_transaction_name)).perform(typeText(transactionName));
+		onView(withId(R.id.input_transaction_amount)).perform(typeText("10"));
+		Espresso.pressBack(); //close calculator keyboard
+
+		onView(withId(R.id.input_transfer_account_spinner)).perform(click());
+		onView(withText(euroAccount.getFullName())).check(matches(isDisplayed())).perform(click());
+
+		onView(withId(R.id.menu_save)).perform(click());
+
+		onView(withText(R.string.msg_provide_exchange_rate)).check(matches(isDisplayed()));
+		onView(withId(R.id.radio_converted_amount)).perform(click());
+		onView(withId(R.id.input_converted_amount)).perform(typeText("5"));
+		Espresso.closeSoftKeyboard();
+		onView(withId(R.id.btn_save)).perform(click());
+
+		onView(withId(R.id.menu_save)).perform(click());
+
+		List<Transaction> allTransactions = mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID);
+		assertThat(allTransactions).hasSize(transactionCount+1);
+		Transaction multiTrans = allTransactions.get(0);
+
+		assertThat(multiTrans.getSplits()).extracting("mAccountUID")
+				.contains(TRANSACTIONS_ACCOUNT_UID)
+				.contains(euroAccount.getUID());
+
+		Split euroSplit = multiTrans.getSplits(euroAccount.getUID()).get(0);
+		Money expectedQty = new Money("5", euro.getCurrencyCode());
+		Money expectedValue = new Money(BigDecimal.TEN, COMMODITY);
+		assertThat(euroSplit.getQuantity()).isEqualTo(expectedQty);
+		assertThat(euroSplit.getValue()).isEqualTo(expectedValue);
+
+		Split usdSplit = multiTrans.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0);
+		assertThat(usdSplit.getQuantity()).isEqualTo(expectedValue);
+		assertThat(usdSplit.getValue()).isEqualTo(expectedValue);
+	}
+
+	@Test
 	public void testEditTransaction(){
 		validateTransactionListDisplayed();
 
@@ -283,8 +333,13 @@ public void testEditTransaction(){
 		
 		validateEditTransactionFields(mTransaction);
 
-		onView(withId(R.id.input_transaction_name)).perform(clearText(), typeText("Pasta"));
+		String trnName = "Pasta";
+		onView(withId(R.id.input_transaction_name)).perform(clearText(), typeText(trnName));
 		onView(withId(R.id.menu_save)).perform(click());
+
+		Transaction editedTransaction = mTransactionsDbAdapter.getRecord(mTransaction.getUID());
+		assertThat(editedTransaction.getDescription()).isEqualTo(trnName);
+		assertThat(editedTransaction.getSplits()).isEqualTo(mTransaction.getSplits());
 	}
 
 	/**
diff --git a/app/src/main/java/org/gnucash/android/model/Split.java b/app/src/main/java/org/gnucash/android/model/Split.java
index 94eaf370..09292110 100644
--- a/app/src/main/java/org/gnucash/android/model/Split.java
+++ b/app/src/main/java/org/gnucash/android/model/Split.java
@@ -441,4 +441,35 @@ public static Split parseSplit(String splitCsvString) {
             return split;
         }
     }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        if (!super.equals(o)) return false;
+
+        Split split = (Split) o;
+
+        if (mReconcileState != split.mReconcileState) return false;
+        if (!mValue.equals(split.mValue)) return false;
+        if (!mQuantity.equals(split.mQuantity)) return false;
+        if (!mTransactionUID.equals(split.mTransactionUID)) return false;
+        if (!mAccountUID.equals(split.mAccountUID)) return false;
+        if (mSplitType != split.mSplitType) return false;
+        return mMemo != null ? mMemo.equals(split.mMemo) : split.mMemo == null;
+
+    }
+
+    @Override
+    public int hashCode() {
+        int result = super.hashCode();
+        result = 31 * result + mValue.hashCode();
+        result = 31 * result + mQuantity.hashCode();
+        result = 31 * result + mTransactionUID.hashCode();
+        result = 31 * result + mAccountUID.hashCode();
+        result = 31 * result + mSplitType.hashCode();
+        result = 31 * result + (mMemo != null ? mMemo.hashCode() : 0);
+        result = 31 * result + (int) mReconcileState;
+        return result;
+    }
 }

From 4d754cf4e06ccb7d32a5da06fc259c8944dca9d7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Thu, 4 Aug 2016 11:37:18 +0200
Subject: [PATCH 089/121] Avoid crash when editing an scheduled transaction
 without end date.

Fixes https://github.com/codinguser/gnucash-android/issues/526
---
 .../main/java/org/gnucash/android/model/Recurrence.java   |  3 +++
 .../gnucash/android/test/unit/model/RecurrenceTest.java   | 15 +++++++++++++++
 2 files changed, 18 insertions(+)

diff --git a/app/src/main/java/org/gnucash/android/model/Recurrence.java b/app/src/main/java/org/gnucash/android/model/Recurrence.java
index 331a0bd1..1446f0a5 100644
--- a/app/src/main/java/org/gnucash/android/model/Recurrence.java
+++ b/app/src/main/java/org/gnucash/android/model/Recurrence.java
@@ -263,6 +263,9 @@ public String getByDay(){
      * @return Number of occurrences, or -1 if there is no end date
      */
     public int getCount(){
+        if (mPeriodEnd == null)
+            return -1;
+
         int count = 0;
         LocalDate startDate = new LocalDate(mPeriodStart.getTime());
         LocalDate endDate = new LocalDate(mPeriodEnd.getTime());
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java
index ccc54f9b..9af46e5f 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java
@@ -58,4 +58,19 @@ public void testRecurrenceCountComputation(){
 
         assertThat(recurrence.getCount()).isEqualTo(10);
     }
+
+    /**
+     * When no end period is set, getCount() should return the special value -1.
+     *
+     * <p>Tests for bug https://github.com/codinguser/gnucash-android/issues/526</p>
+     */
+    @Test
+    public void notSettingEndDate_shouldReturnSpecialCountValue() {
+        Recurrence recurrence = new Recurrence(PeriodType.MONTH);
+        Calendar cal = Calendar.getInstance();
+        cal.set(2015, Calendar.OCTOBER, 5);
+        recurrence.setPeriodStart(new Timestamp(cal.getTimeInMillis()));
+
+        assertThat(recurrence.getCount()).isEqualTo(-1);
+    }
 }

From 42817b593849fdb1853d724337c33836200d1e8e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Thu, 4 Aug 2016 18:33:55 +0200
Subject: [PATCH 090/121] Fix setting Recurrence.mPeriodEnd from
 ScheduledAction.setEndTime().

---
 .../org/gnucash/android/model/ScheduledAction.java  |  2 +-
 .../test/unit/model/ScheduledActionTest.java        | 21 +++++++++++++++++++++
 2 files changed, 22 insertions(+), 1 deletion(-)

diff --git a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
index 8bb062f7..e3a9a15d 100644
--- a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
+++ b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
@@ -213,7 +213,7 @@ public long getEndTime() {
     public void setEndTime(long endDate) {
         this.mEndDate = endDate;
         if (mRecurrence != null){
-            mRecurrence.setPeriodStart(new Timestamp(mEndDate));
+            mRecurrence.setPeriodEnd(new Timestamp(mEndDate));
         }
     }
 
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java
index f4bf0af5..1673d1f7 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java
@@ -52,6 +52,27 @@ public void settingStartTime_shouldSetRecurrenceStart(){
     }
 
     @Test
+    public void settingEndTime_shouldSetRecurrenceEnd(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        Calendar calendar = Calendar.getInstance();
+        calendar.set(2014, 8, 26);
+        long endTime = calendar.getTimeInMillis();
+        scheduledAction.setEndTime(endTime);
+        assertThat(scheduledAction.getRecurrence()).isNull();
+
+        Recurrence recurrence = new Recurrence(PeriodType.MONTH);
+        assertThat(recurrence.getPeriodEnd()).isNull();
+        scheduledAction.setRecurrence(recurrence);
+        assertThat(recurrence.getPeriodEnd().getTime()).isEqualTo(endTime);
+
+        calendar.clear();
+        calendar.set(2015, 6, 6);
+        long newEndTime = calendar.getTimeInMillis();
+        scheduledAction.setEndTime(newEndTime);
+        assertThat(recurrence.getPeriodEnd().getTime()).isEqualTo(newEndTime);
+    }
+
+    @Test
     public void settingRecurrence_shouldSetScheduledActionStartTime(){
         ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
         assertThat(scheduledAction.getStartTime()).isEqualTo(0);

From 9ff7e02c8cb51aa28efde2b847cf73a5498184f4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Thu, 4 Aug 2016 18:50:33 +0200
Subject: [PATCH 091/121] refactoring: make getting the time for the tests
 simpler.

---
 .../test/unit/model/ScheduledActionTest.java       | 36 ++++++++++------------
 1 file changed, 16 insertions(+), 20 deletions(-)

diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java
index 1673d1f7..3c298cee 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java
@@ -33,9 +33,7 @@
     @Test
     public void settingStartTime_shouldSetRecurrenceStart(){
         ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
-        Calendar calendar = Calendar.getInstance();
-        calendar.set(2014, 8, 26);
-        long startTime = calendar.getTimeInMillis();
+        long startTime = getTimeInMillis(2014, 8, 26);
         scheduledAction.setStartTime(startTime);
         assertThat(scheduledAction.getRecurrence()).isNull();
 
@@ -44,9 +42,7 @@ public void settingStartTime_shouldSetRecurrenceStart(){
         scheduledAction.setRecurrence(recurrence);
         assertThat(recurrence.getPeriodStart().getTime()).isEqualTo(startTime);
 
-        calendar.clear();
-        calendar.set(2015, 6, 6);
-        long newStartTime = calendar.getTimeInMillis();
+        long newStartTime = getTimeInMillis(2015, 6, 6);
         scheduledAction.setStartTime(newStartTime);
         assertThat(recurrence.getPeriodStart().getTime()).isEqualTo(newStartTime);
     }
@@ -54,9 +50,7 @@ public void settingStartTime_shouldSetRecurrenceStart(){
     @Test
     public void settingEndTime_shouldSetRecurrenceEnd(){
         ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
-        Calendar calendar = Calendar.getInstance();
-        calendar.set(2014, 8, 26);
-        long endTime = calendar.getTimeInMillis();
+        long endTime = getTimeInMillis(2014, 8, 26);
         scheduledAction.setEndTime(endTime);
         assertThat(scheduledAction.getRecurrence()).isNull();
 
@@ -65,9 +59,7 @@ public void settingEndTime_shouldSetRecurrenceEnd(){
         scheduledAction.setRecurrence(recurrence);
         assertThat(recurrence.getPeriodEnd().getTime()).isEqualTo(endTime);
 
-        calendar.clear();
-        calendar.set(2015, 6, 6);
-        long newEndTime = calendar.getTimeInMillis();
+        long newEndTime = getTimeInMillis(2015, 6, 6);
         scheduledAction.setEndTime(newEndTime);
         assertThat(recurrence.getPeriodEnd().getTime()).isEqualTo(newEndTime);
     }
@@ -77,12 +69,11 @@ public void settingRecurrence_shouldSetScheduledActionStartTime(){
         ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
         assertThat(scheduledAction.getStartTime()).isEqualTo(0);
 
-        Calendar calendar = Calendar.getInstance();
-        calendar.set(2014, 8, 26);
+        long startTime = getTimeInMillis(2014, 8, 26);
         Recurrence recurrence = new Recurrence(PeriodType.WEEK);
-        recurrence.setPeriodStart(new Timestamp(calendar.getTimeInMillis()));
+        recurrence.setPeriodStart(new Timestamp(startTime));
         scheduledAction.setRecurrence(recurrence);
-        assertThat(scheduledAction.getStartTime()).isEqualTo(calendar.getTimeInMillis());
+        assertThat(scheduledAction.getStartTime()).isEqualTo(startTime);
     }
 
     @Test
@@ -90,13 +81,18 @@ public void settingRecurrence_shouldSetEndTime(){
         ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
         assertThat(scheduledAction.getStartTime()).isEqualTo(0);
 
-        Calendar calendar = Calendar.getInstance();
-        calendar.set(2017, 8, 26);
+        long endTime = getTimeInMillis(2017, 8, 26);
         Recurrence recurrence = new Recurrence(PeriodType.WEEK);
-        recurrence.setPeriodEnd(new Timestamp(calendar.getTimeInMillis()));
+        recurrence.setPeriodEnd(new Timestamp(endTime));
         scheduledAction.setRecurrence(recurrence);
 
-        assertThat(scheduledAction.getEndTime()).isEqualTo(calendar.getTimeInMillis());
+        assertThat(scheduledAction.getEndTime()).isEqualTo(endTime);
+    }
+
+    private long getTimeInMillis(int year, int month, int day) {
+        Calendar calendar = Calendar.getInstance();
+        calendar.set(year, month, day);
+        return calendar.getTimeInMillis();
     }
 
     //todo add test for computing the scheduledaction endtime from the recurrence count

From 96a204564147d54ca0b2ec8b393fb5c3aa33c5d1 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 4 Aug 2016 21:54:26 +0200
Subject: [PATCH 092/121] Fix issue where editing the transfer account of a
 transaction could cause inconsistency in the split value and quantity

Splits now implement Parcelable - easing passing of data between TransactionForm and SplitEditor
Update the transaction UID of all splits whenever the UID of a transaction is set
Add tests for multi-currency transaction creation and editing

- fixes #506
- closes #524
---
 .../android/test/ui/TransactionsActivityTest.java  |  45 +++-
 .../android/db/adapter/PricesDbAdapter.java        |  10 +-
 .../main/java/org/gnucash/android/model/Split.java | 110 ++++++++-
 .../org/gnucash/android/model/Transaction.java     |  13 ++
 .../org/gnucash/android/ui/common/UxArgument.java  |   6 -
 .../ui/transaction/SplitEditorFragment.java        |  25 +-
 .../ui/transaction/TransactionFormFragment.java    | 257 ++++++++++++---------
 .../android/ui/util/widget/CalculatorEditText.java |   4 +-
 .../gnucash/android/test/unit/model/SplitTest.java |   1 +
 .../android/test/unit/model/TransactionTest.java   |  24 ++
 10 files changed, 343 insertions(+), 152 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 5b4fe1d4..27ccf936 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -191,10 +191,13 @@ public void testAddTransactionShouldRequireAmount(){
 				.check(matches(isDisplayed()))
 				.perform(typeText("Lunch"));
 
-		onView(withId(R.id.menu_save)).perform(click());
+		Espresso.closeSoftKeyboard();
+
+		onView(withId(R.id.menu_save))
+				.check(matches(isDisplayed()))
+				.perform(click());
 		onView(withText(R.string.title_add_transaction)).check(matches(isDisplayed()));
 
-		Espresso.closeSoftKeyboard();
 		sleep(1000);
 
 		assertToastDisplayed(R.string.toast_transanction_amount_required);
@@ -294,7 +297,9 @@ public void testAddMultiCurrencyTransaction(){
 		Espresso.pressBack(); //close calculator keyboard
 
 		onView(withId(R.id.input_transfer_account_spinner)).perform(click());
-		onView(withText(euroAccount.getFullName())).check(matches(isDisplayed())).perform(click());
+		onView(withText(euroAccount.getFullName()))
+				.check(matches(isDisplayed()))
+				.perform(click());
 
 		onView(withId(R.id.menu_save)).perform(click());
 
@@ -309,7 +314,7 @@ public void testAddMultiCurrencyTransaction(){
 		List<Transaction> allTransactions = mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID);
 		assertThat(allTransactions).hasSize(transactionCount+1);
 		Transaction multiTrans = allTransactions.get(0);
-
+		assertThat(multiTrans.getSplits()).hasSize(2);
 		assertThat(multiTrans.getSplits()).extracting("mAccountUID")
 				.contains(TRANSACTIONS_ACCOUNT_UID)
 				.contains(euroAccount.getUID());
@@ -339,7 +344,15 @@ public void testEditTransaction(){
 
 		Transaction editedTransaction = mTransactionsDbAdapter.getRecord(mTransaction.getUID());
 		assertThat(editedTransaction.getDescription()).isEqualTo(trnName);
-		assertThat(editedTransaction.getSplits()).isEqualTo(mTransaction.getSplits());
+		assertThat(editedTransaction.getSplits()).hasSize(2);
+
+		Split split = mTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0);
+		Split editedSplit = editedTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0);
+		assertThat(split.isEquivalentTo(editedSplit)).isTrue();
+
+		split = mTransaction.getSplits(TRANSFER_ACCOUNT_UID).get(0);
+		editedSplit = editedTransaction.getSplits(TRANSFER_ACCOUNT_UID).get(0);
+		assertThat(split.isEquivalentTo(editedSplit)).isTrue();
 	}
 
 	/**
@@ -403,8 +416,7 @@ public void testSplitEditor(){
 
 		onView(withId(R.id.split_list_layout)).check(matches(allOf(isDisplayed(), hasDescendant(withId(R.id.input_split_amount)))));
 
-		onView(withId(R.id.menu_add_split)).perform(click());
-
+		onView(allOf(withId(R.id.input_split_amount), withText("-499"))).perform(clearText());
 		onView(allOf(withId(R.id.input_split_amount), withText(""))).perform(typeText("400"));
 
 		onView(withId(R.id.menu_save)).perform(click());
@@ -798,9 +810,9 @@ public void editingTransferAccount_shouldKeepSplitAmountsConsistent() {
 		String trnDescription = "Multicurrency Test Trn";
 		Transaction multiTransaction = new Transaction(trnDescription);
 		Split split1 = new Split(expectedValue, TRANSACTIONS_ACCOUNT_UID);
-		split1.setType(TransactionType.DEBIT);
+		split1.setType(TransactionType.CREDIT);
 		Split split2 = new Split(expectedValue, expectedQty, euroAccount.getUID());
-		split2.setType(TransactionType.CREDIT);
+		split2.setType(TransactionType.DEBIT);
 		multiTransaction.addSplit(split1);
 		multiTransaction.addSplit(split2);
 		multiTransaction.setCommodity(COMMODITY);
@@ -811,6 +823,10 @@ public void editingTransferAccount_shouldKeepSplitAmountsConsistent() {
 		assertThat(savedTransaction.getSplits()).extracting("mQuantity").contains(expectedQty);
 		assertThat(savedTransaction.getSplits()).extracting("mValue").contains(expectedValue);
 
+		assertThat(savedTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)
+				.isEquivalentTo(multiTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)))
+				.isTrue();
+
 		refreshTransactionsList();
 
 		//open transaction for editing
@@ -832,10 +848,17 @@ public void editingTransferAccount_shouldKeepSplitAmountsConsistent() {
 
 		onView(withId(R.id.menu_save)).perform(click());
 
+		Transaction editedTransaction = mTransactionsDbAdapter.getRecord(multiTransaction.getUID());
+		assertThat(editedTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)
+				.isEquivalentTo(savedTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)))
+				.isTrue();
+
+		Money firstAcctBalance = mAccountsDbAdapter.getAccountBalance(TRANSACTIONS_ACCOUNT_UID);
+		assertThat(firstAcctBalance).isEqualTo(editedTransaction.getBalance(TRANSACTIONS_ACCOUNT_UID));
+
 		Money transferBalance = mAccountsDbAdapter.getAccountBalance(TRANSFER_ACCOUNT_UID);
-		assertThat(transferBalance).isEqualTo(expectedValue);
+		assertThat(transferBalance).isEqualTo(editedTransaction.getBalance(TRANSFER_ACCOUNT_UID));
 
-		Transaction editedTransaction = mTransactionsDbAdapter.getRecord(multiTransaction.getUID());
 		assertThat(editedTransaction.getBalance(TRANSFER_ACCOUNT_UID)).isEqualTo(expectedValue);
 
 		Split transferAcctSplit = editedTransaction.getSplits(TRANSFER_ACCOUNT_UID).get(0);
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter.java
index 3a391619..5f89148e 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/PricesDbAdapter.java
@@ -77,10 +77,14 @@ public Price buildModelInstance(@NonNull final Cursor cursor) {
     }
 
     /**
-     * get the price for commodity / currency pair
+     * Get the price for commodity / currency pair.
+     * The price can be used to convert from one commodity to another. The 'commodity' is the origin and the 'currency' is the target for the conversion.
      *
-     * Pair is used instead of Price because we must sometimes invert the commodity/currency in DB,
-     * rendering the Price UID invalid.
+     * <p>Pair is used instead of Price object because we must sometimes invert the commodity/currency in DB,
+     * rendering the Price UID invalid.</p>
+     *
+     * @param commodityUID GUID of the commodity which is starting point for conversion
+     * @param currencyUID GUID of target commodity for the conversion
      *
      * @return The numerator/denominator pair for commodity / currency pair
      */
diff --git a/app/src/main/java/org/gnucash/android/model/Split.java b/app/src/main/java/org/gnucash/android/model/Split.java
index 09292110..a3101e47 100644
--- a/app/src/main/java/org/gnucash/android/model/Split.java
+++ b/app/src/main/java/org/gnucash/android/model/Split.java
@@ -1,6 +1,8 @@
 package org.gnucash.android.model;
 
 
+import android.os.Parcel;
+import android.os.Parcelable;
 import android.support.annotation.NonNull;
 
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
@@ -17,7 +19,7 @@
  *
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class Split extends BaseModel{
+public class Split extends BaseModel implements Parcelable{
 
     /**
      * Flag indicating that the split has been reconciled
@@ -89,12 +91,13 @@ public Split(@NonNull Money value, @NonNull Money quantity, String accountUID){
 
     /**
      * Initialize split with a value amount and account
-     * @param amount Money value amount of this split. Value is always in the currency the owning transaction
-     * @param accountUID String UID of transfer account
+     * @param amount Money value amount of this split. Value is always in the currency the owning transaction.
+     *               This amount will be assigned as both the value and the quantity of this split
+     * @param accountUID String UID of owning account
      */
     public Split(@NonNull Money amount, String accountUID){
-        setQuantity(amount);
         setValue(amount);
+        setQuantity(new Money(amount));
         setAccountUID(accountUID);
         //NOTE: This is a rather simplististic approach to the split type.
         //It typically also depends on the account type of the account. But we do not want to access
@@ -442,6 +445,34 @@ public static Split parseSplit(String splitCsvString) {
         }
     }
 
+    /**
+     * Two splits are considered equivalent if all the fields (excluding GUID and timestamps - created, modified, reconciled) are equal.
+     * Any two splits which are equal are also equivalent, but the reverse is not true
+     * <p>The difference with to {@link #equals(Object)} is that the GUID of the split is not considered.
+     * This is useful in cases where a new split is generated for a transaction with the same properties,
+     * but a new GUID is generated e.g. when editing a transaction and modifying the splits</p>
+     *
+     * @param split Other split for which to test equivalence
+     * @return {@code true} if both splits are equivalent, {@code false} otherwise
+     */
+    public boolean isEquivalentTo(Split split){
+        if (this == split) return true;
+        if (super.equals(split)) return true;
+
+        if (mReconcileState != split.mReconcileState) return false;
+        if (!mValue.equals(split.mValue)) return false;
+        if (!mQuantity.equals(split.mQuantity)) return false;
+        if (!mTransactionUID.equals(split.mTransactionUID)) return false;
+        if (!mAccountUID.equals(split.mAccountUID)) return false;
+        if (mSplitType != split.mSplitType) return false;
+        return mMemo != null ? mMemo.equals(split.mMemo) : split.mMemo == null;
+    }
+
+    /**
+     * Two splits are considered equal if all their properties excluding timestampes (created, modified, reconciled) are equal.
+     * @param o Other split to compare for equality
+     * @return {@code true} if this split is equal to {@code o}, {@code false} otherwise
+     */
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
@@ -457,7 +488,6 @@ public boolean equals(Object o) {
         if (!mAccountUID.equals(split.mAccountUID)) return false;
         if (mSplitType != split.mSplitType) return false;
         return mMemo != null ? mMemo.equals(split.mMemo) : split.mMemo == null;
-
     }
 
     @Override
@@ -472,4 +502,74 @@ public int hashCode() {
         result = 31 * result + (int) mReconcileState;
         return result;
     }
+
+    @Override
+    public int describeContents() {
+        return 0;
+    }
+
+    @Override
+    public void writeToParcel(Parcel dest, int flags) {
+        dest.writeString(getUID());
+        dest.writeString(mAccountUID);
+        dest.writeString(mTransactionUID);
+        dest.writeString(mSplitType.name());
+
+        dest.writeLong(mValue.getNumerator());
+        dest.writeLong(mValue.getDenominator());
+        dest.writeString(mValue.getCommodity().getCurrencyCode());
+
+        dest.writeLong(mQuantity.getNumerator());
+        dest.writeLong(mQuantity.getDenominator());
+        dest.writeString(mQuantity.getCommodity().getCurrencyCode());
+
+        dest.writeString(mMemo == null ? "" : mMemo);
+        dest.writeString(String.valueOf(mReconcileState));
+        dest.writeString(mReconcileDate.toString());
+    }
+
+    /**
+     * Constructor for creating a Split object from a Parcel
+     * @param source Source parcel containing the split
+     * @see #CREATOR
+     */
+    private Split(Parcel source){
+        setUID(source.readString());
+        mAccountUID = source.readString();
+        mTransactionUID = source.readString();
+        mSplitType = TransactionType.valueOf(source.readString());
+
+        long valueNum = source.readLong();
+        long valueDenom = source.readLong();
+        String valueCurrency = source.readString();
+        mValue = new Money(valueNum, valueDenom, valueCurrency);
+
+        long qtyNum = source.readLong();
+        long qtyDenom = source.readLong();
+        String qtyCurrency = source.readString();
+        mQuantity = new Money(qtyNum, qtyDenom, qtyCurrency);
+
+        String memo = source.readString();
+        mMemo = memo.isEmpty() ? null : memo;
+        mReconcileState = source.readString().charAt(0);
+        mReconcileDate = Timestamp.valueOf(source.readString());
+    }
+
+    /**
+     * Creates new Parcels containing the information in this split during serialization
+     */
+    public static final Parcelable.Creator<Split> CREATOR
+            = new Parcelable.Creator<Split>() {
+
+        @Override
+        public Split createFromParcel(Parcel source) {
+            return new Split(source);
+        }
+
+        @Override
+        public Split[] newArray(int size) {
+            return new Split[size];
+        }
+    };
+
 }
diff --git a/app/src/main/java/org/gnucash/android/model/Transaction.java b/app/src/main/java/org/gnucash/android/model/Transaction.java
index 2f661676..7ff34aa6 100644
--- a/app/src/main/java/org/gnucash/android/model/Transaction.java
+++ b/app/src/main/java/org/gnucash/android/model/Transaction.java
@@ -190,6 +190,19 @@ public Split createAutoBalanceSplit(){
     }
 
     /**
+     * Set the GUID of the transaction
+     * If the transaction has Splits, their transactionGUID will be updated as well
+     * @param uid String unique ID
+     */
+    @Override
+    public void setUID(String uid) {
+        super.setUID(uid);
+        for (Split split : mSplitList) {
+            split.setTransactionUID(uid);
+        }
+    }
+
+    /**
      * Returns list of splits for this transaction
      * @return {@link java.util.List} of splits in the transaction
      */
diff --git a/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java b/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java
index 7566ba15..b2077c62 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/UxArgument.java
@@ -102,12 +102,6 @@
      */
     public static final String BUDGET_AMOUNT_LIST = "budget_amount_list";
 
-    /**
-     * GUID of splits which have been removed from the split editor
-     */
-    public static String REMOVED_SPLITS = "removed_split_guids";
-
-
     //prevent initialization of instances of this class
     private UxArgument(){
         //prevent even the native class from calling the ctor
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
index 505bda04..210a3408 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
@@ -92,8 +92,6 @@
 
     private BigDecimal mBaseAmount = BigDecimal.ZERO;
 
-    private ArrayList<String> mRemovedSplitUIDs = new ArrayList<>();
-
     CalculatorKeyboard mCalculatorKeyboard;
 
     BalanceTextWatcher mImbalanceWatcher = new BalanceTextWatcher();
@@ -131,13 +129,9 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
         //we are editing splits for a new transaction.
         // But the user may have already created some splits before. Let's check
-        List<String> splitStrings = getArguments().getStringArrayList(UxArgument.SPLIT_LIST);
-        List<Split> splitList = new ArrayList<>();
-        if (splitStrings != null) {
-            for (String splitString : splitStrings) {
-                splitList.add(Split.parseSplit(splitString));
-            }
-        }
+
+        List<Split> splitList = getArguments().getParcelableArrayList(UxArgument.SPLIT_LIST);
+        assert splitList != null;
 
         initArgs();
         if (!splitList.isEmpty()) {
@@ -264,7 +258,6 @@ private void setListeners(Split split){
             removeSplitButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
-                    mRemovedSplitUIDs.add(splitUidTextView.getText().toString());
                     mSplitsLinearLayout.removeView(splitView);
                     mSplitItemViewList.remove(splitView);
                     mImbalanceWatcher.afterTextChanged(null);
@@ -377,14 +370,8 @@ private void saveSplits() {
             return;
         }
 
-        List<Split> splitList = extractSplitsFromView();
-        ArrayList<String> splitStrings = new ArrayList<>();
-        for (Split split : splitList) {
-            splitStrings.add(split.toCsv());
-        }
         Intent data = new Intent();
-        data.putStringArrayListExtra(UxArgument.SPLIT_LIST, splitStrings);
-        data.putStringArrayListExtra(UxArgument.REMOVED_SPLITS, mRemovedSplitUIDs);
+        data.putParcelableArrayListExtra(UxArgument.SPLIT_LIST, extractSplitsFromView());
         getActivity().setResult(Activity.RESULT_OK, data);
 
         getActivity().finish();
@@ -394,8 +381,8 @@ private void saveSplits() {
      * Extracts the input from the views and builds {@link org.gnucash.android.model.Split}s to correspond to the input.
      * @return List of {@link org.gnucash.android.model.Split}s represented in the view
      */
-    private List<Split> extractSplitsFromView(){
-        List<Split> splitList = new ArrayList<>();
+    private ArrayList<Split> extractSplitsFromView(){
+        ArrayList<Split> splitList = new ArrayList<>();
         for (View splitView : mSplitItemViewList) {
             SplitViewHolder viewHolder = (SplitViewHolder) splitView.getTag();
             if (viewHolder.splitAmountEditText.getValue() == null)
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 064348db..126bf5f1 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -24,12 +24,15 @@
 import android.database.Cursor;
 import android.inputmethodservice.KeyboardView;
 import android.os.Bundle;
+import android.os.Parcelable;
+import android.support.annotation.NonNull;
 import android.support.v4.app.Fragment;
 import android.support.v4.widget.SimpleCursorAdapter;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.text.format.DateUtils;
 import android.util.Log;
+import android.util.Pair;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -60,11 +63,13 @@
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
+import org.gnucash.android.db.adapter.PricesDbAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.model.Price;
 import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
@@ -610,13 +615,8 @@ private void openSplitEditor(){
         intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.SPLIT_EDITOR.name());
         intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, mAccountUID);
         intent.putExtra(UxArgument.AMOUNT_STRING, baseAmountString);
-        if (mSplitsList != null) {
-            ArrayList<String> splitStrings = new ArrayList<>();
-            for (Split split : mSplitsList) {
-                splitStrings.add(split.toCsv());
-            }
-            intent.putStringArrayListExtra(UxArgument.SPLIT_LIST, splitStrings);
-        }
+        intent.putParcelableArrayListExtra(UxArgument.SPLIT_LIST, (ArrayList<Split>) extractSplitsFromView());
+
         startActivityForResult(intent, REQUEST_SPLIT_EDITOR);
     }
 
@@ -685,110 +685,149 @@ private void setSelectedTransferAccount(long accountId){
             mTransferAccountSpinner.setSelection(position);
 	}
 
+    /**
+     * Returns a list of splits based on the input in the transaction form.
+     * This only gets the splits from the simple view, and not those from the Split Editor.
+     * If the Split Editor has been used and there is more than one split, then it returns {@link #mSplitsList}
+     * @return List of splits in the view or {@link #mSplitsList} is there are more than 2 splits in the transaction
+     */
+    private List<Split> extractSplitsFromView(){
+        if (mTransactionTypeSwitch.getVisibility() != View.VISIBLE){
+            return mSplitsList;
+        }
+
+        BigDecimal amountBigd = mAmountEditText.getValue();
+        String baseCurrencyCode = mTransactionsDbAdapter.getAccountCurrencyCode(mAccountUID);
+        Money value 	= new Money(amountBigd, Commodity.getInstance(baseCurrencyCode)).abs();
+        Money quantity = new Money(value);
+
+        String transferAcctUID = getTransferAccountUID();
+        CommoditiesDbAdapter cmdtyDbAdapter = CommoditiesDbAdapter.getInstance();
+
+        if (isMultiCurrencyTransaction()){ //if multi-currency transaction
+            String transferCurrencyCode = mAccountsDbAdapter.getCurrencyCode(transferAcctUID);
+            String commodityUID = cmdtyDbAdapter.getCommodityUID(baseCurrencyCode);
+            String targetCmdtyUID = cmdtyDbAdapter.getCommodityUID(transferCurrencyCode);
+            
+            Pair<Long, Long> pricePair = PricesDbAdapter.getInstance()
+                    .getPrice(commodityUID, targetCmdtyUID);
+
+            if (pricePair.first > 0 && pricePair.second > 0) {
+                quantity = quantity.multiply(pricePair.first.intValue())
+                        .divide(pricePair.second.intValue())
+                        .withCurrency(cmdtyDbAdapter.getRecord(targetCmdtyUID));
+            }
+        }
+
+        Split split1 = new Split(value, mAccountUID);
+        split1.setType(mTransactionTypeSwitch.getTransactionType());
+        Split split2 = new Split(value, quantity, transferAcctUID);
+        split2.setType(mTransactionTypeSwitch.getTransactionType().invert());
+
+        List<Split> splitList = new ArrayList<>();
+        splitList.add(split1);
+        splitList.add(split2);
+
+        return splitList;
+    }
+
+    /**
+     * Returns the GUID of the currently selected transfer account.
+     * If double-entry is disabled, this method returns the GUID of the imbalance account for the currently active account
+     * @return GUID of transfer account
+     */
+    private @NonNull String getTransferAccountUID() {
+        String transferAcctUID;
+        if (mUseDoubleEntry) {
+            long transferAcctId = mTransferAccountSpinner.getSelectedItemId();
+            transferAcctUID = mAccountsDbAdapter.getUID(transferAcctId);
+        } else {
+            String baseCurrencyCode = mTransactionsDbAdapter.getAccountCurrencyCode(mAccountUID);
+            transferAcctUID = mAccountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance(baseCurrencyCode));
+        }
+        return transferAcctUID;
+    }
+
+    /**
+     * Extracts a transaction from the input in the form fragment
+     * @return New transaction object containing all info in the form
+     */
+    private @NonNull Transaction extractTransactionFromView(){
+        Calendar cal = new GregorianCalendar(
+                mDate.get(Calendar.YEAR),
+                mDate.get(Calendar.MONTH),
+                mDate.get(Calendar.DAY_OF_MONTH),
+                mTime.get(Calendar.HOUR_OF_DAY),
+                mTime.get(Calendar.MINUTE),
+                mTime.get(Calendar.SECOND));
+        String description = mDescriptionEditText.getText().toString();
+        String notes = mNotesEditText.getText().toString();
+        String currencyCode = mAccountsDbAdapter.getAccountCurrencyCode(mAccountUID);
+        Commodity commodity = CommoditiesDbAdapter.getInstance().getCommodity(currencyCode);
+
+        List<Split> splits = extractSplitsFromView();
+
+        Transaction transaction = new Transaction(description);
+        transaction.setTime(cal.getTimeInMillis());
+        transaction.setCommodity(commodity);
+        transaction.setCurrencyCode(currencyCode);
+        transaction.setNote(notes);
+        transaction.setSplits(splits);
+        transaction.setExported(false); //not necessary as exports use timestamps now. Because, legacy
+
+        return transaction;
+    }
+
+    /**
+     * Checks whether the split editor has been used for editing this transaction.
+     * <p>The Split Editor is considered to have been used if the transaction type switch is not visible</p>
+     * @return {@code true} if split editor was used, {@code false} otherwise
+     */
+    private boolean splitEditorUsed(){
+        return mTransactionTypeSwitch.getVisibility() != View.VISIBLE;
+    }
+
+    /**
+     * Checks if this is a multi-currency transaction being created/edited
+     * <p>A multi-currency transaction is one in which the main account and transfer account have different currencies. <br>
+     *     Single-entry transactions cannot be multi-currency</p>
+     * @return {@code true} if multi-currency transaction, {@code false} otherwise
+     */
+    private boolean isMultiCurrencyTransaction(){
+        if (!mUseDoubleEntry)
+            return false;
+
+        String transferAcctUID = mAccountsDbAdapter.getUID(mTransferAccountSpinner.getSelectedItemId());
+        String currencyCode = mAccountsDbAdapter.getAccountCurrencyCode(mAccountUID);
+        String transferCurrencyCode = mAccountsDbAdapter.getCurrencyCode(transferAcctUID);
+
+        return !currencyCode.equals(transferCurrencyCode);
+    }
+
 	/**
 	 * Collects information from the fragment views and uses it to create
 	 * and save a transaction
 	 */
 	private void saveNewTransaction() {
         mAmountEditText.getCalculatorKeyboard().hideCustomKeyboard();
-		Calendar cal = new GregorianCalendar(
-				mDate.get(Calendar.YEAR),
-				mDate.get(Calendar.MONTH),
-				mDate.get(Calendar.DAY_OF_MONTH),
-				mTime.get(Calendar.HOUR_OF_DAY),
-				mTime.get(Calendar.MINUTE),
-				mTime.get(Calendar.SECOND));
-		String description = mDescriptionEditText.getText().toString();
-		String notes = mNotesEditText.getText().toString();
-		BigDecimal amountBigd = mAmountEditText.getValue();
-
-        if (amountBigd == null){ //if for whatever reason we cannot process the amount
-            Toast.makeText(getActivity(), R.string.toast_transanction_amount_required,
-                    Toast.LENGTH_SHORT).show();
-            return;
-        }
 
-		Currency currency = Currency.getInstance(mTransactionsDbAdapter.getAccountCurrencyCode(mAccountUID));
-		Money amount 	= new Money(amountBigd, Commodity.getInstance(currency.getCurrencyCode())).abs();
+        //determine whether we need to do currency conversion
 
-        if (mSplitsList.size() == 1){ //means split editor was opened but no split was added
-            String transferAcctUID;
-            if (mUseDoubleEntry) {
-                long transferAcctId = mTransferAccountSpinner.getSelectedItemId();
-                transferAcctUID = mAccountsDbAdapter.getUID(transferAcctId);
-            } else {
-                transferAcctUID = mAccountsDbAdapter.getOrCreateImbalanceAccountUID(currency);
-            }
-            mSplitsList.add(mSplitsList.get(0).createPair(transferAcctUID));
+        if (isMultiCurrencyTransaction() && !splitEditorUsed() && !mCurrencyConversionDone){
+            startTransferFunds();
+            return;
         }
 
-        //capture any edits which were done directly (not using split editor)
-        if (mSplitsList.size() == 2 && mSplitsList.get(0).isPairOf(mSplitsList.get(1))
-                //we also check that at least one of the splits belongs to this account, otherwise the account was changed in the splits and the value would be zero
-                && (mSplitsList.get(0).getAccountUID().equals(mAccountUID) || mSplitsList.get(1).getAccountUID().equals(mAccountUID))) {
-            //if it is a simple transfer where the editor was not used, then respect the button
-            for (Split split : mSplitsList) {
-                if (split.getAccountUID().equals(mAccountUID)){
-                    split.setType(mTransactionTypeSwitch.getTransactionType());
-                    split.setValue(amount);
-                    split.setQuantity(amount);
-                } else {
-                    split.setType(mTransactionTypeSwitch.getTransactionType().invert());
-                    if (mSplitQuantity != null)
-                        split.setQuantity(mSplitQuantity);
-                    else
-                        split.setQuantity(amount);
-                    split.setValue(amount);
-                }
-            }
+        Transaction transaction = extractTransactionFromView();
+        if (mEditMode) { //if editing an existing transaction
+            transaction.setUID(mTransaction.getUID());
+            mTransaction = transaction;
+        } else {
+            mTransaction = transaction;
         }
 
         mAccountsDbAdapter.beginTransaction();
         try {
-            if (mTransaction != null) { //if editing an existing transaction
-                mTransaction.setSplits(mSplitsList);
-                mTransaction.setDescription(description);
-            } else {
-                mTransaction = new Transaction(description);
-
-                //****************** amount entered in the simple interface (not using splits Editor) ************************
-                if (mSplitsList.isEmpty()) {
-                    Split split = new Split(amount, mAccountUID);
-                    split.setType(mTransactionTypeSwitch.getTransactionType());
-                    mTransaction.addSplit(split);
-
-                    String transferAcctUID;
-                    long transferAcctId = mTransferAccountSpinner.getSelectedItemId();
-                    if (mUseDoubleEntry && transferAcctId > 0) {
-                        transferAcctUID = mAccountsDbAdapter.getUID(transferAcctId);
-                    } else {
-                        transferAcctUID = mAccountsDbAdapter.getOrCreateImbalanceAccountUID(currency);
-                    }
-                    Split pair = split.createPair(transferAcctUID);
-                    if (mSplitQuantity != null)
-                        pair.setQuantity(mSplitQuantity);
-                    else {
-                        if (!mAccountsDbAdapter.getCurrencyCode(transferAcctUID).equals(currency.getCurrencyCode())){
-                            startTransferFunds();
-                            mTransaction = null;
-                            return;
-                        }
-                    }
-                    mTransaction.addSplit(pair);
-                } else { //split editor was used to enter splits
-                    mTransaction.setSplits(mSplitsList);
-                }
-            }
-
-            String currencyCode = mAccountsDbAdapter.getAccountCurrencyCode(mAccountUID);
-            mTransaction.setCurrencyCode(currencyCode);
-            Commodity commodity = CommoditiesDbAdapter.getInstance().getCommodity(currencyCode);
-            mTransaction.setCommodity(commodity);
-            mTransaction.setTime(cal.getTimeInMillis());
-            mTransaction.setNote(notes);
-
-            // set as not exported because we have just edited it
-            mTransaction.setExported(false);
             // 1) mTransactions may be existing or non-existing
             // 2) when mTransactions exists in the db, the splits may exist or not exist in the db
             // So replace is chosen.
@@ -904,14 +943,14 @@ public boolean onOptionsItemSelected(MenuItem item) {
      */
     private boolean canSave(){
         return (mAmountEditText.isInputValid())
-                || (mUseDoubleEntry && mTransferAccountSpinner.getCount() > 0);
+                && (mUseDoubleEntry && mTransferAccountSpinner.getCount() > 0);
     }
 
     /**
      * Called by the split editor fragment to notify of finished editing
      * @param splitList List of splits produced in the fragment
      */
-    public void setSplitList(List<Split> splitList, List<String> removedSplitUIDs){
+    public void setSplitList(List<Split> splitList){
         mSplitsList = splitList;
         Money balance = Transaction.computeBalance(mAccountUID, mSplitsList);
 
@@ -978,8 +1017,14 @@ public static String stripCurrencyFormatting(String s){
 		return stripped;
 	}
 
+    /**
+     * Flag for checking where the TransferFunds dialog has already been displayed to the user
+     */
+    boolean mCurrencyConversionDone = false;
+
     @Override
     public void transferComplete(Money amount) {
+        mCurrencyConversionDone = true;
         mSplitQuantity = amount;
     }
 
@@ -1005,13 +1050,13 @@ public void onRecurrenceSet(String rrule) {
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (resultCode == Activity.RESULT_OK){
-            List<String> splits = data.getStringArrayListExtra(UxArgument.SPLIT_LIST);
-            List<Split> splitList = new ArrayList<>();
-            for (String splitCsv : splits) {
-                splitList.add(Split.parseSplit(splitCsv));
-            }
-            List<String> removedSplits = data.getStringArrayListExtra(UxArgument.REMOVED_SPLITS);
-            setSplitList(splitList, removedSplits);
+            List<Split> splitList = data.getParcelableArrayListExtra(UxArgument.SPLIT_LIST);
+            setSplitList(splitList);
+
+            //once split editor has been used and saved, only allow editing through it
+            toggleAmountInputEntryMode(false);
+            setDoubleEntryViewsVisibility(View.GONE);
+            mOpenSplitEditor.setVisibility(View.VISIBLE);
         }
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
index edb49dd8..f3f3b5c6 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
@@ -289,8 +289,8 @@ public String evaluate(){
      * @return @{code true} if the input is valid, {@code false} otherwise
      */
     public boolean isInputValid(){
-        evaluate();
-        return getText().length() > 0 && getError() == null;
+        String text = evaluate();
+        return !text.isEmpty() && getError() == null;
     }
 
     /**
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/SplitTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/SplitTest.java
index 262c6cda..9c787f33 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/SplitTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/SplitTest.java
@@ -49,6 +49,7 @@ public void testCloning(){
 
         Split clone2 = new Split(split, true);
         assertThat(clone2.getUID()).isNotEqualTo(split.getUID());
+        assertThat(split.isEquivalentTo(clone2)).isTrue();
     }
 
     /**
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java
index fa2e9b09..e6b4380b 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java
@@ -8,10 +8,14 @@
 import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
 import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
 import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
+import org.gnucash.android.ui.transaction.SplitEditorFragment;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
+import java.util.ArrayList;
+import java.util.List;
+
 import static org.assertj.core.api.Assertions.assertThat;
 
 @RunWith(GnucashTestRunner.class)
@@ -52,4 +56,24 @@ public void addingSplitsShouldSetTransactionUID(){
 		assertThat(split.getTransactionUID()).isEqualTo(transaction.getUID());
 	}
 
+	@Test
+	public void settingUID_shouldSetTransactionUidOfSplits(){
+		Transaction t1 = new Transaction("Test");
+		Split split1 = new Split(Money.getZeroInstance(), "random");
+		split1.setTransactionUID("non-existent");
+
+		Split split2 = new Split(Money.getZeroInstance(), "account-something");
+		split2.setTransactionUID("pre-existent");
+
+		List<Split> splits = new ArrayList<>();
+		splits.add(split1);
+		splits.add(split2);
+
+		t1.setSplits(splits);
+
+		assertThat(t1.getSplits()).extracting("mTransactionUID")
+				.contains(t1.getUID())
+				.doesNotContain("random")
+				.doesNotContain("account-something");
+	}
 }

From 4d33d656c5d984258d9987f2ecc4ae681dad3f4e Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 5 Aug 2016 17:12:21 +0200
Subject: [PATCH 093/121] Re-enable previously deactivated test which edits a
 transaction away from the account within which it was created

This is done by removing the split from the account. The account balance should become zero
---
 .../android/test/ui/TransactionsActivityTest.java  | 29 +++++++++++-----------
 1 file changed, 15 insertions(+), 14 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 27ccf936..e2813839 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -22,6 +22,7 @@
 import android.content.SharedPreferences;
 import android.content.SharedPreferences.Editor;
 import android.support.test.espresso.Espresso;
+import android.support.test.espresso.contrib.RecyclerViewActions;
 import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
 
@@ -68,6 +69,7 @@
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.RootMatchers.withDecorView;
 import static android.support.test.espresso.matcher.ViewMatchers.hasDescendant;
+import static android.support.test.espresso.matcher.ViewMatchers.hasSibling;
 import static android.support.test.espresso.matcher.ViewMatchers.isChecked;
 import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
@@ -582,7 +584,11 @@ public void testMoveTransaction(){
 
 	}
 
-//	@Test //// FIXME: 03.11.2015 fix and re-enable this test
+	/**
+	 * This test edits a transaction from within an account and removes the split belonging to that account.
+	 * The account should then have a balance of 0 and the transaction has "moved" to another account
+	 */
+	@Test
 	public void editingSplit_shouldNotSetAmountToZero(){
 		setDoubleEntryEnabled(true);
 		mTransactionsDbAdapter.deleteAllRecords();
@@ -597,29 +603,24 @@ public void editingSplit_shouldNotSetAmountToZero(){
 
 		onView(withId(R.id.menu_save)).perform(click());
 
+		assertThat(mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID)).isEqualTo(1);
+
+		sleep(500);
 		onView(withText("Test Split")).perform(click());
 		onView(withId(R.id.fab_edit_transaction)).perform(click());
 
 		onView(withId(R.id.btn_split_editor)).perform(click());
 
-//		onView(withSpinnerText(TRANSACTIONS_ACCOUNT_NAME)).perform(click()); //// FIXME: 03.11.2015 properly select the spinner
-		onData(withId(R.id.input_accounts_spinner))
-				.inAdapterView(withId(R.id.split_list_layout))
-				.atPosition(1)
-				.perform(click());
-		onData(allOf(is(instanceOf(String.class)), is(account.getFullName()))).perform(click());
-//		onView(withText(account.getFullName())).perform(click());
+		onView(withText(TRANSACTIONS_ACCOUNT_NAME)).perform(click());
+		onView(withText(account.getFullName())).perform(click());
 
 		onView(withId(R.id.menu_save)).perform(click());
 		onView(withId(R.id.menu_save)).perform(click());
 
-		//split should have moved from account, it should now be empty
-		onView(withId(R.id.empty_view)).check(matches(isDisplayed()));
-
-		assertThat(mAccountsDbAdapter.getAccountBalance(TRANSACTIONS_ACCOUNT_UID)).isEqualTo(Money.createZeroInstance(CURRENCY_CODE));
+		assertThat(mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID)).isZero();
 
-		//split
-		assertThat(mAccountsDbAdapter.getAccountBalance(account.getUID())).isEqualTo(new Money("1024", CURRENCY_CODE));
+		assertThat(mAccountsDbAdapter.getAccountBalance(account.getUID()))
+				.isEqualTo(new Money("1024", CURRENCY_CODE));
 	}
 
 	@Test

From 567b66995d62a78179f8cb663bb3b40f486ff40c Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sat, 6 Aug 2016 00:24:11 +0200
Subject: [PATCH 094/121] Fix typo in tests

---
 .../java/org/gnucash/android/test/unit/model/TransactionTest.java     | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java
index e6b4380b..1d8b6ca7 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java
@@ -73,7 +73,7 @@ public void settingUID_shouldSetTransactionUidOfSplits(){
 
 		assertThat(t1.getSplits()).extracting("mTransactionUID")
 				.contains(t1.getUID())
-				.doesNotContain("random")
-				.doesNotContain("account-something");
+				.doesNotContain("non-existent")
+				.doesNotContain("pre-existent");
 	}
 }

From c16b386f5dd2143378d2b27316a29853a7c6f683 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sat, 6 Aug 2016 00:52:24 +0200
Subject: [PATCH 095/121] Add some translations for Hebrew Update Korean,
 Brazilian translations

---
 app/src/main/res/values-iw-rIL/strings.xml | 104 ++++++++++++++---------------
 app/src/main/res/values-ko-rKR/strings.xml |  25 ++++---
 app/src/main/res/values-pt-rBR/strings.xml |  94 +++++++++++++-------------
 3 files changed, 111 insertions(+), 112 deletions(-)

diff --git a/app/src/main/res/values-iw-rIL/strings.xml b/app/src/main/res/values-iw-rIL/strings.xml
index 9e0d61f1..edf2f73a 100644
--- a/app/src/main/res/values-iw-rIL/strings.xml
+++ b/app/src/main/res/values-iw-rIL/strings.xml
@@ -17,30 +17,30 @@
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="title_create_account">Create Account</string>
-  <string name="title_edit_account">Edit Account</string>
-  <string name="info_details">Info</string>
-  <string name="menu_export">Export&#8230;</string>
-  <string name="description_add_transaction_icon">Add a new transaction to an account</string>
-  <string name="label_no_accounts">No accounts to display</string>
-  <string name="label_account_name">Account name</string>
-  <string name="btn_cancel">Cancel</string>
-  <string name="btn_save">Save</string>
-  <string name="btn_test">Test</string>
-  <string name="label_passcode">Enter Passcode</string>
-  <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
-  <string name="toast_passcode_set">Passcode set</string>
-  <string name="label_confirm_passcode">Please confirm your passcode</string>
-  <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
-  <string name="label_transaction_name">Description</string>
-  <string name="label_transaction_amount">Amount</string>
-  <string name="title_add_transaction">New transaction</string>
-  <string name="label_no_transactions">No transactions to display</string>
+  <string name="title_edit_account"> </string>
+  <string name="info_details"></string>
+  <string name="menu_export">&#8230;</string>
+  <string name="description_add_transaction_icon">   </string>
+  <string name="label_no_accounts">  </string>
+  <string name="label_account_name"> </string>
+  <string name="btn_cancel"></string>
+  <string name="btn_save"></string>
+  <string name="btn_test"></string>
+  <string name="label_passcode"> </string>
+  <string name="toast_wrong_passcode"> ,   </string>
+  <string name="toast_passcode_set"> </string>
+  <string name="label_confirm_passcode">   </string>
+  <string name="toast_invalid_passcode_confirmation">  .   </string>
+  <string name="label_transaction_name"></string>
+  <string name="label_transaction_amount"></string>
+  <string name="title_add_transaction"> </string>
+  <string name="label_no_transactions">  </string>
   <string name="label_timeanddate">DATE &amp; TIME</string>
-  <string name="label_account">Account</string>
-  <string name="label_debit">DEBIT</string>
-  <string name="label_credit">CREDIT</string>
-  <string name="title_accounts">Accounts</string>
-  <string name="title_transactions">Transactions</string>
+  <string name="label_account"></string>
+  <string name="label_debit"></string>
+  <string name="label_credit"></string>
+  <string name="title_accounts"></string>
+  <string name="title_transactions"></string>
   <string name="menu_delete">Delete</string>
   <string name="alert_dialog_ok_delete">Delete</string>
   <string name="alert_dialog_cancel">Cancel</string>
@@ -66,40 +66,40 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item> &#8230;</item>
   </string-array>
-  <string name="btn_move">Move</string>
+  <string name="btn_move"></string>
   <string name="title_move_transactions">Move %1$d transaction(s)</string>
-  <string name="label_move_destination">Destination Account</string>
+  <string name="label_move_destination"> </string>
   <string name="permission_access_sdcard">Access SD Card</string>
   <string name="toast_incompatible_currency">Cannot move transactions.\nThe destination account uses a different currency from origin account</string>
   <string name="header_general_settings">General</string>
-  <string name="header_about_gnucash">About</string>
-  <string name="title_choose_currency">Choose default currency</string>
-  <string name="title_default_currency">Default currency</string>
-  <string name="summary_default_currency">Default currency to assign to new accounts</string>
-  <string name="label_permission_record_transactions">Enables recording transactions in GnuCash for Android</string>
-  <string name="label_permission_create_accounts">Enables creation of accounts in GnuCash for Android</string>
-  <string name="label_permission_group">Your GnuCash data</string>
-  <string name="description_permission_group">Read and modify GnuCash data</string>
-  <string name="label_permission_record_transaction">Record transactions in GnuCash</string>
-  <string name="label_permission_create_account">Create accounts in GnuCash</string>
-  <string name="label_display_account">Display account</string>
-  <string name="btn_create_accounts">Create Accounts</string>
-  <string name="title_default_accounts">Select accounts to create</string>
-  <string name="error_no_accounts">No accounts exist in GnuCash.\nCreate an account before adding a widget</string>
-  <string name="title_build_version">Build version</string>
-  <string name="title_license">License</string>
-  <string name="summary_licence_details">Apache License v2.0. Click for details</string>
-  <string name="title_general_prefs">General Preferences</string>
-  <string name="label_widget_configuration">Select Account</string>
-  <string name="toast_no_transactions_to_export">There are no transactions available to export</string>
-  <string name="header_passcode_settings">Passcode</string>
-  <string name="title_passcode_preferences">Passcode Preferences</string>
-  <string name="title_passcode_enabled">Passcode Turned On</string>
-  <string name="title_passcode_disabled">Passcode Turned Off</string>
-  <string name="title_change_passcode">Change Passcode</string>
-  <string name="title_about_gnucash">About GnuCash</string>
+  <string name="header_about_gnucash"></string>
+  <string name="title_choose_currency">   </string>
+  <string name="title_default_currency">  </string>
+  <string name="summary_default_currency">     </string>
+  <string name="label_permission_record_transactions">   GnuCash  </string>
+  <string name="label_permission_create_accounts">    GnuCash  </string>
+  <string name="label_permission_group"> GnuCash </string>
+  <string name="description_permission_group">   GnuCash</string>
+  <string name="label_permission_record_transaction">  GnuCash</string>
+  <string name="label_permission_create_account">   GnuCash</string>
+  <string name="label_display_account"> </string>
+  <string name="btn_create_accounts"> </string>
+  <string name="title_default_accounts">  </string>
+  <string name="error_no_accounts">   - GnuCassh.\n     widget</string>
+  <string name="title_build_version"> Build</string>
+  <string name="title_license"></string>
+  <string name="summary_licence_details"> \' v 2.0.  </string>
+  <string name="title_general_prefs"> </string>
+  <string name="label_widget_configuration"> </string>
+  <string name="toast_no_transactions_to_export">   </string>
+  <string name="header_passcode_settings"> </string>
+  <string name="title_passcode_preferences">  </string>
+  <string name="title_passcode_enabled">  </string>
+  <string name="title_passcode_disabled">  </string>
+  <string name="title_change_passcode">   </string>
+  <string name="title_about_gnucash"> GnuCash</string>
   <string name="summary_about_gnucash">A mobile finance management and expense-tracker designed for Android</string>
   <string name="title_about">About</string>
   <string name="toast_format_exported_to">%1$s file exported to:\n</string>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index 640361a1..012cdb80 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -132,13 +132,12 @@
   <string name="summary_xml_ofx_header"> GnuCash       </string>
   <string name="title_whats_new"> </string>
   <string name="whats_new">
-        -    \n
+         -  \n
         -     \n
-        -  \n
+        -   \n
         -   \n
-        -    \n
-        -     \n
-	</string>
+        -   \n
+        -     \n</string>
   <string name="label_dismiss"></string>
   <string name="toast_transanction_amount_required">    </string>
   <string name="toast_error_edit_multi_currency_transaction">     .</string>
@@ -174,7 +173,7 @@
   <string name="label_no_recurring_transactions">  </string>
   <string name="toast_recurring_transaction_deleted">  </string>
   <string name="label_placeholder_account"> </string>
-  <string name="label_default_transfer_account">Default Transfer Account</string>
+  <string name="label_default_transfer_account">  </string>
   <plurals name="label_sub_accounts">
     <item quantity="other">%d  </item>
   </plurals>
@@ -258,8 +257,8 @@
   <string name="menu_toggle_legend"> </string>
   <string name="menu_toggle_labels"> </string>
   <string name="menu_toggle_percentage_mode"> </string>
-  <string name="menu_toggle_average_lines">Show average lines</string>
-  <string name="menu_group_smaller_slices">Group Smaller Slices</string>
+  <string name="menu_toggle_average_lines"> </string>
+  <string name="menu_group_smaller_slices">   </string>
   <string name="label_chart_no_data">  </string>
   <string name="label_chart_overall"></string>
   <string name="label_chart_total"></string>
@@ -343,16 +342,16 @@
   <string name="wizard_title_account_setup"> </string>
   <string name="wizard_title_select_currency"> </string>
   <string name="wizard_title_feedback_options"> </string>
-  <string name="wizard_option_create_default_accounts">  </string>
-  <string name="wizard_option_import_my_accounts">  </string>
-  <string name="wizard_option_let_me_handle_it"> </string>
+  <string name="wizard_option_create_default_accounts">   </string>
+  <string name="wizard_option_import_my_accounts"> </string>
+  <string name="wizard_option_let_me_handle_it"> </string>
   <string name="wizard_option_currency_other">...</string>
   <string name="wizard_option_auto_send_crash_reports">    </string>
   <string name="wizard_option_disable_crash_reports">  </string>
   <string name="wizard_btn_back"></string>
   <string name="title_setup_gnucash">GnuCash </string>
   <string name="wizard_title_welcome_to_gnucash">GnuCash  </string>
-  <string name="msg_wizard_welcome_page">  \n  \n\n .</string>
+  <string name="msg_wizard_welcome_page">  \n  .\n\n .</string>
   <string name="title_split_editor">Split Editor</string>
   <string name="toast_error_check_split_amounts">Check that all splits have valid amounts before saving!</string>
   <string name="label_error_invalid_expression">  !</string>
@@ -369,7 +368,7 @@
   <string name="hint_exchange_rate"></string>
   <string name="btn_fetch_quote">Fetch quote</string>
   <string name="hint_converted_amount"> </string>
-  <string name="title_report_sheet">Sheet</string>
+  <string name="title_report_sheet"></string>
   <string name="label_last_3_months_expenses"> 3 </string>
   <string name="label_total_assets"></string>
   <string name="label_total_liabilities"></string>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 0bb1f1f6..e039d904 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -18,14 +18,14 @@
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="title_create_account">Criar Conta</string>
   <string name="title_edit_account">Editar Conta</string>
-  <string name="info_details">Info</string>
+  <string name="info_details">Informao</string>
   <string name="menu_export">Exportar</string>
   <string name="description_add_transaction_icon">Adicionar nova transao a uma conta</string>
   <string name="label_no_accounts">Sem contas para mostrar</string>
   <string name="label_account_name">Nome da Conta</string>
   <string name="btn_cancel">Cancelar</string>
   <string name="btn_save">Gravar</string>
-  <string name="btn_test">Test</string>
+  <string name="btn_test">Teste</string>
   <string name="label_passcode">Introduza a palavra passe</string>
   <string name="toast_wrong_passcode">Senha incorreta, tente novamente</string>
   <string name="toast_passcode_set">Definio de palavra passe</string>
@@ -47,10 +47,10 @@
   <string name="toast_account_deleted">Conta apagada</string>
   <string name="title_confirm_delete">Confirma apagar</string>
   <string name="delete_account_confirmation_message">Todas as transaes desta conta tambm sero apagadas</string>
-  <string name="title_edit_transaction">Editar Transaes</string>
+  <string name="title_edit_transaction">Editar Transao</string>
   <string name="label_transaction_description">Adicionar nota</string>
   <string name="menu_move">MOVER</string>
-  <string name="title_selected">%1$d seleccionado</string>
+  <string name="title_selected">%1$d selecionado</string>
   <string name="label_account_balance">Saldo:</string>
   <string name="label_export_destination">Exportar para:</string>
   <string name="title_export_dialog">Exportar Transaes</string>
@@ -66,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>Enviar para&#8230;</item>
   </string-array>
   <string name="btn_move">Mover</string>
   <string name="title_move_transactions">Mover %1$d transao(es)</string>
@@ -163,8 +163,8 @@
   <string name="section_header_subaccounts">Sub-Contas</string>
   <string name="menu_search_accounts">Procurar</string>
   <string name="title_default_export_format">Formato de Exportao padro</string>
-  <string name="summary_default_export_format">Formato de ficheiro usado por defeito quando  feita uma exportao de transaes</string>
-  <string name="menu_export_transactions">Exportar transaes</string>
+  <string name="summary_default_export_format">Formato de arquivo a ser usado por padro ao exportar transaes</string>
+  <string name="menu_export_transactions">Exportar transaes&#8230;</string>
   <string name="label_recurring_transaction">Recorrente</string>
   <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Desequilibrio</string>
@@ -181,7 +181,7 @@
     <item>DINHEIRO</item>
     <item>BANCO</item>
     <item>CARTO CRDITO</item>
-    <item>ACTIVO</item>
+    <item>ATIVO</item>
     <item>PASSIVO</item>
     <item>RENDIMENTO</item>
     <item>DESPESA</item>
@@ -235,7 +235,7 @@
   <string name="toast_no_recent_backup">No foi encontrado um Backup recente</string>
   <string name="account_name_opening_balances">Saldo de abertura</string>
   <string name="account_name_equity">Capital Prprio</string>
-  <string name="summary_save_opening_balances">Permite gravar o saldo da conta actual (antes de apagar as transaes) como novo saldo de abertura depois de apagadas as transaes
+  <string name="summary_save_opening_balances">Permite salvar o saldo da conta atual (antes de apagar as transaes) como novo saldo de abertura aps a excluso das transaes
     </string>
   <string name="title_save_opening_balances">Grava o saldo de abertura da conta</string>
   <string name="export_warning_ofx">O formato OFX no permite transaes de entrada dupla</string>
@@ -265,8 +265,8 @@
   <string name="label_chart_overall">Geral</string>
   <string name="label_chart_total">Total</string>
   <string name="label_other_slice">Outro</string>
-  <string name="toast_chart_percentage_mode_total">A percentagem do valor seleccionado face ao valor total</string>
-  <string name="toast_chart_percentage_mode_current_bar">A percentagem do valor seleccionado face ao valor da barra actual</string>
+  <string name="toast_chart_percentage_mode_total">O percentual do valor selecionado em relao ao valor total</string>
+  <string name="toast_chart_percentage_mode_current_bar">O percentual do valor selecionado em relao ao valor da barra empilhada atual</string>
   <string name="label_save_template">Guardar como modelo</string>
   <string name="label_delete_account_transactions_description">Esta conta tem transaes. \nO que pretende fazer com estas transaes</string>
   <string name="label_delete_account_subaccounts_description">Esta conta tem subcontas. \nO que pretende fazer com estas subcontas</string>
@@ -275,11 +275,11 @@
   <string name="label_tap_to_create_schedule">Toque para criar um agendamento</string>
   <string name="title_restore_backup">Restore Backup</string>
   <string name="header_backup_and_export_settings">Backup &amp; exportao</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="title_dropbox_sync_preference">Habilitar o DropBox</string>
+  <string name="title_owncloud_sync_preference">Habilitar o ownCloud </string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
+  <string name="summary_dropbox_sync">Habilitar a exportao para o DropBox</string>
+  <string name="summary_owncloud_sync">Habilitar a exportao para o ownCloud</string>
   <string name="title_select_gnucash_xml_file">Escolha um ficheiro XML do GnuCash</string>
   <string name="title_backup_prefs">Preferncias de Backup</string>
   <string name="title_create_backup_pref">Criar Backup</string>
@@ -288,8 +288,8 @@
   <string name="toast_backup_successful">Backup efectuado com sucesso</string>
   <string name="toast_backup_failed">Erro ao efectuar o Backup</string>
   <string name="export_warning_xml">Exporta todas as contas e transaes</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="title_google_drive_sync_pref">Habilitar o Google Drive</string>
+  <string name="summary_google_drive_sync">Habilitar a exportao para o Google Drive</string>
   <string name="toast_install_file_manager">Instale um gestor de ficheiros para escolher um ficheiro</string>
   <string name="title_select_backup_to_restore">Escolha um backup para restaurar</string>
   <string name="nav_menu_favorites">Favoritos</string>
@@ -298,16 +298,16 @@
   <string name="nav_menu_scheduled_transactions">Transaes agendadas</string>
   <string name="nav_menu_export">Exportar&#8230;</string>
   <string name="nav_menu_settings">Definies</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
-  <string name="owncloud_pref">owncloud</string>
+  <string name="username">Nome do usurio</string>
+  <string name="password">Senha</string>
+  <string name="owncloud_pref">ownCloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">Servidor OC no encontrado</string>
+  <string name="owncloud_user_invalid">Usurio/senha do OC invlido</string>
+  <string name="owncloud_dir_invalid">Caracteres invlidos: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">Servidor OC OK</string>
+  <string name="owncloud_user_ok">Usurio/senha do OC OK</string>
+  <string name="owncloud_dir_ok">Nome do diretrio OK</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Diariamente</item>
     <item quantity="other">Todos os %d dias</item>
@@ -396,21 +396,21 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="summary_google_plus">Compartilhe ideias, discuta alteraes ou reporte problemas</string>
   <string name="summary_translate_gnucash">Traduza ou corrija as tradues no Crowdln</string>
   <string name="toast_no_compatible_apps_to_receive_export">No existem apps compatveis para receber as transaes exportadas!</string>
-  <string name="menu_move_transaction">Move&#8230;</string>
+  <string name="menu_move_transaction">Mover&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicar</string>
-  <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
-  <string name="title_budgets">Budgets</string>
-  <string name="title_use_compact_list">Enable compact view</string>
-  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
-  <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="nav_menu_budgets">Oramentos</string>
+  <string name="title_cash_flow_report">Fluxo de caixa</string>
+  <string name="title_budgets">Oramentos</string>
+  <string name="title_use_compact_list">Permitir viso compacta</string>
+  <string name="summary_use_compact_list">Sempre permitir viso compacta para a lista de transaes</string>
+  <string name="error_invalid_exchange_rate">Taxa de cmbio invlida</string>
+  <string name="sample_exchange_rate">por exemplo, 1 %1$s = x.xx %2$s</string>
+  <string name="error_invalid_amount">Valor invlido</string>
   <string-array name="report_time_range">
     <item>Ms atual</item>
-    <item>Last 3 meses</item>
-    <item>Last 6 meses</item>
-    <item>Last 12 meses</item>
+    <item>ltimos 3 meses</item>
+    <item>ltimos 6 meses</item>
+    <item>ltimos 12 meses</item>
     <item>Tudo</item>
     <item>Intervalo personalizado&#8230;</item>
   </string-array>
@@ -436,16 +436,16 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="digit_nine_text">WXYZ</string>
   <string name="digit_zero">0</string>
   <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
+  <string name="title_manage_books">Gerenciar livros</string>
   <string name="menu_manage_books">Manage Books&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
+  <string name="select_chart_to_view_details">Selecione qualquer parte do grfico para ver os detalhes</string>
   <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
+  <string name="msg_all_book_data_will_be_deleted">Todas as contas e transaes neste livro sero excludas!</string>
+  <string name="btn_delete_book">Apagar livro</string>
+  <string name="label_last_export_time">ltima exportao:</string>
+  <string name="menu_title_enable_sync">Ativar a Sincronizao</string>
   <string name="menu_title_new_book">New Book</string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
-  <string name="label_split_count">%1$d splits</string>
-  <string name="label_inside_account_with_name">in %1$s</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">A transao selecionada no tem divises e no pode ser aberta</string>
+  <string name="label_split_count">%1$d divises</string>
+  <string name="label_inside_account_with_name">em %1$s</string>
 </resources>

From 1559e9afe072f043434a6e2682ccc63fc0f379b0 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sat, 6 Aug 2016 01:03:54 +0200
Subject: [PATCH 096/121] Update "About" string and version code for
 v2.1.0-beta1 release

---
 app/build.gradle                    |  2 +-
 app/src/main/res/values/strings.xml | 10 +++++-----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index c5915a89..d6bc5717 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -7,7 +7,7 @@ apply plugin: 'io.fabric'
 def versionMajor = 2
 def versionMinor = 1
 def versionPatch = 0
-def versionBuild = 0
+def versionBuild = 1
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index b0f627c5..91f67153 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -132,11 +132,11 @@
 	<string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
 	<string name="title_whats_new">What\'s New</string>
 	<string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
 	<string name="label_dismiss">Dismiss</string>

From 80cc6d987620f5ce5adac6d89100ecff1818dbcc Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sat, 6 Aug 2016 16:21:11 +0200
Subject: [PATCH 097/121] Code refactoring - no functional changes

Cleanup imports and remove redundant code
---
 .../java/org/gnucash/android/model/BudgetAmount.java     |  2 --
 app/src/main/java/org/gnucash/android/model/Price.java   |  1 -
 .../gnucash/android/ui/account/AccountFormFragment.java  |  2 +-
 .../gnucash/android/ui/account/AccountsListFragment.java |  3 +--
 .../android/ui/account/DeleteAccountDialogFragment.java  |  2 +-
 .../android/ui/budget/BudgetAmountEditorFragment.java    |  1 -
 .../gnucash/android/ui/budget/BudgetDetailFragment.java  |  2 +-
 .../gnucash/android/ui/budget/BudgetFormFragment.java    |  3 ---
 .../gnucash/android/ui/budget/BudgetListFragment.java    |  2 +-
 .../org/gnucash/android/ui/budget/BudgetsActivity.java   |  4 ----
 .../gnucash/android/ui/common/BaseDrawerActivity.java    |  1 -
 .../java/org/gnucash/android/ui/common/FormActivity.java |  2 +-
 .../gnucash/android/ui/export/ExportFormFragment.java    |  1 -
 .../ui/homescreen/WidgetConfigurationActivity.java       |  5 +----
 .../org/gnucash/android/ui/report/ReportsActivity.java   |  2 --
 .../ui/report/barchart/StackedBarChartFragment.java      |  1 -
 .../ui/report/linechart/CashFlowLineChartFragment.java   |  1 -
 .../android/ui/report/piechart/PieChartFragment.java     |  1 -
 .../android/ui/report/sheet/BalanceSheetFragment.java    |  6 +-----
 .../android/ui/settings/AboutPreferenceFragment.java     |  2 --
 .../android/ui/settings/BackupPreferenceFragment.java    |  1 -
 .../gnucash/android/ui/settings/BookManagerFragment.java |  3 +--
 .../android/ui/settings/GeneralPreferenceFragment.java   |  4 ----
 .../ui/settings/TransactionsPreferenceFragment.java      |  3 ---
 .../ui/settings/dialog/OwnCloudDialogFragment.java       |  4 ++--
 .../android/ui/transaction/ScheduledActionsActivity.java |  1 -
 .../android/ui/transaction/SplitEditorFragment.java      |  2 +-
 .../android/ui/transaction/TransactionFormFragment.java  | 16 +++-------------
 .../android/ui/transaction/TransactionsActivity.java     | 13 +++++--------
 .../android/ui/transaction/TransactionsListFragment.java |  4 ++--
 .../ui/transaction/dialog/BulkMoveDialogFragment.java    |  4 ++--
 .../TransactionsDeleteConfirmationDialogFragment.java    |  2 +-
 .../transaction/dialog/TransferFundsDialogFragment.java  |  2 +-
 .../org/gnucash/android/ui/util/AccountBalanceTask.java  |  1 -
 .../android/ui/util/widget/CalculatorEditText.java       |  3 ---
 .../android/ui/util/widget/TransactionTypeSwitch.java    |  1 -
 .../android/ui/wizard/FirstRunWizardActivity.java        |  5 -----
 37 files changed, 26 insertions(+), 87 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/model/BudgetAmount.java b/app/src/main/java/org/gnucash/android/model/BudgetAmount.java
index 714e4478..42efb56d 100644
--- a/app/src/main/java/org/gnucash/android/model/BudgetAmount.java
+++ b/app/src/main/java/org/gnucash/android/model/BudgetAmount.java
@@ -18,8 +18,6 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import org.gnucash.android.app.GnuCashApplication;
-
 import java.math.BigDecimal;
 
 /**
diff --git a/app/src/main/java/org/gnucash/android/model/Price.java b/app/src/main/java/org/gnucash/android/model/Price.java
index 7fde8683..6c02e8d5 100644
--- a/app/src/main/java/org/gnucash/android/model/Price.java
+++ b/app/src/main/java/org/gnucash/android/model/Price.java
@@ -2,7 +2,6 @@
 
 import org.gnucash.android.util.TimestampHelper;
 
-
 import java.math.BigDecimal;
 import java.math.MathContext;
 import java.sql.Timestamp;
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index d714dd15..d407db82 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -53,9 +53,9 @@
 import android.widget.Spinner;
 
 import org.gnucash.android.R;
+import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
-import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 39fe510e..b641ec65 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -51,7 +51,6 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
@@ -60,10 +59,10 @@
 import org.gnucash.android.model.Budget;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.common.FormActivity;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.util.AccountBalanceTask;
 import org.gnucash.android.ui.util.CursorRecyclerAdapter;
-import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
 
 import java.util.List;
diff --git a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
index d2d6d773..bc84ac4e 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/DeleteAccountDialogFragment.java
@@ -32,8 +32,8 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.AccountType;
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetAmountEditorFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetAmountEditorFragment.java
index 522ab0db..776e1073 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetAmountEditorFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetAmountEditorFragment.java
@@ -40,7 +40,6 @@
 import org.gnucash.android.R;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
-import org.gnucash.android.db.adapter.BudgetsDbAdapter;
 import org.gnucash.android.model.BudgetAmount;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
index 1b783bbf..195476f2 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
@@ -51,9 +51,9 @@
 import org.gnucash.android.model.BudgetAmount;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.common.FormActivity;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
-import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
 
 import java.math.BigDecimal;
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
index 18f1ff9c..e727912f 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetFormFragment.java
@@ -21,7 +21,6 @@
 import android.database.Cursor;
 import android.inputmethodservice.KeyboardView;
 import android.os.Bundle;
-import android.os.Parcelable;
 import android.support.annotation.Nullable;
 import android.support.design.widget.TextInputLayout;
 import android.support.v4.app.Fragment;
@@ -70,8 +69,6 @@
 import java.util.Calendar;
 import java.util.Date;
 import java.util.GregorianCalendar;
-import java.util.IllegalFormatCodePointException;
-import java.util.List;
 
 import butterknife.Bind;
 import butterknife.ButterKnife;
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
index 2eacfd79..cc784ea2 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetListFragment.java
@@ -53,9 +53,9 @@
 import org.gnucash.android.model.BudgetAmount;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.common.FormActivity;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.util.CursorRecyclerAdapter;
-import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
 
 import java.math.BigDecimal;
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java
index ca4fa4da..a53ac813 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetsActivity.java
@@ -19,8 +19,6 @@
 import android.os.Bundle;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
-import android.support.v7.app.ActionBar;
-import android.support.v7.widget.Toolbar;
 import android.view.View;
 
 import org.gnucash.android.R;
@@ -29,8 +27,6 @@
 import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.UxArgument;
 
-import butterknife.ButterKnife;
-
 /**
  * Activity for managing display and editing of budgets
  */
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 40bc5efc..5229c276 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -46,7 +46,6 @@
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.ui.account.AccountsActivity;
-import org.gnucash.android.ui.budget.BudgetsActivity;
 import org.gnucash.android.ui.passcode.PasscodeLockActivity;
 import org.gnucash.android.ui.report.ReportsActivity;
 import org.gnucash.android.ui.settings.PreferenceActivity;
diff --git a/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java b/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
index f6abfed8..e078ba18 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
@@ -34,8 +34,8 @@
 import org.gnucash.android.ui.budget.BudgetFormFragment;
 import org.gnucash.android.ui.export.ExportFormFragment;
 import org.gnucash.android.ui.passcode.PasscodeLockActivity;
-import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.transaction.SplitEditorFragment;
+import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.util.widget.CalculatorKeyboard;
 
 /**
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index b6ef4603..ea09b0e8 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -63,7 +63,6 @@
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.settings.BackupPreferenceFragment;
-import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.ui.settings.dialog.OwnCloudDialogFragment;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.util.RecurrenceParser;
diff --git a/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java b/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
index ffd38c27..f2d40c54 100644
--- a/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
@@ -25,7 +25,6 @@
 import android.content.SharedPreferences;
 import android.content.SharedPreferences.Editor;
 import android.database.Cursor;
-import android.os.AsyncTask;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.v4.widget.SimpleCursorAdapter;
@@ -41,15 +40,13 @@
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.receivers.TransactionAppWidgetProvider;
+import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.UxArgument;
-import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
 import java.util.Locale;
-import java.util.concurrent.Executor;
-import java.util.concurrent.Executors;
 
 /**
  * Activity for configuration which account to display on a widget.
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index 0be7918c..59e4a72c 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -27,7 +27,6 @@
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v7.app.ActionBar;
-import android.support.v7.widget.Toolbar;
 import android.view.KeyEvent;
 import android.view.Menu;
 import android.view.MenuItem;
@@ -52,7 +51,6 @@
 import java.util.List;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
 
 /**
  * Activity for displaying report fragments (which must implement {@link BaseReportFragment})
diff --git a/app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment.java
index 3297b230..7408fb73 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/barchart/StackedBarChartFragment.java
@@ -50,7 +50,6 @@
 import java.util.LinkedHashMap;
 import java.util.LinkedHashSet;
 import java.util.List;
-import java.util.Locale;
 import java.util.Map;
 
 import butterknife.Bind;
diff --git a/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
index 69670658..40e7b18d 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/linechart/CashFlowLineChartFragment.java
@@ -49,7 +49,6 @@
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
-import java.util.Locale;
 import java.util.Map;
 
 import butterknife.Bind;
diff --git a/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
index 7f20203f..fab2e24b 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/piechart/PieChartFragment.java
@@ -41,7 +41,6 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
-import java.util.Locale;
 
 import butterknife.Bind;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java b/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
index 7321f945..ad459e30 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/sheet/BalanceSheetFragment.java
@@ -19,19 +19,16 @@
 import android.graphics.Typeface;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
 import android.text.TextUtils;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.View;
-import android.view.ViewGroup;
 import android.widget.TableLayout;
 import android.widget.TextView;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.report.BaseReportFragment;
@@ -42,7 +39,6 @@
 import java.util.List;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
 
 /**
  * Balance sheet report fragment
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/AboutPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/AboutPreferenceFragment.java
index 805a44cb..72dedf2f 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/AboutPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/AboutPreferenceFragment.java
@@ -16,7 +16,6 @@
 
 package org.gnucash.android.ui.settings;
 
-import android.annotation.TargetApi;
 import android.os.Bundle;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
@@ -25,7 +24,6 @@
 
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.R;
-import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.ui.account.AccountsActivity;
 
 
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
index f1017b55..c522c180 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
@@ -46,7 +46,6 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.importer.ImportAsyncTask;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
index 40bf6306..a40749ab 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
@@ -43,9 +43,8 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseCursorLoader;
-import org.gnucash.android.db.adapter.BooksDbAdapter;
-
 import org.gnucash.android.db.DatabaseSchema.BookEntry;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.util.PreferencesHelper;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/GeneralPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/GeneralPreferenceFragment.java
index effd9aba..26f14fad 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/GeneralPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/GeneralPreferenceFragment.java
@@ -16,12 +16,10 @@
 
 package org.gnucash.android.ui.settings;
 
-import android.annotation.TargetApi;
 import android.app.Activity;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.preference.CheckBoxPreference;
@@ -30,8 +28,6 @@
 import android.widget.Toast;
 
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.passcode.PasscodeLockScreenActivity;
 import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
index 19740109..b047430c 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/TransactionsPreferenceFragment.java
@@ -16,18 +16,15 @@
 
 package org.gnucash.android.ui.settings;
 
-import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceFragmentCompat;
-import android.support.v7.preference.PreferenceManager;
 import android.support.v7.preference.SwitchPreferenceCompat;
 
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/dialog/OwnCloudDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/dialog/OwnCloudDialogFragment.java
index 26cc24b4..aa64c05c 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/dialog/OwnCloudDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/dialog/OwnCloudDialogFragment.java
@@ -16,15 +16,15 @@
 import android.widget.EditText;
 import android.widget.TextView;
 
-import com.owncloud.android.lib.common.OwnCloudClientFactory;
 import com.owncloud.android.lib.common.OwnCloudClient;
+import com.owncloud.android.lib.common.OwnCloudClientFactory;
 import com.owncloud.android.lib.common.OwnCloudCredentialsFactory;
 import com.owncloud.android.lib.common.operations.OnRemoteOperationListener;
 import com.owncloud.android.lib.common.operations.RemoteOperation;
 import com.owncloud.android.lib.common.operations.RemoteOperationResult;
+import com.owncloud.android.lib.resources.files.FileUtils;
 import com.owncloud.android.lib.resources.status.GetRemoteStatusOperation;
 import com.owncloud.android.lib.resources.users.GetRemoteUserNameOperation;
-import com.owncloud.android.lib.resources.files.FileUtils;
 
 import org.gnucash.android.R;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
index 87af8636..3a14b665 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
@@ -22,7 +22,6 @@
 import android.support.v4.app.FragmentStatePagerAdapter;
 import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
-import android.support.v7.widget.Toolbar;
 
 import org.gnucash.android.R;
 import org.gnucash.android.model.ScheduledAction;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
index 210a3408..8339c6bf 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
@@ -47,9 +47,9 @@
 import net.objecthunter.exp4j.ExpressionBuilder;
 
 import org.gnucash.android.R;
+import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
-import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.Commodity;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 126bf5f1..d1ed70f9 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -24,7 +24,6 @@
 import android.database.Cursor;
 import android.inputmethodservice.KeyboardView;
 import android.os.Bundle;
-import android.os.Parcelable;
 import android.support.annotation.NonNull;
 import android.support.v4.app.Fragment;
 import android.support.v4.widget.SimpleCursorAdapter;
@@ -59,9 +58,9 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.PricesDbAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
@@ -69,7 +68,6 @@
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.model.Price;
 import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
@@ -87,7 +85,6 @@
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
 import java.math.BigDecimal;
-import java.math.RoundingMode;
 import java.text.DateFormat;
 import java.text.ParseException;
 import java.util.ArrayList;
@@ -821,12 +818,11 @@ private void saveNewTransaction() {
         Transaction transaction = extractTransactionFromView();
         if (mEditMode) { //if editing an existing transaction
             transaction.setUID(mTransaction.getUID());
-            mTransaction = transaction;
-        } else {
-            mTransaction = transaction;
         }
 
+        mTransaction = transaction;
         mAccountsDbAdapter.beginTransaction();
+
         try {
             // 1) mTransactions may be existing or non-existing
             // 2) when mTransactions exists in the db, the splits may exist or not exist in the db
@@ -956,12 +952,6 @@ public void setSplitList(List<Split> splitList){
 
         mAmountEditText.setValue(balance.asBigDecimal());
         mTransactionTypeSwitch.setChecked(balance.isNegative());
-        //once we set the split list, do not allow direct editing of the total
-        if (mSplitsList.size() > 1){
-            toggleAmountInputEntryMode(false);
-            setDoubleEntryViewsVisibility(View.GONE);
-            mOpenSplitEditor.setVisibility(View.VISIBLE);
-        }
     }
 
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
index 43726750..7a071296 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -25,7 +25,6 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
-import android.support.design.widget.AppBarLayout;
 import android.support.design.widget.FloatingActionButton;
 import android.support.design.widget.TabLayout;
 import android.support.v4.app.Fragment;
@@ -33,7 +32,6 @@
 import android.support.v4.app.FragmentStatePagerAdapter;
 import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
-import android.support.v7.widget.Toolbar;
 import android.text.format.DateUtils;
 import android.util.Log;
 import android.util.SparseArray;
@@ -48,19 +46,19 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.ui.common.BaseDrawerActivity;
-import org.gnucash.android.ui.common.FormActivity;
-import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.account.AccountsListFragment;
-import org.gnucash.android.ui.util.AccountBalanceTask;
 import org.gnucash.android.ui.account.OnAccountClickedListener;
+import org.gnucash.android.ui.common.BaseDrawerActivity;
+import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.ui.common.Refreshable;
+import org.gnucash.android.ui.common.UxArgument;
+import org.gnucash.android.ui.util.AccountBalanceTask;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 import org.joda.time.LocalDate;
 
@@ -69,7 +67,6 @@
 import java.util.Date;
 
 import butterknife.Bind;
-import butterknife.ButterKnife;
 
 /**
  * Activity for displaying, creating and editing transactions
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index 00bf6584..bf1bcc5b 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -43,9 +43,9 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
@@ -53,12 +53,12 @@
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.common.FormActivity;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
 import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.ui.transaction.dialog.BulkMoveDialogFragment;
 import org.gnucash.android.ui.util.CursorRecyclerAdapter;
-import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.util.widget.EmptyRecyclerView;
 
 import java.util.List;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
index ca85b50e..9771537f 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
@@ -29,13 +29,13 @@
 import android.widget.Toast;
 
 import org.gnucash.android.R;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
+import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
-import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
 /**
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
index 274aed6f..7c6f04cd 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransactionsDeleteConfirmationDialogFragment.java
@@ -29,8 +29,8 @@
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.model.Transaction;
-import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.common.Refreshable;
+import org.gnucash.android.ui.common.UxArgument;
 import org.gnucash.android.ui.homescreen.WidgetConfigurationActivity;
 
 import java.util.ArrayList;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 3c7f3e91..fcbe8766 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -40,8 +40,8 @@
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Price;
-import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.transaction.OnTransferFundsListener;
+import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.util.AmountParser;
 
 import java.math.BigDecimal;
diff --git a/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java b/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
index 3fe90503..e16b21da 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
@@ -23,7 +23,6 @@
 
 import com.crashlytics.android.Crashlytics;
 
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
diff --git a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
index f3f3b5c6..69a77890 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
@@ -30,7 +30,6 @@
 import android.view.View;
 import android.view.inputmethod.InputMethodManager;
 import android.widget.EditText;
-import android.widget.TextView;
 
 import com.crashlytics.android.Crashlytics;
 
@@ -39,8 +38,6 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.model.Money;
-import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.ui.common.FormActivity;
 import org.gnucash.android.util.AmountParser;
diff --git a/app/src/main/java/org/gnucash/android/ui/util/widget/TransactionTypeSwitch.java b/app/src/main/java/org/gnucash/android/ui/util/widget/TransactionTypeSwitch.java
index c8fc1884..ead7c15b 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/widget/TransactionTypeSwitch.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/widget/TransactionTypeSwitch.java
@@ -20,7 +20,6 @@
 import android.support.v7.widget.SwitchCompat;
 import android.util.AttributeSet;
 import android.widget.CompoundButton;
-import android.widget.EditText;
 import android.widget.TextView;
 
 import org.gnucash.android.R;
diff --git a/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java b/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
index d6ffd8cf..04b67eca 100644
--- a/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
@@ -37,9 +37,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
-import android.widget.Toast;
 
-import com.crashlytics.android.Crashlytics;
 import com.tech.freak.wizardpager.model.AbstractWizardModel;
 import com.tech.freak.wizardpager.model.ModelCallbacks;
 import com.tech.freak.wizardpager.model.Page;
@@ -51,12 +49,9 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
-import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.util.TaskDelegate;
 
-import java.io.FileNotFoundException;
-import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.List;
 

From 0415d936683f416a2bb778a949961defd0fbc12b Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 9 Aug 2016 10:37:12 +0200
Subject: [PATCH 098/121] Fixes #536 - bug where a new scheduled export is
 automatically created with every export

Ensure that wakelock gets released when scheduler service is destroyed, regardless of export outcome - #535
---
 .../org/gnucash/android/model/ScheduledAction.java |  4 +++-
 .../gnucash/android/service/SchedulerService.java  | 26 +++++++++++++++-------
 .../android/ui/export/ExportFormFragment.java      | 17 +++++++++-----
 3 files changed, 32 insertions(+), 15 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
index e3a9a15d..55dc5656 100644
--- a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
+++ b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
@@ -15,6 +15,8 @@
  */
 package org.gnucash.android.model;
 
+import android.support.annotation.NonNull;
+
 import org.joda.time.LocalDate;
 
 import java.sql.Timestamp;
@@ -430,7 +432,7 @@ public Recurrence getRecurrence() {
      * <p>This also sets the start period of the recurrence object, if there is one</p>
      * @param recurrence {@link Recurrence} object
      */
-    public void setRecurrence(Recurrence recurrence) {
+    public void setRecurrence(@NonNull Recurrence recurrence) {
         this.mRecurrence = recurrence;
         //if we were parsing XML and parsed the start and end date from the scheduled action first,
         //then use those over the values which might be gotten from the recurrence
diff --git a/app/src/main/java/org/gnucash/android/service/SchedulerService.java b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
index dd4802c3..39172109 100644
--- a/app/src/main/java/org/gnucash/android/service/SchedulerService.java
+++ b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
@@ -51,20 +51,32 @@
     public static final String LOG_TAG = "SchedulerService";
 
     /**
-     * Creates an IntentService
-     *
+     * Wake lock for keeping the CPU on while export is in progress
      */
+    PowerManager.WakeLock mWakeLock;
+
     public SchedulerService() {
         super(LOG_TAG);
     }
 
     @Override
+    public void onCreate() {
+        super.onCreate();
+        PowerManager powerManager = (PowerManager) getSystemService(POWER_SERVICE);
+        mWakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, LOG_TAG);
+        mWakeLock.acquire();
+    }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+        if (mWakeLock.isHeld())
+            mWakeLock.release(); //whenever this service is destroyed, release the lock
+    }
+
+    @Override
     protected void onHandleIntent(Intent intent) {
         Log.i(LOG_TAG, "Starting scheduled action service");
-        PowerManager powerManager = (PowerManager) getSystemService(POWER_SERVICE);
-        PowerManager.WakeLock wakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,
-                LOG_TAG);
-        wakeLock.acquire();
 
         ScheduledActionDbAdapter scheduledActionDbAdapter = GnuCashApplication.getScheduledEventDbAdapter();
         List<ScheduledAction> scheduledActions = scheduledActionDbAdapter.getAllEnabledScheduledActions();
@@ -87,8 +99,6 @@ protected void onHandleIntent(Intent intent) {
         }
 
         Log.i(LOG_TAG, "Completed service @ " + SystemClock.elapsedRealtime());
-
-        wakeLock.release();
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index ea09b0e8..5ff63942 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -273,15 +273,17 @@ private void startExport(){
 		exportParameters.setExportTarget(mExportTarget);
 		exportParameters.setDeleteTransactionsAfterExport(mDeleteAllCheckBox.isChecked());
 
-		ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
-		scheduledAction.setRecurrence(RecurrenceParser.parse(mEventRecurrence));
-		scheduledAction.setTag(exportParameters.toCsv());
-		scheduledAction.setActionUID(BaseModel.generateUID());
-		ScheduledActionDbAdapter.getInstance().addRecord(scheduledAction, DatabaseAdapter.UpdateMethod.insert);
-
 		Log.i(TAG, "Commencing async export of transactions");
 		new ExportAsyncTask(getActivity()).execute(exportParameters);
 
+		if (mRecurrenceRule != null) {
+			ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
+			scheduledAction.setRecurrence(RecurrenceParser.parse(mEventRecurrence));
+			scheduledAction.setTag(exportParameters.toCsv());
+			scheduledAction.setActionUID(BaseModel.generateUID());
+			ScheduledActionDbAdapter.getInstance().addRecord(scheduledAction, DatabaseAdapter.UpdateMethod.insert);
+		}
+
 		int position = mDestinationSpinner.getSelectedItemPosition();
 		PreferenceManager.getDefaultSharedPreferences(getActivity())
 				.edit().putInt(getString(R.string.key_last_export_destination), position)
@@ -292,6 +294,9 @@ private void startExport(){
 		//getActivity().finish();
 	}
 
+	/**
+	 * Bind views to actions when initializing the export form
+	 */
 	private void bindViewListeners(){
 		// export destination bindings
 		ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(getActivity(),

From d3e9dcee9fe857c7f385427120ba8921a448138a Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 9 Aug 2016 12:44:34 +0200
Subject: [PATCH 099/121] Bugfix #534 -  "787 foreign key constraint" error
 during importing GnuCash XML

Caused by imbalance splits generated from scheduled transactions not being assigned the correct imbalance accounts
fixes #534
---
 app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 4a610ea6..f77eacf9 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -1097,6 +1097,10 @@ private int generateMissedScheduledTransactions(ScheduledAction scheduledAction)
                     transaction.setTime(lastRuntime);
                     transaction.setScheduledActionUID(scheduledAction.getUID());
                     mTransactionList.add(transaction);
+                    //autobalance splits are generated with the currency of the transactions as the GUID
+                    //so we add them to the mAutoBalanceSplits which will be updated to real GUIDs before saving
+                    List<Split> autoBalanceSplits = transaction.getSplits(transaction.getCurrencyCode());
+                    mAutoBalanceSplits.addAll(autoBalanceSplits);
                     scheduledAction.setExecutionCount(scheduledAction.getExecutionCount() + 1);
                     ++generatedTransactionCount;
                     break;

From b522690da10fe1f7922ebad85df85f894f438891 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 9 Aug 2016 15:58:04 +0200
Subject: [PATCH 100/121] Fix: transfer account selector not shown when new
 book is created - fixes #537

Fix: book database file not deleted when book is deleted  (only the entry was deleted)
---
 .../java/org/gnucash/android/importer/ImportAsyncTask.java    | 11 +++++++----
 .../org/gnucash/android/ui/settings/BookManagerFragment.java  |  1 +
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
index b6b2231d..6f1656d2 100644
--- a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
@@ -19,8 +19,8 @@
 import android.app.Activity;
 import android.app.ProgressDialog;
 import android.content.ContentValues;
+import android.content.Context;
 import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Build;
@@ -32,14 +32,11 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.util.TaskDelegate;
 
-import java.io.File;
 import java.io.InputStream;
 
 /**
@@ -122,6 +119,12 @@ public void run() {
             cursor.close();
         }
 
+        //set the preferences to their default values
+        mContext.getSharedPreferences(bookUID, Context.MODE_PRIVATE)
+                .edit()
+                .putBoolean(mContext.getString(R.string.key_use_double_entry), true)
+                .apply();
+
         ((GnuCashApplication)mContext.getApplication()).loadBook(bookUID);
 
         return true;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
index a40749ab..d0a11d0e 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
@@ -200,6 +200,7 @@ public void onClick(View v) {
                             @Override
                             public void onClick(DialogInterface dialog, int which) {
                                 BooksDbAdapter.getInstance().deleteRecord(bookUID);
+                                mContext.deleteDatabase(bookUID);
                                 refresh();
                             }
                         });

From 0fd12f92d7c0101b231d45bc2607cac904bacc9f Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 9 Aug 2016 17:23:33 +0200
Subject: [PATCH 101/121] Fix: accounts list not updated after initial creation
 of default accounts

Make code more robust against "no active book" database state errors
Improve transaction test reliability
---
 .../android/test/ui/TransactionsActivityTest.java   |  4 +++-
 .../org/gnucash/android/app/GnuCashApplication.java |  2 +-
 .../gnucash/android/db/adapter/BooksDbAdapter.java  |  9 ++++++++-
 .../gnucash/android/importer/ImportAsyncTask.java   | 21 +++++++--------------
 .../android/ui/account/AccountsActivity.java        |  3 ++-
 .../android/ui/account/AccountsListFragment.java    |  4 ++++
 .../android/ui/common/BaseDrawerActivity.java       |  4 ++--
 7 files changed, 27 insertions(+), 20 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index e2813839..2766da8e 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -591,13 +591,15 @@ public void testMoveTransaction(){
 	@Test
 	public void editingSplit_shouldNotSetAmountToZero(){
 		setDoubleEntryEnabled(true);
+		setDefaultTransactionType(TransactionType.DEBIT);
+
 		mTransactionsDbAdapter.deleteAllRecords();
 
 		Account account = new Account("Z Account", Commodity.getInstance(CURRENCY_CODE));
 		mAccountsDbAdapter.addRecord(account, DatabaseAdapter.UpdateMethod.insert);
 
+		//create new transaction "Transaction Acct" --> "Transfer Account"
 		onView(withId(R.id.fab_create_transaction)).perform(click());
-
 		onView(withId(R.id.input_transaction_name)).perform(typeText("Test Split"));
 		onView(withId(R.id.input_transaction_amount)).perform(typeText("1024"));
 
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 518de619..3f5b228d 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -210,7 +210,7 @@ public static BooksDbAdapter getBooksDbAdapter(){
      * Loads the book with GUID {@code bookUID}
      * @param bookUID GUID of the book to be loaded
      */
-    public static void loadBook(String bookUID){
+    public static void loadBook(@NonNull String bookUID){
         mBooksDbAdapter.setActive(bookUID);
         initDatabaseAdapters();
         AccountsActivity.start(getAppContext());
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
index 4306dc17..bc6116e7 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
@@ -94,9 +94,14 @@ public Book buildModelInstance(@NonNull Cursor cursor) {
 
     /**
      * Sets the book with unique identifier {@code uid} as active and all others as inactive
+     * <p>If the parameter is null, then the currently active book is not changed</p>
      * @param bookUID Unique identifier of the book
+     * @return GUID of the currently active book
      */
-    public void setActive(String bookUID){
+    public String setActive(@NonNull String bookUID){
+        if (bookUID == null)
+            return BooksDbAdapter.getInstance().getActiveBookUID();
+
         ContentValues contentValues = new ContentValues();
         contentValues.put(BookEntry.COLUMN_ACTIVE, 0);
         mDb.update(mTableName, contentValues, null, null); //disable all
@@ -104,6 +109,8 @@ public void setActive(String bookUID){
         contentValues.clear();
         contentValues.put(BookEntry.COLUMN_ACTIVE, 1);
         mDb.update(mTableName, contentValues, BookEntry.COLUMN_UID + " = ?", new String[]{bookUID});
+
+        return bookUID;
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
index 6f1656d2..0e3891ae 100644
--- a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
@@ -34,7 +34,6 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
-import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.util.TaskDelegate;
 
 import java.io.InputStream;
@@ -48,6 +47,8 @@
     private TaskDelegate mDelegate;
     private ProgressDialog mProgressDialog;
 
+    private String mImportedBookUID;
+
     public ImportAsyncTask(Activity context){
         this.mContext = context;
     }
@@ -76,10 +77,9 @@ protected void onPreExecute() {
 
     @Override
     protected Boolean doInBackground(Uri... uris) {
-        String bookUID = null;
         try {
             InputStream accountInputStream = mContext.getContentResolver().openInputStream(uris[0]);
-            bookUID = GncXmlImporter.parse(accountInputStream);
+            mImportedBookUID = GncXmlImporter.parse(accountInputStream);
 
         } catch (Exception exception){
             Log.e(ImportAsyncTask.class.getName(), "" + exception.getMessage());
@@ -98,12 +98,6 @@ public void run() {
                 }
             });
 
-            //a database is always created at the beginning of import
-            //if there was an error during import, delete the created database
-            if (bookUID != null) {
-                mContext.deleteDatabase(bookUID);
-            }
-
             return false;
         }
 
@@ -114,19 +108,17 @@ public void run() {
             ContentValues contentValues = new ContentValues();
             contentValues.put(DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME, displayName);
             contentValues.put(DatabaseSchema.BookEntry.COLUMN_SOURCE_URI, uris[0].toString());
-            BooksDbAdapter.getInstance().updateRecord(bookUID, contentValues);
+            BooksDbAdapter.getInstance().updateRecord(mImportedBookUID, contentValues);
 
             cursor.close();
         }
 
         //set the preferences to their default values
-        mContext.getSharedPreferences(bookUID, Context.MODE_PRIVATE)
+        mContext.getSharedPreferences(mImportedBookUID, Context.MODE_PRIVATE)
                 .edit()
                 .putBoolean(mContext.getString(R.string.key_use_double_entry), true)
                 .apply();
 
-        ((GnuCashApplication)mContext.getApplication()).loadBook(bookUID);
-
         return true;
     }
 
@@ -148,6 +140,7 @@ protected void onPostExecute(Boolean importSuccess) {
         int message = importSuccess ? R.string.toast_success_importing_accounts : R.string.toast_error_importing_accounts;
         Toast.makeText(mContext, message, Toast.LENGTH_SHORT).show();
 
-        AccountsActivity.start(mContext);
+        if (mImportedBookUID != null)
+            GnuCashApplication.loadBook(mImportedBookUID);
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 827c91dc..f32dfe62 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -377,10 +377,11 @@ private void init() {
         boolean firstRun = prefs.getBoolean(getString(R.string.key_first_run), true);
 
         if (firstRun){
-            startActivity(new Intent(this, FirstRunWizardActivity.class));
+            startActivity(new Intent(GnuCashApplication.getAppContext(), FirstRunWizardActivity.class));
 
             //default to using double entry and save the preference explicitly
             prefs.edit().putBoolean(getString(R.string.key_use_double_entry), true).apply();
+            finish();
         } else {
             getSDWritePermission();
         }
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index b641ec65..6004729e 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -288,6 +288,10 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
 
 
     @Override
+    /**
+     * Refresh the account list as a sublist of another account
+     * @param parentAccountUID GUID of the parent account
+     */
     public void refresh(String parentAccountUID) {
         getArguments().putString(UxArgument.PARENT_ACCOUNT_UID, parentAccountUID);
         refresh();
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 5229c276..eee5966c 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -297,7 +297,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
             case AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE:
                 AccountsActivity.importXmlFileFromIntent(this, data, null);
                 break;
-            case BaseDrawerActivity.REQUEST_OPEN_DOCUMENT:
+            case BaseDrawerActivity.REQUEST_OPEN_DOCUMENT: //this uses the Storage Access Framework
                 final int takeFlags = data.getFlags()
                         & (Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
                 AccountsActivity.importXmlFileFromIntent(this, data, null);
@@ -322,7 +322,7 @@ public boolean onMenuItemClick(MenuItem item) {
         BooksDbAdapter booksDbAdapter = BooksDbAdapter.getInstance();
         String bookUID = booksDbAdapter.getUID(id);
         if (!bookUID.equals(booksDbAdapter.getActiveBookUID())){
-            ((GnuCashApplication) getApplication()).loadBook(bookUID);
+            GnuCashApplication.loadBook(bookUID);
             finish();
         }
         AccountsActivity.start(GnuCashApplication.getAppContext());

From 1b4ce12e0dc6b5beeac56b77717899a383030752 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 9 Aug 2016 18:12:27 +0200
Subject: [PATCH 102/121] Update version string for v2.1.0-beta2 release

---
 CONTRIBUTORS     | 1 +
 app/build.gradle | 2 +-
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/CONTRIBUTORS b/CONTRIBUTORS
index 2c70b48b..a2db1919 100644
--- a/CONTRIBUTORS
+++ b/CONTRIBUTORS
@@ -30,3 +30,4 @@ Spanti Nicola <rydroid_dev@yahoo.com>
 Jesse Shieh <jesse.shieh.pub@gmail.com>
 Terry Chung <terrywmc@gmail.com>
 Caesar Wirth <cjwirth@gmail.com>
+Alceu Rodrigues Neto <alceurneto@gmail.com>
diff --git a/app/build.gradle b/app/build.gradle
index d6bc5717..2ec111a7 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -7,7 +7,7 @@ apply plugin: 'io.fabric'
 def versionMajor = 2
 def versionMinor = 1
 def versionPatch = 0
-def versionBuild = 1
+def versionBuild = 2
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")

From 6849d6a608cb7b07b2a0ea43730e4fc1fa843b84 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sat, 13 Aug 2016 00:29:23 +0200
Subject: [PATCH 103/121] Execute scheduled actions for all books in the app so
 all transactions in the books are always up-to-date - fixes #538

Execute scheduled actions service based on the elapsed time since device boot rather than wall clock time. This is more efficient
Change the Service so that the wakelock is always released, regardless of whether the service completed successfully or not - related to #535
Recreate SchedulerService on db upgrade (to schema version13)

Details:
----------
It does not matter if the book is the currently active one or not, it's scheduled transactions will be executed
For this, it is necessary that the SchedulerService use different database adapter instances for each book which it checks.
In turn, it is required to change the db adapters implementation so that none of them use the default adapter instances internally. The default instances always point to the current book, which is not desirable. Every database adapter should only have side-effects on the database on which it was opened.
---
 .../android/test/ui/TransactionsActivityTest.java  |  3 +-
 .../gnucash/android/app/GnuCashApplication.java    | 19 ++++--
 .../org/gnucash/android/db/MigrationHelper.java    | 10 +++
 .../android/db/adapter/AccountsDbAdapter.java      | 44 ++++++++++--
 .../gnucash/android/db/adapter/BooksDbAdapter.java |  2 +-
 .../android/db/adapter/BudgetsDbAdapter.java       |  2 +-
 .../android/db/adapter/DatabaseAdapter.java        | 19 +++++-
 .../db/adapter/ScheduledActionDbAdapter.java       |  2 +-
 .../android/db/adapter/SplitsDbAdapter.java        |  2 +-
 .../android/db/adapter/TransactionsDbAdapter.java  | 46 ++-----------
 .../gnucash/android/export/ExportAsyncTask.java    | 13 ++--
 .../org/gnucash/android/model/ScheduledAction.java |  1 -
 .../gnucash/android/service/SchedulerService.java  | 78 +++++++++++++---------
 .../android/ui/export/ExportFormFragment.java      |  2 +-
 .../transaction/dialog/BulkMoveDialogFragment.java |  5 +-
 15 files changed, 152 insertions(+), 96 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 2766da8e..36d5fd7b 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -561,8 +561,7 @@ public void testDeleteTransaction(){
 		onView(withId(R.id.options_menu)).perform(click());
 		onView(withText(R.string.menu_delete)).perform(click());
 
-		long id = mAccountsDbAdapter.getID(TRANSACTIONS_ACCOUNT_UID);
-		assertThat(0).isEqualTo(mTransactionsDbAdapter.getTransactionsCount(id));
+		assertThat(0).isEqualTo(mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID));
 	}
 
 	@Test
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 3f5b228d..13c976b0 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -25,6 +25,7 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.graphics.Color;
 import android.os.Build;
+import android.os.SystemClock;
 import android.support.annotation.NonNull;
 import android.support.v7.preference.PreferenceManager;
 import android.util.Log;
@@ -217,6 +218,14 @@ public static void loadBook(@NonNull String bookUID){
     }
 
     /**
+     * Returns the currently active database in the application
+     * @return Currently active {@link SQLiteDatabase}
+     */
+    public static SQLiteDatabase getActiveDb(){
+        return mDbHelper.getWritableDatabase();
+    }
+
+    /**
      * Returns the application context
      * @return Application {@link Context} object
      */
@@ -329,16 +338,16 @@ public static Locale getDefaultLocale() {
     public static void startScheduledActionExecutionService(Context context){
         Intent alarmIntent = new Intent(context, SchedulerService.class);
         PendingIntent pendingIntent = PendingIntent.getService(context, 0, alarmIntent, PendingIntent.FLAG_NO_CREATE);
-        if (pendingIntent != null)
+
+        if (pendingIntent != null) //if service is already scheduled, just return
             return;
         else
             pendingIntent = PendingIntent.getService(context, 0, alarmIntent, 0);
 
         AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
-        alarmManager.setInexactRepeating(AlarmManager.RTC_WAKEUP,
-                System.currentTimeMillis() + AlarmManager.INTERVAL_DAY,
-                AlarmManager.INTERVAL_HALF_DAY,
-                pendingIntent);
+        alarmManager.setInexactRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP,
+                SystemClock.elapsedRealtime() + AlarmManager.INTERVAL_FIFTEEN_MINUTES,
+                AlarmManager.INTERVAL_HALF_DAY, pendingIntent);
 
         context.startService(alarmIntent); //run the service the first time
     }
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index f32c5145..0aa1358a 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -46,6 +46,7 @@
 import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Transaction;
+import org.gnucash.android.service.SchedulerService;
 import org.gnucash.android.util.PreferencesHelper;
 import org.gnucash.android.util.TimestampHelper;
 import org.xml.sax.InputSource;
@@ -1463,6 +1464,15 @@ static int upgradeDbToVersion13(SQLiteDatabase db){
                 .putBoolean(keyUseCompactView, useCompactTrnView)
                 .apply();
 
+        //cancel the existing pending intent so that the alarm can be rescheduled
+        Intent alarmIntent = new Intent(context, SchedulerService.class);
+        PendingIntent pendingIntent = PendingIntent.getService(context, 0, alarmIntent, PendingIntent.FLAG_NO_CREATE);
+        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
+        alarmManager.cancel(pendingIntent);
+        pendingIntent.cancel();
+
+        GnuCashApplication.startScheduledActionExecutionService(GnuCashApplication.getAppContext());
+
         return oldVersion;
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
index cd942a92..d37d85b8 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/AccountsDbAdapter.java
@@ -78,6 +78,11 @@
     private final TransactionsDbAdapter mTransactionsAdapter;
 
     /**
+     * Commodities database adapter for commodity manipulation
+     */
+    private final CommoditiesDbAdapter mCommoditiesDbAdapter;
+
+    /**
      * Overloaded constructor. Creates an adapter for an already open database
      * @param db SQliteDatabase instance
      */
@@ -98,6 +103,35 @@ public AccountsDbAdapter(SQLiteDatabase db, TransactionsDbAdapter transactionsDb
                 AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID
         });
         mTransactionsAdapter = transactionsDbAdapter;
+        mCommoditiesDbAdapter = new CommoditiesDbAdapter(db);
+    }
+
+    /**
+     * Convenience overloaded constructor. 
+     * This is used when an AccountsDbAdapter object is needed quickly. Otherwise, the other 
+     * constructor {@link #AccountsDbAdapter(SQLiteDatabase, TransactionsDbAdapter)}
+     * should be used whenever possible
+     * @param db Database to create an adapter for
+     */
+    public AccountsDbAdapter(SQLiteDatabase db){
+        super(db, AccountEntry.TABLE_NAME, new String[]{
+                AccountEntry.COLUMN_NAME         ,
+                AccountEntry.COLUMN_DESCRIPTION  ,
+                AccountEntry.COLUMN_TYPE         ,
+                AccountEntry.COLUMN_CURRENCY     ,
+                AccountEntry.COLUMN_COLOR_CODE   ,
+                AccountEntry.COLUMN_FAVORITE     ,
+                AccountEntry.COLUMN_FULL_NAME    ,
+                AccountEntry.COLUMN_PLACEHOLDER  ,
+                AccountEntry.COLUMN_CREATED_AT   ,
+                AccountEntry.COLUMN_HIDDEN       ,
+                AccountEntry.COLUMN_COMMODITY_UID,
+                AccountEntry.COLUMN_PARENT_ACCOUNT_UID,
+                AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID
+        });
+
+        mTransactionsAdapter = new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
+        mCommoditiesDbAdapter = new CommoditiesDbAdapter(db);
     }
 
     /**
@@ -407,7 +441,7 @@ private Account buildSimpleAccountInstance(Cursor c) {
         account.setParentUID(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_PARENT_ACCOUNT_UID)));
         account.setAccountType(AccountType.valueOf(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_TYPE))));
         Currency currency = Currency.getInstance(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_CURRENCY)));
-        account.setCommodity(CommoditiesDbAdapter.getInstance().getCommodity(currency.getCurrencyCode()));
+        account.setCommodity(mCommoditiesDbAdapter.getCommodity(currency.getCurrencyCode()));
         account.setPlaceHolderFlag(c.getInt(c.getColumnIndexOrThrow(AccountEntry.COLUMN_PLACEHOLDER)) == 1);
         account.setDefaultTransferAccountUID(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID)));
         String color = c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_COLOR_CODE));
@@ -552,7 +586,7 @@ public AccountType getAccountType(long accountId){
      */
     public String getOrCreateImbalanceAccountUID(Currency currency){
         String imbalanceAccountName = getImbalanceAccountName(currency);
-        Commodity commodity = CommoditiesDbAdapter.getInstance().getCommodity(currency.getCurrencyCode());
+        Commodity commodity = mCommoditiesDbAdapter.getCommodity(currency.getCurrencyCode());
         String uid = findAccountUidByFullName(imbalanceAccountName);
         if (uid == null){
             Account account = new Account(imbalanceAccountName, commodity);
@@ -755,7 +789,7 @@ public Money getAccountBalance(AccountType accountType, long startTimestamp, lon
         String currencyCode = GnuCashApplication.getDefaultCurrencyCode();
 
         Log.d(LOG_TAG, "all account list : " + accountUidList.size());
-        SplitsDbAdapter splitsDbAdapter = SplitsDbAdapter.getInstance();
+        SplitsDbAdapter splitsDbAdapter = mTransactionsAdapter.getSplitDbAdapter();
 
         return (startTimestamp == -1 && endTimestamp == -1)
                 ? splitsDbAdapter.computeSplitBalance(accountUidList, currencyCode, hasDebitNormalBalance)
@@ -788,7 +822,7 @@ private Money computeBalance(String accountUID, long startTimestamp, long endTim
         accountsList.add(0, accountUID);
 
         Log.d(LOG_TAG, "all account list : " + accountsList.size());
-        SplitsDbAdapter splitsDbAdapter = SplitsDbAdapter.getInstance();
+        SplitsDbAdapter splitsDbAdapter = mTransactionsAdapter.getSplitDbAdapter();
         return (startTimestamp == -1 && endTimestamp == -1)
                 ? splitsDbAdapter.computeSplitBalance(accountsList, currencyCode, hasDebitNormalBalance)
                 : splitsDbAdapter.computeSplitBalance(accountsList, currencyCode, hasDebitNormalBalance, startTimestamp, endTimestamp);
@@ -812,7 +846,7 @@ public Money getAccountsBalance(@NonNull  List<String> accountUIDList, long star
 
         boolean hasDebitNormalBalance = getAccountType(accountUIDList.get(0)).hasDebitNormalBalance();
 
-        SplitsDbAdapter splitsDbAdapter = SplitsDbAdapter.getInstance();
+        SplitsDbAdapter splitsDbAdapter = mTransactionsAdapter.getSplitDbAdapter();
         Money splitSum = (startTimestamp == -1 && endTimestamp == -1)
                 ? splitsDbAdapter.computeSplitBalance(accountUIDList, currencyCode, hasDebitNormalBalance)
                 : splitsDbAdapter.computeSplitBalance(accountUIDList, currencyCode, hasDebitNormalBalance, startTimestamp, endTimestamp);
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
index bc6116e7..75b763ca 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
@@ -100,7 +100,7 @@ public Book buildModelInstance(@NonNull Cursor cursor) {
      */
     public String setActive(@NonNull String bookUID){
         if (bookUID == null)
-            return BooksDbAdapter.getInstance().getActiveBookUID();
+            return getActiveBookUID();
 
         ContentValues contentValues = new ContentValues();
         contentValues.put(BookEntry.COLUMN_ACTIVE, 0);
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
index 86cc2c24..c0365d96 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BudgetsDbAdapter.java
@@ -186,6 +186,6 @@ public Money getAccountSum(String budgetUID, long periodStart, long periodEnd){
             accountUIDs.add(budgetAmount.getAccountUID());
         }
 
-        return AccountsDbAdapter.getInstance().getAccountsBalance(accountUIDs, periodStart, periodEnd);
+        return new AccountsDbAdapter(mDb).getAccountsBalance(accountUIDs, periodStart, periodEnd);
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index 8c24eb8e..5ebfd32b 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -721,7 +721,24 @@ public boolean deleteRecord(@NonNull String uid){
      * @throws IllegalArgumentException if either the {@code recordUID} or {@code columnName} do not exist in the database
      */
     public String getAttribute(@NonNull String recordUID, @NonNull String columnName){
-        Cursor cursor = mDb.query(mTableName,
+        return getAttribute(mTableName, recordUID, columnName);
+    }
+
+    /**
+     * Returns an attribute from a specific column in the database for a specific record and specific table.
+     * <p>The attribute is returned as a string which can then be converted to another type if
+     * the caller was expecting something other type </p>
+     * <p>This method is an override of {@link #getAttribute(String, String)} which allows to select a value from a
+     * different table than the one of current adapter instance
+     * </p>
+     * @param tableName Database table name. See {@link DatabaseSchema}
+     * @param recordUID GUID of the record
+     * @param columnName Name of the column to be retrieved
+     * @return String value of the column entry
+     * @throws IllegalArgumentException if either the {@code recordUID} or {@code columnName} do not exist in the database
+     */
+    protected String getAttribute(@NonNull String tableName, @NonNull String recordUID, @NonNull String columnName){
+        Cursor cursor = mDb.query(tableName,
                 new String[]{columnName},
                 AccountEntry.COLUMN_UID + " = ?",
                 new String[]{recordUID}, null, null, null);
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
index 329f4722..85daa8d2 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
@@ -104,7 +104,7 @@ public long bulkAddRecords(@NonNull List<ScheduledAction> scheduledActions, Upda
     public long updateRecurrenceAttributes(ScheduledAction scheduledAction){
         //since we are updating, first fetch the existing recurrence UID and set it to the object
         //so that it will be updated and not a new one created
-        RecurrenceDbAdapter recurrenceDbAdapter = RecurrenceDbAdapter.getInstance();
+        RecurrenceDbAdapter recurrenceDbAdapter = new RecurrenceDbAdapter(mDb);
         String recurrenceUID = recurrenceDbAdapter.getAttribute(scheduledAction.getUID(), ScheduledActionEntry.COLUMN_RECURRENCE_UID);
 
         Recurrence recurrence = scheduledAction.getRecurrence();
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
index 661b9fc6..9750504d 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/SplitsDbAdapter.java
@@ -131,7 +131,7 @@ public Split buildModelInstance(@NonNull final Cursor cursor){
         String reconcileState = cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_RECONCILE_STATE));
         String reconcileDate  = cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_RECONCILE_DATE));
 
-        String transactionCurrency = TransactionsDbAdapter.getInstance().getAttribute(transxUID, TransactionEntry.COLUMN_CURRENCY);
+        String transactionCurrency = getAttribute(TransactionEntry.TABLE_NAME, transxUID, TransactionEntry.COLUMN_CURRENCY);
         Money value = new Money(valueNum, valueDenom, transactionCurrency);
         String currencyCode = getAccountCurrencyCode(accountUID);
         Money quantity = new Money(quantityNum, quantityDenom, currencyCode);
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
index da9341b3..099373a2 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
@@ -58,6 +58,8 @@
 
     private final SplitsDbAdapter mSplitsDbAdapter;
 
+    private final CommoditiesDbAdapter mCommoditiesDbAdapter;
+
     /**
      * Overloaded constructor. Creates adapter for already open db
      * @param db SQlite db instance
@@ -75,6 +77,7 @@ public TransactionsDbAdapter(SQLiteDatabase db, SplitsDbAdapter splitsDbAdapter)
                 TransactionEntry.COLUMN_TEMPLATE
         });
         mSplitsDbAdapter = splitsDbAdapter;
+        mCommoditiesDbAdapter = new CommoditiesDbAdapter(db);
     }
 
     /**
@@ -102,7 +105,7 @@ public void addRecord(@NonNull Transaction transaction, UpdateMethod updateMetho
         try {
             Split imbalanceSplit = transaction.createAutoBalanceSplit();
             if (imbalanceSplit != null){
-                String imbalanceAccountUID = AccountsDbAdapter.getInstance().getOrCreateImbalanceAccountUID(transaction.getCurrency());
+                String imbalanceAccountUID = new AccountsDbAdapter(mDb, this).getOrCreateImbalanceAccountUID(transaction.getCurrency());
                 imbalanceSplit.setAccountUID(imbalanceAccountUID);
             }
             super.addRecord(transaction, updateMethod);
@@ -183,7 +186,7 @@ public long bulkAddRecords(@NonNull List<Transaction> transactionList, UpdateMet
 
         Commodity commodity = transaction.getCommodity();
         if (commodity == null)
-            commodity = CommoditiesDbAdapter.getInstance().getCommodity(transaction.getCurrencyCode());
+            commodity = mCommoditiesDbAdapter.getCommodity(transaction.getCurrencyCode());
 
         stmt.bindString(6, commodity.getUID());
         stmt.bindString(7, TimestampHelper.getUtcStringFromTimestamp(transaction.getCreatedTimestamp()));
@@ -290,17 +293,6 @@ public Cursor fetchAllScheduledTransactions(){
     }
 
 	/**
-	 * Returns a cursor to a set of all transactions for the account with ID <code>accountID</code>
-	 * or for which this account is the origin account in a double entry
-	 * @param accountID ID of the account whose transactions are to be retrieved
-	 * @return Cursor holding set of transactions for particular account
-	 */
-	public Cursor fetchAllTransactionsForAccount(long accountID){
-        String accountUID = AccountsDbAdapter.getInstance().getUID(accountID);
-		return fetchAllTransactionsForAccount(accountUID);
-	}
-	
-	/**
 	 * Returns list of all transactions for account with UID <code>accountUID</code>
 	 * @param accountUID UID of account whose transactions are to be retrieved
 	 * @return List of {@link Transaction}s for account with UID <code>accountUID</code>
@@ -416,7 +408,7 @@ public Transaction buildModelInstance(@NonNull final Cursor c){
 		transaction.setTemplate(c.getInt(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_TEMPLATE)) == 1);
         String currencyCode = c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_CURRENCY));
         transaction.setCurrencyCode(currencyCode);
-        transaction.setCommodity(CommoditiesDbAdapter.getInstance().getCommodity(currencyCode));
+        transaction.setCommodity(mCommoditiesDbAdapter.getCommodity(currencyCode));
         transaction.setScheduledActionUID(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_SCHEDX_ACTION_UID)));
         long transactionID = c.getLong(c.getColumnIndexOrThrow(TransactionEntry._ID));
         transaction.setSplits(mSplitsDbAdapter.getSplitsForTransaction(transactionID));
@@ -424,18 +416,6 @@ public Transaction buildModelInstance(@NonNull final Cursor c){
 		return transaction;
 	}
 
-	/**
-	 * Returns the currency code (ISO 4217) used by the account with id <code>accountId</code>
-	 * If you do not have the database record Id, you can call {@link #getID(String)}  instead.
-	 * @param accountId Database record id of the account 
-	 * @return Currency code of the account with Id <code>accountId</code>
-	 * @see #getAccountCurrencyCode(String)
-	 */
-	public String getAccountCurrencyCode(long accountId){
-		String accountUID = AccountsDbAdapter.getInstance().getUID(accountId);
-		return getAccountCurrencyCode(accountUID);
-	}
-
     /**
      * Returns the transaction balance for the transaction for the specified account.
      * <p>We consider only those splits which belong to this account</p>
@@ -468,20 +448,6 @@ public int moveTransaction(String transactionUID, String srcAccountUID, String d
         mSplitsDbAdapter.bulkAddRecords(splits, UpdateMethod.update);
         return splits.size();
 	}
-	
-	/**
-	 * Returns the number of transactions belonging to account with id <code>accountId</code>
-	 * @param accountId Long ID of account
-	 * @return Number of transactions assigned to account with id <code>accountId</code>
-	 */
-	public int getTransactionsCount(long accountId){
-		Cursor cursor = fetchAllTransactionsForAccount(accountId);
-        try {
-            return cursor.getCount();
-        } finally {
-            cursor.close();
-		}
-	}
 
     /**
      * Returns the number of transactions belonging to an account
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index 442f7d70..b701058c 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -24,6 +24,7 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.pm.ResolveInfo;
+import android.database.sqlite.SQLiteDatabase;
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Build;
@@ -58,6 +59,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ofx.OfxExporter;
 import org.gnucash.android.export.qif.QifExporter;
@@ -93,6 +95,8 @@
 
     private ProgressDialog mProgressDialog;
 
+    private SQLiteDatabase mDb;
+
     /**
      * Log tag
      */
@@ -108,8 +112,9 @@
 
     private Exporter mExporter;
 
-    public ExportAsyncTask(Context context){
+    public ExportAsyncTask(Context context, SQLiteDatabase db){
         this.mContext = context;
+        this.mDb = db;
     }
 
     @Override
@@ -440,11 +445,11 @@ private void backupAndDeleteTransactions(){
         GncXmlExporter.createBackup(); //create backup before deleting everything
         List<Transaction> openingBalances = new ArrayList<>();
         boolean preserveOpeningBalances = GnuCashApplication.shouldSaveOpeningBalances(false);
+
+        TransactionsDbAdapter transactionsDbAdapter = new TransactionsDbAdapter(mDb, new SplitsDbAdapter(mDb));
         if (preserveOpeningBalances) {
-            openingBalances = AccountsDbAdapter.getInstance().getAllOpeningBalanceTransactions();
+            openingBalances = new AccountsDbAdapter(mDb, transactionsDbAdapter).getAllOpeningBalanceTransactions();
         }
-
-        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
         transactionsDbAdapter.deleteAllNonTemplateTransactions();
 
         if (preserveOpeningBalances) {
diff --git a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
index 55dc5656..ad82ab1b 100644
--- a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
+++ b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
@@ -80,7 +80,6 @@
 
     /**
      * Flag for whether the scheduled transaction should be auto-created
-     * TODO: Add this flag to the database. At the moment we always treat it as true
      */
     private boolean mAutoCreate = true;
     private boolean mAutoNotify = false;
diff --git a/app/src/main/java/org/gnucash/android/service/SchedulerService.java b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
index 39172109..1ca2a54f 100644
--- a/app/src/main/java/org/gnucash/android/service/SchedulerService.java
+++ b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
@@ -19,23 +19,32 @@
 import android.app.IntentService;
 import android.content.ContentValues;
 import android.content.Intent;
+import android.database.sqlite.SQLiteDatabase;
 import android.os.PowerManager;
 import android.os.SystemClock;
+import android.text.format.DateFormat;
 import android.util.Log;
 
 import com.crashlytics.android.Crashlytics;
 
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
+import org.gnucash.android.db.adapter.RecurrenceDbAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.export.ExportAsyncTask;
 import org.gnucash.android.export.ExportParams;
+import org.gnucash.android.model.Book;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Transaction;
+import org.joda.time.format.DateTimeFormatter;
 
 import java.sql.Timestamp;
+import java.util.Date;
 import java.util.List;
 import java.util.concurrent.ExecutionException;
 
@@ -50,37 +59,46 @@
 
     public static final String LOG_TAG = "SchedulerService";
 
-    /**
-     * Wake lock for keeping the CPU on while export is in progress
-     */
-    PowerManager.WakeLock mWakeLock;
-
     public SchedulerService() {
         super(LOG_TAG);
     }
 
     @Override
-    public void onCreate() {
-        super.onCreate();
-        PowerManager powerManager = (PowerManager) getSystemService(POWER_SERVICE);
-        mWakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, LOG_TAG);
-        mWakeLock.acquire();
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        if (mWakeLock.isHeld())
-            mWakeLock.release(); //whenever this service is destroyed, release the lock
-    }
-
-    @Override
     protected void onHandleIntent(Intent intent) {
         Log.i(LOG_TAG, "Starting scheduled action service");
 
-        ScheduledActionDbAdapter scheduledActionDbAdapter = GnuCashApplication.getScheduledEventDbAdapter();
-        List<ScheduledAction> scheduledActions = scheduledActionDbAdapter.getAllEnabledScheduledActions();
+        PowerManager powerManager = (PowerManager) getSystemService(POWER_SERVICE);
+        PowerManager.WakeLock wakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, LOG_TAG);
+        wakeLock.acquire();
+
+        try {
+            BooksDbAdapter booksDbAdapter = BooksDbAdapter.getInstance();
+            List<Book> books = booksDbAdapter.getAllRecords();
+            for (Book book : books) {
+                DatabaseHelper dbHelper = new DatabaseHelper(GnuCashApplication.getAppContext(), book.getUID());
+                SQLiteDatabase db = dbHelper.getWritableDatabase();
+                RecurrenceDbAdapter recurrenceDbAdapter = new RecurrenceDbAdapter(db);
+                ScheduledActionDbAdapter scheduledActionDbAdapter = new ScheduledActionDbAdapter(db, recurrenceDbAdapter);
+
+                List<ScheduledAction> scheduledActions = scheduledActionDbAdapter.getAllEnabledScheduledActions();
+                Log.i(LOG_TAG, String.format("Processing %d total scheduled actions for Book: %s",
+                        scheduledActions.size(), book.getDisplayName()));
+                processScheduledActions(scheduledActions, db);
+            }
+
+            Log.i(LOG_TAG, "Completed service @ " + java.text.DateFormat.getDateTimeInstance().format(new Date()));
+
+        } finally { //release the lock either way
+            wakeLock.release();
+        }
+
+    }
 
+    /**
+     * Process scheduled actions and execute any pending actions
+     * @param scheduledActions List of scheduled actions
+     */
+    private void processScheduledActions(List<ScheduledAction> scheduledActions, SQLiteDatabase db) {
         for (ScheduledAction scheduledAction : scheduledActions) {
             long endTime    = scheduledAction.getEndTime();
             long now        = System.currentTimeMillis();
@@ -93,25 +111,23 @@ protected void onHandleIntent(Intent intent) {
                         && (nextRunTime <= now)  //one period has passed since last execution
                         && scheduledAction.getStartTime() <= now
                         && scheduledAction.isEnabled()) { //the start time has arrived
-                    executeScheduledEvent(scheduledAction);
+                    executeScheduledEvent(scheduledAction, db);
                 }
             } while (nextRunTime <= now && scheduledAction.getActionType() == ScheduledAction.ActionType.TRANSACTION);
         }
-
-        Log.i(LOG_TAG, "Completed service @ " + SystemClock.elapsedRealtime());
     }
 
     /**
      * Executes a scheduled event according to the specified parameters
      * @param scheduledAction ScheduledEvent to be executed
      */
-    private void executeScheduledEvent(ScheduledAction scheduledAction){
+    private void executeScheduledEvent(ScheduledAction scheduledAction, SQLiteDatabase db){
         Log.i(LOG_TAG, "Executing scheduled action: " + scheduledAction.toString());
         switch (scheduledAction.getActionType()){
             case TRANSACTION:
-                String eventUID = scheduledAction.getActionUID();
-                TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
-                Transaction trxnTemplate = transactionsDbAdapter.getRecord(eventUID);
+                String actionUID = scheduledAction.getActionUID();
+                TransactionsDbAdapter transactionsDbAdapter = new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
+                Transaction trxnTemplate = transactionsDbAdapter.getRecord(actionUID);
                 Transaction recurringTrxn = new Transaction(trxnTemplate, true);
 
                 //we may be executing scheduled action significantly after scheduled time (depending on when Android fires the alarm)
@@ -126,7 +142,7 @@ private void executeScheduledEvent(ScheduledAction scheduledAction){
                 ExportParams params = ExportParams.parseCsv(scheduledAction.getTag());
                 try {
                     //wait for async task to finish before we proceed (we are holding a wake lock)
-                    new ExportAsyncTask(GnuCashApplication.getAppContext()).execute(params).get();
+                    new ExportAsyncTask(GnuCashApplication.getAppContext(), db).execute(params).get();
                 } catch (InterruptedException | ExecutionException e) {
                     //TODO: Create special log for scheduler service
                     Crashlytics.logException(e);
@@ -142,7 +158,7 @@ private void executeScheduledEvent(ScheduledAction scheduledAction){
         ContentValues contentValues = new ContentValues();
         contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN, lastRun);
         contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT, executionCount);
-        ScheduledActionDbAdapter.getInstance().updateRecord(scheduledAction.getUID(), contentValues);
+        new ScheduledActionDbAdapter(db, new RecurrenceDbAdapter(db)).updateRecord(scheduledAction.getUID(), contentValues);
 
         scheduledAction.setLastRun(lastRun);
         scheduledAction.setExecutionCount(executionCount);
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 5ff63942..a5b8ee1c 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -274,7 +274,7 @@ private void startExport(){
 		exportParameters.setDeleteTransactionsAfterExport(mDeleteAllCheckBox.isChecked());
 
 		Log.i(TAG, "Commencing async export of transactions");
-		new ExportAsyncTask(getActivity()).execute(exportParameters);
+		new ExportAsyncTask(getActivity(), GnuCashApplication.getActiveDb()).execute(exportParameters);
 
 		if (mRecurrenceRule != null) {
 			ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
index 9771537f..b18c9e49 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/BulkMoveDialogFragment.java
@@ -154,13 +154,14 @@ public void onClick(View v) {
 				}
 
 				long dstAccountId = mDestinationAccountSpinner.getSelectedItemId();
+				String dstAccountUID = AccountsDbAdapter.getInstance().getUID(dstAccountId);
 				TransactionsDbAdapter trxnAdapter = TransactionsDbAdapter.getInstance();
-				if (!trxnAdapter.getAccountCurrencyCode(dstAccountId).equals(trxnAdapter.getAccountCurrencyCode(mOriginAccountUID))) {
+				if (!trxnAdapter.getAccountCurrencyCode(dstAccountUID).equals(trxnAdapter.getAccountCurrencyCode(mOriginAccountUID))) {
 					Toast.makeText(getActivity(), R.string.toast_incompatible_currency, Toast.LENGTH_LONG).show();
 					return;
 				}
 				String srcAccountUID = ((TransactionsActivity) getActivity()).getCurrentAccountUID();
-				String dstAccountUID = AccountsDbAdapter.getInstance().getUID(dstAccountId);
+
 				for (long trxnId : mTransactionIds) {
 					trxnAdapter.moveTransaction(trxnAdapter.getUID(trxnId), srcAccountUID, dstAccountUID);
 				}

From 893bd1a9cb89671fa312414d2d36a4ec04d5a1d1 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 15 Aug 2016 23:04:37 +0200
Subject: [PATCH 104/121] Improve reliability of scheduled actions -
 computation of when a scheduled action is due is now based on the execution
 count (and not the last runtime like before)

Last RunTime now stores the actual time when the scheduled action was executed, which is not necessarily when it was due
Add tests for scheduled actions service
Tapping a book in the BookManager should launch the book

Fix bug causing some scheduled actions to be executed in a loop forever inside the service - fixes #535
There was a bug in the computation of the nextRun time of scheduled actions.
This could lead to situations where the nextRun time remains negative and the service holds a wakelock forever.
---
 .../org/gnucash/android/test/ui/MultiBookTest.java |  11 +
 .../gnucash/android/app/GnuCashApplication.java    |  10 +-
 .../android/db/adapter/TransactionsDbAdapter.java  |   8 +-
 .../java/org/gnucash/android/model/Recurrence.java |   5 +-
 .../org/gnucash/android/model/ScheduledAction.java |  80 +++++-
 .../gnucash/android/service/SchedulerService.java  |  75 +++--
 .../android/ui/budget/BudgetDetailFragment.java    |   2 +-
 .../android/ui/settings/BookManagerFragment.java   |  10 +
 .../test/unit/model/ScheduledActionTest.java       |  41 +++
 .../unit/service/ScheduledActionServiceTest.java   | 303 +++++++++++++++++++++
 10 files changed, 498 insertions(+), 47 deletions(-)
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
index 3a964482..86e19576 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
@@ -71,6 +71,17 @@ public void shouldOpenBookManager(){
         Intents.intended(hasComponent(PreferenceActivity.class.getName()));
     }
 
+    public void testLoadBookFromBookManager(){
+        Book book = new Book();
+        book.setDisplayName("Launch Codes");
+        BooksDbAdapter.getInstance().addRecord(book);
+
+        shouldOpenBookManager();
+        onView(withText(book.getDisplayName())).perform(click());
+
+        assertThat(BooksDbAdapter.getInstance().getActiveBookUID()).isEqualTo(book.getUID());
+    }
+
     @Test
     public void creatingNewAccounts_shouldCreatedNewBook(){
         long booksCount = mBooksDbAdapter.getRecordsCount();
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 13c976b0..219b8c36 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -132,7 +132,7 @@ public void onCreate(){
 
         setDefaultCurrencyCode(getDefaultCurrencyCode());
 
-        if (BuildConfig.DEBUG)
+        if (BuildConfig.DEBUG && !isRoboUnitTest())
             setUpRemoteDebuggingFromChrome();
     }
 
@@ -242,6 +242,14 @@ public static boolean isCrashlyticsEnabled(){
     }
 
     /**
+     * Returns {@code true} if the app is being run by robolectric
+     * @return {@code true} if in unit testing, {@code false} otherwise
+     */
+    public static boolean isRoboUnitTest(){
+        return "robolectric".equals(Build.FINGERPRINT);
+    }
+
+    /**
      * Returns <code>true</code> if double entry is enabled in the app settings, <code>false</code> otherwise.
      * If the value is not set, the default value can be specified in the parameters.
      * @return <code>true</code> if double entry is enabled, <code>false</code> otherwise
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
index 099373a2..4facc734 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/TransactionsDbAdapter.java
@@ -356,7 +356,7 @@ public Cursor fetchTransactionsWithSplitsWithTransactionAccount(String [] column
     }
 
     /**
-     * Return number of transactions in the database which are non recurring
+     * Return number of transactions in the database (excluding templates)
      * @return Number of transactions
      */
     public long getRecordsCount() {
@@ -371,6 +371,12 @@ public long getRecordsCount() {
         }
     }
 
+    /**
+     * Returns the number of transactions in the database which fulfill the conditions
+     * @param where SQL WHERE clause without the "WHERE" itself
+     * @param whereArgs Arguments to substitute question marks for
+     * @return Number of records in the databases
+     */
     public long getRecordsCount(@Nullable String where, @Nullable String[] whereArgs) {
         Cursor cursor = mDb.query(true, TransactionEntry.TABLE_NAME + " , trans_extra_info ON "
                         + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_UID
diff --git a/app/src/main/java/org/gnucash/android/model/Recurrence.java b/app/src/main/java/org/gnucash/android/model/Recurrence.java
index 1446f0a5..79ee1b37 100644
--- a/app/src/main/java/org/gnucash/android/model/Recurrence.java
+++ b/app/src/main/java/org/gnucash/android/model/Recurrence.java
@@ -98,6 +98,7 @@ public void setPeriodStart(Timestamp periodStart) {
      * <p>The period is approximate because months do not all have the same number of days,
      * but that is assumed</p>
      * @return Milliseconds since Epoch representing the period
+     * @deprecated Do not use in new code. Uses fixed period values for months and years (which have variable units of time)
      */
     public long getPeriod(){
         long baseMillis = 0;
@@ -195,14 +196,16 @@ public int getDaysLeftInCurrentPeriod(){
     }
 
     /**
-     * Returns the number of periods from the start date of this occurence until the end of the
+     * Returns the number of periods from the start date of this recurrence until the end of the
      * interval multiplier specified in the {@link PeriodType}
+     * //fixme: Improve the documentation
      * @return Number of periods in this recurrence
      */
     public int getNumberOfPeriods(int numberOfPeriods) {
         LocalDate startDate = new LocalDate(mPeriodStart.getTime());
         LocalDate endDate;
         int interval = mPeriodType.getMultiplier();
+        //// TODO: 15.08.2016 Why do we add the number of periods. maybe rename method or param
         switch (mPeriodType){
 
             case DAY:
diff --git a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
index ad82ab1b..3fcbd03a 100644
--- a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
+++ b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
@@ -17,7 +17,9 @@
 
 import android.support.annotation.NonNull;
 
+import org.joda.time.DateTime;
 import org.joda.time.LocalDate;
+import org.joda.time.LocalDateTime;
 
 import java.sql.Timestamp;
 import java.text.DateFormat;
@@ -127,6 +129,7 @@ public void setActionUID(String actionUID) {
 
     /**
      * Returns the timestamp of the last execution of this scheduled action
+     * <p>This is not necessarily the time when the scheduled action was due, only when it was actually last executed.</p>
      * @return Timestamp in milliseconds since Epoch
      */
     public long getLastRunTime() {
@@ -134,31 +137,65 @@ public long getLastRunTime() {
     }
 
     /**
-     * Computes the next time that this scheduled action is supposed to be executed, taking the
-     * last execution time into account
+     * Returns the time when the last schedule in the sequence of planned executions was executed.
+     * This relies on the number of executions of the scheduled action
+     * <p>This is different from {@link #getLastRunTime()} which returns the date when the system last
+     * run the scheduled action.</p>
+     * @return Time of last schedule, or -1 if the scheduled action has never been run
+     */
+    public long getTimeOfLastSchedule(){
+        if (mExecutionCount == 0)
+            return  -1;
+
+        LocalDateTime startTime = LocalDateTime.fromDateFields(new Date(mStartDate));
+        int multiplier = mRecurrence.getPeriodType().getMultiplier();
+
+        int factor = (mExecutionCount-1) * multiplier;
+        switch (mRecurrence.getPeriodType()){
+            case DAY:
+                startTime = startTime.plusDays(factor);
+                break;
+            case WEEK:
+                startTime = startTime.plusWeeks(factor);
+                break;
+            case MONTH:
+                startTime = startTime.plusMonths(factor);
+                break;
+            case YEAR:
+                startTime = startTime.plusYears(factor);
+                break;
+        }
+
+        return startTime.toDate().getTime();
+    }
+
+    /**
+     * Computes the next time that this scheduled action is supposed to be executed
      * <p>This method does not consider the end time, or number of times it should be run.
      * It only considers when the next execution would theoretically be due</p>
      * @return Next run time in milliseconds
      */
-    public long computeNextRunTime(){
+    public long computeNextScheduledExecutionTime(){
         int multiplier = mRecurrence.getPeriodType().getMultiplier();
-        long time = mLastRun;
-        if (time == 0) {
-            time = mStartDate;
+        //this is the last planned time for the action to occur, not the last run time
+        long lastActionTime = getTimeOfLastSchedule(); //mStartDate + ((mExecutionCount-1)*getPeriod());
+        if (lastActionTime < 0){
+            return mStartDate;
         }
-        LocalDate localDate = LocalDate.fromDateFields(new Date(mLastRun));
+
+        LocalDateTime localDate = LocalDateTime.fromDateFields(new Date(lastActionTime));
         switch (mRecurrence.getPeriodType()) {
             case DAY:
-                localDate.plusDays(multiplier);
+                localDate = localDate.plusDays(multiplier);
                 break;
             case WEEK:
-                localDate.plusWeeks(multiplier);
+                localDate = localDate.plusWeeks(multiplier);
                 break;
             case MONTH:
-                localDate.plusMonths(multiplier);
+                localDate = localDate.plusMonths(multiplier);
                 break;
             case YEAR:
-                localDate.plusYears(multiplier);
+                localDate = localDate.plusYears(multiplier);
                 break;
         }
         return localDate.toDate().getTime();
@@ -173,8 +210,9 @@ public void setLastRun(long nextRun) {
     }
 
     /**
-     * Returns the period of this scheduled action
+     * Returns the period of this scheduled action in milliseconds.
      * @return Period in milliseconds since Epoch
+     * @deprecated Uses fixed values for time of months and years (which actually vary depending on number of days in month or leap year)
      */
     public long getPeriod() {
         return mRecurrence.getPeriod();
@@ -256,8 +294,8 @@ public void setEnabled(boolean enabled){
     }
 
     /**
-     * Returns the total number of occurences of this scheduled action.
-     * @return Total number of occurences of this action
+     * Returns the total number of planned occurrences of this scheduled action.
+     * @return Total number of planned occurrences of this action
      */
     public int getTotalFrequency(){
         return mTotalFrequency;
@@ -427,6 +465,20 @@ public Recurrence getRecurrence() {
     }
 
     /**
+     * Overloaded method for setting the recurrence of the scheduled action.
+     * <p>This method allows you to specify the periodicity and the ordinal of it. For example,
+     * a recurrence every fortnight would give parameters: {@link PeriodType#WEEK}, ordinal:2</p>
+     * @param periodType Periodicity of the scheduled action
+     * @param ordinal Ordinal of the periodicity. If unsure, specify 1
+     * @see #setRecurrence(Recurrence)
+     */
+    public void setRecurrence(PeriodType periodType, int ordinal){
+        periodType.setMultiplier(ordinal);
+        Recurrence recurrence = new Recurrence(periodType);
+        setRecurrence(recurrence);
+    }
+
+    /**
      * Sets the recurrence pattern of this scheduled action
      * <p>This also sets the start period of the recurrence object, if there is one</p>
      * @param recurrence {@link Recurrence} object
diff --git a/app/src/main/java/org/gnucash/android/service/SchedulerService.java b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
index 1ca2a54f..1d6e461e 100644
--- a/app/src/main/java/org/gnucash/android/service/SchedulerService.java
+++ b/app/src/main/java/org/gnucash/android/service/SchedulerService.java
@@ -21,8 +21,6 @@
 import android.content.Intent;
 import android.database.sqlite.SQLiteDatabase;
 import android.os.PowerManager;
-import android.os.SystemClock;
-import android.text.format.DateFormat;
 import android.util.Log;
 
 import com.crashlytics.android.Crashlytics;
@@ -41,9 +39,8 @@
 import org.gnucash.android.model.Book;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Transaction;
-import org.joda.time.format.DateTimeFormatter;
 
-import java.sql.Timestamp;
+import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
 import java.util.concurrent.ExecutionException;
@@ -98,22 +95,21 @@ protected void onHandleIntent(Intent intent) {
      * Process scheduled actions and execute any pending actions
      * @param scheduledActions List of scheduled actions
      */
-    private void processScheduledActions(List<ScheduledAction> scheduledActions, SQLiteDatabase db) {
+    //made public static for testing. Do not call these methods directly
+    public static void processScheduledActions(List<ScheduledAction> scheduledActions, SQLiteDatabase db) {
         for (ScheduledAction scheduledAction : scheduledActions) {
-            long endTime    = scheduledAction.getEndTime();
+
             long now        = System.currentTimeMillis();
-            long nextRunTime;
-            do { //loop so that we can add transactions which were missed while device was off
-                nextRunTime = scheduledAction.computeNextRunTime();
-                if (((endTime > 0 && now < endTime) //if and endTime is set and we did not reach it yet
-                        || (scheduledAction.getExecutionCount() < scheduledAction.getTotalFrequency()) //or the number of scheduled runs
-                        || (endTime == 0 && scheduledAction.getTotalFrequency() == 0)) //or the action is to run forever
-                        && (nextRunTime <= now)  //one period has passed since last execution
-                        && scheduledAction.getStartTime() <= now
-                        && scheduledAction.isEnabled()) { //the start time has arrived
-                    executeScheduledEvent(scheduledAction, db);
-                }
-            } while (nextRunTime <= now && scheduledAction.getActionType() == ScheduledAction.ActionType.TRANSACTION);
+            int totalPlannedExecutions = scheduledAction.getTotalFrequency();
+            int executionCount = scheduledAction.getExecutionCount();
+
+            if (scheduledAction.getStartTime() > now    //if schedule begins in the future
+                    || !scheduledAction.isEnabled()     // of if schedule is disabled
+                    || (totalPlannedExecutions > 0 && executionCount >= totalPlannedExecutions)) { //limit was set and we reached or exceeded it
+                Log.i(LOG_TAG, "Skipping scheduled action: " + scheduledAction.toString());
+                continue;
+            }
+            executeScheduledEvent(scheduledAction, db);
         }
     }
 
@@ -121,21 +117,41 @@ private void processScheduledActions(List<ScheduledAction> scheduledActions, SQL
      * Executes a scheduled event according to the specified parameters
      * @param scheduledAction ScheduledEvent to be executed
      */
-    private void executeScheduledEvent(ScheduledAction scheduledAction, SQLiteDatabase db){
+    //made public static for testing. Do not call directly
+    public static void executeScheduledEvent(ScheduledAction scheduledAction, SQLiteDatabase db){
         Log.i(LOG_TAG, "Executing scheduled action: " + scheduledAction.toString());
+        int executionCount = scheduledAction.getExecutionCount();
+
         switch (scheduledAction.getActionType()){
             case TRANSACTION:
                 String actionUID = scheduledAction.getActionUID();
                 TransactionsDbAdapter transactionsDbAdapter = new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
                 Transaction trxnTemplate = transactionsDbAdapter.getRecord(actionUID);
-                Transaction recurringTrxn = new Transaction(trxnTemplate, true);
+
+                long now = System.currentTimeMillis();
+                //if there is an end time in the past, we execute all schedules up to the end time.
+                //if the end time is in the future, we execute all schedules until now (current time)
+                //if there is no end time, we execute all schedules until now
+                long endTime = scheduledAction.getEndTime() > 0 ? Math.min(scheduledAction.getEndTime(), now) : now;
+                int totalPlannedExecutions = scheduledAction.getTotalFrequency();
+                List<Transaction> transactions = new ArrayList<>();
 
                 //we may be executing scheduled action significantly after scheduled time (depending on when Android fires the alarm)
                 //so compute the actual transaction time from pre-known values
-                long transactionTime = scheduledAction.computeNextRunTime(); //default
-                recurringTrxn.setTime(transactionTime);
-                recurringTrxn.setCreatedTimestamp(new Timestamp(transactionTime));
-                transactionsDbAdapter.addRecord(recurringTrxn, DatabaseAdapter.UpdateMethod.insert);
+                long transactionTime = scheduledAction.computeNextScheduledExecutionTime();
+                while (transactionTime <= endTime) {
+                    Transaction recurringTrxn = new Transaction(trxnTemplate, true);
+                    recurringTrxn.setTime(transactionTime);
+                    transactions.add(recurringTrxn);
+                    recurringTrxn.setScheduledActionUID(scheduledAction.getUID());
+                    scheduledAction.setExecutionCount(++executionCount);
+
+                    if (totalPlannedExecutions > 0 && executionCount >= totalPlannedExecutions)
+                        break; //if we hit the total planned executions set, then abort
+                    transactionTime = scheduledAction.computeNextScheduledExecutionTime();
+                }
+
+                transactionsDbAdapter.bulkAddRecords(transactions, DatabaseAdapter.UpdateMethod.insert);
                 break;
 
             case BACKUP:
@@ -143,8 +159,8 @@ private void executeScheduledEvent(ScheduledAction scheduledAction, SQLiteDataba
                 try {
                     //wait for async task to finish before we proceed (we are holding a wake lock)
                     new ExportAsyncTask(GnuCashApplication.getAppContext(), db).execute(params).get();
+                    scheduledAction.setExecutionCount(++executionCount);
                 } catch (InterruptedException | ExecutionException e) {
-                    //TODO: Create special log for scheduler service
                     Crashlytics.logException(e);
                     Log.e(LOG_TAG, e.getMessage());
                     return; //return immediately, do not update last run time of event
@@ -152,15 +168,16 @@ private void executeScheduledEvent(ScheduledAction scheduledAction, SQLiteDataba
                 break;
         }
 
-        long lastRun = scheduledAction.computeNextRunTime();
-        int executionCount = scheduledAction.getExecutionCount() + 1;
+        //the last run time is computed instead of just using "now" so that if the more than
+        // one period has been skipped, all intermediate transactions can be created
+
         //update the last run time and execution count
         ContentValues contentValues = new ContentValues();
-        contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN, lastRun);
+        contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN, System.currentTimeMillis());
         contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT, executionCount);
         new ScheduledActionDbAdapter(db, new RecurrenceDbAdapter(db)).updateRecord(scheduledAction.getUID(), contentValues);
 
-        scheduledAction.setLastRun(lastRun);
+        //set the values in the object because they will be checked for the next iteration in the calling loop
         scheduledAction.setExecutionCount(executionCount);
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
index 195476f2..730eb993 100644
--- a/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/budget/BudgetDetailFragment.java
@@ -254,7 +254,7 @@ public void generateChartData(BarChart barChart, BudgetAmount budgetAmount) {
             //todo: refactor getNumberOfPeriods into budget
             int budgetPeriods = (int) mBudget.getNumberOfPeriods();
             budgetPeriods = budgetPeriods == 0 ? 12 : budgetPeriods;
-            int periods = mBudget.getRecurrence().getNumberOfPeriods(budgetPeriods);
+            int periods = mBudget.getRecurrence().getNumberOfPeriods(budgetPeriods); //// FIXME: 15.08.2016 why do we need number of periods
 
             for (int periodNum = 1; periodNum <= periods; periodNum++) {
                 BigDecimal amount = accountsDbAdapter.getAccountBalance(budgetAmount.getAccountUID(),
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
index d0a11d0e..510d259c 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
@@ -219,6 +219,16 @@ public void onClick(DialogInterface dialog, int which) {
                     }
                 });
             }
+
+            view.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    //do nothing if the active book is tapped
+                    if (!BooksDbAdapter.getInstance().getActiveBookUID().equals(bookUID)) {
+                        GnuCashApplication.loadBook(bookUID);
+                    }
+                }
+            });
         }
     }
 
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java
index 3c298cee..c1a0b927 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/ScheduledActionTest.java
@@ -19,6 +19,7 @@
 import org.gnucash.android.model.PeriodType;
 import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
+import org.joda.time.DateTime;
 import org.junit.Test;
 
 import java.sql.Timestamp;
@@ -89,6 +90,46 @@ public void settingRecurrence_shouldSetEndTime(){
         assertThat(scheduledAction.getEndTime()).isEqualTo(endTime);
     }
 
+    /**
+     * Checks that scheduled actions accurately compute the next run time based on the start date
+     * and the last time the action was run
+     */
+    @Test
+    public void testComputingNextScheduledExecution(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        PeriodType periodType = PeriodType.MONTH;
+        periodType.setMultiplier(2);
+
+        Recurrence recurrence = new Recurrence(periodType);
+        DateTime startDate = new DateTime(2015, 8, 15, 12, 0);
+        recurrence.setPeriodStart(new Timestamp(startDate.getMillis()));
+        scheduledAction.setRecurrence(recurrence);
+
+        assertThat(scheduledAction.computeNextScheduledExecutionTime()).isEqualTo(startDate.getMillis());
+
+        scheduledAction.setExecutionCount(3);
+        DateTime expectedTime = new DateTime(2016, 2, 15, 12, 0);
+        assertThat(scheduledAction.computeNextScheduledExecutionTime()).isEqualTo(expectedTime.getMillis());
+    }
+
+    @Test
+    public void testComputingTimeOfLastSchedule(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        PeriodType periodType = PeriodType.WEEK;
+        periodType.setMultiplier(2);
+        Recurrence recurrence = new Recurrence(periodType);
+        scheduledAction.setRecurrence(recurrence);
+        DateTime startDate = new DateTime(2016, 6, 6, 9, 0);
+        scheduledAction.setStartTime(startDate.getMillis());
+
+        assertThat(scheduledAction.getTimeOfLastSchedule()).isEqualTo(-1L);
+
+        scheduledAction.setExecutionCount(3);
+        DateTime expectedDate = new DateTime(2016, 7, 4, 9, 0);
+        assertThat(scheduledAction.getTimeOfLastSchedule()).isEqualTo(expectedDate.getMillis());
+
+    }
+
     private long getTimeInMillis(int year, int month, int day) {
         Calendar calendar = Calendar.getInstance();
         calendar.set(year, month, day);
diff --git a/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
new file mode 100644
index 00000000..722fb26c
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
@@ -0,0 +1,303 @@
+/*
+ * Copyright (c) 2016 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.test.unit.service;
+
+import android.database.sqlite.SQLiteDatabase;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
+import org.gnucash.android.db.adapter.DatabaseAdapter;
+import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
+import org.gnucash.android.export.ExportFormat;
+import org.gnucash.android.export.ExportParams;
+import org.gnucash.android.export.Exporter;
+import org.gnucash.android.importer.GncXmlImporter;
+import org.gnucash.android.model.Account;
+import org.gnucash.android.model.Commodity;
+import org.gnucash.android.model.Money;
+import org.gnucash.android.model.PeriodType;
+import org.gnucash.android.model.Recurrence;
+import org.gnucash.android.model.ScheduledAction;
+import org.gnucash.android.model.Split;
+import org.gnucash.android.model.Transaction;
+import org.gnucash.android.service.SchedulerService;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
+import org.joda.time.DateTime;
+import org.joda.time.Weeks;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.BeforeClass;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+import org.xml.sax.SAXException;
+
+import java.io.File;
+import java.io.IOException;
+import java.math.BigDecimal;
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.xml.parsers.ParserConfigurationException;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * Test the the scheduled actions service runs as expected
+ */
+@RunWith(GnucashTestRunner.class) //package is required so that resources can be found in dev mode
+@Config(constants = BuildConfig.class, sdk = 21, packageName = "org.gnucash.android",
+        shadows = {ShadowCrashlytics.class, ShadowUserVoice.class})
+public class ScheduledActionServiceTest {
+
+    private static String mActionUID;
+    private SQLiteDatabase mDb;
+
+    private static Account mBaseAccount = new Account("Base Account");
+    private static Account mTransferAccount = new Account("Transfer Account");
+
+    private static Transaction mTemplateTransaction;
+
+    public void createAccounts(){
+        try {
+            String bookUID = GncXmlImporter.parse(GnuCashApplication.getAppContext().getResources().openRawResource(R.raw.default_accounts));
+            GnuCashApplication.loadBook(bookUID);
+            //initAdapters(bookUID);
+        } catch (ParserConfigurationException | SAXException | IOException e) {
+            e.printStackTrace();
+            throw new RuntimeException("Could not create default accounts");
+        }
+    }
+
+    @BeforeClass
+    public static void makeAccounts(){
+        mTemplateTransaction = new Transaction("Recurring Transaction");
+        mTemplateTransaction.setTemplate(true);
+
+        mActionUID = mTemplateTransaction.getUID();
+    }
+
+    @Before
+    public void setUp(){
+        mDb = GnuCashApplication.getActiveDb();
+        new CommoditiesDbAdapter(mDb); //initializes commodity static values
+        mBaseAccount.setCommodity(Commodity.DEFAULT_COMMODITY);
+        mTransferAccount.setCommodity(Commodity.DEFAULT_COMMODITY);
+        mTemplateTransaction.setCommodity(Commodity.DEFAULT_COMMODITY);
+
+        Split split1 = new Split(new Money(BigDecimal.TEN, Commodity.DEFAULT_COMMODITY), mBaseAccount.getUID());
+        Split split2 = split1.createPair(mTransferAccount.getUID());
+
+        mTemplateTransaction.addSplit(split1);
+        mTemplateTransaction.addSplit(split2);
+
+        AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
+        accountsDbAdapter.addRecord(mBaseAccount);
+        accountsDbAdapter.addRecord(mTransferAccount);
+
+        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        transactionsDbAdapter.addRecord(mTemplateTransaction, DatabaseAdapter.UpdateMethod.insert);
+
+    }
+
+    @Test
+    public void disabledScheduledActions_shouldNotRun(){
+        Recurrence recurrence = new Recurrence(PeriodType.WEEK);
+        ScheduledAction scheduledAction1 = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        scheduledAction1.setStartTime(System.currentTimeMillis() - 100000);
+        scheduledAction1.setEnabled(false);
+        scheduledAction1.setActionUID(mActionUID);
+        scheduledAction1.setRecurrence(recurrence);
+
+        List<ScheduledAction> actions = new ArrayList<>();
+        actions.add(scheduledAction1);
+
+        TransactionsDbAdapter trxnAdapter = TransactionsDbAdapter.getInstance();
+
+        assertThat(trxnAdapter.getRecordsCount()).isZero();
+        SchedulerService.processScheduledActions(actions, mDb);
+        assertThat(trxnAdapter.getRecordsCount()).isZero();
+    }
+
+    @Test
+    public void futureScheduledActions_shouldNotRun(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        scheduledAction.setStartTime(System.currentTimeMillis() + 100000);
+        scheduledAction.setEnabled(true);
+        scheduledAction.setRecurrence(new Recurrence(PeriodType.MONTH));
+        scheduledAction.setActionUID(mActionUID);
+
+        List<ScheduledAction> actions = new ArrayList<>();
+        actions.add(scheduledAction);
+
+        TransactionsDbAdapter trxnAdapter = TransactionsDbAdapter.getInstance();
+
+        assertThat(trxnAdapter.getRecordsCount()).isZero();
+        SchedulerService.processScheduledActions(actions, mDb);
+        assertThat(trxnAdapter.getRecordsCount()).isZero();
+    }
+
+    /**
+     * Transactions whose execution count has reached or exceeded the planned execution count
+     */
+    @Test
+    public void exceededExecutionCounts_shouldNotRun(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        scheduledAction.setActionUID(mActionUID);
+        scheduledAction.setStartTime(new DateTime(2015, 5, 31, 14, 0).getMillis());
+        scheduledAction.setEnabled(true);
+        scheduledAction.setRecurrence(new Recurrence(PeriodType.WEEK));
+        scheduledAction.setTotalFrequency(4);
+        scheduledAction.setExecutionCount(4);
+
+        List<ScheduledAction> actions = new ArrayList<>();
+        actions.add(scheduledAction);
+
+        TransactionsDbAdapter trxnAdapter = TransactionsDbAdapter.getInstance();
+        assertThat(trxnAdapter.getRecordsCount()).isZero();
+        SchedulerService.processScheduledActions(actions, mDb);
+        assertThat(trxnAdapter.getRecordsCount()).isZero();
+    }
+
+    /**
+     * Test that normal scheduled transactions would lead to new transaction entries
+     */
+    @Test
+    public void missedScheduledTransactions_shouldBeGenerated(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        DateTime startTime = new DateTime(2016, 6, 6, 9, 0);
+        scheduledAction.setStartTime(startTime.getMillis());
+        scheduledAction.setActionUID(mActionUID);
+
+        scheduledAction.setRecurrence(PeriodType.WEEK, 2);
+        ScheduledActionDbAdapter.getInstance().addRecord(scheduledAction, DatabaseAdapter.UpdateMethod.insert);
+
+        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        assertThat(transactionsDbAdapter.getRecordsCount()).isZero();
+
+        List<ScheduledAction> actions = new ArrayList<>();
+        actions.add(scheduledAction);
+        SchedulerService.processScheduledActions(actions, mDb);
+
+        int weeks = Weeks.weeksBetween(startTime, new DateTime(2016, 8, 29, 10, 0)).getWeeks();
+        int expectedTransactionCount = weeks/2;
+
+        assertThat(transactionsDbAdapter.getRecordsCount()).isEqualTo(expectedTransactionCount);
+    }
+
+    public void endTimeInTheFuture_shouldExecuteOnlyUntilPresent(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        DateTime startTime = new DateTime(2016, 6, 6, 9, 0);
+        scheduledAction.setStartTime(startTime.getMillis());
+        scheduledAction.setActionUID(mActionUID);
+
+        scheduledAction.setRecurrence(PeriodType.WEEK, 2);
+        scheduledAction.setEndTime(new DateTime(2017, 8, 16, 9, 0).getMillis());
+        ScheduledActionDbAdapter.getInstance().addRecord(scheduledAction, DatabaseAdapter.UpdateMethod.insert);
+
+        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        assertThat(transactionsDbAdapter.getRecordsCount()).isZero();
+
+        List<ScheduledAction> actions = new ArrayList<>();
+        actions.add(scheduledAction);
+        SchedulerService.processScheduledActions(actions, mDb);
+
+        int weeks = Weeks.weeksBetween(startTime, new DateTime(2016, 8, 29, 10, 0)).getWeeks();
+        int expectedTransactionCount = weeks/2; //multiplier from the PeriodType
+
+        assertThat(transactionsDbAdapter.getRecordsCount()).isEqualTo(expectedTransactionCount);
+    }
+
+    /**
+     * Test that the end time for scheduled actions should be respected
+     */
+    @Test
+    public void scheduledActionsWithEndTimeInPast_shouldBeExecuted(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        DateTime startTime = new DateTime(2016, 6, 6, 9, 0);
+        scheduledAction.setStartTime(startTime.getMillis());
+        scheduledAction.setActionUID(mActionUID);
+
+        scheduledAction.setRecurrence(PeriodType.WEEK, 2);
+        scheduledAction.setEndTime(new DateTime(2016, 8, 8, 9, 0).getMillis());
+        ScheduledActionDbAdapter.getInstance().addRecord(scheduledAction, DatabaseAdapter.UpdateMethod.insert);
+
+        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        assertThat(transactionsDbAdapter.getRecordsCount()).isZero();
+
+        List<ScheduledAction> actions = new ArrayList<>();
+        actions.add(scheduledAction);
+        SchedulerService.processScheduledActions(actions, mDb);
+
+        int expectedCount = 5;
+        assertThat(scheduledAction.getExecutionCount()).isEqualTo(expectedCount);
+        assertThat(transactionsDbAdapter.getRecordsCount()).isEqualTo(expectedCount); //would be 6 if the end time is not respected
+    }
+
+    /**
+     * Test that only scheduled actions with action UIDs are processed
+     */
+    @Test(expected = IllegalArgumentException.class)
+    public void recurringTransactions_shouldHaveScheduledActionUID(){
+        ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
+        DateTime startTime = new DateTime(2016, 7, 4, 12 ,0);
+        scheduledAction.setStartTime(startTime.getMillis());
+        scheduledAction.setRecurrence(PeriodType.MONTH, 1);
+
+        TransactionsDbAdapter transactionsDbAdapter = TransactionsDbAdapter.getInstance();
+        assertThat(transactionsDbAdapter.getRecordsCount()).isZero();
+
+        List<ScheduledAction> actions = new ArrayList<>();
+        actions.add(scheduledAction);
+        SchedulerService.processScheduledActions(actions, mDb);
+    }
+
+    //// FIXME: 16.08.2016 Cannot find the file after export. But the export task is called and run
+    public void scheduledBackups_shouldRunOnlyOnce(){
+        ScheduledAction scheduledBackup = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
+        scheduledBackup.setStartTime(new DateTime(2016, 2, 17, 17, 0).getMillis());
+        scheduledBackup.setRecurrence(PeriodType.MONTH, 1);
+        scheduledBackup.setExecutionCount(2);
+
+        ExportParams backupParams = new ExportParams(ExportFormat.XML);
+        backupParams.setExportTarget(ExportParams.ExportTarget.SD_CARD);
+        scheduledBackup.setTag(backupParams.toCsv());
+
+        File backupFolder = new File(Exporter.getBackupFolderPath());
+        assertThat(backupFolder).exists();
+        assertThat(backupFolder.listFiles()).isEmpty();
+
+        List<ScheduledAction> actions = new ArrayList<>();
+        actions.add(scheduledBackup);
+        SchedulerService.processScheduledActions(actions, mDb);
+
+        File[] backupFiles = backupFolder.listFiles();
+        assertThat(backupFiles).hasSize(1);
+        assertThat(backupFiles[0]).hasExtension("gnca");
+    }
+
+
+    @After
+    public void tearDown(){
+        TransactionsDbAdapter.getInstance().deleteAllRecords();
+    }
+}

From e83dc930829f4b0d32b01bd9ddf953335ff08b30 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 16 Aug 2016 15:18:17 +0200
Subject: [PATCH 105/121] Code refactoring and cleanup

Renamed SchedulerService to ScheduledActionService
---
 app/src/main/AndroidManifest.xml                     |  2 +-
 .../org/gnucash/android/app/GnuCashApplication.java  |  7 ++-----
 .../java/org/gnucash/android/db/MigrationHelper.java |  4 ++--
 .../android/db/adapter/ScheduledActionDbAdapter.java |  6 +++---
 .../org/gnucash/android/export/ExportAsyncTask.java  |  1 -
 .../org/gnucash/android/export/ofx/OfxExporter.java  |  6 +++++-
 .../org/gnucash/android/importer/GncXmlHandler.java  |  4 ++--
 .../org/gnucash/android/model/ScheduledAction.java   | 10 +++++-----
 ...dulerService.java => ScheduledActionService.java} | 10 +++++-----
 .../test/unit/db/ScheduledActionDbAdapterTest.java   |  2 +-
 .../unit/service/ScheduledActionServiceTest.java     | 20 ++++++++++----------
 11 files changed, 36 insertions(+), 36 deletions(-)
 rename app/src/main/java/org/gnucash/android/service/{SchedulerService.java => ScheduledActionService.java} (97%)

diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 18d3dead..45ec83f6 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -125,7 +125,7 @@
             android:enabled="true"
             android:exported="false"
             android:label="Dropbox Sync" />
-        <service android:name=".service.SchedulerService"
+        <service android:name=".service.ScheduledActionService"
             android:exported="false"
             android:label="GnuCash Android Scheduler Execution Service"/>
         <receiver android:name=".receivers.TransactionRecorder"
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 219b8c36..325ceb04 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -52,7 +52,7 @@
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.service.SchedulerService;
+import org.gnucash.android.service.ScheduledActionService;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.settings.PreferenceActivity;
 
@@ -127,9 +127,6 @@ public void onCreate(){
         mBooksDbAdapter = new BooksDbAdapter(bookDbHelper.getWritableDatabase());
 
         initDatabaseAdapters();
-
-        //TODO: migrate preferences from defaultShared to book
-
         setDefaultCurrencyCode(getDefaultCurrencyCode());
 
         if (BuildConfig.DEBUG && !isRoboUnitTest())
@@ -344,7 +341,7 @@ public static Locale getDefaultLocale() {
      * @param context Application context
      */
     public static void startScheduledActionExecutionService(Context context){
-        Intent alarmIntent = new Intent(context, SchedulerService.class);
+        Intent alarmIntent = new Intent(context, ScheduledActionService.class);
         PendingIntent pendingIntent = PendingIntent.getService(context, 0, alarmIntent, PendingIntent.FLAG_NO_CREATE);
 
         if (pendingIntent != null) //if service is already scheduled, just return
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index 0aa1358a..9bbc01f6 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -46,7 +46,7 @@
 import org.gnucash.android.model.Recurrence;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Transaction;
-import org.gnucash.android.service.SchedulerService;
+import org.gnucash.android.service.ScheduledActionService;
 import org.gnucash.android.util.PreferencesHelper;
 import org.gnucash.android.util.TimestampHelper;
 import org.xml.sax.InputSource;
@@ -1465,7 +1465,7 @@ static int upgradeDbToVersion13(SQLiteDatabase db){
                 .apply();
 
         //cancel the existing pending intent so that the alarm can be rescheduled
-        Intent alarmIntent = new Intent(context, SchedulerService.class);
+        Intent alarmIntent = new Intent(context, ScheduledActionService.class);
         PendingIntent pendingIntent = PendingIntent.getService(context, 0, alarmIntent, PendingIntent.FLAG_NO_CREATE);
         AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
         alarmManager.cancel(pendingIntent);
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
index 85daa8d2..9e6ddea9 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/ScheduledActionDbAdapter.java
@@ -116,7 +116,7 @@ public long updateRecurrenceAttributes(ScheduledAction scheduledAction){
         contentValues.put(ScheduledActionEntry.COLUMN_START_TIME, scheduledAction.getStartTime());
         contentValues.put(ScheduledActionEntry.COLUMN_END_TIME,  scheduledAction.getEndTime());
         contentValues.put(ScheduledActionEntry.COLUMN_TAG,       scheduledAction.getTag());
-        contentValues.put(ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY, scheduledAction.getTotalFrequency());
+        contentValues.put(ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY, scheduledAction.getTotalPlannedExecutionCount());
 
         Log.d(LOG_TAG, "Updating scheduled event recurrence attributes");
         String where = ScheduledActionEntry.COLUMN_UID + "=?";
@@ -138,7 +138,7 @@ public long updateRecurrenceAttributes(ScheduledAction scheduledAction){
             stmt.bindNull(8);
         else
             stmt.bindString(8, schedxAction.getTag());
-        stmt.bindString(9, Integer.toString(schedxAction.getTotalFrequency()));
+        stmt.bindString(9, Integer.toString(schedxAction.getTotalPlannedExecutionCount()));
         stmt.bindString(10, schedxAction.getRecurrence().getUID());
         stmt.bindLong(11,   schedxAction.shouldAutoCreate() ? 1 : 0);
         stmt.bindLong(12,   schedxAction.shouldAutoNotify() ? 1 : 0);
@@ -182,7 +182,7 @@ public ScheduledAction buildModelInstance(@NonNull final Cursor cursor){
         event.setLastRun(lastRun);
         event.setTag(tag);
         event.setEnabled(enabled);
-        event.setTotalFrequency(numOccurrences);
+        event.setTotalPlannedExecutionCount(numOccurrences);
         event.setExecutionCount(execCount);
         event.setAutoCreate(autoCreate == 1);
         event.setAutoNotify(autoNotify == 1);
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index b701058c..c9d8f9ba 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -522,7 +522,6 @@ private void shareFiles(List<String> paths) {
      * @throws IOException if the file could not be moved.
      */
     public void moveFile(String src, String dst) throws IOException {
-        //TODO: Make this asynchronous at some time, t in the future.
         File srcFile = new File(src);
         File dstFile = new File(dst);
         FileChannel inChannel = new FileInputStream(srcFile).getChannel();
diff --git a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
index ef3dee92..367d0549 100644
--- a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
@@ -113,7 +113,11 @@ private void generateOfx(Document doc, Element parent){
 		}
 	}
 
-    // FIXME: Move code to generateExport()
+    /**
+     * Generate OFX export file from the transactions in the database
+     * @return String containing OFX export
+     * @throws ExporterException
+     */
     private String generateOfxExport() throws ExporterException {
         mAccountsList = mAccountsDbAdapter.getExportableAccounts(mExportParams.getExportStartTime());
 
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index f77eacf9..1d7938eb 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -729,7 +729,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                 break;
             //todo: export auto_notify, advance_create, advance_notify
             case GncXmlHelper.TAG_SX_NUM_OCCUR:
-                mScheduledAction.setTotalFrequency(Integer.parseInt(characterString));
+                mScheduledAction.setTotalPlannedExecutionCount(Integer.parseInt(characterString));
                 break;
             case GncXmlHelper.TAG_RX_MULT:
                 mRecurrenceMultiplier = Integer.parseInt(characterString);
@@ -1078,7 +1078,7 @@ private int generateMissedScheduledTransactions(ScheduledAction scheduledAction)
         if (scheduledAction.getActionType() != ScheduledAction.ActionType.TRANSACTION
                 || !scheduledAction.isEnabled() || !scheduledAction.shouldAutoCreate()
                 || (scheduledAction.getEndTime() > 0 && scheduledAction.getEndTime() > System.currentTimeMillis())
-                || (scheduledAction.getTotalFrequency() > 0 && scheduledAction.getExecutionCount() >= scheduledAction.getTotalFrequency())){
+                || (scheduledAction.getTotalPlannedExecutionCount() > 0 && scheduledAction.getExecutionCount() >= scheduledAction.getTotalPlannedExecutionCount())){
             return 0;
         }
 
diff --git a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
index 3fcbd03a..e44d89f9 100644
--- a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
+++ b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
@@ -71,7 +71,7 @@
     private ActionType mActionType;
 
     /**
-     * Number of times this event is to be executed
+     * Number of times this event is planned to be executed
      */
     private int mTotalFrequency = 0;
 
@@ -297,16 +297,16 @@ public void setEnabled(boolean enabled){
      * Returns the total number of planned occurrences of this scheduled action.
      * @return Total number of planned occurrences of this action
      */
-    public int getTotalFrequency(){
+    public int getTotalPlannedExecutionCount(){
         return mTotalFrequency;
     }
 
     /**
      * Sets the number of occurences of this action
-     * @param occurencesCount Number of occurences
+     * @param plannedExecutions Number of occurences
      */
-    public void setTotalFrequency(int occurencesCount){
-        this.mTotalFrequency = occurencesCount;
+    public void setTotalPlannedExecutionCount(int plannedExecutions){
+        this.mTotalFrequency = plannedExecutions;
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/service/SchedulerService.java b/app/src/main/java/org/gnucash/android/service/ScheduledActionService.java
similarity index 97%
rename from app/src/main/java/org/gnucash/android/service/SchedulerService.java
rename to app/src/main/java/org/gnucash/android/service/ScheduledActionService.java
index 1d6e461e..0d55b9fa 100644
--- a/app/src/main/java/org/gnucash/android/service/SchedulerService.java
+++ b/app/src/main/java/org/gnucash/android/service/ScheduledActionService.java
@@ -52,11 +52,11 @@
  * Scheduled runs of the service should be achieved using an {@link android.app.AlarmManager}</p>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class SchedulerService extends IntentService {
+public class ScheduledActionService extends IntentService {
 
-    public static final String LOG_TAG = "SchedulerService";
+    public static final String LOG_TAG = "ScheduledActionService";
 
-    public SchedulerService() {
+    public ScheduledActionService() {
         super(LOG_TAG);
     }
 
@@ -100,7 +100,7 @@ public static void processScheduledActions(List<ScheduledAction> scheduledAction
         for (ScheduledAction scheduledAction : scheduledActions) {
 
             long now        = System.currentTimeMillis();
-            int totalPlannedExecutions = scheduledAction.getTotalFrequency();
+            int totalPlannedExecutions = scheduledAction.getTotalPlannedExecutionCount();
             int executionCount = scheduledAction.getExecutionCount();
 
             if (scheduledAction.getStartTime() > now    //if schedule begins in the future
@@ -133,7 +133,7 @@ public static void executeScheduledEvent(ScheduledAction scheduledAction, SQLite
                 //if the end time is in the future, we execute all schedules until now (current time)
                 //if there is no end time, we execute all schedules until now
                 long endTime = scheduledAction.getEndTime() > 0 ? Math.min(scheduledAction.getEndTime(), now) : now;
-                int totalPlannedExecutions = scheduledAction.getTotalFrequency();
+                int totalPlannedExecutions = scheduledAction.getTotalPlannedExecutionCount();
                 List<Transaction> transactions = new ArrayList<>();
 
                 //we may be executing scheduled action significantly after scheduled time (depending on when Android fires the alarm)
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
index 39e702e9..51f5c7ff 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
@@ -63,7 +63,7 @@ public void testGenerateRepeatString(){
         PeriodType periodType = PeriodType.MONTH;
         periodType.setMultiplier(2);
         scheduledAction.setRecurrence(new Recurrence(periodType));
-        scheduledAction.setTotalFrequency(4);
+        scheduledAction.setTotalPlannedExecutionCount(4);
 
         String repeatString = "Every 2 months,  for 4 times";
         assertThat(scheduledAction.getRepeatString().trim()).isEqualTo(repeatString);
diff --git a/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
index 722fb26c..858934d2 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
@@ -37,7 +37,7 @@
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
-import org.gnucash.android.service.SchedulerService;
+import org.gnucash.android.service.ScheduledActionService;
 import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
 import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
 import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
@@ -134,7 +134,7 @@ public void disabledScheduledActions_shouldNotRun(){
         TransactionsDbAdapter trxnAdapter = TransactionsDbAdapter.getInstance();
 
         assertThat(trxnAdapter.getRecordsCount()).isZero();
-        SchedulerService.processScheduledActions(actions, mDb);
+        ScheduledActionService.processScheduledActions(actions, mDb);
         assertThat(trxnAdapter.getRecordsCount()).isZero();
     }
 
@@ -152,7 +152,7 @@ public void futureScheduledActions_shouldNotRun(){
         TransactionsDbAdapter trxnAdapter = TransactionsDbAdapter.getInstance();
 
         assertThat(trxnAdapter.getRecordsCount()).isZero();
-        SchedulerService.processScheduledActions(actions, mDb);
+        ScheduledActionService.processScheduledActions(actions, mDb);
         assertThat(trxnAdapter.getRecordsCount()).isZero();
     }
 
@@ -166,7 +166,7 @@ public void exceededExecutionCounts_shouldNotRun(){
         scheduledAction.setStartTime(new DateTime(2015, 5, 31, 14, 0).getMillis());
         scheduledAction.setEnabled(true);
         scheduledAction.setRecurrence(new Recurrence(PeriodType.WEEK));
-        scheduledAction.setTotalFrequency(4);
+        scheduledAction.setTotalPlannedExecutionCount(4);
         scheduledAction.setExecutionCount(4);
 
         List<ScheduledAction> actions = new ArrayList<>();
@@ -174,7 +174,7 @@ public void exceededExecutionCounts_shouldNotRun(){
 
         TransactionsDbAdapter trxnAdapter = TransactionsDbAdapter.getInstance();
         assertThat(trxnAdapter.getRecordsCount()).isZero();
-        SchedulerService.processScheduledActions(actions, mDb);
+        ScheduledActionService.processScheduledActions(actions, mDb);
         assertThat(trxnAdapter.getRecordsCount()).isZero();
     }
 
@@ -196,7 +196,7 @@ public void missedScheduledTransactions_shouldBeGenerated(){
 
         List<ScheduledAction> actions = new ArrayList<>();
         actions.add(scheduledAction);
-        SchedulerService.processScheduledActions(actions, mDb);
+        ScheduledActionService.processScheduledActions(actions, mDb);
 
         int weeks = Weeks.weeksBetween(startTime, new DateTime(2016, 8, 29, 10, 0)).getWeeks();
         int expectedTransactionCount = weeks/2;
@@ -219,7 +219,7 @@ public void endTimeInTheFuture_shouldExecuteOnlyUntilPresent(){
 
         List<ScheduledAction> actions = new ArrayList<>();
         actions.add(scheduledAction);
-        SchedulerService.processScheduledActions(actions, mDb);
+        ScheduledActionService.processScheduledActions(actions, mDb);
 
         int weeks = Weeks.weeksBetween(startTime, new DateTime(2016, 8, 29, 10, 0)).getWeeks();
         int expectedTransactionCount = weeks/2; //multiplier from the PeriodType
@@ -246,7 +246,7 @@ public void scheduledActionsWithEndTimeInPast_shouldBeExecuted(){
 
         List<ScheduledAction> actions = new ArrayList<>();
         actions.add(scheduledAction);
-        SchedulerService.processScheduledActions(actions, mDb);
+        ScheduledActionService.processScheduledActions(actions, mDb);
 
         int expectedCount = 5;
         assertThat(scheduledAction.getExecutionCount()).isEqualTo(expectedCount);
@@ -268,7 +268,7 @@ public void recurringTransactions_shouldHaveScheduledActionUID(){
 
         List<ScheduledAction> actions = new ArrayList<>();
         actions.add(scheduledAction);
-        SchedulerService.processScheduledActions(actions, mDb);
+        ScheduledActionService.processScheduledActions(actions, mDb);
     }
 
     //// FIXME: 16.08.2016 Cannot find the file after export. But the export task is called and run
@@ -288,7 +288,7 @@ public void scheduledBackups_shouldRunOnlyOnce(){
 
         List<ScheduledAction> actions = new ArrayList<>();
         actions.add(scheduledBackup);
-        SchedulerService.processScheduledActions(actions, mDb);
+        ScheduledActionService.processScheduledActions(actions, mDb);
 
         File[] backupFiles = backupFolder.listFiles();
         assertThat(backupFiles).hasSize(1);

From 86ac8410b407e7fbd9ccf97a4cc57fded4431f6c Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 16 Aug 2016 15:23:22 +0200
Subject: [PATCH 106/121] Update version string for v2.1.0-beta3 release

Update Catalan translation
---
 app/build.gradle                           |   2 +-
 app/src/main/res/values-ca-rES/strings.xml | 248 ++++++++++++++---------------
 app/src/main/res/values-de/strings.xml     |   2 +-
 3 files changed, 125 insertions(+), 127 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 2ec111a7..a4b052d4 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -7,7 +7,7 @@ apply plugin: 'io.fabric'
 def versionMajor = 2
 def versionMinor = 1
 def versionPatch = 0
-def versionBuild = 2
+def versionBuild = 3
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")
diff --git a/app/src/main/res/values-ca-rES/strings.xml b/app/src/main/res/values-ca-rES/strings.xml
index 8d4291b2..d2848c8f 100644
--- a/app/src/main/res/values-ca-rES/strings.xml
+++ b/app/src/main/res/values-ca-rES/strings.xml
@@ -21,11 +21,11 @@
   <string name="info_details">Informaci</string>
   <string name="menu_export">Exporta&#8230;</string>
   <string name="description_add_transaction_icon">Afegeix un assentament nou al compte</string>
-  <string name="label_no_accounts">No accounts to display</string>
+  <string name="label_no_accounts">No hi ha comptes per mostrar</string>
   <string name="label_account_name">Nom del compte</string>
   <string name="btn_cancel">Cancella</string>
   <string name="btn_save">Desa</string>
-  <string name="btn_test">Test</string>
+  <string name="btn_test">Prova</string>
   <string name="label_passcode">Introdueix la contrasenya</string>
   <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
   <string name="toast_passcode_set">Passcode set</string>
@@ -34,8 +34,8 @@
   <string name="label_transaction_name">Descripci</string>
   <string name="label_transaction_amount">Import</string>
   <string name="title_add_transaction">Transacci Nova</string>
-  <string name="label_no_transactions">No transactions to display</string>
-  <string name="label_timeanddate">DATE &amp; TIME</string>
+  <string name="label_no_transactions">No hi ha cap transacci per mostrar</string>
+  <string name="label_timeanddate">DATA I HORA</string>
   <string name="label_account">Compte</string>
   <string name="label_debit">DBIT</string>
   <string name="label_credit">CRDIT</string>
@@ -44,56 +44,56 @@
   <string name="menu_delete">Suprimeix</string>
   <string name="alert_dialog_ok_delete">Suprimeix</string>
   <string name="alert_dialog_cancel">Cancella</string>
-  <string name="toast_account_deleted">Account deleted</string>
-  <string name="title_confirm_delete">Confirm delete</string>
-  <string name="delete_account_confirmation_message">All transactions in this account will also be deleted</string>
+  <string name="toast_account_deleted">S\'ha eliminat el compte</string>
+  <string name="title_confirm_delete">Confirma la supressi</string>
+  <string name="delete_account_confirmation_message">Tamb es suprimiran totes les transaccions en aquest compte</string>
   <string name="title_edit_transaction">Edita l\'assentament</string>
   <string name="label_transaction_description">Afegiu una nota</string>
   <string name="menu_move">MOU</string>
-  <string name="title_selected">%1$d selected</string>
+  <string name="title_selected">%1$d seleccionats</string>
   <string name="label_account_balance">Saldo:</string>
   <string name="label_export_destination">Exporta a:</string>
   <string name="title_export_dialog">Exporta els assentaments</string>
   <string name="option_export_all_transactions">Exporta tots els assentaments</string>
-  <string name="hint_export_choice">By default, only new transactions since last export will be exported. Check this option to export all transactions</string>
-  <string name="toast_export_error">Error exporting %1$s file</string>
+  <string name="hint_export_choice">Per defecte, noms s\'exportaran les transaccions noves des de l\'ltima exportaci. Marqueu aquesta opci per exportar totes les transaccions</string>
+  <string name="toast_export_error">S\'ha produt un error en exportar el fitxer %1$s</string>
   <string name="btn_export">Exporta</string>
-  <string name="option_delete_after_export">Delete transactions after export</string>
-  <string name="hint_delete_after_export">All exported transactions will be deleted when exporting is completed</string>
+  <string name="option_delete_after_export">Suprimeix les transaccions desprs d\'exportar</string>
+  <string name="hint_delete_after_export">S\'eliminaran totes les transaccions exportades en finalitzar l\'exportaci</string>
   <string name="title_settings">Preferncies</string>
   <string-array name="export_destinations">
     <item>Targeta SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>Envia a&#8230;</item>
   </string-array>
   <string name="btn_move">Mou</string>
-  <string name="title_move_transactions">Move %1$d transaction(s)</string>
+  <string name="title_move_transactions">Mou %1$d transaccions</string>
   <string name="label_move_destination">Compte dest</string>
-  <string name="permission_access_sdcard">Access SD Card</string>
-  <string name="toast_incompatible_currency">Cannot move transactions.\nThe destination account uses a different currency from origin account</string>
+  <string name="permission_access_sdcard">Accs a la targeta SD</string>
+  <string name="toast_incompatible_currency">No s\'han pogut moure les transaccions.\nEl compte desti utilitza una moneda diferent del compte origen</string>
   <string name="header_general_settings">General</string>
   <string name="header_about_gnucash">Quant a</string>
   <string name="title_choose_currency">Trieu la moneda per defecte</string>
   <string name="title_default_currency">Moneda per defecte</string>
-  <string name="summary_default_currency">Default currency to assign to new accounts</string>
-  <string name="label_permission_record_transactions">Enables recording transactions in GnuCash for Android</string>
-  <string name="label_permission_create_accounts">Enables creation of accounts in GnuCash for Android</string>
-  <string name="label_permission_group">Your GnuCash data</string>
-  <string name="description_permission_group">Read and modify GnuCash data</string>
-  <string name="label_permission_record_transaction">Record transactions in GnuCash</string>
-  <string name="label_permission_create_account">Create accounts in GnuCash</string>
+  <string name="summary_default_currency">Moneda a assignar per defecte a nous comptes</string>
+  <string name="label_permission_record_transactions">Permet registrar transaccions en GnuCash per Android</string>
+  <string name="label_permission_create_accounts">Permet crear comptes en GnuCash per Android</string>
+  <string name="label_permission_group">Les vostres dades de GnuCash</string>
+  <string name="description_permission_group">Llegir i modificar les dades de GnuCash</string>
+  <string name="label_permission_record_transaction">Registrar transaccions en GnuCash</string>
+  <string name="label_permission_create_account">Crear comptes en GnuCash</string>
   <string name="label_display_account">Display account</string>
   <string name="btn_create_accounts">Crea els comptes</string>
   <string name="title_default_accounts">Seleccioneu els comptes a crear</string>
-  <string name="error_no_accounts">No accounts exist in GnuCash.\nCreate an account before adding a widget</string>
-  <string name="title_build_version">Build version</string>
+  <string name="error_no_accounts">No hi ha comptes en GnuCash.\nCreeu un compte abans d\'afegir un giny</string>
+  <string name="title_build_version">Versi de la compilaci</string>
   <string name="title_license">Llicncia</string>
-  <string name="summary_licence_details">Apache License v2.0. Click for details</string>
+  <string name="summary_licence_details">Llicncia Apache 2.0. Feu clic per a ms detalls</string>
   <string name="title_general_prefs">Preferncies generals</string>
   <string name="label_widget_configuration">Seleccioneu un compte</string>
-  <string name="toast_no_transactions_to_export">There are no transactions available to export</string>
+  <string name="toast_no_transactions_to_export">No hi ha cap transacci per exportar</string>
   <string name="header_passcode_settings">Contrasenya</string>
   <string name="title_passcode_preferences">PreferncIes de contrasenya</string>
   <string name="title_passcode_enabled">Contrasenya activada</string>
@@ -102,34 +102,34 @@
   <string name="title_about_gnucash">Quant a GnuCash</string>
   <string name="summary_about_gnucash">A mobile finance management and expense-tracker designed for Android</string>
   <string name="title_about">Quant a</string>
-  <string name="toast_format_exported_to">%1$s file exported to:\n</string>
+  <string name="toast_format_exported_to">%1$s fitxer exportat a:\n</string>
   <string name="title_export_email">GnuCash Android %1$s export</string>
-  <string name="description_export_email">GnuCash Android Export from </string>
+  <string name="description_export_email">Exportaci de GnuCash Android de </string>
   <string name="header_transaction_settings">Assentaments</string>
   <string name="title_transaction_preferences">Preferncies d\'assentaments</string>
   <string name="title_account_preferences">Preferncies de comptes</string>
   <string name="title_default_transaction_type">Tipus d\'assentament per defecte</string>
-  <string name="summary_default_transaction_type">The type of transaction to use by default, CREDIT or DEBIT</string>
+  <string name="summary_default_transaction_type">Tipus de transacci a utilitzar per defecte, CRDIT o DBIT</string>
   <string-array name="transaction_types">
     <item>CRDIT</item>
     <item>DBIT</item>
   </string-array>
-  <string name="msg_delete_all_transactions_confirmation">Are you sure you want to delete ALL transactions?</string>
-  <string name="msg_delete_transaction_confirmation">Are you sure you want to delete this transaction?</string>
+  <string name="msg_delete_all_transactions_confirmation">Esteu segur que voleu suprimir TOTES les transaccions?</string>
+  <string name="msg_delete_transaction_confirmation">Esteu segur que voleu suprimir aquesta transacci?</string>
   <string name="title_export_preference_category">Exportaci</string>
   <string name="title_export_all_transactions">Exporta tots els assentaments</string>
   <string name="title_always_delete_exported_transactions">Suprimeix els assentaments exportats</string>
-  <string name="title_default_export_email">Default export email</string>
-  <string name="summary_default_export_email">The default email address to send exports to. You can still change this when you export.</string>
+  <string name="title_default_export_email">Adrea electrnica d\'exportaci per defecte</string>
+  <string name="summary_default_export_email">L\'adrea electrnica per defecte on enviar les exportacions. La podeu canviar quan exporteu.</string>
   <string name="label_double_entry_account">Compte d\'origen</string>
-  <string name="summary_use_double_entry">All transactions will be a transfer from one account to another</string>
-  <string name="title_use_double_entry">Activate Double Entry</string>
+  <string name="summary_use_double_entry">Totes les transaccions seran una transferncia d\'un compte a un altre</string>
+  <string name="title_use_double_entry">Activar la doble entrada</string>
   <string name="account_balance">Balan</string>
-  <string name="toast_no_account_name_entered">Enter an account name to create an account</string>
+  <string name="toast_no_account_name_entered">Introduu un nom de compte per crear el compte</string>
   <string name="label_account_currency">Moneda</string>
   <string name="label_parent_account">Compte pare</string>
-  <string name="title_xml_ofx_header">Use XML OFX header</string>
-  <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
+  <string name="title_xml_ofx_header">Utilitzar capalera XML d\'OFX</string>
+  <string name="summary_xml_ofx_header">Habiliteu aquesta opci quan exporteu a aplicacions de tercers diferents de GnuCash per escriptori</string>
   <string name="title_whats_new">Novetats</string>
   <string name="whats_new">
         - New Material app design \n
@@ -141,45 +141,43 @@
 	</string>
   <string name="label_dismiss">Dismiss</string>
   <string name="toast_transanction_amount_required">Introduu una quantitat per desar l\'assentament</string>
-  <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
+  <string name="toast_error_edit_multi_currency_transaction">Les transaccions multimoneda no es poden modificar</string>
   <string name="menu_import_accounts">Importa comptes de GnuCash</string>
   <string name="btn_import_accounts">Importa els comptes</string>
-  <string name="toast_error_importing_accounts">An error occurred while importing the GnuCash accounts</string>
-  <string name="toast_success_importing_accounts">GnuCash Accounts successfully imported</string>
-  <string name="summary_import_accounts">Import account structure exported from GnuCash desktop</string>
+  <string name="toast_error_importing_accounts">S\'ha produt un error en importar els comptes de GnuCash</string>
+  <string name="toast_success_importing_accounts">S\'han importat els comptes de GnuCash correctament</string>
+  <string name="summary_import_accounts">Importa l\'estructura de comptes exportada des de GnuCash per escriptori</string>
   <string name="title_import_accounts">Importa XML de GnuCash</string>
   <string name="summary_delete_all_accounts">Delete all accounts in the database. All transactions will be deleted as
         well.
     </string>
   <string name="title_delete_all_accounts">Suprimeix tots els comptes</string>
   <string name="header_account_settings">Comptes</string>
-  <string name="toast_all_accounts_deleted">All accounts have been successfully deleted</string>
-  <string name="confirm_delete_all_accounts">Are you sure you want to delete all accounts and transactions?\n\nThis
-        operation cannot be undone!
-    </string>
+  <string name="toast_all_accounts_deleted">S\'han suprimit tots els comptes</string>
+  <string name="confirm_delete_all_accounts">Esteu segur que voleu suprimir tots els comptes i transaccions?\n\nAquesta operaci no es pot desfer!    </string>
   <string name="label_account_type">Tipus de compte</string>
-  <string name="summary_delete_all_transactions">All transactions in all accounts will be deleted!</string>
+  <string name="summary_delete_all_transactions">Es suprimiran totes les transaccions de tots els comptes!</string>
   <string name="title_delete_all_transactions">Suprimeix tots els assentaments</string>
-  <string name="toast_all_transactions_deleted">All transactions successfully deleted!</string>
-  <string name="title_progress_importing_accounts">Importing accounts</string>
-  <string name="toast_tap_again_to_confirm_delete">Tap again to confirm. ALL entries will be deleted!!</string>
+  <string name="toast_all_transactions_deleted">S\'han suprimit totes les transaccions!</string>
+  <string name="title_progress_importing_accounts">S\'estan important els comptes</string>
+  <string name="toast_tap_again_to_confirm_delete">Torna a tocar per confirmar. S\'eliminaran TOTES les entrades!!</string>
   <string name="section_header_transactions">Assentaments</string>
   <string name="section_header_subaccounts">Subcomptes</string>
   <string name="menu_search_accounts">Cerca</string>
   <string name="title_default_export_format">Format d\'exportaci per defecte</string>
-  <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
+  <string name="summary_default_export_format">Format de fitxer a utilitzar per defecte en exportar transaccions</string>
   <string name="menu_export_transactions">Exporta els assentaments&#8230;</string>
   <string name="label_recurring_transaction">Periodicitat</string>
   <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
   <string name="imbalance_account_name">Desequilibri</string>
-  <string name="title_progress_exporting_transactions">Exporting transactions</string>
-  <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
-  <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+  <string name="title_progress_exporting_transactions">S\'estan exportant les transaccions</string>
+  <string name="label_no_recurring_transactions">No hi ha cap transacci recurrent per mostrar.</string>
+  <string name="toast_recurring_transaction_deleted">S\'ha suprimit la transacci recurrent</string>
   <string name="label_placeholder_account">Compte contenidor</string>
   <string name="label_default_transfer_account">Compte d\'origen per defecte</string>
   <plurals name="label_sub_accounts">
-    <item quantity="one">%d sub-account</item>
-    <item quantity="other">%d sub-accounts</item>
+    <item quantity="one">%d Subcompte</item>
+    <item quantity="other">%d Subcomptes</item>
   </plurals>
   <string-array name="account_type_entry_values">
     <item>EFECTIU</item>
@@ -211,19 +209,19 @@
   <string name="title_recent_accounts">Recents</string>
   <string name="title_favorite_accounts">Preferits</string>
   <string name="title_all_accounts">Tots</string>
-  <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
-  <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="summary_create_default_accounts">Crea l\'estructura de comptes per defecte de GnuCash d\'s ms com</string>
+  <string name="title_create_default_accounts">Crea els comptes per defecte</string>
+  <string name="msg_confirm_create_default_accounts_setting">Es suprimiran tots els comptes i transaccions del dispositiu.\n\nEsteu segurs de que voleu continuar?</string>
   <string name="menu_scheduled_transactions">Assentaments peridics</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
         available in app Settings so you can decide later.
     </string>
   <string name="title_scheduled_transactions">Assentaments</string>
-  <string name="title_select_export_destination">Select destination for export</string>
+  <string name="title_select_export_destination">Seleccioneu un dest per l\'exportaci</string>
   <string name="hint_split_memo">Memo</string>
-  <string name="label_spend">Spend</string>
-  <string name="label_receive">Receive</string>
+  <string name="label_spend">Gastar</string>
+  <string name="label_receive">Rebre</string>
   <string name="label_withdrawal">Withdrawal</string>
   <string name="label_deposit">Ingrs</string>
   <string name="label_payment">Pagament</string>
@@ -234,22 +232,22 @@
   <string name="label_rebate">Rebate</string>
   <string name="label_expense">Expense</string>
   <string name="label_bill">Bill</string>
-  <string name="label_invoice">Invoice</string>
+  <string name="label_invoice">Factura</string>
   <string name="label_buy">Buy</string>
   <string name="label_sell">Sell</string>
   <string name="label_repeats">Repeats</string>
-  <string name="toast_no_recent_backup">No recent backup found</string>
+  <string name="toast_no_recent_backup">No s\'ha trobat cap cpia de seguretat recent</string>
   <string name="account_name_opening_balances">Opening Balances</string>
   <string name="account_name_equity">Equity</string>
   <string name="summary_save_opening_balances">Enable to save the current account balance (before deleting transactions) as new opening balance after deleting transactions
     </string>
   <string name="title_save_opening_balances">Save account opening balances</string>
-  <string name="export_warning_ofx">OFX does not support double-entry transactions</string>
-  <string name="export_warning_qif">Generates separate QIF files per currency</string>
+  <string name="export_warning_ofx">OFX no soporta transaccions de doble entrada</string>
+  <string name="export_warning_qif">Genera fitxers QIF separats per moneda</string>
   <string name="title_transaction_splits">Desglossament de l\'assentament</string>
   <string name="label_imbalance">Desequilibri:</string>
   <string name="btn_add_split">Afegeix desgls</string>
-  <string name="menu_title_favorite">Favorite</string>
+  <string name="menu_title_favorite">Preferit</string>
   <string name="drawer_open">Navigation drawer opened</string>
   <string name="drawer_close">Navigation drawer closed</string>
   <string name="title_reports">Informes</string>
@@ -278,78 +276,78 @@
   <string name="label_delete_account_subaccounts_description">This account contains sub-accounts. \nWhat would you like to do with these sub-accounts</string>
   <string name="label_delete_transactions">Suprimir els assentaments</string>
   <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
-  <string name="label_tap_to_create_schedule">Tap to create schedule</string>
-  <string name="title_restore_backup">Restore Backup&#8230;</string>
-  <string name="header_backup_and_export_settings">Backup &amp; export</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
-  <string name="title_owncloud_sync_preference">Enable ownCloud </string>
+  <string name="label_tap_to_create_schedule">Toca per planificar</string>
+  <string name="title_restore_backup">Restaura la cpia de seguretat&#8230;</string>
+  <string name="header_backup_and_export_settings">Cpia de seguretat i exportaci</string>
+  <string name="title_dropbox_sync_preference">Habilita el DropBox</string>
+  <string name="title_owncloud_sync_preference">Habilita l\'ownCloud</string>
   <string name="title_backup_preference_category">Cpia de seguretat</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
-  <string name="summary_owncloud_sync">Enable exporting to ownCloud</string>
-  <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
+  <string name="summary_dropbox_sync">Habilita l\'exportaci a DropBox</string>
+  <string name="summary_owncloud_sync">Habilita l\'exportaci a ownCloud</string>
+  <string name="title_select_gnucash_xml_file">Seleccioneu el fitxer XML de GnuCash</string>
   <string name="title_backup_prefs">Preferncies de cpia de seguretat</string>
-  <string name="title_create_backup_pref">Create Backup</string>
-  <string name="summary_create_backup_pref">By default backups are saved to the SDCARD</string>
-  <string name="summary_restore_backup_pref">Select a specific backup to restore</string>
-  <string name="toast_backup_successful">Backup successful</string>
-  <string name="toast_backup_failed">Backup failed</string>
-  <string name="export_warning_xml">Exports all accounts and transactions</string>
-  <string name="title_google_drive_sync_pref">Enable Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
-  <string name="toast_install_file_manager">Install a file manager to select files</string>
-  <string name="title_select_backup_to_restore">Select backup to restore</string>
+  <string name="title_create_backup_pref">Fer una cpia de seguretat</string>
+  <string name="summary_create_backup_pref">Per defecte les cpies de seguretat es desen a la tarjeta SD</string>
+  <string name="summary_restore_backup_pref">Seleccioneu una cpia de seguretat per restaurar</string>
+  <string name="toast_backup_successful">La cpia de seguretat s\'ha fet correctament</string>
+  <string name="toast_backup_failed">S\'ha produt un error en fer la cpia de seguretat</string>
+  <string name="export_warning_xml">Exporta tots els comptes i transaccions</string>
+  <string name="title_google_drive_sync_pref">Habilita Google Drive</string>
+  <string name="summary_google_drive_sync">Habilita l\'exportaci a Google Drive</string>
+  <string name="toast_install_file_manager">Installeu un gestor de fitxers per seleccionar fitxers</string>
+  <string name="title_select_backup_to_restore">Seleccioneu una cpia de seguretat per restaurar</string>
   <string name="nav_menu_favorites">Preferits</string>
   <string name="nav_menu_open">Obre&#8230;</string>
   <string name="nav_menu_reports">Informes</string>
   <string name="nav_menu_scheduled_transactions">Assentaments peridics</string>
   <string name="nav_menu_export">Exporta&#8230;</string>
   <string name="nav_menu_settings">Preferncies</string>
-  <string name="username">User Name</string>
-  <string name="password">Password</string>
-  <string name="owncloud_pref">owncloud</string>
+  <string name="username">Nom d\'usuari</string>
+  <string name="password">Contrasenya</string>
+  <string name="owncloud_pref">ownCloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
-  <string name="owncloud_server_ok">OC server OK</string>
-  <string name="owncloud_user_ok">OC username/password OK</string>
-  <string name="owncloud_dir_ok">Dir name OK</string>
+  <string name="owncloud_server_invalid">No s\'ha trobat el servidor d\'OC</string>
+  <string name="owncloud_user_invalid">El nom d\'usuari/contrasenya d\'OC no s correcte</string>
+  <string name="owncloud_dir_invalid">Carcters invalids: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_ok">Servidor d\'OC correcte</string>
+  <string name="owncloud_user_ok">Nom d\'usuari/contrasenya d\'OC correcte</string>
+  <string name="owncloud_dir_ok">Nom de carpeta correcte</string>
   <plurals name="label_every_x_days">
-    <item quantity="one">Daily</item>
-    <item quantity="other">Every %d days</item>
+    <item quantity="one">Diriament</item>
+    <item quantity="other">Cada %d dies</item>
   </plurals>
   <plurals name="label_every_x_weeks">
-    <item quantity="one">Weekly</item>
-    <item quantity="other">Every %d weeks</item>
+    <item quantity="one">Setmanalment</item>
+    <item quantity="other">Cada %d setmanes</item>
   </plurals>
   <plurals name="label_every_x_months">
-    <item quantity="one">Monthly</item>
-    <item quantity="other">Every %d months</item>
+    <item quantity="one">Mensualment</item>
+    <item quantity="other">Cada %d mesos</item>
   </plurals>
   <plurals name="label_every_x_years">
-    <item quantity="one">Yearly</item>
-    <item quantity="other">Every %d years</item>
+    <item quantity="one">Anualment</item>
+    <item quantity="other">Cada %d anys</item>
   </plurals>
   <string name="title_enable_crashlytics">Enable Crash Logging</string>
   <string name="msg_enable_crashlytics">Automatically send information about app malfunction to the developers.</string>
   <string name="label_export_format"> Format</string>
-  <string name="toast_backup_folder_not_found">Backup folder cannot be found. Make sure the SD Card is mounted!</string>
+  <string name="toast_backup_folder_not_found">No s\'ha trobat la carpeta de cpies de seguretat. Assegureu-vos que la tarjeta SD est muntada!</string>
   <string name="label_old_passcode">Introduiu la contrasenya antiga</string>
   <string name="label_new_passcode">Introduiu la contrasenya nova</string>
   <string name="nav_menu_scheduled_backups">Exportacions peridiques</string>
   <string name="title_scheduled_exports">Exportacions</string>
-  <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+  <string name="label_no_scheduled_exports_to_display">No hi ha cap transacci planificada per mostrar</string>
   <string name="title_create_export_schedule">Crea una exportaci peridica</string>
-  <string name="toast_exported_to">Exported to: %1$s</string>
-  <string name="toast_legend_too_long">The legend is too long</string>
+  <string name="toast_exported_to">S\'ha exportat a: %1$s</string>
+  <string name="toast_legend_too_long">La llegenda s massa llarga</string>
   <string name="hint_account_description">Descripci del compte</string>
-  <string name="label_no_recent_accounts">No recent accounts</string>
-  <string name="label_no_favorite_accounts">No favorite accounts</string>
+  <string name="label_no_recent_accounts">No hi ha comptes recents</string>
+  <string name="label_no_favorite_accounts">No hi ha comptes preferits</string>
   <string name="nav_menu_scheduled_actions">Accions peridiques</string>
   <string name="label_scheduled_action_ended">"Ended, last executed on %1$s"</string>
-  <string name="label_select_bar_to_view_details">Select a bar to view details</string>
+  <string name="label_select_bar_to_view_details">Seleccioneu una barra per veure els detalls</string>
   <string name="btn_wizard_next">Segent</string>
-  <string name="btn_wizard_finish">Done</string>
+  <string name="btn_wizard_finish">Fet</string>
   <string name="wizard_title_default_currency">Moneda per defecte</string>
   <string name="wizard_title_account_setup">Account Setup</string>
   <string name="wizard_title_select_currency">Seleccioneu una moneda</string>
@@ -357,17 +355,17 @@
   <string name="wizard_option_create_default_accounts">Crea els comptes per defecte</string>
   <string name="wizard_option_import_my_accounts">Importa els meus comptes</string>
   <string name="wizard_option_let_me_handle_it">Let me handle it</string>
-  <string name="wizard_option_currency_other">Other&#8230;</string>
+  <string name="wizard_option_currency_other">Altra&#8230;</string>
   <string name="wizard_option_auto_send_crash_reports">Automatically send crash reports</string>
   <string name="wizard_option_disable_crash_reports">Disable crash reports</string>
   <string name="wizard_btn_back">Enrere</string>
-  <string name="title_setup_gnucash">Setup GnuCash</string>
+  <string name="title_setup_gnucash">Configura el GnuCash</string>
   <string name="wizard_title_welcome_to_gnucash">Benvingut a GnuCash</string>
   <string name="msg_wizard_welcome_page">Before you dive in, \nlet\'s setup a few things first\n\nTo continue, press Next</string>
   <string name="title_split_editor">Editor de desglossament</string>
   <string name="toast_error_check_split_amounts">Check that all splits have valid amounts before saving!</string>
-  <string name="label_error_invalid_expression">Invalid expression!</string>
-  <string name="toast_scheduled_recurring_transaction">Scheduled recurring transaction</string>
+  <string name="label_error_invalid_expression">Expressi invlida!</string>
+  <string name="toast_scheduled_recurring_transaction">S\'ha planificat la transacci recurrent</string>
   <string name="error_exchange_rate_required">An exchange rate is required</string>
   <string name="error_converted_amount_required">The converted amount is required</string>
   <string name="title_transfer_funds">Transfer Funds</string>
@@ -441,16 +439,16 @@
   <string name="digit_nine_text">WXYZ</string>
   <string name="digit_zero">0</string>
   <string name="digit_zero_text">+</string>
-  <string name="title_manage_books">Manage Books</string>
-  <string name="menu_manage_books">Manage Books&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
-  <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
-  <string name="menu_title_new_book">New Book</string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="title_manage_books">Gestiona els llibres</string>
+  <string name="menu_manage_books">Gestiona els llibres&#8230;</string>
+  <string name="select_chart_to_view_details">Seleccioneu qualsevol part de la grfica per veure els detalls</string>
+  <string name="title_confirm_delete_book">Confirmeu la supressi del llibre</string>
+  <string name="msg_all_book_data_will_be_deleted">S\'eliminaran tots els comptes i transaccions d\'aquest llibre!</string>
+  <string name="btn_delete_book">Suprimeix el llibre</string>
+  <string name="label_last_export_time">ltima exportaci:</string>
+  <string name="menu_title_enable_sync">Habilita la sincronitzaci</string>
+  <string name="menu_title_new_book">Nou llibre</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">La transacci seleccionada no t desglossaments i no es pot obrir</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index abb15c41..57aaabaf 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -326,7 +326,7 @@
     <item quantity="one">Jhrlich</item>
     <item quantity="other">Alle %d Jahre</item>
   </plurals>
-  <string name="title_enable_crashlytics">Absturzprotokolloerung aktivieren</string>
+  <string name="title_enable_crashlytics">Absturzprotokollierung aktivieren</string>
   <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
 No user-identifiable information will be collected as part of this process!</string>
   <string name="label_export_format"> Format</string>

From 62242ff79cb9d21ac08b8a2546e282fe674d1d61 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 17 Aug 2016 17:47:05 +0200
Subject: [PATCH 107/121] Fix currency preference from startup wizard is
 ignored - fixes #542 Update default currencies file - Adds BYN currency -
 closes #516

Fix after default created book db file not deleted after creating new book from FirstRunWizard
---
 .../android/test/ui/AccountsActivityTest.java      |   1 +
 .../android/db/adapter/DatabaseAdapter.java        |  14 +
 .../gnucash/android/importer/ImportAsyncTask.java  |   6 +-
 .../android/ui/settings/BookManagerFragment.java   |   3 +-
 .../android/ui/wizard/FirstRunWizardActivity.java  |   2 +-
 app/src/main/res/raw/iso_4217_currencies.xml       | 463 +++++++++++----------
 .../android/test/unit/db/BooksDbAdapterTest.java   |  41 ++
 7 files changed, 299 insertions(+), 231 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 69f6e4a0..39b40f2e 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -413,6 +413,7 @@ public void testDeleteAccountMovingSubaccounts() {
                 withId(R.id.options_menu))).perform(click());
         onView(withText(R.string.menu_delete)).perform(click());
 
+        //// FIXME: 17.08.2016 This enabled check fails during some test runs - not reliable, investigate why
         onView(allOf(withParent(withId(R.id.accounts_options)),
                 withId(R.id.radio_move))).check(matches(isEnabled())).perform(click());
 
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index 5ebfd32b..f12c2e4d 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -24,6 +24,7 @@
 import android.text.TextUtils;
 import android.util.Log;
 
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.DatabaseSchema.AccountEntry;
 import org.gnucash.android.db.DatabaseSchema.CommonColumns;
@@ -712,6 +713,19 @@ public boolean deleteRecord(@NonNull String uid){
     }
 
     /**
+     * Deletes a book - removes the book record from the database and deletes the database file from the disk
+     * @param bookUID GUID of the book
+     * @return <code>true</code> if deletion was successful, <code>false</code> otherwise
+     * @see #deleteRecord(String)
+     */
+    public boolean deleteBook(@NonNull String bookUID){
+        boolean result = GnuCashApplication.getAppContext().deleteDatabase(bookUID);
+        if (result) //delete the db entry only if the file deletion was successful
+            result &= deleteRecord(bookUID);
+        return result;
+    }
+
+    /**
      * Returns an attribute from a specific column in the database for a specific record.
      * <p>The attribute is returned as a string which can then be converted to another type if
      * the caller was expecting something other type </p>
diff --git a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
index 0e3891ae..b8fdd602 100644
--- a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
@@ -124,9 +124,6 @@ public void run() {
 
     @Override
     protected void onPostExecute(Boolean importSuccess) {
-        if (mDelegate != null)
-            mDelegate.onTaskComplete();
-
         try {
             if (mProgressDialog != null && mProgressDialog.isShowing())
                 mProgressDialog.dismiss();
@@ -142,5 +139,8 @@ protected void onPostExecute(Boolean importSuccess) {
 
         if (mImportedBookUID != null)
             GnuCashApplication.loadBook(mImportedBookUID);
+
+        if (mDelegate != null)
+            mDelegate.onTaskComplete();
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
index 510d259c..0b9d4c4b 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
@@ -199,8 +199,7 @@ public void onClick(View v) {
                         dialogBuilder.setPositiveButton(getString(R.string.btn_delete_book), new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialog, int which) {
-                                BooksDbAdapter.getInstance().deleteRecord(bookUID);
-                                mContext.deleteDatabase(bookUID);
+                                BooksDbAdapter.getInstance().deleteBook(bookUID);
                                 refresh();
                             }
                         });
diff --git a/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java b/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
index 04b67eca..7254ef5f 100644
--- a/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/wizard/FirstRunWizardActivity.java
@@ -208,7 +208,7 @@ private void createAccountsAndFinish() {
             //save the UID of the active book, and then delete it after successful import
             String bookUID = BooksDbAdapter.getInstance().getActiveBookUID();
             AccountsActivity.createDefaultAccounts(mCurrencyCode, FirstRunWizardActivity.this);
-            BooksDbAdapter.getInstance().deleteRecord(bookUID); //a default book is usually created
+            BooksDbAdapter.getInstance().deleteBook(bookUID); //a default book is usually created
             finish();
         } else if (mAccountOptions.equals(getString(R.string.wizard_option_import_my_accounts))){
             AccountsActivity.startXmlFileChooser(this);
diff --git a/app/src/main/res/raw/iso_4217_currencies.xml b/app/src/main/res/raw/iso_4217_currencies.xml
index e7492ea1..e4e852f9 100644
--- a/app/src/main/res/raw/iso_4217_currencies.xml
+++ b/app/src/main/res/raw/iso_4217_currencies.xml
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="utf-8" ?>
 <!-- currency descriptions for ISO4217 currencies.
 
   This file is not currently used at runtime.  It's used to generate
@@ -54,7 +53,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "ADP" - "Andorran Peseta"
       2002-01-01 "ESP" 1 ;; = 1/1 Spanish Peseta replaced by EUR
     -->
@@ -68,7 +67,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "AED" - "UAE Dirham"
       There is also an arabic symbol for "Dhs"
     -->
@@ -82,7 +81,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Dhs"
-        />
+    />
     <!-- "AFA" - "Afghani"
       through 2003-01-02 "AFN" 1000
     -->
@@ -96,7 +95,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "AFN" - "Afghani"
     -->
     <currency
@@ -109,7 +108,7 @@
         parts-per-unit="1"
         smallest-fraction="1"
         local-symbol=""
-        />
+    />
     <!-- "ALL" - "Lek"
     -->
     <currency
@@ -122,7 +121,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "AMD" - "Armenian Dram"
     -->
     <currency
@@ -135,7 +134,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="."
-        />
+    />
     <!-- "ANG" - "Netherlands Antillian Guilder"
       through 2010-10 ???
     -->
@@ -149,7 +148,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="NA"
-        />
+    />
     <!-- "AOA" - "Kwanza"
     -->
     <currency
@@ -162,7 +161,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Kz"
-        />
+    />
     <!-- "AON" - "Angola New Kwanza"
       1995-07-01 "AOR" 1000
     -->
@@ -176,7 +175,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "AOR" - "Angola Kwanza Reajustado"
       2000-02-01 "AOA" 1000000
     -->
@@ -190,7 +189,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "ARA" - "Argentine Austral"
       1992-01-01 "ARS" 10000
     -->
@@ -204,7 +203,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "ARS" - "Argentine Peso"
     -->
     <currency
@@ -217,7 +216,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "ATS" - "Austrian Schilling"
       2002-01-01 "EUR" 13.7603
     -->
@@ -231,7 +230,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="S"
-        />
+    />
     <!-- "AUD" - "Australian Dollar"
     -->
     <currency
@@ -244,7 +243,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="$"
-        />
+    />
     <!-- "AWG" - "Aruban Guilder"
       ""
     -->
@@ -258,7 +257,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Afl."
-        />
+    />
     <!-- "AZM" - "Azerbaijanian Manat"
       2006-01-01 "AZN" 5000
     -->
@@ -272,7 +271,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "AZN" - "Azerbaijanian Manat"
       "m" should be  a 90 rotated  sign, but currently not encoded in Unicode
     -->
@@ -286,7 +285,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="m"
-        />
+    />
     <!-- "BAD" - "Bosnia and Herzegovina Dinar"
       1998-06-22 "BAM" 100 ;; there was a revaluation 1994-08: 10000:1
     -->
@@ -300,7 +299,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "BAM" - "Convertible Marks"
     -->
     <currency
@@ -313,7 +312,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="KM"
-        />
+    />
     <!-- "BBD" - "Barbados Dollar"
     -->
     <currency
@@ -326,7 +325,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Bds$"
-        />
+    />
     <!-- "BDT" - "Taka"
     -->
     <currency
@@ -339,7 +338,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "BEF" - "Belgian Franc"
       2002-01-01 "EUR" 40.3399
     -->
@@ -353,7 +352,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="fr."
-        />
+    />
     <!-- "BGL" - "Bulgarian Lev A/99"
       1999-07-05 "BGN" 1000
     -->
@@ -367,7 +366,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "BGN" - "Bulgarian Lev"
       scheduled replacement: 2012-01-01 "EUR" 1.95583 (=DEM)
     -->
@@ -381,7 +380,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "BHD" - "Bahraini Dinar"
       ar:..
     -->
@@ -395,7 +394,7 @@
         parts-per-unit="1000"
         smallest-fraction="1000"
         local-symbol="BD"
-        />
+    />
     <!-- "BIF" - "Burundi Franc"
     -->
     <currency
@@ -408,7 +407,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="FBu"
-        />
+    />
     <!-- "BMD" - "Bermudian Dollar"
     -->
     <currency
@@ -421,7 +420,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="BD$"
-        />
+    />
     <!-- "BND" - "Brunei Dollar"
     -->
     <currency
@@ -434,7 +433,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="B$"
-        />
+    />
     <!-- "BOB" - "Boliviano"
     -->
     <currency
@@ -447,7 +446,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Bs."
-        />
+    />
     <!-- "BOV" - "Mvdol"
       Mantenimiento de Valor respecto al Dlar
     -->
@@ -461,7 +460,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "BRE" - "Brazilian Cruzeiro"
       1993-08-01 "BRR" 1000
     -->
@@ -475,7 +474,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "BRL" - "Brazilian Real"
     -->
     <currency
@@ -488,7 +487,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="R$"
-        />
+    />
     <!-- "BRR" - "Brazilian Cruzeiro Real"
       1994-07-01 "BRL" 2750
     -->
@@ -502,7 +501,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "BSD" - "Bahamian Dollar"
     -->
     <currency
@@ -515,7 +514,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="B$"
-        />
+    />
     <!-- "BTN" - "Ngultrum"
     -->
     <currency
@@ -528,7 +527,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Nu."
-        />
+    />
     <!-- "BWP" - "Pula"
     -->
     <currency
@@ -541,7 +540,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="P"
-        />
+    />
     <!-- "BYB" - "Belarussian Rouble"
       2000-01-01 "BYR" 1000
     -->
@@ -555,8 +554,9 @@
         parts-per-unit="100"
         smallest-fraction="1"
         local-symbol=""
-        />
+    />
     <!-- "BYR" - "Belarussian Ruble"
+      2017-01-01 "BYN" 10000
     -->
     <currency
         isocode="BYR"
@@ -568,7 +568,20 @@
         parts-per-unit="1"
         smallest-fraction="100"
         local-symbol="Br"
-        />
+    />
+    <!-- "BYN" - "Belarussian Ruble"
+    -->
+    <currency
+        isocode="BYN"
+        fullname="Belarussian Ruble"
+        unitname="ruble"
+        partname="kapeyka"
+        namespace="ISO4217"
+        exchange-code="933"
+        parts-per-unit="100"
+        smallest-fraction="100"
+        local-symbol="Br"
+    />
     <!-- "BZD" - "Belize Dollar"
     -->
     <currency
@@ -581,7 +594,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="BZ$"
-        />
+    />
     <!-- "CAD" - "Canadian Dollar"
     -->
     <currency
@@ -594,7 +607,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="C$"
-        />
+    />
     <!-- "CDF" - "Franc Congolais"
     -->
     <currency
@@ -607,7 +620,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="FC"
-        />
+    />
     <!-- "CHE" - "WIR Euro"
       complementary currency by WIR Wirtschaftsring-Genossenschaft
     -->
@@ -621,7 +634,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "CHF" - "Swiss Franc"
     -->
     <currency
@@ -634,7 +647,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="SFr."
-        />
+    />
     <!-- "CHW" - "WIR Franc"
       complementary currency by WIR Wirtschaftsring-Genossenschaft
     -->
@@ -648,7 +661,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "CLF" - "Unidades de fomento"
       international secured loans; decimals not defined but required for conversion as of 2011-03-18 1 CLF = 21,560.19 CLP
     -->
@@ -662,7 +675,7 @@
         parts-per-unit="10000"
         smallest-fraction="10000"
         local-symbol=""
-        />
+    />
     <!-- "CLP" - "Chilean Peso"
       "$" should have 2 strokes
     -->
@@ -676,7 +689,7 @@
         parts-per-unit="100"
         smallest-fraction="1"
         local-symbol="$"
-        />
+    />
     <!-- "CNY" - "Yuan Renminbi"
       locale-symbol has been changed from  to CN following a discussion on bug 727466
     -->
@@ -690,7 +703,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="CN"
-        />
+    />
     <!-- "COP" - "Colombian Peso"
     -->
     <currency
@@ -703,7 +716,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="$"
-        />
+    />
     <!-- "COU" - "Unidad de Valor Real"
     -->
     <currency
@@ -716,7 +729,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "CRC" - "Costa Rican Colon"
     -->
     <currency
@@ -729,7 +742,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "CUP" - "Cuban Peso"
     -->
     <currency
@@ -742,7 +755,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="$MN"
-        />
+    />
     <!-- "CUC" - "Cuban Convertible Peso"
     -->
     <currency
@@ -755,7 +768,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="CUC$"
-        />
+    />
     <!-- "CVE" - "Cape Verde Escudo"
     -->
     <currency
@@ -768,7 +781,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Esc"
-        />
+    />
     <!-- "CYP" - "Cyprus Pound"
       2008-01-01 "EUR" 0.585274
     -->
@@ -782,7 +795,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "CZK" - "Czech Koruna"
     -->
     <currency
@@ -795,7 +808,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="K"
-        />
+    />
     <!-- "DEM" - "Deutsche Mark"
       2002-01-01 "EUR" 1.95583
     -->
@@ -809,7 +822,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="DM"
-        />
+    />
     <!-- "DJF" - "Djibouti Franc"
     -->
     <currency
@@ -822,7 +835,7 @@
         parts-per-unit="100"
         smallest-fraction="1"
         local-symbol="Fdj"
-        />
+    />
     <!-- "DKK" - "Danish Krone"
     -->
     <currency
@@ -835,7 +848,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="kr"
-        />
+    />
     <!-- "DOP" - "Dominican Peso"
     -->
     <currency
@@ -848,9 +861,9 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="RD$"
-        />
+    />
     <!-- "DZD" - "Algerian Dinar"
-      ar.: 	
+      ar.:  
     -->
     <currency
         isocode="DZD"
@@ -862,7 +875,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="DA"
-        />
+    />
     <!-- "ECS" - "Ecuador Sucre"
       2000-09-15 "USD" 25000
     -->
@@ -876,7 +889,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="S/."
-        />
+    />
     <!-- "EEK" - "Kroon"
       2011-01-01 "EUR" 15.6466
     -->
@@ -890,7 +903,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="kr"
-        />
+    />
     <!-- "EGP" - "Egyptian Pound"
       ar.:. maleem=0.001 E for accounting?
     -->
@@ -904,7 +917,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="E"
-        />
+    />
     <!-- "ERN" - "Nakfa"
     -->
     <currency
@@ -917,7 +930,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Nfa"
-        />
+    />
     <!-- "ESP" - "Spanish Peseta"
       2002-01-01 "EUR" 166.386
     -->
@@ -931,7 +944,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "ETB" - "Ethiopian Birr"
     -->
     <currency
@@ -944,7 +957,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Br"
-        />
+    />
     <!-- "EUR" - "Euro"
     -->
     <currency
@@ -957,7 +970,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "FIM" - "Finnish Markka"
       2002-01-01 "EUR" 5.94573
     -->
@@ -971,7 +984,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="mk"
-        />
+    />
     <!-- "FJD" - "Fiji Dollar"
     -->
     <currency
@@ -984,7 +997,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="FJ$"
-        />
+    />
     <!-- "FKP" - "Falkland Islands Pound"
     -->
     <currency
@@ -997,7 +1010,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="FK"
-        />
+    />
     <!-- "FRF" - "French Franc"
       2002-01-01 "EUR" 6.55957
     -->
@@ -1011,7 +1024,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "GBP" - "Pound Sterling"
     -->
     <currency
@@ -1024,7 +1037,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "GEL" - "Lari"
     -->
     <currency
@@ -1037,7 +1050,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "GHC" - "Cedi"
       2007-07-01 "GHS" 10000
     -->
@@ -1051,7 +1064,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "GHS" - "Ghana Cedi"
     -->
     <currency
@@ -1064,7 +1077,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="GH"
-        />
+    />
     <!-- "GIP" - "Gibraltar Pound"
     -->
     <currency
@@ -1077,7 +1090,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "GMD" - "Dalasi"
     -->
     <currency
@@ -1090,7 +1103,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="D"
-        />
+    />
     <!-- "GNF" - "Guinea Franc"
     -->
     <currency
@@ -1103,7 +1116,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="FG"
-        />
+    />
     <!-- "GRD" - "Greek Drachma"
       2002-01-01 "EUR" 340.750
     -->
@@ -1117,7 +1130,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="."
-        />
+    />
     <!-- "GTQ" - "Quetzal"
     -->
     <currency
@@ -1130,7 +1143,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Q"
-        />
+    />
     <!-- "GWP" - "Guinea-Bissau Peso"
       1997-01-01 "XOF" 65
     -->
@@ -1144,7 +1157,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "GYD" - "Guyana Dollar"
     -->
     <currency
@@ -1157,7 +1170,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="G$"
-        />
+    />
     <!-- "HKD" - "Hong Kong Dollar"
     -->
     <currency
@@ -1170,7 +1183,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="HK$"
-        />
+    />
     <!-- "HNL" - "Lempira"
     -->
     <currency
@@ -1183,7 +1196,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="L"
-        />
+    />
     <!-- "HRK" - "Croatian Kuna"
     -->
     <currency
@@ -1196,7 +1209,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="kn"
-        />
+    />
     <!-- "HTG" - "Gourde"
     -->
     <currency
@@ -1209,7 +1222,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="G"
-        />
+    />
     <!-- "HUF" - "Forint"
     -->
     <currency
@@ -1222,7 +1235,7 @@
         parts-per-unit="1"
         smallest-fraction="100"
         local-symbol="Ft"
-        />
+    />
     <!-- "IDR" - "Rupiah"
     -->
     <currency
@@ -1235,7 +1248,7 @@
         parts-per-unit="1"
         smallest-fraction="100"
         local-symbol="Rp"
-        />
+    />
     <!-- "IEP" - "Irish Pound"
       2002-01-01 "EUR" 0.787564
     -->
@@ -1249,7 +1262,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "ILS" - "New Israeli Sheqel"
     -->
     <currency
@@ -1262,7 +1275,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "INR" - "Indian Rupee"
     -->
     <currency
@@ -1275,7 +1288,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "IQD" - "Iraqi Dinar"
     -->
     <currency
@@ -1288,7 +1301,7 @@
         parts-per-unit="1000"
         smallest-fraction="1000"
         local-symbol="."
-        />
+    />
     <!-- "IRR" - "Iranian Rial"
     -->
     <currency
@@ -1301,7 +1314,7 @@
         parts-per-unit="1"
         smallest-fraction="1"
         local-symbol=""
-        />
+    />
     <!-- "ISK" - "Iceland Krona"
     -->
     <currency
@@ -1314,7 +1327,7 @@
         parts-per-unit="1"
         smallest-fraction="100"
         local-symbol="kr"
-        />
+    />
     <!-- "ITL" - "Italian Lira"
       2002-01-01 "EUR" 1936.27
     -->
@@ -1328,7 +1341,7 @@
         parts-per-unit="1"
         smallest-fraction="1"
         local-symbol=""
-        />
+    />
     <!-- "JMD" - "Jamaican Dollar"
     -->
     <currency
@@ -1341,7 +1354,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="J$"
-        />
+    />
     <!-- "JOD" - "Jordanian Dinar"
     -->
     <currency
@@ -1354,7 +1367,7 @@
         parts-per-unit="1000"
         smallest-fraction="1000"
         local-symbol="JD"
-        />
+    />
     <!-- "JPY" - "Yen"
     -->
     <currency
@@ -1367,7 +1380,7 @@
         parts-per-unit="100"
         smallest-fraction="1"
         local-symbol="JP"
-        />
+    />
     <!-- "KES" - "Kenyan Shilling"
     -->
     <currency
@@ -1380,7 +1393,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Ksh"
-        />
+    />
     <!-- "KGS" - "Som"
     -->
     <currency
@@ -1393,7 +1406,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "KHR" - "Riel"
     -->
     <currency
@@ -1406,7 +1419,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "KMF" - "Comoro Franc"
     -->
     <currency
@@ -1419,7 +1432,7 @@
         parts-per-unit="100"
         smallest-fraction="1"
         local-symbol="FC"
-        />
+    />
     <!-- "KPW" - "North Korean Won"
     -->
     <currency
@@ -1432,7 +1445,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "KRW" - "Won"
     -->
     <currency
@@ -1445,7 +1458,7 @@
         parts-per-unit="1"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "KWD" - "Kuwaiti Dinar"
     -->
     <currency
@@ -1458,7 +1471,7 @@
         parts-per-unit="1000"
         smallest-fraction="1000"
         local-symbol="."
-        />
+    />
     <!-- "KYD" - "Cayman Islands Dollar"
     -->
     <currency
@@ -1471,7 +1484,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="CI$"
-        />
+    />
     <!-- "KZT" - "Tenge"
     -->
     <currency
@@ -1484,7 +1497,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "LAK" - "Kip"
     -->
     <currency
@@ -1497,7 +1510,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "LBP" - "Lebanese Pound"
     -->
     <currency
@@ -1510,7 +1523,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="."
-        />
+    />
     <!-- "LKR" - "Sri Lanka Rupee"
     -->
     <currency
@@ -1523,7 +1536,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "LRD" - "Liberian Dollar"
     -->
     <currency
@@ -1536,7 +1549,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="L$"
-        />
+    />
     <!-- "LSL" - "Loti"
     -->
     <currency
@@ -1549,7 +1562,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="M"
-        />
+    />
     <!-- "LTL" - "Lithuanian Litas"
     -->
     <currency
@@ -1562,7 +1575,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Lt"
-        />
+    />
     <!-- "LUF" - "Luxembourg Franc"
       2002-01-01 "EUR" 40.3399
     -->
@@ -1576,7 +1589,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Flux"
-        />
+    />
     <!-- "LVL" - "Latvian Lats"
       Valid from 2. may 2009. till 31. december 2013, now "EUR" 0.702804
     -->
@@ -1590,7 +1603,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Ls"
-        />
+    />
     <!-- "LYD" - "Libyan Dinar"
     -->
     <currency
@@ -1603,7 +1616,7 @@
         parts-per-unit="1000"
         smallest-fraction="1000"
         local-symbol="."
-        />
+    />
     <!-- "MAD" - "Moroccan Dirham"
     -->
     <currency
@@ -1616,7 +1629,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="."
-        />
+    />
     <!-- "MDL" - "Moldovan Leu"
     -->
     <currency
@@ -1629,7 +1642,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "MGA" - "Malagasy Ariary"
     -->
     <currency
@@ -1642,7 +1655,7 @@
         parts-per-unit="5"
         smallest-fraction="5"
         local-symbol=""
-        />
+    />
     <!-- "MGF" - "Malagasy Franc"
       2003-07-31 "MGA" 5
     -->
@@ -1656,7 +1669,7 @@
         parts-per-unit="500"
         smallest-fraction="500"
         local-symbol=""
-        />
+    />
     <!-- "MKD" - "Denar"
     -->
     <currency
@@ -1669,7 +1682,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "MLF" - "Mali Franc"
       1984-07-01 "XOF" 2
     -->
@@ -1683,7 +1696,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "MMK" - "Kyat"
     -->
     <currency
@@ -1696,7 +1709,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="K"
-        />
+    />
     <!-- "MNT" - "Tugrik"
     -->
     <currency
@@ -1709,7 +1722,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "MOP" - "Pataca"
     -->
     <currency
@@ -1722,7 +1735,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="MOP$"
-        />
+    />
     <!-- "MRO" - "Ouguiya"
     -->
     <currency
@@ -1735,7 +1748,7 @@
         parts-per-unit="5"
         smallest-fraction="5"
         local-symbol="UM"
-        />
+    />
     <!-- "MTL" - "Maltese Lira"
       2008-01-01 "EUR" 0.4293
     -->
@@ -1749,7 +1762,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Lm"
-        />
+    />
     <!-- "MUR" - "Mauritius Rupee"
     -->
     <currency
@@ -1762,7 +1775,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="R"
-        />
+    />
     <!-- "MVR" - "Rufiyaa"
     -->
     <currency
@@ -1775,7 +1788,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="."
-        />
+    />
     <!-- "MWK" - "Kwacha"
     -->
     <currency
@@ -1788,7 +1801,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="MK"
-        />
+    />
     <!-- "MXN" - "Mexican Peso"
       since Jan 1993 (1000 MXP = 1 MXN)
     -->
@@ -1802,7 +1815,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Mex$"
-        />
+    />
     <!-- "MXV" - "Mexican Unidad de Inversion (UDI)"
       fund index based; used for credits, not subject to inflation
     -->
@@ -1816,7 +1829,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "MYR" - "Malaysian Ringgit"
     -->
     <currency
@@ -1829,7 +1842,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="RM"
-        />
+    />
     <!-- "MZM" - "Mozambique Metical"
       2006-07-01 "MZN" 1000
     -->
@@ -1843,7 +1856,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "MZN" - "Metical"
     -->
     <currency
@@ -1856,7 +1869,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="MTn"
-        />
+    />
     <!-- "NAD" - "Namibia Dollar"
     -->
     <currency
@@ -1869,7 +1882,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="N$"
-        />
+    />
     <!-- "NGN" - "Naira"
     -->
     <currency
@@ -1882,7 +1895,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "NIC" - "Nicaraguan Cordoba"
       1990-10-13 "NIO" 5000000
     -->
@@ -1896,7 +1909,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "NIO" - "Cordoba Oro"
     -->
     <currency
@@ -1909,7 +1922,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="C$"
-        />
+    />
     <!-- "NLG" - "Netherlands Guilder"
       2002-01-01 "EUR" 2.20371
     -->
@@ -1923,7 +1936,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "NOK" - "Norwegian Krone"
     -->
     <currency
@@ -1936,7 +1949,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="kr"
-        />
+    />
     <!-- "NPR" - "Nepalese Rupee"
     -->
     <currency
@@ -1949,7 +1962,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "NZD" - "New Zealand Dollar"
     -->
     <currency
@@ -1962,7 +1975,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="NZ$"
-        />
+    />
     <!-- "OMR" - "Rial Omani"
     -->
     <currency
@@ -1975,7 +1988,7 @@
         parts-per-unit="1000"
         smallest-fraction="1000"
         local-symbol=".."
-        />
+    />
     <!-- "PAB" - "Balboa"
     -->
     <currency
@@ -1988,7 +2001,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "PEN" - "Nuevo Sol"
     -->
     <currency
@@ -2001,7 +2014,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="S/."
-        />
+    />
     <!-- "PGK" - "Kina"
     -->
     <currency
@@ -2014,7 +2027,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="K"
-        />
+    />
     <!-- "PHP" - "Philippine Peso"
     -->
     <currency
@@ -2027,7 +2040,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "PKR" - "Pakistan Rupee"
     -->
     <currency
@@ -2040,7 +2053,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Rs"
-        />
+    />
     <!-- "PLN" - "Zloty"
     -->
     <currency
@@ -2053,7 +2066,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="z"
-        />
+    />
     <!-- "PTE" - "Portuguese Escudo"
       2002-01-01 "EUR" 200.482
     -->
@@ -2067,7 +2080,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="$"
-        />
+    />
     <!-- "PYG" - "Guarani"
       scheduled revaluation 2011
     -->
@@ -2081,7 +2094,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "QAR" - "Qatari Rial"
     -->
     <currency
@@ -2094,7 +2107,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="."
-        />
+    />
     <!-- "ROL" - "Romanian Old Leu"
       2005-07-01 "RON" 10000
     -->
@@ -2108,7 +2121,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "RON" - "New Leu"
       scheduled 2012..14: EUR
     -->
@@ -2122,7 +2135,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "RSD" - "Serbian Dinar"
     -->
     <currency
@@ -2135,7 +2148,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "RUB" - "Russian Rouble"
       RUR: 1998-01-1 "RUB" 1000; see bug #393185
     -->
@@ -2149,7 +2162,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "RWF" - "Rwanda Franc"
     -->
     <currency
@@ -2162,7 +2175,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="RF"
-        />
+    />
     <!-- "SAR" - "Saudi Riyal"
     -->
     <currency
@@ -2175,7 +2188,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="."
-        />
+    />
     <!-- "SBD" - "Solomon Islands Dollar"
     -->
     <currency
@@ -2188,7 +2201,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="SI$"
-        />
+    />
     <!-- "SCR" - "Seychelles Rupee"
     -->
     <currency
@@ -2201,7 +2214,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="SR"
-        />
+    />
     <!-- "SDD" - "Sudanese Dinar"
       2007-07-01 "SDG" 100, reunite with South
     -->
@@ -2215,7 +2228,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "SDG" - "Sudanese Pound"
     -->
     <currency
@@ -2228,7 +2241,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "SDP" - "Sudanese Pound"
       1992-01-01 "SDD" 10, but only in the North
     -->
@@ -2242,7 +2255,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "SEK" - "Swedish Krona"
     -->
     <currency
@@ -2255,7 +2268,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="kr"
-        />
+    />
     <!-- "SGD" - "Singapore Dollar"
     -->
     <currency
@@ -2268,7 +2281,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="S$"
-        />
+    />
     <!-- "SHP" - "Saint Helena Pound"
     -->
     <currency
@@ -2281,7 +2294,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "SIT" - "Slovenian Tolar"
       2007-01-01 "EUR" 239.640
     -->
@@ -2295,7 +2308,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "SKK" - "Slovak Koruna"
       2009-01-01 "EUR" 30.126
     -->
@@ -2309,7 +2322,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "SLL" - "Leone"
     -->
     <currency
@@ -2322,7 +2335,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Le"
-        />
+    />
     <!-- "SOS" - "Somali Shilling"
     -->
     <currency
@@ -2335,7 +2348,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="SoSh"
-        />
+    />
     <!-- "SRD" - "Surinam Dollar"
     -->
     <currency
@@ -2348,7 +2361,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="$"
-        />
+    />
     <!-- "SRG" - "Suriname Guilder"
       2004-01-01 "SRD" 1000
     -->
@@ -2362,7 +2375,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "STD" - "Dobra"
     -->
     <currency
@@ -2375,7 +2388,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Db"
-        />
+    />
     <!-- "SVC" - "El Salvador Colon"
       2001-01-01 "USD" 8.75
     -->
@@ -2389,7 +2402,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "SYP" - "Syrian Pound"
     -->
     <currency
@@ -2402,7 +2415,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "SZL" - "Lilangeni"
     -->
     <currency
@@ -2415,7 +2428,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="L"
-        />
+    />
     <!-- "THB" - "Baht"
     -->
     <currency
@@ -2428,7 +2441,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "TJR" - "Tajik Rouble"
       2002-11-01 "TJS" 1000
     -->
@@ -2442,7 +2455,7 @@
         parts-per-unit="1"
         smallest-fraction="1"
         local-symbol=""
-        />
+    />
     <!-- "TJS" - "Somoni"
     -->
     <currency
@@ -2455,7 +2468,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "TMM" - "Manat"
       2009-01-01 "TMT" 5000
     -->
@@ -2469,7 +2482,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "TMT" - "Manat"
     -->
     <currency
@@ -2482,7 +2495,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="m"
-        />
+    />
     <!-- "TND" - "Tunisian Dinar"
     -->
     <currency
@@ -2495,7 +2508,7 @@
         parts-per-unit="1000"
         smallest-fraction="1000"
         local-symbol="."
-        />
+    />
     <!-- "TOP" - "Pa'anga"
     -->
     <currency
@@ -2508,7 +2521,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="T$"
-        />
+    />
     <!-- "TRY" - "Turkish Lira"
     -->
     <currency
@@ -2521,7 +2534,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "TTD" - "Trinidad and Tobago Dollar"
     -->
     <currency
@@ -2534,7 +2547,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="TT$"
-        />
+    />
     <!-- "TWD" - "New Taiwan Dollar"
     -->
     <currency
@@ -2547,7 +2560,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="NT$"
-        />
+    />
     <!-- "TZS" - "Tanzanian Shilling"
     -->
     <currency
@@ -2560,7 +2573,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="/"
-        />
+    />
     <!-- "UAH" - "Hryvnia"
     -->
     <currency
@@ -2573,7 +2586,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "UGX" - "Uganda Shilling"
     -->
     <currency
@@ -2586,7 +2599,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="USh"
-        />
+    />
     <!-- "USD" - "US Dollar"
     -->
     <currency
@@ -2599,7 +2612,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="$"
-        />
+    />
     <!-- "USN" - "US Dollar (Next day)"
       funds code
     -->
@@ -2613,7 +2626,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="$n"
-        />
+    />
     <!-- "USS" - "US Dollar (Same day)"
       funds code
     -->
@@ -2627,7 +2640,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="$s"
-        />
+    />
     <!-- "UYI" - "Uruguay Peso en Unidades Indexadas"
     -->
     <currency
@@ -2640,7 +2653,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="UI"
-        />
+    />
     <!-- "UYU" - "Peso Uruguayo"
     -->
     <currency
@@ -2653,7 +2666,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="$U"
-        />
+    />
     <!-- "UZS" - "Uzbekistan Sum"
     -->
     <currency
@@ -2666,7 +2679,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="som"
-        />
+    />
     <!-- "VEB" - "Venezuela Bolvar"
       2008-01-01 "VEF" 1000
     -->
@@ -2680,7 +2693,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "VEF" - "Bolivar Fuerte"
     -->
     <currency
@@ -2693,7 +2706,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Bs."
-        />
+    />
     <!-- "VND" - "Dong"
     -->
     <currency
@@ -2706,7 +2719,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "VUV" - "Vatu"
     -->
     <currency
@@ -2719,7 +2732,7 @@
         parts-per-unit="1"
         smallest-fraction="1"
         local-symbol="Vt"
-        />
+    />
     <!-- "WST" - "Tala"
     -->
     <currency
@@ -2732,7 +2745,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="WS$"
-        />
+    />
     <!-- "YER" - "Yemeni Rial"
     -->
     <currency
@@ -2745,7 +2758,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Rl"
-        />
+    />
     <!-- "YUM" - "Yugoslavian Dinar"
       2003 replaced by RSD 1
     -->
@@ -2759,7 +2772,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "ZAR" - "Rand"
     -->
     <currency
@@ -2772,7 +2785,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="R"
-        />
+    />
     <!-- "ZMK" - "Kwacha (old)"
       replaced by ZMW from 2013-01-01 onwards
     -->
@@ -2786,7 +2799,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="ZK"
-        />
+    />
     <!-- "ZMW" - "Zambian Kwacha"
       replaced ZMK from 2013-01-01 onwards
     -->
@@ -2800,7 +2813,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="ZK"
-        />
+    />
     <!-- "ZWD" - "Zimbabwe Dollar"
       2006-08-01 "ZWN" 1000, 2008-08-01 "ZWR" 10000000000, 2009-02-01 "ZWD" 1000000000000
     -->
@@ -2814,7 +2827,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "ZWL" - "Zimbabwe Dollar"
       2009-04 suspended for at least 1 year
     -->
@@ -2828,7 +2841,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="Z.$"
-        />
+    />
 
     <!-- multinational -->
     <!-- "XAF" - "CFA Franc BEAC"
@@ -2844,7 +2857,7 @@
         parts-per-unit="1"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- XB* should be replaced by EUR, if I am right -->
     <!-- "XCD" - "East Caribbean Dollar"
       Organisation of Eastern Caribbean States
@@ -2859,7 +2872,7 @@
         parts-per-unit="100"
         smallest-fraction="100"
         local-symbol="EC$"
-        />
+    />
     <!-- "XDR" - "SDR"
       International Monetary Funds Special Drawing Rights
     -->
@@ -2873,7 +2886,7 @@
         parts-per-unit="1"
         smallest-fraction="1"
         local-symbol=""
-        />
+    />
     <!-- "XFO" - "Gold-Franc"
       Bank for International Settlements
     -->
@@ -2887,7 +2900,7 @@
         parts-per-unit="1"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "XFU" - "UIC-Franc"
       Union Internationale des Chemins de fer
     -->
@@ -2901,7 +2914,7 @@
         parts-per-unit="1"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "XOF" - "CFA Franc BCEAO"
       Banque Centrale des tats de l'Afrique de l'Ouest
     -->
@@ -2915,7 +2928,7 @@
         parts-per-unit="1"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "XPF" - "CFP Franc"
       Communaut Financire du Pacifique
     -->
@@ -2929,7 +2942,7 @@
         parts-per-unit="1"
         smallest-fraction="100"
         local-symbol=""
-        />
+    />
     <!-- "XTS" - "Code for testing purposes"
       Code reserved for testing purposes
     -->
@@ -2943,7 +2956,7 @@
         parts-per-unit="1"
         smallest-fraction="1000000"
         local-symbol=""
-        />
+    />
     <!-- "XXX" - "No currency"
     -->
     <currency
@@ -2956,7 +2969,7 @@
         parts-per-unit="1"
         smallest-fraction="1000000"
         local-symbol=""
-        />
+    />
 
     <!-- precious metals -->
     <!-- "XAG" - "Silver"
@@ -2971,7 +2984,7 @@
         parts-per-unit="1"
         smallest-fraction="1000000"
         local-symbol=""
-        />
+    />
     <!-- "XAU" - "Gold"
     -->
     <currency
@@ -2984,7 +2997,7 @@
         parts-per-unit="1"
         smallest-fraction="1000000"
         local-symbol=""
-        />
+    />
     <!-- "XPD" - "Palladium"
     -->
     <currency
@@ -2997,7 +3010,7 @@
         parts-per-unit="1"
         smallest-fraction="1000000"
         local-symbol=""
-        />
+    />
     <!-- "XPT" - "Platinum"
     -->
     <currency
@@ -3010,5 +3023,5 @@
         parts-per-unit="1"
         smallest-fraction="1000000"
         local-symbol=""
-        />
-</currencylist>
\ No newline at end of file
+    />
+</currencylist>
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
index fffdaecc..55e4855d 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/BooksDbAdapterTest.java
@@ -16,8 +16,12 @@
 package org.gnucash.android.test.unit.db;
 
 import org.gnucash.android.BuildConfig;
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
+import org.gnucash.android.importer.GncXmlImporter;
 import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.Book;
 import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
@@ -27,6 +31,12 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
+import org.xml.sax.SAXException;
+
+import java.io.File;
+import java.io.IOException;
+
+import javax.xml.parsers.ParserConfigurationException;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -110,6 +120,23 @@ public void testGeneratedDisplayName(){
     }
 
     /**
+     * Test that deleting a book record also deletes the book database
+     */
+    @Test
+    public void deletingBook_shouldDeleteDbFile(){
+        String bookUID = createNewBookWithDefaultAccounts();
+        File dbPath = GnuCashApplication.getAppContext().getDatabasePath(bookUID);
+        assertThat(dbPath).exists();
+        BooksDbAdapter booksDbAdapter = BooksDbAdapter.getInstance();
+        assertThat(booksDbAdapter.getRecord(bookUID)).isNotNull();
+
+        long booksCount = booksDbAdapter.getRecordsCount();
+        booksDbAdapter.deleteBook(bookUID);
+        assertThat(dbPath).doesNotExist();
+        assertThat(booksDbAdapter.getRecordsCount()).isEqualTo(booksCount - 1);
+    }
+
+    /**
      * Test that book names never conflict and that the ordinal attached to the book name is
      * increased irrespective of the order in which books are added to and deleted from the db
      */
@@ -132,4 +159,18 @@ public void testGeneratedDisplayNames_shouldBeUnique(){
         assertThat(generatedName).isNotEqualTo(book3.getDisplayName());
         assertThat(generatedName).isEqualTo("Book 4");
     }
+
+    /**
+     * Creates a new database with default accounts
+     * @return The book UID for the new database
+     * @throws RuntimeException if the new books could not be created
+     */
+    private String createNewBookWithDefaultAccounts(){
+        try {
+            return GncXmlImporter.parse(GnuCashApplication.getAppContext().getResources().openRawResource(R.raw.default_accounts));
+        } catch (ParserConfigurationException | SAXException | IOException e) {
+            e.printStackTrace();
+            throw new RuntimeException("Could not create default accounts");
+        }
+    }
 }

From 9b531e55a5ad2f5e914ebbe45f7a563ebecb7a1e Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 17 Aug 2016 23:20:53 +0200
Subject: [PATCH 108/121] Display book statistics in Book list (BookManager)

Fix: crash when switching books due to refresh of non-attached fragment
Fix warning string when creating default accounts to say existing accounts will not be deleted
---
 .../android/ui/account/AccountsActivity.java        |  5 ++++-
 .../android/ui/account/AccountsListFragment.java    |  4 +---
 .../android/ui/settings/BookManagerFragment.java    | 21 ++++++++++++++++++++-
 app/src/main/res/values/strings.xml                 | 12 +++++++++++-
 4 files changed, 36 insertions(+), 6 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index f32dfe62..0591ccc2 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -350,7 +350,10 @@ protected void onNewIntent(Intent intent) {
         setIntent(intent);
         setCurrentTab();
 
-        getCurrentAccountListFragment().refresh();
+        int index = mViewPager.getCurrentItem();
+        Fragment fragment = (Fragment) mFragmentPageReferenceMap.get(index);
+        if (fragment != null)
+            ((Refreshable)fragment).refresh();
 
         handleOpenFileIntent(intent);
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 6004729e..9a4b0a9d 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -303,9 +303,7 @@ public void refresh(String parentAccountUID) {
      */
     @Override
     public void refresh() {
-        if (!isDetached()) {
-            getLoaderManager().restartLoader(0, null, this);
-        }
+        getLoaderManager().restartLoader(0, null, this);
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
index 0b9d4c4b..6d7e391a 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
@@ -19,6 +19,7 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v4.app.ListFragment;
@@ -43,8 +44,12 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseCursorLoader;
+import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.DatabaseSchema.BookEntry;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.Refreshable;
 import org.gnucash.android.util.PreferencesHelper;
@@ -159,8 +164,22 @@ public void bindView(View view, final Context context, Cursor cursor) {
 
             TextView labelLastSync = (TextView) view.findViewById(R.id.label_last_sync);
             labelLastSync.setText(R.string.label_last_export_time);
-            ImageView optionsMenu = (ImageView) view.findViewById(R.id.options_menu);
 
+            //retrieve some book statistics
+            DatabaseHelper dbHelper = new DatabaseHelper(GnuCashApplication.getAppContext(), bookUID);
+            SQLiteDatabase db = dbHelper.getReadableDatabase();
+            TransactionsDbAdapter trnAdapter = new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
+            int transactionCount = (int) trnAdapter.getRecordsCount();
+            String transactionStats = getResources().getQuantityString(R.plurals.book_transaction_stats, transactionCount, transactionCount);
+
+            AccountsDbAdapter accountsDbAdapter = new AccountsDbAdapter(db, trnAdapter);
+            int accountsCount = (int) accountsDbAdapter.getRecordsCount();
+            String accountStats = getResources().getQuantityString(R.plurals.book_account_stats, accountsCount, accountsCount);
+            String stats = accountStats + ", " + transactionStats;
+            TextView statsText = (TextView) view.findViewById(R.id.secondary_text);
+            statsText.setText(stats);
+
+            ImageView optionsMenu = (ImageView) view.findViewById(R.id.options_menu);
             optionsMenu.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 91f67153..2d3a874a 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -215,7 +215,7 @@
     <string name="title_all_accounts">All</string>
     <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
     <string name="title_create_default_accounts">Create default accounts</string>
-    <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+    <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
     <string name="menu_scheduled_transactions">Scheduled Transactions</string>
     <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -457,4 +457,14 @@
     <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
     <string name="label_split_count">%1$d splits</string>
     <string name="label_inside_account_with_name">in %1$s</string>
+
+    <plurals name="book_account_stats">
+        <item quantity="one">%d account</item>
+        <item quantity="other">%d accounts</item>
+    </plurals>
+
+    <plurals name="book_transaction_stats">
+        <item quantity="one">%d transaction</item>
+        <item quantity="other">%d transactions</item>
+    </plurals>
 </resources>

From bc9159cf9f800fcd4c1ff895c6a7ab732ec16091 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 17 Aug 2016 23:23:20 +0200
Subject: [PATCH 109/121] Update version string for v2.1.0-beta4 release

---
 app/build.gradle | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/build.gradle b/app/build.gradle
index a4b052d4..a764cb1a 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -7,7 +7,7 @@ apply plugin: 'io.fabric'
 def versionMajor = 2
 def versionMinor = 1
 def versionPatch = 0
-def versionBuild = 3
+def versionBuild = 4
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")

From 92a5a82173329b2bedfeffd88c06fbb8aa2d28be Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 18 Aug 2016 22:24:03 +0200
Subject: [PATCH 110/121] Fix crash when opening custom date range - fixes #532

---
 .../main/java/org/gnucash/android/ui/report/ReportsActivity.java   | 7 +++++--
 scripts/adb_all.sh                                                 | 0
 2 files changed, 5 insertions(+), 2 deletions(-)
 mode change 100644 => 100755 scripts/adb_all.sh

diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index 59e4a72c..f9f09d8d 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -162,8 +162,11 @@ public void onNothingSelected(AdapterView<?> adapterView) {
     @Override
     public void onAttachFragment(Fragment fragment) {
         super.onAttachFragment(fragment);
-        BaseReportFragment reportFragment = (BaseReportFragment)fragment;
-        updateReportTypeSpinner(reportFragment.getReportType(), getString(reportFragment.getTitle()));
+
+        if (fragment instanceof BaseReportFragment) {
+            BaseReportFragment reportFragment = (BaseReportFragment)fragment;
+            updateReportTypeSpinner(reportFragment.getReportType(), getString(reportFragment.getTitle()));
+        }
     }
 
     /**
diff --git a/scripts/adb_all.sh b/scripts/adb_all.sh
old mode 100644
new mode 100755

From f4251fa71bfcb5cf55df919163e591668cda0bf2 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 19 Aug 2016 12:55:40 +0200
Subject: [PATCH 111/121] Extract hardcoded strings

Recurrence repeat strings
Various export notification strings
---
 .../org/gnucash/android/export/ExportAsyncTask.java     |  2 +-
 .../main/java/org/gnucash/android/model/Recurrence.java | 13 +++++++++----
 .../java/org/gnucash/android/model/ScheduledAction.java | 15 +++++++--------
 .../org/gnucash/android/ui/report/ReportsActivity.java  | 16 +++++++++++-----
 .../android/ui/settings/BackupPreferenceFragment.java   |  4 ++--
 .../android/ui/transaction/TransactionFormFragment.java |  4 ++--
 app/src/main/res/layout/fragment_export_form.xml        |  4 ++--
 app/src/main/res/values/strings.xml                     | 17 +++++++++++++++++
 app/src/main/res/xml/preference_fragment_headers.xml    |  2 +-
 9 files changed, 52 insertions(+), 25 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index c9d8f9ba..c6284887 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -244,7 +244,7 @@ protected void onPostExecute(Boolean exportResult) {
                                 "ownCloud sync not enabled";
                         break;
                     default:
-                        targetLocation = "external service";
+                        targetLocation = mContext.getString(R.string.label_export_target_external_service);
                 }
                 Toast.makeText(mContext,
                         String.format(mContext.getString(R.string.toast_exported_to), targetLocation),
diff --git a/app/src/main/java/org/gnucash/android/model/Recurrence.java b/app/src/main/java/org/gnucash/android/model/Recurrence.java
index 79ee1b37..c6340159 100644
--- a/app/src/main/java/org/gnucash/android/model/Recurrence.java
+++ b/app/src/main/java/org/gnucash/android/model/Recurrence.java
@@ -16,8 +16,11 @@
 
 package org.gnucash.android.model;
 
+import android.content.Context;
 import android.support.annotation.NonNull;
 
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.ui.util.RecurrenceParser;
 import org.joda.time.Days;
 import org.joda.time.LocalDate;
@@ -124,16 +127,18 @@ public long getPeriod(){
      * @return String description of repeat schedule
      */
     public String getRepeatString(){
-        String dayOfWeek = new SimpleDateFormat("EEEE", Locale.US).format(new Date(mPeriodStart.getTime()));
-
         StringBuilder repeatBuilder = new StringBuilder(mPeriodType.getFrequencyRepeatString());
+        Context context = GnuCashApplication.getAppContext();
 
+        String dayOfWeek = new SimpleDateFormat("EEEE", GnuCashApplication.getDefaultLocale())
+                .format(new Date(mPeriodStart.getTime()));
         if (mPeriodType == PeriodType.WEEK) {
-            repeatBuilder.append(" on ").append(dayOfWeek);
+            repeatBuilder.append(" ").append(context.getString(R.string.repeat_on_weekday, dayOfWeek));
         }
 
         if (mPeriodEnd != null){
-            repeatBuilder.append(" until " + SimpleDateFormat.getDateInstance().format(new Date(mPeriodEnd.getTime())));
+            String endDateString = SimpleDateFormat.getDateInstance().format(new Date(mPeriodEnd.getTime()));
+            repeatBuilder.append(", ").append(context.getString(R.string.repeat_until_date, endDateString));
         }
         return repeatBuilder.toString();
     }
diff --git a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
index e44d89f9..f7279af5 100644
--- a/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
+++ b/app/src/main/java/org/gnucash/android/model/ScheduledAction.java
@@ -15,8 +15,11 @@
  */
 package org.gnucash.android.model;
 
+import android.content.Context;
 import android.support.annotation.NonNull;
 
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.joda.time.DateTime;
 import org.joda.time.LocalDate;
 import org.joda.time.LocalDateTime;
@@ -423,15 +426,11 @@ public void setTemplateAccountUID(String templateAccountUID) {
      */
     public String getRepeatString(){
         StringBuilder ruleBuilder = new StringBuilder(mRecurrence.getRepeatString());
-
-        if (mEndDate > 0){
-            ruleBuilder.append(", ");
-            ruleBuilder.append(" until ")
-                    .append(SimpleDateFormat.getDateInstance(DateFormat.SHORT).format(new Date(mEndDate)));
-        } else if (mTotalFrequency > 0){
-            ruleBuilder.append(", ");
-            ruleBuilder.append(" for ").append(mTotalFrequency).append(" times");
+        Context context = GnuCashApplication.getAppContext();
+        if (mEndDate <= 0 && mTotalFrequency > 0){
+            ruleBuilder.append(", ").append(context.getString(R.string.repeat_x_times, mTotalFrequency));
         }
+
         return ruleBuilder.toString();
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
index f9f09d8d..1b72ed8f 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportsActivity.java
@@ -134,15 +134,21 @@ protected void onCreate(Bundle savedInstanceState) {
         mTimeRangeSpinner.setOnItemSelectedListener(this);
         mTimeRangeSpinner.setSelection(1);
 
-        ArrayAdapter<AccountType> dataAdapter = new ArrayAdapter<>(this,
-                android.R.layout.simple_spinner_item,
-                Arrays.asList(AccountType.EXPENSE, AccountType.INCOME));
+        ArrayAdapter<CharSequence> dataAdapter = ArrayAdapter.createFromResource(this,
+                R.array.report_account_types, android.R.layout.simple_spinner_item);
         dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
         mAccountTypeSpinner.setAdapter(dataAdapter);
         mAccountTypeSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
             @Override
-            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
-                mAccountType = (AccountType) mAccountTypeSpinner.getSelectedItem();
+            public void onItemSelected(AdapterView<?> adapterView, View view, int position, long id) {
+                switch(position) {
+                    default:
+                    case 0:
+                        mAccountType = AccountType.EXPENSE;
+                        break;
+                    case 1:
+                        mAccountType = AccountType.INCOME;
+                }
                 updateAccountTypeOnFragments();
             }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
index c522c180..94754584 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
@@ -318,7 +318,7 @@ public void onResult(DriveFolder.DriveFolderResult result) {
 							});
 
 						}
-						Toast.makeText(context, "Connected to Google Drive", Toast.LENGTH_SHORT).show();
+						Toast.makeText(context, R.string.toast_connected_to_google_drive, Toast.LENGTH_SHORT).show();
 					}
 
 					@Override
@@ -336,7 +336,7 @@ public void onConnectionFailed(ConnectionResult connectionResult) {
 								connectionResult.startResolutionForResult((Activity) context, REQUEST_RESOLVE_CONNECTION);
 							} catch (IntentSender.SendIntentException e) {
 								Log.e(BackupPreferenceFragment.class.getName(), e.getMessage());
-								Toast.makeText(context, "Unable to link to Google Drive", Toast.LENGTH_LONG).show();
+								Toast.makeText(context, R.string.toast_unable_to_connect_to_google_drive, Toast.LENGTH_LONG).show();
 							}
 						} else {
 							if (context instanceof Activity)
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index d1ed70f9..aa4a77b2 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -590,7 +590,7 @@ private void updateTransferAccountsList(){
      */
     private void openSplitEditor(){
         if (mAmountEditText.getValue() == null){
-            Toast.makeText(getActivity(), "Please enter an amount to split", Toast.LENGTH_SHORT).show();
+            Toast.makeText(getActivity(), R.string.toast_enter_amount_to_split, Toast.LENGTH_SHORT).show();
             return;
         }
 
@@ -876,7 +876,7 @@ private void scheduleRecurringTransaction(String transactionUID) {
             } else {
                 scheduledAction.setUID(scheduledActionUID);
                 scheduledActionDbAdapter.updateRecurrenceAttributes(scheduledAction);
-                Toast.makeText(getActivity(), "Updated transaction schedule", Toast.LENGTH_SHORT).show();
+                Toast.makeText(getActivity(), R.string.toast_updated_transaction_recurring_schedule, Toast.LENGTH_SHORT).show();
             }
         } else {
             if (recurrence != null) {
diff --git a/app/src/main/res/layout/fragment_export_form.xml b/app/src/main/res/layout/fragment_export_form.xml
index 0d2944c3..3fd08427 100644
--- a/app/src/main/res/layout/fragment_export_form.xml
+++ b/app/src/main/res/layout/fragment_export_form.xml
@@ -99,7 +99,7 @@
         android:orientation="horizontal">
         <TextView
             android:id="@+id/label_export_date"
-            android:text="Since"
+            android:text="@string/label_export_transactions_since_date"
             android:gravity="center_vertical"
             android:layout_marginLeft="8dp"
             android:layout_marginRight="8dp"
@@ -127,7 +127,7 @@
             android:clickable="true"/>
         <android.support.v7.widget.SwitchCompat
             android:id="@+id/switch_export_all"
-            android:text="All time"
+            android:text="@string/switch_export_transactions_from_all_time"
             android:paddingLeft="5dp"
             android:paddingRight="5dp"
             android:layout_marginLeft="5dp"
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 2d3a874a..47ead7fc 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -467,4 +467,21 @@
         <item quantity="one">%d transaction</item>
         <item quantity="other">%d transactions</item>
     </plurals>
+    
+    <string-array name="report_account_types">
+        <item>EXPENSE</item>
+        <item>INCOME</item>
+    </string-array>
+
+    <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+    <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+    <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+    <string name="label_export_target_external_service">external service</string>
+    <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+    <string name="label_export_transactions_since_date">Since</string>
+    <string name="switch_export_transactions_from_all_time">All time</string>
+    <string name="label_recommend_app">Recommend in Play Store</string>
+    <string name="repeat_until_date">until %1$s</string>
+    <string name="repeat_on_weekday">on %1$s</string>
+    <string name="repeat_x_times">for %1$s times</string>
 </resources>
diff --git a/app/src/main/res/xml/preference_fragment_headers.xml b/app/src/main/res/xml/preference_fragment_headers.xml
index 2b53f6d0..ea9442ac 100644
--- a/app/src/main/res/xml/preference_fragment_headers.xml
+++ b/app/src/main/res/xml/preference_fragment_headers.xml
@@ -30,7 +30,7 @@
         android:title="@string/header_backup_and_export_settings" />
     <Preference app:fragment="org.gnucash.android.ui.settings.AboutPreferenceFragment"
         android:title="@string/header_about_gnucash" />
-    <Preference android:title="Rate in Play Store">
+    <Preference android:title="@string/label_recommend_app">
         <intent android:action="android.intent.action.VIEW"
             android:data="market://details?id=org.gnucash.android" />
     </Preference>

From fcea711be6bf3ed9eef5a8954a2dff463642dd0b Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 19 Aug 2016 13:11:56 +0200
Subject: [PATCH 112/121] Extract string resource

---
 app/src/main/res/menu/transactions_list_actions.xml | 2 +-
 app/src/main/res/values/strings.xml                 | 1 +
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/app/src/main/res/menu/transactions_list_actions.xml b/app/src/main/res/menu/transactions_list_actions.xml
index b52c7933..6d22e80d 100644
--- a/app/src/main/res/menu/transactions_list_actions.xml
+++ b/app/src/main/res/menu/transactions_list_actions.xml
@@ -28,7 +28,7 @@
           app:showAsAction="never|withText" />
     <item android:id="@+id/menu_compact_trn_view"
           android:icon="@drawable/content_edit_holo_dark"
-          android:title="Compact View"
+          android:title="@string/menu_show_compact_view"
           android:checkable="true"
           app:showAsAction="never|withText" />
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 47ead7fc..011323aa 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -484,4 +484,5 @@
     <string name="repeat_until_date">until %1$s</string>
     <string name="repeat_on_weekday">on %1$s</string>
     <string name="repeat_x_times">for %1$s times</string>
+    <string name="menu_show_compact_view">Compact View</string>
 </resources>

From 19f02a4c28c6ad2232721aaf0b6866cc769e2f4a Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 19 Aug 2016 13:25:22 +0200
Subject: [PATCH 113/121] Fix failing tests

---
 .../android/test/unit/db/ScheduledActionDbAdapterTest.java        | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
index 51f5c7ff..0a513db6 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/ScheduledActionDbAdapterTest.java
@@ -1,6 +1,10 @@
 package org.gnucash.android.test.unit.db;
 
+import android.content.res.Resources;
+
 import org.gnucash.android.BuildConfig;
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.PeriodType;
@@ -64,8 +68,10 @@ public void testGenerateRepeatString(){
         periodType.setMultiplier(2);
         scheduledAction.setRecurrence(new Recurrence(periodType));
         scheduledAction.setTotalPlannedExecutionCount(4);
+        Resources res = GnuCashApplication.getAppContext().getResources();
+        String repeatString = res.getQuantityString(R.plurals.label_every_x_months, 2, 2) + ", " +
+                res.getString(R.string.repeat_x_times, 4);
 
-        String repeatString = "Every 2 months,  for 4 times";
         assertThat(scheduledAction.getRepeatString().trim()).isEqualTo(repeatString);
 
     }

From e5daf4bf0b3fc7ab2897a06b87fed8366b2db353 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 25 Aug 2016 09:58:39 +0200
Subject: [PATCH 114/121] Fixes #553 - Crash when adding a widget to the
 homescreen Closes #551 - Adds the book name to the export file name

Make the Exporter work on specific databases, and not only use the currently active databased. This fixes a bug where the only the default database is exported by the ScheduledActionsService, which leads to the wrong data being exported when handling scheduled actions from other books.
Update unit tests - fix some Recurrence tests
Implement #toString() for Commodity
---
 .../android/test/ui/ExportTransactionsTest.java    |  2 +-
 .../org/gnucash/android/test/ui/MultiBookTest.java |  1 +
 .../org/gnucash/android/db/MigrationHelper.java    |  1 +
 .../gnucash/android/db/adapter/BooksDbAdapter.java | 19 +-------
 .../gnucash/android/export/ExportAsyncTask.java    | 10 ++--
 .../java/org/gnucash/android/export/Exporter.java  | 54 +++++++++++++++++-----
 .../gnucash/android/export/ofx/OfxExporter.java    | 11 +++++
 .../gnucash/android/export/qif/QifExporter.java    | 17 ++++++-
 .../gnucash/android/export/xml/GncXmlExporter.java | 18 +++++---
 .../java/org/gnucash/android/model/Commodity.java  |  9 ++++
 .../java/org/gnucash/android/model/Recurrence.java | 25 +++++-----
 .../android/service/ScheduledActionService.java    |  3 ++
 .../ui/homescreen/WidgetConfigurationActivity.java |  2 +
 .../ui/settings/BackupPreferenceFragment.java      |  5 +-
 .../test/unit/db/AccountsDbAdapterTest.java        | 14 +++---
 .../android/test/unit/model/RecurrenceTest.java    | 27 ++++++-----
 .../unit/service/ScheduledActionServiceTest.java   |  3 +-
 17 files changed, 140 insertions(+), 81 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index 47b67dc8..ed52133e 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -200,7 +200,7 @@ public void testExport(ExportFormat format){
 			}
 		}
 
-		File folder = new File(Exporter.getExportFolderPath());
+		File folder = new File(Exporter.getExportFolderPath(BooksDbAdapter.getInstance().getActiveBookUID()));
 		folder.mkdirs();
 		assertThat(folder).exists();
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
index 86e19576..02809a01 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/MultiBookTest.java
@@ -101,6 +101,7 @@ public void creatingNewAccounts_shouldCreatedNewBook(){
 
         assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(booksCount+1);
 
+        //// TODO: 25.08.2016 Delete all books before the start of this test
         Book activeBook = mBooksDbAdapter.getRecord(mBooksDbAdapter.getActiveBookUID());
         assertThat(activeBook.getDisplayName()).isEqualTo("Book " + (booksCount+1));
     }
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index 9bbc01f6..fa9519eb 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -1438,6 +1438,7 @@ static int upgradeDbToVersion13(SQLiteDatabase db){
             db.endTransaction();
         }
 
+        //TODO: Move old files from old export folders into new book-specific export folders
 
         //Migrate book-specific preferences away from shared preferences
         Log.d(LOG_TAG, "Migrating shared preferences into book preferences");
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
index 75b763ca..799f4ea3 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
@@ -124,23 +124,6 @@ public boolean isActive(String bookUID){
     }
 
     /**
-     * Returns the root account GUID of the current active book
-     * @return GUID of the root account
-     */
-    public @NonNull String getActiveRootAccountUID(){
-        Cursor cursor = mDb.query(mTableName, new String[]{BookEntry.COLUMN_ROOT_GUID},
-                BookEntry.COLUMN_ACTIVE + "= 1", null, null, null, null, "1");
-        try{
-            if (cursor.moveToFirst()){
-                return cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_ROOT_GUID));
-            }
-        } finally {
-            cursor.close();
-        }
-        return null;
-    }
-
-    /**
      * Returns the GUID of the current active book
      * @return GUID of the active book
      */
@@ -149,7 +132,7 @@ public boolean isActive(String bookUID){
                 BookEntry.COLUMN_ACTIVE + "= 1", null, null, null, null, "1");
         try{
             if (cursor.getCount() == 0)
-                throw new RuntimeException("There is no active book in the app. This should NEVER happen!");
+                throw new RuntimeException("There is no active book in the app. This should NEVER happen, fix your bugs!");
             cursor.moveToFirst();
             return cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_UID));
         } finally {
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index c6284887..cf762681 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -145,16 +145,16 @@ protected Boolean doInBackground(ExportParams... params) {
 
         switch (mExportParams.getExportFormat()) {
                 case QIF:
-                    mExporter = new QifExporter(mExportParams);
+                    mExporter = new QifExporter(mExportParams, mDb);
                     break;
 
                 case OFX:
-                    mExporter = new OfxExporter(mExportParams);
+                    mExporter = new OfxExporter(mExportParams, mDb);
                     break;
 
                 case XML:
                 default:
-                    mExporter = new GncXmlExporter(mExportParams);
+                    mExporter = new GncXmlExporter(mExportParams, mDb);
                     break;
         }
 
@@ -414,11 +414,11 @@ private void moveExportToOwnCloud() {
      */
     private List<String> moveExportToSDCard() {
         Log.i(TAG, "Moving exported file to external storage");
-        new File(Exporter.getExportFolderPath());
+        new File(Exporter.getExportFolderPath(mExporter.mBookUID));
         List<String> dstFiles = new ArrayList<>();
 
         for (String src: mExportedFiles) {
-            String dst = Exporter.getExportFolderPath() + stripPathPart(src);
+            String dst = Exporter.getExportFolderPath(mExporter.mBookUID) + stripPathPart(src);
             try {
                 moveFile(src, dst);
                 dstFiles.add(dst);
diff --git a/app/src/main/java/org/gnucash/android/export/Exporter.java b/app/src/main/java/org/gnucash/android/export/Exporter.java
index 34c26f7b..88afbaba 100644
--- a/app/src/main/java/org/gnucash/android/export/Exporter.java
+++ b/app/src/main/java/org/gnucash/android/export/Exporter.java
@@ -27,6 +27,7 @@
 
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;
@@ -37,6 +38,7 @@
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
 import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
+import org.gnucash.android.model.Book;
 
 import java.io.File;
 import java.text.ParseException;
@@ -93,6 +95,16 @@
     protected final Context mContext;
     private String mExportCacheFilePath;
 
+    /**
+     * Database being currently exported
+     */
+    protected final SQLiteDatabase mDb;
+
+    /**
+     * GUID of the book being exported
+     */
+    protected String mBookUID;
+
     public Exporter(ExportParams params, SQLiteDatabase db) {
         this.mExportParams = params;
         mContext = GnuCashApplication.getAppContext();
@@ -104,8 +116,9 @@ public Exporter(ExportParams params, SQLiteDatabase db) {
             mCommoditiesDbAdapter   = CommoditiesDbAdapter.getInstance();
             mBudgetsDbAdapter       = BudgetsDbAdapter.getInstance();
             mScheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
-
+            mDb = GnuCashApplication.getActiveDb();
         } else {
+            mDb = db;
             mSplitsDbAdapter        = new SplitsDbAdapter(db);
             mTransactionsDbAdapter  = new TransactionsDbAdapter(db, mSplitsDbAdapter);
             mAccountsDbAdapter      = new AccountsDbAdapter(db, mTransactionsDbAdapter);
@@ -116,6 +129,7 @@ public Exporter(ExportParams params, SQLiteDatabase db) {
             mScheduledActionDbAdapter = new ScheduledActionDbAdapter(db, recurrenceDbAdapter);
         }
 
+        mBookUID = new File(mDb.getPath()).getName(); //this depends on the database file always having the name of the book GUID
         mExportCacheFilePath = null;
         mCacheDir = new File(mContext.getCacheDir(), params.getExportFormat().name());
         mCacheDir.mkdir();
@@ -123,17 +137,29 @@ public Exporter(ExportParams params, SQLiteDatabase db) {
     }
 
     /**
+     * Strings a string of any characters not allowed in a file name.
+     * All unallowed characters are replaced with an underscore
+     * @param inputName Raw file name input
+     * @return Sanitized file name
+     */
+    public static String sanitizeFilename(String inputName) {
+        return inputName.replaceAll("[^a-zA-Z0-9-_\\.]", "_");
+    }
+
+    /**
      * Builds a file name based on the current time stamp for the exported file
+     * @param format Format to use when exporting
+     * @param bookName Name of the book being exported. This name will be included in the generated file name
      * @return String containing the file name
      */
-    public static String buildExportFilename(ExportFormat format) {
+    public static String buildExportFilename(ExportFormat format, String bookName) {
         return EXPORT_FILENAME_DATE_FORMAT.format(new Date(System.currentTimeMillis()))
-                + "_gnucash_export" + format.getExtension();
+                + "_gnucash_export_" + sanitizeFilename(bookName) + format.getExtension();
     }
 
     /**
      * Parses the name of an export file and returns the date of export
-     * @param filename Export file name generated by {@link #buildExportFilename(ExportFormat)}
+     * @param filename Export file name generated by {@link #buildExportFilename(ExportFormat,String)}
      * @return Date in milliseconds
      */
     public static long getExportTime(String filename){
@@ -184,19 +210,21 @@ protected String getExportCacheFilePath(){
             String cachePath = mCacheDir.getAbsolutePath();
             if (!cachePath.endsWith("/"))
                 cachePath += "/";
-            mExportCacheFilePath = cachePath + buildExportFilename(mExportParams.getExportFormat());
+            String bookName = BooksDbAdapter.getInstance().getAttribute(mBookUID, DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME);
+            mExportCacheFilePath = cachePath + buildExportFilename(mExportParams.getExportFormat(), bookName);
         }
 
         return mExportCacheFilePath;
     }
 
     /**
-     * Returns that path to the export folder for the currently active book.
+     * Returns that path to the export folder for the book with GUID {@code bookUID}.
      * This is the folder where exports like QIF and OFX will be saved for access by external programs
+     * @param bookUID GUID of the book being exported. Each book has its own export path
      * @return Absolute path to export folder for active book
      */
-    public static String getExportFolderPath(){
-        String path = BASE_FOLDER_PATH + "/" + BooksDbAdapter.getInstance().getActiveBookUID() + "/exports/";
+    public static String getExportFolderPath(String bookUID){
+        String path = BASE_FOLDER_PATH + "/" + bookUID + "/exports/";
         File file = new File(path);
         if (!file.exists())
             file.mkdirs();
@@ -204,11 +232,13 @@ public static String getExportFolderPath(){
     }
 
     /**
-     * Returns the path to the backups folder for the currently active book
-     * @return Absolute path to backup folder for active book
+     * Returns the path to the backups folder for the book with GUID {@code bookUID}
+     * Each book has its own backup path
+     *
+     * @return Absolute path to backup folder for the book
      */
-    public static String getBackupFolderPath(){
-        String path = BASE_FOLDER_PATH + "/" + BooksDbAdapter.getInstance().getActiveBookUID() + "/backups/";
+    public static String getBackupFolderPath(String bookUID){
+        String path = BASE_FOLDER_PATH + "/" + bookUID + "/backups/";
         File file = new File(path);
         if (!file.exists())
             file.mkdirs();
diff --git a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
index 367d0549..c7babfdb 100644
--- a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
@@ -17,6 +17,7 @@
 
 package org.gnucash.android.export.ofx;
 
+import android.database.sqlite.SQLiteDatabase;
 import android.preference.PreferenceManager;
 import android.util.Log;
 
@@ -77,6 +78,16 @@ public OfxExporter(ExportParams params) {
 	}
 
     /**
+     * Overloaded constructor. Initializes the export parameters and the database to export
+     * @param params Export options
+     * @param db SQLiteDatabase to export
+     */
+    public OfxExporter(ExportParams params, SQLiteDatabase db){
+        super(params, db);
+        LOG_TAG = "OfxExporter";
+    }
+
+    /**
 	 * Converts all expenses into OFX XML format and adds them to the XML document
 	 * @param doc DOM document of the OFX expenses.
 	 * @param parent Parent node for all expenses in report
diff --git a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
index 6bbea48a..7b25d0cb 100644
--- a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
@@ -18,6 +18,7 @@
 
 import android.content.ContentValues;
 import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
 
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
@@ -50,9 +51,23 @@
  * @author Yongxin Wang <fefe.wyx@gmail.com>
  */
 public class QifExporter extends Exporter{
+    /**
+     * Initialize the exporter
+     * @param params Export options
+     */
     public QifExporter(ExportParams params){
         super(params, null);
-        LOG_TAG = "QifExporter";
+        LOG_TAG = "OfxExporter";
+    }
+
+    /**
+     * Initialize the exporter
+     * @param params Options for export
+     * @param db SQLiteDatabase to export
+     */
+    public QifExporter(ExportParams params, SQLiteDatabase db){
+        super(params, db);
+        LOG_TAG = "OfxExporter";
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index cd3cc5ef..7a3105ab 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -23,6 +23,8 @@
 
 import com.crashlytics.android.Crashlytics;
 
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.RecurrenceDbAdapter;
@@ -33,6 +35,7 @@
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.BaseModel;
+import org.gnucash.android.model.Book;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Budget;
 import org.gnucash.android.model.BudgetAmount;
@@ -900,12 +903,13 @@ public String getExportMimeType(){
     }
 
     /**
-     * Creates a backup of current database contents to the directory {@link Exporter#getBackupFolderPath()}
+     * Creates a backup of current database contents to the directory {@link Exporter#getBackupFolderPath(String)}
      * @return {@code true} if backup was successful, {@code false} otherwise
      */
     public static boolean createBackup(){
         try {
-            FileOutputStream fileOutputStream = new FileOutputStream(getBackupFilePath());
+            String bookUID = BooksDbAdapter.getInstance().getActiveBookUID();
+            FileOutputStream fileOutputStream = new FileOutputStream(getBackupFilePath(bookUID));
             BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(fileOutputStream);
             GZIPOutputStream gzipOutputStream = new GZIPOutputStream(bufferedOutputStream);
             OutputStreamWriter writer = new OutputStreamWriter(gzipOutputStream);
@@ -922,12 +926,14 @@ public static boolean createBackup(){
     }
 
     /**
-     * Returns the full path of a file to make database backup.
+     * Returns the full path of a file to make database backup of the specified book
      * Backups are done in XML format and are zipped (with ".zip" extension).
+     * @param bookUID GUID of the book
      * @return the file path for backups of the database.
-     * @see #getBackupFolderPath()
+     * @see #getBackupFolderPath(String)
      */
-    private static String getBackupFilePath(){
-        return Exporter.getBackupFolderPath() + buildExportFilename(ExportFormat.XML) + ".zip";
+    private static String getBackupFilePath(String bookUID){
+        Book book = BooksDbAdapter.getInstance().getRecord(bookUID);
+        return Exporter.getBackupFolderPath(book.getUID()) + buildExportFilename(ExportFormat.XML, book.getDisplayName()) + ".zip";
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/model/Commodity.java b/app/src/main/java/org/gnucash/android/model/Commodity.java
index fb2d7ac2..7fa13698 100644
--- a/app/src/main/java/org/gnucash/android/model/Commodity.java
+++ b/app/src/main/java/org/gnucash/android/model/Commodity.java
@@ -190,6 +190,15 @@ public void setQuoteFlag(int quoteFlag) {
         this.mQuoteFlag = quoteFlag;
     }
 
+    @Override
+    /**
+     * Returns the full name of the currency, or the currency code if there is no full name
+     * @return String representation of the commodity
+     */
+    public String toString() {
+        return mFullname == null || mFullname.isEmpty() ? mMnemonic : mFullname;
+    }
+
     /**
      * Overrides {@link BaseModel#equals(Object)} to compare only the currency codes of the commodity.
      * <p>Two commodities are considered equal if they have the same currency code</p>
diff --git a/app/src/main/java/org/gnucash/android/model/Recurrence.java b/app/src/main/java/org/gnucash/android/model/Recurrence.java
index c6340159..2b1c4169 100644
--- a/app/src/main/java/org/gnucash/android/model/Recurrence.java
+++ b/app/src/main/java/org/gnucash/android/model/Recurrence.java
@@ -22,9 +22,9 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.ui.util.RecurrenceParser;
+import org.joda.time.DateTime;
 import org.joda.time.Days;
 import org.joda.time.LocalDate;
-import org.joda.time.LocalDateTime;
 import org.joda.time.Months;
 import org.joda.time.Weeks;
 import org.joda.time.Years;
@@ -32,7 +32,6 @@
 import java.sql.Timestamp;
 import java.text.SimpleDateFormat;
 import java.util.Date;
-import java.util.Locale;
 
 /**
  * Model for recurrences in the database
@@ -275,8 +274,8 @@ public int getCount(){
             return -1;
 
         int count = 0;
-        LocalDate startDate = new LocalDate(mPeriodStart.getTime());
-        LocalDate endDate = new LocalDate(mPeriodEnd.getTime());
+        DateTime startDate = new DateTime(mPeriodStart.getTime());
+        DateTime endDate = new DateTime(mPeriodEnd.getTime());
         switch (mPeriodType){
             case DAY:
                 count = Days.daysBetween(startDate, endDate).getDays();
@@ -300,27 +299,25 @@ public int getCount(){
      * @param numberOfOccurences Number of occurences from the start time
      */
     public void setPeriodEnd(int numberOfOccurences){
-        LocalDateTime localDate = new LocalDateTime(mPeriodStart.getTime());
-        LocalDateTime endDate;
+        DateTime localDate = new DateTime(mPeriodStart.getTime());
+        DateTime endDate;
         int occurrenceDuration = numberOfOccurences * mPeriodType.getMultiplier();
         switch (mPeriodType){
             case DAY:
-                endDate = localDate.dayOfWeek().getLocalDateTime().plusDays(occurrenceDuration);
+                endDate = localDate.plusDays(occurrenceDuration);
                 break;
             case WEEK:
-                endDate = localDate.dayOfWeek().getLocalDateTime().plusWeeks(occurrenceDuration);
+                endDate = localDate.plusWeeks(occurrenceDuration);
                 break;
+            default:
             case MONTH:
-                endDate = localDate.dayOfMonth().getLocalDateTime().plusMonths(occurrenceDuration);
+                endDate = localDate.plusMonths(occurrenceDuration);
                 break;
             case YEAR:
-                endDate = localDate.monthOfYear().getLocalDateTime().plusYears(occurrenceDuration);
-                break;
-            default: //default to monthly
-                endDate = localDate.dayOfMonth().getLocalDateTime().plusMonths(occurrenceDuration);
+                endDate = localDate.plusYears(occurrenceDuration);
                 break;
         }
-        mPeriodEnd = new Timestamp(endDate.toDate().getTime());
+        mPeriodEnd = new Timestamp(endDate.getMillis());
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/service/ScheduledActionService.java b/app/src/main/java/org/gnucash/android/service/ScheduledActionService.java
index 0d55b9fa..535c3b62 100644
--- a/app/src/main/java/org/gnucash/android/service/ScheduledActionService.java
+++ b/app/src/main/java/org/gnucash/android/service/ScheduledActionService.java
@@ -21,6 +21,7 @@
 import android.content.Intent;
 import android.database.sqlite.SQLiteDatabase;
 import android.os.PowerManager;
+import android.support.annotation.VisibleForTesting;
 import android.util.Log;
 
 import com.crashlytics.android.Crashlytics;
@@ -96,6 +97,7 @@ protected void onHandleIntent(Intent intent) {
      * @param scheduledActions List of scheduled actions
      */
     //made public static for testing. Do not call these methods directly
+    @VisibleForTesting
     public static void processScheduledActions(List<ScheduledAction> scheduledActions, SQLiteDatabase db) {
         for (ScheduledAction scheduledAction : scheduledActions) {
 
@@ -118,6 +120,7 @@ public static void processScheduledActions(List<ScheduledAction> scheduledAction
      * @param scheduledAction ScheduledEvent to be executed
      */
     //made public static for testing. Do not call directly
+    @VisibleForTesting
     public static void executeScheduledEvent(ScheduledAction scheduledAction, SQLiteDatabase db){
         Log.i(LOG_TAG, "Executing scheduled action: " + scheduledAction.toString());
         int executionCount = scheduledAction.getExecutionCount();
diff --git a/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java b/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
index f2d40c54..eb13294f 100644
--- a/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
@@ -80,6 +80,8 @@ public void onCreate(Bundle savedInstanceState) {
 		}
 
         SimpleCursorAdapter cursorAdapter = new QualifiedAccountNameCursorAdapter(this, cursor);
+		//without this line, the app crashes when a user tries to select an account
+		cursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
 		mAccountsSpinner.setAdapter(cursorAdapter);
 		
 		bindListeners();
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
index 94754584..b262a157 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BackupPreferenceFragment.java
@@ -46,6 +46,7 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.importer.ImportAsyncTask;
@@ -352,7 +353,8 @@ public void onConnectionFailed(ConnectionResult connectionResult) {
 	 */
 	private void restoreBackup() {
 		Log.i("Settings", "Opening GnuCash XML backups for restore");
-		File[] backupFiles = new File(Exporter.getBackupFolderPath()).listFiles();
+		String bookUID = BooksDbAdapter.getInstance().getActiveBookUID();
+		File[] backupFiles = new File(Exporter.getBackupFolderPath(bookUID)).listFiles();
 		if (backupFiles == null || backupFiles.length == 0){
 			android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(getActivity())
 					.setTitle("No backups found")
@@ -364,7 +366,6 @@ public void onClick(DialogInterface dialog, int which) {
 						}
 					});
 			builder.create().show();
-			Exporter.getBackupFolderPath(); //creates the directory
 			return;
 		}
 
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
index 1b9f6384..243c3bd0 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
@@ -15,7 +15,9 @@
  */
 package org.gnucash.android.test.unit.db;
 
+import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
+import android.support.v7.preference.PreferenceManager;
 
 import org.assertj.core.data.Index;
 import org.gnucash.android.BuildConfig;
@@ -498,10 +500,7 @@ public void shouldSetDefaultTransferColumnToNull_WhenTheAccountIsDeleted(){
      * Opening an XML file should set the default currency to that used by the most accounts in the file
      */
     @Test
-    public void importingXml_shouldSetDefaultCurrency(){
-        String expectedCode = GnuCashApplication.getDefaultCurrencyCode();
-        Commodity expectedDefaultCommodity = CommoditiesDbAdapter.getInstance().getCommodity(expectedCode);
-
+    public void importingXml_shouldSetDefaultCurrencyFromXml(){
         GnuCashApplication.setDefaultCurrencyCode("JPY");
 
         assertThat(GnuCashApplication.getDefaultCurrencyCode()).isEqualTo("JPY");
@@ -511,10 +510,11 @@ public void importingXml_shouldSetDefaultCurrency(){
         loadDefaultAccounts();
 
         assertThat(GnuCashApplication.getDefaultCurrencyCode()).isNotEqualTo("JPY");
-        assertThat(GnuCashApplication.getDefaultCurrencyCode()).isEqualTo(expectedCode);
-        assertThat(Commodity.DEFAULT_COMMODITY).isEqualTo(expectedDefaultCommodity);
+        //the book has USD occuring most often and this will be used as the default currency
+        assertThat(GnuCashApplication.getDefaultCurrencyCode()).isEqualTo("USD");
+        assertThat(Commodity.DEFAULT_COMMODITY).isEqualTo(Commodity.USD);
 
-        System.out.println("Default currency is now: " + expectedCode);
+        System.out.println("Default currency is now: " + Commodity.DEFAULT_COMMODITY);
     }
 
     /**
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java
index 9af46e5f..d5cd10af 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/RecurrenceTest.java
@@ -18,10 +18,10 @@
 
 import org.gnucash.android.model.PeriodType;
 import org.gnucash.android.model.Recurrence;
+import org.joda.time.DateTime;
 import org.junit.Test;
 
 import java.sql.Timestamp;
-import java.util.Calendar;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -33,14 +33,13 @@
     @Test
     public void settingCount_shouldComputeCorrectEndTime(){
         Recurrence recurrence = new Recurrence(PeriodType.MONTH);
-        Calendar cal = Calendar.getInstance();
-        cal.set(2015, Calendar.OCTOBER, 5);
 
-        recurrence.setPeriodStart(new Timestamp(cal.getTimeInMillis()));
+        DateTime startTime = new DateTime(2015, 10, 5, 0, 0);
+        recurrence.setPeriodStart(new Timestamp(startTime.getMillis()));
         recurrence.setPeriodEnd(3);
 
-        cal.set(2016, Calendar.JANUARY, 5);
-        assertThat(recurrence.getPeriodEnd().getTime()).isEqualTo(cal.getTimeInMillis());
+        DateTime expectedEndtime = new DateTime(2016, 1, 5, 0, 0);
+        assertThat(recurrence.getPeriodEnd().getTime()).isEqualTo(expectedEndtime.getMillis());
     }
 
     /**
@@ -49,12 +48,12 @@ public void settingCount_shouldComputeCorrectEndTime(){
     @Test
     public void testRecurrenceCountComputation(){
         Recurrence recurrence = new Recurrence(PeriodType.MONTH);
-        Calendar cal = Calendar.getInstance();
-        cal.set(2015, Calendar.OCTOBER, 5);
 
-        recurrence.setPeriodStart(new Timestamp(cal.getTimeInMillis()));
-        cal.set(2016, Calendar.AUGUST, 5);
-        recurrence.setPeriodEnd(new Timestamp(cal.getTimeInMillis()));
+        DateTime start = new DateTime(2015, 10, 5, 0, 0);
+        recurrence.setPeriodStart(new Timestamp(start.getMillis()));
+
+        DateTime end = new DateTime(2016, 8, 5, 0, 0);
+        recurrence.setPeriodEnd(new Timestamp(end.getMillis()));
 
         assertThat(recurrence.getCount()).isEqualTo(10);
     }
@@ -67,9 +66,9 @@ public void testRecurrenceCountComputation(){
     @Test
     public void notSettingEndDate_shouldReturnSpecialCountValue() {
         Recurrence recurrence = new Recurrence(PeriodType.MONTH);
-        Calendar cal = Calendar.getInstance();
-        cal.set(2015, Calendar.OCTOBER, 5);
-        recurrence.setPeriodStart(new Timestamp(cal.getTimeInMillis()));
+
+        DateTime start = new DateTime(2015, 10, 5, 0, 0);
+        recurrence.setPeriodStart(new Timestamp(start.getMillis()));
 
         assertThat(recurrence.getCount()).isEqualTo(-1);
     }
diff --git a/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
index 858934d2..a5dcda2b 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
@@ -21,6 +21,7 @@
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
 import org.gnucash.android.db.adapter.ScheduledActionDbAdapter;
@@ -282,7 +283,7 @@ public void scheduledBackups_shouldRunOnlyOnce(){
         backupParams.setExportTarget(ExportParams.ExportTarget.SD_CARD);
         scheduledBackup.setTag(backupParams.toCsv());
 
-        File backupFolder = new File(Exporter.getBackupFolderPath());
+        File backupFolder = new File(Exporter.getBackupFolderPath(BooksDbAdapter.getInstance().getActiveBookUID()));
         assertThat(backupFolder).exists();
         assertThat(backupFolder.listFiles()).isEmpty();
 

From 976dbf2172326ad355628072fc90042240307fbc Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 25 Aug 2016 10:51:19 +0200
Subject: [PATCH 115/121] Ensure that scheduled backups are run only once
 regardless of any missed schedules (added test)

Refactored ScheduledActionService for more modularity
Backups and exports are already migrated - closes #555
---
 .../org/gnucash/android/db/MigrationHelper.java    |   2 -
 .../android/service/ScheduledActionService.java    | 116 +++++++++++++--------
 .../unit/service/ScheduledActionServiceTest.java   |  15 +--
 3 files changed, 83 insertions(+), 50 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index fa9519eb..ce8e6c29 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -1438,8 +1438,6 @@ static int upgradeDbToVersion13(SQLiteDatabase db){
             db.endTransaction();
         }
 
-        //TODO: Move old files from old export folders into new book-specific export folders
-
         //Migrate book-specific preferences away from shared preferences
         Log.d(LOG_TAG, "Migrating shared preferences into book preferences");
         Context context = GnuCashApplication.getAppContext();
diff --git a/app/src/main/java/org/gnucash/android/service/ScheduledActionService.java b/app/src/main/java/org/gnucash/android/service/ScheduledActionService.java
index 535c3b62..b8de7c52 100644
--- a/app/src/main/java/org/gnucash/android/service/ScheduledActionService.java
+++ b/app/src/main/java/org/gnucash/android/service/ScheduledActionService.java
@@ -89,7 +89,6 @@ protected void onHandleIntent(Intent intent) {
         } finally { //release the lock either way
             wakeLock.release();
         }
-
     }
 
     /**
@@ -105,12 +104,15 @@ public static void processScheduledActions(List<ScheduledAction> scheduledAction
             int totalPlannedExecutions = scheduledAction.getTotalPlannedExecutionCount();
             int executionCount = scheduledAction.getExecutionCount();
 
+            //the end time of the ScheduledAction is not handled here because
+            //it is handled differently for transactions and backups. See the individual methods.
             if (scheduledAction.getStartTime() > now    //if schedule begins in the future
                     || !scheduledAction.isEnabled()     // of if schedule is disabled
                     || (totalPlannedExecutions > 0 && executionCount >= totalPlannedExecutions)) { //limit was set and we reached or exceeded it
                 Log.i(LOG_TAG, "Skipping scheduled action: " + scheduledAction.toString());
                 continue;
             }
+
             executeScheduledEvent(scheduledAction, db);
         }
     }
@@ -119,55 +121,17 @@ public static void processScheduledActions(List<ScheduledAction> scheduledAction
      * Executes a scheduled event according to the specified parameters
      * @param scheduledAction ScheduledEvent to be executed
      */
-    //made public static for testing. Do not call directly
-    @VisibleForTesting
-    public static void executeScheduledEvent(ScheduledAction scheduledAction, SQLiteDatabase db){
+    private static void executeScheduledEvent(ScheduledAction scheduledAction, SQLiteDatabase db){
         Log.i(LOG_TAG, "Executing scheduled action: " + scheduledAction.toString());
         int executionCount = scheduledAction.getExecutionCount();
 
         switch (scheduledAction.getActionType()){
             case TRANSACTION:
-                String actionUID = scheduledAction.getActionUID();
-                TransactionsDbAdapter transactionsDbAdapter = new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
-                Transaction trxnTemplate = transactionsDbAdapter.getRecord(actionUID);
-
-                long now = System.currentTimeMillis();
-                //if there is an end time in the past, we execute all schedules up to the end time.
-                //if the end time is in the future, we execute all schedules until now (current time)
-                //if there is no end time, we execute all schedules until now
-                long endTime = scheduledAction.getEndTime() > 0 ? Math.min(scheduledAction.getEndTime(), now) : now;
-                int totalPlannedExecutions = scheduledAction.getTotalPlannedExecutionCount();
-                List<Transaction> transactions = new ArrayList<>();
-
-                //we may be executing scheduled action significantly after scheduled time (depending on when Android fires the alarm)
-                //so compute the actual transaction time from pre-known values
-                long transactionTime = scheduledAction.computeNextScheduledExecutionTime();
-                while (transactionTime <= endTime) {
-                    Transaction recurringTrxn = new Transaction(trxnTemplate, true);
-                    recurringTrxn.setTime(transactionTime);
-                    transactions.add(recurringTrxn);
-                    recurringTrxn.setScheduledActionUID(scheduledAction.getUID());
-                    scheduledAction.setExecutionCount(++executionCount);
-
-                    if (totalPlannedExecutions > 0 && executionCount >= totalPlannedExecutions)
-                        break; //if we hit the total planned executions set, then abort
-                    transactionTime = scheduledAction.computeNextScheduledExecutionTime();
-                }
-
-                transactionsDbAdapter.bulkAddRecords(transactions, DatabaseAdapter.UpdateMethod.insert);
+                executionCount += executeTransactions(scheduledAction, db);
                 break;
 
             case BACKUP:
-                ExportParams params = ExportParams.parseCsv(scheduledAction.getTag());
-                try {
-                    //wait for async task to finish before we proceed (we are holding a wake lock)
-                    new ExportAsyncTask(GnuCashApplication.getAppContext(), db).execute(params).get();
-                    scheduledAction.setExecutionCount(++executionCount);
-                } catch (InterruptedException | ExecutionException e) {
-                    Crashlytics.logException(e);
-                    Log.e(LOG_TAG, e.getMessage());
-                    return; //return immediately, do not update last run time of event
-                }
+                executionCount += executeBackup(scheduledAction, db);
                 break;
         }
 
@@ -183,4 +147,72 @@ public static void executeScheduledEvent(ScheduledAction scheduledAction, SQLite
         //set the values in the object because they will be checked for the next iteration in the calling loop
         scheduledAction.setExecutionCount(executionCount);
     }
+
+    /**
+     * Executes scheduled backups for a given scheduled action.
+     * The backup will be executed only once, even if multiple schedules were missed
+     * @param scheduledAction Scheduled action referencing the backup
+     * @param db SQLiteDatabase to backup
+     * @return Number of times backup is executed. This should either be 1 or 0
+     */
+    private static int executeBackup(ScheduledAction scheduledAction, SQLiteDatabase db) {
+        int executionCount = 0;
+        long now = System.currentTimeMillis();
+        long endTime = scheduledAction.getEndTime();
+
+        if (endTime > 0 && endTime < now)
+            return executionCount;
+
+        ExportParams params = ExportParams.parseCsv(scheduledAction.getTag());
+        try {
+            //wait for async task to finish before we proceed (we are holding a wake lock)
+            new ExportAsyncTask(GnuCashApplication.getAppContext(), db).execute(params).get();
+            scheduledAction.setExecutionCount(++executionCount);
+        } catch (InterruptedException | ExecutionException e) {
+            Crashlytics.logException(e);
+            Log.e(LOG_TAG, e.getMessage());
+        }
+        return executionCount;
+    }
+
+    /**
+     * Executes scheduled transactions which are to be added to the database.
+     * <p>If a schedule was missed, all the intervening transactions will be generated, even if
+     * the end time of the transaction was already reached</p>
+     * @param scheduledAction Scheduled action which references the transaction
+     * @param db SQLiteDatabase where the transactions are to be executed
+     * @return Number of transactions created as a result of this action
+     */
+    private static int executeTransactions(ScheduledAction scheduledAction, SQLiteDatabase db) {
+        int executionCount = 0;
+        String actionUID = scheduledAction.getActionUID();
+        TransactionsDbAdapter transactionsDbAdapter = new TransactionsDbAdapter(db, new SplitsDbAdapter(db));
+        Transaction trxnTemplate = transactionsDbAdapter.getRecord(actionUID);
+
+        long now = System.currentTimeMillis();
+        //if there is an end time in the past, we execute all schedules up to the end time.
+        //if the end time is in the future, we execute all schedules until now (current time)
+        //if there is no end time, we execute all schedules until now
+        long endTime = scheduledAction.getEndTime() > 0 ? Math.min(scheduledAction.getEndTime(), now) : now;
+        int totalPlannedExecutions = scheduledAction.getTotalPlannedExecutionCount();
+        List<Transaction> transactions = new ArrayList<>();
+
+        //we may be executing scheduled action significantly after scheduled time (depending on when Android fires the alarm)
+        //so compute the actual transaction time from pre-known values
+        long transactionTime = scheduledAction.computeNextScheduledExecutionTime();
+        while (transactionTime <= endTime) {
+            Transaction recurringTrxn = new Transaction(trxnTemplate, true);
+            recurringTrxn.setTime(transactionTime);
+            transactions.add(recurringTrxn);
+            recurringTrxn.setScheduledActionUID(scheduledAction.getUID());
+            scheduledAction.setExecutionCount(++executionCount); //required for computingNextScheduledExecutionTime
+
+            if (totalPlannedExecutions > 0 && executionCount >= totalPlannedExecutions)
+                break; //if we hit the total planned executions set, then abort
+            transactionTime = scheduledAction.computeNextScheduledExecutionTime();
+        }
+
+        transactionsDbAdapter.bulkAddRecords(transactions, DatabaseAdapter.UpdateMethod.insert);
+        return executionCount;
+    }
 }
diff --git a/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
index a5dcda2b..0e6adb24 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
@@ -229,10 +229,13 @@ public void endTimeInTheFuture_shouldExecuteOnlyUntilPresent(){
     }
 
     /**
-     * Test that the end time for scheduled actions should be respected
+     * Test that if the end time of a scheduled transaction has passed, but the schedule was missed
+     * (either because the book was not opened or similar) then the scheduled transactions for the
+     * relevant period should still be executed even though end time has passed.
+     * <p>This holds only for transactions. Backups will be skipped</p>
      */
     @Test
-    public void scheduledActionsWithEndTimeInPast_shouldBeExecuted(){
+    public void scheduledTransactionsWithEndTimeInPast_shouldBeExecuted(){
         ScheduledAction scheduledAction = new ScheduledAction(ScheduledAction.ActionType.TRANSACTION);
         DateTime startTime = new DateTime(2016, 6, 6, 9, 0);
         scheduledAction.setStartTime(startTime.getMillis());
@@ -272,7 +275,7 @@ public void recurringTransactions_shouldHaveScheduledActionUID(){
         ScheduledActionService.processScheduledActions(actions, mDb);
     }
 
-    //// FIXME: 16.08.2016 Cannot find the file after export. But the export task is called and run
+    @Test
     public void scheduledBackups_shouldRunOnlyOnce(){
         ScheduledAction scheduledBackup = new ScheduledAction(ScheduledAction.ActionType.BACKUP);
         scheduledBackup.setStartTime(new DateTime(2016, 2, 17, 17, 0).getMillis());
@@ -283,7 +286,7 @@ public void scheduledBackups_shouldRunOnlyOnce(){
         backupParams.setExportTarget(ExportParams.ExportTarget.SD_CARD);
         scheduledBackup.setTag(backupParams.toCsv());
 
-        File backupFolder = new File(Exporter.getBackupFolderPath(BooksDbAdapter.getInstance().getActiveBookUID()));
+        File backupFolder = new File(Exporter.getExportFolderPath(BooksDbAdapter.getInstance().getActiveBookUID()));
         assertThat(backupFolder).exists();
         assertThat(backupFolder.listFiles()).isEmpty();
 
@@ -291,12 +294,12 @@ public void scheduledBackups_shouldRunOnlyOnce(){
         actions.add(scheduledBackup);
         ScheduledActionService.processScheduledActions(actions, mDb);
 
+        assertThat(scheduledBackup.getExecutionCount()).isEqualTo(3);
         File[] backupFiles = backupFolder.listFiles();
         assertThat(backupFiles).hasSize(1);
-        assertThat(backupFiles[0]).hasExtension("gnca");
+        assertThat(backupFiles[0]).exists().hasExtension("gnca");
     }
 
-
     @After
     public void tearDown(){
         TransactionsDbAdapter.getInstance().deleteAllRecords();

From 1706768844cf8847c2542f438f7c2ab27b56d2fb Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 25 Aug 2016 10:57:10 +0200
Subject: [PATCH 116/121] Update translations

---
 app/src/main/res/values-af-rZA/strings.xml | 36 ++++++++++++++---
 app/src/main/res/values-ar-rSA/strings.xml | 44 +++++++++++++++++---
 app/src/main/res/values-ca-rES/strings.xml | 36 ++++++++++++++---
 app/src/main/res/values-cs-rCZ/strings.xml | 38 +++++++++++++++---
 app/src/main/res/values-de/strings.xml     | 64 ++++++++++++++++++++----------
 app/src/main/res/values-el-rGR/strings.xml | 36 ++++++++++++++---
 app/src/main/res/values-en-rGB/strings.xml | 36 ++++++++++++++---
 app/src/main/res/values-es-rMX/strings.xml | 38 ++++++++++++++----
 app/src/main/res/values-es/strings.xml     | 40 ++++++++++++++-----
 app/src/main/res/values-fi-rFI/strings.xml | 36 ++++++++++++++---
 app/src/main/res/values-fr/strings.xml     | 36 ++++++++++++++---
 app/src/main/res/values-hu-rHU/strings.xml | 36 ++++++++++++++---
 app/src/main/res/values-it-rIT/strings.xml | 40 +++++++++++++++----
 app/src/main/res/values-iw-rIL/strings.xml | 40 ++++++++++++++++---
 app/src/main/res/values-ja-rJP/strings.xml | 40 ++++++++++++++-----
 app/src/main/res/values-ko-rKR/strings.xml | 37 +++++++++++++----
 app/src/main/res/values-lv-rLV/strings.xml | 38 +++++++++++++++---
 app/src/main/res/values-nb/strings.xml     | 63 ++++++++++++++++++++---------
 app/src/main/res/values-nl-rNL/strings.xml | 38 ++++++++++++++----
 app/src/main/res/values-no-rNO/strings.xml | 39 ++++++++++++++----
 app/src/main/res/values-pl-rPL/strings.xml | 41 +++++++++++++++----
 app/src/main/res/values-pt-rBR/strings.xml | 36 ++++++++++++++---
 app/src/main/res/values-pt-rPT/strings.xml | 39 ++++++++++++++----
 app/src/main/res/values-ro-rRO/strings.xml | 38 +++++++++++++++---
 app/src/main/res/values-ru/strings.xml     | 40 +++++++++++++++----
 app/src/main/res/values-sr-rSP/strings.xml | 38 +++++++++++++++---
 app/src/main/res/values-sv-rSE/strings.xml | 36 ++++++++++++++---
 app/src/main/res/values-tr-rTR/strings.xml | 36 ++++++++++++++---
 app/src/main/res/values-uk-rUA/strings.xml | 40 +++++++++++++++----
 app/src/main/res/values-vi-rVN/strings.xml | 34 +++++++++++++---
 app/src/main/res/values-zh-rCN/strings.xml | 38 ++++++++++++++----
 app/src/main/res/values-zh-rTW/strings.xml | 36 +++++++++++++----
 32 files changed, 1024 insertions(+), 239 deletions(-)

diff --git a/app/src/main/res/values-af-rZA/strings.xml b/app/src/main/res/values-af-rZA/strings.xml
index 8f590695..0de912cd 100644
--- a/app/src/main/res/values-af-rZA/strings.xml
+++ b/app/src/main/res/values-af-rZA/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -213,7 +213,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -453,4 +453,28 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-ar-rSA/strings.xml b/app/src/main/res/values-ar-rSA/strings.xml
index 1ab47d7b..11564b05 100644
--- a/app/src/main/res/values-ar-rSA/strings.xml
+++ b/app/src/main/res/values-ar-rSA/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -217,7 +217,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -473,4 +473,36 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="zero">%d accounts</item>
+    <item quantity="one">%d account</item>
+    <item quantity="two">%d accounts</item>
+    <item quantity="few">%d accounts</item>
+    <item quantity="many">%d accounts</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="zero">%d transactions</item>
+    <item quantity="one">%d transaction</item>
+    <item quantity="two">%d transactions</item>
+    <item quantity="few">%d transactions</item>
+    <item quantity="many">%d transactions</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-ca-rES/strings.xml b/app/src/main/res/values-ca-rES/strings.xml
index d2848c8f..e4eff21d 100644
--- a/app/src/main/res/values-ca-rES/strings.xml
+++ b/app/src/main/res/values-ca-rES/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Habiliteu aquesta opci quan exporteu a aplicacions de tercers diferents de GnuCash per escriptori</string>
   <string name="title_whats_new">Novetats</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -211,7 +211,7 @@
   <string name="title_all_accounts">Tots</string>
   <string name="summary_create_default_accounts">Crea l\'estructura de comptes per defecte de GnuCash d\'s ms com</string>
   <string name="title_create_default_accounts">Crea els comptes per defecte</string>
-  <string name="msg_confirm_create_default_accounts_setting">Es suprimiran tots els comptes i transaccions del dispositiu.\n\nEsteu segurs de que voleu continuar?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Assentaments peridics</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -451,4 +451,28 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">La transacci seleccionada no t desglossaments i no es pot obrir</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-cs-rCZ/strings.xml b/app/src/main/res/values-cs-rCZ/strings.xml
index 83ce45a1..a5574746 100644
--- a/app/src/main/res/values-cs-rCZ/strings.xml
+++ b/app/src/main/res/values-cs-rCZ/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -214,7 +214,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -458,4 +458,30 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="few">%d accounts</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="few">%d transactions</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 57aaabaf..b91c5629 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -131,14 +131,14 @@
   <string name="title_xml_ofx_header">XML-OFX-Header verwenden</string>
   <string name="summary_xml_ofx_header">Diese Option aktivieren, wenn Sie die OFX-Dateien fr ein anderes Programm als GnuCash auf dem Desktop exportieren</string>
   <string name="title_whats_new">Neuigkeiten in dieser Version</string>
-  <string name="whats_new">\n
-        - App im Material Design\n
-        - Mehrwhrungsbuchungen\n
-        - Rechner fr Buchungsbetrge\n
-        - Verbesserte Berichte\n
-        - Neuer Hilfe &amp; Feedback-Bereich\n
-        - Viele Fehlerbehebungen und Verbesserungen\n
-\n</string>
+  <string name="whats_new">
+	- Untersttzung fr mehrere verschiedene Bcher\n
+	- Fgt ownCloud als Exportziel hinzu\n
+	- Kompaktansicht fr Buchungsliste\n
+	- Neugestaltung des Zugangscode-Sperrbildschirms\n
+	- Verbesserte Handhabung terminierter Buchungen\n
+	- Mehrere Bugfixes und Verbesserungen\n
+	</string>
   <string name="label_dismiss">Schlieen</string>
   <string name="toast_transanction_amount_required">Geben Sie einen Betrag ein, um die Buchung speichern zu knnen</string>
   <string name="toast_error_edit_multi_currency_transaction">Mehrwhrungsbuchungen knnen nicht bearbeitet werden</string>
@@ -211,7 +211,7 @@
   <string name="title_all_accounts">Alle</string>
   <string name="summary_create_default_accounts">Erstellt die hufig verwendeten Standard-GnuCash-Konten</string>
   <string name="title_create_default_accounts">Standard-Konten erstellen</string>
-  <string name="msg_confirm_create_default_accounts_setting">Es werden alle bestehenden Konten und Buchungen auf dem Gert gelscht.\n\nWollen Sie fortfahren?</string>
+  <string name="msg_confirm_create_default_accounts_setting">Ein neues Buch wird mit den Standardkonten geffnet\n\nIhre aktuellen Konten und Buchungen werden nicht gendert!</string>
   <string name="menu_scheduled_transactions">Geplante Buchungen</string>
   <string name="msg_confirm_create_default_accounts_first_run">Willkommen bei GnuCash Android!\nSie knnen entweder eine Hierarchie der fr gewhnlich verwendeten Konten erstellen oder Ihre eigene GnuCash-Kontenstruktur importieren.\n\nBeide Optionen sind auch in den Einstellungen verfgbar, sodass Sie dies spter entscheiden knnen.
     </string>
@@ -364,7 +364,7 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="title_split_editor">Split Buchung</string>
   <string name="toast_error_check_split_amounts">Prfen Sie vor dem Speichern, ob alle Buchungsteile gltige Betrge enthalten!</string>
   <string name="label_error_invalid_expression">Ungltiger Ausdruck!</string>
-  <string name="toast_scheduled_recurring_transaction">Geplante Buchung</string>
+  <string name="toast_scheduled_recurring_transaction">Geplante wiederkehrende Buchung</string>
   <string name="error_exchange_rate_required">Ein Wechselkurs ist erforderlich</string>
   <string name="error_converted_amount_required">Ein Wechselbetrag ist erforderlich</string>
   <string name="title_transfer_funds">berweisungen</string>
@@ -399,12 +399,12 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="summary_translate_gnucash">bersetze oder korrigiere bersetzungen auf CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">Es gibt keine kompatible App, welche die exportierten Buchungen empfangen kann!</string>
   <string name="menu_move_transaction">Bewegen&#8230;</string>
-  <string name="menu_duplicate_transaction">Kopieren</string>
+  <string name="menu_duplicate_transaction">Duplizieren</string>
   <string name="nav_menu_budgets">Budgets</string>
   <string name="title_cash_flow_report">Geldfluss</string>
   <string name="title_budgets">Budgets</string>
   <string name="title_use_compact_list">Kompaktansicht verwenden</string>
-  <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
+  <string name="summary_use_compact_list">Aktivieren, um stets die Kompaktansicht fr die Buchungsliste zu verwenden</string>
   <string name="error_invalid_exchange_rate">Ungltiger Wechselkurs</string>
   <string name="sample_exchange_rate">z. B. 1 %1$s = x.xx %2$s</string>
   <string name="error_invalid_amount">Ungltiger Betrag</string>
@@ -440,14 +440,38 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="digit_zero_text">+</string>
   <string name="title_manage_books">Bcher verwalten</string>
   <string name="menu_manage_books">Bcher verwalten&#8230;</string>
-  <string name="select_chart_to_view_details">Select any part of the chart to view details</string>
-  <string name="title_confirm_delete_book">Confirm delete Book</string>
-  <string name="msg_all_book_data_will_be_deleted">All accounts and transactions in this book will be deleted!</string>
-  <string name="btn_delete_book">Delete Book</string>
-  <string name="label_last_export_time">Last Exported:</string>
-  <string name="menu_title_enable_sync">Enable Sync</string>
-  <string name="menu_title_new_book">New Book</string>
-  <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
+  <string name="select_chart_to_view_details">Whlen Sie irgendeinen Teil des Diagramms, um Details anzuzeigen</string>
+  <string name="title_confirm_delete_book">Lschen des Buchs besttigen</string>
+  <string name="msg_all_book_data_will_be_deleted">Alle Konten und Buchungen in diesem Buch werden gelscht!</string>
+  <string name="btn_delete_book">Buch lschen</string>
+  <string name="label_last_export_time">Zuletzt exportiert:</string>
+  <string name="menu_title_enable_sync">Sync aktivieren</string>
+  <string name="menu_title_new_book">Neues Buch</string>
+  <string name="toast_transaction_has_no_splits_and_cannot_open">Die ausgewhlte Buchung hat keine Splits und kann nicht geffnet werden</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d Konto</item>
+    <item quantity="other">%d Konten</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d Buchung</item>
+    <item quantity="other">%d Buchungen</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-el-rGR/strings.xml b/app/src/main/res/values-el-rGR/strings.xml
index ea1ab287..d1bffc59 100644
--- a/app/src/main/res/values-el-rGR/strings.xml
+++ b/app/src/main/res/values-el-rGR/strings.xml
@@ -134,11 +134,11 @@
   <string name="summary_xml_ofx_header">        ,   GnuCash   .</string>
   <string name="title_whats_new">  </string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss"></string>
@@ -222,7 +222,7 @@
   <string name="title_all_accounts"></string>
   <string name="summary_create_default_accounts">      GnuCash</string>
   <string name="title_create_default_accounts">  </string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions"> </string>
   <string name="msg_confirm_create_default_accounts_first_run">GnuCash Android.  ! \n   
            ,         GnuCash. \n\n     
@@ -464,4 +464,28 @@ No user-identifiable information will be collected as part of this process!
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-en-rGB/strings.xml b/app/src/main/res/values-en-rGB/strings.xml
index 07056ed5..73da1649 100644
--- a/app/src/main/res/values-en-rGB/strings.xml
+++ b/app/src/main/res/values-en-rGB/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -213,7 +213,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -453,4 +453,28 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index ba57591a..de0d9308 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -132,12 +132,12 @@
   <string name="summary_xml_ofx_header">Active esta opcin para exportar a otras aplicaciones distintas a GnuCash para escritorio</string>
   <string name="title_whats_new">Novedades</string>
   <string name="whats_new">
-        - Nuevo diseo Material \n
-        - Transacciones mult-divisa\n
-        - Calculadora de cantidades de transacciones\n
-        - Mejores opciones en los informes\n
-        - Nuevas secciones de ayuda y sugerencias\n
-        - Varios arreglos de fallos y mejoras\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
+        - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Cerrar</string>
   <string name="toast_transanction_amount_required">Introduzca un importe para guardar la transaccin</string>
@@ -211,7 +211,7 @@
   <string name="title_all_accounts">Todas</string>
   <string name="summary_create_default_accounts">Crea una estructura por defecto de cuentas GnuCash comnmente usadas</string>
   <string name="title_create_default_accounts">Crear cuentas por defecto</string>
-  <string name="msg_confirm_create_default_accounts_setting">Todas las cuentas y transacciones en este dispositivo sern eliminadas. Est seguro?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Transacciones Programadas</string>
   <string name="msg_confirm_create_default_accounts_first_run">Bienvenido a GnuCash Android! \nPuede crear una jerarqua de cuentas comnmente usadas o importar su propia estructura de cuentas GnuCash. \n\nAmbas opciones estn disponibles en las opciones de la aplicaci por si quiere decidirlo ms tarde.
     </string>
@@ -450,4 +450,28 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 24e31266..ff8befdf 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -131,14 +131,12 @@
   <string name="title_xml_ofx_header">Usar cabecera XML OFX</string>
   <string name="summary_xml_ofx_header">Active esta opcin para exportar a otras aplicaciones distintas a GnuCash para escritorio</string>
   <string name="title_whats_new">Novedades</string>
-  <string name="whats_new">
-        - Nuevo diseo Material \n
-        - Transacciones mult-divisa\n
-        - Calculadora de cantidades de transacciones\n
-        - Mejores opciones en los informes\n
-        - Nuevas secciones de ayuda y sugerencias\n
-        - Varios arreglos de fallos y mejoras\n
-	</string>
+  <string name="whats_new">- Soporte de mltiples libros\n
+- Aade ownCloud como destino para exportaciones\n
+- Vista compacta para la lista de transacciones\n
+- Rediseo de la pantalla de bloqueo con contrasea\n
+- Mejora del manejo de transacciones programadas\n
+- Mltiples fallos solucionados y otras mejoras\n</string>
   <string name="label_dismiss">Cerrar</string>
   <string name="toast_transanction_amount_required">Introduzca un importe para guardar la transaccin</string>
   <string name="toast_error_edit_multi_currency_transaction">Las transacciones multi-divisa so se pueden modificar</string>
@@ -211,7 +209,7 @@
   <string name="title_all_accounts">Todas</string>
   <string name="summary_create_default_accounts">Crea una estructura por defecto de cuentas GnuCash comnmente usadas</string>
   <string name="title_create_default_accounts">Crear cuentas por defecto</string>
-  <string name="msg_confirm_create_default_accounts_setting">Todas las cuentas y transacciones en este dispositivo sern eliminadas. Est seguro?</string>
+  <string name="msg_confirm_create_default_accounts_setting">Se abrir un nuevo libro con las cuentas por defecto\n\nSus cuentas y transacciones actuales no se modificarn.</string>
   <string name="menu_scheduled_transactions">Transacciones Programadas</string>
   <string name="msg_confirm_create_default_accounts_first_run">Bienvenido a GnuCash Android! \nPuede crear una jerarqua de cuentas comnmente usadas o importar su propia estructura de cuentas GnuCash. \n\nAmbas opciones estn disponibles en las opciones de la aplicaci por si quiere decidirlo ms tarde.
     </string>
@@ -450,4 +448,28 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="toast_transaction_has_no_splits_and_cannot_open">La transaccin seleccionada tiene ningn desglose y no se puede abrir</string>
   <string name="label_split_count">%1$d desglose</string>
   <string name="label_inside_account_with_name">en %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d cuenta</item>
+    <item quantity="other">%d cuentas</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaccin</item>
+    <item quantity="other">%d transacciones</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>GASTO</item>
+    <item>INGRESO</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Conectado a Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">No se puede conectar a Google Drive</string>
+  <string name="toast_enter_amount_to_split">Por favor ingrese una cantidad para dividir</string>
+  <string name="label_export_target_external_service">servicio externo</string>
+  <string name="toast_updated_transaction_recurring_schedule">Calendario de transacciones recurrentes actualizado</string>
+  <string name="label_export_transactions_since_date">Desde</string>
+  <string name="switch_export_transactions_from_all_time">Todos los tiempos</string>
+  <string name="label_recommend_app">Recomendar en Play Store</string>
+  <string name="repeat_until_date">hasta %1$s</string>
+  <string name="repeat_on_weekday">en %1$s</string>
+  <string name="repeat_x_times">%1$s veces</string>
+  <string name="menu_show_compact_view">Vista compacta</string>
 </resources>
diff --git a/app/src/main/res/values-fi-rFI/strings.xml b/app/src/main/res/values-fi-rFI/strings.xml
index 8f590695..0de912cd 100644
--- a/app/src/main/res/values-fi-rFI/strings.xml
+++ b/app/src/main/res/values-fi-rFI/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -213,7 +213,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -453,4 +453,28 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 07783354..11908cf5 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Activez cette option lors d\'un export vers une application tierce autre que GnuCash pour PC</string>
   <string name="title_whats_new">Nouveautes</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Passer</string>
@@ -209,7 +209,7 @@
   <string name="title_all_accounts">Tous</string>
   <string name="summary_create_default_accounts">Cre une structure de compte GnuCash par dfaut couramment utilis</string>
   <string name="title_create_default_accounts">Cre comptes par dfaut</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Transactions planifies</string>
   <string name="msg_confirm_create_default_accounts_first_run">Bienvenue sur GnuCash Android!\nVous pouvez soit crer
 		une hirarchie de comptes couramment utiliss, importer votre propre structure de compte GnuCash.\n\nLes deux options sont galement
@@ -450,4 +450,28 @@ Aucune information permettant d\'identifier l\'utilisateur ne sera recueillis da
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-hu-rHU/strings.xml b/app/src/main/res/values-hu-rHU/strings.xml
index ca718686..fb9698ba 100644
--- a/app/src/main/res/values-hu-rHU/strings.xml
+++ b/app/src/main/res/values-hu-rHU/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -213,7 +213,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -455,4 +455,28 @@ No user-identifiable information will be collected as part of this process!
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index 20c2f4e9..fc66c7d7 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -132,12 +132,12 @@
   <string name="summary_xml_ofx_header">Abilitare questa opzione quando si esporta verso un\'applicazione diversa da GnuCash per desktop</string>
   <string name="title_whats_new">Novit</string>
   <string name="whats_new">
-- App in Material Design \n
-        - Transazioni in valute multiple\n
-        - Calcolatrice per gli importi delle transazioni\n
-        - Opzioni migliori per i resoconti\n
-        - Nuova sezione Aiuto &amp; Feedback\n
-        - Numerose correzioni di bug e miglioramenti\n
+- Supporto per pi libri differenti \n
+	- Aggiunto ownCloud come destinazione per le esportazioni\n
+        - Vista compatta per la lista delle transazioni\n
+	- Ridisegno della schermata di blocco per il codice di accesso\n
+	- Migliorata la gestione delle transazioni pianificate\n
+	- Sistemati molti bug e molti miglioramenti\n
 	</string>
   <string name="label_dismiss">Chiudi</string>
   <string name="toast_transanction_amount_required">Inserire un importo per salvare la transazione</string>
@@ -210,7 +210,7 @@
   <string name="title_all_accounts">Tutti</string>
   <string name="summary_create_default_accounts">Crea la struttura predefinita di GnuCash dei conti comunemente utilizzati</string>
   <string name="title_create_default_accounts">Crea conti predefiniti</string>
-  <string name="msg_confirm_create_default_accounts_setting">Tutti i conti e le transazioni nel dispositivo verranno cancellate.\n\nContinuare?</string>
+  <string name="msg_confirm_create_default_accounts_setting">Verr aperto un nuovo libro con i conti predefiniti.\n\nI conti e le transazioni correnti non verranno modificate!</string>
   <string name="menu_scheduled_transactions">Transazioni pianificate</string>
   <string name="msg_confirm_create_default_accounts_first_run">Benvenuti in GnuCash per Android! \n possibile
         creare una struttura dei conti pi comunemente utilizzati o importare la propria struttura da GnuCash. \n\nEntrambe le
@@ -419,7 +419,7 @@
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
   <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
-  <string name="digit_one_text"></string>
+  <string name="digit_one_text"> </string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
@@ -450,4 +450,28 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">La transazione selezionata non ha suddivisioni e non pu essere aperta</string>
   <string name="label_split_count">%1$d suddivisioni</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d conto</item>
+    <item quantity="other">%d conti</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transazione</item>
+    <item quantity="other">%d transazioni</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>USCITA</item>
+    <item>ENTRATA</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connesso a Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Impossibile connettersi a Google Drive</string>
+  <string name="toast_enter_amount_to_split">Inserisci un importo da dividere</string>
+  <string name="label_export_target_external_service">servizio esterno</string>
+  <string name="toast_updated_transaction_recurring_schedule">Pianificazione ricorrente della transazione aggiornata</string>
+  <string name="label_export_transactions_since_date">Da</string>
+  <string name="switch_export_transactions_from_all_time">Da sempre</string>
+  <string name="label_recommend_app">Consigliala sul Play Store</string>
+  <string name="repeat_until_date">fino al %1$s</string>
+  <string name="repeat_on_weekday">il %1$s</string>
+  <string name="repeat_x_times">per %1$s volte</string>
+  <string name="menu_show_compact_view">Visualizzazione compatta</string>
 </resources>
diff --git a/app/src/main/res/values-iw-rIL/strings.xml b/app/src/main/res/values-iw-rIL/strings.xml
index edf2f73a..cecdad90 100644
--- a/app/src/main/res/values-iw-rIL/strings.xml
+++ b/app/src/main/res/values-iw-rIL/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -215,7 +215,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -463,4 +463,32 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="two">%d accounts</item>
+    <item quantity="many">%d accounts</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="two">%d transactions</item>
+    <item quantity="many">%d transactions</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index c2925e2e..86bbaf36 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -131,13 +131,13 @@
   <string name="title_xml_ofx_header">OFXXML</string>
   <string name="summary_xml_ofx_header">GnuCash for desktop</string>
   <string name="title_whats_new"></string>
-  <string name="whats_new">        - \n
-        - \n
-        - \n
-        - \n
-        - \n
-        - \n
-        </string>
+  <string name="whats_new">
+-  \n
+-  ownCloud \n
+- \n
+- \n
+- \n
+- \n</string>
   <string name="label_dismiss"></string>
   <string name="toast_transanction_amount_required"></string>
   <string name="toast_error_edit_multi_currency_transaction"></string>
@@ -207,7 +207,7 @@
   <string name="title_all_accounts"></string>
   <string name="summary_create_default_accounts"> GnuCash </string>
   <string name="title_create_default_accounts"></string>
-  <string name="msg_confirm_create_default_accounts_setting">\n\n?</string>
+  <string name="msg_confirm_create_default_accounts_setting">\n\n!</string>
   <string name="menu_scheduled_transactions"></string>
   <string name="msg_confirm_create_default_accounts_first_run">GnuCash Android !\n
  GnuCash \n\n
@@ -410,7 +410,7 @@
   <!-- Passcode lock -->
   <string name="digit_one">1</string>
   <!-- In the English locale, digit 1 has no text on it. This is simply empty space. If your locale has text on digit 1, then translate-->
-  <string name="digit_one_text"></string>
+  <string name="digit_one_text">1</string>
   <string name="digit_two">2</string>
   <string name="digit_two_text">ABC</string>
   <string name="digit_three">3</string>
@@ -441,4 +441,26 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open"></string>
   <string name="label_split_count">%1$d </string>
   <string name="label_inside_account_with_name">%1$s </string>
+  <plurals name="book_account_stats">
+    <item quantity="other">%d </item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="other">%d </item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item></item>
+    <item></item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Google </string>
+  <string name="toast_unable_to_connect_to_google_drive">Google </string>
+  <string name="toast_enter_amount_to_split"></string>
+  <string name="label_export_target_external_service"></string>
+  <string name="toast_updated_transaction_recurring_schedule"></string>
+  <string name="label_export_transactions_since_date"></string>
+  <string name="switch_export_transactions_from_all_time"></string>
+  <string name="label_recommend_app">Play  </string>
+  <string name="repeat_until_date">%1$s </string>
+  <string name="repeat_on_weekday">%1$s </string>
+  <string name="repeat_x_times">%1$s </string>
+  <string name="menu_show_compact_view"></string>
 </resources>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index 012cdb80..53b54015 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -132,12 +132,13 @@
   <string name="summary_xml_ofx_header"> GnuCash       </string>
   <string name="title_whats_new"> </string>
   <string name="whats_new">
-         -  \n
-        -     \n
-        -   \n
-        -   \n
-        -   \n
-        -     \n</string>
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
+        - Multiple bug fixes and improvements\n
+	</string>
   <string name="label_dismiss"></string>
   <string name="toast_transanction_amount_required">    </string>
   <string name="toast_error_edit_multi_currency_transaction">     .</string>
@@ -209,7 +210,7 @@
   <string name="title_all_accounts"> </string>
   <string name="summary_create_default_accounts">GnuCash     .</string>
   <string name="title_create_default_accounts">  </string>
-  <string name="msg_confirm_create_default_accounts_setting">     . \n\n?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions"></string>
   <string name="msg_confirm_create_default_accounts_first_run"> GnuCash  ! \n    ,   GnuCash    . \n\n         .    </string>
   <string name="title_scheduled_transactions"></string>
@@ -441,4 +442,26 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">  .    .</string>
   <string name="label_split_count">%1$d </string>
   <string name="label_inside_account_with_name">%1$s </string>
+  <plurals name="book_account_stats">
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-lv-rLV/strings.xml b/app/src/main/res/values-lv-rLV/strings.xml
index b7ef2ee2..2e9f40e2 100644
--- a/app/src/main/res/values-lv-rLV/strings.xml
+++ b/app/src/main/res/values-lv-rLV/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -214,7 +214,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -458,4 +458,30 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="zero">%d accounts</item>
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="zero">%d transactions</item>
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 6d2c0afd..b659fee3 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -58,7 +58,7 @@
   <string name="hint_export_choice">Standard eksporteres bare nye transaksjoner siden siste eksport. Merk dette alternativet for  eksportere alle transaksjoner</string>
   <string name="toast_export_error">Feil ved eksport av %1$s</string>
   <string name="btn_export">Eksporter</string>
-  <string name="option_delete_after_export">Delete transactions after export</string>
+  <string name="option_delete_after_export">Slett transaksjoner etter eksport</string>
   <string name="hint_delete_after_export">Alle eksporterte transaksjoner slettes nr eksport er fullfrt</string>
   <string name="title_settings">Innstillinger</string>
   <string-array name="export_destinations">
@@ -66,7 +66,7 @@
     <item>DropBox</item>
     <item>Google Disk</item>
     <item>ownCloud</item>
-    <item>Send to&#8230;</item>
+    <item>Send til&#8230;</item>
   </string-array>
   <string name="btn_move">Flytt</string>
   <string name="title_move_transactions">Flytt %1$d transaksjon(er)</string>
@@ -132,12 +132,13 @@
   <string name="summary_xml_ofx_header">Aktiver dette alternativet nr du eksporterer til tredjeparts programvare, borsett fra GnuCash for PC</string>
   <string name="title_whats_new">Hva er nytt</string>
   <string name="whats_new">
-- Nytt Material app design \n
-- Multivaluta transaksjoner \n
-- Kalkulator til transaksjonsbelp \n
-- Forbedrede rapport muligheter \n
-- Ny Hjelp &amp; Tilbakemeldingsseksjon \n
-- Mange feilrettinger og forbedringer \n</string>
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
+        - Multiple bug fixes and improvements\n
+	</string>
   <string name="label_dismiss">Avvis</string>
   <string name="toast_transanction_amount_required">Angi et belp for  lagre transaksjonen</string>
   <string name="toast_error_edit_multi_currency_transaction">Multi-valutatransaksjoner kan ikke endres</string>
@@ -208,7 +209,7 @@
   <string name="title_all_accounts">Alle</string>
   <string name="summary_create_default_accounts">Oppretter standard GnuCash kontostruktur</string>
   <string name="title_create_default_accounts">Opprette standardkontoer</string>
-  <string name="msg_confirm_create_default_accounts_setting">Alle eksisterende kontoer og transaksjoner p enheten blir slettet.\n\nEr du sikker p at du vil fortsette?</string>
+  <string name="msg_confirm_create_default_accounts_setting">En ny bok pnes med standard accounts\n\nYour gjeldende kontoer og transaksjoner vil ikke bli endret!</string>
   <string name="menu_scheduled_transactions">Planlagte transaksjoner</string>
   <string name="msg_confirm_create_default_accounts_first_run">Velkommen til GnuCash Android! \nDu kan enten opprette et hierarki av brukte kontoer, eller importere din egen GnuCash kontostruktur. \n\nBegge alternativer er ogs tilgjengelige i app innstillinger s du kan velge senere.</string>
   <string name="title_scheduled_transactions">Transaksjoner</string>
@@ -272,10 +273,10 @@
   <string name="label_tap_to_create_schedule">Trykk for  opprette plan</string>
   <string name="title_restore_backup">Gjenopprette sikkerhetskopi&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; eksport</string>
-  <string name="title_dropbox_sync_preference">Enable DropBox</string>
+  <string name="title_dropbox_sync_preference">Aktiver DropBox</string>
   <string name="title_owncloud_sync_preference">Aktiver ownCloud </string>
   <string name="title_backup_preference_category">Sikkerhetskopiering</string>
-  <string name="summary_dropbox_sync">Enable exporting to DropBox</string>
+  <string name="summary_dropbox_sync">Aktiver eksportering til DropBox</string>
   <string name="summary_owncloud_sync">Aktiver eksport til ownCloud</string>
   <string name="title_select_gnucash_xml_file">Velg GnuCash XML-fil</string>
   <string name="title_backup_prefs">Innstillinger for sikkerhetskopiering</string>
@@ -286,7 +287,7 @@
   <string name="toast_backup_failed">Sikkerhetskopiering mislyktes</string>
   <string name="export_warning_xml">Eksporterer alle kontoer og transaksjoner</string>
   <string name="title_google_drive_sync_pref">Aktiver Google Drive</string>
-  <string name="summary_google_drive_sync">Enable exporting to Google Drive</string>
+  <string name="summary_google_drive_sync">Aktiver eksportering til Google Drive</string>
   <string name="toast_install_file_manager">Installer en filbehandler for  velge filer</string>
   <string name="title_select_backup_to_restore">Velg sikkerhetskopien som skal gjenopprettes</string>
   <string name="nav_menu_favorites">Favoritter</string>
@@ -297,11 +298,11 @@
   <string name="nav_menu_settings">Innstillinger</string>
   <string name="username">Brukernavn</string>
   <string name="password">Passord</string>
-  <string name="owncloud_pref">owncloud</string>
+  <string name="owncloud_pref">ownCloud</string>
   <string name="owncloud_server">https://</string>
-  <string name="owncloud_server_invalid">OC server not found</string>
-  <string name="owncloud_user_invalid">OC username/password invalid</string>
-  <string name="owncloud_dir_invalid">Invalid chars: \\ &lt; &gt; : \&quot; | * ? </string>
+  <string name="owncloud_server_invalid">Finner ikke OC-server</string>
+  <string name="owncloud_user_invalid">OC brukernavn/passord ugyldig</string>
+  <string name="owncloud_dir_invalid">Ugyldige tegn: \\ &lt; &gt;: \ \"| * ? </string>
   <string name="owncloud_server_ok">OC server OK</string>
   <string name="owncloud_user_ok">OC username/password OK</string>
   <string name="owncloud_dir_ok">Dir name OK</string>
@@ -395,13 +396,13 @@
   <string name="menu_move_transaction">Move&#8230;</string>
   <string name="menu_duplicate_transaction">Duplicate</string>
   <string name="nav_menu_budgets">Budgets</string>
-  <string name="title_cash_flow_report">Cash Flow</string>
+  <string name="title_cash_flow_report">Kontantstrm</string>
   <string name="title_budgets">Budgets</string>
   <string name="title_use_compact_list">Enable compact view</string>
   <string name="summary_use_compact_list">Enable to always use compact view for transactions list</string>
-  <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
+  <string name="error_invalid_exchange_rate">Ugyldig valutakurs</string>
   <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
-  <string name="error_invalid_amount">Invalid amount</string>
+  <string name="error_invalid_amount">Ugyldig belp</string>
   <string-array name="report_time_range">
     <item>Gjeldende mned</item>
     <item>Siste 3 mneder</item>
@@ -444,4 +445,28 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-nl-rNL/strings.xml b/app/src/main/res/values-nl-rNL/strings.xml
index b84f4c39..52a94696 100644
--- a/app/src/main/res/values-nl-rNL/strings.xml
+++ b/app/src/main/res/values-nl-rNL/strings.xml
@@ -132,12 +132,12 @@
   <string name="summary_xml_ofx_header">Schakel deze optie in als u naar een applicatie anders dan GnuCash wil exporteren</string>
   <string name="title_whats_new">Nieuw sinds de vorige versie</string>
   <string name="whats_new">
-        - Nieuw Material app layout \n
-        - Boekingen in meerdere valuta\n
-        - Rekenmachine voor boekingsbedragen\n
-        - Betere rapporteringsmogelijkheden\n
-        - Nieuwe sectie voor hulp &amp; feedback\n
-        - Meerdere foutcorrecties en verbeteringen\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
+        - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Wijs af</string>
   <string name="toast_transanction_amount_required">Vul een bedrag in om de transactie op te slaan.</string>
@@ -213,7 +213,7 @@
   <string name="title_all_accounts">Alle</string>
   <string name="summary_create_default_accounts">Creert standaard GnuCash veelgebruikte rekeningstructuur</string>
   <string name="title_create_default_accounts">Standaard rekeningen creren</string>
-  <string name="msg_confirm_create_default_accounts_setting">Alle bestaande rekeningen en boekingen op het apparaat zullen verwijderd worden.\n\nWeet u zeker dat u wilt doorgaan?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Vaste journaalposten</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welkom in GnuCash Android! \nJe kan een nieuwe structuur van
         veel gebruikte rekeningen creren, of je eigen GnuCash rekeningstructuur importeren. \n\nBeide opties zijn ook
@@ -454,4 +454,28 @@ No user-identifiable information will be collected as part of this process!
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-no-rNO/strings.xml b/app/src/main/res/values-no-rNO/strings.xml
index b3ee830e..e027f439 100644
--- a/app/src/main/res/values-no-rNO/strings.xml
+++ b/app/src/main/res/values-no-rNO/strings.xml
@@ -132,12 +132,13 @@
   <string name="summary_xml_ofx_header">Aktiver dette alternativet nr du eksporterer til tredjeparts programvare, borsett fra GnuCash for PC</string>
   <string name="title_whats_new">Hva er nytt</string>
   <string name="whats_new">
-- Nytt Material app design \n
-- Multivaluta transaksjoner \n
-- Kalkulator til transaksjonsbelp \n
-- Forbedrede rapport muligheter \n
-- Ny Hjelp &amp; Tilbakemeldingsseksjon \n
-- Mange feilrettinger og forbedringer \n</string>
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
+        - Multiple bug fixes and improvements\n
+	</string>
   <string name="label_dismiss">Avvis</string>
   <string name="toast_transanction_amount_required">Angi et belp for  lagre transaksjonen</string>
   <string name="toast_error_edit_multi_currency_transaction">Multi-valutatransaksjoner kan ikke endres</string>
@@ -208,7 +209,7 @@
   <string name="title_all_accounts">Alle</string>
   <string name="summary_create_default_accounts">Oppretter standard GnuCash kontostruktur</string>
   <string name="title_create_default_accounts">Opprette standardkontoer</string>
-  <string name="msg_confirm_create_default_accounts_setting">Alle eksisterende kontoer og transaksjoner p enheten blir slettet.\n\nEr du sikker p at du vil fortsette?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Planlagte transaksjoner</string>
   <string name="msg_confirm_create_default_accounts_first_run">Velkommen til GnuCash Android! \nDu kan enten opprette et hierarki av brukte kontoer, eller importere din egen GnuCash kontostruktur. \n\nBegge alternativer er ogs tilgjengelige i app innstillinger s du kan velge senere.</string>
   <string name="title_scheduled_transactions">Transaksjoner</string>
@@ -444,4 +445,28 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-pl-rPL/strings.xml b/app/src/main/res/values-pl-rPL/strings.xml
index f47715d0..8dfd26c0 100644
--- a/app/src/main/res/values-pl-rPL/strings.xml
+++ b/app/src/main/res/values-pl-rPL/strings.xml
@@ -133,12 +133,13 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   <string name="summary_xml_ofx_header">Wcz t opcj gdy eksportujesz do aplikacji innej ni GnuCash dla desktopa</string>
   <string name="title_whats_new">Co nowego</string>
   <string name="whats_new">
-- Nowy design aplikacji Material
-- Transakcje wielo-walutowe
-- Kalkulator kwot transakcji
-- Ulepszone opcje raportowania
-- Nowe centrum pomocy i feedbacku
-- Wiele naprawionych bdw oraz ulepsze</string>
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
+        - Multiple bug fixes and improvements\n
+	</string>
   <string name="label_dismiss">Spocznij</string>
   <string name="toast_transanction_amount_required">Wprowad kwot by zapisa transakcj</string>
   <string name="toast_error_edit_multi_currency_transaction">Wielowalutowe transakcje nie mog by modyfikowane</string>
@@ -210,7 +211,7 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   <string name="title_all_accounts">Wszystkie</string>
   <string name="summary_create_default_accounts">Tworzy typow dla GnuCash struktur kont</string>
   <string name="title_create_default_accounts">Utwrz domylne konta</string>
-  <string name="msg_confirm_create_default_accounts_setting">Wszystkie istniejce konta i transakcje na urzdzeniu bd usunite.\n\nCzy na pewno chcesz kontynuowa?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Zaplanowane transakcje</string>
   <string name="msg_confirm_create_default_accounts_first_run">Witamy w GnuCash dla Android!\nMoesz utworzy typow hierarchi kont lub zaimportowa wasn struktur.\n\nObie opcje dostpne s w ustawieniach aplikacji, take moesz zdecydowa pniej</string>
   <string name="title_scheduled_transactions">Zaplanowane transakcje</string>
@@ -451,4 +452,30 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="few">%d accounts</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="few">%d transactions</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index e039d904..b057ca29 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Active esta opo quando fizer exportaes para outras aplicaes que no seja o GnuCash para Desktop</string>
   <string name="title_whats_new">O que h de novo</string>
   <string name="whats_new">
-		- New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Descartar</string>
@@ -209,7 +209,7 @@
   <string name="title_all_accounts">Todas</string>
   <string name="summary_create_default_accounts">Cria uma estrutura de contas GnuCash padro</string>
   <string name="title_create_default_accounts">Cria contas padro</string>
-  <string name="msg_confirm_create_default_accounts_setting">Todas as contas e transaes existentes no equipamento sero apagadas.\n\nTem a certeza que pretende continuar?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Transaes agendadas</string>
   <string name="msg_confirm_create_default_accounts_first_run">Bem vindo ao GnuCash Android! \nPode criar um hierarquia de contas, ou importar a sua estrutura de contas do GnuCash. \n\n Ambas as opes esto disponves bas Opes da aplicao, para que possa decidir mais tarde.
     </string>
@@ -448,4 +448,28 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="toast_transaction_has_no_splits_and_cannot_open">A transao selecionada no tem divises e no pode ser aberta</string>
   <string name="label_split_count">%1$d divises</string>
   <string name="label_inside_account_with_name">em %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rPT/strings.xml b/app/src/main/res/values-pt-rPT/strings.xml
index 5c196078..3ca9d0b6 100644
--- a/app/src/main/res/values-pt-rPT/strings.xml
+++ b/app/src/main/res/values-pt-rPT/strings.xml
@@ -132,13 +132,12 @@
   <string name="summary_xml_ofx_header">Active esta opo quando fizer exportaes para outras aplicaes que no seja o GnuCash para Desktop</string>
   <string name="title_whats_new">O que h de novo</string>
   <string name="whats_new">
-		- New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
-        - Multiple bug fixes and improvements\n
-	</string>
+- Suporte para vrios livres diferentes\n
+- Adiciona o ownCloud como destino das exportaes\n
+- Vista compacta da lista das transaes\n
+- Redesenhado o ecr de bloqueio de password\n
+- Melhorado o tratamento de transaes agendadas\n
+ - Vrias correces de erros e melhoramentos\n</string>
   <string name="label_dismiss">Descartar</string>
   <string name="toast_transanction_amount_required">Introduza um valor para gravar a transao</string>
   <string name="toast_error_edit_multi_currency_transaction">As transaes multi-moeda no podem ser alteradas</string>
@@ -209,7 +208,7 @@
   <string name="title_all_accounts">Todas</string>
   <string name="summary_create_default_accounts">Cria uma estrutura de contas GnuCash padro</string>
   <string name="title_create_default_accounts">Cria contas padro</string>
-  <string name="msg_confirm_create_default_accounts_setting">Todas as contas e transaes existentes no equipamento sero apagadas.\n\nTem a certeza que pretende continuar?</string>
+  <string name="msg_confirm_create_default_accounts_setting">Ir ser aberto um novo livro com as contas por defeito\n\nAs suas contas e transaes no iro ser modificadas!</string>
   <string name="menu_scheduled_transactions">Transaes agendadas</string>
   <string name="msg_confirm_create_default_accounts_first_run">Bem vindo ao GnuCash Android! \nPode criar um hierarquia de contas, ou importar a sua estrutura de contas do GnuCash. \n\n Ambas as opes esto disponves bas Opes da aplicao, para que possa decidir mais tarde.
     </string>
@@ -448,4 +447,28 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="toast_transaction_has_no_splits_and_cannot_open">A transao selecionadas no tem divises e no pode ser aberta</string>
   <string name="label_split_count">Servidor OC no encontrado</string>
   <string name="label_inside_account_with_name">em %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d conta</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transao</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-ro-rRO/strings.xml b/app/src/main/res/values-ro-rRO/strings.xml
index 31833158..266e93c4 100644
--- a/app/src/main/res/values-ro-rRO/strings.xml
+++ b/app/src/main/res/values-ro-rRO/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -214,7 +214,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -458,4 +458,30 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="few">%d accounts</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="few">%d transactions</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index b7ba8b8f..d4df2fa5 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -132,12 +132,12 @@
   <string name="summary_xml_ofx_header">  ,       GnuCash  </string>
   <string name="title_whats_new"></string>
   <string name="whats_new">
-        -   \n
-        -    \n
-        -    \n
-        -  \n
-        -      \n
-        -     \n
+        -     \n
+        -  ownCloud    \n
+        -    \n
+        -    \n
+        -    \n
+        -      \n
 	</string>
   <string name="label_dismiss"></string>
   <string name="toast_transanction_amount_required"> ,   </string>
@@ -210,7 +210,7 @@
   <string name="title_all_accounts"></string>
   <string name="summary_create_default_accounts">   GnuCash  </string>
   <string name="title_create_default_accounts">   </string>
-  <string name="msg_confirm_create_default_accounts_setting">        .\n\n ,   ?</string>
+  <string name="msg_confirm_create_default_accounts_setting">         \n\n       !</string>
   <string name="menu_scheduled_transactions"> </string>
   <string name="msg_confirm_create_default_accounts_first_run">
           GnuCash  Android!\n    
@@ -456,4 +456,30 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">         </string>
   <string name="label_split_count">%1$d </string>
   <string name="label_inside_account_with_name"> %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d </item>
+    <item quantity="few">%d </item>
+    <item quantity="other">%d </item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d </item>
+    <item quantity="few">%d </item>
+    <item quantity="other">%d </item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item></item>
+    <item></item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">  Google </string>
+  <string name="toast_unable_to_connect_to_google_drive">    Google </string>
+  <string name="toast_enter_amount_to_split">,    </string>
+  <string name="label_export_target_external_service"> </string>
+  <string name="toast_updated_transaction_recurring_schedule">   </string>
+  <string name="label_export_transactions_since_date"> </string>
+  <string name="switch_export_transactions_from_all_time"> </string>
+  <string name="label_recommend_app">  Play Store</string>
+  <string name="repeat_until_date"> %1$s</string>
+  <string name="repeat_on_weekday"> %1$s</string>
+  <string name="repeat_x_times"> %1$s </string>
+  <string name="menu_show_compact_view"> </string>
 </resources>
diff --git a/app/src/main/res/values-sr-rSP/strings.xml b/app/src/main/res/values-sr-rSP/strings.xml
index f2edbb93..a1940ab8 100644
--- a/app/src/main/res/values-sr-rSP/strings.xml
+++ b/app/src/main/res/values-sr-rSP/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -214,7 +214,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -458,4 +458,30 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="few">%d accounts</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="few">%d transactions</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-sv-rSE/strings.xml b/app/src/main/res/values-sv-rSE/strings.xml
index 8f590695..0de912cd 100644
--- a/app/src/main/res/values-sv-rSE/strings.xml
+++ b/app/src/main/res/values-sv-rSE/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -213,7 +213,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -453,4 +453,28 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-tr-rTR/strings.xml b/app/src/main/res/values-tr-rTR/strings.xml
index 5a5e5a04..1e38343b 100644
--- a/app/src/main/res/values-tr-rTR/strings.xml
+++ b/app/src/main/res/values-tr-rTR/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">Yenilikler</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Yoksay</string>
@@ -213,7 +213,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -453,4 +453,28 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-uk-rUA/strings.xml b/app/src/main/res/values-uk-rUA/strings.xml
index b2dd85d8..26fc66f7 100644
--- a/app/src/main/res/values-uk-rUA/strings.xml
+++ b/app/src/main/res/values-uk-rUA/strings.xml
@@ -132,12 +132,12 @@
   <string name="summary_xml_ofx_header">  ,       GnuCash  </string>
   <string name="title_whats_new"> </string>
   <string name="whats_new">
-        -   \n
-        -   \n
-        -      \n
-        -  \n
-        -       \'\n
-        -     \n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
+        - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss"></string>
   <string name="toast_transanction_amount_required"> ,   </string>
@@ -210,7 +210,7 @@
   <string name="title_all_accounts"></string>
   <string name="summary_create_default_accounts">    GnuCash</string>
   <string name="title_create_default_accounts">  </string>
-  <string name="msg_confirm_create_default_accounts_setting">      .\n\n ,   ?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions"> </string>
   <string name="msg_confirm_create_default_accounts_first_run">   GnuCash  Android!\n
     	      ,     GnuCash.\n\n
@@ -454,4 +454,30 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="one">%d account</item>
+    <item quantity="few">%d accounts</item>
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="one">%d transaction</item>
+    <item quantity="few">%d transactions</item>
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-vi-rVN/strings.xml b/app/src/main/res/values-vi-rVN/strings.xml
index 0e127f76..3ebe7226 100644
--- a/app/src/main/res/values-vi-rVN/strings.xml
+++ b/app/src/main/res/values-vi-rVN/strings.xml
@@ -132,11 +132,11 @@
   <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
   <string name="title_whats_new">What\'s New</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
 	</string>
   <string name="label_dismiss">Dismiss</string>
@@ -212,7 +212,7 @@
   <string name="title_all_accounts">All</string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions">Scheduled Transactions</string>
   <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
         a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
@@ -448,4 +448,26 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index 8fefef89..36e22493 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -132,13 +132,13 @@
   <string name="summary_xml_ofx_header">GnuCash</string>
   <string name="title_whats_new"></string>
   <string name="whats_new">
-        - Material Design \n
-        -  \n
-        -  \n
-        -  \n
-        -  \n
-        - \n
-    </string>
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
+        - Multiple bug fixes and improvements\n
+	</string>
   <string name="label_dismiss"></string>
   <string name="toast_transanction_amount_required"></string>
   <string name="toast_error_edit_multi_currency_transaction"></string>
@@ -210,7 +210,7 @@
   <string name="title_all_accounts"></string>
   <string name="summary_create_default_accounts"></string>
   <string name="title_create_default_accounts"></string>
-  <string name="msg_confirm_create_default_accounts_setting">\n\n</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions"></string>
   <string name="msg_confirm_create_default_accounts_first_run">GnuCash Android \n12\
     </string>
@@ -443,4 +443,26 @@
   <string name="toast_transaction_has_no_splits_and_cannot_open"></string>
   <string name="label_split_count">%1$d </string>
   <string name="label_inside_account_with_name"> %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="other">%d </item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="other">%d </item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>
diff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml
index 0f26a521..23a7d53b 100644
--- a/app/src/main/res/values-zh-rTW/strings.xml
+++ b/app/src/main/res/values-zh-rTW/strings.xml
@@ -132,13 +132,13 @@
   <string name="summary_xml_ofx_header">GnuCash</string>
   <string name="title_whats_new"></string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
+        - Support for multiple different books \n
+        - Adds ownCloud as destination for exports\n
+        - Compact view for transactions list\n
+        - Re-design of passcode lock screen\n
+        - Improved handling of scheduled transactions\n
         - Multiple bug fixes and improvements\n
-    </string>
+	</string>
   <string name="label_dismiss"></string>
   <string name="toast_transanction_amount_required"></string>
   <string name="toast_error_edit_multi_currency_transaction"></string>
@@ -210,7 +210,7 @@
   <string name="title_all_accounts"></string>
   <string name="summary_create_default_accounts"></string>
   <string name="title_create_default_accounts"></string>
-  <string name="msg_confirm_create_default_accounts_setting">\n\n</string>
+  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
   <string name="menu_scheduled_transactions"></string>
   <string name="msg_confirm_create_default_accounts_first_run">GnuCash Android \n12\
     </string>
@@ -445,4 +445,26 @@ No user-identifiable information will be collected as part of this process!
   <string name="toast_transaction_has_no_splits_and_cannot_open">The selected transaction has no splits and cannot be opened</string>
   <string name="label_split_count">%1$d splits</string>
   <string name="label_inside_account_with_name">in %1$s</string>
+  <plurals name="book_account_stats">
+    <item quantity="other">%d accounts</item>
+  </plurals>
+  <plurals name="book_transaction_stats">
+    <item quantity="other">%d transactions</item>
+  </plurals>
+  <string-array name="report_account_types">
+    <item>EXPENSE</item>
+    <item>INCOME</item>
+  </string-array>
+  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
+  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
+  <string name="label_export_target_external_service">external service</string>
+  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
+  <string name="label_export_transactions_since_date">Since</string>
+  <string name="switch_export_transactions_from_all_time">All time</string>
+  <string name="label_recommend_app">Recommend in Play Store</string>
+  <string name="repeat_until_date">until %1$s</string>
+  <string name="repeat_on_weekday">on %1$s</string>
+  <string name="repeat_x_times">for %1$s times</string>
+  <string name="menu_show_compact_view">Compact View</string>
 </resources>

From 8fd061f151d527278b3ee41d993d77c2a14b18b4 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 25 Aug 2016 14:39:58 +0200
Subject: [PATCH 117/121] Update version string for v2.1.0-beta5 release

---
 app/build.gradle | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/build.gradle b/app/build.gradle
index a764cb1a..f4bf0726 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -7,7 +7,7 @@ apply plugin: 'io.fabric'
 def versionMajor = 2
 def versionMinor = 1
 def versionPatch = 0
-def versionBuild = 4
+def versionBuild = 5
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")

From 41f368bfdd2bfcba7858194410a1eba591beb175 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 31 Aug 2016 10:01:13 +0200
Subject: [PATCH 118/121] Fix bug with counting number of occurrences (some
 occurrences missed)

Switch Recurrence to use LocalDateTimes to avoid time zone and DST issues
Fix breaking tests
---
 .../java/org/gnucash/android/model/Recurrence.java | 50 +++++++++++++++++-----
 .../unit/service/ScheduledActionServiceTest.java   |  5 +--
 2 files changed, 40 insertions(+), 15 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/model/Recurrence.java b/app/src/main/java/org/gnucash/android/model/Recurrence.java
index 2b1c4169..48db0af9 100644
--- a/app/src/main/java/org/gnucash/android/model/Recurrence.java
+++ b/app/src/main/java/org/gnucash/android/model/Recurrence.java
@@ -25,7 +25,9 @@
 import org.joda.time.DateTime;
 import org.joda.time.Days;
 import org.joda.time.LocalDate;
+import org.joda.time.LocalDateTime;
 import org.joda.time.Months;
+import org.joda.time.ReadablePeriod;
 import org.joda.time.Weeks;
 import org.joda.time.Years;
 
@@ -273,25 +275,51 @@ public int getCount(){
         if (mPeriodEnd == null)
             return -1;
 
-        int count = 0;
-        DateTime startDate = new DateTime(mPeriodStart.getTime());
-        DateTime endDate = new DateTime(mPeriodEnd.getTime());
+        int multiple = mPeriodType.getMultiplier();
+        ReadablePeriod jodaPeriod;
         switch (mPeriodType){
             case DAY:
-                count = Days.daysBetween(startDate, endDate).getDays();
+                jodaPeriod = Days.days(multiple);
                 break;
             case WEEK:
-                count = Weeks.weeksBetween(startDate, endDate).getWeeks();
+                jodaPeriod = Weeks.weeks(multiple);
                 break;
             case MONTH:
-                count = Months.monthsBetween(startDate, endDate).getMonths();
+                jodaPeriod = Months.months(multiple);
                 break;
             case YEAR:
-                count = Years.yearsBetween(startDate, endDate).getYears();
+                jodaPeriod = Years.years(multiple);
                 break;
+            default:
+                jodaPeriod = Months.months(multiple);
+        }
+        int count = 0;
+        LocalDateTime startTime = new LocalDateTime(mPeriodStart.getTime());
+        while (startTime.toDateTime().getMillis() < mPeriodEnd.getTime()){
+            ++count;
+            startTime = startTime.plus(jodaPeriod);
         }
+        return count;
 
-        return count/mPeriodType.getMultiplier();
+/*
+        //this solution does not use looping, but is not very accurate
+
+        int multiplier = mPeriodType.getMultiplier();
+        LocalDateTime startDate = new LocalDateTime(mPeriodStart.getTime());
+        LocalDateTime endDate = new LocalDateTime(mPeriodEnd.getTime());
+        switch (mPeriodType){
+            case DAY:
+                return Days.daysBetween(startDate, endDate).dividedBy(multiplier).getDays();
+            case WEEK:
+                return Weeks.weeksBetween(startDate, endDate).dividedBy(multiplier).getWeeks();
+            case MONTH:
+                return Months.monthsBetween(startDate, endDate).dividedBy(multiplier).getMonths();
+            case YEAR:
+                return Years.yearsBetween(startDate, endDate).dividedBy(multiplier).getYears();
+            default:
+                return -1;
+        }
+*/
     }
 
     /**
@@ -299,8 +327,8 @@ public int getCount(){
      * @param numberOfOccurences Number of occurences from the start time
      */
     public void setPeriodEnd(int numberOfOccurences){
-        DateTime localDate = new DateTime(mPeriodStart.getTime());
-        DateTime endDate;
+        LocalDateTime localDate = new LocalDateTime(mPeriodStart.getTime());
+        LocalDateTime endDate;
         int occurrenceDuration = numberOfOccurences * mPeriodType.getMultiplier();
         switch (mPeriodType){
             case DAY:
@@ -317,7 +345,7 @@ public void setPeriodEnd(int numberOfOccurences){
                 endDate = localDate.plusYears(occurrenceDuration);
                 break;
         }
-        mPeriodEnd = new Timestamp(endDate.getMillis());
+        mPeriodEnd = new Timestamp(endDate.toDateTime().getMillis());
     }
 
     /**
diff --git a/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
index 0e6adb24..08e5f3a5 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
@@ -199,10 +199,7 @@ public void missedScheduledTransactions_shouldBeGenerated(){
         actions.add(scheduledAction);
         ScheduledActionService.processScheduledActions(actions, mDb);
 
-        int weeks = Weeks.weeksBetween(startTime, new DateTime(2016, 8, 29, 10, 0)).getWeeks();
-        int expectedTransactionCount = weeks/2;
-
-        assertThat(transactionsDbAdapter.getRecordsCount()).isEqualTo(expectedTransactionCount);
+        assertThat(transactionsDbAdapter.getRecordsCount()).isEqualTo(7);
     }
 
     public void endTimeInTheFuture_shouldExecuteOnlyUntilPresent(){

From 77d9323bd5cb4a1fb40fb9a894943a9e9d7a73c4 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 31 Aug 2016 10:15:03 +0200
Subject: [PATCH 119/121] Clear book shared preferences when the book is
 deleted from db - fixes #561

Refactored deleteBook method in to the correct adapter
---
 .../android/test/ui/ExportTransactionsTest.java      |  6 +++---
 .../gnucash/android/test/ui/PieChartReportTest.java  |  9 +--------
 .../android/test/ui/TransactionsActivityTest.java    |  8 ++------
 .../org/gnucash/android/app/GnuCashApplication.java  |  4 ++--
 .../gnucash/android/db/adapter/BooksDbAdapter.java   | 20 ++++++++++++++++++++
 .../gnucash/android/db/adapter/DatabaseAdapter.java  | 16 +++-------------
 .../android/ui/account/AccountFormFragment.java      |  2 +-
 .../android/ui/settings/PreferenceActivity.java      | 18 ++++++++++++++----
 .../ui/transaction/TransactionFormFragment.java      |  4 ++--
 .../ui/transaction/TransactionsListFragment.java     |  2 +-
 .../org/gnucash/android/util/PreferencesHelper.java  |  2 +-
 11 files changed, 50 insertions(+), 41 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index ed52133e..c641bce1 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -148,7 +148,7 @@ public void setUp() throws Exception {
 	 */
 	@Test
 	public void testOfxExport(){
-		SharedPreferences.Editor prefsEditor = PreferenceActivity.getActiveBookSharedPreferences(mAcccountsActivity)
+		SharedPreferences.Editor prefsEditor = PreferenceActivity.getActiveBookSharedPreferences()
 				.edit();
 		prefsEditor.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), false)
 				.commit();
@@ -159,7 +159,7 @@ public void testOfxExport(){
 
 	@Test
 	public void whenInSingleEntry_shouldHideXmlExportOption(){
-		SharedPreferences.Editor prefsEditor = PreferenceActivity.getActiveBookSharedPreferences(mAcccountsActivity)
+		SharedPreferences.Editor prefsEditor = PreferenceActivity.getActiveBookSharedPreferences()
 				.edit();
 		prefsEditor.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), false)
 				.commit();
@@ -232,7 +232,7 @@ public void testDeleteTransactionsAfterExport(){
 		editor.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export), true);
 		editor.commit();
 
-		PreferenceActivity.getActiveBookSharedPreferences(getActivity())
+		PreferenceActivity.getActiveBookSharedPreferences()
 				.edit()
 				.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry), true)
 				.apply();
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index 1f171074..b0b1a15c 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -17,9 +17,6 @@
 package org.gnucash.android.test.ui;
 
 import android.content.Context;
-import android.content.Intent;
-import android.database.SQLException;
-import android.database.sqlite.SQLiteDatabase;
 import android.support.test.espresso.ViewAction;
 import android.support.test.espresso.action.CoordinatesProvider;
 import android.support.test.espresso.action.GeneralClickAction;
@@ -27,17 +24,14 @@
 import android.support.test.espresso.action.Tap;
 import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
-import android.util.Log;
 import android.view.View;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.db.adapter.AccountsDbAdapter;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.db.adapter.CommoditiesDbAdapter;
 import org.gnucash.android.db.adapter.DatabaseAdapter;
-import org.gnucash.android.db.adapter.SplitsDbAdapter;
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.importer.GncXmlImporter;
 import org.gnucash.android.model.AccountType;
@@ -47,7 +41,6 @@
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.model.TransactionType;
 import org.gnucash.android.test.ui.util.DisableAnimationsRule;
-import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.report.BaseReportFragment;
 import org.gnucash.android.ui.report.ReportsActivity;
 import org.gnucash.android.ui.report.piechart.PieChartFragment;
@@ -131,7 +124,7 @@ public static void prepareTestCase() throws Exception {
 
         CURRENCY = CommoditiesDbAdapter.getInstance().getCommodity("USD");
 
-        PreferenceActivity.getActiveBookSharedPreferences(context).edit()
+        PreferenceActivity.getActiveBookSharedPreferences().edit()
                 .putString(context.getString(R.string.key_default_currency), CURRENCY.getCurrencyCode())
                 .commit();
     }
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 36d5fd7b..bf5373a5 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -22,7 +22,6 @@
 import android.content.SharedPreferences;
 import android.content.SharedPreferences.Editor;
 import android.support.test.espresso.Espresso;
-import android.support.test.espresso.contrib.RecyclerViewActions;
 import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
 
@@ -61,7 +60,6 @@
 import java.util.List;
 import java.util.Locale;
 
-import static android.support.test.espresso.Espresso.onData;
 import static android.support.test.espresso.Espresso.onView;
 import static android.support.test.espresso.action.ViewActions.clearText;
 import static android.support.test.espresso.action.ViewActions.click;
@@ -69,7 +67,6 @@
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.RootMatchers.withDecorView;
 import static android.support.test.espresso.matcher.ViewMatchers.hasDescendant;
-import static android.support.test.espresso.matcher.ViewMatchers.hasSibling;
 import static android.support.test.espresso.matcher.ViewMatchers.isChecked;
 import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
@@ -77,7 +74,6 @@
 import static android.support.test.espresso.matcher.ViewMatchers.withText;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.hamcrest.Matchers.allOf;
-import static org.hamcrest.Matchers.instanceOf;
 import static org.hamcrest.Matchers.is;
 import static org.hamcrest.Matchers.not;
 
@@ -451,7 +447,7 @@ public void testSplitEditor(){
 
 
     private void setDoubleEntryEnabled(boolean enabled){
-        SharedPreferences prefs = PreferenceActivity.getActiveBookSharedPreferences(mTransactionsActivity);
+        SharedPreferences prefs = PreferenceActivity.getActiveBookSharedPreferences();
         Editor editor = prefs.edit();
         editor.putBoolean(mTransactionsActivity.getString(R.string.key_use_double_entry), enabled);
         editor.apply();
@@ -466,7 +462,7 @@ public void testDefaultTransactionType(){
 	}
 
 	private void setDefaultTransactionType(TransactionType type) {
-		SharedPreferences prefs = PreferenceActivity.getActiveBookSharedPreferences(mTransactionsActivity);
+		SharedPreferences prefs = PreferenceActivity.getActiveBookSharedPreferences();
 		Editor editor = prefs.edit();
 		editor.putString(mTransactionsActivity.getString(R.string.key_default_transaction_type), type.name());
 		editor.commit();
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 325ceb04..859e87b0 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -252,7 +252,7 @@ public static boolean isRoboUnitTest(){
      * @return <code>true</code> if double entry is enabled, <code>false</code> otherwise
      */
     public static boolean isDoubleEntryEnabled(){
-        SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences(context);
+        SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences();
         return sharedPrefs.getBoolean(context.getString(R.string.key_use_double_entry), true);
     }
 
@@ -263,7 +263,7 @@ public static boolean isDoubleEntryEnabled(){
      * @return <code>true</code> if opening balances should be saved, <code>false</code> otherwise
      */
     public static boolean shouldSaveOpeningBalances(boolean defaultValue){
-        SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences(context);
+        SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences();
         return sharedPrefs.getBoolean(context.getString(R.string.key_save_opening_balances), defaultValue);
     }
 
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
index 799f4ea3..e8e6460e 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
@@ -17,6 +17,7 @@
 package org.gnucash.android.db.adapter;
 
 import android.content.ContentValues;
+import android.content.Context;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteStatement;
@@ -26,6 +27,7 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema.BookEntry;
 import org.gnucash.android.model.Book;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.util.TimestampHelper;
 
 /**
@@ -92,6 +94,24 @@ public Book buildModelInstance(@NonNull Cursor cursor) {
         return stmt;
     }
 
+
+    /**
+     * Deletes a book - removes the book record from the database and deletes the database file from the disk
+     * @param bookUID GUID of the book
+     * @return <code>true</code> if deletion was successful, <code>false</code> otherwise
+     * @see #deleteRecord(String)
+     */
+    public boolean deleteBook(@NonNull String bookUID){
+        Context context = GnuCashApplication.getAppContext();
+        boolean result = context.deleteDatabase(bookUID);
+        if (result) //delete the db entry only if the file deletion was successful
+            result &= deleteRecord(bookUID);
+
+        PreferenceActivity.getBookSharedPreferences(bookUID).edit().clear().apply();
+
+        return result;
+    }
+    
     /**
      * Sets the book with unique identifier {@code uid} as active and all others as inactive
      * <p>If the parameter is null, then the currently active book is not changed</p>
diff --git a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
index f12c2e4d..d6de7287 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/DatabaseAdapter.java
@@ -17,6 +17,8 @@
 package org.gnucash.android.db.adapter;
 
 import android.content.ContentValues;
+import android.content.Context;
+import android.content.SharedPreferences;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteStatement;
@@ -32,6 +34,7 @@
 import org.gnucash.android.db.DatabaseSchema.TransactionEntry;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.BaseModel;
+import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.util.TimestampHelper;
 
 import java.util.ArrayList;
@@ -713,19 +716,6 @@ public boolean deleteRecord(@NonNull String uid){
     }
 
     /**
-     * Deletes a book - removes the book record from the database and deletes the database file from the disk
-     * @param bookUID GUID of the book
-     * @return <code>true</code> if deletion was successful, <code>false</code> otherwise
-     * @see #deleteRecord(String)
-     */
-    public boolean deleteBook(@NonNull String bookUID){
-        boolean result = GnuCashApplication.getAppContext().deleteDatabase(bookUID);
-        if (result) //delete the db entry only if the file deletion was successful
-            result &= deleteRecord(bookUID);
-        return result;
-    }
-
-    /**
      * Returns an attribute from a specific column in the database for a specific record.
      * <p>The attribute is returned as a string which can then be converted to another type if
      * the caller was expecting something other type </p>
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index d407db82..066e68d1 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -238,7 +238,7 @@ public void onCreate(Bundle savedInstanceState) {
 		setHasOptionsMenu(true);
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
-        SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences(getActivity());
+        SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences();
         mUseDoubleEntry = sharedPrefs.getBoolean(getString(R.string.key_use_double_entry), true);
 	}
 	
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
index a5016ece..f5c87a9c 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/PreferenceActivity.java
@@ -34,7 +34,9 @@
 import android.view.View;
 
 import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.model.Book;
 import org.gnucash.android.ui.passcode.PasscodeLockActivity;
 
 import butterknife.Bind;
@@ -147,12 +149,20 @@ public boolean onOptionsItemSelected(MenuItem item) {
     /**
      * Returns the shared preferences file for the currently active book.
      * Should be used instead of {@link PreferenceManager#getDefaultSharedPreferences(Context)}
-     * @param context Application context
      * @return Shared preferences file
      */
-    public static SharedPreferences getActiveBookSharedPreferences(Context context){
-        //// TODO: 21.12.2015 optimize the getActiveBookUID retrieval by caching it somewhere
-        return context.getSharedPreferences(BooksDbAdapter.getInstance().getActiveBookUID(), Context.MODE_PRIVATE);
+    public static SharedPreferences getActiveBookSharedPreferences(){
+        return getBookSharedPreferences(BooksDbAdapter.getInstance().getActiveBookUID());
+    }
+
+    /**
+     * Return the {@link SharedPreferences} for a specific book
+     * @param bookUID GUID of the book
+     * @return Shared preferences
+     */
+    public static SharedPreferences getBookSharedPreferences(String bookUID){
+        Context context = GnuCashApplication.getAppContext();
+        return context.getSharedPreferences(bookUID, Context.MODE_PRIVATE);
     }
 
     @Override
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index aa4a77b2..67e34d4b 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -293,7 +293,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		setHasOptionsMenu(true);
 
-		SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences(getActivity());
+		SharedPreferences sharedPrefs = PreferenceActivity.getActiveBookSharedPreferences();
 		mUseDoubleEntry = sharedPrefs.getBoolean(getString(R.string.key_use_double_entry), false);
 		if (!mUseDoubleEntry){
 			mDoubleEntryLayout.setVisibility(View.GONE);
@@ -538,7 +538,7 @@ private void initalizeViews() {
 		mTime = mDate = Calendar.getInstance();
 
         mTransactionTypeSwitch.setAccountType(mAccountType);
-		String typePref = PreferenceActivity.getActiveBookSharedPreferences(getActivity()).getString(getString(R.string.key_default_transaction_type), "DEBIT");
+		String typePref = PreferenceActivity.getActiveBookSharedPreferences().getString(getString(R.string.key_default_transaction_type), "DEBIT");
         mTransactionTypeSwitch.setChecked(TransactionType.valueOf(typePref));
 
 		String code = GnuCashApplication.getDefaultCurrencyCode();
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index bf1bcc5b..8d27d592 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -95,7 +95,7 @@ public void onCreate(Bundle savedInstanceState) {
 		Bundle args = getArguments();
 		mAccountUID = args.getString(UxArgument.SELECTED_ACCOUNT_UID);
 
-		mUseCompactView = PreferenceActivity.getActiveBookSharedPreferences(getActivity())
+		mUseCompactView = PreferenceActivity.getActiveBookSharedPreferences()
 				.getBoolean(getActivity().getString(R.string.key_use_compact_list), !GnuCashApplication.isDoubleEntryEnabled());
 		//if there was a local override of the global setting, respect it
 		if (savedInstanceState != null)
diff --git a/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
index 2b67ac6c..d58f2e7d 100644
--- a/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
+++ b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
@@ -78,7 +78,7 @@ public static void setLastExportTime(Timestamp lastExportTime, String bookUID) {
      * @return A {@link Timestamp} with the time.
      */
     public static Timestamp getLastExportTime() {
-        final String utcString = PreferenceActivity.getActiveBookSharedPreferences(GnuCashApplication.getAppContext())
+        final String utcString = PreferenceActivity.getActiveBookSharedPreferences()
                 .getString(PREFERENCE_LAST_EXPORT_TIME_KEY,
                         TimestampHelper.getUtcStringFromTimestamp(TimestampHelper.getTimestampFromEpochZero()));
         Log.d(LOG_TAG, "Retrieving '" + utcString + "' as lastExportTime from Android Preferences.");

From 4c42484cea1131cc3b9c74aad50343ddc559ebcd Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 31 Aug 2016 10:21:49 +0200
Subject: [PATCH 120/121] Update Chinese Simplified translation Extract default
 book name string for translation

---
 .../gnucash/android/db/adapter/BooksDbAdapter.java |  7 ++-
 app/src/main/res/values-af-rZA/strings.xml         |  1 +
 app/src/main/res/values-ar-rSA/strings.xml         |  1 +
 app/src/main/res/values-ca-rES/strings.xml         |  1 +
 app/src/main/res/values-cs-rCZ/strings.xml         |  1 +
 app/src/main/res/values-de/strings.xml             |  1 +
 app/src/main/res/values-el-rGR/strings.xml         |  1 +
 app/src/main/res/values-en-rGB/strings.xml         |  1 +
 app/src/main/res/values-es-rMX/strings.xml         |  1 +
 app/src/main/res/values-es/strings.xml             |  1 +
 app/src/main/res/values-fi-rFI/strings.xml         |  1 +
 app/src/main/res/values-fr/strings.xml             |  1 +
 app/src/main/res/values-hu-rHU/strings.xml         |  1 +
 app/src/main/res/values-it-rIT/strings.xml         |  1 +
 app/src/main/res/values-iw-rIL/strings.xml         |  1 +
 app/src/main/res/values-ja-rJP/strings.xml         |  1 +
 app/src/main/res/values-ko-rKR/strings.xml         |  1 +
 app/src/main/res/values-lv-rLV/strings.xml         |  1 +
 app/src/main/res/values-nb/strings.xml             |  1 +
 app/src/main/res/values-nl-rNL/strings.xml         |  1 +
 app/src/main/res/values-no-rNO/strings.xml         |  1 +
 app/src/main/res/values-pl-rPL/strings.xml         |  1 +
 app/src/main/res/values-pt-rBR/strings.xml         |  1 +
 app/src/main/res/values-pt-rPT/strings.xml         |  1 +
 app/src/main/res/values-ro-rRO/strings.xml         |  1 +
 app/src/main/res/values-ru/strings.xml             |  1 +
 app/src/main/res/values-sr-rSP/strings.xml         |  1 +
 app/src/main/res/values-sv-rSE/strings.xml         |  1 +
 app/src/main/res/values-tr-rTR/strings.xml         |  1 +
 app/src/main/res/values-uk-rUA/strings.xml         |  1 +
 app/src/main/res/values-vi-rVN/strings.xml         |  1 +
 app/src/main/res/values-zh-rCN/strings.xml         | 56 +++++++++++-----------
 app/src/main/res/values-zh-rTW/strings.xml         |  1 +
 app/src/main/res/values/strings.xml                |  1 +
 34 files changed, 66 insertions(+), 29 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
index e8e6460e..65e06c95 100644
--- a/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/adapter/BooksDbAdapter.java
@@ -24,6 +24,7 @@
 import android.net.Uri;
 import android.support.annotation.NonNull;
 
+import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema.BookEntry;
 import org.gnucash.android.model.Book;
@@ -111,7 +112,7 @@ public boolean deleteBook(@NonNull String bookUID){
 
         return result;
     }
-    
+
     /**
      * Sets the book with unique identifier {@code uid} as active and all others as inactive
      * <p>If the parameter is null, then the currently active book is not changed</p>
@@ -191,7 +192,9 @@ public boolean isActive(String bookUID){
         SQLiteStatement statement = mDb.compileStatement(sql);
 
         while (true) {
-            String name = "Book" + " " + bookCount;
+            Context context = GnuCashApplication.getAppContext();
+            String name = context.getString(R.string.book_default_name, bookCount);
+            //String name = "Book" + " " + bookCount;
 
             statement.clearBindings();
             statement.bindString(1, name);
diff --git a/app/src/main/res/values-af-rZA/strings.xml b/app/src/main/res/values-af-rZA/strings.xml
index 0de912cd..0c1a4909 100644
--- a/app/src/main/res/values-af-rZA/strings.xml
+++ b/app/src/main/res/values-af-rZA/strings.xml
@@ -477,4 +477,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-ar-rSA/strings.xml b/app/src/main/res/values-ar-rSA/strings.xml
index 11564b05..63d41923 100644
--- a/app/src/main/res/values-ar-rSA/strings.xml
+++ b/app/src/main/res/values-ar-rSA/strings.xml
@@ -505,4 +505,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-ca-rES/strings.xml b/app/src/main/res/values-ca-rES/strings.xml
index e4eff21d..84e02fd3 100644
--- a/app/src/main/res/values-ca-rES/strings.xml
+++ b/app/src/main/res/values-ca-rES/strings.xml
@@ -475,4 +475,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-cs-rCZ/strings.xml b/app/src/main/res/values-cs-rCZ/strings.xml
index a5574746..2603b4b9 100644
--- a/app/src/main/res/values-cs-rCZ/strings.xml
+++ b/app/src/main/res/values-cs-rCZ/strings.xml
@@ -484,4 +484,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index b91c5629..bfc9863a 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -474,4 +474,5 @@ No user-identifiable information will be collected as part of this process!</str
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-el-rGR/strings.xml b/app/src/main/res/values-el-rGR/strings.xml
index d1bffc59..05fdf60d 100644
--- a/app/src/main/res/values-el-rGR/strings.xml
+++ b/app/src/main/res/values-el-rGR/strings.xml
@@ -488,4 +488,5 @@ No user-identifiable information will be collected as part of this process!
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-en-rGB/strings.xml b/app/src/main/res/values-en-rGB/strings.xml
index 73da1649..90a0d4a3 100644
--- a/app/src/main/res/values-en-rGB/strings.xml
+++ b/app/src/main/res/values-en-rGB/strings.xml
@@ -477,4 +477,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index de0d9308..46d68e91 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -474,4 +474,5 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index ff8befdf..450a2052 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -472,4 +472,5 @@ Este proceso solo recoge informacin que no permite identificar al usuario</str
   <string name="repeat_on_weekday">en %1$s</string>
   <string name="repeat_x_times">%1$s veces</string>
   <string name="menu_show_compact_view">Vista compacta</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-fi-rFI/strings.xml b/app/src/main/res/values-fi-rFI/strings.xml
index 0de912cd..0c1a4909 100644
--- a/app/src/main/res/values-fi-rFI/strings.xml
+++ b/app/src/main/res/values-fi-rFI/strings.xml
@@ -477,4 +477,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 11908cf5..c7c68286 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -474,4 +474,5 @@ Aucune information permettant d\'identifier l\'utilisateur ne sera recueillis da
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-hu-rHU/strings.xml b/app/src/main/res/values-hu-rHU/strings.xml
index fb9698ba..fc8c18ac 100644
--- a/app/src/main/res/values-hu-rHU/strings.xml
+++ b/app/src/main/res/values-hu-rHU/strings.xml
@@ -479,4 +479,5 @@ No user-identifiable information will be collected as part of this process!
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index fc66c7d7..5ba00961 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -474,4 +474,5 @@
   <string name="repeat_on_weekday">il %1$s</string>
   <string name="repeat_x_times">per %1$s volte</string>
   <string name="menu_show_compact_view">Visualizzazione compatta</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-iw-rIL/strings.xml b/app/src/main/res/values-iw-rIL/strings.xml
index cecdad90..c6ab8173 100644
--- a/app/src/main/res/values-iw-rIL/strings.xml
+++ b/app/src/main/res/values-iw-rIL/strings.xml
@@ -491,4 +491,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index 86bbaf36..52068efd 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -463,4 +463,5 @@
   <string name="repeat_on_weekday">%1$s </string>
   <string name="repeat_x_times">%1$s </string>
   <string name="menu_show_compact_view"></string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-ko-rKR/strings.xml b/app/src/main/res/values-ko-rKR/strings.xml
index 53b54015..da71a40d 100644
--- a/app/src/main/res/values-ko-rKR/strings.xml
+++ b/app/src/main/res/values-ko-rKR/strings.xml
@@ -464,4 +464,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-lv-rLV/strings.xml b/app/src/main/res/values-lv-rLV/strings.xml
index 2e9f40e2..0f691ac0 100644
--- a/app/src/main/res/values-lv-rLV/strings.xml
+++ b/app/src/main/res/values-lv-rLV/strings.xml
@@ -484,4 +484,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index b659fee3..07497392 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -469,4 +469,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-nl-rNL/strings.xml b/app/src/main/res/values-nl-rNL/strings.xml
index 52a94696..734ca4e5 100644
--- a/app/src/main/res/values-nl-rNL/strings.xml
+++ b/app/src/main/res/values-nl-rNL/strings.xml
@@ -478,4 +478,5 @@ No user-identifiable information will be collected as part of this process!
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-no-rNO/strings.xml b/app/src/main/res/values-no-rNO/strings.xml
index e027f439..362ea0f3 100644
--- a/app/src/main/res/values-no-rNO/strings.xml
+++ b/app/src/main/res/values-no-rNO/strings.xml
@@ -469,4 +469,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-pl-rPL/strings.xml b/app/src/main/res/values-pl-rPL/strings.xml
index 8dfd26c0..e80d09de 100644
--- a/app/src/main/res/values-pl-rPL/strings.xml
+++ b/app/src/main/res/values-pl-rPL/strings.xml
@@ -478,4 +478,5 @@ Konto docelowe uywa innej waluty ni konto wyjciowe</string>
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index b057ca29..404cbe75 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -472,4 +472,5 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rPT/strings.xml b/app/src/main/res/values-pt-rPT/strings.xml
index 3ca9d0b6..07b38733 100644
--- a/app/src/main/res/values-pt-rPT/strings.xml
+++ b/app/src/main/res/values-pt-rPT/strings.xml
@@ -471,4 +471,5 @@ Neste processo no sero recolhidas informaes do utilizador!</string>
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-ro-rRO/strings.xml b/app/src/main/res/values-ro-rRO/strings.xml
index 266e93c4..9c9c4d03 100644
--- a/app/src/main/res/values-ro-rRO/strings.xml
+++ b/app/src/main/res/values-ro-rRO/strings.xml
@@ -484,4 +484,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index d4df2fa5..da95b50a 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -482,4 +482,5 @@
   <string name="repeat_on_weekday"> %1$s</string>
   <string name="repeat_x_times"> %1$s </string>
   <string name="menu_show_compact_view"> </string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-sr-rSP/strings.xml b/app/src/main/res/values-sr-rSP/strings.xml
index a1940ab8..1d8a2d7a 100644
--- a/app/src/main/res/values-sr-rSP/strings.xml
+++ b/app/src/main/res/values-sr-rSP/strings.xml
@@ -484,4 +484,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-sv-rSE/strings.xml b/app/src/main/res/values-sv-rSE/strings.xml
index 0de912cd..0c1a4909 100644
--- a/app/src/main/res/values-sv-rSE/strings.xml
+++ b/app/src/main/res/values-sv-rSE/strings.xml
@@ -477,4 +477,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-tr-rTR/strings.xml b/app/src/main/res/values-tr-rTR/strings.xml
index 1e38343b..918ccb52 100644
--- a/app/src/main/res/values-tr-rTR/strings.xml
+++ b/app/src/main/res/values-tr-rTR/strings.xml
@@ -477,4 +477,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-uk-rUA/strings.xml b/app/src/main/res/values-uk-rUA/strings.xml
index 26fc66f7..9e28f0e0 100644
--- a/app/src/main/res/values-uk-rUA/strings.xml
+++ b/app/src/main/res/values-uk-rUA/strings.xml
@@ -480,4 +480,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-vi-rVN/strings.xml b/app/src/main/res/values-vi-rVN/strings.xml
index 3ebe7226..1df061e4 100644
--- a/app/src/main/res/values-vi-rVN/strings.xml
+++ b/app/src/main/res/values-vi-rVN/strings.xml
@@ -470,4 +470,5 @@
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index 36e22493..e2b73fd7 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -132,12 +132,12 @@
   <string name="summary_xml_ofx_header">GnuCash</string>
   <string name="title_whats_new"></string>
   <string name="whats_new">
-        - Support for multiple different books \n
-        - Adds ownCloud as destination for exports\n
-        - Compact view for transactions list\n
-        - Re-design of passcode lock screen\n
-        - Improved handling of scheduled transactions\n
-        - Multiple bug fixes and improvements\n
+-  \n
+- ownCloud\n
+- \n
+- \n
+- \n
+- \n
 	</string>
   <string name="label_dismiss"></string>
   <string name="toast_transanction_amount_required"></string>
@@ -174,7 +174,7 @@
   <string name="label_no_recurring_transactions"></string>
   <string name="toast_recurring_transaction_deleted"></string>
   <string name="label_placeholder_account"></string>
-  <string name="label_default_transfer_account"></string>
+  <string name="label_default_transfer_account"></string>
   <plurals name="label_sub_accounts">
     <item quantity="other">%d </item>
   </plurals>
@@ -185,7 +185,7 @@
     <item></item>
     <item></item>
     <item></item>
-    <item></item>
+    <item></item>
     <item></item>
     <item></item>
     <item></item>
@@ -210,7 +210,8 @@
   <string name="title_all_accounts"></string>
   <string name="summary_create_default_accounts"></string>
   <string name="title_create_default_accounts"></string>
-  <string name="msg_confirm_create_default_accounts_setting">A new book will be opened with the default accounts\n\nYour current accounts and transactions will not be modified!</string>
+  <string name="msg_confirm_create_default_accounts_setting">
+</string>
   <string name="menu_scheduled_transactions"></string>
   <string name="msg_confirm_create_default_accounts_first_run">GnuCash Android \n12\
     </string>
@@ -271,7 +272,7 @@
   <string name="label_delete_account_transactions_description"> \n</string>
   <string name="label_delete_account_subaccounts_description"> \n</string>
   <string name="label_delete_transactions"></string>
-  <string name="toast_disable_double_entry_to_save_transaction"></string>
+  <string name="toast_disable_double_entry_to_save_transaction"></string>
   <string name="label_tap_to_create_schedule"></string>
   <string name="title_restore_backup">&#8230;</string>
   <string name="header_backup_and_export_settings"></string>
@@ -437,32 +438,33 @@
   <string name="title_confirm_delete_book"></string>
   <string name="msg_all_book_data_will_be_deleted"></string>
   <string name="btn_delete_book"></string>
-  <string name="label_last_export_time"></string>
+  <string name="label_last_export_time"></string>
   <string name="menu_title_enable_sync"></string>
   <string name="menu_title_new_book"></string>
   <string name="toast_transaction_has_no_splits_and_cannot_open"></string>
   <string name="label_split_count">%1$d </string>
   <string name="label_inside_account_with_name"> %1$s</string>
   <plurals name="book_account_stats">
-    <item quantity="other">%d </item>
+    <item quantity="other">%d</item>
   </plurals>
   <plurals name="book_transaction_stats">
-    <item quantity="other">%d </item>
+    <item quantity="other">%d</item>
   </plurals>
   <string-array name="report_account_types">
-    <item>EXPENSE</item>
-    <item>INCOME</item>
+    <item></item>
+    <item></item>
   </string-array>
-  <string name="toast_connected_to_google_drive">Connected to Google Drive</string>
-  <string name="toast_unable_to_connect_to_google_drive">Unable to connect to Google Drive</string>
-  <string name="toast_enter_amount_to_split">Please enter an amount to split</string>
-  <string name="label_export_target_external_service">external service</string>
-  <string name="toast_updated_transaction_recurring_schedule">Updated transaction recurring schedule</string>
-  <string name="label_export_transactions_since_date">Since</string>
-  <string name="switch_export_transactions_from_all_time">All time</string>
-  <string name="label_recommend_app">Recommend in Play Store</string>
-  <string name="repeat_until_date">until %1$s</string>
-  <string name="repeat_on_weekday">on %1$s</string>
-  <string name="repeat_x_times">for %1$s times</string>
-  <string name="menu_show_compact_view">Compact View</string>
+  <string name="toast_connected_to_google_drive">Google Drive</string>
+  <string name="toast_unable_to_connect_to_google_drive">Google Drive</string>
+  <string name="toast_enter_amount_to_split"></string>
+  <string name="label_export_target_external_service"></string>
+  <string name="toast_updated_transaction_recurring_schedule"></string>
+  <string name="label_export_transactions_since_date"></string>
+  <string name="switch_export_transactions_from_all_time"></string>
+  <string name="label_recommend_app">Paly Store</string>
+  <string name="repeat_until_date">%1$s</string>
+  <string name="repeat_on_weekday">%1$s</string>
+  <string name="repeat_x_times">%1$s</string>
+  <string name="menu_show_compact_view"></string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml
index 23a7d53b..9ceab027 100644
--- a/app/src/main/res/values-zh-rTW/strings.xml
+++ b/app/src/main/res/values-zh-rTW/strings.xml
@@ -467,4 +467,5 @@ No user-identifiable information will be collected as part of this process!
   <string name="repeat_on_weekday">on %1$s</string>
   <string name="repeat_x_times">for %1$s times</string>
   <string name="menu_show_compact_view">Compact View</string>
+  <string name="book_default_name">Book %1$d</string>
 </resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 011323aa..206a9685 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -485,4 +485,5 @@
     <string name="repeat_on_weekday">on %1$s</string>
     <string name="repeat_x_times">for %1$s times</string>
     <string name="menu_show_compact_view">Compact View</string>
+    <string name="book_default_name">Book %1$d</string>
 </resources>

From 6bbc2b0f48d83b3d249fb5efb0ad57e85166ea70 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 31 Aug 2016 10:30:33 +0200
Subject: [PATCH 121/121] Update version string for v2.1.0 release

Update README and CONTRIBUTORS files
---
 CHANGELOG.md     |  4 +++-
 CONTRIBUTORS     | 33 ---------------------------------
 CONTRIBUTORS.md  | 34 ++++++++++++++++++++++++++++++++++
 README.md        |  6 +++---
 app/build.gradle |  5 +++--
 5 files changed, 43 insertions(+), 39 deletions(-)
 delete mode 100644 CONTRIBUTORS
 create mode 100644 CONTRIBUTORS.md

diff --git a/CHANGELOG.md b/CHANGELOG.md
index c1c4b109..3c0bdc9b 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,6 +1,6 @@
 Change Log
 ===============================================================================
-Version 2.1.0 *(2016-xx-xx)*
+Version 2.1.0 *(2016-09-01)*
 ----------------------------
 * Feature: Use multiple GnuCash books in single application
 * Feature: Backup/Export to ownCloud servers
@@ -8,7 +8,9 @@ Version 2.1.0 *(2016-xx-xx)*
 * Improved: Redesign of passcode screen with included alphabet keys
 * Improved: Scheduled transactions now have more accurate timestamps
 * Improved: Generate all scheduled transactions even if a scheduled is missed (e.g. device off)
+* Improved: Updated translations (and extracted some hard-coded strings)
 * Fixed: Accounts lists not properly refreshed after switching between recent and all
+* Fixed: Inaccurate execution of some scheduled transactions
 
 Version 2.0.7 *(2016-05-05)*
 ----------------------------
diff --git a/CONTRIBUTORS b/CONTRIBUTORS
deleted file mode 100644
index a2db1919..00000000
--- a/CONTRIBUTORS
+++ /dev/null
@@ -1,33 +0,0 @@
-GnuCash for Android is a community effort which is made possible by the contributions of
-several different people.
-Appreciation goes to Muslim Chochlov and the to whole GnuCash community for guiding the
-project through the early phases and providing valuable feedback.
-
-Maintainer:
-Ngewi Fet <ngewif@gmail.com>
-
-Core contributors:
-Yongxin Wang <fefe.wyx@gmail.com>
-Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
-lex Magaz Graa <rivaldi8@gmail.com>
-
-The following people (in no particular order) contributed (patches and translations) to GnuCash Android:
-Christian Stimming <christian@cstimming.de>
-Cristian Marchi <cri.penta@gmail.com>
-Menelaos Maglis <mmaglis@metacom.gr>
-Kjell Thomas Pedersen <kjelltp@gmail.com>
-Alexander Galanin <al@galanin.nnov.ru>
-Jorge Martnez Lpez <jorgeml@gmail.com>
-Israel Buitron <israel.buitron@gmail.com>
-Geert Janssens <janssens-geert@telenet.be>
-Nicolas Barranger <wicowyn@gmail.com>
-Sigurd Gartmann <sigurdga-github@sigurdga.no>
-Pedro Abel <pedroabel@gmail.com>
-windwarrior <lennartbuit@gmail.com>
-Alex Lei <lxbzmy@gmail.com>
-Matthew Hague <matthewhague@zoho.com>
-Spanti Nicola <rydroid_dev@yahoo.com>
-Jesse Shieh <jesse.shieh.pub@gmail.com>
-Terry Chung <terrywmc@gmail.com>
-Caesar Wirth <cjwirth@gmail.com>
-Alceu Rodrigues Neto <alceurneto@gmail.com>
diff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md
new file mode 100644
index 00000000..0ce07a1d
--- /dev/null
+++ b/CONTRIBUTORS.md
@@ -0,0 +1,34 @@
+GnuCash for Android is a community effort which is made possible by the contributions of
+several different people.
+Appreciation goes to Muslim Chochlov and the to whole GnuCash community for guiding the
+project through the early phases (as Google Summer of Code project 2012) and providing valuable feedback.
+
+### Core Developers:
+* Ngewi Fet <ngewif@gmail.com> - Project maintainer
+* Yongxin Wang <fefe.wyx@gmail.com>
+* Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+* lex Magaz Graa <rivaldi8@gmail.com>
+
+### Other Contributors
+The following (incomplete list of) people (in no particular order) contributed (patches and translations) to GnuCash Android:
+* Christian Stimming <christian@cstimming.de>
+* Cristian Marchi <cri.penta@gmail.com>
+* Menelaos Maglis <mmaglis@metacom.gr>
+* Kjell Thomas Pedersen <kjelltp@gmail.com>
+* Alexander Galanin <al@galanin.nnov.ru>
+* Jorge Martnez Lpez <jorgeml@gmail.com>
+* Israel Buitron <israel.buitron@gmail.com>
+* Geert Janssens <janssens-geert@telenet.be>
+* Nicolas Barranger <wicowyn@gmail.com>
+* Sigurd Gartmann <sigurdga-github@sigurdga.no>
+* Pedro Abel <pedroabel@gmail.com>
+* windwarrior <lennartbuit@gmail.com>
+* Alex Lei <lxbzmy@gmail.com>
+* Matthew Hague <matthewhague@zoho.com>
+* Spanti Nicola <rydroid_dev@yahoo.com>
+* Jesse Shieh <jesse.shieh.pub@gmail.com>
+* Terry Chung <terrywmc@gmail.com>
+* Caesar Wirth <cjwirth@gmail.com>
+* Alceu Rodrigues Neto <alceurneto@gmail.com>
+
+Please visit https://crowdin.com/project/gnucash-android for a more complete list of translation contributions
\ No newline at end of file
diff --git a/README.md b/README.md
index 71d91420..13e89dc1 100644
--- a/README.md
+++ b/README.md
@@ -65,8 +65,8 @@ It will build the project for you and install it to the connected Android device
 The app is configured to allow you to install a development and production version in parallel on your device.
 
 ### With Android Studio
-The easiest way to build is to install [Android Studio](https://developer.android.com/sdk/index.html) v1.+
-with [Gradle](https://www.gradle.org/) v2.4.
+The easiest way to build is to install [Android Studio](https://developer.android.com/sdk/index.html) v2.+
+with [Gradle](https://www.gradle.org/) v2.10
 Once installed, then you can import the project into Android Studio:
 
 1. Open `File`
@@ -85,7 +85,7 @@ Google+ Community: https://plus.google.com/communities/104728406764752407046
 There are several ways you could contribute to the development.
 
 * One way is providing translations for locales which are not yet available, or improving translations.
-See this [blog post](http://www.codinguser.com/2012/09/gnucash-for-android-beta-2-lost-in-translation/) for some guidelines.
+Please visit [CrowdIn](https://crowdin.com/project/gnucash-android) in order to update and create new translations
 
 * You could as well contribute code, fixing bugs, new features or automated tests. Pull requests are always welcome.
 Take a look at the [bug tracker](https://github.com/codinguser/gnucash-android/issues?state=open)
diff --git a/app/build.gradle b/app/build.gradle
index f4bf0726..0c8bf59c 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -1,13 +1,14 @@
-import java.text.SimpleDateFormat
 import org.apache.tools.ant.taskdefs.condition.Os
 
+import java.text.SimpleDateFormat
+
 apply plugin: 'com.android.application'
 apply plugin: 'io.fabric'
 
 def versionMajor = 2
 def versionMinor = 1
 def versionPatch = 0
-def versionBuild = 5
+def versionBuild = 6
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")
