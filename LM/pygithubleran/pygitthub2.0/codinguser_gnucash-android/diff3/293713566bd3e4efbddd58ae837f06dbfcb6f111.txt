From 293713566bd3e4efbddd58ae837f06dbfcb6f111 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 21 Dec 2012 00:35:10 +0100
Subject: [PATCH] Started support for double entry in OFX exports

---
 .../src/org/gnucash/android/data/Account.java      | 50 +++++++++++++++++++++-
 .../src/org/gnucash/android/data/Transaction.java  | 19 ++++++++
 .../android/ui/accounts/ExportDialogFragment.java  |  9 +++-
 3 files changed, 74 insertions(+), 4 deletions(-)

diff --git a/GnucashMobile/src/org/gnucash/android/data/Account.java b/GnucashMobile/src/org/gnucash/android/data/Account.java
index 078ba0ca..938e7490 100644
--- a/GnucashMobile/src/org/gnucash/android/data/Account.java
+++ b/GnucashMobile/src/org/gnucash/android/data/Account.java
@@ -50,9 +50,11 @@
 	 * This are the different types specified by the OFX format and 
 	 * they are currently not used except for exporting
 	 */
-	public enum AccountType {CASH, BANK, CREDIT_CARD, ASSET, LIABILITY, INCOME, EXPENSE, EQUITY, CURRENCY, STOCK, MUTUAL_FUND,
-		CHECKING, SAVINGS, MONEYMRKT, CREDITLINE};
+	public enum AccountType {CASH, BANK, CREDIT_CARD, ASSET, LIABILITY, INCOME, EXPENSE, 
+		EQUITY, CURRENCY, STOCK, MUTUAL_FUND, CHECKING, SAVINGS, MONEYMRKT, CREDITLINE};
 	
+	public enum OfxAccountType {CHECKING, SAVINGS, MONEYMRKT, CREDITLINE };
+		
 	/**
 	 * Unique Identifier of the account
 	 * It is generated when the account is created and can be set a posteriori as well
@@ -278,14 +280,56 @@ public void setCurrency(Currency mCurrency) {
 		//transaction values to the corresponding value in the new currency
 	}
 
+	/**
+	 * Sets the Unique Account Identifier of the parent account
+	 * @param parentUID String Unique ID of parent account
+	 */
 	public void setParentUID(String parentUID){
 		mParentAccountUID = parentUID;
 	}
 	
+	/**
+	 * Returns the Unique Account Identifier of the parent account
+	 * @return String Unique ID of parent account
+	 */
 	public String getParentUID() {
 		return mParentAccountUID;
 		
 	}
+
+	/**
+	 * Maps the <code>accountType</code> to the corresponding account type.
+	 * <code>accountType</code> have corresponding values to GnuCash desktop
+	 * @param accountType {@link AccountType} of an account
+	 * @return Corresponding {@link OfxAccountType} for the <code>accountType</code>
+	 * @see AccountType
+	 * @see OfxAccountType
+	 */
+	public OfxAccountType ofxAccountTypeMapping(AccountType accountType){
+		switch (accountType) {
+		case CREDITLINE:
+			return OfxAccountType.CREDITLINE;
+			
+		case CASH:
+		case INCOME:
+		case EXPENSE:
+		case CURRENCY:
+			return OfxAccountType.CHECKING;
+			
+		case BANK:
+		case ASSET:
+			return OfxAccountType.SAVINGS;
+			
+		case MUTUAL_FUND:
+		case STOCK:
+		case EQUITY:
+			return OfxAccountType.MONEYMRKT;
+
+		default:
+			return OfxAccountType.CHECKING;
+		}
+	}
+	
 	/**
 	 * Converts this account's transactions into XML and adds them to the DOM document
 	 * @param doc XML DOM document for the OFX data
@@ -295,7 +339,9 @@ public void toOfx(Document doc, Element parent, boolean allTransactions){
 		for (Transaction transaction : mTransactionsList) {
 			if (!allTransactions && transaction.isExported())
 				continue;
+			
 			parent.appendChild(transaction.toOfx(doc));
 		}
 	}
+
 }
diff --git a/GnucashMobile/src/org/gnucash/android/data/Transaction.java b/GnucashMobile/src/org/gnucash/android/data/Transaction.java
index d37f8548..9455bb11 100644
--- a/GnucashMobile/src/org/gnucash/android/data/Transaction.java
+++ b/GnucashMobile/src/org/gnucash/android/data/Transaction.java
@@ -22,6 +22,7 @@
 import java.util.Locale;
 import java.util.UUID;
 
+import org.gnucash.android.data.Account.OfxAccountType;
 import org.gnucash.android.util.OfxFormatter;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
@@ -393,6 +394,24 @@ public Element toOfx(Document doc){
 			transactionNode.appendChild(memo);
 		}
 		
+		if (mDoubleEntryAccountUID != null && mDoubleEntryAccountUID.length() > 0){
+			Element bankId = doc.createElement("BANKID");
+			bankId.appendChild(doc.createTextNode(OfxFormatter.APP_ID));
+			
+			Element acctId = doc.createElement("ACCTID");
+			acctId.appendChild(doc.createTextNode(mDoubleEntryAccountUID));
+			
+			Element accttype = doc.createElement("ACCTTYPE");
+			accttype.appendChild(doc.createTextNode(OfxAccountType.CHECKING.toString()));
+			
+			Element bankAccountTo = doc.createElement("BANKACCTTO");
+			bankAccountTo.appendChild(bankId);
+			bankAccountTo.appendChild(acctId);
+			bankAccountTo.appendChild(accttype);
+			
+			transactionNode.appendChild(bankAccountTo);
+		}
+		
 		return transactionNode;
 	}
 
diff --git a/GnucashMobile/src/org/gnucash/android/ui/accounts/ExportDialogFragment.java b/GnucashMobile/src/org/gnucash/android/ui/accounts/ExportDialogFragment.java
index b0289f0d..b53e4539 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/accounts/ExportDialogFragment.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/accounts/ExportDialogFragment.java
@@ -106,6 +106,11 @@
 	String mFilePath;
 	
 	/**
+	 * Tag for logging
+	 */
+	private static final String TAG = "ExportDialogFragment";
+	
+	/**
 	 * Click listener for positive button in the dialog.
 	 * @author Ngewi Fet <ngewif@gmail.com>
 	 */
@@ -119,7 +124,7 @@ public void onClick(View v) {
 				document = exportOfx(exportAll);
 				writeToExternalStorage(document);
 			} catch (Exception e) {
-				Log.e(getTag(), e.getMessage());
+				Log.e(TAG, e.getMessage());
 				Toast.makeText(getActivity(), R.string.error_exporting,
 						Toast.LENGTH_LONG).show();
 				dismiss();
@@ -143,7 +148,7 @@ public void onClick(View v) {
 					Toast.makeText(getActivity(), 
 							getString(R.string.toast_error_exporting_ofx) + dst.getAbsolutePath(), 
 							Toast.LENGTH_LONG).show();		
-					Log.e(getTag(), e.getMessage());
+					Log.e(TAG, e.getMessage());
 					break;
 				}
 				
