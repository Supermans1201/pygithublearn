From 359caa0070e552c189f056375a1a9f649c567dfa Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sun, 14 Sep 2014 20:11:30 +0300
Subject: [PATCH 1/4] Added dialog for default currency before creating
 accounts for the first time

---
 .../android/ui/account/AccountsActivity.java       | 46 ++++++++++++++++++++--
 1 file changed, 43 insertions(+), 3 deletions(-)

diff --git a/app/src/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
index 28fb5717..b9e3ad7d 100644
--- a/app/src/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
@@ -37,6 +37,7 @@
 import android.util.SparseArray;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
 
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
@@ -55,13 +56,19 @@
 import org.gnucash.android.ui.util.OnAccountClickedListener;
 import org.gnucash.android.ui.util.Refreshable;
 
+import java.io.BufferedReader;
+import java.io.ByteArrayInputStream;
 import java.io.FileNotFoundException;
+import java.io.IOException;
 import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.util.Arrays;
 
 /**
  * Manages actions related to accounts, displaying, exporting and creating new accounts
  * The various actions are implemented as Fragments which are then added to this activity
  * @author Ngewi Fet <ngewif@gmail.com>
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * 
  */
 public class AccountsActivity extends PassLockActivity implements OnAccountClickedListener {
@@ -432,9 +439,42 @@ private void createDefaultAccounts(){
 			
 			@Override
 			public void onClick(DialogInterface dialog, int which) {
-                InputStream accountFileInputStream = getResources().openRawResource(R.raw.default_accounts);
-                new ImportAsyncTask(AccountsActivity.this).execute(accountFileInputStream);
-                removeFirstRunFlag();
+                AlertDialog.Builder adb = new AlertDialog.Builder(AccountsActivity.this);
+                adb.setTitle(R.string.title_choose_currency);
+                ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(
+                        AccountsActivity.this,
+                        android.R.layout.select_dialog_singlechoice,
+                        getResources().getStringArray(R.array.currency_names));
+                adb.setAdapter(arrayAdapter, new DialogInterface.OnClickListener() {
+
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        String currency = Arrays.asList(getResources().getStringArray(R.array.currency_codes)).get(which);
+                        PreferenceManager.getDefaultSharedPreferences(AccountsActivity.this)
+                                .edit()
+                                .putString(getString(R.string.key_default_currency), currency)
+                                .commit();
+
+                        InputStream accountFileInputStream = getResources().openRawResource(R.raw.default_accounts);
+                        BufferedReader reader = new BufferedReader(new InputStreamReader(accountFileInputStream));
+                        StringBuilder sb = new StringBuilder();
+                        String line = null;
+                        try {
+                            while ((line = reader.readLine()) != null) {
+                                sb.append(line).append("\n");
+                            }
+                            reader.close();
+                        } catch (IOException e) {
+                            e.printStackTrace();
+                        }
+                        String accountFile = sb.toString().replaceAll("<cmdty:id>(.*?)</cmdty:id>",
+                                "<cmdty:id>" + currency + "</cmdty:id>");
+                        accountFileInputStream = new ByteArrayInputStream(accountFile.getBytes());
+                        new ImportAsyncTask(AccountsActivity.this).execute(accountFileInputStream);
+                        removeFirstRunFlag();
+                    }
+                });
+                adb.create().show();
 			}
 		});
 		

From 01ad322618de4ddde07110bc5c921651ce946aa1 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Mon, 15 Sep 2014 21:12:07 +0300
Subject: [PATCH 2/4] Use default currency when creating default accounts

---
 .../android/ui/account/AccountsActivity.java       | 48 +++++++++++++---------
 .../ui/settings/AccountPreferencesFragment.java    | 19 ++++++---
 2 files changed, 42 insertions(+), 25 deletions(-)

diff --git a/app/src/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
index b9e3ad7d..cfd38db5 100644
--- a/app/src/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
@@ -17,6 +17,7 @@
 
 package org.gnucash.android.ui.account;
 
+import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
@@ -67,9 +68,9 @@
 /**
  * Manages actions related to accounts, displaying, exporting and creating new accounts
  * The various actions are implemented as Fragments which are then added to this activity
+ *
  * @author Ngewi Fet <ngewif@gmail.com>
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
- * 
  */
 public class AccountsActivity extends PassLockActivity implements OnAccountClickedListener {
 
@@ -265,7 +266,7 @@ private void init() {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
         boolean firstRun = prefs.getBoolean(getString(R.string.key_first_run), true);
         if (firstRun){
-            createDefaultAccounts();
+            showFirstRunDialog();
             //default to using double entry and save the preference explicitly
             prefs.edit().putBoolean(getString(R.string.key_use_double_entry), true).commit();
         }
@@ -430,7 +431,7 @@ public void onNewAccountClick(View v) {
 	/**
 	 * Shows the user dialog to create default account structure or import existing account structure
 	 */
-	private void createDefaultAccounts(){
+	private void showFirstRunDialog() {
 		AlertDialog.Builder builder = new AlertDialog.Builder(this);
 		builder.setTitle(R.string.title_default_accounts);
         builder.setMessage(R.string.msg_confirm_create_default_accounts_first_run);
@@ -455,22 +456,7 @@ public void onClick(DialogInterface dialog, int which) {
                                 .putString(getString(R.string.key_default_currency), currency)
                                 .commit();
 
-                        InputStream accountFileInputStream = getResources().openRawResource(R.raw.default_accounts);
-                        BufferedReader reader = new BufferedReader(new InputStreamReader(accountFileInputStream));
-                        StringBuilder sb = new StringBuilder();
-                        String line = null;
-                        try {
-                            while ((line = reader.readLine()) != null) {
-                                sb.append(line).append("\n");
-                            }
-                            reader.close();
-                        } catch (IOException e) {
-                            e.printStackTrace();
-                        }
-                        String accountFile = sb.toString().replaceAll("<cmdty:id>(.*?)</cmdty:id>",
-                                "<cmdty:id>" + currency + "</cmdty:id>");
-                        accountFileInputStream = new ByteArrayInputStream(accountFile.getBytes());
-                        new ImportAsyncTask(AccountsActivity.this).execute(accountFileInputStream);
+                        createDefaultAccounts(currency, AccountsActivity.this);
                         removeFirstRunFlag();
                     }
                 });
@@ -500,6 +486,30 @@ public void onClick(DialogInterface dialogInterface, int i) {
 	}
 
     /**
+     * Creates default accounts with the specified currency
+     *
+     * @param currencyCode
+     * @param activity
+     */
+    public static void createDefaultAccounts(String currencyCode, Activity activity) {
+        InputStream accountFileInputStream = activity.getResources().openRawResource(R.raw.default_accounts);
+        BufferedReader reader = new BufferedReader(new InputStreamReader(accountFileInputStream));
+        StringBuilder sb = new StringBuilder();
+        String line = null;
+        try {
+            while ((line = reader.readLine()) != null) {
+                sb.append(line).append("\n");
+            }
+            reader.close();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        String accountFile = sb.toString().replaceAll("<cmdty:id>(.*?)</cmdty:id>", "<cmdty:id>" + currencyCode + "</cmdty:id>");
+        accountFileInputStream = new ByteArrayInputStream(accountFile.getBytes());
+        new ImportAsyncTask(activity).execute(accountFileInputStream);
+    }
+
+    /**
      * Starts Intent chooser for selecting a GnuCash accounts file to import.
      * The accounts are actually imported in onActivityResult
      */
diff --git a/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java b/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
index 40384546..aa9ae5a7 100644
--- a/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
+++ b/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
@@ -16,6 +16,7 @@
 
 package org.gnucash.android.ui.settings;
 
+import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.DialogInterface;
 import android.content.SharedPreferences;
@@ -23,20 +24,24 @@
 import android.preference.Preference;
 import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
+
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.app.SherlockPreferenceActivity;
+
 import org.gnucash.android.R;
-import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.model.Money;
-
-import java.io.InputStream;
+import org.gnucash.android.ui.account.AccountsActivity;
 
 /**
  * Account settings fragment inside the Settings activity
  *
  * @author Ngewi Fet <ngewi.fet@gmail.com>
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
 public class AccountPreferencesFragment extends PreferenceFragment {
+
+    private Activity activity;
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -46,13 +51,16 @@ public void onCreate(Bundle savedInstanceState) {
         actionBar.setHomeButtonEnabled(true);
         actionBar.setDisplayHomeAsUpEnabled(true);
         actionBar.setTitle(R.string.title_account_preferences);
+
+        activity = getActivity();
     }
 
     @Override
     public void onResume() {
         super.onResume();
         SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
-        String defaultCurrency = sharedPreferences.getString(getString(R.string.key_default_currency), Money.DEFAULT_CURRENCY_CODE);
+        final String defaultCurrency = sharedPreferences.getString(getString(R.string.key_default_currency),
+                Money.DEFAULT_CURRENCY_CODE);
         Preference pref = findPreference(getString(R.string.key_default_currency));
         pref.setSummary(defaultCurrency);
         pref.setOnPreferenceChangeListener((SettingsActivity)getActivity());
@@ -80,8 +88,7 @@ public boolean onPreferenceClick(Preference preference) {
                         .setPositiveButton(R.string.btn_create_accounts, new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialogInterface, int i) {
-                                InputStream accountFileInputStream = getResources().openRawResource(R.raw.default_accounts);
-                                new ImportAsyncTask(getActivity()).execute(accountFileInputStream);
+                                new AccountsActivity().createDefaultAccounts(defaultCurrency, activity);
                             }
                         })
                         .setNegativeButton(R.string.btn_cancel, new DialogInterface.OnClickListener() {

From 6175a9eab6016077e7c26ab216e91d06b02a0a9a Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 16 Sep 2014 14:46:10 +0300
Subject: [PATCH 3/4] Fix for creating default accounts after changing currency

---
 .../org/gnucash/android/ui/settings/AccountPreferencesFragment.java  | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java b/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
index aa9ae5a7..e9b137c1 100644
--- a/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
+++ b/app/src/org/gnucash/android/ui/settings/AccountPreferencesFragment.java
@@ -59,8 +59,7 @@ public void onCreate(Bundle savedInstanceState) {
     public void onResume() {
         super.onResume();
         SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
-        final String defaultCurrency = sharedPreferences.getString(getString(R.string.key_default_currency),
-                Money.DEFAULT_CURRENCY_CODE);
+        String defaultCurrency = sharedPreferences.getString(getString(R.string.key_default_currency), Money.DEFAULT_CURRENCY_CODE);
         Preference pref = findPreference(getString(R.string.key_default_currency));
         pref.setSummary(defaultCurrency);
         pref.setOnPreferenceChangeListener((SettingsActivity)getActivity());
@@ -88,7 +87,7 @@ public boolean onPreferenceClick(Preference preference) {
                         .setPositiveButton(R.string.btn_create_accounts, new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialogInterface, int i) {
-                                new AccountsActivity().createDefaultAccounts(defaultCurrency, activity);
+                                AccountsActivity.createDefaultAccounts(Money.DEFAULT_CURRENCY_CODE, activity);
                             }
                         })
                         .setNegativeButton(R.string.btn_cancel, new DialogInterface.OnClickListener() {

From 535dd3717fb42224b2c0249b00ade459ceedca0b Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 17 Sep 2014 11:10:10 +0200
Subject: [PATCH 4/4] Instead of modifying input stream before importing, we
 update currency in database after importing.

Introduce task delegate for executing tasks on completion of import.
---
 .../gnucash/android/importer/ImportAsyncTask.java  | 13 +++++++-
 .../android/ui/account/AccountsActivity.java       | 39 ++++++++++++----------
 .../org/gnucash/android/ui/util/TaskDelegate.java  | 30 +++++++++++++++++
 3 files changed, 63 insertions(+), 19 deletions(-)
 create mode 100644 app/src/org/gnucash/android/ui/util/TaskDelegate.java

diff --git a/app/src/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/org/gnucash/android/importer/ImportAsyncTask.java
index a19cb035..ecc69235 100644
--- a/app/src/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/org/gnucash/android/importer/ImportAsyncTask.java
@@ -12,7 +12,8 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- */package org.gnucash.android.importer;
+ */
+package org.gnucash.android.importer;
 
 import android.app.Activity;
 import android.app.ProgressDialog;
@@ -23,6 +24,7 @@
 import android.widget.Toast;
 import org.gnucash.android.R;
 import org.gnucash.android.ui.account.AccountsActivity;
+import org.gnucash.android.ui.util.TaskDelegate;
 
 import java.io.InputStream;
 
@@ -32,12 +34,18 @@
  */
 public class ImportAsyncTask extends AsyncTask<InputStream, Void, Boolean> {
     private final Activity context;
+    private TaskDelegate mDelegate;
     private ProgressDialog progressDialog;
 
     public ImportAsyncTask(Activity context){
         this.context = context;
     }
 
+    public ImportAsyncTask(Activity context, TaskDelegate delegate){
+        this.context = context;
+        this.mDelegate = delegate;
+    }
+
     @Override
     protected void onPreExecute() {
         super.onPreExecute();
@@ -76,6 +84,9 @@ public void run() {
 
     @Override
     protected void onPostExecute(Boolean importSuccess) {
+        if (mDelegate != null)
+            mDelegate.onTaskComplete();
+
         if (progressDialog != null && progressDialog.isShowing())
             progressDialog.dismiss();
 
diff --git a/app/src/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
index cfd38db5..c4a2dbb3 100644
--- a/app/src/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
@@ -47,6 +47,8 @@
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.UxArgument;
@@ -56,6 +58,7 @@
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.util.OnAccountClickedListener;
 import org.gnucash.android.ui.util.Refreshable;
+import org.gnucash.android.ui.util.TaskDelegate;
 
 import java.io.BufferedReader;
 import java.io.ByteArrayInputStream;
@@ -486,27 +489,27 @@ public void onClick(DialogInterface dialogInterface, int i) {
 	}
 
     /**
-     * Creates default accounts with the specified currency
+     * Creates default accounts with the specified currency code.
+     * If the currency parameter is null, then locale currency will be used if available
      *
-     * @param currencyCode
-     * @param activity
+     * @param currencyCode Currency code to assign to the imported accounts
+     * @param activity Activity for providing context and displaying dialogs
      */
-    public static void createDefaultAccounts(String currencyCode, Activity activity) {
-        InputStream accountFileInputStream = activity.getResources().openRawResource(R.raw.default_accounts);
-        BufferedReader reader = new BufferedReader(new InputStreamReader(accountFileInputStream));
-        StringBuilder sb = new StringBuilder();
-        String line = null;
-        try {
-            while ((line = reader.readLine()) != null) {
-                sb.append(line).append("\n");
-            }
-            reader.close();
-        } catch (IOException e) {
-            e.printStackTrace();
+    public static void createDefaultAccounts(final String currencyCode, final Activity activity) {
+        TaskDelegate delegate = null;
+        if (currencyCode != null) {
+            delegate = new TaskDelegate() {
+                @Override
+                public void onTaskComplete() {
+                    AccountsDbAdapter accountsDbAdapter = new AccountsDbAdapter(activity);
+                    accountsDbAdapter.updateAllAccounts(DatabaseSchema.AccountEntry.COLUMN_CURRENCY, currencyCode);
+                    accountsDbAdapter.close();
+                }
+            };
         }
-        String accountFile = sb.toString().replaceAll("<cmdty:id>(.*?)</cmdty:id>", "<cmdty:id>" + currencyCode + "</cmdty:id>");
-        accountFileInputStream = new ByteArrayInputStream(accountFile.getBytes());
-        new ImportAsyncTask(activity).execute(accountFileInputStream);
+
+        InputStream accountFileInputStream = activity.getResources().openRawResource(R.raw.default_accounts);
+        new ImportAsyncTask(activity, delegate).execute(accountFileInputStream);
     }
 
     /**
diff --git a/app/src/org/gnucash/android/ui/util/TaskDelegate.java b/app/src/org/gnucash/android/ui/util/TaskDelegate.java
new file mode 100644
index 00000000..04953c05
--- /dev/null
+++ b/app/src/org/gnucash/android/ui/util/TaskDelegate.java
@@ -0,0 +1,30 @@
+/*
+ * Copyright (c) 2014 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.util;
+
+/**
+ * Interface for delegates which can be used to execute functions when an AsyncTask is complete
+ * @see org.gnucash.android.importer.ImportAsyncTask
+ * @author Ngewi Fet <ngewif@gmail.com>
+ */
+public interface TaskDelegate {
+
+    /**
+     * Function to execute on completion of task
+     */
+    public void onTaskComplete();
+}
