From 7bf4a841ea6c1bd99dc6b640771ca87b9a370ece Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Thu, 3 Sep 2015 18:19:12 +0300
Subject: [PATCH] Removed unnecessary addition on quarter diff

---
 .../gnucash/android/ui/report/LineChartFragment.java  | 19 ++++++++-----------
 1 file changed, 8 insertions(+), 11 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
index 86dff2d5..ee2551ca 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/LineChartFragment.java
@@ -200,8 +200,8 @@ private LineData getData(List<AccountType> accountTypeList) {
                     startDate = startDate.plusMonths(3);
                     break;
                 case YEAR:
-                    xValues.add(startDate.toString(X_AXIS_PATTERN));
-                    Log.w(TAG, "X axis " + startDate.toString("yy"));
+                    xValues.add(startDate.toString("yy"));
+                    Log.w(TAG, "X axis " + startDate.toString("yyyy"));
                     startDate = startDate.plusYears(1);
                     break;
 //                default:
@@ -237,10 +237,7 @@ private int getDateDiff(LocalDateTime start, LocalDateTime end) {
         switch (mGroupInterval) {
             case QUARTER:
                 int y = Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0), end.withDayOfYear(1).withMillisOfDay(0)).getYears();
-                Log.w(TAG, "year = " + y);
-                Log.w(TAG, "start q = " + getQuarter(start));
-                Log.w(TAG, "end q = " + getQuarter(end));
-                return (getQuarter(end) - getQuarter(start) + 1 + y * 4);
+                return (getQuarter(end) - getQuarter(start) + y * 4);
             case MONTH:
                 return Months.monthsBetween(start.withDayOfMonth(1).withMillisOfDay(0), end.withDayOfMonth(1).withMillisOfDay(0)).getMonths();
             case YEAR:
@@ -303,10 +300,10 @@ private LineData getEmptyData() {
             earliest = new LocalDateTime(mReportStartTime);
             latest = new LocalDateTime(mReportEndTime);
         }
-        Log.d(TAG, "Earliest " + accountType + " date " + earliest.toString("dd MM yyyy"));
-        Log.d(TAG, "Latest " + accountType + " date " + latest.toString("dd MM yyyy"));
+        Log.e(TAG, "Earliest " + accountType + " date " + earliest.toString("dd MM yyyy"));
+        Log.e(TAG, "Latest " + accountType + " date " + latest.toString("dd MM yyyy"));
 
-        int xAxisOffset = getDateDiff(new LocalDateTime(mEarliestTransactionTimestamp), new LocalDateTime(mEarliestTimestampsMap.get(accountType)));
+        int xAxisOffset = getDateDiff(new LocalDateTime(mEarliestTransactionTimestamp), earliest);
         int count = getDateDiff(earliest, latest);
         List<Entry> values = new ArrayList<>(count + 1);
         for (int i = 0; i <= count; i++) {
@@ -335,7 +332,7 @@ private LineData getEmptyData() {
             }
             float balance = (float) mAccountsDbAdapter.getAccountsBalance(accountUIDList, start, end).asDouble();
             values.add(new Entry(balance, i + xAxisOffset));
-            Log.d(TAG, accountType + earliest.toString(" MMM yyyy") + ", balance = " + balance);
+            Log.w(TAG, accountType + earliest.toString(" MMM yyyy") + ", balance = " + balance);
 
         }
 
@@ -370,7 +367,7 @@ private void calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeL
         mEarliestTransactionTimestamp = timestamps.get(0);
         mLatestTransactionTimestamp = timestamps.get(timestamps.size() - 1);
     }
-    
+
     @Override
     public void onTimeRangeUpdated(long start, long end) {
         mReportStartTime = start;
