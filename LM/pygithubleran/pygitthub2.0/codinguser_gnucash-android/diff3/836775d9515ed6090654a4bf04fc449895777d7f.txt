From 836775d9515ed6090654a4bf04fc449895777d7f Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sun, 30 Aug 2015 01:11:00 +0200
Subject: [PATCH] Add view for editing account description in UI

---
 .../org/gnucash/android/db/AccountsDbAdapter.java  |  1 +
 .../android/ui/account/AccountFormFragment.java    | 61 ++++++++++++----------
 app/src/main/res/layout/empty_view.xml             | 24 +++++++++
 app/src/main/res/layout/fragment_account_form.xml  | 19 ++++++-
 app/src/main/res/layout/item_split_entry.xml       |  2 +-
 5 files changed, 76 insertions(+), 31 deletions(-)
 create mode 100644 app/src/main/res/layout/empty_view.xml

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index a383ae2b..5de9e962 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -375,6 +375,7 @@ private Account buildSimpleAccountInstance(Cursor c) {
         Account account = new Account(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_NAME)));
         populateBaseModelAttributes(c, account);
 
+        account.setDescription(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_DESCRIPTION)));
         account.setParentUID(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_PARENT_ACCOUNT_UID)));
         account.setAccountType(AccountType.valueOf(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_TYPE))));
         Currency currency = Currency.getInstance(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_CURRENCY)));
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 44f9786c..6f5286a4 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -71,6 +71,9 @@
 import java.util.HashMap;
 import java.util.List;
 
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
 /**
  * Fragment used for creating and editing accounts
  * @author Ngewi Fet <ngewif@gmail.com>
@@ -86,15 +89,15 @@
     /**
 	 * EditText for the name of the account to be created/edited
 	 */
-	private EditText mNameEditText;
+	@Bind(R.id.input_account_name) EditText mNameEditText;
 
-    private TextInputLayout mTextInputLayout;
+    @Bind(R.id.name_text_input_layout) TextInputLayout mTextInputLayout;
 
 	/**
 	 * Spinner for selecting the currency of the account
 	 * Currencies listed are those specified by ISO 4217
 	 */
-	private Spinner mCurrencySpinner;
+	@Bind(R.id.input_currency_spinner) Spinner mCurrencySpinner;
 	
 	/**
 	 * Accounts database adapter
@@ -154,34 +157,39 @@
     /**
      * Spinner for parent account list
      */
-	private Spinner mParentAccountSpinner;
+	@Bind(R.id.input_parent_account) Spinner mParentAccountSpinner;
 
     /**
      * Checkbox which activates the parent account spinner when selected
      * Leaving this unchecked means it is a top-level root account
      */
-	private CheckBox mParentCheckBox;
+	@Bind(R.id.checkbox_parent_account) CheckBox mParentCheckBox;
 
     /**
      * Spinner for the account type
      * @see org.gnucash.android.model.AccountType
      */
-    private Spinner mAccountTypeSpinner;
+    @Bind(R.id.input_account_type_spinner) Spinner mAccountTypeSpinner;
 
     /**
      * Checkbox for activating the default transfer account spinner
      */
-    private CheckBox mDefaultTransferAccountCheckBox;
+    @Bind(R.id.checkbox_default_transfer_account) CheckBox mDefaultTransferAccountCheckBox;
 
     /**
      * Spinner for selecting the default transfer account
      */
-    private Spinner mDefaulTransferAccountSpinner;
+    @Bind(R.id.input_default_transfer_account) Spinner mDefaulTransferAccountSpinner;
+
+    /**
+     * Account description input text view
+     */
+    @Bind(R.id.input_account_description) EditText mDescriptionEditText;
 
     /**
      * Checkbox indicating if account is a placeholder account
      */
-    private CheckBox mPlaceholderCheckBox;
+    @Bind(R.id.checkbox_placeholder_account) CheckBox mPlaceholderCheckBox;
 
     /**
      * Cursor adapter which binds to the spinner for default transfer account
@@ -201,7 +209,7 @@
     /**
      * Trigger for color picker dialog
      */
-    private ColorSquare mColorSquare;
+    @Bind(R.id.input_color_picker) ColorSquare mColorSquare;
 
     private ColorPickerSwatch.OnColorSelectedListener mColorSelectedListener = new ColorPickerSwatch.OnColorSelectedListener() {
         @Override
@@ -246,9 +254,7 @@ public void onCreate(Bundle savedInstanceState) {
 	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
 		View view = inflater.inflate(R.layout.fragment_account_form, container, false);
-        mTextInputLayout = (TextInputLayout) view.findViewById(R.id.textinputlayout);
-		mCurrencySpinner = (Spinner) view.findViewById(R.id.input_currency_spinner);
-		mNameEditText = (EditText) view.findViewById(R.id.input_account_name);
+        ButterKnife.bind(this, view);
 
         mNameEditText.addTextChangedListener(new TextWatcher() {
             @Override
@@ -263,12 +269,12 @@ public void onTextChanged(CharSequence s, int start, int before, int count) {
 
             @Override
             public void afterTextChanged(Editable s) {
-                if (s.toString().length() > 0){
+                if (s.toString().length() > 0) {
                     mTextInputLayout.setErrorEnabled(false);
                 }
             }
         });
-        mAccountTypeSpinner = (Spinner) view.findViewById(R.id.input_account_type_spinner);
+
         mAccountTypeSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
             @Override
             public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {
@@ -283,24 +289,18 @@ public void onNothingSelected(AdapterView<?> adapterView) {
             }
         });
 
-        mPlaceholderCheckBox = (CheckBox) view.findViewById(R.id.checkbox_placeholder_account);
 
-		mParentAccountSpinner = (Spinner) view.findViewById(R.id.input_parent_account);
 		mParentAccountSpinner.setEnabled(false);
 
-		mParentCheckBox = (CheckBox) view.findViewById(R.id.checkbox_parent_account);
 		mParentCheckBox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
-			
-			@Override
-			public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-				mParentAccountSpinner.setEnabled(isChecked);
-			}
-		});
 
-        mDefaulTransferAccountSpinner = (Spinner) view.findViewById(R.id.input_default_transfer_account);
-        mDefaulTransferAccountSpinner.setEnabled(false);
+            @Override
+            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                mParentAccountSpinner.setEnabled(isChecked);
+            }
+        });
 
-        mDefaultTransferAccountCheckBox = (CheckBox) view.findViewById(R.id.checkbox_default_transfer_account);
+        mDefaulTransferAccountSpinner.setEnabled(false);
         mDefaultTransferAccountCheckBox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
@@ -308,7 +308,6 @@ public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
             }
         });
 
-        mColorSquare = (ColorSquare) view.findViewById(R.id.input_color_picker);
         mColorSquare.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -394,6 +393,9 @@ private void initializeViewsWithAccount(Account account){
         mNameEditText.setText(account.getName());
         mNameEditText.setSelection(mNameEditText.getText().length());
 
+        if (account.getDescription() != null)
+            mDescriptionEditText.setText(account.getDescription());
+
         if (mUseDoubleEntry && account.getDefaultTransferAccountUID() != null) {
             long doubleDefaultAccountId = mAccountsDbAdapter.getID(account.getDefaultTransferAccountUID());
             setDefaultTransferAccountSelection(doubleDefaultAccountId);
@@ -749,12 +751,13 @@ private void saveAccount() {
         }
 			
 		String curCode = mCurrencyCodes.get(mCurrencySpinner
-				.getSelectedItemPosition());
+                .getSelectedItemPosition());
 		mAccount.setCurrency(Currency.getInstance(curCode));
 
         AccountType selectedAccountType = getSelectedAccountType();
         mAccount.setAccountType(selectedAccountType);
 
+        mAccount.setDescription(mDescriptionEditText.getText().toString());
         mAccount.setPlaceHolderFlag(mPlaceholderCheckBox.isChecked());
         mAccount.setColorCode(mSelectedColor);
 
diff --git a/app/src/main/res/layout/empty_view.xml b/app/src/main/res/layout/empty_view.xml
new file mode 100644
index 00000000..80defd76
--- /dev/null
+++ b/app/src/main/res/layout/empty_view.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+-->
+<TextView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:textSize="20sp"
+    android:gravity="center"
+    android:layout_gravity="center"
+    android:textColor="@color/theme_accent"
+    android:text="No data to display" />
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_account_form.xml b/app/src/main/res/layout/fragment_account_form.xml
index 12f7b637..482cbff1 100644
--- a/app/src/main/res/layout/fragment_account_form.xml
+++ b/app/src/main/res/layout/fragment_account_form.xml
@@ -25,7 +25,7 @@
             android:orientation="vertical" >
 
         <android.support.design.widget.TextInputLayout
-            android:id="@+id/textinputlayout"
+            android:id="@+id/name_text_input_layout"
             android:layout_width="match_parent"
             android:layout_height="wrap_content">
             <EditText
@@ -82,6 +82,23 @@
                      android:layout_marginBottom="@dimen/form_row_bottom_margin" />
         </LinearLayout>
 
+        <android.support.design.widget.TextInputLayout
+            android:id="@+id/description_input_layout"
+            android:layout_marginBottom="10dp"
+            android:layout_marginLeft="9dp"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+            <EditText
+                android:id="@+id/input_account_description"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="@dimen/form_row_bottom_margin"
+                android:ems="15"
+                android:background="@android:color/transparent"
+                android:hint="Account description">
+            </EditText>
+        </android.support.design.widget.TextInputLayout>
+
         <CheckBox android:id="@+id/checkbox_placeholder_account"
                   android:layout_width="match_parent"
                   android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/item_split_entry.xml b/app/src/main/res/layout/item_split_entry.xml
index b5819b92..74fc1061 100644
--- a/app/src/main/res/layout/item_split_entry.xml
+++ b/app/src/main/res/layout/item_split_entry.xml
@@ -77,7 +77,7 @@ limitations under the License.
     </LinearLayout>
 
     <android.support.design.widget.TextInputLayout
-        android:id="@+id/textinputlayout"
+        android:id="@+id/name_text_input_layout"
         android:layout_width="match_parent"
         android:layout_marginLeft="7dp"
         android:layout_height="wrap_content">
