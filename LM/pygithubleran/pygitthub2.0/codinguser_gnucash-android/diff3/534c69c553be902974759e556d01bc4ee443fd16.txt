From 534c69c553be902974759e556d01bc4ee443fd16 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 24 Jul 2015 13:28:25 +0200
Subject: [PATCH] Fixed: Transaction type switch text not being updated Fixed:
 Transaction activity should use app theme

Fixed: export tests broken
Updated font sizes on transaction form
---
 app/build.gradle                                            | 10 ++++++----
 .../org/gnucash/android/test/ui/AccountsActivityTest.java   |  2 +-
 .../org/gnucash/android/test/ui/ExportTransactionsTest.java |  8 ++++----
 .../gnucash/android/test/ui/TransactionsActivityTest.java   |  2 +-
 app/src/main/AndroidManifest.xml                            |  2 +-
 .../android/ui/transaction/TransactionFormFragment.java     |  7 +++----
 .../ui/transaction/dialog/SplitEditorDialogFragment.java    | 12 ++++++------
 ...tionTypeToggleButton.java => TransactionTypeSwitch.java} | 13 +++++++------
 app/src/main/res/layout/fragment_new_transaction.xml        | 10 +++++-----
 app/src/main/res/layout/item_split_entry.xml                |  3 ++-
 app/src/main/res/values/themes.xml                          | 11 +++++++++++
 11 files changed, 47 insertions(+), 33 deletions(-)
 rename app/src/main/java/org/gnucash/android/ui/util/{TransactionTypeToggleButton.java => TransactionTypeSwitch.java} (93%)

diff --git a/app/build.gradle b/app/build.gradle
index 5c3da582..3872f444 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -167,11 +167,13 @@ dependencies {
             'junit:junit:4.12',
             'org.assertj:assertj-core:1.7.1'
     )
-    androidTestCompile 'com.android.support.test:runner:0.2'
-    androidTestCompile 'com.android.support.test:rules:0.2'
+    androidTestCompile ('com.android.support.test:runner:0.2',
+                        'com.android.support.test:rules:0.2',
+                        'com.android.support.test.espresso:espresso-core:2.1',
+                        'com.android.support:support-annotations:22.2.0',
+                        'com.android.support.test.espresso:espresso-contrib:2.2')
+
     androidTestCompile('com.squareup.assertj:assertj-android:1.0.0'){
         exclude group: 'com.android.support', module:'support-annotations'
     }
-    androidTestCompile ('com.android.support.test.espresso:espresso-core:2.1')
-    androidTestCompile 'com.android.support:support-annotations:22.2.0'
 }
\ No newline at end of file
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 71e70dea..3502c921 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -173,7 +173,7 @@ public void testSearchAccounts(){
      */
     @Test
 	public void testCreateAccount(){
-        onView(withId(R.id.fab_create_account)).check(matches(isDisplayed())).perform(click());
+        onView(allOf(isDisplayed(), withId(R.id.fab_create_account))).perform(click());
 
         String NEW_ACCOUNT_NAME = "A New Account";
         onView(withId(R.id.input_account_name)).perform(typeText(NEW_ACCOUNT_NAME));
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index 15b191e8..6ec5f7cc 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -20,6 +20,7 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.preference.PreferenceManager;
 import android.support.test.InstrumentationRegistry;
+import android.support.test.espresso.contrib.DrawerActions;
 import android.support.test.runner.AndroidJUnit4;
 import android.test.ActivityInstrumentationTestCase2;
 import android.util.Log;
@@ -145,9 +146,8 @@ public void testExport(ExportFormat format){
 		for (File file : folder.listFiles()) {
 			file.delete();
 		}
-		//legacy menu will be removed in the future
-		//onView(withId(R.id.menu_export)).perform(click());
-		onView(withId(android.R.id.home)).perform(click());
+
+		DrawerActions.openDrawer(R.id.drawer_layout);
 		onView(withText(R.string.nav_menu_export)).perform(click());
 		onView(withText(format.name())).perform(click());
 
@@ -178,7 +178,7 @@ public void testDeleteTransactionsAfterExport(){
 	 */
 	@Test
 	public void shouldCreateExportSchedule(){
-		onView(withId(android.R.id.home)).perform(click());
+		DrawerActions.openDrawer(R.id.drawer_layout);
 		onView(withText(R.string.nav_menu_export)).perform(click());
 
 		onView(withText(ExportFormat.XML.name())).perform(click());
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 2beb69d4..0ddf728d 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -182,7 +182,7 @@ public void testAddTransactionShouldRequireAmount(){
 				.perform(typeText("Lunch"));
 
 		onView(withId(R.id.menu_save)).perform(click());
-		sleep(500);
+		sleep(1000);
 		assertToastDisplayed(R.string.toast_transanction_amount_required);
 
 		int afterCount = mTransactionsDbAdapter.getTransactionsCount(DUMMY_ACCOUNT_UID);
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 3bb26d1e..d9382f58 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -86,7 +86,7 @@
         <activity android:name=".ui.transaction.ScheduledActionsActivity" />
         <activity android:name=".ui.passcode.PasscodePreferenceActivity" />
         <activity android:name=".ui.transaction.TransactionsActivity"
-            android:theme="@style/Theme.AppCompat.Light.NoActionBar"
+            android:theme="@style/Theme.GnucashTheme.NoActionBar"
             android:configChanges="orientation|screenSize">
         </activity>
         <activity android:name=".ui.widget.WidgetConfigurationActivity"
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 899646e7..6754e8fa 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -21,7 +21,6 @@
 import android.database.Cursor;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
@@ -70,7 +69,7 @@
 import org.gnucash.android.ui.transaction.dialog.SplitEditorDialogFragment;
 import org.gnucash.android.ui.util.AmountInputFormatter;
 import org.gnucash.android.ui.util.RecurrenceParser;
-import org.gnucash.android.ui.util.TransactionTypeToggleButton;
+import org.gnucash.android.ui.util.TransactionTypeSwitch;
 import org.gnucash.android.ui.widget.WidgetConfigurationActivity;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
@@ -135,7 +134,7 @@
 	/**
 	 * Button for setting the transaction type, either credit or debit
 	 */
-	private TransactionTypeToggleButton mTransactionTypeButton;
+	private TransactionTypeSwitch mTransactionTypeButton;
 
 	/**
 	 * Input field for the transaction name (description)
@@ -232,7 +231,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 		mTimeTextView           = (TextView) v.findViewById(R.id.input_time);
 		mAmountEditText         = (EditText) v.findViewById(R.id.input_transaction_amount);
 		mCurrencyTextView       = (TextView) v.findViewById(R.id.currency_symbol);
-		mTransactionTypeButton  = (TransactionTypeToggleButton) v.findViewById(R.id.input_transaction_type);
+		mTransactionTypeButton  = (TransactionTypeSwitch) v.findViewById(R.id.input_transaction_type);
 		mDoubleAccountSpinner   = (Spinner) v.findViewById(R.id.input_double_entry_accounts_spinner);
         mOpenSplitsButton       = (Button) v.findViewById(R.id.btn_open_splits);
         mRecurrenceTextView     = (TextView) v.findViewById(R.id.input_recurrence);
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/SplitEditorDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/SplitEditorDialogFragment.java
index d4207e2b..15653748 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/SplitEditorDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/SplitEditorDialogFragment.java
@@ -47,7 +47,7 @@
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.util.AmountInputFormatter;
-import org.gnucash.android.ui.util.TransactionTypeToggleButton;
+import org.gnucash.android.ui.util.TransactionTypeSwitch;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
 import java.math.BigDecimal;
@@ -169,7 +169,7 @@ private void enableAllControls(boolean b) {
             Spinner accountsSpinner = (Spinner) splitView.findViewById(R.id.input_accounts_spinner);
             final TextView splitCurrencyTextView = (TextView) splitView.findViewById(R.id.split_currency_symbol);
             final TextView splitUidTextView = (TextView) splitView.findViewById(R.id.split_uid);
-            final TransactionTypeToggleButton splitTypeButton = (TransactionTypeToggleButton) splitView.findViewById(R.id.btn_split_type);
+            final TransactionTypeSwitch splitTypeButton = (TransactionTypeSwitch) splitView.findViewById(R.id.btn_split_type);
             splitMemoEditText.setEnabled(b);
             splitAmountEditText.setEnabled(b);
             removeSplitButton.setEnabled(b);
@@ -227,7 +227,7 @@ private void bindSplitView(final View splitView, Split split){
         Spinner accountsSpinner                 = (Spinner)     splitView.findViewById(R.id.input_accounts_spinner);
         final TextView splitCurrencyTextView    = (TextView)    splitView.findViewById(R.id.split_currency_symbol);
         final TextView splitUidTextView         = (TextView)    splitView.findViewById(R.id.split_uid);
-        final TransactionTypeToggleButton splitTypeButton = (TransactionTypeToggleButton) splitView.findViewById(R.id.btn_split_type);
+        final TransactionTypeSwitch splitTypeButton = (TransactionTypeSwitch) splitView.findViewById(R.id.btn_split_type);
 
         splitAmountEditText.addTextChangedListener(new AmountInputFormatter(splitAmountEditText));
 
@@ -344,7 +344,7 @@ public void onClick(View view) {
             EditText splitAmountEditText            = (EditText)    splitView.findViewById(R.id.input_split_amount);
             Spinner accountsSpinner                 = (Spinner)     splitView.findViewById(R.id.input_accounts_spinner);
             TextView splitUidTextView               = (TextView)    splitView.findViewById(R.id.split_uid);
-            TransactionTypeToggleButton splitTypeButton = (TransactionTypeToggleButton) splitView.findViewById(R.id.btn_split_type);
+            TransactionTypeSwitch splitTypeButton = (TransactionTypeSwitch) splitView.findViewById(R.id.btn_split_type);
 
             BigDecimal amountBigDecimal = TransactionFormFragment.parseInputToDecimal(splitAmountEditText.getText().toString());
             String accountUID = mAccountsDbAdapter.getUID(accountsSpinner.getSelectedItemId());
@@ -409,9 +409,9 @@ public void afterTextChanged(Editable editable) {
      * Updates the account type for the TransactionTypeButton when the selected account is changed in the spinner
      */
     private class TypeButtonLabelUpdater implements AdapterView.OnItemSelectedListener {
-        TransactionTypeToggleButton mTypeToggleButton;
+        TransactionTypeSwitch mTypeToggleButton;
 
-        public TypeButtonLabelUpdater(TransactionTypeToggleButton typeToggleButton){
+        public TypeButtonLabelUpdater(TransactionTypeSwitch typeToggleButton){
             this.mTypeToggleButton = typeToggleButton;
         }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/util/TransactionTypeToggleButton.java b/app/src/main/java/org/gnucash/android/ui/util/TransactionTypeSwitch.java
similarity index 93%
rename from app/src/main/java/org/gnucash/android/ui/util/TransactionTypeToggleButton.java
rename to app/src/main/java/org/gnucash/android/ui/util/TransactionTypeSwitch.java
index 22a5e493..f93164a1 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/TransactionTypeToggleButton.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/TransactionTypeSwitch.java
@@ -34,18 +34,18 @@
  * different account types.
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class TransactionTypeToggleButton extends SwitchCompat {
+public class TransactionTypeSwitch extends SwitchCompat {
     private AccountType mAccountType = AccountType.EXPENSE;
 
-    public TransactionTypeToggleButton(Context context, AttributeSet attrs, int defStyle) {
+    public TransactionTypeSwitch(Context context, AttributeSet attrs, int defStyle) {
         super(context, attrs, defStyle);
     }
 
-    public TransactionTypeToggleButton(Context context, AttributeSet attrs) {
+    public TransactionTypeSwitch(Context context, AttributeSet attrs) {
         super(context, attrs);
     }
 
-    public TransactionTypeToggleButton(Context context) {
+    public TransactionTypeSwitch(Context context) {
         super(context);
     }
 
@@ -151,15 +151,16 @@ public OnTypeChangedListener(EditText amountEditText, TextView currencyTextView)
 
         @Override
         public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
+            setText(isChecked ? getTextOn() : getTextOff());
             if (isChecked){
                 int red = getResources().getColor(R.color.debit_red);
-                TransactionTypeToggleButton.this.setTextColor(red);
+                TransactionTypeSwitch.this.setTextColor(red);
                 mAmountEditText.setTextColor(red);
                 mCurrencyTextView.setTextColor(red);
             }
             else {
                 int green = getResources().getColor(R.color.credit_green);
-                TransactionTypeToggleButton.this.setTextColor(green);
+                TransactionTypeSwitch.this.setTextColor(green);
                 mAmountEditText.setTextColor(green);
                 mCurrencyTextView.setTextColor(green);
             }
diff --git a/app/src/main/res/layout/fragment_new_transaction.xml b/app/src/main/res/layout/fragment_new_transaction.xml
index 710f96ba..70a8a4fa 100644
--- a/app/src/main/res/layout/fragment_new_transaction.xml
+++ b/app/src/main/res/layout/fragment_new_transaction.xml
@@ -30,11 +30,10 @@
 			android:layout_width="match_parent"
 			android:layout_height="wrap_content"
 			android:hint="@string/label_transaction_name"
-			android:layout_marginBottom="@dimen/form_row_bottom_margin"
 			android:inputType="textCapSentences"
 			android:imeOptions="actionNext"
 			android:nextFocusDown="@+id/input_transaction_amount"
-			style="@style/ListItemText" />
+			android:textSize="22sp" />
 
 		<TableRow
 			android:layout_width="match_parent"
@@ -62,16 +61,17 @@
 				android:inputType="number"
 				android:nextFocusDown="@+id/input_description"
 				android:textColor="@color/debit_red"
-				style="@style/ListItemText" />
+				android:textSize="22sp" />
 
-			<org.gnucash.android.ui.util.TransactionTypeToggleButton
+			<org.gnucash.android.ui.util.TransactionTypeSwitch
 				android:id="@+id/input_transaction_type"
 				android:layout_width="0dp"
 				android:layout_weight="2"
 				android:layout_height="wrap_content"
 				android:textOn="@string/label_debit"
 				android:textOff="@string/label_credit"
-				android:textAppearance="?android:attr/textAppearanceMedium"
+				android:textAllCaps="true"
+				android:gravity="end|center_vertical"
 				android:textColor="@color/debit_red"
 				android:checked="true"/>
 
diff --git a/app/src/main/res/layout/item_split_entry.xml b/app/src/main/res/layout/item_split_entry.xml
index da992141..c69d4c05 100644
--- a/app/src/main/res/layout/item_split_entry.xml
+++ b/app/src/main/res/layout/item_split_entry.xml
@@ -45,7 +45,8 @@ limitations under the License.
                 android:textColor="@color/debit_red"
                 style="@style/ListItemText"/>
 
-        <org.gnucash.android.ui.util.TransactionTypeToggleButton android:id="@+id/btn_split_type"
+        <org.gnucash.android.ui.util.TransactionTypeSwitch
+            android:id="@+id/btn_split_type"
                       android:layout_width="0dp"
                       android:layout_weight="3"
                       android:layout_height="wrap_content"
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
index 4f676369..b5f49273 100644
--- a/app/src/main/res/values/themes.xml
+++ b/app/src/main/res/values/themes.xml
@@ -33,4 +33,15 @@
 
     </style>
 
+    <style name="Theme.GnucashTheme.NoActionBar" parent="Theme.AppCompat.Light.NoActionBar">
+        <!-- Set AppCompats color theming attrs -->
+        <item name="colorPrimary">#2E7D32</item> <!-- 800 -->
+        <item name="colorPrimaryDark">#1B5E20</item> <!-- 900 -->
+        <item name="colorAccent">#FFAB00</item> <!-- A700 -->
+        <!-- The rest of your attributes -->
+
+        <item name="actionModeBackground">@color/action_mode_background</item>
+        <item name="colorButtonNormal">#FFAB00</item>
+
+    </style>
 </resources>
\ No newline at end of file
