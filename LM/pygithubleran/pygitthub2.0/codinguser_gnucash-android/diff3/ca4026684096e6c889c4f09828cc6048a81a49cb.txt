From ca4026684096e6c889c4f09828cc6048a81a49cb Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 9 Sep 2015 15:59:08 +0200
Subject: [PATCH] Fixed: AccountsActivity tests failing

Fixed: crash when destroying transactions activity
---
 .../android/test/ui/AccountsActivityTest.java      |  5 +-
 .../android/test/ui/TransactionsActivityTest.java  |  2 +-
 .../ui/transaction/TransactionsActivity.java       | 55 +++++++++++-----------
 3 files changed, 32 insertions(+), 30 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 1bd4f43b..28197be1 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -59,6 +59,7 @@
 import static android.support.test.espresso.Espresso.openActionBarOverflowOrOptionsMenu;
 import static android.support.test.espresso.action.ViewActions.clearText;
 import static android.support.test.espresso.action.ViewActions.click;
+import static android.support.test.espresso.action.ViewActions.closeSoftKeyboard;
 import static android.support.test.espresso.action.ViewActions.longClick;
 import static android.support.test.espresso.action.ViewActions.scrollTo;
 import static android.support.test.espresso.action.ViewActions.swipeRight;
@@ -183,8 +184,8 @@ public void testCreateAccount(){
         onView(allOf(isDisplayed(), withId(R.id.fab_create_account))).perform(click());
 
         String NEW_ACCOUNT_NAME = "A New Account";
-        onView(withId(R.id.input_account_name)).perform(typeText(NEW_ACCOUNT_NAME));
-        Espresso.closeSoftKeyboard();
+        onView(withId(R.id.input_account_name)).perform(typeText(NEW_ACCOUNT_NAME), closeSoftKeyboard());
+        sleep(1000);
         onView(withId(R.id.checkbox_placeholder_account))
                 .check(matches(isNotChecked()))
                 .perform(click());
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 8e0fe400..c1af3db6 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -185,7 +185,7 @@ public void testAddTransactionShouldRequireAmount(){
 				.perform(typeText("Lunch"));
 
 		onView(withId(R.id.menu_save)).perform(click());
-		onView(withText(R.string.title_create_account)).check(matches(isDisplayed()));
+		onView(withText(R.string.title_add_transaction)).check(matches(isDisplayed()));
 
 		assertToastDisplayed(R.string.toast_transanction_amount_required);
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
index 02f09828..8fb130ed 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -61,6 +61,9 @@
 
 import java.math.BigDecimal;
 
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
 /**
  * Activity for displaying, creating and editing transactions
  * @author Ngewi Fet <ngewif@gmail.com>
@@ -103,18 +106,27 @@
      */
     private Cursor mAccountsCursor = null;
 
-    private ViewPager mViewPager;
+    @Bind(R.id.pager) ViewPager mViewPager;
+    @Bind(R.id.spinner_toolbar) Spinner mToolbarSpinner;
+    @Bind(R.id.tab_layout) TabLayout mTabLayout;
+    @Bind(R.id.transactions_sum) TextView mSumTextView;
+    @Bind(R.id.fab_create_transaction) FloatingActionButton mCreateFloatingButton;
 
     private SparseArray<Refreshable> mFragmentPageReferenceMap = new SparseArray<>();
 
+    /**
+     * Flag for determining is the currently displayed account is a placeholder account or not.
+     * This will determine if the transactions tab is displayed or not
+     */
+    private boolean mIsPlaceholderAccount;
 
 	private AdapterView.OnItemSelectedListener mTransactionListNavigationListener = new AdapterView.OnItemSelectedListener() {
 
         @Override
         public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
             mAccountUID = mAccountsDbAdapter.getUID(id);
-
-            if (isPlaceHolderAccount()){
+            mIsPlaceholderAccount = mAccountsDbAdapter.isPlaceholderAccount(mAccountUID);
+            if (mIsPlaceholderAccount){
                 if (mTabLayout.getTabCount() > 1)
                     mTabLayout.removeTabAt(1);
             } else {
@@ -130,10 +142,9 @@ public void onNothingSelected(AdapterView<?> parent) {
             //nothing to see here, move along
         }
 	};
+
     private PagerAdapter mPagerAdapter;
-    private Spinner mToolbarSpinner;
-    private TabLayout mTabLayout;
-    private TextView mSumTextView;
+
 
 
     /**
@@ -147,7 +158,7 @@ public AccountViewPagerAdapter(FragmentManager fm){
 
         @Override
         public Fragment getItem(int i) {
-            if (isPlaceHolderAccount()){
+            if (mIsPlaceholderAccount){
                 Fragment transactionsListFragment = prepareSubAccountsListFragment();
                 mFragmentPageReferenceMap.put(i, (Refreshable) transactionsListFragment);
                 return transactionsListFragment;
@@ -177,7 +188,7 @@ public void destroyItem(ViewGroup container, int position, Object object) {
 
         @Override
         public CharSequence getPageTitle(int position) {
-            if (isPlaceHolderAccount())
+            if (mIsPlaceholderAccount)
                 return getString(R.string.section_header_subaccounts);
 
             switch (position){
@@ -192,7 +203,7 @@ public CharSequence getPageTitle(int position) {
 
         @Override
         public int getCount() {
-            if (isPlaceHolderAccount())
+            if (mIsPlaceholderAccount)
                 return 1;
             else
                 return DEFAULT_NUM_PAGES;
@@ -225,14 +236,6 @@ private TransactionsListFragment prepareTransactionsListFragment(){
     }
 
     /**
-     * Returns <code>true</code> is the current account is a placeholder account, <code>false</code> otherwise.
-     * @return <code>true</code> is the current account is a placeholder account, <code>false</code> otherwise.
-     */
-    private boolean isPlaceHolderAccount(){
-        return mAccountsDbAdapter.isPlaceholderAccount(mAccountUID);
-    }
-
-    /**
      * Refreshes the fragments currently in the transactions activity
      */
     @Override
@@ -263,16 +266,15 @@ protected void onCreate(Bundle savedInstanceState) {
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayShowTitleEnabled(false);
 
-        mSumTextView = (TextView) findViewById(R.id.transactions_sum);
-
-        mViewPager = (ViewPager) findViewById(R.id.pager);
+        ButterKnife.bind(this);
 
 		mAccountUID = getIntent().getStringExtra(UxArgument.SELECTED_ACCOUNT_UID);
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
-        mTabLayout = (TabLayout) findViewById(R.id.tab_layout);
+        mIsPlaceholderAccount = mAccountsDbAdapter.isPlaceholderAccount(mAccountUID);
+
         mTabLayout.addTab(mTabLayout.newTab().setText(R.string.section_header_subaccounts));
-        if (!isPlaceHolderAccount()) {
+        if (!mIsPlaceholderAccount) {
             mTabLayout.addTab(mTabLayout.newTab().setText(R.string.section_header_transactions), true);
         }
 
@@ -301,17 +303,17 @@ public void onTabReselected(TabLayout.Tab tab) {
             }
         });
 
-        FloatingActionButton createTransactionFAB = (FloatingActionButton) findViewById(R.id.fab_create_transaction);
-        createTransactionFAB.setOnClickListener(new View.OnClickListener() {
+        mCreateFloatingButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                switch (mViewPager.getCurrentItem()){
+                switch (mViewPager.getCurrentItem()) {
                     case INDEX_SUB_ACCOUNTS_FRAGMENT:
                         Intent addAccountIntent = new Intent(TransactionsActivity.this, FormActivity.class);
                         addAccountIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
                         addAccountIntent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.ACCOUNT_FORM.name());
                         addAccountIntent.putExtra(UxArgument.PARENT_ACCOUNT_UID, mAccountUID);
-                        startActivityForResult(addAccountIntent, AccountsActivity.REQUEST_EDIT_ACCOUNT);;
+                        startActivityForResult(addAccountIntent, AccountsActivity.REQUEST_EDIT_ACCOUNT);
+                        ;
                         break;
 
                     case INDEX_TRANSACTIONS_FRAGMENT:
@@ -357,7 +359,6 @@ private void setupActionBarNavigation() {
         SpinnerAdapter mSpinnerAdapter = new QualifiedAccountNameCursorAdapter(
                 getSupportActionBar().getThemedContext(), mAccountsCursor);
 
-        mToolbarSpinner = (Spinner) findViewById(R.id.spinner_toolbar);
         mToolbarSpinner.setAdapter(mSpinnerAdapter);
         mToolbarSpinner.setOnItemSelectedListener(mTransactionListNavigationListener);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
