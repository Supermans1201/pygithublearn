From ae8145f947cfd8c0b662243e680db70372c1f0ca Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 12 Aug 2014 17:59:53 +0300
Subject: [PATCH] Prevent from enabling passlock without entering a passcode

---
 .../ui/settings/PasscodePreferenceFragment.java    | 18 +++++++---
 .../android/ui/settings/SettingsActivity.java      | 40 ++++++++++++++++------
 2 files changed, 42 insertions(+), 16 deletions(-)

diff --git a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
index 599650b0..2c9ca704 100644
--- a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
+++ b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
@@ -20,6 +20,7 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
+import android.preference.CheckBoxPreference;
 import android.preference.Preference;
 import android.preference.Preference.OnPreferenceChangeListener;
 import android.preference.PreferenceFragment;
@@ -45,6 +46,7 @@
     public static final int PASSCODE_REQUEST_CODE = 2;
 
     private SharedPreferences.Editor editor;
+    private CheckBoxPreference checkBoxPreference;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -62,12 +64,15 @@ public void onResume() {
         super.onResume();
 
         editor = PreferenceManager.getDefaultSharedPreferences(getActivity().getApplicationContext()).edit();
+        final Intent intent = new Intent(getActivity(), PasscodePreferenceActivity.class);
 
-
-        findPreference(getString(R.string.key_enable_passcode))
-                .setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
+        checkBoxPreference = (CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode));
+        checkBoxPreference.setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
                     @Override
                     public boolean onPreferenceChange(Preference preference, Object newValue) {
+                        if ((Boolean) newValue) {
+                            startActivityForResult(intent, PASSCODE_REQUEST_CODE);
+                        }
                         editor.putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue);
                         editor.commit();
                         return true;
@@ -77,8 +82,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                 .setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
                     @Override
                     public boolean onPreferenceClick(Preference preference) {
-                        startActivityForResult(
-                                new Intent(getActivity(), PasscodePreferenceActivity.class), PASSCODE_REQUEST_CODE);
+                        startActivityForResult(intent, PASSCODE_REQUEST_CODE);
                         return true;
                     }
                 });
@@ -92,7 +96,11 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
             editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
             editor.commit();
             Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
+        } else {
+            editor.putBoolean(UxArgument.ENABLED_PASSCODE, false);
+            checkBoxPreference.setChecked(false);
         }
+        editor.commit();
     }
 
 }
diff --git a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
index d816d376..7527c6bb 100644
--- a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -23,28 +23,34 @@
 import android.content.pm.PackageManager.NameNotFoundException;
 import android.os.Build;
 import android.os.Bundle;
+import android.preference.CheckBoxPreference;
 import android.preference.Preference;
 import android.preference.Preference.OnPreferenceChangeListener;
 import android.preference.PreferenceManager;
 import android.util.Log;
 import android.widget.Toast;
+
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.app.SherlockPreferenceActivity;
 import com.actionbarsherlock.view.MenuItem;
+
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
 
-import java.io.*;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Timer;
@@ -174,13 +180,18 @@ public boolean onOptionsItemSelected(MenuItem item) {
 	
 	@Override
  	public boolean onPreferenceChange(Preference preference, Object newValue) {
-		preference.setSummary(newValue.toString());
 		if (preference.getKey().equals(getString(R.string.key_default_currency))){
 			Money.DEFAULT_CURRENCY_CODE = newValue.toString();
+            preference.setSummary(newValue.toString());
 		} else if (preference.getKey().equals(getString(R.string.key_enable_passcode))) {
-            Editor editor = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit();
-            editor.putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue);
-            editor.commit();
+            if ((Boolean) newValue) {
+                startActivityForResult(new Intent(this, PasscodePreferenceActivity.class),
+                        PasscodePreferenceFragment.PASSCODE_REQUEST_CODE);
+            }
+            PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                    .edit()
+                    .putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue)
+                    .commit();
         }
 
 		return true;
@@ -313,6 +324,13 @@ public void importMostRecentBackup(){
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (resultCode == Activity.RESULT_CANCELED){
+            if (requestCode == PasscodePreferenceFragment.PASSCODE_REQUEST_CODE) {
+                PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                        .edit()
+                        .putBoolean(UxArgument.ENABLED_PASSCODE, false)
+                        .commit();
+                ((CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode))).setChecked(false);
+            }
             return;
         }
 
@@ -325,13 +343,13 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                     e.printStackTrace();
                     Toast.makeText(this, R.string.toast_error_importing_accounts, Toast.LENGTH_SHORT).show();
                 }
-
                 break;
             case PasscodePreferenceFragment.PASSCODE_REQUEST_CODE:
                 if (data!= null) {
-                    Editor editor = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit();
-                    editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
-                    editor.commit();
+                    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                            .edit()
+                            .putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE))
+                            .commit();
                     Toast.makeText(getApplicationContext(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
                 }
                 break;
