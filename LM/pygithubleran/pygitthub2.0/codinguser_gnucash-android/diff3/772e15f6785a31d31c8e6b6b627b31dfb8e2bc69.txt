From 772e15f6785a31d31c8e6b6b627b31dfb8e2bc69 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 22 Mar 2016 13:06:42 +0100
Subject: [PATCH] Unify parsing of amounts.

---
 .../ui/transaction/TransactionFormFragment.java    | 17 -----------
 .../dialog/TransferFundsDialogFragment.java        | 34 ++++++++++++++--------
 app/src/main/res/values/strings.xml                |  1 +
 3 files changed, 23 insertions(+), 29 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index f5ce13d0..2735a38d 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -1013,23 +1013,6 @@ public static String stripCurrencyFormatting(String s){
 		return stripped;
 	}
 
-	/**
-	 * Parse an input string into a {@link BigDecimal}
-	 * This method expects the amount including the decimal part
-	 * @param amountString String with amount information
-	 * @return BigDecimal with the amount parsed from <code>amountString</code>
-	 */
-	public static BigDecimal parseInputToDecimal(String amountString){
-		String clean = stripCurrencyFormatting(amountString);
-        if (clean.length() == 0) //empty string
-                return BigDecimal.ZERO;
-		//all amounts are input to 2 decimal places, so after removing decimal separator, divide by 100
-        //TODO: Handle currencies with different kinds of decimal places
-		return new BigDecimal(clean).setScale(2,
-				RoundingMode.HALF_EVEN).divide(new BigDecimal(100), 2,
-				RoundingMode.HALF_EVEN);
-	}
-
     @Override
     public void transferComplete(Money amount) {
         mSplitQuantity = amount;
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
index 9f2bd1be..4a48753f 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/dialog/TransferFundsDialogFragment.java
@@ -40,7 +40,6 @@
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Price;
-import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.util.OnTransferFundsListener;
 
@@ -48,6 +47,7 @@
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
 import java.text.ParseException;
+import java.text.ParsePosition;
 import java.util.Currency;
 
 import butterknife.Bind;
@@ -201,13 +201,10 @@ private void transferFunds() {
         String originCommodityUID = commoditiesDbAdapter.getCommodityUID(mOriginAmount.getCurrency().getCurrencyCode());
         String targetCommodityUID = commoditiesDbAdapter.getCommodityUID(mTargetCurrencyCode);
 
-        if (mExchangeRateRadioButton.isChecked()){
+        if (mExchangeRateRadioButton.isChecked()) {
             BigDecimal rate;
-            String exchangeRateString = mExchangeRateInput.getText().toString();
-            DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
-            formatter.setParseBigDecimal(true);
             try {
-                rate = (BigDecimal) formatter.parse(exchangeRateString);
+                rate = parseAmount(mExchangeRateInput.getText().toString());
             } catch (ParseException e) {
                 mExchangeRateInputLayout.setError(getString(R.string.error_invalid_exchange_rate));
                 return;
@@ -218,14 +215,14 @@ private void transferFunds() {
             mConvertedAmount = mOriginAmount.multiply(rate).withCurrency(targetCommodity);
         }
 
-        if (mConvertedAmountRadioButton.isChecked()){
-            String convertedAmount = mConvertedAmountInput.getText().toString();
-            if (convertedAmount.isEmpty()){
-                mConvertedAmountInputLayout.setError(getString(R.string.error_converted_amount_required));
+        if (mConvertedAmountRadioButton.isChecked()) {
+            BigDecimal amount;
+            try {
+                amount = parseAmount(mConvertedAmountInput.getText().toString());
+            } catch (ParseException e) {
+                mConvertedAmountInputLayout.setError(getString(R.string.error_invalid_amount));
                 return;
             }
-
-            BigDecimal amount = TransactionFormFragment.parseInputToDecimal(convertedAmount);
             mConvertedAmount = new Money(amount, Commodity.getInstance(mTargetCurrencyCode));
 
             price = new Price(originCommodityUID, targetCommodityUID);
@@ -243,6 +240,19 @@ private void transferFunds() {
         dismiss();
     }
 
+    private BigDecimal parseAmount(String amount) throws ParseException {
+        DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
+        formatter.setParseBigDecimal(true);
+        ParsePosition parsePosition = new ParsePosition(0);
+        BigDecimal parsedAmount = (BigDecimal) formatter.parse(amount, parsePosition);
+
+        // Ensure any mistyping by the user is caught instead of partially parsed
+        if (parsePosition.getIndex() < amount.length())
+            throw new ParseException("Parse error", parsePosition.getErrorIndex());
+
+        return parsedAmount;
+    }
+
     /**
      * Hides the error message from mConvertedAmountInputLayout and mExchangeRateInputLayout
      * when the user edits their content.
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 835d4748..d3ac600e 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -393,6 +393,7 @@
     <string name="menu_duplicate_transaction">Duplicate</string>
     <string name="error_invalid_exchange_rate">Invalid exchange rate</string>
     <string name="sample_exchange_rate">e.g. 1 %1$s = x.xx %2$s</string>
+    <string name="error_invalid_amount">Invalid amount</string>
     <string-array name="report_time_range">
         <item>Current month</item>
         <item>Last 3 months</item>
