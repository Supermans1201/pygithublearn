From 96d4e88c4d344e15d9ab57539774c10905c1abfa Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewi.fet@uni-due.de>
Date: Mon, 6 Aug 2012 14:43:55 +0200
Subject: [PATCH] Fixed: Creating transactions from the widget does not clear
 the activity stack and does not always open view for new transactions Fixed:
 With multiple widgets, any click actions always opened to the account of the
 first widget Closes #5

---
 GnucashMobile/AndroidManifest.xml                  | 210 +++++------
 GnucashMobile/res/values/strings.xml               |   1 +
 .../ui/widget/WidgetConfigurationActivity.java     | 399 +++++++++++----------
 3 files changed, 312 insertions(+), 298 deletions(-)

diff --git a/GnucashMobile/AndroidManifest.xml b/GnucashMobile/AndroidManifest.xml
index b15a84f4..d2eed64c 100644
--- a/GnucashMobile/AndroidManifest.xml
+++ b/GnucashMobile/AndroidManifest.xml
@@ -1,104 +1,108 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Written By: Ngewi Fet <ngewif@gmail.com>
- Copyright (c) 2012 Ngewi Fet
- 
- This file is part of Gnucash for Android
- 
- Gnucash for Android is free software; you can redistribute it and/or
- modify it under the terms of the GNU General Public License as
- published by the Free Software Foundation; either version 2 of
- the License, or (at your option) any later version.
- 
- This program is distributed in the hope that it will be useful,
- but WITHOUT ANY WARRANTY; without even the implied warranty of
- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- GNU General Public License for more details.
- 
- You should have received a copy of the GNU General Public License
- along with this program; if not, contact:
- 
- Free Software Foundation           Voice:  +1-617-542-5942
- 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
- Boston, MA  02110-1301,  USA       gnu@gnu.org
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="org.gnucash.android"
-    android:versionCode="1"
-    android:versionName="1.0" >
-
-    <uses-sdk android:minSdkVersion="8" android:targetSdkVersion="15"/>
-    
-    <permission-group 
-        android:name="org.gnucash.android.permission.group.GNUCASH"
-        android:label="@string/label_permission_group" 
-        android:description="@string/description_permission_group" />
-    
-    <permission android:name="org.gnucash.android.permission.CREATE_ACCOUNT" 
-        android:label="@string/label_permission_create_account"
-        android:permissionGroup="org.gnucash.android.permission.group.GNUCASH"
-        android:protectionLevel="dangerous" />
-    <permission android:name="org.gnucash.android.permission.RECORD_TRANSACTION" 
-        android:label="@string/label_permission_record_transaction"
-        android:permissionGroup="org.gnucash.android.permission.group.GNUCASH"
-        android:protectionLevel="dangerous" />
-    
-    <uses-permission android:label="@string/label_permission_record_transactions"
-        android:name="org.gnucash.android.permission.RECORD_TRANSACTION" />
-    <uses-permission android:label="@string/label_permission_create_accounts"
-        android:name="org.gnucash.android.permission.CREATE_ACCOUNT" />
-    <uses-permission android:label="@string/permission_access_sdcard"
-        android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
-	    
-    <application
-        android:icon="@drawable/ic_launcher"
-        android:label="@string/app_name" 
-        android:theme="@style/Theme.Sherlock.Light">
-        <activity
-            android:name=".ui.accounts.AccountsActivity"
-            android:label="@string/app_name" android:launchMode="singleTop">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-				<category android:name="android.intent.category.HOME"/>
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-        <activity android:name=".ui.settings.SettingsActivity"></activity>
-        <activity android:name=".ui.transactions.TransactionsActivity" android:launchMode="singleTop"></activity><activity android:name=".ui.widget.WidgetConfigurationActivity"
-            android:theme="@style/Theme.Sherlock.Light.Dialog"
-            android:excludeFromRecents="true">
-		    <intent-filter>
-		        <action android:name="android.appwidget.action.APPWIDGET_CONFIGURE"/>
-		    </intent-filter>
-		</activity>
-        <receiver android:name=".receivers.TransactionRecorder"
-            android:label="Records transactions received through intents"
-            android:permission="org.gnucash.android.permission.RECORD_TRANSACTION">
-            <intent-filter>
-                <action android:name="android.intent.action.INSERT" />
-                <category android:name="android.intent.category.DEFAULT" />
-                <data android:mimeType="vnd.android.cursor.item/vnd.org.gnucash.android.transaction"/>
-            </intent-filter>
-        </receiver>
-        <receiver android:name=".receivers.AccountCreator"
-            android:label="Creates new accounts"
-            android:permission="org.gnucash.android.permission.CREATE_ACCOUNT" 
-            android:enabled="true" android:exported="true">
-            <intent-filter>
-                <action android:name="android.intent.action.INSERT" />
-                <category android:name="android.intent.category.DEFAULT" />
-                <data android:mimeType="vnd.android.cursor.item/vnd.org.gnucash.android.account"/>
-            </intent-filter>
-        </receiver>
-        <receiver android:name=".receivers.TransactionAppWidgetProvider" >
-		    <intent-filter>
-		        <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
-		    </intent-filter>
-		    <meta-data android:name="android.appwidget.provider"
-		               android:resource="@xml/transaction_appwidget_info" />
-		</receiver>
-        
-    </application>
-
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Written By: Ngewi Fet <ngewif@gmail.com>
+ Copyright (c) 2012 Ngewi Fet
+ 
+ This file is part of Gnucash for Android
+ 
+ Gnucash for Android is free software; you can redistribute it and/or
+ modify it under the terms of the GNU General Public License as
+ published by the Free Software Foundation; either version 2 of
+ the License, or (at your option) any later version.
+ 
+ This program is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with this program; if not, contact:
+ 
+ Free Software Foundation           Voice:  +1-617-542-5942
+ 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ Boston, MA  02110-1301,  USA       gnu@gnu.org
+-->
+
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="org.gnucash.android"
+    android:versionCode="1"
+    android:versionName="1.0" >
+
+    <uses-sdk android:minSdkVersion="8" android:targetSdkVersion="15"/>
+    
+    <permission-group 
+        android:name="org.gnucash.android.permission.group.GNUCASH"
+        android:label="@string/label_permission_group" 
+        android:description="@string/description_permission_group" />
+    
+    <permission android:name="org.gnucash.android.permission.CREATE_ACCOUNT" 
+        android:label="@string/label_permission_create_account"
+        android:permissionGroup="org.gnucash.android.permission.group.GNUCASH"
+        android:protectionLevel="dangerous" />
+    <permission android:name="org.gnucash.android.permission.RECORD_TRANSACTION" 
+        android:label="@string/label_permission_record_transaction"
+        android:permissionGroup="org.gnucash.android.permission.group.GNUCASH"
+        android:protectionLevel="dangerous" />
+    
+    <uses-permission android:label="@string/label_permission_record_transactions"
+        android:name="org.gnucash.android.permission.RECORD_TRANSACTION" />
+    <uses-permission android:label="@string/label_permission_create_accounts"
+        android:name="org.gnucash.android.permission.CREATE_ACCOUNT" />
+    <uses-permission android:label="@string/permission_access_sdcard"
+        android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+	    
+    <application
+        android:icon="@drawable/ic_launcher"
+        android:label="@string/app_name" 
+        android:theme="@style/Theme.Sherlock.Light">
+        <activity
+            android:name=".ui.accounts.AccountsActivity"
+            android:label="@string/app_name" 
+            android:launchMode="singleTop">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+				<category android:name="android.intent.category.HOME"/>
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity android:name=".ui.settings.SettingsActivity"></activity>
+        <activity android:name=".ui.transactions.TransactionsActivity" 
+            android:launchMode="singleTop"></activity>
+        <activity android:name=".ui.widget.WidgetConfigurationActivity"
+            android:label="@string/label_widget_configuration"
+            android:theme="@style/Theme.Sherlock.Light.Dialog"
+            android:excludeFromRecents="true">
+		    <intent-filter>
+		        <action android:name="android.appwidget.action.APPWIDGET_CONFIGURE"/>
+		    </intent-filter>
+		</activity>
+        <receiver android:name=".receivers.TransactionRecorder"
+            android:label="Records transactions received through intents"
+            android:permission="org.gnucash.android.permission.RECORD_TRANSACTION">
+            <intent-filter>
+                <action android:name="android.intent.action.INSERT" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data android:mimeType="vnd.android.cursor.item/vnd.org.gnucash.android.transaction"/>
+            </intent-filter>
+        </receiver>
+        <receiver android:name=".receivers.AccountCreator"
+            android:label="Creates new accounts"
+            android:permission="org.gnucash.android.permission.CREATE_ACCOUNT" 
+            android:enabled="true" android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.INSERT" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data android:mimeType="vnd.android.cursor.item/vnd.org.gnucash.android.account"/>
+            </intent-filter>
+        </receiver>
+        <receiver android:name=".receivers.TransactionAppWidgetProvider" >
+		    <intent-filter>
+		        <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
+		    </intent-filter>
+		    <meta-data android:name="android.appwidget.provider"
+		               android:resource="@xml/transaction_appwidget_info" />
+		</receiver>
+        
+    </application>
+
 </manifest>
\ No newline at end of file
diff --git a/GnucashMobile/res/values/strings.xml b/GnucashMobile/res/values/strings.xml
index 57f1c6cc..6301bf35 100644
--- a/GnucashMobile/res/values/strings.xml
+++ b/GnucashMobile/res/values/strings.xml
@@ -462,6 +462,7 @@
 	<string name="title_license">License</string>
 	<string name="summary_licence_details">Details to the application license</string>
 	<string name="key_license">app_license</string>
+	<string name="label_widget_configuration">Select Account</string>
 	
   	
 </resources>
\ No newline at end of file
diff --git a/GnucashMobile/src/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java b/GnucashMobile/src/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java
index 34e6019f..232f9f9c 100644
--- a/GnucashMobile/src/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java
+++ b/GnucashMobile/src/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java
@@ -1,195 +1,204 @@
-/*
- * Written By: Ngewi Fet <ngewif@gmail.com>
- * Copyright (c) 2012 Ngewi Fet
- *
- * This file is part of Gnucash for Android
- * 
- * Gnucash for Android is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of
- * the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, contact:
- *
- * Free Software Foundation           Voice:  +1-617-542-5942
- * 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
- * Boston, MA  02110-1301,  USA       gnu@gnu.org
- */
-
-package org.gnucash.android.ui.widget;
-
-import java.util.Locale;
-
-import org.gnucash.android.R;
-import org.gnucash.android.data.Account;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.DatabaseHelper;
-import org.gnucash.android.receivers.TransactionAppWidgetProvider;
-import org.gnucash.android.ui.transactions.TransactionsActivity;
-import org.gnucash.android.ui.transactions.TransactionsListFragment;
-
-import android.app.Activity;
-import android.app.PendingIntent;
-import android.appwidget.AppWidgetManager;
-import android.content.ComponentName;
-import android.content.Context;
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.content.SharedPreferences.Editor;
-import android.database.Cursor;
-import android.os.Bundle;
-import android.preference.PreferenceManager;
-import android.support.v4.widget.SimpleCursorAdapter;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-import android.widget.RemoteViews;
-import android.widget.Spinner;
-import android.widget.Toast;
-
-public class WidgetConfigurationActivity extends Activity {
-	private AccountsDbAdapter mAccountsDbAdapter;
-	private SimpleCursorAdapter mCursorAdapter;
-	private int mAppWidgetId;
-	
-	private Spinner mAccountsSpinner;
-	private Button mOkButton;
-	private Button mCancelButton;
-	
-	@Override
-	public void onCreate(Bundle savedInstanceState) {		
-		super.onCreate(savedInstanceState);
-		setContentView(R.layout.widget_configuration);
-		setResult(RESULT_CANCELED);
-		
-		mAccountsSpinner = (Spinner) findViewById(R.id.input_accounts_spinner);
-		mOkButton = (Button) findViewById(R.id.btn_save);
-		mCancelButton = (Button) findViewById(R.id.btn_cancel);
-		
-		String[] from = new String[] {DatabaseHelper.KEY_NAME};
-		int[] to = new int[] {android.R.id.text1};
-		mAccountsDbAdapter = new AccountsDbAdapter(this);
-		Cursor cursor = mAccountsDbAdapter.fetchAllAccounts();
-		
-		if (cursor.getCount() <= 0){
-			Toast.makeText(this, R.string.error_no_accounts, Toast.LENGTH_LONG).show();
-			finish();
-		}
-			
-		mCursorAdapter = new SimpleCursorAdapter(this, 
-				android.R.layout.simple_spinner_item, 
-				cursor,
-				from,
-				to, 
-				0);
-		mCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-		mAccountsSpinner.setAdapter(mCursorAdapter);
-		
-		bindListeners();
-	}
-
-	private void bindListeners() {
-		mOkButton.setOnClickListener(new View.OnClickListener() {
-			
-			@Override
-			public void onClick(View v) {
-				Intent intent = getIntent();
-				Bundle extras = intent.getExtras();
-				if (extras != null) {
-				    mAppWidgetId = extras.getInt(
-				            AppWidgetManager.EXTRA_APPWIDGET_ID, 
-				            AppWidgetManager.INVALID_APPWIDGET_ID);
-				}
-				
-				if (mAppWidgetId == AppWidgetManager.INVALID_APPWIDGET_ID)
-					return;
-				
-				SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(WidgetConfigurationActivity.this);
-				Editor editor = prefs.edit();
-				editor.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID + mAppWidgetId, 
-						mAccountsSpinner.getSelectedItemId());	
-				
-				editor.commit();	
-				
-				updateWidget(WidgetConfigurationActivity.this, mAppWidgetId, mAccountsSpinner.getSelectedItemId());
-						
-				Intent resultValue = new Intent();
-				resultValue.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, mAppWidgetId);
-				setResult(RESULT_OK, resultValue);
-				finish();		
-			}
-		});
-		
-		mCancelButton.setOnClickListener(new View.OnClickListener() {
-			
-			@Override
-			public void onClick(View v) {
-				finish();
-			}
-		});
-	}
-
-	/**
-	 * Updates the widget with id <code>appWidgetId</code> with information from the 
-	 * account with record ID <code>accountId</code>
-	 * @param appWidgetManager
-	 */
-	public static void updateWidget(Context context, int appWidgetId, long accountId) {
-		Log.i("WidgetConfigruation", "Updating widget: " + appWidgetId);
-		AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);
-		
-		AccountsDbAdapter accountsDbAdapter = new AccountsDbAdapter(context);
-		Account account = accountsDbAdapter.getAccount(accountId);
-		accountsDbAdapter.close();
-		
-		if (account == null)
-			return;
-		
-		RemoteViews views = new RemoteViews(context.getPackageName(),
-				R.layout.widget_4x1);
-		views.setTextViewText(R.id.account_name, account.getName());
-		views.setTextViewText(R.id.transactions_summary, 
-				account.getBalance().formattedString(Locale.getDefault()));
-		int color = account.getBalance().isNegative() ? R.color.debit_red : R.color.credit_green;
-		views.setTextColor(R.id.transactions_summary, context.getResources().getColor(color));
-		
-		Intent accountViewIntent = new Intent(context, TransactionsActivity.class);
-		accountViewIntent.setAction(Intent.ACTION_VIEW);
-		accountViewIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID, accountId);
-		PendingIntent accountPendingIntent = PendingIntent
-				.getActivity(context, 0, accountViewIntent, 0);
-		views.setOnClickPendingIntent(R.id.widget_layout, accountPendingIntent);
-		
-		Intent newTransactionIntent = new Intent(context, TransactionsActivity.class);
-		newTransactionIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
-		newTransactionIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID, accountId);		
-		PendingIntent pendingIntent = PendingIntent
-				.getActivity(context, 0, newTransactionIntent, 0);	            
-		views.setOnClickPendingIntent(R.id.btn_new_transaction, pendingIntent);
-		
-		appWidgetManager.updateAppWidget(appWidgetId, views);
-	}
-			
-	public static void updateAllWidgets(Context context){
-		Log.i("WidgetConfigruation", "Updating all widgets");
-		AppWidgetManager widgetManager = AppWidgetManager.getInstance(context);
-		ComponentName componentName = new ComponentName(context, TransactionAppWidgetProvider.class);
-		int[] appWidgetIds = widgetManager.getAppWidgetIds(componentName);
-		
-		for (int widgetId : appWidgetIds) {
-			long accId = PreferenceManager
-            		.getDefaultSharedPreferences(context)
-            		.getLong(TransactionsListFragment.SELECTED_ACCOUNT_ID + widgetId, -1);
-            
-			if (accId < 0)
-				continue;
-			updateWidget(context, widgetId, accId);
-		}
-	}
-}
+/*
+ * Written By: Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2012 Ngewi Fet
+ *
+ * This file is part of Gnucash for Android
+ * 
+ * Gnucash for Android is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, contact:
+ *
+ * Free Software Foundation           Voice:  +1-617-542-5942
+ * 51 Franklin Street, Fifth Floor    Fax:    +1-617-542-2652
+ * Boston, MA  02110-1301,  USA       gnu@gnu.org
+ */
+
+package org.gnucash.android.ui.widget;
+
+import java.util.Locale;
+
+import org.gnucash.android.R;
+import org.gnucash.android.data.Account;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.receivers.TransactionAppWidgetProvider;
+import org.gnucash.android.ui.transactions.TransactionsActivity;
+import org.gnucash.android.ui.transactions.TransactionsListFragment;
+
+import android.app.Activity;
+import android.app.PendingIntent;
+import android.appwidget.AppWidgetManager;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.content.SharedPreferences.Editor;
+import android.database.Cursor;
+import android.os.Bundle;
+import android.preference.PreferenceManager;
+import android.support.v4.widget.SimpleCursorAdapter;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.RemoteViews;
+import android.widget.Spinner;
+import android.widget.Toast;
+
+public class WidgetConfigurationActivity extends Activity {
+	private AccountsDbAdapter mAccountsDbAdapter;
+	private SimpleCursorAdapter mCursorAdapter;
+	private int mAppWidgetId;
+	
+	private Spinner mAccountsSpinner;
+	private Button mOkButton;
+	private Button mCancelButton;
+	
+	@Override
+	public void onCreate(Bundle savedInstanceState) {		
+		super.onCreate(savedInstanceState);
+		setContentView(R.layout.widget_configuration);
+		setResult(RESULT_CANCELED);
+		
+		mAccountsSpinner = (Spinner) findViewById(R.id.input_accounts_spinner);
+		mOkButton 		= (Button) findViewById(R.id.btn_save);
+		mCancelButton 	= (Button) findViewById(R.id.btn_cancel);
+		
+		String[] from = new String[] {DatabaseHelper.KEY_NAME};
+		int[] to = new int[] {android.R.id.text1};
+		mAccountsDbAdapter = new AccountsDbAdapter(this);
+		Cursor cursor = mAccountsDbAdapter.fetchAllAccounts();
+		
+		if (cursor.getCount() <= 0){
+			Toast.makeText(this, R.string.error_no_accounts, Toast.LENGTH_LONG).show();
+			finish();
+		}
+			
+		mCursorAdapter = new SimpleCursorAdapter(this, 
+				android.R.layout.simple_spinner_item, 
+				cursor,
+				from,
+				to, 
+				0);
+		mCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+		mAccountsSpinner.setAdapter(mCursorAdapter);
+		
+		bindListeners();
+	}
+
+	@Override
+	protected void onDestroy() {		
+		super.onDestroy();
+		mAccountsDbAdapter.close();
+	}
+	
+	private void bindListeners() {
+		mOkButton.setOnClickListener(new View.OnClickListener() {
+			
+			@Override
+			public void onClick(View v) {
+				Intent intent = getIntent();
+				Bundle extras = intent.getExtras();
+				if (extras != null) {
+				    mAppWidgetId = extras.getInt(
+				            AppWidgetManager.EXTRA_APPWIDGET_ID, 
+				            AppWidgetManager.INVALID_APPWIDGET_ID);
+				}
+				
+				if (mAppWidgetId == AppWidgetManager.INVALID_APPWIDGET_ID){
+					finish();
+					return;
+				}					
+				
+				long accountId = mAccountsSpinner.getSelectedItemId();
+				SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(WidgetConfigurationActivity.this);
+				Editor editor = prefs.edit();
+				editor.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID + mAppWidgetId, accountId);					
+				editor.commit();	
+				
+				updateWidget(WidgetConfigurationActivity.this, mAppWidgetId, accountId);
+						
+				Intent resultValue = new Intent();
+				resultValue.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, mAppWidgetId);
+				setResult(RESULT_OK, resultValue);
+				finish();		
+			}
+		});
+		
+		mCancelButton.setOnClickListener(new View.OnClickListener() {
+			
+			@Override
+			public void onClick(View v) {
+				finish();
+			}
+		});
+	}
+
+	/**
+	 * Updates the widget with id <code>appWidgetId</code> with information from the 
+	 * account with record ID <code>accountId</code>
+	 * @param appWidgetManager
+	 */
+	public static void updateWidget(Context context, int appWidgetId, long accountId) {
+		Log.i("WidgetConfigruation", "Updating widget: " + appWidgetId);
+		AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);
+		
+		AccountsDbAdapter accountsDbAdapter = new AccountsDbAdapter(context);
+		Account account = accountsDbAdapter.getAccount(accountId);
+		accountsDbAdapter.close();
+		
+		if (account == null)
+			return;
+		
+		RemoteViews views = new RemoteViews(context.getPackageName(),
+				R.layout.widget_4x1);
+		views.setTextViewText(R.id.account_name, account.getName());
+		views.setTextViewText(R.id.transactions_summary, 
+				account.getBalance().formattedString(Locale.getDefault()));
+		int color = account.getBalance().isNegative() ? R.color.debit_red : R.color.credit_green;
+		views.setTextColor(R.id.transactions_summary, context.getResources().getColor(color));
+		
+		Intent accountViewIntent = new Intent(context, TransactionsActivity.class);
+		accountViewIntent.setAction(Intent.ACTION_VIEW);
+		accountViewIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_CLEAR_TASK);
+		accountViewIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID, accountId);
+		PendingIntent accountPendingIntent = PendingIntent
+				.getActivity(context, appWidgetId, accountViewIntent, 0);
+		views.setOnClickPendingIntent(R.id.widget_layout, accountPendingIntent);
+		
+		Intent newTransactionIntent = new Intent(context, TransactionsActivity.class);
+		newTransactionIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
+		newTransactionIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_CLEAR_TASK);
+		newTransactionIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID, accountId);		
+		PendingIntent pendingIntent = PendingIntent
+				.getActivity(context, appWidgetId, newTransactionIntent, 0);	            
+		views.setOnClickPendingIntent(R.id.btn_new_transaction, pendingIntent);
+		
+		appWidgetManager.updateAppWidget(appWidgetId, views);
+	}
+			
+	public static void updateAllWidgets(Context context){
+		Log.i("WidgetConfigruation", "Updating all widgets");
+		AppWidgetManager widgetManager = AppWidgetManager.getInstance(context);
+		ComponentName componentName = new ComponentName(context, TransactionAppWidgetProvider.class);
+		int[] appWidgetIds = widgetManager.getAppWidgetIds(componentName);
+		
+		for (int widgetId : appWidgetIds) {
+			long accountId = PreferenceManager
+            		.getDefaultSharedPreferences(context)
+            		.getLong(TransactionsListFragment.SELECTED_ACCOUNT_ID + widgetId, -1);
+            
+			if (accountId < 0)
+				continue;
+			updateWidget(context, widgetId, accountId);
+		}
+	}
+}
