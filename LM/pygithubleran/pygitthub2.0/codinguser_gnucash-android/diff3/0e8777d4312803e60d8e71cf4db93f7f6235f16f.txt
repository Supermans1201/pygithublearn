From 0e8777d4312803e60d8e71cf4db93f7f6235f16f Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 13 Feb 2015 17:32:29 +0100
Subject: [PATCH] Fixed parsing of recurrence events into ScheduledEvents

Updated strings.xml and deleted pom files (which were restored after a rebase with develop)
Updated README to explain new build system

TODO: Create service for running the events
---
 README.md                                          |  36 +++----
 app/pom.xml                                        |  83 ---------------
 .../org/gnucash/android/model/ScheduledEvent.java  |   8 +-
 .../ui/transaction/TransactionFormFragment.java    |   3 +-
 .../gnucash/android/ui/util/RecurrenceParser.java  | 107 ++++++++++++++------
 app/src/main/res/values/strings.xml                |   1 -
 integration-tests/pom.xml                          | 111 ---------------------
 pom.xml                                            |  85 ----------------
 8 files changed, 101 insertions(+), 333 deletions(-)
 delete mode 100644 app/pom.xml
 delete mode 100644 integration-tests/pom.xml
 delete mode 100644 pom.xml

diff --git a/README.md b/README.md
index d87553ca..fc3da1af 100644
--- a/README.md
+++ b/README.md
@@ -22,9 +22,22 @@ There are different ways to get the Gnucash app for Android; through the app sto
 
 ### With Gradle
 
-Run `gradlew build installDebug` from the within the project folder.
+This project requires the [Android SDK](http://developer.android.com/sdk/index.html)
+to be installed in your development environment. In addition you'll need to set
+the `ANDROID_HOME` environment variable to the location of your SDK. For example:
+
+    export ANDROID_HOME=/home/<user>/tools/android-sdk
+
+After satisfying those requirements, the build is pretty simple:
+
+* Run `gradlew build installDebug` from the within the project folder.
 It will build the project for you and install it to the connected Android device or running emulator.
 
+You might find that your device doesn't let you install your build if you
+already have the version from the Android Market installed.  This is standard
+Android security as it it won't let you directly replace an app that's been
+signed with a different key.  Manually uninstall GnuCash from your device and
+you will then be able to install your own built version.
 
 ### With Android Studio
 The easiest way to build is to install [Android Studio](https://developer.android.com/sdk/index.html) v1.+
@@ -38,27 +51,6 @@ Once installed, then you can import the project into Android Studio:
 
 Then, Gradle will do everything for you.
 
-### With Maven
-The build requires [Maven](http://maven.apache.org/download.html)
-v3.1.1+ and the [Android SDK](http://developer.android.com/sdk/index.html)
-to be installed in your development environment. In addition you'll need to set
-the `ANDROID_HOME` environment variable to the location of your SDK:
-
-    export ANDROID_HOME=/home/<user>/tools/android-sdk
-
-After satisfying those requirements, the build is pretty simple:
-
-* Run `mvn clean package` from the `app` directory to build the APK only
-* Run `mvn clean install` from the root directory to build the app and also run
-  the integration tests, this requires a connected Android device or running
-  emulator. (see this [blog post](http://goo.gl/TprMw) for details)
-
-You might find that your device doesn't let you install your build if you
-already have the version from the Android Market installed.  This is standard
-Android security as it it won't let you directly replace an app that's been
-signed with a different key.  Manually uninstall GnuCash from your device and
-you will then be able to install your own built version.
-
 ## Contributing
 
 There are several ways you could contribute to the development.
diff --git a/app/pom.xml b/app/pom.xml
deleted file mode 100644
index 2c6885dd..00000000
--- a/app/pom.xml
+++ /dev/null
@@ -1,83 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
- Copyright (c) 2012 - 2013 Ngewi Fet <ngewif@gmail.com>
- 
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
- 
-    http://www.apache.org/licenses/LICENSE-2.0
- 
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <artifactId>gnucash-android</artifactId>
-    <packaging>apk</packaging>
-    <name>Gnucash for Android - App</name>
-    <description>Gnucash Android companion application</description>
-
-    <parent>
-        <version>1.5.4-SNAPSHOT</version>
-        <groupId>org.gnucash.android</groupId>
-        <artifactId>gnucash-android-parent</artifactId>
-    </parent>
-
-    <properties>
-        <abs.version>4.4.0</abs.version>
-        <viewpagerindicator.version>2.4.1</viewpagerindicator.version>
-        <betterpickers.version>1.5.2</betterpickers.version>
-    </properties>
-
-    <dependencies>
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>android</artifactId>
-            <scope>provided</scope>
-            <version>${android.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>com.actionbarsherlock</groupId>
-            <artifactId>actionbarsherlock</artifactId>
-            <version>${abs.version}</version>
-            <type>apklib</type>
-            <exclusions>
-                <exclusion>
-                    <groupId>com.google.android</groupId>
-                    <artifactId>support-v4</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>com.viewpagerindicator</groupId>
-            <artifactId>library</artifactId>
-            <version>${viewpagerindicator.version}</version>
-            <type>apklib</type>
-            <exclusions>
-                <exclusion>
-                    <groupId>com.google.android</groupId>
-                    <artifactId>support-v4</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>com.doomonafireball.betterpickers</groupId>
-            <artifactId>library</artifactId>
-            <version>${betterpickers.version}</version>
-            <type>aar</type>
-        </dependency>
-    </dependencies>
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>com.simpligility.maven.plugins</groupId>
-                <artifactId>android-maven-plugin</artifactId>
-            </plugin>
-        </plugins>
-    </build>
-
-</project>
\ No newline at end of file
diff --git a/app/src/main/java/org/gnucash/android/model/ScheduledEvent.java b/app/src/main/java/org/gnucash/android/model/ScheduledEvent.java
index ef2950e1..54a034fe 100644
--- a/app/src/main/java/org/gnucash/android/model/ScheduledEvent.java
+++ b/app/src/main/java/org/gnucash/android/model/ScheduledEvent.java
@@ -62,6 +62,7 @@
     public ScheduledEvent(EventType eventType){
         mUID = UUID.randomUUID().toString().replaceAll("-", "");
         mEventType = eventType;
+        mStartDate = System.currentTimeMillis();
     }
 
     public String getUID(){
@@ -123,7 +124,12 @@ public void setEndTime(long endDate) {
     @Override
     public String toString() {
         SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy");
-        return mEventType.name() + " recurring every " + mPeriod/ RecurrenceParser.DAY_MILLIS + " days starting on "
+        String eventString = mEventType.name() + " recurring every " + mPeriod/ RecurrenceParser.DAY_MILLIS + " days starting on "
                 + dateFormat.format(new Date(mStartDate));
+        if (mEndDate > 0){
+            eventString += " until " + dateFormat.format(mEndDate);
+        }
+
+        return eventString;
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 06101fce..579a2dcb 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -709,11 +709,10 @@ private void scheduleRecurringTransaction() {
         ScheduledEventDbAdapter scheduledEventDbAdapter = GnuCashApplication.getScheduledEventDbAdapter();
         Toast.makeText(getActivity(), "Found " + events.size() + " events", Toast.LENGTH_LONG).show();
         for (ScheduledEvent event : events) {
-            scheduledEventDbAdapter.addScheduledEvent(event);
             event.setEventUID(recurringTransaction.getUID());
             scheduledEventDbAdapter.addScheduledEvent(event);
 
-            Log.d("TransactionFormFragment", event.toString());
+            Log.i("TransactionFormFragment", event.toString());
         }
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
index 8c57a6f8..e9b356d2 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/RecurrenceParser.java
@@ -35,7 +35,7 @@
     public static final long MINUTE_MILLIS  = 60*SECOND_MILLIS;
     public static final long DAY_MILLIS     = 24*60*MINUTE_MILLIS;
     public static final long WEEK_MILLIS    = 7*DAY_MILLIS;
-    public static final long MONTH_MILLIS   = 4*WEEK_MILLIS;
+    public static final long MONTH_MILLIS   = 30*DAY_MILLIS;
     public static final long YEAR_MILLIS    = 12*MONTH_MILLIS;
 
 
@@ -51,60 +51,62 @@
         long period = 0;
         List<ScheduledEvent> scheduledEventList = new ArrayList<ScheduledEvent>();
         switch(eventRecurrence.freq){
-            case EventRecurrence.DAILY:
-                period = DAY_MILLIS;
+            case EventRecurrence.DAILY: {
+                if (eventRecurrence.interval == 0) //I assume this is a bug from the picker library
+                    period = DAY_MILLIS;
+                else
+                    period = eventRecurrence.interval * DAY_MILLIS;
+
+                ScheduledEvent scheduledEvent = new ScheduledEvent(eventType);
+                scheduledEvent.setPeriod(period);
+                parseEndTime(eventRecurrence, scheduledEvent);
+                scheduledEventList.add(scheduledEvent);
+            }
                 break;
 
             case EventRecurrence.WEEKLY: {
-                period = WEEK_MILLIS;
+                if (eventRecurrence.interval == 0)
+                    period = WEEK_MILLIS;
+                else
+                    period = eventRecurrence.interval * WEEK_MILLIS;
                 for (int day : eventRecurrence.byday) {
                     ScheduledEvent scheduledEvent = new ScheduledEvent(eventType);
                     scheduledEvent.setPeriod(period);
 
-                    scheduledEvent.setStartTime(nextDayOfWeek(day).getTimeInMillis());
-                    if (eventRecurrence.until != null && eventRecurrence.until.length() > 0) {
-                        Time endTime = new Time();
-                        endTime.parse(eventRecurrence.until);
-                        scheduledEvent.setEndTime(endTime.toMillis(false));
-                    } else if (eventRecurrence.count > 0){
-                        scheduledEvent.setEndTime(scheduledEvent.getStartTime() + (scheduledEvent.getPeriod() * eventRecurrence.count));
-                    }
+                    scheduledEvent.setStartTime(nextDayOfWeek(day2CalendarDay(day)).getTimeInMillis());
+                    parseEndTime(eventRecurrence, scheduledEvent);
                     scheduledEventList.add(scheduledEvent);
                 }
             }
             break;
 
             case EventRecurrence.MONTHLY: {
+                if (eventRecurrence.interval == 0)
+                    period = MONTH_MILLIS;
+                else
+                    period = eventRecurrence.interval * MONTH_MILLIS;
                 ScheduledEvent event = new ScheduledEvent(eventType);
-                event.setPeriod(MONTH_MILLIS);
+                event.setPeriod(period);
                 Calendar now = Calendar.getInstance();
                 now.add(Calendar.MONTH, 1);
                 event.setStartTime(now.getTimeInMillis());
-                if (eventRecurrence.until != null && eventRecurrence.until.length() > 0) {
-                    Time endTime = new Time();
-                    endTime.parse(eventRecurrence.until);
-                    event.setEndTime(endTime.toMillis(false));
-                } else if (eventRecurrence.count > 0){
-                    event.setEndTime(event.getStartTime() + (event.getPeriod()*eventRecurrence.count));
-                }
+                parseEndTime(eventRecurrence, event);
 
                 scheduledEventList.add(event);
             }
                 break;
 
             case EventRecurrence.YEARLY: {
+                if (eventRecurrence.interval == 0)
+                    period = YEAR_MILLIS;
+                else
+                    period = eventRecurrence.interval * YEAR_MILLIS;
                 ScheduledEvent event = new ScheduledEvent(eventType);
-                event.setPeriod(YEAR_MILLIS);
+                event.setPeriod(period);
                 Calendar now = Calendar.getInstance();
                 now.add(Calendar.YEAR, 1);
                 event.setStartTime(now.getTimeInMillis());
-                if (eventRecurrence.until != null && eventRecurrence.until.length() > 0) {
-                    Time endTime = new Time();
-                    endTime.parse(eventRecurrence.until);
-                    event.setEndTime(endTime.toMillis(false));
-                } else if (eventRecurrence.count > 0){
-                    event.setEndTime(event.getStartTime() + (event.getPeriod()*eventRecurrence.count));
-                }
+                parseEndTime(eventRecurrence, event);
                 scheduledEventList.add(event);
             }
                 break;
@@ -112,6 +114,27 @@
         return scheduledEventList;
     }
 
+    /**
+     * Parses the end time from an EventRecurrence object and sets it to the <code>scheduledEvent</code>.
+     * The end time is specified in the dialog either by number of occurences or a date.
+     * @param eventRecurrence Event recurrence pattern obtained from dialog
+     * @param scheduledEvent ScheduledEvent to be to updated
+     */
+    private static void parseEndTime(EventRecurrence eventRecurrence, ScheduledEvent scheduledEvent) {
+        if (eventRecurrence.until != null && eventRecurrence.until.length() > 0) {
+            Time endTime = new Time();
+            endTime.parse(eventRecurrence.until);
+            scheduledEvent.setEndTime(endTime.toMillis(false));
+        } else if (eventRecurrence.count > 0){
+            scheduledEvent.setEndTime(scheduledEvent.getStartTime() + (scheduledEvent.getPeriod() * eventRecurrence.count));
+        }
+    }
+
+    /**
+     * Returns the date for the next day of the week
+     * @param dow Day of the week (Calendar constants)
+     * @return Calendar instance with the next day of the week
+     */
     private static Calendar nextDayOfWeek(int dow) {
         Calendar date = Calendar.getInstance();
         int diff = dow - date.get(Calendar.DAY_OF_WEEK);
@@ -121,4 +144,32 @@ private static Calendar nextDayOfWeek(int dow) {
         date.add(Calendar.DAY_OF_MONTH, diff);
         return date;
     }
+
+    /**
+     * Converts one of the SU, MO, etc. constants to the Calendar.SUNDAY
+     * constants.  btw, I think we should switch to those here too, to
+     * get rid of this function, if possible.
+     */
+    public static int day2CalendarDay(int day)
+    {
+        switch (day)
+        {
+            case EventRecurrence.SU:
+                return Calendar.SUNDAY;
+            case EventRecurrence.MO:
+                return Calendar.MONDAY;
+            case EventRecurrence.TU:
+                return Calendar.TUESDAY;
+            case EventRecurrence.WE:
+                return Calendar.WEDNESDAY;
+            case EventRecurrence.TH:
+                return Calendar.THURSDAY;
+            case EventRecurrence.FR:
+                return Calendar.FRIDAY;
+            case EventRecurrence.SA:
+                return Calendar.SATURDAY;
+            default:
+                throw new RuntimeException("bad day of week: " + day);
+        }
+    }
 }
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 5d6f0947..c5d60b16 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -17,7 +17,6 @@
 
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
     <string name="app_name">GnuCash</string>
-    <string name="app_version_name">1.5.4</string>
     <string name="title_add_account">Create Account</string>
     <string name="title_edit_account">Edit Account</string>
     <string name="info_details">Info</string>
diff --git a/integration-tests/pom.xml b/integration-tests/pom.xml
deleted file mode 100644
index 7ad84b2d..00000000
--- a/integration-tests/pom.xml
+++ /dev/null
@@ -1,111 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
- Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
- 
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
- 
-    http://www.apache.org/licenses/LICENSE-2.0
- 
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <parent>
-		<version>1.5.4-SNAPSHOT</version>
-		<groupId>org.gnucash.android</groupId>
-		<artifactId>gnucash-android-parent</artifactId>
-	</parent>
-    <artifactId>gnucash-android-integration-tests</artifactId>
-    <packaging>apk</packaging>
-    <name>Gnucash for Android - Integration Tests</name>
-	<description>Instrumentation tests for Gnucash for Android</description>
-	
-	<properties>
-		<robotium.version>5.2.1</robotium.version>
-        <spoon-client.version>1.1.2</spoon-client.version>
-        <fest-android.version>1.0.6</fest-android.version> <!-- TODO: Upgrade to AssertJ -->
-        <android.device>usb</android.device>
-	</properties>
-	
-    <dependencies>
-        <dependency>
-            <groupId>com.jayway.android.robotium</groupId>
-            <artifactId>robotium-solo</artifactId>
-			<version>${robotium.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>android</artifactId>
-            <scope>provided</scope>
-			<version>${android.version}</version>
-        </dependency>
-		
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>android-test</artifactId>
-            <scope>provided</scope>
-			<version>${android.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>com.squareup</groupId>
-            <artifactId>fest-android</artifactId>
-            <version>${fest-android.version}</version>
-        </dependency>
-        <dependency>
-            <!-- the target apk, which we will test. will automatically be deployed to device in pre-integration-test
-            phase. -->
-            <groupId>org.gnucash.android</groupId>
-            <artifactId>gnucash-android</artifactId>
-            <version>${project.version}</version>
-            <type>apk</type>       
-            <scope>provided</scope>     
-        </dependency>
-        
-		<dependency>
-            <!-- optional: compile time dependency, in this case so that we can read from the R.java for example. -->
-            <groupId>org.gnucash.android</groupId>
-            <artifactId>gnucash-android</artifactId>
-            <version>${project.version}</version>
-            <scope>provided</scope>
-            <type>jar</type>
-        </dependency>
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>support-v4</artifactId>
-            <version>r7</version>
-        </dependency>
-    </dependencies>
-    
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>com.simpligility.maven.plugins</groupId>
-                <artifactId>android-maven-plugin</artifactId>
-                <extensions>true</extensions>
-            </plugin>
-            <plugin>
-                <groupId>com.squareup.spoon</groupId>
-                <artifactId>spoon-maven-plugin</artifactId>
-                <version>${spoon-client.version}</version>
-                <configuration>
-                    <title>GnuCash Android Integration Tests</title>
-                    <debug>true</debug>
-                </configuration>
-                <executions>
-                    <execution>
-                        <phase>integration-test</phase>
-                        <goals>
-                            <goal>run</goal>
-                        </goals>
-                    </execution>
-                </executions>
-            </plugin>
-        </plugins>
-    </build>
-</project>
diff --git a/pom.xml b/pom.xml
deleted file mode 100644
index b32f2dbf..00000000
--- a/pom.xml
+++ /dev/null
@@ -1,85 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
- Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
- 
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
- 
-    http://www.apache.org/licenses/LICENSE-2.0
- 
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-	<version>1.5.4-SNAPSHOT</version>
-    <groupId>org.gnucash.android</groupId>
-    <artifactId>gnucash-android-parent</artifactId>
-    <name>GnuCash Android parent</name>
-	<description>Parent project of Gnucash for Android</description>
-    <packaging>pom</packaging>
-
-    <modules>
-        <module>app</module>
-        <module>integration-tests</module>
-    </modules>
-
-    <properties>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-        <android.version>4.1.1.4</android.version>
-        <android.maven.plugin.version>4.1.1</android.maven.plugin.version>
-    </properties>
-
-    <build>
-        <pluginManagement>
-            <plugins>
-                <plugin>
-                    <groupId>com.simpligility.maven.plugins</groupId>
-                    <artifactId>android-maven-plugin</artifactId>
-                    <version>${android.maven.plugin.version}</version>
-                    <extensions>true</extensions>
-                    <configuration>
-                        <sdk>
-                            <path>${env.ANDROID_HOME}</path>
-                            <platform>19</platform>
-                        </sdk>
-                        <undeployBeforeDeploy>true</undeployBeforeDeploy>
-                    </configuration>
-                </plugin>
-            </plugins>
-        </pluginManagement>
-    </build>
-
-    <issueManagement>
-        <url>https://github.com/codinguser/gnucash-android/issues</url>
-        <system>GitHub Issues</system>
-    </issueManagement>
-
-    <licenses>
-        <license>
-            <name>Apache License Version 2.0</name>
-            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
-            <distribution>repo</distribution>
-        </license>
-    </licenses>
-
-    <scm>
-        <url>https://github.com/codinguser/gnucash-android</url>
-        <connection>scm:git:git://github.com/codinguser/gnucash-android.git</connection>
-        <developerConnection>scm:git:git@github.com:codinguser/gnucash-android.git</developerConnection>
-    </scm>
-
-    <developers>
-        <developer>
-            <name>Ngewi Fet</name>
-            <email>ngewif@gmail.com</email>
-            <url>http://www.codinguser.com</url>
-            <id>codinguser</id>
-        </developer>
-    </developers>
-</project>
