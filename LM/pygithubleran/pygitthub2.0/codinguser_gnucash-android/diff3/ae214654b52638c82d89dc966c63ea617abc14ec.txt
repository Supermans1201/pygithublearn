From f142f01c920c22cc01f31d5e08c298a6fa4e3fe0 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Fri, 1 Aug 2014 18:15:43 +0300
Subject: [PATCH 1/8] Added passcode settings

---
 app/res/values/strings.xml                         |  6 ++
 app/res/xml/fragment_passcode_preferences.xml      | 29 ++++++++
 app/res/xml/preference_headers.xml                 |  2 +
 app/src/org/gnucash/android/ui/UxArgument.java     | 10 +++
 .../ui/settings/PasscodePreferenceFragment.java    | 78 ++++++++++++++++++++++
 5 files changed, 125 insertions(+)
 create mode 100755 app/res/xml/fragment_passcode_preferences.xml
 create mode 100644 app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java

diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index 786e173b..41217efb 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -453,6 +453,12 @@
 	<string name="key_license">app_license</string>
 	<string name="label_widget_configuration">Select Account</string>
 	<string name="toast_no_transactions_to_export">There are no transactions available to export</string>
+    <string name="header_passcode_settings">Passcode</string>
+    <string name="title_passcode_preferences">Passcode Preferences</string>
+    <string name="key_enable_passcode">enable_passcode</string>
+    <string name="title_enable_passcode">Turn On/Off Passcode</string>
+    <string name="title_change_passcode">Change Passcode</string>
+    <string name="key_change_passcode">change_passcode</string>
 	<string name="key_about">about_gnucash</string>
 	<string name="title_about_gnucash">About GnuCash</string>
 	<string name="summary_about_gnucash">Gnucash is a mobile finance expense tracker application for Android.\n
diff --git a/app/res/xml/fragment_passcode_preferences.xml b/app/res/xml/fragment_passcode_preferences.xml
new file mode 100755
index 00000000..09484fe9
--- /dev/null
+++ b/app/res/xml/fragment_passcode_preferences.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2014 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android" >
+    <PreferenceCategory android:title="@string/title_passcode_preferences"/>
+    <CheckBoxPreference android:title="@string/title_enable_passcode"
+                        android:key="@string/key_enable_passcode" />
+    <EditTextPreference android:title="@string/title_change_passcode"
+                        android:key="@string/key_change_passcode"
+                        android:dependency="@string/key_enable_passcode"
+                        android:inputType="number"
+                        android:password="true"
+                        android:maxLength="4" />
+
+</PreferenceScreen>
\ No newline at end of file
diff --git a/app/res/xml/preference_headers.xml b/app/res/xml/preference_headers.xml
index 88cc6c0f..b8559671 100644
--- a/app/res/xml/preference_headers.xml
+++ b/app/res/xml/preference_headers.xml
@@ -21,6 +21,8 @@
             android:title="@string/header_account_settings" />
     <header android:fragment="org.gnucash.android.ui.settings.TransactionsPreferenceFragment" 
         android:title="@string/header_transaction_settings" />
+    <header android:fragment="org.gnucash.android.ui.settings.PasscodePreferenceFragment"
+        android:title="@string/header_passcode_settings" />
     <header android:fragment="org.gnucash.android.ui.settings.AboutPreferenceFragment"
         android:title="@string/header_about_gnucash" />
     <header android:title="Rate in Play Store">
diff --git a/app/src/org/gnucash/android/ui/UxArgument.java b/app/src/org/gnucash/android/ui/UxArgument.java
index 8d97baf3..abff1fa7 100644
--- a/app/src/org/gnucash/android/ui/UxArgument.java
+++ b/app/src/org/gnucash/android/ui/UxArgument.java
@@ -49,6 +49,16 @@
     public static final String PARENT_ACCOUNT_ID        = "parent_account_id";
 
     /**
+     * Key for checking whether the passcode is enabled or not.
+     */
+    public static final String ENABLED_PASSCODE         = "enabled_passcode";
+
+    /**
+     * Key for storing the passcode.
+     */
+    public static final String PASSCODE                 = "passcode";
+
+    /**
      * Amount passed as a string
      */
     public static final String AMOUNT_STRING = "starting_amount";
diff --git a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
new file mode 100644
index 00000000..ac6364f1
--- /dev/null
+++ b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
@@ -0,0 +1,78 @@
+/*
+ * Copyright (c) 2014 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.settings;
+
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.preference.Preference;
+import android.preference.Preference.OnPreferenceChangeListener;
+import android.preference.PreferenceFragment;
+import android.preference.PreferenceManager;
+
+import com.actionbarsherlock.app.ActionBar;
+import com.actionbarsherlock.app.SherlockPreferenceActivity;
+
+import org.gnucash.android.R;
+import org.gnucash.android.ui.UxArgument;
+
+/**
+ * Fragment for configuring passcode to the application
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ */
+public class PasscodePreferenceFragment extends PreferenceFragment {
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        addPreferencesFromResource(R.xml.fragment_passcode_preferences);
+
+        ActionBar actionBar = ((SherlockPreferenceActivity) getActivity()).getSupportActionBar();
+        actionBar.setHomeButtonEnabled(true);
+        actionBar.setDisplayHomeAsUpEnabled(true);
+        actionBar.setTitle(R.string.title_passcode_preferences);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+
+        final SharedPreferences.Editor editor = PreferenceManager
+                .getDefaultSharedPreferences(getActivity().getApplicationContext()).edit();
+
+        final String keyEnablePasscode = getString(R.string.key_enable_passcode);
+        findPreference(keyEnablePasscode)
+                .setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
+                    @Override
+                    public boolean onPreferenceChange(Preference preference, Object newValue) {
+                        editor.putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue);
+                        editor.commit();
+                        return true;
+                    }
+                });
+        findPreference(getString(R.string.key_change_passcode))
+                .setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
+                    @Override
+                    public boolean onPreferenceChange(Preference preference, Object newValue) {
+                        editor.putString(UxArgument.PASSCODE, newValue.toString());
+                        editor.commit();
+                        return true;
+                    }
+                });
+
+    }
+
+}

From d95acf960cbd4e4d46193c11e27f8be945c1d7a3 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 2 Aug 2014 21:25:24 +0300
Subject: [PATCH 2/8] Added passcode lock screen

---
 CONTRIBUTORS                                       |  1 +
 app/AndroidManifest.xml                            |  9 ++-
 app/res/layout/passcode_lockscreen.xml             | 37 +++++++++
 app/res/values/strings.xml                         |  3 +
 .../ui/passcode/PasscodeLockScreenActivity.java    | 93 ++++++++++++++++++++++
 5 files changed, 141 insertions(+), 2 deletions(-)
 create mode 100755 app/res/layout/passcode_lockscreen.xml
 create mode 100644 app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java

diff --git a/CONTRIBUTORS b/CONTRIBUTORS
index a33fd3cc..b99b8384 100644
--- a/CONTRIBUTORS
+++ b/CONTRIBUTORS
@@ -16,4 +16,5 @@ Nicolas Barranger <wicowyn@gmail.com>
 Sigurd Gartmann <sigurdga-github@sigurdga.no>
 Pedro Abel <pedroabel@gmail.com>
 windwarrior <lennartbuit@gmail.com>
+Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
 Lei Xiao Bao <lxbzmy@gmail.com>
\ No newline at end of file
diff --git a/app/AndroidManifest.xml b/app/AndroidManifest.xml
index 84a8fc42..78d468aa 100644
--- a/app/AndroidManifest.xml
+++ b/app/AndroidManifest.xml
@@ -48,13 +48,18 @@
         android:label="@string/app_name" 
         android:theme="@style/Theme.Sherlock.Light.DarkActionBar">
         <activity
-            android:name=".ui.account.AccountsActivity"
-            android:label="@string/app_name">
+            android:name=".ui.passcode.PasscodeLockScreenActivity"
+            android:noHistory="true"
+            android:windowSoftInputMode="stateAlwaysVisible">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+        <activity
+            android:name=".ui.account.AccountsActivity"
+            android:label="@string/app_name">
+        </activity>
         <activity android:name=".ui.settings.SettingsActivity"/>
         <activity android:name=".ui.transaction.TransactionsActivity"
             android:configChanges="orientation|screenSize">
diff --git a/app/res/layout/passcode_lockscreen.xml b/app/res/layout/passcode_lockscreen.xml
new file mode 100755
index 00000000..cf92b332
--- /dev/null
+++ b/app/res/layout/passcode_lockscreen.xml
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2014 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:gravity="center"
+    android:orientation="vertical" >
+
+    <TextView android:id="@+id/passcodeLabel"
+              android:layout_width="wrap_content"
+              android:layout_height="wrap_content"
+              android:text="@string/label_passcode" />
+
+    <EditText android:id="@+id/passcode"
+              android:layout_width="wrap_content"
+              android:layout_height="wrap_content"
+              android:hint=""
+              android:maxLength="4"
+              android:password="true"
+              android:inputType="number" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index 41217efb..c475d517 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -27,6 +27,9 @@
     <string name="label_account_name">Account name</string>
     <string name="btn_cancel">Cancel</string>
     <string name="btn_save">Save</string>
+    <string name="label_passcode">Enter Passcode</string>
+    <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
+    <string name="toast_enter_full_passcode">You didnt enter the full passcode</string>
     <string name="label_transaction_name">Description</string>
     <string name="label_transaction_amount">Amount</string>
     <string name="title_add_transaction">New transaction</string>
diff --git a/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java b/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
new file mode 100644
index 00000000..17fafdb6
--- /dev/null
+++ b/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
@@ -0,0 +1,93 @@
+/*
+ * Copyright (c) 2014 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.passcode;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.preference.PreferenceManager;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.util.Log;
+import android.view.KeyEvent;
+import android.view.View;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import org.gnucash.android.R;
+import org.gnucash.android.ui.UxArgument;
+import org.gnucash.android.ui.account.AccountsActivity;
+
+/**
+ * Activity for displaying and managing the passcode lock screen.
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ */
+public class PasscodeLockScreenActivity extends Activity {
+
+    private static final String TAG = "PasscodeLockScreenActivity";
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.passcode_lockscreen);
+
+        final SharedPreferences sharedPreferences = PreferenceManager
+                .getDefaultSharedPreferences(getApplicationContext());
+
+        if (!sharedPreferences.getBoolean(UxArgument.ENABLED_PASSCODE, false)) {
+            startActivity(new Intent(this, AccountsActivity.class));
+        }
+
+        final EditText passcodeEditText = (EditText) findViewById(R.id.passcode);
+        passcodeEditText.addTextChangedListener(new TextWatcher() {
+            @Override
+            public void afterTextChanged(Editable editable) {
+                String pass = editable.toString();
+                String passcode = sharedPreferences.getString(UxArgument.PASSCODE, "");
+                Log.d(TAG, passcode);
+                if (pass.length() == 4) {
+                    if (pass.equals(passcode)) {
+                        startActivity(new Intent(getApplicationContext(), AccountsActivity.class));
+                    } else {
+                        Toast.makeText(getApplicationContext(),
+                                R.string.toast_wrong_passcode, Toast.LENGTH_SHORT).show();
+                        passcodeEditText.getText().clear();
+                    }
+                }
+            }
+            @Override
+            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {}
+            @Override
+            public void onTextChanged(CharSequence s, int start, int before, int count) {}
+        });
+
+        passcodeEditText.setOnKeyListener(new View.OnKeyListener() {
+            @Override
+            public boolean onKey(View v, int keyCode, KeyEvent event) {
+                if ((event.getAction() == KeyEvent.ACTION_DOWN)
+                        && (keyCode == KeyEvent.KEYCODE_ENTER)) {
+                    Toast.makeText(getApplicationContext(),
+                            R.string.toast_enter_full_passcode, Toast.LENGTH_LONG).show();
+                }
+                return false;
+            }
+        });
+
+    }
+
+}

From 177e8cb3f0567b61908a91d3bf1b918c9837ab60 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 5 Aug 2014 21:13:30 +0300
Subject: [PATCH 3/8] Added soft numeric keyboard

---
 app/res/drawable-mdpi/clear_btn.png                | Bin 0 -> 1650 bytes
 app/res/layout/fragment_numeric_keyboard.xml       | 227 +++++++++++++++++++++
 .../android/ui/passcode/KeyboardFragment.java      | 188 +++++++++++++++++
 3 files changed, 415 insertions(+)
 create mode 100644 app/res/drawable-mdpi/clear_btn.png
 create mode 100644 app/res/layout/fragment_numeric_keyboard.xml
 create mode 100644 app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java

diff --git a/app/res/drawable-mdpi/clear_btn.png b/app/res/drawable-mdpi/clear_btn.png
new file mode 100644
index 0000000000000000000000000000000000000000..bc3b9850767f7639000c4b33320a0ba96af90a9d
GIT binary patch
literal 1650
zcmV-&295cNP)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00004XF*Lt006O%
z3;baP00006VoOIv0RI600RN!9r;`8x010qNS#tmYE+YT{E+YYWr9XB6000McNliru
z-2ws(CJ<%LRGt6;1@B2jK~!ko?U`$cRaF$ne|H=mZInPo=0lCrQxS^nfkQgp%&064
z0*Nw6D@+J9^Enpyhdwms3o<3jC@@eXlA_XJl&h0u)QD**MrkMxD&qv%q&cIvFYCZ+
zcg{WMIx2mb1p{}^*=Mc)T6?|r+R#Hi^#349S7dD(<t_(k4@lAwU??yc=x2}50jGgu
zl3GiBf7KL_<N*u=W&)E8coonasIcW1fllB&@H?;tcvsR-A+M{cKwn@aumTw8UKLC5
z4d1l@bAT2}e_c@p{B}#K0~*ZY9$XflaqG4Ljgp$mb*tPZfL{bG0s1BYY6qHu13;U-
z9|#Nw#sD=5-*p0OB+V(ut#Vm?T~cpgJ@7;z{DS%Q$G|E{Kd11k1!e(H1A~CdfZujt
zvZRhIO5`%8yWYS?;PF6M8?X#mC#k*67^()Q1M`8}7$qK)^k<q96&c-Uy@B_NHvuCg
zy&<W++&W+uehat_*bo?VJn+S3i2?KZ*8>Z^FX`Ft=J6o5mH{uDQKM|NR?>^5cvPea
zsI!3m7kJ?LIN(_oNhpBxf#pHAnjvXo**jp2`vM<Xs*EhsB<X<|>s=3=lypALXI)Yl
zA?aXDQTzaS#>w0TJP35e@y(SGa3}D+d({Sv0NUJ|D64!290%&N1fHZRW}JDzieUW!
zU=MJUQ{rJsTjThaa-kJ&D=z@cB(()f)>^O)0qy`cOX?pd$XR%rWi%{<%?;L_0UE6?
zM6^1|MUz};7;wZXa2mMPr%D6=tt(6s?Xle>*r~|!8-qYC0xKoWbG$1}{&kLTy`<)n
zLF_b~8T2k6$E3>2m>nzvqa?LNJK+?G+$QIeLPUK67w!Vq1{Hf|Y8G+;Ck5+P#RTqQ
zU^H+rP__t+irgu18=uXh-CrzeR!sY_Ch(H_I2Wpjai1a95=VgA!}h?r#1Y^T;FJR&
z37i0IlQb1r=VbXEXaJVRWFjQ}0qk?exyJgb)F2*e{d@$ZIVBw)0d99ncz3!7_|W;h
zkG++W8YLBDYC`mLhg)A|*isc3Y`srJ2QuXJ6AA7_;4;y(21#=>6hAM!w_!_FpkMI3
zEn~NO1b7r^O~`IVpbJ<O=Qat{7GUjHb~6`~F-o-tha+$aRlgNjEvcBX-%phtr@%Qo
z!$vf)3<aiH0W2nfsRcewDt0mCWnVOGsS2D9s^IX9E;I#r&+0>|zH34hoEenxvbzjh
zsshJsdJtK0Oa=v#id0uj4E?9rmFQ~g-8X*&N3+y{Ry!g_U}~&wNb7CliqtE>-D$-x
zRKotR0`77m&jN?CR^lzex>+%m*t<<qky<9{x0GVHBkY@uUI>)lZ7oKoW^N?#qhoLi
zxKUDvTQeH?CSk&`(&u^ms{wwn&NZA9?UXbw!0;<@gIn{Eq_48L5H>MuagPVt0o+@t
z1$aBgZ5m?0mnwEAfL8+yPg*A$tvMbCKCKSSao{R}`I4@6z&e51PKjblZxh!$odE8W
z)a=$&0}FhI8eu8tJb*P%p8@wfOKgzzR1Cn+fnOxOlriPj06T%{l6D2WmYM>Q%)OS4
z&SX}=37i0Y>2iAxSZ)V!52%-<3t4iz`=(ELhL*I@PGdz^yrxRpl*F%BDFq6J!r^>A
zKM<&MkL&XJe08BvXv*jF<nwuaN10Y#3xz_o?n1QIo-G7kbC`0#Cz6(QXRLzFD!02p
ztpFC-^k6{f=a(=Ssy4T2bX{-`*l%gNdy_e%$)-dUtVJ7r?2+`Gq{=Kqu5gWIo3EYE
z7hQ%MpT#ic40rq61fo93`<=i^JHxKAlT;~wRaT^CTdM36@Y@fJm(<qn;cmih%o<=u
z%v3p|eO6uL#_RP#dk{{!H+#3aEaUZrIp#!QF>r6jo0+srj=grlv8mj6>dqBYH82)<
z6S%pID<&`ZxD~0bHqa_N8B}uV)FEjraEqj|Hn*v_0vLD6*JUm7SztHtPShSG9O$p?
w4#Zi@eh(-4n)N7f$aj_9xuNW#9_k_Z2Nj`H7y<$RE&u=k07*qoM6N<$f}s-MzW@LL

literal 0
HcmV?d00001

diff --git a/app/res/layout/fragment_numeric_keyboard.xml b/app/res/layout/fragment_numeric_keyboard.xml
new file mode 100644
index 00000000..869a455b
--- /dev/null
+++ b/app/res/layout/fragment_numeric_keyboard.xml
@@ -0,0 +1,227 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!--
+ Copyright (c) 2014 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_alignParentBottom="true"
+                android:layout_centerHorizontal="true">
+
+    <LinearLayout
+        android:id="@+id/zero"
+        android:layout_width="match_parent"
+        android:layout_height="55dp"
+        android:layout_alignParentBottom="true"
+        android:orientation="horizontal"
+        android:weightSum="3" >
+
+        <Button
+            android:id="@+id/empty_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:text=""
+            android:textSize="25sp"
+            android:enabled="false" />
+
+        <Button
+            android:id="@+id/zero_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:text="0"
+            android:textSize="25sp"/>
+
+        <ImageButton
+            android:id="@+id/delete_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:src="@drawable/clear_btn" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/seven_to_nine"
+        android:layout_width="match_parent"
+        android:layout_height="55dp"
+        android:layout_above="@+id/zero"
+        android:orientation="horizontal"
+        android:weightSum="3" >
+
+        <Button
+            android:id="@+id/seven_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:text="7"
+            android:textSize="25sp" />
+
+        <Button
+            android:id="@+id/eight_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:text="8"
+            android:textSize="25sp" />
+
+        <Button
+            android:id="@+id/nine_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:text="9"
+            android:textSize="25sp" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/four_to_six"
+        android:layout_width="match_parent"
+        android:layout_height="55dp"
+        android:layout_above="@+id/seven_to_nine"
+        android:orientation="horizontal"
+        android:weightSum="3" >
+
+        <Button
+            android:id="@+id/four_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:text="4"
+            android:textSize="25sp" />
+
+        <Button
+            android:id="@+id/five_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:text="5"
+            android:textSize="25sp" />
+
+        <Button
+            android:id="@+id/six_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:text="6"
+            android:textSize="25sp" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/one_to_three"
+        android:layout_width="match_parent"
+        android:layout_height="55dp"
+        android:layout_above="@+id/four_to_six"
+        android:orientation="horizontal"
+        android:weightSum="3" >
+
+        <Button
+            android:id="@+id/one_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:text="1"
+            android:textSize="25sp" />
+
+        <Button
+            android:id="@+id/two_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:text="2"
+            android:textSize="25sp" />
+
+        <Button
+            android:id="@+id/three_btn"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:text="3"
+            android:textSize="25sp" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/pass_label"
+        android:layout_width="match_parent"
+        android:layout_height="100dp"
+        android:orientation="horizontal" >
+
+        <TextView
+            android:id="@+id/passcode_label"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:gravity="center"
+            android:text="Enter passcode"
+            android:textSize="25sp" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="70dp"
+        android:layout_below="@+id/pass_label"
+        android:orientation="horizontal"
+        android:gravity="center" >
+
+        <EditText
+            android:id="@+id/passcode1"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:cursorVisible="false"
+            android:focusableInTouchMode="false"
+            android:hint="*"
+            android:inputType="numberPassword"
+            android:maxLength="1"
+            android:textSize="33sp" />
+
+        <EditText
+            android:id="@+id/passcode2"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:cursorVisible="false"
+            android:focusableInTouchMode="false"
+            android:hint="*"
+            android:inputType="numberPassword"
+            android:maxLength="1"
+            android:textSize="33sp" />
+
+        <EditText
+            android:id="@+id/passcode3"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:cursorVisible="false"
+            android:focusableInTouchMode="false"
+            android:hint="*"
+            android:inputType="numberPassword"
+            android:maxLength="1"
+            android:textSize="33sp" />
+
+        <EditText
+            android:id="@+id/passcode4"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:cursorVisible="false"
+            android:focusableInTouchMode="false"
+            android:hint="*"
+            android:inputType="numberPassword"
+            android:maxLength="1"
+            android:textSize="33sp" />
+
+    </LinearLayout>
+
+</RelativeLayout>
diff --git a/app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java b/app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java
new file mode 100644
index 00000000..94a46d9f
--- /dev/null
+++ b/app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java
@@ -0,0 +1,188 @@
+/*
+ * Copyright (c) 2014 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.passcode;
+
+import android.app.Activity;
+import android.app.Fragment;
+import android.os.Bundle;
+import android.os.Handler;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import org.gnucash.android.R;
+
+/**
+ * Soft numeric keyboard for lock screen and passcode preference.
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ */
+public class KeyboardFragment extends Fragment {
+
+    private TextView pass1;
+    private TextView pass2;
+    private TextView pass3;
+    private TextView pass4;
+
+    private int length = 0;
+
+    public interface OnPasscodeEnteredListener {
+        public void onPasscodeEntered(String pass);
+    }
+
+    private OnPasscodeEnteredListener listener;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+
+        View rootView = inflater.inflate(R.layout.fragment_numeric_keyboard, container, false);
+
+        pass1 = (TextView) rootView.findViewById(R.id.passcode1);
+        pass2 = (TextView) rootView.findViewById(R.id.passcode2);
+        pass3 = (TextView) rootView.findViewById(R.id.passcode3);
+        pass4 = (TextView) rootView.findViewById(R.id.passcode4);
+
+        rootView.findViewById(R.id.one_btn).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                add("1");
+            }
+        });
+        rootView.findViewById(R.id.two_btn).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                add("2");
+            }
+        });
+        rootView.findViewById(R.id.three_btn).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                add("3");
+            }
+        });
+        rootView.findViewById(R.id.four_btn).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                add("4");
+            }
+        });
+        rootView.findViewById(R.id.five_btn).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                add("5");
+            }
+        });
+        rootView.findViewById(R.id.six_btn).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                add("6");
+            }
+        });
+        rootView.findViewById(R.id.seven_btn).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                add("7");
+            }
+        });
+        rootView.findViewById(R.id.eight_btn).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                add("8");
+            }
+        });
+        rootView.findViewById(R.id.nine_btn).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                add("9");
+            }
+        });
+        rootView.findViewById(R.id.zero_btn).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                add("0");
+            }
+        });
+        rootView.findViewById(R.id.delete_btn).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                switch (length) {
+                    case 1:
+                        pass1.setText(null);
+                        length--;
+                        break;
+                    case 2:
+                        pass2.setText(null);
+                        length--;
+                        break;
+                    case 3:
+                        pass3.setText(null);
+                        length--;
+                        break;
+                    case 4:
+                        pass4.setText(null);
+                        length--;
+                }
+            }
+        });
+
+        return rootView;
+    }
+
+    @Override
+    public void onAttach(Activity activity) {
+        super.onAttach(activity);
+        try {
+            listener = (OnPasscodeEnteredListener) activity;
+        } catch (ClassCastException e) {
+            throw new ClassCastException(activity.toString() + " must implement "
+                    + KeyboardFragment.OnPasscodeEnteredListener.class);
+        }
+    }
+
+    private void add(String num) {
+        switch (length + 1) {
+            case 1:
+                pass1.setText(num);
+                length++;
+                break;
+            case 2:
+                pass2.setText(num);
+                length++;
+                break;
+            case 3:
+                pass3.setText(num);
+                length++;
+                break;
+            case 4:
+                pass4.setText(num);
+                length++;
+
+                new Handler().postDelayed(new Runnable() {
+                    public void run() {
+                        listener.onPasscodeEntered(pass1.getText().toString() + pass2.getText()
+                                + pass3.getText() + pass4.getText());
+                        pass1.setText(null);
+                        pass2.setText(null);
+                        pass3.setText(null);
+                        pass4.setText(null);
+                        length = 0;
+                    }
+                }, 500);
+        }
+    }
+
+}

From 00b53f881d97b7dc9fbb897844666ba20de3961e Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 6 Aug 2014 20:00:44 +0300
Subject: [PATCH 4/8] Enhanced passcode lock screen

---
 app/AndroidManifest.xml                            |  2 +-
 app/res/layout/passcode_lockscreen.xml             | 25 ++++------
 app/res/values/strings.xml                         |  1 -
 .../ui/passcode/PasscodeLockScreenActivity.java    | 53 ++++++----------------
 4 files changed, 24 insertions(+), 57 deletions(-)

diff --git a/app/AndroidManifest.xml b/app/AndroidManifest.xml
index 78d468aa..48ee130d 100644
--- a/app/AndroidManifest.xml
+++ b/app/AndroidManifest.xml
@@ -50,7 +50,7 @@
         <activity
             android:name=".ui.passcode.PasscodeLockScreenActivity"
             android:noHistory="true"
-            android:windowSoftInputMode="stateAlwaysVisible">
+            android:windowSoftInputMode="stateAlwaysHidden">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
diff --git a/app/res/layout/passcode_lockscreen.xml b/app/res/layout/passcode_lockscreen.xml
index cf92b332..738ab242 100755
--- a/app/res/layout/passcode_lockscreen.xml
+++ b/app/res/layout/passcode_lockscreen.xml
@@ -16,22 +16,15 @@
 -->
 
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:gravity="center"
-    android:orientation="vertical" >
+              xmlns:tools="http://schemas.android.com/tools"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent"
+              android:orientation="vertical" >
 
-    <TextView android:id="@+id/passcodeLabel"
-              android:layout_width="wrap_content"
-              android:layout_height="wrap_content"
-              android:text="@string/label_passcode" />
-
-    <EditText android:id="@+id/passcode"
-              android:layout_width="wrap_content"
-              android:layout_height="wrap_content"
-              android:hint=""
-              android:maxLength="4"
-              android:password="true"
-              android:inputType="number" />
+    <fragment android:id="@+id/listFragment"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent"
+              tools:layout="@layout/fragment_numeric_keyboard"
+              class="org.gnucash.android.ui.passcode.KeyboardFragment" />
 
 </LinearLayout>
\ No newline at end of file
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index c475d517..ebb863c8 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -29,7 +29,6 @@
     <string name="btn_save">Save</string>
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
-    <string name="toast_enter_full_passcode">You didnt enter the full passcode</string>
     <string name="label_transaction_name">Description</string>
     <string name="label_transaction_amount">Amount</string>
     <string name="title_add_transaction">New transaction</string>
diff --git a/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java b/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
index 17fafdb6..fe5e6787 100644
--- a/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
+++ b/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
@@ -37,57 +37,32 @@
  * Activity for displaying and managing the passcode lock screen.
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-public class PasscodeLockScreenActivity extends Activity {
+public class PasscodeLockScreenActivity extends Activity implements KeyboardFragment.OnPasscodeEnteredListener {
 
     private static final String TAG = "PasscodeLockScreenActivity";
+    private SharedPreferences sharedPreferences;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.passcode_lockscreen);
 
-        final SharedPreferences sharedPreferences = PreferenceManager
-                .getDefaultSharedPreferences(getApplicationContext());
-
+        sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
         if (!sharedPreferences.getBoolean(UxArgument.ENABLED_PASSCODE, false)) {
+            Log.i(TAG, "Passcode disabled");
             startActivity(new Intent(this, AccountsActivity.class));
         }
+    }
 
-        final EditText passcodeEditText = (EditText) findViewById(R.id.passcode);
-        passcodeEditText.addTextChangedListener(new TextWatcher() {
-            @Override
-            public void afterTextChanged(Editable editable) {
-                String pass = editable.toString();
-                String passcode = sharedPreferences.getString(UxArgument.PASSCODE, "");
-                Log.d(TAG, passcode);
-                if (pass.length() == 4) {
-                    if (pass.equals(passcode)) {
-                        startActivity(new Intent(getApplicationContext(), AccountsActivity.class));
-                    } else {
-                        Toast.makeText(getApplicationContext(),
-                                R.string.toast_wrong_passcode, Toast.LENGTH_SHORT).show();
-                        passcodeEditText.getText().clear();
-                    }
-                }
-            }
-            @Override
-            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {}
-            @Override
-            public void onTextChanged(CharSequence s, int start, int before, int count) {}
-        });
-
-        passcodeEditText.setOnKeyListener(new View.OnKeyListener() {
-            @Override
-            public boolean onKey(View v, int keyCode, KeyEvent event) {
-                if ((event.getAction() == KeyEvent.ACTION_DOWN)
-                        && (keyCode == KeyEvent.KEYCODE_ENTER)) {
-                    Toast.makeText(getApplicationContext(),
-                            R.string.toast_enter_full_passcode, Toast.LENGTH_LONG).show();
-                }
-                return false;
-            }
-        });
-
+    @Override
+    public void onPasscodeEntered(String pass) {
+        String passcode = sharedPreferences.getString(UxArgument.PASSCODE, "");
+        Log.d(TAG, "Passcode: " + passcode);
+        if (passcode.equals(pass)) {
+            startActivity(new Intent(this, AccountsActivity.class));
+        } else {
+            Toast.makeText(this, R.string.toast_wrong_passcode, Toast.LENGTH_SHORT).show();
+        }
     }
 
 }

From 3672036fa16ab77d370ea8e2144e409375e55cf0 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 6 Aug 2014 21:23:16 +0300
Subject: [PATCH 5/8] Closed #39. Implemented passcode lock screen feature

---
 app/AndroidManifest.xml                            |  1 +
 app/res/values/strings.xml                         |  3 ++
 app/res/xml/fragment_passcode_preferences.xml      |  9 ++--
 .../ui/passcode/PasscodePreferenceActivity.java    | 59 ++++++++++++++++++++++
 .../ui/settings/PasscodePreferenceFragment.java    | 33 +++++++++---
 5 files changed, 91 insertions(+), 14 deletions(-)
 create mode 100644 app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java

diff --git a/app/AndroidManifest.xml b/app/AndroidManifest.xml
index 48ee130d..61a7a671 100644
--- a/app/AndroidManifest.xml
+++ b/app/AndroidManifest.xml
@@ -61,6 +61,7 @@
             android:label="@string/app_name">
         </activity>
         <activity android:name=".ui.settings.SettingsActivity"/>
+        <activity android:name=".ui.passcode.PasscodePreferenceActivity" />
         <activity android:name=".ui.transaction.TransactionsActivity"
             android:configChanges="orientation|screenSize">
         </activity>
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index ebb863c8..dfb6b874 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -29,6 +29,9 @@
     <string name="btn_save">Save</string>
     <string name="label_passcode">Enter Passcode</string>
     <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
+    <string name="toast_passcode_set">Passcode set</string>
+    <string name="toast_confirm_passcode">Please confirm your passcode</string>
+    <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
     <string name="label_transaction_name">Description</string>
     <string name="label_transaction_amount">Amount</string>
     <string name="title_add_transaction">New transaction</string>
diff --git a/app/res/xml/fragment_passcode_preferences.xml b/app/res/xml/fragment_passcode_preferences.xml
index 09484fe9..027aa088 100755
--- a/app/res/xml/fragment_passcode_preferences.xml
+++ b/app/res/xml/fragment_passcode_preferences.xml
@@ -19,11 +19,8 @@
     <PreferenceCategory android:title="@string/title_passcode_preferences"/>
     <CheckBoxPreference android:title="@string/title_enable_passcode"
                         android:key="@string/key_enable_passcode" />
-    <EditTextPreference android:title="@string/title_change_passcode"
-                        android:key="@string/key_change_passcode"
-                        android:dependency="@string/key_enable_passcode"
-                        android:inputType="number"
-                        android:password="true"
-                        android:maxLength="4" />
+    <Preference android:key="@string/key_change_passcode"
+                android:title="@string/title_change_passcode"
+                android:dependency="@string/key_enable_passcode" />
 
 </PreferenceScreen>
\ No newline at end of file
diff --git a/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java b/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
new file mode 100644
index 00000000..6b290c12
--- /dev/null
+++ b/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright (c) 2014 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.passcode;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import org.gnucash.android.R;
+import org.gnucash.android.ui.UxArgument;
+
+/**
+ * Activity for entering and confirming passcode
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ */
+public class PasscodePreferenceActivity extends Activity implements KeyboardFragment.OnPasscodeEnteredListener {
+
+    private boolean reenter = false;
+    private String passcode;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.passcode_lockscreen);
+    }
+
+    @Override
+    public void onPasscodeEntered(String pass) {
+        if (reenter) {
+            if (passcode.equals(pass)) {
+                setResult(RESULT_OK, new Intent().putExtra(UxArgument.PASSCODE, pass));
+                finish();
+            } else {
+                Toast.makeText(this, R.string.toast_invalid_passcode_confirmation, Toast.LENGTH_LONG).show();
+            }
+        } else {
+            passcode = pass;
+            reenter = true;
+            ((TextView) findViewById(R.id.passcode_label)).setText(R.string.toast_confirm_passcode);
+            Toast.makeText(this, R.string.toast_confirm_passcode, Toast.LENGTH_SHORT).show();
+        }
+    }
+}
diff --git a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
index ac6364f1..4e334fe7 100644
--- a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
+++ b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
@@ -16,18 +16,22 @@
 
 package org.gnucash.android.ui.settings;
 
+import android.app.Activity;
+import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.preference.Preference;
 import android.preference.Preference.OnPreferenceChangeListener;
 import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
+import android.widget.Toast;
 
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.app.SherlockPreferenceActivity;
 
 import org.gnucash.android.R;
 import org.gnucash.android.ui.UxArgument;
+import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
 
 /**
  * Fragment for configuring passcode to the application
@@ -35,6 +39,10 @@
  */
 public class PasscodePreferenceFragment extends PreferenceFragment {
 
+    private static final int REQUEST_CODE = 1;
+
+    private SharedPreferences.Editor editor;
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -50,11 +58,10 @@ public void onCreate(Bundle savedInstanceState) {
     public void onResume() {
         super.onResume();
 
-        final SharedPreferences.Editor editor = PreferenceManager
-                .getDefaultSharedPreferences(getActivity().getApplicationContext()).edit();
+        editor = PreferenceManager.getDefaultSharedPreferences(getActivity().getApplicationContext()).edit();
+
 
-        final String keyEnablePasscode = getString(R.string.key_enable_passcode);
-        findPreference(keyEnablePasscode)
+        findPreference(getString(R.string.key_enable_passcode))
                 .setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
                     @Override
                     public boolean onPreferenceChange(Preference preference, Object newValue) {
@@ -64,15 +71,25 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                     }
                 });
         findPreference(getString(R.string.key_change_passcode))
-                .setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
+                .setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
                     @Override
-                    public boolean onPreferenceChange(Preference preference, Object newValue) {
-                        editor.putString(UxArgument.PASSCODE, newValue.toString());
-                        editor.commit();
+                    public boolean onPreferenceClick(Preference preference) {
+                        startActivityForResult(
+                                new Intent(getActivity(), PasscodePreferenceActivity.class), REQUEST_CODE);
                         return true;
                     }
                 });
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
 
+        if (resultCode == Activity.RESULT_OK && requestCode == REQUEST_CODE && data!= null) {
+            editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
+            editor.commit();
+            Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
+        }
     }
 
 }

From a65edd5f51b005ac3c5867590360b1687bba897c Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Thu, 7 Aug 2014 20:49:39 +0300
Subject: [PATCH 6/8] Added support for older devices

---
 app/res/layout/fragment_numeric_keyboard.xml       | 12 +++++---
 .../android/ui/passcode/KeyboardFragment.java      |  5 ++--
 .../ui/passcode/PasscodeLockScreenActivity.java    | 11 +++-----
 .../ui/passcode/PasscodePreferenceActivity.java    |  6 ++--
 .../ui/settings/PasscodePreferenceFragment.java    |  9 ++++--
 .../android/ui/settings/SettingsActivity.java      | 32 ++++++++++++++++++++--
 6 files changed, 55 insertions(+), 20 deletions(-)

diff --git a/app/res/layout/fragment_numeric_keyboard.xml b/app/res/layout/fragment_numeric_keyboard.xml
index 869a455b..e4a007df 100644
--- a/app/res/layout/fragment_numeric_keyboard.xml
+++ b/app/res/layout/fragment_numeric_keyboard.xml
@@ -185,7 +185,8 @@
             android:cursorVisible="false"
             android:focusableInTouchMode="false"
             android:hint="*"
-            android:inputType="numberPassword"
+            android:inputType="textPassword|number"
+            android:password="true"
             android:maxLength="1"
             android:textSize="33sp" />
 
@@ -196,7 +197,8 @@
             android:cursorVisible="false"
             android:focusableInTouchMode="false"
             android:hint="*"
-            android:inputType="numberPassword"
+            android:inputType="textPassword|number"
+            android:password="true"
             android:maxLength="1"
             android:textSize="33sp" />
 
@@ -207,7 +209,8 @@
             android:cursorVisible="false"
             android:focusableInTouchMode="false"
             android:hint="*"
-            android:inputType="numberPassword"
+            android:inputType="textPassword|number"
+            android:password="true"
             android:maxLength="1"
             android:textSize="33sp" />
 
@@ -218,7 +221,8 @@
             android:cursorVisible="false"
             android:focusableInTouchMode="false"
             android:hint="*"
-            android:inputType="numberPassword"
+            android:inputType="textPassword|number"
+            android:password="true"
             android:maxLength="1"
             android:textSize="33sp" />
 
diff --git a/app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java b/app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java
index 94a46d9f..bcfddb23 100644
--- a/app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java
+++ b/app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java
@@ -17,7 +17,6 @@
 package org.gnucash.android.ui.passcode;
 
 import android.app.Activity;
-import android.app.Fragment;
 import android.os.Bundle;
 import android.os.Handler;
 import android.view.LayoutInflater;
@@ -25,13 +24,15 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import com.actionbarsherlock.app.SherlockFragment;
+
 import org.gnucash.android.R;
 
 /**
  * Soft numeric keyboard for lock screen and passcode preference.
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-public class KeyboardFragment extends Fragment {
+public class KeyboardFragment extends SherlockFragment {
 
     private TextView pass1;
     private TextView pass2;
diff --git a/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java b/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
index fe5e6787..1ffc206a 100644
--- a/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
+++ b/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
@@ -16,19 +16,15 @@
 
 package org.gnucash.android.ui.passcode;
 
-import android.app.Activity;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.text.Editable;
-import android.text.TextWatcher;
 import android.util.Log;
-import android.view.KeyEvent;
-import android.view.View;
-import android.widget.EditText;
 import android.widget.Toast;
 
+import com.actionbarsherlock.app.SherlockFragmentActivity;
+
 import org.gnucash.android.R;
 import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.account.AccountsActivity;
@@ -37,7 +33,8 @@
  * Activity for displaying and managing the passcode lock screen.
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-public class PasscodeLockScreenActivity extends Activity implements KeyboardFragment.OnPasscodeEnteredListener {
+public class PasscodeLockScreenActivity extends SherlockFragmentActivity
+        implements KeyboardFragment.OnPasscodeEnteredListener {
 
     private static final String TAG = "PasscodeLockScreenActivity";
     private SharedPreferences sharedPreferences;
diff --git a/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java b/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
index 6b290c12..7dc7e43d 100644
--- a/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
+++ b/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
@@ -16,12 +16,13 @@
 
 package org.gnucash.android.ui.passcode;
 
-import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
 import android.widget.TextView;
 import android.widget.Toast;
 
+import com.actionbarsherlock.app.SherlockFragmentActivity;
+
 import org.gnucash.android.R;
 import org.gnucash.android.ui.UxArgument;
 
@@ -29,7 +30,8 @@
  * Activity for entering and confirming passcode
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-public class PasscodePreferenceActivity extends Activity implements KeyboardFragment.OnPasscodeEnteredListener {
+public class PasscodePreferenceActivity extends SherlockFragmentActivity
+        implements KeyboardFragment.OnPasscodeEnteredListener {
 
     private boolean reenter = false;
     private String passcode;
diff --git a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
index 4e334fe7..599650b0 100644
--- a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
+++ b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
@@ -39,7 +39,10 @@
  */
 public class PasscodePreferenceFragment extends PreferenceFragment {
 
-    private static final int REQUEST_CODE = 1;
+    /**
+     * * Request code for retrieving passcode to store
+     */
+    public static final int PASSCODE_REQUEST_CODE = 2;
 
     private SharedPreferences.Editor editor;
 
@@ -75,7 +78,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                     @Override
                     public boolean onPreferenceClick(Preference preference) {
                         startActivityForResult(
-                                new Intent(getActivity(), PasscodePreferenceActivity.class), REQUEST_CODE);
+                                new Intent(getActivity(), PasscodePreferenceActivity.class), PASSCODE_REQUEST_CODE);
                         return true;
                     }
                 });
@@ -85,7 +88,7 @@ public boolean onPreferenceClick(Preference preference) {
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
 
-        if (resultCode == Activity.RESULT_OK && requestCode == REQUEST_CODE && data!= null) {
+        if (resultCode == Activity.RESULT_OK && requestCode == PASSCODE_REQUEST_CODE && data!= null) {
             editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
             editor.commit();
             Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
diff --git a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
index 106d943d..d816d376 100644
--- a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -40,7 +40,9 @@
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Transaction;
+import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.account.AccountsActivity;
+import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
 
 import java.io.*;
 import java.util.ArrayList;
@@ -51,7 +53,7 @@
 /**
  * Activity for displaying settings and information about the application
  * @author Ngewi Fet <ngewif@gmail.com>
- *
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
 public class SettingsActivity extends SherlockPreferenceActivity implements OnPreferenceChangeListener, Preference.OnPreferenceClickListener{
 
@@ -111,6 +113,7 @@ protected void onCreate(Bundle savedInstanceState) {
 			addPreferencesFromResource(R.xml.fragment_general_preferences);
             addPreferencesFromResource(R.xml.fragment_account_preferences);
 			addPreferencesFromResource(R.xml.fragment_transaction_preferences);
+            addPreferencesFromResource(R.xml.fragment_passcode_preferences);
 			addPreferencesFromResource(R.xml.fragment_about_preferences);
 			setDefaultCurrencyListener();
 			SharedPreferences manager = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
@@ -132,6 +135,12 @@ protected void onCreate(Bundle savedInstanceState) {
 
             pref = findPreference(getString(R.string.key_restore_backup));
             pref.setOnPreferenceClickListener(this);
+
+            pref = findPreference(getString(R.string.key_change_passcode));
+            pref.setOnPreferenceClickListener(this);
+
+            pref = findPreference(getString(R.string.key_enable_passcode));
+            pref.setOnPreferenceChangeListener(this);
 		}
 	}
 
@@ -168,7 +177,12 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
 		preference.setSummary(newValue.toString());
 		if (preference.getKey().equals(getString(R.string.key_default_currency))){
 			Money.DEFAULT_CURRENCY_CODE = newValue.toString();
-		}
+		} else if (preference.getKey().equals(getString(R.string.key_enable_passcode))) {
+            Editor editor = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit();
+            editor.putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue);
+            editor.commit();
+        }
+
 		return true;
 	}
 	
@@ -245,6 +259,12 @@ public boolean onPreferenceClick(Preference preference) {
             return true;
         }
 
+        if (key.equals(getString(R.string.key_change_passcode))){
+            startActivityForResult(new Intent(this, PasscodePreferenceActivity.class),
+                    PasscodePreferenceFragment.PASSCODE_REQUEST_CODE);
+            return true;
+        }
+
         return false;
     }
 
@@ -307,6 +327,14 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                 }
 
                 break;
+            case PasscodePreferenceFragment.PASSCODE_REQUEST_CODE:
+                if (data!= null) {
+                    Editor editor = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit();
+                    editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
+                    editor.commit();
+                    Toast.makeText(getApplicationContext(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
+                }
+                break;
         }
     }
 }

From ae8145f947cfd8c0b662243e680db70372c1f0ca Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 12 Aug 2014 17:59:53 +0300
Subject: [PATCH 7/8] Prevent from enabling passlock without entering a
 passcode

---
 .../ui/settings/PasscodePreferenceFragment.java    | 18 +++++++---
 .../android/ui/settings/SettingsActivity.java      | 40 ++++++++++++++++------
 2 files changed, 42 insertions(+), 16 deletions(-)

diff --git a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
index 599650b0..2c9ca704 100644
--- a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
+++ b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
@@ -20,6 +20,7 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
+import android.preference.CheckBoxPreference;
 import android.preference.Preference;
 import android.preference.Preference.OnPreferenceChangeListener;
 import android.preference.PreferenceFragment;
@@ -45,6 +46,7 @@
     public static final int PASSCODE_REQUEST_CODE = 2;
 
     private SharedPreferences.Editor editor;
+    private CheckBoxPreference checkBoxPreference;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -62,12 +64,15 @@ public void onResume() {
         super.onResume();
 
         editor = PreferenceManager.getDefaultSharedPreferences(getActivity().getApplicationContext()).edit();
+        final Intent intent = new Intent(getActivity(), PasscodePreferenceActivity.class);
 
-
-        findPreference(getString(R.string.key_enable_passcode))
-                .setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
+        checkBoxPreference = (CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode));
+        checkBoxPreference.setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
                     @Override
                     public boolean onPreferenceChange(Preference preference, Object newValue) {
+                        if ((Boolean) newValue) {
+                            startActivityForResult(intent, PASSCODE_REQUEST_CODE);
+                        }
                         editor.putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue);
                         editor.commit();
                         return true;
@@ -77,8 +82,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                 .setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
                     @Override
                     public boolean onPreferenceClick(Preference preference) {
-                        startActivityForResult(
-                                new Intent(getActivity(), PasscodePreferenceActivity.class), PASSCODE_REQUEST_CODE);
+                        startActivityForResult(intent, PASSCODE_REQUEST_CODE);
                         return true;
                     }
                 });
@@ -92,7 +96,11 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
             editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
             editor.commit();
             Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
+        } else {
+            editor.putBoolean(UxArgument.ENABLED_PASSCODE, false);
+            checkBoxPreference.setChecked(false);
         }
+        editor.commit();
     }
 
 }
diff --git a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
index d816d376..7527c6bb 100644
--- a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -23,28 +23,34 @@
 import android.content.pm.PackageManager.NameNotFoundException;
 import android.os.Build;
 import android.os.Bundle;
+import android.preference.CheckBoxPreference;
 import android.preference.Preference;
 import android.preference.Preference.OnPreferenceChangeListener;
 import android.preference.PreferenceManager;
 import android.util.Log;
 import android.widget.Toast;
+
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.app.SherlockPreferenceActivity;
 import com.actionbarsherlock.view.MenuItem;
+
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
 
-import java.io.*;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Timer;
@@ -174,13 +180,18 @@ public boolean onOptionsItemSelected(MenuItem item) {
 	
 	@Override
  	public boolean onPreferenceChange(Preference preference, Object newValue) {
-		preference.setSummary(newValue.toString());
 		if (preference.getKey().equals(getString(R.string.key_default_currency))){
 			Money.DEFAULT_CURRENCY_CODE = newValue.toString();
+            preference.setSummary(newValue.toString());
 		} else if (preference.getKey().equals(getString(R.string.key_enable_passcode))) {
-            Editor editor = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit();
-            editor.putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue);
-            editor.commit();
+            if ((Boolean) newValue) {
+                startActivityForResult(new Intent(this, PasscodePreferenceActivity.class),
+                        PasscodePreferenceFragment.PASSCODE_REQUEST_CODE);
+            }
+            PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                    .edit()
+                    .putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue)
+                    .commit();
         }
 
 		return true;
@@ -313,6 +324,13 @@ public void importMostRecentBackup(){
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (resultCode == Activity.RESULT_CANCELED){
+            if (requestCode == PasscodePreferenceFragment.PASSCODE_REQUEST_CODE) {
+                PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                        .edit()
+                        .putBoolean(UxArgument.ENABLED_PASSCODE, false)
+                        .commit();
+                ((CheckBoxPreference) findPreference(getString(R.string.key_enable_passcode))).setChecked(false);
+            }
             return;
         }
 
@@ -325,13 +343,13 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                     e.printStackTrace();
                     Toast.makeText(this, R.string.toast_error_importing_accounts, Toast.LENGTH_SHORT).show();
                 }
-
                 break;
             case PasscodePreferenceFragment.PASSCODE_REQUEST_CODE:
                 if (data!= null) {
-                    Editor editor = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit();
-                    editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
-                    editor.commit();
+                    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                            .edit()
+                            .putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE))
+                            .commit();
                     Toast.makeText(getApplicationContext(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
                 }
                 break;

From 144d11aead7b85bcf516319e79961d8b902f0aca Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 12 Aug 2014 22:16:26 +0300
Subject: [PATCH 8/8] Implemented the passcode lock with handling resuming

---
 app/AndroidManifest.xml                            | 10 ++---
 .../gnucash/android/app/GnuCashApplication.java    | 10 +++++
 app/src/org/gnucash/android/ui/UxArgument.java     |  5 +++
 .../android/ui/account/AccountsActivity.java       |  8 ++--
 .../android/ui/passcode/PassLockActivity.java      | 51 ++++++++++++++++++++++
 .../ui/passcode/PasscodeLockScreenActivity.java    | 30 ++++++++-----
 .../ui/settings/PasscodePreferenceFragment.java    |  1 -
 .../android/ui/settings/SettingsActivity.java      |  6 +++
 .../ui/transaction/TransactionsActivity.java       | 12 ++---
 9 files changed, 107 insertions(+), 26 deletions(-)
 create mode 100644 app/src/org/gnucash/android/ui/passcode/PassLockActivity.java

diff --git a/app/AndroidManifest.xml b/app/AndroidManifest.xml
index 61a7a671..f2c23526 100644
--- a/app/AndroidManifest.xml
+++ b/app/AndroidManifest.xml
@@ -48,17 +48,17 @@
         android:label="@string/app_name" 
         android:theme="@style/Theme.Sherlock.Light.DarkActionBar">
         <activity
-            android:name=".ui.passcode.PasscodeLockScreenActivity"
-            android:noHistory="true"
-            android:windowSoftInputMode="stateAlwaysHidden">
+            android:name=".ui.account.AccountsActivity"
+            android:label="@string/app_name">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
         <activity
-            android:name=".ui.account.AccountsActivity"
-            android:label="@string/app_name">
+            android:name=".ui.passcode.PasscodeLockScreenActivity"
+            android:noHistory="true"
+            android:windowSoftInputMode="stateAlwaysHidden">
         </activity>
         <activity android:name=".ui.settings.SettingsActivity"/>
         <activity android:name=".ui.passcode.PasscodePreferenceActivity" />
diff --git a/app/src/org/gnucash/android/app/GnuCashApplication.java b/app/src/org/gnucash/android/app/GnuCashApplication.java
index 9a91f2e8..e556d9a3 100644
--- a/app/src/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/org/gnucash/android/app/GnuCashApplication.java
@@ -32,6 +32,16 @@
  */
 public class GnuCashApplication extends Application{
 
+    /**
+     * Lifetime of passcode session
+     */
+    public static final long SESSION_TIMEOUT = 5 * 1000;
+
+    /**
+     * Init time of passcode session
+     */
+    public static long PASSCODE_SESSION_INIT_TIME = 0l;
+
     private static Context context;
 
     public void onCreate(){
diff --git a/app/src/org/gnucash/android/ui/UxArgument.java b/app/src/org/gnucash/android/ui/UxArgument.java
index abff1fa7..0bc60732 100644
--- a/app/src/org/gnucash/android/ui/UxArgument.java
+++ b/app/src/org/gnucash/android/ui/UxArgument.java
@@ -63,6 +63,11 @@
      */
     public static final String AMOUNT_STRING = "starting_amount";
 
+    /**
+     * Class caller, which will be launched after the unlocking
+     */
+    public static final String PASSCODE_CLASS_CALLER = "passcode_class_caller";
+
     //prevent initialization of instances of this class
     private UxArgument(){
         //prevent even the native class from calling the ctor
diff --git a/app/src/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
index 485ecc9b..5589d31c 100644
--- a/app/src/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/org/gnucash/android/ui/account/AccountsActivity.java
@@ -36,21 +36,23 @@
 import android.util.SparseArray;
 import android.view.View;
 import android.view.ViewGroup;
-import com.actionbarsherlock.app.SherlockFragmentActivity;
+
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
 import com.viewpagerindicator.TitlePageIndicator;
+
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.ui.util.Refreshable;
 import org.gnucash.android.ui.UxArgument;
+import org.gnucash.android.ui.passcode.PassLockActivity;
 import org.gnucash.android.ui.settings.SettingsActivity;
 import org.gnucash.android.ui.transaction.ScheduledTransactionsListFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.util.OnAccountClickedListener;
+import org.gnucash.android.ui.util.Refreshable;
 
 import java.io.FileNotFoundException;
 import java.io.InputStream;
@@ -61,7 +63,7 @@
  * @author Ngewi Fet <ngewif@gmail.com>
  * 
  */
-public class AccountsActivity extends SherlockFragmentActivity implements OnAccountClickedListener {
+public class AccountsActivity extends PassLockActivity implements OnAccountClickedListener {
 
 	/**
 	 * Tag used for identifying the account list fragment when it is added to this activity
diff --git a/app/src/org/gnucash/android/ui/passcode/PassLockActivity.java b/app/src/org/gnucash/android/ui/passcode/PassLockActivity.java
new file mode 100644
index 00000000..3972a2ac
--- /dev/null
+++ b/app/src/org/gnucash/android/ui/passcode/PassLockActivity.java
@@ -0,0 +1,51 @@
+package org.gnucash.android.ui.passcode;
+
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.preference.PreferenceManager;
+
+import com.actionbarsherlock.app.SherlockFragmentActivity;
+
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.ui.UxArgument;
+
+/**
+ * This activity used as the parent class for enabling passcode lock
+ *
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ * @see org.gnucash.android.ui.account.AccountsActivity
+ * @see org.gnucash.android.ui.transaction.TransactionsActivity
+ */
+public class PassLockActivity extends SherlockFragmentActivity {
+
+    private static final String TAG = "PassLockActivity";
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+
+        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
+        if (sharedPreferences.getBoolean(UxArgument.ENABLED_PASSCODE, false) && !isSessionActive()) {
+            startActivity(new Intent(this, PasscodeLockScreenActivity.class)
+                    .setAction(getIntent().getAction())
+                    .putExtra(UxArgument.PASSCODE_CLASS_CALLER, this.getClass().getName())
+                    .putExtra(UxArgument.SELECTED_ACCOUNT_ID, getIntent().getLongExtra(UxArgument.SELECTED_ACCOUNT_ID, 0L))
+            );
+        }
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+        GnuCashApplication.PASSCODE_SESSION_INIT_TIME = System.currentTimeMillis();
+    }
+
+    /**
+     * @return {@code true} if passcode session is active, and {@code false} otherwise
+     */
+    private boolean isSessionActive() {
+        return System.currentTimeMillis() - GnuCashApplication.PASSCODE_SESSION_INIT_TIME
+                < GnuCashApplication.SESSION_TIMEOUT ? true : false;
+    }
+
+}
diff --git a/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java b/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
index 1ffc206a..9bac9665 100644
--- a/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
+++ b/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
@@ -17,7 +17,6 @@
 package org.gnucash.android.ui.passcode;
 
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.util.Log;
@@ -26,8 +25,8 @@
 import com.actionbarsherlock.app.SherlockFragmentActivity;
 
 import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.ui.UxArgument;
-import org.gnucash.android.ui.account.AccountsActivity;
 
 /**
  * Activity for displaying and managing the passcode lock screen.
@@ -37,29 +36,38 @@
         implements KeyboardFragment.OnPasscodeEnteredListener {
 
     private static final String TAG = "PasscodeLockScreenActivity";
-    private SharedPreferences sharedPreferences;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.passcode_lockscreen);
-
-        sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
-        if (!sharedPreferences.getBoolean(UxArgument.ENABLED_PASSCODE, false)) {
-            Log.i(TAG, "Passcode disabled");
-            startActivity(new Intent(this, AccountsActivity.class));
-        }
     }
 
     @Override
     public void onPasscodeEntered(String pass) {
-        String passcode = sharedPreferences.getString(UxArgument.PASSCODE, "");
+        String passcode = PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                .getString(UxArgument.PASSCODE, "");
         Log.d(TAG, "Passcode: " + passcode);
+
         if (passcode.equals(pass)) {
-            startActivity(new Intent(this, AccountsActivity.class));
+            GnuCashApplication.PASSCODE_SESSION_INIT_TIME = System.currentTimeMillis();
+            startActivity(new Intent()
+                    .setClassName(this, getIntent().getStringExtra(UxArgument.PASSCODE_CLASS_CALLER))
+                    .setAction(getIntent().getAction())
+                    .setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
+                    .putExtra(UxArgument.SELECTED_ACCOUNT_ID, getIntent().getLongExtra(UxArgument.SELECTED_ACCOUNT_ID, 0L))
+            );
         } else {
             Toast.makeText(this, R.string.toast_wrong_passcode, Toast.LENGTH_SHORT).show();
         }
     }
 
+    @Override
+    public void onBackPressed() {
+        GnuCashApplication.PASSCODE_SESSION_INIT_TIME = System.currentTimeMillis() - GnuCashApplication.SESSION_TIMEOUT;
+        startActivity(new Intent(Intent.ACTION_MAIN)
+                .addCategory(Intent.CATEGORY_HOME)
+                .setFlags(Intent.FLAG_ACTIVITY_NEW_TASK));
+    }
+
 }
diff --git a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
index 2c9ca704..52744e07 100644
--- a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
+++ b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
@@ -94,7 +94,6 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
 
         if (resultCode == Activity.RESULT_OK && requestCode == PASSCODE_REQUEST_CODE && data!= null) {
             editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
-            editor.commit();
             Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
         } else {
             editor.putBoolean(UxArgument.ENABLED_PASSCODE, false);
diff --git a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
index 7527c6bb..1a2b3d2e 100644
--- a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -158,6 +158,12 @@ protected void onResume() {
     }
 
     @Override
+    protected void onPause() {
+        super.onPause();
+        GnuCashApplication.PASSCODE_SESSION_INIT_TIME = System.currentTimeMillis();
+    }
+
+    @Override
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
 		case android.R.id.home:		
diff --git a/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java
index 56474abe..1ef5fe2f 100644
--- a/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -35,33 +35,33 @@
 import android.view.inputmethod.InputMethodManager;
 import android.widget.SpinnerAdapter;
 import android.widget.TextView;
+
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.app.ActionBar.OnNavigationListener;
-import com.actionbarsherlock.app.SherlockFragmentActivity;
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuItem;
 import com.viewpagerindicator.TitlePageIndicator;
+
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.Account;
-import org.gnucash.android.db.AccountsDbAdapter;
-import org.gnucash.android.db.DatabaseAdapter;
-import org.gnucash.android.db.DatabaseHelper;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.ui.util.Refreshable;
 import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.account.AccountsListFragment;
+import org.gnucash.android.ui.passcode.PassLockActivity;
 import org.gnucash.android.ui.util.OnAccountClickedListener;
 import org.gnucash.android.ui.util.OnTransactionClickedListener;
+import org.gnucash.android.ui.util.Refreshable;
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
 /**
  * Activity for displaying, creating and editing transactions
  * @author Ngewi Fet <ngewif@gmail.com>
  */
-public class TransactionsActivity extends SherlockFragmentActivity implements
+public class TransactionsActivity extends PassLockActivity implements
         Refreshable, OnAccountClickedListener, OnTransactionClickedListener{
 
 	/**
