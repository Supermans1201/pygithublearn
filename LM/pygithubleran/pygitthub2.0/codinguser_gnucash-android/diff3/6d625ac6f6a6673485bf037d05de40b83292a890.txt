From 6d625ac6f6a6673485bf037d05de40b83292a890 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Wed, 4 Nov 2015 21:48:08 +0800
Subject: [PATCH] fix qif export to SDCard

---
 .../gnucash/android/export/ExportAsyncTask.java    | 22 +++++++++++++---------
 .../gnucash/android/export/qif/QifExporter.java    | 10 +++++++---
 2 files changed, 20 insertions(+), 12 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index 94391f82..1f07600e 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -472,15 +472,19 @@ private void shareFile(String path) {
      * @throws IOException if the file could not be copied
      */
     public void copyFile(File src, File dst) throws IOException {
-        //TODO: Make this asynchronous at some time, t in the future.
-        FileChannel inChannel = new FileInputStream(src).getChannel();
-        FileChannel outChannel = new FileOutputStream(dst).getChannel();
-        try {
-            inChannel.transferTo(0, inChannel.size(), outChannel);
-        } finally {
-            if (inChannel != null)
-                inChannel.close();
-            outChannel.close();
+        //TODO: Make this asynchronous at some time, t in the future
+        if (mExportParams.getExportFormat() == ExportFormat.QIF) {
+            QifExporter.splitQIF(src, dst);
+        } else {
+            FileChannel inChannel = new FileInputStream(src).getChannel();
+            FileChannel outChannel = new FileOutputStream(dst).getChannel();
+            try {
+                inChannel.transferTo(0, inChannel.size(), outChannel);
+            } finally {
+                if (inChannel != null)
+                    inChannel.close();
+                outChannel.close();
+            }
         }
     }
 
diff --git a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
index 27f36271..ac5ca01c 100644
--- a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
@@ -230,11 +230,15 @@ public void generateExport(Writer writer) throws ExporterException {
      * @throws IOException if something went wrong while splitting the file.
      */
     public static List<String> splitQIF(File file) throws IOException {
+        return splitQIF(file, file);
+    }
+
+    public static List<String> splitQIF(File src, File dst) throws IOException {
         // split only at the last dot
-        String[] pathParts = file.getPath().split("(?=\\.[^\\.]+$)");
+        String[] pathParts = dst.getPath().split("(?=\\.[^\\.]+$)");
         ArrayList<String> splitFiles = new ArrayList<>();
         String line;
-        BufferedReader in = new BufferedReader(new FileReader(file));
+        BufferedReader in = new BufferedReader(new FileReader(src));
         BufferedWriter out = null;
         try {
             while ((line = in.readLine()) != null) {
@@ -248,7 +252,7 @@ public void generateExport(Writer writer) throws ExporterException {
                     out = new BufferedWriter(new FileWriter(newFileName));
                 } else {
                     if (out == null) {
-                        throw new IllegalArgumentException(file.getPath() + " format is not correct");
+                        throw new IllegalArgumentException(src.getPath() + " format is not correct");
                     }
                     out.append(line).append('\n');
                 }
