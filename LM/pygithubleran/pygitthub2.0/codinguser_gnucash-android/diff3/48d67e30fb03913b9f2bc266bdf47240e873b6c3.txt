From 48d67e30fb03913b9f2bc266bdf47240e873b6c3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <alexandre.magaz@gmail.com>
Date: Fri, 9 Dec 2016 09:18:05 +0100
Subject: [PATCH] Use more realistic timeouts for Google Drive.

They are still arbitrary, though. To be fixed in the future.
---
 app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index 9f392c80..c098131c 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -276,12 +276,11 @@ protected void onPostExecute(Boolean exportResult) {
 
     private void moveExportToGoogleDrive(){
         Log.i(TAG, "Moving exported file to Google Drive");
-        final long TIMEOUT = 5; // seconds
         final GoogleApiClient googleApiClient = BackupPreferenceFragment.getGoogleApiClient(GnuCashApplication.getAppContext());
         googleApiClient.blockingConnect();
 
         DriveApi.DriveContentsResult driveContentsResult =
-                Drive.DriveApi.newDriveContents(googleApiClient).await(TIMEOUT, TimeUnit.SECONDS);
+                Drive.DriveApi.newDriveContents(googleApiClient).await(1, TimeUnit.MINUTES);
         if (!driveContentsResult.getStatus().isSuccess()) {
             Log.e(TAG, "Error while trying to create new file contents");
             return;
@@ -314,7 +313,7 @@ private void moveExportToGoogleDrive(){
                 DriveFolder folder = Drive.DriveApi.getFolder(googleApiClient, DriveId.decodeFromString(folderId));
                 // create a file on root folder
                 driveFileResult = folder.createFile(googleApiClient, changeSet, driveContents)
-                                                .await(TIMEOUT, TimeUnit.SECONDS);
+                                                .await(1, TimeUnit.MINUTES);
             }
         } catch (IOException e) {
             Crashlytics.logException(e);
