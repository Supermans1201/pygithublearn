From aa8cb4adc2666aad2b03db21764ee9d31312f720 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Sat, 10 May 2014 20:05:33 +0800
Subject: [PATCH] More resource leaks. One zh translation error.

---
 app/res/values-zh/strings.xml                             |  3 +--
 app/src/org/gnucash/android/db/AccountsDbAdapter.java     |  1 +
 app/src/org/gnucash/android/export/ExporterTask.java      |  2 ++
 app/src/org/gnucash/android/export/ofx/OfxExporter.java   |  1 +
 .../gnucash/android/ui/account/AccountFormFragment.java   | 15 +++++++++++++--
 .../android/ui/transaction/TransactionFormFragment.java   |  5 +++++
 6 files changed, 23 insertions(+), 4 deletions(-)

diff --git a/app/res/values-zh/strings.xml b/app/res/values-zh/strings.xml
index b70d4f7f..9dd96f6e 100644
--- a/app/res/values-zh/strings.xml
+++ b/app/res/values-zh/strings.xml
@@ -46,7 +46,7 @@
     <string name="title_edit_transaction"></string>
     <string name="label_transaction_description"></string>
     <string name="menu_move"></string>
-    <string name="title_selected">%1$d </string>
+    <string name="title_selected">%1$d </string>
     <string name="label_transactions_total"></string>
     <string name="label_export_destination"></string>
     <string name="title_export_dialog"></string>
@@ -352,7 +352,6 @@
     <string name="label_default_transfer_account"></string>
     <string name="label_account_color_and_type"></string>
     <plurals name="label_sub_accounts">
-        <item quantity="one">%d </item>
         <item quantity="other">%d </item>
     </plurals>
     <string-array name="account_type_entry_values">
diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index 6a24938d..db144a07 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -165,6 +165,7 @@ public boolean destructiveDeleteAccount(long rowId){
 			result &= mTransactionsAdapter.deleteRecord(id);
 		}
 		result &= deleteRecord(DatabaseHelper.ACCOUNTS_TABLE_NAME, rowId);
+        c.close();
 		return result;
 	}
 
diff --git a/app/src/org/gnucash/android/export/ExporterTask.java b/app/src/org/gnucash/android/export/ExporterTask.java
index b322ee67..c8edf194 100644
--- a/app/src/org/gnucash/android/export/ExporterTask.java
+++ b/app/src/org/gnucash/android/export/ExporterTask.java
@@ -169,6 +169,7 @@ protected void onPostExecute(Boolean exportResult) {
             android.support.v4.app.FragmentManager fragmentManager = ((FragmentActivity)mContext).getSupportFragmentManager();
             Fragment currentFragment = fragmentManager
                     .findFragmentByTag(AccountsActivity.FRAGMENT_ACCOUNTS_LIST);
+
             TransactionsDeleteConfirmationDialogFragment alertFragment =
                     TransactionsDeleteConfirmationDialogFragment.newInstance(R.string.title_confirm_delete, 0);
             alertFragment.setTargetFragment(currentFragment, 0);
@@ -218,6 +219,7 @@ private void writeQifExternalStorage(String qif) throws IOException {
         writer.write(qif);
 
         writer.flush();
+        writer.close();
     }
 
     /**
diff --git a/app/src/org/gnucash/android/export/ofx/OfxExporter.java b/app/src/org/gnucash/android/export/ofx/OfxExporter.java
index 878c0c16..029ae6dc 100644
--- a/app/src/org/gnucash/android/export/ofx/OfxExporter.java
+++ b/app/src/org/gnucash/android/export/ofx/OfxExporter.java
@@ -59,6 +59,7 @@ public OfxExporter(Context context, boolean exportAll) {
 		mAccountsList = exportAll ? dbAdapter.getAllAccounts() : dbAdapter.getExportableAccounts();
 		mExportAll = exportAll;
 		mContext = context;
+        dbAdapter.close();
 	}
 
     /**
diff --git a/app/src/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/org/gnucash/android/ui/account/AccountFormFragment.java
index f8a7aaee..736ac0f5 100644
--- a/app/src/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -80,6 +80,12 @@
 	 * Accounts database adapter
 	 */
 	private AccountsDbAdapter mAccountsDbAdapter;
+
+    /**
+     * Whether the AccountsDbAdapter is created inside this class.
+     * If so, it should be also closed by this class
+     */
+    private boolean mReleaseDbAdapter = false;
 	
 	/**
 	 * List of all currency codes (ISO 4217) supported by the app
@@ -191,6 +197,7 @@ public AccountFormFragment() {
 	static public AccountFormFragment newInstance(AccountsDbAdapter dbAdapter){
 		AccountFormFragment f = new AccountFormFragment();
 		f.mAccountsDbAdapter = dbAdapter;
+        f.mReleaseDbAdapter = false;
 		return f;
 	}
 	
@@ -199,6 +206,7 @@ public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
 		setHasOptionsMenu(true);
         if (mAccountsDbAdapter == null){
+            mReleaseDbAdapter = true;
             mAccountsDbAdapter = new AccountsDbAdapter(getSherlockActivity());
         }
 
@@ -660,8 +668,11 @@ public void onDestroy() {
 		super.onDestroyView();
 		if (mParentAccountCursor != null)
 			mParentAccountCursor.close();
-		//do not close the database adapter. We got it from the activity, 
-		//the activity will take care of it.
+        // The mAccountsDbAdapter should only be closed when it is not passed in
+        // by other Activities.
+		if (mReleaseDbAdapter == true && mAccountsDbAdapter != null) {
+            mAccountsDbAdapter.close();
+        }
 	}
 	
 	private void saveAccount() {
diff --git a/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 0c02bc20..f777bba6 100644
--- a/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -420,6 +420,9 @@ private void updateTransferAccountsList(){
                             + "' AND " + DatabaseHelper.KEY_PLACEHOLDER + " = 0"
                             + ")";
 
+        if (mCursor != null) {
+            mCursor.close();
+        }
 		mCursor = mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions);
 
         mCursorAdapter = new QualifiedAccountNameCursorAdapter(getActivity(),
@@ -543,6 +546,8 @@ public void onAccountChanged(long newAccountId){
         }
 
 		updateTransferAccountsList();
+
+        accountsDbAdapter.close();
 	}
 	
 	/**
