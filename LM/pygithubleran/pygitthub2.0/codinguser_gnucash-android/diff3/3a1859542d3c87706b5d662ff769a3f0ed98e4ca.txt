From 3a1859542d3c87706b5d662ff769a3f0ed98e4ca Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Wed, 20 May 2015 21:53:28 +0300
Subject: [PATCH] Added account type spinner

---
 .../gnucash/android/ui/chart/BarChartActivity.java | 68 ++++++++++++++++------
 app/src/main/res/layout/activity_bar_chart.xml     | 59 +++++++++++++++++++
 2 files changed, 109 insertions(+), 18 deletions(-)
 create mode 100644 app/src/main/res/layout/activity_bar_chart.xml

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index e0deabdf..677d090e 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -20,7 +20,11 @@
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.util.Log;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.ArrayAdapter;
 import android.widget.LinearLayout;
+import android.widget.Spinner;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -94,10 +98,12 @@
     private Set<String> mLegendLabels;
     private Set<Integer> mLegendColors;
 
+    private AccountType mAccountType = AccountType.EXPENSE;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
-        setContentView(R.layout.activity_line_chart);
+        setContentView(R.layout.activity_bar_chart);
         super.onCreate(savedInstanceState);
         getSupportActionBar().setTitle(R.string.title_bar_chart);
 
@@ -105,7 +111,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 .getString(getString(R.string.key_report_currency), Money.DEFAULT_CURRENCY_CODE));
 
         mChart = new BarChart(this);
-        ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
+        ((LinearLayout) findViewById(R.id.bar_chart)).addView(mChart);
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
         mChart.getXAxis().setDrawGridLines(false);
@@ -118,19 +124,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mChart.getLegend().setForm(Legend.LegendForm.CIRCLE);
         mChart.getLegend().setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE);
 
-        // below we can add/remove displayed account's types
-        mChart.setData(getData(new ArrayList<>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
-
-        if (!mChartDataPresent) {
-            mChart.getAxisLeft().setAxisMaxValue(10);
-            mChart.getAxisLeft().setDrawLabels(false);
-            mChart.getXAxis().setDrawLabels(false);
-            mChart.setTouchEnabled(false);
-            ((TextView) findViewById(R.id.selected_chart_slice)).setText(getResources().getString(R.string.label_chart_no_data));
-        } else {
-            mChart.animateY(ANIMATION_DURATION);
-        }
-        mChart.invalidate();
+        setUpSpinner();
     }
 
     /**
@@ -159,8 +153,9 @@ private BarData getData(List<AccountType> accountTypeList) {
             long end = startDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
             List<Float> stack = new ArrayList<>();
             for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
-                if (account.getAccountType() == AccountType.EXPENSE
-                        && !account.isPlaceholderAccount() && account.getCurrency() == mCurrency) {
+                if (account.getAccountType() == mAccountType
+                        && !account.isPlaceholderAccount()
+                        && account.getCurrency() == mCurrency) {
 
                     float balance = (float) mAccountsDbAdapter.getAccountsBalance(
                             Collections.singletonList(account.getUID()), start, end).asDouble();
@@ -168,7 +163,7 @@ private BarData getData(List<AccountType> accountTypeList) {
                         stack.add(balance);
                         labels.add(account.getName());
                         colors.add(COLORS[(colors.size()) % COLORS.length]);
-                        Log.i(TAG, "EXPENSE" + startDate.toString(" MMMM yyyy ") + account.getName()
+                        Log.i(TAG, mAccountType + startDate.toString(" MMMM yyyy ") + account.getName()
                                 + " = " + stack.get(stack.size() - 1)  + ", color = " + colors.get(colors.size() - 1));
                     }
                 }
@@ -268,6 +263,43 @@ private BarData getEmptyData() {
         return new BarData(xValues, Collections.singletonList(set));
     }
 
+    /**
+     * Sets up settings and data for the account type spinner. Currently used only {@code EXPENSE} and {@code INCOME}
+     * account types.
+     */
+    private void setUpSpinner() {
+        Spinner spinner = (Spinner) findViewById(R.id.chart_data_spinner);
+        ArrayAdapter<AccountType> dataAdapter = new ArrayAdapter<>(this,
+                android.R.layout.simple_spinner_item,
+                Arrays.asList(AccountType.EXPENSE, AccountType.INCOME));
+        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+        spinner.setAdapter(dataAdapter);
+        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
+            @Override
+            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
+                mAccountType = (AccountType) ((Spinner) findViewById(R.id.chart_data_spinner)).getSelectedItem();
+
+                // below we can add/remove displayed account's types
+                mChart.setData(getData(new ArrayList<>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
+
+                if (!mChartDataPresent) {
+                    mChart.getAxisLeft().setAxisMaxValue(10);
+                    mChart.getAxisLeft().setDrawLabels(false);
+                    mChart.getXAxis().setDrawLabels(false);
+                    mChart.setTouchEnabled(false);
+                    ((TextView) findViewById(R.id.selected_chart_slice)).setText(getResources().getString(R.string.label_chart_no_data));
+                } else {
+                    mChart.animateY(ANIMATION_DURATION);
+                }
+                mChart.invalidate();
+            }
+
+            @Override
+            public void onNothingSelected(AdapterView<?> adapterView) {
+            }
+        });
+    }
+
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getSupportMenuInflater().inflate(R.menu.chart_actions, menu);
diff --git a/app/src/main/res/layout/activity_bar_chart.xml b/app/src/main/res/layout/activity_bar_chart.xml
new file mode 100644
index 00000000..288124eb
--- /dev/null
+++ b/app/src/main/res/layout/activity_bar_chart.xml
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!--
+ Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<android.support.v4.widget.DrawerLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout android:id="@+id/bar_chart"
+                      android:orientation="horizontal"
+                      android:layout_width="fill_parent"
+                      android:layout_height="0dip"
+                      android:layout_weight="1" />
+
+        <Spinner android:id="@+id/chart_data_spinner"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+
+        <LinearLayout android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center">
+
+            <TextView android:id="@+id/selected_chart_slice"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:gravity="center" />
+
+        </LinearLayout>
+
+    </LinearLayout>
+    <ListView android:id="@+id/left_drawer"
+        android:layout_width="240dp"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:choiceMode="singleChoice"
+        android:divider="@android:color/transparent"
+        android:dividerHeight="0dp"
+        android:background="#111"/>
+</android.support.v4.widget.DrawerLayout>
\ No newline at end of file
