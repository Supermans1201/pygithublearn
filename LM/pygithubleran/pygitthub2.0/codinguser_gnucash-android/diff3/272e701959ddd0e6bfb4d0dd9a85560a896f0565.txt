From 272e701959ddd0e6bfb4d0dd9a85560a896f0565 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Fri, 24 Apr 2015 18:11:32 +0300
Subject: [PATCH] Now we can get the earliest or latest timestamp of
 transactions by a currency code

---
 .../gnucash/android/db/TransactionsDbAdapter.java  | 52 ++++++++++++++++++++++
 1 file changed, 52 insertions(+)

diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index 76a28599..830e93f0 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -628,4 +628,56 @@ private long getTimestamp(String mod, AccountType type) {
         return timestamp;
     }
 
+    /**
+     * Returns a timestamp of the earliest transaction for a specified account type and currency
+     * @param type the account type
+     * @param currencyCode the currency code
+     * @return the earliest transaction's timestamp. Returns 1970-01-01 00:00:00.000 if no transaction found
+     */
+    public long getTimestampOfEarliestTransaction(AccountType type, String currencyCode) {
+        return getTimestamp("MIN", type, currencyCode);
+    }
+
+    /**
+     * Returns a timestamp of the latest transaction for a specified account type and currency
+     * @param type the account type
+     * @param currencyCode the currency code
+     * @return the latest transaction's timestamp. Returns 1970-01-01 00:00:00.000 if no transaction found
+     */
+    public long getTimestampOfLatestTransaction(AccountType type, String currencyCode) {
+        return getTimestamp("MAX", type, currencyCode);
+    }
+
+    /**
+     * Returns the earliest or latest timestamp of transactions for a specific account type and currency
+     * @param mod Mode (either MAX or MIN)
+     * @param type AccountType
+     * @param currencyCode the currency code
+     * @return earliest or latest timestamp of transactions
+     * @see #getTimestampOfLatestTransaction(AccountType)
+     * @see #getTimestampOfEarliestTransaction(AccountType)
+     */
+    private long getTimestamp(String mod, AccountType type, String currencyCode) {
+        String sql = "SELECT " + mod + "(" + TransactionEntry.COLUMN_TIMESTAMP + ")"
+                + " FROM " + TransactionEntry.TABLE_NAME
+                + " INNER JOIN " + SplitEntry.TABLE_NAME + " ON "
+                + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_TRANSACTION_UID + " = "
+                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_UID
+                + " INNER JOIN " + AccountEntry.TABLE_NAME + " ON "
+                + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID + " = "
+                + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_ACCOUNT_UID
+                + " WHERE " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_TYPE + " = ? AND "
+                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_CURRENCY + " = ? AND "
+                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_TEMPLATE + " = 0";
+        Cursor cursor = mDb.rawQuery(sql, new String[]{ type.name(), currencyCode });
+        long timestamp= 0;
+        if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                timestamp = cursor.getLong(0);
+            }
+            cursor.close();
+        }
+        return timestamp;
+    }
+
 }
