From fa4f8b119be9dcc3a9895472416350ea4fe6ef34 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Sat, 30 Aug 2014 22:41:51 +0800
Subject: [PATCH] Bulk insert refinement

propagate exception out of bulk insertion.
Delete all empty transaction after insertion.
---
 .../org/gnucash/android/db/AccountsDbAdapter.java    |  5 +----
 app/src/org/gnucash/android/db/SplitsDbAdapter.java  |  7 ++-----
 .../gnucash/android/db/TransactionsDbAdapter.java    | 20 ++++++++++++++------
 3 files changed, 17 insertions(+), 15 deletions(-)

diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index ed3df1a0..30c2ead9 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -143,15 +143,12 @@ public long bulkAddAccounts(List<Account> accountList){
                 if (account.getDefaultTransferAccountUID() != null) {
                     replaceStatement.bindString(10, account.getDefaultTransferAccountUID());
                 }
-                Log.d(TAG, "Replacing account in db");
+                //Log.d(TAG, "Replacing account in db");
                 replaceStatement.execute();
                 nRow ++;
             }
             mDb.setTransactionSuccessful();
         }
-        catch (Exception e){
-            nRow = 0;
-        }
         finally {
             mDb.endTransaction();
         }
diff --git a/app/src/org/gnucash/android/db/SplitsDbAdapter.java b/app/src/org/gnucash/android/db/SplitsDbAdapter.java
index d6c72dec..cea64d69 100644
--- a/app/src/org/gnucash/android/db/SplitsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/SplitsDbAdapter.java
@@ -82,7 +82,7 @@ public long addSplit(Split split){
      * @param splitList {@link org.gnucash.android.model.Split} to be recorded in DB
      * @return Number of records of the newly saved split
      */
-    public long bulkAddSplits(List<Split> splitList){
+    public long bulkAddSplits(List<Split> splitList) {
         long nRow = 0;
         try {
             mDb.beginTransaction();
@@ -104,15 +104,12 @@ public long bulkAddSplits(List<Split> splitList){
                 replaceStatement.bindString(5, split.getAccountUID());
                 replaceStatement.bindString(6, split.getTransactionUID());
 
-                Log.d(TAG, "Replacing transaction split in db");
+                //Log.d(TAG, "Replacing transaction split in db");
                 replaceStatement.execute();
                 nRow++;
             }
             mDb.setTransactionSuccessful();
         }
-        catch(Exception e) {
-            nRow = 0;
-        }
         finally {
             mDb.endTransaction();
         }
diff --git a/app/src/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
index 8b69761f..b511b9b8 100644
--- a/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -121,7 +121,7 @@ public long bulkAddTransactions(List<Transaction> transactionList){
                     scheduleTransaction(transaction);
                     continue;
                 }
-                Log.d(TAG, "Replacing transaction in db");
+                //Log.d(TAG, "Replacing transaction in db");
                 replaceStatement.clearBindings();
                 replaceStatement.bindString(1, transaction.getUID());
                 replaceStatement.bindString(2, transaction.getDescription());
@@ -136,14 +136,22 @@ public long bulkAddTransactions(List<Transaction> transactionList){
             }
             mDb.setTransactionSuccessful();
         }
-        catch (Exception e) {
-            rowInserted = 0;
-        }
         finally {
             mDb.endTransaction();
         }
-        if (rowInserted != 0 && !splitList.isEmpty()) { // TODO: clear empty transactions
-            mSplitsDbAdapter.bulkAddSplits(splitList);
+        if (rowInserted != 0 && !splitList.isEmpty()) {
+            try {
+                long nSplits = mSplitsDbAdapter.bulkAddSplits(splitList);
+                Log.d(TAG, String.format("%d splits inserted", nSplits));
+            }
+            finally {
+                SQLiteStatement deleteEmptyTransaction = mDb.compileStatement("DELETE FROM " +
+                        TransactionEntry.TABLE_NAME + " WHERE NOT EXISTS ( SELECT * FROM " +
+                        SplitEntry.TABLE_NAME +
+                        " WHERE " + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_UID +
+                        " = " + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_TRANSACTION_UID + " ) ");
+                deleteEmptyTransaction.execute();
+            }
         }
         return rowInserted;
     }
