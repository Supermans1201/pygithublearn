From 27563a99132ddd600bc9ee4953569397171226fe Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sun, 3 May 2015 21:57:21 +0300
Subject: [PATCH] Clean up

---
 .../org/gnucash/android/db/SplitsDbAdapter.java    |  9 ----
 .../gnucash/android/db/TransactionsDbAdapter.java  | 52 +---------------------
 2 files changed, 2 insertions(+), 59 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
index 229754c0..5ce9eab7 100644
--- a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
@@ -308,15 +308,6 @@ private Money calculateSplitBalance(List<String> accountUIDList, String currency
         return new Money("0", currencyCode);
     }
 
-//        SELECT TOTAL ( CASE WHEN splits.type = 'DEBIT' THEN splits.amount ELSE - splits.amount END ) FROM splits , transactions WHERE splits.account_uid in ( '532ee7592d4efae7fe2418891d598e59' ) AND splits.transaction_uid = transactions.uid AND transactions.recurrence_period = 0 AND transactions.timestamp BETWEEN ?x AND ?
-//        String query = "SELECT TOTAL ( CASE WHEN splits.type = 'DEBIT' THEN splits.amount ELSE - splits.amount END )" +
-//                " FROM splits " +
-//                " INNER JOIN transactions ON transactions.uid = splits.transaction_uid" +
-//                " WHERE splits.account_uid in ( '" + TextUtils.join("' , '", accountUIDList)  + "' )" +
-//                " AND transactions.recurrence_period = 0" +
-//                " AND transactions.timestamp > 1413109811000";
-
-
     /**
      * Returns the list of splits for a transaction
      * @param transactionUID String unique ID of transaction
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index 7e04b127..9c75f2ac 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -595,54 +595,6 @@ public int deleteAllNonTemplateTransactions(){
     }
 
     /**
-     * Returns a timestamp of the earliest transaction for the specified account type
-     * @param type the account type
-     * @return the earliest transaction's timestamp. Returns 1970-01-01 00:00:00.000 if no transaction found
-     */
-    public long getTimestampOfEarliestTransaction(AccountType type) {
-        return getTimestamp("MIN", type);
-    }
-
-    /**
-     * Returns a timestamp of the latest transaction for the specified account type
-     * @param type the account type
-     * @return the latest transaction's timestamp. Returns 1970-01-01 00:00:00.000 if no transaction found
-     */
-    public long getTimestampOfLatestTransaction(AccountType type) {
-        return getTimestamp("MAX", type);
-    }
-
-    /**
-     * Returns the earliest or latest timestamp of transactions for a specific account type
-     * @param mod Mode (either MAX or MIN)
-     * @param type AccountType
-     * @return earliest or latest timestamp of transactions
-     * @see #getTimestampOfLatestTransaction(AccountType)
-     * @see #getTimestampOfEarliestTransaction(AccountType)
-     */
-    private long getTimestamp(String mod, AccountType type) {
-        String sql = "SELECT " + mod + "(" + TransactionEntry.COLUMN_TIMESTAMP + ")"
-                + " FROM " + TransactionEntry.TABLE_NAME
-                + " INNER JOIN " + SplitEntry.TABLE_NAME + " ON "
-                + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_TRANSACTION_UID + " = "
-                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_UID
-                + " INNER JOIN " + AccountEntry.TABLE_NAME + " ON "
-                + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID + " = "
-                + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_ACCOUNT_UID
-                + " WHERE " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_TYPE + " = ? AND "
-                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_TEMPLATE + " = 0";
-        Cursor cursor = mDb.rawQuery(sql, new String[]{type.toString()});
-        long timestamp= 0;
-        if (cursor != null) {
-            if (cursor.moveToFirst()) {
-                timestamp = cursor.getLong(0);
-            }
-            cursor.close();
-        }
-        return timestamp;
-    }
-
-    /**
      * Returns a timestamp of the earliest transaction for a specified account type and currency
      * @param type the account type
      * @param currencyCode the currency code
@@ -668,8 +620,8 @@ public long getTimestampOfLatestTransaction(AccountType type, String currencyCod
      * @param type AccountType
      * @param currencyCode the currency code
      * @return earliest or latest timestamp of transactions
-     * @see #getTimestampOfLatestTransaction(AccountType)
-     * @see #getTimestampOfEarliestTransaction(AccountType)
+     * @see #getTimestampOfLatestTransaction(AccountType, String)
+     * @see #getTimestampOfEarliestTransaction(AccountType, String)
      */
     private long getTimestamp(String mod, AccountType type, String currencyCode) {
         String sql = "SELECT " + mod + "(" + TransactionEntry.COLUMN_TIMESTAMP + ")"
