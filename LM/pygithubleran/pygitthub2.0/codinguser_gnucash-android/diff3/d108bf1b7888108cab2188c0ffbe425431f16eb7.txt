From d108bf1b7888108cab2188c0ffbe425431f16eb7 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Sat, 22 Aug 2015 14:43:19 +0800
Subject: [PATCH] using numerator/denomenator in export

---
 .../gnucash/android/export/xml/GncXmlExporter.java   | 10 +++++++---
 .../main/java/org/gnucash/android/model/Money.java   | 20 ++++++++++++--------
 2 files changed, 19 insertions(+), 11 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index 746b931a..0f7c4a27 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -30,6 +30,7 @@
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.Money;
 import org.gnucash.android.model.PeriodType;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.TransactionType;
@@ -268,7 +269,8 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
                         SplitEntry.TABLE_NAME+"."+ SplitEntry.COLUMN_UID + " AS split_uid",
                         SplitEntry.TABLE_NAME+"."+ SplitEntry.COLUMN_MEMO + " AS split_memo",
                         SplitEntry.TABLE_NAME+"."+ SplitEntry.COLUMN_TYPE + " AS split_type",
-                        SplitEntry.TABLE_NAME+"."+ SplitEntry.COLUMN_VALUE_NUM + " / " + SplitEntry.TABLE_NAME+"."+ SplitEntry.COLUMN_VALUE_DENOM + " AS split_amount",
+                        SplitEntry.TABLE_NAME+"."+ SplitEntry.COLUMN_VALUE_NUM + " AS split_value_num",
+                        SplitEntry.TABLE_NAME+"."+ SplitEntry.COLUMN_VALUE_DENOM + " AS split_value_denom",
                         SplitEntry.TABLE_NAME+"."+ SplitEntry.COLUMN_ACCOUNT_UID + " AS split_acct_uid"},
                         where, null,
                         TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_TIMESTAMP + " ASC , " +
@@ -392,10 +394,12 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
             xmlSerializer.endTag(null, GncXmlHelper.TAG_RECONCILED_STATE);
             // value, in the transaction's currency
             String trxType = cursor.getString(cursor.getColumnIndexOrThrow("split_type"));
-            BigDecimal splitAmount = new BigDecimal(cursor.getString(cursor.getColumnIndexOrThrow("split_amount")));
+            int splitValueNum = cursor.getInt(cursor.getColumnIndexOrThrow("split_value_num"));
+            int splitValueDenom = cursor.getInt(cursor.getColumnIndexOrThrow("split_value_denom"));
+            BigDecimal splitAmount = Money.getBigDecimal(splitValueNum, splitValueDenom);
             String strValue = "0/" + denomString;
             if (!exportTemplates) { //when doing normal transaction export
-                strValue = (trxType.equals("CREDIT") ? "-" : "") + GncXmlHelper.formatSplitAmount(splitAmount, trxCurrency);
+                strValue = (trxType.equals("CREDIT") ? "-" : "") + splitValueNum + "/" + splitValueDenom;
             }
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SPLIT_VALUE);
             xmlSerializer.text(strValue);
diff --git a/app/src/main/java/org/gnucash/android/model/Money.java b/app/src/main/java/org/gnucash/android/model/Money.java
index 8d50966f..3f89ebc2 100644
--- a/app/src/main/java/org/gnucash/android/model/Money.java
+++ b/app/src/main/java/org/gnucash/android/model/Money.java
@@ -116,13 +116,7 @@ public Money() {
 		init();
 	}
 
-	/**
-	 * Overloaded constructor
-	 * @param numerator numerator of the money instance
-	 * @param denominator denominator of the money instance
-	 * @param currency {@link Currency} associated with the <code>amount</code>
-	 */
-	public Money(long numerator, int denominator, Currency currency){
+	public static BigDecimal getBigDecimal(long numerator, int denominator) {
 		int scale;
 		if (numerator == 0 && denominator == 0) {
 			denominator = 1;
@@ -135,7 +129,17 @@ public Money(long numerator, int denominator, Currency currency){
 			default:
 				throw new InvalidParameterException("invalid denominator " + denominator);
 		}
-		this.mAmount = new BigDecimal(BigInteger.valueOf(numerator), scale);
+		return new BigDecimal(BigInteger.valueOf(numerator), scale);
+	}
+
+	/**
+	 * Overloaded constructor
+	 * @param numerator numerator of the money instance
+	 * @param denominator denominator of the money instance
+	 * @param currency {@link Currency} associated with the <code>amount</code>
+	 */
+	public Money(long numerator, int denominator, Currency currency){
+		this.mAmount = getBigDecimal(numerator, denominator);
 		this.mCurrency = currency;
 	}
 	
