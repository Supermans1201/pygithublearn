From a65edd5f51b005ac3c5867590360b1687bba897c Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Thu, 7 Aug 2014 20:49:39 +0300
Subject: [PATCH] Added support for older devices

---
 app/res/layout/fragment_numeric_keyboard.xml       | 12 +++++---
 .../android/ui/passcode/KeyboardFragment.java      |  5 ++--
 .../ui/passcode/PasscodeLockScreenActivity.java    | 11 +++-----
 .../ui/passcode/PasscodePreferenceActivity.java    |  6 ++--
 .../ui/settings/PasscodePreferenceFragment.java    |  9 ++++--
 .../android/ui/settings/SettingsActivity.java      | 32 ++++++++++++++++++++--
 6 files changed, 55 insertions(+), 20 deletions(-)

diff --git a/app/res/layout/fragment_numeric_keyboard.xml b/app/res/layout/fragment_numeric_keyboard.xml
index 869a455b..e4a007df 100644
--- a/app/res/layout/fragment_numeric_keyboard.xml
+++ b/app/res/layout/fragment_numeric_keyboard.xml
@@ -185,7 +185,8 @@
             android:cursorVisible="false"
             android:focusableInTouchMode="false"
             android:hint="*"
-            android:inputType="numberPassword"
+            android:inputType="textPassword|number"
+            android:password="true"
             android:maxLength="1"
             android:textSize="33sp" />
 
@@ -196,7 +197,8 @@
             android:cursorVisible="false"
             android:focusableInTouchMode="false"
             android:hint="*"
-            android:inputType="numberPassword"
+            android:inputType="textPassword|number"
+            android:password="true"
             android:maxLength="1"
             android:textSize="33sp" />
 
@@ -207,7 +209,8 @@
             android:cursorVisible="false"
             android:focusableInTouchMode="false"
             android:hint="*"
-            android:inputType="numberPassword"
+            android:inputType="textPassword|number"
+            android:password="true"
             android:maxLength="1"
             android:textSize="33sp" />
 
@@ -218,7 +221,8 @@
             android:cursorVisible="false"
             android:focusableInTouchMode="false"
             android:hint="*"
-            android:inputType="numberPassword"
+            android:inputType="textPassword|number"
+            android:password="true"
             android:maxLength="1"
             android:textSize="33sp" />
 
diff --git a/app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java b/app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java
index 94a46d9f..bcfddb23 100644
--- a/app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java
+++ b/app/src/org/gnucash/android/ui/passcode/KeyboardFragment.java
@@ -17,7 +17,6 @@
 package org.gnucash.android.ui.passcode;
 
 import android.app.Activity;
-import android.app.Fragment;
 import android.os.Bundle;
 import android.os.Handler;
 import android.view.LayoutInflater;
@@ -25,13 +24,15 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import com.actionbarsherlock.app.SherlockFragment;
+
 import org.gnucash.android.R;
 
 /**
  * Soft numeric keyboard for lock screen and passcode preference.
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-public class KeyboardFragment extends Fragment {
+public class KeyboardFragment extends SherlockFragment {
 
     private TextView pass1;
     private TextView pass2;
diff --git a/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java b/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
index fe5e6787..1ffc206a 100644
--- a/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
+++ b/app/src/org/gnucash/android/ui/passcode/PasscodeLockScreenActivity.java
@@ -16,19 +16,15 @@
 
 package org.gnucash.android.ui.passcode;
 
-import android.app.Activity;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.text.Editable;
-import android.text.TextWatcher;
 import android.util.Log;
-import android.view.KeyEvent;
-import android.view.View;
-import android.widget.EditText;
 import android.widget.Toast;
 
+import com.actionbarsherlock.app.SherlockFragmentActivity;
+
 import org.gnucash.android.R;
 import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.account.AccountsActivity;
@@ -37,7 +33,8 @@
  * Activity for displaying and managing the passcode lock screen.
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-public class PasscodeLockScreenActivity extends Activity implements KeyboardFragment.OnPasscodeEnteredListener {
+public class PasscodeLockScreenActivity extends SherlockFragmentActivity
+        implements KeyboardFragment.OnPasscodeEnteredListener {
 
     private static final String TAG = "PasscodeLockScreenActivity";
     private SharedPreferences sharedPreferences;
diff --git a/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java b/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
index 6b290c12..7dc7e43d 100644
--- a/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
+++ b/app/src/org/gnucash/android/ui/passcode/PasscodePreferenceActivity.java
@@ -16,12 +16,13 @@
 
 package org.gnucash.android.ui.passcode;
 
-import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
 import android.widget.TextView;
 import android.widget.Toast;
 
+import com.actionbarsherlock.app.SherlockFragmentActivity;
+
 import org.gnucash.android.R;
 import org.gnucash.android.ui.UxArgument;
 
@@ -29,7 +30,8 @@
  * Activity for entering and confirming passcode
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-public class PasscodePreferenceActivity extends Activity implements KeyboardFragment.OnPasscodeEnteredListener {
+public class PasscodePreferenceActivity extends SherlockFragmentActivity
+        implements KeyboardFragment.OnPasscodeEnteredListener {
 
     private boolean reenter = false;
     private String passcode;
diff --git a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
index 4e334fe7..599650b0 100644
--- a/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
+++ b/app/src/org/gnucash/android/ui/settings/PasscodePreferenceFragment.java
@@ -39,7 +39,10 @@
  */
 public class PasscodePreferenceFragment extends PreferenceFragment {
 
-    private static final int REQUEST_CODE = 1;
+    /**
+     * * Request code for retrieving passcode to store
+     */
+    public static final int PASSCODE_REQUEST_CODE = 2;
 
     private SharedPreferences.Editor editor;
 
@@ -75,7 +78,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                     @Override
                     public boolean onPreferenceClick(Preference preference) {
                         startActivityForResult(
-                                new Intent(getActivity(), PasscodePreferenceActivity.class), REQUEST_CODE);
+                                new Intent(getActivity(), PasscodePreferenceActivity.class), PASSCODE_REQUEST_CODE);
                         return true;
                     }
                 });
@@ -85,7 +88,7 @@ public boolean onPreferenceClick(Preference preference) {
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
 
-        if (resultCode == Activity.RESULT_OK && requestCode == REQUEST_CODE && data!= null) {
+        if (resultCode == Activity.RESULT_OK && requestCode == PASSCODE_REQUEST_CODE && data!= null) {
             editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
             editor.commit();
             Toast.makeText(getActivity(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
diff --git a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
index 106d943d..d816d376 100644
--- a/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -40,7 +40,9 @@
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Transaction;
+import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.account.AccountsActivity;
+import org.gnucash.android.ui.passcode.PasscodePreferenceActivity;
 
 import java.io.*;
 import java.util.ArrayList;
@@ -51,7 +53,7 @@
 /**
  * Activity for displaying settings and information about the application
  * @author Ngewi Fet <ngewif@gmail.com>
- *
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
 public class SettingsActivity extends SherlockPreferenceActivity implements OnPreferenceChangeListener, Preference.OnPreferenceClickListener{
 
@@ -111,6 +113,7 @@ protected void onCreate(Bundle savedInstanceState) {
 			addPreferencesFromResource(R.xml.fragment_general_preferences);
             addPreferencesFromResource(R.xml.fragment_account_preferences);
 			addPreferencesFromResource(R.xml.fragment_transaction_preferences);
+            addPreferencesFromResource(R.xml.fragment_passcode_preferences);
 			addPreferencesFromResource(R.xml.fragment_about_preferences);
 			setDefaultCurrencyListener();
 			SharedPreferences manager = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
@@ -132,6 +135,12 @@ protected void onCreate(Bundle savedInstanceState) {
 
             pref = findPreference(getString(R.string.key_restore_backup));
             pref.setOnPreferenceClickListener(this);
+
+            pref = findPreference(getString(R.string.key_change_passcode));
+            pref.setOnPreferenceClickListener(this);
+
+            pref = findPreference(getString(R.string.key_enable_passcode));
+            pref.setOnPreferenceChangeListener(this);
 		}
 	}
 
@@ -168,7 +177,12 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
 		preference.setSummary(newValue.toString());
 		if (preference.getKey().equals(getString(R.string.key_default_currency))){
 			Money.DEFAULT_CURRENCY_CODE = newValue.toString();
-		}
+		} else if (preference.getKey().equals(getString(R.string.key_enable_passcode))) {
+            Editor editor = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit();
+            editor.putBoolean(UxArgument.ENABLED_PASSCODE, (Boolean) newValue);
+            editor.commit();
+        }
+
 		return true;
 	}
 	
@@ -245,6 +259,12 @@ public boolean onPreferenceClick(Preference preference) {
             return true;
         }
 
+        if (key.equals(getString(R.string.key_change_passcode))){
+            startActivityForResult(new Intent(this, PasscodePreferenceActivity.class),
+                    PasscodePreferenceFragment.PASSCODE_REQUEST_CODE);
+            return true;
+        }
+
         return false;
     }
 
@@ -307,6 +327,14 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                 }
 
                 break;
+            case PasscodePreferenceFragment.PASSCODE_REQUEST_CODE:
+                if (data!= null) {
+                    Editor editor = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit();
+                    editor.putString(UxArgument.PASSCODE, data.getStringExtra(UxArgument.PASSCODE));
+                    editor.commit();
+                    Toast.makeText(getApplicationContext(), R.string.toast_passcode_set, Toast.LENGTH_SHORT).show();
+                }
+                break;
         }
     }
 }
