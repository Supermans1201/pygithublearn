From 3c63f283dd75ab3218a3e968c458500b3e0a91e4 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 24 Apr 2015 01:05:41 +0200
Subject: [PATCH] Added configuration for release signing

Extracted API keys to resource strings
Simplified the version name string
Updated build version
Use application ID for mime types to prevent cross-intent broadcasts (between dev and production flavors)
---
 .gitignore                                         |  1 +
 app/build.gradle                                   | 44 +++++++++++++++++-----
 app/src/main/AndroidManifest.xml                   |  6 +--
 .../gnucash/android/export/ExportAsyncTask.java    |  4 +-
 .../android/export/ExportDialogFragment.java       |  4 +-
 .../java/org/gnucash/android/model/Account.java    |  3 +-
 .../org/gnucash/android/model/Transaction.java     |  3 +-
 .../android/ui/settings/SettingsActivity.java      | 14 ++++++-
 8 files changed, 61 insertions(+), 18 deletions(-)

diff --git a/.gitignore b/.gitignore
index 443be471..094a8772 100644
--- a/.gitignore
+++ b/.gitignore
@@ -21,3 +21,4 @@ out/
 *.classpath
 # cpu profile generated by Android Studio
 /captures
+gradle.properties
diff --git a/app/build.gradle b/app/build.gradle
index ecdd766b..b4e155a4 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -5,10 +5,10 @@ apply plugin: 'com.android.application'
 def versionMajor = 1
 def versionMinor = 6
 def versionPatch = 0
-def versionBuild = 0
+def versionBuild = 1
 
 def buildTime() {
-    def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")
+    def df = new SimpleDateFormat("yyyyMMdd_HHmm'Z'")
     df.setTimeZone(TimeZone.getTimeZone("UTC"))
     return df.format(new Date())
 }
@@ -17,6 +17,7 @@ def gitSha() {
     return 'git rev-parse --short HEAD'.execute().text.trim()
 }
 
+
 android {
     compileSdkVersion 19
     buildToolsVersion "21.1.2"
@@ -31,7 +32,22 @@ android {
     applicationVariants.all { variant ->
         variant.outputs.each { output ->
             output.outputFile = new File(
-                    output.outputFile.parent, "GnucashAndroid_v${variant.versionName}.apk".replaceAll(":","-"))
+                    output.outputFile.parent, "GnucashAndroid_v${variant.versionName}.apk")
+        }
+    }
+
+    signingConfigs {
+        debug {
+            storeFile file("../debug.keystore")
+        }
+
+        if(project.hasProperty("RELEASE_STORE_FILE")) {
+            release {
+                storeFile       file(RELEASE_STORE_FILE)
+                storePassword   RELEASE_STORE_PASSWORD
+                keyAlias        RELEASE_KEY_ALIAS
+                keyPassword     RELEASE_KEY_PASSWORD
+            }
         }
     }
 
@@ -39,6 +55,9 @@ android {
         release {
             minifyEnabled false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+            if (project.hasProperty("RELEASE_STORE_FILE")){
+                signingConfig signingConfigs.release
+            }
         }
         debug {
             debuggable true
@@ -53,25 +72,30 @@ android {
             applicationId 'org.gnucash.android.devel'
             testApplicationId 'org.gnucash.android.test.devel'
             resValue "string", "app_name", "GnuCash-devel"
-            versionName "${versionMajor}.${versionMinor}.${versionPatch}-dev${versionBuild} @rev ${gitSha()} - Built ${buildTime()} "
+            resValue "string", "dropbox_app_key", "dhjh8ke9wf05948"
+            resValue "string", "dropbox_app_secret", "h2t9fphj3nr4wkw"
+            versionName "${versionMajor}.${versionMinor}.${versionPatch}-dev${versionBuild}_${buildTime()}"
         }
 
         beta {
             resValue "string", "app_name", "GnuCash - beta"
-            versionName "${versionMajor}.${versionMinor}.${versionPatch}-beta${versionBuild} - Built: ${buildTime()}"
+            if (project.hasProperty("RELEASE_DROPBOX_APP_KEY")){
+                resValue "string", "dropbox_app_key", RELEASE_DROPBOX_APP_KEY
+                resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
+            }
+            versionName "${versionMajor}.${versionMinor}.${versionPatch}-beta${versionBuild}_${buildTime()}"
         }
 
         production {
             resValue "string", "app_name", "GnuCash"
+            if (project.hasProperty("RELEASE_DROPBOX_APP_KEY")){
+                resValue "string", "dropbox_app_key", RELEASE_DROPBOX_APP_KEY
+                resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
+            }
         }
 
     }
 
-    signingConfigs {
-        debug {
-            storeFile file("../debug.keystore")
-        }
-    }
     
     compileOptions { //we want switch with strings during xml parsing
         sourceCompatibility JavaVersion.VERSION_1_7
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 96b72c28..919efda0 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -23,7 +23,7 @@
     <uses-sdk android:minSdkVersion="10" android:targetSdkVersion="19"/>
     
     <permission-group 
-        android:name="org.gnucash.android.permission.group.GNUCASH"
+        android:name="${applicationId}.permission.group.GNUCASH"
         android:label="@string/label_permission_group" 
         android:description="@string/description_permission_group" />
     
@@ -131,7 +131,7 @@
             <intent-filter>
                 <action android:name="android.intent.action.INSERT" />
                 <category android:name="android.intent.category.DEFAULT" />
-                <data android:mimeType="vnd.android.cursor.item/vnd.org.gnucash.android.transaction"/>
+                <data android:mimeType="vnd.android.cursor.item/vnd.${applicationId}.transaction"/>
             </intent-filter>
         </receiver>
         <receiver android:name=".receivers.AccountCreator"
@@ -141,7 +141,7 @@
             <intent-filter>
                 <action android:name="android.intent.action.INSERT" />
                 <category android:name="android.intent.category.DEFAULT" />
-                <data android:mimeType="vnd.android.cursor.item/vnd.org.gnucash.android.account"/>
+                <data android:mimeType="vnd.android.cursor.item/vnd.${applicationId}.account"/>
             </intent-filter>
         </receiver>
         <receiver android:name=".receivers.TransactionAppWidgetProvider" >
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index e4339798..aad7f13b 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -300,8 +300,10 @@ public String getExportMimeType(){
     }
 
     private void copyExportToDropbox() {
+        String dropboxAppKey = mContext.getString(R.string.dropbox_app_key, SettingsActivity.DROPBOX_APP_KEY);
+        String dropboxAppSecret = mContext.getString(R.string.dropbox_app_secret, SettingsActivity.DROPBOX_APP_SECRET);
         DbxAccountManager mDbxAcctMgr = DbxAccountManager.getInstance(mContext.getApplicationContext(),
-                SettingsActivity.DROPBOX_APP_KEY, SettingsActivity.DROPBOX_APP_SECRET);
+                dropboxAppKey, dropboxAppSecret);
         DbxFile dbExportFile = null;
         try {
             DbxFileSystem dbxFileSystem = DbxFileSystem.forAccount(mDbxAcctMgr.getLinkedAccount());
diff --git a/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java b/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java
index 23d7ee8e..3675b89f 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java
@@ -245,8 +245,10 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
 					case 1:
 						recurrenceOptionsView.setVisibility(View.VISIBLE);
 						mExportTarget = ExportParams.ExportTarget.DROPBOX;
+                        String dropboxAppKey = getString(R.string.dropbox_app_key, SettingsActivity.DROPBOX_APP_KEY);
+                        String dropboxAppSecret = getString(R.string.dropbox_app_secret, SettingsActivity.DROPBOX_APP_SECRET);
 						DbxAccountManager mDbxAccountManager = DbxAccountManager.getInstance(getActivity().getApplicationContext(),
-								SettingsActivity.DROPBOX_APP_KEY, SettingsActivity.DROPBOX_APP_SECRET);
+								dropboxAppKey, dropboxAppSecret);
 						if (!mDbxAccountManager.hasLinkedAccount()){
 							mDbxAccountManager.startLink(getActivity(), 0);
 						}
diff --git a/app/src/main/java/org/gnucash/android/model/Account.java b/app/src/main/java/org/gnucash/android/model/Account.java
index 2af9acff..036a7e47 100644
--- a/app/src/main/java/org/gnucash/android/model/Account.java
+++ b/app/src/main/java/org/gnucash/android/model/Account.java
@@ -17,6 +17,7 @@
 package org.gnucash.android.model;
 
 
+import org.gnucash.android.BuildConfig;
 import org.gnucash.android.export.ofx.OfxHelper;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
@@ -43,7 +44,7 @@
 	 * The MIME type for accounts in GnucashMobile
 	 * This is used when sending intents from third-party applications
 	 */
-	public static final String MIME_TYPE = "vnd.android.cursor.item/vnd.org.gnucash.android.account";
+	public static final String MIME_TYPE = "vnd.android.cursor.item/vnd." + BuildConfig.APPLICATION_ID + ".account";
 
     /*
         ^             anchor for start of string
diff --git a/app/src/main/java/org/gnucash/android/model/Transaction.java b/app/src/main/java/org/gnucash/android/model/Transaction.java
index d9fc948c..09b507ec 100644
--- a/app/src/main/java/org/gnucash/android/model/Transaction.java
+++ b/app/src/main/java/org/gnucash/android/model/Transaction.java
@@ -18,6 +18,7 @@
 
 import android.content.Intent;
 
+import org.gnucash.android.BuildConfig;
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.export.ofx.OfxHelper;
 import org.gnucash.android.model.Account.OfxAccountType;
@@ -41,7 +42,7 @@
 	 * Mime type for transactions in Gnucash.
 	 * Used for recording transactions through intents
 	 */
-	public static final String MIME_TYPE 			= "vnd.android.cursor.item/vnd.org.gnucash.android.transaction";
+	public static final String MIME_TYPE 			= "vnd.android.cursor.item/vnd." + BuildConfig.APPLICATION_ID + ".transaction";
 
 	/**
 	 * Key for passing the account unique Identifier as an argument through an {@link Intent}
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index 7add1723..051fe8fc 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -88,13 +88,23 @@
 public class SettingsActivity extends SherlockPreferenceActivity implements OnPreferenceChangeListener, Preference.OnPreferenceClickListener{
 
     public static final String LOG_TAG = "SettingsActivity";
+
     /**
      * Allowed delay between two consecutive taps of a setting for it to be considered a double tap
      * Used on Android v2.3.3 or lower devices where dialogs cannot be instantiated easily in settings
      */
     public static final int DOUBLE_TAP_DELAY = 2000;
+
+    /**
+     * Testing app key for DropBox API
+     */
     final static public String DROPBOX_APP_KEY      = "dhjh8ke9wf05948";
+
+    /**
+     * Testing app secret for DropBox API
+     */
     final static public String DROPBOX_APP_SECRET   = "h2t9fphj3nr4wkw";
+
     /**
      * Collects references to the UI elements and binds click listeners
      */
@@ -135,8 +145,10 @@ public void onBuildHeaders(List<Header> target) {
 	protected void onCreate(Bundle savedInstanceState) {		
 		super.onCreate(savedInstanceState);
 
+        String dropboxAppKey = getString(R.string.dropbox_app_key, DROPBOX_APP_KEY);
+        String dropboxAppSecret = getString(R.string.dropbox_app_secret, DROPBOX_APP_SECRET);
         mDbxAccountManager = DbxAccountManager.getInstance(getApplicationContext(),
-                DROPBOX_APP_KEY, DROPBOX_APP_SECRET);
+                dropboxAppKey, dropboxAppSecret);
 
         mGoogleApiClient = getGoogleApiClient(this);
 
