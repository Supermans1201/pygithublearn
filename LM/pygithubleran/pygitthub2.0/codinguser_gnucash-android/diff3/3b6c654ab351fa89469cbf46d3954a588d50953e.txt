From 3b6c654ab351fa89469cbf46d3954a588d50953e Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 19 Dec 2013 12:54:29 +0100
Subject: [PATCH] Added UI flag for placeholder accounts Added setting for
 default transfer account to ease entering of transactions - #122

---
 app/res/layout/fragment_new_account.xml            |  59 ++++---
 app/res/layout/fragment_new_transaction.xml        |   2 +-
 app/res/layout/list_item_transaction.xml           |   2 +-
 app/res/values-de/strings.xml                      |   2 +
 app/res/values-el/strings.xml                      |   2 +
 app/res/values-es-rMX/strings.xml                  |   2 +
 app/res/values-es/strings.xml                      |   2 +
 app/res/values-fr/strings.xml                      |   2 +
 app/res/values-hu/strings.xml                      |   2 +
 app/res/values-it/strings.xml                      |   2 +
 app/res/values-nb/strings.xml                      |   2 +
 app/res/values-nl/strings.xml                      |   2 +
 app/res/values-pt-rBR/strings.xml                  |   2 +
 app/res/values-ru/strings.xml                      |   2 +
 app/res/values-zh/strings.xml                      |   2 +
 app/res/values/strings.xml                         |   2 +
 app/res/values/styles.xml                          |   4 +-
 app/src/org/gnucash/android/data/Account.java      |  27 +++-
 .../org/gnucash/android/db/AccountsDbAdapter.java  |  28 +++-
 .../org/gnucash/android/db/DatabaseAdapter.java    |   1 +
 app/src/org/gnucash/android/db/DatabaseHelper.java |  31 +++-
 .../android/ui/accounts/AddAccountFragment.java    | 169 ++++++++++++++++++---
 .../ui/transactions/NewTransactionFragment.java    |  47 +++---
 .../RecurringTransactionsListFragment.java         |   4 +-
 .../ui/transactions/TransactionsListFragment.java  |   4 +-
 .../android/test/ui/AccountsActivityTest.java      |   2 +-
 26 files changed, 328 insertions(+), 78 deletions(-)

diff --git a/app/res/layout/fragment_new_account.xml b/app/res/layout/fragment_new_account.xml
index 8055fbcd..a4c71b12 100644
--- a/app/res/layout/fragment_new_account.xml
+++ b/app/res/layout/fragment_new_account.xml
@@ -21,19 +21,16 @@
     <LinearLayout
             android:layout_width="match_parent"
             android:layout_height="match_parent"
+            android:padding="@dimen/dialog_padding"
             android:orientation="vertical" >
 
         <EditText
                 android:id="@+id/edit_text_account_name"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:layout_marginLeft="10dp"
-                android:layout_marginRight="10dp"
-                android:layout_marginBottom="20dp"
+                android:layout_marginBottom="@dimen/form_row_bottom_margin"
                 android:ems="15"
                 android:inputType="textCapWords"
-                android:minHeight="?android:attr/listPreferredItemHeight"
                 android:singleLine="true"
                 android:ellipsize="start"
                 android:hint="@string/label_account_name"
@@ -46,58 +43,74 @@
                 android:layout_height="wrap_content"
                 android:layout_width="wrap_content"
                 android:layout_marginBottom="-8dip"
-                android:layout_marginLeft="10dp"
                 style="@style/TextAppearance.EditTransaction_LabelSmall" />
 
         <Spinner android:id="@+id/input_currency_spinner"
                  android:layout_width="match_parent"
                  android:layout_height="wrap_content"
-                 android:layout_marginLeft="10dp"
-                 android:layout_marginRight="10dp"
-                 android:layout_marginBottom="20dp"
-                 style="@style/ListItem"		/>
+                 android:layout_marginBottom="@dimen/form_row_bottom_margin" />
 
         <TextView
                 android:text="@string/label_account_type"
                 android:layout_height="wrap_content"
                 android:layout_width="wrap_content"
-                android:layout_marginBottom="-8dip"
-                android:layout_marginLeft="10dp"
+                android:layout_marginBottom="-8dp"
                 style="@style/TextAppearance.EditTransaction_LabelSmall" />
 
         <Spinner android:id="@+id/input_account_type_spinner"
                  android:layout_width="match_parent"
                  android:layout_height="wrap_content"
-                 android:layout_marginLeft="10dp"
-                 android:layout_marginRight="10dp"
-                 android:layout_marginBottom="20dp"
-                 style="@style/ListItem"		/>
+                 android:layout_marginBottom="@dimen/form_row_bottom_margin" />
+
+        <CheckBox android:id="@+id/checkbox_placeholder_account"
+                  android:layout_width="match_parent"
+                  android:layout_height="wrap_content"
+                  android:layout_marginBottom="@dimen/form_row_bottom_margin"
+                  android:text="@string/label_placeholder_account" />
 
         <TextView android:id="@+id/label_parent_account"
                   android:text="@string/label_parent_account"
                   android:layout_height="wrap_content"
                   android:layout_width="wrap_content"
-                  android:layout_marginLeft="10dp"
                   android:layout_marginBottom="-8dip"
                   style="@style/TextAppearance.EditTransaction_LabelSmall" />
 
         <LinearLayout android:id="@+id/layout_parent_account"
                       android:layout_width="match_parent"
                       android:layout_height="wrap_content"
-                      style="@style/ListItem"
+                      android:layout_marginBottom="@dimen/form_row_bottom_margin"
                       android:orientation="horizontal" >
 
-            <CheckBox android:id="@+id/checkbox"
+            <CheckBox android:id="@+id/checkbox_parent_account"
                       android:layout_width="wrap_content"
                       android:layout_height="wrap_content"
                       android:focusable="false"        />
             <Spinner
                     android:id="@+id/input_parent_account"
                     android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="10dp"
-                    android:layout_marginRight="10dp"
-                    android:minHeight="?android:attr/listPreferredItemHeight" />
+                    android:layout_height="wrap_content" />
+        </LinearLayout>
+
+        <TextView android:id="@+id/label_default_transfer_account"
+                  android:text="@string/label_default_transfer_account"
+                  android:layout_height="wrap_content"
+                  android:layout_width="wrap_content"
+                  android:layout_marginBottom="-8dip"
+                  style="@style/TextAppearance.EditTransaction_LabelSmall" />
+
+        <LinearLayout android:id="@+id/layout_default_transfer_account"
+                      android:layout_width="match_parent"
+                      android:layout_height="wrap_content"
+                      android:orientation="horizontal" >
+
+            <CheckBox android:id="@+id/checkbox_default_transfer_account"
+                      android:layout_width="wrap_content"
+                      android:layout_height="wrap_content"
+                      android:focusable="false" />
+            <Spinner
+                    android:id="@+id/input_default_transfer_account"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content" />
         </LinearLayout>
     </LinearLayout>
 </ScrollView>
\ No newline at end of file
diff --git a/app/res/layout/fragment_new_transaction.xml b/app/res/layout/fragment_new_transaction.xml
index 896ae891..e3108a13 100644
--- a/app/res/layout/fragment_new_transaction.xml
+++ b/app/res/layout/fragment_new_transaction.xml
@@ -30,7 +30,7 @@
 	        android:layout_width="match_parent"
 	        android:layout_height="wrap_content"
 	        android:hint="@string/label_transaction_name"
-	        android:layout_marginBottom="@dimen/dialog_padding"
+	        android:layout_marginBottom="@dimen/form_row_bottom_margin"
 	        android:inputType="textCapSentences"
             android:imeOptions="actionNext"
             android:nextFocusDown="@+id/input_transaction_amount"
diff --git a/app/res/layout/list_item_transaction.xml b/app/res/layout/list_item_transaction.xml
index 20bad890..a78b39af 100644
--- a/app/res/layout/list_item_transaction.xml
+++ b/app/res/layout/list_item_transaction.xml
@@ -37,7 +37,7 @@
             android:orientation="horizontal">
 
         <CheckBox
-                android:id="@+id/checkbox"
+                android:id="@+id/checkbox_parent_account"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:focusable="false"
diff --git a/app/res/values-de/strings.xml b/app/res/values-de/strings.xml
index a345c590..82bd432f 100644
--- a/app/res/values-de/strings.xml
+++ b/app/res/values-de/strings.xml
@@ -349,6 +349,8 @@
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d Unterkonto</item>
         <item quantity="other">%d Unterkonten</item>
diff --git a/app/res/values-el/strings.xml b/app/res/values-el/strings.xml
index 2981624f..27f13a6a 100644
--- a/app/res/values-el/strings.xml
+++ b/app/res/values-el/strings.xml
@@ -363,6 +363,8 @@
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d -</item>
         <item quantity="other">%d -</item>
diff --git a/app/res/values-es-rMX/strings.xml b/app/res/values-es-rMX/strings.xml
index fd47ce94..f89d4cc8 100644
--- a/app/res/values-es-rMX/strings.xml
+++ b/app/res/values-es-rMX/strings.xml
@@ -347,6 +347,8 @@
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d subcuenta</item>
         <item quantity="other">%d subcuentas</item>
diff --git a/app/res/values-es/strings.xml b/app/res/values-es/strings.xml
index fd587c00..e77336c8 100644
--- a/app/res/values-es/strings.xml
+++ b/app/res/values-es/strings.xml
@@ -347,6 +347,8 @@
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d sub-cuenta</item>
         <item quantity="other">%d sub-cuentas</item>
diff --git a/app/res/values-fr/strings.xml b/app/res/values-fr/strings.xml
index dde1f202..3a0960df 100644
--- a/app/res/values-fr/strings.xml
+++ b/app/res/values-fr/strings.xml
@@ -345,6 +345,8 @@
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d sous-compte</item>
         <item quantity="other">%d sous-comptes</item>
diff --git a/app/res/values-hu/strings.xml b/app/res/values-hu/strings.xml
index 546bc129..b604bab6 100644
--- a/app/res/values-hu/strings.xml
+++ b/app/res/values-hu/strings.xml
@@ -348,6 +348,8 @@
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d sub-account</item>
         <item quantity="other">%d sub-accounts</item>
diff --git a/app/res/values-it/strings.xml b/app/res/values-it/strings.xml
index d2545f5f..6a2585cf 100644
--- a/app/res/values-it/strings.xml
+++ b/app/res/values-it/strings.xml
@@ -348,6 +348,8 @@
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d sotto-conto</item>
         <item quantity="other">%d sotto-conti</item>
diff --git a/app/res/values-nb/strings.xml b/app/res/values-nb/strings.xml
index 86a3aaaa..bcdab39c 100644
--- a/app/res/values-nb/strings.xml
+++ b/app/res/values-nb/strings.xml
@@ -350,6 +350,8 @@ format og importeres i regnskapsprogrammet GnuCash for PC.</string>
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d under-konto</item>
         <item quantity="other">%d under-kontoer</item>
diff --git a/app/res/values-nl/strings.xml b/app/res/values-nl/strings.xml
index 21e347f2..ec173452 100644
--- a/app/res/values-nl/strings.xml
+++ b/app/res/values-nl/strings.xml
@@ -349,6 +349,8 @@
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d sub-account</item>
         <item quantity="other">%d sub-accounts</item>
diff --git a/app/res/values-pt-rBR/strings.xml b/app/res/values-pt-rBR/strings.xml
index c1b33e4c..79e6c612 100644
--- a/app/res/values-pt-rBR/strings.xml
+++ b/app/res/values-pt-rBR/strings.xml
@@ -347,6 +347,8 @@
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d sub-contas</item>
         <item quantity="other">%d sub-contas</item>
diff --git a/app/res/values-ru/strings.xml b/app/res/values-ru/strings.xml
index dc031007..7954e682 100644
--- a/app/res/values-ru/strings.xml
+++ b/app/res/values-ru/strings.xml
@@ -345,6 +345,8 @@
     <string name="title_progress_exporting_transactions"> </string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d  </item>
         <item quantity="other">%d .  </item>
diff --git a/app/res/values-zh/strings.xml b/app/res/values-zh/strings.xml
index cd569de1..c1f31a64 100644
--- a/app/res/values-zh/strings.xml
+++ b/app/res/values-zh/strings.xml
@@ -345,6 +345,8 @@
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d </item>
         <item quantity="other">%d </item>
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index dfd87cf2..71805a8f 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -547,6 +547,8 @@
     <string name="key_recurring_transaction_ids">recurring_transaction_ids</string>
     <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
     <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+    <string name="label_placeholder_account">Placeholder account</string>
+    <string name="label_default_transfer_account">Default Transfer Account</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d sub-account</item>
         <item quantity="other">%d sub-accounts</item>
diff --git a/app/res/values/styles.xml b/app/res/values/styles.xml
index cd484ec6..19b863a2 100644
--- a/app/res/values/styles.xml
+++ b/app/res/values/styles.xml
@@ -20,8 +20,8 @@
         <item name="android:minHeight">?android:attr/listPreferredItemHeight</item>
     </style>
     <style name="ListItem" parent="style/ListItemContainerBase">
-        <item name="android:paddingLeft">10dp</item>
-        <item name="android:paddingRight">10dp</item>
+        <item name="android:paddingLeft">@dimen/dialog_padding</item>
+        <item name="android:paddingRight">@dimen/dialog_padding</item>
         <item name="android:paddingTop">8dp</item>
         <item name="android:paddingBottom">8dp</item>        
         <item name="android:gravity">center_vertical</item>
diff --git a/app/src/org/gnucash/android/data/Account.java b/app/src/org/gnucash/android/data/Account.java
index 82df0fd5..59886eb3 100644
--- a/app/src/org/gnucash/android/data/Account.java
+++ b/app/src/org/gnucash/android/data/Account.java
@@ -50,7 +50,7 @@
 	 */
 	public static final String MIME_TYPE = "vnd.android.cursor.item/vnd.org.gnucash.android.account";
 
-	/**
+    /**
 	 * The type of account
 	 * This are the different types specified by the OFX format and 
 	 * they are currently not used except for exporting
@@ -116,6 +116,12 @@ public boolean hasInvertedCredit(){
 	private String mParentAccountUID;
 
     /**
+     * Save UID of a default account for transfers.
+     * All transactions in this account will by default be transfers to the other account
+     */
+    private String mDefaultTransferAccountUID;
+
+    /**
      * Flag for placeholder accounts.
      * These accounts cannot have transactions
      */
@@ -362,7 +368,24 @@ public void setPlaceHolderFlag(boolean isPlaceholder){
         mPlaceholderAccount = isPlaceholder;
     }
 
-	/**
+    /**
+     * Return the unique ID of accounts to which to default transfer transactions to
+     * @return Unique ID string of default transfer account
+     */
+    public String getDefaultTransferAccountUID() {
+        return mDefaultTransferAccountUID;
+    }
+
+    /**
+     * Set the unique ID of account which is the default transfer target
+     * @param defaultTransferAccountUID Unique ID string of default transfer account
+     */
+    public void setDefaultTransferAccountUID(String defaultTransferAccountUID) {
+        this.mDefaultTransferAccountUID = defaultTransferAccountUID;
+    }
+
+
+    /**
 	 * Maps the <code>accountType</code> to the corresponding account type.
 	 * <code>accountType</code> have corresponding values to GnuCash desktop
 	 * @param accountType {@link AccountType} of an account
diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index 4ad1e583..ecd7b4e7 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -74,7 +74,8 @@ public long addAccount(Account account){
 		contentValues.put(DatabaseHelper.KEY_UID, account.getUID());
 		contentValues.put(DatabaseHelper.KEY_CURRENCY_CODE, account.getCurrency().getCurrencyCode());
 		contentValues.put(DatabaseHelper.KEY_PARENT_ACCOUNT_UID, account.getParentUID());
-		contentValues.put(DatabaseHelper.KEY_PLACEHOLDER, account.isPlaceholderAccount() ? 1 : 0);
+        contentValues.put(DatabaseHelper.KEY_DEFAULT_TRANSFER_ACCOUNT_UID, account.getDefaultTransferAccountUID());
+        contentValues.put(DatabaseHelper.KEY_PLACEHOLDER, account.isPlaceholderAccount() ? 1 : 0);
 
 		long rowId = -1;
 		if ((rowId = getAccountID(account.getUID())) > 0){
@@ -180,6 +181,7 @@ public Account buildAccountInstance(Cursor c){
 		account.setCurrency(Currency.getInstance(c.getString(DatabaseAdapter.COLUMN_CURRENCY_CODE)));
 		account.setTransactions(mTransactionsAdapter.getAllTransactionsForAccount(uid));
         account.setPlaceHolderFlag(c.getInt(DatabaseAdapter.COLUMN_PLACEHOLDER) == 1);
+        account.setDefaultTransferAccountUID(c.getString(DatabaseAdapter.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID));
 		return account;
 	}
 		
@@ -587,6 +589,30 @@ public String getAccountName(String accountUID){
     }
 
     /**
+     * Returns the default transfer account record ID for the account with UID <code>accountUID</code>
+     * @param accountID Database ID of the account record
+     * @return Record ID of default transfer account
+     */
+    public long getDefaultTransferAccountID(long accountID){
+        Cursor cursor = mDb.query(DatabaseHelper.ACCOUNTS_TABLE_NAME,
+                new String[]{DatabaseHelper.KEY_ROW_ID, DatabaseHelper.KEY_DEFAULT_TRANSFER_ACCOUNT_UID},
+                DatabaseHelper.KEY_ROW_ID + " = " + accountID,
+                null, null, null, null);
+
+        if (cursor == null || cursor.getCount() < 1){
+            return 0;
+        } else {
+            cursor.moveToFirst();
+        }
+
+        String defaultTransferAccountUID = cursor.getString(
+                cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_DEFAULT_TRANSFER_ACCOUNT_UID));
+        cursor.close();
+
+        return getAccountID(defaultTransferAccountUID);
+    }
+
+    /**
      * Returns the full account name including the account hierarchy (parent accounts)
      * @param accountUID Unique ID of account
      * @return Fully qualified (with parent hierarchy) account name
diff --git a/app/src/org/gnucash/android/db/DatabaseAdapter.java b/app/src/org/gnucash/android/db/DatabaseAdapter.java
index d5997965..da214643 100644
--- a/app/src/org/gnucash/android/db/DatabaseAdapter.java
+++ b/app/src/org/gnucash/android/db/DatabaseAdapter.java
@@ -55,6 +55,7 @@
 	public static final int COLUMN_CURRENCY_CODE        = 4;
 	public static final int COLUMN_PARENT_ACCOUNT_UID   = 5;
     public static final int COLUMN_PLACEHOLDER          = 6;
+    public static final int COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID = 7;
 	
 	/**
 	 * {@link DatabaseHelper} for creating and opening the database
diff --git a/app/src/org/gnucash/android/db/DatabaseHelper.java b/app/src/org/gnucash/android/db/DatabaseHelper.java
index 73ae65d6..5cb0b356 100644
--- a/app/src/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/org/gnucash/android/db/DatabaseHelper.java
@@ -107,7 +107,13 @@
 	 * Account which the origin account this transaction in double entry mode
 	 */
 	public static final String KEY_DOUBLE_ENTRY_ACCOUNT_UID 	= "double_account_uid";
-	
+
+    /**
+     * Each account has a default target for transfers when in double entry mode unless otherwise specified.
+     * This key holds the UID of the default transfer account for double entries.
+     */
+    public static final String KEY_DEFAULT_TRANSFER_ACCOUNT_UID = "default_transfer_account_uid";
+
 	/**
 	 * Transaction description database column
 	 */
@@ -151,6 +157,7 @@
 			+ KEY_CURRENCY_CODE + " varchar(255) not null, "
 			+ KEY_PARENT_ACCOUNT_UID + " varchar(255), "
             + KEY_PLACEHOLDER + " tinyint default 0, "
+            + KEY_DEFAULT_TRANSFER_ACCOUNT_UID + " varchar(255), "
 			+ "UNIQUE (" + KEY_UID + ")"	
 			+ ");";
 	
@@ -197,7 +204,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 		if (oldVersion < newVersion){
 			//introducing double entry accounting
 			Log.i(TAG, "Upgrading database to version " + newVersion);
-			if (oldVersion == 1 && newVersion == 2){		
+			if (oldVersion == 1 && newVersion >= 2){
 				Log.i(TAG, "Adding column for splitting transactions");
 				String addColumnSql = "ALTER TABLE " + TRANSACTIONS_TABLE_NAME + 
 									" ADD COLUMN " + KEY_DOUBLE_ENTRY_ACCOUNT_UID + " varchar(255)";
@@ -216,25 +223,37 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
                 ContentValues cv = new ContentValues();
                 cv.put(KEY_TYPE, AccountType.CASH.toString());
                 db.update(ACCOUNTS_TABLE_NAME, cv, null, null);
+
+                oldVersion = 2;
             }
 			
 
-            if (oldVersion == 2 && newVersion == 3){
+            if (oldVersion == 2 && newVersion >= 3){
                 Log.i(TAG, "Adding flag for placeholder accounts");
                 String addPlaceHolderAccountFlagSql = "ALTER TABLE " + ACCOUNTS_TABLE_NAME +
                         " ADD COLUMN " + KEY_PLACEHOLDER + " tinyint default 0";
 
                 db.execSQL(addPlaceHolderAccountFlagSql);
+                oldVersion = 3;
             }
 
-            if (oldVersion == 3 && newVersion == 4){
+            if (oldVersion == 3 && newVersion >= 4){
                 Log.i(TAG, "Updating database to version 4");
                 String addRecurrencePeriod = "ALTER TABLE " + TRANSACTIONS_TABLE_NAME +
                         " ADD COLUMN " + KEY_RECURRENCE_PERIOD + " integer default 0";
+
+                String addDefaultTransferAccount = "ALTER TABLE " + ACCOUNTS_TABLE_NAME
+                        + " ADD COLUMN " + KEY_DEFAULT_TRANSFER_ACCOUNT_UID + " varchar(255)";
+
                 db.execSQL(addRecurrencePeriod);
+                db.execSQL(addDefaultTransferAccount);
+
+                oldVersion = 4;
             }
-		} else {
-			Log.i(TAG, "Cannot downgrade database.");
 		}
+
+        if (oldVersion != newVersion) {
+            Log.i(TAG, "Upgrade for the database failed. The Database is currently at version " + oldVersion);
+        }
 	}
 }
diff --git a/app/src/org/gnucash/android/ui/accounts/AddAccountFragment.java b/app/src/org/gnucash/android/ui/accounts/AddAccountFragment.java
index efe149c6..c2ca9b37 100644
--- a/app/src/org/gnucash/android/ui/accounts/AddAccountFragment.java
+++ b/app/src/org/gnucash/android/ui/accounts/AddAccountFragment.java
@@ -22,6 +22,8 @@
 
 import android.app.Activity;
 import android.content.Intent;
+import android.content.SharedPreferences;
+import android.preference.PreferenceManager;
 import org.gnucash.android.R;
 import org.gnucash.android.data.Account;
 import org.gnucash.android.data.Money;
@@ -89,17 +91,66 @@
 	 */
 	private Account mAccount = null;
 
-	private Cursor mCursor;
-	
-	private SimpleCursorAdapter mCursorAdapter;
-	
+    /**
+     * Cursor which will hold set of eligible parent accounts
+     */
+	private Cursor mParentAccountCursor;
+
+    /**
+     * SimpleCursorAdapter for the parent account spinner
+     * @see QualifiedAccountNameCursorAdapter
+     */
+	private SimpleCursorAdapter mParentAccountCursorAdapter;
+
+    /**
+     * Spinner for parent account list
+     */
 	private Spinner mParentAccountSpinner;
 
+    /**
+     * Checkbox which activates the parent account spinner when selected
+     * Leaving this unchecked means it is a top-level root account
+     */
 	private CheckBox mParentCheckBox;
 
+    /**
+     * Spinner for the account type
+     * @see org.gnucash.android.data.Account.AccountType
+     */
     private Spinner mAccountTypeSpinner;
 
-	/**
+    /**
+     * Checkbox for activating the default transfer account spinner
+     */
+    private CheckBox mDefaultTransferAccountCheckBox;
+
+    /**
+     * Spinner for selecting the default transfer account
+     */
+    private Spinner mDefaulTransferAccountSpinner;
+
+    /**
+     * Cursor holding data set of eligible transfer accounts
+     */
+    private Cursor mDefaultTransferAccountCursor;
+
+    /**
+     * Checkbox indicating if account is a placeholder account
+     */
+    private CheckBox mPlaceholderCheckBox;
+
+    /**
+     * Cursor adapter which binds to the spinner for default transfer account
+     */
+    private SimpleCursorAdapter mDefaultTransferAccountCursorAdapter;
+
+    /**
+     * Flag indicating if double entry transactions are enabled
+     */
+    private boolean mUseDoubleEntry;
+
+
+    /**
 	 * Default constructor
 	 * Required, else the app crashes on screen rotation
 	 */
@@ -125,6 +176,9 @@ public void onCreate(Bundle savedInstanceState) {
         if (mAccountsDbAdapter == null){
             mAccountsDbAdapter = new AccountsDbAdapter(getSherlockActivity());
         }
+
+        SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
+        mUseDoubleEntry = sharedPrefs.getBoolean(getString(R.string.key_use_double_entry), false);
 	}
 	
 	/**
@@ -140,11 +194,12 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 		mNameEditText.requestFocus();
 
         mAccountTypeSpinner = (Spinner) view.findViewById(R.id.input_account_type_spinner);
+        mPlaceholderCheckBox = (CheckBox) view.findViewById(R.id.checkbox_placeholder_account);
 
 		mParentAccountSpinner = (Spinner) view.findViewById(R.id.input_parent_account);
 		mParentAccountSpinner.setEnabled(false);
 		
-		mParentCheckBox = (CheckBox) view.findViewById(R.id.checkbox);
+		mParentCheckBox = (CheckBox) view.findViewById(R.id.checkbox_parent_account);
 		mParentCheckBox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
 			
 			@Override
@@ -153,6 +208,17 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
 			}
 		});
 
+        mDefaulTransferAccountSpinner = (Spinner) view.findViewById(R.id.input_default_transfer_account);
+        mDefaulTransferAccountSpinner.setEnabled(false);
+
+        mDefaultTransferAccountCheckBox = (CheckBox) view.findViewById(R.id.checkbox_default_transfer_account);
+        mDefaultTransferAccountCheckBox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
+                mDefaulTransferAccountSpinner.setEnabled(isChecked);
+            }
+        });
+
 		return view;
 	}
 	
@@ -180,6 +246,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
         //need to load the cursor adapters for the spinners before initializing the views
         loadParentAccountList();
         loadAccountTypesList();
+        loadDefaultTransferAccoutList();
+        setDefaultTransferAccountInputsVisible(mUseDoubleEntry);
 
         if (mAccount != null){
             initializeViewsWithAccount(mAccount);
@@ -204,6 +272,13 @@ private void initializeViewsWithAccount(Account account){
         long parentAccountId = mAccountsDbAdapter.getAccountID(account.getParentUID());
         setParentAccountSelection(parentAccountId);
 
+        if (mUseDoubleEntry) {
+            long doubleDefaultAccountId = mAccountsDbAdapter.getAccountID(account.getDefaultTransferAccountUID());
+            setDefaultTransferAccountSelection(doubleDefaultAccountId);
+        }
+
+        mPlaceholderCheckBox.setChecked(account.isPlaceholderAccount());
+
         String[] accountTypeEntries = getResources().getStringArray(R.array.account_type_entries);
         int accountTypeIndex = Arrays.asList(accountTypeEntries).indexOf(account.getAccountType().name());
         mAccountTypeSpinner.setSelection(accountTypeIndex);
@@ -217,7 +292,17 @@ private void initializeViews(){
 
         long parentAccountId = getArguments().getLong(AccountsListFragment.ARG_PARENT_ACCOUNT_ID);
         setParentAccountSelection(parentAccountId);
+    }
 
+    /**
+     * Toggles the visibility of the default transfer account input fields.
+     * This field is irrelevant for users who do not use double accounting
+     */
+    private void setDefaultTransferAccountInputsVisible(boolean visible) {
+        final int visibility = visible ? View.VISIBLE : View.GONE;
+        final View view = getView();
+        view.findViewById(R.id.layout_default_transfer_account).setVisibility(visibility);
+        view.findViewById(R.id.label_default_transfer_account).setVisibility(visibility);
     }
 
     /**
@@ -242,14 +327,33 @@ private void setParentAccountSelection(long parentAccountId){
         } else
             return;
 
-        for (int pos = 0; pos < mCursorAdapter.getCount(); pos++) {
-            if (mCursorAdapter.getItemId(pos) == parentAccountId){
+        for (int pos = 0; pos < mParentAccountCursorAdapter.getCount(); pos++) {
+            if (mParentAccountCursorAdapter.getItemId(pos) == parentAccountId){
                 mParentAccountSpinner.setSelection(pos);
                 break;
             }
         }
     }
 
+    /**
+     * Selects the account with ID <code>parentAccountId</code> in the default transfer account spinner
+     * @param defaultTransferAccountId Record ID of parent account to be selected
+     */
+    private void setDefaultTransferAccountSelection(long defaultTransferAccountId){
+        if (defaultTransferAccountId > 0){
+            mDefaultTransferAccountCheckBox.setChecked(true);
+            mDefaulTransferAccountSpinner.setEnabled(true);
+        } else
+            return;
+
+        for (int pos = 0; pos < mDefaultTransferAccountCursorAdapter.getCount(); pos++) {
+            if (mDefaultTransferAccountCursorAdapter.getItemId(pos) == defaultTransferAccountId){
+                mDefaulTransferAccountSpinner.setSelection(pos);
+                break;
+            }
+        }
+    }
+
 	@Override
 	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {		
 		super.onCreateOptionsMenu(menu, inflater);
@@ -272,6 +376,26 @@ public boolean onOptionsItemSelected(MenuItem item) {
 	}
 
     /**
+     * Initializes the default transfer account spinner with eligible accounts
+     */
+    private void loadDefaultTransferAccoutList(){
+        String condition = DatabaseHelper.KEY_ROW_ID + " != " + mSelectedAccountId
+                + " AND " + DatabaseHelper.KEY_PLACEHOLDER + "=0"
+                + " AND " + DatabaseHelper.KEY_UID + " != '" + mAccountsDbAdapter.getGnuCashRootAccountUID() + "'";
+        mDefaultTransferAccountCursor = mAccountsDbAdapter.fetchAccounts(condition);
+
+        if (mDefaultTransferAccountCursor == null || mDefaulTransferAccountSpinner.getCount() <= 0){
+            setDefaultTransferAccountInputsVisible(false);
+        }
+
+        mDefaultTransferAccountCursorAdapter = new QualifiedAccountNameCursorAdapter(getActivity(),
+                android.R.layout.simple_spinner_item,
+                mDefaultTransferAccountCursor);
+        mParentAccountCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+        mDefaulTransferAccountSpinner.setAdapter(mParentAccountCursorAdapter);
+    }
+
+    /**
      * Loads the list of possible accounts which can be set as a parent account and initializes the spinner
      */
 	private void loadParentAccountList(){
@@ -284,19 +408,19 @@ private void loadParentAccountList(){
             //TODO: Limit all descendants of the account to eliminate the possibility of cyclic hierarchy
         }
 
-		mCursor = mAccountsDbAdapter.fetchAccounts(condition);
-		if (mCursor == null || mCursor.getCount() <= 0){
+		mParentAccountCursor = mAccountsDbAdapter.fetchAccounts(condition);
+		if (mParentAccountCursor == null || mParentAccountCursor.getCount() <= 0){
             final View view = getView();
             view.findViewById(R.id.layout_parent_account).setVisibility(View.GONE);
             view.findViewById(R.id.label_parent_account).setVisibility(View.GONE);
         }
 
-		mCursorAdapter = new QualifiedAccountNameCursorAdapter(
+		mParentAccountCursorAdapter = new QualifiedAccountNameCursorAdapter(
 				getActivity(), 
-				android.R.layout.simple_spinner_item, 
-				mCursor);
-		mCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);		
-		mParentAccountSpinner.setAdapter(mCursorAdapter);
+				android.R.layout.simple_spinner_item,
+                mParentAccountCursor);
+		mParentAccountCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+		mParentAccountSpinner.setAdapter(mParentAccountCursorAdapter);
 	}
 
     /**
@@ -333,8 +457,8 @@ private void finishFragment() {
 	@Override
 	public void onDestroy() {
 		super.onDestroyView();
-		if (mCursor != null)
-			mCursor.close();
+		if (mParentAccountCursor != null)
+			mParentAccountCursor.close();
 		//do not close the database adapter. We got it from the activity, 
 		//the activity will take care of it.
 	}
@@ -361,12 +485,23 @@ private void saveAccount() {
         String[] accountTypeEntries = getResources().getStringArray(R.array.account_type_entries);
         mAccount.setAccountType(Account.AccountType.valueOf(accountTypeEntries[selectedAccountType]));
 
+        mAccount.setPlaceHolderFlag(mPlaceholderCheckBox.isChecked());
+
 		if (mParentCheckBox.isChecked()){
 			long id = mParentAccountSpinner.getSelectedItemId();
 			mAccount.setParentUID(mAccountsDbAdapter.getAccountUID(id));
 		} else {
+            //need to do this explicitly in case user removes parent account
 			mAccount.setParentUID(null);
 		}
+
+        if (mDefaultTransferAccountCheckBox.isChecked()){
+            long id = mDefaulTransferAccountSpinner.getSelectedItemId();
+            mAccount.setDefaultTransferAccountUID(mAccountsDbAdapter.getAccountUID(id));
+        } else {
+            //explicitly set in case of removal of default account
+            mAccount.setDefaultTransferAccountUID(null);
+        }
 		
 		if (mAccountsDbAdapter == null)
 			mAccountsDbAdapter = new AccountsDbAdapter(getActivity());
diff --git a/app/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java b/app/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java
index e64cc71a..5b653276 100644
--- a/app/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java
+++ b/app/src/org/gnucash/android/ui/transactions/NewTransactionFragment.java
@@ -351,26 +351,6 @@ private void initializeViewsWithTransaction(){
     }
 
     /**
-     * Initializes the recurrence spinner to the appropriate value from the transaction.
-     * This is only used when the transaction is a recurrence transaction
-     */
-    private void setSelectedRecurrenceOption() {
-        //init recurrence options
-        final long recurrencePeriod = mTransaction.getRecurrencePeriod();
-        if (recurrencePeriod > 0){
-            String[] recurrenceOptions = getResources().getStringArray(R.array.recurrence_options);
-
-            int selectionIndex = 0;
-            for (String recurrenceOption : recurrenceOptions) {
-                if (recurrencePeriod == Long.parseLong(recurrenceOption))
-                    break;
-                selectionIndex++;
-            }
-            mRecurringTransactionSpinner.setSelection(selectionIndex);
-        }
-    }
-
-    /**
 	 * Initialize views with default data for new transactions
 	 */
 	private void initalizeViews() {
@@ -399,9 +379,36 @@ private void initalizeViews() {
 		}
 		Currency accountCurrency = Currency.getInstance(code);
 		mCurrencyTextView.setText(accountCurrency.getSymbol(Locale.getDefault()));
+
+        if (mUseDoubleEntry){
+            long defaultTransferAccountID = mAccountsDbAdapter.getDefaultTransferAccountID(accountId);
+            if (defaultTransferAccountID > 0){
+                setSelectedTransferAccount(defaultTransferAccountID);
+            }
+        }
 	}
 
     /**
+     * Initializes the recurrence spinner to the appropriate value from the transaction.
+     * This is only used when the transaction is a recurrence transaction
+     */
+    private void setSelectedRecurrenceOption() {
+        //init recurrence options
+        final long recurrencePeriod = mTransaction.getRecurrencePeriod();
+        if (recurrencePeriod > 0){
+            String[] recurrenceOptions = getResources().getStringArray(R.array.recurrence_options);
+
+            int selectionIndex = 0;
+            for (String recurrenceOption : recurrenceOptions) {
+                if (recurrencePeriod == Long.parseLong(recurrenceOption))
+                    break;
+                selectionIndex++;
+            }
+            mRecurringTransactionSpinner.setSelection(selectionIndex);
+        }
+    }
+
+    /**
      * Updates the list of possible transfer accounts.
      * Only accounts with the same currency can be transferred to
      */
diff --git a/app/src/org/gnucash/android/ui/transactions/RecurringTransactionsListFragment.java b/app/src/org/gnucash/android/ui/transactions/RecurringTransactionsListFragment.java
index 892b1b7e..9ac7e00c 100644
--- a/app/src/org/gnucash/android/ui/transactions/RecurringTransactionsListFragment.java
+++ b/app/src/org/gnucash/android/ui/transactions/RecurringTransactionsListFragment.java
@@ -180,7 +180,7 @@ public void onDestroy() {
     public void onListItemClick(ListView l, View v, int position, long id) {
         super.onListItemClick(l, v, position, id);
         if (mInEditMode){
-            CheckBox checkbox = (CheckBox) v.findViewById(R.id.checkbox);
+            CheckBox checkbox = (CheckBox) v.findViewById(R.id.checkbox_parent_account);
             checkbox.setChecked(!checkbox.isChecked());
             return;
         }
@@ -306,7 +306,7 @@ public TransactionsCursorAdapter(Context context, int layout, Cursor c,
         public View getView(int position, View convertView, ViewGroup parent) {
             final View view = super.getView(position, convertView, parent);
             final int itemPosition = position;
-            CheckBox checkbox = (CheckBox) view.findViewById(R.id.checkbox);
+            CheckBox checkbox = (CheckBox) view.findViewById(R.id.checkbox_parent_account);
             final TextView secondaryText = (TextView) view.findViewById(R.id.secondary_text);
 
             checkbox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
diff --git a/app/src/org/gnucash/android/ui/transactions/TransactionsListFragment.java b/app/src/org/gnucash/android/ui/transactions/TransactionsListFragment.java
index b299e0a5..2e6754be 100644
--- a/app/src/org/gnucash/android/ui/transactions/TransactionsListFragment.java
+++ b/app/src/org/gnucash/android/ui/transactions/TransactionsListFragment.java
@@ -241,7 +241,7 @@ public void onDestroy() {
 	public void onListItemClick(ListView l, View v, int position, long id) {
 		super.onListItemClick(l, v, position, id);
 		if (mInEditMode){
-			CheckBox checkbox = (CheckBox) v.findViewById(R.id.checkbox);
+			CheckBox checkbox = (CheckBox) v.findViewById(R.id.checkbox_parent_account);
 			checkbox.setChecked(!checkbox.isChecked());
 			return;
 		}
@@ -379,7 +379,7 @@ public TransactionsCursorAdapter(Context context, int layout, Cursor c,
 		public View getView(int position, View convertView, ViewGroup parent) {
 			final View view = super.getView(position, convertView, parent);
 			final int itemPosition = position;
-			CheckBox checkbox = (CheckBox) view.findViewById(R.id.checkbox);
+			CheckBox checkbox = (CheckBox) view.findViewById(R.id.checkbox_parent_account);
             final TextView secondaryText = (TextView) view.findViewById(R.id.secondary_text);
 
             checkbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
diff --git a/integration-tests/src/org/gnucash/android/test/ui/AccountsActivityTest.java b/integration-tests/src/org/gnucash/android/test/ui/AccountsActivityTest.java
index 79838fbc..a8d1791b 100644
--- a/integration-tests/src/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/integration-tests/src/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -130,7 +130,7 @@ public void testCreateAccount(){
 		mSolo.waitForText(getActivity().getString(R.string.title_add_account));
 
         //there already exists one eligible parent account in the system
-        assertThat(getActivity().findViewById(R.id.checkbox)).isVisible();
+        assertThat(getActivity().findViewById(R.id.checkbox_parent_account)).isVisible();
 
         EditText inputAccountName = (EditText) getActivity().findViewById(R.id.edit_text_account_name);
         String NEW_ACCOUNT_NAME = "A New Account";
