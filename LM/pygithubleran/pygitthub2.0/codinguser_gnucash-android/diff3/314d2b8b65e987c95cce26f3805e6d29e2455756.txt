From 314d2b8b65e987c95cce26f3805e6d29e2455756 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 21 Nov 2016 12:17:53 +0100
Subject: [PATCH] Don't create any file from OfXExporter, if there's nothing to
 export.

We were creating an OFX file with no effective data.
---
 .../gnucash/android/export/ofx/OfxExporter.java    |  6 +-
 .../android/test/unit/export/OfxExporterTest.java  | 73 ++++++++++++++++++++++
 .../android/test/unit/export/QifExporterTest.java  | 72 +++++++++++++++++++++
 3 files changed, 149 insertions(+), 2 deletions(-)
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/export/OfxExporterTest.java
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/export/QifExporterTest.java

diff --git a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
index c7babfdb..0c1d0e38 100644
--- a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
@@ -130,8 +130,6 @@ private void generateOfx(Document doc, Element parent){
      * @throws ExporterException
      */
     private String generateOfxExport() throws ExporterException {
-        mAccountsList = mAccountsDbAdapter.getExportableAccounts(mExportParams.getExportStartTime());
-
         DocumentBuilderFactory docFactory = DocumentBuilderFactory
                 .newInstance();
         DocumentBuilder docBuilder;
@@ -169,6 +167,10 @@ private String generateOfxExport() throws ExporterException {
 
     @Override
     public List<String> generateExport() throws ExporterException {
+        mAccountsList = mAccountsDbAdapter.getExportableAccounts(mExportParams.getExportStartTime());
+        if (mAccountsList.isEmpty())
+            return new ArrayList<>(); // Nothing to export, so no files generated
+
         BufferedWriter writer = null;
 
         try {
diff --git a/app/src/test/java/org/gnucash/android/test/unit/export/OfxExporterTest.java b/app/src/test/java/org/gnucash/android/test/unit/export/OfxExporterTest.java
new file mode 100644
index 00000000..58cd6e9b
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/export/OfxExporterTest.java
@@ -0,0 +1,73 @@
+/*
+ * Copyright (c) 2016 lex Magaz Graa <alexandre.magaz@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.test.unit.export;
+
+import android.database.sqlite.SQLiteDatabase;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.BookDbHelper;
+import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.export.ExportFormat;
+import org.gnucash.android.export.ExportParams;
+import org.gnucash.android.export.ofx.OfxExporter;
+import org.gnucash.android.model.Book;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
+import org.gnucash.android.util.TimestampHelper;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+
+@RunWith(GnucashTestRunner.class) //package is required so that resources can be found in dev mode
+@Config(constants = BuildConfig.class,
+        sdk = 21,
+        packageName = "org.gnucash.android",
+        shadows = {ShadowCrashlytics.class, ShadowUserVoice.class})
+public class OfxExporterTest {
+    private SQLiteDatabase mDb;
+
+    @Before
+    public void setUp() throws Exception {
+        BookDbHelper bookDbHelper = new BookDbHelper(GnuCashApplication.getAppContext());
+        BooksDbAdapter booksDbAdapter = new BooksDbAdapter(bookDbHelper.getWritableDatabase());
+        Book testBook = new Book("testRootAccountUID");
+        booksDbAdapter.addRecord(testBook);
+        DatabaseHelper databaseHelper =
+                new DatabaseHelper(GnuCashApplication.getAppContext(), testBook.getUID());
+        mDb = databaseHelper.getWritableDatabase();
+    }
+
+    /**
+     * When there aren't new or modified transactions, the OFX exporter
+     * shouldn't create any file.
+     */
+    @Test
+    public void testWithNoTransactionsToExport_shouldNotCreateAnyFile(){
+        ExportParams exportParameters = new ExportParams(ExportFormat.OFX);
+        exportParameters.setExportStartTime(TimestampHelper.getTimestampFromEpochZero());
+        exportParameters.setExportTarget(ExportParams.ExportTarget.SD_CARD);
+        exportParameters.setDeleteTransactionsAfterExport(false);
+        OfxExporter exporter = new OfxExporter(exportParameters, mDb);
+        assertThat(exporter.generateExport()).isEmpty();
+    }
+}
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/export/QifExporterTest.java b/app/src/test/java/org/gnucash/android/test/unit/export/QifExporterTest.java
new file mode 100644
index 00000000..5f17fe4a
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/export/QifExporterTest.java
@@ -0,0 +1,72 @@
+/*
+ * Copyright (c) 2016 lex Magaz Graa <alexandre.magaz@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.test.unit.export;
+
+import android.database.sqlite.SQLiteDatabase;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.BookDbHelper;
+import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.export.ExportFormat;
+import org.gnucash.android.export.ExportParams;
+import org.gnucash.android.export.qif.QifExporter;
+import org.gnucash.android.model.Book;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
+import org.gnucash.android.util.TimestampHelper;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+@RunWith(GnucashTestRunner.class) //package is required so that resources can be found in dev mode
+@Config(constants = BuildConfig.class,
+        sdk = 21,
+        packageName = "org.gnucash.android",
+        shadows = {ShadowCrashlytics.class, ShadowUserVoice.class})
+public class QifExporterTest {
+    private SQLiteDatabase mDb;
+
+    @Before
+    public void setUp() throws Exception {
+        BookDbHelper bookDbHelper = new BookDbHelper(GnuCashApplication.getAppContext());
+        BooksDbAdapter booksDbAdapter = new BooksDbAdapter(bookDbHelper.getWritableDatabase());
+        Book testBook = new Book("testRootAccountUID");
+        booksDbAdapter.addRecord(testBook);
+        DatabaseHelper databaseHelper =
+                new DatabaseHelper(GnuCashApplication.getAppContext(), testBook.getUID());
+        mDb = databaseHelper.getWritableDatabase();
+    }
+
+    /**
+     * When there aren't new or modified transactions, the QIF exporter
+     * shouldn't create any file.
+     */
+    @Test
+    public void testWithNoTransactionsToExport_shouldNotCreateAnyFile(){
+        ExportParams exportParameters = new ExportParams(ExportFormat.QIF);
+        exportParameters.setExportStartTime(TimestampHelper.getTimestampFromEpochZero());
+        exportParameters.setExportTarget(ExportParams.ExportTarget.SD_CARD);
+        exportParameters.setDeleteTransactionsAfterExport(false);
+        QifExporter exporter = new QifExporter(exportParameters, mDb);
+        assertThat(exporter.generateExport()).isEmpty();
+    }
+}
\ No newline at end of file
