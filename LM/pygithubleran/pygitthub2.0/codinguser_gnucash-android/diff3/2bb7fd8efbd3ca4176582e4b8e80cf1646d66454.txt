From 2bb7fd8efbd3ca4176582e4b8e80cf1646d66454 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 25 Apr 2015 17:28:33 +0300
Subject: [PATCH] Pie chart shows data by currency

---
 .../gnucash/android/ui/chart/PieChartActivity.java | 35 ++++++++++++++++++++--
 1 file changed, 32 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index 2d5a1d4c..5367a374 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -22,6 +22,7 @@
 import android.graphics.PorterDuff;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
+import android.preference.PreferenceManager;
 import android.support.v4.app.DialogFragment;
 import android.view.View;
 import android.widget.AdapterView;
@@ -48,12 +49,16 @@
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.passcode.PassLockActivity;
 import org.joda.time.LocalDateTime;
 
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Currency;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import static org.gnucash.android.db.DatabaseSchema.AccountEntry;
 
@@ -98,6 +103,8 @@
 
     private double mSlicePercentThreshold = 6;
 
+    private String mCurrencyCode;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
@@ -112,6 +119,9 @@ protected void onCreate(Bundle savedInstanceState) {
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
         mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 
+        mCurrencyCode = PreferenceManager.getDefaultSharedPreferences(this)
+                .getString(getString(R.string.key_chart_currency), Money.DEFAULT_CURRENCY_CODE);
+
         mChart = (PieChart) findViewById(R.id.pie_chart);
         mChart.setCenterTextSize(18);
         mChart.setDescription("");
@@ -198,7 +208,7 @@ private PieData getData(boolean forCurrentMonth) {
         PieDataSet dataSet = new PieDataSet(null, "");
         ArrayList<String> names = new ArrayList<String>();
         List<String> skipUUID = new ArrayList<String>();
-        for (Account account : accountList) {
+        for (Account account : getCurrencyCodeToAccountMap(accountList).get(mCurrencyCode)) {
             if (mAccountsDbAdapter.getSubAccountCount(account.getUID()) > 0) {
                 skipUUID.addAll(mAccountsDbAdapter.getDescendantAccountUIDs(account.getUID(), null, null));
             }
@@ -246,6 +256,25 @@ private PieData getData(boolean forCurrentMonth) {
     }
 
     /**
+     * Returns a map with a currency code as key and corresponding accounts list
+     * as value from a specified list of accounts
+     * @param accountList a list of accounts
+     * @return a map with a currency code as key and corresponding accounts list as value
+     */
+    private Map<String, List<Account>> getCurrencyCodeToAccountMap(List<Account> accountList) {
+        Map<String, List<Account>> currencyAccountMap = new HashMap<>();
+        for (Currency currency : mAccountsDbAdapter.getCurrencies()) {
+            currencyAccountMap.put(currency.getCurrencyCode(), new ArrayList<Account>());
+        }
+
+        for (Account account : accountList) {
+            currencyAccountMap.get(account.getCurrency().getCurrencyCode()).add(account);
+        }
+        return currencyAccountMap;
+    }
+
+
+    /**
      * Sets the image button to the given state and grays-out the icon
      *
      * @param enabled the button's state
@@ -310,8 +339,8 @@ private void setUpSpinner() {
             @Override
             public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                 mAccountType = (AccountType) ((Spinner) findViewById(R.id.chart_data_spinner)).getSelectedItem();
-                mEarliestTransactionDate = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType));
-                mLatestTransactionDate = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType));
+                mEarliestTransactionDate = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType, mCurrencyCode));
+                mLatestTransactionDate = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType, mCurrencyCode));
                 mChartDate = mLatestTransactionDate;
                 setData(false);
                 mChart.getLegend().setEnabled(false);
