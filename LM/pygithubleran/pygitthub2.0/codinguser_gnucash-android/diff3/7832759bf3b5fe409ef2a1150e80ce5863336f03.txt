From 7832759bf3b5fe409ef2a1150e80ce5863336f03 Mon Sep 17 00:00:00 2001
From: Felipe Morato <me@fmorato.com>
Date: Mon, 29 Feb 2016 00:59:37 -0300
Subject: [PATCH] ownCloud Tests - Save credentials

---
 .../android/test/ui/OwnCloudExportTest.java        | 44 +++++++++++++++++++++-
 1 file changed, 42 insertions(+), 2 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
index 83bfae54..4d154ad1 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/OwnCloudExportTest.java
@@ -16,6 +16,8 @@
 
 package org.gnucash.android.test.ui;
 
+import android.content.Context;
+import android.content.SharedPreferences;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
 import android.support.test.InstrumentationRegistry;
@@ -40,7 +42,7 @@
 
 import static android.support.test.espresso.Espresso.onView;
 import static android.support.test.espresso.Espresso.pressBack;
-import static android.support.test.espresso.action.ViewActions.click;
+import static android.support.test.espresso.action.ViewActions.*;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.ViewMatchers.*;
 
@@ -49,6 +51,7 @@
 public class OwnCloudExportTest extends ActivityInstrumentationTestCase2<PreferenceActivity> {
 
     private PreferenceActivity mPreferenceActivity;
+    private SharedPreferences mPrefs;
 
     public OwnCloudExportTest() { super(PreferenceActivity.class); }
 
@@ -98,12 +101,49 @@ public void OpenOwnCloudDialog() {
         onView(withId(R.id.owncloud_hostname)).check(matches(isDisplayed()));
     }
 
+    @Test
+    public void SetOwnCloudCredentials() {
+        pressBack(); // The activity automatically opens General Settings. . let's go back first
+        onView(withText("Backup & export")).perform(click());
+        onView(withText("ownCloud Sync")).perform(click());
+        onView(withId(R.id.owncloud_hostname)).check(matches(isDisplayed()));
+
+        String OC_SERVER = "https://demo.owncloud.org";
+        String OC_USERNAME = "test";
+        String OC_PASSWORD = "test";
+        String OC_DIR = "gc_test";
+
+        onView(withId(R.id.owncloud_hostname)).perform(clearText()).perform(typeText(OC_SERVER), closeSoftKeyboard());
+        onView(withId(R.id.owncloud_username)).perform(clearText()).perform(typeText(OC_USERNAME), closeSoftKeyboard());
+        onView(withId(R.id.owncloud_password)).perform(clearText()).perform(typeText(OC_PASSWORD), closeSoftKeyboard());
+        onView(withId(R.id.owncloud_dir)).perform(clearText()).perform(typeText(OC_DIR), closeSoftKeyboard());
+        onView(withId(R.id.btn_save)).perform(click());
+        sleep(5000);
+        onView(withId(R.id.btn_save)).perform(click());
+
+        mPrefs = mPreferenceActivity.getSharedPreferences(mPreferenceActivity.getString(R.string.owncloud_pref), Context.MODE_PRIVATE);
+        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_server), null), OC_SERVER);
+        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_username), null), OC_USERNAME);
+        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_password), null), OC_PASSWORD);
+        assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_dir), null), OC_DIR);
+
+    }
 
     @After
     public void tearDown() throws Exception {
         mPreferenceActivity.finish();
         super.tearDown();
     }
-
+    /**
+     * Sleep the thread for a specified period
+     * @param millis Duration to sleep in milliseconds
+     */
+    private void sleep(long millis) {
+        try {
+            Thread.sleep(millis);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+    }
 }
 
