From d951a85ecc1b176bafc825e7c6136b464dac4614 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sun, 15 Feb 2015 20:24:30 +0100
Subject: [PATCH] Added activity for scheduled events Update navigation drawer
 entries Added indices to database for split account uid and transaction uid
 Updated nav drawer to show icon

---
 app/src/main/AndroidManifest.xml                   |   1 +
 .../gnucash/android/app/GnuCashApplication.java    |  18 +++
 .../org/gnucash/android/db/DatabaseHelper.java     |  11 ++
 .../org/gnucash/android/db/DatabaseSchema.java     |   2 +
 .../android/db/ScheduledEventDbAdapter.java        |  24 ++++
 .../org/gnucash/android/model/ScheduledEvent.java  |   2 +-
 .../org/gnucash/android/ui/BaseDrawerActivity.java | 151 ++++++++++++++++-----
 .../android/ui/account/AccountFormFragment.java    |   2 +-
 .../android/ui/account/AccountsActivity.java       |  34 ++---
 .../android/ui/account/AccountsListFragment.java   |   8 +-
 .../ui/transaction/ScheduledEventsActivity.java    |  82 +++++++++++
 .../ScheduledTransactionsListFragment.java         |  55 ++++----
 .../ui/transaction/TransactionFormFragment.java    |   2 +-
 .../ui/transaction/TransactionsActivity.java       |  13 +-
 .../ui/transaction/TransactionsListFragment.java   |   4 +-
 app/src/main/res/drawable-hdpi/drawer_shadow.9.png | Bin 0 -> 161 bytes
 app/src/main/res/drawable-hdpi/ic_drawer.png       | Bin 0 -> 2826 bytes
 app/src/main/res/drawable-mdpi/drawer_shadow.9.png | Bin 0 -> 142 bytes
 app/src/main/res/drawable-mdpi/ic_drawer.png       | Bin 0 -> 2816 bytes
 .../main/res/drawable-xhdpi/drawer_shadow.9.png    | Bin 0 -> 174 bytes
 app/src/main/res/drawable-xhdpi/ic_drawer.png      | Bin 0 -> 1038 bytes
 .../main/res/drawable-xxhdpi/drawer_shadow.9.png   | Bin 0 -> 208 bytes
 app/src/main/res/drawable-xxhdpi/ic_drawer.png     | Bin 0 -> 202 bytes
 .../main/res/layout/activity_scheduled_events.xml  |  37 +++++
 ...list.xml => fragment_scheduled_events_list.xml} |   0
 app/src/main/res/values-de/strings.xml             |   2 +
 app/src/main/res/values-el/strings.xml             |   2 +
 app/src/main/res/values-es-rMX/strings.xml         |   2 +
 app/src/main/res/values-es/strings.xml             |   2 +
 app/src/main/res/values-fr/strings.xml             |   2 +
 app/src/main/res/values-hu/strings.xml             |   2 +
 app/src/main/res/values-it/strings.xml             |   2 +
 app/src/main/res/values-nb/strings.xml             |   2 +
 app/src/main/res/values-nl/strings.xml             |   2 +
 app/src/main/res/values-pt-rBR/strings.xml         |   2 +
 app/src/main/res/values-ru/strings.xml             |   2 +
 app/src/main/res/values-zh/strings.xml             |   2 +
 app/src/main/res/values/strings.xml                |   2 +
 38 files changed, 363 insertions(+), 109 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/transaction/ScheduledEventsActivity.java
 create mode 100644 app/src/main/res/drawable-hdpi/drawer_shadow.9.png
 create mode 100644 app/src/main/res/drawable-hdpi/ic_drawer.png
 create mode 100644 app/src/main/res/drawable-mdpi/drawer_shadow.9.png
 create mode 100644 app/src/main/res/drawable-mdpi/ic_drawer.png
 create mode 100644 app/src/main/res/drawable-xhdpi/drawer_shadow.9.png
 create mode 100644 app/src/main/res/drawable-xhdpi/ic_drawer.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/drawer_shadow.9.png
 create mode 100644 app/src/main/res/drawable-xxhdpi/ic_drawer.png
 create mode 100644 app/src/main/res/layout/activity_scheduled_events.xml
 rename app/src/main/res/layout/{fragment_recurring_transactions_list.xml => fragment_scheduled_events_list.xml} (100%)

diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index b1a5ea4d..ecd2779f 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -64,6 +64,7 @@
             android:windowSoftInputMode="stateAlwaysHidden">
         </activity>
         <activity android:name=".ui.settings.SettingsActivity"/>
+        <activity android:name=".ui.transaction.ScheduledEventsActivity" />
         <activity android:name=".ui.passcode.PasscodePreferenceActivity" />
         <activity android:name=".ui.transaction.TransactionsActivity"
             android:configChanges="orientation|screenSize">
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 6ddcddae..c2999da6 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -15,15 +15,20 @@
  */
 package org.gnucash.android.app;
 
+import android.app.AlarmManager;
 import android.app.Application;
+import android.app.PendingIntent;
 import android.content.Context;
+import android.content.Intent;
 import android.content.SharedPreferences;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
+import android.os.SystemClock;
 import android.preference.PreferenceManager;
 import android.util.Log;
 import org.gnucash.android.R;
 import org.gnucash.android.db.*;
+import org.gnucash.android.service.SchedulerService;
 
 import java.util.Currency;
 import java.util.Locale;
@@ -149,4 +154,17 @@ public static String getDefaultCurrency(){
         }
         return currencyCode;
     }
+
+    public static void startScheduledEventExecutionService(){
+        Context context = getAppContext();
+        Intent alarmIntent = new Intent(context, SchedulerService.class);
+        PendingIntent pendingIntent = PendingIntent.getService(context, 0, alarmIntent, 0);
+
+        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
+        alarmManager.cancel(pendingIntent);
+        alarmManager.setInexactRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP,
+                SystemClock.elapsedRealtime() + AlarmManager.INTERVAL_DAY,
+                AlarmManager.INTERVAL_DAY, pendingIntent);
+
+    }
 }
\ No newline at end of file
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
index b91a6dd8..55c87428 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
@@ -23,7 +23,9 @@
 import android.database.sqlite.SQLiteOpenHelper;
 import android.util.Log;
 
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.ScheduledEvent;
 
 import static org.gnucash.android.db.DatabaseSchema.AccountEntry;
 import static org.gnucash.android.db.DatabaseSchema.ScheduledEventEntry;
@@ -332,6 +334,11 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
                 Log.i(LOG_TAG, "Creating scheduled events table");
 
                 db.execSQL(SCHEDULED_EVENTS_TABLE_CREATE);
+                //TODO: Migrate existing scheduled transactions (cancel pending intents)
+
+                GnuCashApplication.startScheduledEventExecutionService();
+
+
             }
 		}
 
@@ -360,9 +367,13 @@ private void createDatabaseTables(SQLiteDatabase db) {
         String createSplitUidIndex = "CREATE UNIQUE INDEX '" + SplitEntry.INDEX_UID +"' ON "
                 + SplitEntry.TABLE_NAME + "(" + SplitEntry.COLUMN_UID + ")";
 
+        String createScheduledEventUidIndex = "CREATE UNIQUE INDEX '" + ScheduledEventEntry.INDEX_UID
+                +"' ON " + ScheduledEventEntry.TABLE_NAME + "(" + ScheduledEventEntry.COLUMN_UID + ")";
+
         db.execSQL(createAccountUidIndex);
         db.execSQL(createTransactionUidIndex);
         db.execSQL(createSplitUidIndex);
+        db.execSQL(createScheduledEventUidIndex);
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
index f2fe28e1..572c535b 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
@@ -109,5 +109,7 @@ private DatabaseSchema(){}
          * Tags for any scheduled event specific information
          */
         public static final String COLUMN_TAG           = "tag";
+
+        public static final String INDEX_UID            = "scheduled_event_uid_index";
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/db/ScheduledEventDbAdapter.java b/app/src/main/java/org/gnucash/android/db/ScheduledEventDbAdapter.java
index 187edca0..605f6664 100644
--- a/app/src/main/java/org/gnucash/android/db/ScheduledEventDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/ScheduledEventDbAdapter.java
@@ -104,6 +104,26 @@ public ScheduledEvent getScheduledEvent(String uid){
     }
 
     /**
+     * Returns an instance of {@link org.gnucash.android.model.ScheduledEvent} from the database record
+     * @param eventUID GUID of the event itself
+     * @return ScheduledEvent object instance
+     */
+    public ScheduledEvent getScheduledEventWithUID(String eventUID){
+        Cursor cursor = mDb.query(ScheduledEventEntry.TABLE_NAME, null,
+                ScheduledEventEntry.COLUMN_EVENT_UID + "= ?",
+                new String[]{eventUID}, null, null, null);
+
+        ScheduledEvent scheduledEvent = null;
+        if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                scheduledEvent = buildScheduledEventInstance(cursor);
+            }
+            cursor.close();
+        }
+        return scheduledEvent;
+    }
+
+    /**
      * Returns all scheduled events in the database
      * @return List with all scheduled events
      */
@@ -131,6 +151,10 @@ public boolean deleteRecord(long rowId) {
         return deleteRecord(ScheduledEventEntry.TABLE_NAME, rowId);
     }
 
+    public boolean deleteRecord(String uid){
+        return deleteRecord(getID(uid));
+    }
+
     @Override
     public int deleteAllRecords() {
         return deleteAllRecords(ScheduledEventEntry.TABLE_NAME);
diff --git a/app/src/main/java/org/gnucash/android/model/ScheduledEvent.java b/app/src/main/java/org/gnucash/android/model/ScheduledEvent.java
index 1bd956ff..da05aedc 100644
--- a/app/src/main/java/org/gnucash/android/model/ScheduledEvent.java
+++ b/app/src/main/java/org/gnucash/android/model/ScheduledEvent.java
@@ -134,7 +134,7 @@ public void setTag(String tag) {
     @Override
     public String toString() {
         SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy");
-        String eventString = mEventType.name() + " recurring every " + mPeriod/ RecurrenceParser.DAY_MILLIS + " days starting on "
+        String eventString = mEventType.name() + " recurring every " + mPeriod/RecurrenceParser.DAY_MILLIS + " days starting on "
                 + dateFormat.format(new Date(mStartDate));
         if (mEndDate > 0){
             eventString += " until " + dateFormat.format(mEndDate);
diff --git a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
index b85ce3b9..5c64fbe3 100644
--- a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
@@ -15,10 +15,11 @@
  */
 package org.gnucash.android.ui;
 
+import android.app.Activity;
 import android.content.Intent;
+import android.content.res.Configuration;
 import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentManager;
+import android.support.v4.app.ActionBarDrawerToggle;
 import android.support.v4.widget.DrawerLayout;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -26,15 +27,20 @@
 import android.widget.ArrayAdapter;
 import android.widget.ListView;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import com.actionbarsherlock.app.SherlockFragmentActivity;
+import com.actionbarsherlock.view.MenuItem;
 import com.commonsware.cwac.merge.MergeAdapter;
 
 import org.gnucash.android.R;
+import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.ui.account.AccountsActivity;
-import org.gnucash.android.ui.transaction.ScheduledTransactionsListFragment;
-import org.w3c.dom.Text;
+import org.gnucash.android.ui.settings.SettingsActivity;
+import org.gnucash.android.ui.transaction.ScheduledEventsActivity;
 
+import java.io.FileNotFoundException;
+import java.io.InputStream;
 import java.util.ArrayList;
 
 
@@ -46,9 +52,9 @@
 public class BaseDrawerActivity extends SherlockFragmentActivity {
     protected DrawerLayout  mDrawerLayout;
     protected ListView      mDrawerList;
-    protected String[]      mNavDrawerEntries;
 
     protected CharSequence  mTitle;
+    private ActionBarDrawerToggle mDrawerToggle;
 
     private class DrawerItemClickListener implements ListView.OnItemClickListener {
         @Override
@@ -63,14 +69,40 @@ protected void onCreate(Bundle savedInstanceState) {
 
         mDrawerLayout   = (DrawerLayout) findViewById(R.id.drawer_layout);
         mDrawerList     = (ListView) findViewById(R.id.left_drawer);
-        mNavDrawerEntries = getResources().getStringArray(R.array.nav_drawer_entries);
 
-//        mDrawerList.setAdapter(new ArrayAdapter<String>(this,
-//                R.layout.drawer_list_item, mNavDrawerEntries));
-//        mDrawerList.setOnItemClickListener(new DrawerItemClickListener());
+        MergeAdapter mergeAdapter = createNavDrawerMergeAdapter();
 
+        mDrawerList.setAdapter(mergeAdapter);
+        mDrawerList.setOnItemClickListener(new DrawerItemClickListener());
+
+        //FIXME: Migrate to the non-deprecated version when we remove ActionBarSherlock and support only API level 15 and above
+        mDrawerToggle = new ActionBarDrawerToggle(
+                this,                  /* host Activity */
+                mDrawerLayout,         /* DrawerLayout object */
+                R.drawable.ic_drawer,  /* nav drawer icon to replace 'Up' caret */
+                R.string.drawer_open,  /* "open drawer" description */
+                R.string.drawer_close  /* "close drawer" description */
+        ) {
+
+            /** Called when a drawer has settled in a completely closed state. */
+            public void onDrawerClosed(View view) {
+                super.onDrawerClosed(view);
+            }
+
+            /** Called when a drawer has settled in a completely open state. */
+            public void onDrawerOpened(View drawerView) {
+                super.onDrawerOpened(drawerView);
+                getSupportActionBar().setTitle("GnuCash");
+            }
+        };
+
+        mDrawerLayout.setDrawerListener(mDrawerToggle);
+        getSupportActionBar().setHomeButtonEnabled(true);
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+    }
+
+    private MergeAdapter createNavDrawerMergeAdapter() {
         ArrayList<String> accountNavOptions = new ArrayList<String>();
-        accountNavOptions.add("Accounts");
         accountNavOptions.add("Favorites");
         accountNavOptions.add("Open...");
 
@@ -79,7 +111,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
 
         ArrayList<String> transactionsNavOptions = new ArrayList<String>();
-        transactionsNavOptions.add("Transactions");
         transactionsNavOptions.add("Scheduled Transactions");
         transactionsNavOptions.add("Export...");
 
@@ -101,62 +132,92 @@ protected void onCreate(Bundle savedInstanceState) {
         mergeAdapter.addView(inflater.inflate(R.layout.horizontal_line, null));
         TextView settingsHeader = (TextView) inflater.inflate(R.layout.drawer_section_header, null);
         settingsHeader.setText("Settings");
-        TextView settingsTextView = (TextView) inflater.inflate(R.layout.drawer_list_item, null);
-        settingsTextView.setText("Settings");
+
+        ArrayList<String> aboutNavOptions = new ArrayList<String>();
+        aboutNavOptions.add("Backup & Export");
+        aboutNavOptions.add("Settings");
+        //TODO: add help view
+        ArrayAdapter<String> aboutNavAdapter = new ArrayAdapter<String>(this,
+                R.layout.drawer_list_item, aboutNavOptions);
 
         mergeAdapter.addView(settingsHeader);
-        mergeAdapter.addView(settingsTextView);
+        mergeAdapter.addAdapter(aboutNavAdapter);
+        return mergeAdapter;
+    }
 
-        mDrawerList.setAdapter(mergeAdapter);
-        mDrawerList.setOnItemClickListener(new DrawerItemClickListener());
+    @Override
+    protected void onPostCreate(Bundle savedInstanceState) {
+        super.onPostCreate(savedInstanceState);
+        mDrawerToggle.syncState();
+    }
 
-        getSupportActionBar().setHomeButtonEnabled(true);
+    @Override
+    public void onConfigurationChanged(Configuration newConfig) {
+        super.onConfigurationChanged(newConfig);
+        mDrawerToggle.onConfigurationChanged(newConfig);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        if (!mDrawerLayout.isDrawerOpen(mDrawerList))
+            mDrawerLayout.openDrawer(mDrawerList);
+        else
+            mDrawerLayout.closeDrawer(mDrawerList);
+
+        return super.onOptionsItemSelected(item);
     }
 
     /** Swaps fragments in the main content view */
     protected void selectItem(int position) {
         switch (position){
-            case 0: {
+            case 1: { //favorite accounts
                 Intent intent = new Intent(this, AccountsActivity.class);
                 intent.putExtra(AccountsActivity.EXTRA_TAB_INDEX,
-                        AccountsActivity.INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT);
+                        AccountsActivity.INDEX_FAVORITE_ACCOUNTS_FRAGMENT);
                 intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP);
                 startActivity(intent);
             }
                 break;
 
-            case 1: {
-                Intent intent = new Intent(this, AccountsActivity.class);
-                intent.putExtra(AccountsActivity.EXTRA_TAB_INDEX,
-                        AccountsActivity.INDEX_FAVORITE_ACCOUNTS_FRAGMENT);
+            case 2: { //Open... files
+                //TODO: open/import GnuCash files
+                Intent pickIntent = new Intent(Intent.ACTION_GET_CONTENT);
+                pickIntent.setType("application/*");
+                Intent chooser = Intent.createChooser(pickIntent, "Select GnuCash account file");
+
+                startActivityForResult(chooser, AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE);
+            }
+                break;
+
+            case 4: { //show scheduled transactions
+                Intent intent = new Intent(this, ScheduledEventsActivity.class);
                 intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP);
+                intent.putExtra(ScheduledEventsActivity.EXTRA_DISPLAY_MODE,
+                        ScheduledEventsActivity.DisplayMode.TRANSACTION_EVENTS);
                 startActivity(intent);
             }
                 break;
 
-            case 2:{
+            case 5:{
                 AccountsActivity.showExportDialog(this);
             }
                 break;
 
-        }
+            case 8: { //Backup and Export
 
-        // Create a new fragment and specify the planet to show based on position
-        Fragment fragment = new ScheduledTransactionsListFragment();
-        Bundle args = new Bundle();
-        args.putInt("account_list_type", position);
-        fragment.setArguments(args);
+            }
+                break;
 
+            case 9: //Settings activity
+                startActivity(new Intent(this, SettingsActivity.class));
+                break;
 
-        // Insert the fragment by replacing any existing fragment
-        FragmentManager fragmentManager = getSupportFragmentManager();
-        fragmentManager.beginTransaction()
-                .replace(R.id.fragment_container, fragment)
-                .commit();
+            //TODO: add help option
+        }
 
         // Highlight the selected item, update the title, and close the drawer
         mDrawerList.setItemChecked(position, true);
-        setTitle(mNavDrawerEntries[position]);
+//        setTitle(mNavDrawerEntries[position]);
         mDrawerLayout.closeDrawer(mDrawerList);
     }
 
@@ -166,4 +227,22 @@ public void setTitle(CharSequence title) {
         getSupportActionBar().setTitle(mTitle);
     }
 
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (resultCode == Activity.RESULT_CANCELED){
+            return;
+        }
+
+        switch (requestCode) {
+            case AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE:
+                try {
+                    InputStream accountInputStream = getContentResolver().openInputStream(data.getData());
+                    new ImportAsyncTask(this).execute(accountInputStream);
+                } catch (FileNotFoundException e) {
+                    e.printStackTrace();
+                    Toast.makeText(this, R.string.toast_error_importing_accounts, Toast.LENGTH_SHORT).show();
+                }
+                break;
+        }
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 8c512a04..afd5d119 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -514,7 +514,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 			return true;
 		}
 		
-		return false;
+		return super.onOptionsItemSelected(item);
 	}
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index e2ab6083..0ad52b3d 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -55,6 +55,7 @@
 import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.passcode.PassLockActivity;
 import org.gnucash.android.ui.settings.SettingsActivity;
+import org.gnucash.android.ui.transaction.ScheduledEventsActivity;
 import org.gnucash.android.ui.transaction.ScheduledTransactionsListFragment;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.util.OnAccountClickedListener;
@@ -108,11 +109,6 @@
 	protected static final String LOG_TAG = "AccountsActivity";
 
     /**
-     * Intent action for viewing recurring transactions
-     */
-    public static final String ACTION_VIEW_RECURRING = "org.gnucash.android.action.VEIW_RECURRING";
-
-    /**
      * Number of pages to show
      */
     private static final int DEFAULT_NUM_PAGES = 3;
@@ -247,10 +243,6 @@ public void onCreate(Bundle savedInstanceState) {
                 String parentAccountUID = intent.getStringExtra(UxArgument.PARENT_ACCOUNT_UID);
                 showAddAccountFragment(parentAccountUID);
             }
-        } else if (action != null && action.equals(ACTION_VIEW_RECURRING)) {
-            mPager.setVisibility(View.GONE);
-            titlePageIndicator.setVisibility(View.GONE);
-            showRecurringTransactionsFragment();
         } else {
             //show the simple accounts list
             PagerAdapter mPagerAdapter = new AccountViewPagerAdapter(getSupportFragmentManager());
@@ -290,6 +282,7 @@ private void init() {
             showFirstRunDialog();
             //default to using double entry and save the preference explicitly
             prefs.edit().putBoolean(getString(R.string.key_use_double_entry), true).commit();
+
         }
 
         if (hasNewFeatures()){
@@ -379,9 +372,13 @@ public boolean onCreateOptionsMenu(Menu menu) {
 	@Override
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
+            case android.R.id.home:
+                return super.onOptionsItemSelected(item);
+
             case R.id.menu_recurring_transactions:
-                Intent intent = new Intent(this, AccountsActivity.class);
-                intent.setAction(ACTION_VIEW_RECURRING);
+                Intent intent = new Intent(this, ScheduledEventsActivity.class);
+                intent.putExtra(ScheduledEventsActivity.EXTRA_DISPLAY_MODE,
+                        ScheduledEventsActivity.DisplayMode.TRANSACTION_EVENTS);
                 startActivity(intent);
                 return true;
 
@@ -415,21 +412,6 @@ private void showAddAccountFragment(String parentAccountUID){
     }
 
     /**
-     * Launches the fragment which lists the recurring transactions in the database
-     */
-    private void showRecurringTransactionsFragment(){
-        FragmentManager fragmentManager = getSupportFragmentManager();
-        FragmentTransaction fragmentTransaction = fragmentManager
-                .beginTransaction();
-
-        ScheduledTransactionsListFragment recurringTransactionsFragment = new ScheduledTransactionsListFragment();
-
-        fragmentTransaction.replace(R.id.fragment_container,
-                recurringTransactionsFragment, "fragment_recurring_transactions");
-
-        fragmentTransaction.commit();
-    }
-    /**
      * Shows the form fragment for editing the account with record ID <code>accountId</code>
      * @param accountUID GUID of the account to be edited
      */
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 9ca6c3c2..a5df9e67 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -224,11 +224,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
         ActionBar actionbar = getSherlockActivity().getSupportActionBar();
         actionbar.setTitle(R.string.title_accounts);
-        if (getActivity() instanceof TransactionsActivity){
-            actionbar.setDisplayHomeAsUpEnabled(true);
-        } else {
-            actionbar.setDisplayHomeAsUpEnabled(false);
-        }
+        actionbar.setDisplayHomeAsUpEnabled(true);
 
         setHasOptionsMenu(true);
 
@@ -381,7 +377,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 return true;
 
             default:
-                return false;
+                return super.onOptionsItemSelected(item);
         }
     }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledEventsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledEventsActivity.java
new file mode 100644
index 00000000..ada3f79b
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledEventsActivity.java
@@ -0,0 +1,82 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.ui.transaction;
+
+import android.os.Bundle;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+
+import org.gnucash.android.R;
+import org.gnucash.android.ui.passcode.PassLockActivity;
+
+import java.util.MissingFormatArgumentException;
+
+/**
+ * Activity for displaying scheduled actions
+ * @author Ngewi Fet <ngewif@gmail.com>
+ */
+public class ScheduledEventsActivity extends PassLockActivity {
+
+    public enum DisplayMode {ALL_EVENTS, TRANSACTION_EVENTS, EXPORT_EVENTS}
+
+    public static final String EXTRA_DISPLAY_MODE = "org.gnucash.android.extra.DISPLAY_MODE";
+
+    private DisplayMode mDisplayMode = DisplayMode.ALL_EVENTS;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        setContentView(R.layout.activity_scheduled_events);
+        super.onCreate(savedInstanceState);
+
+        mDisplayMode = (DisplayMode) getIntent().getSerializableExtra(EXTRA_DISPLAY_MODE);
+        if (mDisplayMode == null)
+            throw new MissingFormatArgumentException("Missing argument for which kind of scheduled events to display");
+
+        switch (mDisplayMode){
+            case ALL_EVENTS:
+                showAllScheduledEventsFragment();
+                break;
+
+            case TRANSACTION_EVENTS:
+                showScheduledTransactionsFragment();
+                break;
+
+            case EXPORT_EVENTS:
+
+                break;
+        }
+    }
+
+    private void showAllScheduledEventsFragment(){
+
+    }
+
+    /**
+     * Launches the fragment which lists the recurring transactions in the database
+     */
+    private void showScheduledTransactionsFragment(){
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction = fragmentManager
+                .beginTransaction();
+
+        ScheduledTransactionsListFragment scheduledTransactionsListFragment = new ScheduledTransactionsListFragment();
+
+        fragmentTransaction.replace(R.id.fragment_container,
+                scheduledTransactionsListFragment, "fragment_recurring_transactions");
+
+        fragmentTransaction.commit();
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
index 94679e3a..97db78be 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
@@ -16,8 +16,6 @@
 
 package org.gnucash.android.ui.transaction;
 
-import android.app.AlarmManager;
-import android.app.PendingIntent;
 import android.content.Context;
 import android.content.Intent;
 import android.database.Cursor;
@@ -32,19 +30,28 @@
 import android.view.TouchDelegate;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.*;
+import android.widget.CheckBox;
+import android.widget.CompoundButton;
+import android.widget.ListView;
+import android.widget.TextView;
+import android.widget.Toast;
+
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.app.SherlockListFragment;
 import com.actionbarsherlock.view.ActionMode;
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
+
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseCursorLoader;
+import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.ScheduledEventDbAdapter;
+import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.model.ScheduledEvent;
 import org.gnucash.android.model.Transaction;
-import org.gnucash.android.db.*;
 import org.gnucash.android.ui.UxArgument;
-import org.gnucash.android.ui.widget.WidgetConfigurationActivity;
 
 /**
  * Fragment which displays the recurring transactions in the system.
@@ -56,7 +63,7 @@
     /**
      * Logging tag
      */
-    protected static final String TAG = "RecurringTransactionsFragment";
+    protected static final String TAG = "ScheduledTrxnFragment";
 
     private TransactionsDbAdapter mTransactionsDbAdapter;
     private SimpleCursorAdapter mCursorAdapter;
@@ -95,26 +102,19 @@ public void onDestroyActionMode(ActionMode mode) {
         @Override
         public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
             switch (item.getItemId()) {
-                case R.id.context_menu_move_transactions:
-                    mode.finish();
-                    WidgetConfigurationActivity.updateAllWidgets(getActivity());
-                    return true;
-
                 case R.id.context_menu_delete:
                     for (long id : getListView().getCheckedItemIds()) {
-                        Log.i(TAG, "Cancelling recurring transaction(s)");
+                        Log.i(TAG, "Cancelling scheduled transaction(s)");
+                        String trnUID = mTransactionsDbAdapter.getUID(id);
+                        ScheduledEventDbAdapter scheduledEventDbAdapter = GnuCashApplication.getScheduledEventDbAdapter();
+                        ScheduledEvent event = scheduledEventDbAdapter.getScheduledEventWithUID(trnUID);
 
-                        PendingIntent recurringPendingIntent = PendingIntent.getBroadcast(getActivity().getApplicationContext(),
-                                (int)id, Transaction.createIntent(mTransactionsDbAdapter.getTransaction(id)), PendingIntent.FLAG_UPDATE_CURRENT);
-                        recurringPendingIntent.cancel();
-                        AlarmManager alarmManager = (AlarmManager) getActivity().getSystemService(Context.ALARM_SERVICE);
-                        alarmManager.cancel(recurringPendingIntent);
                         if (mTransactionsDbAdapter.deleteRecord(id)){
                             Toast.makeText(getActivity(), R.string.toast_recurring_transaction_deleted, Toast.LENGTH_SHORT).show();
+                            scheduledEventDbAdapter.deleteRecord(event.getUID());
                         }
                     }
                     mode.finish();
-                    WidgetConfigurationActivity.updateAllWidgets(getActivity());
                     getLoaderManager().destroyLoader(0);
                     refreshList();
                     return true;
@@ -141,7 +141,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.fragment_recurring_transactions_list, container, false);
+        return inflater.inflate(R.layout.fragment_scheduled_events_list, container, false);
     }
 
     @Override
@@ -226,7 +226,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     @Override
     public Loader<Cursor> onCreateLoader(int arg0, Bundle arg1) {
         Log.d(TAG, "Creating transactions loader");
-        return new RecurringTransactionsCursorLoader(getActivity());
+        return new ScheduledTransactionsCursorLoader(getActivity());
     }
 
     @Override
@@ -394,8 +394,11 @@ public void bindView(View view, Context context, Cursor cursor) {
             amountTextView.setText(transaction.getSplits().size() + " splits");
 
             TextView trNote = (TextView) view.findViewById(R.id.secondary_text);
-            trNote.setText(context.getString(R.string.label_repeats) + " " +
-                    getRecurrenceAsString(cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_RECURRENCE_PERIOD)))) ;
+//            trNote.setText(context.getString(R.string.label_repeats) + " " +
+//                    getRecurrenceAsString(cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_RECURRENCE_PERIOD)))) ;
+            ScheduledEventDbAdapter scheduledEventDbAdapter = GnuCashApplication.getScheduledEventDbAdapter();
+            ScheduledEvent event = scheduledEventDbAdapter.getScheduledEventWithUID(transaction.getUID());
+            trNote.setText(event.toString());
 
         }
 
@@ -405,14 +408,16 @@ public void bindView(View view, Context context, Cursor cursor) {
      * {@link DatabaseCursorLoader} for loading recurring transactions asynchronously from the database
      * @author Ngewi Fet <ngewif@gmail.com>
      */
-    protected static class RecurringTransactionsCursorLoader extends DatabaseCursorLoader {
+    protected static class ScheduledTransactionsCursorLoader extends DatabaseCursorLoader {
 
-        public RecurringTransactionsCursorLoader(Context context) {
+        public ScheduledTransactionsCursorLoader(Context context) {
             super(context);
         }
 
-        @Override        public Cursor loadInBackground() {
+        @Override
+        public Cursor loadInBackground() {
             mDatabaseAdapter = GnuCashApplication.getTransactionDbAdapter();
+
             Cursor c = ((TransactionsDbAdapter) mDatabaseAdapter).fetchAllRecurringTransactions();
 
             registerContentObserver(c);
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 579a2dcb..d198a96c 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -758,7 +758,7 @@ else if (mAmountEditText.getText().length() == 0) {
 			return true;
 
 		default:
-			return false;
+			return super.onOptionsItemSelected(item);
 		}
 	}
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
index 573ad35c..6d34034d 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -418,17 +418,8 @@ public boolean onPrepareOptionsMenu(Menu menu) {
     @Override
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
-		case android.R.id.home:
-			InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
-			imm.hideSoftInputFromWindow(findViewById(android.R.id.content).getWindowToken(), 0);
-	        FragmentManager fm = getSupportFragmentManager();
-	        if (fm.getBackStackEntryCount() > 0) {
-	            fm.popBackStack();
-	        } else {
-	        	AccountsActivity.start(this);
-	        	finish();
-	        }
-	        return true;
+            case android.R.id.home:
+                return super.onOptionsItemSelected(item);
 
             case R.id.menu_favorite_account:
                 AccountsDbAdapter accountsDbAdapter = GnuCashApplication.getAccountsDbAdapter();
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
index 519c67e1..06a9902c 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsListFragment.java
@@ -68,7 +68,7 @@
 	/**
 	 * Logging tag
 	 */
-	protected static final String LOG_TAG = "TransactionsListFragment";
+	protected static final String LOG_TAG = "TransactionListFragment";
 
     private TransactionsDbAdapter mTransactionsDbAdapter;
 	private SimpleCursorAdapter mCursorAdapter;
@@ -243,7 +243,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 return true;
 
             default:
-                return false;
+                return super.onOptionsItemSelected(item);
         }
 	}
 	
diff --git a/app/src/main/res/drawable-hdpi/drawer_shadow.9.png b/app/src/main/res/drawable-hdpi/drawer_shadow.9.png
new file mode 100644
index 0000000000000000000000000000000000000000..236bff558af07faa3921ba35e2515edf62d04bb9
GIT binary patch
literal 161
zcmeAS@N?(olHy`uVBq!ia0vp^JV0#3!3HEVSgovp6icy_X9x!n)NrJ90QsB+9+AZi
z4BVX{%xHe{^je^xv!{z=h{y5dAOHW`Gf#YA@1xt%!<wY8u#F*!S791MlAJ=C({+~Q
zo-B#02CEW74zFkn<XtS~X4)gdd%^8;eUgEPF2nk)2F-U{Cp-ii$KdJe=d#Wzp$Pz&
C=q+CW

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-hdpi/ic_drawer.png b/app/src/main/res/drawable-hdpi/ic_drawer.png
new file mode 100644
index 0000000000000000000000000000000000000000..6614ea4f4da2ffd9534f0ef5f20bcb00194005b2
GIT binary patch
literal 2826
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

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/drawer_shadow.9.png b/app/src/main/res/drawable-mdpi/drawer_shadow.9.png
new file mode 100644
index 0000000000000000000000000000000000000000..ffe3a28d77c72094021013c6442560803b3d344c
GIT binary patch
literal 142
zcmeAS@N?(olHy`uVBq!ia0vp^96+qZ!3HFgEN0vWQY^(zo*^7SP{WbZ0pxQQctjR6
zFmQK*Fr)d&(`$i(2A(dCAr_~TfBgS%&&>BhUX5L;x$y=|hic;t)=0q~!&M0(2Uj#r
iT+R^X@#lD(V-Z7IzK5^$<X3h;y$qhNelF{r5}E)8ASbo}

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-mdpi/ic_drawer.png b/app/src/main/res/drawable-mdpi/ic_drawer.png
new file mode 100644
index 0000000000000000000000000000000000000000..b05c026c18ac30b1852ca8fd2a3e3efb42369bc8
GIT binary patch
literal 2816
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
SkFBKu0000<MNUMnLSTZqIyuS!

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/drawer_shadow.9.png b/app/src/main/res/drawable-xhdpi/drawer_shadow.9.png
new file mode 100644
index 0000000000000000000000000000000000000000..fabe9d96563785c7d6b008bb3d8da25e816c343c
GIT binary patch
literal 174
zcmeAS@N?(olHy`uVBq!ia0vp^{6Or)!3HEd1bTh|DVAa<&kznEsNqQI0P;BtJR*x3
z7`Qt@n9=;?>9s(?08bak5Rc<;uP@|nU=UzFz%6x@#ly{E6Z5RU$2Hhw*i>Gs`(~~C
zr~2_>(e4Ka`gpa)&de}Ks*u{@U5E@m-v9X3<$3NT3r3p*`<7|@n1Ecw;OXk;vd$@?
F2>^8yH@N@+

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xhdpi/ic_drawer.png b/app/src/main/res/drawable-xhdpi/ic_drawer.png
new file mode 100644
index 0000000000000000000000000000000000000000..bcf49dd73c7456e8c515318ab7d7ff062424ee45
GIT binary patch
literal 1038
zcmbVLzi-n(6u!1nDHScMkdWwfxC;nk`<&Q`Pc_Af6B>luDh-ek*S<DZYoD>Njhm@r
zV_;&2g`J8435fwA#K6YFz(2r-U|?WD;+({Vp(+xV?Yn#TzVH2hxVCa*W_o@a05H>B
zwpx6J**7)G|4G09gD)3Yy~Eb&ChIvd0j5Vc2y6z<7HJX3+rR&TECMjm_1hiRv2S6Q
z2BMSch-naUGyscBY2>)uguxB6<%fpw?e!Z0`ko=&Rc+ahYNYEg_hYi&UunDjZCCe%
zrE738#hf4@%z<gJ6DBw{gaI$+`%EkeaG=7r4Poe1$6kXq8WX6B#eyp%1T{@WB~{bV
zRj9~Fk!1dA1ysVShLtiLJp#8Ddz-jrHAc4h$q>4XMOc!0y`I=BiZtGmkgn?)hoTg?
zMj_b`nUfa6WFcp;NaDtR#C#gUjM3SkyUY-{r^66}$hMD&!(@~wo-!$QA_<AI6a-mZ
z1MP&h$R9V3)lS;`5s_LXp}Vom>#@0zgL&>wHk2uHZ}4jD^P)IA7Ik+660)Xc2>eF$
zd=J+()v{F7D9Q@bDhO5NN>Mk9W(ldPrZ&`^<2bBVDwlOd*7b&FB2-r@wNkyRTUte_
zmdz@%a%?k9m=n4rx9fAeBW&eFEUv}GVKi=2x|4UnT9-1KbZG=@>l(adJFXvQg3DQf
zhVfb?_V<X_h-m-^8OHuG9{fA<A=dk!tV!G%DQl0v+9en99?Z5!&Cd@<<3mC|Gcg~I
zXOG@~&IYS#neEQIub*C=2J)E+^YH2QFL(B)CeOX9{<?j5v-SAO!OK;A3Va{$KA8nz
jYVJV#I0nGQ@t?EN*!)@fd~vS)KAX^HeZ_iSz4zcZYTG;W

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/drawer_shadow.9.png b/app/src/main/res/drawable-xxhdpi/drawer_shadow.9.png
new file mode 100644
index 0000000000000000000000000000000000000000..b91e9d7f285e8110ba3ba4e72cc6f0416eb3a30a
GIT binary patch
literal 208
zcmeAS@N?(olHy`uVBq!ia0vp^VnCe4!3HEl*p=S^DajJoh?3y^w370~qErUQl>DSr
z1<%~X^wgl##FWaylc_d9MMa)2jv*QM-d<4Ta$*#5x!8O#VbcvCx78OjjCM19-`|n`
zlcQ;yJWqK-!X?h+v^9}Es?F+hJ07=b>sdT*QRcgm+^%b8|A7C`|A*gYPjm3$2miRv
cpZdzQt0C%<%j~>EK-(ESUHx3vIVCg!0CP)0sQ>@~

literal 0
HcmV?d00001

diff --git a/app/src/main/res/drawable-xxhdpi/ic_drawer.png b/app/src/main/res/drawable-xxhdpi/ic_drawer.png
new file mode 100644
index 0000000000000000000000000000000000000000..f7e3b3079dc64a11586da568e608a9c4b81e3598
GIT binary patch
literal 202
zcmeAS@N?(olHy`uVBq!ia0vp^1|ZDA1|-9oezpTC&H|6fVg?3oVGw3ym^DWND5#L^
z5#-Cjkf+YTP`sXjk!=$LL!~YQgWnqlM%L3n1JW26goK+9UQq_B4e)ev49U3n_WDL%
z1_d7GgKPMNif1co2rbdBYgqj#WYVvlObit)YichE0u?hHkZ|w@(Lk_G07N!;^MELZ
e2g=MKDuXFT&eXtIQEbyC5ZBYy&t;ucLK6UHCM?MS

literal 0
HcmV?d00001

diff --git a/app/src/main/res/layout/activity_scheduled_events.xml b/app/src/main/res/layout/activity_scheduled_events.xml
new file mode 100644
index 00000000..1878f704
--- /dev/null
+++ b/app/src/main/res/layout/activity_scheduled_events.xml
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<android.support.v4.widget.DrawerLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <LinearLayout android:id="@+id/fragment_container"
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <ListView android:id="@+id/left_drawer"
+        android:layout_width="240dp"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:choiceMode="singleChoice"
+        android:divider="@android:color/transparent"
+        android:dividerHeight="0dp"
+        android:background="#111"/>
+</android.support.v4.widget.DrawerLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_recurring_transactions_list.xml b/app/src/main/res/layout/fragment_scheduled_events_list.xml
similarity index 100%
rename from app/src/main/res/layout/fragment_recurring_transactions_list.xml
rename to app/src/main/res/layout/fragment_scheduled_events_list.xml
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 35070e07..71af0bb7 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -425,4 +425,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index ef0ef48d..f32748a7 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -450,4 +450,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index f502840f..d2908f98 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -435,4 +435,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 35e6d044..9408092b 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -432,4 +432,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index e2bfc384..86e38df4 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -432,4 +432,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index 1a0fb3e9..f2c3eadf 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -436,4 +436,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index f11d93e7..3d4d29c2 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -436,4 +436,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 2cd2c71c..4132c8f4 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -432,4 +432,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index 002bc7fc..be8fd868 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -437,4 +437,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index edf69495..08b8fdb0 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -435,4 +435,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 13e75d64..85cd4fae 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -438,4 +438,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index c795754f..9f1f550f 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -429,4 +429,6 @@
     <string name="title_change_passcode">Change Passcode</string>
     <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index c5d60b16..416a2fd5 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -435,4 +435,6 @@
     <string name="label_imbalance">Imbalance:</string>
     <string name="btn_add_split">Add split</string>
     <string name="menu_title_favorite">Favorite</string>
+    <string name="drawer_open">Navigation drawer opened</string>
+    <string name="drawer_close">Navigation drawer closed</string>
 </resources>
