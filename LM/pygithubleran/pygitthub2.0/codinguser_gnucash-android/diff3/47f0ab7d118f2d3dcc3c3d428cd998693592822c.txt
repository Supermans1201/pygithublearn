From 47f0ab7d118f2d3dcc3c3d428cd998693592822c Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 9 Aug 2012 11:19:58 +0200
Subject: [PATCH] Fixed: Money test fail due to non-standard cross-platform
 euro symbol Now using unicode literal

---
 GnucashMobileTest/src/org/gnucash/android/test/unit/MoneyTest.java | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/GnucashMobileTest/src/org/gnucash/android/test/unit/MoneyTest.java b/GnucashMobileTest/src/org/gnucash/android/test/unit/MoneyTest.java
index 196645dc..ee533d79 100644
--- a/GnucashMobileTest/src/org/gnucash/android/test/unit/MoneyTest.java
+++ b/GnucashMobileTest/src/org/gnucash/android/test/unit/MoneyTest.java
@@ -154,8 +154,9 @@ public void testPrinting(){
 		assertEquals(money.asString(), money.toPlainString());
 		assertEquals("15.75", money.asString());
 		
-		assertEquals("15,75 ", money.formattedString(Locale.GERMAN));		
-		assertEquals("15.75 ", money.formattedString(Locale.US));
+		// the unicode for Euro symbol is \u20AC
+		assertEquals("15,75 \u20AC", money.formattedString(Locale.GERMAN));		
+		assertEquals("15.75 \u20AC", money.formattedString(Locale.US));
 		
 		//always prints with 2 decimal places only
 		Money some = new Money(9.7469);
