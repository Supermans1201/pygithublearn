From a90da4dc7da4a27719cc9d53f190cd8958c65eeb Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 1 Dec 2015 22:05:06 +0100
Subject: [PATCH] Fix crash when deleting scheduled exports

Fixes #441
---
 .../org/gnucash/android/db/DatabaseAdapter.java    |  6 +----
 .../transaction/ScheduledActionsListFragment.java  | 26 ++++++++++++++--------
 2 files changed, 18 insertions(+), 14 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
index 533b7af7..2e810b56 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
@@ -56,10 +56,6 @@
 
     protected SQLiteStatement mReplaceStatement;
 
-    public enum UpdateMethod {
-        insert, update, replace
-    };
-
     /**
      * Opens the database adapter with an existing database
      * @param db SQLiteDatabase object
@@ -427,7 +423,7 @@ public String getUID(long id){
             if (cursor.moveToFirst()) {
                 uid = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.CommonColumns.COLUMN_UID));
             } else {
-                throw new IllegalArgumentException("Account record ID " + id + " does not exist in the db");
+                throw new IllegalArgumentException(mTableName + " Record ID " + id + " does not exist in the db");
             }
         } finally {
             cursor.close();
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
index 649f5a51..5d60d8b3 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsListFragment.java
@@ -115,16 +115,24 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
             switch (item.getItemId()) {
                 case R.id.context_menu_delete:
                     for (long id : getListView().getCheckedItemIds()) {
-                        Log.i(TAG, "Cancelling scheduled transaction(s)");
-                        String trnUID = mTransactionsDbAdapter.getUID(id);
-                        ScheduledActionDbAdapter scheduledActionDbAdapter = GnuCashApplication.getScheduledEventDbAdapter();
-                        List<ScheduledAction> actions = scheduledActionDbAdapter.getScheduledActionsWithUID(trnUID);
-
-                        if (mTransactionsDbAdapter.deleteRecord(id)){
-                            Toast.makeText(getActivity(), R.string.toast_recurring_transaction_deleted, Toast.LENGTH_SHORT).show();
-                            for (ScheduledAction action : actions) {
-                                scheduledActionDbAdapter.deleteRecord(action.getUID());
+
+                        if (mActionType == ScheduledAction.ActionType.TRANSACTION) {
+                            Log.i(TAG, "Cancelling scheduled transaction(s)");
+                            String trnUID = mTransactionsDbAdapter.getUID(id);
+                            ScheduledActionDbAdapter scheduledActionDbAdapter = GnuCashApplication.getScheduledEventDbAdapter();
+                            List<ScheduledAction> actions = scheduledActionDbAdapter.getScheduledActionsWithUID(trnUID);
+
+                            if (mTransactionsDbAdapter.deleteRecord(id)) {
+                                Toast.makeText(getActivity(),
+                                        R.string.toast_recurring_transaction_deleted,
+                                        Toast.LENGTH_SHORT).show();
+                                for (ScheduledAction action : actions) {
+                                    scheduledActionDbAdapter.deleteRecord(action.getUID());
+                                }
                             }
+                        } else if (mActionType == ScheduledAction.ActionType.BACKUP){
+                            Log.i(TAG, "Removing scheduled exports");
+                            ScheduledActionDbAdapter.getInstance().deleteRecord(id);
                         }
                     }
                     mode.finish();
