From 6019febcd50bfb1f9ba797f27127f242b6e26da1 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Thu, 5 Feb 2015 21:23:14 +0200
Subject: [PATCH] Refactored PieChartActivity class

---
 app/{lib => libs}/mpandroidchartlibrary-1-7-4.jar  | Bin
 app/res/values/strings.xml                         |   3 +
 .../gnucash/android/ui/chart/PieChartActivity.java | 145 +++++++++------------
 3 files changed, 63 insertions(+), 85 deletions(-)
 rename app/{lib => libs}/mpandroidchartlibrary-1-7-4.jar (100%)

diff --git a/app/lib/mpandroidchartlibrary-1-7-4.jar b/app/libs/mpandroidchartlibrary-1-7-4.jar
similarity index 100%
rename from app/lib/mpandroidchartlibrary-1-7-4.jar
rename to app/libs/mpandroidchartlibrary-1-7-4.jar
diff --git a/app/res/values/strings.xml b/app/res/values/strings.xml
index e24d946b..eedf16d9 100644
--- a/app/res/values/strings.xml
+++ b/app/res/values/strings.xml
@@ -356,6 +356,9 @@
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>
+    <string name="label_chart_no_data">No chart data available</string>
+    <string name="label_chart_overall">Overall</string>
+    <string name="label_chart_total">Total\n</string>
     <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
     <string name="imbalance_account_name">Imbalance</string>
     <string name="title_progress_exporting_transactions">Exporting transactions</string>
diff --git a/app/src/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/org/gnucash/android/ui/chart/PieChartActivity.java
index bb67cecc..b0505f1e 100644
--- a/app/src/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -54,7 +54,7 @@
  *
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
-public class PieChartActivity extends PassLockActivity implements OnChartValueSelectedListener, OnItemSelectedListener {
+public class PieChartActivity extends PassLockActivity implements OnChartValueSelectedListener {
 
     private static final int[] COLORS = {
             Color.parseColor("#17ee4e"), Color.parseColor("#cc1f09"), Color.parseColor("#3940f7"),
@@ -96,10 +96,11 @@ protected void onCreate(Bundle savedInstanceState) {
         mAccountsDbAdapter = new AccountsDbAdapter(this);
         mTransactionsDbAdapter = new TransactionsDbAdapter(this);
 
-        addItemsOnSpinner();
-
         mChart = (PieChart) findViewById(R.id.chart);
         mChart.setOnChartValueSelectedListener(this);
+        applyChartSetting();
+
+        addItemsOnSpinner();
 
         mPreviousMonthButton.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -119,16 +120,13 @@ public void onClick(View view) {
     }
 
     private void setData(boolean forCurrentMonth) {
-        mChartDateTextView.setText(forCurrentMonth ? mChartDate.toString(datePattern) : "Overall");
+        mChartDateTextView.setText(forCurrentMonth ? mChartDate.toString(datePattern) : getResources().getString(R.string.label_chart_overall));
         ((TextView) findViewById(R.id.selected_chart_slice)).setText("");
         mChart.highlightValues(null);
         mChart.clear();
 
-        long start = mChartDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
-        long end = mChartDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
-        ArrayList<Entry> values = new ArrayList<Entry>();
+        PieDataSet dataSet = new PieDataSet(null, "");
         ArrayList<String> names = new ArrayList<String>();
-        ArrayList<Integer> colors = new ArrayList<Integer>();
         List<String> skipUUID = new ArrayList<String>();
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
             if (account.getAccountType() == mAccountType && !account.isPlaceholderAccount()) {
@@ -138,56 +136,38 @@ private void setData(boolean forCurrentMonth) {
                 if (!skipUUID.contains(account.getUID())) {
                     double balance = 0;
                     if (forCurrentMonth) {
+                        long start = mChartDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime();
+                        long end = mChartDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
                         balance = mAccountsDbAdapter.getAccountBalance(account.getUID(), start, end).asDouble();
                     } else {
                         balance = mAccountsDbAdapter.getAccountBalance(account.getUID()).asDouble();
                     }
-                    // ToDo What with negative?
                     if (balance > 0) {
-                        values.add(new Entry((float) balance, values.size()));
+                        dataSet.addEntry(new Entry((float) balance, dataSet.getEntryCount()));
+                        dataSet.addColor(COLORS[(dataSet.getEntryCount() - 1) % COLORS.length]);
                         names.add(account.getName());
-                        colors.add(COLORS[(values.size() - 1) % COLORS.length]);
                     }
                 }
             }
         }
 
-        PieDataSet set = new PieDataSet(values, "");
-        if (set.getYValueSum() == 0) {
-            values.add(new Entry(1, 0));
+        if (dataSet.getEntryCount() == 0) {
+            dataSet.addEntry(new Entry(1, 0));
+            dataSet.setColor(Color.LTGRAY);
             names.add("");
-            colors.add(Color.LTGRAY);
-            mChart.setCenterText("No chart data available");
+            mChart.setCenterText(getResources().getString(R.string.label_chart_no_data));
             mChart.setTouchEnabled(false);
         } else {
-            mChart.setCenterText("Total\n" + set.getYValueSum());
+            mChart.setCenterText(getResources().getString(R.string.label_chart_total) + dataSet.getYValueSum());
             mChart.setTouchEnabled(true);
         }
-        set.setColors(colors);
-        mChart.setData(new PieData(names, set));
-
-        mChart.setValueTextSize(12);
-        mChart.setValueTextColor(Color.BLACK);
-        mChart.setCenterTextSize(18);
-        mChart.setDrawYValues(false);
-        mChart.setDescription("");
-        mChart.setDrawLegend(false);
-        mChart.getLegend().setForm(LegendForm.CIRCLE);
-        mChart.getLegend().setPosition(LegendPosition.RIGHT_OF_CHART_CENTER);
-
+        mChart.setData(new PieData(names, dataSet));
         mChart.invalidate();
 
-        if (mChartDate.plusMonths(1).dayOfMonth().withMinimumValue().withMillisOfDay(0).isBefore(mLatestTransaction)) {
-            setImageButtonEnabled(mNextMonthButton, true);
-        } else {
-            setImageButtonEnabled(mNextMonthButton, false);
-        }
-        if (mEarliestTransaction.getYear() != 1970 && mChartDate.minusMonths(1).dayOfMonth()
-                .withMaximumValue().withMillisOfDay(86399999).isAfter(mEarliestTransaction)) {
-            setImageButtonEnabled(mPreviousMonthButton, true);
-        } else {
-            setImageButtonEnabled(mPreviousMonthButton, false);
-        }
+        setImageButtonEnabled(mNextMonthButton,
+                mChartDate.plusMonths(1).dayOfMonth().withMinimumValue().withMillisOfDay(0).isBefore(mLatestTransaction));
+        setImageButtonEnabled(mPreviousMonthButton, (mEarliestTransaction.getYear() != 1970
+                && mChartDate.minusMonths(1).dayOfMonth().withMaximumValue().withMillisOfDay(86399999).isAfter(mEarliestTransaction)));
     }
 
     /**
@@ -208,44 +188,44 @@ private void setImageButtonEnabled(ImageButton button, boolean enabled) {
     }
 
     private void bubbleSort() {
-        ArrayList<String> names = mChart.getData().getXVals();
+        ArrayList<String> labels = mChart.getData().getXVals();
         ArrayList<Entry> values = mChart.getData().getDataSet().getYVals();
         ArrayList<Integer> colors = mChart.getData().getDataSet().getColors();
-        boolean swapped = true;
-        int j = 0;
         float tmp1;
         String tmp2;
         Integer tmp3;
-        while (swapped) {
-            swapped = false;
-            j++;
-            for (int i = 0; i < values.size() - j; i++) {
-                if (values.get(i).getVal() > values.get(i + 1).getVal()) {
-                    tmp1 = values.get(i).getVal();
-                    values.get(i).setVal(values.get(i + 1).getVal());
-                    values.get(i + 1).setVal(tmp1);
-
-                    tmp2 = names.get(i);
-                    names.set(i, names.get(i + 1));
-                    names.set(i + 1, tmp2);
-
-                    tmp3 = colors.get(i);
-                    colors.set(i, colors.get(i + 1));
-                    colors.set(i + 1, tmp3);
-
-                    swapped = true;
+        for(int i = 0; i < values.size() - 1; i++) {
+            for(int j = 1; j < values.size() - i; j++) {
+                if (values.get(j-1).getVal() > values.get(j).getVal()) {
+                    tmp1 = values.get(j - 1).getVal();
+                    values.get(j - 1).setVal(values.get(j).getVal());
+                    values.get(j).setVal(tmp1);
+
+                    tmp2 = labels.get(j - 1);
+                    labels.set(j - 1, labels.get(j));
+                    labels.set(j, tmp2);
+
+                    tmp3 = colors.get(j - 1);
+                    colors.set(j - 1, colors.get(j));
+                    colors.set(j, tmp3);
                 }
             }
         }
 
-        mChart.clear();
-        PieDataSet set = new PieDataSet(values, "");
-        set.setColors(colors);
-        mChart.setData(new PieData(names, set));
+        mChart.notifyDataSetChanged();
         mChart.highlightValues(null);
         mChart.invalidate();
     }
 
+    private void applyChartSetting() {
+        mChart.setValueTextSize(12);
+        mChart.setValueTextColor(Color.BLACK);
+        mChart.setCenterTextSize(18);
+        mChart.setDrawYValues(false);
+        mChart.setDescription("");
+        mChart.setDrawLegend(false);
+    }
+
     private void addItemsOnSpinner() {
         Spinner spinner = (Spinner) findViewById(R.id.chart_data_spinner);
         ArrayAdapter<AccountType> dataAdapter = new ArrayAdapter<AccountType>(this,
@@ -253,11 +233,21 @@ private void addItemsOnSpinner() {
                 Arrays.asList(AccountType.EXPENSE, AccountType.INCOME));
         dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
         spinner.setAdapter(dataAdapter);
+        spinner.setOnItemSelectedListener(new OnItemSelectedListener() {
+            @Override
+            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
+                mAccountType = (AccountType) ((Spinner) findViewById(R.id.chart_data_spinner)).getSelectedItem();
+                mEarliestTransaction = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType));
+                mLatestTransaction = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType));
+                mChartDate = mLatestTransaction;
+                setData(false);
+            }
 
-        spinner.setOnItemSelectedListener(this);
+            @Override
+            public void onNothingSelected(AdapterView<?> adapterView) {}
+        });
     }
 
-
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getSupportMenuInflater().inflate(R.menu.pie_chart_actions, menu);
@@ -273,6 +263,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
             }
             case R.id.menu_toggle_legend: {
                 mChart.setDrawLegend(!mChart.isDrawLegendEnabled());
+                mChart.getLegend().setForm(LegendForm.CIRCLE);
+                mChart.getLegend().setPosition(LegendPosition.RIGHT_OF_CHART_CENTER);
                 mChart.notifyDataSetChanged();
                 mChart.invalidate();
                 break;
@@ -288,10 +280,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
     @Override
     public void onValueSelected(Entry e, int dataSetIndex) {
-        if (e == null) {
-            return;
-        }
-
+        if (e == null) return;
         ((TextView) findViewById(R.id.selected_chart_slice))
                 .setText(mChart.getData().getXVals().get(e.getXIndex()) + " - " + e.getVal()
                         + " (" + String.format("%.2f", (e.getVal() / mChart.getYValueSum()) * 100) + " %)");
@@ -302,18 +291,4 @@ public void onNothingSelected() {
         ((TextView) findViewById(R.id.selected_chart_slice)).setText("");
     }
 
-    @Override
-    public void onItemSelected(AdapterView<?> parent, View view, int pos, long id) {
-        mAccountType = (AccountType) ((Spinner) findViewById(R.id.chart_data_spinner)).getSelectedItem();
-        mEarliestTransaction = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType));
-        mLatestTransaction = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType));
-
-        mChartDate = mLatestTransaction;
-
-        setData(false);
-    }
-
-    @Override
-    public void onNothingSelected(AdapterView<?> parent) {}
-
 }
