From 648b75a56308322ddf870111695c2d28764ed3af Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 11 May 2015 13:37:12 +0200
Subject: [PATCH 1/9] Improved management of scheduled backup and export

Export dialog now can only be used to create schedules, not manage them
Improved reliability of tests
Code refactoring
---
 .travis.yml                                        |   5 +-
 README.md                                          |   2 +-
 app/build.gradle                                   |  12 +-
 .../android/test/ui/AccountsActivityTest.java      |  17 +-
 .../android/test/ui/ExportTransactionsTest.java    |  17 +-
 .../android/test/ui/TransactionsActivityTest.java  |  10 +-
 .../android/db/ScheduledActionDbAdapter.java       |  66 +---
 .../org/gnucash/android/export/ExportParams.java   |   3 +-
 .../org/gnucash/android/ui/BaseDrawerActivity.java |  12 +-
 .../android/ui/account/AccountsActivity.java       |   4 +-
 .../{ => ui}/export/ExportDialogFragment.java      |  45 +--
 .../ui/export/ScheduledExportListFragment.java     | 382 +++++++++++++++++++++
 .../ui/transaction/ScheduledActionsActivity.java   |  22 +-
 .../ScheduledTransactionsListFragment.java         |   2 +-
 app/src/main/res/menu/scheduled_export_actions.xml |   7 +
 app/src/main/res/values-de/strings.xml             |   4 +
 app/src/main/res/values-el/strings.xml             |   4 +
 app/src/main/res/values-es-rMX/strings.xml         |   4 +
 app/src/main/res/values-es/strings.xml             |   4 +
 app/src/main/res/values-fr/strings.xml             |   4 +
 app/src/main/res/values-hu/strings.xml             |   4 +
 app/src/main/res/values-it/strings.xml             |   4 +
 app/src/main/res/values-nb/strings.xml             |   4 +
 app/src/main/res/values-nl/strings.xml             |   4 +
 app/src/main/res/values-pt-rBR/strings.xml         |   4 +
 app/src/main/res/values-ru/strings.xml             |   4 +
 app/src/main/res/values-zh/strings.xml             |   4 +
 app/src/main/res/values/strings.xml                |   4 +
 28 files changed, 519 insertions(+), 139 deletions(-)
 rename app/src/main/java/org/gnucash/android/{ => ui}/export/ExportDialogFragment.java (86%)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
 create mode 100644 app/src/main/res/menu/scheduled_export_actions.xml

diff --git a/.travis.yml b/.travis.yml
index 688a9cdd..8f6a7c44 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -14,15 +14,12 @@ android:
     - extra-google-google_play_services
     - extra-google-m2repository
     - extra-android-m2repository
-    #- addon-google_apis-google-19
+    - addon-google_apis-google-19
 
     # Specify at least one system image,
     # if you need to run emulator(s) during your tests
     - sys-img-armeabi-v7a-android-19
 
-before_install:
-  #- echo yes | android update sdk --all --filter build-tools-22.0.1 --no-ui --force > /dev/null
-
 # Emulator Management: Create, Start and Wait
 before_script:
   - echo no | android create avd --force -n test -t android-19 --abi armeabi-v7a
diff --git a/README.md b/README.md
index 8efdeec1..c95c260f 100644
--- a/README.md
+++ b/README.md
@@ -1,4 +1,4 @@
-<a href="https://travis-ci.org/codinguser/gnucash-android">
+<a href="https://travis-ci.org/codinguser/gnucash-android" target="_blank">
 <img src="https://travis-ci.org/codinguser/gnucash-android.svg?branch=develop" alt="Travis build status" />
 </a>
 
diff --git a/app/build.gradle b/app/build.gradle
index b0fbcd9d..31d205b4 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -6,7 +6,7 @@ apply plugin: 'crashlytics'
 def versionMajor = 1
 def versionMinor = 6
 def versionPatch = 0
-def versionBuild = 3
+def versionBuild = 4
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd_HHmm'UTC'")
@@ -24,6 +24,7 @@ android {
     buildToolsVersion "22.0.1"
     defaultConfig {
         applicationId "org.gnucash.android"
+        testApplicationId 'org.gnucash.android.test'
         minSdkVersion 10
         targetSdkVersion 19
         versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
@@ -35,9 +36,7 @@ android {
             resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
             resValue "string", "manifest_dropbox_app_key", "db-${RELEASE_DROPBOX_APP_KEY}"
         } else {
-            resValue "string", "dropbox_app_key", "dhjh8ke9wf05948"
-            resValue "string", "dropbox_app_secret", "h2t9fphj3nr4wkw"
-            resValue "string", "manifest_dropbox_app_key", "db-dhjh8ke9wf05948"
+            resValue "string", "manifest_dropbox_app_key", "db-xxx-xxxx"
         }
     }
 
@@ -83,10 +82,13 @@ android {
     productFlavors {
         development {
             applicationId 'org.gnucash.android.devel'
-            testApplicationId 'org.gnucash.android.test.devel'
+            testApplicationId 'org.gnucash.android.devel.test'
             resValue "string", "app_name", "GnuCash-devel"
             versionName "${versionMajor}.${versionMinor}.${versionPatch}-dev${versionBuild}_${buildTime()}"
             resValue "string", "app_version_name", "${versionName}"
+            resValue "string", "dropbox_app_key", "dhjh8ke9wf05948"
+            resValue "string", "dropbox_app_secret", "h2t9fphj3nr4wkw"
+            resValue "string", "manifest_dropbox_app_key", "db-dhjh8ke9wf05948"
         }
 
         beta {
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index 3f9492cc..da815131 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -89,9 +89,13 @@ protected void setUp() throws Exception {
 
         //the What's new dialog is usually displayed on first run
         String dismissDialog = getActivity().getString(R.string.label_dismiss);
-        if (mSolo.waitForText(dismissDialog,1,1000)){
+        if (mSolo.waitForText(dismissDialog)){
             mSolo.clickOnText(dismissDialog);
+            mSolo.waitForDialogToClose();
         }
+
+        //drawer is opened when the app is installed for the first time
+        mSolo.setNavigationDrawer(Solo.CLOSED);
 	}
 
 /*
@@ -207,7 +211,7 @@ public void testEditAccount(){
 
         clickSherlockActionBarItem(R.id.menu_save);
 
-		mSolo.waitForDialogToClose(2000);
+		mSolo.waitForDialogToClose();
         mSolo.waitForText("Accounts");
 
 		List<Account> accounts = mAccountsDbAdapter.getAllAccounts();
@@ -216,7 +220,8 @@ public void testEditAccount(){
 		assertEquals("Edited Account", latest.getName());
 		assertEquals(DUMMY_ACCOUNT_CURRENCY_CODE, latest.getCurrency().getCurrencyCode());	
 	}
-	
+
+    //TODO: Add test for moving content of accounts before deleting it
 	public void testDeleteAccount(){
         final String accountNameToDelete = "TO BE DELETED";
         final String accountUidToDelete = "to-be-deleted";
@@ -238,9 +243,11 @@ public void testDeleteAccount(){
 
         clickSherlockActionBarItem(R.id.context_menu_delete);
 
+        mSolo.waitForDialogToOpen();
+        mSolo.clickOnRadioButton(0);
         mSolo.clickOnView(mSolo.getView(R.id.btn_save));
 
-        mSolo.waitForDialogToClose(1000);
+        mSolo.waitForDialogToClose();
         mSolo.waitForText("Accounts");
 
         Exception expectedException = null;
@@ -285,7 +292,7 @@ public void testIntentAccountCreation(){
 	
 	protected void tearDown() throws Exception {
         mSolo.finishOpenedActivities();
-        mSolo.sleep(1000);
+        mSolo.waitForEmptyActivityStack(10000);
         mAccountsDbAdapter.deleteAllRecords();
 
 		super.tearDown();
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index 66f6a84f..e2a882ac 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -124,10 +124,11 @@ public void testExport(ExportFormat format){
 		mSolo.clickOnText(mSolo.getString(R.string.nav_menu_export));
 
         mSolo.waitForText(getActivity().getString(R.string.menu_export_transactions));
+		mSolo.waitForDialogToOpen();
 		mSolo.clickOnText(format.name());
 		mSolo.clickOnButton(mSolo.getString(R.string.btn_export));
 
-        mSolo.waitForDialogToClose(10000);
+        mSolo.waitForDialogToClose();
 		mSolo.sleep(2000); //sleep so that emulators can save the file
 
 		assertThat(folder.listFiles().length).isEqualTo(1);
@@ -151,7 +152,7 @@ public void testDeleteTransactionsAfterExport(){
 	/**
 	 * Test creating a scheduled export
 	 */
-	public void atestCreateExportSchedule(){
+	public void testCreateExportSchedule(){
 		mSolo.setNavigationDrawer(Solo.OPENED);
 		mSolo.clickOnText(mSolo.getString(R.string.nav_menu_export));
 		mSolo.waitForText(getActivity().getString(R.string.menu_export_transactions));
@@ -159,12 +160,14 @@ public void atestCreateExportSchedule(){
 		mSolo.clickOnText(ExportFormat.XML.name());
 		mSolo.clickOnView(mSolo.getView(R.id.input_recurrence));
 
-		mSolo.clickOnText("OFF");
-		mSolo.pressSpinnerItem(0, 1);
+		mSolo.clickOnToggleButton("OFF");
 		mSolo.clickOnText("Done");
+		mSolo.waitForDialogToClose();
+
 		mSolo.clickOnButton(mSolo.getString(R.string.btn_export));
-		mSolo.waitForDialogToClose(5000);
+		mSolo.waitForDialogToClose();
 
+		mSolo.sleep(2000); //wait for database save
 
 		ScheduledActionDbAdapter scheduledactionDbAdapter = new ScheduledActionDbAdapter(mDb);
 		assertThat(scheduledactionDbAdapter.getAllEnabledScheduledActions())
@@ -172,7 +175,8 @@ public void atestCreateExportSchedule(){
 				.extracting("mActionType").contains(ScheduledAction.ActionType.BACKUP);
 
 		ScheduledAction action = scheduledactionDbAdapter.getAllScheduledActions().get(0);
-		assertThat(action.getPeriodType()).isEqualTo(PeriodType.DAY);
+		assertThat(action.getPeriodType()).isEqualTo(PeriodType.WEEK);
+		assertThat(action.getEndTime()).isEqualTo(0);
 	}
 
 	//todo: add testing of export flag to unit test
@@ -180,6 +184,7 @@ public void atestCreateExportSchedule(){
 	@Override
 	protected void tearDown() throws Exception {
 		mSolo.finishOpenedActivities();
+		mSolo.waitForEmptyActivityStack(10000);
 		mAccountsDbAdapter.deleteAllRecords();
         mDbHelper.close();
         mDb.close();
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 8910c478..0d62b337 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -401,12 +401,6 @@ public void testOpenTransactionEditShouldNotModifyTransaction(){
 					TransactionFormFragment.DATE_FORMATTER.format(trxDate));
 			assertEquals(TransactionFormFragment.TIME_FORMATTER.format(expectedDate),
 					TransactionFormFragment.TIME_FORMATTER.format(trxDate));
-			
-			//FIXME: for some reason, the expected time is higher (in the future) than the actual time
-			//this should not be the case since the transaction was created with the expected time
-			//I guess it has to do with the time precision and the fact that the time is repeatedly 
-			//converted to Date objects and back. But just validating the printable date and time should be ok
-	//		assertEquals(mTransactionTimeMillis, trx.getTimeMillis());
 		}
 
 	public void testDeleteTransaction(){
@@ -414,7 +408,7 @@ public void testDeleteTransaction(){
 		
 		mSolo.clickOnCheckBox(0);		
 		clickSherlockActionBarItem(R.id.context_menu_delete);
-		
+
 		mSolo.sleep(500);
 
 		long id = mAccountsDbAdapter.getID(DUMMY_ACCOUNT_UID);
@@ -487,7 +481,7 @@ public void testLegacyIntentTransactionRecording(){
 	@Override
 	protected void tearDown() throws Exception {
 		mSolo.finishOpenedActivities();
-		mSolo.sleep(1000); //wait for activities to finish before clearing db
+		mSolo.waitForEmptyActivityStack(10000);
 		mAccountsDbAdapter.deleteAllRecords();
 		super.tearDown();
 	}
diff --git a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
index fa9433e9..3cb26df0 100644
--- a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
@@ -23,8 +23,6 @@
 import android.util.Log;
 
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.export.ExportFormat;
-import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.model.ScheduledAction;
 
 import java.util.ArrayList;
@@ -154,7 +152,7 @@ public int bulkAddScheduledActions(List<ScheduledAction> scheduledActionList){
      * @param cursor Cursor pointing to data set
      * @return ScheduledEvent object instance
      */
-    private ScheduledAction buildScheduledEventInstance(final Cursor cursor){
+    public ScheduledAction buildScheduledActionInstance(final Cursor cursor){
         String actionUid = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ACTION_UID));
         long period     = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_PERIOD));
         long startTime  = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_START_TIME));
@@ -192,7 +190,7 @@ public ScheduledAction getScheduledAction(String uid){
         ScheduledAction scheduledAction = null;
         if (cursor != null) {
             if (cursor.moveToFirst()) {
-                scheduledAction = buildScheduledEventInstance(cursor);
+                scheduledAction = buildScheduledActionInstance(cursor);
             }
             cursor.close();
         }
@@ -213,7 +211,7 @@ public ScheduledAction getScheduledAction(String uid){
         List<ScheduledAction> scheduledActions = new ArrayList<ScheduledAction>();
         try {
             while (cursor.moveToNext()) {
-                scheduledActions.add(buildScheduledEventInstance(cursor));
+                scheduledActions.add(buildScheduledActionInstance(cursor));
             }
         } finally {
             cursor.close();
@@ -222,60 +220,6 @@ public ScheduledAction getScheduledAction(String uid){
     }
 
     /**
-     * Returns the first export scheduled action in the database which matches the ExportFormat.
-     * <p>There is an expectation that there will only be one scheduled action per export format in the database.</p>
-     * @param exportFormat ExportFormat of scheduled backup
-     * @return ScheduledAction for the backup or null
-     */
-    public ScheduledAction getScheduledBackupAction(ExportFormat exportFormat){
-        Cursor cursor = mDb.query(ScheduledActionEntry.TABLE_NAME, null,
-                ScheduledActionEntry.COLUMN_TYPE + "= ?",
-                new String[]{ScheduledAction.ActionType.BACKUP.name()}, null, null, null);
-        try{
-            while(cursor.moveToNext()){
-                String paramsCsv = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TAG));
-                ExportParams params = ExportParams.parseCsv(paramsCsv);
-                if (params.getExportFormat() == exportFormat){
-                    return buildScheduledEventInstance(cursor);
-                }
-            }
-        } finally {
-            cursor.close();
-        }
-        return null;
-    }
-
-    /**
-     * Deletes the scheduled backup actions which correspond to the export format
-     * @param exportFormat Export format
-     * @return Number of records deleted
-     */
-    public int deleteScheduledBackupAction(ExportFormat exportFormat){
-        List<String> uidsToBeDeleted = new ArrayList<>();
-        Cursor cursor = mDb.query(ScheduledActionEntry.TABLE_NAME,
-                new String[]{ScheduledActionEntry.COLUMN_UID, ScheduledActionEntry.COLUMN_TAG},
-                ScheduledActionEntry.COLUMN_TYPE + "= ?",
-                new String[]{ScheduledAction.ActionType.BACKUP.name()}, null, null, null);
-        try{
-            while(cursor.moveToNext()){
-                String paramsCsv = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TAG));
-                ExportParams params = ExportParams.parseCsv(paramsCsv);
-                if (params.getExportFormat() == exportFormat){
-                    uidsToBeDeleted.add(cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_UID)));
-                }
-            }
-        } finally {
-            cursor.close();
-        }
-
-        int count = 0;
-        for (String uid : uidsToBeDeleted) {
-            count += mDb.delete(mTableName, ScheduledActionEntry.COLUMN_UID + "=?", new String[]{uid});
-        }
-        return count;
-    }
-
-    /**
      * Returns all scheduled events in the database
      * @return List with all scheduled events
      */
@@ -283,7 +227,7 @@ public int deleteScheduledBackupAction(ExportFormat exportFormat){
         Cursor cursor = fetchAllRecords();
         List<ScheduledAction> scheduledActions = new ArrayList<ScheduledAction>();
         while (cursor.moveToNext()){
-            scheduledActions.add(buildScheduledEventInstance(cursor));
+            scheduledActions.add(buildScheduledActionInstance(cursor));
         }
         return scheduledActions;
     }
@@ -297,7 +241,7 @@ public int deleteScheduledBackupAction(ExportFormat exportFormat){
                 null, ScheduledActionEntry.COLUMN_ENABLED + "=1", null, null, null, null);
         List<ScheduledAction> scheduledActions = new ArrayList<ScheduledAction>();
         while (cursor.moveToNext()){
-            scheduledActions.add(buildScheduledEventInstance(cursor));
+            scheduledActions.add(buildScheduledActionInstance(cursor));
         }
         return scheduledActions;
     }
diff --git a/app/src/main/java/org/gnucash/android/export/ExportParams.java b/app/src/main/java/org/gnucash/android/export/ExportParams.java
index b121c474..120d052b 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportParams.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportParams.java
@@ -17,12 +17,13 @@
 package org.gnucash.android.export;
 
 import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.ui.export.ExportDialogFragment;
 
 /**
  * Encapsulation of the parameters used for exporting transactions.
  * The parameters are determined by the user in the export dialog and are then transmitted to the asynchronous task which
  * actually performs the export.
- * @see org.gnucash.android.export.ExportDialogFragment
+ * @see ExportDialogFragment
  * @see ExportAsyncTask
  *
  * @author Ngewi Fet <ngewif@gmail.com>
diff --git a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
index f9e7b85e..c6e1aa9f 100644
--- a/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/BaseDrawerActivity.java
@@ -143,7 +143,7 @@ private MergeAdapter createNavDrawerMergeAdapter() {
         settingsHeader.setTextColor(titleColorGreen);
 
         ArrayList<String> aboutNavOptions = new ArrayList<>();
-//        aboutNavOptions.add("Backup & Export");
+        aboutNavOptions.add(getString(R.string.nav_menu_scheduled_backups));
         aboutNavOptions.add(getString(R.string.nav_menu_settings));
         //TODO: add help view
         ArrayAdapter<String> aboutNavAdapter = new ArrayAdapter<>(this,
@@ -217,7 +217,15 @@ protected void selectItem(int position) {
             }
                 break;
 
-            case 9: //Settings activity
+            case 9: //scheduled backup
+                Intent intent = new Intent(this, ScheduledActionsActivity.class);
+                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP);
+                intent.putExtra(ScheduledActionsActivity.EXTRA_DISPLAY_MODE,
+                        ScheduledActionsActivity.DisplayMode.EXPORT_ACTIONS);
+                startActivity(intent);
+                break;
+
+            case 10: //Settings activity
                 startActivity(new Intent(this, SettingsActivity.class));
                 break;
 
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 3991a1e8..2f778431 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -54,12 +54,10 @@
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseSchema;
-import org.gnucash.android.export.ExportDialogFragment;
+import org.gnucash.android.ui.export.ExportDialogFragment;
 import org.gnucash.android.export.xml.GncXmlExporter;
-import org.gnucash.android.importer.GncXmlImporter;
 import org.gnucash.android.importer.ImportAsyncTask;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.service.SchedulerService;
 import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.chart.ChartReportActivity;
 import org.gnucash.android.ui.passcode.PassLockActivity;
diff --git a/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportDialogFragment.java
similarity index 86%
rename from app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java
rename to app/src/main/java/org/gnucash/android/ui/export/ExportDialogFragment.java
index 3675b89f..6df927cb 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportDialogFragment.java
@@ -14,10 +14,9 @@
  * limitations under the License.
  */
 
-package org.gnucash.android.export;
+package org.gnucash.android.ui.export;
 
 import android.app.Activity;
-import android.app.ProgressDialog;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
@@ -41,20 +40,17 @@
 import com.doomonafireball.betterpickers.recurrencepicker.EventRecurrenceFormatter;
 import com.doomonafireball.betterpickers.recurrencepicker.RecurrencePickerDialog;
 import com.dropbox.sync.android.DbxAccountManager;
-import com.google.android.gms.common.api.GoogleApiClient;
-import com.google.android.gms.common.api.ResultCallback;
-import com.google.android.gms.drive.Drive;
-import com.google.android.gms.drive.DriveFolder;
-import com.google.android.gms.drive.MetadataChangeSet;
 
 import org.gnucash.android.R;
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.ScheduledActionDbAdapter;
+import org.gnucash.android.export.ExportAsyncTask;
+import org.gnucash.android.export.ExportFormat;
+import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.ui.settings.SettingsActivity;
 import org.gnucash.android.ui.util.RecurrenceParser;
 
-import java.io.File;
 import java.util.List;
 import java.util.UUID;
 
@@ -138,22 +134,18 @@ public void onClick(View v) {
 			exportParameters.setExportTarget(mExportTarget);
 			exportParameters.setDeleteTransactionsAfterExport(mDeleteAllCheckBox.isChecked());
 
-			ScheduledActionDbAdapter scheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
-			scheduledActionDbAdapter.deleteScheduledBackupAction(mExportFormat);
-			List<ScheduledAction> events = RecurrenceParser.parse(mEventRecurrence,
+			List<ScheduledAction> scheduledActions = RecurrenceParser.parse(mEventRecurrence,
 					ScheduledAction.ActionType.BACKUP);
-			//this is done on purpose, we will add only one scheduled action per export type
-			//FIXME: Prevent user from setting multiple days in dialog or update scheduled action parser to return only one recurrence
-			if (!events.isEmpty()){
-				ScheduledAction scheduledAction = events.get(0);
+			for (ScheduledAction scheduledAction : scheduledActions) {
 				scheduledAction.setTag(exportParameters.toCsv());
 				scheduledAction.setActionUID(UUID.randomUUID().toString().replaceAll("-", ""));
-				scheduledActionDbAdapter.addScheduledAction(scheduledAction);
+				ScheduledActionDbAdapter.getInstance().addScheduledAction(scheduledAction);
 			}
-            dismiss();
 
             Log.i(TAG, "Commencing async export of transactions");
             new ExportAsyncTask(getActivity()).execute(exportParameters);
+
+			dismiss();
 		}
 		
 	}
@@ -186,27 +178,8 @@ public void onRadioButtonClicked(View view){
 				mExportWarningTextView.setText(R.string.export_warning_xml);
 				break;
         }
-		refreshRecurrenceTextView(mExportFormat);
     }
 
-	/**
-	 * Refreshes the recurrence text view for the specified backup format
-	 * This is meant to be called every time the backup format is changed in the dialog
-	 * @param exportFormat ExportFormat
-	 */
-	private void refreshRecurrenceTextView(ExportFormat exportFormat){
-		String repeatString	= getString(R.string.label_tap_to_create_schedule);
-		mEventRecurrence = new EventRecurrence();
-		ScheduledActionDbAdapter scheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
-		ScheduledAction scheduledBackup = scheduledActionDbAdapter.getScheduledBackupAction(exportFormat);
-		if (scheduledBackup != null){
-			repeatString = scheduledBackup.getRepeatString();
-			mRecurrenceRule = scheduledBackup.getRuleString();
-			mEventRecurrence.parse(mRecurrenceRule);
-		}
-		mRecurrenceTextView.setText(repeatString);
-	}
-
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
new file mode 100644
index 00000000..0f3a4ee0
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/export/ScheduledExportListFragment.java
@@ -0,0 +1,382 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.export;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.database.Cursor;
+import android.graphics.Rect;
+import android.os.Bundle;
+import android.support.v4.app.LoaderManager;
+import android.support.v4.content.Loader;
+import android.support.v4.widget.SimpleCursorAdapter;
+import android.util.Log;
+import android.util.SparseBooleanArray;
+import android.view.LayoutInflater;
+import android.view.TouchDelegate;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.CheckBox;
+import android.widget.CompoundButton;
+import android.widget.ListView;
+import android.widget.TextView;
+
+import com.actionbarsherlock.app.ActionBar;
+import com.actionbarsherlock.app.SherlockListFragment;
+import com.actionbarsherlock.view.ActionMode;
+import com.actionbarsherlock.view.Menu;
+import com.actionbarsherlock.view.MenuInflater;
+import com.actionbarsherlock.view.MenuItem;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.DatabaseCursorLoader;
+import org.gnucash.android.db.DatabaseSchema;
+import org.gnucash.android.db.ScheduledActionDbAdapter;
+import org.gnucash.android.export.ExportParams;
+import org.gnucash.android.model.ScheduledAction;
+import org.gnucash.android.ui.account.AccountsActivity;
+
+/**
+ * Fragment for displayed scheduled backup entries in the database
+ */
+public class ScheduledExportListFragment extends SherlockListFragment implements
+        LoaderManager.LoaderCallbacks<Cursor> {
+
+    /**
+     * Logging tag
+     */
+    protected static final String TAG = "ScheduledTrxnFragment";
+
+    private ScheduledActionDbAdapter mScheduledActionDbAdapter;
+    private SimpleCursorAdapter mCursorAdapter;
+    private ActionMode mActionMode = null;
+
+    /**
+     * Flag which is set when a transaction is selected
+     */
+    private boolean mInEditMode = false;
+
+
+    /**
+     * Callbacks for the menu items in the Context ActionBar (CAB) in action mode
+     */
+    private ActionMode.Callback mActionModeCallbacks = new ActionMode.Callback() {
+
+        @Override
+        public boolean onCreateActionMode(ActionMode mode, Menu menu) {
+            MenuInflater inflater = mode.getMenuInflater();
+            inflater.inflate(R.menu.transactions_context_menu, menu);
+            menu.removeItem(R.id.context_menu_move_transactions);
+            return true;
+        }
+
+        @Override
+        public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
+            //nothing to see here, move along
+            return false;
+        }
+
+        @Override
+        public void onDestroyActionMode(ActionMode mode) {
+            finishEditMode();
+        }
+
+        @Override
+        public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
+            switch (item.getItemId()) {
+                case R.id.context_menu_delete:
+                    for (long id : getListView().getCheckedItemIds()) {
+                        Log.i(TAG, "Deleting scheduled export(s)");
+                        mScheduledActionDbAdapter.deleteRecord(id);
+                    }
+                    mode.finish();
+                    getLoaderManager().destroyLoader(0);
+                    refreshList();
+                    return true;
+
+                default:
+                    return false;
+            }
+        }
+    };
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        mScheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
+        mCursorAdapter = new ScheduledExportCursorAdapter(
+                getActivity().getApplicationContext(),
+                R.layout.list_item_scheduled_trxn, null,
+                new String[]{}, new int[]{});
+        setListAdapter(mCursorAdapter);
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.fragment_scheduled_events_list, container, false);
+    }
+
+    @Override
+    public void onActivityCreated(Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+
+        ActionBar actionBar = getSherlockActivity().getSupportActionBar();
+        actionBar.setDisplayShowTitleEnabled(true);
+        actionBar.setDisplayHomeAsUpEnabled(true);
+        actionBar.setHomeButtonEnabled(true);
+        actionBar.setTitle(R.string.title_scheduled_exports);
+
+        setHasOptionsMenu(true);
+        getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
+        ((TextView)getListView().getEmptyView()).setText(R.string.label_no_scheduled_exports_to_display);
+    }
+
+    /**
+     * Reload the list of transactions and recompute account balances
+     */
+    public void refreshList(){
+        getLoaderManager().restartLoader(0, null, this);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        refreshList();
+    }
+
+    @Override
+    public void onListItemClick(ListView l, View v, int position, long id) {
+        super.onListItemClick(l, v, position, id);
+        if (mActionMode != null){
+            CheckBox checkbox = (CheckBox) v.findViewById(R.id.checkbox);
+            checkbox.setChecked(!checkbox.isChecked());
+            return;
+        } else {
+            startActionMode();
+        }
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        menu.removeItem(R.id.menu_search);
+        menu.removeItem(R.id.menu_settings);
+        inflater.inflate(R.menu.scheduled_export_actions, menu);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()){
+            case R.id.menu_add_scheduled_export:
+                AccountsActivity.showExportDialog(getActivity());
+                return true;
+            default:
+                return super.onOptionsItemSelected(item);
+        }
+    }
+
+    @Override
+    public Loader<Cursor> onCreateLoader(int arg0, Bundle arg1) {
+        Log.d(TAG, "Creating transactions loader");
+        return new ScheduledExportCursorLoader(getActivity());
+    }
+
+    @Override
+    public void onLoadFinished(Loader<Cursor> loader, Cursor cursor) {
+        Log.d(TAG, "Scheduled backup loader finished. Swapping in cursor");
+        mCursorAdapter.swapCursor(cursor);
+        mCursorAdapter.notifyDataSetChanged();
+    }
+
+    @Override
+    public void onLoaderReset(Loader<Cursor> loader) {
+        Log.d(TAG, "Resetting scheduled backup loader");
+        mCursorAdapter.swapCursor(null);
+    }
+
+    /**
+     * Finishes the edit mode in the list.
+     * Edit mode is started when at least one list item is selected
+     */
+    public void finishEditMode(){
+        mInEditMode = false;
+        uncheckAllItems();
+        mActionMode = null;
+    }
+
+    /**
+     * Sets the title of the Context ActionBar when in action mode.
+     * It sets the number highlighted items
+     */
+    public void setActionModeTitle(){
+        int count = getListView().getCheckedItemIds().length; //mSelectedIds.size();
+        if (count > 0){
+            mActionMode.setTitle(getResources().getString(R.string.title_selected, count));
+        }
+    }
+
+    /**
+     * Unchecks all the checked items in the list
+     */
+    private void uncheckAllItems() {
+        SparseBooleanArray checkedPositions = getListView().getCheckedItemPositions();
+        ListView listView = getListView();
+        for (int i = 0; i < checkedPositions.size(); i++) {
+            int position = checkedPositions.keyAt(i);
+            listView.setItemChecked(position, false);
+        }
+    }
+
+
+    /**
+     * Starts action mode and activates the Context ActionBar (CAB)
+     * Action mode is initiated as soon as at least one transaction is selected (highlighted)
+     */
+    private void startActionMode(){
+        if (mActionMode != null) {
+            return;
+        }
+        mInEditMode = true;
+        // Start the CAB using the ActionMode.Callback defined above
+        mActionMode = getSherlockActivity().startActionMode(mActionModeCallbacks);
+    }
+
+    /**
+     * Stops action mode and deselects all selected transactions.
+     * This method only has effect if the number of checked items is greater than 0 and {@link #mActionMode} is not null
+     */
+    private void stopActionMode(){
+        int checkedCount = getListView().getCheckedItemIds().length;
+        if (checkedCount <= 0 && mActionMode != null) {
+            mActionMode.finish();
+        }
+    }
+
+
+    /**
+     * Extends a simple cursor adapter to bind transaction attributes to views
+     * @author Ngewi Fet <ngewif@gmail.com>
+     */
+    protected class ScheduledExportCursorAdapter extends SimpleCursorAdapter {
+
+        public ScheduledExportCursorAdapter(Context context, int layout, Cursor c,
+                                            String[] from, int[] to) {
+            super(context, layout, c, from, to, 0);
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+            final View view = super.getView(position, convertView, parent);
+            final int itemPosition = position;
+            CheckBox checkbox = (CheckBox) view.findViewById(R.id.checkbox);
+            //TODO: Revisit this if we ever change the application theme
+            int id = Resources.getSystem().getIdentifier("btn_check_holo_light", "drawable", "android");
+            checkbox.setButtonDrawable(id);
+
+            final TextView secondaryText = (TextView) view.findViewById(R.id.secondary_text);
+
+            checkbox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+
+                @Override
+                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                    getListView().setItemChecked(itemPosition, isChecked);
+                    if (isChecked) {
+                        startActionMode();
+                    } else {
+                        stopActionMode();
+                    }
+                    setActionModeTitle();
+                }
+            });
+
+
+            ListView listView = (ListView) parent;
+            if (mInEditMode && listView.isItemChecked(position)){
+                view.setBackgroundColor(getResources().getColor(R.color.abs__holo_blue_light));
+                secondaryText.setTextColor(getResources().getColor(android.R.color.white));
+            } else {
+                view.setBackgroundColor(getResources().getColor(android.R.color.transparent));
+                secondaryText.setTextColor(getResources().getColor(android.R.color.secondary_text_light_nodisable));
+                checkbox.setChecked(false);
+            }
+
+            final View checkBoxView = checkbox;
+            final View parentView = view;
+            parentView.post(new Runnable() {
+                @Override
+                public void run() {
+                    if (isAdded()){ //may be run when fragment has been unbound from activity
+                        float extraPadding = getResources().getDimension(R.dimen.edge_padding);
+                        final android.graphics.Rect hitRect = new Rect();
+                        checkBoxView.getHitRect(hitRect);
+                        hitRect.right   += extraPadding;
+                        hitRect.bottom  += 3*extraPadding;
+                        hitRect.top     -= extraPadding;
+                        hitRect.left    -= 2*extraPadding;
+                        parentView.setTouchDelegate(new TouchDelegate(hitRect, checkBoxView));
+                    }
+                }
+            });
+
+            return view;
+        }
+
+        @Override
+        public void bindView(View view, Context context, Cursor cursor) {
+            super.bindView(view, context, cursor);
+
+            ScheduledAction scheduledAction = mScheduledActionDbAdapter.buildScheduledActionInstance(cursor);
+
+            TextView primaryTextView = (TextView) view.findViewById(R.id.primary_text);
+            ExportParams params = ExportParams.parseCsv(scheduledAction.getTag());
+            primaryTextView.setText(params.getExportFormat().name() + " "
+                    + scheduledAction.getActionType().name().toLowerCase() + " to "
+                    + params.getExportTarget().name().toLowerCase());
+
+            view.findViewById(R.id.right_text).setVisibility(View.GONE);
+
+            TextView descriptionTextView = (TextView) view.findViewById(R.id.secondary_text);
+            descriptionTextView.setText(scheduledAction.getRepeatString());
+
+        }
+    }
+
+    /**
+     * {@link DatabaseCursorLoader} for loading recurring transactions asynchronously from the database
+     * @author Ngewi Fet <ngewif@gmail.com>
+     */
+    protected static class ScheduledExportCursorLoader extends DatabaseCursorLoader {
+
+        public ScheduledExportCursorLoader(Context context) {
+            super(context);
+        }
+
+        @Override
+        public Cursor loadInBackground() {
+            mDatabaseAdapter = ScheduledActionDbAdapter.getInstance();
+
+            Cursor c = mDatabaseAdapter.fetchAllRecords(
+                    DatabaseSchema.ScheduledActionEntry.COLUMN_TYPE + "=?",
+                    new String[]{ScheduledAction.ActionType.BACKUP.name()});
+
+            registerContentObserver(c);
+            return c;
+        }
+    }
+
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
index 8ba54cb3..327b1ffe 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledActionsActivity.java
@@ -19,9 +19,8 @@
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 
-import com.actionbarsherlock.view.MenuItem;
-
 import org.gnucash.android.R;
+import org.gnucash.android.ui.export.ScheduledExportListFragment;
 import org.gnucash.android.ui.passcode.PassLockActivity;
 
 import java.util.MissingFormatArgumentException;
@@ -49,21 +48,32 @@ protected void onCreate(Bundle savedInstanceState) {
 
         switch (mDisplayMode){
             case ALL_ACTIONS:
-                showAllScheduledEventsFragment();
-                break;
+                //TODO: do we even want this option. For now fall through to SX
 
             case TRANSACTION_ACTIONS:
                 showScheduledTransactionsFragment();
                 break;
 
             case EXPORT_ACTIONS:
-
+                showScheduledExportsFragment();
                 break;
         }
     }
 
-    private void showAllScheduledEventsFragment(){
+    /**
+     * Shows the fragment with scheduled exports
+     */
+    private void showScheduledExportsFragment(){
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction = fragmentManager
+                .beginTransaction();
+
+        ScheduledExportListFragment exportListFragment = new ScheduledExportListFragment();
 
+        fragmentTransaction.replace(R.id.fragment_container,
+                exportListFragment, "fragment_recurring_transactions");
+
+        fragmentTransaction.commit();
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
index 39ef8382..b633dddd 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/ScheduledTransactionsListFragment.java
@@ -382,7 +382,7 @@ public void bindView(View view, Context context, Cursor cursor) {
             TextView descriptionTextView = (TextView) view.findViewById(R.id.secondary_text);
 
             ScheduledActionDbAdapter scheduledActionDbAdapter = ScheduledActionDbAdapter.getInstance();
-            String scheduledActionUID = cursor.getString(cursor.getColumnIndexOrThrow("origin_scheduled_action_uid"));
+            String scheduledActionUID = cursor.getString(cursor.getColumnIndexOrThrow("origin_scheduled_action_uid")); //column created from join when fetching scheduled transactions
             view.setTag(scheduledActionUID);
             ScheduledAction scheduledAction = scheduledActionDbAdapter.getScheduledAction(scheduledActionUID);
             descriptionTextView.setText(scheduledAction.getRepeatString());
diff --git a/app/src/main/res/menu/scheduled_export_actions.xml b/app/src/main/res/menu/scheduled_export_actions.xml
new file mode 100644
index 00000000..f4553a07
--- /dev/null
+++ b/app/src/main/res/menu/scheduled_export_actions.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:id="@+id/menu_add_scheduled_export"
+        android:icon="@drawable/content_new_holo_dark"
+        android:title="@string/title_create_export_schedule"
+        android:showAsAction="always"/>
+</menu>
\ No newline at end of file
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index eefdccc0..06b25d09 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -492,4 +492,8 @@ No user-identifiable information will be collected as part of this process!</str
 	<string name="label_report_currency">Select currency</string>
 	<string name="title_use_account_color">Account color in reports</string>
 	<string name="summary_use_account_color">Use account color in the pie chart</string>
+	<string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+	<string name="title_scheduled_exports">Scheduled Exports</string>
+	<string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+	<string name="title_create_export_schedule">Create export schedule</string>
 </resources>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index daae6efb..83f02143 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -511,4 +511,8 @@ No user-identifiable information will be collected as part of this process!
 	<string name="label_report_currency">Select currency</string>
 	<string name="title_use_account_color">Account color in reports</string>
 	<string name="summary_use_account_color">Use account color in the pie chart</string>
+	<string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+	<string name="title_scheduled_exports">Scheduled Exports</string>
+	<string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+	<string name="title_create_export_schedule">Create export schedule</string>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index a9b699db..04043549 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -496,4 +496,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+    <string name="title_scheduled_exports">Scheduled Exports</string>
+    <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+    <string name="title_create_export_schedule">Create export schedule</string>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index d495135c..4e3e4a90 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -493,4 +493,8 @@ Este proceso solo recoge informaci&#243;n que no permite identificar al usuario<
 	<string name="label_report_currency">Select currency</string>
 	<string name="title_use_account_color">Account color in reports</string>
 	<string name="summary_use_account_color">Use account color in the pie chart</string>
+	<string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+	<string name="title_scheduled_exports">Scheduled Exports</string>
+	<string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+	<string name="title_create_export_schedule">Create export schedule</string>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 94cefb41..447f6447 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -493,4 +493,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+    <string name="title_scheduled_exports">Scheduled Exports</string>
+    <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+    <string name="title_create_export_schedule">Create export schedule</string>
 </resources>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index b0a31341..baf67383 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -497,4 +497,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+    <string name="title_scheduled_exports">Scheduled Exports</string>
+    <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+    <string name="title_create_export_schedule">Create export schedule</string>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index d5215d02..5fd9d1ac 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -497,4 +497,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+    <string name="title_scheduled_exports">Scheduled Exports</string>
+    <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+    <string name="title_create_export_schedule">Create export schedule</string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index 392b5f30..d70dc3d7 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -494,4 +494,8 @@ No user-identifiable information will be collected as part of this process!
 	<string name="label_report_currency">Select currency</string>
 	<string name="title_use_account_color">Account color in reports</string>
 	<string name="summary_use_account_color">Use account color in the pie chart</string>
+	<string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+	<string name="title_scheduled_exports">Scheduled Exports</string>
+	<string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+	<string name="title_create_export_schedule">Create export schedule</string>
 </resources>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index f385acce..ec915353 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -498,4 +498,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+    <string name="title_scheduled_exports">Scheduled Exports</string>
+    <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+    <string name="title_create_export_schedule">Create export schedule</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index b30baf9b..ec5d75aa 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -496,4 +496,8 @@ No user-identifiable information will be collected as part of this process!
 	<string name="label_report_currency">Select currency</string>
 	<string name="title_use_account_color">Account color in reports</string>
 	<string name="summary_use_account_color">Use account color in the pie chart</string>
+	<string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+	<string name="title_scheduled_exports">Scheduled Exports</string>
+	<string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+	<string name="title_create_export_schedule">Create export schedule</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 31500dc4..6380d2d2 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -502,4 +502,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+    <string name="title_scheduled_exports">Scheduled Exports</string>
+    <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+    <string name="title_create_export_schedule">Create export schedule</string>
 </resources>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index 4d90f344..f321303b 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -494,4 +494,8 @@ No user-identifiable information will be collected as part of this process!
     <string name="label_report_currency">Select currency</string>
     <string name="title_use_account_color">Account color in reports</string>
     <string name="summary_use_account_color">Use account color in the pie chart</string>
+    <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+    <string name="title_scheduled_exports">Scheduled Exports</string>
+    <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+    <string name="title_create_export_schedule">Create export schedule</string>
 </resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 9b3384e7..5abed413 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -501,4 +501,8 @@
 No user-identifiable information will be collected as part of this process!</string>
     <string name="label_export_format">Export Format</string>
     <string name="toast_backup_folder_not_found">Backup folder cannot be found. Make sure the SD Card is mounted!</string>
+    <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+    <string name="title_scheduled_exports">Scheduled Exports</string>
+    <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+    <string name="title_create_export_schedule">Create export schedule</string>
 </resources>

From 6d29fee4eba2d49498c380e16dae901cd64c6b39 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 11 May 2015 17:17:25 +0200
Subject: [PATCH 2/9] Ignore credit-formula and debit-formula slots when
 parsing scheduled transactions from XML

Template split amounts are exported with credit-numeric and debit-numeric
Shortened file name of dev build
---
 app/build.gradle                                   |   2 +-
 .../gnucash/android/export/xml/GncXmlExporter.java |  31 +++---
 .../gnucash/android/export/xml/GncXmlHelper.java   |  31 ++++--
 .../gnucash/android/importer/GncXmlHandler.java    | 123 ++++++++++-----------
 .../gnucash/android/importer/GncXmlImporter.java   |   3 +-
 .../main/java/org/gnucash/android/model/Split.java |   4 +-
 6 files changed, 104 insertions(+), 90 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 31d205b4..18c53cc3 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -9,7 +9,7 @@ def versionPatch = 0
 def versionBuild = 4
 
 def buildTime() {
-    def df = new SimpleDateFormat("yyyyMMdd_HHmm'UTC'")
+    def df = new SimpleDateFormat("yyyyMMdd")
     df.setTimeZone(TimeZone.getTimeZone("UTC"))
     return df.format(new Date())
 }
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index 50bf361e..7d798c5e 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -274,10 +274,8 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
                         TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_TIMESTAMP + " ASC , " +
                         TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_UID + " ASC ");
         String lastTrxUID = "";
-        Currency trxCurrency;
-        int fractionDigits;
-        BigDecimal denom = new BigDecimal(100);
-        String denomString = "100"; //FIXME: Should this be currency dependent?
+        Currency trxCurrency = null;
+        String denomString = "100";
 
         if (exportTemplates) {
             mRootTemplateAccount = new Account("Template Root");
@@ -314,11 +312,6 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
                 // currency
                 String currency = cursor.getString(cursor.getColumnIndexOrThrow("trans_currency"));
                 trxCurrency = Currency.getInstance(currency);
-                fractionDigits = trxCurrency.getDefaultFractionDigits();
-                int denomInt;
-                denomInt = (int) Math.pow(10, fractionDigits);
-                denom = new BigDecimal(denomInt);
-                denomString = Integer.toString(denomInt);
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_TRX_CURRENCY);
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_COMMODITY_SPACE);
                 xmlSerializer.text("ISO4217");
@@ -402,7 +395,7 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
             BigDecimal splitAmount = new BigDecimal(cursor.getString(cursor.getColumnIndexOrThrow("split_amount")));
             String strValue = "0/" + denomString;
             if (!exportTemplates) { //when doing normal transaction export
-                strValue = (trxType.equals("CREDIT") ? "-" : "") + splitAmount.multiply(denom).stripTrailingZeros().toPlainString() + "/" + denomString;
+                strValue = (trxType.equals("CREDIT") ? "-" : "") + GncXmlHelper.formatSplitAmount(splitAmount, trxCurrency);
             }
             xmlSerializer.startTag(null, GncXmlHelper.TAG_SPLIT_VALUE);
             xmlSerializer.text(strValue);
@@ -442,9 +435,21 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
                 slotTypes.add(GncXmlHelper.ATTR_VALUE_GUID);
                 slotValues.add(cursor.getString(cursor.getColumnIndexOrThrow("split_acct_uid")));
                 TransactionType type = TransactionType.valueOf(trxType);
-                slotKeys.add(type == TransactionType.CREDIT ? GncXmlHelper.KEY_CREDIT_FORMULA : GncXmlHelper.KEY_DEBIT_FORMULA);
-                slotTypes.add(GncXmlHelper.ATTR_VALUE_STRING);
-                slotValues.add(GncXmlHelper.formatTemplateSplitAmount(splitAmount));
+                if (type == TransactionType.CREDIT){
+                    slotKeys.add(GncXmlHelper.KEY_CREDIT_FORMULA);
+                    slotTypes.add(GncXmlHelper.ATTR_VALUE_STRING);
+                    slotValues.add(GncXmlHelper.formatTemplateSplitAmount(splitAmount));
+                    slotKeys.add(GncXmlHelper.KEY_CREDIT_NUMERIC);
+                    slotTypes.add(GncXmlHelper.ATTR_VALUE_NUMERIC);
+                    slotValues.add(GncXmlHelper.formatSplitAmount(splitAmount, trxCurrency));
+                } else {
+                    slotKeys.add(GncXmlHelper.KEY_DEBIT_FORMULA);
+                    slotTypes.add(GncXmlHelper.ATTR_VALUE_STRING);
+                    slotValues.add(GncXmlHelper.formatTemplateSplitAmount(splitAmount));
+                    slotKeys.add(GncXmlHelper.KEY_DEBIT_NUMERIC);
+                    slotTypes.add(GncXmlHelper.ATTR_VALUE_NUMERIC);
+                    slotValues.add(GncXmlHelper.formatSplitAmount(splitAmount, trxCurrency));
+                }
 
                 exportSlots(xmlSerializer, slotKeys, slotTypes, slotValues);
 
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
index d3953120..9c4bad32 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlHelper.java
@@ -28,6 +28,7 @@
 import java.text.NumberFormat;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
+import java.util.Currency;
 import java.util.Date;
 import java.util.Locale;
 import java.util.regex.Matcher;
@@ -46,6 +47,7 @@
     public static final String ATTR_KEY_TYPE        = "type";
     public static final String ATTR_KEY_VERSION     = "version";
     public static final String ATTR_VALUE_STRING    = "string";
+    public static final String ATTR_VALUE_NUMERIC   = "numeric";
     public static final String ATTR_VALUE_GUID      = "guid";
     public static final String ATTR_VALUE_BOOK      = "book";
     public static final String TAG_GDATE            = "gdate";
@@ -134,6 +136,8 @@
     public static final String KEY_SPLIT_ACCOUNT_SLOT       = "account";
     public static final String KEY_DEBIT_FORMULA            = "debit-formula";
     public static final String KEY_CREDIT_FORMULA           = "credit-formula";
+    public static final String KEY_DEBIT_NUMERIC            = "debit-numeric";
+    public static final String KEY_CREDIT_NUMERIC           = "credit-numeric";
     public static final String KEY_FROM_SCHED_ACTION        = "from-sched-xaction";
     public static final String KEY_DEFAULT_TRANSFER_ACCOUNT = "default_transfer_account";
 
@@ -158,17 +162,6 @@ public static long parseDate(String dateString) throws ParseException {
     }
 
     /**
-     * Formats the money amounts into the GnuCash XML format. GnuCash stores debits as positive and credits as negative
-     * @param split Split for which the amount is to be formatted
-     * @return GnuCash XML representation of amount
-     */
-    public static String formatMoney(Split split){
-        Money amount = split.getType() == TransactionType.DEBIT ? split.getAmount() : split.getAmount().negate();
-        BigDecimal decimal = amount.asBigDecimal().multiply(new BigDecimal(100));
-        return decimal.stripTrailingZeros().toPlainString() + "/100";
-    }
-
-    /**
      * Parses the amounts in template transaction splits.
      * <p>GnuCash desktop formats the amounts based on the locale of the computer. That poses a problem here as the input can vary per user.<br/>
      *     The solution is to parse the string irrespective of comma or thousands separators as follows:
@@ -206,6 +199,7 @@ public static BigDecimal parseTemplateSplitAmount(@NonNull String amountString){
      * Parses amount strings from GnuCash XML into {@link java.math.BigDecimal}s
      * @param amountString String containing the amount
      * @return BigDecimal with numerical value
+     * @throws ParseException if the amount could not be parsed
      */
     public static BigDecimal parseSplitAmount(String amountString) throws ParseException {
         int pos = amountString.indexOf("/");
@@ -219,6 +213,21 @@ public static BigDecimal parseSplitAmount(String amountString) throws ParseExcep
     }
 
     /**
+     * Formats money amounts for splits in the format 2550/100
+     * @param amount Split amount as BigDecimal
+     * @param trxCurrency Currency of the transaction
+     * @return Formatted split amount
+     */
+    public static String formatSplitAmount(BigDecimal amount, Currency trxCurrency){
+        int fractionDigits = trxCurrency.getDefaultFractionDigits();
+        int denomInt = (int) Math.pow(10, fractionDigits);
+        BigDecimal denom = new BigDecimal(denomInt);
+        String denomString = Integer.toString(denomInt);
+
+        return amount.multiply(denom).stripTrailingZeros().toPlainString() + "/" + denomString;
+    }
+
+    /**
      * Format the amount in template transaction splits.
      * <p>GnuCash desktop always formats with a locale dependent format, and that varies per user.<br>
      * So we will use the device locale here and hope that the user has the same locale on the desktop GnuCash</p>
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
index 03cfe708..c2b12a52 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlHandler.java
@@ -173,24 +173,23 @@
     boolean mInExported         = false;
     boolean mInTemplates        = false;
     boolean mInSplitAccountSlot = false;
-    boolean mInCreditFormulaSlot = false;
-    boolean mInDebitFormulaSlot = false;
+    boolean mInCreditNumericSlot = false;
+    boolean mInDebitNumericSlot = false;
     boolean mIsScheduledStart   = false;
     boolean mIsScheduledEnd     = false;
     boolean mIsLastRun          = false;
     boolean mIsRecurrenceStart  = false;
 
     /**
-     * Flag to determine if to ignore template transactions.
-     * If this flag is set, both template transactions and scheduled actions will be ignored.
-     * This flag is mostly set when an error occurs in parsing the template transaction amount.
+     * Multiplier for the recurrence period type. e.g. period type of week and multiplier of 2 means bi-weekly
      */
-    boolean mIgnoreTemplateTransactions = false;
+    int mRecurrenceMultiplier   = 1;
 
     /**
-     * Multiplier for the recurrence period type. e.g. period type of week and multiplier of 2 means bi-weekly
+     * Flag which says to ignore template transactions until we successfully parse a split amount
+     * Is updated for each transaction template split parsed
      */
-    int mRecurrenceMultiplier   = 1;
+    boolean mIgnoreTemplateTransaction = true;
 
     /**
      * Used for parsing old backup files where recurrence was saved inside the transaction.
@@ -373,11 +372,11 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     case GncXmlHelper.KEY_SPLIT_ACCOUNT_SLOT:
                         mInSplitAccountSlot = true;
                         break;
-                    case GncXmlHelper.KEY_CREDIT_FORMULA:
-                        mInCreditFormulaSlot = true;
+                    case GncXmlHelper.KEY_CREDIT_NUMERIC:
+                        mInCreditNumericSlot = true;
                         break;
-                    case GncXmlHelper.KEY_DEBIT_FORMULA:
-                        mInDebitFormulaSlot = true;
+                    case GncXmlHelper.KEY_DEBIT_NUMERIC:
+                        mInDebitNumericSlot = true;
                         break;
                 }
                 break;
@@ -424,38 +423,10 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                 } else if (mInTemplates && mInSplitAccountSlot) {
                     mSplit.setAccountUID(characterString);
                     mInSplitAccountSlot = false;
-                } else if (mInTemplates && mInCreditFormulaSlot) {
-                    try {
-                        Money amount = new Money(GncXmlHelper.parseTemplateSplitAmount(characterString),
-                                mTransaction.getCurrency());
-                        mSplit.setAmount(amount.absolute());
-                        mSplit.setType(TransactionType.CREDIT);
-                    } catch (NumberFormatException e) {
-                        String msg = "Error parsing template credit split amount " + characterString;
-                        Log.e(LOG_TAG, msg + "\n" + e.getMessage());
-                        Crashlytics.log(msg);
-                        Crashlytics.logException(e);
-                        mIgnoreTemplateTransactions = true;
-                        //throw new SAXException(msg, e); //if we fail to parse the split amount, terminate import - data integrity compromised
-                    } finally {
-                        mInCreditFormulaSlot = false;
-                    }
-                } else if (mInTemplates && mInDebitFormulaSlot) {
-                    try {
-                        Money amount = new Money(GncXmlHelper.parseTemplateSplitAmount(characterString),
-                                mTransaction.getCurrency());
-                        mSplit.setAmount(amount.absolute());
-                        mSplit.setType(TransactionType.DEBIT);
-                    } catch (NumberFormatException e) {
-                        String msg = "Error parsing template debit split amount " + characterString;
-                        Log.e(LOG_TAG, msg + "\n" + e.getMessage());
-                        Crashlytics.log(msg);
-                        Crashlytics.logException(e);
-                        mIgnoreTemplateTransactions = true;
-                        //throw new SAXException(msg, e); //if we fail to parse the split amount, terminate import - data integrity compromised
-                    } finally {
-                        mInDebitFormulaSlot = false;
-                    }
+                } else if (mInTemplates && mInCreditNumericSlot) {
+                    handleEndOfTemplateNumericSlot(characterString, TransactionType.CREDIT);
+                } else if (mInTemplates && mInDebitNumericSlot) {
+                    handleEndOfTemplateNumericSlot(characterString, TransactionType.DEBIT);
                 }
                 break;
             //================  PROCESSING OF TRANSACTION TAGS =====================================
@@ -506,7 +477,7 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     }
                     mQuantity = GncXmlHelper.parseSplitAmount(q);
                 } catch (ParseException e) {
-                    String msg = "Error to parsing split quantity - " + characterString;
+                    String msg = "Error parsing split quantity - " + characterString;
                     Crashlytics.log(msg);
                     Crashlytics.logException(e);
                     throw new SAXException(msg, e);
@@ -521,7 +492,8 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     mSplit.setAmount(amount);
                     mSplit.setAccountUID(characterString);
                 } else {
-                    mTemplateAccountToTransactionMap.put(characterString, mTransaction.getUID());
+                    if (!mIgnoreTemplateTransaction)
+                        mTemplateAccountToTransactionMap.put(characterString, mTransaction.getUID());
                 }
                 break;
             case GncXmlHelper.TAG_TRN_SPLIT:
@@ -534,17 +506,18 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                     mAutoBalanceSplits.add(imbSplit);
                 }
                 if (mInTemplates){
-                    mTemplateTransactions.add(mTransaction);
+                    if (!mIgnoreTemplateTransaction)
+                        mTemplateTransactions.add(mTransaction);
                 } else {
                     mTransactionList.add(mTransaction);
                 }
-
                 if (mRecurrencePeriod > 0) { //if we find an old format recurrence period, parse it
                     mTransaction.setTemplate(true);
                     ScheduledAction scheduledAction = ScheduledAction.parseScheduledAction(mTransaction, mRecurrencePeriod);
                     mScheduledActionsList.add(scheduledAction);
                 }
                 mRecurrencePeriod = 0;
+                mIgnoreTemplateTransaction = true;
                 mTransaction = null;
                 break;
             case GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS:
@@ -616,11 +589,10 @@ public void endElement(String uri, String localName, String qualifiedName) throw
                 }
                 break;
             case GncXmlHelper.TAG_SCHEDULED_ACTION:
-                mScheduledActionsList.add(mScheduledAction);
-                if (!mIgnoreTemplateTransactions) {
-                    int count = generateMissedScheduledTransactions(mScheduledAction);
-                    Log.i(LOG_TAG, String.format("Generated %d transactions from scheduled action", count));
-                }
+                if (mScheduledAction.getActionUID() != null)
+                    mScheduledActionsList.add(mScheduledAction);
+                int count = generateMissedScheduledTransactions(mScheduledAction);
+                Log.i(LOG_TAG, String.format("Generated %d transactions from scheduled action", count));
                 mRecurrenceMultiplier = 1; //reset it, even though it will be parsed from XML each time
                 break;
         }
@@ -722,21 +694,23 @@ public void endDocument() throws SAXException {
         mAccountsDbAdapter.beginTransaction();
         try {
             mAccountsDbAdapter.deleteAllRecords();
+
             long nAccounts = mAccountsDbAdapter.bulkAddAccounts(mAccountList);
             Log.d("Handler:", String.format("%d accounts inserted", nAccounts));
-            //this flag is set when we have issues with parsing the template transaction amount
-            if (!mIgnoreTemplateTransactions) {
-                //We need to add scheduled actions first because there is a foreign key constraint on transactions
-                //which are generated from scheduled actions (we do auto-create some transactions during import)
-                int nSchedActions = mScheduledActionsDbAdapter.bulkAddScheduledActions(mScheduledActionsList);
-                Log.d("Handler:", String.format("%d scheduled actions inserted", nSchedActions));
-                long nTempTransactions = mTransactionsDbAdapter.bulkAddTransactions(mTemplateTransactions);
-                Log.d("Handler:", String.format("%d template transactions inserted", nTempTransactions));
-            }
+            //We need to add scheduled actions first because there is a foreign key constraint on transactions
+            //which are generated from scheduled actions (we do auto-create some transactions during import)
+            int nSchedActions = mScheduledActionsDbAdapter.bulkAddScheduledActions(mScheduledActionsList);
+            Log.d("Handler:", String.format("%d scheduled actions inserted", nSchedActions));
+
+            long nTempTransactions = mTransactionsDbAdapter.bulkAddTransactions(mTemplateTransactions);
+            Log.d("Handler:", String.format("%d template transactions inserted", nTempTransactions));
+
             long nTransactions = mTransactionsDbAdapter.bulkAddTransactions(mTransactionList);
             Log.d("Handler:", String.format("%d transactions inserted", nTransactions));
+
             long endTime = System.nanoTime();
             Log.d("Handler:", String.format(" bulk insert time: %d", endTime - startTime));
+
             mAccountsDbAdapter.setTransactionSuccessful();
         } finally {
             mAccountsDbAdapter.endTransaction();
@@ -758,6 +732,31 @@ private Currency getCurrencyForAccount(String accountUID){
         }
     }
 
+
+    /**
+     * Handles the case when we reach the end of the template numeric slot
+     * @param characterString Parsed characters containing split amount
+     */
+    private void handleEndOfTemplateNumericSlot(String characterString, TransactionType splitType) {
+        try {
+            BigDecimal amountBigD = GncXmlHelper.parseSplitAmount(characterString);
+            Money amount = new Money(amountBigD, getCurrencyForAccount(mSplit.getAccountUID()));
+            mSplit.setAmount(amount.absolute());
+            mSplit.setType(splitType);
+            mIgnoreTemplateTransaction = false; //we have successfully parsed an amount
+        } catch (NumberFormatException | ParseException e) {
+            String msg = "Error parsing template credit split amount " + characterString;
+            Log.e(LOG_TAG, msg + "\n" + e.getMessage());
+            Crashlytics.log(msg);
+            Crashlytics.logException(e);
+        } finally {
+            if (splitType == TransactionType.CREDIT)
+                mInCreditNumericSlot = false;
+            else
+                mInDebitNumericSlot = false;
+        }
+    }
+
     /**
      * Generates the runs of the scheduled action which have been missed since the file was last opened.
      * @param scheduledAction Scheduled action for transaction
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
index 92b9de74..0ebefd85 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
@@ -16,7 +16,6 @@
  */
 package org.gnucash.android.importer;
 
-import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
 import android.util.Log;
 
@@ -44,7 +43,7 @@
     /**
      * Parses XML into an already open database.
      * <p>This method is used mainly by the {@link org.gnucash.android.db.DatabaseHelper} for database migrations.<br>
-     *     You should probably use {@link #parse(android.content.Context, java.io.InputStream)} instead</p>
+     *     You should probably use {@link #parse(java.io.InputStream)} instead</p>
      * @param db SQLite Database
      * @param gncXmlInputStream Input stream of GnuCash XML
      */
diff --git a/app/src/main/java/org/gnucash/android/model/Split.java b/app/src/main/java/org/gnucash/android/model/Split.java
index 92a184f5..297b83df 100644
--- a/app/src/main/java/org/gnucash/android/model/Split.java
+++ b/app/src/main/java/org/gnucash/android/model/Split.java
@@ -1,6 +1,8 @@
 package org.gnucash.android.model;
 
 
+import android.support.annotation.NonNull;
+
 /**
  * A split amount in a transaction.
  * Every transaction is made up of at least two splits (representing a double entry transaction)
@@ -42,7 +44,7 @@
      * @param amount Money amount of this split
      * @param accountUID String UID of transfer account
      */
-    public Split(Money amount, String accountUID){
+    public Split(@NonNull Money amount, String accountUID){
         setAmount(amount);
         setAccountUID(accountUID);
         //NOTE: This is a rather simplististic approach to the split type.

From 9a4c1e870830abf337fff658b40694f0d75a938c Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 11 May 2015 17:38:38 +0200
Subject: [PATCH 3/9] Added test for creating export schedule

Added Dropbox dev api keys to all non-release configs
---
 app/build.gradle                                                   | 7 +++----
 .../java/org/gnucash/android/test/ui/ExportTransactionsTest.java   | 4 ++--
 2 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index 18c53cc3..af5665bf 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -36,7 +36,9 @@ android {
             resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
             resValue "string", "manifest_dropbox_app_key", "db-${RELEASE_DROPBOX_APP_KEY}"
         } else {
-            resValue "string", "manifest_dropbox_app_key", "db-xxx-xxxx"
+            resValue "string", "dropbox_app_key", "dhjh8ke9wf05948"
+            resValue "string", "dropbox_app_secret", "h2t9fphj3nr4wkw"
+            resValue "string", "manifest_dropbox_app_key", "db-dhjh8ke9wf05948"
         }
     }
 
@@ -86,9 +88,6 @@ android {
             resValue "string", "app_name", "GnuCash-devel"
             versionName "${versionMajor}.${versionMinor}.${versionPatch}-dev${versionBuild}_${buildTime()}"
             resValue "string", "app_version_name", "${versionName}"
-            resValue "string", "dropbox_app_key", "dhjh8ke9wf05948"
-            resValue "string", "dropbox_app_secret", "h2t9fphj3nr4wkw"
-            resValue "string", "manifest_dropbox_app_key", "db-dhjh8ke9wf05948"
         }
 
         beta {
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index e2a882ac..136a3855 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -159,8 +159,8 @@ public void testCreateExportSchedule(){
 
 		mSolo.clickOnText(ExportFormat.XML.name());
 		mSolo.clickOnView(mSolo.getView(R.id.input_recurrence));
-
-		mSolo.clickOnToggleButton("OFF");
+		
+		mSolo.clickOnButton(0);
 		mSolo.clickOnText("Done");
 		mSolo.waitForDialogToClose();
 

From 1fc4477f1a8bbd55839bca3df7fc791db787d469 Mon Sep 17 00:00:00 2001
From: pedroabel <pedroabel@gmail.com>
Date: Mon, 11 May 2015 22:10:08 -0300
Subject: [PATCH 4/9] Update strings.xml

---
 app/src/main/res/values-pt-rBR/strings.xml | 280 ++++++++++++++---------------
 1 file changed, 140 insertions(+), 140 deletions(-)

diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index ec5d75aa..50902f1d 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -74,8 +74,8 @@
 	  <string name="label_permission_create_accounts">Habilitar a criao de contas no GnuCash para Android</string>
 	  <string name="label_permission_group">Seu arquivo GnuCash</string>
 	  <string name="description_permission_group">Ler e modificar o arquivo GnuCash</string>
-	  <string name="label_permission_record_transaction">Record transactions in GnuCash</string>
-	  <string name="label_permission_create_account">Create accounts in GnuCash</string>
+	  <string name="label_permission_record_transaction">Gravar transaes no GnuCash</string>
+	  <string name="label_permission_create_account">Criar contas no GnuCash</string>
 	  <string name="label_display_account">Mostrar conta</string>
 	  <string name="btn_create_accounts">Criar Contas</string>
 	  <string name="title_default_accounts">Selecionar contas para criar</string>
@@ -289,19 +289,19 @@
 	  <string name="summary_use_double_entry">Todas as transaes sero uma transferncia de uma conta para outra</string>
 	  <string name="title_use_double_entry">Ativar Partidas Dobradas</string>
 	  <string name="account_balance">Balano</string>
-	  <string name="toast_no_account_name_entered">Enter an account name to create an account</string>
+	  <string name="toast_no_account_name_entered">Digite um nome de conta para criar uma conta</string>
 	  <string name="label_account_currency">Moeda</string>
 	  <string name="label_parent_account">Conta superior</string>
 	  <string name="title_xml_ofx_header">Usar cabealho XML OFX</string>
 	  <string name="summary_xml_ofx_header">Habilitar essa opo quando estiver exportando para um software terceiro, diferente do GnuCash para desktop</string>
 	  <string name="title_whats_new">O que h de novo</string>
 	  <string name="whats_new">
-        - Visual reports (Bar/Pie/line charts) \n
-        - Scheduled backups of (QIF, OFX, and XML)\n
-        - Backup/Export to DropBox and Google Drive\n
-        - Better recurrence options for scheduled transactions\n
-        - Navigation drawer for easier access to options\n
-        - Multiple bug fixes and improvements\n
+        - Relatrios visuais (grficos de Barras/Pizza/Linhas) \n
+        - Backups agendados de (QIF, OFX, and XML)\n
+        - Backup/Exportar para DropBox e Google Drive\n
+        - Melhores opes de recorrncia para transaes agendadas\n
+        - Gaveta de Navegao para facilitar o acesso as opes\n
+        - Multiplas correes de bugs e melhoramentos\n
 	</string>
 	  <string name="label_dismiss">Descartar</string>
     <string name="toast_transanction_amount_required">Adicione um valor para salvar a transao</string>
@@ -325,21 +325,21 @@
     <string name="toast_all_transactions_deleted">Todas as transaes foram deletadas com sucesso!</string>
     <string name="title_progress_importing_accounts">Importando contas</string>
     <string name="toast_tap_again_to_confirm_delete">Toque novamente para confirmar. TODAS as entradas sero deletadas!!!</string>
-    <string name="section_header_transactions">Transactions</string>
-    <string name="section_header_subaccounts">Sub-Accounts</string>
-    <string name="menu_search_accounts">Search</string>
-    <string name="title_default_export_format">Default Export Format</string>
-    <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
-    <string name="menu_export_transactions">Export transactions</string>
-    <string name="label_recurring_transaction">Recurrence</string>
+    <string name="section_header_transactions">Transaes</string>
+    <string name="section_header_subaccounts">Sub-Contas</string>
+    <string name="menu_search_accounts">Pesquisar</string>
+    <string name="title_default_export_format">Formato de exportao padro</string>
+    <string name="summary_default_export_format">Formato a usar por padro ao exportar transaes</string>
+    <string name="menu_export_transactions">Exportar transaes</string>
+    <string name="label_recurring_transaction">Recorrncia</string>
     <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
-    <string name="imbalance_account_name">Imbalance</string>
-    <string name="title_progress_exporting_transactions">Exporting transactions</string>
-    <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
-    <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
-    <string name="label_placeholder_account">Placeholder account</string>
-    <string name="label_default_transfer_account">Default Transfer Account</string>
-    <string name="label_account_color_and_type">Account Color &amp; Type</string>
+    <string name="imbalance_account_name">Desequilibrio</string>
+    <string name="title_progress_exporting_transactions">Exportando transaes</string>
+    <string name="label_no_recurring_transactions">Sem transaes recorrentes para exibir.</string>
+    <string name="toast_recurring_transaction_deleted">Transao recorrente deletada com sucesso</string>
+    <string name="label_placeholder_account">Conta no editvel</string>
+    <string name="label_default_transfer_account">Conta de transferncia padro</string>
+    <string name="label_account_color_and_type">Cor de conta &amp; Tipo</string>
     <plurals name="label_sub_accounts">
         <item quantity="one">%d sub-contas</item>
         <item quantity="other">%d sub-contas</item>
@@ -355,7 +355,7 @@
         <item>CONTAS A PAGAR</item>
         <item>CONTAS A RECEBER</item>
         <item>PATRIMNIO LQUIDO</item>
-        <item>CURRENCY</item>
+        <item>Moeda</item>
         <item>AES</item>
         <item>FUNDO MTUO</item>
 		<item>TRADING</item>
@@ -366,138 +366,138 @@
 		<item>XML</item>
     </string-array>
     <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
-    <string name="color_picker_default_title">Select a Color</string>
-    <string name="label_delete_sub_accounts">Delete sub-accounts</string>
-    <string name="title_recent_accounts">Recent</string>
-    <string name="title_favorite_accounts">Favorites</string>
-    <string name="title_all_accounts">All</string>
-    <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
-    <string name="title_create_default_accounts">Create default accounts</string>
-    <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
-    <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
-        a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
-        available in app Settings so you can decide later.
+    <string name="color_picker_default_title">Selecione uma Cor</string>
+    <string name="label_delete_sub_accounts">Deletar sub-contas</string>
+    <string name="title_recent_accounts">Recente</string>
+    <string name="title_favorite_accounts">Favoritos</string>
+    <string name="title_all_accounts">TODAS</string>
+    <string name="summary_create_default_accounts">Criar estrutura de contas Contas-Comuns padro do Gnucash</string>
+    <string name="title_create_default_accounts">Criar contas padro</string>
+    <string name="msg_confirm_create_default_accounts_setting">Todas as contas e transaes existentes no dispositivo sero deletadas.\n\nTem certeza que deseja continuar?</string>
+    <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \Voc pode tanto
+        criar uma hierarquia de contas-comuns, ou importar sua prpria estrutura de contas do GnuCash. \n\nAs duas opes tambm 
+        esto disponveis nas configuraes do app, ento voc pode decidir mais tarde.
     </string>
-    <string name="menu_scheduled_transactions">Scheduled Transactions</string>
-    <string name="title_scheduled_transactions">Scheduled Transactions</string>
-    <string name="title_select_export_destination">Select destination for export</string>
+    <string name="menu_scheduled_transactions">Transaes agendadas</string>
+    <string name="title_scheduled_transactions">Transaes agendadas</string>
+    <string name="title_select_export_destination">Selecione o destino para exportar</string>
     <string name="hint_split_memo">Memo</string>
-    <string name="label_spend">Spend</string>
-    <string name="label_receive">Receive</string>
-    <string name="label_withdrawal">Withdrawal</string>
-    <string name="label_deposit">Deposit</string>
-    <string name="label_payment">Payment</string>
-    <string name="label_charge">Charge</string>
-    <string name="label_decrease">Decrease</string>
-    <string name="label_increase">Increase</string>
-    <string name="label_income">Income</string>
-    <string name="label_rebate">Rebate</string>
-    <string name="label_expense">Expense</string>
-    <string name="label_bill">Bill</string>
-    <string name="label_invoice">Invoice</string>
-    <string name="label_buy">Buy</string>
-    <string name="label_sell">Sell</string>
-    <string name="label_repeats">Repeats</string>
-    <string name="label_account_balance">Balance:</string>
-    <string name="toast_no_recent_backup">No recent backup found</string>
+    <string name="label_spend">Gastar</string>
+    <string name="label_receive">Receber</string>
+    <string name="label_withdrawal">Sacar</string>
+    <string name="label_deposit">Depositar</string>
+    <string name="label_payment">Pagamento</string>
+    <string name="label_charge">Carregar</string>
+    <string name="label_decrease">Diminuir</string>
+    <string name="label_increase">Aumentar</string>
+    <string name="label_income">Receita</string>
+    <string name="label_rebate">Desconto</string>
+    <string name="label_expense">Despesa</string>
+    <string name="label_bill">Conta</string>
+    <string name="label_invoice">Fatura</string>
+    <string name="label_buy">Comprar</string>
+    <string name="label_sell">Vender</string>
+    <string name="label_repeats">Repeties</string>
+    <string name="label_account_balance">Saldo:</string>
+    <string name="toast_no_recent_backup">Nenhum backup recente encontrado</string>
     <string name="account_name_opening_balances">Saldos Iniciais</string>
     <string name="account_name_equity">Lquido</string>
-    <string name="summary_save_opening_balances">Enable to save the current account balance (before deleting transactions) as new opening balance after deleting transactions
+    <string name="summary_save_opening_balances">Possibilita salvar o saldo atual da conta (antes de deletar as transaes) como um novo saldo inicial aps deletar as transaes
     </string>
-    <string name="title_save_opening_balances">Save account opening balances</string>
-    <string name="export_warning_ofx">OFX does not support double-entry transactions</string>
-    <string name="export_warning_qif">Generates separate QIF files per currency</string>
-    <string name="title_transaction_splits">Transaction splits</string>
-    <string name="label_imbalance">Imbalance:</string>
-    <string name="btn_add_split">Add split</string>
-    <string name="label_passcode">Enter Passcode</string>
-    <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
-    <string name="toast_passcode_set">Passcode set</string>
-    <string name="toast_confirm_passcode">Please confirm your passcode</string>
-    <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
-    <string name="header_passcode_settings">Passcode</string>
-    <string name="title_passcode_preferences">Passcode Preferences</string>
-    <string name="title_passcode_enabled">Passcode Turned On</string>
-    <string name="title_passcode_disabled">Passcode Turned Off</string>
-    <string name="title_change_passcode">Change Passcode</string>
-    <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
-    <string name="menu_title_favorite">Favorite</string>
-    <string name="drawer_open">Navigation drawer opened</string>
-    <string name="drawer_close">Navigation drawer closed</string>
-	<string name="title_reports">Reports</string>
-	<string name="title_pie_chart">Pie Chart</string>
-	<string name="title_line_chart">Line Chart</string>
-	<string name="title_bar_chart">Bar Chart</string>
-	<string name="menu_order_by_size">Order by size</string>
-	<string name="menu_toggle_legend">Toggle legend</string>
-	<string name="menu_toggle_labels">Toggle labels</string>
-	<string name="menu_toggle_percentage_mode">Toggle percentage</string>
-	<string name="menu_toggle_average_lines">Toggle average lines</string>
-	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
-	<string name="label_chart_no_data">No chart data available</string>
-	<string name="label_chart_overall">Overall</string>
+    <string name="title_save_opening_balances">Salvar saldos iniciais da conta</string>
+    <string name="export_warning_ofx">OFX no suporta transaes de partidas dobradas</string>
+    <string name="export_warning_qif">Gerar arquivos QIF separados por moeda</string>
+    <string name="title_transaction_splits">Divises de transao</string>
+    <string name="label_imbalance">Desequilibrio:</string>
+    <string name="btn_add_split">Adicionar diviso</string>
+    <string name="label_passcode">Digitar senha</string>
+    <string name="toast_wrong_passcode">Senha incorreta, tente novamente</string>
+    <string name="toast_passcode_set">Conunto de senha</string>
+    <string name="toast_confirm_passcode">Por favor confirme sua senha</string>
+    <string name="toast_invalid_passcode_confirmation">Confrimao de senha incorreta. Tente novamente</string>
+    <string name="header_passcode_settings">Senha</string>
+    <string name="title_passcode_preferences">Preferncias de Senha</string>
+    <string name="title_passcode_enabled">Senha habilitada</string>
+    <string name="title_passcode_disabled">Senha  desabilitada</string>
+    <string name="title_change_passcode">Modificar senha</string>
+    <string name="toast_error_edit_multi_currency_transaction">Transaes multi-moedas no podem ser modificadas</string>
+    <string name="menu_title_favorite">Favoritos</string>
+    <string name="drawer_open">Gaveta de navegao aberta</string>
+    <string name="drawer_close">Gaveta de navegao fechada</string>
+	<string name="title_reports">Relatrios</string>
+	<string name="title_pie_chart">Grfico de pizza</string>
+	<string name="title_line_chart">Grfico de linhas</string>
+	<string name="title_bar_chart">Grfico de barra</string>
+	<string name="menu_order_by_size">Ordenar por tamanho</string>
+	<string name="menu_toggle_legend">Ativar legendas</string>
+	<string name="menu_toggle_labels">Ativar etiquetas</string>
+	<string name="menu_toggle_percentage_mode">Ativar porcentagem</string>
+	<string name="menu_toggle_average_lines">Ativar linhas mdias</string>
+	<string name="menu_group_smaller_slices">Agrupar fatias menores</string>
+	<string name="label_chart_no_data">Sem dados de grfico disponveis</string>
+	<string name="label_chart_overall">Geral</string>
 	<string name="label_chart_total">Total</string>
-	<string name="label_other_slice">Other</string>
-	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
-	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
-    <string name="label_save_template">Save as template</string>
-    <string name="label_delete_account_transactions_description">This account contains transactions. \nWhat would you like to do with these transactions</string>
-    <string name="label_delete_account_subaccounts_description">This account contains sub-accounts. \nWhat would you like to do with these sub-accounts</string>
-    <string name="label_delete_transactions">Delete transactions</string>
-    <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
-    <string name="label_tap_to_create_schedule">Tap to create schedule</string>
-	<string name="title_restore_backup">Restore Backup</string>
-	<string name="header_backup_and_export_settings">Backup &amp; export</string>
+	<string name="label_other_slice">Outro</string>
+	<string name="toast_chart_percentage_mode_total">O percentual do valor selecionado em relao ao valor total</string>
+	<string name="toast_chart_percentage_mode_current_bar">O percentual do valor selecionado em relao ao valor da barra empilhada atual</string>
+    <string name="label_save_template">Salvar como um template</string>
+    <string name="label_delete_account_transactions_description">Esta conta contm transaes. \nO que voc deseja fazer com essas trnsaes</string>
+    <string name="label_delete_account_subaccounts_description">Esta conta contm sub-contas. \nO que voc deseja fazer com essas sub-contas</string>
+    <string name="label_delete_transactions">Deletar transaes</string>
+    <string name="toast_disable_double_entry_to_save_transaction">Criar e especificar uma conta para tansferncia OU desabilite partidas-dobradas nas configuraes para salvar a transao</string>
+    <string name="label_tap_to_create_schedule">Toque para criar programao</string>
+	<string name="title_restore_backup">Restaurar Backup</string>
+	<string name="header_backup_and_export_settings">Backup &amp; exportar</string>
 	<string name="title_dropbox_sync_preference">DropBox Sync</string>
 	<string name="title_backup_preference_category">Backup</string>
-	<string name="summary_dropbox_sync">Enable to sync to DropBox</string>
-	<string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
-	<string name="title_backup_prefs">Backup Preferences</string>
-	<string name="title_create_backup_pref">Create Backup</string>
-	<string name="summary_create_backup_pref">By default backups are saved to the SDCARD</string>
-	<string name="summary_restore_backup_pref">Select a specific backup to restore</string>
-	<string name="toast_backup_successful">Backup successful</string>
-	<string name="toast_backup_failed">Backup failed</string>
-	<string name="export_warning_xml">Exports all accounts and transactions</string>
+	<string name="summary_dropbox_sync">Habilitar sincronizao para o  DropBox</string>
+	<string name="title_select_gnucash_xml_file">Select arquivo GnuCash XML</string>
+	<string name="title_backup_prefs">Preferncias de Backup</string>
+	<string name="title_create_backup_pref">Criar Backup</string>
+	<string name="summary_create_backup_pref">Backups so salvos no SDCARD por padro</string>
+	<string name="summary_restore_backup_pref">Select Selecionar um backup especfico para restaurar</string>
+	<string name="toast_backup_successful">Backup feito com sucesso</string>
+	<string name="toast_backup_failed">Backup falhou</string>
+	<string name="export_warning_xml">Exportar todas as contas e transaes</string>
 	<string name="title_google_drive_sync_pref">Google Drive Sync</string>
-	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
-	<string name="toast_install_file_manager">Install a file manager to select files</string>
-	<string name="title_select_backup_to_restore">Select backup to restore</string>
-	<string name="title_report_prefs">Report Preferences</string>
-	<string name="nav_menu_favorites">Favorites</string>
-	<string name="nav_menu_open">Open...</string>
-	<string name="nav_menu_reports">Reports</string>
-	<string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
-	<string name="nav_menu_export">Export...</string>
-	<string name="nav_menu_settings">Settings</string>
+	<string name="summary_google_drive_sync">Habilitar sincronizao para o Google Drive</string>
+	<string name="toast_install_file_manager">Instalar um gerenciador de arquivos para selecionar arquivos</string>
+	<string name="title_select_backup_to_restore">Selecionar backup a restaurar</string>
+	<string name="title_report_prefs">Preferncias de relatrios</string>
+	<string name="nav_menu_favorites">Favoritos</string>
+	<string name="nav_menu_open">Abrir...</string>
+	<string name="nav_menu_reports">Relatrios</string>
+	<string name="nav_menu_scheduled_transactions">Transaes agendadas</string>
+	<string name="nav_menu_export">Exportar...</string>
+	<string name="nav_menu_settings">Configuraes</string>
 	<plurals name="label_every_x_days">
-        <item quantity="one">Daily</item>
-        <item quantity="other">Every %d days</item>
+        <item quantity="one">Diariamente</item>
+        <item quantity="other">A cada %d dias</item>
     </plurals>
     <plurals name="label_every_x_weeks">
-        <item quantity="one">Weekly</item>
-        <item quantity="other">Every %d weeks</item>
+        <item quantity="one">Semanalmente</item>
+        <item quantity="other">A cada %d semanas</item>
     </plurals>
     <plurals name="label_every_x_months">
-        <item quantity="one">Monthly</item>
-        <item quantity="other">Every %d months</item>
+        <item quantity="one">Mensalmente</item>
+        <item quantity="other">A cada %d meses</item>
     </plurals>
     <plurals name="label_every_x_years">
-        <item quantity="one">Yearly</item>
-        <item quantity="other">Every %d years</item>
+        <item quantity="one">Anualmente</item>
+        <item quantity="other">A cada %d anos</item>
     </plurals>
-    <string name="title_enable_crashlytics">Enable Crash Logging</string>
-    <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
-No user-identifiable information will be collected as part of this process!
+    <string name="title_enable_crashlytics">Habilitar log de erros</string>
+    <string name="msg_enable_crashlytics">Habilitar enviar informaes sobre malfuncionamentos para os desenvolvedores para melhorias (recomendado).
+Nenhuma informao de  identificao do usurio ser coletada neste processo!
     </string>
-    <string name="label_export_format">Export Format</string>
-	<string name="toast_backup_folder_not_found">Backup folder cannot be found. Make sure the SD Card is mounted!</string>
-	<string name="header_report_settings">Reports</string>
-	<string name="label_report_currency">Select currency</string>
-	<string name="title_use_account_color">Account color in reports</string>
-	<string name="summary_use_account_color">Use account color in the pie chart</string>
-	<string name="nav_menu_scheduled_backups">Scheduled Exports</string>
-	<string name="title_scheduled_exports">Scheduled Exports</string>
-	<string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
-	<string name="title_create_export_schedule">Create export schedule</string>
+    <string name="label_export_format">Formato de exportao</string>
+	<string name="toast_backup_folder_not_found">Pasta de backup no encontrada. Verifique se o carto SD est conectado!</string>
+	<string name="header_report_settings">Relatrios</string>
+	<string name="label_report_currency">Selecionar moeda</string>
+	<string name="title_use_account_color">Cor de contas nos relatrios</string>
+	<string name="summary_use_account_color">Utilizar cor de contas no grfico de pizza</string>
+	<string name="nav_menu_scheduled_backups">Backups agendados</string>
+	<string name="title_scheduled_exports">Exportaes agendadas</string>
+	<string name="label_no_scheduled_exports_to_display">Sem exportaes agendadas para  mostrar</string>
+	<string name="title_create_export_schedule">Criar programao de exportao</string>
 </resources>

From 5a6598fb974d429671b806ecc29c50ea395944e3 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 12 May 2015 13:15:51 +0200
Subject: [PATCH 5/9] Fixed: Hidden account should not be shown as options for
 parent account Improved: Display destination of export after successful
 export

Improved testing on emulator
Crashlytics now only started for beta builds
---
 app/build.gradle                                   |  7 +-
 .../android/test/ui/AccountsActivityTest.java      | 75 +++++++++++++---------
 .../android/test/ui/ExportTransactionsTest.java    | 34 ++++++----
 .../android/test/ui/TransactionsActivityTest.java  | 14 ++--
 .../gnucash/android/app/GnuCashApplication.java    |  3 +-
 .../gnucash/android/export/ExportAsyncTask.java    | 18 ++++++
 .../android/ui/account/AccountFormFragment.java    |  2 +-
 .../ui/widget/WidgetConfigurationActivity.java     |  2 +-
 app/src/main/res/values-de/strings.xml             |  1 +
 app/src/main/res/values-el/strings.xml             |  1 +
 app/src/main/res/values-es-rMX/strings.xml         |  1 +
 app/src/main/res/values-es/strings.xml             |  1 +
 app/src/main/res/values-fr/strings.xml             |  1 +
 app/src/main/res/values-hu/strings.xml             |  1 +
 app/src/main/res/values-it/strings.xml             |  1 +
 app/src/main/res/values-nb/strings.xml             |  1 +
 app/src/main/res/values-nl/strings.xml             |  1 +
 app/src/main/res/values-pt-rBR/strings.xml         |  1 +
 app/src/main/res/values-ru/strings.xml             |  1 +
 app/src/main/res/values-zh/strings.xml             |  1 +
 app/src/main/res/values/strings.xml                |  1 +
 21 files changed, 113 insertions(+), 55 deletions(-)

diff --git a/app/build.gradle b/app/build.gradle
index af5665bf..60160b8a 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -31,6 +31,7 @@ android {
         versionName "${versionMajor}.${versionMinor}.${versionPatch}"
         resValue "string", "app_version_name", "${versionName}"
         resValue "string", "app_minor_version", "${versionMinor}"
+        buildConfigField "boolean", "USE_CRASHLYTICS", "false"
         if (project.hasProperty("RELEASE_DROPBOX_APP_KEY")){
             resValue "string", "dropbox_app_key", RELEASE_DROPBOX_APP_KEY
             resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
@@ -70,11 +71,13 @@ android {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
             if (project.hasProperty("RELEASE_STORE_FILE")){
                 signingConfig signingConfigs.release
+            } else {
+                signingConfig signingConfigs.debug
             }
         }
         debug {
             debuggable true
-            ext.enableCrashlytics = false
+            signingConfig signingConfigs.debug
         }
     }
     lintOptions {
@@ -94,11 +97,11 @@ android {
             resValue "string", "app_name", "GnuCash - beta"
             versionName "${versionMajor}.${versionMinor}.${versionPatch}-beta${versionBuild}_r${gitSha()}"
             resValue "string", "app_version_name", "${versionName}"
+            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
         }
 
         production {
             resValue "string", "app_name", "GnuCash"
-            ext.enableCrashlytics = false //TODO: enable for production builds
         }
 
     }
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index da815131..f4097a51 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -18,6 +18,7 @@
 
 import android.content.Context;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.content.SharedPreferences.Editor;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
@@ -64,10 +65,7 @@ public AccountsActivityTest() {
 
 	protected void setUp() throws Exception {
 		Context context = getInstrumentation().getTargetContext();
-		Editor editor = PreferenceManager.getDefaultSharedPreferences(context).edit();
-		editor.putBoolean(context.getString(R.string.key_first_run), false);
-        editor.putInt(AccountsActivity.LAST_OPEN_TAB_INDEX, AccountsActivity.INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT);
-		editor.commit();
+        preventFirstRunDialogs(context);
 
         mDbHelper = new DatabaseHelper(context);
         try {
@@ -88,34 +86,48 @@ protected void setUp() throws Exception {
 		mAccountsDbAdapter.addAccount(account);
 
         //the What's new dialog is usually displayed on first run
-        String dismissDialog = getActivity().getString(R.string.label_dismiss);
-        if (mSolo.waitForText(dismissDialog)){
-            mSolo.clickOnText(dismissDialog);
-            mSolo.waitForDialogToClose();
-        }
-
+//        String dismissDialog = getActivity().getString(R.string.label_dismiss);
+//        if (mSolo.waitForText(dismissDialog)){
+//            mSolo.clickOnText(dismissDialog);
+//            mSolo.waitForDialogToClose();
+//        }
+//        mSolo.sleep(2000);
         //drawer is opened when the app is installed for the first time
-        mSolo.setNavigationDrawer(Solo.CLOSED);
+//        mSolo.setNavigationDrawer(Solo.CLOSED);
 	}
 
-/*
-	public void testDisplayAccountsList(){
-        final int NUMBER_OF_ACCOUNTS = 15;
-        for (int i = 0; i < NUMBER_OF_ACCOUNTS; i++) {
-            Account account = new Account("Acct " + i);
-            mAccountsDbAdapter.addAccount(account);
-        }
+    public static void preventFirstRunDialogs(Context context) {
+        Editor editor = PreferenceManager.getDefaultSharedPreferences(context).edit();
 
-        //there should exist a listview of accounts
-        refreshAccountsList();
-        mSolo.waitForText("Acct");
-        mSolo.scrollToBottom();
+        //do not show first run dialog
+        editor.putBoolean(context.getString(R.string.key_first_run), false);
+        editor.putInt(AccountsActivity.LAST_OPEN_TAB_INDEX, AccountsActivity.INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT);
 
-        ListView accountsListView = (ListView) mSolo.getView(android.R.id.list);
-		assertNotNull(accountsListView);
-        assertEquals(NUMBER_OF_ACCOUNTS + 1, accountsListView.getCount());
-	}
-*/
+        //do not show "What's new" dialog
+        String minorVersion = context.getString(R.string.app_minor_version);
+        int currentMinor = Integer.parseInt(minorVersion);
+        editor.putInt(context.getString(R.string.key_previous_minor_version), currentMinor);
+        editor.commit();
+    }
+
+    /*
+        public void testDisplayAccountsList(){
+            final int NUMBER_OF_ACCOUNTS = 15;
+            for (int i = 0; i < NUMBER_OF_ACCOUNTS; i++) {
+                Account account = new Account("Acct " + i);
+                mAccountsDbAdapter.addAccount(account);
+            }
+
+            //there should exist a listview of accounts
+            refreshAccountsList();
+            mSolo.waitForText("Acct");
+            mSolo.scrollToBottom();
+
+            ListView accountsListView = (ListView) mSolo.getView(android.R.id.list);
+            assertNotNull(accountsListView);
+            assertEquals(NUMBER_OF_ACCOUNTS + 1, accountsListView.getCount());
+        }
+    */
     public void testSearchAccounts(){
         String SEARCH_ACCOUNT_NAME = "Search Account";
 
@@ -178,13 +190,14 @@ public void testChangeParentAccount(){
         mSolo.waitForText(accountName);
 
         mSolo.clickLongOnText(accountName);
-        mSolo.clickOnView(getActivity().findViewById(R.id.context_menu_edit_accounts));
+        mSolo.clickOnView(mSolo.getView(R.id.context_menu_edit_accounts));
         mSolo.waitForView(EditText.class);
 
         mSolo.clickOnCheckBox(1);
         mSolo.pressSpinnerItem(2, 0);
 
-        mSolo.clickOnView(getActivity().findViewById(R.id.menu_save));
+//        mSolo.clickOnView(mSolo.getView(R.id.menu_save));
+        mSolo.clickOnActionBarItem(R.id.menu_save);
 
         mSolo.waitForText(getActivity().getString(R.string.title_accounts));
         Account editedAccount = mAccountsDbAdapter.getAccount(accountUID);
@@ -196,6 +209,7 @@ public void testChangeParentAccount(){
 
 	public void testEditAccount(){
         refreshAccountsList();
+        mSolo.sleep(2000);
 		mSolo.waitForText(DUMMY_ACCOUNT_NAME);
 		
 		String editedAccountName = "Edited Account";
@@ -292,7 +306,8 @@ public void testIntentAccountCreation(){
 	
 	protected void tearDown() throws Exception {
         mSolo.finishOpenedActivities();
-        mSolo.waitForEmptyActivityStack(10000);
+        mSolo.waitForEmptyActivityStack(20000);
+        mSolo.sleep(5000);
         mAccountsDbAdapter.deleteAllRecords();
 
 		super.tearDown();
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index 136a3855..ddcd5dae 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -61,7 +61,7 @@ public ExportTransactionsTest() {
 	
 	@Override
 	protected void setUp() throws Exception {
-		super.setUp();
+		AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext());
 		mSolo = new Solo(getInstrumentation(), getActivity());
 
         mDbHelper = new DatabaseHelper(getActivity());
@@ -111,25 +111,27 @@ public void testXmlExport(){
 
 	/**
 	 * Generates export for the specified format and tests that the file actually is created
-	 * @param format
+	 * @param format Export format to use
 	 */
     public void testExport(ExportFormat format){
 		File folder = new File(Exporter.EXPORT_FOLDER_PATH);
 		folder.mkdirs();
+		assertThat(folder).exists();
+
 		for (File file : folder.listFiles()) {
 			file.delete();
 		}
 
-		mSolo.setNavigationDrawer(Solo.OPENED);
-		mSolo.clickOnText(mSolo.getString(R.string.nav_menu_export));
+		mSolo.clickOnActionBarItem(R.id.menu_export);
+		mSolo.waitForDialogToOpen(5000);
+
+        mSolo.waitForText(getActivity().getString(R.string.title_export_dialog));
 
-        mSolo.waitForText(getActivity().getString(R.string.menu_export_transactions));
-		mSolo.waitForDialogToOpen();
 		mSolo.clickOnText(format.name());
 		mSolo.clickOnButton(mSolo.getString(R.string.btn_export));
 
-        mSolo.waitForDialogToClose();
-		mSolo.sleep(2000); //sleep so that emulators can save the file
+        mSolo.waitForDialogToClose(10000);
+		mSolo.sleep(5000); //sleep so that emulators can save the file
 
 		assertThat(folder.listFiles().length).isEqualTo(1);
 		File exportFile = folder.listFiles()[0];
@@ -153,14 +155,17 @@ public void testDeleteTransactionsAfterExport(){
 	 * Test creating a scheduled export
 	 */
 	public void testCreateExportSchedule(){
-		mSolo.setNavigationDrawer(Solo.OPENED);
-		mSolo.clickOnText(mSolo.getString(R.string.nav_menu_export));
-		mSolo.waitForText(getActivity().getString(R.string.menu_export_transactions));
+//		mSolo.setNavigationDrawer(Solo.OPENED);
+//		mSolo.clickOnText(mSolo.getString(R.string.nav_menu_export));
+		mSolo.clickOnActionBarItem(R.id.menu_export);
+		mSolo.waitForDialogToOpen(5000);
 
 		mSolo.clickOnText(ExportFormat.XML.name());
 		mSolo.clickOnView(mSolo.getView(R.id.input_recurrence));
-		
-		mSolo.clickOnButton(0);
+		mSolo.waitForDialogToOpen();
+		mSolo.sleep(1000);
+		mSolo.clickOnButton(0); //switch on the recurrence dialog
+		mSolo.sleep(1000);
 		mSolo.clickOnText("Done");
 		mSolo.waitForDialogToClose();
 
@@ -184,7 +189,8 @@ public void testCreateExportSchedule(){
 	@Override
 	protected void tearDown() throws Exception {
 		mSolo.finishOpenedActivities();
-		mSolo.waitForEmptyActivityStack(10000);
+		mSolo.waitForEmptyActivityStack(20000);
+		mSolo.sleep(5000);
 		mAccountsDbAdapter.deleteAllRecords();
         mDbHelper.close();
         mDb.close();
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 0d62b337..ea266b4e 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -329,9 +329,9 @@ public void testChildAccountsShouldUseParentTransferAccountSetting(){
 		intent.setAction(Intent.ACTION_INSERT_OR_EDIT);
 		intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, childAccount.getUID());
 		getActivity().startActivity(intent);
-		mSolo.sleep(1000);
+		mSolo.waitForActivity(TransactionsActivity.class);
+		mSolo.sleep(3000);
 		Spinner spinner = (Spinner) mSolo.getView(R.id.input_double_entry_accounts_spinner);
-
 		long transferAccountID = mAccountsDbAdapter.getID(transferAccount.getUID());
 		assertThat(transferAccountID).isEqualTo(spinner.getSelectedItemId());
 	}
@@ -432,7 +432,7 @@ public void testBulkMoveTransactions(){
 		//initiate bulk move
 		clickSherlockActionBarItem(R.id.context_menu_move_transactions);
 		
-		mSolo.waitForDialogToClose(2000);
+		mSolo.waitForDialogToClose();
 		
 		Spinner spinner = mSolo.getCurrentViews(Spinner.class).get(0);
 		mSolo.clickOnView(spinner);
@@ -441,7 +441,7 @@ public void testBulkMoveTransactions(){
 		mSolo.clickOnButton(1);
 //		mSolo.clickOnText(getActivity().getString(R.string.btn_move));
 		
-		mSolo.waitForDialogToClose(2000);
+		mSolo.waitForDialogToClose();
 		
 		int targetCount = mAccountsDbAdapter.getAccount(account.getUID()).getTransactionCount();
 		assertEquals(1, targetCount);
@@ -449,7 +449,8 @@ public void testBulkMoveTransactions(){
 		int afterOriginCount = mAccountsDbAdapter.getAccount(DUMMY_ACCOUNT_UID).getTransactionCount();
 		assertEquals(beforeOriginCount-1, afterOriginCount);
 	}
-	
+
+	//TODO: add normal transaction recording
 	public void testLegacyIntentTransactionRecording(){
 		int beforeCount = mTransactionsDbAdapter.getTransactionsCount(DUMMY_ACCOUNT_UID);
 		Intent transactionIntent = new Intent(Intent.ACTION_INSERT);
@@ -481,7 +482,8 @@ public void testLegacyIntentTransactionRecording(){
 	@Override
 	protected void tearDown() throws Exception {
 		mSolo.finishOpenedActivities();
-		mSolo.waitForEmptyActivityStack(10000);
+		mSolo.waitForEmptyActivityStack(20000);
+		mSolo.sleep(5000);
 		mAccountsDbAdapter.deleteAllRecords();
 		super.tearDown();
 	}
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index b09fa6a5..ecfe9b0d 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -23,6 +23,7 @@
 import android.content.SharedPreferences;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
+import android.os.Build;
 import android.preference.PreferenceManager;
 import android.util.Log;
 import com.crashlytics.android.Crashlytics;
@@ -76,7 +77,7 @@ public void onCreate(){
         GnuCashApplication.context = getApplicationContext();
         //TODO: in production, only start logging if user gave consent
 
-        if (!BuildConfig.DEBUG)
+        if (BuildConfig.USE_CRASHLYTICS)
             Crashlytics.start(this);
 
         mDbHelper = new DatabaseHelper(getApplicationContext());
diff --git a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
index da716c3a..ba20e610 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportAsyncTask.java
@@ -206,6 +206,24 @@ protected void onPostExecute(Boolean exportResult) {
                         mContext.getString(R.string.toast_export_error, mExportParams.getExportFormat().name()),
                         Toast.LENGTH_LONG).show();
                 return;
+            } else {
+                String targetLocation;
+                switch (mExportParams.getExportTarget()){
+                    case SD_CARD:
+                        targetLocation = "SD card";
+                        break;
+                    case DROPBOX:
+                        targetLocation = "DropBox -> Apps -> GnuCash";
+                        break;
+                    case GOOGLE_DRIVE:
+                        targetLocation = "Google Drive -> " + mContext.getString(R.string.app_name);
+                        break;
+                    default:
+                        targetLocation = "external service";
+                }
+                Toast.makeText(mContext,
+                        String.format(mContext.getString(R.string.toast_exported_to), targetLocation),
+                        Toast.LENGTH_LONG).show();
             }
         }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 80fc9260..466e6d75 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -563,7 +563,7 @@ private void loadDefaultTransferAccountList(){
      */
 	private void loadParentAccountList(AccountType accountType){
         String condition = DatabaseSchema.SplitEntry.COLUMN_TYPE + " IN ("
-                + getAllowedParentAccountTypes(accountType) + ") ";
+                + getAllowedParentAccountTypes(accountType) + ") AND " + DatabaseSchema.AccountEntry.COLUMN_HIDDEN + "!=1 ";
 
         if (mAccount != null){  //if editing an account
             mDescendantAccountUIDs = mAccountsDbAdapter.getDescendantAccountUIDs(mAccount.getUID(), null, null);
diff --git a/app/src/main/java/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java b/app/src/main/java/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java
index 190c165d..df30e071 100644
--- a/app/src/main/java/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/widget/WidgetConfigurationActivity.java
@@ -189,7 +189,7 @@ public static void updateWidget(Context context, int appWidgetId, String account
 		
 		Intent newTransactionIntent = new Intent(context, TransactionsActivity.class);
 		newTransactionIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
-		newTransactionIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_CLEAR_TASK);
+		newTransactionIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 		newTransactionIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, accountUID);
 		PendingIntent pendingIntent = PendingIntent
 				.getActivity(context, appWidgetId, newTransactionIntent, 0);	            
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 06b25d09..4f2550d8 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -496,4 +496,5 @@ No user-identifiable information will be collected as part of this process!</str
 	<string name="title_scheduled_exports">Scheduled Exports</string>
 	<string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
 	<string name="title_create_export_schedule">Create export schedule</string>
+	<string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index 83f02143..130c6032 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -515,4 +515,5 @@ No user-identifiable information will be collected as part of this process!
 	<string name="title_scheduled_exports">Scheduled Exports</string>
 	<string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
 	<string name="title_create_export_schedule">Create export schedule</string>
+	<string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index 04043549..b8b23616 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -500,4 +500,5 @@ No user-identifiable information will be collected as part of this process!
     <string name="title_scheduled_exports">Scheduled Exports</string>
     <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
     <string name="title_create_export_schedule">Create export schedule</string>
+    <string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 4e3e4a90..b0927f36 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -497,4 +497,5 @@ Este proceso solo recoge informaci&#243;n que no permite identificar al usuario<
 	<string name="title_scheduled_exports">Scheduled Exports</string>
 	<string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
 	<string name="title_create_export_schedule">Create export schedule</string>
+	<string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 447f6447..236066e1 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -497,4 +497,5 @@ No user-identifiable information will be collected as part of this process!
     <string name="title_scheduled_exports">Scheduled Exports</string>
     <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
     <string name="title_create_export_schedule">Create export schedule</string>
+    <string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index baf67383..82db53ba 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -501,4 +501,5 @@ No user-identifiable information will be collected as part of this process!
     <string name="title_scheduled_exports">Scheduled Exports</string>
     <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
     <string name="title_create_export_schedule">Create export schedule</string>
+    <string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index 5fd9d1ac..14ffe299 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -501,4 +501,5 @@ No user-identifiable information will be collected as part of this process!
     <string name="title_scheduled_exports">Scheduled Exports</string>
     <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
     <string name="title_create_export_schedule">Create export schedule</string>
+    <string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index d70dc3d7..f8043adf 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -498,4 +498,5 @@ No user-identifiable information will be collected as part of this process!
 	<string name="title_scheduled_exports">Scheduled Exports</string>
 	<string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
 	<string name="title_create_export_schedule">Create export schedule</string>
+	<string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index ec915353..bdb8b92b 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -502,4 +502,5 @@ No user-identifiable information will be collected as part of this process!
     <string name="title_scheduled_exports">Scheduled Exports</string>
     <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
     <string name="title_create_export_schedule">Create export schedule</string>
+    <string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index ec5d75aa..81cf1f46 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -500,4 +500,5 @@ No user-identifiable information will be collected as part of this process!
 	<string name="title_scheduled_exports">Scheduled Exports</string>
 	<string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
 	<string name="title_create_export_schedule">Create export schedule</string>
+	<string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 6380d2d2..21e06eba 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -506,4 +506,5 @@ No user-identifiable information will be collected as part of this process!
     <string name="title_scheduled_exports">Scheduled Exports</string>
     <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
     <string name="title_create_export_schedule">Create export schedule</string>
+    <string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index f321303b..dab2c416 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -498,4 +498,5 @@ No user-identifiable information will be collected as part of this process!
     <string name="title_scheduled_exports">Scheduled Exports</string>
     <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
     <string name="title_create_export_schedule">Create export schedule</string>
+    <string name="toast_exported_to">Exported to: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 5abed413..3180d84f 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -505,4 +505,5 @@ No user-identifiable information will be collected as part of this process!</str
     <string name="title_scheduled_exports">Scheduled Exports</string>
     <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
     <string name="title_create_export_schedule">Create export schedule</string>
+    <string name="toast_exported_to">Exported to: %1$s</string>
 </resources>

From 34978f1b40aa02be948197d79315f278c5e3b694 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 12 May 2015 14:58:39 +0200
Subject: [PATCH 6/9] Create SD card for emulator before starting tests on
 Travis

Added some sleeps to tests to account for emulator speed
---
 .travis.yml                                        |  4 ++-
 .../android/test/ui/AccountsActivityTest.java      | 22 +++++---------
 .../android/test/ui/ExportTransactionsTest.java    |  5 ++--
 .../android/test/ui/TransactionsActivityTest.java  |  6 ++--
 .../gnucash/android/test/util/ActionBarUtils.java  | 34 ----------------------
 5 files changed, 16 insertions(+), 55 deletions(-)
 delete mode 100644 app/src/androidTest/java/org/gnucash/android/test/util/ActionBarUtils.java

diff --git a/.travis.yml b/.travis.yml
index 8f6a7c44..20b761b1 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -22,7 +22,9 @@ android:
 
 # Emulator Management: Create, Start and Wait
 before_script:
+  - mkdir sdcard
+  - mksdcard -l gnucash-sdcard 64M sdcard/gnucash-sdcard.img
   - echo no | android create avd --force -n test -t android-19 --abi armeabi-v7a
-  - emulator -avd test -no-skin -no-audio -no-window &
+  - emulator -avd test -no-skin -no-audio -no-window -no-boot-anim -gpu on -sdcard sdcard/gnucash-sdcard.img &
   - android-wait-for-emulator
   - adb shell input keyevent 82 &    
\ No newline at end of file
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
index f4097a51..f89e8240 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/AccountsActivityTest.java
@@ -18,7 +18,6 @@
 
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.content.SharedPreferences.Editor;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
@@ -28,7 +27,9 @@
 import android.util.Log;
 import android.view.View;
 import android.widget.EditText;
+
 import com.robotium.solo.Solo;
+
 import org.gnucash.android.R;
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.DatabaseHelper;
@@ -38,7 +39,6 @@
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
-import org.gnucash.android.test.util.ActionBarUtils;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.account.AccountsListFragment;
 
@@ -84,16 +84,6 @@ protected void setUp() throws Exception {
         account.setUID(DUMMY_ACCOUNT_UID);
 		account.setCurrency(Currency.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE));
 		mAccountsDbAdapter.addAccount(account);
-
-        //the What's new dialog is usually displayed on first run
-//        String dismissDialog = getActivity().getString(R.string.label_dismiss);
-//        if (mSolo.waitForText(dismissDialog)){
-//            mSolo.clickOnText(dismissDialog);
-//            mSolo.waitForDialogToClose();
-//        }
-//        mSolo.sleep(2000);
-        //drawer is opened when the app is installed for the first time
-//        mSolo.setNavigationDrawer(Solo.CLOSED);
 	}
 
     public static void preventFirstRunDialogs(Context context) {
@@ -138,15 +128,17 @@ public void testSearchAccounts(){
         refreshAccountsList();
 
         //enter search query
-        ActionBarUtils.clickSherlockActionBarItem(mSolo, R.id.menu_search);
-        mSolo.sleep(200);
+//        ActionBarUtils.clickSherlockActionBarItem(mSolo, R.id.menu_search);
+        mSolo.clickOnActionBarItem(R.id.menu_search);
+        mSolo.sleep(2000);
         mSolo.enterText(0, "Se");
-
+        mSolo.sleep(3000);
         boolean accountFound = mSolo.waitForText(SEARCH_ACCOUNT_NAME, 1, 2000);
         assertTrue(accountFound);
 
         mSolo.clearEditText(0);
 
+        mSolo.sleep(2000);
         //the child account should be hidden again
         accountFound = mSolo.waitForText(SEARCH_ACCOUNT_NAME, 1, 2000);
         assertFalse(accountFound);
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index ddcd5dae..798197fe 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -116,6 +116,7 @@ public void testXmlExport(){
     public void testExport(ExportFormat format){
 		File folder = new File(Exporter.EXPORT_FOLDER_PATH);
 		folder.mkdirs();
+		mSolo.sleep(5000);
 		assertThat(folder).exists();
 
 		for (File file : folder.listFiles()) {
@@ -163,9 +164,9 @@ public void testCreateExportSchedule(){
 		mSolo.clickOnText(ExportFormat.XML.name());
 		mSolo.clickOnView(mSolo.getView(R.id.input_recurrence));
 		mSolo.waitForDialogToOpen();
-		mSolo.sleep(1000);
+		mSolo.sleep(5000);
 		mSolo.clickOnButton(0); //switch on the recurrence dialog
-		mSolo.sleep(1000);
+		mSolo.sleep(5000);
 		mSolo.clickOnText("Done");
 		mSolo.waitForDialogToClose();
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index ea266b4e..3cbda114 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -350,10 +350,10 @@ public void testToggleTransactionType(){
 
         String label = toggleButton.getText().toString();
         assertTrue(mSolo.searchToggleButton(label));
-		assertEquals(getActivity().getString(R.string.label_receive), label);
+		assertThat(getActivity().getString(R.string.label_receive)).isEqualTo(label);
 
-//		mSolo.clickOnButton(getActivity().getString(R.string.label_credit));
         mSolo.clickOnView(toggleButton);
+		mSolo.sleep(3000);
 		String amountString = mSolo.getEditText(1).getText().toString();
 		NumberFormat formatter = NumberFormat.getInstance();
 		try {
@@ -362,7 +362,7 @@ public void testToggleTransactionType(){
 			e.printStackTrace();
 		}
 		Money amount = new Money(amountString, Currency.getInstance(Locale.getDefault()).getCurrencyCode());
-		assertEquals("-9.99", amount.toPlainString());
+		assertThat("-9.99").isEqualTo(amount.toPlainString());
 
 		clickSherlockActionBarItem(R.id.menu_save);
 		mSolo.waitForText(DUMMY_ACCOUNT_NAME);
diff --git a/app/src/androidTest/java/org/gnucash/android/test/util/ActionBarUtils.java b/app/src/androidTest/java/org/gnucash/android/test/util/ActionBarUtils.java
deleted file mode 100644
index 7fe01ca8..00000000
--- a/app/src/androidTest/java/org/gnucash/android/test/util/ActionBarUtils.java
+++ /dev/null
@@ -1,34 +0,0 @@
-/*
- * Copyright (c) 2013 Ngewi Fet <ngewif@gmail.com>
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gnucash.android.test.util;
-
-import android.view.View;
-import com.robotium.solo.Solo;
-
-/**
- * @author Ngewi
- */
-public class ActionBarUtils {
-    /**
-     * Finds a view in the action bar and clicks it, since the native methods are not supported by ActionBarSherlock
-     * @param id
-     */
-    public static void clickSherlockActionBarItem(Solo solo, int id){
-        View view = solo.getView(id);
-        solo.clickOnView(view);
-    }
-}

From b5ea3b3310cb075a9236b9ea5de75d7fb535e357 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 12 May 2015 15:18:04 +0200
Subject: [PATCH 7/9] Turn off GPU on emulator (Travis build)

---
 .travis.yml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/.travis.yml b/.travis.yml
index 20b761b1..4f912e93 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -25,6 +25,6 @@ before_script:
   - mkdir sdcard
   - mksdcard -l gnucash-sdcard 64M sdcard/gnucash-sdcard.img
   - echo no | android create avd --force -n test -t android-19 --abi armeabi-v7a
-  - emulator -avd test -no-skin -no-audio -no-window -no-boot-anim -gpu on -sdcard sdcard/gnucash-sdcard.img &
+  - emulator -avd test -no-skin -no-audio -no-window -no-boot-anim -sdcard sdcard/gnucash-sdcard.img &
   - android-wait-for-emulator
   - adb shell input keyevent 82 &    
\ No newline at end of file

From 324f77976da5994803718493d1f29f958e5d0032 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 12 May 2015 17:25:07 +0200
Subject: [PATCH 8/9] Added tests

---
 .../android/test/ui/ExportTransactionsTest.java    |   9 +-
 .../android/test/ui/TransactionsActivityTest.java  | 151 ++++++++++++++++++---
 .../test/unit/db/TransactionsDbAdapterTest.java    |  42 +++---
 3 files changed, 162 insertions(+), 40 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index 798197fe..a795b632 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -164,10 +164,11 @@ public void testCreateExportSchedule(){
 		mSolo.clickOnText(ExportFormat.XML.name());
 		mSolo.clickOnView(mSolo.getView(R.id.input_recurrence));
 		mSolo.waitForDialogToOpen();
-		mSolo.sleep(5000);
+		mSolo.sleep(2000);
 		mSolo.clickOnButton(0); //switch on the recurrence dialog
-		mSolo.sleep(5000);
-		mSolo.clickOnText("Done");
+		mSolo.sleep(2000);
+		mSolo.pressSpinnerItem(0,-1);
+		mSolo.clickOnButton(1);
 		mSolo.waitForDialogToClose();
 
 		mSolo.clickOnButton(mSolo.getString(R.string.btn_export));
@@ -181,7 +182,7 @@ public void testCreateExportSchedule(){
 				.extracting("mActionType").contains(ScheduledAction.ActionType.BACKUP);
 
 		ScheduledAction action = scheduledactionDbAdapter.getAllScheduledActions().get(0);
-		assertThat(action.getPeriodType()).isEqualTo(PeriodType.WEEK);
+		assertThat(action.getPeriodType()).isEqualTo(PeriodType.DAY);
 		assertThat(action.getEndTime()).isEqualTo(0);
 	}
 
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
index 3cbda114..65bfa673 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/TransactionsActivityTest.java
@@ -28,6 +28,7 @@
 import android.util.Log;
 import android.view.View;
 import android.widget.EditText;
+import android.widget.LinearLayout;
 import android.widget.Spinner;
 import android.widget.TextView;
 import android.widget.ToggleButton;
@@ -278,6 +279,123 @@ public void testEditTransaction(){
 		mSolo.waitForText("Pasta");
 	}
 
+	/**
+	 * Tests that transactions splits are automatically balanced and an imbalance account will be created
+	 * This test case assumes that single entry is used
+	 */
+	public void testAutoBalanceTransactions(){
+		setDoubleEntryEnabled(false);
+		mTransactionsDbAdapter.deleteAllRecords();
+		mSolo.sleep(1000);
+		assertThat(mTransactionsDbAdapter.getTotalTransactionsCount()).isEqualTo(0);
+		String imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(CURRENCY_CODE));
+		assertThat(imbalanceAcctUID).isNull();
+
+		mSolo.waitForText(TRANSACTION_NAME);
+
+		validateTransactionListDisplayed();
+		clickSherlockActionBarItem(R.id.menu_add_transaction);
+
+		mSolo.waitForText("New transaction");
+
+		//validate creation of transaction
+		mSolo.enterText(0, "Autobalance");
+		mSolo.enterText(1, "499");
+
+		View typeToogleButton = mSolo.getView(R.id.btn_open_splits);
+		assertThat(typeToogleButton).isNotVisible(); //no double entry so no split editor
+
+		mSolo.clickOnActionBarItem(R.id.menu_save);
+
+		mSolo.sleep(2000);
+
+		assertThat(mTransactionsDbAdapter.getTotalTransactionsCount()).isEqualTo(1);
+		Transaction transaction = mTransactionsDbAdapter.getAllTransactions().get(0);
+		assertThat(transaction.getSplits()).hasSize(2);
+		imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(CURRENCY_CODE));
+		assertThat(imbalanceAcctUID).isNotNull();
+		assertThat(imbalanceAcctUID).isNotEmpty();
+		assertTrue(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID)); //imbalance account should be hidden in single entry mode
+
+		assertThat(transaction.getSplits()).extracting("mAccountUID").contains(imbalanceAcctUID);
+
+	}
+
+	/**
+	 * Tests input of transaction splits using the split editor.
+	 * Also validates that the imbalance from the split editor will be automatically added as a split
+	 */
+	public void testSplitEditor(){
+		setDoubleEntryEnabled(true);
+		mTransactionsDbAdapter.deleteAllRecords();
+		mSolo.sleep(1000);
+		//when we start there should be no imbalance account in the system
+		String imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(CURRENCY_CODE));
+		assertThat(imbalanceAcctUID).isNull();
+
+		mSolo.waitForText(TRANSACTION_NAME);
+
+		validateTransactionListDisplayed();
+		clickSherlockActionBarItem(R.id.menu_add_transaction);
+
+		mSolo.waitForText("New transaction");
+
+		//validate creation of transaction
+		mSolo.enterText(0, "Autobalance");
+		mSolo.enterText(1, "4499");
+
+		mSolo.clickOnButton(1);
+		mSolo.waitForDialogToOpen();
+
+		LinearLayout splitListView = (LinearLayout) mSolo.getView(R.id.split_list_layout);
+		assertThat(splitListView).hasChildCount(1);
+
+		//TODO: enable this assert when we fix the sign of amounts in split editor
+		//assertThat(mSolo.getEditText(0).getText().toString()).isEqualTo("44.99");
+		View addSplit = mSolo.getView(R.id.btn_add_split);
+		mSolo.clickOnView(addSplit);
+		mSolo.sleep(5000);
+		assertThat(splitListView).hasChildCount(2);
+
+		mSolo.enterText(0, "4000");
+
+		TextView imbalanceTextView = (TextView) mSolo.getView(R.id.imbalance_textview);
+		assertThat(imbalanceTextView).hasText("-4.99 $");
+
+		mSolo.clickOnView(mSolo.getView(R.id.btn_save));
+		mSolo.waitForDialogToClose();
+		mSolo.sleep(3000);
+		//after we use split editor, we should not be able to toggle the transaction type
+		assertThat(mSolo.getView(R.id.input_transaction_type)).isNotVisible();
+
+		mSolo.clickOnActionBarItem(R.id.menu_save);
+
+		mSolo.sleep(3000);
+
+		List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactions();
+		assertThat(transactions).hasSize(1);
+
+		Transaction transaction = transactions.get(0);
+
+		assertThat(transaction.getSplits()).hasSize(3); //auto-balanced
+		imbalanceAcctUID = mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(CURRENCY_CODE));
+		assertThat(imbalanceAcctUID).isNotNull();
+		assertThat(imbalanceAcctUID).isNotEmpty();
+		assertFalse(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID));
+
+		//at least one split will belong to the imbalance account
+		assertThat(transaction.getSplits()).extracting("mAccountUID").contains(imbalanceAcctUID);
+
+		List<Split> imbalanceSplits = mSplitsDbAdapter.getSplitsForTransactionInAccount(transaction.getUID(), imbalanceAcctUID);
+		assertThat(imbalanceSplits).hasSize(1);
+
+		Split split = imbalanceSplits.get(0);
+		assertThat(split.getAmount().toPlainString()).isEqualTo("4.99");
+		assertThat(split.getType()).isEqualTo(TransactionType.CREDIT);
+
+	}
+
+
     private void setDoubleEntryEnabled(boolean enabled){
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
         Editor editor = prefs.edit();
@@ -346,34 +464,27 @@ public void testToggleTransactionType(){
 		validateEditTransactionFields(mTransaction);
 
         TransactionTypeToggleButton toggleButton = (TransactionTypeToggleButton) mSolo.getView(R.id.input_transaction_type);
-        assertThat(toggleButton).isVisible();
-
-        String label = toggleButton.getText().toString();
-        assertTrue(mSolo.searchToggleButton(label));
-		assertThat(getActivity().getString(R.string.label_receive)).isEqualTo(label);
+        assertThat(toggleButton).isNotNull();
+		assertThat(toggleButton).isVisible();
+		assertThat(toggleButton).hasText(R.string.label_receive);
 
         mSolo.clickOnView(toggleButton);
-		mSolo.sleep(3000);
-		String amountString = mSolo.getEditText(1).getText().toString();
-		NumberFormat formatter = NumberFormat.getInstance();
-		try {
-			amountString = formatter.parse(amountString).toString();
-		} catch (ParseException e) {
-			e.printStackTrace();
-		}
-		Money amount = new Money(amountString, Currency.getInstance(Locale.getDefault()).getCurrencyCode());
-		assertThat("-9.99").isEqualTo(amount.toPlainString());
+		mSolo.sleep(2000);
 
-		clickSherlockActionBarItem(R.id.menu_save);
+		assertThat(toggleButton).hasText(R.string.label_spend);
+		EditText amountView = (EditText) mSolo.getView(R.id.input_transaction_amount);
+		String amountString = amountView.getText().toString();
+		assertThat(amountString).startsWith("-");
+		assertThat("-9.99").isEqualTo(amountString);
+
+		mSolo.clickOnActionBarItem(R.id.menu_save);
 		mSolo.waitForText(DUMMY_ACCOUNT_NAME);
 		
 		List<Transaction> transactions = mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID);
-		
-		assertEquals(1, transactions.size());
+		assertThat(transactions).hasSize(1);
 		Transaction trx = transactions.get(0);
+		assertThat(trx.getSplits()).hasSize(2); //auto-balancing of splits
 		assertTrue(trx.getBalance(DUMMY_ACCOUNT_UID).isNegative());
-
-        mSolo.goBack();
 	}
 	
 	public void testOpenTransactionEditShouldNotModifyTransaction(){
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
index 6a2c987c..8a7e3e26 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
@@ -17,6 +17,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
+import java.math.BigDecimal;
 import java.util.Currency;
 import java.util.List;
 
@@ -36,6 +37,8 @@
 	private Account alphaAccount;
 	private Account bravoAccount;
 
+	private Split mTestSplit;
+
 	@Before
 	public void setUp() throws Exception {
         mSplitsDbAdapter = SplitsDbAdapter.getInstance();
@@ -45,9 +48,13 @@ public void setUp() throws Exception {
 		alphaAccount = new Account(ALPHA_ACCOUNT_NAME);
 		bravoAccount = new Account(BRAVO_ACCOUNT_NAME);
 
-		
-		mAccountsDbAdapter.addAccount(bravoAccount);
-		mAccountsDbAdapter.addAccount(alphaAccount);
+		long id1 = mAccountsDbAdapter.addAccount(bravoAccount);
+		long id2 = mAccountsDbAdapter.addAccount(alphaAccount);
+
+		assertThat(id1).isGreaterThan(0);
+		assertThat(id2).isGreaterThan(0);
+
+		mTestSplit = new Split(new Money(BigDecimal.TEN, DEFAULT_CURRENCY), alphaAccount.getUID());
 	}
 
 	@Test
@@ -100,24 +107,27 @@ public void addingSplitsShouldSetTransactionUID(){
 		assertThat(split.getTransactionUID()).isEqualTo(transaction.getUID());
 	}
 
-/**
- //TODO: move this test to UI code. Autobalancing is done before the database level
 	@Test
-	public void shouldAutoBalanceTransactions(){
-		Transaction t = new Transaction("Autobalance");
-		Split split = new Split(new Money(BigDecimal.TEN, DEFAULT_CURRENCY), alphaAccount.getUID());
-		t.addSplit(split);
+	public void testComputeBalance(){
+		Transaction transaction = new Transaction("Compute");
+		Money firstSplitAmount = new Money("4.99", DEFAULT_CURRENCY.getCurrencyCode());
+		Split split = new Split(firstSplitAmount, alphaAccount.getUID());
+		transaction.addSplit(split);
+		Money secondSplitAmount = new Money("3.50", DEFAULT_CURRENCY.getCurrencyCode());
+		split = new Split(secondSplitAmount, bravoAccount.getUID());
+		transaction.addSplit(split);
 
-		mTransactionsDbAdapter.addTransaction(t);
+		mTransactionsDbAdapter.addTransaction(transaction);
 
-		Transaction balanced = mTransactionsDbAdapter.getTransaction(t.getUID());
-		assertThat(balanced).isNotNull();
-		assertThat(balanced.getSplits()).hasSize(2);
+		//balance is negated because the CASH account has inverse normal balance
+		transaction = mTransactionsDbAdapter.getTransaction(transaction.getUID());
+		Money savedBalance = transaction.getBalance(alphaAccount.getUID());
+		assertThat(savedBalance).isEqualTo(firstSplitAmount.negate());
 
-		String imbalanceUID = mAccountsDbAdapter.getImbalanceAccountUID(DEFAULT_CURRENCY);
-		assertThat(balanced.getSplits()).extracting("mAccountUID").contains(imbalanceUID);
+		savedBalance = transaction.getBalance(bravoAccount.getUID());
+		assertThat(savedBalance).isEqualTo(secondSplitAmount.negate());
 	}
-**/
+
 	@After
 	public void tearDown() throws Exception {
 		mAccountsDbAdapter.deleteAllRecords();

From e0eaa3dc232b169a9bd1820584e4b4741c20d81f Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 13 May 2015 15:21:42 +0200
Subject: [PATCH 9/9] Added Java memory config options for Travis builds

Updated tests
---
 .travis.yml                                                       | 1 +
 .../java/org/gnucash/android/test/ui/ExportTransactionsTest.java  | 8 ++++----
 2 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/.travis.yml b/.travis.yml
index 4f912e93..c1e2bd9a 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,5 +1,6 @@
 language: android
 jdk: oraclejdk7
+env: _JAVA_OPTIONS="-Xmx768m -Xms768m"
 android:
   components:
     - platform-tools
diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
index a795b632..2bd75e59 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java
@@ -129,7 +129,7 @@ public void testExport(ExportFormat format){
         mSolo.waitForText(getActivity().getString(R.string.title_export_dialog));
 
 		mSolo.clickOnText(format.name());
-		mSolo.clickOnButton(mSolo.getString(R.string.btn_export));
+		mSolo.clickOnView(mSolo.getView(R.id.btn_save));
 
         mSolo.waitForDialogToClose(10000);
 		mSolo.sleep(5000); //sleep so that emulators can save the file
@@ -167,11 +167,11 @@ public void testCreateExportSchedule(){
 		mSolo.sleep(2000);
 		mSolo.clickOnButton(0); //switch on the recurrence dialog
 		mSolo.sleep(2000);
-		mSolo.pressSpinnerItem(0,-1);
+		mSolo.pressSpinnerItem(0, -1);
 		mSolo.clickOnButton(1);
 		mSolo.waitForDialogToClose();
-
-		mSolo.clickOnButton(mSolo.getString(R.string.btn_export));
+		mSolo.sleep(2000);
+		mSolo.clickOnView(mSolo.getView(R.id.btn_save));
 		mSolo.waitForDialogToClose();
 
 		mSolo.sleep(2000); //wait for database save
