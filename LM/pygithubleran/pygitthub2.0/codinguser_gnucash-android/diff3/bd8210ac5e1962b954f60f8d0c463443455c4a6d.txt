From bd8210ac5e1962b954f60f8d0c463443455c4a6d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 23 May 2016 20:48:32 +0200
Subject: [PATCH] Add test case for AmountParser.

---
 .../android/test/unit/util/AmountParserTest.java   | 58 ++++++++++++++++++++++
 1 file changed, 58 insertions(+)
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java

diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java b/app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java
new file mode 100644
index 00000000..0d0ad72a
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/util/AmountParserTest.java
@@ -0,0 +1,58 @@
+package org.gnucash.android.test.unit.util;
+
+import org.gnucash.android.util.AmountParser;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+import java.math.BigDecimal;
+import java.text.ParseException;
+import java.util.Locale;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+public class AmountParserTest {
+    private Locale mPreviousLocale;
+
+    @Before
+    public void setUp() throws Exception {
+        mPreviousLocale = Locale.getDefault();
+        Locale.setDefault(Locale.US);
+    }
+
+    @After
+    public void tearDown() throws Exception {
+        Locale.setDefault(mPreviousLocale);
+    }
+
+    @Test
+    public void testParseIntegerAmount() throws ParseException {
+        assertThat(AmountParser.parse("123")).isEqualTo(new BigDecimal(123));
+    }
+
+    @Test
+    public void parseDecimalAmount() throws ParseException {
+        assertThat(AmountParser.parse("123.45")).isEqualTo(new BigDecimal("123.45"));
+    }
+
+    @Test
+    public void parseDecimalAmountWithDifferentSeparator() throws ParseException {
+        Locale.setDefault(Locale.GERMANY);
+        assertThat(AmountParser.parse("123,45")).isEqualTo(new BigDecimal("123.45"));
+    }
+
+    @Test(expected = ParseException.class)
+    public void withGarbageAtTheBeginning_shouldFailWithException() throws ParseException {
+        AmountParser.parse("asdf123.45");
+    }
+
+    @Test(expected = ParseException.class)
+    public void withGarbageAtTheEnd_shouldFailWithException() throws ParseException {
+        AmountParser.parse("123.45asdf");
+    }
+
+    @Test(expected = ParseException.class)
+    public void emptyString_shouldFailWithException() throws ParseException {
+        AmountParser.parse("");
+    }
+}
\ No newline at end of file
