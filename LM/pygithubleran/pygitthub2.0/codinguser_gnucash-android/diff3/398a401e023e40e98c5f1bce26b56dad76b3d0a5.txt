From 35299b110ada2f94d0370395ed5c395ec4bf0275 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 3 May 2016 17:15:51 +0200
Subject: [PATCH] Add unit tests for importing of GnuCash XML files.

---
 .../android/importer/GncXmlHandlerTest.java        | 193 +++++++++++++++++++++
 app/src/test/resources/simpleTransactionImport.xml | 186 ++++++++++++++++++++
 app/src/test/resources/testAccountsImport.xml      | 147 ++++++++++++++++
 3 files changed, 526 insertions(+)
 create mode 100644 app/src/test/java/org/gnucash/android/importer/GncXmlHandlerTest.java
 create mode 100644 app/src/test/resources/simpleTransactionImport.xml
 create mode 100644 app/src/test/resources/testAccountsImport.xml

diff --git a/app/src/test/java/org/gnucash/android/importer/GncXmlHandlerTest.java b/app/src/test/java/org/gnucash/android/importer/GncXmlHandlerTest.java
new file mode 100644
index 00000000..19dd8645
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/importer/GncXmlHandlerTest.java
@@ -0,0 +1,193 @@
+/*
+ * Copyright (c) 2016 lex Magaz Graa <rivaldi8@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.importer;
+
+import android.database.sqlite.SQLiteDatabase;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.adapter.AccountsDbAdapter;
+import org.gnucash.android.db.adapter.BooksDbAdapter;
+import org.gnucash.android.db.adapter.SplitsDbAdapter;
+import org.gnucash.android.db.adapter.TransactionsDbAdapter;
+import org.gnucash.android.export.xml.GncXmlHelper;
+import org.gnucash.android.model.Account;
+import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.Money;
+import org.gnucash.android.model.Split;
+import org.gnucash.android.model.Transaction;
+import org.gnucash.android.model.TransactionType;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+import org.xml.sax.InputSource;
+import org.xml.sax.SAXException;
+import org.xml.sax.XMLReader;
+
+import java.io.BufferedInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.text.ParseException;
+
+import javax.xml.parsers.ParserConfigurationException;
+import javax.xml.parsers.SAXParser;
+import javax.xml.parsers.SAXParserFactory;
+
+import static org.assertj.core.api.Assertions.assertThat;
+import static org.junit.Assert.fail;
+
+/**
+ * Imports GnuCash XML files and checks the objects defined in them are imported correctly.
+ */
+@RunWith(GnucashTestRunner.class)
+@Config(constants = BuildConfig.class, sdk = 21, packageName = "org.gnucash.android", shadows = {ShadowCrashlytics.class, ShadowUserVoice.class})
+public class GncXmlHandlerTest {
+    private BooksDbAdapter mBooksDbAdapter;
+    private TransactionsDbAdapter mTransactionsDbAdapter;
+    private AccountsDbAdapter mAccountsDbAdapter;
+
+    @Before
+    public void setUp() throws Exception {
+        mBooksDbAdapter = BooksDbAdapter.getInstance();
+        mBooksDbAdapter.deleteAllRecords();
+        assertThat(mBooksDbAdapter.getRecordsCount()).isZero();
+    }
+
+    private String importGnuCashXml(String filename) {
+        SAXParser parser;
+        GncXmlHandler handler = null;
+        try {
+            parser = SAXParserFactory.newInstance().newSAXParser();
+            XMLReader reader = parser.getXMLReader();
+            handler = new GncXmlHandler();
+            reader.setContentHandler(handler);
+            InputStream inputStream = getClass().getClassLoader().getResourceAsStream(filename);
+            InputSource inputSource = new InputSource(new BufferedInputStream(inputStream));
+            reader.parse(inputSource);
+        } catch (ParserConfigurationException | SAXException | IOException e) {
+            e.printStackTrace();
+            fail();
+        }
+        return handler.getBookUID();
+    }
+
+    private void setUpDbAdapters(String bookUID) {
+        DatabaseHelper databaseHelper = new DatabaseHelper(GnuCashApplication.getAppContext(), bookUID);
+        SQLiteDatabase mainDb = databaseHelper.getReadableDatabase();
+        mTransactionsDbAdapter = new TransactionsDbAdapter(mainDb, new SplitsDbAdapter(mainDb));
+        mAccountsDbAdapter = new AccountsDbAdapter(mainDb, mTransactionsDbAdapter);
+    }
+
+    /**
+     * Tests basic accounts import.
+     *
+     * <p>Checks hierarchy and attributes. We should have:</p>
+     * <pre>
+     * Root
+     * |_ Assets
+     * |   |_ Cash in wallet
+     * |_ Expenses
+     *     |_ Dining
+     * </pre>
+     */
+    @Test
+    public void testAccountsImport() {
+        String bookUID = importGnuCashXml("testAccountsImport.xml");
+        setUpDbAdapters(bookUID);
+
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(5); // 4 accounts + root
+
+        Account rootAccount = mAccountsDbAdapter.getRecord("308ade8cf0be2b0b05c5eec3114a65fa");
+        assertThat(rootAccount.getParentUID()).isNull();
+        assertThat(rootAccount.getName()).isEqualTo("Root Account");
+        assertThat(rootAccount.isHidden()).isTrue();
+
+        Account assetsAccount = mAccountsDbAdapter.getRecord("3f44d61cb1afd201e8ea5a54ec4fbbff");
+        assertThat(assetsAccount.getParentUID()).isEqualTo(rootAccount.getUID());
+        assertThat(assetsAccount.getName()).isEqualTo("Assets");
+        assertThat(assetsAccount.isHidden()).isFalse();
+        assertThat(assetsAccount.isPlaceholderAccount()).isTrue();
+        assertThat(assetsAccount.getAccountType()).isEqualTo(AccountType.ASSET);
+
+        Account diningAccount = mAccountsDbAdapter.getRecord("6a7cf8267314992bdddcee56d71a3908");
+        assertThat(diningAccount.getParentUID()).isEqualTo("9b607f63aecb1a175556676904432365");
+        assertThat(diningAccount.getName()).isEqualTo("Dining");
+        assertThat(diningAccount.getDescription()).isEqualTo("Dining");
+        assertThat(diningAccount.isHidden()).isFalse();
+        assertThat(diningAccount.isPlaceholderAccount()).isFalse();
+        assertThat(diningAccount.isFavorite()).isFalse();
+        assertThat(diningAccount.getAccountType()).isEqualTo(AccountType.EXPENSE);
+        assertThat(diningAccount.getCommodity().getCurrencyCode()).isEqualTo("USD");
+        assertThat(diningAccount.getColor()).isEqualTo(Account.DEFAULT_COLOR);
+        assertThat(diningAccount.getDefaultTransferAccountUID()).isNull();
+    }
+
+    /**
+     * Tests importing a simple transaction with default splits.
+     *
+     * @throws ParseException
+     */
+    @Test
+    public void simpleTransactionImport() throws ParseException {
+        String bookUID = importGnuCashXml("simpleTransactionImport.xml");
+        setUpDbAdapters(bookUID);
+
+        assertThat(mTransactionsDbAdapter.getRecordsCount()).isEqualTo(1);
+
+        Transaction transaction = mTransactionsDbAdapter.getRecord("b33c8a6160494417558fd143731fc26a");
+
+        // Check attributes
+        assertThat(transaction.getDescription()).isEqualTo("Kahuna Burger");
+        assertThat(transaction.getCommodity().getCurrencyCode()).isEqualTo("USD");
+        assertThat(transaction.getNote()).isEqualTo("");
+        assertThat(transaction.getScheduledActionUID()).isNull();
+        assertThat(transaction.isExported()).isTrue();
+        assertThat(transaction.isTemplate()).isFalse();
+        assertThat(transaction.getTimeMillis()).
+                isEqualTo(GncXmlHelper.parseDate("2016-08-23 00:00:00 +0200"));
+        assertThat(transaction.getCreatedTimestamp().getTime()).
+                isEqualTo(GncXmlHelper.parseDate("2016-08-23 12:44:19 +0200"));
+
+        // Check splits
+        assertThat(transaction.getSplits().size()).isEqualTo(2);
+        // FIXME: don't depend on the order
+        Split split1 = transaction.getSplits().get(0);
+        assertThat(split1.getUID()).isEqualTo("ad2cbc774fc4e71885d17e6932448e8e");
+        assertThat(split1.getAccountUID()).isEqualTo("6a7cf8267314992bdddcee56d71a3908");
+        assertThat(split1.getTransactionUID()).isEqualTo("b33c8a6160494417558fd143731fc26a");
+        assertThat(split1.getType()).isEqualTo(TransactionType.DEBIT);
+        assertThat(split1.getMemo()).isNull();
+        assertThat(split1.getValue()).isEqualTo(new Money("10", "USD"));
+        assertThat(split1.getQuantity()).isEqualTo(new Money("10", "USD"));
+        assertThat(split1.getReconcileState()).isEqualTo('n');
+
+        Split split2 = transaction.getSplits().get(1);
+        assertThat(split2.getUID()).isEqualTo("61d4d604bc00a59cabff4e8875d00bee");
+        assertThat(split2.getAccountUID()).isEqualTo("dae686a1636addc0dae1ae670701aa4a");
+        assertThat(split2.getTransactionUID()).isEqualTo("b33c8a6160494417558fd143731fc26a");
+        assertThat(split2.getType()).isEqualTo(TransactionType.CREDIT);
+        assertThat(split2.getMemo()).isNull();
+        assertThat(split2.getValue()).isEqualTo(new Money("10", "USD"));
+        assertThat(split2.getQuantity()).isEqualTo(new Money("10", "USD"));
+        assertThat(split2.getReconcileState()).isEqualTo('n');
+        assertThat(split2.isPairOf(split1)).isTrue();
+    }
+}
\ No newline at end of file
diff --git a/app/src/test/resources/simpleTransactionImport.xml b/app/src/test/resources/simpleTransactionImport.xml
new file mode 100644
index 00000000..913e1f0e
--- /dev/null
+++ b/app/src/test/resources/simpleTransactionImport.xml
@@ -0,0 +1,186 @@
+<?xml version="1.0" encoding="utf-8" ?>
+<gnc-v2
+     xmlns:gnc="http://www.gnucash.org/XML/gnc"
+     xmlns:act="http://www.gnucash.org/XML/act"
+     xmlns:book="http://www.gnucash.org/XML/book"
+     xmlns:cd="http://www.gnucash.org/XML/cd"
+     xmlns:cmdty="http://www.gnucash.org/XML/cmdty"
+     xmlns:price="http://www.gnucash.org/XML/price"
+     xmlns:slot="http://www.gnucash.org/XML/slot"
+     xmlns:split="http://www.gnucash.org/XML/split"
+     xmlns:sx="http://www.gnucash.org/XML/sx"
+     xmlns:trn="http://www.gnucash.org/XML/trn"
+     xmlns:ts="http://www.gnucash.org/XML/ts"
+     xmlns:fs="http://www.gnucash.org/XML/fs"
+     xmlns:bgt="http://www.gnucash.org/XML/bgt"
+     xmlns:recurrence="http://www.gnucash.org/XML/recurrence"
+     xmlns:lot="http://www.gnucash.org/XML/lot"
+     xmlns:addr="http://www.gnucash.org/XML/addr"
+     xmlns:owner="http://www.gnucash.org/XML/owner"
+     xmlns:billterm="http://www.gnucash.org/XML/billterm"
+     xmlns:bt-days="http://www.gnucash.org/XML/bt-days"
+     xmlns:bt-prox="http://www.gnucash.org/XML/bt-prox"
+     xmlns:cust="http://www.gnucash.org/XML/cust"
+     xmlns:employee="http://www.gnucash.org/XML/employee"
+     xmlns:entry="http://www.gnucash.org/XML/entry"
+     xmlns:invoice="http://www.gnucash.org/XML/invoice"
+     xmlns:job="http://www.gnucash.org/XML/job"
+     xmlns:order="http://www.gnucash.org/XML/order"
+     xmlns:taxtable="http://www.gnucash.org/XML/taxtable"
+     xmlns:tte="http://www.gnucash.org/XML/tte"
+     xmlns:vendor="http://www.gnucash.org/XML/vendor">
+<gnc:count-data cd:type="book">1</gnc:count-data>
+<gnc:book version="2.0.0">
+<book:id type="guid">fb0911dd508266db9446bc605edad3e4</book:id>
+<book:slots>
+  <slot>
+    <slot:key>counter_formats</slot:key>
+    <slot:value type="frame"/>
+  </slot>
+  <slot>
+    <slot:key>options</slot:key>
+    <slot:value type="frame">
+      <slot>
+        <slot:key>Budgeting</slot:key>
+        <slot:value type="frame"/>
+      </slot>
+    </slot:value>
+  </slot>
+</book:slots>
+<gnc:count-data cd:type="commodity">1</gnc:count-data>
+<gnc:count-data cd:type="account">5</gnc:count-data>
+<gnc:count-data cd:type="transaction">1</gnc:count-data>
+<gnc:commodity version="2.0.0">
+  <cmdty:space>ISO4217</cmdty:space>
+  <cmdty:id>USD</cmdty:id>
+  <cmdty:get_quotes/>
+  <cmdty:quote_source>currency</cmdty:quote_source>
+  <cmdty:quote_tz/>
+</gnc:commodity>
+<gnc:commodity version="2.0.0">
+  <cmdty:space>template</cmdty:space>
+  <cmdty:id>template</cmdty:id>
+  <cmdty:name>template</cmdty:name>
+  <cmdty:xcode>template</cmdty:xcode>
+  <cmdty:fraction>1</cmdty:fraction>
+</gnc:commodity>
+<gnc:account version="2.0.0">
+  <act:name>Root Account</act:name>
+  <act:id type="guid">308ade8cf0be2b0b05c5eec3114a65fa</act:id>
+  <act:type>ROOT</act:type>
+  <act:commodity>
+    <cmdty:space>ISO4217</cmdty:space>
+    <cmdty:id>USD</cmdty:id>
+  </act:commodity>
+  <act:commodity-scu>100</act:commodity-scu>
+</gnc:account>
+<gnc:account version="2.0.0">
+  <act:name>Assets</act:name>
+  <act:id type="guid">3f44d61cb1afd201e8ea5a54ec4fbbff</act:id>
+  <act:type>ASSET</act:type>
+  <act:commodity>
+    <cmdty:space>ISO4217</cmdty:space>
+    <cmdty:id>USD</cmdty:id>
+  </act:commodity>
+  <act:commodity-scu>100</act:commodity-scu>
+  <act:description>Assets</act:description>
+  <act:slots>
+    <slot>
+      <slot:key>placeholder</slot:key>
+      <slot:value type="string">true</slot:value>
+    </slot>
+  </act:slots>
+  <act:parent type="guid">308ade8cf0be2b0b05c5eec3114a65fa</act:parent>
+</gnc:account>
+<gnc:account version="2.0.0">
+  <act:name>Cash in Wallet</act:name>
+  <act:id type="guid">dae686a1636addc0dae1ae670701aa4a</act:id>
+  <act:type>CASH</act:type>
+  <act:commodity>
+    <cmdty:space>ISO4217</cmdty:space>
+    <cmdty:id>USD</cmdty:id>
+  </act:commodity>
+  <act:commodity-scu>100</act:commodity-scu>
+  <act:description>Cash in Wallet</act:description>
+  <act:slots>
+    <slot>
+      <slot:key>color</slot:key>
+      <slot:value type="string">Not Set</slot:value>
+    </slot>
+  </act:slots>
+  <act:parent type="guid">3f44d61cb1afd201e8ea5a54ec4fbbff</act:parent>
+</gnc:account>
+<gnc:account version="2.0.0">
+  <act:name>Expenses</act:name>
+  <act:id type="guid">9b607f63aecb1a175556676904432365</act:id>
+  <act:type>EXPENSE</act:type>
+  <act:commodity>
+    <cmdty:space>ISO4217</cmdty:space>
+    <cmdty:id>USD</cmdty:id>
+  </act:commodity>
+  <act:commodity-scu>100</act:commodity-scu>
+  <act:description>Expenses</act:description>
+  <act:slots>
+    <slot>
+      <slot:key>placeholder</slot:key>
+      <slot:value type="string">true</slot:value>
+    </slot>
+  </act:slots>
+  <act:parent type="guid">308ade8cf0be2b0b05c5eec3114a65fa</act:parent>
+</gnc:account>
+<gnc:account version="2.0.0">
+  <act:name>Dining</act:name>
+  <act:id type="guid">6a7cf8267314992bdddcee56d71a3908</act:id>
+  <act:type>EXPENSE</act:type>
+  <act:commodity>
+    <cmdty:space>ISO4217</cmdty:space>
+    <cmdty:id>USD</cmdty:id>
+  </act:commodity>
+  <act:commodity-scu>100</act:commodity-scu>
+  <act:description>Dining</act:description>
+  <act:parent type="guid">9b607f63aecb1a175556676904432365</act:parent>
+</gnc:account>
+<gnc:transaction version="2.0.0">
+  <trn:id type="guid">b33c8a6160494417558fd143731fc26a</trn:id>
+  <trn:currency>
+    <cmdty:space>ISO4217</cmdty:space>
+    <cmdty:id>USD</cmdty:id>
+  </trn:currency>
+  <trn:date-posted>
+    <ts:date>2016-08-23 00:00:00 +0200</ts:date>
+  </trn:date-posted>
+  <trn:date-entered>
+    <ts:date>2016-08-23 12:44:19 +0200</ts:date>
+  </trn:date-entered>
+  <trn:description>Kahuna Burger</trn:description>
+  <trn:slots>
+    <slot>
+      <slot:key>date-posted</slot:key>
+      <slot:value type="gdate">
+        <gdate>2016-08-23</gdate>
+      </slot:value>
+    </slot>
+  </trn:slots>
+  <trn:splits>
+    <trn:split>
+      <split:id type="guid">ad2cbc774fc4e71885d17e6932448e8e</split:id>
+      <split:reconciled-state>n</split:reconciled-state>
+      <split:value>1000/100</split:value>
+      <split:quantity>1000/100</split:quantity>
+      <split:account type="guid">6a7cf8267314992bdddcee56d71a3908</split:account>
+    </trn:split>
+    <trn:split>
+      <split:id type="guid">61d4d604bc00a59cabff4e8875d00bee</split:id>
+      <split:reconciled-state>n</split:reconciled-state>
+      <split:value>-1000/100</split:value>
+      <split:quantity>-1000/100</split:quantity>
+      <split:account type="guid">dae686a1636addc0dae1ae670701aa4a</split:account>
+    </trn:split>
+  </trn:splits>
+</gnc:transaction>
+</gnc:book>
+</gnc-v2>
+
+<!-- Local variables: -->
+<!-- mode: xml        -->
+<!-- End:             -->
diff --git a/app/src/test/resources/testAccountsImport.xml b/app/src/test/resources/testAccountsImport.xml
new file mode 100644
index 00000000..91be43d1
--- /dev/null
+++ b/app/src/test/resources/testAccountsImport.xml
@@ -0,0 +1,147 @@
+<?xml version="1.0" encoding="utf-8" ?>
+<gnc-v2
+     xmlns:gnc="http://www.gnucash.org/XML/gnc"
+     xmlns:act="http://www.gnucash.org/XML/act"
+     xmlns:book="http://www.gnucash.org/XML/book"
+     xmlns:cd="http://www.gnucash.org/XML/cd"
+     xmlns:cmdty="http://www.gnucash.org/XML/cmdty"
+     xmlns:price="http://www.gnucash.org/XML/price"
+     xmlns:slot="http://www.gnucash.org/XML/slot"
+     xmlns:split="http://www.gnucash.org/XML/split"
+     xmlns:sx="http://www.gnucash.org/XML/sx"
+     xmlns:trn="http://www.gnucash.org/XML/trn"
+     xmlns:ts="http://www.gnucash.org/XML/ts"
+     xmlns:fs="http://www.gnucash.org/XML/fs"
+     xmlns:bgt="http://www.gnucash.org/XML/bgt"
+     xmlns:recurrence="http://www.gnucash.org/XML/recurrence"
+     xmlns:lot="http://www.gnucash.org/XML/lot"
+     xmlns:addr="http://www.gnucash.org/XML/addr"
+     xmlns:owner="http://www.gnucash.org/XML/owner"
+     xmlns:billterm="http://www.gnucash.org/XML/billterm"
+     xmlns:bt-days="http://www.gnucash.org/XML/bt-days"
+     xmlns:bt-prox="http://www.gnucash.org/XML/bt-prox"
+     xmlns:cust="http://www.gnucash.org/XML/cust"
+     xmlns:employee="http://www.gnucash.org/XML/employee"
+     xmlns:entry="http://www.gnucash.org/XML/entry"
+     xmlns:invoice="http://www.gnucash.org/XML/invoice"
+     xmlns:job="http://www.gnucash.org/XML/job"
+     xmlns:order="http://www.gnucash.org/XML/order"
+     xmlns:taxtable="http://www.gnucash.org/XML/taxtable"
+     xmlns:tte="http://www.gnucash.org/XML/tte"
+     xmlns:vendor="http://www.gnucash.org/XML/vendor">
+<gnc:count-data cd:type="book">1</gnc:count-data>
+<gnc:book version="2.0.0">
+<book:id type="guid">fb0911dd508266db9446bc605edad3e4</book:id>
+<book:slots>
+  <slot>
+    <slot:key>counter_formats</slot:key>
+    <slot:value type="frame"/>
+  </slot>
+  <slot>
+    <slot:key>options</slot:key>
+    <slot:value type="frame">
+      <slot>
+        <slot:key>Budgeting</slot:key>
+        <slot:value type="frame"/>
+      </slot>
+    </slot:value>
+  </slot>
+</book:slots>
+<gnc:count-data cd:type="commodity">1</gnc:count-data>
+<gnc:count-data cd:type="account">5</gnc:count-data>
+<gnc:commodity version="2.0.0">
+  <cmdty:space>ISO4217</cmdty:space>
+  <cmdty:id>USD</cmdty:id>
+  <cmdty:get_quotes/>
+  <cmdty:quote_source>currency</cmdty:quote_source>
+  <cmdty:quote_tz/>
+</gnc:commodity>
+<gnc:commodity version="2.0.0">
+  <cmdty:space>template</cmdty:space>
+  <cmdty:id>template</cmdty:id>
+  <cmdty:name>template</cmdty:name>
+  <cmdty:xcode>template</cmdty:xcode>
+  <cmdty:fraction>1</cmdty:fraction>
+</gnc:commodity>
+<gnc:account version="2.0.0">
+  <act:name>Root Account</act:name>
+  <act:id type="guid">308ade8cf0be2b0b05c5eec3114a65fa</act:id>
+  <act:type>ROOT</act:type>
+  <act:commodity>
+    <cmdty:space>ISO4217</cmdty:space>
+    <cmdty:id>USD</cmdty:id>
+  </act:commodity>
+  <act:commodity-scu>100</act:commodity-scu>
+</gnc:account>
+<gnc:account version="2.0.0">
+  <act:name>Assets</act:name>
+  <act:id type="guid">3f44d61cb1afd201e8ea5a54ec4fbbff</act:id>
+  <act:type>ASSET</act:type>
+  <act:commodity>
+    <cmdty:space>ISO4217</cmdty:space>
+    <cmdty:id>USD</cmdty:id>
+  </act:commodity>
+  <act:commodity-scu>100</act:commodity-scu>
+  <act:description>Assets</act:description>
+  <act:slots>
+    <slot>
+      <slot:key>placeholder</slot:key>
+      <slot:value type="string">true</slot:value>
+    </slot>
+  </act:slots>
+  <act:parent type="guid">308ade8cf0be2b0b05c5eec3114a65fa</act:parent>
+</gnc:account>
+<gnc:account version="2.0.0">
+  <act:name>Cash in Wallet</act:name>
+  <act:id type="guid">dae686a1636addc0dae1ae670701aa4a</act:id>
+  <act:type>CASH</act:type>
+  <act:commodity>
+    <cmdty:space>ISO4217</cmdty:space>
+    <cmdty:id>USD</cmdty:id>
+  </act:commodity>
+  <act:commodity-scu>100</act:commodity-scu>
+  <act:description>Cash in Wallet</act:description>
+  <act:slots>
+    <slot>
+      <slot:key>color</slot:key>
+      <slot:value type="string">Not Set</slot:value>
+    </slot>
+  </act:slots>
+  <act:parent type="guid">3f44d61cb1afd201e8ea5a54ec4fbbff</act:parent>
+</gnc:account>
+<gnc:account version="2.0.0">
+  <act:name>Expenses</act:name>
+  <act:id type="guid">9b607f63aecb1a175556676904432365</act:id>
+  <act:type>EXPENSE</act:type>
+  <act:commodity>
+    <cmdty:space>ISO4217</cmdty:space>
+    <cmdty:id>USD</cmdty:id>
+  </act:commodity>
+  <act:commodity-scu>100</act:commodity-scu>
+  <act:description>Expenses</act:description>
+  <act:slots>
+    <slot>
+      <slot:key>placeholder</slot:key>
+      <slot:value type="string">true</slot:value>
+    </slot>
+  </act:slots>
+  <act:parent type="guid">308ade8cf0be2b0b05c5eec3114a65fa</act:parent>
+</gnc:account>
+<gnc:account version="2.0.0">
+  <act:name>Dining</act:name>
+  <act:id type="guid">6a7cf8267314992bdddcee56d71a3908</act:id>
+  <act:type>EXPENSE</act:type>
+  <act:commodity>
+    <cmdty:space>ISO4217</cmdty:space>
+    <cmdty:id>USD</cmdty:id>
+  </act:commodity>
+  <act:commodity-scu>100</act:commodity-scu>
+  <act:description>Dining</act:description>
+  <act:parent type="guid">9b607f63aecb1a175556676904432365</act:parent>
+</gnc:account>
+</gnc:book>
+</gnc-v2>
+
+<!-- Local variables: -->
+<!-- mode: xml        -->
+<!-- End:             -->
