From ef3e8da42d50c439734743aa66e75ab73167445d Mon Sep 17 00:00:00 2001
From: Caesar Wirth <cjwirth@gmail.com>
Date: Fri, 4 Dec 2015 00:17:38 +0900
Subject: [PATCH] Transaction amount input uses account commodity

There was a bug where the amount input view was not having the
commodity set. This led to bugs where, if the user creates or edits a
transaction in a USD account, but the default is set to JPY, it will
truncate input after the decimal point.
---
 .../org/gnucash/android/ui/transaction/TransactionFormFragment.java | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 48db0b81..fd4486d1 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -494,6 +494,9 @@ private void initializeViewsWithTransaction(){
 		Currency accountCurrency = Currency.getInstance(currencyCode);
 		mCurrencyTextView.setText(accountCurrency.getSymbol());
 
+        Commodity commodity = Commodity.getInstance(currencyCode);
+        mAmountEditText.setCommodity(commodity);
+
         mSaveTemplateCheckbox.setChecked(mTransaction.isTemplate());
         String scheduledActionUID = getArguments().getString(UxArgument.SCHEDULED_ACTION_UID);
         if (scheduledActionUID != null && !scheduledActionUID.isEmpty()) {
@@ -544,6 +547,9 @@ private void initalizeViews() {
 		Currency accountCurrency = Currency.getInstance(code);
 		mCurrencyTextView.setText(accountCurrency.getSymbol());
 
+        Commodity commodity = Commodity.getInstance(code);
+        mAmountEditText.setCommodity(commodity);
+
         if (mUseDoubleEntry){
             String currentAccountUID = mAccountUID;
             long defaultTransferAccountID = 0;
