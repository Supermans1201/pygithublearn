From 83916bcc249ef755942bd8e03b8f07b97b71b44a Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Sun, 9 Aug 2015 20:54:44 +0200
Subject: [PATCH] Added new activity for displaying forms

Code refactoring
Updated dependency versions
Updated AccountsActivity to use support Toolbar
Activity now themed to match parent account when creating a sub-account
---
 app/build.gradle                                   |  19 +--
 app/src/main/AndroidManifest.xml                   |   4 +
 .../org/gnucash/android/db/AccountsDbAdapter.java  |  38 +++++-
 .../java/org/gnucash/android/ui/FormActivity.java  | 135 +++++++++++++++++++++
 .../java/org/gnucash/android/ui/UxArgument.java    |   5 +
 .../android/ui/account/AccountFormFragment.java    |  10 +-
 .../android/ui/account/AccountsActivity.java       |  81 ++-----------
 .../android/ui/account/AccountsListFragment.java   |  11 +-
 .../ui/transaction/TransactionFormFragment.java    |  13 +-
 .../ui/transaction/TransactionsActivity.java       | 122 ++-----------------
 app/src/main/res/layout/activity_accounts.xml      |   9 ++
 app/src/main/res/layout/activity_form.xml          |  38 ++++++
 app/src/main/res/layout/activity_transactions.xml  |   9 --
 app/src/main/res/layout/cardview_account.xml       |   2 +
 .../main/res/layout/fragment_account_detail.xml    |   2 +-
 app/src/main/res/values-de/strings.xml             |   2 +-
 app/src/main/res/values-el/strings.xml             |   2 +-
 app/src/main/res/values-es-rMX/strings.xml         |   2 +-
 app/src/main/res/values-es/strings.xml             |   2 +-
 app/src/main/res/values-fr/strings.xml             |   2 +-
 app/src/main/res/values-hu/strings.xml             |   2 +-
 app/src/main/res/values-it/strings.xml             |   2 +-
 app/src/main/res/values-nb/strings.xml             |   2 +-
 app/src/main/res/values-nl/strings.xml             |   2 +-
 app/src/main/res/values-pl/strings.xml             |   2 +-
 app/src/main/res/values-pt-rBR/strings.xml         |   2 +-
 app/src/main/res/values-ru/strings.xml             |   2 +-
 app/src/main/res/values-uk/strings.xml             |   2 +-
 app/src/main/res/values-zh/strings.xml             |   2 +-
 app/src/main/res/values/strings.xml                |   2 +-
 30 files changed, 295 insertions(+), 233 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/FormActivity.java
 create mode 100644 app/src/main/res/layout/activity_form.xml

diff --git a/app/build.gradle b/app/build.gradle
index 908ba7bd..f0961bfc 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -148,31 +148,32 @@ afterEvaluate {
     }
 }
 
+def androidSupportVersion = "22.2.1"
 
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile('com.android.support:support-v4:22.2.0',
-            'com.android.support:appcompat-v7:22.2.0',
-            'com.android.support:design:22.2.0',
+    compile('com.android.support:support-v4:'   + androidSupportVersion,
+            'com.android.support:appcompat-v7:' + androidSupportVersion,
+            'com.android.support:design:'       + androidSupportVersion,
+            'com.android.support:cardview-v7:'  + androidSupportVersion,
+            'com.android.support:recyclerview-v7:' + androidSupportVersion,
             'com.viewpagerindicator:library:2.4.1@aar',
             'com.doomonafireball.betterpickers:library:1.6.0',
             'org.jraf:android-switch-backport:1.4.0@aar',
             'com.github.PhilJay:MPAndroidChart:v2.1.0',
             'joda-time:joda-time:2.7',
             'com.google.android.gms:play-services-drive:7.0.0',
-            'com.crashlytics.android:crashlytics:1.+',
-            'com.android.support:cardview-v7:22.2.0',
-            'com.android.support:recyclerview-v7:22.2.0'
+            'com.crashlytics.android:crashlytics:1.+'
     )
 
     testCompile('org.robolectric:robolectric:3.0',
             'junit:junit:4.12',
             'org.assertj:assertj-core:1.7.1'
     )
-    androidTestCompile ('com.android.support.test:runner:0.2',
-                        'com.android.support.test:rules:0.2',
+    androidTestCompile ('com.android.support.test:runner:0.3',
+                        'com.android.support.test:rules:0.3',
                         'com.android.support.test.espresso:espresso-core:2.1',
-                        'com.android.support:support-annotations:22.2.0',
+                        'com.android.support:support-annotations:' + androidSupportVersion,
                         'com.android.support.test.espresso:espresso-contrib:2.2')
 
     androidTestCompile('com.squareup.assertj:assertj-android:1.0.0'){
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index d9382f58..ab18b3e2 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -53,6 +53,7 @@
         android:theme="@style/Theme.GnucashTheme">
         <activity
             android:name=".ui.account.AccountsActivity"
+            android:theme="@style/Theme.GnucashTheme.NoActionBar"
             android:label="@string/app_name">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
@@ -97,6 +98,9 @@
 		        <action android:name="android.appwidget.action.APPWIDGET_CONFIGURE"/>
 		    </intent-filter>
 		</activity>
+        <activity android:name=".ui.FormActivity"
+            android:theme="@style/Theme.GnucashTheme.NoActionBar"
+            android:configChanges="orientation|screenSize"/>
         <activity android:name=".ui.chart.ChartReportActivity" />
         <activity android:name=".ui.chart.PieChartActivity" />
         <activity android:name=".ui.chart.LineChartActivity" />
diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index d536727e..5e0a27e8 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -22,6 +22,7 @@
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteStatement;
+import android.graphics.Color;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
@@ -409,15 +410,15 @@ private Account buildSimpleAccountInstance(Cursor c) {
 	 * @param uid Unique Identifier of account whose parent is to be returned. Should not be null
 	 * @return DB record UID of the parent account, null if the account has no parent
 	 */
-    public String getParentAccountUID(String uid){
+    public String getParentAccountUID(@NonNull String uid){
 		Cursor cursor = mDb.query(AccountEntry.TABLE_NAME,
-				new String[] {AccountEntry._ID, AccountEntry.COLUMN_PARENT_ACCOUNT_UID},
+				new String[] {AccountEntry.COLUMN_PARENT_ACCOUNT_UID},
                 AccountEntry.COLUMN_UID + " = ?",
                 new String[]{uid},
                 null, null, null, null);
         try {
             if (cursor.moveToFirst()) {
-                Log.d(LOG_TAG, "Account already exists. Returning existing id");
+                Log.d(LOG_TAG, "Found parent account UID, returning value");
                 return cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_PARENT_ACCOUNT_UID));
             } else {
                 return null;
@@ -1179,6 +1180,37 @@ public static String getOpeningBalanceAccountFullName(){
     }
 
     /**
+     * Returns the account color for the active account as an Android resource ID.
+     * <p>
+     * Basically, if we are in a top level account, use the default title color.
+     * but propagate a parent account's title color to children who don't have own color
+     * </p>
+     * @param accountUID GUID of the account
+     * @return Android resource ID representing the color which can be directly set to a view
+     */
+    public static int getActiveAccountColorResource(@NonNull String accountUID) {
+        AccountsDbAdapter accountsDbAdapter = getInstance();
+
+        String colorCode = null;
+        int iColor = -1;
+        String parentAccountUID = accountUID;
+        while (parentAccountUID != null ) {
+            colorCode = accountsDbAdapter.getAccountColorCode(accountsDbAdapter.getID(parentAccountUID));
+            if (colorCode != null) {
+                iColor = Color.parseColor(colorCode);
+                break;
+            }
+            parentAccountUID = accountsDbAdapter.getParentAccountUID(parentAccountUID);
+        }
+
+        if (colorCode == null) {
+            iColor = GnuCashApplication.getAppContext().getResources().getColor(R.color.theme_primary);
+        }
+
+        return iColor;
+    }
+
+    /**
      * Returns the list of currencies in the database
      * @return List of currencies in the database
      */
diff --git a/app/src/main/java/org/gnucash/android/ui/FormActivity.java b/app/src/main/java/org/gnucash/android/ui/FormActivity.java
new file mode 100644
index 00000000..4e2ce4ce
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/FormActivity.java
@@ -0,0 +1,135 @@
+/*
+ * Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui;
+
+import android.content.Intent;
+import android.graphics.drawable.ColorDrawable;
+import android.os.Build;
+import android.os.Bundle;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.MenuItem;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.ui.account.AccountFormFragment;
+import org.gnucash.android.ui.transaction.TransactionFormFragment;
+import org.gnucash.android.ui.transaction.TransactionsActivity;
+
+/**
+ * Activity for displaying forms
+ * @author Ngewi Fet <ngewif@gmail.com>
+ */
+public class FormActivity extends AppCompatActivity {
+
+    public enum FormType {ACCOUNT_FORM, TRANSACTION_FORM, EXPORT_FORM}
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_form);
+
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_actionbar);
+        setSupportActionBar(toolbar);
+
+        android.support.v7.app.ActionBar actionBar = getSupportActionBar();
+        assert(actionBar != null);
+        actionBar.setHomeButtonEnabled(true);
+        actionBar.setDisplayHomeAsUpEnabled(true);
+        actionBar.setHomeAsUpIndicator(R.drawable.ic_close_white_24dp);
+
+        final Intent intent = getIntent();
+        String formtypeString = intent.getStringExtra(UxArgument.FORM_TYPE);
+        FormType formType = FormType.valueOf(formtypeString);
+
+        String accountUID = intent.getStringExtra(UxArgument.SELECTED_ACCOUNT_UID);
+        if (accountUID == null){
+            accountUID = intent.getStringExtra(UxArgument.PARENT_ACCOUNT_UID);
+        }
+        if (accountUID != null) {
+            int colorCode = AccountsDbAdapter.getActiveAccountColorResource(accountUID);
+            actionBar.setBackgroundDrawable(new ColorDrawable(colorCode));
+            if (Build.VERSION.SDK_INT > 20)
+                getWindow().setStatusBarColor(TransactionsActivity.darken(colorCode));
+        }
+        switch (formType){
+            case ACCOUNT_FORM:
+                showAccountFormFragment(intent.getExtras());
+                break;
+
+            case TRANSACTION_FORM:
+                showTransactionFormFragment(intent.getExtras());
+                break;
+
+            case EXPORT_FORM:
+                //nothing to see here yet, move along
+                break;
+
+            default:
+                throw new IllegalArgumentException("No form display type specified");
+        }
+
+
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()){
+            case android.R.id.home:
+                finish();
+                return true;
+        }
+
+        return super.onOptionsItemSelected(item);
+    }
+
+
+    /**
+     * Shows the form for creating/editing accounts
+     * @param args Arguments to use for initializing the form.
+     *             This could be an account to edit or a preset for the parent account
+     */
+    private void showAccountFormFragment(Bundle args){
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
+
+        AccountFormFragment accountFormFragment = AccountFormFragment.newInstance();
+        accountFormFragment.setArguments(args);
+
+        fragmentTransaction.replace(R.id.fragment_container, accountFormFragment);
+
+        fragmentTransaction.commit();
+    }
+
+    /**
+     * Loads the transaction insert/edit fragment and passes the arguments
+     * @param args Bundle arguments to be passed to the fragment
+     */
+    private void showTransactionFormFragment(Bundle args){
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction = fragmentManager
+                .beginTransaction();
+
+        TransactionFormFragment transactionFormFragment = new TransactionFormFragment();
+        transactionFormFragment.setArguments(args);
+
+        fragmentTransaction.add(R.id.fragment_container, transactionFormFragment);
+        fragmentTransaction.commit();
+    }
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/UxArgument.java b/app/src/main/java/org/gnucash/android/ui/UxArgument.java
index d275bc33..192c134c 100644
--- a/app/src/main/java/org/gnucash/android/ui/UxArgument.java
+++ b/app/src/main/java/org/gnucash/android/ui/UxArgument.java
@@ -77,6 +77,11 @@
      */
     public static final String SCHEDULED_ACTION_UID = "scheduled_action_uid";
 
+    /**
+     * Type of form displayed in the {@link FormActivity}
+     */
+    public static final String FORM_TYPE = "form_type";
+
     //prevent initialization of instances of this class
     private UxArgument(){
         //prevent even the native class from calling the ctor
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index ef056168..e293c039 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -30,6 +30,7 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.widget.SimpleCursorAdapter;
+import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.text.TextUtils;
 import android.util.Log;
@@ -240,8 +241,6 @@ public void onCreate(Bundle savedInstanceState) {
 	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
 		View view = inflater.inflate(R.layout.fragment_new_account, container, false);
-		((AppCompatActivity) getActivity()).getSupportActionBar()
-                .setTitle(R.string.label_create_account);
 		mCurrencySpinner = (Spinner) view.findViewById(R.id.input_currency_spinner);
 		mNameEditText = (EditText) view.findViewById(R.id.input_account_name);
 		//mNameEditText.requestFocus();
@@ -314,13 +313,14 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
         mAccountUID = getArguments().getString(UxArgument.SELECTED_ACCOUNT_UID);
 
+        ActionBar supportActionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
         if (mAccountUID != null) {
             mAccount = mAccountsDbAdapter.getAccount(mAccountUID);
-            ((AppCompatActivity) getActivity()).getSupportActionBar()
-                                        .setTitle(R.string.title_edit_account);
+            supportActionBar.setTitle(R.string.title_edit_account);
+        } else {
+            supportActionBar.setTitle(R.string.title_create_account);
         }
 
-        ((AppCompatActivity) getActivity()).getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_close_white_24dp);
         mRootAccountUID = mAccountsDbAdapter.getOrCreateGnuCashRootAccountUID();
         if (mRootAccountUID != null)
             mRootAccountId = mAccountsDbAdapter.getID(mRootAccountUID);
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 81f99765..c3fb47fd 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -39,7 +39,7 @@
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
-import android.support.v7.app.ActionBar;
+import android.support.v7.widget.Toolbar;
 import android.util.Log;
 import android.util.SparseArray;
 import android.view.Menu;
@@ -99,11 +99,6 @@
 	public static final String FRAGMENT_EXPORT_DIALOG = "export_fragment";
 
 	/**
-	 * Tag for identifying the "New account" fragment
-	 */
-	protected static final String FRAGMENT_NEW_ACCOUNT = "new_account_dialog";
-
-	/**
 	 * Logging tag
 	 */
 	protected static final String LOG_TAG = "AccountsActivity";
@@ -224,13 +219,14 @@ public void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_accounts);
         setUpDrawer();
 
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_actionbar);
+        setSupportActionBar(toolbar);
+
         final Intent intent = getIntent();
         handleOpenFileIntent(intent);
 
         init();
 
-        final ActionBar actionBar = getSupportActionBar();
-        actionBar.setElevation(0);
         TabLayout tabLayout = (TabLayout) findViewById(R.id.tab_layout);
         tabLayout.addTab(tabLayout.newTab().setText(R.string.title_recent_accounts));
         tabLayout.addTab(tabLayout.newTab().setText(R.string.title_all_accounts));
@@ -239,29 +235,14 @@ public void onCreate(Bundle savedInstanceState) {
 
         mViewPager = (ViewPager) findViewById(R.id.pager);
 
-        String action = intent.getAction();
-        if (action != null && action.equals(Intent.ACTION_INSERT_OR_EDIT)) {
-            //enter account creation/edit mode if that was specified
-            mViewPager.setVisibility(View.GONE);
-            tabLayout.setVisibility(View.GONE);
-            String accountUID = intent.getStringExtra(UxArgument.SELECTED_ACCOUNT_UID);
-            if (accountUID != null)
-                showEditAccountFragment(accountUID);
-            else {
-                String parentAccountUID = intent.getStringExtra(UxArgument.PARENT_ACCOUNT_UID);
-                showAddAccountFragment(parentAccountUID);
-            }
-            mDrawerToggle.setDrawerIndicatorEnabled(false);
-        } else {
-            //show the simple accounts list
-            PagerAdapter mPagerAdapter = new AccountViewPagerAdapter(getSupportFragmentManager());
-            mViewPager.setAdapter(mPagerAdapter);
-
-            SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
-            int lastTabIndex = preferences.getInt(LAST_OPEN_TAB_INDEX, INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT);
-            int index = intent.getIntExtra(EXTRA_TAB_INDEX, lastTabIndex);
-            mViewPager.setCurrentItem(index);
-        }
+        //show the simple accounts list
+        PagerAdapter mPagerAdapter = new AccountViewPagerAdapter(getSupportFragmentManager());
+        mViewPager.setAdapter(mPagerAdapter);
+
+        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
+        int lastTabIndex = preferences.getInt(LAST_OPEN_TAB_INDEX, INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT);
+        int index = intent.getIntExtra(EXTRA_TAB_INDEX, lastTabIndex);
+        mViewPager.setCurrentItem(index);
 
         mViewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
         tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
@@ -457,44 +438,6 @@ private Intent createNewAccountIntent(){
         return addAccountIntent;
     }
 
-    /**
-     * Shows form fragment for creating a new account
-     * @param parentAccountUID GUID of the parent account present. Can be 0 for top-level account
-     */
-    private void showAddAccountFragment(String parentAccountUID){
-        Bundle args = new Bundle();
-        args.putString(UxArgument.PARENT_ACCOUNT_UID, parentAccountUID);
-        showAccountFormFragment(args);
-    }
-
-    /**
-     * Shows the form fragment for editing the account with record ID <code>accountId</code>
-     * @param accountUID GUID of the account to be edited
-     */
-    private void showEditAccountFragment(String accountUID) {
-        Bundle args = new Bundle();
-        args.putString(UxArgument.SELECTED_ACCOUNT_UID, accountUID);
-        showAccountFormFragment(args);
-    }
-
-    /**
-     * Shows the form for creating/editing accounts
-     * @param args Arguments to use for initializing the form.
-     *             This could be an account to edit or a preset for the parent account
-     */
-    private void showAccountFormFragment(Bundle args){
-        FragmentManager fragmentManager = getSupportFragmentManager();
-        FragmentTransaction fragmentTransaction = fragmentManager
-                .beginTransaction();
-
-        AccountFormFragment accountFormFragment = AccountFormFragment.newInstance();
-        accountFormFragment.setArguments(args);
-
-        fragmentTransaction.replace(R.id.fragment_container,
-                accountFormFragment, AccountsActivity.FRAGMENT_NEW_ACCOUNT);
-
-        fragmentTransaction.commit();
-    }
 
 	/**
 	 * Opens a dialog fragment to create a new account
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
index 8f911ad7..38a36b51 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsListFragment.java
@@ -31,7 +31,6 @@
 import android.support.v4.view.MenuItemCompat;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
-import android.support.v7.internal.widget.AdapterViewCompat;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.PopupMenu;
 import android.support.v7.widget.RecyclerView;
@@ -51,8 +50,8 @@
 import org.gnucash.android.db.DatabaseCursorLoader;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.Account;
+import org.gnucash.android.ui.FormActivity;
 import org.gnucash.android.ui.UxArgument;
-import org.gnucash.android.ui.transaction.TransactionsActivity;
 import org.gnucash.android.ui.util.AccountBalanceTask;
 import org.gnucash.android.ui.util.OnAccountClickedListener;
 import org.gnucash.android.ui.util.Refreshable;
@@ -257,8 +256,9 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
 
 
     private void startActionCreateAccount() {
-        Intent addAccountIntent = new Intent(getActivity(), AccountsActivity.class);
+        Intent addAccountIntent = new Intent(getActivity(), FormActivity.class);
         addAccountIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
+        addAccountIntent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.ACCOUNT_FORM.name());
         addAccountIntent.putExtra(UxArgument.PARENT_ACCOUNT_UID, mParentAccountUID);
         startActivityForResult(addAccountIntent, AccountsActivity.REQUEST_EDIT_ACCOUNT);
     }
@@ -292,7 +292,7 @@ public void onDestroy() {
      * @param accountId Long record ID of account to be edited. Pass 0 to create a new account.
      */
     public void openCreateOrEditActivity(long accountId){
-        Intent editAccountIntent = new Intent(AccountsListFragment.this.getActivity(), AccountsActivity.class);
+        Intent editAccountIntent = new Intent(AccountsListFragment.this.getActivity(), FormActivity.class);
         editAccountIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
         editAccountIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, mAccountsDbAdapter.getUID(accountId));
         startActivityForResult(editAccountIntent, AccountsActivity.REQUEST_EDIT_ACCOUNT);
@@ -471,9 +471,10 @@ public void onBindViewHolderCursor(final ViewHolder holder, final Cursor cursor)
 
                     @Override
                     public void onClick(View v) {
-                        Intent intent = new Intent(getActivity(), TransactionsActivity.class);
+                        Intent intent = new Intent(getActivity(), FormActivity.class);
                         intent.setAction(Intent.ACTION_INSERT_OR_EDIT);
                         intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, accountUID);
+                        intent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.TRANSACTION_FORM.name());
                         getActivity().startActivity(intent);
                     }
                 });
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 0cf606ce..0dab3e53 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -241,11 +241,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 	public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		setHasOptionsMenu(true);
-		ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
-		actionBar.setHomeButtonEnabled(true);
-		actionBar.setDisplayHomeAsUpEnabled(true);
-		actionBar.setDisplayShowTitleEnabled(false);
-        actionBar.setHomeAsUpIndicator(R.drawable.ic_close_white_24dp);
 
 		SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
 		mUseDoubleEntry = sharedPrefs.getBoolean(getString(R.string.key_use_double_entry), false);
@@ -255,6 +250,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		}
 
         mAccountUID = getArguments().getString(UxArgument.SELECTED_ACCOUNT_UID);
+        assert(mAccountUID != null);
 		mAccountsDbAdapter = AccountsDbAdapter.getInstance();
         mAccountType = mAccountsDbAdapter.getAccountType(mAccountUID);
 
@@ -290,10 +286,15 @@ public void onNothingSelected(AdapterView<?> adapterView) {
         });
 
         setListeners();
-		if (mTransaction == null) {
+        ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
+        actionBar.setSubtitle(mAccountsDbAdapter.getFullyQualifiedAccountName(mAccountUID));
+
+        if (mTransaction == null) {
+            actionBar.setTitle(R.string.title_add_transaction);
             initalizeViews();
             initTransactionNameAutocomplete();
         } else {
+            actionBar.setTitle(R.string.title_edit_transaction);
 			initializeViewsWithTransaction();
             mEditMode = true;
 		}
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
index ca07c4bc..1d329768 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -50,6 +50,7 @@
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Money;
+import org.gnucash.android.ui.FormActivity;
 import org.gnucash.android.ui.UxArgument;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.account.AccountsListFragment;
@@ -69,12 +70,7 @@
 	/**
 	 * Logging tag
 	 */
-	protected static final String TAG = "AccountsActivity";
-	
-	/**
-	 * Tag for {@link TransactionFormFragment}
-	 */
-	public static final String FRAGMENT_NEW_TRANSACTION 	= "new_transaction";
+	protected static final String TAG = "TransactionsActivity";
 
     /**
      * ViewPager index for sub-accounts fragment
@@ -96,15 +92,6 @@
      */
     private String mAccountUID = null;
 
-	/**
-	 * Flag which is used to determine if the activity is running or not. 
-	 * Basically if onCreate has already been called or not. It is used
-	 * to determine if to call addToBackStack() for fragments. When adding 
-	 * the very first fragment, it should not be added to the backstack.
-	 * @see #showTransactionFormFragment(Bundle)
-	 */
-	private boolean mActivityRunning = false;
-
     /**
      * Account database adapter for manipulating the accounts list in navigation
      */
@@ -115,8 +102,6 @@
      */
     private Cursor mAccountsCursor = null;
 
-    private TextView mSectionHeaderTransactions;
-
     private ViewPager mViewPager;
 
     private SparseArray<Refreshable> mFragmentPageReferenceMap = new SparseArray<>();
@@ -127,14 +112,6 @@
         @Override
         public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
             mAccountUID = mAccountsDbAdapter.getUID(id);
-            FragmentManager fragmentManager = getSupportFragmentManager();
-
-            //inform new accounts fragment that account was changed
-            TransactionFormFragment newTransactionsFragment = (TransactionFormFragment) fragmentManager
-                    .findFragmentByTag(FRAGMENT_NEW_TRANSACTION);
-            if (newTransactionsFragment != null){
-                newTransactionsFragment.onAccountChanged(mAccountUID);
-            }
 
             if (isPlaceHolderAccount()){
                 if (mTabLayout.getTabCount() > 1)
@@ -283,7 +260,6 @@ protected void onCreate(Bundle savedInstanceState) {
         getSupportActionBar().setDisplayShowTitleEnabled(false);
 
         mViewPager = (ViewPager) findViewById(R.id.pager);
-        mSectionHeaderTransactions = (TextView) findViewById(R.id.section_header_transactions);
 
 		mAccountUID = getIntent().getStringExtra(UxArgument.SELECTED_ACCOUNT_UID);
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
@@ -296,20 +272,10 @@ protected void onCreate(Bundle savedInstanceState) {
 
         setupActionBarNavigation();
 
-        final String action = getIntent().getAction();
-		if (action.equals(Intent.ACTION_INSERT_OR_EDIT) || action.equals(Intent.ACTION_INSERT)) {
-            mViewPager.setVisibility(View.GONE);
-            mTabLayout.setVisibility(View.GONE);
-            mDrawerToggle.setDrawerIndicatorEnabled(false);
-            initializeCreateOrEditTransaction();
-        } else {	//load the transactions list
-            mSectionHeaderTransactions.setVisibility(View.GONE);
+        mPagerAdapter = new AccountViewPagerAdapter(getSupportFragmentManager());
+        mViewPager.setAdapter(mPagerAdapter);
 
-            mPagerAdapter = new AccountViewPagerAdapter(getSupportFragmentManager());
-            mViewPager.setAdapter(mPagerAdapter);
-
-            mViewPager.setCurrentItem(INDEX_TRANSACTIONS_FRAGMENT);
-		}
+        mViewPager.setCurrentItem(INDEX_TRANSACTIONS_FRAGMENT);
 
         mViewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(mTabLayout));
         mTabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
@@ -328,30 +294,8 @@ public void onTabReselected(TabLayout.Tab tab) {
 
             }
         });
-
-		// done creating, activity now running
-		mActivityRunning = true;
 	}
 
-    /**
-     * Loads the fragment for creating/editing transactions and initializes it to be displayed
-     */
-    private void initializeCreateOrEditTransaction() {
-        String transactionUID = getIntent().getStringExtra(UxArgument.SELECTED_TRANSACTION_UID);
-        String scheduledActionUID = getIntent().getStringExtra(UxArgument.SCHEDULED_ACTION_UID);
-        Bundle args = new Bundle();
-        if (transactionUID != null) {
-            mSectionHeaderTransactions.setText(R.string.title_edit_transaction);
-            args.putString(UxArgument.SELECTED_TRANSACTION_UID, transactionUID);
-            args.putString(UxArgument.SELECTED_ACCOUNT_UID, mAccountUID);
-            args.putString(UxArgument.SCHEDULED_ACTION_UID, scheduledActionUID);
-        } else {
-            mSectionHeaderTransactions.setText(R.string.title_add_transaction);
-            args.putString(UxArgument.SELECTED_ACCOUNT_UID, mAccountUID);
-        }
-        showTransactionFormFragment(args);
-    }
-
     @Override
     protected void onResume() {
         super.onResume();
@@ -362,41 +306,15 @@ protected void onResume() {
      * Sets the color for the ViewPager title indicator to match the account color
      */
     private void setTitleIndicatorColor() {
-        //Basically, if we are in a top level account, use the default title color.
-        //but propagate a parent account's title color to children who don't have own color
-        long accountId = -1;
-        try {
-            accountId = mAccountsDbAdapter.getID(mAccountUID);
-        } catch (IllegalArgumentException e){
-            Log.e(TAG, e.getMessage());
-        }
-        String colorCode = mAccountsDbAdapter.getAccountColorCode(accountId);
-        int iColor = -1;
-        if (colorCode != null){
-            iColor = Color.parseColor(colorCode);
-        } else {
-            String accountUID = mAccountUID;
-            while ((accountUID = mAccountsDbAdapter.getParentAccountUID(accountUID)) != null) {
-                colorCode = mAccountsDbAdapter.getAccountColorCode(mAccountsDbAdapter.getID(accountUID));
-                if (colorCode != null) {
-                    iColor = Color.parseColor(colorCode);
-                    break;
-                }
-            }
-            if (colorCode == null)
-            {
-                iColor = getResources().getColor(R.color.theme_primary);
-            }
-        }
+        int iColor = AccountsDbAdapter.getActiveAccountColorResource(mAccountUID);
 
         mTabLayout.setBackgroundColor(iColor);
-        mSectionHeaderTransactions.setBackgroundColor(iColor);
 
         if (getSupportActionBar() != null)
             getSupportActionBar().setBackgroundDrawable(new ColorDrawable(iColor));
 
         if (Build.VERSION.SDK_INT > 20)
-            getWindow().setStatusBarColor(darken(iColor)); //TODO: change the whole app theme
+            getWindow().setStatusBarColor(darken(iColor));
     }
 
     /**
@@ -547,26 +465,6 @@ public void onNewAccountClick(View v) {
         startActivityForResult(addAccountIntent, AccountsActivity.REQUEST_EDIT_ACCOUNT);
     }
 
-	/**
-	 * Loads the transaction insert/edit fragment and passes the arguments
-	 * @param args Bundle arguments to be passed to the fragment
-	 */
-	private void showTransactionFormFragment(Bundle args){
-		FragmentManager fragmentManager = getSupportFragmentManager();
-		FragmentTransaction fragmentTransaction = fragmentManager
-				.beginTransaction();
-				
-		TransactionFormFragment transactionFormFragment = new TransactionFormFragment();
-		transactionFormFragment.setArguments(args);
-
-		fragmentTransaction.add(R.id.fragment_container,
-                transactionFormFragment, TransactionsActivity.FRAGMENT_NEW_TRANSACTION);
-		
-		if (mActivityRunning)
-			fragmentTransaction.addToBackStack(null);
-		fragmentTransaction.commit();
-	}
-
     /**
      * Display the balance of a transaction in a text view and format the text color to match the sign of the amount
      * @param balanceTextView {@link android.widget.TextView} where balance is to be displayed
@@ -583,18 +481,20 @@ public static void displayBalance(TextView balanceTextView, Money balance){
 
 	@Override
 	public void createNewTransaction(String accountUID) {
-        Intent createTransactionIntent = new Intent(this.getApplicationContext(), TransactionsActivity.class);
+        Intent createTransactionIntent = new Intent(this.getApplicationContext(), FormActivity.class);
         createTransactionIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
         createTransactionIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, accountUID);
+        createTransactionIntent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.TRANSACTION_FORM.name());
         startActivity(createTransactionIntent);
 	}
 
 	@Override
 	public void editTransaction(String transactionUID){
-        Intent createTransactionIntent = new Intent(this.getApplicationContext(), TransactionsActivity.class);
+        Intent createTransactionIntent = new Intent(this.getApplicationContext(), FormActivity.class);
         createTransactionIntent.setAction(Intent.ACTION_INSERT_OR_EDIT);
         createTransactionIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, mAccountUID);
         createTransactionIntent.putExtra(UxArgument.SELECTED_TRANSACTION_UID, transactionUID);
+        createTransactionIntent.putExtra(UxArgument.FORM_TYPE, FormActivity.FormType.TRANSACTION_FORM.name());
         startActivity(createTransactionIntent);
 	}
 
diff --git a/app/src/main/res/layout/activity_accounts.xml b/app/src/main/res/layout/activity_accounts.xml
index 581fa296..96ca16c8 100644
--- a/app/src/main/res/layout/activity_accounts.xml
+++ b/app/src/main/res/layout/activity_accounts.xml
@@ -28,6 +28,15 @@
                   android:layout_width="match_parent"
                   android:layout_height="match_parent">
 
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar_actionbar"
+            android:background="?attr/colorPrimary"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            app:elevation="0dp"
+            app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+            app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
+
         <android.support.design.widget.TabLayout
             android:id="@+id/tab_layout"
             android:layout_width="match_parent"
diff --git a/app/src/main/res/layout/activity_form.xml b/app/src/main/res/layout/activity_form.xml
new file mode 100644
index 00000000..b1a4e783
--- /dev/null
+++ b/app/src/main/res/layout/activity_form.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Ngewi Fet <ngewif@gmail.com>
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar_actionbar"
+        android:background="?attr/colorPrimary"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        app:elevation="10dp"
+        app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
+
+    <FrameLayout
+        android:id="@+id/fragment_container"
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/activity_transactions.xml b/app/src/main/res/layout/activity_transactions.xml
index d903dbb1..e7c6393d 100644
--- a/app/src/main/res/layout/activity_transactions.xml
+++ b/app/src/main/res/layout/activity_transactions.xml
@@ -28,15 +28,6 @@
         android:layout_height="match_parent">
 
         <include layout="@layout/toolbar_transactions_activity" />
-        <TextView
-            android:id="@+id/section_header_transactions"
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/section_header_height"
-            android:paddingLeft="@dimen/dialog_padding"
-            android:background="@android:color/darker_gray"
-            android:textColor="@android:color/white"
-            android:text="@string/section_header_transactions"
-            />
 
         <android.support.design.widget.TabLayout
             android:id="@+id/tab_layout"
diff --git a/app/src/main/res/layout/cardview_account.xml b/app/src/main/res/layout/cardview_account.xml
index 1113d0c7..b758a3ec 100644
--- a/app/src/main/res/layout/cardview_account.xml
+++ b/app/src/main/res/layout/cardview_account.xml
@@ -20,6 +20,8 @@
     cardview:cardCornerRadius="4dp"
     cardview:cardUseCompatPadding="true"
     cardview:cardPreventCornerOverlap="false"
+    android:layout_marginLeft="4dp"
+    android:layout_marginRight="4dp"
     android:foreground="?selectableItemBackground"
     android:focusable="true"
     android:clickable="true"
diff --git a/app/src/main/res/layout/fragment_account_detail.xml b/app/src/main/res/layout/fragment_account_detail.xml
index 5a4be69e..9cda5604 100644
--- a/app/src/main/res/layout/fragment_account_detail.xml
+++ b/app/src/main/res/layout/fragment_account_detail.xml
@@ -40,6 +40,6 @@
             android:id="@+id/add_preference_button"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:text="@string/label_create_account" />
+            android:text="@string/title_create_account" />
     </LinearLayout>
 </LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 57ce6967..97f9472f 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -16,7 +16,7 @@
  limitations under the License.
 -->
 <resources>
-    <string name="label_create_account">Neues Konto</string>
+    <string name="title_create_account">Neues Konto</string>
     <string name="title_edit_account">Konto bearbeiten</string>
     <string name="info_details">Info</string>
     <string name="menu_export">OFX-Datei exportieren</string>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index 699b4bef..e2f6451c 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -17,7 +17,7 @@
 -->
 
 <resources>
-    <string name="label_create_account"> </string>
+    <string name="title_create_account"> </string>
     <string name="title_edit_account"> </string>
     <string name="info_details"></string>
     <string name="menu_export"> OFX</string>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index ecea7b87..0d6e3ca6 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -17,7 +17,7 @@
 -->
 
 <resources>
-    <string name="label_create_account">Crear cuenta</string>
+    <string name="title_create_account">Crear cuenta</string>
     <string name="title_edit_account">Editar cuenta</string>
     <string name="info_details">Detalles</string>
     <string name="menu_export">Exportar a OFX</string>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 6d670d7e..79af36f2 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -17,7 +17,7 @@
 -->
 
 <resources>
-    <string name="label_create_account">Crear Cuenta</string>
+    <string name="title_create_account">Crear Cuenta</string>
     <string name="title_edit_account">Editar Cuenta</string>
     <string name="info_details">Info</string>
     <string name="menu_export">Exportar OFX</string>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 5d85003b..7ad4edea 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -17,7 +17,7 @@
 -->
 
 <resources xmlns:tools="http://schemas.android.com/tools" tools:locale="fr">
-    <string name="label_create_account">Cr&#233;er un compte</string>
+    <string name="title_create_account">Cr&#233;er un compte</string>
     <string name="title_edit_account">diter le compte</string>
     <string name="info_details">Informations</string>
     <string name="menu_export">Exporter en OFX</string>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index 213d870b..a6e26f90 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -16,7 +16,7 @@
 -->
 
 <resources>
-    <string name="label_create_account">Create Account</string>
+    <string name="title_create_account">Create Account</string>
     <string name="title_edit_account">Edit Account</string>
     <string name="info_details">Info</string>
     <string name="menu_export">Export OFX</string>
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index 17546090..7ffaa549 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -17,7 +17,7 @@
 -->
 
 <resources>
-    <string name="label_create_account">Crea conto</string>
+    <string name="title_create_account">Crea conto</string>
     <string name="title_edit_account">Modifica conto</string>
     <string name="info_details">Informazioni</string>
     <string name="menu_export">Esporta OFX</string>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index bd6d49d5..bd6483fe 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -18,7 +18,7 @@
 -->
 
 <resources>
-    <string name="label_create_account">Opprett konto</string>
+    <string name="title_create_account">Opprett konto</string>
     <string name="title_edit_account">Rediger konto</string>
     <string name="info_details">Informasjon</string>
     <string name="menu_export">Eksport OFX</string>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index d0f7f089..063674d0 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -17,7 +17,7 @@
 -->
 
 <resources>
-    <string name="label_create_account">Nieuw rekening</string>
+    <string name="title_create_account">Nieuw rekening</string>
     <string name="title_edit_account">Rekening bewerken</string>
     <string name="info_details">Info</string>
     <string name="menu_export">OFX exporteren</string>
diff --git a/app/src/main/res/values-pl/strings.xml b/app/src/main/res/values-pl/strings.xml
index 2f4318e0..e57bfe01 100644
--- a/app/src/main/res/values-pl/strings.xml
+++ b/app/src/main/res/values-pl/strings.xml
@@ -16,7 +16,7 @@
 -->
 
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="label_create_account">Utwrz konto</string>
+    <string name="title_create_account">Utwrz konto</string>
     <string name="title_edit_account">Edytuj konto</string>
     <string name="info_details">Info</string>
     <string name="menu_export">Eksportuj</string>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 503cbdb2..d2c61491 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -16,7 +16,7 @@
  limitations under the License.
 -->
 <resources>
-	  <string name="label_create_account">Criar Conta</string>
+	  <string name="title_create_account">Criar Conta</string>
 	  <string name="title_edit_account">Editar Conta</string>
 	  <string name="info_details">Info</string>
 	  <string name="menu_export">Exportar OFX</string>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 2d2bec44..4f107d4c 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -17,7 +17,7 @@
 -->
 
 <resources>
-    <string name="label_create_account"> </string>
+    <string name="title_create_account"> </string>
     <string name="title_edit_account"> </string>
     <string name="info_details"></string>
     <string name="menu_export"> OFX</string>
diff --git a/app/src/main/res/values-uk/strings.xml b/app/src/main/res/values-uk/strings.xml
index 3c6704e8..b6a3e3fe 100644
--- a/app/src/main/res/values-uk/strings.xml
+++ b/app/src/main/res/values-uk/strings.xml
@@ -1,5 +1,5 @@
 <resources>
-    <string name="label_create_account"> </string>
+    <string name="title_create_account"> </string>
     <string name="title_edit_account"> </string>
     <string name="info_details"></string>
     <string name="menu_export"> OFX</string>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index 94a123c5..10d4a386 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -17,7 +17,7 @@
 -->
 
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="label_create_account"></string>
+    <string name="title_create_account"></string>
     <string name="title_edit_account"></string>
     <string name="info_details"></string>
     <string name="menu_export">OFX</string>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 32b65f47..63d03c2f 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -16,7 +16,7 @@
 -->
 
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="label_create_account">Create Account</string>
+    <string name="title_create_account">Create Account</string>
     <string name="title_edit_account">Edit Account</string>
     <string name="info_details">Info</string>
     <string name="menu_export">Export</string>
