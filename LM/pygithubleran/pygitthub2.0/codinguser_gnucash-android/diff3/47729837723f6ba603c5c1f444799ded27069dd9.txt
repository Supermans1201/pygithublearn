From 89f2ff570abd6702782c78af157c9926f6950344 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Mon, 14 Dec 2015 18:27:05 +0100
Subject: [PATCH 01/16] Add instrumentation test for CalculatorEditText.

Just basic show/hide tests for now.
---
 .../android/test/ui/CalculatorEditTextTest.java    | 146 +++++++++++++++++++++
 1 file changed, 146 insertions(+)
 create mode 100644 app/src/androidTest/java/org/gnucash/android/test/ui/CalculatorEditTextTest.java

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/CalculatorEditTextTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/CalculatorEditTextTest.java
new file mode 100644
index 00000000..141ca5c2
--- /dev/null
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/CalculatorEditTextTest.java
@@ -0,0 +1,146 @@
+/*
+ * Copyright (c) 2012 - 2015 Ngewi Fet <ngewif@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.test.ui;
+
+import android.content.Intent;
+import android.database.SQLException;
+import android.database.sqlite.SQLiteDatabase;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+import android.test.ActivityInstrumentationTestCase2;
+import android.util.Log;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.db.DatabaseHelper;
+import org.gnucash.android.db.SplitsDbAdapter;
+import org.gnucash.android.db.TransactionsDbAdapter;
+import org.gnucash.android.model.Account;
+import org.gnucash.android.model.Commodity;
+import org.gnucash.android.ui.common.UxArgument;
+import org.gnucash.android.ui.transaction.TransactionsActivity;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static android.support.test.espresso.Espresso.onView;
+import static android.support.test.espresso.Espresso.pressBack;
+import static android.support.test.espresso.action.ViewActions.click;
+import static android.support.test.espresso.assertion.ViewAssertions.matches;
+import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static android.support.test.espresso.matcher.ViewMatchers.withId;
+import static org.hamcrest.Matchers.not;
+
+// TODO: Find out how to press the keys in the KeyboardView.
+@RunWith(AndroidJUnit4.class)
+public class CalculatorEditTextTest extends
+		ActivityInstrumentationTestCase2<TransactionsActivity> {
+	private static final String DUMMY_ACCOUNT_UID = "transactions-account";
+	private static final String DUMMY_ACCOUNT_NAME = "Transactions Account";
+
+    private static final String TRANSFER_ACCOUNT_NAME   = "Transfer account";
+    private static final String TRANSFER_ACCOUNT_UID    = "transfer_account";
+    public static final String CURRENCY_CODE = "USD";
+
+    private SQLiteDatabase mDb;
+    private DatabaseHelper mDbHelper;
+    private AccountsDbAdapter mAccountsDbAdapter;
+    private TransactionsDbAdapter mTransactionsDbAdapter;
+    private SplitsDbAdapter mSplitsDbAdapter;
+	private TransactionsActivity mTransactionsActivity;
+
+	public CalculatorEditTextTest() {
+		super(TransactionsActivity.class);
+	}
+	
+	@Override
+	@Before
+	public void setUp() throws Exception {
+		super.setUp();
+		injectInstrumentation(InstrumentationRegistry.getInstrumentation());
+		AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext());
+
+
+        mDbHelper = new DatabaseHelper(getInstrumentation().getTargetContext());
+        try {
+            mDb = mDbHelper.getWritableDatabase();
+        } catch (SQLException e) {
+            Log.e(getClass().getName(), "Error getting database: " + e.getMessage());
+            mDb = mDbHelper.getReadableDatabase();
+        }
+        mSplitsDbAdapter = new SplitsDbAdapter(mDb);
+        mTransactionsDbAdapter = new TransactionsDbAdapter(mDb, mSplitsDbAdapter);
+        mAccountsDbAdapter = new AccountsDbAdapter(mDb, mTransactionsDbAdapter);
+		mAccountsDbAdapter.deleteAllRecords();
+
+        Account account = new Account(DUMMY_ACCOUNT_NAME);
+        account.setUID(DUMMY_ACCOUNT_UID);
+        account.setCommodity(Commodity.getInstance(CURRENCY_CODE));
+
+        Account account2 = new Account(TRANSFER_ACCOUNT_NAME);
+        account2.setUID(TRANSFER_ACCOUNT_UID);
+        account2.setCommodity(Commodity.getInstance(CURRENCY_CODE));
+
+        mAccountsDbAdapter.addRecord(account);
+        mAccountsDbAdapter.addRecord(account2);
+
+        Intent intent = new Intent(Intent.ACTION_VIEW);
+        intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID, DUMMY_ACCOUNT_UID);
+        setActivityIntent(intent);
+		mTransactionsActivity = getActivity();
+	}
+
+    /**
+     * Checks the calculator keyboard is showed/hided as expected.
+     */
+    @Test
+    public void testShowingHidingOfCalculatorKeyboard() {
+        clickOnView(R.id.fab_create_transaction);
+
+        // Giving the focus to the amount field shows the keyboard
+        onView(withId(R.id.input_transaction_amount)).perform(click());
+        onView(withId(R.id.calculator_keyboard)).check(matches(isDisplayed()));
+
+        // Pressing back hides the keyboard (still with focus)
+        pressBack();
+        onView(withId(R.id.calculator_keyboard)).check(matches(not(isDisplayed())));
+
+        // Clicking the amount field already focused shows the keyboard again
+        clickOnView(R.id.input_transaction_amount);
+        onView(withId(R.id.calculator_keyboard)).check(matches(isDisplayed()));
+
+        // Changing the focus to another field hides the keyboard
+        clickOnView(R.id.input_transaction_name);
+        onView(withId(R.id.calculator_keyboard)).check(matches(not(isDisplayed())));
+    }
+
+	/**
+	 * Simple wrapper for clicking on views with espresso
+	 * @param viewId View resource ID
+	 */
+	private void clickOnView(int viewId){
+		onView(withId(viewId)).perform(click());
+	}
+
+	@Override
+	@After
+	public void tearDown() throws Exception {
+		mTransactionsActivity.finish();
+		super.tearDown();
+	}
+}

From ac884e1dc30b70fdb2eeed420598eeafbcf4576a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Thu, 17 Dec 2015 18:36:43 +0100
Subject: [PATCH 02/16] Fix amount text boxes in split editor not getting the
 focus sometimes.

Fixes https://github.com/codinguser/gnucash-android/issues/417
---
 .../org/gnucash/android/ui/util/widget/CalculatorEditText.java     | 7 ++-----
 1 file changed, 2 insertions(+), 5 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
index cad60a0b..dcf01626 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
@@ -159,14 +159,11 @@ public boolean onLongClick(View v) {
             }
         });
 
-        // Although it looks redundant having both onClickListener and OnTouchListener, removing
-        // one of them makes the standard keyboard show up in addition to the calculator one.
+        // Although this handler doesn't make sense, if removed, the standard keyboard
+        // shows up in addition to the calculator one when the EditText gets a touch event.
         setOnTouchListener(new OnTouchListener() {
             @Override
             public boolean onTouch(View v, MotionEvent event) {
-                if (!mCalculatorKeyboard.isCustomKeyboardVisible())
-                    mCalculatorKeyboard.showCustomKeyboard(v);
-
                 // XXX: Use dispatchTouchEvent()?
                 onTouchEvent(event);
                 return false;

From 4586a62423b832ea41fd0c775424b4ce325ef311 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Thu, 17 Dec 2015 19:14:22 +0100
Subject: [PATCH 03/16] Code clean up.

---
 .../android/ui/util/widget/CalculatorEditText.java | 71 +++-------------------
 1 file changed, 9 insertions(+), 62 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
index dcf01626..32857d9f 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
@@ -19,7 +19,6 @@
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.inputmethodservice.KeyboardView;
-import android.support.annotation.XmlRes;
 import android.text.Editable;
 import android.text.InputType;
 import android.text.TextWatcher;
@@ -47,12 +46,12 @@
 
 /**
  * A custom EditText which supports computations and uses a custom calculator keyboard.
- * <p>Afer the view is inflated, make sure to call {@link #bindListeners(KeyboardView)}
- * with the view from your layout where the calculator keyboard should be displayed:</p>
+ * <p>After the view is inflated, make sure to call {@link #bindListeners(KeyboardView)}
+ * with the view from your layout where the calculator keyboard should be displayed.</p>
  * @author Ngewi Fet <ngewif@gmail.com>
  */
 public class CalculatorEditText extends EditText {
-    CalculatorKeyboard mCalculatorKeyboard;
+    private CalculatorKeyboard mCalculatorKeyboard;
 
     private Commodity mCommodity = Commodity.DEFAULT_COMMODITY;
     private Context mContext;
@@ -63,7 +62,6 @@
     private boolean isContentModified = false;
 
     private int mCalculatorKeysLayout;
-    private KeyboardView mCalculatorKeyboardView;
 
     public CalculatorEditText(Context context) {
         super(context);
@@ -121,7 +119,6 @@ public void bindListeners(CalculatorKeyboard calculatorKeyboard){
         mCalculatorKeyboard = calculatorKeyboard;
         mContext = calculatorKeyboard.getContext();
         setOnFocusChangeListener(new OnFocusChangeListener() {
-            // NOTE By setting the on focus listener, we can show the custom keyboard when the edit box gets focus, but also hide it when the edit box loses focus
             @Override
             public void onFocusChange(View v, boolean hasFocus) {
                 if (hasFocus) {
@@ -174,14 +171,14 @@ public boolean onTouch(View v, MotionEvent event) {
     }
 
     /**
-     * Initializes listeners on the edittext
+     * Initializes listeners on the EditText
      */
     public void bindListeners(KeyboardView keyboardView){
         bindListeners(new CalculatorKeyboard(mContext, keyboardView, mCalculatorKeysLayout));
     }
 
     /**
-     * Returns the calculator keyboard instantiated by this edittext
+     * Returns the calculator keyboard instantiated by this EditText
      * @return CalculatorKeyboard
      */
     public CalculatorKeyboard getCalculatorKeyboard(){
@@ -189,57 +186,7 @@ public CalculatorKeyboard getCalculatorKeyboard(){
     }
 
     /**
-     * Returns the view Id of the keyboard view
-     * @return Keyboard view
-     */
-    public KeyboardView getCalculatorKeyboardView() {
-        return mCalculatorKeyboardView;
-    }
-
-    /**
-     * Set the keyboard view used for displaying the keyboard
-     * @param calculatorKeyboardView Calculator keyboard view
-     */
-    public void setCalculatorKeyboardView(KeyboardView calculatorKeyboardView) {
-        this.mCalculatorKeyboardView = calculatorKeyboardView;
-        bindListeners(calculatorKeyboardView);
-    }
-
-    /**
-     * Returns the XML resource ID describing the calculator keys layout
-     * @return XML resource ID
-     */
-    public int getCalculatorKeysLayout() {
-        return mCalculatorKeysLayout;
-    }
-
-    /**
-     * Sets the XML resource describing the layout of the calculator keys
-     * @param mCalculatorKeysLayout XML resource ID
-     */
-    public void setCalculatorKeysLayout(@XmlRes int mCalculatorKeysLayout) {
-        this.mCalculatorKeysLayout = mCalculatorKeysLayout;
-        bindListeners(mCalculatorKeyboardView);
-    }
-
-    /**
-     * Sets the calculator keyboard to use for this EditText
-     * @param keyboard Properly intialized calculator keyobard
-     */
-    public void setCalculatorKeyboard(CalculatorKeyboard keyboard){
-        this.mCalculatorKeyboard = keyboard;
-    }
-
-    /**
-     * Returns the currency used for computations
-     * @return ISO 4217 currency
-     */
-    public Commodity getCommodity() {
-        return mCommodity;
-    }
-
-    /**
-     * Sets the commodity to use for calculations
+     * Sets the commodity to use for calculations.
      * The commodity determines the number of decimal places used
      * @param commodity ISO 4217 currency
      */
@@ -248,8 +195,8 @@ public void setCommodity(Commodity commodity) {
     }
 
     /**
-     * Evaluates the arithmetic expression in the editText and sets the text property
-     * @return Result of arithmetic evaluation which is same as text displayed in edittext
+     * Evaluates the arithmetic expression in the EditText and sets the text property
+     * @return Result of arithmetic evaluation which is same as text displayed in EditText
      */
     public String evaluate(){
         String amountString = getCleanString();
@@ -327,7 +274,7 @@ public BigDecimal getValue(){
     }
 
     /**
-     * Set the text to the value of {@code amount} formatted according to the locale
+     * Set the text to the value of {@code amount} formatted according to the locale.
      * <p>The number of decimal places are determined by the currency set to the view, and the
      * decimal separator is determined by the device locale. There are no thousandths separators.</p>
      * @param amount BigDecimal amount

From 3a4573d5f14ec80d7d1ffaae954faa69c9f16e4f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Wed, 23 Dec 2015 10:44:42 +0100
Subject: [PATCH 04/16] Readd unused methods to CalculatorEditText.

Although they're not used Android documentation recommends having them:

http://developer.android.com/training/custom-views/create-view.html
---
 .../android/ui/util/widget/CalculatorEditText.java | 54 +++++++++++++++++++++-
 1 file changed, 53 insertions(+), 1 deletion(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
index 32857d9f..b2a4925e 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/widget/CalculatorEditText.java
@@ -19,6 +19,7 @@
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.inputmethodservice.KeyboardView;
+import android.support.annotation.XmlRes;
 import android.text.Editable;
 import android.text.InputType;
 import android.text.TextWatcher;
@@ -62,6 +63,7 @@
     private boolean isContentModified = false;
 
     private int mCalculatorKeysLayout;
+    private KeyboardView mCalculatorKeyboardView;
 
     public CalculatorEditText(Context context) {
         super(context);
@@ -186,7 +188,57 @@ public CalculatorKeyboard getCalculatorKeyboard(){
     }
 
     /**
-     * Sets the commodity to use for calculations.
+     * Returns the view Id of the keyboard view
+     * @return Keyboard view
+     */
+    public KeyboardView getCalculatorKeyboardView() {
+        return mCalculatorKeyboardView;
+    }
+
+    /**
+     * Set the keyboard view used for displaying the keyboard
+     * @param calculatorKeyboardView Calculator keyboard view
+     */
+    public void setCalculatorKeyboardView(KeyboardView calculatorKeyboardView) {
+        this.mCalculatorKeyboardView = calculatorKeyboardView;
+        bindListeners(calculatorKeyboardView);
+    }
+
+    /**
+     * Returns the XML resource ID describing the calculator keys layout
+     * @return XML resource ID
+     */
+    public int getCalculatorKeysLayout() {
+        return mCalculatorKeysLayout;
+    }
+
+    /**
+     * Sets the XML resource describing the layout of the calculator keys
+     * @param mCalculatorKeysLayout XML resource ID
+     */
+    public void setCalculatorKeysLayout(@XmlRes int mCalculatorKeysLayout) {
+        this.mCalculatorKeysLayout = mCalculatorKeysLayout;
+        bindListeners(mCalculatorKeyboardView);
+    }
+
+    /**
+     * Sets the calculator keyboard to use for this EditText
+     * @param keyboard Properly intialized calculator keyobard
+     */
+    public void setCalculatorKeyboard(CalculatorKeyboard keyboard){
+        this.mCalculatorKeyboard = keyboard;
+    }
+
+    /**
+     * Returns the currency used for computations
+     * @return ISO 4217 currency
+     */
+    public Commodity getCommodity() {
+        return mCommodity;
+    }
+
+    /**
+     * Sets the commodity to use for calculations
      * The commodity determines the number of decimal places used
      * @param commodity ISO 4217 currency
      */

From 89c2689e1bb9c965c44b832db6fb5878e3dc818d Mon Sep 17 00:00:00 2001
From: Lian Kai <liankai@gmail.com>
Date: Tue, 29 Dec 2015 09:12:13 +0800
Subject: [PATCH 05/16] Update strings.xml

Modify the confusing "Owncloud" in export_destinations. Changed to "share to ...".
---
 app/src/main/res/values-zh-rCN/strings.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index d9944b68..10dc63eb 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -64,7 +64,7 @@
     <item>SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
-    <item>Owncloud</item>
+    <item></item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions"> %1$d </string>

From 97a1dca8b9bf3c03f88b03c4d45a69c759d751ef Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 4 Feb 2016 14:28:49 +0100
Subject: [PATCH 06/16] Fix: saving is slow when a homescreen widget is in use
 and the db is large

Widgets are now updated in a background thread
fixes #202
---
 CHANGELOG.md                                       |  5 +++
 .../ui/homescreen/WidgetConfigurationActivity.java | 50 ++++++++++++++--------
 .../android/ui/util/AccountBalanceTask.java        |  4 --
 3 files changed, 36 insertions(+), 23 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 8acd01ee..b25d65d9 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,10 @@
 Change Log
 ===============================================================================
+Version 2.0.6 *(2016-02-29)*
+----------------------------
+* Fixed: Saving transaction gets slower with increase in size of database
+* Fixed: Crash when creating a new transaction with no transfer account
+
 Version 2.0.5 *(2015-12-12)*
 ----------------------------
 * Fixed: Wrong decimal formatting in multi-currency transactions
diff --git a/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java b/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
index 99f55eab..e11229d7 100644
--- a/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/homescreen/WidgetConfigurationActivity.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2012 Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2012 - 2015 Ngewi Fet <ngewif@gmail.com>
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -25,6 +25,7 @@
 import android.content.SharedPreferences;
 import android.content.SharedPreferences.Editor;
 import android.database.Cursor;
+import android.os.AsyncTask;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.v4.widget.SimpleCursorAdapter;
@@ -47,6 +48,8 @@
 import org.gnucash.android.util.QualifiedAccountNameCursorAdapter;
 
 import java.util.Locale;
+import java.util.concurrent.Executor;
+import java.util.concurrent.Executors;
 
 /**
  * Activity for configuration which account to display on a widget.
@@ -138,12 +141,12 @@ public void onClick(View v) {
      * @param appWidgetId ID of the widget to be updated
      * @param accountUID GUID of the account tied to the widget
 	 */
-	public static void updateWidget(Context context, int appWidgetId, String accountUID) {
+	public static void updateWidget(final Context context, int appWidgetId, String accountUID) {
 		Log.i("WidgetConfiguration", "Updating widget: " + appWidgetId);
 		AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);
 
 		AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
-		Account account;
+		final Account account;
         try {
             account = accountsDbAdapter.getRecord(accountUID);
         } catch (IllegalArgumentException e) {
@@ -165,18 +168,18 @@ public static void updateWidget(Context context, int appWidgetId, String account
 			return;
 		}
 		
-		RemoteViews views = new RemoteViews(context.getPackageName(),
+		final RemoteViews views = new RemoteViews(context.getPackageName(),
 				R.layout.widget_4x1);
 		views.setTextViewText(R.id.account_name, account.getName());
-        Money accountBalance = accountsDbAdapter.getAccountBalance(accountUID, -1, System.currentTimeMillis());
 
-        views.setTextViewText(R.id.transactions_summary,
+		Money accountBalance = accountsDbAdapter.getAccountBalance(accountUID, -1, System.currentTimeMillis());
+
+		views.setTextViewText(R.id.transactions_summary,
 				accountBalance.formattedString(Locale.getDefault()));
 		int color = account.getBalance().isNegative() ? R.color.debit_red : R.color.credit_green;
 		views.setTextColor(R.id.transactions_summary, context.getResources().getColor(color));
 
 
-
 		Intent accountViewIntent = new Intent(context, TransactionsActivity.class);
 		accountViewIntent.setAction(Intent.ACTION_VIEW);
 		accountViewIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
@@ -201,20 +204,29 @@ public static void updateWidget(Context context, int appWidgetId, String account
 	 * Updates all widgets belonging to the application
 	 * @param context Application context
 	 */
-	public static void updateAllWidgets(Context context){
+	public static void updateAllWidgets(final Context context){
 		Log.i("WidgetConfiguration", "Updating all widgets");
 		AppWidgetManager widgetManager = AppWidgetManager.getInstance(context);
 		ComponentName componentName = new ComponentName(context, TransactionAppWidgetProvider.class);
-		int[] appWidgetIds = widgetManager.getAppWidgetIds(componentName);
-
-        SharedPreferences defaultSharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);
-		for (int widgetId : appWidgetIds) {
-			String accountUID = defaultSharedPrefs
-            		.getString(UxArgument.SELECTED_ACCOUNT_UID + widgetId, null);
-            
-			if (accountUID == null)
-				continue;
-			updateWidget(context, widgetId, accountUID);
-		}
+		final int[] appWidgetIds = widgetManager.getAppWidgetIds(componentName);
+
+		//update widgets asynchronously so as not to block method which called the update
+		//inside the computation of the account balance
+		new Thread(new Runnable() {
+			SharedPreferences defaultSharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);
+
+			@Override
+			public void run() {
+				for (final int widgetId : appWidgetIds) {
+					final String accountUID = defaultSharedPrefs
+							.getString(UxArgument.SELECTED_ACCOUNT_UID + widgetId, null);
+
+					if (accountUID == null)
+						continue;
+
+					updateWidget(context, widgetId, accountUID);
+				}
+			}
+		}).start();
 	}
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java b/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
index 9dbcb6a5..ab1dccf0 100644
--- a/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
+++ b/app/src/main/java/org/gnucash/android/ui/util/AccountBalanceTask.java
@@ -17,15 +17,12 @@
 
 package org.gnucash.android.ui.util;
 
-import android.content.Context;
 import android.os.AsyncTask;
 import android.util.Log;
 import android.widget.TextView;
 
 import com.crashlytics.android.Crashlytics;
 
-import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.transaction.TransactionsActivity;
@@ -69,7 +66,6 @@ protected Money doInBackground(String... params) {
     @Override
     protected void onPostExecute(Money balance) {
         if (accountBalanceTextViewReference.get() != null && balance != null){
-            final Context context = GnuCashApplication.getAppContext();
             final TextView balanceTextView = accountBalanceTextViewReference.get();
             if (balanceTextView != null){
                 TransactionsActivity.displayBalance(balanceTextView, balance);

From 1ce3433dd6ce593be4007ca53de181e12ea9c9f2 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 4 Feb 2016 14:32:45 +0100
Subject: [PATCH 07/16] Update Italian, Japanese and Russian translations

Fix typo in Chinese translation
---
 app/src/main/res/values-it-rIT/strings.xml | 242 +++++++++--------
 app/src/main/res/values-ja-rJP/strings.xml | 359 +++++++++++++-------------
 app/src/main/res/values-lv-rLV/strings.xml | 401 +++++++++++++++++++++++++++++
 app/src/main/res/values-ru/strings.xml     |  22 +-
 app/src/main/res/values-zh-rCN/strings.xml |   2 +-
 5 files changed, 710 insertions(+), 316 deletions(-)
 create mode 100644 app/src/main/res/values-lv-rLV/strings.xml

diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index 52e4f11a..72e70d73 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -27,9 +27,9 @@
   <string name="btn_save">Salva</string>
   <string name="label_passcode">Inserire codice di accesso</string>
   <string name="toast_wrong_passcode">Codice di accesso errato, ritentare</string>
-  <string name="toast_passcode_set">Passcode set</string>
+  <string name="toast_passcode_set">Codice di accesso impostato</string>
   <string name="label_confirm_passcode">Conferma del codice di accesso</string>
-  <string name="toast_invalid_passcode_confirmation">Conferma del codice di accesso errata. Ritentare</string>
+  <string name="toast_invalid_passcode_confirmation">Conferma del codice di accesso errata. Riprovare</string>
   <string name="label_transaction_name">Descrizione</string>
   <string name="label_transaction_amount">Importo</string>
   <string name="title_add_transaction">Nuova transazione</string>
@@ -40,7 +40,7 @@
   <string name="label_credit">CREDITO</string>
   <string name="title_accounts">Conti</string>
   <string name="title_transactions">Transazioni</string>
-  <string name="menu_delete">ELIMINA</string>
+  <string name="menu_delete">Elimina</string>
   <string name="alert_dialog_ok_delete">Elimina</string>
   <string name="alert_dialog_cancel">Annulla</string>
   <string name="toast_account_deleted">Conto eliminato</string>
@@ -57,7 +57,7 @@
   <string name="hint_export_choice">Di default, verranno esportate solo le transazioni dall\'ultima esportazione. Selezionare questa opzione per esportare tutte le transazioni</string>
   <string name="toast_export_error">Errore nell\'esportazione dei dati %1$s</string>
   <string name="btn_export">Esporta</string>
-  <string name="option_delete_after_export">Delete transactions after export</string>
+  <string name="option_delete_after_export">Elimina le transazioni dopo l\'esportazione</string>
   <string name="hint_delete_after_export">Tutte le transazioni esportate verranno eliminate al termine dell\'esportazione</string>
   <string name="title_settings">Impostazioni</string>
   <string-array name="export_destinations">
@@ -80,8 +80,8 @@
   <string name="label_permission_create_accounts">Abilita la creazione dei conti in GnuCash per Android</string>
   <string name="label_permission_group">I propri dati di GnuCash</string>
   <string name="description_permission_group">Legge e modifica i dati di GnuCash</string>
-  <string name="label_permission_record_transaction">Record transactions in GnuCash</string>
-  <string name="label_permission_create_account">Create accounts in GnuCash</string>
+  <string name="label_permission_record_transaction">Registra le transazioni in GnuCash</string>
+  <string name="label_permission_create_account">Crea conti in GnuCash</string>
   <string name="label_display_account">Visualizza conto</string>
   <string name="btn_create_accounts">Crea conti</string>
   <string name="title_default_accounts">Selezione dei conti da creare</string>
@@ -92,13 +92,13 @@
   <string name="title_general_prefs">Generale</string>
   <string name="label_widget_configuration">Seleziona conto</string>
   <string name="toast_no_transactions_to_export">Non sono disponibili transazioni da esportare</string>
-  <string name="header_passcode_settings">Passcode</string>
-  <string name="title_passcode_preferences">Passcode Preferences</string>
-  <string name="title_passcode_enabled">Passcode Turned On</string>
-  <string name="title_passcode_disabled">Passcode Turned Off</string>
-  <string name="title_change_passcode">Change Passcode</string>
+  <string name="header_passcode_settings">Codice di accesso</string>
+  <string name="title_passcode_preferences">Preferenze codice di accesso</string>
+  <string name="title_passcode_enabled">Codice di accesso attivo</string>
+  <string name="title_passcode_disabled">Codice di accesso disattivato</string>
+  <string name="title_change_passcode">Cambia codice di accesso</string>
   <string name="title_about_gnucash">Informazioni su GnuCash</string>
-  <string name="summary_about_gnucash">A mobile finance management and expense-tracker designed for Android</string>
+  <string name="summary_about_gnucash">La gestione finanziaria in mobilit e un traccia-spese progettato per Android</string>
   <string name="title_about">Informazioni</string>
   <string name="toast_format_exported_to">File %1$s esportato in:\n</string>
   <string name="title_export_email">Esportazione file %1$s di GnuCash</string>
@@ -130,12 +130,12 @@
   <string name="summary_xml_ofx_header">Abilitare questa opzione quando si esporta verso un\'applicazione diversa da GnuCash versione desktop</string>
   <string name="title_whats_new">Novit</string>
   <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
-        - Multiple bug fixes and improvements\n
+- App in Material Design \n
+        - Transazioni in valute multiple\n
+        - Calcolatrice per gli importi delle transazioni\n
+        - Opzioni migliori per i resoconti\n
+        - Nuova sezione Aiuto &amp; Feedback\n
+        - Numerose correzioni di bug e miglioramenti\n
 	</string>
   <string name="label_dismiss">Chiudi</string>
   <string name="toast_transanction_amount_required">Inserire un importo per salvare la transazione</string>
@@ -183,10 +183,10 @@
     <item>CARTA DI CREDITO</item>
     <item>ATTIVIT</item>
     <item>PASSIVIT</item>
-    <item>ENTRATA</item>
-    <item>USCITA</item>
-    <item>PAYABLE</item>
-    <item>RECEIVABLE</item>
+    <item>ENTRATE</item>
+    <item>USCITE</item>
+    <item>CONTO DEBITORE</item>
+    <item>CONTO CREDITORE</item>
     <item>CAPITALE</item>
     <item>VALUTA</item>
     <item>AZIONE</item>
@@ -213,82 +213,82 @@
         Opzioni sono disponibili nelle impostazioni dell\'applicazione ed  quindi possibile decidere in seguito.
     </string>
   <string name="title_scheduled_transactions">Scheduled Transactions</string>
-  <string name="title_select_export_destination">Select destination for export</string>
+  <string name="title_select_export_destination">Seleziona la destinazione per l\'esportazione</string>
   <string name="hint_split_memo">Promemoria</string>
-  <string name="label_spend">Spend</string>
-  <string name="label_receive">Receive</string>
+  <string name="label_spend">Spendere</string>
+  <string name="label_receive">Ricevere</string>
   <string name="label_withdrawal">Prelievo</string>
   <string name="label_deposit">Deposito</string>
   <string name="label_payment">Pagamento</string>
-  <string name="label_charge">Charge</string>
-  <string name="label_decrease">Decrease</string>
-  <string name="label_increase">Increase</string>
-  <string name="label_income">Entrata</string>
-  <string name="label_rebate">Rebate</string>
-  <string name="label_expense">Uscite</string>
-  <string name="label_bill">Bill</string>
+  <string name="label_charge">Addebito</string>
+  <string name="label_decrease">Diminuzione</string>
+  <string name="label_increase">Aumento</string>
+  <string name="label_income">Entrate</string>
+  <string name="label_rebate">Rimborso</string>
+  <string name="label_expense">Uscita</string>
+  <string name="label_bill">Ricevuta</string>
   <string name="label_invoice">Fattura</string>
-  <string name="label_buy">Buy</string>
-  <string name="label_sell">Sell</string>
-  <string name="label_repeats">Repeats</string>
-  <string name="toast_no_recent_backup">No recent backup found</string>
+  <string name="label_buy">Compra</string>
+  <string name="label_sell">Vendi</string>
+  <string name="label_repeats">Ripetizioni</string>
+  <string name="toast_no_recent_backup">Nessun backup recente trovato</string>
   <string name="account_name_opening_balances">Bilanci d\'apertura</string>
   <string name="account_name_equity">Capitali</string>
-  <string name="summary_save_opening_balances">Enable to save the current account balance (before deleting transactions) as new opening balance after deleting transactions
+  <string name="summary_save_opening_balances">Attiva l\'opzione per salvare il bilancio corrente di un conto (prima di eliminare le transazioni) come nuovo bilancio di apertura dopo l\'eliminazione delle transazioni
     </string>
-  <string name="title_save_opening_balances">Save account opening balances</string>
+  <string name="title_save_opening_balances">Salva bilanci di apertura dei conti</string>
   <string name="export_warning_ofx">OFX non supporta le transazioni a partita doppia</string>
-  <string name="export_warning_qif">Generates separate QIF files per currency</string>
-  <string name="title_transaction_splits">Transaction splits</string>
+  <string name="export_warning_qif">Genera file QIF separati per ogni valuta</string>
+  <string name="title_transaction_splits">Suddividi transazione</string>
   <string name="label_imbalance">Sbilancio:</string>
   <string name="btn_add_split">Aggiungi suddivisione</string>
   <string name="menu_title_favorite">Preferito</string>
-  <string name="drawer_open">Navigation drawer opened</string>
-  <string name="drawer_close">Navigation drawer closed</string>
+  <string name="drawer_open">Menu laterale aperto</string>
+  <string name="drawer_close">Menu laterale chiuso</string>
   <string name="title_reports">Resoconti</string>
   <string name="title_pie_chart">Grafico a torta</string>
-  <string name="title_line_chart">Line Chart</string>
+  <string name="title_line_chart">Grafico a linee</string>
   <string name="title_bar_chart">Grafico a barre</string>
   <string name="title_report_prefs">Preferenze resoconto</string>
-  <string name="label_report_currency">Select currency</string>
+  <string name="label_report_currency">Seleziona la valuta</string>
   <string name="title_use_account_color">Colore del conto nei resoconti</string>
-  <string name="summary_use_account_color">Use account color in the bar/pie chart</string>
+  <string name="summary_use_account_color">Usa il colore del conto nei grafici a barre/torta</string>
   <string name="header_report_settings">Resoconti</string>
   <string name="menu_order_by_size">Ordina per dimensione</string>
   <string name="menu_toggle_legend">Mostra legenda</string>
   <string name="menu_toggle_labels">Mostra etichette</string>
-  <string name="menu_toggle_percentage_mode">Mostra la percentuale</string>
-  <string name="menu_toggle_average_lines">Show average lines</string>
-  <string name="menu_group_smaller_slices">Group Smaller Slices</string>
-  <string name="label_chart_no_data">No chart data available</string>
-  <string name="label_chart_overall">Overall</string>
+  <string name="menu_toggle_percentage_mode">Mostra percentuale</string>
+  <string name="menu_toggle_average_lines">Mostra linee della media</string>
+  <string name="menu_group_smaller_slices">Raggruppa fette pi piccole</string>
+  <string name="label_chart_no_data">Dati del grafico non disponibili</string>
+  <string name="label_chart_overall">Totale</string>
   <string name="label_chart_total">Totale</string>
   <string name="label_other_slice">Altro</string>
-  <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
-  <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
+  <string name="toast_chart_percentage_mode_total">La percentuale del valore selezionato, calcolata a partire dall\'importo totale</string>
+  <string name="toast_chart_percentage_mode_current_bar">La percentuale del valore selezionato, calcolata a partire dall\'importo della barra corrente</string>
   <string name="label_save_template">Salva come modello</string>
-  <string name="label_delete_account_transactions_description">This account contains transactions. \nWhat would you like to do with these transactions</string>
-  <string name="label_delete_account_subaccounts_description">This account contains sub-accounts. \nWhat would you like to do with these sub-accounts</string>
-  <string name="label_delete_transactions">Delete transactions</string>
-  <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
-  <string name="label_tap_to_create_schedule">Tap to create schedule</string>
-  <string name="title_restore_backup">Restore Backup&#8230;</string>
-  <string name="header_backup_and_export_settings">Backup &amp; export</string>
+  <string name="label_delete_account_transactions_description">Questo conto contiene delle transazioni. \nCosa vuoi fare con queste transazioni</string>
+  <string name="label_delete_account_subaccounts_description">Questo conto contiene dei sotto-conti. \nCosa vuoi fare con questi sotto-conti</string>
+  <string name="label_delete_transactions">Elimina transazioni</string>
+  <string name="toast_disable_double_entry_to_save_transaction">Crea e specifica un conto per il trasferimento O disattiva la partita doppia nelle impostazioni per salvare la transazione</string>
+  <string name="label_tap_to_create_schedule">Tocca per creare una pianificazione</string>
+  <string name="title_restore_backup">Ripristina backup&#8230;</string>
+  <string name="header_backup_and_export_settings">Backup &amp; esportazione</string>
   <string name="title_dropbox_sync_preference">Sincronizzazione con Dropbox</string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
-  <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
+  <string name="summary_dropbox_sync">Abilita la sincronizzazione con DropBox</string>
+  <string name="title_select_gnucash_xml_file">Seleziona un file XML di GnuCash</string>
   <string name="title_backup_prefs">Preferenze di backup</string>
   <string name="title_create_backup_pref">Crea backup</string>
   <string name="summary_create_backup_pref">Per impostazione predefinita, i backup vengono salvati nella scheda SD</string>
   <string name="summary_restore_backup_pref">Selezionare un backup specifico da ripristinare</string>
   <string name="toast_backup_successful">Backup riuscito</string>
   <string name="toast_backup_failed">Backup non riuscito</string>
-  <string name="export_warning_xml">Exports all accounts and transactions</string>
+  <string name="export_warning_xml">Esporta tutti i conti e tutte le transazioni</string>
   <string name="title_google_drive_sync_pref">Sincronizzazione Google Drive</string>
   <string name="summary_google_drive_sync">Abilita la sincronizzazione con Google Drive</string>
-  <string name="toast_install_file_manager">Install a file manager to select files</string>
-  <string name="title_select_backup_to_restore">Select backup to restore</string>
+  <string name="toast_install_file_manager">Installa un file manager per selezionare i file</string>
+  <string name="title_select_backup_to_restore">Seleziona il backup da ripristinare</string>
   <string name="nav_menu_favorites">Preferiti</string>
   <string name="nav_menu_open">Open...</string>
   <string name="nav_menu_reports">Resoconti</string>
@@ -296,102 +296,100 @@
   <string name="nav_menu_export">Export...</string>
   <string name="nav_menu_settings">Impostazioni</string>
   <plurals name="label_every_x_days">
-    <item quantity="one">Daily</item>
-    <item quantity="other">Every %d days</item>
+    <item quantity="one">Ogni giorno</item>
+    <item quantity="other">Ogni %d giorni</item>
   </plurals>
   <plurals name="label_every_x_weeks">
-    <item quantity="one">Weekly</item>
-    <item quantity="other">Every %d weeks</item>
+    <item quantity="one">Ogni settimana</item>
+    <item quantity="other">Ogni %d settimane</item>
   </plurals>
   <plurals name="label_every_x_months">
-    <item quantity="one">Monthly</item>
-    <item quantity="other">Every %d months</item>
+    <item quantity="one">Ogni mese</item>
+    <item quantity="other">Ogni %d mesi</item>
   </plurals>
   <plurals name="label_every_x_years">
-    <item quantity="one">Yearly</item>
-    <item quantity="other">Every %d years</item>
+    <item quantity="one">Ogni anno</item>
+    <item quantity="other">Ogni %d anni</item>
   </plurals>
-  <string name="title_enable_crashlytics">Enable Crash Logging</string>
-  <string name="msg_enable_crashlytics">Enable to send information about malfunctions to the developers for improvement (recommended).
-No user-identifiable information will be collected as part of this process!
-    </string>
-  <string name="label_export_format">Format</string>
-  <string name="toast_backup_folder_not_found">Backup folder cannot be found. Make sure the SD Card is mounted!</string>
-  <string name="label_old_passcode">Enter your old passcode</string>
-  <string name="label_new_passcode">Enter your new passcode</string>
+  <string name="title_enable_crashlytics">Attiva la registrazione dei crash</string>
+  <string name="msg_enable_crashlytics">Invia automaticamente delle informazioni sul malfunzionamento dell\'app agli sviluppatori.</string>
+  <string name="label_export_format"> Formato</string>
+  <string name="toast_backup_folder_not_found">Impossibile trovare la cartella di backup. Assicurati che la scheda SD sia montata!</string>
+  <string name="label_old_passcode">Inserisci il vecchio codice di accesso</string>
+  <string name="label_new_passcode">Inserisci il nuovo codice di accesso</string>
   <string name="nav_menu_scheduled_backups">Esportazioni pianificate</string>
   <string name="title_scheduled_exports">Scheduled Exports</string>
   <string name="label_no_scheduled_exports_to_display">Nessuna esportazione pianificata da visualizzare</string>
-  <string name="title_create_export_schedule">Create export schedule</string>
-  <string name="toast_exported_to">Exported to: %1$s</string>
+  <string name="title_create_export_schedule">Crea un programma di esportazione</string>
+  <string name="toast_exported_to">Esportato in: %1$s</string>
   <string name="toast_legend_too_long">La leggenda  troppo lunga</string>
   <string name="hint_account_description">Descrizione conto</string>
   <string name="label_no_recent_accounts">Nessun conto recente</string>
   <string name="label_no_favorite_accounts">Nessun conto preferito</string>
   <string name="nav_menu_scheduled_actions">Azioni pianificate</string>
   <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
-  <string name="label_select_bar_to_view_details">Select a bar to view details</string>
-  <string name="btn_wizard_next">Next</string>
-  <string name="btn_wizard_finish">Done</string>
+  <string name="label_select_bar_to_view_details">Seleziona una barra per vedere i dettagli</string>
+  <string name="btn_wizard_next">Avanti</string>
+  <string name="btn_wizard_finish">Fatto</string>
   <string name="wizard_title_default_currency">Valuta predefinita</string>
-  <string name="wizard_title_account_setup">Account Setup</string>
-  <string name="wizard_title_select_currency">Select Currency</string>
-  <string name="wizard_title_feedback_options">Feedback Options</string>
+  <string name="wizard_title_account_setup">Impostazione conti</string>
+  <string name="wizard_title_select_currency">Seleziona valuta</string>
+  <string name="wizard_title_feedback_options">Opzioni di feedback</string>
   <string name="wizard_option_create_default_accounts">Crea conti predefiniti</string>
-  <string name="wizard_option_import_my_accounts">Import my accounts</string>
-  <string name="wizard_option_let_me_handle_it">Let me handle it</string>
+  <string name="wizard_option_import_my_accounts">Importa i miei conti</string>
+  <string name="wizard_option_let_me_handle_it">Lascia fare a me</string>
   <string name="wizard_option_currency_other">Other...</string>
-  <string name="wizard_option_auto_send_crash_reports">Automatically send crash reports</string>
-  <string name="wizard_option_disable_crash_reports">Disable crash reports</string>
+  <string name="wizard_option_auto_send_crash_reports">Invia automaticamente le segnalazioni di arresto anomalo</string>
+  <string name="wizard_option_disable_crash_reports">Disattiva le segnalazioni dei crash</string>
   <string name="wizard_btn_back">Indietro</string>
-  <string name="title_setup_gnucash">Setup GnuCash</string>
+  <string name="title_setup_gnucash">Imposta GnuCash</string>
   <string name="wizard_title_welcome_to_gnucash">Benvenuto in GnuCash</string>
-  <string name="msg_wizard_welcome_page">Before you dive in, \nlet\'s setup a few things first\n\nTo continue, press Next</string>
-  <string name="title_split_editor">Split Editor</string>
-  <string name="toast_error_check_split_amounts">Check that all splits have valid amounts before saving!</string>
+  <string name="msg_wizard_welcome_page">Prima di gettarti a capofitto, \nimpostiamo alcune cose prima.\n\nPer continuare, premi Avanti.</string>
+  <string name="title_split_editor">Editor suddivisione</string>
+  <string name="toast_error_check_split_amounts">Controlla che tutte le suddivisioni abbiano degli importi validi prima di salvare!</string>
   <string name="label_error_invalid_expression">Espressione non valida!</string>
-  <string name="toast_scheduled_recurring_transaction">Scheduled recurring transaction</string>
-  <string name="error_exchange_rate_required">An exchange rate is required</string>
-  <string name="error_converted_amount_required">The converted amount is required</string>
-  <string name="title_transfer_funds">Transfer Funds</string>
-  <string name="nav_menu_help"><![CDATA[Help & Feedback]]></string>
-  <string name="label_select_pie_slice_to_see_details">Select a slice to see details</string>
-  <string name="label_report_period">Period:</string>
-  <string name="label_convert_from">From:</string>
-  <string name="label_convert_to">To:</string>
-  <string name="msg_provide_exchange_rate">Provide either the converted amount or exchange rate in order to transfer funds</string>
-  <string name="hint_exchange_rate">Exchange rate</string>
-  <string name="btn_fetch_quote">Fetch quote</string>
-  <string name="hint_converted_amount">Converted Amount</string>
-  <string name="title_report_sheet">Sheet</string>
-  <string name="label_last_3_months_expenses">Expenses for last 3 months</string>
-  <string name="label_total_assets">Total Assets</string>
+  <string name="toast_scheduled_recurring_transaction">Transazioni ricorrenti pianificate</string>
+  <string name="error_exchange_rate_required">Il tasso di cambio  necessario</string>
+  <string name="error_converted_amount_required">L\'importo convertito  necessario</string>
+  <string name="title_transfer_funds">Trasferisci fondi</string>
+  <string name="nav_menu_help"><![CDATA[Aiuto & Feedback]]></string>
+  <string name="label_select_pie_slice_to_see_details">Seleziona una fetta per vedere i dettagli</string>
+  <string name="label_report_period">Periodo:</string>
+  <string name="label_convert_from">Da:</string>
+  <string name="label_convert_to">A:</string>
+  <string name="msg_provide_exchange_rate">Fornisci l\'importo gi convertito o il tasso di cambio per trasferire i fondi</string>
+  <string name="hint_exchange_rate">Tasso di cambio</string>
+  <string name="btn_fetch_quote">Recupera quotazioni</string>
+  <string name="hint_converted_amount">Importo convertito</string>
+  <string name="title_report_sheet">Bilancio</string>
+  <string name="label_last_3_months_expenses">Uscite degli ultimi 3 mesi</string>
+  <string name="label_total_assets">Attivit totali</string>
   <string name="label_total_liabilities">Passivit totali</string>
   <string name="label_net_worth">Patrimonio netto</string>
-  <string name="label_assets">Assets</string>
+  <string name="label_assets">Attivit</string>
   <string name="label_liabilities">Passivit</string>
   <string name="label_equity">Capitali</string>
-  <string name="label_total_liabilities_and_equity"><![CDATA[Total Liabilites & Equity]]></string>
-  <string name="label_move_to">Move to:</string>
+  <string name="label_total_liabilities_and_equity"><![CDATA[Passivit e capitali totali]]></string>
+  <string name="label_move_to">Sposta in:</string>
   <string name="menu_group_by">Raggruppa per</string>
   <string name="menu_group_by_month">Mese</string>
   <string name="menu_group_by_quarter">Trimestre</string>
   <string name="menu_group_by_year">Anno</string>
-  <string name="title_balance_sheet_report">Balance Sheet</string>
+  <string name="title_balance_sheet_report">Stato patrimoniale</string>
   <string name="label_balance_sheet_total">Totale:</string>
   <string name="title_google_plus_community">Community Google+</string>
   <string name="title_translate_gnucash">Traduzione di GnuCash</string>
-  <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
-  <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
-  <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
-  <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="summary_google_plus">Condivi idee, discuti dei cambiamenti o segnala dei problemi</string>
+  <string name="summary_translate_gnucash">Traduci o revisiona su Crowdin</string>
+  <string name="toast_no_compatible_apps_to_receive_export">Nessuna app compatibile per ricevere le transazioni esportate!</string>
+  <string name="menu_move_transaction">Sposta...</string>
+  <string name="menu_duplicate_transaction">Duplica</string>
   <string-array name="report_time_range">
     <item>Mese corrente</item>
     <item>Ultimi 3 mesi</item>
     <item>Ultimi 6 mesi</item>
     <item>Ultimi 12 mesi</item>
-    <item>All time</item>
+    <item>Da sempre</item>
     <item>Intervallo personalizzato&#8230;</item>
   </string-array>
 </resources>
diff --git a/app/src/main/res/values-ja-rJP/strings.xml b/app/src/main/res/values-ja-rJP/strings.xml
index 59c35147..7d9c3f57 100644
--- a/app/src/main/res/values-ja-rJP/strings.xml
+++ b/app/src/main/res/values-ja-rJP/strings.xml
@@ -19,191 +19,186 @@
   <string name="title_create_account"></string>
   <string name="title_edit_account"></string>
   <string name="info_details"></string>
-  <string name="menu_export">&#8230;</string>
-  <string name="description_add_transaction_icon">Add a new transaction to an account</string>
-  <string name="label_no_accounts">No accounts to display</string>
-  <string name="label_account_name">Account name</string>
-  <string name="btn_cancel">Cancel</string>
-  <string name="btn_save">Save</string>
-  <string name="label_passcode">Enter Passcode</string>
-  <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
-  <string name="toast_passcode_set">Passcode set</string>
-  <string name="label_confirm_passcode">Please confirm your passcode</string>
-  <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
-  <string name="label_transaction_name">Description</string>
-  <string name="label_transaction_amount">Amount</string>
-  <string name="title_add_transaction">New transaction</string>
-  <string name="label_no_transactions">No transactions to display</string>
-  <string name="label_timeanddate">DATE &amp; TIME</string>
-  <string name="label_account">Account</string>
-  <string name="label_debit">DEBIT</string>
-  <string name="label_credit">CREDIT</string>
-  <string name="title_accounts">Accounts</string>
-  <string name="title_transactions">Transactions</string>
-  <string name="menu_delete">Delete</string>
-  <string name="alert_dialog_ok_delete">Delete</string>
-  <string name="alert_dialog_cancel">Cancel</string>
-  <string name="toast_account_deleted">Account deleted</string>
-  <string name="title_confirm_delete">Confirm delete</string>
-  <string name="delete_account_confirmation_message">All transactions in this account will also be deleted</string>
-  <string name="title_edit_transaction">Edit Transaction</string>
-  <string name="label_transaction_description">Add note</string>
-  <string name="menu_move">MOVE</string>
-  <string name="title_selected">%1$d selected</string>
-  <string name="label_account_balance">Balance:</string>
-  <string name="label_export_destination">Export To:</string>
-  <string name="title_export_dialog">Export Transactions</string>
-  <string name="option_export_all_transactions">Export all transactions</string>
-  <string name="hint_export_choice">By default, only new transactions since last export will be exported. Check this option to export all transactions</string>
-  <string name="toast_export_error">Error exporting %1$s file</string>
-  <string name="btn_export">Export</string>
-  <string name="option_delete_after_export">Delete transactions after export</string>
-  <string name="hint_delete_after_export">All exported transactions will be deleted when exporting is completed</string>
-  <string name="title_settings">Settings</string>
+  <string name="menu_export">&#8230;</string>
+  <string name="description_add_transaction_icon"></string>
+  <string name="label_no_accounts"></string>
+  <string name="label_account_name"></string>
+  <string name="btn_cancel"></string>
+  <string name="btn_save"></string>
+  <string name="label_passcode"></string>
+  <string name="toast_wrong_passcode"></string>
+  <string name="toast_passcode_set"></string>
+  <string name="label_confirm_passcode"></string>
+  <string name="toast_invalid_passcode_confirmation"></string>
+  <string name="label_transaction_name"></string>
+  <string name="label_transaction_amount"></string>
+  <string name="title_add_transaction"></string>
+  <string name="label_no_transactions"></string>
+  <string name="label_timeanddate"></string>
+  <string name="label_account"></string>
+  <string name="label_debit"></string>
+  <string name="label_credit"></string>
+  <string name="title_accounts"></string>
+  <string name="title_transactions"></string>
+  <string name="menu_delete"></string>
+  <string name="alert_dialog_ok_delete"></string>
+  <string name="alert_dialog_cancel"></string>
+  <string name="toast_account_deleted"></string>
+  <string name="title_confirm_delete"></string>
+  <string name="delete_account_confirmation_message"></string>
+  <string name="title_edit_transaction"></string>
+  <string name="label_transaction_description"></string>
+  <string name="menu_move"></string>
+  <string name="title_selected">%1$d </string>
+  <string name="label_account_balance"></string>
+  <string name="label_export_destination"></string>
+  <string name="title_export_dialog"></string>
+  <string name="option_export_all_transactions"></string>
+  <string name="hint_export_choice"></string>
+  <string name="toast_export_error">%1$s</string>
+  <string name="btn_export"></string>
+  <string name="option_delete_after_export"></string>
+  <string name="hint_delete_after_export"></string>
+  <string name="title_settings"></string>
   <string-array name="export_destinations">
-    <item>SD Card</item>
-    <item>DropBox</item>
-    <item>Google Drive</item>
-    <item>Send to&#8230;</item>
+    <item>SD</item>
+    <item>Dropbox</item>
+    <item>Google </item>
+    <item>...</item>
   </string-array>
-  <string name="btn_move">Move</string>
-  <string name="title_move_transactions">Move %1$d transaction(s)</string>
-  <string name="label_move_destination">Destination Account</string>
-  <string name="permission_access_sdcard">Access SD Card</string>
-  <string name="toast_incompatible_currency">Cannot move transactions.\nThe destination account uses a different currency from origin account</string>
-  <string name="header_general_settings">General</string>
-  <string name="header_about_gnucash">About</string>
-  <string name="title_choose_currency">Choose default currency</string>
-  <string name="title_default_currency">Default currency</string>
-  <string name="summary_default_currency">Default currency to assign to new accounts</string>
-  <string name="label_permission_record_transactions">Enables recording transactions in GnuCash for Android</string>
-  <string name="label_permission_create_accounts">Enables creation of accounts in GnuCash for Android</string>
-  <string name="label_permission_group">Your GnuCash data</string>
-  <string name="description_permission_group">Read and modify GnuCash data</string>
-  <string name="label_permission_record_transaction">Record transactions in GnuCash</string>
-  <string name="label_permission_create_account">Create accounts in GnuCash</string>
-  <string name="label_display_account">Display account</string>
-  <string name="btn_create_accounts">Create Accounts</string>
-  <string name="title_default_accounts">Select accounts to create</string>
-  <string name="error_no_accounts">No accounts exist in GnuCash.\nCreate an account before adding a widget</string>
-  <string name="title_build_version">Build version</string>
-  <string name="title_license">License</string>
-  <string name="summary_licence_details">Apache License v2.0. Click for details</string>
-  <string name="title_general_prefs">General Preferences</string>
-  <string name="label_widget_configuration">Select Account</string>
-  <string name="toast_no_transactions_to_export">There are no transactions available to export</string>
-  <string name="header_passcode_settings">Passcode</string>
-  <string name="title_passcode_preferences">Passcode Preferences</string>
-  <string name="title_passcode_enabled">Passcode Turned On</string>
-  <string name="title_passcode_disabled">Passcode Turned Off</string>
-  <string name="title_change_passcode">Change Passcode</string>
-  <string name="title_about_gnucash">About GnuCash</string>
-  <string name="summary_about_gnucash">A mobile finance management and expense-tracker designed for Android</string>
-  <string name="title_about">About</string>
-  <string name="toast_format_exported_to">%1$s file exported to:\n</string>
+  <string name="btn_move"></string>
+  <string name="title_move_transactions">%1$d</string>
+  <string name="label_move_destination"></string>
+  <string name="permission_access_sdcard">SD</string>
+  <string name="toast_incompatible_currency">\n</string>
+  <string name="header_general_settings"></string>
+  <string name="header_about_gnucash"></string>
+  <string name="title_choose_currency"></string>
+  <string name="title_default_currency"></string>
+  <string name="summary_default_currency"></string>
+  <string name="label_permission_record_transactions"></string>
+  <string name="label_permission_create_accounts"></string>
+  <string name="label_permission_group">GnuCash</string>
+  <string name="description_permission_group">GnuCash</string>
+  <string name="label_permission_record_transaction">GnuCash</string>
+  <string name="label_permission_create_account">GnuCash</string>
+  <string name="label_display_account"></string>
+  <string name="btn_create_accounts"></string>
+  <string name="title_default_accounts"></string>
+  <string name="error_no_accounts">GnuCash\n</string>
+  <string name="title_build_version"></string>
+  <string name="title_license"></string>
+  <string name="summary_licence_details">Apachev2.0. </string>
+  <string name="title_general_prefs"></string>
+  <string name="label_widget_configuration"></string>
+  <string name="toast_no_transactions_to_export"></string>
+  <string name="header_passcode_settings"></string>
+  <string name="title_passcode_preferences"></string>
+  <string name="title_passcode_enabled"></string>
+  <string name="title_passcode_disabled"></string>
+  <string name="title_change_passcode"></string>
+  <string name="title_about_gnucash">GnuCash</string>
+  <string name="summary_about_gnucash"></string>
+  <string name="title_about"></string>
+  <string name="toast_format_exported_to">%1$s\n</string>
   <string name="title_export_email">GnuCash Android %1$s export</string>
   <string name="description_export_email">GnuCash Android Export from </string>
-  <string name="header_transaction_settings">Transactions</string>
-  <string name="title_transaction_preferences">Transaction Preferences</string>
-  <string name="title_account_preferences">Account Preferences</string>
-  <string name="title_default_transaction_type">Default Transaction Type</string>
-  <string name="summary_default_transaction_type">The type of transaction to use by default, CREDIT or DEBIT</string>
+  <string name="header_transaction_settings"></string>
+  <string name="title_transaction_preferences"></string>
+  <string name="title_account_preferences"></string>
+  <string name="title_default_transaction_type"></string>
+  <string name="summary_default_transaction_type"></string>
   <string-array name="transaction_types">
-    <item>CREDIT</item>
-    <item>DEBIT</item>
+    <item></item>
+    <item></item>
   </string-array>
-  <string name="msg_delete_all_transactions_confirmation">Are you sure you want to delete ALL transactions?</string>
-  <string name="msg_delete_transaction_confirmation">Are you sure you want to delete this transaction?</string>
-  <string name="title_export_preference_category">Export</string>
-  <string name="title_export_all_transactions">Export all transactions</string>
-  <string name="title_always_delete_exported_transactions">Delete exported transactions</string>
-  <string name="title_default_export_email">Default export email</string>
-  <string name="summary_default_export_email">The default email address to send exports to. You can still change this when you export.</string>
-  <string name="label_double_entry_account">Transfer Account</string>
-  <string name="summary_use_double_entry">All transactions will be a transfer from one account to another</string>
-  <string name="title_use_double_entry">Activate Double Entry</string>
-  <string name="account_balance">Balance</string>
-  <string name="toast_no_account_name_entered">Enter an account name to create an account</string>
-  <string name="label_account_currency">Currency</string>
-  <string name="label_parent_account">Parent account</string>
-  <string name="title_xml_ofx_header">Use XML OFX header</string>
-  <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
-  <string name="title_whats_new">What\'s New</string>
-  <string name="whats_new">
-        - New Material app design \n
-        - Multi-currency transactions\n
-        - Calculator to transaction amounts\n
-        - Better reporting options\n
-        - New help &amp; feedback section\n
-        - Multiple bug fixes and improvements\n
-	</string>
-  <string name="label_dismiss">Dismiss</string>
-  <string name="toast_transanction_amount_required">Enter an amount to save the transaction</string>
+  <string name="msg_delete_all_transactions_confirmation"></string>
+  <string name="msg_delete_transaction_confirmation"></string>
+  <string name="title_export_preference_category"></string>
+  <string name="title_export_all_transactions"></string>
+  <string name="title_always_delete_exported_transactions"></string>
+  <string name="title_default_export_email"></string>
+  <string name="summary_default_export_email"></string>
+  <string name="label_double_entry_account"></string>
+  <string name="summary_use_double_entry"></string>
+  <string name="title_use_double_entry"></string>
+  <string name="account_balance"></string>
+  <string name="toast_no_account_name_entered"></string>
+  <string name="label_account_currency"></string>
+  <string name="label_parent_account"></string>
+  <string name="title_xml_ofx_header">OFXXML</string>
+  <string name="summary_xml_ofx_header">GnuCash for desktop</string>
+  <string name="title_whats_new"></string>
+  <string name="whats_new">        - \n
+        - \n
+        - \n
+        - \n
+        - \n
+        - \n
+        </string>
+  <string name="label_dismiss"></string>
+  <string name="toast_transanction_amount_required"></string>
   <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
-  <string name="menu_import_accounts">Import GnuCash Accounts</string>
-  <string name="btn_import_accounts">Import Accounts</string>
-  <string name="toast_error_importing_accounts">An error occurred while importing the GnuCash accounts</string>
-  <string name="toast_success_importing_accounts">GnuCash Accounts successfully imported</string>
-  <string name="summary_import_accounts">Import account structure exported from GnuCash desktop</string>
-  <string name="title_import_accounts">Import GnuCash XML</string>
-  <string name="summary_delete_all_accounts">Delete all accounts in the database. All transactions will be deleted as
-        well.
-    </string>
-  <string name="title_delete_all_accounts">Delete all accounts</string>
-  <string name="header_account_settings">Accounts</string>
-  <string name="toast_all_accounts_deleted">All accounts have been successfully deleted</string>
-  <string name="confirm_delete_all_accounts">Are you sure you want to delete all accounts and transactions?\n\nThis
-        operation cannot be undone!
-    </string>
-  <string name="label_account_type">Account Type</string>
-  <string name="summary_delete_all_transactions">All transactions in all accounts will be deleted!</string>
-  <string name="title_delete_all_transactions">Delete all transactions</string>
-  <string name="toast_all_transactions_deleted">All transactions successfully deleted!</string>
-  <string name="title_progress_importing_accounts">Importing accounts</string>
-  <string name="toast_tap_again_to_confirm_delete">Tap again to confirm. ALL entries will be deleted!!</string>
-  <string name="section_header_transactions">Transactions</string>
-  <string name="section_header_subaccounts">Sub-Accounts</string>
-  <string name="menu_search_accounts">Search</string>
-  <string name="title_default_export_format">Default Export Format</string>
-  <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
-  <string name="menu_export_transactions">Export transactions&#8230;</string>
-  <string name="label_recurring_transaction">Recurrence</string>
+  <string name="menu_import_accounts">GnuCash</string>
+  <string name="btn_import_accounts"></string>
+  <string name="toast_error_importing_accounts">GnuCash</string>
+  <string name="toast_success_importing_accounts">GnuCash</string>
+  <string name="summary_import_accounts">GnuCash</string>
+  <string name="title_import_accounts">GnuCachXML</string>
+  <string name="summary_delete_all_accounts">    </string>
+  <string name="title_delete_all_accounts"></string>
+  <string name="header_account_settings"></string>
+  <string name="toast_all_accounts_deleted"></string>
+  <string name="confirm_delete_all_accounts">\n\n    </string>
+  <string name="label_account_type"></string>
+  <string name="summary_delete_all_transactions"></string>
+  <string name="title_delete_all_transactions"></string>
+  <string name="toast_all_transactions_deleted"></string>
+  <string name="title_progress_importing_accounts"></string>
+  <string name="toast_tap_again_to_confirm_delete"></string>
+  <string name="section_header_transactions"></string>
+  <string name="section_header_subaccounts"></string>
+  <string name="menu_search_accounts"></string>
+  <string name="title_default_export_format"></string>
+  <string name="summary_default_export_format"></string>
+  <string name="menu_export_transactions">...</string>
+  <string name="label_recurring_transaction"></string>
   <string name="imbalance_account_name">Imbalance</string>
-  <string name="title_progress_exporting_transactions">Exporting transactions</string>
-  <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
-  <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
-  <string name="label_placeholder_account">Placeholder account</string>
-  <string name="label_default_transfer_account">Default Transfer Account</string>
+  <string name="title_progress_exporting_transactions"></string>
+  <string name="label_no_recurring_transactions"></string>
+  <string name="toast_recurring_transaction_deleted"></string>
+  <string name="label_placeholder_account"></string>
+  <string name="label_default_transfer_account"></string>
   <plurals name="label_sub_accounts">
-    <item quantity="other">%d sub-accounts</item>
+    <item quantity="other">%d</item>
   </plurals>
   <string-array name="account_type_entry_values">
-    <item>CASH</item>
-    <item>BANK</item>
-    <item>CREDIT CARD</item>
-    <item>ASSET</item>
-    <item>LIABILITY</item>
-    <item>INCOME</item>
-    <item>EXPENSE</item>
-    <item>PAYABLE</item>
-    <item>RECEIVABLE</item>
-    <item>EQUITY</item>
-    <item>CURRENCY</item>
-    <item>STOCK</item>
-    <item>MUTUAL FUND</item>
-    <item>TRADING</item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
+    <item></item>
   </string-array>
   <string-array name="export_formats">
     <item>QIF</item>
     <item>OFX</item>
     <item>XML</item>
   </string-array>
-  <string name="color_picker_default_title">Select a Color</string>
-  <string name="label_account_color_and_type">Account Color &amp; Type</string>
-  <string name="label_delete_sub_accounts">Delete sub-accounts</string>
-  <string name="title_recent_accounts">Recent</string>
-  <string name="title_favorite_accounts">Favorites</string>
-  <string name="title_all_accounts">All</string>
+  <string name="color_picker_default_title"></string>
+  <string name="label_account_color_and_type"></string>
+  <string name="label_delete_sub_accounts"></string>
+  <string name="title_recent_accounts"></string>
+  <string name="title_favorite_accounts"></string>
+  <string name="title_all_accounts"></string>
   <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
   <string name="title_create_default_accounts">Create default accounts</string>
   <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
@@ -228,7 +223,7 @@
   <string name="label_expense">Expense</string>
   <string name="label_bill">Bill</string>
   <string name="label_invoice">Invoice</string>
-  <string name="label_buy">Buy</string>
+  <string name="label_buy"></string>
   <string name="label_sell">Sell</string>
   <string name="label_repeats">Repeats</string>
   <string name="toast_no_recent_backup">No recent backup found</string>
@@ -262,8 +257,8 @@
   <string name="menu_group_smaller_slices">Group Smaller Slices</string>
   <string name="label_chart_no_data">No chart data available</string>
   <string name="label_chart_overall">Overall</string>
-  <string name="label_chart_total">Total</string>
-  <string name="label_other_slice">Other</string>
+  <string name="label_chart_total"></string>
+  <string name="label_other_slice"></string>
   <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
   <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
   <string name="label_save_template">Save as template</string>
@@ -275,11 +270,11 @@
   <string name="title_restore_backup">Restore Backup&#8230;</string>
   <string name="header_backup_and_export_settings">Backup &amp; export</string>
   <string name="title_dropbox_sync_preference">DropBox Sync</string>
-  <string name="title_backup_preference_category">Backup</string>
+  <string name="title_backup_preference_category"></string>
   <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
   <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
-  <string name="title_backup_prefs">Backup Preferences</string>
-  <string name="title_create_backup_pref">Create Backup</string>
+  <string name="title_backup_prefs"></string>
+  <string name="title_create_backup_pref"></string>
   <string name="summary_create_backup_pref">By default backups are saved to the SDCARD</string>
   <string name="summary_restore_backup_pref">Select a specific backup to restore</string>
   <string name="toast_backup_successful">Backup successful</string>
@@ -290,11 +285,11 @@
   <string name="toast_install_file_manager">Install a file manager to select files</string>
   <string name="title_select_backup_to_restore">Select backup to restore</string>
   <string name="nav_menu_favorites">Favorites</string>
-  <string name="nav_menu_open">Open&#8230;</string>
+  <string name="nav_menu_open">&#8230;</string>
   <string name="nav_menu_reports">Reports</string>
   <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
-  <string name="nav_menu_export">Export&#8230;</string>
-  <string name="nav_menu_settings">Settings</string>
+  <string name="nav_menu_export">&#8230;</string>
+  <string name="nav_menu_settings"></string>
   <plurals name="label_every_x_days">
     <item quantity="other">Every %d days</item>
   </plurals>
@@ -309,7 +304,7 @@
   </plurals>
   <string name="title_enable_crashlytics">Enable Crash Logging</string>
   <string name="msg_enable_crashlytics">Automatically send information about app malfunction to the developers.</string>
-  <string name="label_export_format"> Format</string>
+  <string name="label_export_format"> </string>
   <string name="toast_backup_folder_not_found">Backup folder cannot be found. Make sure the SD Card is mounted!</string>
   <string name="label_old_passcode">Enter your old passcode</string>
   <string name="label_new_passcode">Enter your new passcode</string>
@@ -325,7 +320,7 @@
   <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
   <string name="label_scheduled_action_ended">"Ended, last executed on %1$s"</string>
   <string name="label_select_bar_to_view_details">Select a bar to view details</string>
-  <string name="btn_wizard_next">Next</string>
+  <string name="btn_wizard_next"></string>
   <string name="btn_wizard_finish">Done</string>
   <string name="wizard_title_default_currency">Default Currency</string>
   <string name="wizard_title_account_setup">Account Setup</string>
@@ -372,9 +367,9 @@
   <string name="menu_group_by_quarter">Quarter</string>
   <string name="menu_group_by_year">Year</string>
   <string name="title_balance_sheet_report">Balance Sheet</string>
-  <string name="label_balance_sheet_total">Total:</string>
-  <string name="title_google_plus_community">Google+ Community</string>
-  <string name="title_translate_gnucash">Translate GnuCash</string>
+  <string name="label_balance_sheet_total">:</string>
+  <string name="title_google_plus_community">Google+ </string>
+  <string name="title_translate_gnucash">GnuCash </string>
   <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
   <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
   <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
diff --git a/app/src/main/res/values-lv-rLV/strings.xml b/app/src/main/res/values-lv-rLV/strings.xml
new file mode 100644
index 00000000..ea6be3fd
--- /dev/null
+++ b/app/src/main/res/values-lv-rLV/strings.xml
@@ -0,0 +1,401 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+ Copyright (c) 2012 - 2014 Ngewi Fet <ngewif@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <string name="title_create_account">Create Account</string>
+  <string name="title_edit_account">Edit Account</string>
+  <string name="info_details">Info</string>
+  <string name="menu_export">Export&#8230;</string>
+  <string name="description_add_transaction_icon">Add a new transaction to an account</string>
+  <string name="label_no_accounts">No accounts to display</string>
+  <string name="label_account_name">Account name</string>
+  <string name="btn_cancel">Cancel</string>
+  <string name="btn_save">Save</string>
+  <string name="label_passcode">Enter Passcode</string>
+  <string name="toast_wrong_passcode">Wrong passcode, please try again</string>
+  <string name="toast_passcode_set">Passcode set</string>
+  <string name="label_confirm_passcode">Please confirm your passcode</string>
+  <string name="toast_invalid_passcode_confirmation">Invalid passcode confirmation. Please try again</string>
+  <string name="label_transaction_name">Apraksts</string>
+  <string name="label_transaction_amount">Amount</string>
+  <string name="title_add_transaction">New transaction</string>
+  <string name="label_no_transactions">No transactions to display</string>
+  <string name="label_timeanddate">DATE &amp; TIME</string>
+  <string name="label_account">Account</string>
+  <string name="label_debit">DEBIT</string>
+  <string name="label_credit">CREDIT</string>
+  <string name="title_accounts">Accounts</string>
+  <string name="title_transactions">Transactions</string>
+  <string name="menu_delete">Delete</string>
+  <string name="alert_dialog_ok_delete">Delete</string>
+  <string name="alert_dialog_cancel">Cancel</string>
+  <string name="toast_account_deleted">Account deleted</string>
+  <string name="title_confirm_delete">Confirm delete</string>
+  <string name="delete_account_confirmation_message">All transactions in this account will also be deleted</string>
+  <string name="title_edit_transaction">Edit Transaction</string>
+  <string name="label_transaction_description">Add note</string>
+  <string name="menu_move">MOVE</string>
+  <string name="title_selected">%1$d selected</string>
+  <string name="label_account_balance">Balance:</string>
+  <string name="label_export_destination">Export To:</string>
+  <string name="title_export_dialog">Export Transactions</string>
+  <string name="option_export_all_transactions">Export all transactions</string>
+  <string name="hint_export_choice">By default, only new transactions since last export will be exported. Check this option to export all transactions</string>
+  <string name="toast_export_error">Error exporting %1$s file</string>
+  <string name="btn_export">Export</string>
+  <string name="option_delete_after_export">Delete transactions after export</string>
+  <string name="hint_delete_after_export">All exported transactions will be deleted when exporting is completed</string>
+  <string name="title_settings">Settings</string>
+  <string-array name="export_destinations">
+    <item>SD Card</item>
+    <item>DropBox</item>
+    <item>Google Drive</item>
+    <item>Send to&#8230;</item>
+  </string-array>
+  <string name="btn_move">Move</string>
+  <string name="title_move_transactions">Move %1$d transaction(s)</string>
+  <string name="label_move_destination">Destination Account</string>
+  <string name="permission_access_sdcard">Access SD Card</string>
+  <string name="toast_incompatible_currency">Cannot move transactions.\nThe destination account uses a different currency from origin account</string>
+  <string name="header_general_settings">General</string>
+  <string name="header_about_gnucash">About</string>
+  <string name="title_choose_currency">Choose default currency</string>
+  <string name="title_default_currency">Default currency</string>
+  <string name="summary_default_currency">Default currency to assign to new accounts</string>
+  <string name="label_permission_record_transactions">Enables recording transactions in GnuCash for Android</string>
+  <string name="label_permission_create_accounts">Enables creation of accounts in GnuCash for Android</string>
+  <string name="label_permission_group">Your GnuCash data</string>
+  <string name="description_permission_group">Read and modify GnuCash data</string>
+  <string name="label_permission_record_transaction">Record transactions in GnuCash</string>
+  <string name="label_permission_create_account">Create accounts in GnuCash</string>
+  <string name="label_display_account">Display account</string>
+  <string name="btn_create_accounts">Create Accounts</string>
+  <string name="title_default_accounts">Select accounts to create</string>
+  <string name="error_no_accounts">No accounts exist in GnuCash.\nCreate an account before adding a widget</string>
+  <string name="title_build_version">Build version</string>
+  <string name="title_license">License</string>
+  <string name="summary_licence_details">Apache License v2.0. Click for details</string>
+  <string name="title_general_prefs">General Preferences</string>
+  <string name="label_widget_configuration">Select Account</string>
+  <string name="toast_no_transactions_to_export">There are no transactions available to export</string>
+  <string name="header_passcode_settings">Passcode</string>
+  <string name="title_passcode_preferences">Passcode Preferences</string>
+  <string name="title_passcode_enabled">Passcode Turned On</string>
+  <string name="title_passcode_disabled">Passcode Turned Off</string>
+  <string name="title_change_passcode">Change Passcode</string>
+  <string name="title_about_gnucash">About GnuCash</string>
+  <string name="summary_about_gnucash">A mobile finance management and expense-tracker designed for Android</string>
+  <string name="title_about">About</string>
+  <string name="toast_format_exported_to">%1$s file exported to:\n</string>
+  <string name="title_export_email">GnuCash Android %1$s export</string>
+  <string name="description_export_email">GnuCash Android Export from </string>
+  <string name="header_transaction_settings">Transactions</string>
+  <string name="title_transaction_preferences">Transaction Preferences</string>
+  <string name="title_account_preferences">Account Preferences</string>
+  <string name="title_default_transaction_type">Default Transaction Type</string>
+  <string name="summary_default_transaction_type">The type of transaction to use by default, CREDIT or DEBIT</string>
+  <string-array name="transaction_types">
+    <item>CREDIT</item>
+    <item>DEBIT</item>
+  </string-array>
+  <string name="msg_delete_all_transactions_confirmation">Are you sure you want to delete ALL transactions?</string>
+  <string name="msg_delete_transaction_confirmation">Are you sure you want to delete this transaction?</string>
+  <string name="title_export_preference_category">Export</string>
+  <string name="title_export_all_transactions">Export all transactions</string>
+  <string name="title_always_delete_exported_transactions">Delete exported transactions</string>
+  <string name="title_default_export_email">Default export email</string>
+  <string name="summary_default_export_email">The default email address to send exports to. You can still change this when you export.</string>
+  <string name="label_double_entry_account">Transfer Account</string>
+  <string name="summary_use_double_entry">All transactions will be a transfer from one account to another</string>
+  <string name="title_use_double_entry">Activate Double Entry</string>
+  <string name="account_balance">Balance</string>
+  <string name="toast_no_account_name_entered">Enter an account name to create an account</string>
+  <string name="label_account_currency">Currency</string>
+  <string name="label_parent_account">Parent account</string>
+  <string name="title_xml_ofx_header">Use XML OFX header</string>
+  <string name="summary_xml_ofx_header">Enable this option when exporting to third-party application other than GnuCash for desktop</string>
+  <string name="title_whats_new">What\'s New</string>
+  <string name="whats_new">
+        - New Material app design \n
+        - Multi-currency transactions\n
+        - Calculator to transaction amounts\n
+        - Better reporting options\n
+        - New help &amp; feedback section\n
+        - Multiple bug fixes and improvements\n
+	</string>
+  <string name="label_dismiss">Dismiss</string>
+  <string name="toast_transanction_amount_required">Enter an amount to save the transaction</string>
+  <string name="toast_error_edit_multi_currency_transaction">Multi-currency transactions cannot be modified</string>
+  <string name="menu_import_accounts">Import GnuCash Accounts</string>
+  <string name="btn_import_accounts">Import Accounts</string>
+  <string name="toast_error_importing_accounts">An error occurred while importing the GnuCash accounts</string>
+  <string name="toast_success_importing_accounts">GnuCash Accounts successfully imported</string>
+  <string name="summary_import_accounts">Import account structure exported from GnuCash desktop</string>
+  <string name="title_import_accounts">Import GnuCash XML</string>
+  <string name="summary_delete_all_accounts">Delete all accounts in the database. All transactions will be deleted as
+        well.
+    </string>
+  <string name="title_delete_all_accounts">Delete all accounts</string>
+  <string name="header_account_settings">Accounts</string>
+  <string name="toast_all_accounts_deleted">All accounts have been successfully deleted</string>
+  <string name="confirm_delete_all_accounts">Are you sure you want to delete all accounts and transactions?\n\nThis
+        operation cannot be undone!
+    </string>
+  <string name="label_account_type">Account Type</string>
+  <string name="summary_delete_all_transactions">All transactions in all accounts will be deleted!</string>
+  <string name="title_delete_all_transactions">Delete all transactions</string>
+  <string name="toast_all_transactions_deleted">All transactions successfully deleted!</string>
+  <string name="title_progress_importing_accounts">Importing accounts</string>
+  <string name="toast_tap_again_to_confirm_delete">Tap again to confirm. ALL entries will be deleted!!</string>
+  <string name="section_header_transactions">Transactions</string>
+  <string name="section_header_subaccounts">Sub-Accounts</string>
+  <string name="menu_search_accounts">Search</string>
+  <string name="title_default_export_format">Default Export Format</string>
+  <string name="summary_default_export_format">File format to use by default when exporting transactions</string>
+  <string name="menu_export_transactions">Export transactions&#8230;</string>
+  <string name="label_recurring_transaction">Recurrence</string>
+  <string name="imbalance_account_name">Imbalance</string>
+  <string name="title_progress_exporting_transactions">Exporting transactions</string>
+  <string name="label_no_recurring_transactions">No recurring transactions to display.</string>
+  <string name="toast_recurring_transaction_deleted">Successfully deleted recurring transaction</string>
+  <string name="label_placeholder_account">Placeholder account</string>
+  <string name="label_default_transfer_account">Default Transfer Account</string>
+  <plurals name="label_sub_accounts">
+    <item quantity="zero">%d sub-accounts</item>
+    <item quantity="one">%d sub-account</item>
+    <item quantity="other">%d sub-accounts</item>
+  </plurals>
+  <string-array name="account_type_entry_values">
+    <item>CASH</item>
+    <item>BANK</item>
+    <item>CREDIT CARD</item>
+    <item>ASSET</item>
+    <item>LIABILITY</item>
+    <item>INCOME</item>
+    <item>EXPENSE</item>
+    <item>PAYABLE</item>
+    <item>RECEIVABLE</item>
+    <item>EQUITY</item>
+    <item>CURRENCY</item>
+    <item>STOCK</item>
+    <item>MUTUAL FUND</item>
+    <item>TRADING</item>
+  </string-array>
+  <string-array name="export_formats">
+    <item>QIF</item>
+    <item>OFX</item>
+    <item>XML</item>
+  </string-array>
+  <string name="color_picker_default_title">Select a Color</string>
+  <string name="label_account_color_and_type">Account Color &amp; Type</string>
+  <string name="label_delete_sub_accounts">Delete sub-accounts</string>
+  <string name="title_recent_accounts">Recent</string>
+  <string name="title_favorite_accounts">Favorites</string>
+  <string name="title_all_accounts">All</string>
+  <string name="summary_create_default_accounts">Creates default GnuCash commonly-used account structure</string>
+  <string name="title_create_default_accounts">Create default accounts</string>
+  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="menu_scheduled_transactions">Scheduled Transactions</string>
+  <string name="msg_confirm_create_default_accounts_first_run">Welcome to GnuCash Android! \nYou can either create
+        a hierarchy of commonly-used accounts, or import your own GnuCash account structure. \n\nBoth options are also
+        available in app Settings so you can decide later.
+    </string>
+  <string name="title_scheduled_transactions">Transactions</string>
+  <string name="title_select_export_destination">Select destination for export</string>
+  <string name="hint_split_memo">Memo</string>
+  <string name="label_spend">Spend</string>
+  <string name="label_receive">Receive</string>
+  <string name="label_withdrawal">Withdrawal</string>
+  <string name="label_deposit">Deposit</string>
+  <string name="label_payment">Payment</string>
+  <string name="label_charge">Charge</string>
+  <string name="label_decrease">Decrease</string>
+  <string name="label_increase">Increase</string>
+  <string name="label_income">Income</string>
+  <string name="label_rebate">Rebate</string>
+  <string name="label_expense">Expense</string>
+  <string name="label_bill">Bill</string>
+  <string name="label_invoice">Invoice</string>
+  <string name="label_buy">Buy</string>
+  <string name="label_sell">Sell</string>
+  <string name="label_repeats">Repeats</string>
+  <string name="toast_no_recent_backup">No recent backup found</string>
+  <string name="account_name_opening_balances">Opening Balances</string>
+  <string name="account_name_equity">Equity</string>
+  <string name="summary_save_opening_balances">Enable to save the current account balance (before deleting transactions) as new opening balance after deleting transactions
+    </string>
+  <string name="title_save_opening_balances">Save account opening balances</string>
+  <string name="export_warning_ofx">OFX does not support double-entry transactions</string>
+  <string name="export_warning_qif">Generates separate QIF files per currency</string>
+  <string name="title_transaction_splits">Transaction splits</string>
+  <string name="label_imbalance">Imbalance:</string>
+  <string name="btn_add_split">Add split</string>
+  <string name="menu_title_favorite">Favorite</string>
+  <string name="drawer_open">Navigation drawer opened</string>
+  <string name="drawer_close">Navigation drawer closed</string>
+  <string name="title_reports">Reports</string>
+  <string name="title_pie_chart">Pie Chart</string>
+  <string name="title_line_chart">Line Chart</string>
+  <string name="title_bar_chart">Bar Chart</string>
+  <string name="title_report_prefs">Report Preferences</string>
+  <string name="label_report_currency">Select currency</string>
+  <string name="title_use_account_color">Account color in reports</string>
+  <string name="summary_use_account_color">Use account color in the bar/pie chart</string>
+  <string name="header_report_settings">Reports</string>
+  <string name="menu_order_by_size">Order by size</string>
+  <string name="menu_toggle_legend">Show legend</string>
+  <string name="menu_toggle_labels">Show labels</string>
+  <string name="menu_toggle_percentage_mode">Show percentage</string>
+  <string name="menu_toggle_average_lines">Show average lines</string>
+  <string name="menu_group_smaller_slices">Group Smaller Slices</string>
+  <string name="label_chart_no_data">No chart data available</string>
+  <string name="label_chart_overall">Overall</string>
+  <string name="label_chart_total">Total</string>
+  <string name="label_other_slice">Other</string>
+  <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
+  <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
+  <string name="label_save_template">Save as template</string>
+  <string name="label_delete_account_transactions_description">This account contains transactions. \nWhat would you like to do with these transactions</string>
+  <string name="label_delete_account_subaccounts_description">This account contains sub-accounts. \nWhat would you like to do with these sub-accounts</string>
+  <string name="label_delete_transactions">Delete transactions</string>
+  <string name="toast_disable_double_entry_to_save_transaction">Create and specify a transfer account OR disable double-entry in settings to save the transaction</string>
+  <string name="label_tap_to_create_schedule">Tap to create schedule</string>
+  <string name="title_restore_backup">Restore Backup&#8230;</string>
+  <string name="header_backup_and_export_settings">Backup &amp; export</string>
+  <string name="title_dropbox_sync_preference">DropBox Sync</string>
+  <string name="title_backup_preference_category">Backup</string>
+  <string name="summary_dropbox_sync">Enable to sync to DropBox</string>
+  <string name="title_select_gnucash_xml_file">Select GnuCash XML file</string>
+  <string name="title_backup_prefs">Backup Preferences</string>
+  <string name="title_create_backup_pref">Create Backup</string>
+  <string name="summary_create_backup_pref">By default backups are saved to the SDCARD</string>
+  <string name="summary_restore_backup_pref">Select a specific backup to restore</string>
+  <string name="toast_backup_successful">Backup successful</string>
+  <string name="toast_backup_failed">Backup failed</string>
+  <string name="export_warning_xml">Exports all accounts and transactions</string>
+  <string name="title_google_drive_sync_pref">Google Drive Sync</string>
+  <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
+  <string name="toast_install_file_manager">Install a file manager to select files</string>
+  <string name="title_select_backup_to_restore">Select backup to restore</string>
+  <string name="nav_menu_favorites">Favorites</string>
+  <string name="nav_menu_open">Open&#8230;</string>
+  <string name="nav_menu_reports">Reports</string>
+  <string name="nav_menu_scheduled_transactions">Scheduled Transactions</string>
+  <string name="nav_menu_export">Export&#8230;</string>
+  <string name="nav_menu_settings">Settings</string>
+  <plurals name="label_every_x_days">
+    <item quantity="zero">Every %d days</item>
+    <item quantity="one">Daily</item>
+    <item quantity="other">Every %d days</item>
+  </plurals>
+  <plurals name="label_every_x_weeks">
+    <item quantity="zero">Every %d weeks</item>
+    <item quantity="one">Weekly</item>
+    <item quantity="other">Every %d weeks</item>
+  </plurals>
+  <plurals name="label_every_x_months">
+    <item quantity="zero">Every %d months</item>
+    <item quantity="one">Monthly</item>
+    <item quantity="other">Every %d months</item>
+  </plurals>
+  <plurals name="label_every_x_years">
+    <item quantity="zero">Every %d years</item>
+    <item quantity="one">Yearly</item>
+    <item quantity="other">Every %d years</item>
+  </plurals>
+  <string name="title_enable_crashlytics">Enable Crash Logging</string>
+  <string name="msg_enable_crashlytics">Automatically send information about app malfunction to the developers.</string>
+  <string name="label_export_format"> Format</string>
+  <string name="toast_backup_folder_not_found">Backup folder cannot be found. Make sure the SD Card is mounted!</string>
+  <string name="label_old_passcode">Enter your old passcode</string>
+  <string name="label_new_passcode">Enter your new passcode</string>
+  <string name="nav_menu_scheduled_backups">Scheduled Exports</string>
+  <string name="title_scheduled_exports">Exports</string>
+  <string name="label_no_scheduled_exports_to_display">No scheduled exports to display</string>
+  <string name="title_create_export_schedule">Create export schedule</string>
+  <string name="toast_exported_to">Exported to: %1$s</string>
+  <string name="toast_legend_too_long">The legend is too long</string>
+  <string name="hint_account_description">Account description</string>
+  <string name="label_no_recent_accounts">No recent accounts</string>
+  <string name="label_no_favorite_accounts">No favorite accounts</string>
+  <string name="nav_menu_scheduled_actions">Scheduled Actions</string>
+  <string name="label_scheduled_action_ended">"Ended, last executed on %1$s"</string>
+  <string name="label_select_bar_to_view_details">Select a bar to view details</string>
+  <string name="btn_wizard_next">Next</string>
+  <string name="btn_wizard_finish">Done</string>
+  <string name="wizard_title_default_currency">Default Currency</string>
+  <string name="wizard_title_account_setup">Account Setup</string>
+  <string name="wizard_title_select_currency">Select Currency</string>
+  <string name="wizard_title_feedback_options">Feedback Options</string>
+  <string name="wizard_option_create_default_accounts">Create default accounts</string>
+  <string name="wizard_option_import_my_accounts">Import my accounts</string>
+  <string name="wizard_option_let_me_handle_it">Let me handle it</string>
+  <string name="wizard_option_currency_other">Other&#8230;</string>
+  <string name="wizard_option_auto_send_crash_reports">Automatically send crash reports</string>
+  <string name="wizard_option_disable_crash_reports">Disable crash reports</string>
+  <string name="wizard_btn_back">Back</string>
+  <string name="title_setup_gnucash">Setup GnuCash</string>
+  <string name="wizard_title_welcome_to_gnucash">Welcome to GnuCash</string>
+  <string name="msg_wizard_welcome_page">Before you dive in, \nlet\'s setup a few things first\n\nTo continue, press Next</string>
+  <string name="title_split_editor">Split Editor</string>
+  <string name="toast_error_check_split_amounts">Check that all splits have valid amounts before saving!</string>
+  <string name="label_error_invalid_expression">Invalid expression!</string>
+  <string name="toast_scheduled_recurring_transaction">Scheduled recurring transaction</string>
+  <string name="error_exchange_rate_required">An exchange rate is required</string>
+  <string name="error_converted_amount_required">The converted amount is required</string>
+  <string name="title_transfer_funds">Transfer Funds</string>
+  <string name="nav_menu_help"><![CDATA[Help & Feedback]]></string>
+  <string name="label_select_pie_slice_to_see_details">Select a slice to see details</string>
+  <string name="label_report_period">Period:</string>
+  <string name="label_convert_from">From:</string>
+  <string name="label_convert_to">To:</string>
+  <string name="msg_provide_exchange_rate">Provide either the converted amount or exchange rate in order to transfer funds</string>
+  <string name="hint_exchange_rate">Exchange rate</string>
+  <string name="btn_fetch_quote">Fetch quote</string>
+  <string name="hint_converted_amount">Converted Amount</string>
+  <string name="title_report_sheet">Sheet</string>
+  <string name="label_last_3_months_expenses">Expenses for last 3 months</string>
+  <string name="label_total_assets">Total Assets</string>
+  <string name="label_total_liabilities">Total Liabilities</string>
+  <string name="label_net_worth">Net Worth</string>
+  <string name="label_assets">Assets</string>
+  <string name="label_liabilities">Liabilities</string>
+  <string name="label_equity">Equity</string>
+  <string name="label_total_liabilities_and_equity"><![CDATA[Total Liabilites & Equity]]></string>
+  <string name="label_move_to">Move to:</string>
+  <string name="menu_group_by">Group By</string>
+  <string name="menu_group_by_month">Month</string>
+  <string name="menu_group_by_quarter">Quarter</string>
+  <string name="menu_group_by_year">Year</string>
+  <string name="title_balance_sheet_report">Balance Sheet</string>
+  <string name="label_balance_sheet_total">Total:</string>
+  <string name="title_google_plus_community">Google+ Community</string>
+  <string name="title_translate_gnucash">Translate GnuCash</string>
+  <string name="summary_google_plus">Share ideas, discuss changes or report problems</string>
+  <string name="summary_translate_gnucash">Translate or proof-read on CrowdIn</string>
+  <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
+  <string name="menu_move_transaction">Move...</string>
+  <string name="menu_duplicate_transaction">Duplicate</string>
+  <string-array name="report_time_range">
+    <item>Current month</item>
+    <item>Last 3 months</item>
+    <item>Last 6 months</item>
+    <item>Last 12 months</item>
+    <item>All time</item>
+    <item>Custom range&#8230;</item>
+  </string-array>
+</resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 73e539fc..7675c5ea 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -57,13 +57,13 @@
   <string name="hint_export_choice">  ,    .</string>
   <string name="toast_export_error">   %1$s</string>
   <string name="btn_export"></string>
-  <string name="option_delete_after_export">Delete transactions after export</string>
+  <string name="option_delete_after_export">   </string>
   <string name="hint_delete_after_export">      .</string>
   <string name="title_settings"></string>
   <string-array name="export_destinations">
     <item> </item>
     <item>DropBox</item>
-    <item>Google Drive</item>
+    <item>Google </item>
     <item> &#8230;</item>
   </string-array>
   <string name="btn_move"></string>
@@ -80,8 +80,8 @@
   <string name="label_permission_create_accounts">   Gnucash  Android</string>
   <string name="label_permission_group">  Gnucash</string>
   <string name="description_permission_group">    Gnucash</string>
-  <string name="label_permission_record_transaction">Record transactions in GnuCash</string>
-  <string name="label_permission_create_account">Create accounts in GnuCash</string>
+  <string name="label_permission_record_transaction">   GnuCash</string>
+  <string name="label_permission_create_account">    GnuCash</string>
   <string name="label_display_account"> </string>
   <string name="btn_create_accounts"> </string>
   <string name="title_default_accounts">   </string>
@@ -121,7 +121,7 @@
   <string name="summary_default_export_email">     .     .</string>
   <string name="label_double_entry_account"> </string>
   <string name="summary_use_double_entry">        .</string>
-  <string name="title_use_double_entry">  </string>
+  <string name="title_use_double_entry">  </string>
   <string name="account_balance"></string>
   <string name="toast_no_account_name_entered">   </string>
   <string name="label_account_currency"></string>
@@ -204,7 +204,7 @@
   <string name="title_all_accounts"></string>
   <string name="summary_create_default_accounts">   GnuCash  </string>
   <string name="title_create_default_accounts">   </string>
-  <string name="msg_confirm_create_default_accounts_setting">All existing accounts and transactions on the device will be deleted.\n\nAre you sure you want to proceed?</string>
+  <string name="msg_confirm_create_default_accounts_setting">        .\n\n ,   ?</string>
   <string name="menu_scheduled_transactions"> </string>
   <string name="msg_confirm_create_default_accounts_first_run">
           GnuCash  Android!\n    
@@ -237,7 +237,7 @@
   <string name="summary_save_opening_balances">     (  )       
     </string>
   <string name="title_save_opening_balances">   </string>
-  <string name="export_warning_ofx">OFX    </string>
+  <string name="export_warning_ofx">OFX    </string>
   <string name="export_warning_qif">     QIF-</string>
   <string name="title_transaction_splits"> </string>
   <string name="label_imbalance">:</string>
@@ -270,7 +270,7 @@
   <string name="label_delete_account_transactions_description">   .\n   ?</string>
   <string name="label_delete_account_subaccounts_description">  .\n   ?</string>
   <string name="label_delete_transactions"> </string>
-  <string name="toast_disable_double_entry_to_save_transaction">          .</string>
+  <string name="toast_disable_double_entry_to_save_transaction">          </string>
   <string name="label_tap_to_create_schedule">,   </string>
   <string name="title_restore_backup">   &#8230;</string>
   <string name="header_backup_and_export_settings">  &amp; </string>
@@ -385,9 +385,9 @@
   <string name="title_translate_gnucash"> GnuCash</string>
   <string name="summary_google_plus"> ,      </string>
   <string name="summary_translate_gnucash">    CrowdIn</string>
-  <string name="toast_no_compatible_apps_to_receive_export">No compatible apps to receive the exported transactions!</string>
-  <string name="menu_move_transaction">Move...</string>
-  <string name="menu_duplicate_transaction">Duplicate</string>
+  <string name="toast_no_compatible_apps_to_receive_export">  ,    !</string>
+  <string name="menu_move_transaction">...</string>
+  <string name="menu_duplicate_transaction"></string>
   <string-array name="report_time_range">
     <item> </item>
     <item> </item>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index 10dc63eb..d9944b68 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -64,7 +64,7 @@
     <item>SD</item>
     <item>DropBox</item>
     <item>Google Drive</item>
-    <item></item>
+    <item>Owncloud</item>
   </string-array>
   <string name="btn_move"></string>
   <string name="title_move_transactions"> %1$d </string>

From 8a61607a0da2abd7829c9b4e61a50f1289b2193d Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 4 Feb 2016 15:36:53 +0100
Subject: [PATCH 08/16] Fix: computation of imbalance amount in split editor
 for Liabilities

Fixes #462
Hide split button when in single-entry mode
Upgrade android build tools version to 23.0.2 and android gradle tools to 1.5.0
---
 CHANGELOG.md                                       |  2 ++
 app/build.gradle                                   |  4 ++--
 .../ui/transaction/SplitEditorFragment.java        | 24 ++++++++++++++++------
 .../ui/transaction/TransactionFormFragment.java    |  1 +
 build.gradle                                       |  2 +-
 5 files changed, 24 insertions(+), 9 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index b25d65d9..d46dbcac 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -3,6 +3,8 @@ Change Log
 Version 2.0.6 *(2016-02-29)*
 ----------------------------
 * Fixed: Saving transaction gets slower with increase in size of database
+* Fixed: Imbalance amount wrongly computed in split editor (for some accounts)
+* Fixed: Amount text boxes in split editor sometimes do not get focus
 * Fixed: Crash when creating a new transaction with no transfer account
 
 Version 2.0.5 *(2015-12-12)*
diff --git a/app/build.gradle b/app/build.gradle
index 1a8df8fc..b5fac63f 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -5,7 +5,7 @@ apply plugin: 'io.fabric'
 
 def versionMajor = 2
 def versionMinor = 0
-def versionPatch = 5
+def versionPatch = 6
 def versionBuild = 0
 
 def buildTime() {
@@ -21,7 +21,7 @@ def gitSha() {
 
 android {
     compileSdkVersion 23
-    buildToolsVersion "23.0.1"
+    buildToolsVersion "23.0.2"
     defaultConfig {
         applicationId "org.gnucash.android"
         testApplicationId 'org.gnucash.android.test'
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
index a45fcb6f..143bec10 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/SplitEditorFragment.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 - 2015 Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2014 - 2016 Ngewi Fet <ngewif@gmail.com>
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -43,8 +43,6 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import com.crashlytics.android.Crashlytics;
-
 import net.objecthunter.exp4j.Expression;
 import net.objecthunter.exp4j.ExpressionBuilder;
 
@@ -443,14 +441,25 @@ public void afterTextChanged(Editable editable) {
             for (View splitItem : mSplitItemViewList) {
                 SplitViewHolder viewHolder = (SplitViewHolder) splitItem.getTag();
                 BigDecimal amount = viewHolder.getAmountValue().abs();
+                long accountId = viewHolder.accountsSpinner.getSelectedItemId();
+                boolean hasDebitNormalBalance = AccountsDbAdapter.getInstance()
+                        .getAccountType(accountId).hasDebitNormalBalance();
+
                 if (viewHolder.splitTypeSwitch.isChecked()) {
-                    imbalance = imbalance.subtract(amount);
+                    if (hasDebitNormalBalance)
+                        imbalance = imbalance.add(amount);
+                    else
+                        imbalance = imbalance.subtract(amount);
                 } else {
-                    imbalance = imbalance.add(amount);
+                    if (hasDebitNormalBalance)
+                        imbalance = imbalance.subtract(amount);
+                    else
+                        imbalance = imbalance.add(amount);
                 }
+
             }
 
-            TransactionsActivity.displayBalance(mImbalanceTextView, new Money(imbalance.negate(), mCommodity));
+            TransactionsActivity.displayBalance(mImbalanceTextView, new Money(imbalance, mCommodity));
         }
     }
 
@@ -477,6 +486,9 @@ public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int
             AccountType accountType = mAccountsDbAdapter.getAccountType(id);
             mTypeToggleButton.setAccountType(accountType);
 
+            //refresh the imbalance amount if we change the account
+            mImbalanceWatcher.afterTextChanged(null);
+
             String fromCurrencyCode = mAccountsDbAdapter.getCurrencyCode(mAccountUID);
             String targetCurrencyCode = mAccountsDbAdapter.getCurrencyCode(mAccountsDbAdapter.getUID(id));
 
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index fd4486d1..7b61c6bb 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -297,6 +297,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		mUseDoubleEntry = sharedPrefs.getBoolean(getString(R.string.key_use_double_entry), false);
 		if (!mUseDoubleEntry){
 			mDoubleEntryLayout.setVisibility(View.GONE);
+            mOpenSplitEditor.setVisibility(View.GONE);
 		}
 
         mAccountUID = getArguments().getString(UxArgument.SELECTED_ACCOUNT_UID);
diff --git a/build.gradle b/build.gradle
index b2d2eee5..2fa480f7 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
 		jcenter()
 	}
 	dependencies {
-		classpath 'com.android.tools.build:gradle:1.3.0'
+		classpath 'com.android.tools.build:gradle:1.5.0'
 		classpath 'io.fabric.tools:gradle:1.+'
 	}
 }

From 0aef6f5896d74221698feda72400000524ef2a93 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 5 Feb 2016 11:06:02 +0100
Subject: [PATCH 09/16] Fix bugs from double-entry mode and account spinners

Fix: crash when saving transaction in double-entry mode with only one account in system
Fix: crash when editing account (default transfer account setting) with no other account in system
Fix broken CI build (update Android tools version in Travis config)
Fixes #473
---
 .travis.yml                                                            | 2 +-
 CHANGELOG.md                                                           | 3 ++-
 .../main/java/org/gnucash/android/ui/account/AccountFormFragment.java  | 3 ++-
 .../org/gnucash/android/ui/transaction/TransactionFormFragment.java    | 2 +-
 play_store_description.txt                                             | 2 +-
 5 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/.travis.yml b/.travis.yml
index 7987359b..08f38141 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -4,7 +4,7 @@ android:
   components:
     - platform-tools
     - tools
-    - build-tools-23.0.1
+    - build-tools-23.0.2
 
     # The SDK version used to compile your project
     - android-23
diff --git a/CHANGELOG.md b/CHANGELOG.md
index d46dbcac..00e00a69 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,10 +1,11 @@
 Change Log
 ===============================================================================
-Version 2.0.6 *(2016-02-29)*
+Version 2.0.6 *(2016-02-20)*
 ----------------------------
 * Fixed: Saving transaction gets slower with increase in size of database
 * Fixed: Imbalance amount wrongly computed in split editor (for some accounts)
 * Fixed: Amount text boxes in split editor sometimes do not get focus
+* Fixed: Crash when saving account with no transfer account selected
 * Fixed: Crash when creating a new transaction with no transfer account
 
 Version 2.0.5 *(2015-12-12)*
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
index 0a62283f..40641de1 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountFormFragment.java
@@ -791,7 +791,8 @@ private void saveAccount() {
 		}
         mAccount.setParentUID(newParentAccountUID);
 
-        if (mDefaultTransferAccountCheckBox.isChecked()){
+        if (mDefaultTransferAccountCheckBox.isChecked()
+                && mDefaulTransferAccountSpinner.getSelectedItemId() != Spinner.INVALID_ROW_ID){
             long id = mDefaulTransferAccountSpinner.getSelectedItemId();
             mAccount.setDefaultTransferAccountUID(mAccountsDbAdapter.getUID(id));
         } else {
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 7b61c6bb..4bb328f0 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -793,7 +793,7 @@ private void saveNewTransaction() {
 
                     String transferAcctUID;
                     long transferAcctId = mTransferAccountSpinner.getSelectedItemId();
-                    if (mUseDoubleEntry || transferAcctId < 0) {
+                    if (mUseDoubleEntry && transferAcctId > 0) {
                         transferAcctUID = mAccountsDbAdapter.getUID(transferAcctId);
                     } else {
                         transferAcctUID = mAccountsDbAdapter.getOrCreateImbalanceAccountUID(currency);
diff --git a/play_store_description.txt b/play_store_description.txt
index c9499294..94d57d9a 100644
--- a/play_store_description.txt
+++ b/play_store_description.txt
@@ -2,7 +2,7 @@ GnuCash is a mobile finance expense tracker application for Android.
 
 It is a companion application for GnuCash for the desktop and enables flexible tracking of expenses on-the-go which can be exported to QIF or OFX formats.
 
-Some of feature highligts  include:
+Some of feature highlights  include:
 
 <b>&bull; An easy-to-use interface.</b>
 

From f10b4e433aa353cf0ef913f563be4025b5baa0ec Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Fri, 5 Feb 2016 12:45:03 +0100
Subject: [PATCH 10/16] Fixes crash when account is deleted which was set as
 default transfer account

---
 .../org/gnucash/android/db/AccountsDbAdapter.java  | 30 ++++++++++++++++++---
 .../org/gnucash/android/db/DatabaseHelper.java     |  1 +
 .../test/unit/db/AccountsDbAdapterTest.java        | 31 ++++++++++++++++++++++
 3 files changed, 59 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index 7da4727b..3298281c 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -97,7 +97,6 @@ public static AccountsDbAdapter getInstance(){
 	 * Adds an account to the database. 
 	 * If an account already exists in the database with the same GUID, it is replaced.
 	 * @param account {@link Account} to be inserted to database
-	 * @return Database row ID of the inserted account
 	 */
     @Override
 	public void addRecord(@NonNull Account account){
@@ -200,7 +199,8 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Account account
         }
         if (account.getDefaultTransferAccountUID() != null) {
             mReplaceStatement.bindString(14, account.getDefaultTransferAccountUID());
-        }
+        } else
+            mReplaceStatement.bindNull(14);
 
         return mReplaceStatement;
     }
@@ -355,11 +355,22 @@ public boolean recursiveDeleteAccount(long accountId){
             String accountUIDList = "'" + TextUtils.join("','", descendantAccountUIDs) + "'";
 
             // delete accounts
-            mDb.delete(
+            long deletedCount = mDb.delete(
                     AccountEntry.TABLE_NAME,
                     AccountEntry.COLUMN_UID + " IN (" + accountUIDList + ")",
                     null
             );
+
+            //if we delete some accounts, reset the default transfer account to NULL
+            //there is also a database trigger from db version > 12
+            if (deletedCount > 0){
+                ContentValues contentValues = new ContentValues();
+                contentValues.putNull(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID);
+                mDb.update(mTableName, contentValues,
+                        AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID + " IN (" + accountUIDList + ")",
+                        null);
+            }
+
             mDb.setTransactionSuccessful();
             return true;
         }
@@ -1216,6 +1227,19 @@ public int deleteAllRecords() {
         return mDb.delete(AccountEntry.TABLE_NAME, null, null);
     }
 
+    @Override
+    public boolean deleteRecord(@NonNull String uid) {
+        boolean result = super.deleteRecord(uid);
+        if (result){
+            ContentValues contentValues = new ContentValues();
+            contentValues.putNull(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID);
+            mDb.update(mTableName, contentValues,
+                    AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID + "=?",
+                    new String[]{uid});
+        }
+        return result;
+    }
+
     public int getTransactionMaxSplitNum(@NonNull String accountUID) {
         Cursor cursor = mDb.query("trans_extra_info",
                 new String[]{"MAX(trans_split_count)"},
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
index 440e5c7e..639b79cd 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
@@ -73,6 +73,7 @@
             + AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID   + " varchar(255), "
             + AccountEntry.COLUMN_CREATED_AT       + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
             + AccountEntry.COLUMN_MODIFIED_AT      + " TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "
+//            + "FOREIGN KEY (" 	+ AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID + ") REFERENCES " + AccountEntry.TABLE_NAME + " (" + AccountEntry.COLUMN_UID + ") ON DELETE SET NULL, "
             + "FOREIGN KEY (" 	+ AccountEntry.COLUMN_COMMODITY_UID + ") REFERENCES " + CommodityEntry.TABLE_NAME + " (" + CommodityEntry.COLUMN_UID + ") "
 			+ ");" + createUpdatedAtTrigger(AccountEntry.TABLE_NAME);
 	
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
index 260f98b5..afb7f1c5 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
@@ -22,6 +22,7 @@
 import org.gnucash.android.test.unit.util.ShadowCrashlytics;
 import org.gnucash.android.test.unit.util.ShadowUserVoice;
 import org.junit.After;
+import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -376,6 +377,36 @@ public void shouldCreateImbalanceAccountOnDemand(){
         assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(2);
     }
 
+    @Test
+    public void shouldSetDefaultTransferColumnToNull_WhenTheAccountIsDeleted(){
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isZero();
+        Account account1 = new Account("Test");
+        Account account2 = new Account("Transfer Account");
+
+        account1.setDefaultTransferAccountUID(account2.getUID());
+
+        mAccountsDbAdapter.addRecord(account1);
+        mAccountsDbAdapter.addRecord(account2);
+
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(3L); //plus ROOT account
+        mAccountsDbAdapter.deleteRecord(account2.getUID());
+
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(2L);
+        assertThat(mAccountsDbAdapter.getRecord(account1.getUID()).getDefaultTransferAccountUID()).isNull();
+
+        Account account3 = new Account("Sub-test");
+        account3.setParentUID(account1.getUID());
+        Account account4 = new Account("Third-party");
+        account4.setDefaultTransferAccountUID(account3.getUID());
+
+        mAccountsDbAdapter.addRecord(account3);
+        mAccountsDbAdapter.addRecord(account4);
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(4L);
+
+        mAccountsDbAdapter.recursiveDeleteAccount(mAccountsDbAdapter.getID(account1.getUID()));
+        assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(2L);
+        assertThat(mAccountsDbAdapter.getRecord(account4.getUID()).getDefaultTransferAccountUID()).isNull();
+    }
 
     /**
      * Opening an XML file should set the default currency to that used by the most accounts in the file

From 904f30137d4cd15319d4b292ee18347f5a327640 Mon Sep 17 00:00:00 2001
From: alceurneto <alceurneto@gmail.com>
Date: Sat, 6 Feb 2016 00:04:09 -0200
Subject: [PATCH 11/16] Fixes #467 and fixes #464.

---
 app/build.gradle                                   |  1 +
 .../org/gnucash/android/db/AccountsDbAdapter.java  |  5 +-
 .../org/gnucash/android/db/DatabaseAdapter.java    |  8 +-
 .../org/gnucash/android/db/DatabaseSchema.java     |  2 +-
 .../org/gnucash/android/db/MigrationHelper.java    | 56 +++++++++---
 .../org/gnucash/android/db/PricesDbAdapter.java    |  9 +-
 .../android/db/ScheduledActionDbAdapter.java       |  3 +-
 .../org/gnucash/android/db/SplitsDbAdapter.java    |  8 +-
 .../gnucash/android/db/TransactionsDbAdapter.java  |  7 +-
 .../org/gnucash/android/export/ExportParams.java   | 14 ++-
 .../java/org/gnucash/android/export/Exporter.java  |  7 --
 .../gnucash/android/export/ofx/OfxExporter.java    |  7 +-
 .../gnucash/android/export/qif/QifExporter.java    |  9 +-
 .../gnucash/android/export/xml/GncXmlExporter.java |  7 +-
 .../gnucash/android/importer/GncXmlImporter.java   | 13 +--
 .../java/org/gnucash/android/model/BaseModel.java  |  6 +-
 .../main/java/org/gnucash/android/model/Price.java |  6 +-
 .../android/ui/export/ExportFormFragment.java      | 12 +--
 .../gnucash/android/util/PreferencesHelper.java    | 71 ++++++++++++++++
 .../org/gnucash/android/util/TimestampHelper.java  | 99 ++++++++++++++++++++++
 .../test/unit/db/AccountsDbAdapterTest.java        |  6 +-
 .../android/test/unit/db/MigrationHelperTest.java  | 64 ++++++++++++++
 .../android/test/unit/db/SplitsDbAdapterTest.java  |  6 +-
 .../test/unit/db/TransactionsDbAdapterTest.java    |  6 +-
 .../android/test/unit/export/BackupTest.java       |  6 +-
 .../android/test/unit/model/AccountTest.java       |  6 +-
 .../gnucash/android/test/unit/model/MoneyTest.java |  6 +-
 .../gnucash/android/test/unit/model/SplitTest.java |  7 +-
 .../android/test/unit/model/TransactionTest.java   |  6 +-
 .../unit/{util => testutil}/GnucashTestRunner.java |  2 +-
 .../unit/{util => testutil}/ShadowCrashlytics.java |  2 +-
 .../unit/{util => testutil}/ShadowUserVoice.java   |  2 +-
 .../test/unit/util/PreferencesHelperTest.java      | 50 +++++++++++
 .../test/unit/util/TimestampHelperTest.java        | 91 ++++++++++++++++++++
 34 files changed, 501 insertions(+), 109 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
 create mode 100644 app/src/main/java/org/gnucash/android/util/TimestampHelper.java
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java
 rename app/src/test/java/org/gnucash/android/test/unit/{util => testutil}/GnucashTestRunner.java (94%)
 rename app/src/test/java/org/gnucash/android/test/unit/{util => testutil}/ShadowCrashlytics.java (91%)
 rename app/src/test/java/org/gnucash/android/test/unit/{util => testutil}/ShadowUserVoice.java (90%)
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java
 create mode 100644 app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java

diff --git a/app/build.gradle b/app/build.gradle
index b5fac63f..43650a56 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -212,6 +212,7 @@ dependencies {
 
     testCompile('org.robolectric:robolectric:3.0',
             'junit:junit:4.12',
+            'joda-time:joda-time:2.7',
             'org.assertj:assertj-core:1.7.1'
     )
     androidTestCompile ('com.android.support:support-annotations:'  + androidSupportVersion,
diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index 3298281c..1d913177 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -37,6 +37,7 @@
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.model.TransactionType;
+import org.gnucash.android.util.TimestampHelper;
 
 import java.math.BigDecimal;
 import java.sql.Timestamp;
@@ -182,7 +183,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Account account
         mReplaceStatement.bindLong(7, account.isFavorite() ? 1 : 0);
         mReplaceStatement.bindString(8, account.getFullName());
         mReplaceStatement.bindLong(9, account.isPlaceholderAccount() ? 1 : 0);
-        mReplaceStatement.bindString(10, account.getCreatedTimestamp().toString());
+        mReplaceStatement.bindString(10, TimestampHelper.getUtcStringForTimestamp(account.getCreatedTimestamp()));
         mReplaceStatement.bindLong(11, account.isHidden() ? 1 : 0);
         Commodity commodity = account.getCommodity();
         if (commodity == null)
@@ -529,7 +530,7 @@ public AccountType getAccountType(long accountId){
                         SplitEntry.COLUMN_ACCOUNT_UID,
                 new String[]{AccountEntry.TABLE_NAME + ".*"},
                 TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_MODIFIED_AT + " > ?",
-                new String[]{lastExportTimeStamp.toString()},
+                new String[]{TimestampHelper.getUtcStringForTimestamp(lastExportTimeStamp)},
                 AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID,
                 null,
                 null
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
index 2e810b56..2f0aa62f 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
@@ -29,8 +29,8 @@
 import org.gnucash.android.db.DatabaseSchema.TransactionEntry;
 import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.BaseModel;
+import org.gnucash.android.util.TimestampHelper;
 
-import java.sql.Timestamp;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -301,7 +301,7 @@ public Model getRecord(long id){
      */
     protected ContentValues populateBaseModelAttributes(@NonNull ContentValues contentValues, @NonNull Model model){
         contentValues.put(CommonColumns.COLUMN_UID, model.getUID());
-        contentValues.put(CommonColumns.COLUMN_CREATED_AT, model.getCreatedTimestamp().toString());
+        contentValues.put(CommonColumns.COLUMN_CREATED_AT, TimestampHelper.getUtcStringForTimestamp(model.getCreatedTimestamp()));
         //there is a trigger in the database for updated the modified_at column
         /* Due to the use of SQL REPLACE syntax, we insert the created_at values each time
         * (maintain the original creation time and not the time of creation of the replacement)
@@ -321,8 +321,8 @@ protected void populateBaseModelAttributes(Cursor cursor, BaseModel model){
         String modified= cursor.getString(cursor.getColumnIndexOrThrow(CommonColumns.COLUMN_MODIFIED_AT));
 
         model.setUID(uid);
-        model.setCreatedTimestamp(Timestamp.valueOf(created));
-        model.setModifiedTimestamp(Timestamp.valueOf(modified));
+        model.setCreatedTimestamp(TimestampHelper.getTimestampForUtcString(created));
+        model.setModifiedTimestamp(TimestampHelper.getTimestampForUtcString(modified));
     }
 
 	/**
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
index 15d7870c..7d833a84 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
@@ -28,7 +28,7 @@
      * Database version.
      * With any change to the database schema, this number must increase
      */
-    public static final int DATABASE_VERSION = 11;
+    public static final int DATABASE_VERSION = 12;
 
     /**
      * Database version where Splits were introduced
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index f8d91f08..87debbeb 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -24,7 +24,6 @@
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.os.Environment;
-import android.preference.PreferenceManager;
 import android.text.TextUtils;
 import android.util.Log;
 
@@ -42,6 +41,8 @@
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.Transaction;
+import org.gnucash.android.util.PreferencesHelper;
+import org.gnucash.android.util.TimestampHelper;
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
 import org.xml.sax.XMLReader;
@@ -59,6 +60,7 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.TimeZone;
 
 import javax.xml.parsers.ParserConfigurationException;
 import javax.xml.parsers.SAXParser;
@@ -645,7 +647,7 @@ static int upgradeDbToVersion8(SQLiteDatabase db) {
             //================================ END TABLE MIGRATIONS ================================
 
             // String timestamp to be used for all new created entities in migration
-            String timestamp = (new Timestamp(System.currentTimeMillis())).toString();
+            String timestamp = TimestampHelper.getUtcStringForTimestamp(TimestampHelper.getTimestampForNow());
 
             //ScheduledActionDbAdapter scheduledActionDbAdapter = new ScheduledActionDbAdapter(db);
             //SplitsDbAdapter splitsDbAdapter = new SplitsDbAdapter(db);
@@ -696,7 +698,7 @@ static int upgradeDbToVersion8(SQLiteDatabase db) {
             while (cursor.moveToNext()){
                 contentValues.clear();
                 Timestamp timestampT = new Timestamp(cursor.getLong(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_TIMESTAMP)));
-                contentValues.put(TransactionEntry.COLUMN_CREATED_AT, timestampT.toString());
+                contentValues.put(TransactionEntry.COLUMN_CREATED_AT, TimestampHelper.getUtcStringForTimestamp(timestampT));
                 long transactionId = cursor.getLong(cursor.getColumnIndexOrThrow(TransactionEntry._ID));
                 db.update(TransactionEntry.TABLE_NAME, contentValues, TransactionEntry._ID + "=" + transactionId, null);
 
@@ -1094,11 +1096,9 @@ static int upgradeDbToVersion10(SQLiteDatabase db){
 
                 boolean exportAll = Boolean.parseBoolean(tokens[2]);
                 if (exportAll){
-                    params.setExportStartTime(Timestamp.valueOf(Exporter.TIMESTAMP_ZERO));
+                    params.setExportStartTime(TimestampHelper.getTimestampForEpochZero());
                 } else {
-                    String lastExportTimeStamp = PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
-                            .getString(Exporter.PREF_LAST_EXPORT_TIME, Exporter.TIMESTAMP_ZERO);
-                    Timestamp timestamp = Timestamp.valueOf(lastExportTimeStamp);
+                    Timestamp timestamp = PreferencesHelper.getLastExportTime();
                     params.setExportStartTime(timestamp);
                 }
 
@@ -1143,10 +1143,9 @@ static int upgradeDbToVersion11(SQLiteDatabase db){
                 String tag = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TAG));
                 String[] tokens = tag.split(";");
                 try {
-                    Timestamp timestamp = Timestamp.valueOf(tokens[2]);
+                    Timestamp timestamp = TimestampHelper.getTimestampForUtcString(tokens[2]);
                 } catch (IllegalArgumentException ex) {
-                    tokens[2] = PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
-                            .getString(Exporter.PREF_LAST_EXPORT_TIME, Exporter.TIMESTAMP_ZERO);
+                    tokens[2] = TimestampHelper.getUtcStringForTimestamp(PreferencesHelper.getLastExportTime());
                 } finally {
                     tag = TextUtils.join(";", tokens);
                 }
@@ -1170,4 +1169,41 @@ static int upgradeDbToVersion11(SQLiteDatabase db){
         }
         return oldVersion;
     }
+
+    public static Timestamp subtractTimeZoneOffset(Timestamp timestamp, TimeZone timeZone) {
+        final long millisecondsToSubtract = Math.abs(timeZone.getOffset(timestamp.getTime()));
+        return new Timestamp(timestamp.getTime() - millisecondsToSubtract);
+    }
+
+    /**
+     * Upgrade database to version 12
+     * <p>
+     *     Change last_export_time Android preference to current value - N
+     *     where N is the absolute timezone offset for current user time zone.
+     *     For details see #467.
+     * </p>
+     * @param db SQLite database
+     * @return 12 if upgrade was successful, 11 otherwise
+     */
+    static int upgradeDbToVersion12(SQLiteDatabase db){
+        Log.i(MigrationHelper.LOG_TAG, "Upgrading database to version 12");
+
+        int oldVersion = 11;
+
+        try {
+
+            final Timestamp currentLastExportTime = PreferencesHelper.getLastExportTime();
+
+            final Timestamp updatedLastExportTime = subtractTimeZoneOffset(
+                    currentLastExportTime, TimeZone.getDefault());
+            PreferencesHelper.setLastExportTime(updatedLastExportTime);
+
+            oldVersion = 12;
+
+        } catch (Exception ignored){
+            // Do nothing: here oldVersion = 11.
+        }
+
+        return oldVersion;
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java b/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java
index 83645f4f..c4a230f0 100644
--- a/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java
@@ -1,17 +1,14 @@
 package org.gnucash.android.db;
 
-import android.content.ContentValues;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteStatement;
 import android.support.annotation.NonNull;
-import android.util.Log;
 import android.util.Pair;
 
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.model.Price;
-
-import java.sql.Timestamp;
+import org.gnucash.android.util.TimestampHelper;
 
 import static org.gnucash.android.db.DatabaseSchema.PriceEntry;
 
@@ -49,7 +46,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Price price) {
         mReplaceStatement.bindString(1, price.getUID());
         mReplaceStatement.bindString(2, price.getCommodityUID());
         mReplaceStatement.bindString(3, price.getCurrencyUID());
-        mReplaceStatement.bindString(4, price.getDate().toString());
+        mReplaceStatement.bindString(4, TimestampHelper.getUtcStringForTimestamp(price.getDate()));
         if (price.getSource() != null) {
             mReplaceStatement.bindString(5, price.getSource());
         }
@@ -73,7 +70,7 @@ public Price buildModelInstance(@NonNull final Cursor cursor) {
         long valueDenom   = cursor.getLong(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_VALUE_DENOM));
 
         Price price = new Price(commodityUID, currencyUID);
-        price.setDate(Timestamp.valueOf(dateString));
+        price.setDate(TimestampHelper.getTimestampForUtcString(dateString));
         price.setSource(source);
         price.setType(type);
         price.setValueNum(valueNum);
diff --git a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
index 8a98500d..cecf5ea0 100644
--- a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
@@ -24,6 +24,7 @@
 
 import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.model.ScheduledAction;
+import org.gnucash.android.util.TimestampHelper;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -102,7 +103,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final ScheduledAction
         mReplaceStatement.bindLong(6,   schedxAction.getLastRun());
         mReplaceStatement.bindLong(7,   schedxAction.getPeriod());
         mReplaceStatement.bindLong(8,   schedxAction.isEnabled() ? 1 : 0);
-        mReplaceStatement.bindString(9, schedxAction.getCreatedTimestamp().toString());
+        mReplaceStatement.bindString(9, TimestampHelper.getUtcStringForTimestamp(schedxAction.getCreatedTimestamp()));
         if (schedxAction.getTag() == null)
             mReplaceStatement.bindNull(10);
         else
diff --git a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
index 84215fc8..727db62c 100644
--- a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
@@ -27,16 +27,14 @@
 import android.util.Pair;
 
 import org.gnucash.android.app.GnuCashApplication;
-import org.gnucash.android.model.AccountType;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.TransactionType;
+import org.gnucash.android.util.TimestampHelper;
 
 import java.math.BigDecimal;
-import java.sql.Timestamp;
 import java.util.ArrayList;
-import java.util.Currency;
 import java.util.List;
 
 import static org.gnucash.android.db.DatabaseSchema.SplitEntry;
@@ -80,7 +78,7 @@ public void addRecord(@NonNull final Split split){
 
         //modifying a split means modifying the accompanying transaction as well
         updateRecord(TransactionEntry.TABLE_NAME, transactionId,
-                TransactionEntry.COLUMN_MODIFIED_AT, new Timestamp(System.currentTimeMillis()).toString());
+                TransactionEntry.COLUMN_MODIFIED_AT, TimestampHelper.getUtcStringForTimestamp(TimestampHelper.getTimestampForNow()));
     }
 
     @Override
@@ -109,7 +107,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Split split) {
         mReplaceStatement.bindLong(5,   split.getValue().getDenominator());
         mReplaceStatement.bindLong(6,   split.getQuantity().getNumerator());
         mReplaceStatement.bindLong(7,   split.getQuantity().getDenominator());
-        mReplaceStatement.bindString(8, split.getCreatedTimestamp().toString());
+        mReplaceStatement.bindString(8, TimestampHelper.getUtcStringForTimestamp(split.getCreatedTimestamp()));
         mReplaceStatement.bindString(9, split.getAccountUID());
         mReplaceStatement.bindString(10, split.getTransactionUID());
 
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index 0f9b4bfa..b4f68434 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -36,6 +36,7 @@
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
+import org.gnucash.android.util.TimestampHelper;
 
 import java.sql.Timestamp;
 import java.util.ArrayList;
@@ -187,7 +188,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Transaction tra
             commodity = CommoditiesDbAdapter.getInstance().getCommodity(transaction.getCurrencyCode());
 
         mReplaceStatement.bindString(7, commodity.getUID());
-        mReplaceStatement.bindString(8, transaction.getCreatedTimestamp().toString());
+        mReplaceStatement.bindString(8, TimestampHelper.getUtcStringForTimestamp(transaction.getCreatedTimestamp()));
 
         if (transaction.getScheduledActionUID() == null)
             mReplaceStatement.bindNull(9);
@@ -643,11 +644,11 @@ public Timestamp getTimestampOfLastModification(){
                 new String[]{"MAX(" + TransactionEntry.COLUMN_MODIFIED_AT + ")"},
                 null, null, null, null, null);
 
-        Timestamp timestamp = new Timestamp(System.currentTimeMillis());
+        Timestamp timestamp = TimestampHelper.getTimestampForNow();
         if (cursor.moveToFirst()){
             String timeString = cursor.getString(0);
             if (timeString != null){ //in case there were no transactions in the XML file (account structure only)
-                timestamp = Timestamp.valueOf(timeString);
+                timestamp = TimestampHelper.getTimestampForUtcString(timeString);
             }
         }
         cursor.close();
diff --git a/app/src/main/java/org/gnucash/android/export/ExportParams.java b/app/src/main/java/org/gnucash/android/export/ExportParams.java
index 97232940..71002ed2 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportParams.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportParams.java
@@ -16,12 +16,8 @@
 
 package org.gnucash.android.export;
 
-import android.preference.PreferenceManager;
-
-import org.gnucash.android.BuildConfig;
-import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.ui.export.ExportFormFragment;
+import org.gnucash.android.util.TimestampHelper;
 
 import java.sql.Timestamp;
 
@@ -50,7 +46,7 @@
     /**
      * All transactions created after this date will be exported
      */
-    private Timestamp mExportStartTime = Timestamp.valueOf(Exporter.TIMESTAMP_ZERO);
+    private Timestamp mExportStartTime = TimestampHelper.getTimestampForEpochZero();
 
     /**
      * Flag to determine if all transactions should be deleted after exporting is complete
@@ -138,7 +134,7 @@ public void setExportTarget(ExportTarget mExportTarget) {
 
     @Override
     public String toString() {
-        return "Export all transactions created since " + mExportStartTime.toString()
+        return "Export all transactions created since " + TimestampHelper.getUtcStringForTimestamp(mExportStartTime) + " UTC"
                 + " as "+ mExportFormat.name() + " to " + mExportTarget.name();
     }
 
@@ -151,7 +147,7 @@ public String toCsv(){
         String separator = ";";
 
         return mExportFormat.name() + separator + mExportTarget.name() + separator
-                + mExportStartTime.toString() + separator
+                + TimestampHelper.getUtcStringForTimestamp(mExportStartTime) + separator
                 + Boolean.toString(mDeleteTransactionsAfterExport);
     }
 
@@ -164,7 +160,7 @@ public static ExportParams parseCsv(String csvParams){
         String[] tokens = csvParams.split(";");
         ExportParams params = new ExportParams(ExportFormat.valueOf(tokens[0]));
         params.setExportTarget(ExportTarget.valueOf(tokens[1]));
-        params.setExportStartTime(Timestamp.valueOf(tokens[2]));
+        params.setExportStartTime(TimestampHelper.getTimestampForUtcString(tokens[2]));
         params.setDeleteTransactionsAfterExport(Boolean.parseBoolean(tokens[3]));
 
         return params;
diff --git a/app/src/main/java/org/gnucash/android/export/Exporter.java b/app/src/main/java/org/gnucash/android/export/Exporter.java
index dc956fd9..8d585531 100644
--- a/app/src/main/java/org/gnucash/android/export/Exporter.java
+++ b/app/src/main/java/org/gnucash/android/export/Exporter.java
@@ -35,7 +35,6 @@
 import org.gnucash.android.db.TransactionsDbAdapter;
 
 import java.io.File;
-import java.sql.Timestamp;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.Date;
@@ -87,12 +86,6 @@
     private static final SimpleDateFormat EXPORT_FILENAME_DATE_FORMAT = new SimpleDateFormat("yyyyMMdd_HHmmss", Locale.US);
 
     /**
-     * last export time in preferences
-     */
-    public static final String PREF_LAST_EXPORT_TIME = "last_export_time";
-
-    public static final String TIMESTAMP_ZERO = new Timestamp(0).toString();
-    /**
      * Adapter for retrieving accounts to export
      * Subclasses should close this object when they are done with exporting
      */
diff --git a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
index c29e426b..ca71d1db 100644
--- a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
@@ -29,6 +29,8 @@
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.Transaction;
+import org.gnucash.android.util.PreferencesHelper;
+import org.gnucash.android.util.TimestampHelper;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
 import org.w3c.dom.Node;
@@ -41,7 +43,6 @@
 import java.io.OutputStreamWriter;
 import java.io.StringWriter;
 import java.io.Writer;
-import java.sql.Timestamp;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -137,18 +138,16 @@ private String generateOfxExport() throws ExporterException {
         boolean useXmlHeader = PreferenceManager.getDefaultSharedPreferences(mContext)
                 .getBoolean(mContext.getString(R.string.key_xml_ofx_header), false);
 
-        String timeStamp = new Timestamp(System.currentTimeMillis()).toString();
+        PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampForNow());
 
         StringWriter stringWriter = new StringWriter();
         //if we want SGML OFX headers, write first to string and then prepend header
         if (useXmlHeader){
             write(document, stringWriter, false);
-            PreferenceManager.getDefaultSharedPreferences(mContext).edit().putString(Exporter.PREF_LAST_EXPORT_TIME, timeStamp).apply();
             return stringWriter.toString();
         } else {
             Node ofxNode = document.getElementsByTagName("OFX").item(0);
             write(ofxNode, stringWriter, true);
-            PreferenceManager.getDefaultSharedPreferences(mContext).edit().putString(Exporter.PREF_LAST_EXPORT_TIME, timeStamp).apply();
             return OfxHelper.OFX_SGML_HEADER + '\n' + stringWriter.toString();
         }
     }
diff --git a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
index 6c1fcfde..69946d1c 100644
--- a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
@@ -18,12 +18,13 @@
 
 import android.content.ContentValues;
 import android.database.Cursor;
-import android.preference.PreferenceManager;
 
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.export.ExportParams;
 import org.gnucash.android.export.Exporter;
+import org.gnucash.android.util.PreferencesHelper;
+import org.gnucash.android.util.TimestampHelper;
 
 import java.io.BufferedReader;
 import java.io.BufferedWriter;
@@ -34,7 +35,6 @@
 import java.io.IOException;
 import java.io.OutputStreamWriter;
 import java.math.BigDecimal;
-import java.sql.Timestamp;
 import java.util.ArrayList;
 import java.util.Currency;
 import java.util.List;
@@ -60,7 +60,7 @@ public QifExporter(ExportParams params){
         final String newLine = "\n";
         TransactionsDbAdapter transactionsDbAdapter = mTransactionsDbAdapter;
         try {
-            String lastExportTimeStamp = mExportParams.getExportStartTime().toString();
+            String lastExportTimeStamp = TimestampHelper.getUtcStringForTimestamp(mExportParams.getExportStartTime());
             Cursor cursor = transactionsDbAdapter.fetchTransactionsWithSplitsWithTransactionAccount(
                     new String[]{
                             TransactionEntry.TABLE_NAME + "_" + TransactionEntry.COLUMN_UID + " AS trans_uid",
@@ -216,8 +216,7 @@ public QifExporter(ExportParams params){
             transactionsDbAdapter.updateTransaction(contentValues, null, null);
 
             /// export successful
-            String timeStamp = new Timestamp(System.currentTimeMillis()).toString();
-            PreferenceManager.getDefaultSharedPreferences(mContext).edit().putString(Exporter.PREF_LAST_EXPORT_TIME, timeStamp).apply();
+            PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampForNow());
             return splitQIF(file);
         } catch (IOException e) {
             throw new ExporterException(mExportParams, e);
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index eecaeafb..f41aa127 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -37,6 +37,7 @@
 import org.gnucash.android.model.PeriodType;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.model.TransactionType;
+import org.gnucash.android.util.TimestampHelper;
 import org.xmlpull.v1.XmlPullParserFactory;
 import org.xmlpull.v1.XmlSerializer;
 
@@ -341,7 +342,7 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_DATE_POSTED);
 
                 // date entered, time when the transaction was actually created
-                Timestamp timeEntered = Timestamp.valueOf(cursor.getString(cursor.getColumnIndexOrThrow("trans_date_posted")));
+                Timestamp timeEntered = TimestampHelper.getTimestampForUtcString(cursor.getString(cursor.getColumnIndexOrThrow("trans_date_posted")));
                 String dateEntered = GncXmlHelper.formatDate(timeEntered.getTime());
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_DATE_ENTERED);
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_TS_DATE);
@@ -538,7 +539,7 @@ private void exportScheduledTransactions(XmlSerializer xmlSerializer) throws IOE
 
             //start date
             String createdTimestamp = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_CREATED_AT));
-            long scheduleStartTime = Timestamp.valueOf(createdTimestamp).getTime();
+            long scheduleStartTime = TimestampHelper.getTimestampForUtcString(createdTimestamp).getTime();
             serializeDate(xmlSerializer, GncXmlHelper.TAG_SX_START, scheduleStartTime);
 
             long lastRunTime = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_LAST_RUN));
@@ -658,7 +659,7 @@ private void exportPrices(XmlSerializer xmlSerializer) throws IOException {
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_COMMODITY_ID);
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_PRICE_CURRENCY);
                 // time
-                String strDate = GncXmlHelper.formatDate(Timestamp.valueOf(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_DATE))).getTime());
+                String strDate = GncXmlHelper.formatDate(TimestampHelper.getTimestampForUtcString(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_DATE))).getTime());
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_PRICE_TIME);
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_TS_DATE);
                 xmlSerializer.text(strDate);
diff --git a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
index eb9eea9a..a256ab8c 100644
--- a/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
+++ b/app/src/main/java/org/gnucash/android/importer/GncXmlImporter.java
@@ -17,12 +17,10 @@
 package org.gnucash.android.importer;
 
 import android.database.sqlite.SQLiteDatabase;
-import android.preference.PreferenceManager;
 import android.util.Log;
 
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.TransactionsDbAdapter;
-import org.gnucash.android.export.Exporter;
+import org.gnucash.android.util.PreferencesHelper;
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
 import org.xml.sax.XMLReader;
@@ -31,7 +29,6 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.PushbackInputStream;
-import java.sql.Timestamp;
 import java.util.zip.GZIPInputStream;
 
 import javax.xml.parsers.ParserConfigurationException;
@@ -94,11 +91,9 @@ public static void parse(InputStream gncXmlInputStream) throws ParserConfigurati
         xr.parse(new InputSource(bos));
         long endTime = System.nanoTime();
 
-        Timestamp timeStamp = TransactionsDbAdapter.getInstance().getTimestampOfLastModification();
-        PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
-                .edit()
-                .putString(Exporter.PREF_LAST_EXPORT_TIME, timeStamp.toString())
-                .apply();
+        PreferencesHelper.setLastExportTime(
+                TransactionsDbAdapter.getInstance().getTimestampOfLastModification()
+        );
 
         Log.d(GncXmlImporter.class.getSimpleName(), String.format("%d ns spent on importing the file", endTime-startTime));
     }
diff --git a/app/src/main/java/org/gnucash/android/model/BaseModel.java b/app/src/main/java/org/gnucash/android/model/BaseModel.java
index cf741495..38c68802 100644
--- a/app/src/main/java/org/gnucash/android/model/BaseModel.java
+++ b/app/src/main/java/org/gnucash/android/model/BaseModel.java
@@ -16,6 +16,8 @@
 
 package org.gnucash.android.model;
 
+import org.gnucash.android.util.TimestampHelper;
+
 import java.sql.Timestamp;
 import java.util.UUID;
 
@@ -40,8 +42,8 @@
      * A unique ID will be generated on demand with a call to {@link #getUID()}</p>
      */
     public BaseModel(){
-        mCreatedTimestamp = new Timestamp(System.currentTimeMillis());
-        mModifiedTimestamp = new Timestamp(System.currentTimeMillis());
+        mCreatedTimestamp = TimestampHelper.getTimestampForNow();
+        mModifiedTimestamp = TimestampHelper.getTimestampForNow();
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/model/Price.java b/app/src/main/java/org/gnucash/android/model/Price.java
index 084da550..b0c2f0cc 100644
--- a/app/src/main/java/org/gnucash/android/model/Price.java
+++ b/app/src/main/java/org/gnucash/android/model/Price.java
@@ -1,5 +1,7 @@
 package org.gnucash.android.model;
 
+import org.gnucash.android.util.TimestampHelper;
+
 import java.sql.Timestamp;
 
 /**
@@ -21,7 +23,7 @@
     public static final String SOURCE_USER = "user:xfer-dialog";
 
     public Price(){
-        mDate = new Timestamp(System.currentTimeMillis());
+        mDate = TimestampHelper.getTimestampForNow();
     }
 
     /**
@@ -32,7 +34,7 @@ public Price(){
     public Price(String commodityUID, String currencyUID){
         this.mCommodityUID = commodityUID;
         this.mCurrencyUID = currencyUID;
-        mDate = new Timestamp(System.currentTimeMillis());
+        mDate = TimestampHelper.getTimestampForNow();
     }
 
     public String getCommodityUID() {
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 410b48a7..180e4b3f 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -21,7 +21,6 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
-import android.content.res.Resources;
 import android.os.Build;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
@@ -52,7 +51,6 @@
 import com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;
 import com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter;
 import com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog;
-import com.crashlytics.android.Crashlytics;
 import com.dropbox.sync.android.DbxAccountManager;
 
 import org.gnucash.android.R;
@@ -61,7 +59,6 @@
 import org.gnucash.android.export.ExportAsyncTask;
 import org.gnucash.android.export.ExportFormat;
 import org.gnucash.android.export.ExportParams;
-import org.gnucash.android.export.Exporter;
 import org.gnucash.android.model.BaseModel;
 import org.gnucash.android.model.ScheduledAction;
 import org.gnucash.android.ui.account.AccountsActivity;
@@ -69,9 +66,10 @@
 import org.gnucash.android.ui.settings.SettingsActivity;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.util.RecurrenceParser;
+import org.gnucash.android.util.PreferencesHelper;
+import org.gnucash.android.util.TimestampHelper;
 
 import java.sql.Timestamp;
-import java.text.DateFormat;
 import java.text.ParseException;
 import java.util.Calendar;
 import java.util.Date;
@@ -267,7 +265,7 @@ private void startExport(){
 		ExportParams exportParameters = new ExportParams(mExportFormat);
 
 		if (mExportAllSwitch.isChecked()){
-			exportParameters.setExportStartTime(Timestamp.valueOf(Exporter.TIMESTAMP_ZERO));
+			exportParameters.setExportStartTime(TimestampHelper.getTimestampForEpochZero());
 		} else {
 			exportParameters.setExportStartTime(new Timestamp(mExportStartCalendar.getTimeInMillis()));
 		}
@@ -350,9 +348,7 @@ public void onNothingSelected(AdapterView<?> parent) {
 		mDestinationSpinner.setSelection(position);
 
 		//**************** export start time bindings ******************
-		String lastExportTimeStamp = PreferenceManager.getDefaultSharedPreferences(getActivity())
-				.getString(Exporter.PREF_LAST_EXPORT_TIME, Exporter.TIMESTAMP_ZERO);
-		Timestamp timestamp = Timestamp.valueOf(lastExportTimeStamp);
+		Timestamp timestamp = PreferencesHelper.getLastExportTime();
 		mExportStartCalendar.setTimeInMillis(timestamp.getTime());
 
 		Date date = new Date(timestamp.getTime());
diff --git a/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
new file mode 100644
index 00000000..b48ef746
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
@@ -0,0 +1,71 @@
+/*
+ * Copyright (c) 2015 Alceu Rodrigues Neto <alceurneto@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.util;
+
+import android.preference.PreferenceManager;
+import android.util.Log;
+
+import org.gnucash.android.app.GnuCashApplication;
+
+import java.sql.Timestamp;
+
+/**
+ * A utility class to deal with Android Preferences in a centralized way.
+ */
+public final class PreferencesHelper {
+
+    /**
+     * Should be not instantiated.
+     */
+    private PreferencesHelper() {}
+
+    /**
+     * Tag for logging
+     */
+    protected static final String LOG_TAG = "PreferencesHelper";
+
+
+    private static final String PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE = "PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE";
+    private static final String PREFERENCE_LAST_EXPORT_TIME_KEY = "last_export_time";
+
+    /**
+     * Set the last export time in UTC time zone.
+     * A new export operations will fetch transactions based on this value.
+     *
+     * @param lastExportTime the last export time to set.
+     */
+    public static void setLastExportTime(Timestamp lastExportTime) {
+        final String utcString = TimestampHelper.getUtcStringForTimestamp(lastExportTime);
+        Log.d(LOG_TAG, "Storing '" + utcString + "' as lastExportTime in Android Preferences.");
+        PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
+                .edit()
+                .putString(PREFERENCE_LAST_EXPORT_TIME_KEY, utcString)
+                .apply();
+    }
+
+    /**
+     * Get the time for the last export operation.
+     *
+     * @return A {@link Timestamp} with the time.
+     */
+    public static Timestamp getLastExportTime() {
+        final String utcString = PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
+                .getString(PREFERENCE_LAST_EXPORT_TIME_KEY, PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE);
+        Log.d(LOG_TAG, "Retrieving '" + utcString + "' as lastExportTime from Android Preferences.");
+        return PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE.equals(utcString) ?
+                TimestampHelper.getTimestampForEpochZero() : TimestampHelper.getTimestampForUtcString(utcString);
+    }
+}
\ No newline at end of file
diff --git a/app/src/main/java/org/gnucash/android/util/TimestampHelper.java b/app/src/main/java/org/gnucash/android/util/TimestampHelper.java
new file mode 100644
index 00000000..ca021ca6
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/util/TimestampHelper.java
@@ -0,0 +1,99 @@
+/*
+ * Copyright (c) 2016 Alceu Rodrigues Neto <alceurneto@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.util;
+
+import org.joda.time.DateTime;
+import org.joda.time.DateTimeZone;
+import org.joda.time.format.DateTimeFormat;
+import org.joda.time.format.DateTimeFormatter;
+
+import java.sql.Timestamp;
+
+/**
+ * A utility class to deal with {@link Timestamp} operations in a centralized way.
+ */
+public final class TimestampHelper {
+
+    /**
+     * Should be not instantiated.
+     */
+    private TimestampHelper() {}
+
+    /**
+     * We are using Joda Time classes because they are thread-safe.
+     */
+    private static final DateTimeZone UTC_TIME_ZONE = DateTimeZone.forID("UTC");
+    private static final DateTimeFormatter UTC_DATE_FORMAT =
+            DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss");
+    private static final DateTimeFormatter UTC_DATE_WITH_MILLISECONDS_FORMAT =
+            DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss.SSS");
+
+    /**
+     * Get a {@link String} representing the {@link Timestamp}
+     * in UTC time zone and 'yyyy-MM-dd HH:mm:ss.SSS' format.
+     *
+     * @param timestamp The {@link Timestamp} to format.
+     * @return The formatted {@link String}.
+     */
+    public static String getUtcStringForTimestamp(Timestamp timestamp) {
+        return UTC_DATE_WITH_MILLISECONDS_FORMAT.withZone(UTC_TIME_ZONE).print(timestamp.getTime());
+    }
+
+    /**
+     * @return A {@link Timestamp} with time in milliseconds equals to zero.
+     */
+    public static Timestamp getTimestampForEpochZero() {
+        return new Timestamp(0);
+    }
+
+    /**
+     * Get the {@link Timestamp} with the value of given UTC {@link String}.
+     * The {@link String} should be a representation in UTC time zone with the following format
+     * 'yyyy-MM-dd HH:mm:ss.SSS' OR 'yyyy-MM-dd HH:mm:ss' otherwise an IllegalArgumentException
+     * will be throw.
+     *
+     * @param utcString A {@link String} in UTC.
+     * @return A {@link Timestamp} for given utcString.
+     */
+    public static Timestamp getTimestampForUtcString(String utcString) {
+        DateTime dateTime;
+        try {
+
+            dateTime = UTC_DATE_WITH_MILLISECONDS_FORMAT.withZone(UTC_TIME_ZONE).parseDateTime(utcString);
+            return new Timestamp(dateTime.getMillis());
+
+        } catch (IllegalArgumentException firstException) {
+            try {
+                // In case of parsing of string without milliseconds.
+                dateTime = UTC_DATE_FORMAT.withZone(UTC_TIME_ZONE).parseDateTime(utcString);
+                return new Timestamp(dateTime.getMillis());
+
+            } catch (IllegalArgumentException secondException) {
+                // If we are here:
+                // - The utcString has an invalid format OR
+                // - We are missing some relevant pattern.
+                throw new IllegalArgumentException("Unknown utcString = '" + utcString + "'.", secondException);
+            }
+        }
+    }
+
+    /**
+     * @return A {@link Timestamp} initialized with the system current time.
+     */
+    public static Timestamp getTimestampForNow() {
+        return new Timestamp(System.currentTimeMillis());
+    }
+}
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
index afb7f1c5..06a8d021 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java
@@ -18,9 +18,9 @@
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.model.TransactionType;
-import org.gnucash.android.test.unit.util.GnucashTestRunner;
-import org.gnucash.android.test.unit.util.ShadowCrashlytics;
-import org.gnucash.android.test.unit.util.ShadowUserVoice;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java
new file mode 100644
index 00000000..517b4c47
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java
@@ -0,0 +1,64 @@
+/*
+ * Copyright (c) 2016 Alceu Rodrigues Neto <alceurneto@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.test.unit.db;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.db.MigrationHelper;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
+import org.gnucash.android.util.TimestampHelper;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import java.sql.Timestamp;
+import java.util.TimeZone;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+@RunWith(GnucashTestRunner.class)
+@Config(constants = BuildConfig.class, sdk = 21, packageName = "org.gnucash.android", shadows = {ShadowCrashlytics.class, ShadowUserVoice.class})
+public class MigrationHelperTest {
+    @Test
+    public void shouldSubtractTimeZoneOffset() {
+        /**
+         * The values used here are well known.
+         * See https://en.wikipedia.org/wiki/Unix_time#Notable_events_in_Unix_time
+         * for details.
+         */
+
+        final long unixBillennium = 1_000_000_000 * 1000L;
+        final Timestamp unixBillenniumTimestamp = new Timestamp(unixBillennium);
+        final String unixBillenniumUtcString = "2001-09-09 01:46:40.000";
+        final String unixBillenniumUtcStringAfterSubtract = "2001-09-09 00:46:40.000";
+
+        TimeZone timeZone = TimeZone.getTimeZone("GMT-1:00");
+        Timestamp result = MigrationHelper.subtractTimeZoneOffset(unixBillenniumTimestamp, timeZone);
+        assertThat(TimestampHelper.getUtcStringForTimestamp(result))
+                .isEqualTo(unixBillenniumUtcStringAfterSubtract);
+
+        timeZone = TimeZone.getTimeZone("GMT+1:00");
+        result = MigrationHelper.subtractTimeZoneOffset(unixBillenniumTimestamp, timeZone);
+        assertThat(TimestampHelper.getUtcStringForTimestamp(result))
+                .isEqualTo(unixBillenniumUtcStringAfterSubtract);
+
+        timeZone = TimeZone.getTimeZone("GMT+0:00");
+        result = MigrationHelper.subtractTimeZoneOffset(unixBillenniumTimestamp, timeZone);
+        assertThat(TimestampHelper.getUtcStringForTimestamp(result))
+                .isEqualTo(unixBillenniumUtcString);
+    }
+}
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest.java
index 1685ee24..9f2f1c20 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/SplitsDbAdapterTest.java
@@ -11,9 +11,9 @@
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
-import org.gnucash.android.test.unit.util.GnucashTestRunner;
-import org.gnucash.android.test.unit.util.ShadowCrashlytics;
-import org.gnucash.android.test.unit.util.ShadowUserVoice;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
index 6b5432c7..caf0fa3b 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/TransactionsDbAdapterTest.java
@@ -10,9 +10,9 @@
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
-import org.gnucash.android.test.unit.util.GnucashTestRunner;
-import org.gnucash.android.test.unit.util.ShadowCrashlytics;
-import org.gnucash.android.test.unit.util.ShadowUserVoice;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/app/src/test/java/org/gnucash/android/test/unit/export/BackupTest.java b/app/src/test/java/org/gnucash/android/test/unit/export/BackupTest.java
index 411299b5..67418f77 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/export/BackupTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/export/BackupTest.java
@@ -21,9 +21,9 @@
 import org.gnucash.android.export.Exporter;
 import org.gnucash.android.export.xml.GncXmlExporter;
 import org.gnucash.android.test.unit.db.AccountsDbAdapterTest;
-import org.gnucash.android.test.unit.util.GnucashTestRunner;
-import org.gnucash.android.test.unit.util.ShadowCrashlytics;
-import org.gnucash.android.test.unit.util.ShadowUserVoice;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
index adbbbb11..1c378c78 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/AccountTest.java
@@ -20,9 +20,9 @@
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Transaction;
-import org.gnucash.android.test.unit.util.GnucashTestRunner;
-import org.gnucash.android.test.unit.util.ShadowCrashlytics;
-import org.gnucash.android.test.unit.util.ShadowUserVoice;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java
index fd5eb6a8..02408af7 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/MoneyTest.java
@@ -19,9 +19,9 @@
 import org.gnucash.android.BuildConfig;
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
-import org.gnucash.android.test.unit.util.GnucashTestRunner;
-import org.gnucash.android.test.unit.util.ShadowCrashlytics;
-import org.gnucash.android.test.unit.util.ShadowUserVoice;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/SplitTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/SplitTest.java
index 35a0af48..262c6cda 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/SplitTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/SplitTest.java
@@ -6,15 +6,14 @@
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
 import org.gnucash.android.model.TransactionType;
-import org.gnucash.android.test.unit.util.GnucashTestRunner;
-import org.gnucash.android.test.unit.util.ShadowCrashlytics;
-import org.gnucash.android.test.unit.util.ShadowUserVoice;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
 import java.math.BigDecimal;
-import java.util.Currency;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
diff --git a/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java b/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java
index 486f1793..fa2e9b09 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/model/TransactionTest.java
@@ -5,9 +5,9 @@
 import org.gnucash.android.model.Money;
 import org.gnucash.android.model.Split;
 import org.gnucash.android.model.Transaction;
-import org.gnucash.android.test.unit.util.GnucashTestRunner;
-import org.gnucash.android.test.unit.util.ShadowCrashlytics;
-import org.gnucash.android.test.unit.util.ShadowUserVoice;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/GnucashTestRunner.java b/app/src/test/java/org/gnucash/android/test/unit/testutil/GnucashTestRunner.java
similarity index 94%
rename from app/src/test/java/org/gnucash/android/test/unit/util/GnucashTestRunner.java
rename to app/src/test/java/org/gnucash/android/test/unit/testutil/GnucashTestRunner.java
index 48c75462..635d3ce2 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/util/GnucashTestRunner.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/testutil/GnucashTestRunner.java
@@ -1,4 +1,4 @@
-package org.gnucash.android.test.unit.util;
+package org.gnucash.android.test.unit.testutil;
 
 import com.crashlytics.android.Crashlytics;
 import com.uservoice.uservoicesdk.UserVoice;
diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/ShadowCrashlytics.java b/app/src/test/java/org/gnucash/android/test/unit/testutil/ShadowCrashlytics.java
similarity index 91%
rename from app/src/test/java/org/gnucash/android/test/unit/util/ShadowCrashlytics.java
rename to app/src/test/java/org/gnucash/android/test/unit/testutil/ShadowCrashlytics.java
index 5d8dcfaf..44a12c35 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/util/ShadowCrashlytics.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/testutil/ShadowCrashlytics.java
@@ -1,4 +1,4 @@
-package org.gnucash.android.test.unit.util;
+package org.gnucash.android.test.unit.testutil;
 
 import android.content.Context;
 
diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/ShadowUserVoice.java b/app/src/test/java/org/gnucash/android/test/unit/testutil/ShadowUserVoice.java
similarity index 90%
rename from app/src/test/java/org/gnucash/android/test/unit/util/ShadowUserVoice.java
rename to app/src/test/java/org/gnucash/android/test/unit/testutil/ShadowUserVoice.java
index 31f3f476..b655e0c4 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/util/ShadowUserVoice.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/testutil/ShadowUserVoice.java
@@ -1,4 +1,4 @@
-package org.gnucash.android.test.unit.util;
+package org.gnucash.android.test.unit.testutil;
 
 import android.content.Context;
 
diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java b/app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java
new file mode 100644
index 00000000..ceb7d0ae
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java
@@ -0,0 +1,50 @@
+/*
+ * Copyright (c) 2016 Alceu Rodrigues Neto <alceurneto@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.test.unit.util;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
+import org.gnucash.android.util.PreferencesHelper;
+import org.gnucash.android.util.TimestampHelper;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import java.sql.Timestamp;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+@RunWith(GnucashTestRunner.class)
+@Config(constants = BuildConfig.class, sdk = 21, packageName = "org.gnucash.android", shadows = {ShadowCrashlytics.class, ShadowUserVoice.class})
+public class PreferencesHelperTest {
+
+    @Test
+    public void shouldGetLastExportTimeDefaultValue() {
+        final Timestamp lastExportTime = PreferencesHelper.getLastExportTime();
+        assertThat(lastExportTime).isEqualTo(TimestampHelper.getTimestampForEpochZero());
+    }
+
+    @Test
+    public void shouldGetLastExportTimeCurrentValue() {
+        final long goldenBoyBirthday = 1190136000L * 1000;
+        final Timestamp goldenBoyBirthdayTimestamp = new Timestamp(goldenBoyBirthday);
+        PreferencesHelper.setLastExportTime(goldenBoyBirthdayTimestamp);
+        assertThat(PreferencesHelper.getLastExportTime())
+                .isEqualTo(goldenBoyBirthdayTimestamp);
+    }
+}
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java b/app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java
new file mode 100644
index 00000000..2c9d1091
--- /dev/null
+++ b/app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java
@@ -0,0 +1,91 @@
+/*
+ * Copyright (c) 2016 Alceu Rodrigues Neto <alceurneto@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gnucash.android.test.unit.util;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
+import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
+import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
+import org.gnucash.android.util.TimestampHelper;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import java.sql.Timestamp;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+@RunWith(GnucashTestRunner.class)
+@Config(constants = BuildConfig.class, sdk = 21, packageName = "org.gnucash.android", shadows = {ShadowCrashlytics.class, ShadowUserVoice.class})
+public class TimestampHelperTest {
+
+    @Test
+    public void shouldGetUtcStringForTimestamp() {
+        /**
+         * The values used here are well known.
+         * See https://en.wikipedia.org/wiki/Unix_time#Notable_events_in_Unix_time
+         * for details.
+         */
+
+        final long unixBillennium = 1_000_000_000 * 1000L;
+        final String unixBillenniumUtcString = "2001-09-09 01:46:40.000";
+        final Timestamp unixBillenniumTimestamp = new Timestamp(unixBillennium);
+        assertThat(TimestampHelper.getUtcStringForTimestamp(unixBillenniumTimestamp))
+                .isEqualTo(unixBillenniumUtcString);
+
+        final long the1234567890thSecond = 1234567890 * 1000L;
+        final String the1234567890thSecondUtcString = "2009-02-13 23:31:30.000";
+        final Timestamp the1234567890thSecondTimestamp = new Timestamp(the1234567890thSecond);
+        assertThat(TimestampHelper.getUtcStringForTimestamp(the1234567890thSecondTimestamp))
+                .isEqualTo(the1234567890thSecondUtcString);
+    }
+
+    @Test
+    public void shouldGetTimestampForEpochZero() {
+        Timestamp epochZero = TimestampHelper.getTimestampForEpochZero();
+        assertThat(epochZero.getTime()).isZero();
+    }
+
+    @Test
+    public void shouldGetTimestampForUtcString() {
+        final long unixBillennium = 1_000_000_000 * 1000L;
+        final String unixBillenniumUtcString = "2001-09-09 01:46:40";
+        final String unixBillenniumWithMillisecondsUtcString = "2001-09-09 01:46:40.000";
+        final Timestamp unixBillenniumTimestamp = new Timestamp(unixBillennium);
+        assertThat(TimestampHelper.getTimestampForUtcString(unixBillenniumUtcString))
+                .isEqualTo(unixBillenniumTimestamp);
+        assertThat(TimestampHelper.getTimestampForUtcString(unixBillenniumWithMillisecondsUtcString))
+                .isEqualTo(unixBillenniumTimestamp);
+
+        final long the1234567890thSecond = 1234567890 * 1000L;
+        final String the1234567890thSecondUtcString = "2009-02-13 23:31:30";
+        final String the1234567890thSecondWithMillisecondsUtcString = "2009-02-13 23:31:30.000";
+        final Timestamp the1234567890thSecondTimestamp = new Timestamp(the1234567890thSecond);
+        assertThat(TimestampHelper.getTimestampForUtcString(the1234567890thSecondUtcString))
+                .isEqualTo(the1234567890thSecondTimestamp);
+        assertThat(TimestampHelper.getTimestampForUtcString(the1234567890thSecondWithMillisecondsUtcString))
+                .isEqualTo(the1234567890thSecondTimestamp);
+    }
+
+    @Test
+    public void shouldGetTimestampForNow() {
+        final long before = System.currentTimeMillis();
+        final long now = TimestampHelper.getTimestampForNow().getTime();
+        final long after = System.currentTimeMillis();
+        assertThat(now).isGreaterThanOrEqualTo(before)
+                       .isLessThanOrEqualTo(after);
+    }
+}
\ No newline at end of file

From f5e8cac3548e26caa463860a1eb96ebf3aa33087 Mon Sep 17 00:00:00 2001
From: alceurneto <alceurneto@gmail.com>
Date: Sat, 6 Feb 2016 10:51:01 -0200
Subject: [PATCH 12/16] Some refactoring (Fixes #467 and fixes #464).

---
 .../org/gnucash/android/db/AccountsDbAdapter.java  |  4 ++--
 .../org/gnucash/android/db/DatabaseAdapter.java    |  6 +++---
 .../org/gnucash/android/db/MigrationHelper.java    | 10 ++++-----
 .../org/gnucash/android/db/PricesDbAdapter.java    |  4 ++--
 .../android/db/ScheduledActionDbAdapter.java       |  2 +-
 .../org/gnucash/android/db/SplitsDbAdapter.java    |  4 ++--
 .../gnucash/android/db/TransactionsDbAdapter.java  |  6 +++---
 .../org/gnucash/android/export/ExportParams.java   |  8 ++++----
 .../gnucash/android/export/ofx/OfxExporter.java    |  2 +-
 .../gnucash/android/export/qif/QifExporter.java    |  4 ++--
 .../gnucash/android/export/xml/GncXmlExporter.java |  6 +++---
 .../java/org/gnucash/android/model/BaseModel.java  |  4 ++--
 .../main/java/org/gnucash/android/model/Price.java |  4 ++--
 .../android/ui/export/ExportFormFragment.java      |  2 +-
 .../gnucash/android/util/PreferencesHelper.java    |  4 ++--
 .../org/gnucash/android/util/TimestampHelper.java  |  8 ++++----
 .../android/test/unit/db/MigrationHelperTest.java  |  6 +++---
 .../test/unit/util/PreferencesHelperTest.java      |  2 +-
 .../test/unit/util/TimestampHelperTest.java        | 24 +++++++++++-----------
 19 files changed, 55 insertions(+), 55 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index 1d913177..07aad7a7 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -183,7 +183,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Account account
         mReplaceStatement.bindLong(7, account.isFavorite() ? 1 : 0);
         mReplaceStatement.bindString(8, account.getFullName());
         mReplaceStatement.bindLong(9, account.isPlaceholderAccount() ? 1 : 0);
-        mReplaceStatement.bindString(10, TimestampHelper.getUtcStringForTimestamp(account.getCreatedTimestamp()));
+        mReplaceStatement.bindString(10, TimestampHelper.getUtcStringFromTimestamp(account.getCreatedTimestamp()));
         mReplaceStatement.bindLong(11, account.isHidden() ? 1 : 0);
         Commodity commodity = account.getCommodity();
         if (commodity == null)
@@ -530,7 +530,7 @@ public AccountType getAccountType(long accountId){
                         SplitEntry.COLUMN_ACCOUNT_UID,
                 new String[]{AccountEntry.TABLE_NAME + ".*"},
                 TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_MODIFIED_AT + " > ?",
-                new String[]{TimestampHelper.getUtcStringForTimestamp(lastExportTimeStamp)},
+                new String[]{TimestampHelper.getUtcStringFromTimestamp(lastExportTimeStamp)},
                 AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID,
                 null,
                 null
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
index 2f0aa62f..705474ae 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
@@ -301,7 +301,7 @@ public Model getRecord(long id){
      */
     protected ContentValues populateBaseModelAttributes(@NonNull ContentValues contentValues, @NonNull Model model){
         contentValues.put(CommonColumns.COLUMN_UID, model.getUID());
-        contentValues.put(CommonColumns.COLUMN_CREATED_AT, TimestampHelper.getUtcStringForTimestamp(model.getCreatedTimestamp()));
+        contentValues.put(CommonColumns.COLUMN_CREATED_AT, TimestampHelper.getUtcStringFromTimestamp(model.getCreatedTimestamp()));
         //there is a trigger in the database for updated the modified_at column
         /* Due to the use of SQL REPLACE syntax, we insert the created_at values each time
         * (maintain the original creation time and not the time of creation of the replacement)
@@ -321,8 +321,8 @@ protected void populateBaseModelAttributes(Cursor cursor, BaseModel model){
         String modified= cursor.getString(cursor.getColumnIndexOrThrow(CommonColumns.COLUMN_MODIFIED_AT));
 
         model.setUID(uid);
-        model.setCreatedTimestamp(TimestampHelper.getTimestampForUtcString(created));
-        model.setModifiedTimestamp(TimestampHelper.getTimestampForUtcString(modified));
+        model.setCreatedTimestamp(TimestampHelper.getTimestampFromUtcString(created));
+        model.setModifiedTimestamp(TimestampHelper.getTimestampFromUtcString(modified));
     }
 
 	/**
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index 87debbeb..1b43bdee 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -647,7 +647,7 @@ static int upgradeDbToVersion8(SQLiteDatabase db) {
             //================================ END TABLE MIGRATIONS ================================
 
             // String timestamp to be used for all new created entities in migration
-            String timestamp = TimestampHelper.getUtcStringForTimestamp(TimestampHelper.getTimestampForNow());
+            String timestamp = TimestampHelper.getUtcStringFromTimestamp(TimestampHelper.getTimestampFromNow());
 
             //ScheduledActionDbAdapter scheduledActionDbAdapter = new ScheduledActionDbAdapter(db);
             //SplitsDbAdapter splitsDbAdapter = new SplitsDbAdapter(db);
@@ -698,7 +698,7 @@ static int upgradeDbToVersion8(SQLiteDatabase db) {
             while (cursor.moveToNext()){
                 contentValues.clear();
                 Timestamp timestampT = new Timestamp(cursor.getLong(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_TIMESTAMP)));
-                contentValues.put(TransactionEntry.COLUMN_CREATED_AT, TimestampHelper.getUtcStringForTimestamp(timestampT));
+                contentValues.put(TransactionEntry.COLUMN_CREATED_AT, TimestampHelper.getUtcStringFromTimestamp(timestampT));
                 long transactionId = cursor.getLong(cursor.getColumnIndexOrThrow(TransactionEntry._ID));
                 db.update(TransactionEntry.TABLE_NAME, contentValues, TransactionEntry._ID + "=" + transactionId, null);
 
@@ -1096,7 +1096,7 @@ static int upgradeDbToVersion10(SQLiteDatabase db){
 
                 boolean exportAll = Boolean.parseBoolean(tokens[2]);
                 if (exportAll){
-                    params.setExportStartTime(TimestampHelper.getTimestampForEpochZero());
+                    params.setExportStartTime(TimestampHelper.getTimestampFromEpochZero());
                 } else {
                     Timestamp timestamp = PreferencesHelper.getLastExportTime();
                     params.setExportStartTime(timestamp);
@@ -1143,9 +1143,9 @@ static int upgradeDbToVersion11(SQLiteDatabase db){
                 String tag = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TAG));
                 String[] tokens = tag.split(";");
                 try {
-                    Timestamp timestamp = TimestampHelper.getTimestampForUtcString(tokens[2]);
+                    Timestamp timestamp = TimestampHelper.getTimestampFromUtcString(tokens[2]);
                 } catch (IllegalArgumentException ex) {
-                    tokens[2] = TimestampHelper.getUtcStringForTimestamp(PreferencesHelper.getLastExportTime());
+                    tokens[2] = TimestampHelper.getUtcStringFromTimestamp(PreferencesHelper.getLastExportTime());
                 } finally {
                     tag = TextUtils.join(";", tokens);
                 }
diff --git a/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java b/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java
index c4a230f0..5cfce370 100644
--- a/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java
@@ -46,7 +46,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Price price) {
         mReplaceStatement.bindString(1, price.getUID());
         mReplaceStatement.bindString(2, price.getCommodityUID());
         mReplaceStatement.bindString(3, price.getCurrencyUID());
-        mReplaceStatement.bindString(4, TimestampHelper.getUtcStringForTimestamp(price.getDate()));
+        mReplaceStatement.bindString(4, TimestampHelper.getUtcStringFromTimestamp(price.getDate()));
         if (price.getSource() != null) {
             mReplaceStatement.bindString(5, price.getSource());
         }
@@ -70,7 +70,7 @@ public Price buildModelInstance(@NonNull final Cursor cursor) {
         long valueDenom   = cursor.getLong(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_VALUE_DENOM));
 
         Price price = new Price(commodityUID, currencyUID);
-        price.setDate(TimestampHelper.getTimestampForUtcString(dateString));
+        price.setDate(TimestampHelper.getTimestampFromUtcString(dateString));
         price.setSource(source);
         price.setType(type);
         price.setValueNum(valueNum);
diff --git a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
index cecf5ea0..add6015d 100644
--- a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
@@ -103,7 +103,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final ScheduledAction
         mReplaceStatement.bindLong(6,   schedxAction.getLastRun());
         mReplaceStatement.bindLong(7,   schedxAction.getPeriod());
         mReplaceStatement.bindLong(8,   schedxAction.isEnabled() ? 1 : 0);
-        mReplaceStatement.bindString(9, TimestampHelper.getUtcStringForTimestamp(schedxAction.getCreatedTimestamp()));
+        mReplaceStatement.bindString(9, TimestampHelper.getUtcStringFromTimestamp(schedxAction.getCreatedTimestamp()));
         if (schedxAction.getTag() == null)
             mReplaceStatement.bindNull(10);
         else
diff --git a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
index 727db62c..41fda748 100644
--- a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
@@ -78,7 +78,7 @@ public void addRecord(@NonNull final Split split){
 
         //modifying a split means modifying the accompanying transaction as well
         updateRecord(TransactionEntry.TABLE_NAME, transactionId,
-                TransactionEntry.COLUMN_MODIFIED_AT, TimestampHelper.getUtcStringForTimestamp(TimestampHelper.getTimestampForNow()));
+                TransactionEntry.COLUMN_MODIFIED_AT, TimestampHelper.getUtcStringFromTimestamp(TimestampHelper.getTimestampFromNow()));
     }
 
     @Override
@@ -107,7 +107,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Split split) {
         mReplaceStatement.bindLong(5,   split.getValue().getDenominator());
         mReplaceStatement.bindLong(6,   split.getQuantity().getNumerator());
         mReplaceStatement.bindLong(7,   split.getQuantity().getDenominator());
-        mReplaceStatement.bindString(8, TimestampHelper.getUtcStringForTimestamp(split.getCreatedTimestamp()));
+        mReplaceStatement.bindString(8, TimestampHelper.getUtcStringFromTimestamp(split.getCreatedTimestamp()));
         mReplaceStatement.bindString(9, split.getAccountUID());
         mReplaceStatement.bindString(10, split.getTransactionUID());
 
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index b4f68434..31fafe0b 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -188,7 +188,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Transaction tra
             commodity = CommoditiesDbAdapter.getInstance().getCommodity(transaction.getCurrencyCode());
 
         mReplaceStatement.bindString(7, commodity.getUID());
-        mReplaceStatement.bindString(8, TimestampHelper.getUtcStringForTimestamp(transaction.getCreatedTimestamp()));
+        mReplaceStatement.bindString(8, TimestampHelper.getUtcStringFromTimestamp(transaction.getCreatedTimestamp()));
 
         if (transaction.getScheduledActionUID() == null)
             mReplaceStatement.bindNull(9);
@@ -644,11 +644,11 @@ public Timestamp getTimestampOfLastModification(){
                 new String[]{"MAX(" + TransactionEntry.COLUMN_MODIFIED_AT + ")"},
                 null, null, null, null, null);
 
-        Timestamp timestamp = TimestampHelper.getTimestampForNow();
+        Timestamp timestamp = TimestampHelper.getTimestampFromNow();
         if (cursor.moveToFirst()){
             String timeString = cursor.getString(0);
             if (timeString != null){ //in case there were no transactions in the XML file (account structure only)
-                timestamp = TimestampHelper.getTimestampForUtcString(timeString);
+                timestamp = TimestampHelper.getTimestampFromUtcString(timeString);
             }
         }
         cursor.close();
diff --git a/app/src/main/java/org/gnucash/android/export/ExportParams.java b/app/src/main/java/org/gnucash/android/export/ExportParams.java
index 71002ed2..f4a7d0fa 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportParams.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportParams.java
@@ -46,7 +46,7 @@
     /**
      * All transactions created after this date will be exported
      */
-    private Timestamp mExportStartTime = TimestampHelper.getTimestampForEpochZero();
+    private Timestamp mExportStartTime = TimestampHelper.getTimestampFromEpochZero();
 
     /**
      * Flag to determine if all transactions should be deleted after exporting is complete
@@ -134,7 +134,7 @@ public void setExportTarget(ExportTarget mExportTarget) {
 
     @Override
     public String toString() {
-        return "Export all transactions created since " + TimestampHelper.getUtcStringForTimestamp(mExportStartTime) + " UTC"
+        return "Export all transactions created since " + TimestampHelper.getUtcStringFromTimestamp(mExportStartTime) + " UTC"
                 + " as "+ mExportFormat.name() + " to " + mExportTarget.name();
     }
 
@@ -147,7 +147,7 @@ public String toCsv(){
         String separator = ";";
 
         return mExportFormat.name() + separator + mExportTarget.name() + separator
-                + TimestampHelper.getUtcStringForTimestamp(mExportStartTime) + separator
+                + TimestampHelper.getUtcStringFromTimestamp(mExportStartTime) + separator
                 + Boolean.toString(mDeleteTransactionsAfterExport);
     }
 
@@ -160,7 +160,7 @@ public static ExportParams parseCsv(String csvParams){
         String[] tokens = csvParams.split(";");
         ExportParams params = new ExportParams(ExportFormat.valueOf(tokens[0]));
         params.setExportTarget(ExportTarget.valueOf(tokens[1]));
-        params.setExportStartTime(TimestampHelper.getTimestampForUtcString(tokens[2]));
+        params.setExportStartTime(TimestampHelper.getTimestampFromUtcString(tokens[2]));
         params.setDeleteTransactionsAfterExport(Boolean.parseBoolean(tokens[3]));
 
         return params;
diff --git a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
index ca71d1db..850e8bfb 100644
--- a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
@@ -138,7 +138,7 @@ private String generateOfxExport() throws ExporterException {
         boolean useXmlHeader = PreferenceManager.getDefaultSharedPreferences(mContext)
                 .getBoolean(mContext.getString(R.string.key_xml_ofx_header), false);
 
-        PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampForNow());
+        PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampFromNow());
 
         StringWriter stringWriter = new StringWriter();
         //if we want SGML OFX headers, write first to string and then prepend header
diff --git a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
index 69946d1c..f26c43f0 100644
--- a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
@@ -60,7 +60,7 @@ public QifExporter(ExportParams params){
         final String newLine = "\n";
         TransactionsDbAdapter transactionsDbAdapter = mTransactionsDbAdapter;
         try {
-            String lastExportTimeStamp = TimestampHelper.getUtcStringForTimestamp(mExportParams.getExportStartTime());
+            String lastExportTimeStamp = TimestampHelper.getUtcStringFromTimestamp(mExportParams.getExportStartTime());
             Cursor cursor = transactionsDbAdapter.fetchTransactionsWithSplitsWithTransactionAccount(
                     new String[]{
                             TransactionEntry.TABLE_NAME + "_" + TransactionEntry.COLUMN_UID + " AS trans_uid",
@@ -216,7 +216,7 @@ public QifExporter(ExportParams params){
             transactionsDbAdapter.updateTransaction(contentValues, null, null);
 
             /// export successful
-            PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampForNow());
+            PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampFromNow());
             return splitQIF(file);
         } catch (IOException e) {
             throw new ExporterException(mExportParams, e);
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index f41aa127..4e259b5e 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -342,7 +342,7 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_DATE_POSTED);
 
                 // date entered, time when the transaction was actually created
-                Timestamp timeEntered = TimestampHelper.getTimestampForUtcString(cursor.getString(cursor.getColumnIndexOrThrow("trans_date_posted")));
+                Timestamp timeEntered = TimestampHelper.getTimestampFromUtcString(cursor.getString(cursor.getColumnIndexOrThrow("trans_date_posted")));
                 String dateEntered = GncXmlHelper.formatDate(timeEntered.getTime());
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_DATE_ENTERED);
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_TS_DATE);
@@ -539,7 +539,7 @@ private void exportScheduledTransactions(XmlSerializer xmlSerializer) throws IOE
 
             //start date
             String createdTimestamp = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_CREATED_AT));
-            long scheduleStartTime = TimestampHelper.getTimestampForUtcString(createdTimestamp).getTime();
+            long scheduleStartTime = TimestampHelper.getTimestampFromUtcString(createdTimestamp).getTime();
             serializeDate(xmlSerializer, GncXmlHelper.TAG_SX_START, scheduleStartTime);
 
             long lastRunTime = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_LAST_RUN));
@@ -659,7 +659,7 @@ private void exportPrices(XmlSerializer xmlSerializer) throws IOException {
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_COMMODITY_ID);
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_PRICE_CURRENCY);
                 // time
-                String strDate = GncXmlHelper.formatDate(TimestampHelper.getTimestampForUtcString(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_DATE))).getTime());
+                String strDate = GncXmlHelper.formatDate(TimestampHelper.getTimestampFromUtcString(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_DATE))).getTime());
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_PRICE_TIME);
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_TS_DATE);
                 xmlSerializer.text(strDate);
diff --git a/app/src/main/java/org/gnucash/android/model/BaseModel.java b/app/src/main/java/org/gnucash/android/model/BaseModel.java
index 38c68802..2b113450 100644
--- a/app/src/main/java/org/gnucash/android/model/BaseModel.java
+++ b/app/src/main/java/org/gnucash/android/model/BaseModel.java
@@ -42,8 +42,8 @@
      * A unique ID will be generated on demand with a call to {@link #getUID()}</p>
      */
     public BaseModel(){
-        mCreatedTimestamp = TimestampHelper.getTimestampForNow();
-        mModifiedTimestamp = TimestampHelper.getTimestampForNow();
+        mCreatedTimestamp = TimestampHelper.getTimestampFromNow();
+        mModifiedTimestamp = TimestampHelper.getTimestampFromNow();
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/model/Price.java b/app/src/main/java/org/gnucash/android/model/Price.java
index b0c2f0cc..79c572f1 100644
--- a/app/src/main/java/org/gnucash/android/model/Price.java
+++ b/app/src/main/java/org/gnucash/android/model/Price.java
@@ -23,7 +23,7 @@
     public static final String SOURCE_USER = "user:xfer-dialog";
 
     public Price(){
-        mDate = TimestampHelper.getTimestampForNow();
+        mDate = TimestampHelper.getTimestampFromNow();
     }
 
     /**
@@ -34,7 +34,7 @@ public Price(){
     public Price(String commodityUID, String currencyUID){
         this.mCommodityUID = commodityUID;
         this.mCurrencyUID = currencyUID;
-        mDate = TimestampHelper.getTimestampForNow();
+        mDate = TimestampHelper.getTimestampFromNow();
     }
 
     public String getCommodityUID() {
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 180e4b3f..05dc1a9f 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -265,7 +265,7 @@ private void startExport(){
 		ExportParams exportParameters = new ExportParams(mExportFormat);
 
 		if (mExportAllSwitch.isChecked()){
-			exportParameters.setExportStartTime(TimestampHelper.getTimestampForEpochZero());
+			exportParameters.setExportStartTime(TimestampHelper.getTimestampFromEpochZero());
 		} else {
 			exportParameters.setExportStartTime(new Timestamp(mExportStartCalendar.getTimeInMillis()));
 		}
diff --git a/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
index b48ef746..0937c2fd 100644
--- a/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
+++ b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
@@ -48,7 +48,7 @@ private PreferencesHelper() {}
      * @param lastExportTime the last export time to set.
      */
     public static void setLastExportTime(Timestamp lastExportTime) {
-        final String utcString = TimestampHelper.getUtcStringForTimestamp(lastExportTime);
+        final String utcString = TimestampHelper.getUtcStringFromTimestamp(lastExportTime);
         Log.d(LOG_TAG, "Storing '" + utcString + "' as lastExportTime in Android Preferences.");
         PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
                 .edit()
@@ -66,6 +66,6 @@ public static Timestamp getLastExportTime() {
                 .getString(PREFERENCE_LAST_EXPORT_TIME_KEY, PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE);
         Log.d(LOG_TAG, "Retrieving '" + utcString + "' as lastExportTime from Android Preferences.");
         return PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE.equals(utcString) ?
-                TimestampHelper.getTimestampForEpochZero() : TimestampHelper.getTimestampForUtcString(utcString);
+                TimestampHelper.getTimestampFromEpochZero() : TimestampHelper.getTimestampFromUtcString(utcString);
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/org/gnucash/android/util/TimestampHelper.java b/app/src/main/java/org/gnucash/android/util/TimestampHelper.java
index ca021ca6..407f187c 100644
--- a/app/src/main/java/org/gnucash/android/util/TimestampHelper.java
+++ b/app/src/main/java/org/gnucash/android/util/TimestampHelper.java
@@ -48,14 +48,14 @@ private TimestampHelper() {}
      * @param timestamp The {@link Timestamp} to format.
      * @return The formatted {@link String}.
      */
-    public static String getUtcStringForTimestamp(Timestamp timestamp) {
+    public static String getUtcStringFromTimestamp(Timestamp timestamp) {
         return UTC_DATE_WITH_MILLISECONDS_FORMAT.withZone(UTC_TIME_ZONE).print(timestamp.getTime());
     }
 
     /**
      * @return A {@link Timestamp} with time in milliseconds equals to zero.
      */
-    public static Timestamp getTimestampForEpochZero() {
+    public static Timestamp getTimestampFromEpochZero() {
         return new Timestamp(0);
     }
 
@@ -68,7 +68,7 @@ public static Timestamp getTimestampForEpochZero() {
      * @param utcString A {@link String} in UTC.
      * @return A {@link Timestamp} for given utcString.
      */
-    public static Timestamp getTimestampForUtcString(String utcString) {
+    public static Timestamp getTimestampFromUtcString(String utcString) {
         DateTime dateTime;
         try {
 
@@ -93,7 +93,7 @@ public static Timestamp getTimestampForUtcString(String utcString) {
     /**
      * @return A {@link Timestamp} initialized with the system current time.
      */
-    public static Timestamp getTimestampForNow() {
+    public static Timestamp getTimestampFromNow() {
         return new Timestamp(System.currentTimeMillis());
     }
 }
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java
index 517b4c47..e2b131d0 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java
@@ -48,17 +48,17 @@ public void shouldSubtractTimeZoneOffset() {
 
         TimeZone timeZone = TimeZone.getTimeZone("GMT-1:00");
         Timestamp result = MigrationHelper.subtractTimeZoneOffset(unixBillenniumTimestamp, timeZone);
-        assertThat(TimestampHelper.getUtcStringForTimestamp(result))
+        assertThat(TimestampHelper.getUtcStringFromTimestamp(result))
                 .isEqualTo(unixBillenniumUtcStringAfterSubtract);
 
         timeZone = TimeZone.getTimeZone("GMT+1:00");
         result = MigrationHelper.subtractTimeZoneOffset(unixBillenniumTimestamp, timeZone);
-        assertThat(TimestampHelper.getUtcStringForTimestamp(result))
+        assertThat(TimestampHelper.getUtcStringFromTimestamp(result))
                 .isEqualTo(unixBillenniumUtcStringAfterSubtract);
 
         timeZone = TimeZone.getTimeZone("GMT+0:00");
         result = MigrationHelper.subtractTimeZoneOffset(unixBillenniumTimestamp, timeZone);
-        assertThat(TimestampHelper.getUtcStringForTimestamp(result))
+        assertThat(TimestampHelper.getUtcStringFromTimestamp(result))
                 .isEqualTo(unixBillenniumUtcString);
     }
 }
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java b/app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java
index ceb7d0ae..13cc3d22 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java
@@ -36,7 +36,7 @@
     @Test
     public void shouldGetLastExportTimeDefaultValue() {
         final Timestamp lastExportTime = PreferencesHelper.getLastExportTime();
-        assertThat(lastExportTime).isEqualTo(TimestampHelper.getTimestampForEpochZero());
+        assertThat(lastExportTime).isEqualTo(TimestampHelper.getTimestampFromEpochZero());
     }
 
     @Test
diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java b/app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java
index 2c9d1091..e887dc0a 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java
@@ -33,7 +33,7 @@
 public class TimestampHelperTest {
 
     @Test
-    public void shouldGetUtcStringForTimestamp() {
+    public void shouldGetUtcStringFromTimestamp() {
         /**
          * The values used here are well known.
          * See https://en.wikipedia.org/wiki/Unix_time#Notable_events_in_Unix_time
@@ -43,47 +43,47 @@ public void shouldGetUtcStringForTimestamp() {
         final long unixBillennium = 1_000_000_000 * 1000L;
         final String unixBillenniumUtcString = "2001-09-09 01:46:40.000";
         final Timestamp unixBillenniumTimestamp = new Timestamp(unixBillennium);
-        assertThat(TimestampHelper.getUtcStringForTimestamp(unixBillenniumTimestamp))
+        assertThat(TimestampHelper.getUtcStringFromTimestamp(unixBillenniumTimestamp))
                 .isEqualTo(unixBillenniumUtcString);
 
         final long the1234567890thSecond = 1234567890 * 1000L;
         final String the1234567890thSecondUtcString = "2009-02-13 23:31:30.000";
         final Timestamp the1234567890thSecondTimestamp = new Timestamp(the1234567890thSecond);
-        assertThat(TimestampHelper.getUtcStringForTimestamp(the1234567890thSecondTimestamp))
+        assertThat(TimestampHelper.getUtcStringFromTimestamp(the1234567890thSecondTimestamp))
                 .isEqualTo(the1234567890thSecondUtcString);
     }
 
     @Test
-    public void shouldGetTimestampForEpochZero() {
-        Timestamp epochZero = TimestampHelper.getTimestampForEpochZero();
+    public void shouldGetTimestampFromEpochZero() {
+        Timestamp epochZero = TimestampHelper.getTimestampFromEpochZero();
         assertThat(epochZero.getTime()).isZero();
     }
 
     @Test
-    public void shouldGetTimestampForUtcString() {
+    public void shouldGetTimestampFromUtcString() {
         final long unixBillennium = 1_000_000_000 * 1000L;
         final String unixBillenniumUtcString = "2001-09-09 01:46:40";
         final String unixBillenniumWithMillisecondsUtcString = "2001-09-09 01:46:40.000";
         final Timestamp unixBillenniumTimestamp = new Timestamp(unixBillennium);
-        assertThat(TimestampHelper.getTimestampForUtcString(unixBillenniumUtcString))
+        assertThat(TimestampHelper.getTimestampFromUtcString(unixBillenniumUtcString))
                 .isEqualTo(unixBillenniumTimestamp);
-        assertThat(TimestampHelper.getTimestampForUtcString(unixBillenniumWithMillisecondsUtcString))
+        assertThat(TimestampHelper.getTimestampFromUtcString(unixBillenniumWithMillisecondsUtcString))
                 .isEqualTo(unixBillenniumTimestamp);
 
         final long the1234567890thSecond = 1234567890 * 1000L;
         final String the1234567890thSecondUtcString = "2009-02-13 23:31:30";
         final String the1234567890thSecondWithMillisecondsUtcString = "2009-02-13 23:31:30.000";
         final Timestamp the1234567890thSecondTimestamp = new Timestamp(the1234567890thSecond);
-        assertThat(TimestampHelper.getTimestampForUtcString(the1234567890thSecondUtcString))
+        assertThat(TimestampHelper.getTimestampFromUtcString(the1234567890thSecondUtcString))
                 .isEqualTo(the1234567890thSecondTimestamp);
-        assertThat(TimestampHelper.getTimestampForUtcString(the1234567890thSecondWithMillisecondsUtcString))
+        assertThat(TimestampHelper.getTimestampFromUtcString(the1234567890thSecondWithMillisecondsUtcString))
                 .isEqualTo(the1234567890thSecondTimestamp);
     }
 
     @Test
-    public void shouldGetTimestampForNow() {
+    public void shouldGetTimestampFromNow() {
         final long before = System.currentTimeMillis();
-        final long now = TimestampHelper.getTimestampForNow().getTime();
+        final long now = TimestampHelper.getTimestampFromNow().getTime();
         final long after = System.currentTimeMillis();
         assertThat(now).isGreaterThanOrEqualTo(before)
                        .isLessThanOrEqualTo(after);

From f28239b55a1147ce540d735dad1bed1a3ee3b90b Mon Sep 17 00:00:00 2001
From: alceurneto <alceurneto@gmail.com>
Date: Sat, 6 Feb 2016 10:51:01 -0200
Subject: [PATCH 13/16] Some refactoring (Fixes #467 and fixes #464).

---
 .../org/gnucash/android/db/AccountsDbAdapter.java  |  4 ++--
 .../org/gnucash/android/db/DatabaseAdapter.java    |  6 +++---
 .../org/gnucash/android/db/MigrationHelper.java    | 10 ++++-----
 .../org/gnucash/android/db/PricesDbAdapter.java    |  4 ++--
 .../android/db/ScheduledActionDbAdapter.java       |  2 +-
 .../org/gnucash/android/db/SplitsDbAdapter.java    |  4 ++--
 .../gnucash/android/db/TransactionsDbAdapter.java  |  6 +++---
 .../org/gnucash/android/export/ExportParams.java   |  8 ++++----
 .../gnucash/android/export/ofx/OfxExporter.java    |  2 +-
 .../gnucash/android/export/qif/QifExporter.java    |  4 ++--
 .../gnucash/android/export/xml/GncXmlExporter.java |  6 +++---
 .../java/org/gnucash/android/model/BaseModel.java  |  4 ++--
 .../main/java/org/gnucash/android/model/Price.java |  4 ++--
 .../android/ui/export/ExportFormFragment.java      |  2 +-
 .../gnucash/android/util/PreferencesHelper.java    | 10 ++++-----
 .../org/gnucash/android/util/TimestampHelper.java  |  8 ++++----
 .../android/test/unit/db/MigrationHelperTest.java  |  6 +++---
 .../test/unit/util/PreferencesHelperTest.java      |  2 +-
 .../test/unit/util/TimestampHelperTest.java        | 24 +++++++++++-----------
 19 files changed, 57 insertions(+), 59 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
index 1d913177..07aad7a7 100644
--- a/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java
@@ -183,7 +183,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Account account
         mReplaceStatement.bindLong(7, account.isFavorite() ? 1 : 0);
         mReplaceStatement.bindString(8, account.getFullName());
         mReplaceStatement.bindLong(9, account.isPlaceholderAccount() ? 1 : 0);
-        mReplaceStatement.bindString(10, TimestampHelper.getUtcStringForTimestamp(account.getCreatedTimestamp()));
+        mReplaceStatement.bindString(10, TimestampHelper.getUtcStringFromTimestamp(account.getCreatedTimestamp()));
         mReplaceStatement.bindLong(11, account.isHidden() ? 1 : 0);
         Commodity commodity = account.getCommodity();
         if (commodity == null)
@@ -530,7 +530,7 @@ public AccountType getAccountType(long accountId){
                         SplitEntry.COLUMN_ACCOUNT_UID,
                 new String[]{AccountEntry.TABLE_NAME + ".*"},
                 TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_MODIFIED_AT + " > ?",
-                new String[]{TimestampHelper.getUtcStringForTimestamp(lastExportTimeStamp)},
+                new String[]{TimestampHelper.getUtcStringFromTimestamp(lastExportTimeStamp)},
                 AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID,
                 null,
                 null
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
index 2f0aa62f..705474ae 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java
@@ -301,7 +301,7 @@ public Model getRecord(long id){
      */
     protected ContentValues populateBaseModelAttributes(@NonNull ContentValues contentValues, @NonNull Model model){
         contentValues.put(CommonColumns.COLUMN_UID, model.getUID());
-        contentValues.put(CommonColumns.COLUMN_CREATED_AT, TimestampHelper.getUtcStringForTimestamp(model.getCreatedTimestamp()));
+        contentValues.put(CommonColumns.COLUMN_CREATED_AT, TimestampHelper.getUtcStringFromTimestamp(model.getCreatedTimestamp()));
         //there is a trigger in the database for updated the modified_at column
         /* Due to the use of SQL REPLACE syntax, we insert the created_at values each time
         * (maintain the original creation time and not the time of creation of the replacement)
@@ -321,8 +321,8 @@ protected void populateBaseModelAttributes(Cursor cursor, BaseModel model){
         String modified= cursor.getString(cursor.getColumnIndexOrThrow(CommonColumns.COLUMN_MODIFIED_AT));
 
         model.setUID(uid);
-        model.setCreatedTimestamp(TimestampHelper.getTimestampForUtcString(created));
-        model.setModifiedTimestamp(TimestampHelper.getTimestampForUtcString(modified));
+        model.setCreatedTimestamp(TimestampHelper.getTimestampFromUtcString(created));
+        model.setModifiedTimestamp(TimestampHelper.getTimestampFromUtcString(modified));
     }
 
 	/**
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index 87debbeb..1b43bdee 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -647,7 +647,7 @@ static int upgradeDbToVersion8(SQLiteDatabase db) {
             //================================ END TABLE MIGRATIONS ================================
 
             // String timestamp to be used for all new created entities in migration
-            String timestamp = TimestampHelper.getUtcStringForTimestamp(TimestampHelper.getTimestampForNow());
+            String timestamp = TimestampHelper.getUtcStringFromTimestamp(TimestampHelper.getTimestampFromNow());
 
             //ScheduledActionDbAdapter scheduledActionDbAdapter = new ScheduledActionDbAdapter(db);
             //SplitsDbAdapter splitsDbAdapter = new SplitsDbAdapter(db);
@@ -698,7 +698,7 @@ static int upgradeDbToVersion8(SQLiteDatabase db) {
             while (cursor.moveToNext()){
                 contentValues.clear();
                 Timestamp timestampT = new Timestamp(cursor.getLong(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_TIMESTAMP)));
-                contentValues.put(TransactionEntry.COLUMN_CREATED_AT, TimestampHelper.getUtcStringForTimestamp(timestampT));
+                contentValues.put(TransactionEntry.COLUMN_CREATED_AT, TimestampHelper.getUtcStringFromTimestamp(timestampT));
                 long transactionId = cursor.getLong(cursor.getColumnIndexOrThrow(TransactionEntry._ID));
                 db.update(TransactionEntry.TABLE_NAME, contentValues, TransactionEntry._ID + "=" + transactionId, null);
 
@@ -1096,7 +1096,7 @@ static int upgradeDbToVersion10(SQLiteDatabase db){
 
                 boolean exportAll = Boolean.parseBoolean(tokens[2]);
                 if (exportAll){
-                    params.setExportStartTime(TimestampHelper.getTimestampForEpochZero());
+                    params.setExportStartTime(TimestampHelper.getTimestampFromEpochZero());
                 } else {
                     Timestamp timestamp = PreferencesHelper.getLastExportTime();
                     params.setExportStartTime(timestamp);
@@ -1143,9 +1143,9 @@ static int upgradeDbToVersion11(SQLiteDatabase db){
                 String tag = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TAG));
                 String[] tokens = tag.split(";");
                 try {
-                    Timestamp timestamp = TimestampHelper.getTimestampForUtcString(tokens[2]);
+                    Timestamp timestamp = TimestampHelper.getTimestampFromUtcString(tokens[2]);
                 } catch (IllegalArgumentException ex) {
-                    tokens[2] = TimestampHelper.getUtcStringForTimestamp(PreferencesHelper.getLastExportTime());
+                    tokens[2] = TimestampHelper.getUtcStringFromTimestamp(PreferencesHelper.getLastExportTime());
                 } finally {
                     tag = TextUtils.join(";", tokens);
                 }
diff --git a/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java b/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java
index c4a230f0..5cfce370 100644
--- a/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/PricesDbAdapter.java
@@ -46,7 +46,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Price price) {
         mReplaceStatement.bindString(1, price.getUID());
         mReplaceStatement.bindString(2, price.getCommodityUID());
         mReplaceStatement.bindString(3, price.getCurrencyUID());
-        mReplaceStatement.bindString(4, TimestampHelper.getUtcStringForTimestamp(price.getDate()));
+        mReplaceStatement.bindString(4, TimestampHelper.getUtcStringFromTimestamp(price.getDate()));
         if (price.getSource() != null) {
             mReplaceStatement.bindString(5, price.getSource());
         }
@@ -70,7 +70,7 @@ public Price buildModelInstance(@NonNull final Cursor cursor) {
         long valueDenom   = cursor.getLong(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_VALUE_DENOM));
 
         Price price = new Price(commodityUID, currencyUID);
-        price.setDate(TimestampHelper.getTimestampForUtcString(dateString));
+        price.setDate(TimestampHelper.getTimestampFromUtcString(dateString));
         price.setSource(source);
         price.setType(type);
         price.setValueNum(valueNum);
diff --git a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
index cecf5ea0..add6015d 100644
--- a/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/ScheduledActionDbAdapter.java
@@ -103,7 +103,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final ScheduledAction
         mReplaceStatement.bindLong(6,   schedxAction.getLastRun());
         mReplaceStatement.bindLong(7,   schedxAction.getPeriod());
         mReplaceStatement.bindLong(8,   schedxAction.isEnabled() ? 1 : 0);
-        mReplaceStatement.bindString(9, TimestampHelper.getUtcStringForTimestamp(schedxAction.getCreatedTimestamp()));
+        mReplaceStatement.bindString(9, TimestampHelper.getUtcStringFromTimestamp(schedxAction.getCreatedTimestamp()));
         if (schedxAction.getTag() == null)
             mReplaceStatement.bindNull(10);
         else
diff --git a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
index 727db62c..41fda748 100644
--- a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
@@ -78,7 +78,7 @@ public void addRecord(@NonNull final Split split){
 
         //modifying a split means modifying the accompanying transaction as well
         updateRecord(TransactionEntry.TABLE_NAME, transactionId,
-                TransactionEntry.COLUMN_MODIFIED_AT, TimestampHelper.getUtcStringForTimestamp(TimestampHelper.getTimestampForNow()));
+                TransactionEntry.COLUMN_MODIFIED_AT, TimestampHelper.getUtcStringFromTimestamp(TimestampHelper.getTimestampFromNow()));
     }
 
     @Override
@@ -107,7 +107,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Split split) {
         mReplaceStatement.bindLong(5,   split.getValue().getDenominator());
         mReplaceStatement.bindLong(6,   split.getQuantity().getNumerator());
         mReplaceStatement.bindLong(7,   split.getQuantity().getDenominator());
-        mReplaceStatement.bindString(8, TimestampHelper.getUtcStringForTimestamp(split.getCreatedTimestamp()));
+        mReplaceStatement.bindString(8, TimestampHelper.getUtcStringFromTimestamp(split.getCreatedTimestamp()));
         mReplaceStatement.bindString(9, split.getAccountUID());
         mReplaceStatement.bindString(10, split.getTransactionUID());
 
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index b4f68434..31fafe0b 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -188,7 +188,7 @@ protected SQLiteStatement compileReplaceStatement(@NonNull final Transaction tra
             commodity = CommoditiesDbAdapter.getInstance().getCommodity(transaction.getCurrencyCode());
 
         mReplaceStatement.bindString(7, commodity.getUID());
-        mReplaceStatement.bindString(8, TimestampHelper.getUtcStringForTimestamp(transaction.getCreatedTimestamp()));
+        mReplaceStatement.bindString(8, TimestampHelper.getUtcStringFromTimestamp(transaction.getCreatedTimestamp()));
 
         if (transaction.getScheduledActionUID() == null)
             mReplaceStatement.bindNull(9);
@@ -644,11 +644,11 @@ public Timestamp getTimestampOfLastModification(){
                 new String[]{"MAX(" + TransactionEntry.COLUMN_MODIFIED_AT + ")"},
                 null, null, null, null, null);
 
-        Timestamp timestamp = TimestampHelper.getTimestampForNow();
+        Timestamp timestamp = TimestampHelper.getTimestampFromNow();
         if (cursor.moveToFirst()){
             String timeString = cursor.getString(0);
             if (timeString != null){ //in case there were no transactions in the XML file (account structure only)
-                timestamp = TimestampHelper.getTimestampForUtcString(timeString);
+                timestamp = TimestampHelper.getTimestampFromUtcString(timeString);
             }
         }
         cursor.close();
diff --git a/app/src/main/java/org/gnucash/android/export/ExportParams.java b/app/src/main/java/org/gnucash/android/export/ExportParams.java
index 71002ed2..f4a7d0fa 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportParams.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportParams.java
@@ -46,7 +46,7 @@
     /**
      * All transactions created after this date will be exported
      */
-    private Timestamp mExportStartTime = TimestampHelper.getTimestampForEpochZero();
+    private Timestamp mExportStartTime = TimestampHelper.getTimestampFromEpochZero();
 
     /**
      * Flag to determine if all transactions should be deleted after exporting is complete
@@ -134,7 +134,7 @@ public void setExportTarget(ExportTarget mExportTarget) {
 
     @Override
     public String toString() {
-        return "Export all transactions created since " + TimestampHelper.getUtcStringForTimestamp(mExportStartTime) + " UTC"
+        return "Export all transactions created since " + TimestampHelper.getUtcStringFromTimestamp(mExportStartTime) + " UTC"
                 + " as "+ mExportFormat.name() + " to " + mExportTarget.name();
     }
 
@@ -147,7 +147,7 @@ public String toCsv(){
         String separator = ";";
 
         return mExportFormat.name() + separator + mExportTarget.name() + separator
-                + TimestampHelper.getUtcStringForTimestamp(mExportStartTime) + separator
+                + TimestampHelper.getUtcStringFromTimestamp(mExportStartTime) + separator
                 + Boolean.toString(mDeleteTransactionsAfterExport);
     }
 
@@ -160,7 +160,7 @@ public static ExportParams parseCsv(String csvParams){
         String[] tokens = csvParams.split(";");
         ExportParams params = new ExportParams(ExportFormat.valueOf(tokens[0]));
         params.setExportTarget(ExportTarget.valueOf(tokens[1]));
-        params.setExportStartTime(TimestampHelper.getTimestampForUtcString(tokens[2]));
+        params.setExportStartTime(TimestampHelper.getTimestampFromUtcString(tokens[2]));
         params.setDeleteTransactionsAfterExport(Boolean.parseBoolean(tokens[3]));
 
         return params;
diff --git a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
index ca71d1db..850e8bfb 100644
--- a/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/ofx/OfxExporter.java
@@ -138,7 +138,7 @@ private String generateOfxExport() throws ExporterException {
         boolean useXmlHeader = PreferenceManager.getDefaultSharedPreferences(mContext)
                 .getBoolean(mContext.getString(R.string.key_xml_ofx_header), false);
 
-        PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampForNow());
+        PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampFromNow());
 
         StringWriter stringWriter = new StringWriter();
         //if we want SGML OFX headers, write first to string and then prepend header
diff --git a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
index 69946d1c..f26c43f0 100644
--- a/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/qif/QifExporter.java
@@ -60,7 +60,7 @@ public QifExporter(ExportParams params){
         final String newLine = "\n";
         TransactionsDbAdapter transactionsDbAdapter = mTransactionsDbAdapter;
         try {
-            String lastExportTimeStamp = TimestampHelper.getUtcStringForTimestamp(mExportParams.getExportStartTime());
+            String lastExportTimeStamp = TimestampHelper.getUtcStringFromTimestamp(mExportParams.getExportStartTime());
             Cursor cursor = transactionsDbAdapter.fetchTransactionsWithSplitsWithTransactionAccount(
                     new String[]{
                             TransactionEntry.TABLE_NAME + "_" + TransactionEntry.COLUMN_UID + " AS trans_uid",
@@ -216,7 +216,7 @@ public QifExporter(ExportParams params){
             transactionsDbAdapter.updateTransaction(contentValues, null, null);
 
             /// export successful
-            PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampForNow());
+            PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampFromNow());
             return splitQIF(file);
         } catch (IOException e) {
             throw new ExporterException(mExportParams, e);
diff --git a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
index f41aa127..4e259b5e 100644
--- a/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
+++ b/app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java
@@ -342,7 +342,7 @@ private void exportTransactions(XmlSerializer xmlSerializer, boolean exportTempl
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_DATE_POSTED);
 
                 // date entered, time when the transaction was actually created
-                Timestamp timeEntered = TimestampHelper.getTimestampForUtcString(cursor.getString(cursor.getColumnIndexOrThrow("trans_date_posted")));
+                Timestamp timeEntered = TimestampHelper.getTimestampFromUtcString(cursor.getString(cursor.getColumnIndexOrThrow("trans_date_posted")));
                 String dateEntered = GncXmlHelper.formatDate(timeEntered.getTime());
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_DATE_ENTERED);
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_TS_DATE);
@@ -539,7 +539,7 @@ private void exportScheduledTransactions(XmlSerializer xmlSerializer) throws IOE
 
             //start date
             String createdTimestamp = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_CREATED_AT));
-            long scheduleStartTime = TimestampHelper.getTimestampForUtcString(createdTimestamp).getTime();
+            long scheduleStartTime = TimestampHelper.getTimestampFromUtcString(createdTimestamp).getTime();
             serializeDate(xmlSerializer, GncXmlHelper.TAG_SX_START, scheduleStartTime);
 
             long lastRunTime = cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_LAST_RUN));
@@ -659,7 +659,7 @@ private void exportPrices(XmlSerializer xmlSerializer) throws IOException {
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_COMMODITY_ID);
                 xmlSerializer.endTag(null, GncXmlHelper.TAG_PRICE_CURRENCY);
                 // time
-                String strDate = GncXmlHelper.formatDate(TimestampHelper.getTimestampForUtcString(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_DATE))).getTime());
+                String strDate = GncXmlHelper.formatDate(TimestampHelper.getTimestampFromUtcString(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_DATE))).getTime());
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_PRICE_TIME);
                 xmlSerializer.startTag(null, GncXmlHelper.TAG_TS_DATE);
                 xmlSerializer.text(strDate);
diff --git a/app/src/main/java/org/gnucash/android/model/BaseModel.java b/app/src/main/java/org/gnucash/android/model/BaseModel.java
index 38c68802..2b113450 100644
--- a/app/src/main/java/org/gnucash/android/model/BaseModel.java
+++ b/app/src/main/java/org/gnucash/android/model/BaseModel.java
@@ -42,8 +42,8 @@
      * A unique ID will be generated on demand with a call to {@link #getUID()}</p>
      */
     public BaseModel(){
-        mCreatedTimestamp = TimestampHelper.getTimestampForNow();
-        mModifiedTimestamp = TimestampHelper.getTimestampForNow();
+        mCreatedTimestamp = TimestampHelper.getTimestampFromNow();
+        mModifiedTimestamp = TimestampHelper.getTimestampFromNow();
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/model/Price.java b/app/src/main/java/org/gnucash/android/model/Price.java
index b0c2f0cc..79c572f1 100644
--- a/app/src/main/java/org/gnucash/android/model/Price.java
+++ b/app/src/main/java/org/gnucash/android/model/Price.java
@@ -23,7 +23,7 @@
     public static final String SOURCE_USER = "user:xfer-dialog";
 
     public Price(){
-        mDate = TimestampHelper.getTimestampForNow();
+        mDate = TimestampHelper.getTimestampFromNow();
     }
 
     /**
@@ -34,7 +34,7 @@ public Price(){
     public Price(String commodityUID, String currencyUID){
         this.mCommodityUID = commodityUID;
         this.mCurrencyUID = currencyUID;
-        mDate = TimestampHelper.getTimestampForNow();
+        mDate = TimestampHelper.getTimestampFromNow();
     }
 
     public String getCommodityUID() {
diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 180e4b3f..05dc1a9f 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -265,7 +265,7 @@ private void startExport(){
 		ExportParams exportParameters = new ExportParams(mExportFormat);
 
 		if (mExportAllSwitch.isChecked()){
-			exportParameters.setExportStartTime(TimestampHelper.getTimestampForEpochZero());
+			exportParameters.setExportStartTime(TimestampHelper.getTimestampFromEpochZero());
 		} else {
 			exportParameters.setExportStartTime(new Timestamp(mExportStartCalendar.getTimeInMillis()));
 		}
diff --git a/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
index b48ef746..a6d9d19a 100644
--- a/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
+++ b/app/src/main/java/org/gnucash/android/util/PreferencesHelper.java
@@ -37,8 +37,6 @@ private PreferencesHelper() {}
      */
     protected static final String LOG_TAG = "PreferencesHelper";
 
-
-    private static final String PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE = "PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE";
     private static final String PREFERENCE_LAST_EXPORT_TIME_KEY = "last_export_time";
 
     /**
@@ -48,7 +46,7 @@ private PreferencesHelper() {}
      * @param lastExportTime the last export time to set.
      */
     public static void setLastExportTime(Timestamp lastExportTime) {
-        final String utcString = TimestampHelper.getUtcStringForTimestamp(lastExportTime);
+        final String utcString = TimestampHelper.getUtcStringFromTimestamp(lastExportTime);
         Log.d(LOG_TAG, "Storing '" + utcString + "' as lastExportTime in Android Preferences.");
         PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
                 .edit()
@@ -63,9 +61,9 @@ public static void setLastExportTime(Timestamp lastExportTime) {
      */
     public static Timestamp getLastExportTime() {
         final String utcString = PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
-                .getString(PREFERENCE_LAST_EXPORT_TIME_KEY, PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE);
+                .getString(PREFERENCE_LAST_EXPORT_TIME_KEY,
+                        TimestampHelper.getUtcStringFromTimestamp(TimestampHelper.getTimestampFromEpochZero()));
         Log.d(LOG_TAG, "Retrieving '" + utcString + "' as lastExportTime from Android Preferences.");
-        return PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE.equals(utcString) ?
-                TimestampHelper.getTimestampForEpochZero() : TimestampHelper.getTimestampForUtcString(utcString);
+        return TimestampHelper.getTimestampFromUtcString(utcString);
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/org/gnucash/android/util/TimestampHelper.java b/app/src/main/java/org/gnucash/android/util/TimestampHelper.java
index ca021ca6..407f187c 100644
--- a/app/src/main/java/org/gnucash/android/util/TimestampHelper.java
+++ b/app/src/main/java/org/gnucash/android/util/TimestampHelper.java
@@ -48,14 +48,14 @@ private TimestampHelper() {}
      * @param timestamp The {@link Timestamp} to format.
      * @return The formatted {@link String}.
      */
-    public static String getUtcStringForTimestamp(Timestamp timestamp) {
+    public static String getUtcStringFromTimestamp(Timestamp timestamp) {
         return UTC_DATE_WITH_MILLISECONDS_FORMAT.withZone(UTC_TIME_ZONE).print(timestamp.getTime());
     }
 
     /**
      * @return A {@link Timestamp} with time in milliseconds equals to zero.
      */
-    public static Timestamp getTimestampForEpochZero() {
+    public static Timestamp getTimestampFromEpochZero() {
         return new Timestamp(0);
     }
 
@@ -68,7 +68,7 @@ public static Timestamp getTimestampForEpochZero() {
      * @param utcString A {@link String} in UTC.
      * @return A {@link Timestamp} for given utcString.
      */
-    public static Timestamp getTimestampForUtcString(String utcString) {
+    public static Timestamp getTimestampFromUtcString(String utcString) {
         DateTime dateTime;
         try {
 
@@ -93,7 +93,7 @@ public static Timestamp getTimestampForUtcString(String utcString) {
     /**
      * @return A {@link Timestamp} initialized with the system current time.
      */
-    public static Timestamp getTimestampForNow() {
+    public static Timestamp getTimestampFromNow() {
         return new Timestamp(System.currentTimeMillis());
     }
 }
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java b/app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java
index 517b4c47..e2b131d0 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/db/MigrationHelperTest.java
@@ -48,17 +48,17 @@ public void shouldSubtractTimeZoneOffset() {
 
         TimeZone timeZone = TimeZone.getTimeZone("GMT-1:00");
         Timestamp result = MigrationHelper.subtractTimeZoneOffset(unixBillenniumTimestamp, timeZone);
-        assertThat(TimestampHelper.getUtcStringForTimestamp(result))
+        assertThat(TimestampHelper.getUtcStringFromTimestamp(result))
                 .isEqualTo(unixBillenniumUtcStringAfterSubtract);
 
         timeZone = TimeZone.getTimeZone("GMT+1:00");
         result = MigrationHelper.subtractTimeZoneOffset(unixBillenniumTimestamp, timeZone);
-        assertThat(TimestampHelper.getUtcStringForTimestamp(result))
+        assertThat(TimestampHelper.getUtcStringFromTimestamp(result))
                 .isEqualTo(unixBillenniumUtcStringAfterSubtract);
 
         timeZone = TimeZone.getTimeZone("GMT+0:00");
         result = MigrationHelper.subtractTimeZoneOffset(unixBillenniumTimestamp, timeZone);
-        assertThat(TimestampHelper.getUtcStringForTimestamp(result))
+        assertThat(TimestampHelper.getUtcStringFromTimestamp(result))
                 .isEqualTo(unixBillenniumUtcString);
     }
 }
\ No newline at end of file
diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java b/app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java
index ceb7d0ae..13cc3d22 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/util/PreferencesHelperTest.java
@@ -36,7 +36,7 @@
     @Test
     public void shouldGetLastExportTimeDefaultValue() {
         final Timestamp lastExportTime = PreferencesHelper.getLastExportTime();
-        assertThat(lastExportTime).isEqualTo(TimestampHelper.getTimestampForEpochZero());
+        assertThat(lastExportTime).isEqualTo(TimestampHelper.getTimestampFromEpochZero());
     }
 
     @Test
diff --git a/app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java b/app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java
index 2c9d1091..e887dc0a 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/util/TimestampHelperTest.java
@@ -33,7 +33,7 @@
 public class TimestampHelperTest {
 
     @Test
-    public void shouldGetUtcStringForTimestamp() {
+    public void shouldGetUtcStringFromTimestamp() {
         /**
          * The values used here are well known.
          * See https://en.wikipedia.org/wiki/Unix_time#Notable_events_in_Unix_time
@@ -43,47 +43,47 @@ public void shouldGetUtcStringForTimestamp() {
         final long unixBillennium = 1_000_000_000 * 1000L;
         final String unixBillenniumUtcString = "2001-09-09 01:46:40.000";
         final Timestamp unixBillenniumTimestamp = new Timestamp(unixBillennium);
-        assertThat(TimestampHelper.getUtcStringForTimestamp(unixBillenniumTimestamp))
+        assertThat(TimestampHelper.getUtcStringFromTimestamp(unixBillenniumTimestamp))
                 .isEqualTo(unixBillenniumUtcString);
 
         final long the1234567890thSecond = 1234567890 * 1000L;
         final String the1234567890thSecondUtcString = "2009-02-13 23:31:30.000";
         final Timestamp the1234567890thSecondTimestamp = new Timestamp(the1234567890thSecond);
-        assertThat(TimestampHelper.getUtcStringForTimestamp(the1234567890thSecondTimestamp))
+        assertThat(TimestampHelper.getUtcStringFromTimestamp(the1234567890thSecondTimestamp))
                 .isEqualTo(the1234567890thSecondUtcString);
     }
 
     @Test
-    public void shouldGetTimestampForEpochZero() {
-        Timestamp epochZero = TimestampHelper.getTimestampForEpochZero();
+    public void shouldGetTimestampFromEpochZero() {
+        Timestamp epochZero = TimestampHelper.getTimestampFromEpochZero();
         assertThat(epochZero.getTime()).isZero();
     }
 
     @Test
-    public void shouldGetTimestampForUtcString() {
+    public void shouldGetTimestampFromUtcString() {
         final long unixBillennium = 1_000_000_000 * 1000L;
         final String unixBillenniumUtcString = "2001-09-09 01:46:40";
         final String unixBillenniumWithMillisecondsUtcString = "2001-09-09 01:46:40.000";
         final Timestamp unixBillenniumTimestamp = new Timestamp(unixBillennium);
-        assertThat(TimestampHelper.getTimestampForUtcString(unixBillenniumUtcString))
+        assertThat(TimestampHelper.getTimestampFromUtcString(unixBillenniumUtcString))
                 .isEqualTo(unixBillenniumTimestamp);
-        assertThat(TimestampHelper.getTimestampForUtcString(unixBillenniumWithMillisecondsUtcString))
+        assertThat(TimestampHelper.getTimestampFromUtcString(unixBillenniumWithMillisecondsUtcString))
                 .isEqualTo(unixBillenniumTimestamp);
 
         final long the1234567890thSecond = 1234567890 * 1000L;
         final String the1234567890thSecondUtcString = "2009-02-13 23:31:30";
         final String the1234567890thSecondWithMillisecondsUtcString = "2009-02-13 23:31:30.000";
         final Timestamp the1234567890thSecondTimestamp = new Timestamp(the1234567890thSecond);
-        assertThat(TimestampHelper.getTimestampForUtcString(the1234567890thSecondUtcString))
+        assertThat(TimestampHelper.getTimestampFromUtcString(the1234567890thSecondUtcString))
                 .isEqualTo(the1234567890thSecondTimestamp);
-        assertThat(TimestampHelper.getTimestampForUtcString(the1234567890thSecondWithMillisecondsUtcString))
+        assertThat(TimestampHelper.getTimestampFromUtcString(the1234567890thSecondWithMillisecondsUtcString))
                 .isEqualTo(the1234567890thSecondTimestamp);
     }
 
     @Test
-    public void shouldGetTimestampForNow() {
+    public void shouldGetTimestampFromNow() {
         final long before = System.currentTimeMillis();
-        final long now = TimestampHelper.getTimestampForNow().getTime();
+        final long now = TimestampHelper.getTimestampFromNow().getTime();
         final long after = System.currentTimeMillis();
         assertThat(now).isGreaterThanOrEqualTo(before)
                        .isLessThanOrEqualTo(after);

From 41e70def5cf1020d3bc063aef1f7db2cb78157e8 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Mon, 8 Feb 2016 14:41:17 +0100
Subject: [PATCH 14/16] Upgraded version numbers and changelog for first beta
 release

---
 CHANGELOG.md                                                            | 2 ++
 app/build.gradle                                                        | 2 +-
 .../org/gnucash/android/ui/transaction/TransactionFormFragment.java     | 2 +-
 3 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 00e00a69..9dff5452 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -7,6 +7,8 @@ Version 2.0.6 *(2016-02-20)*
 * Fixed: Amount text boxes in split editor sometimes do not get focus
 * Fixed: Crash when saving account with no transfer account selected
 * Fixed: Crash when creating a new transaction with no transfer account
+* Fixed: All transactions are always exported for some time zones
+* Improved: Add translation for Japanese. Updated Italian and Russian
 
 Version 2.0.5 *(2015-12-12)*
 ----------------------------
diff --git a/app/build.gradle b/app/build.gradle
index 43650a56..90b84094 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -6,7 +6,7 @@ apply plugin: 'io.fabric'
 def versionMajor = 2
 def versionMinor = 0
 def versionPatch = 6
-def versionBuild = 0
+def versionBuild = 1
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")
diff --git a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
index 4bb328f0..f5ce13d0 100644
--- a/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/transaction/TransactionFormFragment.java
@@ -939,7 +939,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
      */
     private boolean canSave(){
         return (mAmountEditText.isInputValid())
-                || (mUseDoubleEntry && mTransferAccountSpinner.getCount() == 0);
+                || (mUseDoubleEntry && mTransferAccountSpinner.getCount() > 0);
     }
 
     /**

From 3028efd8c25a0495411d0463ac5f681af82dfbb0 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Tue, 16 Feb 2016 10:08:45 +0100
Subject: [PATCH 15/16] Update version numbers for v2.0.6 release

Updated Italian and Chinese simplified translations
---
 app/build.gradle                           |   2 +-
 app/src/main/res/values-it-rIT/strings.xml | 124 ++++---
 app/src/main/res/values-pt/strings.xml     | 505 -----------------------------
 app/src/main/res/values-zh-rCN/strings.xml |  10 +-
 4 files changed, 67 insertions(+), 574 deletions(-)
 delete mode 100644 app/src/main/res/values-pt/strings.xml

diff --git a/app/build.gradle b/app/build.gradle
index 90b84094..09bd63f4 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -6,7 +6,7 @@ apply plugin: 'io.fabric'
 def versionMajor = 2
 def versionMinor = 0
 def versionPatch = 6
-def versionBuild = 1
+def versionBuild = 2
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")
diff --git a/app/src/main/res/values-it-rIT/strings.xml b/app/src/main/res/values-it-rIT/strings.xml
index 72e70d73..722ce364 100644
--- a/app/src/main/res/values-it-rIT/strings.xml
+++ b/app/src/main/res/values-it-rIT/strings.xml
@@ -15,21 +15,21 @@
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+<resources>
   <string name="title_create_account">Crea conto</string>
   <string name="title_edit_account">Modifica conto</string>
   <string name="info_details">Informazioni</string>
-  <string name="menu_export">Esporta OFX</string>
+  <string name="menu_export">Esporta&#8230;</string>
   <string name="description_add_transaction_icon">Aggiungi una nuova transazione al conto</string>
   <string name="label_no_accounts">Nessun conto da visualizzare</string>
   <string name="label_account_name">Nome conto</string>
   <string name="btn_cancel">Annulla</string>
   <string name="btn_save">Salva</string>
-  <string name="label_passcode">Inserire codice di accesso</string>
-  <string name="toast_wrong_passcode">Codice di accesso errato, ritentare</string>
+  <string name="label_passcode">Inserisci codice di accesso</string>
+  <string name="toast_wrong_passcode">Codice di accesso errato, riprova</string>
   <string name="toast_passcode_set">Codice di accesso impostato</string>
-  <string name="label_confirm_passcode">Conferma del codice di accesso</string>
-  <string name="toast_invalid_passcode_confirmation">Conferma del codice di accesso errata. Riprovare</string>
+  <string name="label_confirm_passcode">Conferma il codice di accesso</string>
+  <string name="toast_invalid_passcode_confirmation">Conferma del codice di accesso errata. Riprova.</string>
   <string name="label_transaction_name">Descrizione</string>
   <string name="label_transaction_amount">Importo</string>
   <string name="title_add_transaction">Nuova transazione</string>
@@ -47,24 +47,24 @@
   <string name="title_confirm_delete">Conferma eliminazione</string>
   <string name="delete_account_confirmation_message">Verranno eliminate anche tutte le transazioni in questo conto</string>
   <string name="title_edit_transaction">Modifica transazione</string>
-  <string name="label_transaction_description">Nota</string>
+  <string name="label_transaction_description">Aggiungi nota</string>
   <string name="menu_move">SPOSTA</string>
   <string name="title_selected">%1$d selezionate</string>
-  <string name="label_account_balance">Somma totale:</string>
-  <string name="label_export_destination">Esporta in:</string>
+  <string name="label_account_balance">Bilancio:</string>
+  <string name="label_export_destination">Esporta su:</string>
   <string name="title_export_dialog">Esporta transazioni</string>
   <string name="option_export_all_transactions">Esporta tutte le transazioni</string>
-  <string name="hint_export_choice">Di default, verranno esportate solo le transazioni dall\'ultima esportazione. Selezionare questa opzione per esportare tutte le transazioni</string>
-  <string name="toast_export_error">Errore nell\'esportazione dei dati %1$s</string>
+  <string name="hint_export_choice">Per impostazione predefinita, verranno esportate solo le transazioni dall\'ultima esportazione. Selezionare questa opzione per esportare tutte le transazioni</string>
+  <string name="toast_export_error">Errore nell\'esportazione del file %1$s</string>
   <string name="btn_export">Esporta</string>
   <string name="option_delete_after_export">Elimina le transazioni dopo l\'esportazione</string>
   <string name="hint_delete_after_export">Tutte le transazioni esportate verranno eliminate al termine dell\'esportazione</string>
   <string name="title_settings">Impostazioni</string>
   <string-array name="export_destinations">
     <item>Scheda SD</item>
-    <item>DropBox</item>
+    <item>Dropbox</item>
     <item>Google Drive</item>
-    <item>Condividi file&#8230;</item>
+    <item>Invia a&#8230;</item>
   </string-array>
   <string name="btn_move">Sposta</string>
   <string name="title_move_transactions">Sposta %1$d transazioni</string>
@@ -73,12 +73,12 @@
   <string name="toast_incompatible_currency">Impossibile spostare le transazioni.\nIl conto di destinazione ha una valuta diversa dal conto di origine</string>
   <string name="header_general_settings">Generali</string>
   <string name="header_about_gnucash">Informazioni</string>
-  <string name="title_choose_currency">Selezione della valuta predefinita</string>
+  <string name="title_choose_currency">Scegli valuta predefinita</string>
   <string name="title_default_currency">Valuta predefinita</string>
   <string name="summary_default_currency">Valuta predefinita da assegnare ai nuovi conti</string>
   <string name="label_permission_record_transactions">Abilita la registrazione delle transazioni in GnuCash per Android</string>
   <string name="label_permission_create_accounts">Abilita la creazione dei conti in GnuCash per Android</string>
-  <string name="label_permission_group">I propri dati di GnuCash</string>
+  <string name="label_permission_group">I tuoi dati di GnuCash</string>
   <string name="description_permission_group">Legge e modifica i dati di GnuCash</string>
   <string name="label_permission_record_transaction">Registra le transazioni in GnuCash</string>
   <string name="label_permission_create_account">Crea conti in GnuCash</string>
@@ -89,7 +89,7 @@
   <string name="title_build_version">Versione build</string>
   <string name="title_license">Licenza</string>
   <string name="summary_licence_details">Apache License v2.0. Fare clic per i dettagli</string>
-  <string name="title_general_prefs">Generale</string>
+  <string name="title_general_prefs">Preferenze generali</string>
   <string name="label_widget_configuration">Seleziona conto</string>
   <string name="toast_no_transactions_to_export">Non sono disponibili transazioni da esportare</string>
   <string name="header_passcode_settings">Codice di accesso</string>
@@ -101,11 +101,11 @@
   <string name="summary_about_gnucash">La gestione finanziaria in mobilit e un traccia-spese progettato per Android</string>
   <string name="title_about">Informazioni</string>
   <string name="toast_format_exported_to">File %1$s esportato in:\n</string>
-  <string name="title_export_email">Esportazione file %1$s di GnuCash</string>
-  <string name="description_export_email">Esportazione di GnuCash Android con </string>
+  <string name="title_export_email">Esportazione %1$s di GnuCash per Android</string>
+  <string name="description_export_email">Esportazione di GnuCash per Android da </string>
   <string name="header_transaction_settings">Transazioni</string>
-  <string name="title_transaction_preferences">Preferenze della transazione</string>
-  <string name="title_account_preferences">Preferenze del conto</string>
+  <string name="title_transaction_preferences">Preferenze transazione</string>
+  <string name="title_account_preferences">Preferenze conto</string>
   <string name="title_default_transaction_type">Tipo di transazione predefinita</string>
   <string name="summary_default_transaction_type">Il tipo di transazione da usare come predefinita, CREDITO o DEBITO</string>
   <string-array name="transaction_types">
@@ -118,16 +118,16 @@
   <string name="title_export_all_transactions">Esporta tutte le transazioni</string>
   <string name="title_always_delete_exported_transactions">Elimina le transazioni esportate</string>
   <string name="title_default_export_email">Email predefinita di esportazione</string>
-  <string name="summary_default_export_email">L\'indirizzo email predefinito a cui inviare i file esportati.  comunque possibile modificare l\'indirizzo quando si esporta</string>
+  <string name="summary_default_export_email">L\'indirizzo email predefinito a cui inviare i file esportati.  comunque possibile modificare l\'indirizzo quando si esporta.</string>
   <string name="label_double_entry_account">Conto di trasferimento</string>
   <string name="summary_use_double_entry">Tutte le transazioni consisteranno in un trasferimento di denaro da un conto a un altro</string>
   <string name="title_use_double_entry">Abilita partita doppia</string>
   <string name="account_balance">Saldo</string>
   <string name="toast_no_account_name_entered">Inserire un nome per creare il conto</string>
   <string name="label_account_currency">Valuta</string>
-  <string name="label_parent_account">Conto principale</string>
+  <string name="label_parent_account">Conto padre</string>
   <string name="title_xml_ofx_header">Usa header XML OFX</string>
-  <string name="summary_xml_ofx_header">Abilitare questa opzione quando si esporta verso un\'applicazione diversa da GnuCash versione desktop</string>
+  <string name="summary_xml_ofx_header">Abilitare questa opzione quando si esporta verso un\'applicazione diversa da GnuCash per desktop</string>
   <string name="title_whats_new">Novit</string>
   <string name="whats_new">
 - App in Material Design \n
@@ -144,20 +144,18 @@
   <string name="btn_import_accounts">Importa conti</string>
   <string name="toast_error_importing_accounts">Si  verificato un errore nell\'importare i conti di GnuCash</string>
   <string name="toast_success_importing_accounts">I conti di GnuCash sono stati importati correttamente</string>
-  <string name="summary_import_accounts">Importa una struttura dei conti esportata da GnuCash versione desktop</string>
-  <string name="title_import_accounts">Importa conti di GnuCash</string>
+  <string name="summary_import_accounts">Importa una struttura dei conti esportata da GnuCash per desktop</string>
+  <string name="title_import_accounts">Importa XML di GnuCash</string>
   <string name="summary_delete_all_accounts">Elimina tutti i conti nel database. Verranno eliminate anche tutte le transazioni.
     </string>
   <string name="title_delete_all_accounts">Elimina tutti i conti</string>
   <string name="header_account_settings">Conti</string>
-  <string name="toast_all_accounts_deleted">Tutti i conti sono stati eliminati</string>
-  <string name="confirm_delete_all_accounts">Eliminare davvero tutti i conti e le transazioni? \nQuesta
-        operazione non pu essere annullata!
-    </string>
+  <string name="toast_all_accounts_deleted">Tutti i conti sono stati eliminati con successo</string>
+  <string name="confirm_delete_all_accounts">Eliminare davvero tutti i conti e le transazioni?\n\nQuesta operazione non pu essere annullata!</string>
   <string name="label_account_type">Tipo di conto</string>
-  <string name="summary_delete_all_transactions">Verranno eliminate tutte le transazioni in tutti i conti</string>
+  <string name="summary_delete_all_transactions">Verranno eliminate tutte le transazioni in tutti i conti!</string>
   <string name="title_delete_all_transactions">Elimina tutte le transazioni</string>
-  <string name="toast_all_transactions_deleted">Tutte le transazioni sono state eliminate!</string>
+  <string name="toast_all_transactions_deleted">Tutte le transazioni sono state eliminate con successo!</string>
   <string name="title_progress_importing_accounts">Importazione dei conti</string>
   <string name="toast_tap_again_to_confirm_delete">Premere di nuovo per confermare. Tutti gli elementi verranno rimossi!!</string>
   <string name="section_header_transactions">Transazioni</string>
@@ -166,13 +164,13 @@
   <string name="title_default_export_format">Formato predefinito di esportazione</string>
   <string name="summary_default_export_format">Formato di file predefinito da utilizzare per l\'esportazione delle transazioni</string>
   <string name="menu_export_transactions">Esporta transazioni&#8230;</string>
-  <string name="label_recurring_transaction">Ricorrenza</string>
+  <string name="label_recurring_transaction">Ripetizione</string>
   <string name="imbalance_account_name">Sbilancio</string>
-  <string name="title_progress_exporting_transactions">Esportazione transazioni</string>
-  <string name="label_no_recurring_transactions">Nessuna transazione pianificata da visualizzare.</string>
-  <string name="toast_recurring_transaction_deleted">Transazione pianificata eliminata</string>
+  <string name="title_progress_exporting_transactions">Esportazione transazioni in corso</string>
+  <string name="label_no_recurring_transactions">Nessuna transazione ricorrente da visualizzare.</string>
+  <string name="toast_recurring_transaction_deleted">Transazione ricorrente eliminata con successo</string>
   <string name="label_placeholder_account">Conto segnalibro</string>
-  <string name="label_default_transfer_account">DConto predefinito di trasferimento</string>
+  <string name="label_default_transfer_account">Conto predefinito di trasferimento</string>
   <plurals name="label_sub_accounts">
     <item quantity="one">%d sotto-conto</item>
     <item quantity="other">%d sotto-conti</item>
@@ -183,8 +181,8 @@
     <item>CARTA DI CREDITO</item>
     <item>ATTIVIT</item>
     <item>PASSIVIT</item>
-    <item>ENTRATE</item>
-    <item>USCITE</item>
+    <item>ENTRATA</item>
+    <item>USCITA</item>
     <item>CONTO DEBITORE</item>
     <item>CONTO CREDITORE</item>
     <item>CAPITALE</item>
@@ -198,21 +196,21 @@
     <item>OFX</item>
     <item>XML</item>
   </string-array>
-  <string name="color_picker_default_title">Selezione del colore</string>
+  <string name="color_picker_default_title">Seleziona un colore</string>
   <string name="label_account_color_and_type">Tipo e colore del conto</string>
   <string name="label_delete_sub_accounts">Elimina i sottoconti</string>
   <string name="title_recent_accounts">Recenti</string>
-  <string name="title_favorite_accounts">Favoriti</string>
+  <string name="title_favorite_accounts">Preferiti</string>
   <string name="title_all_accounts">Tutti</string>
-  <string name="summary_create_default_accounts">Crea la struttura predefinita dei conti comuni di GnuCash</string>
+  <string name="summary_create_default_accounts">Crea la struttura predefinita di GnuCash dei conti comunemente utilizzati</string>
   <string name="title_create_default_accounts">Crea conti predefiniti</string>
   <string name="msg_confirm_create_default_accounts_setting">Tutti i conti e le transazioni nel dispositivo verranno cancellate.\n\nContinuare?</string>
   <string name="menu_scheduled_transactions">Transazioni pianificate</string>
   <string name="msg_confirm_create_default_accounts_first_run">Benvenuti in GnuCash per Android! \n possibile
         creare una struttura dei conti pi comunemente utilizzati o importare la propria struttura da GnuCash. \n\nEntrambe le
-        Opzioni sono disponibili nelle impostazioni dell\'applicazione ed  quindi possibile decidere in seguito.
+        opzioni sono disponibili nelle impostazioni dell\'applicazione ed  quindi possibile decidere in seguito.
     </string>
-  <string name="title_scheduled_transactions">Scheduled Transactions</string>
+  <string name="title_scheduled_transactions">Transazioni</string>
   <string name="title_select_export_destination">Seleziona la destinazione per l\'esportazione</string>
   <string name="hint_split_memo">Promemoria</string>
   <string name="label_spend">Spendere</string>
@@ -223,7 +221,7 @@
   <string name="label_charge">Addebito</string>
   <string name="label_decrease">Diminuzione</string>
   <string name="label_increase">Aumento</string>
-  <string name="label_income">Entrate</string>
+  <string name="label_income">Entrata</string>
   <string name="label_rebate">Rimborso</string>
   <string name="label_expense">Uscita</string>
   <string name="label_bill">Ricevuta</string>
@@ -252,7 +250,7 @@
   <string name="title_report_prefs">Preferenze resoconto</string>
   <string name="label_report_currency">Seleziona la valuta</string>
   <string name="title_use_account_color">Colore del conto nei resoconti</string>
-  <string name="summary_use_account_color">Usa il colore del conto nei grafici a barre/torta</string>
+  <string name="summary_use_account_color">Usa il colore del conto nei grafici a barre e nei grafici a torta</string>
   <string name="header_report_settings">Resoconti</string>
   <string name="menu_order_by_size">Ordina per dimensione</string>
   <string name="menu_toggle_legend">Mostra legenda</string>
@@ -270,13 +268,13 @@
   <string name="label_delete_account_transactions_description">Questo conto contiene delle transazioni. \nCosa vuoi fare con queste transazioni</string>
   <string name="label_delete_account_subaccounts_description">Questo conto contiene dei sotto-conti. \nCosa vuoi fare con questi sotto-conti</string>
   <string name="label_delete_transactions">Elimina transazioni</string>
-  <string name="toast_disable_double_entry_to_save_transaction">Crea e specifica un conto per il trasferimento O disattiva la partita doppia nelle impostazioni per salvare la transazione</string>
+  <string name="toast_disable_double_entry_to_save_transaction">Crea e specifica un conto per il trasferimento o disattiva la partita doppia nelle impostazioni per salvare la transazione</string>
   <string name="label_tap_to_create_schedule">Tocca per creare una pianificazione</string>
   <string name="title_restore_backup">Ripristina backup&#8230;</string>
-  <string name="header_backup_and_export_settings">Backup &amp; esportazione</string>
+  <string name="header_backup_and_export_settings">Backup e esportazione</string>
   <string name="title_dropbox_sync_preference">Sincronizzazione con Dropbox</string>
   <string name="title_backup_preference_category">Backup</string>
-  <string name="summary_dropbox_sync">Abilita la sincronizzazione con DropBox</string>
+  <string name="summary_dropbox_sync">Abilita la sincronizzazione con Dropbox</string>
   <string name="title_select_gnucash_xml_file">Seleziona un file XML di GnuCash</string>
   <string name="title_backup_prefs">Preferenze di backup</string>
   <string name="title_create_backup_pref">Crea backup</string>
@@ -285,15 +283,15 @@
   <string name="toast_backup_successful">Backup riuscito</string>
   <string name="toast_backup_failed">Backup non riuscito</string>
   <string name="export_warning_xml">Esporta tutti i conti e tutte le transazioni</string>
-  <string name="title_google_drive_sync_pref">Sincronizzazione Google Drive</string>
+  <string name="title_google_drive_sync_pref">Sincronizzazione con Google Drive</string>
   <string name="summary_google_drive_sync">Abilita la sincronizzazione con Google Drive</string>
   <string name="toast_install_file_manager">Installa un file manager per selezionare i file</string>
   <string name="title_select_backup_to_restore">Seleziona il backup da ripristinare</string>
   <string name="nav_menu_favorites">Preferiti</string>
-  <string name="nav_menu_open">Open...</string>
+  <string name="nav_menu_open">Apri&#8230;</string>
   <string name="nav_menu_reports">Resoconti</string>
   <string name="nav_menu_scheduled_transactions">Transazioni pianificate</string>
-  <string name="nav_menu_export">Export...</string>
+  <string name="nav_menu_export">Esporta&#8230;</string>
   <string name="nav_menu_settings">Impostazioni</string>
   <plurals name="label_every_x_days">
     <item quantity="one">Ogni giorno</item>
@@ -318,39 +316,39 @@
   <string name="label_old_passcode">Inserisci il vecchio codice di accesso</string>
   <string name="label_new_passcode">Inserisci il nuovo codice di accesso</string>
   <string name="nav_menu_scheduled_backups">Esportazioni pianificate</string>
-  <string name="title_scheduled_exports">Scheduled Exports</string>
+  <string name="title_scheduled_exports">Esportazioni</string>
   <string name="label_no_scheduled_exports_to_display">Nessuna esportazione pianificata da visualizzare</string>
-  <string name="title_create_export_schedule">Crea un programma di esportazione</string>
-  <string name="toast_exported_to">Esportato in: %1$s</string>
-  <string name="toast_legend_too_long">La leggenda  troppo lunga</string>
+  <string name="title_create_export_schedule">Crea una esportazione pianificata</string>
+  <string name="toast_exported_to">Esportato su: %1$s</string>
+  <string name="toast_legend_too_long">La legenda  troppo lunga</string>
   <string name="hint_account_description">Descrizione conto</string>
   <string name="label_no_recent_accounts">Nessun conto recente</string>
   <string name="label_no_favorite_accounts">Nessun conto preferito</string>
   <string name="nav_menu_scheduled_actions">Azioni pianificate</string>
-  <string name="label_scheduled_action_ended">"Ended, last executed on "</string>
+  <string name="label_scheduled_action_ended">"Terminata, ultima esecuzione il %1$s"</string>
   <string name="label_select_bar_to_view_details">Seleziona una barra per vedere i dettagli</string>
   <string name="btn_wizard_next">Avanti</string>
   <string name="btn_wizard_finish">Fatto</string>
   <string name="wizard_title_default_currency">Valuta predefinita</string>
   <string name="wizard_title_account_setup">Impostazione conti</string>
   <string name="wizard_title_select_currency">Seleziona valuta</string>
-  <string name="wizard_title_feedback_options">Opzioni di feedback</string>
+  <string name="wizard_title_feedback_options">Opzioni commento</string>
   <string name="wizard_option_create_default_accounts">Crea conti predefiniti</string>
   <string name="wizard_option_import_my_accounts">Importa i miei conti</string>
   <string name="wizard_option_let_me_handle_it">Lascia fare a me</string>
-  <string name="wizard_option_currency_other">Other...</string>
+  <string name="wizard_option_currency_other">Altro&#8230;</string>
   <string name="wizard_option_auto_send_crash_reports">Invia automaticamente le segnalazioni di arresto anomalo</string>
   <string name="wizard_option_disable_crash_reports">Disattiva le segnalazioni dei crash</string>
   <string name="wizard_btn_back">Indietro</string>
   <string name="title_setup_gnucash">Imposta GnuCash</string>
   <string name="wizard_title_welcome_to_gnucash">Benvenuto in GnuCash</string>
-  <string name="msg_wizard_welcome_page">Prima di gettarti a capofitto, \nimpostiamo alcune cose prima.\n\nPer continuare, premi Avanti.</string>
+  <string name="msg_wizard_welcome_page">Prima di gettarti a capofitto, \n per cominciare impostiamo alcune cose.\n\nPer continuare, premi Avanti.</string>
   <string name="title_split_editor">Editor suddivisione</string>
   <string name="toast_error_check_split_amounts">Controlla che tutte le suddivisioni abbiano degli importi validi prima di salvare!</string>
   <string name="label_error_invalid_expression">Espressione non valida!</string>
   <string name="toast_scheduled_recurring_transaction">Transazioni ricorrenti pianificate</string>
-  <string name="error_exchange_rate_required">Il tasso di cambio  necessario</string>
-  <string name="error_converted_amount_required">L\'importo convertito  necessario</string>
+  <string name="error_exchange_rate_required">Il tasso di cambio  obbligatorio</string>
+  <string name="error_converted_amount_required">L\'importo convertito  obbligatorio</string>
   <string name="title_transfer_funds">Trasferisci fondi</string>
   <string name="nav_menu_help"><![CDATA[Aiuto & Feedback]]></string>
   <string name="label_select_pie_slice_to_see_details">Seleziona una fetta per vedere i dettagli</string>
@@ -375,13 +373,13 @@
   <string name="menu_group_by_month">Mese</string>
   <string name="menu_group_by_quarter">Trimestre</string>
   <string name="menu_group_by_year">Anno</string>
-  <string name="title_balance_sheet_report">Stato patrimoniale</string>
+  <string name="title_balance_sheet_report">Bilancio</string>
   <string name="label_balance_sheet_total">Totale:</string>
   <string name="title_google_plus_community">Community Google+</string>
   <string name="title_translate_gnucash">Traduzione di GnuCash</string>
   <string name="summary_google_plus">Condivi idee, discuti dei cambiamenti o segnala dei problemi</string>
   <string name="summary_translate_gnucash">Traduci o revisiona su Crowdin</string>
-  <string name="toast_no_compatible_apps_to_receive_export">Nessuna app compatibile per ricevere le transazioni esportate!</string>
+  <string name="toast_no_compatible_apps_to_receive_export">Nessuna app compatibile con la ricezione delle transazioni esportate!</string>
   <string name="menu_move_transaction">Sposta...</string>
   <string name="menu_duplicate_transaction">Duplica</string>
   <string-array name="report_time_range">
diff --git a/app/src/main/res/values-pt/strings.xml b/app/src/main/res/values-pt/strings.xml
deleted file mode 100644
index abbcfa58..00000000
--- a/app/src/main/res/values-pt/strings.xml
+++ /dev/null
@@ -1,505 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Copyright (c) 2012 - 2014 Ngewi Fet <ngewif@gmail.com>
- 
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
- 
-    http://www.apache.org/licenses/LICENSE-2.0
- 
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="label_create_account">Criar Conta</string>
-    <string name="title_edit_account">Editar Conta</string>
-    <string name="info_details">Info</string>
-	<string name="menu_export">Exportar</string>
-    <string name="description_add_transaction_icon">Adicionar nova transa&#231;&#227;o a uma conta</string>
-    <string name="label_no_accounts">Sem contas para mostrar</string>
-    <string name="label_account_name">Nome da Conta</string>
-    <string name="btn_cancel">Cancelar</string>
-    <string name="btn_save">Gravar</string>
-    <string name="label_passcode">Introduza a palavra passe</string>
-    <string name="toast_wrong_passcode">Password incorrecta, por favor tente novamente</string>
-    <string name="toast_passcode_set">Defini&#231;&#227;o de palavra passe</string>
-    <string name="label_confirm_passcode">Por favor confirme a sua palavra passe</string>
-    <string name="toast_invalid_passcode_confirmation">Confirma&#231;&#227;o de palavra passe inv&#225;lida. Por favor tente novamnete</string>
-    <string name="label_transaction_name">Descri&#231;&#227;o</string>
-    <string name="label_transaction_amount">Valor</string>
-    <string name="title_add_transaction">Nova transa&#231;&#227;o</string>
-    <string name="label_no_transactions">Sem transa&#231;&#245;es para mostrar</string>
-    <string name="label_timeanddate">DATA &amp; HORA</string>
-    <string name="label_account">Conta</string>
-    <string name="label_debit">D&#201;BITO</string>
-    <string name="label_credit">CR&#201;DITO</string>
-    <string name="title_accounts">Contas</string>
-    <string name="title_transactions">Transa&#231;&#245;es</string>
-    <string name="menu_delete">APAGAR</string>
-    <string name="alert_dialog_ok_delete">Apagar</string>
-    <string name="alert_dialog_cancel">Cancelar</string>
-    <string name="toast_account_deleted">Conta apagada</string>
-    <string name="title_confirm_delete">Confirma apagar</string>
-    <string name="delete_account_confirmation_message">Todas as transa&#231;&#245;e desta conta ser&#227;o tamb&#233;m apagadas</string>
-    <string name="title_edit_transaction">Editar Transa&#231;&#245;es</string>
-    <string name="label_transaction_description">Nota</string>
-    <string name="menu_move">MOVER</string>
-    <string name="title_selected">%1$d seleccionado</string>
-    <string name="label_account_balance">Saldo:</string>
-    <string name="label_export_destination">Destino da Exporta&#231;&#227;o</string>
-    <string name="title_export_dialog">Exportar Transa&#231;&#245;es</string>
-    <string name="option_export_all_transactions">Exportar todas as transa&#231;&#245;es</string>
-    <string name="hint_export_choice">Por defeito, apenas as novas transa&#231;&#245;es ap&#243;s a &#250;ltima exporta&#231;&#227;o ser&#227;o exportadas. Marque esta op&#231;&#227;o para exportar todas as transa&#231;&#245;es</string>
-    <string name="toast_export_error">Erro ao exportar o ficheiro %1$s</string>
-    <string name="btn_export">Exportar</string>
-    <string name="option_delete_after_export">Apagar ap&#243;s exporta&#231;&#227;o</string>
-    <string name="hint_delete_after_export">Todas as transa&#231;&#245;es exportadas ser&#227;o apagadas quando a exporta&#231;&#227;o estiver completa</string>
-	<string name="title_settings">Configura&#231;&#245;es</string>
-    <string-array name="export_destinations">
-        <item>Cart&#227;o SD</item>
-        <item>DropBox</item>
-        <item>Google Drive</item>
-        <item>Share file&#8230;</item>
-    </string-array>
-    <string name="btn_move">Mover</string>
-    <string name="title_move_transactions">Move %1$d transa&#231;&#227;o</string>
-    <string name="label_move_destination">Conta Destino</string>
-    <string name="permission_access_sdcard">Aceder ao SD Card</string>
-    <string name="toast_incompatible_currency">Imposs&#237;vel mover transa&#231;&#227;o.\nA conta destino usa uma moeda diferente da conta de origem.</string>
-    <string name="header_general_settings">Geral</string>
-    <string name="header_about_gnucash">Sobre</string>
-    <string name="title_choose_currency">Escolhe a moeda padr&#227;o</string>
-    <string name="title_default_currency">Moeda padr&#227;o</string>
-    <string name="summary_default_currency">Moeda padr&#227;o para as novas contas</string>
-    <string name="label_permission_record_transactions">Permite gravar transa&#231;&#245;es no GnuCash para Android</string>
-    <string name="label_permission_create_accounts">Permite criar contas no GnuCash para Android</string>
-    <string name="label_permission_group">Os seus dados Gnucash</string>
-    <string name="description_permission_group">Ler e modificar dados do GnuCash</string>
-    <string name="label_permission_record_transaction">Gravar transa&#231;&#245;es no GnuCash</string>
-    <string name="label_permission_create_account">Criar contas no GnuCash</string>
-    <string name="label_display_account">Mostrar conta</string>
-    <string name="btn_create_accounts">Criar Contas</string>
-    <string name="title_default_accounts">Escolha as contas a criar</string>
-    <string-array name="currency_names">
-        <item>Afghani</item>
-		<item>Algerian Dinar</item>
-		<item>Argentine Peso</item>
-		<item>Armenian Dram</item>
-		<item>Aruban Florin</item>
-		<item>Australian Dollar</item>
-		<item>Azerbaijanian Manat</item>
-		<item>Bahamian Dollar</item>
-		<item>Bahraini Dinar</item>
-		<item>Baht</item>
-		<item>Balboa</item>
-		<item>Barbados Dollar</item>
-		<item>Belarussian Ruble</item>
-		<item>Belize Dollar</item>
-		<item>Bermudian Dollar</item>
-		<item>Bolivar Fuerte</item>
-		<item>Boliviano</item>
-		<item>Brazilian Real</item>
-		<item>Brunei Dollar</item>
-		<item>Bulgarian Lev</item>
-		<item>Burundi Franc</item>
-		<item>Canadian Dollar</item>
-		<item>Cape Verde Escudo</item>
-		<item>Cayman Islands Dollar</item>
-		<item>CFA Franc BCEAO</item>
-		<item>CFA Franc BEAC</item>
-		<item>CFP Franc</item>
-		<item>Chilean Peso</item>
-		<item>Testing currency</item>
-		<item>Colombian Peso</item>
-		<item>Comoro Franc</item>
-		<item>Congolese Franc</item>
-		<item>Convertible Mark</item>
-		<item>Cordoba Oro</item>
-		<item>Costa Rican Colon</item>
-		<item>Croatian Kuna</item>
-        <item>Cuban Convertible Peso</item>
-		<item>Cuban Peso</item>
-		<item>Czech Koruna</item>
-		<item>Dalasi</item>
-		<item>Danish Krone</item>
-		<item>Denar</item>
-		<item>Djibouti Franc</item>
-		<item>Dobra</item>
-		<item>Dominican Peso</item>
-		<item>Dong</item>
-		<item>East Caribbean Dollar</item>
-		<item>Egyptian Pound</item>
-		<item>El Salvador Colon</item>
-		<item>Ethiopian Birr</item>
-		<item>Euro</item>
-		<item>Falkland Islands Pound</item>
-		<item>Fiji Dollar</item>
-		<item>Forint</item>
-		<item>Ghana Cedi</item>
-		<item>Gibraltar Pound</item>
-		<item>Gold</item>
-		<item>Gourde</item>
-		<item>Guarani</item>
-		<item>Guinea Franc</item>
-		<item>Guyana Dollar</item>
-		<item>Hong Kong Dollar</item>
-		<item>Hryvnia</item>
-		<item>Iceland Krona</item>
-		<item>Indian Rupee</item>
-		<item>Iranian Rial</item>
-		<item>Iraqi Dinar</item>
-		<item>Jamaican Dollar</item>
-		<item>Jordanian Dinar</item>
-		<item>Kenyan Shilling</item>
-		<item>Kina</item>
-		<item>Kip</item>
-		<item>Kuwaiti Dinar</item>
-		<item>Kwacha</item>
-		<item>Kwanza</item>
-		<item>Kyat</item>
-		<item>Lari</item>
-		<item>Latvian Lats</item>
-		<item>Lebanese Pound</item>
-		<item>Lek</item>
-		<item>Lempira</item>
-		<item>Leone</item>
-		<item>Liberian Dollar</item>
-		<item>Libyan Dinar</item>
-		<item>Lilangeni</item>
-		<item>Lithuanian Litas</item>
-		<item>Loti</item>
-		<item>Malagasy Ariary</item>
-		<item>Malaysian Ringgit</item>
-		<item>Mauritius Rupee</item>
-		<item>Mexican Peso</item>
-		<item>Mexican Unidad de Inversion (UDI)</item>
-		<item>Moldovan Leu</item>
-		<item>Moroccan Dirham</item>
-		<item>Mozambique Metical</item>
-		<item>Mvdol</item>
-		<item>Naira</item>
-		<item>Nakfa</item>
-		<item>Namibia Dollar</item>
-		<item>Nepalese Rupee</item>
-		<item>Netherlands Antillean Guilder</item>
-		<item>New Israeli Sheqel</item>
-		<item>New Romanian Leu</item>
-		<item>New Taiwan Dollar</item>
-		<item>New Zealand Dollar</item>
-		<item>Ngultrum</item>
-		<item>North Korean Won</item>
-		<item>Norwegian Krone</item>
-		<item>Nuevo Sol</item>
-		<item>Ouguiya</item>
-		<item>Paanga</item>
-		<item>Pakistan Rupee</item>
-		<item>Palladium</item>
-		<item>Pataca</item>
-		<item>Philippine Peso</item>
-		<item>Platinum</item>
-		<item>Pound Sterling</item>
-		<item>Pula</item>
-		<item>Qatari Rial</item>
-		<item>Quetzal</item>
-		<item>Rand</item>
-		<item>Rial Omani</item>
-		<item>Riel</item>
-		<item>Rufiyaa</item>
-		<item>Rupiah</item>
-		<item>Russian Ruble</item>
-		<item>Rwanda Franc</item>
-		<item>Saint Helena Pound</item>
-		<item>Saudi Riyal</item>
-		<item>SDR (Special Drawing Right)</item>
-		<item>Serbian Dinar</item>
-		<item>Seychelles Rupee</item>
-		<item>Silver</item>
-		<item>Singapore Dollar</item>
-		<item>Solomon Islands Dollar</item>
-		<item>Som</item>
-		<item>Somali Shilling</item>
-		<item>Somoni</item>
-		<item>South Sudanese Pound</item>
-		<item>Sri Lanka Rupee</item>
-		<item>Sucre</item>
-		<item>Sudanese Pound</item>
-		<item>Surinam Dollar</item>
-		<item>Swedish Krona</item>
-		<item>Swiss Franc</item>
-		<item>Syrian Pound</item>
-		<item>Taka</item>
-		<item>Tala</item>
-		<item>Tanzanian Shilling</item>
-		<item>Tenge</item>
-		<item>No currency</item>
-		<item>Trinidad and Tobago Dollar</item>
-		<item>Tugrik</item>
-		<item>Tunisian Dinar</item>
-		<item>Turkish Lira</item>
-		<item>Turkmenistan New Manat</item>
-		<item>UAE Dirham</item>
-		<item>Uganda Shilling</item>
-		<item>UIC-Franc</item>
-		<item>Unidad de Valor Real</item>
-		<item>Unidades de fomento</item>
-		<item>Uruguay Peso en Unidades Indexadas (URUIURUI)</item>
-        <item>Uruguayan peso</item>
-        <item>US Dollar</item>
-		<item>Uzbekistan Sum</item>
-		<item>Vatu</item>
-		<item>WIR Euro</item>
-		<item>WIR Franc</item>
-		<item>Won</item>
-		<item>Yemeni Rial</item>
-		<item>Yen</item>
-		<item>Yuan Renminbi</item>
-		<item>Zambian Kwacha</item>
-		<item>Zimbabwe Dollar</item>
-		<item>Zloty</item>
-    </string-array>
-	<string name="error_no_accounts">N&#227;o existem contas no GnuCash.\nCrie uma conta antes de adicionar um widget</string>
-	<string name="title_build_version">Vers&#227;o</string>
-	<string name="title_license">Licensa</string>
-	<string name="summary_licence_details">Apache License v2.0. Clique para obter detalhes</string>
-	<string name="title_general_prefs">Prefer&#234;ncias</string>
-	<string name="label_widget_configuration">Escolha uma conta</string>
-	<string name="toast_no_transactions_to_export">N&#227;o existem transac&#231;&#245;es para exportar</string>
-    <string name="header_passcode_settings">Palavra passe</string>
-    <string name="title_passcode_preferences">Prefer&#234;ncias de palavra passe</string>
-    <string name="title_passcode_enabled">Palavra passe ligada</string>
-    <string name="title_passcode_disabled">Palavra passe desligada</string>
-    <string name="title_change_passcode">Mudar Palavra Passe</string>
-	<string name="title_about_gnucash">Sobre o GnuCash</string>
-	<string name="summary_about_gnucash">Gnucash &#233; uma aplica&#231;&#227;o m&#243;vel para Android de registo de despesas.\n
-        Permite um registo flex&#237;vel de despesas que pode ser exportado para m&#250;ltiplos formatos (OFX, QIF) e importado para o Gnucash para Desktop</string>
-	<string name="title_about">Sobre</string>
-	<string name="toast_format_exported_to">%1$s ficheiro exportado para:\n</string>
-	<string name="title_export_email">GnuCash Android %1$s exporta&#231;&#227;o</string>
-	<string name="description_export_email">Exporta&#231;&#227;o do GnuCash Android de</string>
-	<string name="header_transaction_settings">Transa&#231;&#245;es</string>
-	<string name="title_transaction_preferences">Prefer&#234;ncias de Transa&#231;&#245;es</string>
-	<string name="title_account_preferences">Prefer&#234;ncias de Contas</string>
-	<string name="title_default_transaction_type">Tipo de Transa&#231;&#227;o padr&#227;o</string>
-	<string name="summary_default_transaction_type">Tipo de transa&#231;&#227;o a ser usada por defeito, CR&#201;DITO ou D&#201;BITO</string>
-	<string-array name="transaction_types">
-		<item>CR&#201;DITO</item>
-		<item>D&#201;BITO</item>
-	</string-array>
-	<string name="msg_delete_all_transactions_confirmation">Tem a certeza que pretende apagar todas as transa&#231;&#245;es?</string>
-	<string name="msg_delete_transaction_confirmation">Tem a certeza que pretende apagar esta transa&#231;&#227;o?</string>
-	<string name="title_export_preference_category">Exportar</string>
-	<string name="title_export_all_transactions">Exportar todas as transa&#231;&#245;es</string>
-	<string name="title_always_delete_exported_transactions">Apagar as transa&#231;&#245;es exportadas</string>
-	<string name="title_default_export_email">Email de exporta&#231;&#227;o padr&#227;o</string>
-	<string name="summary_default_export_email">O endere&#231;o de email por defeito para onde ser&#227;o enviadas as exporta&#231;&#245;es. Pode ser alterado no momento da exporta&#231;&#227;o</string>
-	<string name="label_double_entry_account">Conta para transfer&#234;ncia</string>
-	<string name="summary_use_double_entry">Todas as transa&#231;&#245;es ser&#227;o uma transfer&#234;ncia de uma conta para a outra</string>
-	<string name="title_use_double_entry">Activar a entrada dupla</string>
-	<string name="account_balance">Saldo</string>
-	<string name="toast_no_account_name_entered">Introduza o nome da conta a criar</string>
-	<string name="label_account_currency">Moeda</string>
-	<string name="label_parent_account">Conta progenitora</string>
-	<string name="title_xml_ofx_header">Use XML OFX header</string>
-	<string name="summary_xml_ofx_header">Active esta op&#231;&#227;o quando fizer exporta&#231;&#245;es para outras aplica&#231;&#245;es que n&#227;o seja o GnuCash para Desktop</string>
-	<string name="title_whats_new">O que h&#225; de novo</string>
-	<string name="whats_new">
-		- Relat&#243;rios (Gr&#225;ficos de Barras/Linhas/Circulares)\n
-        - Agendamentos de Backups (QIF, OFX, e XML)\n
-        - Backup/Exporta&#231;&#245;es para DropBox e Google Drive\n
-        - Melhores op&#231;&#245;es para transa&#231;&#245;es agendadas\n
-        - Acesso mais f&#225;cila &#224;s Op&#231;&#245;es\n
-        - Correc&#231;&#227;o de diversos bugs e melhoramentos\n
-	</string>
-	<string name="label_dismiss">Descartar</string>
-    <string name="toast_transanction_amount_required">Introduza um valor para gravar a transa&#231;&#227;o</string>
-    <string name="toast_error_edit_multi_currency_transaction">As transa&#231;&#245;es multi-moeda n&#227;o podem ser alteradas</string>
-    <string name="menu_import_accounts">Importar contas do GnuCash</string>
-    <string name="btn_import_accounts">Importar Contas</string>
-    <string name="toast_error_importing_accounts">Ocorreu um erro ao importar as contas do GnuCash</string>
-    <string name="toast_success_importing_accounts">Contas do GnuCash importadas com sucesso</string>
-    <string name="summary_import_accounts">Importar a estrutura de contas do GnuCash para Desktop</string>
-    <string name="title_import_accounts">Importar XML do GnuCash</string>
-    <string name="summary_delete_all_accounts">Apagar todas as contas. Todas as transa&#231;&#245;es tamb&#233;m ser&#227;o apagadas.</string>
-    <string name="title_delete_all_accounts">Apagar todas as contas</string>
-    <string name="header_account_settings">Contas</string>
-    <string name="toast_all_accounts_deleted">Todas as contas foram apagadas com sucesso</string>
-    <string name="confirm_delete_all_accounts">Tem a certeza que quer apagar todasd as contas e todas as transa&#231;&#245;es?n\nEsta opera&#231;&#227;o &#233; definitiva e n&#227;o pode ser recuperada!</string>
-    <string name="label_account_type">Tipo de Conta</string>
-    <string name="summary_delete_all_transactions">Todas as transa&#231;&#245;es de todas as contas ser&#227;o apagadas!</string>
-    <string name="title_delete_all_transactions">Apagar todas as transa&#231;&#245;es</string>
-    <string name="toast_all_transactions_deleted">Todas as transa&#231;&#245;es apagadas com sucesso!</string>
-    <string name="title_progress_importing_accounts">Importando contas</string>
-    <string name="toast_tap_again_to_confirm_delete">Toque outra vez para confirmar. TODOS os registos ser&#227;o apagados!!</string>
-    <string name="section_header_transactions">Transa&#231;&#245;es</string>
-    <string name="section_header_subaccounts">Sub-Contas</string>
-    <string name="menu_search_accounts">Procurar</string>
-    <string name="title_default_export_format">Formato de Exporta&#231;&#227;o padr&#227;o</string>
-    <string name="summary_default_export_format">Formato de ficheiro usado por defeito quando &#233; feita uma exporta&#231;&#227;o de transa&#231;&#245;es</string>
-    <string name="menu_export_transactions">Exportar transa&#231;&#245;es</string>
-    <string name="label_recurring_transaction">Recorrente</string>
-    <!-- This should be the same name used by GnuCash desktop for imbalance accounts -->
-    <string name="imbalance_account_name">Imbalance</string>
-    <string name="title_progress_exporting_transactions">Exportando transa&#231;&#245;es</string>
-    <string name="label_no_recurring_transactions">N&#227;o existem transa&#231;&#245;es recorrentes para mostrar</string>
-    <string name="toast_recurring_transaction_deleted">Transa&#231;&#245;es recorrentes apagadas com sucesso</string>
-    <string name="label_placeholder_account">Conta n&#227;o edit&#225;vel</string>
-    <string name="label_default_transfer_account">Conta para transfer&#234;ncias padr&#227;o</string>
-    <plurals name="label_sub_accounts">
-        <item quantity="one">%d sub-conta</item>
-        <item quantity="other">%d sub-contas</item>
-    </plurals>
-    <string-array name="account_type_entry_values">
-        <item>DINHEIRO</item>
-        <item>BANCO</item>
-        <item>CART&#195;O CR&#201;DITO</item>
-        <item>ACTIVO</item>
-        <item>PASSIVO</item>
-        <item>RENDIMENTO</item>
-        <item>DESPESA</item>
-        <item>CONTAS A PAGAR</item>
-        <item>CONTAS A RECEBER</item>
-        <item>SITUA&#199;&#195;O L&#205;QUIDA</item>
-        <item>MOEDA</item>
-        <item>AC&#199;&#213;ES</item>
-        <item>FUNDO</item>
-		<item>TRADING</item>
-    </string-array>
-    <string-array name="export_formats">
-        <item>QIF</item>
-        <item>OFX</item>
-        <item>XML</item>
-    </string-array>
-    <!-- Default title for color picker dialog [CHAR LIMIT=30] -->
-    <string name="color_picker_default_title">Escolha uma c&#244;r</string>
-    <!-- Content description for a color square. -->
-    <string name="color_swatch_description" translatable="false">C&#244;r <xliff:g id="color_index" example="14">%1$d</xliff:g></string>
-    <!-- Content description for a selected color square. -->
-    <string name="color_swatch_description_selected" translatable="false">C&#244;r <xliff:g id="color_index" example="14">%1$d</xliff:g> selected</string>
-    <string name="label_account_color_and_type">C&#244;r da Conta &amp; Tipo</string>
-    <string name="label_delete_sub_accounts">Apagar sub-contas</string>
-    <string name="title_recent_accounts">Recentes</string>
-    <string name="title_favorite_accounts">Favoritos</string>
-    <string name="title_all_accounts">Todas</string>
-    <string name="summary_create_default_accounts">Cria uma estrutura de contas GnuCash padr&#227;o</string>
-    <string name="title_create_default_accounts">Cria contas padr&#227;o</string>
-    <string name="msg_confirm_create_default_accounts_setting">Todas as contas e transa&#231;&#245;es existentes no equipamento ser&#227;o apagadas.\n\nTem a certeza que pretende continuar?</string>
-    <string name="menu_scheduled_transactions">Transa&#231;&#245;es agendadas</string>
-    <string name="msg_confirm_create_default_accounts_first_run">Bem vindo ao GnuCash Android! \nPode criar um hierarquia de contas, ou importar a sua estrutura de contas do GnuCash. \n\n Ambas as op&#231;&#245;es est&#227;o dispon&#237;ves bas Op&#231;&#245;es da aplica&#231;&#227;o, para que possa decidir mais tarde.
-    </string>
-    <string name="title_scheduled_transactions">Transa&#231;&#245;es agendadas</string>
-    <string name="title_select_export_destination">Escolha o destino da exporta&#231;&#227;o</string>
-    <string name="hint_split_memo">Memo</string>
-    <string name="label_spend">Gasto</string>
-    <string name="label_receive">Receita</string>
-    <string name="label_withdrawal">Levantamento</string>
-    <string name="label_deposit">Dep&#243;sito</string>
-    <string name="label_payment">Pagamento</string>
-    <string name="label_charge">Carregamento</string>
-    <string name="label_decrease">Diminui&#231;&#227;o</string>
-    <string name="label_increase">Aumento</string>
-    <string name="label_income">Rendimento</string>
-    <string name="label_rebate">Abatimento</string>
-    <string name="label_expense">Despesa</string>
-    <string name="label_bill">Conta</string>
-    <string name="label_invoice">Fatura</string>
-    <string name="label_buy">Compra</string>
-    <string name="label_sell">Venda</string>
-    <string name="label_repeats">Repeti&#231;&#227;o</string>
-    <string name="toast_no_recent_backup">N&#227;o foi encontrado um Backup recente</string>
-    <string name="account_name_opening_balances">Saldo de abertura</string>
-    <string name="account_name_equity">Capital Pr&#243;prio</string>
-    <string name="summary_save_opening_balances">Permite gravar o saldo da conta actual (antes de apagar as transa&#231;&#245;es) como novo saldo de abertura depois de apagadas as transa&#231;&#245;es
-    </string>
-    <string name="title_save_opening_balances">Grava o saldo de abertura da conta</string>
-    <string name="export_warning_ofx">O formato OFX n&#227;o permite transa&#231;&#245;es de entrada dupla</string>
-    <string name="export_warning_qif">Gera ficheiros QIF separados por moeda</string>
-    <string name="title_transaction_splits">Contrapartidas da transa&#231;&#227;o</string>
-    <string name="label_imbalance">Desequilibr&#237;o:</string>
-    <string name="btn_add_split">Adicionar contrapartida</string>
-    <string name="menu_title_favorite">Favorito</string>
-    <string name="drawer_open">Gaveta de navega&#231;&#227;o aberta</string>
-    <string name="drawer_close">Gaveta de navega&#231;&#227;o fechada</string>
-    <string name="title_reports">Relat&#243;rios</string>
-	<string name="title_pie_chart">Gr&#225;fico Circular</string>
-    <string name="title_line_chart">Gr&#225;fico de Linhas</string>
-    <string name="title_bar_chart">Gr&#225;fico de Barras</string>
-    <string name="title_report_prefs">Prefer&#234;ncias de relat&#243;rios</string>
-    <string name="label_report_currency">Escolha a moeda</string>
-    <string name="title_use_account_color">C&#244;r da conta nos relat&#243;rios</string>
-	<string name="summary_use_account_color">Use c&#244;r da conta no gr&#225;fico de barras/linhas</string>
-    <string name="header_report_settings">Relat&#243;rios</string>
-    <string name="menu_order_by_size">Ordenar por tamanho</string>
-    <string name="menu_toggle_legend">Alterna visibilidade da legenda</string>
-    <string name="menu_toggle_labels">Alterna visibilidade das etiquetas</string>
-    <string name="menu_toggle_percentage_mode">Alterna visibilidade da percentagem</string>
-    <string name="menu_toggle_average_lines">Alterna visibilidade das linhas da m&#233;dia</string>
-    <string name="menu_group_smaller_slices">Agrupar fatias menores</string>
-    <string name="label_chart_no_data">Gr&#225;fico n&#227;o dispon&#237;vel</string>
-    <string name="label_chart_overall">Geral</string>
-    <string name="label_chart_total">Total</string>
-    <string name="label_other_slice">Outro</string>
-    <string name="toast_chart_percentage_mode_total">A percentagem do valor seleccionado face ao valor total</string>
-    <string name="toast_chart_percentage_mode_current_bar">A percentagem do valor seleccionado face ao valor da barra actual</string>
-    <string name="label_save_template">Guardar como modelo</string>
-    <string name="label_delete_account_transactions_description">Esta conta tem transa&#231;&#245;es. \nO que pretende fazer com estas transa&#231;&#245;es</string>
-    <string name="label_delete_account_subaccounts_description">Esta conta tem subcontas. \nO que pretende fazer com estas subcontas</string>
-    <string name="label_delete_transactions">Apagar transa&#231;&#245;es</string>
-	<string name="toast_disable_double_entry_to_save_transaction">Crie e especifique uma conta para a transfer&#234;ncia OU desabilite a dupla entrada das Opc&#231;&#245;es para gravar a transa&#231;&#227;o</string>
-    <string name="label_tap_to_create_schedule">Toque para criar um agendamento</string>
-    <string name="title_restore_backup">Restore Backup</string>
-    <string name="header_backup_and_export_settings">Backup &amp; exporta&#231;&#227;o</string>
-    <string name="title_dropbox_sync_preference">Sincroniza&#231;&#227;o com DropBox</string>
-    <string name="title_backup_preference_category">Backup</string>
-    <string name="summary_dropbox_sync">Permite a sincroniza&#231;&#227;o com DropBox</string>
-    <string name="title_select_gnucash_xml_file">Escolha um ficheiro XML do GnuCash</string>
-    <string name="title_backup_prefs">Prefer&#234;ncias de Backup</string>
-    <string name="title_create_backup_pref">Criar Backup</string>
-    <string name="summary_create_backup_pref">Por defeito os backups s&#227;o guardado no SDCARD</string>
-    <string name="summary_restore_backup_pref">Escolha um backup a restaurar</string>
-    <string name="toast_backup_successful">Backup efectuado com sucesso</string>
-    <string name="toast_backup_failed">Erro ao efectuar o Backup</string>
-    <string name="export_warning_xml">Exporta todas as contas e transa&#231;&#245;es</string>
-    <string name="title_google_drive_sync_pref">Sincroniza&#231;&#227;o com Google Drive</string>
-    <string name="summary_google_drive_sync">Permite a sincroniza&#231;&#227;o com o Google Drive</string>
-    <string name="toast_install_file_manager">Instale um gestor de ficheiros para escolher um ficheiro</string>
-    <string name="title_select_backup_to_restore">Escolha um backup para restaurar</string>
-    <string name="nav_menu_favorites">Favoritos</string>
-    <string name="nav_menu_open">Abrir...</string>
-    <string name="nav_menu_reports">Relat&#243;rios</string>
-    <string name="nav_menu_scheduled_transactions">Transa&#231;&#245;es agendadas</string>
-    <string name="nav_menu_export">Exportar...</string>
-    <string name="nav_menu_settings">Defini&#231;&#245;es</string>
-    <plurals name="label_every_x_days">
-        <item quantity="one">Diariamente</item>
-        <item quantity="other">Todos os %d dias</item>
-    </plurals>
-    <plurals name="label_every_x_weeks">
-        <item quantity="one">Semanalmente</item>
-        <item quantity="other">Todas %d semanas</item>
-    </plurals>
-    <plurals name="label_every_x_months">
-        <item quantity="one">Mensalmente</item>
-        <item quantity="other">Todos %d meses</item>
-    </plurals>
-    <plurals name="label_every_x_years">
-        <item quantity="one">Anualmente</item>
-        <item quantity="other">Todos %d anos</item>
-    </plurals>
-    <string name="title_enable_crashlytics">Permite o registo de Crash</string>
-    <string name="msg_enable_crashlytics">Permite o envio de informa&#231;&#245;es aos programadores para melhoria do programa (recomendado).
-Neste processo n&#227;o ser&#227;o recolhidas informa&#231;&#245;es do utilizador!</string>
-    <string name="label_export_format">Formato de exporta&#231;&#227;o</string>
-    <string name="toast_backup_folder_not_found">Pasta de Backup n&#227;o encontrada. Tenha a certeze que o cart&#227;o SD est&#225; montado!</string>
-    <string name="label_old_passcode">Introduza a palavra passe antiga</string>
-    <string name="label_new_passcode">Introduza a nova palavra passe</string>
-    <string name="nav_menu_scheduled_backups">Exporta&#231;&#245;es agendadas</string>
-    <string name="title_scheduled_exports">Exporta&#231;&#245;es agendadas</string>
-    <string name="label_no_scheduled_exports_to_display">N&#227;o existem exporta&#231;&#245;es agendadas para mostrar</string>
-    <string name="title_create_export_schedule">Criar uma exporta&#231;&#227;o agendada</string>
-    <string name="toast_exported_to">Exportado para : %1$s</string>
-</resources>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index d9944b68..13bf688c 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -15,9 +15,9 @@
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-  <string name="title_create_account"></string>
-  <string name="title_edit_account"></string>
+<resources>
+  <string name="title_create_account"></string>
+  <string name="title_edit_account"></string>
   <string name="info_details"></string>
   <string name="menu_export">...</string>
   <string name="description_add_transaction_icon"></string>
@@ -62,8 +62,8 @@
   <string name="title_settings"></string>
   <string-array name="export_destinations">
     <item>SD</item>
-    <item>DropBox</item>
-    <item>Google Drive</item>
+    <item>Dropbox</item>
+    <item>Google </item>
     <item>Owncloud</item>
   </string-array>
   <string name="btn_move"></string>

From 1ffae9f4442af0b67c76fd1793567cd07a3b84b1 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Wed, 17 Feb 2016 11:30:00 +0100
Subject: [PATCH 16/16] Update version for v2.0.6 (gradual) rollout

---
 app/build.gradle | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/build.gradle b/app/build.gradle
index 09bd63f4..e381225e 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -6,7 +6,7 @@ apply plugin: 'io.fabric'
 def versionMajor = 2
 def versionMinor = 0
 def versionPatch = 6
-def versionBuild = 2
+def versionBuild = 3
 
 def buildTime() {
     def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")
