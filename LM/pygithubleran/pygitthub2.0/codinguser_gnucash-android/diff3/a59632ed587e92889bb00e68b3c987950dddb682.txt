From d88c6c88c3e66486e9bc822be18cda0feb5f3066 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Thu, 23 Apr 2015 20:54:19 +0300
Subject: [PATCH 1/9] Added chart preferences

---
 .../ui/settings/ChartPreferenceFragment.java       | 85 ++++++++++++++++++++++
 app/src/main/res/values/donottranslate.xml         |  1 +
 .../main/res/xml/fragment_chart_preferences.xml    | 27 +++++++
 app/src/main/res/xml/preference_headers.xml        |  2 +
 4 files changed, 115 insertions(+)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment.java
 create mode 100644 app/src/main/res/xml/fragment_chart_preferences.xml

diff --git a/app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment.java
new file mode 100644
index 00000000..3902e899
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gnucash.android.ui.settings;
+
+import android.annotation.TargetApi;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.preference.ListPreference;
+import android.preference.Preference;
+import android.preference.PreferenceFragment;
+import android.preference.PreferenceManager;
+
+import com.actionbarsherlock.app.ActionBar;
+import com.actionbarsherlock.app.SherlockPreferenceActivity;
+
+import org.gnucash.android.R;
+import org.gnucash.android.db.AccountsDbAdapter;
+import org.gnucash.android.model.Money;
+
+import java.util.Currency;
+import java.util.List;
+
+/**
+ * Fragment for charts configuring
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ */
+@TargetApi(11)
+public class ChartPreferenceFragment extends PreferenceFragment {
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        addPreferencesFromResource(R.xml.fragment_chart_preferences);
+
+        ActionBar actionBar = ((SherlockPreferenceActivity) getActivity()).getSupportActionBar();
+        actionBar.setHomeButtonEnabled(true);
+        actionBar.setDisplayHomeAsUpEnabled(true);
+        actionBar.setTitle("Chart Prefs");
+
+        List<Currency> currencyList = AccountsDbAdapter.getInstance().getCurrencies();
+        int size = currencyList.size();
+        String[] currencyCodes = new String[size];
+        for (Currency currency : currencyList) {
+            currencyCodes[--size] = currency.getCurrencyCode();
+        }
+
+        ListPreference pref = (ListPreference) findPreference(getString(R.string.key_chart_currency));
+        pref.setEntries(currencyCodes);
+        pref.setEntryValues(currencyCodes);
+//        android:entries="@array/currency_names"
+//        android:entryValues="@array/key_currency_codes"
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+
+        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
+        String keyChartCurrency = getString(R.string.key_chart_currency);
+        Preference pref = findPreference(keyChartCurrency);
+        String chartCurrency = sharedPreferences.getString(keyChartCurrency, null);
+        if (chartCurrency != null && !chartCurrency.trim().isEmpty()) {
+            pref.setSummary(chartCurrency);
+        } else {
+            pref.setSummary(sharedPreferences.getString(getString(R.string.key_default_currency), Money.DEFAULT_CURRENCY_CODE));
+        }
+
+    }
+
+}
diff --git a/app/src/main/res/values/donottranslate.xml b/app/src/main/res/values/donottranslate.xml
index 7c33e378..359d6956 100644
--- a/app/src/main/res/values/donottranslate.xml
+++ b/app/src/main/res/values/donottranslate.xml
@@ -27,6 +27,7 @@
     <string name="key_create_backup">create_backup</string>
     <string name="key_google_drive_sync">google_drive_sync</string>
     <string name="key_google_drive_app_folder_id">google_drive_app_folder</string>
+    <string name="key_chart_currency">chart_currency</string>
 
     <string-array name="key_transaction_type_values">
         <item>CREDIT</item>
diff --git a/app/src/main/res/xml/fragment_chart_preferences.xml b/app/src/main/res/xml/fragment_chart_preferences.xml
new file mode 100644
index 00000000..10cf91f8
--- /dev/null
+++ b/app/src/main/res/xml/fragment_chart_preferences.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright (c) 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+    http://www.apache.org/licenses/LICENSE-2.0
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android" >
+    <PreferenceCategory android:title="Chart Prefs">
+
+        <ListPreference android:key="@string/key_chart_currency"
+                        android:title="Chart Currency"
+                        android:summary="Select chart currency"/>
+
+    </PreferenceCategory>
+
+</PreferenceScreen>
\ No newline at end of file
diff --git a/app/src/main/res/xml/preference_headers.xml b/app/src/main/res/xml/preference_headers.xml
index 5232aae2..0be37ba6 100644
--- a/app/src/main/res/xml/preference_headers.xml
+++ b/app/src/main/res/xml/preference_headers.xml
@@ -23,6 +23,8 @@
         android:title="@string/header_backup_and_export_settings" />
     <header android:fragment="org.gnucash.android.ui.settings.PasscodePreferenceFragment"
         android:title="@string/header_passcode_settings" />
+    <header android:fragment="org.gnucash.android.ui.settings.ChartPreferenceFragment"
+            android:title="Chart Prefs Header" />
     <header android:fragment="org.gnucash.android.ui.settings.AboutPreferenceFragment"
         android:title="@string/header_about_gnucash" />
     <header android:title="Rate in Play Store">

From c7f2441f81c7b1f1d456896a010623d06388836f Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Fri, 24 Apr 2015 15:19:56 +0300
Subject: [PATCH 2/9] Save user preferences. List currency names instead of
 codes

---
 .../ui/settings/ChartPreferenceFragment.java       | 30 +++++++++++++++++++---
 1 file changed, 26 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment.java
index 3902e899..53614bfe 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment.java
@@ -21,6 +21,7 @@
 import android.os.Bundle;
 import android.preference.ListPreference;
 import android.preference.Preference;
+import android.preference.Preference.OnPreferenceChangeListener;
 import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
 
@@ -31,6 +32,8 @@
 import org.gnucash.android.db.AccountsDbAdapter;
 import org.gnucash.android.model.Money;
 
+import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Currency;
 import java.util.List;
 
@@ -39,7 +42,7 @@
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
 @TargetApi(11)
-public class ChartPreferenceFragment extends PreferenceFragment {
+public class ChartPreferenceFragment extends PreferenceFragment implements OnPreferenceChangeListener {
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -60,10 +63,18 @@ public void onCreate(Bundle savedInstanceState) {
         }
 
         ListPreference pref = (ListPreference) findPreference(getString(R.string.key_chart_currency));
-        pref.setEntries(currencyCodes);
         pref.setEntryValues(currencyCodes);
-//        android:entries="@array/currency_names"
-//        android:entryValues="@array/key_currency_codes"
+        pref.setOnPreferenceChangeListener(this);
+
+
+        List<String> currencyNames = new ArrayList<>();
+        String[] allCurrencyNames = getResources().getStringArray(R.array.currency_names);
+        List<String> allCurrencyCodes = Arrays.asList(getResources().getStringArray(R.array.key_currency_codes));
+        for (String code : currencyCodes) {
+            currencyNames.add(allCurrencyNames[allCurrencyCodes.indexOf(code)]);
+        }
+
+        pref.setEntries(currencyNames.toArray(new String[currencyNames.size()]));
     }
 
     @Override
@@ -82,4 +93,15 @@ public void onResume() {
 
     }
 
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object newValue) {
+        preference.setSummary(newValue.toString());
+        PreferenceManager.getDefaultSharedPreferences(getActivity())
+                .edit()
+                .putString(getString(R.string.key_chart_currency), newValue.toString())
+                .commit();
+
+        return true;
+    }
+
 }

From 272e701959ddd0e6bfb4d0dd9a85560a896f0565 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Fri, 24 Apr 2015 18:11:32 +0300
Subject: [PATCH 3/9] Now we can get the earliest or latest timestamp of
 transactions by a currency code

---
 .../gnucash/android/db/TransactionsDbAdapter.java  | 52 ++++++++++++++++++++++
 1 file changed, 52 insertions(+)

diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index 76a28599..830e93f0 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -628,4 +628,56 @@ private long getTimestamp(String mod, AccountType type) {
         return timestamp;
     }
 
+    /**
+     * Returns a timestamp of the earliest transaction for a specified account type and currency
+     * @param type the account type
+     * @param currencyCode the currency code
+     * @return the earliest transaction's timestamp. Returns 1970-01-01 00:00:00.000 if no transaction found
+     */
+    public long getTimestampOfEarliestTransaction(AccountType type, String currencyCode) {
+        return getTimestamp("MIN", type, currencyCode);
+    }
+
+    /**
+     * Returns a timestamp of the latest transaction for a specified account type and currency
+     * @param type the account type
+     * @param currencyCode the currency code
+     * @return the latest transaction's timestamp. Returns 1970-01-01 00:00:00.000 if no transaction found
+     */
+    public long getTimestampOfLatestTransaction(AccountType type, String currencyCode) {
+        return getTimestamp("MAX", type, currencyCode);
+    }
+
+    /**
+     * Returns the earliest or latest timestamp of transactions for a specific account type and currency
+     * @param mod Mode (either MAX or MIN)
+     * @param type AccountType
+     * @param currencyCode the currency code
+     * @return earliest or latest timestamp of transactions
+     * @see #getTimestampOfLatestTransaction(AccountType)
+     * @see #getTimestampOfEarliestTransaction(AccountType)
+     */
+    private long getTimestamp(String mod, AccountType type, String currencyCode) {
+        String sql = "SELECT " + mod + "(" + TransactionEntry.COLUMN_TIMESTAMP + ")"
+                + " FROM " + TransactionEntry.TABLE_NAME
+                + " INNER JOIN " + SplitEntry.TABLE_NAME + " ON "
+                + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_TRANSACTION_UID + " = "
+                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_UID
+                + " INNER JOIN " + AccountEntry.TABLE_NAME + " ON "
+                + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID + " = "
+                + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_ACCOUNT_UID
+                + " WHERE " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_TYPE + " = ? AND "
+                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_CURRENCY + " = ? AND "
+                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_TEMPLATE + " = 0";
+        Cursor cursor = mDb.rawQuery(sql, new String[]{ type.name(), currencyCode });
+        long timestamp= 0;
+        if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                timestamp = cursor.getLong(0);
+            }
+            cursor.close();
+        }
+        return timestamp;
+    }
+
 }

From 2bb7fd8efbd3ca4176582e4b8e80cf1646d66454 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 25 Apr 2015 17:28:33 +0300
Subject: [PATCH 4/9] Pie chart shows data by currency

---
 .../gnucash/android/ui/chart/PieChartActivity.java | 35 ++++++++++++++++++++--
 1 file changed, 32 insertions(+), 3 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index 2d5a1d4c..5367a374 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -22,6 +22,7 @@
 import android.graphics.PorterDuff;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
+import android.preference.PreferenceManager;
 import android.support.v4.app.DialogFragment;
 import android.view.View;
 import android.widget.AdapterView;
@@ -48,12 +49,16 @@
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.passcode.PassLockActivity;
 import org.joda.time.LocalDateTime;
 
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Currency;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import static org.gnucash.android.db.DatabaseSchema.AccountEntry;
 
@@ -98,6 +103,8 @@
 
     private double mSlicePercentThreshold = 6;
 
+    private String mCurrencyCode;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         //it is necessary to set the view first before calling super because of the nav drawer in BaseDrawerActivity
@@ -112,6 +119,9 @@ protected void onCreate(Bundle savedInstanceState) {
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
         mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 
+        mCurrencyCode = PreferenceManager.getDefaultSharedPreferences(this)
+                .getString(getString(R.string.key_chart_currency), Money.DEFAULT_CURRENCY_CODE);
+
         mChart = (PieChart) findViewById(R.id.pie_chart);
         mChart.setCenterTextSize(18);
         mChart.setDescription("");
@@ -198,7 +208,7 @@ private PieData getData(boolean forCurrentMonth) {
         PieDataSet dataSet = new PieDataSet(null, "");
         ArrayList<String> names = new ArrayList<String>();
         List<String> skipUUID = new ArrayList<String>();
-        for (Account account : accountList) {
+        for (Account account : getCurrencyCodeToAccountMap(accountList).get(mCurrencyCode)) {
             if (mAccountsDbAdapter.getSubAccountCount(account.getUID()) > 0) {
                 skipUUID.addAll(mAccountsDbAdapter.getDescendantAccountUIDs(account.getUID(), null, null));
             }
@@ -246,6 +256,25 @@ private PieData getData(boolean forCurrentMonth) {
     }
 
     /**
+     * Returns a map with a currency code as key and corresponding accounts list
+     * as value from a specified list of accounts
+     * @param accountList a list of accounts
+     * @return a map with a currency code as key and corresponding accounts list as value
+     */
+    private Map<String, List<Account>> getCurrencyCodeToAccountMap(List<Account> accountList) {
+        Map<String, List<Account>> currencyAccountMap = new HashMap<>();
+        for (Currency currency : mAccountsDbAdapter.getCurrencies()) {
+            currencyAccountMap.put(currency.getCurrencyCode(), new ArrayList<Account>());
+        }
+
+        for (Account account : accountList) {
+            currencyAccountMap.get(account.getCurrency().getCurrencyCode()).add(account);
+        }
+        return currencyAccountMap;
+    }
+
+
+    /**
      * Sets the image button to the given state and grays-out the icon
      *
      * @param enabled the button's state
@@ -310,8 +339,8 @@ private void setUpSpinner() {
             @Override
             public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                 mAccountType = (AccountType) ((Spinner) findViewById(R.id.chart_data_spinner)).getSelectedItem();
-                mEarliestTransactionDate = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType));
-                mLatestTransactionDate = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType));
+                mEarliestTransactionDate = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType, mCurrencyCode));
+                mLatestTransactionDate = new LocalDateTime(mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType, mCurrencyCode));
                 mChartDate = mLatestTransactionDate;
                 setData(false);
                 mChart.getLegend().setEnabled(false);

From 91bef95495879967570b9f3330aa34ae8aa49a9f Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Mon, 27 Apr 2015 21:02:23 +0300
Subject: [PATCH 5/9] Line and bar charts support selecting currency

---
 .../gnucash/android/ui/chart/BarChartActivity.java | 40 +++++++++++++---------
 .../android/ui/chart/LineChartActivity.java        | 36 +++++++++++--------
 2 files changed, 44 insertions(+), 32 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index 0c2fde6a..72448f88 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -18,6 +18,7 @@
 
 import android.graphics.Color;
 import android.os.Bundle;
+import android.preference.PreferenceManager;
 import android.util.Log;
 import android.widget.LinearLayout;
 import android.widget.TextView;
@@ -40,6 +41,7 @@
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.passcode.PassLockActivity;
 import org.joda.time.LocalDateTime;
 import org.joda.time.Months;
@@ -47,6 +49,7 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
+import java.util.Currency;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
@@ -78,6 +81,7 @@
     private long mLatestTransactionTimestamp;
     private boolean mTotalPercentageMode = true;
     private boolean mChartDataPresent = true;
+    private Currency mCurrency;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -95,6 +99,9 @@ protected void onCreate(Bundle savedInstanceState) {
         mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter());
         mChart.getAxisRight().setEnabled(false);
 
+        mCurrency = Currency.getInstance(PreferenceManager.getDefaultSharedPreferences(this)
+                .getString(getString(R.string.key_chart_currency), Money.DEFAULT_CURRENCY_CODE));
+
         // below we can add/remove displayed account's types
         mChart.setData(getData(new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
 
@@ -120,10 +127,7 @@ protected void onCreate(Bundle savedInstanceState) {
      * @return a {@code BarData} instance that represents a user data
      */
     private BarData getData(ArrayList<AccountType> accountTypeList) {
-        if (!calculateEarliestAndLatestTimestamps(accountTypeList)) {
-            mChartDataPresent = false;
-            return getEmptyData();
-        }
+        calculateEarliestAndLatestTimestamps(accountTypeList);
 
         LocalDateTime startDate = new LocalDateTime(mEarliestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
         LocalDateTime endDate = new LocalDateTime(mLatestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0);
@@ -141,7 +145,7 @@ private BarData getData(ArrayList<AccountType> accountTypeList) {
             long end = startDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime();
             float stack[] = new float[accountTypeList.size()];
             int j = 0;
-            for (Map.Entry<AccountType, List<String>> entry : getAccountMap(accountTypeList).entrySet()) {
+            for (Map.Entry<AccountType, List<String>> entry : getAccountTypeToAccountUidMap(accountTypeList).entrySet()) {
                 stack[j++] = (float) mAccountsDbAdapter.getAccountsBalance(entry.getValue(), start, end).absolute().asDouble();
                 Log.d(TAG, entry.getKey() + startDate.toString(" MMMM yyyy") + ", balance = " + stack[j - 1]);
             }
@@ -156,19 +160,23 @@ private BarData getData(ArrayList<AccountType> accountTypeList) {
         set.setColors(Arrays.copyOfRange(COLORS, 0, accountTypeList.size()));
         dataSets.add(set);
 
+        if (set.getYValueSum() == 0) {
+            mChartDataPresent = false;
+            return getEmptyData();
+        }
         return new BarData(xValues, dataSets);
     }
 
     /**
      * Calculates the earliest and latest transaction's timestamps of the specified account types
      * @param accountTypeList account's types which will be processed
-     * @return {@code false} if no data available, {@code true} otherwise
      */
-    private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
+    private void calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
+        TransactionsDbAdapter dbAdapter = TransactionsDbAdapter.getInstance();
         for (Iterator<AccountType> iter = accountTypeList.iterator(); iter.hasNext();) {
             AccountType type = iter.next();
-            long earliest = TransactionsDbAdapter.getInstance().getTimestampOfEarliestTransaction(type);
-            long latest = TransactionsDbAdapter.getInstance().getTimestampOfLatestTransaction(type);
+            long earliest = dbAdapter.getTimestampOfEarliestTransaction(type, mCurrency.getCurrencyCode());
+            long latest = dbAdapter.getTimestampOfLatestTransaction(type, mCurrency.getCurrencyCode());
             if (earliest > 0 && latest > 0) {
                 mEarliestTimestampsMap.put(type, earliest);
                 mLatestTimestampsMap.put(type, latest);
@@ -177,29 +185,27 @@ private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTy
             }
         }
 
-        if (mEarliestTimestampsMap.isEmpty() && mLatestTimestampsMap.isEmpty()) {
-            return false;
-        }
-
         List<Long> timestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
         timestamps.addAll(mLatestTimestampsMap.values());
         Collections.sort(timestamps);
         mEarliestTransactionTimestamp = timestamps.get(0);
         mLatestTransactionTimestamp = timestamps.get(timestamps.size() - 1);
-        return true;
     }
 
     /**
      * Returns a map with an account type as key and correspond accounts UIDs as value
+     * from a specified list of account types
      * @param accountTypeList account's types which will be used as keys
-     * @return
+     * @return a map with an account type as key and correspond accounts UIDs as value
      */
-    private Map<AccountType, List<String>> getAccountMap(List<AccountType> accountTypeList) {
+    private Map<AccountType, List<String>> getAccountTypeToAccountUidMap(List<AccountType> accountTypeList) {
         Map<AccountType, List<String>> accountMap = new HashMap<AccountType, List<String>>();
         for (AccountType accountType : accountTypeList) {
             List<String> accountUIDList = new ArrayList<String>();
             for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
-                if (account.getAccountType() == accountType && !account.isPlaceholderAccount()) {
+                if (account.getAccountType() == accountType
+                        && !account.isPlaceholderAccount()
+                        && account.getCurrency() == mCurrency) {
                     accountUIDList.add(account.getUID());
                 }
                 accountMap.put(accountType, accountUIDList);
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index b27ced68..6e4034de 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -18,6 +18,7 @@
 
 import android.graphics.Color;
 import android.os.Bundle;
+import android.preference.PreferenceManager;
 import android.util.Log;
 import android.widget.LinearLayout;
 import android.widget.TextView;
@@ -38,6 +39,7 @@
 import org.gnucash.android.db.TransactionsDbAdapter;
 import org.gnucash.android.model.Account;
 import org.gnucash.android.model.AccountType;
+import org.gnucash.android.model.Money;
 import org.gnucash.android.ui.passcode.PassLockActivity;
 import org.joda.time.LocalDate;
 import org.joda.time.LocalDateTime;
@@ -46,6 +48,7 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
+import java.util.Currency;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
@@ -80,6 +83,7 @@
     private long mEarliestTransactionTimestamp;
     private long mLatestTransactionTimestamp;
     private boolean mChartDataPresent = true;
+    private Currency mCurrency;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -94,6 +98,9 @@ protected void onCreate(Bundle savedInstanceState) {
         mChart.setDescription("");
         mChart.getAxisRight().setEnabled(false);
 
+        mCurrency = Currency.getInstance(PreferenceManager.getDefaultSharedPreferences(this)
+                .getString(getString(R.string.key_chart_currency), Money.DEFAULT_CURRENCY_CODE));
+
         // below we can add/remove displayed account's types
         mChart.setData(getData(new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
 
@@ -119,10 +126,7 @@ protected void onCreate(Bundle savedInstanceState) {
      * @return a {@code LineData} instance that represents a user data
      */
     private LineData getData(List<AccountType> accountTypeList) {
-        if (!calculateEarliestAndLatestTimestamps(accountTypeList)) {
-            mChartDataPresent = false;
-            return getEmptyData();
-        }
+        calculateEarliestAndLatestTimestamps(accountTypeList);
 
         LocalDate startDate = new LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1);
         LocalDate endDate = new LocalDate(mLatestTransactionTimestamp).withDayOfMonth(1);
@@ -144,7 +148,12 @@ private LineData getData(List<AccountType> accountTypeList) {
             dataSets.add(set);
         }
 
-        return new LineData(xValues, dataSets);
+        LineData lineData = new LineData(xValues, dataSets);
+        if (lineData.getYValueSum() == 0) {
+            mChartDataPresent = false;
+            return getEmptyData();
+        }
+        return lineData;
     }
 
     /**
@@ -175,7 +184,9 @@ private LineData getEmptyData() {
     private ArrayList<Entry> getEntryList(AccountType accountType) {
         List<String> accountUIDList = new ArrayList<String>();
         for (Account account : mAccountsDbAdapter.getSimpleAccountList()) {
-            if (account.getAccountType() == accountType && !account.isPlaceholderAccount()) {
+            if (account.getAccountType() == accountType
+                    && !account.isPlaceholderAccount()
+                    && account.getCurrency() == mCurrency) {
                 accountUIDList.add(account.getUID());
             }
         }
@@ -204,13 +215,13 @@ private LineData getEmptyData() {
     /**
      * Calculates the earliest and latest transaction's timestamps of the specified account types
      * @param accountTypeList account's types which will be processed
-     * @return {@code false} if no data available, {@code true} otherwise
      */
-    private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
+    private void calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeList) {
+        TransactionsDbAdapter dbAdapter = TransactionsDbAdapter.getInstance();
         for (Iterator<AccountType> iter = accountTypeList.iterator(); iter.hasNext();) {
             AccountType type = iter.next();
-            long earliest = TransactionsDbAdapter.getInstance().getTimestampOfEarliestTransaction(type);
-            long latest = TransactionsDbAdapter.getInstance().getTimestampOfLatestTransaction(type);
+            long earliest = dbAdapter.getTimestampOfEarliestTransaction(type, mCurrency.getCurrencyCode());
+            long latest = dbAdapter.getTimestampOfLatestTransaction(type, mCurrency.getCurrencyCode());
             if (earliest > 0 && latest > 0) {
                 mEarliestTimestampsMap.put(type, earliest);
                 mLatestTimestampsMap.put(type, latest);
@@ -219,16 +230,11 @@ private boolean calculateEarliestAndLatestTimestamps(List<AccountType> accountTy
             }
         }
 
-        if (mEarliestTimestampsMap.isEmpty() && mLatestTimestampsMap.isEmpty()) {
-            return false;
-        }
-
         List<Long> timestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
         timestamps.addAll(mLatestTimestampsMap.values());
         Collections.sort(timestamps);
         mEarliestTransactionTimestamp = timestamps.get(0);
         mLatestTransactionTimestamp = timestamps.get(timestamps.size() - 1);
-        return true;
     }
 
     /**

From 48a1fdb11efb776b4e037db746d13f6d8408b4f7 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Tue, 28 Apr 2015 21:32:14 +0300
Subject: [PATCH 6/9] Added currency symbol to y axis

---
 .../gnucash/android/ui/chart/BarChartActivity.java | 14 +++---
 .../android/ui/chart/LargeValueFormatter.java      | 51 ++++++++++++++++++++++
 .../android/ui/chart/LineChartActivity.java        | 12 +++--
 .../gnucash/android/ui/chart/PieChartActivity.java |  6 ++-
 app/src/main/res/values-de/strings.xml             |  2 +-
 app/src/main/res/values-el/strings.xml             |  2 +-
 app/src/main/res/values-es-rMX/strings.xml         |  2 +-
 app/src/main/res/values-es/strings.xml             |  2 +-
 app/src/main/res/values-fr/strings.xml             |  2 +-
 app/src/main/res/values-hu/strings.xml             |  2 +-
 app/src/main/res/values-it/strings.xml             |  2 +-
 app/src/main/res/values-nb/strings.xml             |  2 +-
 app/src/main/res/values-nl/strings.xml             |  2 +-
 app/src/main/res/values-pt-rBR/strings.xml         |  2 +-
 app/src/main/res/values-ru/strings.xml             |  2 +-
 app/src/main/res/values-zh/strings.xml             |  2 +-
 app/src/main/res/values/strings.xml                |  2 +-
 17 files changed, 87 insertions(+), 22 deletions(-)
 create mode 100644 app/src/main/java/org/gnucash/android/ui/chart/LargeValueFormatter.java

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index 72448f88..7477d248 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -34,7 +34,6 @@
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
 import com.github.mikephil.charting.utils.Highlight;
-import com.github.mikephil.charting.utils.LargeValueFormatter;
 
 import org.gnucash.android.R;
 import org.gnucash.android.db.AccountsDbAdapter;
@@ -53,6 +52,7 @@
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Locale;
 import java.util.Map;
 
 /**
@@ -90,18 +90,18 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         getSupportActionBar().setTitle(R.string.title_bar_chart);
 
+        mCurrency = Currency.getInstance(PreferenceManager.getDefaultSharedPreferences(this)
+                .getString(getString(R.string.key_chart_currency), Money.DEFAULT_CURRENCY_CODE));
+
         mChart = new BarChart(this);
         ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
         mChart.setDrawValuesForWholeStack(false);
         mChart.setDrawBarShadow(false);
-        mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter());
+        mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter(mCurrency.getSymbol(Locale.getDefault())));
         mChart.getAxisRight().setEnabled(false);
 
-        mCurrency = Currency.getInstance(PreferenceManager.getDefaultSharedPreferences(this)
-                .getString(getString(R.string.key_chart_currency), Money.DEFAULT_CURRENCY_CODE));
-
         // below we can add/remove displayed account's types
         mChart.setData(getData(new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
 
@@ -185,6 +185,10 @@ private void calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeL
             }
         }
 
+        if (mEarliestTimestampsMap.isEmpty() || mLatestTimestampsMap.isEmpty()) {
+            return;
+        }
+
         List<Long> timestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
         timestamps.addAll(mLatestTimestampsMap.values());
         Collections.sort(timestamps);
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LargeValueFormatter.java b/app/src/main/java/org/gnucash/android/ui/chart/LargeValueFormatter.java
new file mode 100644
index 00000000..9307c5e4
--- /dev/null
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LargeValueFormatter.java
@@ -0,0 +1,51 @@
+package org.gnucash.android.ui.chart;
+
+import com.github.mikephil.charting.utils.ValueFormatter;
+
+import java.text.DecimalFormat;
+
+/**
+ * Value-formatter that formats large numbers in a pretty way.
+ * This is a slightly enhanced version of {@link com.github.mikephil.charting.utils.LargeValueFormatter}.
+ *
+ * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
+ */
+public class LargeValueFormatter implements ValueFormatter {
+
+    private static final String[] SUFFIX = new String[] {
+            "", "k", "m", "b", "t"
+    };
+    private static final int MAX_LENGTH = 4;
+
+    private DecimalFormat mFormat;
+    private String mText;
+
+    public LargeValueFormatter() {
+        mFormat = new DecimalFormat("###E0");
+    }
+
+    /**
+     * Creates a formatter that appends a specified text to the result string
+     * @param text a text that will be appended
+     */
+    public LargeValueFormatter(String text) {
+        this();
+        mText = text;
+    }
+
+    @Override
+    public String getFormattedValue(float value) {
+        return makePretty(value) + " " + mText;
+    }
+
+    private String makePretty(double number) {
+        String r = mFormat.format(number);
+        r = r.replaceAll("E[0-9]", SUFFIX[Character.getNumericValue(r.charAt(r.length() - 1)) / 3]);
+        while (r.length() > MAX_LENGTH || r.matches("[0-9]+\\.[a-z]")) {
+            r = r.substring(0, r.length() - 2) + r.substring(r.length() - 1);
+        }
+
+        return r;
+    }
+
+}
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index 6e4034de..8fbe0bf3 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -52,6 +52,7 @@
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Locale;
 import java.util.Map;
 
 /**
@@ -92,15 +93,16 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         getSupportActionBar().setTitle(R.string.title_line_chart);
 
+        mCurrency = Currency.getInstance(PreferenceManager.getDefaultSharedPreferences(this)
+                .getString(getString(R.string.key_chart_currency), Money.DEFAULT_CURRENCY_CODE));
+
         mChart = new LineChart(this);
         ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
         mChart.setOnChartValueSelectedListener(this);
         mChart.setDescription("");
+        mChart.getAxisLeft().setValueFormatter(new LargeValueFormatter(mCurrency.getSymbol(Locale.getDefault())));
         mChart.getAxisRight().setEnabled(false);
 
-        mCurrency = Currency.getInstance(PreferenceManager.getDefaultSharedPreferences(this)
-                .getString(getString(R.string.key_chart_currency), Money.DEFAULT_CURRENCY_CODE));
-
         // below we can add/remove displayed account's types
         mChart.setData(getData(new ArrayList<AccountType>(Arrays.asList(AccountType.INCOME, AccountType.EXPENSE))));
 
@@ -230,6 +232,10 @@ private void calculateEarliestAndLatestTimestamps(List<AccountType> accountTypeL
             }
         }
 
+        if (mEarliestTimestampsMap.isEmpty() || mLatestTimestampsMap.isEmpty()) {
+            return;
+        }
+
         List<Long> timestamps = new ArrayList<Long>(mEarliestTimestampsMap.values());
         timestamps.addAll(mLatestTimestampsMap.values());
         Collections.sort(timestamps);
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index 5367a374..e0b09972 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -81,6 +81,7 @@
     };
 
     private static final String DATE_PATTERN = "MMMM\nYYYY";
+    private static final String TOTAL_VALUE_LABEL_PATTERN = "%s\n%.2f %s";
     private static final int ANIMATION_DURATION = 1800;
 
     private PieChart mChart;
@@ -248,7 +249,10 @@ private PieData getData(boolean forCurrentMonth) {
         } else {
             mChartDataPresent = true;
             dataSet.setSliceSpace(2);
-            mChart.setCenterText(getResources().getString(R.string.label_chart_total) + dataSet.getYValueSum());
+            mChart.setCenterText(String.format(TOTAL_VALUE_LABEL_PATTERN,
+                            getResources().getString(R.string.label_chart_total),
+                            dataSet.getYValueSum(),
+                            mCurrencyCode));
             mChart.setTouchEnabled(true);
         }
 
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 7d9b2924..a27a5365 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -433,7 +433,7 @@
 	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
 	<string name="label_chart_no_data">No chart data available</string>
 	<string name="label_chart_overall">Overall</string>
-	<string name="label_chart_total">Total\n</string>
+	<string name="label_chart_total">Total</string>
 	<string name="label_other_slice">Other</string>
 	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
 	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index aa1f1fac..aea98f56 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -451,7 +451,7 @@
 	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
 	<string name="label_chart_no_data">No chart data available</string>
 	<string name="label_chart_overall">Overall</string>
-	<string name="label_chart_total">Total\n</string>
+	<string name="label_chart_total">Total</string>
 	<string name="label_other_slice">Other</string>
 	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
 	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index ff198fbe..6be5739f 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -436,7 +436,7 @@
     <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
+    <string name="label_chart_total">Total</string>
     <string name="label_other_slice">Other</string>
     <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
     <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 9b35ddec..02082a0e 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -434,7 +434,7 @@
 	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
 	<string name="label_chart_no_data">No chart data available</string>
 	<string name="label_chart_overall">Overall</string>
-	<string name="label_chart_total">Total\n</string>
+	<string name="label_chart_total">Total</string>
 	<string name="label_other_slice">Other</string>
 	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
 	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index ebe64bd2..a86531af 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -433,7 +433,7 @@
     <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
+    <string name="label_chart_total">Total</string>
     <string name="label_other_slice">Other</string>
     <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
     <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index 36d45267..4ddf1932 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -437,7 +437,7 @@
     <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
+    <string name="label_chart_total">Total</string>
     <string name="label_other_slice">Other</string>
     <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
     <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index ea58a2b0..5cb3bcae 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -437,7 +437,7 @@
     <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
+    <string name="label_chart_total">Total</string>
     <string name="label_other_slice">Other</string>
     <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
     <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index e5f8bd8d..cd55992e 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -434,7 +434,7 @@
 	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
 	<string name="label_chart_no_data">No chart data available</string>
 	<string name="label_chart_overall">Overall</string>
-	<string name="label_chart_total">Total\n</string>
+	<string name="label_chart_total">Total</string>
 	<string name="label_other_slice">Other</string>
 	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
 	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index 21859b90..abcbec10 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -444,7 +444,7 @@
     <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
+    <string name="label_chart_total">Total</string>
     <string name="label_other_slice">Other</string>
     <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
     <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 606ee978..29e02b04 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -436,7 +436,7 @@
 	<string name="menu_group_smaller_slices">Group Smaller Slices</string>
 	<string name="label_chart_no_data">No chart data available</string>
 	<string name="label_chart_overall">Overall</string>
-	<string name="label_chart_total">Total\n</string>
+	<string name="label_chart_total">Total</string>
 	<string name="label_other_slice">Other</string>
 	<string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
 	<string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 6800f983..148dd681 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -438,7 +438,7 @@
     <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
+    <string name="label_chart_total">Total</string>
     <string name="label_other_slice">Other</string>
     <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
     <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index 4b44810f..e2301724 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -433,7 +433,7 @@
     <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data"></string>
     <string name="label_chart_overall"></string>
-    <string name="label_chart_total">\n</string>
+    <string name="label_chart_total"></string>
     <string name="label_other_slice">Other</string>
     <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
     <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index fd868f39..3f052a72 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -442,7 +442,7 @@
     <string name="menu_group_smaller_slices">Group Smaller Slices</string>
     <string name="label_chart_no_data">No chart data available</string>
     <string name="label_chart_overall">Overall</string>
-    <string name="label_chart_total">Total\n</string>
+    <string name="label_chart_total">Total</string>
     <string name="label_other_slice">Other</string>
     <string name="toast_chart_percentage_mode_total">The percentage of selected value calculated from the total amount</string>
     <string name="toast_chart_percentage_mode_current_bar">The percentage of selected value calculated from the current stacked bar amount</string>

From 0576ae644eabe2c5de35ce485814e0ae1e2282f6 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Thu, 30 Apr 2015 21:31:53 +0300
Subject: [PATCH 7/9] Extracted strings as resource and some refactoring

---
 .../org/gnucash/android/ui/chart/BarChartActivity.java    |  2 +-
 .../org/gnucash/android/ui/chart/LineChartActivity.java   |  2 +-
 .../org/gnucash/android/ui/chart/PieChartActivity.java    |  6 ++++--
 ...ferenceFragment.java => ReportPreferenceFragment.java} | 15 +++++++--------
 app/src/main/res/values-de/strings.xml                    |  2 ++
 app/src/main/res/values-el/strings.xml                    |  2 ++
 app/src/main/res/values-es-rMX/strings.xml                |  2 ++
 app/src/main/res/values-es/strings.xml                    |  2 ++
 app/src/main/res/values-fr/strings.xml                    |  2 ++
 app/src/main/res/values-hu/strings.xml                    |  2 ++
 app/src/main/res/values-it/strings.xml                    |  2 ++
 app/src/main/res/values-nb/strings.xml                    |  2 ++
 app/src/main/res/values-nl/strings.xml                    |  2 ++
 app/src/main/res/values-pt-rBR/strings.xml                |  2 ++
 app/src/main/res/values-ru/strings.xml                    |  2 ++
 app/src/main/res/values-zh/strings.xml                    |  2 ++
 app/src/main/res/values/donottranslate.xml                |  2 +-
 app/src/main/res/values/strings.xml                       |  3 +++
 ...rt_preferences.xml => fragment_report_preferences.xml} |  9 ++-------
 app/src/main/res/xml/preference_headers.xml               |  4 ++--
 20 files changed, 45 insertions(+), 22 deletions(-)
 rename app/src/main/java/org/gnucash/android/ui/settings/{ChartPreferenceFragment.java => ReportPreferenceFragment.java} (87%)
 rename app/src/main/res/xml/{fragment_chart_preferences.xml => fragment_report_preferences.xml} (72%)

diff --git a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
index 7477d248..132604a6 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/BarChartActivity.java
@@ -91,7 +91,7 @@ protected void onCreate(Bundle savedInstanceState) {
         getSupportActionBar().setTitle(R.string.title_bar_chart);
 
         mCurrency = Currency.getInstance(PreferenceManager.getDefaultSharedPreferences(this)
-                .getString(getString(R.string.key_chart_currency), Money.DEFAULT_CURRENCY_CODE));
+                .getString(getString(R.string.key_report_currency), Money.DEFAULT_CURRENCY_CODE));
 
         mChart = new BarChart(this);
         ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
index 8fbe0bf3..ca1f2107 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/LineChartActivity.java
@@ -94,7 +94,7 @@ protected void onCreate(Bundle savedInstanceState) {
         getSupportActionBar().setTitle(R.string.title_line_chart);
 
         mCurrency = Currency.getInstance(PreferenceManager.getDefaultSharedPreferences(this)
-                .getString(getString(R.string.key_chart_currency), Money.DEFAULT_CURRENCY_CODE));
+                .getString(getString(R.string.key_report_currency), Money.DEFAULT_CURRENCY_CODE));
 
         mChart = new LineChart(this);
         ((LinearLayout) findViewById(R.id.chart)).addView(mChart);
diff --git a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
index e0b09972..88fcd945 100644
--- a/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/chart/PieChartActivity.java
@@ -58,6 +58,7 @@
 import java.util.Currency;
 import java.util.HashMap;
 import java.util.List;
+import java.util.Locale;
 import java.util.Map;
 
 import static org.gnucash.android.db.DatabaseSchema.AccountEntry;
@@ -121,7 +122,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
 
         mCurrencyCode = PreferenceManager.getDefaultSharedPreferences(this)
-                .getString(getString(R.string.key_chart_currency), Money.DEFAULT_CURRENCY_CODE);
+                .getString(getString(R.string.key_report_currency), Money.DEFAULT_CURRENCY_CODE);
 
         mChart = (PieChart) findViewById(R.id.pie_chart);
         mChart.setCenterTextSize(18);
@@ -252,7 +253,8 @@ private PieData getData(boolean forCurrentMonth) {
             mChart.setCenterText(String.format(TOTAL_VALUE_LABEL_PATTERN,
                             getResources().getString(R.string.label_chart_total),
                             dataSet.getYValueSum(),
-                            mCurrencyCode));
+                            Currency.getInstance(mCurrencyCode).getSymbol(Locale.getDefault()))
+            );
             mChart.setTouchEnabled(true);
         }
 
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/ReportPreferenceFragment.java
similarity index 87%
rename from app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment.java
rename to app/src/main/java/org/gnucash/android/ui/settings/ReportPreferenceFragment.java
index 53614bfe..90f38dc7 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/ChartPreferenceFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/ReportPreferenceFragment.java
@@ -38,22 +38,21 @@
 import java.util.List;
 
 /**
- * Fragment for charts configuring
+ * Report settings fragment inside the Settings activity
  * @author Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  */
 @TargetApi(11)
-public class ChartPreferenceFragment extends PreferenceFragment implements OnPreferenceChangeListener {
+public class ReportPreferenceFragment extends PreferenceFragment implements OnPreferenceChangeListener {
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        addPreferencesFromResource(R.xml.fragment_chart_preferences);
-
+        addPreferencesFromResource(R.xml.fragment_report_preferences);
         ActionBar actionBar = ((SherlockPreferenceActivity) getActivity()).getSupportActionBar();
         actionBar.setHomeButtonEnabled(true);
         actionBar.setDisplayHomeAsUpEnabled(true);
-        actionBar.setTitle("Chart Prefs");
+        actionBar.setTitle(R.string.title_report_prefs);
 
         List<Currency> currencyList = AccountsDbAdapter.getInstance().getCurrencies();
         int size = currencyList.size();
@@ -62,7 +61,7 @@ public void onCreate(Bundle savedInstanceState) {
             currencyCodes[--size] = currency.getCurrencyCode();
         }
 
-        ListPreference pref = (ListPreference) findPreference(getString(R.string.key_chart_currency));
+        ListPreference pref = (ListPreference) findPreference(getString(R.string.key_report_currency));
         pref.setEntryValues(currencyCodes);
         pref.setOnPreferenceChangeListener(this);
 
@@ -82,7 +81,7 @@ public void onResume() {
         super.onResume();
 
         SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
-        String keyChartCurrency = getString(R.string.key_chart_currency);
+        String keyChartCurrency = getString(R.string.key_report_currency);
         Preference pref = findPreference(keyChartCurrency);
         String chartCurrency = sharedPreferences.getString(keyChartCurrency, null);
         if (chartCurrency != null && !chartCurrency.trim().isEmpty()) {
@@ -98,7 +97,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
         preference.setSummary(newValue.toString());
         PreferenceManager.getDefaultSharedPreferences(getActivity())
                 .edit()
-                .putString(getString(R.string.key_chart_currency), newValue.toString())
+                .putString(getString(R.string.key_report_currency), newValue.toString())
                 .commit();
 
         return true;
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index a27a5365..f93013df 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -460,6 +460,8 @@
 	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
 	<string name="toast_install_file_manager">Install a file manager to select files</string>
 	<string name="title_select_backup_to_restore">Select backup to restore</string>
+	<string name="title_report_prefs">Report Preferences</string>
+	<string name="title_report_currency">title_report_currency</string>
 	<plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index aea98f56..acfb1d59 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -478,6 +478,8 @@
 	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
 	<string name="toast_install_file_manager">Install a file manager to select files</string>
 	<string name="title_select_backup_to_restore">Select backup to restore</string>
+	<string name="title_report_prefs">Report Preferences</string>
+	<string name="title_report_currency">title_report_currency</string>
 	<plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-es-rMX/strings.xml b/app/src/main/res/values-es-rMX/strings.xml
index 6be5739f..c25e4b0b 100644
--- a/app/src/main/res/values-es-rMX/strings.xml
+++ b/app/src/main/res/values-es-rMX/strings.xml
@@ -463,6 +463,8 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="title_report_prefs">Report Preferences</string>
+    <string name="title_report_currency">title_report_currency</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index 02082a0e..21afd824 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -461,6 +461,8 @@
 	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
 	<string name="toast_install_file_manager">Install a file manager to select files</string>
 	<string name="title_select_backup_to_restore">Select backup to restore</string>
+	<string name="title_report_prefs">Report Preferences</string>
+	<string name="title_report_currency">title_report_currency</string>
 	<plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index a86531af..804df4f9 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -460,6 +460,8 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="title_report_prefs">Report Preferences</string>
+    <string name="title_report_currency">title_report_currency</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index 4ddf1932..e5e316ae 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -464,6 +464,8 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="title_report_prefs">Report Preferences</string>
+    <string name="title_report_currency">title_report_currency</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index 5cb3bcae..e85d0ea7 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -464,6 +464,8 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="title_report_prefs">Report Preferences</string>
+    <string name="title_report_currency">title_report_currency</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-nb/strings.xml b/app/src/main/res/values-nb/strings.xml
index cd55992e..d53a89f3 100644
--- a/app/src/main/res/values-nb/strings.xml
+++ b/app/src/main/res/values-nb/strings.xml
@@ -461,6 +461,8 @@
 	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
 	<string name="toast_install_file_manager">Install a file manager to select files</string>
 	<string name="title_select_backup_to_restore">Select backup to restore</string>
+	<string name="title_report_prefs">Report Preferences</string>
+	<string name="title_report_currency">title_report_currency</string>
 	<plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index abcbec10..eb8b5ca5 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -471,6 +471,8 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="title_report_prefs">Report Preferences</string>
+    <string name="title_report_currency">title_report_currency</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 29e02b04..37d5e992 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -463,6 +463,8 @@
 	<string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
 	<string name="toast_install_file_manager">Install a file manager to select files</string>
 	<string name="title_select_backup_to_restore">Select backup to restore</string>
+	<string name="title_report_prefs">Report Preferences</string>
+	<string name="title_report_currency">title_report_currency</string>
 	<plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index 148dd681..c00900e7 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -465,6 +465,8 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="title_report_prefs">Report Preferences</string>
+    <string name="title_report_currency">title_report_currency</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="few">Every %d days</item>
diff --git a/app/src/main/res/values-zh/strings.xml b/app/src/main/res/values-zh/strings.xml
index e2301724..430058ab 100644
--- a/app/src/main/res/values-zh/strings.xml
+++ b/app/src/main/res/values-zh/strings.xml
@@ -460,6 +460,8 @@
     <string name="summary_google_drive_sync">Enable to sync to Google Drive</string>
     <string name="toast_install_file_manager">Install a file manager to select files</string>
     <string name="title_select_backup_to_restore">Select backup to restore</string>
+    <string name="title_report_prefs">Report Preferences</string>
+    <string name="title_report_currency">title_report_currency</string>
     <plurals name="label_every_x_days">
         <item quantity="one">Daily</item>
         <item quantity="other">Every %d days</item>
diff --git a/app/src/main/res/values/donottranslate.xml b/app/src/main/res/values/donottranslate.xml
index 359d6956..2c9ccb67 100644
--- a/app/src/main/res/values/donottranslate.xml
+++ b/app/src/main/res/values/donottranslate.xml
@@ -27,7 +27,7 @@
     <string name="key_create_backup">create_backup</string>
     <string name="key_google_drive_sync">google_drive_sync</string>
     <string name="key_google_drive_app_folder_id">google_drive_app_folder</string>
-    <string name="key_chart_currency">chart_currency</string>
+    <string name="key_report_currency">report_currency</string>
 
     <string-array name="key_transaction_type_values">
         <item>CREDIT</item>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 3f052a72..3bd90d90 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -434,6 +434,9 @@
 	<string name="title_pie_chart">Pie Chart</string>
     <string name="title_line_chart">Line Chart</string>
     <string name="title_bar_chart">Bar Chart</string>
+    <string name="title_report_prefs">Report Preferences</string>
+    <string name="title_report_currency">Report currency</string>
+    <string name="header_report_settings">Reports</string>
     <string name="menu_order_by_size">Order by size</string>
     <string name="menu_toggle_legend">Toggle legend</string>
     <string name="menu_toggle_labels">Toggle labels</string>
diff --git a/app/src/main/res/xml/fragment_chart_preferences.xml b/app/src/main/res/xml/fragment_report_preferences.xml
similarity index 72%
rename from app/src/main/res/xml/fragment_chart_preferences.xml
rename to app/src/main/res/xml/fragment_report_preferences.xml
index 10cf91f8..f5b4840a 100644
--- a/app/src/main/res/xml/fragment_chart_preferences.xml
+++ b/app/src/main/res/xml/fragment_report_preferences.xml
@@ -16,12 +16,7 @@
 -->
 
 <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android" >
-    <PreferenceCategory android:title="Chart Prefs">
-
-        <ListPreference android:key="@string/key_chart_currency"
-                        android:title="Chart Currency"
-                        android:summary="Select chart currency"/>
-
-    </PreferenceCategory>
+        <ListPreference android:key="@string/key_report_currency"
+                        android:title="@string/title_report_currency" />
 
 </PreferenceScreen>
\ No newline at end of file
diff --git a/app/src/main/res/xml/preference_headers.xml b/app/src/main/res/xml/preference_headers.xml
index 0be37ba6..609b9e85 100644
--- a/app/src/main/res/xml/preference_headers.xml
+++ b/app/src/main/res/xml/preference_headers.xml
@@ -23,8 +23,8 @@
         android:title="@string/header_backup_and_export_settings" />
     <header android:fragment="org.gnucash.android.ui.settings.PasscodePreferenceFragment"
         android:title="@string/header_passcode_settings" />
-    <header android:fragment="org.gnucash.android.ui.settings.ChartPreferenceFragment"
-            android:title="Chart Prefs Header" />
+    <header android:fragment="org.gnucash.android.ui.settings.ReportPreferenceFragment"
+            android:title="@string/header_report_settings" />
     <header android:fragment="org.gnucash.android.ui.settings.AboutPreferenceFragment"
         android:title="@string/header_about_gnucash" />
     <header android:title="Rate in Play Store">

From a9d0be800a58271f5a06711124e6b145bb404066 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 2 May 2015 21:32:23 +0300
Subject: [PATCH 8/9] Added support for older android versions

---
 .../android/ui/settings/SettingsActivity.java      | 26 +++++++++++++++++++++-
 .../main/res/xml/fragment_report_preferences.xml   |  2 ++
 2 files changed, 27 insertions(+), 1 deletion(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index 188ae943..72f90c2d 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (c) 2012 - 2015 Ngewi Fet <ngewif@gmail.com>
+ * Copyright (c) 2014 - 2015 Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
  * Copyright (c) 2014 Yongxin Wang <fefe.wyx@gmail.com>
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -31,6 +32,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.preference.CheckBoxPreference;
+import android.preference.ListPreference;
 import android.preference.Preference;
 import android.preference.Preference.OnPreferenceChangeListener;
 import android.preference.PreferenceManager;
@@ -163,6 +165,7 @@ protected void onCreate(Bundle savedInstanceState) {
 			addPreferencesFromResource(R.xml.fragment_transaction_preferences);
             addPreferencesFromResource(R.xml.fragment_backup_preferences);
             addPreferencesFromResource(R.xml.fragment_passcode_preferences);
+            addPreferencesFromResource(R.xml.fragment_report_preferences);
 			addPreferencesFromResource(R.xml.fragment_about_preferences);
 			setDefaultCurrencyListener();
 			SharedPreferences manager = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
@@ -206,6 +209,20 @@ protected void onCreate(Bundle savedInstanceState) {
             pref.setOnPreferenceChangeListener(this);
             pref.setTitle(((CheckBoxPreference) pref).isChecked() ?
                     getString(R.string.title_passcode_enabled) : getString(R.string.title_passcode_disabled));
+
+            pref = findPreference(getString(R.string.key_report_currency));
+            pref.setOnPreferenceChangeListener(this);
+            pref.setSummary(PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString(
+                    getString(R.string.key_report_currency), Money.DEFAULT_CURRENCY_CODE));
+
+            List<Currency> currencyList = AccountsDbAdapter.getInstance().getCurrencies();
+            int size = currencyList.size();
+            String[] currencyCodes = new String[size];
+            for (Currency currency : currencyList) {
+                currencyCodes[--size] = currency.getCurrencyCode();
+            }
+            ((ListPreference) pref).setEntryValues(currencyCodes);
+            ((ListPreference) pref).setEntries(currencyCodes);
         }
 	}
 
@@ -262,6 +279,12 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                     .commit();
         } else if (preference.getKey().equals(getString(R.string.key_use_double_entry))){
             setImbalanceAccountsHidden((Boolean) newValue);
+        } else if (preference.getKey().equals(getString(R.string.key_report_currency))) {
+            preference.setSummary(newValue.toString());
+            PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
+                    .edit()
+                    .putString(getString(R.string.key_report_currency), newValue.toString())
+                    .commit();
         }
 
 		return true;
@@ -273,7 +296,8 @@ protected boolean isValidFragment(String fragmentName) {
                 || AccountPreferencesFragment.class.getName().equals(fragmentName)
                 || PasscodePreferenceFragment.class.getName().equals(fragmentName)
                 || TransactionsPreferenceFragment.class.getName().equals(fragmentName)
-                || AboutPreferenceFragment.class.getName().equals(fragmentName);
+                || AboutPreferenceFragment.class.getName().equals(fragmentName)
+                || ReportPreferenceFragment.class.getName().equals(fragmentName);
     }
 
     public void setImbalanceAccountsHidden(boolean useDoubleEntry) {
diff --git a/app/src/main/res/xml/fragment_report_preferences.xml b/app/src/main/res/xml/fragment_report_preferences.xml
index f5b4840a..b6f5ba67 100644
--- a/app/src/main/res/xml/fragment_report_preferences.xml
+++ b/app/src/main/res/xml/fragment_report_preferences.xml
@@ -16,7 +16,9 @@
 -->
 
 <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android" >
+    <PreferenceCategory android:title="@string/title_report_prefs">
         <ListPreference android:key="@string/key_report_currency"
                         android:title="@string/title_report_currency" />
+    </PreferenceCategory>
 
 </PreferenceScreen>
\ No newline at end of file

From 27563a99132ddd600bc9ee4953569397171226fe Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sun, 3 May 2015 21:57:21 +0300
Subject: [PATCH 9/9] Clean up

---
 .../org/gnucash/android/db/SplitsDbAdapter.java    |  9 ----
 .../gnucash/android/db/TransactionsDbAdapter.java  | 52 +---------------------
 2 files changed, 2 insertions(+), 59 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
index 229754c0..5ce9eab7 100644
--- a/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/SplitsDbAdapter.java
@@ -308,15 +308,6 @@ private Money calculateSplitBalance(List<String> accountUIDList, String currency
         return new Money("0", currencyCode);
     }
 
-//        SELECT TOTAL ( CASE WHEN splits.type = 'DEBIT' THEN splits.amount ELSE - splits.amount END ) FROM splits , transactions WHERE splits.account_uid in ( '532ee7592d4efae7fe2418891d598e59' ) AND splits.transaction_uid = transactions.uid AND transactions.recurrence_period = 0 AND transactions.timestamp BETWEEN ?x AND ?
-//        String query = "SELECT TOTAL ( CASE WHEN splits.type = 'DEBIT' THEN splits.amount ELSE - splits.amount END )" +
-//                " FROM splits " +
-//                " INNER JOIN transactions ON transactions.uid = splits.transaction_uid" +
-//                " WHERE splits.account_uid in ( '" + TextUtils.join("' , '", accountUIDList)  + "' )" +
-//                " AND transactions.recurrence_period = 0" +
-//                " AND transactions.timestamp > 1413109811000";
-
-
     /**
      * Returns the list of splits for a transaction
      * @param transactionUID String unique ID of transaction
diff --git a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
index 7e04b127..9c75f2ac 100644
--- a/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
+++ b/app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java
@@ -595,54 +595,6 @@ public int deleteAllNonTemplateTransactions(){
     }
 
     /**
-     * Returns a timestamp of the earliest transaction for the specified account type
-     * @param type the account type
-     * @return the earliest transaction's timestamp. Returns 1970-01-01 00:00:00.000 if no transaction found
-     */
-    public long getTimestampOfEarliestTransaction(AccountType type) {
-        return getTimestamp("MIN", type);
-    }
-
-    /**
-     * Returns a timestamp of the latest transaction for the specified account type
-     * @param type the account type
-     * @return the latest transaction's timestamp. Returns 1970-01-01 00:00:00.000 if no transaction found
-     */
-    public long getTimestampOfLatestTransaction(AccountType type) {
-        return getTimestamp("MAX", type);
-    }
-
-    /**
-     * Returns the earliest or latest timestamp of transactions for a specific account type
-     * @param mod Mode (either MAX or MIN)
-     * @param type AccountType
-     * @return earliest or latest timestamp of transactions
-     * @see #getTimestampOfLatestTransaction(AccountType)
-     * @see #getTimestampOfEarliestTransaction(AccountType)
-     */
-    private long getTimestamp(String mod, AccountType type) {
-        String sql = "SELECT " + mod + "(" + TransactionEntry.COLUMN_TIMESTAMP + ")"
-                + " FROM " + TransactionEntry.TABLE_NAME
-                + " INNER JOIN " + SplitEntry.TABLE_NAME + " ON "
-                + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_TRANSACTION_UID + " = "
-                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_UID
-                + " INNER JOIN " + AccountEntry.TABLE_NAME + " ON "
-                + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_UID + " = "
-                + SplitEntry.TABLE_NAME + "." + SplitEntry.COLUMN_ACCOUNT_UID
-                + " WHERE " + AccountEntry.TABLE_NAME + "." + AccountEntry.COLUMN_TYPE + " = ? AND "
-                + TransactionEntry.TABLE_NAME + "." + TransactionEntry.COLUMN_TEMPLATE + " = 0";
-        Cursor cursor = mDb.rawQuery(sql, new String[]{type.toString()});
-        long timestamp= 0;
-        if (cursor != null) {
-            if (cursor.moveToFirst()) {
-                timestamp = cursor.getLong(0);
-            }
-            cursor.close();
-        }
-        return timestamp;
-    }
-
-    /**
      * Returns a timestamp of the earliest transaction for a specified account type and currency
      * @param type the account type
      * @param currencyCode the currency code
@@ -668,8 +620,8 @@ public long getTimestampOfLatestTransaction(AccountType type, String currencyCod
      * @param type AccountType
      * @param currencyCode the currency code
      * @return earliest or latest timestamp of transactions
-     * @see #getTimestampOfLatestTransaction(AccountType)
-     * @see #getTimestampOfEarliestTransaction(AccountType)
+     * @see #getTimestampOfLatestTransaction(AccountType, String)
+     * @see #getTimestampOfEarliestTransaction(AccountType, String)
      */
     private long getTimestamp(String mod, AccountType type, String currencyCode) {
         String sql = "SELECT " + mod + "(" + TransactionEntry.COLUMN_TIMESTAMP + ")"
