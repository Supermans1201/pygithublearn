From 05ea0582cd8aded5c5a912ccb52c83540ff51136 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Fri, 13 Nov 2015 21:37:19 +0200
Subject: [PATCH 1/4] Disable reports summary labels

---
 .../main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java   | 1 +
 1 file changed, 1 insertion(+)

diff --git a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
index a4341705..88d2257a 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/ReportSummaryFragment.java
@@ -140,6 +140,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
 
         mChart.setCenterTextSize(PieChartFragment.CENTER_TEXT_SIZE);
         mChart.setDescription("");
+        mChart.setDrawSliceText(false);
         mChart.getLegend().setEnabled(true);
         mChart.getLegend().setWordWrapEnabled(true);
         mChart.getLegend().setForm(LegendForm.CIRCLE);

From fd1fe4b6705fae4a6e77702fdb6f255848c4860c Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Sat, 14 Nov 2015 20:30:10 +0200
Subject: [PATCH 2/4] Uncheck legend when legend disabled

---
 app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
index f79fa3ae..e0fbe83e 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
@@ -439,7 +439,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 Legend legend = mChart.getLegend();
                 if (!legend.isLegendCustom()) {
                     Toast.makeText(getActivity(), R.string.toast_legend_too_long, Toast.LENGTH_LONG).show();
+                    item.setChecked(false);
                 } else {
+                    item.setChecked(!mChart.getLegend().isEnabled());
                     legend.setEnabled(!mChart.getLegend().isEnabled());
                     mChart.invalidate();
                 }

From 7e36bd9d0e6918e4f8152d5cc66dd29ee2c646b4 Mon Sep 17 00:00:00 2001
From: Oleksandr Tyshkovets <olexandr.tyshkovets@gmail.com>
Date: Mon, 16 Nov 2015 22:43:21 +0200
Subject: [PATCH 3/4] Fix bar chart legend crash

---
 .../android/ui/report/BarChartFragment.java        | 23 +++++++++++++++++-----
 1 file changed, 18 insertions(+), 5 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
index e0fbe83e..0cd2f3dd 100644
--- a/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/report/BarChartFragment.java
@@ -210,6 +210,22 @@ private BarData getData() {
                     double balance = mAccountsDbAdapter.getAccountsBalance(
                             Collections.singletonList(account.getUID()), start, end).asDouble();
                     if (balance != 0) {
+                        stack.add((float) balance);
+
+                        String accountName = account.getName();
+                        while (labels.contains(accountName)) {
+                            if (!accountToColorMap.containsKey(account.getUID())) {
+                                for (String label : labels) {
+                                    if (label.equals(accountName)) {
+                                        accountName += " ";
+                                    }
+                                }
+                            } else {
+                                break;
+                            }
+                        }
+                        labels.add(accountName);
+
                         if (!accountToColorMap.containsKey(account.getUID())) {
                             Integer color;
                             if (mUseAccountColor) {
@@ -221,10 +237,8 @@ private BarData getData() {
                             }
                             accountToColorMap.put(account.getUID(), color);
                         }
-
-                        stack.add((float) balance);
-                        labels.add(account.getName());
                         colors.add(accountToColorMap.get(account.getUID()));
+
                         Log.d(TAG, mAccountType + tmpDate.toString(" MMMM yyyy ") + account.getName() + " = " + stack.get(stack.size() - 1));
                     }
                 }
@@ -476,8 +490,7 @@ public void onValueSelected(Entry e, int dataSetIndex, Highlight h) {
         } else {
             sum = entry.getNegativeSum() + entry.getPositiveSum();
         }
-        Log.w(TAG, "sum2 = " + sum);
-        selectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label, value, value / sum * 100));
+        selectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN, label.trim(), value, value / sum * 100));
     }
 
     @Override

From 288717df1cde14853cb6e1591bdcbe3ca4dd6316 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 19 Nov 2015 00:42:48 +0100
Subject: [PATCH 4/4] Open file for import in background thread

Should fix crashes during import when opening from a network location
Fix crash when opening scheduled actions due to change in export params format
Upgrade database to version 11
Code refactoring
---
 .../org/gnucash/android/db/DatabaseHelper.java     |  4 +-
 .../org/gnucash/android/db/DatabaseSchema.java     |  2 +-
 .../org/gnucash/android/db/MigrationHelper.java    | 58 +++++++++++++++++++++-
 .../org/gnucash/android/export/ExportParams.java   |  5 ++
 .../gnucash/android/importer/ImportAsyncTask.java  | 47 ++++++++++--------
 .../android/ui/account/AccountsActivity.java       | 27 +++-------
 .../android/ui/settings/SettingsActivity.java      | 11 +---
 .../res/layout/activity_transaction_detail.xml     | 16 +++---
 8 files changed, 105 insertions(+), 65 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
index 5af6e0e9..440e5c7e 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseHelper.java
@@ -212,8 +212,8 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion){
         /*
         * NOTE: In order to modify the database, create a new static method in the MigrationHelper class
         * called upgradeDbToVersion<#>, e.g. int upgradeDbToVersion10(SQLiteDatabase) in order to upgrade to version 10.
-        * The upgrade method should return the current database version as the return value.
-        * Then all you need to do is incremend the DatabaseSchema.DATABASE_VERSION to the appropriate number.
+        * The upgrade method should return the upgraded database version as the return value.
+        * Then all you need to do is increment the DatabaseSchema.DATABASE_VERSION to the appropriate number.
         */
 		if (oldVersion > newVersion) {
             throw new IllegalArgumentException("Database downgrades are not supported at the moment");
diff --git a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
index 463c9e06..15d7870c 100644
--- a/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
+++ b/app/src/main/java/org/gnucash/android/db/DatabaseSchema.java
@@ -28,7 +28,7 @@
      * Database version.
      * With any change to the database schema, this number must increase
      */
-    public static final int DATABASE_VERSION = 10;
+    public static final int DATABASE_VERSION = 11;
 
     /**
      * Database version where Splits were introduced
diff --git a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
index 9040e2d2..f8d91f08 100644
--- a/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
+++ b/app/src/main/java/org/gnucash/android/db/MigrationHelper.java
@@ -56,7 +56,9 @@
 import java.nio.channels.FileChannel;
 import java.sql.Timestamp;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import javax.xml.parsers.ParserConfigurationException;
 import javax.xml.parsers.SAXParser;
@@ -1068,7 +1070,7 @@ static int upgradeDbToVersion9(SQLiteDatabase db){
      * <p>This method converts all saved scheduled export parameters to the new format using the
      * timestamp of last export</p>
      * @param db SQLite database
-     * @return New version number
+     * @return 10 if upgrade was successful, 9 otherwise
      */
     static int upgradeDbToVersion10(SQLiteDatabase db){
         Log.i(DatabaseHelper.LOG_TAG, "Upgrading database to version 9");
@@ -1107,6 +1109,8 @@ static int upgradeDbToVersion10(SQLiteDatabase db){
                 db.insert(ScheduledActionEntry.TABLE_NAME, null, contentValues);
             }
 
+            cursor.close();
+
             db.setTransactionSuccessful();
             oldVersion = 10;
         } finally {
@@ -1114,4 +1118,56 @@ static int upgradeDbToVersion10(SQLiteDatabase db){
         }
         return oldVersion;
     }
+
+    /**
+     * Upgrade database to version 11
+     * <p>
+     *     Migrate scheduled backups and update export parameters to the new format
+     * </p>
+     * @param db SQLite database
+     * @return 11 if upgrade was successful, 10 otherwise
+     */
+    static int upgradeDbToVersion11(SQLiteDatabase db){
+        Log.i(DatabaseHelper.LOG_TAG, "Upgrading database to version 9");
+        int oldVersion = 10;
+
+        db.beginTransaction();
+        try {
+            Cursor cursor = db.query(ScheduledActionEntry.TABLE_NAME, null,
+                    ScheduledActionEntry.COLUMN_TYPE + "= ?",
+                    new String[]{ScheduledAction.ActionType.BACKUP.name()}, null, null, null);
+
+            Map<String, String> uidToTagMap = new HashMap<>();
+            while (cursor.moveToNext()) {
+                String uid = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_UID));
+                String tag = cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TAG));
+                String[] tokens = tag.split(";");
+                try {
+                    Timestamp timestamp = Timestamp.valueOf(tokens[2]);
+                } catch (IllegalArgumentException ex) {
+                    tokens[2] = PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())
+                            .getString(Exporter.PREF_LAST_EXPORT_TIME, Exporter.TIMESTAMP_ZERO);
+                } finally {
+                    tag = TextUtils.join(";", tokens);
+                }
+                uidToTagMap.put(uid, tag);
+            }
+
+            cursor.close();
+
+            ContentValues contentValues = new ContentValues();
+            for (Map.Entry<String, String> entry : uidToTagMap.entrySet()) {
+                contentValues.clear();
+                contentValues.put(ScheduledActionEntry.COLUMN_TAG, entry.getValue());
+                db.update(ScheduledActionEntry.TABLE_NAME, contentValues,
+                        ScheduledActionEntry.COLUMN_UID + " = ?", new String[]{entry.getKey()});
+            }
+
+            db.setTransactionSuccessful();
+            oldVersion = 11;
+        } finally {
+            db.endTransaction();
+        }
+        return oldVersion;
+    }
 }
diff --git a/app/src/main/java/org/gnucash/android/export/ExportParams.java b/app/src/main/java/org/gnucash/android/export/ExportParams.java
index 04d860e0..97232940 100644
--- a/app/src/main/java/org/gnucash/android/export/ExportParams.java
+++ b/app/src/main/java/org/gnucash/android/export/ExportParams.java
@@ -16,6 +16,11 @@
 
 package org.gnucash.android.export;
 
+import android.preference.PreferenceManager;
+
+import org.gnucash.android.BuildConfig;
+import org.gnucash.android.R;
+import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.ui.export.ExportFormFragment;
 
 import java.sql.Timestamp;
diff --git a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
index a0232003..8619362d 100644
--- a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
@@ -18,6 +18,7 @@
 import android.annotation.TargetApi;
 import android.app.Activity;
 import android.app.ProgressDialog;
+import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Build;
 import android.util.Log;
@@ -35,17 +36,17 @@
  * Imports a GnuCash (desktop) account file and displays a progress dialog.
  * The AccountsActivity is opened when importing is done.
  */
-public class ImportAsyncTask extends AsyncTask<InputStream, Void, Boolean> {
-    private final Activity context;
+public class ImportAsyncTask extends AsyncTask<Uri, Void, Boolean> {
+    private final Activity mContext;
     private TaskDelegate mDelegate;
-    private ProgressDialog progressDialog;
+    private ProgressDialog mProgressDialog;
 
     public ImportAsyncTask(Activity context){
-        this.context = context;
+        this.mContext = context;
     }
 
     public ImportAsyncTask(Activity context, TaskDelegate delegate){
-        this.context = context;
+        this.mContext = context;
         this.mDelegate = delegate;
     }
 
@@ -53,34 +54,36 @@ public ImportAsyncTask(Activity context, TaskDelegate delegate){
     @Override
     protected void onPreExecute() {
         super.onPreExecute();
-        progressDialog = new ProgressDialog(context);
-        progressDialog.setTitle(R.string.title_progress_importing_accounts);
-        progressDialog.setIndeterminate(true);
-        progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
-        progressDialog.show();
+        mProgressDialog = new ProgressDialog(mContext);
+        mProgressDialog.setTitle(R.string.title_progress_importing_accounts);
+        mProgressDialog.setIndeterminate(true);
+        mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
+        mProgressDialog.show();
         if (Build.VERSION.SDK_INT > Build.VERSION_CODES.HONEYCOMB){
             //these methods must be called after progressDialog.show()
-            progressDialog.setProgressNumberFormat(null);
-            progressDialog.setProgressPercentFormat(null);
+            mProgressDialog.setProgressNumberFormat(null);
+            mProgressDialog.setProgressPercentFormat(null);
         }
 
     }
 
     @Override
-    protected Boolean doInBackground(InputStream... inputStreams) {
+    protected Boolean doInBackground(Uri... uris) {
         try {
-            GncXmlImporter.parse(inputStreams[0]);
+            InputStream accountInputStream = mContext.getContentResolver().openInputStream(uris[0]);
+            GncXmlImporter.parse(accountInputStream);
         } catch (Exception exception){
             Log.e(ImportAsyncTask.class.getName(), "" + exception.getMessage());
             Crashlytics.logException(exception);
             exception.printStackTrace();
 
             final String err_msg = exception.getLocalizedMessage();
-            context.runOnUiThread(new Runnable() {
+            Crashlytics.log(err_msg);
+            mContext.runOnUiThread(new Runnable() {
                 @Override
                 public void run() {
-                    Toast.makeText(context,
-                            context.getString(R.string.toast_error_importing_accounts) + "\n" + err_msg,
+                    Toast.makeText(mContext,
+                            mContext.getString(R.string.toast_error_importing_accounts) + "\n" + err_msg,
                             Toast.LENGTH_LONG).show();
                 }
             });
@@ -96,18 +99,18 @@ protected void onPostExecute(Boolean importSuccess) {
             mDelegate.onTaskComplete();
 
         try {
-            if (progressDialog != null && progressDialog.isShowing())
-                progressDialog.dismiss();
+            if (mProgressDialog != null && mProgressDialog.isShowing())
+                mProgressDialog.dismiss();
         } catch (IllegalArgumentException ex){
             //TODO: This is a hack to catch "View not attached to window" exceptions
             //FIXME by moving the creation and display of the progress dialog to the Fragment
         } finally {
-            progressDialog = null;
+            mProgressDialog = null;
         }
 
         int message = importSuccess ? R.string.toast_success_importing_accounts : R.string.toast_error_importing_accounts;
-        Toast.makeText(context, message, Toast.LENGTH_SHORT).show();
+        Toast.makeText(mContext, message, Toast.LENGTH_SHORT).show();
 
-        AccountsActivity.start(context);
+        AccountsActivity.start(mContext);
     }
 }
diff --git a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
index 9bca152c..494d817b 100644
--- a/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/account/AccountsActivity.java
@@ -295,18 +295,9 @@ private void handleOpenFileIntent(Intent intent) {
         Uri data = intent.getData();
         if (data != null){
             GncXmlExporter.createBackup();
-
             intent.setData(null);
-            InputStream accountInputStream = null;
-            try {
-                accountInputStream = getContentResolver().openInputStream(data);
-                new ImportAsyncTask(this).execute(accountInputStream);
-            } catch (FileNotFoundException e) {
-                Crashlytics.logException(e);
-                Log.e(LOG_TAG, "Error opening file for import - " + e.getMessage());
-            } finally {
-                removeFirstRunFlag();
-            }
+            new ImportAsyncTask(this).execute(data);
+            removeFirstRunFlag();
         }
     }
 
@@ -496,8 +487,8 @@ public void onTaskComplete() {
             };
         }
 
-        InputStream accountFileInputStream = activity.getResources().openRawResource(R.raw.default_accounts);
-        new ImportAsyncTask(activity, delegate).execute(accountFileInputStream);
+        Uri uri = Uri.parse("android.resource://" + BuildConfig.APPLICATION_ID + "/" + R.raw.default_accounts);
+        new ImportAsyncTask(activity, delegate).execute(uri);
     }
 
     /**
@@ -536,14 +527,8 @@ public static void startXmlFileChooser(Activity activity) {
      * @param data Intent data containing the XML uri
      */
     public static void importXmlFileFromIntent(Activity context, Intent data) {
-        try {
-            GncXmlExporter.createBackup();
-            InputStream accountInputStream = context.getContentResolver().openInputStream(data.getData());
-            new ImportAsyncTask(context).execute(accountInputStream);
-        } catch (FileNotFoundException e) {
-            Crashlytics.logException(e);
-            Toast.makeText(context, R.string.toast_error_importing_accounts, Toast.LENGTH_SHORT).show();
-        }
+        GncXmlExporter.createBackup();
+        new ImportAsyncTask(context).execute(data.getData());
     }
 
     /**
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index 21dc8fcc..250a799c 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -27,6 +27,7 @@
 import android.content.IntentSender;
 import android.content.SharedPreferences;
 import android.database.Cursor;
+import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
 import android.preference.CheckBoxPreference;
@@ -565,15 +566,7 @@ public void onClick(DialogInterface dialog, int which) {
             @Override
             public void onClick(DialogInterface dialog, int which) {
                 File backupFile = sortedBackupFiles[which];
-
-                try {
-                    FileInputStream inputStream = new FileInputStream(backupFile);
-                    new ImportAsyncTask(SettingsActivity.this).execute(inputStream);
-                } catch (FileNotFoundException e) {
-                    Crashlytics.logException(e);
-                    Log.e(LOG_TAG, "Error restoring backup: " + backupFile.getName());
-                    Toast.makeText(SettingsActivity.this, R.string.toast_error_importing_accounts, Toast.LENGTH_LONG).show();
-                }
+                new ImportAsyncTask(SettingsActivity.this).execute(Uri.fromFile(backupFile));
             }
         });
 
diff --git a/app/src/main/res/layout/activity_transaction_detail.xml b/app/src/main/res/layout/activity_transaction_detail.xml
index 695f3bb5..f04f239a 100644
--- a/app/src/main/res/layout/activity_transaction_detail.xml
+++ b/app/src/main/res/layout/activity_transaction_detail.xml
@@ -133,27 +133,25 @@
                     style="@style/TransactionInfo" />
             </TableRow>
 
-            <TableRow android:id="@+id/row_trn_recurrence"
+            <TableRow android:id="@+id/row_trn_notes"
                 style="@style/FormRow">
-
                 <ImageView style="@style/FormIcon"
-                    android:src="@drawable/ic_action_rotate_right"/>
+                    android:src="@drawable/ic_action_sort_by_size"/>
 
-                <TextView android:id="@+id/trn_recurrence"
+                <TextView android:id="@+id/trn_notes"
                     style="@style/TransactionInfo" />
-
             </TableRow>
 
-            <TableRow android:id="@+id/row_trn_notes"
+            <TableRow android:id="@+id/row_trn_recurrence"
                 style="@style/FormRow">
+
                 <ImageView style="@style/FormIcon"
-                    android:src="@drawable/ic_action_sort_by_size"/>
+                    android:src="@drawable/ic_action_rotate_right"/>
 
-                <TextView android:id="@+id/trn_notes"
+                <TextView android:id="@+id/trn_recurrence"
                     style="@style/TransactionInfo" />
             </TableRow>
 
-
         </TableLayout>
     </LinearLayout>
 </android.support.design.widget.CoordinatorLayout>
\ No newline at end of file
