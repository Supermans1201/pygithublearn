From acbaaad1c10171eb241c16edba94e4d2c0c1cf40 Mon Sep 17 00:00:00 2001
From: Ngewi Fet <ngewif@gmail.com>
Date: Thu, 20 Apr 2017 13:50:31 +0200
Subject: [PATCH] Refactored book related operations into utility class

---
 .../gnucash/android/test/ui/PieChartReportTest.java |  3 ++-
 .../org/gnucash/android/app/GnuCashApplication.java | 21 +--------------------
 .../gnucash/android/importer/ImportAsyncTask.java   |  4 ++--
 .../android/ui/common/BaseDrawerActivity.java       |  5 +++--
 .../org/gnucash/android/ui/common/FormActivity.java |  3 ++-
 .../android/ui/settings/BookManagerFragment.java    |  3 ++-
 .../java/org/gnucash/android/util/BookUtils.java    | 21 +++++++++++++++++++++
 .../unit/service/ScheduledActionServiceTest.java    |  3 ++-
 8 files changed, 35 insertions(+), 28 deletions(-)

diff --git a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
index b0b1a15c..df2e367a 100644
--- a/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
+++ b/app/src/androidTest/java/org/gnucash/android/test/ui/PieChartReportTest.java
@@ -45,6 +45,7 @@
 import org.gnucash.android.ui.report.ReportsActivity;
 import org.gnucash.android.ui.report.piechart.PieChartFragment;
 import org.gnucash.android.ui.settings.PreferenceActivity;
+import org.gnucash.android.util.BookUtils;
 import org.joda.time.LocalDateTime;
 import org.junit.After;
 import org.junit.AfterClass;
@@ -118,7 +119,7 @@ public static void prepareTestCase() throws Exception {
         oldActiveBookUID = BooksDbAdapter.getInstance().getActiveBookUID();
         testBookUID = GncXmlImporter.parse(context.getResources().openRawResource(R.raw.default_accounts));
 
-        GnuCashApplication.loadBook(testBookUID);
+        BookUtils.loadBook(testBookUID);
         mTransactionsDbAdapter = TransactionsDbAdapter.getInstance();
         mAccountsDbAdapter = AccountsDbAdapter.getInstance();
 
diff --git a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
index 3365fa76..58a3c0b5 100644
--- a/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
+++ b/app/src/main/java/org/gnucash/android/app/GnuCashApplication.java
@@ -53,7 +53,6 @@
 import org.gnucash.android.model.Commodity;
 import org.gnucash.android.model.Money;
 import org.gnucash.android.service.ScheduledActionService;
-import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.settings.PreferenceActivity;
 
 import java.util.Currency;
@@ -141,7 +140,7 @@ public void onCreate(){
      * Initialize database adapter singletons for use in the application
      * This method should be called every time a new book is opened
      */
-    private static void initializeDatabaseAdapters() {
+    public static void initializeDatabaseAdapters() {
         if (mDbHelper != null){ //close if open
             mDbHelper.getReadableDatabase().close();
         }
@@ -209,24 +208,6 @@ public static BooksDbAdapter getBooksDbAdapter(){
     }
 
     /**
-     * Loads the book with GUID {@code bookUID} and opens the AccountsActivity
-     * @param bookUID GUID of the book to be loaded
-     */
-    public static void loadBook(@NonNull String bookUID){
-        activateBook(bookUID);
-        AccountsActivity.start(getAppContext());
-    }
-
-    /**
-     * Activates the book with unique identifer {@code bookUID}, and refreshes the database adapters
-     * @param bookUID GUID of the book to be activated
-     */
-    public static void activateBook(@NonNull String bookUID){
-        mBooksDbAdapter.setActive(bookUID);
-        initializeDatabaseAdapters();
-    }
-
-    /**
      * Returns the currently active database in the application
      * @return Currently active {@link SQLiteDatabase}
      */
diff --git a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
index b8fdd602..92570468 100644
--- a/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
+++ b/app/src/main/java/org/gnucash/android/importer/ImportAsyncTask.java
@@ -31,10 +31,10 @@
 import com.crashlytics.android.Crashlytics;
 
 import org.gnucash.android.R;
-import org.gnucash.android.app.GnuCashApplication;
 import org.gnucash.android.db.DatabaseSchema;
 import org.gnucash.android.db.adapter.BooksDbAdapter;
 import org.gnucash.android.ui.util.TaskDelegate;
+import org.gnucash.android.util.BookUtils;
 
 import java.io.InputStream;
 
@@ -138,7 +138,7 @@ protected void onPostExecute(Boolean importSuccess) {
         Toast.makeText(mContext, message, Toast.LENGTH_SHORT).show();
 
         if (mImportedBookUID != null)
-            GnuCashApplication.loadBook(mImportedBookUID);
+            BookUtils.loadBook(mImportedBookUID);
 
         if (mDelegate != null)
             mDelegate.onTaskComplete();
diff --git a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
index 5cf93cd5..83c409d9 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/BaseDrawerActivity.java
@@ -49,6 +49,7 @@
 import org.gnucash.android.ui.report.ReportsActivity;
 import org.gnucash.android.ui.settings.PreferenceActivity;
 import org.gnucash.android.ui.transaction.ScheduledActionsActivity;
+import org.gnucash.android.util.BookUtils;
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
@@ -104,7 +105,7 @@ protected void onCreate(Bundle savedInstanceState) {
         //if a parameter was passed to open an account within a specific book, then switch
         String bookUID = getIntent().getStringExtra(UxArgument.BOOK_UID);
         if (bookUID != null && !bookUID.equals(BooksDbAdapter.getInstance().getActiveBookUID())){
-            GnuCashApplication.activateBook(bookUID);
+            BookUtils.activateBook(bookUID);
         }
 
         ButterKnife.bind(this);
@@ -324,7 +325,7 @@ public boolean onMenuItemClick(MenuItem item) {
         BooksDbAdapter booksDbAdapter = BooksDbAdapter.getInstance();
         String bookUID = booksDbAdapter.getUID(id);
         if (!bookUID.equals(booksDbAdapter.getActiveBookUID())){
-            GnuCashApplication.loadBook(bookUID);
+            BookUtils.loadBook(bookUID);
             finish();
         }
         AccountsActivity.start(GnuCashApplication.getAppContext());
diff --git a/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java b/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
index 6d777f5f..ba94de94 100644
--- a/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/common/FormActivity.java
@@ -38,6 +38,7 @@
 import org.gnucash.android.ui.transaction.SplitEditorFragment;
 import org.gnucash.android.ui.transaction.TransactionFormFragment;
 import org.gnucash.android.ui.util.widget.CalculatorKeyboard;
+import org.gnucash.android.util.BookUtils;
 
 /**
  * Activity for displaying forms in the application.
@@ -61,7 +62,7 @@ protected void onCreate(Bundle savedInstanceState) {
         //if a parameter was passed to open an account within a specific book, then switch
         String bookUID = getIntent().getStringExtra(UxArgument.BOOK_UID);
         if (bookUID != null && !bookUID.equals(BooksDbAdapter.getInstance().getActiveBookUID())){
-            GnuCashApplication.activateBook(bookUID);
+            BookUtils.activateBook(bookUID);
         }
 
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
index ec5c556f..08d0e398 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/BookManagerFragment.java
@@ -54,6 +54,7 @@
 import org.gnucash.android.db.adapter.TransactionsDbAdapter;
 import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.common.Refreshable;
+import org.gnucash.android.util.BookUtils;
 import org.gnucash.android.util.PreferencesHelper;
 
 import java.sql.Timestamp;
@@ -172,7 +173,7 @@ public void bindView(View view, final Context context, Cursor cursor) {
                 public void onClick(View v) {
                     //do nothing if the active book is tapped
                     if (!BooksDbAdapter.getInstance().getActiveBookUID().equals(bookUID)) {
-                        GnuCashApplication.loadBook(bookUID);
+                        BookUtils.loadBook(bookUID);
                     }
                 }
             });
diff --git a/app/src/main/java/org/gnucash/android/util/BookUtils.java b/app/src/main/java/org/gnucash/android/util/BookUtils.java
index 92e258e9..67bf5f4d 100644
--- a/app/src/main/java/org/gnucash/android/util/BookUtils.java
+++ b/app/src/main/java/org/gnucash/android/util/BookUtils.java
@@ -1,8 +1,11 @@
 package org.gnucash.android.util;
 
 import android.content.SharedPreferences;
+import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
+import org.gnucash.android.app.GnuCashApplication;
+import org.gnucash.android.ui.account.AccountsActivity;
 import org.gnucash.android.ui.settings.PreferenceActivity;
 
 /**
@@ -22,4 +25,22 @@ public static String getBookBackupFileUri(String bookUID){
         SharedPreferences sharedPreferences = PreferenceActivity.getBookSharedPreferences(bookUID);
         return sharedPreferences.getString(KEY_BACKUP_FILE, null);
     }
+
+    /**
+     * Activates the book with unique identifer {@code bookUID}, and refreshes the database adapters
+     * @param bookUID GUID of the book to be activated
+     */
+    public static void activateBook(@NonNull String bookUID){
+        GnuCashApplication.getBooksDbAdapter().setActive(bookUID);
+        GnuCashApplication.initializeDatabaseAdapters();
+    }
+
+    /**
+     * Loads the book with GUID {@code bookUID} and opens the AccountsActivity
+     * @param bookUID GUID of the book to be loaded
+     */
+    public static void loadBook(@NonNull String bookUID){
+        activateBook(bookUID);
+        AccountsActivity.start(GnuCashApplication.getAppContext());
+    }
 }
diff --git a/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
index 094c5234..78bd9b35 100644
--- a/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
+++ b/app/src/test/java/org/gnucash/android/test/unit/service/ScheduledActionServiceTest.java
@@ -45,6 +45,7 @@
 import org.gnucash.android.test.unit.testutil.GnucashTestRunner;
 import org.gnucash.android.test.unit.testutil.ShadowCrashlytics;
 import org.gnucash.android.test.unit.testutil.ShadowUserVoice;
+import org.gnucash.android.util.BookUtils;
 import org.gnucash.android.util.TimestampHelper;
 import org.joda.time.DateTime;
 import org.joda.time.LocalDateTime;
@@ -88,7 +89,7 @@
     public void createAccounts(){
         try {
             String bookUID = GncXmlImporter.parse(GnuCashApplication.getAppContext().getResources().openRawResource(R.raw.default_accounts));
-            GnuCashApplication.loadBook(bookUID);
+            BookUtils.loadBook(bookUID);
             //initAdapters(bookUID);
         } catch (ParserConfigurationException | SAXException | IOException e) {
             e.printStackTrace();
