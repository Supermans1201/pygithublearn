From f6ae9103383349d5d21f2552eb54bd2e571adf30 Mon Sep 17 00:00:00 2001
From: Yongxin Wang <fefe.wyx@gmail.com>
Date: Thu, 8 May 2014 22:59:55 +0800
Subject: [PATCH] More db resource leaks

---
 .../org/gnucash/android/db/AccountsDbAdapter.java  | 62 +++++++++++++---------
 .../ui/transaction/TransactionsActivity.java       | 15 ++++--
 .../android/util/GnucashAccountXmlHandler.java     |  2 +-
 3 files changed, 49 insertions(+), 30 deletions(-)

diff --git a/app/src/org/gnucash/android/db/AccountsDbAdapter.java b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
index 894b576d..6a24938d 100644
--- a/app/src/org/gnucash/android/db/AccountsDbAdapter.java
+++ b/app/src/org/gnucash/android/db/AccountsDbAdapter.java
@@ -269,12 +269,13 @@ public long getAccountID(String uid){
 				new String[] {DatabaseHelper.KEY_ROW_ID, DatabaseHelper.KEY_UID}, 
 				DatabaseHelper.KEY_UID + " = '" + uid + "'", null, null, null, null);
 		long result = -1;
-		if (cursor != null && cursor.moveToFirst()){
-			Log.v(TAG, "Returning account id");
-			result = cursor.getLong(DatabaseAdapter.COLUMN_ROW_ID);
-
-			cursor.close();
-		}
+		if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                Log.v(TAG, "Returning account id");
+                result = cursor.getLong(DatabaseAdapter.COLUMN_ROW_ID);
+            }
+            cursor.close();
+        }
 		return result;
 	}
 	
@@ -291,12 +292,13 @@ public String getParentAccountUID(String uid){
                 new String[]{uid},
                 null, null, null, null);
 		String result = null;
-		if (cursor != null && cursor.moveToFirst()){
-			Log.d(TAG, "Account already exists. Returning existing id");
-			result = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_PARENT_ACCOUNT_UID));
-
-			cursor.close();
-		}
+		if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                Log.d(TAG, "Account already exists. Returning existing id");
+                result = cursor.getString(cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_PARENT_ACCOUNT_UID));
+            }
+            cursor.close();
+        }
 		return result;
 	}
 
@@ -320,10 +322,12 @@ public Account getAccount(long rowId){
 		Account account = null;
 		Log.v(TAG, "Fetching account with id " + rowId);
 		Cursor c =	fetchRecord(DatabaseHelper.ACCOUNTS_TABLE_NAME, rowId);
-		if (c != null && c.moveToFirst()){
-			account = buildAccountInstance(c);	
-			c.close();
-		}
+		if (c != null) {
+            if (c.moveToFirst()) {
+                account = buildAccountInstance(c);
+            }
+            c.close();
+        }
 		return account;
 	}
 		
@@ -348,10 +352,12 @@ public String getAccountUID(long id){
 				new String[]{DatabaseHelper.KEY_ROW_ID, DatabaseHelper.KEY_UID}, 
 				DatabaseHelper.KEY_ROW_ID + "=" + id, 
 				null, null, null, null);
-		if (c != null && c.moveToFirst()){
-			uid = c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_UID));
-			c.close();
-		}
+		if (c != null) {
+            if (c.moveToFirst()) {
+                uid = c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_UID));
+            }
+            c.close();
+        }
 		return uid;
 	}
 
@@ -366,8 +372,10 @@ public String getAccountColorCode(long accountId){
                 new String[]{DatabaseHelper.KEY_ROW_ID, DatabaseHelper.KEY_COLOR_CODE},
                 DatabaseHelper.KEY_ROW_ID + "=" + accountId,
                 null, null, null, null);
-        if (c != null && c.moveToFirst()){
-            colorCode = c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_COLOR_CODE));
+        if (c != null) {
+            if (c.moveToFirst()) {
+                colorCode = c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_COLOR_CODE));
+            }
             c.close();
         }
         return colorCode;
@@ -399,10 +407,12 @@ public AccountType getAccountType(long accountId){
 	public String getName(long accountID) {
 		String name = null;
 		Cursor c = fetchRecord(DatabaseHelper.ACCOUNTS_TABLE_NAME, accountID);
-		if (c != null && c.moveToFirst()){
-			name = c.getString(DatabaseAdapter.COLUMN_NAME);
-			c.close();
-		}
+		if (c != null) {
+            if (c.moveToFirst()) {
+                name = c.getString(DatabaseAdapter.COLUMN_NAME);
+            }
+            c.close();
+        }
 		return name;
 	}
 	
diff --git a/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java b/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java
index fa16cd9b..5b33acfa 100644
--- a/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java
+++ b/app/src/org/gnucash/android/ui/transaction/TransactionsActivity.java
@@ -117,6 +117,11 @@
     private AccountsDbAdapter mAccountsDbAdapter;
 
     /**
+     * Hold the accounts cursor that will be used in the Navigation
+     */
+    private Cursor mAccountsCursor = null;
+
+    /**
      * This is the last known color for the title indicator.
      * This is used to remember the color of the top level account if the child account doesn't have one.
      */
@@ -348,11 +353,14 @@ private void setTitleIndicatorColor() {
 	 */
 	private void setupActionBarNavigation() {
 		// set up spinner adapter for navigation list
-		Cursor accountsCursor = mAccountsDbAdapter.fetchAllRecordsOrderedByFullName();
+        if (mAccountsCursor != null) {
+            mAccountsCursor.close();
+        }
+		mAccountsCursor = mAccountsDbAdapter.fetchAllRecordsOrderedByFullName();
 
         SpinnerAdapter mSpinnerAdapter = new QualifiedAccountNameCursorAdapter(
                 getSupportActionBar().getThemedContext(),
-                R.layout.sherlock_spinner_item, accountsCursor);
+                R.layout.sherlock_spinner_item, mAccountsCursor);
 		((ResourceCursorAdapter) mSpinnerAdapter)
 				.setDropDownViewResource(R.layout.sherlock_spinner_dropdown_item);
 		ActionBar actionBar = getSupportActionBar();
@@ -360,7 +368,7 @@ private void setupActionBarNavigation() {
 		actionBar.setListNavigationCallbacks(mSpinnerAdapter,
 				mTransactionListNavigationListener);
         actionBar.setDisplayHomeAsUpEnabled(true);
-		
+
 		updateNavigationSelection();
 	}
 	
@@ -449,6 +457,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     @Override
 	protected void onDestroy() {
 		super.onDestroy();
+        mAccountsCursor.close();
 		mAccountsDbAdapter.close();
 	}
 	
diff --git a/app/src/org/gnucash/android/util/GnucashAccountXmlHandler.java b/app/src/org/gnucash/android/util/GnucashAccountXmlHandler.java
index d82ed3b9..ed1e129a 100644
--- a/app/src/org/gnucash/android/util/GnucashAccountXmlHandler.java
+++ b/app/src/org/gnucash/android/util/GnucashAccountXmlHandler.java
@@ -202,7 +202,7 @@ public static void parse(Context context, InputStream accountsInputStream){
             GnucashAccountXmlHandler handler = new GnucashAccountXmlHandler(context);
             xr.setContentHandler(handler);
             xr.parse(new InputSource(bos));
-
+            handler.mDatabaseAdapter.close();
         } catch (Exception e) {
             e.printStackTrace();
             Toast.makeText(context, R.string.toast_error_importing_accounts, Toast.LENGTH_LONG).show();
