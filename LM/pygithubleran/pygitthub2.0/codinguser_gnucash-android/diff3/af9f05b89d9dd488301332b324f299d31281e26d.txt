From af9f05b89d9dd488301332b324f299d31281e26d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=80lex=20Magaz=20Gra=C3=A7a?= <rivaldi8@gmail.com>
Date: Tue, 8 Dec 2015 11:48:15 +0100
Subject: [PATCH] Apply code inspector suggestions.

---
 .../android/ui/export/ExportFormFragment.java      |  8 ++---
 .../ui/settings/OwnCloudDialogFragment.java        | 38 +++++++++++-----------
 .../android/ui/settings/SettingsActivity.java      | 10 +++---
 3 files changed, 28 insertions(+), 28 deletions(-)

diff --git a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
index 65a89123..2414bd1e 100644
--- a/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/export/ExportFormFragment.java
@@ -132,14 +132,14 @@
 	/**
 	 * Event recurrence options
 	 */
-	EventRecurrence mEventRecurrence = new EventRecurrence();
+	private EventRecurrence mEventRecurrence = new EventRecurrence();
 
 	/**
 	 * Recurrence rule
 	 */
-	String mRecurrenceRule;
+	private String mRecurrenceRule;
 
-	Calendar mExportStartCalendar = Calendar.getInstance();
+	private Calendar mExportStartCalendar = Calendar.getInstance();
 
 	/**
 	 * Tag for logging
@@ -154,7 +154,7 @@
 	private ExportParams.ExportTarget mExportTarget = ExportParams.ExportTarget.SD_CARD;
 
 
-	public void onRadioButtonClicked(View view){
+	private void onRadioButtonClicked(View view){
         switch (view.getId()){
             case R.id.radio_ofx_format:
                 mExportFormat = ExportFormat.OFX;
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java b/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java
index aa841422..29478f5e 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/OwnCloudDialogFragment.java
@@ -34,34 +34,34 @@
 public class OwnCloudDialogFragment extends DialogFragment {
 
     /**
-     * Dialog positive button. Ok to save and validade the data
+     * Dialog positive button. Ok to save and validate the data
      */
-    Button mOkButton;
+    private Button mOkButton;
 
     /**
      * Cancel button
      */
-    Button mCancelButton;
+    private Button mCancelButton;
 
     /**
      * ownCloud vars
      */
-    String mOC_server;
-    String mOC_username;
-    String mOC_password;
-    String mOC_dir;
+    private String mOC_server;
+    private String mOC_username;
+    private String mOC_password;
+    private String mOC_dir;
 
-    EditText mServer;
-    EditText mUsername;
-    EditText mPassword;
-    EditText mDir;
+    private EditText mServer;
+    private EditText mUsername;
+    private EditText mPassword;
+    private EditText mDir;
 
-    TextView mServerError;
-    TextView mUsernameError;
-    TextView mDirError;
+    private TextView mServerError;
+    private TextView mUsernameError;
+    private TextView mDirError;
 
-    SharedPreferences mPrefs;
-    Context mContext;
+    private SharedPreferences mPrefs;
+    private Context mContext;
 
     private static CheckBoxPreference ocCheckBox;
 
@@ -155,7 +155,7 @@ private void save() {
         dismiss();
     }
 
-    private void checkdata() {
+    private void checkData() {
         mServerError.setVisibility(View.GONE);
         mUsernameError.setVisibility(View.GONE);
         mDirError.setVisibility(View.GONE);
@@ -220,7 +220,7 @@ public void onRemoteOperationFinish(RemoteOperation caller, RemoteOperationResul
     /**
      * Binds click listeners for the dialog buttons
      */
-    protected void setListeners(){
+    private void setListeners(){
 
         mCancelButton.setOnClickListener(new View.OnClickListener() {
 
@@ -243,7 +243,7 @@ public void onClick(View v) {
                         )
                     save();
                 else
-                    checkdata();
+                    checkData();
             }
         });
     }
diff --git a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
index 45b7909d..c263e708 100644
--- a/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
+++ b/app/src/main/java/org/gnucash/android/ui/settings/SettingsActivity.java
@@ -86,13 +86,13 @@
 public class SettingsActivity extends AppCompatPreferenceActivity
         implements OnPreferenceChangeListener, Preference.OnPreferenceClickListener{
 
-    public static final String LOG_TAG = "SettingsActivity";
+    private static final String LOG_TAG = "SettingsActivity";
 
     /**
      * Allowed delay between two consecutive taps of a setting for it to be considered a double tap
      * Used on Android v2.3.3 or lower devices where dialogs cannot be instantiated easily in settings
      */
-    public static final int DOUBLE_TAP_DELAY = 2000;
+    private static final int DOUBLE_TAP_DELAY = 2000;
 
     /**
      * Testing app key for DropBox API
@@ -107,7 +107,7 @@
     /**
      * Collects references to the UI elements and binds click listeners
      */
-    public static final int REQUEST_LINK_TO_DBX = 0x11;
+    private static final int REQUEST_LINK_TO_DBX = 0x11;
     public static final int REQUEST_RESOLVE_CONNECTION = 0x12;
 
     /**
@@ -388,7 +388,7 @@ public boolean onPreferenceClick(Preference preference) {
                 Toast.makeText(this, R.string.toast_tap_again_to_confirm_delete, Toast.LENGTH_SHORT).show();
             } else {
                 GncXmlExporter.createBackup(); //create backup before deleting everything
-                List<Transaction> openingBalances = new ArrayList<Transaction>();
+                List<Transaction> openingBalances = new ArrayList<>();
                 boolean preserveOpeningBalances = GnuCashApplication.shouldSaveOpeningBalances(false);
                 if (preserveOpeningBalances) {
                     AccountsDbAdapter accountsDbAdapter = AccountsDbAdapter.getInstance();
@@ -559,7 +559,7 @@ public void run() {
     /**
      * Opens a dialog for a user to select a backup to restore and then restores the backup
      */
-    public void restoreBackup() {
+    private void restoreBackup() {
         Log.i("Settings", "Opening GnuCash XML backups for restore");
         File[] backupFiles = new File(Exporter.BACKUP_FOLDER_PATH).listFiles();
         if (backupFiles == null){
