5325	!	43
5039	!!</string>	17
45430	!(child	4
46551	!(mIndeterminateDrawable	4
24781	!(this	6
2467	!</string>	100
2139	!=	386
23254	!GnuCashApplication.isDoubleEntryEnabled()	3
42449	!HasPermanentMenuKey.get(context)	4
49990	!TextUtils.equals(newText,mOldQueryText))	5
62053	!TextUtils.isEmpty(mData.getString(CURRENCY_CODE_DATA_KEY))	3
50485	!TextUtils.isEmpty(mQueryTextView.getText())	5
44924	!TextUtils.isEmpty(mSubtitle)	4
44937	!TextUtils.isEmpty(mSubtitle))	4
42914	!TextUtils.isEmpty(mTextButton.getText())	4
45278	!TextUtils.isEmpty(mTitle)	4
59878	!TextUtils.isEmpty(newText)	3
48889	!TextUtils.isEmpty(query))	5
50099	!TextUtils.isEmpty(text)	5
25978	!\n	7
1614	!account.isPlaceholderAccount()	36
19255	!account.isPlaceholderAccount())	20
32995	!accountExists(CHILD_ACCOUNT_UID))	4
35407	!activities.isEmpty())	6
36580	!amountString.matches("\\d+"))	5
56684	!amountText.startsWith("-")){	7
44519	!anchor.isShown())	4
50717	!bookUID.equals(BooksDbAdapter.getInstance().getActiveBookUID())){	5
52196	!budgetAmountList.isEmpty()){	4
53758	!budgetName.isEmpty()	5
5470	!chartCurrency.trim().isEmpty())	5
62886	!currencyCode.equals(transferCurrencyCode)	4
26804	!cursor.moveToFirst()){	9
49652	!defaultActivityButtonShown)	4
9970	!defaultEmail.trim().isEmpty()){	10
9846	!defaultExportFormat.trim().isEmpty()){	5
41980	!delayedAnims.isEmpty()))	4
25814	!description.equals(""))	5
53869	!description.isEmpty())	2
14107	!dstDir.exists()){	6
14360	!dstDir.isDirectory()	6
63851	!dstDir.isDirectory()){	3
45837	!empty	4
49838	!event.isCanceled())	5
63891	!exported)	3
38118	!f.mHidden	5
40120	!fromResume)	4
39002	!hasFeature(Window.FEATURE_ACTION_BAR)	4
40163	!hasFeature(Window.FEATURE_NO_TITLE))	4
41513	!hasFloat	4
41678	!hasInt	4
41262	!hasOther)	4
43786	!hasOverflow	4
44029	!hasOverflow)	4
49207	!historyFileName.endsWith(HISTORY_FILE_EXTENSION))	4
45875	!hitFirst))	4
46408	!hitLast))	4
62347	!ignorePasscode)	5
39306	!isDestroyed())	4
21807	!isFavoriteAccount	9
50273	!isIconified()	6
53736	!isInEditMode())	2
46057	!isInTouchMode())	4
47242	!isInputMethodNotNeeded()	4
42331	!isOverflowMenuShowing()	4
51073	!isRoboUnitTest())	9
7364	!isSameDay(previousTimestamp,transactionTime)	10
14010	!isSessionActive()	17
23861	!isSessionActive())	11
40048	!isShowing()	4
43485	!itemImpl.isEnabled())	4
12757	!locale.equals(Locale.US))	12
47596	!lockedExpanded	4
44131	!lp.isOverflowButton	4
43538	!lp.preventEdgeOffset)	4
18664	!mAccount.getName().equals(getEnteredName())	10
39851	!mActionView.hasEmbeddedTabs()	4
49078	!mActivites.isEmpty())	4
39629	!mActivity.isFinishing()	4
13028	!mAmountEditText.isInputModified()	10
56669	!mAmountInputFormatter.isInputModified()	7
57526	!mBudgetAmounts.isEmpty()	3
62910	!mCurrencyConversionDone){	4
63736	!mCursor.isClosed())	1
6919	!mDescription.isEmpty()){	7
6476	!mDoubleEntryAccountUID.isEmpty()){	6
50498	!mExpandedInActionView)	5
60109	!mGroupSmallerSlices	8
40101	!mHasEmbeddedTabs)	4
49560	!mHistoricalRecordsChanged)	4
38914	!mIgnoreNativeCreate)	4
38802	!mIgnoreNativePrepare)	4
39069	!mIgnoreNativeSelected)	4
53601	!mIgnoreScheduledAction)	4
46870	!mIndeterminate)	4
49249	!mIsAttachedToWindow)	4
33399	!mIsChecked	3
43140	!mMenu.getNonActionItems().isEmpty())	4
50596	!mOnCloseListener.onClose())	5
50046	!mOnQueryChangeListener.onQueryTextSubmit(query.toString()))	5
50502	!mOnSuggestionListener.onSuggestionClick(position))	5
49822	!mOnSuggestionListener.onSuggestionSelect(position))	5
41816	!mPlayingBackwards	4
43845	!mPreserveIconSpacing)	4
32313	!mTotalPercentageMode	10
63916	!mUseCompactView	6
50570	!mVoiceButtonEnabled))	5
37838	!newMenus.contains(f))	4
42616	!nonActionItems.get(0).isActionViewExpanded()	4
63740	!oldCursor.isClosed())	1
62094	!page.isCompleted())	3
31343	!passCode.trim().isEmpty()	12
13660	!passCode.trim().isEmpty())	10
19316	!previousAccountUid.equals(currentAccountUid)	5
23111	!reconcileDate.isEmpty())	3
52126	!rootAccount.getUID().equals(mAccountsDbAdapter.getGnuCashRootAccountUID()))	4
41823	!sPendingAnimations.get().contains(this))	4
25545	!scheduledAction.isEnabled()	11
25701	!scheduledAction.shouldAutoCreate()	5
27059	!scheduledActionUID.isEmpty())	13
19681	!scheduledActionUID.isEmpty()){	6
45438	!showHome)	4
31067	!skipPasscode)	11
59637	!split.getAccountUID().equals(accountUID))	5
29211	!split.getAccountUID().equals(mAccountUID))	8
59534	!split.getQuantity().equals(split.getValue()))	3
62821	!splitEditorUsed()	4
50719	!splitList.isEmpty())	15
14063	!srcDir.isDirectory()	6
33793	!tag.isEmpty()){	3
62823	!text.isEmpty()	4
38851	!toggleMenuMode)	4
39496	!trans.isEmpty())	4
29118	!transaction.getNote().isEmpty()){	3
19116	!transactionList.isEmpty()){	13
23987	!type.equals(""))	4
1215	"	369
18081	"!=	9
8258	"!="	11
62655	"!=0"	4
57505	"!=1	2
52206	"!Account"	7
52171	"!Type:Bank"	3
52359	"!Type:CCard"	3
35691	"!Type:Cash"	5
52142	"!Type:Oth	3
181	""	166
4757	"")	54
54282	"","k","m","b","t"	4
876	"#"	21
186	"#cccccc"	4
52371	"$"	9
9421	"$adb	15
34437	"$adb",'devices'	15
12563	"${adb	3
2373	"${versionMajor	51
52078	"%"	3
52738	"%'"	3
24217	"%'")	8
3672	"%'",	10
24568	"%'",null)	3
583	"%s	32
8642	"%s\n%.2f	18
63511	"%s\n%.2f%s"	3
33475	"&lt	5
395	"'	111
13512	"'"	46
24393	"'")	16
35277	"'").append(AccountType.ROOT.name()).append("'")	4
7013	"'",	44
35476	"'",null)	6
19977	"'",null,null,null,null)	15
18237	"')	21
2709	"')"	34
35026	"')",	15
34976	"')",null,null	2
26913	"',"	5
13679	"','"	21
52535	"'.",secondException)	2
3731	"'ROOT'"	7
12774	"(	12
49	"("	91
18471	"(("	16
400	")	193
12354	")"	107
50001	")")	10
34778	")",	10
18903	"))	20
18223	"),"	28
50351	"),selection:	5
35011	").	3
34961	").append(context.getString(R.string.repeat_on_weekday,dayOfWeek))	6
26846	").append(dayOfWeek)	14
26724	").append(mTotalFrequency).append("	9
32798	"*	5
56852	"*"	4
61816	"*1.0	6
19177	"+	41
59109	"+"	3
19173	",	29
9760	","	53
26245	","-")	5
23450	",-]"	3
23937	",.-]"	4
30039	",balance	23
30111	",color	7
39035	",color:	4
50656	",end	6
61844	",ex)	3
38015	",flags:	4
37821	",item:	8
26113	",mRootTemplateAccount)	7
40171	",mask:	5
38345	",menu:	8
51947	",model.getClass().getName()))	8
13308	",model.getClass().getSimpleName()))	11
52886	",money.formattedString(Locale.GERMAN))	3
52843	",money.formattedString(Locale.US))	3
57646	",newVersion)	3
39476	",params:	5
41582	",target	4
31550	",tokens)	9
38746	",view:	8
5958	"-"	81
42172	".	4
12492	"."	138
20488	".*"	37
26939	".*",	6
10101	"../scripts/adb_all.sh"	4
9917	"..\\scripts\\adb_all.bat"	4
428	".account"	8
8306	".fileprovider"	3
35540	".gnca"	4
35545	".ofx"	10
35501	".qif"	10
25173	".transaction"	2
35481	".txt"	4
48551	".xml"	4
24961	".zip"	14
51442	".zip")	5
62331	"/	3
5641	"/"	90
35768	"/100"	4
14032	"/backups/"	12
14571	"/backups/")	6
14029	"/backups/").mkdirs()	5
14625	"/exports/"	12
14222	"/exports/")	6
14131	"/exports/").mkdirs()	5
59371	"/gnucash")	2
6855	"/gnucash/"	35
6974	"/gnucash/").mkdirs()	18
56826	"/some/path/filename.ext"	3
5435	"0"	48
51030	"0".equals(drawableId))	5
58564	"0.123"	2
58553	"0.123456"	2
53047	"0.3"	10
57584	"0.4"	6
35202	"0.4.1"	11
9870	"0.5"	7
25397	"0/"	8
62336	"1	3
26036	"1"	16
27774	"1")	16
19697	"1":"0")	11
62315	"1,"	3
4955	"1.0.0"	6
58565	"1.234"	2
63754	"1.5.3"	2
63749	"1.5.4"	1
20713	"1.6.x"	7
31035	"100"	18
1977	"100,"	12
32522	"1000	5
32531	"1000,"	5
36630	"12,25"	11
36484	"12.25"	8
58834	"12345/100"	3
63764	"15,50"	2
58916	"15.50"	4
58879	"15.75"	3
13315	"15.75")	3
60330	"1984"	3
64337	"2,45"	1
4088	"2.0.0"	12
53113	"2.2"	10
35018	"2.2.1"	17
9925	"2.2.2"	10
64336	"2.45"	1
52718	"2001-09-09	5
52634	"2009-02-13	5
3093	"21.1.2"	19
50838	"2130837524",	5
54990	"22.0.1"	13
53035	"22.2.1"	13
52403	"23.0.1"	13
52387	"23.0.2"	2
53090	"23.1.0"	9
35105	"23.1.1"	6
9491	"23.3.0"	4
9005	"24.2.1"	8
55198	"25.3.1"	2
33441	"4.90	10
36528	"46fe045d00d4ad8a71014c53567be3368e10bd64")	4
60327	"62922c5ccb31d6198259739d27d858fe"	3
13357	"9.99"	14
19183	":	25
44249	":"	12
50622	"://"	5
2729	"::"	6
3619	"</cmdty:id>")	5
2342	"</string>	98
20951	"<amount>	13
3595	"<cmdty:id>"	4
1759	"<gnc:template-transactions>"	4
33382	"<uid>	5
33381	"<valueNum>	7
13766	"=	102
18439	"="	71
6985	"='"	27
57435	"=0	4
18354	"=0"	28
3921	"=1	5
5421	"=1"	6
33629	"=1",null,null,null,null)	12
21817	"==	25
33654	"=?"	9
2341	"=?",	41
25496	"=?",new	24
14588	"?)")	2
21716	"A	27
36398	"A."	7
33766	"ABS	15
63309	"ACCTID"	2
63368	"ACCTTYPE"	2
60983	"ADF"	3
57990	"ADP"	6
57793	"AED"	6
58478	"AFA"	6
58251	"AFN"	6
58022	"ALL"	6
18170	"ALTER	39
58225	"AMD"	6
58474	"ANG"	6
57864	"AOA"	6
58091	"AON"	6
58366	"AOR"	6
58099	"ARA"	6
58109	"ARS"	6
608	"AS	349
57940	"ATS"	6
57875	"AUD"	6
36239	"AUD":	4
57764	"AWG"	6
58351	"AZM"	6
58230	"AZN"	6
45799	"AbsSpinner.SavedState{"	4
27683	"AccountsActivity"	24
14262	"AccountsDbAdapter"	4
20758	"AccountsListFragment"	26
45041	"ActionBarContextView"	4
39762	"ActionBarImpl"	4
38404	"ActionBarSherlock"	4
45271	"ActionBarView"	4
42642	"ActionMenuItemView"	4
42769	"ActionMenuPresenter"	4
43561	"ActionMenuView"	4
51324	"Add	3
58096	"Afghani"	6
58090	"Algerian	6
180	"All	6
30920	"Alpha"	22
13156	"An	4
57912	"Andorran	6
57802	"Angola	6
2584	"Any	6
58033	"Argentine	6
57763	"Armenian	6
58342	"Aruban	6
58003	"Australian	6
58400	"Austrian	6
58471	"Azerbaijanian	6
58203	"BAD"	6
63317	"BALAMT"	2
58186	"BAM"	6
30002	"BANK")	8
63296	"BANKACCTFROM"	2
63370	"BANKACCTTO"	2
63357	"BANKID"	2
63377	"BANKMSGSRSV1"	2
63356	"BANKTRANLIST"	2
58296	"BBD"	6
58417	"BDT"	6
58271	"BEF"	6
58292	"BGL"	6
57949	"BGN"	6
57848	"BHD"	6
58247	"BIF"	6
58298	"BMD"	6
57797	"BND"	6
58181	"BOB"	6
38987	"BOTTOM"),	4
57883	"BOV"	6
57792	"BRE"	6
58141	"BRL"	6
58226	"BRR"	6
57769	"BSD"	6
58469	"BTN"	6
58409	"BWP"	6
58284	"BYB"	6
26985	"BYDAY="	5
57954	"BYN"	3
58460	"BYR"	6
57925	"BZD"	6
9270	"BackupPrefFragment"	5
58165	"Bahamian	6
58336	"Bahraini	6
57991	"Baht"	6
58204	"Balboa"	6
25195	"BarChartActivity"	10
21891	"BarChartFragment"	13
58008	"Barbados	6
60217	"BaseReportFragment"	3
58019	"Belarussian	6
57931	"Belgian	6
58454	"Belize	6
58098	"Bermudian	6
55421	"Bitcoin"	2
58473	"Bolivar	6
57930	"Boliviano"	6
54603	"Book"	7
63430	"Book1"	4
63463	"BookDbHelper"	6
63723	"BookListFragment"	3
7423	"BookManagerFragment"	4
60377	"Books"	3
57957	"Bosnia	6
30837	"Bravo"	22
58343	"Brazilian	6
57974	"Brunei	6
54133	"BudgetListFragment"	2
57911	"Bulgarian	6
58387	"Burundi	6
58216	"CAD"	6
36068	"CAD":	4
56489	"CASE	12
57757	"CDF"	6
38937	"CENTER"),	4
38854	"CENTER_HORIZONTAL"),	4
39340	"CENTER_VERTICAL"),	4
57849	"CFA	6
58414	"CFP	6
58236	"CHE"	6
57826	"CHF"	6
36301	"CHF":	4
57947	"CHW"	6
58201	"CLF"	6
58059	"CLP"	6
57742	"CNY"	6
58161	"COP"	6
58482	"COU"	6
30127	"COUNT	8
57916	"CRC"	6
25006	"CREATE	37
25865	"CREDIT")	13
58154	"CUC"	6
57980	"CUP"	6
63315	"CURDEF"	2
57866	"CVE"	6
58134	"CYP"	6
58066	"CZK"	6
41736	"Can't	5
58027	"Canadian	6
53502	"Cannot	2
57747	"Cape	6
58100	"Cayman	6
58184	"Cedi"	6
33220	"Child	4
58087	"Chilean	6
58362	"Code	6
58079	"Colombian	6
8431	"Commodity	3
58508	"Comoro	6
58299	"Convertible	6
57994	"Cordoba	6
58384	"Costa	6
14181	"Could	8
41561	"Couldn't	8
33718	"Create	6
58385	"Croatian	6
58055	"Cuban	6
36511	"Currency	4
57827	"Cyprus	6
58164	"Czech	6
52335	"D"	3
26616	"DAILY"	5
26099	"DEBIT"	13
62621	"DELETE	2
58127	"DEM"	6
58199	"DJF"	6
57783	"DKK"	6
58114	"DOP"	6
63302	"DTASOF"	2
63363	"DTEND"	2
63285	"DTPOSTED"	2
63329	"DTSTART"	2
63312	"DTUSER"	2
57825	"DZD"	6
20086	"Daily"	5
58015	"Dalasi"	6
58085	"Danish	6
25166	"DatabaseAdapter"	9
23830	"DatabaseHelper"	6
14648	"Deleted	3
58169	"Denar"	6
58483	"Deutsche	6
58202	"Dhs"	6
60326	"Dining"	3
58000	"Djibouti	6
58369	"Dobra"	6
58249	"Dominican	6
37409	"Done"	4
57744	"Dong"	6
57383	"DropBox	6
18979	"Dummy	30
52249	"E"	3
57796	"ECS"	6
57854	"EEK"	6
58453	"EGP"	6
20423	"ENCODING:UTF-8	5
51375	"ENCODING:UTF-8\nOFXHEADER:100\nDATA:OFXSGML\nVERSION:211\nSECURITY:NONE\nCHARSET:UTF-8\nCOMPRESSION:NONE\nOLDFILEUID:NONE\nNEWFILEUID:NONE"	6
58173	"ERN"	6
57929	"ESP"	7
58097	"ETB"	6
36076	"EUR"	20
36467	"EUR":	4
58138	"East	6
57968	"Ecuador	6
23755	"Edited	32
57737	"Egyptian	6
58442	"El	6
11312	"Equity:Opening	10
8164	"Error	35
58214	"Ethiopian	6
28306	"Euro	16
57777	"Euro"	6
19793	"Every	12
52452	"Export	15
62522	"ExportAsyncTask"	3
32016	"ExportDialogFragment"	14
34640	"ExportFormFragment"	3
58523	"ExporterAsyncTask"	5
7322	"ExporterTask"	5
39298	"FILL")	4
39222	"FILL_HORIZONTAL"),	4
39290	"FILL_VERTICAL"),	4
57920	"FIM"	6
63297	"FITID"	2
58031	"FJD"	6
58300	"FKP"	6
18479	"FOREIGN	49
35123	"FR":	3
58149	"FRF"	7
58308	"Falkland	6
58429	"Fiji	6
58288	"Finnish	6
58239	"Forint"	6
57798	"Franc	6
57794	"French	6
33835	"Full	4
58457	"GBP"	6
36127	"GBP":	4
58068	"GEL"	6
58346	"GHC"	6
57952	"GHS"	6
57964	"GIP"	6
58128	"GMD"	6
57887	"GNF"	6
58347	"GRD"	6
57781	"GTQ"	6
57738	"GWP"	6
58150	"GYD"	6
57774	"Ghana	6
57788	"Gibraltar	6
36432	"Gifts	10
28737	"GncAndroidTestRunner"	2
52212	"GnuCash	5
393	"GnuCashAccountImporter"	19
170	"GoTo	5
58390	"Gold"	6
58450	"Gold-Franc"	6
57355	"Google	9
58245	"Gourde"	6
12405	"Grants	3
57749	"Greek	6
58273	"Guarani"	6
58198	"Guinea	6
57904	"Guinea-Bissau	6
58289	"Guyana	6
58042	"HKD"	6
57836	"HNL"	6
34728	"HOURLY"	2
57842	"HRK"	6
58158	"HTG"	6
58232	"HUF"	6
57983	"Hong	6
57956	"Hryvnia"	6
58405	"IDR"	6
58458	"IEP"	6
57791	"ILS"	6
58426	"INR"	6
51465	"INSERT_APP_KEY"	4
51532	"INSERT_APP_SECRET"	4
58270	"IQD"	6
57944	"IRR"	6
58437	"ISK"	6
57985	"ITL"	6
58148	"Iceland	6
3694	"If	6
23798	"Illegal	4
7010	"Imbalance-"	6
24923	"Incomplete	3
57908	"Indian	6
52888	"Invalid	13
58234	"Iranian	6
57946	"Iraqi	6
58053	"Irish	6
58327	"Italian	6
57752	"JMD"	6
58321	"JOD"	6
57741	"JPY"	6
36012	"JPY":	4
58353	"Jamaican	6
57926	"Jordanian	6
58084	"KES"	6
58470	"KGS"	6
57816	"KHR"	6
57803	"KMF"	6
58061	"KPW"	6
58248	"KRW"	6
58231	"KWD"	6
58163	"KYD"	6
57937	"KZT"	6
58449	"Kenyan	6
58312	"Kina"	6
57902	"Kip"	6
57882	"Kroon"	6
58433	"Kuwaiti	6
57813	"Kwacha	6
58379	"Kwacha"	6
58510	"Kwanza"	6
57922	"Kyat"	6
52085	"L"	3
58028	"LAK"	6
58237	"LBP"	6
63292	"LEDGERBAL"	2
38910	"LEFT"),	4
57999	"LKR"	6
56588	"LOWER(HEX(RANDOMBLOB(16)))	12
57959	"LRD"	6
57806	"LSL"	6
58443	"LTL"	6
57914	"LUF"	6
57997	"LVL"	6
58380	"LYD"	6
58314	"Lari"	6
58011	"Latvian	6
57965	"Lebanese	6
58040	"Lek"	6
58143	"Lempira"	6
57878	"Leone"	6
58348	"Liberian	6
58200	"Libyan	6
405	"License")	365
58009	"Lilangeni"	6
26727	"LineChartActivity"	11
21307	"LineChartFragment"	9
58345	"Lithuanian	6
57829	"Loti"	6
57978	"Luxembourg	6
52366	"M"	3
58447	"MAD"	6
24377	"MAX	5
58256	"MDL"	6
63291	"MEMO"	2
57884	"MGA"	6
58112	"MGF"	6
58182	"MKD"	6
57870	"MLF"	6
57917	"MMK"	6
21956	"MMM	31
418	"MMMM\nYYYY"	26
58007	"MNT"	6
35173	"MO":	3
27054	"MONTHLY"	3
58492	"MOP"	6
58410	"MRO"	6
58311	"MTL"	6
57787	"MUR"	6
58337	"MVR"	6
58357	"MWK"	6
58044	"MXN"	6
57867	"MXV"	6
57960	"MYR"	6
58185	"MZM"	6
58077	"MZN"	6
52145	"MainActivity"	3
57857	"Malagasy	6
57801	"Malaysian	6
57810	"Mali	6
58335	"Maltese	6
57880	"Manat"	6
58290	"Mauritius	6
43347	"MenuBuilder"	4
48480	"MenuInflater"	4
44459	"MenuItemImpl"	4
44907	"MenuPopupHelper"	4
57784	"Metical"	6
58261	"Mexican	6
35572	"MigrationHelper"	7
57939	"Moldovan	6
19547	"Monthly"	5
58485	"Moroccan	6
58156	"Mozambique	6
63064	"Multi-currency	4
59428	"Multicurrency	6
58222	"Mvdol"	6
52231	"N"	7
57961	"NAD"	6
63300	"NAME"	2
58120	"NGN"	6
58320	"NIC"	6
57869	"NIO"	6
58205	"NLG"	6
57989	"NOK"	6
24312	"NONE"	8
39289	"NONE"),	4
58763	"NOT	6
58065	"NPR"	6
57808	"NZD"	6
58095	"Naira"	6
58332	"Nakfa"	6
58404	"Namibia	6
58056	"Nepalese	6
58032	"Netherlands	8
29870	"New	13
57905	"Ngultrum"	6
58324	"Nicaraguan	6
60329	"Nice	3
28346	"No	16
58303	"North	6
58295	"Norwegian	6
1362	"Not	23
58050	"Nuevo	6
34709	"OFX	5
20396	"OFXHEADER=\"200\"	9
57845	"OMR"	6
23828	"ON	23
18362	"OR	14
41555	"ObjectAnimator@"	4
60294	"OfxExporter"	3
24704	"Other".	6
57950	"Ouguiya"	6
33068	"Overall")	5
32561	"Owncloud	7
58350	"PAB"	6
57739	"PEN"	6
58106	"PGK"	6
58307	"PHP"	6
57928	"PKR"	6
57839	"PLN"	6
52698	"PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE"	3
58318	"PTE"	6
58054	"PYG"	6
58190	"Pa'anga"	6
57835	"Pakistan	6
57800	"Palladium"	6
33131	"Parent	3
23347	"PassLockActivity"	7
29765	"PassLockScreenActivity"	6
62303	"PasscodeLockActivity"	3
352	"PasscodeLockScreenActivity"	8
59378	"Pasta"	4
58041	"Pataca"	6
53666	"Period	2
58392	"Peso	6
57948	"Philippine	6
13991	"Pizza"	19
58436	"Platinum"	6
57907	"Portuguese	6
58105	"Pound	6
7657	"PreferencesHelper"	7
29001	"Primer"	3
58227	"Pula"	6
34178	"Q"	9
32359	"Q%d	13
58444	"QAR"	6
50327	"QUERY"	5
58438	"Qatari	6
60272	"QifExporter"	3
58153	"Quetzal"	6
39140	"RIGHT"),	4
57846	"ROL"	6
58265	"RON"	6
56921	"ROOT"	3
30062	"ROOT")	8
58013	"RSD"	6
58354	"RUB"	6
58116	"RWF"	6
58075	"Rand"	6
28016	"RecurringTransactionsFragment"	4
33658	"Repeats	3
58129	"Rial	6
58277	"Riel"	6
58355	"Romanian	6
33142	"Root	3
57833	"Rufiyaa"	6
57984	"Rupiah"	6
57841	"Russian	6
58194	"Rwanda	6
52135	"S"	3
34965	"SA":	3
58188	"SAR"	6
57751	"SBD"	6
57995	"SCR"	6
57325	"SD	6
58412	"SDD"	6
57888	"SDG"	6
57933	"SDP"	6
58378	"SDR"	6
58020	"SEK"	6
4685	"SELECT	80
58319	"SGD"	6
58130	"SHP"	6
58344	"SIT"	6
58123	"SKK"	6
58195	"SLL"	6
58107	"SOS"	6
58317	"SRD"	6
58431	"SRG"	6
11587	"STATE_REPORT_TYPE"	6
58215	"STD"	6
63327	"STMTRS"	2
63375	"STMTTRN"	2
63345	"STMTTRNRS"	2
34986	"SU":	3
58341	"SVC"	6
57877	"SYP"	6
58505	"SZL"	6
58058	"Saint	6
57823	"Saudi	6
14143	"ScheduledActionDbAdapter"	9
54611	"ScheduledActionFragment"	3
60026	"ScheduledActionService"	3
54512	"ScheduledTrxnFragment"	7
5534	"SchedulerService"	8
48048	"ScrollingTabContainerView"	4
28479	"Search	17
48837	"SearchView"	5
58069	"Serbian	6
53916	"Set	2
25327	"SettingsActivity"	14
58218	"Seychelles	6
49198	"Share	4
38766	"SherlockFragmentActivity"	5
49116	"Show	4
55242	"Silver"	8
33179	"Simple	3
58375	"Singapore	6
58262	"Slovak	6
58209	"Slovenian	6
60449	"Software"),to	3
58403	"Solomon	6
57745	"Som"	6
57753	"Somali	6
57945	"Somoni"	6
58102	"Spanish	6
47970	"Spinner"	4
14380	"SplitsDbAdapter"	11
58280	"Sri	6
8762	"String","BUILD_TIME","\"${buildTime()	6
57910	"Sudanese	6
50311	"SuggestionsAdapter"	5
57743	"Surinam	6
58374	"Suriname	6
58193	"Swedish	6
58159	"Swiss	6
58323	"Syrian	6
52344	"T"	3
36458	"T1000")	9
34953	"TH":	3
57938	"THB"	6
58484	"TJR"	6
58229	"TJS"	6
58260	"TMM"	6
57862	"TMT"	6
58333	"TND"	6
28559	"TO	9
58287	"TOP"	6
39333	"TOP"),	4
30129	"TOTAL	8
63334	"TRNAMT"	2
63338	"TRNTYPE"	2
63333	"TRNUID"	2
58475	"TRY"	6
57834	"TTD"	6
35141	"TU":	3
58423	"TWD"	6
58140	"TZS"	6
58372	"Tajik	6
58334	"Taka"	6
57767	"Tala"	6
58421	"Tanzanian	6
28661	"Target"	16
57786	"Tenge"	6
34456	"Test	8
36655	"This	4
54590	"To	2
19864	"Transaction	3
60672	"TransactionListFragment"	4
13962	"Transactions	20
60677	"TransactionsActivity"	3
14302	"TransactionsDbAdapter"	4
18175	"TransactionsListFragment"	15
19534	"Transfer	18
58408	"Trinidad	6
36211	"Tube")	8
57804	"Tugrik"	6
57879	"Tunisian	6
58365	"Turkish	6
57785	"UAE	6
57890	"UAH"	6
58491	"UGX"	6
58172	"UIC-Franc"	6
18275	"UNIQUE	51
962	"UPDATE	11
58080	"US	6
12805	"US$"	12
2998	"USD"	70
36192	"USD":	4
58499	"USN"	6
57828	"USS"	6
18565	"UTF-8"	10
58187	"UYI"	6
58272	"UYU"	6
58306	"UZS"	6
58466	"Uganda	6
24025	"Unable	5
57782	"Unidad	6
57838	"Unidades	6
7538	"Unsupported	9
57759	"Uruguay	6
57871	"Uzbekistan	6
58467	"VEB"	6
58432	"VEF"	6
58071	"VND"	6
57963	"VUV"	6
42684	"ValueAnimator@"	4
58133	"Vatu"	6
57861	"Venezuela	6
24162	"View	7
35099	"WE":	3
26738	"WEEKLY"	3
59917	"WHERE"	3
58472	"WIR	6
58197	"WST"	6
38279	"Watson"	5
20017	"Weekly"	5
57348	"What's	2
57837	"Won"	6
58461	"XAF"	6
55373	"XAG"	8
58168	"XAU"	6
55443	"XBT"	2
57755	"XCD"	6
57772	"XDR"	6
58301	"XFO"	6
57927	"XFU"	6
58070	"XOF"	8
58006	"XPD"	6
58338	"XPF"	6
57819	"XPT"	6
57988	"XTS"	6
28453	"XXX"	16
26652	"YEARLY"	3
57996	"YER"	6
57780	"YUM"	6
32287	"YYYY"	10
20043	"Yearly"	5
57918	"Yemeni	6
57955	"Yen"	6
46187	"You	4
58264	"Yuan	6
58511	"Yugoslavian	6
58212	"ZAR"	6
58268	"ZMK"	6
58196	"ZMW"	6
57830	"ZWD"	6
58139	"ZWL"	6
58448	"ZWN"	6
58110	"ZWR"	6
57844	"Zambian	6
58512	"Zimbabwe	6
57975	"Zloty"	6
23539	"["	7
39024	"\"	4
21707	"\""	9
41423	"\n	8
6817	"\n"	52
6572	"\n")	11
14561	"\nYou	6
59178	"]"	3
41554	"]:	4
52310	"^"	7
911	"^#(?:[0-9a-fA-F]{3	13
3158	"_"	80
64352	"_ActionBarSherlockTrojanHorse"	1
33694	"_baK."	16
1671	"_bak	37
1227	"_bak")	42
53138	"_bak",	2
25139	"_bak",null,"recurrence_period	12
1539	"_bak."	37
19602	"_bak.account_uid	18
1936	"_bak.amount	25
33722	"_bak.double_account_uid	7
25049	"_bak.recurrence_period	6
19821	"_bak.recurrence_period"	7
24982	"_bak.type	11
35474	"_gnucash_all"	8
12509	"_gnucash_all.ofx"	10
35520	"_gnucash_export"	9
57220	"_gnucash_export.ofx"	2
60277	"_gnucash_export_"	3
26401	"_id"	5
60321	"a8b342435aceac7c3cac214f9385dd72"	3
55161	"account"	5
29621	"account1."	12
57690	"account2."	7
9425	"account_uid"	25
57563	"account_uid_index"	3
23549	"accounts"	7
18863	"accounts_list"	14
54706	"accounts_list_fragment"	3
56783	"acct1_currency	9
52150	"acct1_uid	6
53672	"act:commodity"	5
35742	"act:commodity-scu"	7
25764	"act:description"	11
28537	"act:id"	13
28423	"act:name"	15
28368	"act:parent"	19
25932	"act:slots"	11
28319	"act:type"	16
38175	"action	9
31874	"action_uid"	5
38812	"activity"	8
48610	"activity_choser_model_history.xml"	4
28367	"adb	3
53085	"adv_creation"	2
52994	"adv_notify"	2
30940	"alpha-team"	8
23401	"amount"	19
53114	"amount_denom"	2
53339	"amount_num"	2
13673	"and	5
28752	"android.permission.SET_ANIMATION_SCALE"	3
50880	"android.resource://com.android.alarmclock/2130837524",	5
44035	"android:menu:actionviewstates"	4
43586	"android:menu:expandedactionview"	4
43442	"android:menu:presenters"	4
36568	"apiKey",value:	4
36693	"apiSecret",value:	4
53086	"auto_create"	2
53264	"auto_notify"	2
36160	"b01950c0df0890b6543209d51c8e0b0f"	10
60325	"b687a487849470c25e0ff5aaad6a522b"	3
28577	"backup/"	4
36562	"bd4e83a9a4c35fbf1fbe8d9ccce9443eebb9d5835605f9d06767850e0f1e5b22")	4
48359	"be	5
53395	"bgt:description"	2
53604	"bgt:id"	2
53372	"bgt:name"	2
53690	"bgt:num-periods"	2
53357	"bgt:recurrence"	2
53521	"bgt:slots"	2
32354	"book"	10
35631	"book:id"	4
55293	"book_backup_file_key"	3
50860	"book_uid"	3
63440	"books"	4
8812	"boolean","CAN_REQUEST_RATING","false"	9
9190	"boolean","CAN_REQUEST_RATING","true"	7
4249	"boolean","USE_CRASHLYTICS","false"	10
24122	"boolean","USE_CRASHLYTICS","true"	11
30932	"bravo-team"	5
50762	"budget_amount_list"	10
52989	"budget_amounts"	2
53193	"budget_amounts_uid_index"	2
53160	"budget_uid"	7
53303	"budgets"	2
53186	"budgets_uid_index"	2
36101	"buyout")	6
4016	"cd:type"	6
32942	"child-account"	3
50507	"click")	5
51602	"close	5
8794	"cmd","/c","$adb","shell	4
28527	"cmdty:id"	19
28509	"cmdty:space"	15
5706	"color"	19
25333	"color_code"	11
27435	"color_picker_dialog"	6
27300	"colors"	3
27378	"columns"	3
50999	"com.crashlytics.android.Crashlytics"	4
50802	"com.jakewharton.test.SomeClass"	4
50646	"com.jakewharton.test.ui.SomeClass"	4
51014	"com.other.package.SomeClass"	4
60743	"commodities"	3
60727	"commodities_uid_index"	3
61296	"commodity_guid"	3
56635	"commodity_uid"	7
50985	"content://contacts/photos/253".	5
26432	"create	18
59461	"created_at"	3
19947	"credit-formula"	10
59256	"credit-numeric"	2
58948	"currencies"	2
61474	"currency"	3
20302	"currency_code"	17
62250	"currency_code_data_key"	3
61002	"currency_guid"	3
60881	"cusip"	3
54940	"date	3
61069	"date"	3
32105	"day"	5
19428	"debit-formula"	10
59199	"debit-numeric"	2
20095	"default_transfer_account"	15
27407	"default_transfer_account_uid"	10
23775	"description"	18
25188	"dhjh8ke9wf05948"	11
50741	"did	5
57573	"disable_passcode"	2
27352	"double_account_uid"	12
19288	"dummy-account"	30
57616	"enabled_passcode"	5
31714	"end_time"	9
50423	"enter"	5
59657	"event_uid"	3
61522	"exchange-code"	3
19523	"execution_count"	12
29842	"export_fragment"	7
27972	"export_ofx"	6
19876	"exported"	13
32848	"external	12
57140	"f",quantity))	4
36670	"fabric.properties",comment:	4
19702	"favorite"	22
56829	"filename.ext"	3
50561	"focus"	5
33307	"form_type"	8
32117	"fortnight"	4
36437	"fraction"	7
53628	"frame"	2
19677	"from-sched-xaction"	8
35308	"full_name"	6
60940	"fullname"	6
58621	"gc_test"	4
32279	"gdate"	10
42088	"get"	4
41314	"get",depending	4
42148	"get",for	4
41887	"get".	4
35639	"gnc-v2"	2
6006	"gnc:"	8
28554	"gnc:account"	19
35704	"gnc:book"	4
53591	"gnc:budget"	2
35782	"gnc:commodity"	6
35698	"gnc:count-data"	6
23619	"gnc:pricedb"	6
23378	"gnc:princedb"	5
33618	"gnc:recurrence"	8
33536	"gnc:schedxaction"	2
829	"gnc:template-transactions"	4
26019	"gnc:transaction"	9
55218	"gnucash_android_backup.gnca")	4
63471	"gnucash_books.db"	4
23341	"gnucash_db"	13
48426	"group"	4
32362	"guid"	10
9240	"h2t9fphj3nr4wkw"	10
33971	"hidden"	8
9765	"hide_account_balance"	2
48567	"historical-record"	4
48490	"historical-records"	4
37375	"home"	11
58398	"http://JRAF.org/static/maven/2"	9
29874	"http://dl.bintray.com/populov/maven"	10
20242	"http://www.gnucash.org/XML/act")	9
20980	"http://www.gnucash.org/XML/book")	9
20231	"http://www.gnucash.org/XML/cd")	9
20695	"http://www.gnucash.org/XML/cmdty")	9
20256	"http://www.gnucash.org/XML/gnc")	9
20573	"http://www.gnucash.org/XML/price")	9
20995	"http://www.gnucash.org/XML/slot")	9
20920	"http://www.gnucash.org/XML/split")	9
20471	"http://www.gnucash.org/XML/trn")	9
20584	"http://www.gnucash.org/XML/ts")	11
58662	"https://demo.owncloud.org"	4
30731	"https://jitpack.io"	14
30961	"https://oss.sonatype.org/content/repositories/snapshots"	3
29862	"https://repo.commonsware.com.s3.amazonaws.com"	12
47529	"inverse"	4
46231	"is	4
63446	"is_active"	6
20014	"is_enabled"	12
18065	"is_exported"	32
59116	"is_hidden"	1
18333	"is_placeholder"	14
19755	"is_template"	17
61609	"isocode"	3
48516	"item"	4
19565	"key_account"	7
21417	"last_export_time"	16
13333	"last_open_tab"	3
31924	"last_run"	9
46247	"list")	4
61588	"local-symbol"	3
61627	"local_symbol"	3
57850	"m"	6
20793	"mDisplayMode"	4
35429	"memo"	7
48208	"menu"	4
60706	"mnemonic"	6
50739	"model"	4
59458	"modified_at"	7
32322	"month"	4
54804	"moved"	4
54725	"my-euro_account"	5
4770	"n")	7
25417	"name"	20
61139	"namespace"	6
55040	"new_account_dialog"	7
30872	"new_transaction"	17
48839	"nm"	5
48443	"no	4
18157	"normal"	5
19780	"notes"	17
51005	"now"	11
25625	"null":	12
19509	"num_occurrences"	10
53184	"num_periods"	2
53621	"numeric"	4
20662	"on	4
51623	"open	5
3080	"org.gnucash.android"	42
9809	"org.gnucash.android",	6
8565	"org.gnucash.android",shadows	29
27679	"org.gnucash.android.action.VEIW_RECURRING"	4
54599	"org.gnucash.android.extra.DISPLAY_MODE"	6
20723	"org.gnucash.android.extra.TAB_INDEX"	9
20116	"org.gnucash.android.extra.account_uid"	8
18485	"org.gnucash.android.extra.amount"	11
908	"org.gnucash.android.extra.currency_code"	11
20270	"org.gnucash.android.extra.double_account_uid"	6
466	"org.gnucash.android.extra.parent_uid"	8
11817	"org.gnucash.android.extra.transaction.splits"	5
18374	"org.gnucash.android.extra.transaction_type"	7
7772	"org.gnucash.android.fileprovider"	5
8803	"org.gnucash.android.intent.action.MANAGE_BOOKS"	4
55043	"org.gnucash.android.permission.CREATE_ACCOUNT"	4
35975	"org.gnucash.android.permission.RECORD_TRANSACTION"</p>	3
35075	"org.gnucash.android.test.ui.GnucashAndroidTestRunner"	4
9031	"org.gnucash.android.test.ui.util.GnucashAndroidTestRunner"	5
59885	"org.gnucash.extra.currency_code"	4
63348	"origin_acccount_id"	7
57577	"origin_acccount_uid"	4
51826	"origin_scheduled_action_uid"	3
50752	"other"	4
32830	"ownCloud	11
33079	"parent-account"	3
27844	"parent_account_id"	16
9727	"parent_account_uid"	18
57612	"passcode"	9
23611	"passcode_class_caller"	5
53157	"period	2
19669	"period"	13
53111	"period",	2
53081	"period_num"	2
5751	"placeholder"	17
41090	"play-after"	4
23537	"price"	8
23465	"price:commodity"	8
23731	"price:currency"	7
23644	"price:id"	8
23806	"price:source"	7
23455	"price:time"	7
23799	"price:type"	7
23373	"price:value"	7
61367	"prices"	3
53032	"prices_uid_index"	5
46567	"progress")	4
61775	"quantity_denom"	3
61754	"quantity_num"	3
61221	"quote_flag"	3
53093	"reconcile_date"	2
53126	"reconcile_state"	2
33669	"recurrence:mult"	8
33682	"recurrence:period_type"	4
4139	"recurrence:start"	6
52979	"recurrence_byday"	2
53195	"recurrence_mult"	2
19578	"recurrence_period	7
18420	"recurrence_period"	18
53162	"recurrence_period_end"	2
52974	"recurrence_period_start"	2
53239	"recurrence_period_type"	2
23944	"recurrence_picker"	14
51408	"recurrence_picker")	4
53166	"recurrence_uid"	2
53117	"recurrence_uid_index"	2
53314	"recurrences"	2
33353	"removed_split_guids"	14
49764	"return"	5
55451	"robolectric".equals(Build.FINGERPRINT)	5
33202	"root-account"	3
63415	"root_account_guid"	6
63423	"root_template_guid"	6
19657	"sched-xaction"	8
26736	"scheduled_action_uid"	13
19575	"scheduled_action_uid_index"	12
31847	"scheduled_actions"	5
33514	"scheduled_event_uid_index"	4
59705	"scheduled_events"	3
19724	"schedx_action_uid"	6
46108	"scrolling")	4
18973	"selected_account_id"	14
29354	"selected_account_name"	6
27334	"selected_color"	3
18642	"selected_items"	7
29296	"selected_transaction_id"	8
64204	"selected_transaction_uid"	2
36314	"selected_transactions"	8
41575	"set"	7
40247	"setSelectedNavigationIndex	4
48964	"share	4
50504	"share_history.xml"	4
39282	"sherlock:Panels"	5
8987	"should_display_balance"	4
33085	"simple-account"	3
27210	"size"	3
62335	"skip_passcode_screen"	4
26027	"slot"	11
28376	"slot:key"	9
25797	"slot:value"	16
37744	"small"	4
61687	"smallest-fraction"	3
61261	"source"	3
8207	"split","trn","ts","sx","bgt","recurrence"	5
53459	"split","trn","ts","sx","recurrence"	9
32405	"split:account"	9
505	"split:id"	13
1681	"split:memo"	13
20167	"split:quantity"	18
53656	"split:reconciled-state"	5
35774	"split:reconciled_state"	5
53504	"split:recondiled-date"	2
23902	"split:slots"	11
32374	"split:value"	9
51284	"split_account_uid"	3
33282	"split_list"	7
53123	"split_uid_index"	7
31669	"splits"	8
23874	"splits_editor"	11
31477	"start_time"	8
23352	"starting_amount"	11
32386	"string"	8
23225	"string","app_minor_version","${versionMinor	16
9884	"string","app_name","GnuCash	22
9869	"string","app_name","GnuCash"	23
4096	"string","app_name","GnuCash-devel"	21
5293	"string","app_version_name","${versionName	42
9950	"string","dropbox_app_key","dhjh8ke9wf05948"	10
8753	"string","dropbox_app_key",RELEASE_DROPBOX_APP_KEY	22
9259	"string","dropbox_app_secret","h2t9fphj3nr4wkw"	14
9079	"string","dropbox_app_secret",RELEASE_DROPBOX_APP_SECRET	22
9625	"string","manifest_dropbox_app_key","db-${RELEASE_DROPBOX_APP_KEY	9
9165	"string","manifest_dropbox_app_key","db-dhjh8ke9wf05948"	13
58608	"string","manifest_dropbox_app_key","db-xxx-xxxx"	4
50217	"suggestions	5
33768	"sx:advanceCreateDays"	2
33695	"sx:advanceRemindDays"	2
33712	"sx:autoCreate"	2
33680	"sx:autoCreateNotify"	2
33599	"sx:enabled"	2
33524	"sx:end"	2
33823	"sx:id"	2
33672	"sx:instanceCount"	2
33538	"sx:last"	2
33631	"sx:name"	2
33783	"sx:num-occur"	6
33749	"sx:rem-occur"	6
33575	"sx:schedule"	8
33519	"sx:start"	2
33553	"sx:tag"	8
53622	"sx:templ-acct"	3
55044	"sx:templ-action"	5
19673	"tag"	14
53310	"template"	3
53190	"template_act_uid"	2
41634	"ter	4
58648	"test"	4
33344	"test-split-uid	5
33169	"test_gnucash_db.sqlite"	13
51599	"text/plain"	10
51660	"text/xml"	6
48496	"time"	4
20087	"timestamp"	26
27332	"title_id"	3
28565	"to-be-deleted"	9
59117	"today","yesterday"	4
59121	"tomorrow"	4
19684	"total_frequency"	5
58435	"trans_acct.trans_acct_balance	7
30100	"trans_acct_balance	8
24041	"trans_acct_t_uid	9
24077	"trans_acct_t_uid=?",	7
30052	"trans_extra_info	5
29574	"trans_extra_info.trans_acct_balance	18
20110	"trans_extra_info.trans_currency_count	21
29523	"trans_extra_info.trans_split_count	4
59805	"trans_split_acct	4
21789	"trans_split_count	12
52297	"trans_time	10
35445	"transaction_uid"	9
19984	"transaction_uid_index"	10
23457	"transactions"	9
13469	"transactions-account"	20
18668	"transactions_list"	11
13046	"transfer_account"	19
45439	"transitioning"	4
6154	"trn:currency"	4
4100	"trn:date-entered"	6
5558	"trn:date-posted"	6
4538	"trn:description"	6
5897	"trn:id"	11
20271	"trn:recurrence_period"	15
1998	"trn:slots"	6
110	"trn:split"	8
2179	"trn:splits"	10
4617	"ts:date"	6
5252	"type"	30
23793	"uid"	10
18110	"uncategorized"	6
50966	"unexpected	5
49944	"up	5
37508	"up"	8
63413	"uri"	4
52508	"user:xfer-dialog"	8
61326	"value_denom"	6
60694	"value_num"	6
54200	"version"	4
1596	"vnd.android.cursor.item/vnd."	8
2217	"vnd.android.cursor.item/vnd.org.gnucash.android.account"	12
25066	"vnd.android.cursor.item/vnd.org.gnucash.android.transaction"	6
32120	"week"	4
48513	"weight"	4
24158	"where	6
40014	"with	8
37314	"withText"	4
5717	"y"	7
32419	"year"	4
32150	"yyyy-MM-dd	6
1399	#	15
45069	#379	5
58034	#393185	6
29192	#448	5
52661	#467.	2
48895	#557	5
8125	#562.	3
46250	#572.	5
34780	#654	3
34861	#654)</li>	3
58741	#AccountsDbAdapter(SQLiteDatabase,TransactionsDbAdapter)	3
24863	#BACKUP_FOLDER_PATH	17
14435	#BASE_FOLDER_PATH	3
46266	#CREATOR	12
32810	#DECIMAL_PLACES	5
36223	#DEFAULT_DECIMAL_PLACES	17
48298	#DEFAULT_HISTORY_FILE_NAME	4
49573	#DEFAULT_HISTORY_MAX_LENGTH	4
36060	#DEFAULT_ROUNDING_MODE	19
50187	#DEFAULT_SHARE_HISTORY_FILE_NAME	4
38795	#DISPLAY_HOME_AS_UP	4
38679	#DISPLAY_SHOW_CUSTOM	4
38729	#DISPLAY_SHOW_HOME	4
38131	#DISPLAY_SHOW_TITLE	4
37960	#DISPLAY_USE_LOGO	4
28407	#EXPORT_FOLDER_PATH	5
47770	#FLAG_APPEND_TO_GROUP	4
53480	#FLAG_CLEARED	2
53576	#FLAG_NOT_RECONCILED	2
48466	#FLAG_PERFORM_NO_CLOSE	4
53552	#FLAG_RECONCILED	2
41966	#INFINITE	4
39080	#INVALID_POSITION	8
46245	#INVALID_ROW_ID	4
48191	#MEASURED_HEIGHT_STATE_SHIFT	4
47744	#MEASURED_STATE_MASK	4
38189	#NAVIGATION_MODE_LIST	4
38647	#NAVIGATION_MODE_STANDARD	4
38192	#NAVIGATION_MODE_TABS	4
47601	#NONE	4
55175	#OFX_DATE_FORMATTER	4
49930	#REFINE_ALL	5
50574	#REFINE_BY_ENTRY	5
50599	#REFINE_NONE	5
42100	#RESTART	4
42291	#REVERSE	4
6633	#SD_CARD	15
7188	#SHARING	15
48532	#SHOW_AS_ACTION_ALWAYS	4
48808	#SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW	4
48231	#SHOW_AS_ACTION_IF_ROOM	4
48643	#SHOW_AS_ACTION_NEVER	4
48681	#SHOW_AS_ACTION_WITH_TEXT	4
47303	#SHOW_DIVIDER_BEGINNING	4
46753	#SHOW_DIVIDER_END	4
46556	#SHOW_DIVIDER_MIDDLE	4
46717	#SHOW_DIVIDER_NONE	4
46206	#SYNC_FIRST_POSITION	4
46303	#SYNC_SELECTED_POSITION	4
53353	#TAG_GNC_RECURRENCE	2
1549	#aarrggbb	13
47864	#add(int,int,int,CharSequence)	4
47841	#addIntentOptions	4
47651	#addSubMenu(int,int,int,CharSequence)	4
37797	#addTab(Tab)	4
35004	#bindListeners(KeyboardView)	7
35401	#buildAccountInstance(android.database.Cursor)	5
54709	#buildExportFilename(ExportFormat)	4
60241	#buildExportFilename(ExportFormat,String)	3
61510	#buildModelInstance(android.database.Cursor)	3
60519	#changeCursor(Cursor)	3
46212	#checkFocus()	4
48328	#collapseActionView()	4
35646	#computeBalance(String,java.util.List)	6
62652	#deleteAllRecords()	3
57941	#deleteRecord(String)	6
20298	#deleteRecord(long)	8
30702	#destructiveDeleteAccount(long)	3
32198	#displayReport()	6
40162	#end()	4
62970	#equals(Object)	4
48309	#expandActionView()	4
45801	#findSyncPosition()	4
12704	#formatTemplateSplitAmount(BigDecimal)	5
20660	#generateExport(java.io.Writer)	4
32383	#generateReport()	3
59597	#generateUID()	1
30766	#getAccountCurrencyCode(String)	5
35525	#getAccountID(String)	4
35282	#getAccountType(String)	5
49018	#getActivity(int)	4
58776	#getAttribute(String,String)	3
60254	#getBackupFolderPath()	5
60307	#getBackupFolderPath(String)	3
35769	#getBalance(String)	2
40798	#getChildAnimations()	4
39135	#getContentDescription()	4
23200	#getContentView()	3
10540	#getCurrencyCode()	9
24430	#getCurrencyCode(String)	6
12872	#getCurrencyCode(long)	9
36509	#getDefaultCurrencyCode()	16
47048	#getDividerPadding()	4
60532	#getFilter()	3
60658	#getFilterQueryProvider()	3
62005	#getFormattedAmount(Money,String,TransactionType)	3
55053	#getFormattedCurrentTime(long)	3
2883	#getFullyQualifiedAccountName(String)	19
30711	#getID(String)	4
30734	#getID(String,String)	2
46689	#getIndeterminateDrawable()	4
48317	#getIntent	4
59926	#getLastRunTime()	3
32337	#getLayoutResource()	3
47020	#getMax()	4
48070	#getMeasuredHeightAndState()	4
48054	#getMeasuredWidthAndState()	4
36264	#getMnemonic()	4
38379	#getNavigationMode()	4
63366	#getOfxFormattedTime(long)	3
4034	#getOrCreateImbalanceAccountUID(Commodity)	5
11144	#getOrCreateImbalanceAccountUID(java.util.Currency)	7
24488	#getParentAccountUID(String)	11
38842	#getPosition()	4
47110	#getProgress()	4
23234	#getProgressBar()	3
47069	#getProgressDrawable()	4
61788	#getQuantity()	3
61487	#getRecord(String)	3
32204	#getReportType()	3
47138	#getSecondaryProgress()	4
36311	#getSmallestFraction()	7
24383	#getSplitsForTransaction(String)	6
40691	#getStartDelay()	4
47773	#getTag()	4
31027	#getTimestampOfEarliestTransaction(AccountType)	5
31413	#getTimestampOfEarliestTransaction(AccountType,String)	2
31308	#getTimestampOfLatestTransaction(AccountType)	5
31160	#getTimestampOfLatestTransaction(AccountType,String)	2
32382	#getTitle()	3
24384	#getTransactionUID(long)	6
13329	#getTypeForBalance(AccountType,boolean)	8
26032	#getUID()	10
61830	#getValue()	3
43938	#getVisibleItems()	4
48118	#hasSubMenu()	8
21016	#importXmlFileFromIntent(Activity,Intent)	6
23072	#importXmlFileFromIntent(Activity,Intent,TaskDelegate)	8
19631	#inSubAcccount()	6
47320	#incrementProgressBy	4
47293	#incrementProgressBy(int)	4
47545	#incrementSecondaryProgressBy(int)	4
44628	#initForMenu(Context,Menu)	4
44900	#initialize(MenuBuilder)	4
44792	#initialize(MenuItemImpl,int)	4
48641	#isCheckable	4
48504	#isChecked	4
46971	#isIndeterminate()	4
28296	#isPlaceholderAccount(String)	4
41015	#isRunning()	5
6733	#isSameDay(long,long)	8
40739	#isStarted()	4
53343	#loadInBackground()	3
51312	#mAccountsSpinner	5
18724	#mActionMode	14
57498	#mBudgetAmounts	3
21622	#mDateRangeDenomination	5
210	#mDateRangeInterval	5
49275	#mHistoryMaxSize	4
52755	#mKeyboardView	15
61667	#mReplaceStatement	5
39154	#mReserveOverflow	4
27998	#mSelectedDefaultAccounts	4
62840	#mSplitsList	4
55628	#moveExportToUri()	2
14468	#moveFile(File,File)	6
55076	#ofxDateFormatter	2
32339	#onActivityCreated(Bundle)	3
20336	#onActivityResult(int,int,Intent)	6
60534	#onBindViewHolder(android.support.v7.widget.RecyclerView.ViewHolder,int)	3
60605	#onBindViewHolderCursor(android.support.v7.widget.RecyclerView.ViewHolder,	3
60592	#onBindViewHolderCursor(android.support.v7.widget.RecyclerView.ViewHolder,android.database.Cursor)	3
23183	#onCreate(Bundle)	12
50535	#onCreateActionView()	4
60448	#onCreateViewHolder(android.view.ViewGroup,int)	3
48185	#onPerformDefaultAction()	4
48178	#onPrepareSubMenu(SubMenu)	4
44338	#onRestoreInstanceState(Parcelable)	4
32075	#onStart()	3
35598	#parse(android.content.Context,java.io.InputStream)	6
32876	#parse(java.io.InputStream)	5
12505	#parseTemplateSplitAmount(String)	5
47799	#performShortcut	4
48051	#performShortcut(int,KeyEvent,int)	4
48211	#persistHistoricalData()	7
59857	#populateBaseModelAttributes(ContentValues,BaseModel)	5
52990	#populateBaseModelAttributes(Cursor,BaseModel)	2
49499	#readHistoricalData")	4
48503	#readHistoricalData()	7
62630	#reassignDescendantAccounts(String,String)	2
54067	#refresh()	5
63544	#registerContentObserver(Cursor)	2
52896	#registerEditText(int)	15
43447	#removeMenuPresenter(MenuPresenter)	4
37969	#requestWindowFeature(int)	4
35649	#resetUID()	7
1308	#rgb	18
1992	#rrggbb	28
2414	#rrggbb.	20
2856	#rrrgggbbb,but	20
60435	#runQueryOnBackgroundThread(CharSequence)	3
3081	#saveNewTransaction()	9
48692	#setActionProvider(ActionProvider)	4
64340	#setActionProvider(ActionProvider)-	1
48477	#setActionView(View)	4
48585	#setActionView(int)	4
49169	#setActivitySorter(ActivitySorter)	4
48386	#setCheckable	4
44274	#setCheckable(boolean)	4
44882	#setChecked	8
1287	#setColor(String)	7
422	#setColorCode(String)	4
39082	#setContentDescription(CharSequence)	4
39074	#setContentDescription(int)	4
38046	#setContentView(android.view.View,android.view.ViewGroup.LayoutParams)	4
38351	#setCustomView(View)	11
49581	#setDataModel?")	4
37811	#setDisplayOptions(int)	4
38477	#setDisplayOptions(int,int)	4
38745	#setDisplayShowHomeEnabled(boolean)	4
37831	#setDisplayUseLogoEnabled(boolean)	4
47226	#setDividerDrawable(Drawable)	4
46903	#setDividerPadding(int)	4
48474	#setEnabled(boolean)	4
60553	#setFilterQueryProvider(android.widget.FilterQueryProvider)	3
46213	#setFocusable(boolean)	4
38510	#setHomeButtonEnabled(boolean)	4
38840	#setIcon(Drawable)	4
49624	#setIconified	5
49662	#setIconifiedByDefault(boolean)	7
47000	#setIndeterminate(boolean)	4
47126	#setIndeterminateDrawable(android.graphics.drawable.Drawable)	4
48731	#setIntent	4
48872	#setIntent(Intent)	4
7611	#setLastExportTime(Timestamp,String)	4
46848	#setMax(int)	4
48662	#setOnActionExpandListener(OnActionExpandListener)	4
47391	#setProgress	4
38455	#setProgress(int)	8
47474	#setProgressDrawable(android.graphics.drawable.Drawable)	4
41305	#setPropertyName(String)	4
31552	#setQuantity(Money)	11
8726	#setRecurrence(Recurrence)	6
42176	#setRepeatCount(int)	4
49358	#setSearchableInfo	5
50083	#setSearchableInfo(SearchableInfo)	5
47366	#setSecondaryProgress(int)	4
39218	#setSelectedNavigationItem(int)	4
48438	#setShowAsAction(int)	4
47338	#setShowDividers(int)	4
38381	#setSplitBackgroundDrawable(Drawable)	4
38554	#setStackedBackgroundDrawable(Drawable)	4
38029	#setSubtitle(CharSequence)	8
38008	#setSubtitle(int)	8
47589	#setTag(Object)	4
38946	#setText(CharSequence)	4
38566	#setTitle(CharSequence)	12
38207	#setTitle(int)	8
48802	#setTitleCondensed(CharSequence)	4
59603	#setUID(String)	1
1257	#setUpDateRangeGroups()	7
23114	#setUpDrawer()	9
61789	#setValue(Money)	3
44775	#setVisible(boolean)	4
45133	#setWindowTitle(CharSequence)	4
30533	#showTransactionEditFragment(Bundle)	5
30548	#showTransactionFormFragment(Bundle)	7
40141	#start()	12
43734	#startDispatchingItemsChanged()	4
54870	#startXmlFileChooser(Activity)	2
62897	#testOpenTransactionEditShouldNotModifyTransaction()	4
63758	#toCsv()	1
36226	#toPlainString()	8
1511	$	13
1310	$"	13
28690	$")	4
29088	$")))	5
64270	$1.99</string>	2
62993	$10	4
36851	$8.99",actualValue)	3
8980	$android.defaultConfig.applicationId	16
28504	$android.defaultConfig.packageName	3
8721	$android.productFlavors.development.applicationId	13
28354	$android.productFlavors.production.applicationId	2
34353	$serial	9
12893	${applicationId	3
25176	${buildTime()	7
25163	${gitSha()	7
948	%	62
667	%%)"	32
17977	%%</string>	10
6821	%)")	15
2181	%.2f	32
11199	%1$d	186
10844	%1$d</string>	47
3141	%1$s	183
49607	%1$s"	4
14753	%1$s"</string>	103
17829	%1$s-	24
15160	%1$s-Datei</string>	20
14827	%1$s-data</string>	15
15090	%1$s-eksportering</string>	18
2172	%1$s</string>	204
10842	%2$s</string>	44
3670	%d	202
3423	%d",endTime	30
22463	%d.	13
56150	%d:e	2
1805	%s	45
8256	%s"	28
14334	%s",	9
63880	%s",copyCount,src.getPath(),dst.getPath()))	2
900	%s",date.toString("w"),date.toString("yyyy"))	7
19993	%s",getPeriodType().getMultiplier(),getPeriodType().name().toLowerCase(),	5
607	%s",quarter,date.toString("yyyy"))	6
63827	%s",srcDir.getPath(),dstDir.getPath())	3
1566	&	216
3547	&#191	7
29754	&#192	7
15319	&#193	10
20148	&#195	11
15705	&#205	8
20677	&#213	11
12609	&#218	5
15954	&#224	43
19583	&#227	34
28067	&#232	19
4002	&#233	57
24053	&#234	15
20078	&#245	28
2935	&#250	39
12451	&#8230	78
56	&&	376
26648	&=	47
3157	&amp	219
11167	&gt	49
10460	&lt	65
6404	'	8
521	'"	152
29221	'").append(prefix).append("%'")	16
57572	'"+	5
24237	'%"	9
26900	'%").append(mFilter).append("%'")	5
23261	''	22
36476	'',"	11
9016	')	16
32947	'-')	6
54817	'-'){	9
56633	'.'	9
39924	'.')	4
44157	'1'	4
57459	'23.0.2'	5
9967	'23.0.3'	4
9384	'24.0.3'	4
55151	'25.0.0'	2
19202	'532ee7592d4efae7fe2418891d598e59'	4
44868	':	4
64250	':app'	1
56490	'CASH'	12
33612	'CREDIT'	15
18980	'DEBIT'	50
57673	'LICENSE.txt'	2
57728	'META-INF/DEPENDENCIES'	2
57736	'META-INF/LICENSE'	2
57697	'META-INF/LICENSE.txt'	2
57678	'META-INF/NOTICE'	2
57681	'META-INF/NOTICE.txt'	2
44770	'Menu+a').	4
44812	'Menu+enter').	4
47955	'More'	4
25286	'ROOT'	6
10350	'UTC'")	83
51685	'Up'	5
12069	'WHERE'	19
23742	'Whats	2
43623	'\b'	8
44608	'\b':	4
48355	'\n'	9
44513	'\n':	4
52106	'a'	13
52381	'a',if	14
44689	'action	4
48429	'actionProviderClass'."	4
8868	'android-apt'	25
64178	'apps'	1
52258	'b'	15
53409	'c'	2
23766	'com.actionbarsherlock:actionbarsherlock:4.4.0@aar',	13
9071	'com.android.application'	25
35169	'com.android.support',module:	5
9362	'com.android.support',module:'support-annotations'	26
60155	'com.android.support.test.espresso:espresso-contrib:'	6
56207	'com.android.support.test.espresso:espresso-contrib:2.2')	8
32529	'com.android.support.test.espresso:espresso-core:'	10
56376	'com.android.support.test.espresso:espresso-core:2.1',	8
32493	'com.android.support.test.espresso:espresso-intents:'	2
8728	'com.android.support.test:rules:'	12
28404	'com.android.support.test:rules:0.2'	6
56273	'com.android.support.test:rules:0.2',	6
60188	'com.android.support.test:rules:0.3',	5
9139	'com.android.support.test:runner:'	12
28362	'com.android.support.test:runner:0.2'	6
32557	'com.android.support:appcompat-v7:'	16
58060	'com.android.support:appcompat-v7:22.1.0',	5
60373	'com.android.support:appcompat-v7:22.2.0',	8
8811	'com.android.support:cardview-v7:'	17
56642	'com.android.support:cardview-v7:22.2.0',	10
32886	'com.android.support:design:'	16
60402	'com.android.support:design:22.2.0',	6
9422	'com.android.support:multidex:1.0.1'	4
9972	'com.android.support:preference-v7:'	14
9188	'com.android.support:recyclerview-v7:'	23
56641	'com.android.support:recyclerview-v7:22.2.0'	10
56624	'com.android.support:recyclerview-v7:22.2.0',	5
60125	'com.android.support:support-annotations:'	5
57664	'com.android.support:support-annotations:22.1.1'	5
56418	'com.android.support:support-annotations:22.2.0'	6
55919	'com.android.support:support-annotations:22.2.0',	6
29749	'com.android.tools.build:gradle:1.0.0'	2
21162	'com.android.tools.build:gradle:1.0.1'	3
20436	'com.android.tools.build:gradle:1.1.0'	4
30906	'com.android.tools.build:gradle:1.2.2'	3
60221	'com.android.tools.build:gradle:1.2.3'	4
52537	'com.android.tools.build:gradle:1.3.0'	8
32762	'com.android.tools.build:gradle:1.5.0'	8
13793	'com.android.tools.build:gradle:2.0.0'	3
23205	'com.android.tools.build:gradle:2.0.0-alpha1'	6
23256	'com.android.tools.build:gradle:2.0.0-alpha2'	10
13898	'com.android.tools.build:gradle:2.1.0'	4
9492	'com.android.tools.build:gradle:2.1.2'	4
9556	'com.android.tools.build:gradle:2.2.1'	4
9868	'com.android.tools.build:gradle:2.2.2'	4
55418	'com.android.tools.build:gradle:2.3.1'	2
52996	'com.code-troopers.betterpickers:library:2.0.3',	10
52242	'com.code-troopers.betterpickers:library:2.1.2',	6
35131	'com.code-troopers.betterpickers:library:2.2.1',	6
13417	'com.code-troopers.betterpickers:library:2.5.3',	3
13500	'com.code-troopers.betterpickers:library:2.5.4',	4
9042	'com.code-troopers.betterpickers:library:2.5.5',	4
9930	'com.code-troopers.betterpickers:library:3.0.1',	5
55429	'com.code-troopers.betterpickers:library:3.1.0',	2
29914	'com.commonsware.cwac:merge:1.1.+')	1
23872	'com.commonsware.cwac:merge:1.1.+',	19
640	'com.crashlytics.android:crashlytics:1.+'	15
798	'com.crashlytics.android:crashlytics:1.+',	13
30850	'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'	3
60116	'com.crashlytics.tools.gradle:crashlytics-gradle:1.16.0'	4
29848	'com.doomonafireball.betterpickers:library:1.5.2')	3
23423	'com.doomonafireball.betterpickers:library:1.5.2',	15
24009	'com.doomonafireball.betterpickers:library:1.6.0',	25
9300	'com.dropbox.core:dropbox-core-sdk:2.1.2'	3
10053	'com.dropbox.core:dropbox-core-sdk:2.1.2',	4
9996	'com.facebook.stetho:stetho:1.3.1'	6
9392	'com.facebook.stetho:stetho:1.4.1'	3
9702	'com.facebook.stetho:stetho:1.4.1',	4
55323	'com.facebook.stetho:stetho:1.4.2'	2
51422	'com.github.PhilJay:MPAndroidChart:v2.0.8',	6
216	'com.github.PhilJay:MPAndroidChart:v2.1.0',	25
9327	'com.github.PhilJay:MPAndroidChart:v2.1.3',	32
63902	'com.github.PhilJay:MPAndroidChart:v2.1.6',	5
62026	'com.github.techfreak:wizardpager:1.0.0'	6
52285	'com.github.techfreak:wizardpager:1.0.0',	14
9815	'com.github.techfreak:wizardpager:1.0.3',	12
51487	'com.google.android.gms:play-services-drive:7.0.0'	2
2103	'com.google.android.gms:play-services-drive:7.0.0',	45
8808	'com.google.android.gms:play-services-drive:8.3.0',	8
8991	'com.google.android.gms:play-services-drive:9.6.1',	4
8965	'com.jakewharton:butterknife-compiler:8.4.0'	4
55230	'com.jakewharton:butterknife-compiler:8.5.1'	2
1209	'com.jakewharton:butterknife:7.0.1'	9
9590	'com.jakewharton:butterknife:7.0.1',	24
9688	'com.jakewharton:butterknife:8.4.0'	6
55221	'com.jakewharton:butterknife:8.5.1'	2
56564	'com.kobakei:ratethisapp:0.0.3'	6
30192	'com.kobakei:ratethisapp:0.0.3',	24
34894	'com.kobakei:ratethisapp:0.0.4',	6
8741	'com.neenbedankt.gradle.plugins:android-apt:1.8'	6
8967	'com.squareup.spoon:spoon-client:1.6.4'	2
56487	'com.squareup:android-times-square:1.6.4@aar'	6
35182	'com.squareup:android-times-square:1.6.4@aar',	19
9716	'com.squareup:android-times-square:1.6.5@aar',	7
29799	'com.squareup:fest-android:1.0.6')	10
9056	'com.stanfy.spoon:spoon-gradle-plugin:1.2.2'	5
62274	'com.uservoice:uservoice-android-sdk:+'	4
9963	'com.viewpagerindicator:library:2.4.1@aar',	52
62962	'commodity'	4
9201	'commons-logging'	7
2361	'crashlytics'	27
62926	'currency'	4
41127	'done'	4
53045	'dummy-string'	2
35732	'exported'	3
41174	'foo'.	4
25306	'git	4
37386	'group'	4
38235	'home'	4
30928	'http://download.crashlytics.com/maven'	12
8946	'httpclient'	11
10006	'httpcore'	5
60141	'https://maven.fabric.io/public'	3
9399	'installDevelopmentDebug')	19
9639	'installProductionDebug'){	15
9288	'io.fabric'	89
23107	'io.fabric.tools:gradle:1.+'	15
32621	'io.fabric.tools:gradle:1.21.0'	9
10082	'io.fabric.tools:gradle:1.21.2'	12
55241	'io.fabric.tools:gradle:1.21.6'	2
9580	'io.github.kobakei:ratethisapp:1.0.3',	4
8898	'io.github.kobakei:ratethisapp:1.1.0',	4
55423	'io.github.kobakei:ratethisapp:1.1.3',	2
48518	'itemActionViewLayout'."	4
51390	'joda-time:joda-time:2.7'	7
1770	'joda-time:joda-time:2.7',	62
8979	'joda-time:joda-time:2.9.4',	5
9547	'junit:junit:4.12',	26
63149	'libs'	3
53221	'libs',include:	27
63725	'mCursor'	2
53183	'n'	10
53285	'n',"	6
56647	'net.objecthunter:exp4j:0.4.5'	15
8798	'net.objecthunter:exp4j:0.4.5',	15
10043	'net.objecthunter:exp4j:0.4.7',	6
9414	'org.apache.jackrabbit:jackrabbit-webdav:2.11.1'	11
9637	'org.apache.jackrabbit:jackrabbit-webdav:2.13.3'	3
9861	'org.apache.jackrabbit:jackrabbit-webdav:2.13.3',	5
9319	'org.assertj:assertj-core:1.7.1'	24
24116	'org.gnucash.android.devel'	16
24466	'org.gnucash.android.devel.test'	5
9380	'org.gnucash.android.test'	26
25250	'org.gnucash.android.test.devel'	13
57564	'org.jraf:android-switch-backport:1.4.0@aar',	23
9545	'org.jraf:android-switch-backport:2.0.1@aar',	27
30207	'org.ocpsoft.prettytime:prettytime:3.2.7.Final',	26
62590	'org.quanqi:mpandroidchart:1.7.4',//TODO:	5
9686	'org.robolectric:shadows-multidex:3.0'	2
44337	'overflow	4
35238	'recyclerview-v7'	10
52938	'resid'	13
40896	'roots'	4
8886	'spoon'	2
34892	'support-v4'	5
43486	'true'.	4
38004	'up'	4
49761	'working'	5
53469	'y'	2
52584	'yyyy-MM-dd	2
1926	(	183
38958	(!(activity	7
42559	(!(convertView	4
35094	(!(diff	5
60131	(!(focusCurrent	3
32047	(!(getActivity()	6
30756	(!(o	2
24855	(!(this	6
46119	(!(v	4
3987	(!BooksDbAdapter.getInstance().getActiveBookUID().equals(bookUID))	8
55306	(!BuildConfig.DEBUG	2
30853	(!BuildConfig.DEBUG)	6
9640	(!DropboxHelper.hasToken())	2
61976	(!GnuCashApplication.isDoubleEntryEnabled()	3
1835	(!GnuCashApplication.isDoubleEntryEnabled()){	7
54176	(!GnuCashApplication.isDoubleEntryEnabled(true))	3
54454	(!GnuCashApplication.isDoubleEntryEnabled(true)){	4
43498	(!IS_FROYO	4
2137	(!Pattern.matches(ACCOUNT_COLOR_HEX_REGEX,color))	3
106	(!Pattern.matches(Account.COLOR_HEX_REGEX,color))	17
1261	(!Pattern.matches(COLOR_HEX_REGEX,colorCode))	8
3744	(!Pattern.matches(colorHexRegex,colorCode))	6
48836	(!TAG_HISTORICAL_RECORD.equals(nodeName))	4
48916	(!TAG_HISTORICAL_RECORDS.equals(parser.getName()))	4
42351	(!TextUtils.isEmpty(cdesc))	8
49119	(!TextUtils.isEmpty(historyFileName)	4
49491	(!TextUtils.isEmpty(mHistoryFileName))	4
59893	(!TextUtils.isEmpty(mSearchView.getQuery()))	3
45585	(!TextUtils.isEmpty(mTitle)	4
49480	(!TextUtils.isEmpty(queryHint))	5
39666	(!a.hasValue(R.styleable.SherlockTheme_windowActionBar))	4
27035	(!account.hasUnexportedTransactions())	5
100	(!accountToColorMap.containsKey(account.getUID()))	19
57719	(!accountUID.equals(currentAccountUID))	3
34590	(!acct_type.equals("ROOT")	5
48794	(!actionViewSpecified)	4
49218	(!activity.equals(other.activity))	4
7207	(!allTransactions	11
33926	(!amountEntered)	10
42070	(!animations.isEmpty()	4
28318	(!backupFolder.exists())	8
19417	(!bookUID.equals(booksDbAdapter.getActiveBookUID())){	8
29330	(!cachePath.endsWith("/"))	11
62680	(!calculateEarliestAndLatestTimestamps(accountTypeList))	6
39147	(!callbackCreateOptionsMenu(mMenu))	4
39026	(!callbackPrepareOptionsMenu(mMenu))	4
53968	(!canSave())	2
59211	(!canSave()){	3
53929	(!canSave){	5
40526	(!canceled)	4
43349	(!checkable	4
459	(!color.equals("Not	8
27320	(!colorCode.startsWith("#")	4
12878	(!commodityUIDdb.equals(commodityUID))	4
43566	(!curItem.isCheckable())	4
43758	(!curItem.isExclusiveCheckable())	4
54959	(!currency.getCurrencyCode().equals("XXX"))	5
56882	(!currencyCode.equals(currentCurrencyCode))	5
56969	(!currentAccountUID.equals(""))	7
1107	(!currentAccountUID.equals(rootAccountUID))	8
57245	(!currentTransactionUID.equals(""))	9
27029	(!cursor.moveToFirst())	5
26951	(!cursor.moveToFirst()){	5
51581	(!db.getPath().equals(GnuCashApplication.getActiveDb().getPath()))	3
14090	(!db.isOpen()	21
57391	(!dirResult.isSuccess())	8
28238	(!driveContentsResult.getStatus().isSuccess())	9
28234	(!driveFileResult.getStatus().isSuccess())	8
63820	(!dstDir.exists()	3
63842	(!dstDir.mkdirs()){	3
46300	(!empty	4
45392	(!enable)	4
39952	(!enabled	4
52384	(!eventProcessed)	8
51468	(!events.isEmpty()){	4
6579	(!exportAllTransactions	18
10075	(!exportResult)	9
6562	(!exportResult){	13
4253	(!exportTemplates)	18
24799	(!exported)	6
60266	(!file.exists())	5
43404	(!filterLeftoverView(parent,childIndex))	4
46062	(!focusable)	4
46140	(!found)	5
27009	(!generateNewUID){	8
38798	(!getSherlock().dispatchCloseOptionsMenu())	4
39096	(!getSherlock().dispatchOpenOptionsMenu())	4
47883	(!handled)	4
19308	(!hasDebitNormalBalance)	21
39408	(!hasFeature(Window.FEATURE_NO_TITLE))	4
56648	(!hasFocus)	9
11400	(!imbalance.isAmountZero()){	31
37842	(!implementationClass.isAnnotationPresent(Implementation.class))	4
19843	(!inSubAcccount())	10
39067	(!initializePanelMenu()	4
43378	(!invoked)	4
56708	(!isChecked	7
47742	(!isCollapsed())	4
52847	(!isCustomKeyboardVisible())	13
27055	(!isDetached())	5
49034	(!isFocusable())	5
49257	(!isIconified())	5
43972	(!isKeyCodeMapped	4
46098	(!isLongClickable())	4
21884	(!isPlaceHolderAccount())	10
19445	(!isPlaceholderAccount){	6
38908	(!isReservingOverflow())	4
49357	(!isShown())	4
38022	(!isTvDpi	4
42528	(!item.isActionButton())	4
41978	(!kf.hasValue())	4
26422	(!lastCurrency.getCurrencyCode().equals(mCurrencyCode))	8
33639	(!lastTrxUID.equals(""))	8
32426	(!lastTrxUID.equals("")){	7
33764	(!lastTrxUID.equals(curTrxUID))	11
56940	(!lastTrxUID.equals(curTrxUID)){	3
32472	(!legend.isLegendCustom())	15
43665	(!lp.expandable)	4
43958	(!lp.expanded)	4
43372	(!lp.preventEdgeOffset)	4
59368	(!mAccountUID.equals(split.mAccountUID))	6
62000	(!mAccountsDbAdapter.getCurrencyCode(transferAcctUID).equals(currency.getCurrencyCode())){	7
45260	(!mActionBarView.isCollapsed())	4
49376	(!mActivites.isEmpty())	4
26191	(!mAmount.equals(other.mAmount))	7
52917	(!mAmountEditText.getCalculatorKeyboard().isCustomKeyboardVisible())	11
52936	(!mAmountEditText.isInputModified()){	11
35892	(!mAmountInputFormatter.isInputModified()){	8
6738	(!mAmountManuallyEdited){	12
46155	(!mBlockLayoutRequests)	4
57467	(!mBudgetAmounts.isEmpty())	3
34938	(!mCalculatorKeyboard.isCustomKeyboardVisible())	14
49296	(!mCanReadHistoricalData	4
18469	(!mChartDataPresent)	17
36442	(!mCommodity.equals(addend.mCommodity))	6
36025	(!mCommodity.equals(another.mCommodity))	6
36123	(!mCommodity.equals(divisor.mCommodity))	6
36139	(!mCommodity.equals(money.mCommodity))	6
36114	(!mCommodity.equals(other.mCommodity))	4
36131	(!mCommodity.equals(subtrahend.mCommodity))	6
36175	(!mCurrency.equals(addend.mCurrency))	9
26557	(!mCurrency.equals(another.mCurrency))	11
26607	(!mCurrency.equals(divisor.mCurrency))	11
26456	(!mCurrency.equals(money.mCurrency))	12
26317	(!mCurrency.equals(other.mCurrency))	7
36209	(!mCurrency.equals(subtrahend.mCurrency))	9
60653	(!mCursor.moveToPosition(i))	3
47563	(!mDataChanged)	4
60580	(!mDataValid)	3
9271	(!mDbxAccountManager.hasLinkedAccount())	8
25387	(!mDbxAccountManager.hasLinkedAccount()){	7
51448	(!mDbxAcctMgr.hasLinkedAccount()){	4
59647	(!mDrawerLayout.isDrawerOpen(mDrawerList))	4
24761	(!mDrawerLayout.isDrawerOpen(mNavigationView))	6
47296	(!mDropDownVerticalOffsetSet)	4
51849	(!mEditMode)	9
43391	(!mFormatItems)	4
39491	(!mFragmentTransaction.isEmpty())	4
39694	(!mHasEmbeddedTabs)	4
49661	(!mHistoricalRecordsChanged)	4
44913	(!mHomeLayout.isEnabled())	4
49701	(!mIconifiedByDefault)	5
10291	(!mIgnoreTemplateTransaction)	20
59252	(!mIgnoreTemplateTransactions)	3
47500	(!mInDrawing)	4
3916	(!mInTemplates)	15
47523	(!mIndeterminate)	4
42315	(!mInitialized	4
41635	(!mInitialized)	8
44256	(!mIsActionItemsStale)	4
39183	(!mIsDelegate	4
39238	(!mIsDelegate)	4
39964	(!mIsDestroyed	4
21604	(!mIsPlaceholderAccount)	7
44489	(!mIsVisibleItemsStale)	4
42710	(!mMaxItemsSet)	4
64367	(!mMenuKeyIsLongPress)	1
47091	(!mModal	4
46696	(!mModal)	4
31849	(!mMultiCurrency)	9
47191	(!mNoInvalidate)	4
57351	(!mOC_sync)	4
47580	(!mPopup.isShowing())	4
43639	(!mPreventDispatchingItemsChanged)	4
59373	(!mQuantity.equals(split.mQuantity))	6
49859	(!mQueryTextView.isEmpty()	5
49280	(!mReadShareHistoryCalled)	4
39580	(!mReserveOverflowSet)	8
37810	(!mSherlock.dispatchCloseOptionsMenu())	4
37939	(!mSherlock.dispatchOpenOptionsMenu())	4
49115	(!mShowDefaultActivity	4
54754	(!mSolo.isToggleButtonChecked(0)){	6
45330	(!mSplitActionBar)	4
43184	(!mStartedDelay)	4
42679	(!mStrictWidthLimit	4
40877	(!mTerminated)	4
59453	(!mTransactionUID.equals(split.mTransactionUID))	6
44220	(!mTreeObserver.isAlive())	4
25794	(!mUseDoubleEntry	4
62912	(!mUseDoubleEntry)	4
18255	(!mUseDoubleEntry){	32
45764	(!mUserTitle)	4
59401	(!mValue.equals(split.mValue))	6
42570	(!mWidthLimitSet)	4
42846	(!menuParent.checkLayoutParams(lp))	4
48549	(!menuState.hasAddedItem())	4
46423	(!next	4
40979	(!node.nodeDependencies.contains(dependency.node))	4
41036	(!nodeDependencies.contains(dependency.node))	4
44616	(!nonActionItem.isVisible())	4
49341	(!popupWindow.isShowing())	4
38769	(!preparePanel())	4
36577	(!propertiesFile.exists())	4
48637	(!reachedEndOfMenu)	4
27827	(!recentTxCursor.isLast())	8
35023	(!recurrence.getByDays().isEmpty())	3
24413	(!result)	9
28146	(!result.getStatus().isSuccess())	14
57397	(!result.isSuccess())	8
41929	(!sAnimations.get().contains(this)	4
19868	(!scheduledActions.isEmpty()){	5
704	(!sharedPreferences.getBoolean(UxArgument.ENABLED_PASSCODE,false))	6
50634	(!shouldExecuteScheduledBackup(scheduledAction))	5
44038	(!showIcon	4
43487	(!singleItem)	4
29763	(!skipUUID.contains(account.getUID()))	9
26663	(!skippedUUID.contains(account.getUID()))	4
40793	(!sortedNodes.get(i).done)	4
44968	(!split)	4
11157	(!split.getAccountUID().equals(accountUID))	15
35674	(!split.getAccountUID().equals(accountUID)){	2
90	(!split.getAccountUID().equals(mAccountUID))	14
34549	(!split.getAccountUID().equals(mAccountUID)){	11
35901	(!split.getAccountUID().equals(mAccountsDbAdapter.getAccountUID(mAccountId))){	4
61799	(!split.getAmount().getCurrency().getCurrencyCode().equals(mCurrencyCode))	4
10775	(!split.getQuantity().getCommodity().equals(mCommodity))	3
10890	(!split.getQuantity().getCommodity().equals(mTransaction.getCommodity())){	2
11646	(!split.getQuantity().getCommodity().getCurrencyCode().equals(mCurrencyCode))	4
11275	(!split.getQuantity().getCurrency().equals(mTransaction.getCurrency())){	5
11933	(!split.getQuantity().getCurrency().getCurrencyCode().equals(mCurrencyCode))	6
5852	(!split.getValue().getCurrency().getCurrencyCode().equals(mCurrencyCode))	15
24931	(!splitList.isEmpty())	15
54847	(!splitSum.isAmountZero())	10
14434	(!src.delete())	3
14490	(!srcDir.exists()	6
63824	(!srcDir.exists()){	3
63843	(!srcDir.isDirectory()){	3
3104	(!stack.isEmpty())	12
25221	(!start.isAfter(end))	8
2363	(!startDate.isAfter(endDate))	15
40172	(!subMenu.hasVisibleItems())	8
59469	(!super.equals(o))	4
40313	(!thisPackage.equals(activityPackage))	8
7297	(!transaction.getAccountUID().equals(mUID))	8
26625	(!transaction.isExported())	4
56851	(!transactionUID.equals(currentTransactionUID))	7
58906	(!trxnAdapter.getAccountCurrencyCode(dstAccountId).equals(trxnAdapter.getAccountCurrencyCode(mOriginAccountUID)))	6
31001	(!trxnAdapter.getAccountCurrencyCode(dstAccountId).equals(trxnAdapter.getAccountCurrencyCode(mOriginAccountUID))){	5
58819	(!trxnAdapter.getAccountCurrencyCode(dstAccountUID).equals(trxnAdapter.getAccountCurrencyCode(mOriginAccountUID)))	3
64230	(!trxnAdapter.getCurrencyCode(dstAccountId).equals(trxnAdapter.getCurrencyCode(mOriginAccountId))){	3
51136	(!trxnAdapter.getCurrencyCode(dstAccountId).equals(trxnAdapter.getCurrencyCode(mOriginAccountUID))){	5
44703	(!tryShow())	4
28830	(!typeToggleButton.isChecked()){	3
11225	(!useDoubleEntry	5
62014	(!userInteraction	3
61987	(!userInteraction)	3
38873	(!wActionBar.isOverflowMenuShowing()	4
2084	("	140
51163	("".equals(fullName))	4
35543	("GnuCash	4
39825	("activity".equals(name))	8
39653	("application".equals(name))	8
45032	("logo".equals(attrName))	4
45022	("logo".equals(xml.getAttributeName(i)))	4
39783	("name".equals(attrName))	8
39383	("uiOptions".equals(attrName))	4
40238	("uiOptions".equals(xml.getAttributeName(i)))	4
641	(%.2f	32
25435	(%s)	3
18660	('"	30
35021	('com.android.support.test.espresso:espresso-contrib:'	5
56409	('com.android.support.test.espresso:espresso-core:2.1')	8
56056	('com.android.support.test:runner:0.2',	6
60153	('com.android.support.test:runner:0.3',	5
9747	('com.android.support:support-annotations:'	13
29843	('com.android.support:support-v4:21.0.+',	5
29919	('com.jayway.android.robotium:robotium-solo:5.2.1',	5
9169	('com.uservoice:uservoice-android-sdk:1.2.+')	8
9009	('com.uservoice:uservoice-android-sdk:1.2.5')	4
55078	((	4
46718	((!mOnlyIndeterminate	4
38013	(((OnOptionsItemSelectedListener)f).onOptionsItemSelected(item))	4
19908	(((endTime	16
43779	(((metaState	4
13493	((AccountsActivity)	19
30592	((AccountsActivity)getActivity()).importAccounts()	6
26704	((AccountsActivity)mContext).getCurrentAccountListFragment()	4
24163	((AccountsDbAdapter)	27
24404	((AccountsDbAdapter)mDatabaseAdapter)	9
26693	((AccountsDbAdapter)mDatabaseAdapter).fetchAccounts(queryBuffer.toString())	5
5617	((AccountsListFragment)	48
52320	((AccountsListFragment)f).refreshList()	7
19970	((AccountsListFragment)fragment).refresh()	9
19880	((AccountsListFragment)fragment).refreshList()	8
19414	((AccountsListFragment)getTargetFragment()).refresh()	8
19560	((AccountsListFragment)getTargetFragment()).refreshList()	20
32220	((ActionBarActivity)	6
43831	((ActionMenuChildView)	4
43325	((ActionMenuItemView)	4
43007	((ActionMenuView)	4
44889	((ActionProviderWrapper)nativeProvider).unwrap()	4
28088	((Activity)	9
31821	((Activity)mContext).getWindow().getCurrentFocus()	8
56720	((Activity)mContext).getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN)	4
25533	((Activity)mContext).runOnUiThread(new	5
55563	((AlertDialog)dialog).findViewById(R.id.input_book_title)	2
47522	((Animatable)	4
40772	((AnimatorSet)animation).setTarget(target)	4
868	((AppCompatActivity)	53
33339	((AppCompatActivity)getActivity()).getSupportActionBar()	18
21766	((AppCompatActivity)getActivity()).getSupportActionBar().setTitle("Balance	9
53951	((AppCompatActivity)getActivity()).getSupportActionBar().setTitle("Budgets")	2
60142	((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_balance_sheet_report)	6
60104	((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_bar_chart)	6
59491	((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_line_chart)	9
7836	((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_pie_chart)	12
1535	((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(R.string.title_reports)	10
50648	((AppCompatButton)	3
249	((AppCompatPreferenceActivity)	11
30090	((BarEntry)	6
46858	((BitmapDrawable)	4
1881	((Boolean)	23
29299	((CheckBox)	4
565	((CheckBoxPreference)	11
9083	((CheckBoxPreference)pref).setChecked(accessToken	2
51734	((CheckBoxPreference)pref).setChecked(appFolderId	6
8891	((CheckBoxPreference)pref).setChecked(mDbxAccountManager.hasLinkedAccount())	10
32706	((CheckBoxPreference)pref).setChecked(mPrefs.getBoolean(getString(R.string.owncloud_sync),false))	10
45958	((CollapsibleActionView)	4
44300	((CollapsibleActionViewWrapper)actionView).unwrap()	5
36909	((Cursor)spinner.getSelectedItem()).getString(DatabaseAdapter.COLUMN_NAME)	3
36975	((Cursor)spinner.getSelectedItem()).getString(DatabaseAdapter.COLUMN_UID)	3
12482	((DecimalFormat)currencyFormat).getDecimalFormatSymbols()	9
36278	((DecimalFormat)currencyFormat).setDecimalFormatSymbols(decimalFormatSymbols)	6
51234	((DecimalFormat)formatter).setParseBigDecimal(true)	6
52791	((EditText)	8
29116	((EditText)mSolo.getView(R.id.input_transaction_name)).getText().toString()	7
51862	((EditText)view).getCompoundDrawables()[DRAWABLE_RIGHT].getBounds().width()	10
41205	((Float)value).floatValue()	4
40400	((FloatKeyframe)	4
993	((FormActivity)	16
55046	((FormActivity)mContext).setOnBackListener(mCalculatorKeyboard)	12
59372	((FragmentActivity)	3
39414	((FragmentActivity)mActivity).getSupportFragmentManager().beginTransaction()	5
7108	((FragmentActivity)mContext).getSupportFragmentManager()	10
40157	((FrameLayout)mContentParent).setForeground(null)	4
19643	((GnuCashApplication)	6
32793	((GnuCashApplication)getApplication()).loadBook(bookUID)	8
19874	((GnuCashApplication)mContext.getApplication()).loadBook(bookUID)	8
34763	((InputMethodManager)	21
40548	((IntKeyframe)	4
41622	((Integer)value).intValue()	4
41379	((Keyframe)values[0]).getType()	4
46629	((LayerDrawable)	4
44066	((LayoutParams)	4
4883	((LinearLayout)	33
44517	((ListMenuItemView)	4
57136	((ListPreference)	11
45062	((MarginLayoutParams)	4
43509	((MenuBuilder)item.getSubMenu()).findItemsWithShortcutForKey(items,keyCode,event)	4
43233	((MenuView.ItemView)	8
40692	((Number)mEvaluator.evaluate(fraction,firstValue,lastValue)).floatValue()	4
40922	((Number)mEvaluator.evaluate(fraction,firstValue,lastValue)).intValue()	4
40708	((Number)mEvaluator.evaluate(intervalFraction,prevValue,nextValue)).	4
40694	((Number)mEvaluator.evaluate(intervalFraction,prevValue,nextValue)).intValue()	4
41069	((Number)mKeyframes.get(mNumKeyframes	4
40683	((ObjectAnimator)animation).setTarget(target)	4
39644	((OnActionModeFinishedListener)mActivity).onActionModeFinished(mActionMode)	6
38989	((OnActionModeStartedListener)mActivity).onActionModeStarted(mActionMode)	9
38122	((OnCreateOptionsMenuListener)f).onCreateOptionsMenu(menu,inflater)	4
38371	((OnPrepareOptionsMenuListener)f).onPrepareOptionsMenu(menu)	4
31049	((QifExporter)mExporter).generateExport(writer)	5
33207	((RadioButton)	5
33106	((RadioButton)mTransactionOptionsView.findViewById(R.id.radio_move))	6
13268	((Refreshable)	7
63678	((Refreshable)fragment).refresh()	3
13343	((Refreshable)getTargetFragment()).refresh()	10
447	((ReportOptionsListener)	10
32141	((ReportsActivity)	6
1514	((ReportsActivity)getActivity()).getAccountType()	13
60103	((ReportsActivity)getActivity()).setAppBarColor(R.color.account_blue)	6
60181	((ReportsActivity)getActivity()).setAppBarColor(R.color.account_green)	6
1059	((ReportsActivity)getActivity()).setAppBarColor(R.color.account_purple)	13
60198	((ReportsActivity)getActivity()).setAppBarColor(R.color.account_red)	6
1402	((ReportsActivity)getActivity()).setAppBarColor(R.color.theme_primary)	10
32232	((ReportsActivity)getActivity()).setAppBarColor(getTitleColor())	6
3396	((ResourceCursorAdapter)	23
57014	((SettingsActivity)getActivity()).setImbalanceAccountsHidden((Boolean)newValue)	4
51412	((SettingsActivity)getActivity()).toggleDropboxPreference(pref)	7
51718	((SettingsActivity)getActivity()).toggleGoogleDrivePreference(pref)	8
32887	((SettingsActivity)getActivity()).toggleOwnCloudPreference(pref)	6
32782	((SettingsActivity)getActivity()).toggleOwncloudPreference(pref)	7
64378	((SherlockFragmentActivity)mActivity).getSupportFragmentManager().beginTransaction()	1
5428	((SherlockPreferenceActivity)	20
1174	((Spinner)	25
43418	((SubMenuBuilder)	4
49868	((SuggestionsAdapter)	7
47564	((TabAdapter)	4
47979	((TabView)	4
6727	((TextView)	48
55493	((TextView)dialog.findViewById(R.id.input_book_title)).setText(bookName)	2
54664	((TextView)getListView().getEmptyView()).setText(R.string.label_no_recurring_transactions)	6
54520	((TextView)getListView().getEmptyView()).setText(R.string.label_no_scheduled_exports_to_display)	6
62285	((TextView)getListView().getEmptyView()).setTextColor(getResources().getColor(R.color.theme_accent))	3
29468	((TextView)getView().findViewById(R.id.input_transaction_amount)).getText().toString()	3
29350	((TextView)getView().findViewById(R.id.input_transaction_name)).getText().toString()	3
33692	((TextView)mAccountOptionsView.findViewById(R.id.description)).setText("This	3
33181	((TextView)mAccountOptionsView.findViewById(R.id.description)).setText(R.string.label_delete_account_subaccounts_description)	5
33246	((TextView)mAccountOptionsView.findViewById(R.id.title_content)).setText(R.string.section_header_subaccounts)	6
33691	((TextView)mTransactionOptionsView.findViewById(R.id.description)).setText("This	3
33035	((TextView)mTransactionOptionsView.findViewById(R.id.description)).setText(R.string.label_delete_account_transactions_description)	5
32964	((TextView)mTransactionOptionsView.findViewById(R.id.title_content)).setText(R.string.section_header_transactions)	6
21424	((TextView)view.findViewById(R.id.account_name)).setText(name)	6
31235	((TextView)view.findViewById(R.id.primary_text)).setTextColor(getResources().getColor(R.color.theme_primary))	2
54044	((TextView)view.findViewById(R.id.primary_text)).setTextColor(getResources().getColor(android.R.color.darker_gray))	8
33486	((TransactionFormFragment)	11
406	((TransactionsActivity)	41
12267	((TransactionsActivity)getActivity()).getCurrentAccountID()	23
18759	((TransactionsActivity)getActivity()).getCurrentAccountUID()	19
58730	((TransactionsActivity)getActivity()).updateNavigationSelection()	6
20103	((TransactionsActivity)getActivity()).updateSubAccountsView()	7
3364	((TransactionsActivity)getSherlockActivity()).getCurrentAccountID()	9
19808	((TransactionsActivity)getSherlockActivity()).updateNavigationSelection()	12
34370	((TransactionsActivity)mSolo.getAllOpenedActivities().get(1))	4
34449	((TransactionsActivity)mSolo.getCurrentActivity())	5
18575	((TransactionsDbAdapter)	17
14019	((TransactionsListFragment)f).refresh()	5
19955	((TransactionsListFragment)f).refreshList()	8
64194	((UIDParent	4
34315	((View)	9
42872	((ViewGroup)	16
44241	((View_HasStateListenerSupport)anchor).addOnAttachStateChangeListener(this)	4
44768	((View_HasStateListenerSupport)mAnchorView).removeOnAttachStateChangeListener(this)	4
44755	((View_HasStateListenerSupport)v).removeOnAttachStateChangeListener(this)	4
38909	((aActionBar	4
59706	((accountUID	8
49885	((actionKey	5
49903	((actionKey.getSuggestActionMsg()	5
48890	((activity	4
45777	((activityLogo	4
40071	((activityUiOptions	4
46341	((adapter	4
55233	((amountBigd	2
50445	((c	5
47918	((child.getMeasuredHeight()>>View.MEASURED_HEIGHT_STATE_SHIFT)	4
44606	((collapsed	4
46116	((color	5
28079	((count	11
32596	((date.getMonthOfYear()	16
47503	((disallowPartialChildPosition	4
1721	((event.getAction()	5
44607	((expanded	4
39357	((features	6
42802	((flags	8
45714	((flagsChanged	4
39856	((getFeatures()	4
13236	((getIntent().getFlags()	13
47810	((getMeasuredHeight()	4
45127	((getRight()	4
47863	((gravity	4
43624	((index	4
50093	((inputType	5
33166	((int)denominator)	7
62487	((isChecked	3
38645	((isTvDpi	4
44683	((itemView	4
4917	((lastRun	5
25615	((lastRuntime	2
55730	((length	2
2415	((line	21
45035	((mActionBarView.getDisplayOptions()	4
64385	((mActive	1
26356	((mAmount	3
26510	((mCurrency	3
45536	((mDisplayOptions	7
47520	((mDropDownList.getDividerHeight()	4
8738	((mExecutionCount-1)*getPeriod())	10
44801	((mFlags	4
45399	((mIsStacked	4
45838	((mSelectedPosition	4
44336	((mShowAsAction	4
46959	((mShowDividers	4
2238	((mSubAccountCount	3
3385	((mTransactionCount	3
43679	((minCellsAt	4
18811	((nameChanged	5
63890	((notes	3
43474	((numRemoved++	4
44965	((options	4
45348	((paddedBottom	4
925	((parsedAmount	3
55332	((read	3
18320	((rowId	39
27318	((rowNumber	6
42572	((sX	4
42571	((sY	4
43393	((shortcutChar	4
43838	((smallestItemsAt	4
22793	()	18
17934	().	23
15209	()</string>	33
32662	(*)	9
4572	(,)	4
17859	(,,)</string>	33
27950	(,,)\n	6
55622	(.	2
52806	(.)	4
52959	(.)</p>	4
24998	(.gnucash	6
29968	(/	10
58585	(0.123000)	2
40137	(1	14
57889	(1000	6
55197	(1000*60*60))	4
48793	(12-key)	4
25743	(2nd	4
36170	(3-letter)	4
59355	(5)	6
60953	(543061,564450),please	3
59366	(6)	6
59387	(7)	6
52053	(8)	12
52049	(9)	10
57812	(=DEM)	6
47263	(>	4
14512	(?	11
38363	(API	4
51630	(Absolute)	6
47053	(AccessibilityManager)context.getSystemService(Context.ACCESSIBILITY_SERVICE)	4
314	(Account	110
4550	(AccountType	25
129	(AccountType)	26
18852	(AccountsListFragment)	25
23146	(AccountsListFragment)(mFragmentPageReferenceMap.get(index))	11
45511	(ActionBar.DISPLAY_HOME_AS_UP	4
45303	(ActionBar.LayoutParams)	4
39534	(ActionBarContainer)	4
39465	(ActionBarContainer)mDecor.findViewById(R.id.abs__split_action_bar)	4
40146	(ActionBarContextView)	4
40211	(ActionBarContextView)mDecor.findViewById(R.id.abs__action_context_bar)	4
38999	(ActionBarContextView)stub.inflate()	4
40294	(ActionBarView)	8
39501	(ActionBarView)mDecor.findViewById(R.id.abs__action_bar)	4
43084	(ActionMenuItemView)	7
42646	(ActionMenuView)	8
42829	(ActionMenuView.MIN_CELL_SIZE	4
49417	(ActivityChooserViewAdapter)	4
44327	(ActivityNotFoundException	17
49158	(ActivityResolveInfo)	4
18367	(AlarmManager)	33
46626	(AnimationDrawable)	4
41782	(AnimationUtils.currentAnimationTimeMillis()	4
40606	(Animator	4
41026	(Animator)	4
40665	(AnimatorListener	8
42589	(AnimatorProxy.NEEDS_PROXY)	5
40592	(AnimatorSet)	4
12348	(ArithmeticException	19
40638	(ArrayList<AnimatorListener>)	10
57452	(ArrayList<BudgetAmount>)	3
40461	(ArrayList<Dependency>)	4
42000	(ArrayList<ValueAnimator>)	4
48417	(As	4
27629	(AutoCompleteTextView)	17
12335	(BANKACCTFROM)	19
52021	(Bar/Kake/linjediagrammer)	4
6305	(Bar/Pie/line	26
28666	(BarChart)	5
32040	(BarEntry	7
30083	(BarEntry)	11
25564	(Barra/Tarta/linea)	6
30807	(BaseModel)	11
60204	(BaseReportFragment)	3
32453	(BaseReportFragment)fragment	6
53676	(BigDecimal	2
29	(BigDecimal)	30
55236	(Book	6
48198	(Boolean)	7
52184	(Budget	4
52057	(BudgetAmount	11
53822	(BudgetAmountViewHolder)	6
55302	(BufferedOutputStream	3
674	(Build.VERSION.SDK_INT	103
28594	(BuildConfig.CAN_REQUEST_RATING)	3
50702	(BuildConfig.DEBUG	9
34876	(BuildConfig.DEBUG)	7
55167	(BuildConfig.FLAVOR.equals("development")){	8
57529	(BuildConfig.USE_CRASHLYTICS)	9
2546	(Button)	75
27574	(C)	82
18392	(CAB)	28
32240	(COLORS.length	12
56661	(CalculatorEditText)	7
19194	(Calendar	5
42604	(CapitalizingButton)	4
2314	(CheckBox)	81
31220	(CheckBoxPreference)	19
33129	(Checkable)childView	3
49959	(ChildViewCache)	5
41160	(Class	4
19243	(ClassCastException	31
57038	(ClassNotFoundException	5
40842	(CloneNotSupportedException	10
45843	(CollapsibleActionView)	5
199	(Color.alpha(color)	6
27410	(ColorPickerPalette)	3
27284	(ColorSquare)	6
25875	(Commodity	4
36358	(Commodity)	4
59322	(ConnectivityManager)	2
50872	(ContentResolver.SCHEME_ANDROID_RESOURCE.equals(scheme))	5
30300	(CoordinatorLayout.LayoutParams)	8
1100	(Currency	39
62169	(CurrencySelectPage)	3
55266	(Cursor	3
41190	(DBG)	14
38666	(DEBUG)	23
19309	(DatabaseSchema.AccountEntry.COLUMN_CURRENCY	15
34289	(DatePicker)	7
51576	(DbxException	4
9438	(DbxException.Unauthorized	12
12261	(DecimalFormat)	43
31371	(DecimalFormat)NumberFormat.getCurrencyInstance()	3
41094	(Dependency	4
23894	(DisplayMode)	10
23140	(DrawerLayout)	13
1954	(EditText)	100
23674	(EditText)getView().findViewById(R.id.input_description)	3
29420	(EditText)getView().findViewById(R.id.input_transaction_name)	2
25941	(En	7
2304	(Exception	144
20559	(ExecutionException	3
57362	(Exporter.ExporterException	4
56793	(ExporterException	4
34276	(Field	7
3382	(File	41
55345	(FileInputStream	3
2810	(FileNotFoundException	53
58713	(FileUtils.isValidPath(mOC_dir,false))	7
54720	(File[])	6
41351	(Float	4
49141	(Float.floatToIntBits(weight)	4
40672	(FloatKeyframe)	8
42084	(FloatKeyframeSet)	5
41964	(FloatProperty)	4
41738	(FloatPropertyValuesHolder)	4
21829	(FloatingActionButton)	22
1556	(Fragment	11
35195	(Fragment)	18
49479	(FrameLayout)	4
44196	(GENERATED_ITEM_PADDING	4
23476	(GUID)	13
55123	(GnuCash	9
56958	(GnuCashApplication.isDoubleEntryEnabled())	3
30364	(GnuCashApplication.isDoubleEntryEnabled()){	15
34737	(GnuCashApplication.isDoubleEntryEnabled(false))	6
20522	(Gr&#225	10
49157	(HistoricalRecord)	4
45395	(HomeView)	4
34922	(IBinder)	4
38758	(IMPLEMENTATIONS.containsValue(implementationClass))	4
2841	(IOException	95
672	(ISO	19
43340	(IS_FROYO)	4
46214	(IS_GINGERBREAD)	5
43450	(IS_HONEYCOMB)	16
46386	(IcsAdapterView.this.getAdapter().hasStableIds()	4
46126	(IcsAdapterView.this.getAdapter().hasStableIds())	4
45287	(IcsLinearLayout)	13
40191	(IcsProgressBar)mDecor.findViewById(R.id.abs__progress_circular)	4
39576	(IcsProgressBar)mDecor.findViewById(R.id.abs__progress_horizontal)	4
38623	(IllegalAccessException	18
1957	(IllegalArgumentException	79
8052	(IllegalStateException	8
23898	(ImageButton)	44
3273	(ImageView)	66
38237	(Implementation	4
19228	(InputMethodManager)	32
38642	(InstantiationException	7
41095	(IntKeyframe)	8
41835	(IntKeyframeSet)	4
42164	(IntProperty)	4
41787	(IntPropertyValuesHolder)	4
18988	(Integer	4
27429	(Integer)	3
19512	(Intent.FLAG_GRANT_READ_URI_PERMISSION	10
51612	(IntentSender.SendIntentException	10
3859	(InterruptedException	36
38010	(InvocationTargetException	18
45550	(It	4
6313	(Iterator<AccountType>	15
38106	(Iterator<Implementation>	4
43858	(KeyEvent.META_SHIFT_ON	4
52893	(Keyboard.Key	13
52946	(KeyboardView)	15
42300	(Keyframe	4
47037	(LayerDrawable)	4
48841	(LayoutInflater)	5
43459	(LayoutParams)	18
28943	(LineChart)	5
57259	(LineDataSet	4
29167	(LinearLayout)	15
46561	(LinearLayout.LayoutParams)	6
48181	(ListAdapter)	4
6223	(ListPreference)	6
19300	(ListView)	38
46980	(ListView.LayoutParams)	4
63772	(Locale.getDefault().equals(Locale.GERMANY))	2
41950	(Looper.myLooper()	4
47587	(MAX_ITEMS_MEASURED	4
43424	(MIN_CELL_SIZE	4
60474	(MIT)	3
17996	(MXV)</item>	11
29985	(Map.Entry<AccountType,List<String>>	8
58783	(Map.Entry<AccountType,Long>	6
32832	(Map.Entry<String,Integer>	7
53381	(Map.Entry<String,List<BigDecimal>>	2
31736	(Map.Entry<String,String>	6
45784	(MarginLayoutParams)	4
46286	(Maybe	4
48151	(MeasureSpec.getSize(widthMeasureSpec)	4
45000	(MenuBuilder)	4
44511	(MenuItemImpl	4
42762	(MenuItemImpl)	12
44010	(MenuView)	4
43951	(MenuView.ItemView)	8
13492	(Model	13
26572	(Money)	7
53688	(Money.CurrencyMismatchException	2
3055	(NameNotFoundException	26
23054	(NavigationView)	9
30539	(NewTransactionFragment)	8
58160	(Next	6
40134	(NineFrameLayout)decor.findViewById(android.R.id.content)	4
45256	(NineLinearLayout)inflater.inflate(R.layout.abs__action_mode_close_item,this,false)	4
46136	(NoSuchFieldError	5
42229	(NoSuchMethodError	5
38236	(NoSuchMethodException	16
40949	(Node	5
40848	(Node)	4
38891	(Note	4
5677	(NumberFormatException	33
54999	(OFX	6
4214	(OFX)	43
20275	(OFX,QIF)	23
41427	(ObjectAnimator)	4
41337	(ObjectKeyframe)	4
30683	(OnAccountClickedListener)	6
19181	(OnAccountSelectedListener)	4
24738	(OnCheckedChangeListener	3
27177	(OnColorSelectedListener)	3
38621	(OnCreateOptionsMenuListener)mActivity	4
38110	(OnCreatePanelMenuListener)mActivity	4
55201	(OnDateSetListener)	5
18812	(OnItemClickedListener)	2
37985	(OnMenuItemSelectedListener)mActivity	4
40289	(OnMenuVisibilityListener	4
38706	(OnOptionsItemSelectedListener)mActivity	4
26104	(OnPasscodeEnteredListener)	3
38412	(OnPrepareOptionsMenuListener)mActivity	4
38564	(OnPreparePanelListener)mActivity	4
30374	(OnTransactionClickedListener)	4
28044	(Open	33
9520	(Os.isFamily(Os.FAMILY_WINDOWS))	4
8935	(Os.isFamily(Os.FAMILY_WINDOWS)){	4
7599	(PC)	9
8480	(PC)</string>	16
62225	(Page	3
62029	(PageFragmentCallbacks)	3
5857	(ParseException	69
8521	(ParserConfigurationException	32
5374	(PieChart)	17
4198	(PowerManager)	8
24976	(PreferenceManager.getDefaultSharedPreferences(this).getBoolean(getString(R.string.key_enable_crashlytics),false))	3
23215	(ProgressBar)	15
41752	(PropertyValuesHolder)	4
25692	(QIF,OFX	14
5342	(QIF,OFX,and	29
20255	(QIF,OFX,e	10
34741	(QIF,OFX,et	5
48262	(R.	4
34901	(RFC	5
32972	(RadioButton)	29
33167	(RadioButton)mAccountOptionsView.findViewById(R.id.radio_move)	6
51542	(RecurrencePickerDialog)	5
53902	(RecurrencePickerDialogFragment)	2
60497	(RecyclerView)	6
20035	(Refreshable	6
11730	(ReportType)	6
6729	(ReportsActivity)	22
34208	(ReportsActivity.COLORS.length	4
49155	(ResolveInfo)	4
50863	(Resources.NotFoundException	5
21216	(ReviewItem	6
24903	(RuntimeException	32
46089	(SANS_ICE_CREAM	5
52975	(SAXException	11
15538	(SDR)</item>	14
34017	(SELECT	13
27526	(SIZE_LARGE	3
13581	(SQLException	44
57740	(Same	6
42697	(SavedState)	16
2878	(ScheduledAction	48
19200	(ScheduledEvent	9
56098	(Se	2
49094	(SearchAutoComplete)	5
19663	(SearchManager)	18
57707	(SecurityException	2
55620	(See	6
50095	(ShareActionProvider)	4
39117	(SherlockFragmentActivity)activity	4
6891	(SimpleDateFormat)	22
5640	(Special	112
2140	(Spinner)	144
189	(Split	127
59404	(Split)	4
24952	(SplitViewHolder)	22
47363	(StateListDrawable)	4
537	(String	108
866	(String)	5
44528	(SubMenu)	4
43231	(SubMenuBuilder)	8
44757	(SubMenuBuilder)nonActionItem.getSubMenu()	4
64006	(SwitchPreferenceCompat)	2
45883	(SystemClock.uptimeMillis()	8
48634	(T)	4
13166	(TRANSACTION_AMOUNT	12
40264	(Tab)selected.getTag()	4
40226	(TabImpl)	4
21773	(TabLayout)	20
47908	(TabView)	4
47954	(TabView)mInflater.inflate(R.layout.abs__action_bar_tab,null)	4
62366	(TableLayout.LayoutParams)	3
34592	(TextInputLayout)	8
50615	(TextUtils.isEmpty(authority))	5
44960	(TextUtils.isEmpty(mTitle)	4
50335	(TextUtils.isEmpty(text))	5
50474	(TextUtils.isEmpty(text2))	5
1844	(TextView)	222
40131	(TextView)mDecor.findViewById(android.R.id.title)	4
38348	(These	4
37287	(This	20
13606	(Throwable	18
6785	(TitlePageIndicator)	31
4659	(ToggleButton)	34
593	(Toolbar)	31
6544	(Transaction	114
55085	(TransactionFormFragment)	9
31742	(TransactionTypeSwitch)	11
13695	(TransactionTypeToggleButton)	22
62306	(TransactionsDbAdapter.getInstance().getTransactionsCount(mAccountUID)	3
19981	(TransactionsListFragment)	16
7096	(TransformerConfigurationException	17
6487	(TransformerException	13
42175	(TypeEvaluator)null,values)	4
57898	(UDI)"	6
4636	(UDI)</item>	113
5050	(UI:	12
4576	(URUIURUI)</item>	128
57581	(UxArgument.DISABLE_PASSCODE.equals(getIntent().getStringExtra(UxArgument.DISABLE_PASSCODE)))	3
42789	(ValueAnimator)	4
55964	(Ver	2
13535	(View	44
43082	(View)	16
42438	(View)view.getParent()	4
48079	(View.MEASURED_STATE_MASK>>View.MEASURED_HEIGHT_STATE_SHIFT))	4
43213	(ViewGroup)	16
39552	(ViewGroup)mActivity.getWindow().getDecorView().findViewById(android.R.id.content)	4
40111	(ViewGroup)mDecor.findViewById(R.id.abs__content)	4
39420	(ViewGroup)mDecor.getParent()	4
13739	(ViewPager)	38
39315	(ViewStub)mDecor.findViewById(R.id.abs__action_mode_bar_stub)	4
42712	(View_OnAttachStateChangeListener	5
44073	(Visibility	4
40986	(WITH	4
44067	(WeakReference<MenuPresenter>	7
28440	(Whats	8
45162	(Where	4
39748	(Window.PROGRESS_SECONDARY_START	4
39507	(Window.PROGRESS_START	4
48573	(XmlPullParserException	8
39933	(a	16
39365	(a.getBoolean(R.styleable.SherlockTheme_windowActionBar,false))	4
39854	(a.getBoolean(R.styleable.SherlockTheme_windowActionBarOverlay,false))	4
39720	(a.getBoolean(R.styleable.SherlockTheme_windowActionModeOverlay,false))	4
39757	(a.getBoolean(R.styleable.SherlockTheme_windowNoTitle,false))	4
48210	(a.hasValue(R.styleable.SherlockMenuItem_android_checkable))	4
38957	(aActionBar	4
45112	(ablp	4
23138	(above	3
3010	(acc.getAccountType()	11
54588	(acc.getAccountType().name().equals("ROOT"))	6
27782	(acc.getTransactionCount()	20
54830	(accId	3
9951	(accessToken	2
586	(according	36
26751	(account	34
7929	(account.getAccountType()	67
1529	(account.getColor()	8
694	(account.getColorHexCode()	35
26357	(account.getCommodityUID()	6
1868	(account.getDefaultTransferAccountUID()	32
1673	(account.getDescription()	18
59454	(account.getName().startsWith(imbalancePrefix))	2
51256	(account.getParentUID()	20
7307	(account.getTransactionCount()	22
62653	(account.getUID().equals(accountUID))	5
26632	(account.hasUnexportedTransactions()	3
53420	(accountAmountMap.containsKey(accountUID)){	2
19152	(accountBalanceTextViewReference	8
35934	(accountBalanceTextViewReference.get()	8
611	(accountColor	16
27690	(accountFragment	11
27808	(accountId	31
21888	(accountOptions.equals(getString(R.string.wizard_option_create_default_accounts))){	6
21462	(accountOptions.equals(getString(R.string.wizard_option_import_my_accounts))){	6
31766	(accountType)	19
13088	(accountType.hasDebitNormalBalance())	15
24234	(accountType.hasDebitNormalBalance()){	8
34138	(accountTypeSpinner	7
1672	(accountUID	65
51160	(accountUID.equals(acct.getParentUID()))	4
19017	(accountUIDList	8
59103	(accountUIDList.isEmpty())	7
24323	(accountUIDList.size()	7
57582	(accounting	5
59877	(accounts	5
24344	(accountsCursor	9
19775	(accountsCursor.moveToNext())	26
24603	(accountsCursor.moveToNext()){	9
30615	(accountsDbAdapter.getSubAccountCount(mAccountId)	7
9813	(accountsDbAdapter.isPlaceholderAccount(accountUID))	3
33625	(accountsList.size()	10
27652	(accountsListFragment	8
64197	(accountsListLevel.size()	6
24157	(acct.getParentUID().equals(accountUID))	7
51235	(acct.getParentUID().equals(mAccount.getUID()))	5
56920	(acct_type	3
13605	(action	44
21155	(action.equals(Intent.ACTION_INSERT_OR_EDIT)	8
23137	(actionBar	9
44284	(actionEnum	4
50262	(actionKey	6
50126	(actionKey.getQueryActionMsg()	5
50254	(actionMsg	5
50499	(actionMsg.length()	5
53201	(actionType	3
43078	(actionView	9
3992	(activeBookUID.equals(bookUID))	7
35347	(activities	6
49109	(activity	5
48815	(activityCount	4
40002	(activityName.charAt(0)	4
39835	(activityName.indexOf('.',1)	4
39915	(activityPackage	8
46077	(adapter	14
44431	(addGlobalListener)	4
49569	(added)	4
27726	(all)	3
40420	(allDone)	4
53394	(allSame){	2
45901	(alpha	5
48404	(alphabetic	4
30656	(although	11
16607	(alvorens	7
24789	(amount	11
53798	(amount.equals(BigDecimal.ZERO))	2
18577	(amount.isNegative())	9
13960	(amount.signum()	4
36334	(amountBigD	8
60231	(amountBigd	7
12371	(amountBigd.equals(BigDecimal.ZERO))	11
33026	(amountEntered){	13
36523	(amountString.isEmpty()	5
24898	(amountString.isEmpty())	18
52956	(amountText.isEmpty())	8
23602	(amountText.length()	13
52778	(amountText.trim().isEmpty())	21
53837	(amountValue	5
53452	(amounts.size()	2
46897	(an	4
15248	(anbefalt).	14
42909	(anchor	8
50451	(anchorPadding))	5
46904	(anchorPos[1]	4
2486	(and	55
13560	(android.os.Build.VERSION.SDK_INT	6
56795	(android.support.v7.widget.SearchView)	7
40393	(anim	4
41954	(anim.animationFrame(currentTime))	4
42051	(anim.delayedAnimationFrame(currentTime))	4
41877	(anim.mStartDelay	4
40879	(animation	4
41949	(animationHandler	4
41813	(animations.size()	4
4350	(antes	47
25372	(appFolderId	9
43022	(areYouMyGroupie.getGroupId()	4
42467	(areYouMyGroupie.isActionButton())	4
23934	(args	20
30567	(args.getLong(ARG_PARENT_ACCOUNT_ID)	7
32461	(arrayAdapter.isEmpty()	6
44450	(as	11
12743	(assemblePattern.matcher(theTask.name).matches())	3
10312	(at	22
52926	(auto-complete	10
16404	(avant	20
33825	(avoid	4
46354	(b	4
46844	(background	8
51627	(backupFile	8
32693	(backupFiles	18
1323	(balance	54
62006	(balance.asBigDecimal().compareTo(BigDecimal.ZERO)	3
51130	(balance.asBigDecimal().compareTo(new	7
30636	(balance.isNegative())	9
35957	(balanceTextView	13
44743	(based	4
5968	(before	125
51958	(begrenset	7
51729	(beta)"	4
47728	(beyond	4
53360	(bgtAmount.getAccountUID().equals(entry.getKey()))	2
53675	(bgtAmount.getAccountUID().equals(entry.getKey())){	2
17018	(bijzonder	6
64236	(boilerplate	2
32565	(book.getSourceUri()	8
9501	(bookUID	17
31212	(bookUID.equals(BooksDbAdapter.getInstance().getActiveBookUID())){	2
51026	(bookUID.equals(currentBookUID))	3
30375	(booksCount+1))	6
50688	(booksCursor.moveToNext()){	3
37422	(both	14
46891	(boundAspect	4
52357	(budget.getBudgetAmounts().size()	4
14438	(budget.getDescription()	6
53792	(budgetAmount	5
53673	(budgetAmount.getAccountUID().equals(accountUID)	2
53705	(budgetAmount.getAccountUID().equals(accountUID))	2
53532	(budgetAmount.getPeriodNum()	2
57502	(budgetAmounts	4
57486	(budgetAmounts.isEmpty()){	3
53771	(budgetName.isEmpty()){	5
11945	(budgetProgress	4
53764	(budgetUID	5
53745	(budgets.size()	2
40988	(builder	8
2392	(bulk)	10
36143	(but	24
30555	(by	25
34982	(byDay	4
35138	(byDaysString	3
34885	(byday	6
55169	(byte)	3
7135	(c	64
492	(c)	302
26202	(c.getCount()	7
51322	(c.getString(DatabaseAdapter.COLUMN_SPLIT_ACCOUNT_UID)	3
24306	(c.moveToFirst())	29
24177	(c.moveToNext())	38
25336	(c.moveToNext()){	19
50225	(c.moveToPosition(position))	6
51003	(cached	5
42126	(callAgain	4
47152	(callBackToApp	4
40087	(callback	5
39270	(callback.onCreateActionMode(mode,mode.getMenu()))	4
38853	(callbackPrepareOptionsMenu(mMenu))	4
42141	(called	4
58728	(caller	7
48754	(calling	4
48177	(canCollapse)	4
56552	(canSave()){	13
20809	(cancel	11
55623	(candidateNextDueTime.isAfter(startTime))	3
18336	(cannot	17
48685	(category	4
43978	(categoryOrder	4
39301	(cb	4
43374	(cellCount	4
42382	(cells	4
43548	(cellsRemaining	4
44100	(cellsUsed	4
43880	(centerSingleExpandedItem	4
44971	(centeredLeft	4
44147	(changedAtLeastOneItem)	4
53356	(characterString)	6
24000	(characterString.equals("ISO4217"))	6
18559	(characterString.equals("true")){	8
27485	(characterString.equals(COLOR_KEY)){	9
35823	(characterString.equals(FAVORITE_KEY)){	4
31621	(characterString.equals(GncXmlHelper.KEY_COLOR)){	7
32185	(characterString.equals(GncXmlHelper.KEY_CREDIT_FORMULA)){	3
32283	(characterString.equals(GncXmlHelper.KEY_DEBIT_FORMULA)){	3
31829	(characterString.equals(GncXmlHelper.KEY_DEFAULT_TRANSFER_ACCOUNT)){	10
32285	(characterString.equals(GncXmlHelper.KEY_EXPORTED)){	6
31840	(characterString.equals(GncXmlHelper.KEY_FAVORITE)){	7
31917	(characterString.equals(GncXmlHelper.KEY_NOTES)){	11
32010	(characterString.equals(GncXmlHelper.KEY_PLACEHOLDER)){	8
32306	(characterString.equals(GncXmlHelper.KEY_SPLIT_ACCOUNT)){	3
27245	(characterString.equals(PLACEHOLDER_KEY)){	12
58694	(characterString.equals(ScheduledAction.ActionType.BACKUP.name()))	1
30654	(characterString.equalsIgnoreCase("ISO4217")){	17
6326	(chartCurrency	5
59122	(check	6
57589	(checkOldPassCode)	3
29003	(checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)	8
32986	(checkable	11
43546	(checkable)	4
42434	(checked	8
27584	(checked)	7
19082	(checkedCount	23
42333	(child	20
47951	(child.getMeasuredWidth()&View.MEASURED_STATE_MASK)	4
43791	(child.getVisibility()	12
43740	(childCount	8
47073	(childExtra	5
43500	(childIndex	9
42773	(childItem.isVisible()	8
33236	(childView	3
47756	(childrenWidth	4
35905	(clean.length()	10
31326	(cleanString.isEmpty())	2
23528	(cleanString.length()	6
63531	(clicked)	3
46970	(clip)	4
40447	(cloneListeners	4
50698	(col	5
44334	(collapsed)	4
50492	(collapsedActivityCount	4
35532	(colon-sepaated)	6
64226	(colon-separated)	2
1629	(color	21
2136	(colorCode	34
232	(colorHex	10
27417	(colors	3
50204	(column	5
20070	(com.actionbarsherlock.widget.SearchView)	9
10001	(com.dropbox.core.DbxException	2
25788	(commodities.get(i).getCurrencyCode().equals("XXX"))	3
36256	(commoditiesDbAdapter	8
11635	(commodity	26
36291	(commodity.equals("XXX")	8
36371	(commodity.equals(currencyCode))	8
36202	(commodityCode.equals("XXX")	4
36182	(commodityCode.equals(currencyCode))	4
61908	(commodityId	3
36581	(commodityUID	11
12961	(commodityUID.equals(currencyUID))	4
43885	(compoundButton.getVisibility()	4
56970	(condition	6
51624	(connectionResult.hasResolution()	7
50299	(constraint	5
45663	(contentHeight	5
39445	(contentParent	4
43857	(context	18
44158	(context)	4
30201	(context.getTheme().resolveAttribute(R.attr.actionBarSize,tv,true))	3
43964	(convertView	16
31489	(convertedAmount.isEmpty()){	8
18279	(count	40
62843	(created,modified,reconciled)	4
11195	(creates	4
28280	(creating	6
43950	(curItem.getGroupId()	4
26168	(currencies.get(i).getCurrencyCode().equals("XXX"))	12
424	(currencies.remove(preferredCurrency))	5
31505	(currency	13
31897	(currency.equals(Currency.getInstance(targetCurrency)))	5
18114	(currencyCode	24
36238	(currencyCode){	4
39614	(current	13
54525	(currentAccountUID	3
49535	(currentActivity.resolveInfo	4
57431	(currentFragment	3
13840	(currentMinor	6
44175	(currentParent	4
3641	(cursor	110
20923	(cursor.getCount()	35
29571	(cursor.getInt(cursor.getColumnIndexOrThrow("trans_split_count"))	4
19096	(cursor.moveToFirst())	76
24209	(cursor.moveToFirst()){	23
32484	(cursor.moveToNext()	8
644	(cursor.moveToNext())	80
8073	(cursor.moveToNext()){	75
60422	(cursorPresent)	3
47798	(custom	4
45370	(customNavId	4
47881	(customParent	4
45126	(customView	4
62115	(cutOffPage	3
47335	(d	4
28101	(daglig,uke,mned)\n	4
18151	(daily,weekly,monthly)\n	17
19216	(dans	7
25019	(data	20
51735	(data!=	6
49211	(dataModel	7
20739	(dataSet.getEntryCount()	10
619	(date.getMonthOfYear()	9
30168	(dateMillis	11
19131	(day)	7
2699	(db	21
63382	(db.isReadOnly())	6
9655	(dbExportFile	10
12665	(decimal.length()	5
26071	(decimalImbalance.compareTo(BigDecimal.ZERO)	18
55291	(defaultBackupFile	3
55257	(defaultBackupLocation	3
6813	(defaultEmail	29
9280	(defaultExportFormat	5
51475	(defaultExportFormat.equalsIgnoreCase(ExportFormat.GNC_XML.name())){	3
34718	(defaultExportFormat.equalsIgnoreCase(ExportFormat.OFX.name()))	9
51492	(defaultExportFormat.equalsIgnoreCase(ExportFormat.QIF.name())){	8
51577	(defaultExportFormat.equalsIgnoreCase(ExportFormat.XML.name())){	8
63229	(defaultFormat){	3
24373	(defaultTransferAccountCursor	4
205	(defaultTransferAccountID	15
4224	(defaultTransferAccountId	14
64169	(defaultTransferAcctUID	2
56879	(defaultTransferAcctUUID	3
51257	(defaultTransferUID	3
38432	(defaults	5
27885	(deleted)	14
30556	(deleted){	8
52647	(deletedCount	2
43271	(deltaTime	4
33157	(denominator)	7
40982	(dependencies	4
30291	(dependency	3
41116	(dependency.rule	4
40626	(dependencyNode.nodeDependents	4
25555	(depending	25
44649	(depends	4
58699	(descendantAccountUIDs.size()	5
26156	(description	16
9904	(description)	17
2520	(desktop)	13
51607	(devel)"	6
18205	(diarias,semanales,mensuales)\n	6
62477	(direito	6
47448	(disallowPartialChildPosition	4
47279	(divider	4
7751	(domain)	6
54023	(don't	6
54799	(double	2
18234	(doubleAccountUID	5
6427	(doubleEntryAccountUID	16
30501	(doubleEntryActive){	9
36350	(down	10
47380	(drawable	13
50754	(drawableId	5
28191	(driveFileResult	8
46703	(dropDownList	4
40530	(duration	8
35374	(during	4
972	(e	30
33280	(e.g.	13
48423	(e.g.,	4
50029	(e.g.,"2130837524"),in	5
39707	(e.g.,"com.my.package.SomeClass")	4
37511	(e.g.,12-key)	8
41607	(e.g.,<code>float</code>	4
41223	(e.g.,a	4
40213	(e.g.,android:name=".ui.SomeClass")	4
40282	(e.g.,android:name="SomeClass")	4
43676	(e.g.,when	4
37993	(e.g.,{@code	4
5191	(earliest	13
23960	(either	18
59563	(emailSetting	4
46313	(empty)	4
61916	(emptyView	3
59106	(enable){	8
42370	(enabled	4
6398	(enabled)	9
54980	(enabled){	11
52756	(end	13
46722	(endPosition	4
4381	(endTime	32
40431	(endValue	4
40927	(endValue.floatValue()	4
41851	(endingAnims.size()	4
46222	(entries	4
32524	(entry.getValue()	13
25740	(err_msg	5
14859	(etter	24
44018	(even	9
44891	(event.getAction()	22
52785	(event.getAction())	8
45625	(event.getEventType()	4
18612	(event.getPeriod()*eventRecurrence.count))	2
52849	(event.getRawX()	15
49730	(event.isTracking()	5
59829	(event.period*eventRecurrence.count)	2
51772	(eventRecurrence	5
18895	(eventRecurrence.count	11
19180	(eventRecurrence.interval	8
9020	(eventRecurrence.startDate	9
19149	(eventRecurrence.until	7
39673	(eventType	12
48655	(eventType)	4
2607	(events.size()	8
31830	(exchangeRateString.isEmpty()){	9
36404	(excludes	8
59928	(excluding	9
42654	(exclusive	8
57225	(executionCount	4
44028	(expandableItemCount	4
44354	(expanded)	4
44080	(expandedId	4
44309	(expandedItem	4
49801	(explicit	5
52699	(exportAll){	8
52190	(exportFormat	3
57308	(exportResult)	5
57401	(exportSuccessful)	4
36294	(exportTemplates)	11
32412	(exportTemplates){	13
55402	(exportUri	3
31398	(exportedTransactionUIDs.contains(transaction.getUID()))	5
59438	(exports	2
24763	(expression	21
49933	(extraData	5
50481	(extras	10
38529	(f	5
43345	(false).	8
27869	(favoriteAccountMenuItem	9
38011	(featureId	10
39568	(featureId)	4
21242	(feedbackOption.equals(getString(R.string.wizard_option_auto_send_crash_reports))){	9
34277	(field.getName().equals("mDaySpinner")	7
63666	(file.isDirectory())	3
28394	(file.lastModified()	5
55576	(filepath	2
9611	(final	17
42986	(firstActionWidth	4
3319	(firstRun){	28
40620	(firstTime)	4
49206	(fis	4
44203	(flagged)	4
38483	(flags	9
45197	(flagsChanged	4
6585	(float)	48
42839	(float)(currentTime	4
30407	(float)dependency.getY()/(float)toolbarHeight	6
35121	(float[])	4
28068	(fm.getBackStackEntryCount()	18
31867	(focusCurrent	17
45876	(focusable)	4
35610	(for	30
48149	(forAdapter)	4
29807	(forCurrentMonth)	14
47879	(forList)	4
52130	(foreign	4
1024	(formType){	8
35459	(format)	8
33520	(format){	10
51253	(formatter	6
48831	(fos	4
15159	(fr	34
40555	(fraction	12
9	(fragment	42
32222	(fragment.getReportType()	5
62284	(fragments,activities,dialogs)	5
46419	(frame	4
46517	(frame.contains(x,y))	4
38277	(from	13
12356	(fromCommodity.equals(Commodity.getInstance(targetCurrencyCode))	3
12702	(fromCurrency.equals(Currency.getInstance(targetCurrency))	13
31643	(fromCurrencyCode.equals(targetCurrencyCode)){	5
35589	(fullName	16
33886	(generateUID){	13
58711	(getAccountType(accountUID)	7
64077	(getAccountType(newParentAccountUID)	3
24538	(getAccountType(parentAccountUID)	5
37961	(getActionBar()	5
19453	(getActivity()	11
21814	(getActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)	8
1793	(getActivity().getSupportFragmentManager().getBackStackEntryCount()	5
46359	(getAdapter()	4
27505	(getArguments()	3
45942	(getChildAt(i).equals(listItem))	4
46905	(getChildAt(i).getVisibility()	4
45926	(getChildCount()	8
26315	(getClass()	7
8765	(getCount()	6
46328	(getFirstVisiblePosition()	4
45042	(getId()	5
19439	(getIntent().getAction().equals(Intent.ACTION_INSERT_OR_EDIT))	13
31014	(getIntent().getExtras()	3
53981	(getItemId(pos)	2
49377	(getListPopupWindow().isShowing())	4
39865	(getNavigationMode()	4
47105	(getOrientation()	4
32523	(getQuarter(end)	17
31479	(getResources().getConfiguration().orientation	5
23530	(getScale())	12
39223	(getSherlock().dispatchKeyEvent(event))	4
38858	(getSherlock().dispatchMenuOpened(featureId,menu))	4
44312	(getShortcut()	4
34891	(getSupportActionBar()	11
19485	(getTargetFragment()	26
45621	(getVisibility()	12
45320	(getWidth()	8
48785	(getting	4
21214	(grantResults.length	5
21157	(grantResults[0]	8
45161	(gravity	4
5541	(grficos	6
48197	(group	4
43209	(groupId	4
47327	(h	4
49013	(handled)	4
31824	(hapticFeedback	14
48224	(hasActionProvider	5
48399	(hasActionProvider)	4
52400	(hasDebitNormalBalance)	2
46910	(hasDividerBeforeChildAt(count))	5
43534	(hasDividerBeforeChildAt(i))	8
47210	(hasDividerBeforeChildAt(index))	4
39641	(hasFeature(Window.FEATURE_ACTION_BAR_OVERLAY))	4
40305	(hasFeature(Window.FEATURE_ACTION_MODE_OVERLAY)	4
39375	(hasFeature(Window.FEATURE_INDETERMINATE_PROGRESS))	4
39400	(hasFeature(Window.FEATURE_NO_TITLE))	4
39760	(hasFeature(Window.FEATURE_PROGRESS))	4
41643	(hasFloat	4
35032	(hasFocus)	25
41376	(hasInt	4
4009	(hasNewFeatures()){	35
43252	(hasOverflow	8
43191	(hasOverflow)	4
38282	(hasQualfier)	4
6486	(hasSectionHeader){	18
44577	(hasSubMenu()	4
49870	(hasText	5
42873	(hasText())	4
49887	(hasWindowFocus	5
40527	(having	4
43338	(height	4
43770	(heightMode	8
46335	(heightMode)	4
52752	(hex	16
45785	(hgrav	4
45257	(hgravity	4
45412	(hgravity)	4
9462	(hideAccountBalance)	2
18913	(highlighted)	20
50256	(hint	5
49575	(hintId	9
46821	(hintView	4
49160	(historicalRecords.size()	4
46455	(hitFirst	4
46393	(hitLast	4
45415	(homeAsUp	4
45002	(homeLayout.getVisibility()	4
48103	(horizontalOffset	4
40074	(horizontalProgressBar.isIndeterminate()	4
27834	(hue1	3
42191	(i	26
57432	(i)	3
19740	(i){	9
43552	(i.e	4
18494	(i.e.	23
39305	(i.e.,a	4
46394	(i.e.,is	4
42657	(icon	19
50837	(iconId	5
44261	(iconRes	4
49742	(iconify)	5
18566	(id	30
46238	(idToMatch	4
3085	(if	45
46530	(ignoreBottomDecorations)	4
25853	(imbAccount	16
33865	(imbSplit	8
24994	(imbalance.isAmountZero()){	4
31086	(imbalanceAmount.asBigDecimal().compareTo(new	5
10340	(imbalanceSplit	14
31054	(imbalanceType	5
49393	(imeOptions	5
49209	(imm	9
38076	(impls.isEmpty())	4
38575	(impls.size()	4
21671	(import	7
5217	(in	70
7019	(inChannel	30
42523	(inGroup)	4
23339	(inSubAcccount()){	12
35348	(includes	11
7015	(including	14
47054	(indeterminate)	4
42502	(index	12
26577	(index)	8
32228	(index){	6
47600	(infrequently	4
55940	(innan	2
49613	(inputType	5
45866	(instead	4
1225	(int	233
7497	(int)	74
55130	(int)(b	4
40931	(int)(fraction	4
55126	(int)(g	4
41006	(int)(intervalFraction	4
55121	(int)(r	4
40884	(int)(startInt	4
56955	(int)Math.pow(10,fractionDigits)	3
32512	(int)cursor.getLong(0)	3
43247	(int)fraction	4
18149	(int)id,Transaction.createIntent(mTransactionsDbAdapter.getTransaction(id)),PendingIntent.FLAG_UPDATE_CURRENT)	4
18296	(int)recurringTransactionId,Transaction.createIntent(mTransaction),PendingIntent.FLAG_UPDATE_CURRENT)	5
20896	(int)recurringTransactionId,Transaction.createIntent(recurringTransaction),PendingIntent.FLAG_UPDATE_CURRENT)	6
25062	(int)transactionId,Transaction.createIntent(transactionsDbAdapter.buildTransactionInstance(c)),	5
25366	(int)transactionId,intent,PendingIntent.FLAG_CANCEL_CURRENT)	6
45996	(int)tv.getDimension(metrics)	4
46277	(int)tv.getFraction(metrics.widthPixels,metrics.widthPixels)	4
50166	(intent	5
19437	(intent.getAction().equals(Intent.ACTION_INSERT_OR_EDIT))	11
41700	(interpolated	4
40583	(interpolator	8
46595	(intrinsicAspect	4
43970	(invoked)	4
42423	(isAction	4
43099	(isAction)	4
44368	(isActionButton)	4
7050	(isAdded()){	17
56727	(isChecked	7
18716	(isChecked)	17
23724	(isChecked){	16
47754	(isCollapsed())	4
23219	(isCrashlyticsEnabled())	11
31606	(isCustomKeyboardVisible())	12
26224	(isDebitAccount)	17
31814	(isDebitSplit)	10
26418	(isDebitTransaction)	7
43609	(isGeneratedItem)	4
31782	(isHapticFeedbackEnabled()	4
50011	(isIconified())	5
12976	(isInDoubleAccount()){	6
46292	(isInFilterMode())	4
49840	(isLandscapeMode(getContext()))	5
62972	(isMultiCurrencyTransaction()	4
62846	(isMultiCurrencyTransaction()){	4
39577	(isOurActivity)	8
13621	(isPassEnabled	16
13936	(isPassEnabled)	6
19576	(isPlaceHolderAccount())	7
20012	(isPlaceHolderAccount()){	13
61931	(isPlaceholderAccount)	3
27545	(isPlaceholderAccount){	15
38992	(isPrepared	4
39251	(isReservingOverflow())	4
63738	(isReset())	1
47606	(isSelected)	4
44212	(isShowing())	8
49403	(isShowingPopup()	4
48920	(isShowingPopup())	4
58593	(isSplitPair){	8
41147	(isStarted())	4
50118	(isSubmitAreaEnabled()	5
39390	(isVisible	4
43226	(isVisible)	4
57293	(it	4
26946	(it.hasNext()){	6
42753	(item	23
42811	(item.getGroupId()	8
5943	(item.getItemId()	12
2028	(item.getItemId())	101
273	(item.getItemId()){	36
43600	(item.getOrdering()	4
43436	(item.hasSubMenu())	4
44447	(item.isActionButton())	4
44085	(item.isActionViewExpanded())	4
24881	(item.isCheckable())	6
43429	(item.isVisible())	5
42703	(item.requestsActionButton())	4
43232	(item.requiresActionButton())	4
43336	(item.setVisibleInt(visible))	4
48278	(itemActionProvider	4
48337	(itemActionViewClassName	4
48717	(itemActionViewLayout	4
48813	(itemCheckable	5
44420	(itemId	4
20887	(itemId){	17
43736	(itemImpl	4
43543	(itemImpl.hasCollapsibleActionView())	4
48536	(itemListenerMethodName	4
48801	(itemShowAsAction	4
43871	(itemToExpand	4
43666	(itemView	4
47932	(itemView.getLayoutParams()	4
49532	(itemViewType)	4
40409	(items	4
43194	(items.get(i).getGroupId()	4
42750	(items.get(i).getItemId()	4
43150	(items.get(i).isVisible())	4
43321	(items.isEmpty())	4
40923	(items.length	4
40399	(items.size()	4
673	(iteratorDate.isBefore(mLatestTransactionDate))	7
62239	(its	3
28220	(kan	4
38556	(key.api()	4
52831	(key.codes[0]	13
37973	(key.dpi()	4
55165	(key.equals(getString(R.string.key_about_gnucash))){	7
55286	(key.equals(getString(R.string.key_backup_location))){	4
2916	(key.equals(getString(R.string.key_build_version))){	8
57216	(key.equals(getString(R.string.key_change_passcode)))	3
1301	(key.equals(getString(R.string.key_change_passcode))){	11
32585	(key.equals(getString(R.string.key_create_backup))){	14
3241	(key.equals(getString(R.string.key_delete_all_accounts))){	11
2723	(key.equals(getString(R.string.key_delete_all_transactions))){	7
51395	(key.equals(getString(R.string.key_dropbox_sync))){	10
51676	(key.equals(getString(R.string.key_google_drive_sync))){	9
51563	(key.equals(getString(R.string.key_import_accounts))	4
21659	(key.equals(getString(R.string.key_import_accounts))){	19
32546	(key.equals(getString(R.string.key_owncloud_sync))){	13
28434	(key.equals(getString(R.string.key_restore_backup))){	9
51561	(key.equals(getString(R.string.key_restore_last_backup))){	3
37938	(keyApi	4
84	(keyCode	27
41172	(keyframeSet	4
41648	(keyframes[i]	4
38123	(keys.next().api()	4
32342	(label.equals(accountName))	8
32417	(labels.contains(accountName))	8
9578	(lastActionTime	10
26399	(lastCurrency	17
19806	(lastRun	11
4965	(lastRunTime	5
29119	(lastSyncTime.equals(new	4
50181	(late	5
49602	(launchIntent	8
50969	(len	6
26009	(length	3
25862	(length)	3
37585	(let	4
50221	(like	13
50429	(limit	5
18629	(limited	19
56888	(line.startsWith(QifHelper.INTERNAL_CURRENCY_PREFIX))	7
60111	(lineData	3
63418	(lineData.getYValueSum()	2
47495	(list	4
46853	(listContent	4
41038	(listener	6
40758	(listenersToRemove	4
3873	(locale.getCountry().equals("LG")){	5
3909	(locale.getCountry().equals("UK"))	18
4818	(locale.getCountry().equals("en")){	2
48002	(lockedExpanded	4
45633	(logo	4
18416	(long	70
48607	(lookingForEndOfUnknownTag	4
48608	(lookingForEndOfUnknownTag)	4
45321	(lp	8
43344	(lp.cellsUsed	4
43626	(lp.expandable)	4
44026	(lp.height	8
44188	(lp.isOverflowButton)	4
45077	(lp.width	4
47172	(lpHeight	4
31188	(mAcccountsActivity.checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)	5
46739	(mAccessibilityEventSender	4
47365	(mAccessibilityManager.isEnabled())	4
229	(mAccount	89
54401	(mAccount.getAccountType()	2
51263	(mAccount.getUID().equals(acct.getParentUID()))	2
10639	(mAccountCursor	7
19600	(mAccountId	15
21708	(mAccountOptions.equals(getString(R.string.wizard_option_create_default_accounts))){	8
12556	(mAccountOptions.equals(getString(R.string.wizard_option_import_my_accounts))){	18
56848	(mAccountRecyclerAdapter	3
7286	(mAccountType	18
7048	(mAccountType)	11
6965	(mAccountType.hasDebitNormalBalance()	5
7198	(mAccountType.hasDebitNormalBalance())	5
6911	(mAccountType.hasDebitNormalBalance()){	7
7178	(mAccountType.hasInvertedCredit()	6
6696	(mAccountType.hasInvertedCredit()){	6
55	(mAccountUID	27
55174	(mAccountUID.equals(uid))	5
34914	(mAccountsActivity	2
26717	(mAccountsCursor	3
8632	(mAccountsDbAdapter	31
26785	(mAccountsDbAdapter.getSubAccountCount(account.getUID())	14
30564	(mAccountsDbAdapter.getSubAccountCount(mAccountId)	7
52213	(mAccountsDbAdapter.getTotalAccountCount()	4
25880	(mAccountsDbAdapter.getTransactionMaxSplitNum(mAccount.getUID())	9
53930	(mAccountsDbAdapter.isFavoriteAccount(accountUID)){	5
9887	(mAccountsList.isEmpty())	3
39807	(mActionBar	5
45096	(mActionBarView	4
42903	(mActionButtonPopup	4
44617	(mActionExpandListener	4
45207	(mActionMenuPresenter	6
18844	(mActionMode	35
38775	(mActionModeView	7
44878	(mActionProvider	5
54601	(mActionType	10
54614	(mActionType){	3
40197	(mActionView	8
39942	(mActionView.getNavigationMode())	4
64359	(mActive	1
37758	(mActivity	10
39768	(mActivity.startActionMode(wrapped)	5
49193	(mActivityChoserModelPolicy	4
30494	(mActivityRunning)	10
48945	(mActivitySorter	4
44741	(mAdapter	16
48952	(mAdapter.getCount()	4
48849	(mAdapter.getDataModel()	4
47901	(mAllowCollapse)	4
43063	(mAllowTextWithIcon	4
42882	(mAlpha	4
26416	(mAmount	3
36210	(mAmount.hashCode())	6
52873	(mAmountEditText.getRight()	19
69	(mAmountEditText.getText().length()	44
35995	(mAmountEditText.getText().toString().length()	5
62499	(mAmountEditText.getValue()	6
26139	(mAmountEditText.isInputValid())	14
45643	(mAnimateInOnLayout)	4
47093	(mAnimation	4
45122	(mAnimationMode	4
40924	(mAnimatorSet.mTerminated)	4
49913	(mAppSearchData	5
9532	(mAppWidgetId	8
45254	(mBackground	4
54126	(mBudget	5
53411	(mBudget.getBudgetAmounts().size()	2
57445	(mBudgetAmounts.isEmpty()){	3
57406	(mBudgetAmounts.size()	3
2228	(mBulk)	8
3266	(mBulk){	3
34881	(mByDays.isEmpty())	3
40031	(mCallback	12
45137	(mCanceled)	8
60430	(mChangeObserver	3
24938	(mChart.getAxisLeft().getLimitLines().isEmpty())	7
30048	(mChartDataPresent)	19
60178	(mChartDataPresent){	3
4647	(mChartDate.plusMonths(1).dayOfMonth().withMinimumValue().withMillisOfDay(0).isBefore(mLatestTransaction))	6
60193	(mChartHasData){	3
43878	(mCheckBox	4
33467	(mCheckable	3
40005	(mCircularProgressBar	4
49302	(mClearingFocus)	5
42860	(mClickListener	8
45292	(mClose	4
45235	(mClose.getParent()	4
50374	(mClosed)	5
38938	(mClosingActionMenu)	4
20690	(mColorCode	13
27231	(mColors	3
36491	(mCommodity.equals(Commodity.EUR)	7
13022	(mCommodity.equals(Commodity.EUR))	6
12972	(mCommodity.equals(Commodity.USD)	10
36418	(mCommodity.getCurrencyCode().equalsIgnoreCase("USD")	6
36472	(mCommodity.hashCode())	4
62160	(mConsumePageSelectedEvent)	3
39356	(mContainerView.getVisibility()	4
45501	(mContentHeight	4
40062	(mContentParent	6
39601	(mContentView	4
9076	(mContext	43
63717	(mContext.getDatabasePath(DatabaseSchema.LEGACY_DATABASE_NAME).exists()){	2
48254	(mContext.isRestricted())	4
40094	(mContextView	8
31851	(mConvertedAmountRadioButton.isChecked())	7
31944	(mConvertedAmountRadioButton.isChecked()){	11
38747	(mCreatedMenus	4
26497	(mCurrency	3
23449	(mCurrency.getDefaultFractionDigits())	5
36162	(mCurrency.hashCode())	6
30536	(mCurrencyCodes.contains(currencyCode)){	12
25835	(mCurrencyCount.containsKey(currencyCode))	9
46327	(mCurrentExpandedItem	4
27748	(mCurrentFilter	10
43115	(mCurrentIteration	4
43699	(mCurrentMenuInfo	4
40272	(mCurrentModeAnim	4
40624	(mCurrentNode	4
62047	(mCurrentPageSequence.get(i).getKey().equals(key))	3
39785	(mCurrentShowAnim	4
11446	(mCursor	24
30823	(mCursor.getCount()	7
60616	(mCursor.moveToPosition(position))	3
7576	(mCursorAdapter.getItemId(pos)	40
60545	(mCursorFilter	3
45055	(mCustomNavView	7
45334	(mCustomView	8
46174	(mDataChanged)	8
60493	(mDataSetObserver	3
60589	(mDataValid	3
31416	(mDatabaseAdapter	5
21924	(mDateRangeDenomination	5
21936	(mDateRangeDenomination)	5
21332	(mDateRangeDenomination){	5
851	(mDateRangeInterval	5
2169	(mDateRangeInterval)	5
195	(mDateRangeInterval){	5
19810	(mDb.getVersion()	28
19818	(mDbAdapter	4
13592	(mDbHelper	16
8830	(mDbxAccountManager.hasLinkedAccount()){	10
38895	(mDecor	7
40253	(mDecor.getChildCount()	4
24540	(mDefaulTransferAccountSpinner.getCount()	7
49564	(mDefaultActionButtonContentDescription	4
49256	(mDefaultActivityButton.getVisibility()	4
13746	(mDefaultTransferAccountCheckBox.isChecked()	5
13226	(mDefaultTransferAccountCheckBox.isChecked()){	10
27392	(mDefaultTransferAccountCursor	5
26671	(mDefaultTransferAccountCursorAdapter	8
27406	(mDefaultTransferAccountCursorAdapter.getItemId(pos)	10
34367	(mDefaultTransferAccountSpinner.getCount()	3
20182	(mDefaultTransferAccountUID	9
39960	(mDeferredModeDestroyCallback	4
40392	(mDelayAnim	4
19275	(mDelegate	17
3350	(mDeleteAccountsClickCount	7
7112	(mDeleteAllCheckBox.isChecked()){	15
4008	(mDeleteTransactionsClickCount	7
18657	(mDescendantAccountUIDs	10
6975	(mDescription	24
63161	(mDirError.getText().toString().equals(getString(R.string.owncloud_dir_ok))	3
48058	(mDisableChildrenWhenDisabled)	4
54708	(mDisplayMode	10
54610	(mDisplayMode){	10
45461	(mDisplayOptions	7
46641	(mDivider	4
6598	(mDoubleEntryAccountUID	14
49292	(mDropDownAnchor	5
50482	(mDropDownAnchor.getWidth()	5
47408	(mDropDownHeight	5
47012	(mDropDownList	5
47164	(mDropDownList.getCacheColorHint()	4
46597	(mDropDownListHighlight	4
47217	(mDropDownWidth	8
4801	(mEarliestTimestampsMap.isEmpty()	11
62685	(mEarliestTimestampsMap.isEmpty())	3
5898	(mEarliestTransaction.getYear()	4
58779	(mEarliestTransactionTimestamp	7
60369	(mEditMode)	6
21262	(mEditingAfterReview)	8
24076	(mEditor	6
46265	(mEmptyView	4
18588	(mEndDate	18
40500	(mEvaluator	8
53882	(mEventRecurrence.until	5
11481	(mExchangeRateRadioButton.isChecked())	9
7826	(mExchangeRateRadioButton.isChecked()){	13
59927	(mExecutionCount	3
8842	(mExecutionCount-1)	8
44933	(mExpandedActionView	7
45796	(mExpandedActionView.getParent()	4
42949	(mExpandedActionViewsExclusive	4
43189	(mExpandedFormat	4
46021	(mExpandedHomeLayout.getParent()	4
50470	(mExpandedInActionView)	5
44796	(mExpandedIndex	4
43705	(mExpandedItem	4
44916	(mExpandedMenuPresenter	4
52458	(mExportAllSwitch.isChecked()){	11
29289	(mExportCacheFilePath	5
55610	(mExportFormat	2
6592	(mExportFormat)	7
55401	(mExportLocation	3
30977	(mExportParams.getExportFormat()	26
6492	(mExportParams.getExportFormat())	17
51601	(mExportParams.getExportFormat()){	5
6895	(mExportParams.getExportTarget())	23
55446	(mExportParams.getExportTarget()){	9
13313	(mExportParams.shouldDeleteTransactionsAfterExport())	14
6638	(mExportParams.shouldDeleteTransactionsAfterExport()){	7
31470	(mExportStarted)	4
55407	(mExportTarget	5
31116	(mExportUri	4
9560	(mExportedFiles.isEmpty())	3
55676	(mExportedFiles.size()	2
39869	(mFeatures	4
24235	(mFilter	13
60429	(mFilterQueryProvider	3
43224	(mFinished)	4
46417	(mFirstPosition	4
42414	(mFlags	9
50287	(mFlagsCol	5
42094	(mFloatProperty	4
44288	(mForceShowIcon)	4
43655	(mFormatItems	4
44050	(mFormatItems)	4
39730	(mFragmentTransaction	5
64387	(mFragments.mActive	1
38265	(mFragments.mAdded	5
41889	(mGetter	5
47900	(mGravity	4
7490	(mGroupInterval	16
32368	(mGroupInterval)	25
39359	(mHasEmbeddedTabs)	4
47346	(mHijackFocus	4
49653	(mHistoryMaxSize	4
40223	(mHorizontalProgressBar	4
30675	(mISO4217Currency)	7
45443	(mIcon	4
44296	(mIconDrawable	4
50090	(mIconName1Col	5
50134	(mIconName2Col	5
44518	(mIconResId	4
44116	(mIconView	8
43957	(mIconView.getVisibility()	4
48929	(mIconifiedByDefault	8
49817	(mIconifiedByDefault)	5
727	(mIgnoreElement	6
19542	(mImportedBookUID	8
53486	(mInBudgetSlot	2
53519	(mInBudgetSlot){	2
23178	(mInColorSlot)	8
3360	(mInColorSlot){	15
63904	(mInDefaultTransferAccount)	2
31060	(mInDefaultTransferAccount){	7
18645	(mInEditMode	21
30613	(mInEditMode)	10
18091	(mInEditMode){	23
63908	(mInExported)	2
31306	(mInExported){	7
63909	(mInFavoriteSlot)	2
31368	(mInFavoriteSlot){	7
45930	(mInLayout	4
51068	(mInPlaceHolderSlot)	8
18795	(mInPlaceHolderSlot){	17
5002	(mInTemplates	14
25710	(mInTemplates){	5
44946	(mIncludeTabs	4
46742	(mIndeterminate)	4
47209	(mIndeterminateDrawable	4
44920	(mIndeterminateProgressView	4
43674	(mInflater	4
49016	(mInstanceLock)	6
41867	(mIntProperty	4
43172	(mIntent	13
41034	(mInterpolator	12
43924	(mIsClosing)	4
45176	(mIsCollapsable)	4
32077	(mIsDateEntered	4
4605	(mIsDatePosted	13
38823	(mIsDelegate)	4
39867	(mIsFloating)	4
4764	(mIsLastRun	6
32257	(mIsLastRun){	3
63907	(mIsNote)	2
31435	(mIsNote){	7
57604	(mIsPassEnabled)	2
21683	(mIsPlaceholderAccount)	4
13794	(mIsPlaceholderAccount){	9
4262	(mIsRecurrenceStart	4
4860	(mIsScheduledEnd	6
32144	(mIsScheduledEnd){	3
4825	(mIsScheduledStart	6
32268	(mIsScheduledStart){	3
49062	(mIsSelectingDefaultActivity	4
49570	(mIsSelectingDefaultActivity)	4
45059	(mIsSplit)	4
44793	(mItem	4
44408	(mItemCallback	4
46226	(mItemCount	9
42880	(mItemData	4
43652	(mItemData.isExclusiveCheckable())	4
43062	(mItemData.showsTextAsAction()	4
43051	(mItemInvoker	4
46917	(mItemSelectedListener	4
43853	(mItems.get(i).getGroupId()	4
43921	(mItemsChangedWhileDispatchPrevented)	4
42081	(mJniSetter	5
41810	(mJniSetterInteger	5
41679	(mLastKeyframe.getFraction()	4
58803	(mLatestTransactionTimestamp	6
45673	(mListNavLayout	4
49093	(mListPopupWindow	4
27297	(mListener	8
41129	(mListeners	13
40867	(mListeners.size()	4
61756	(mLocalSymbol	3
44953	(mLogo	4
45518	(mLogoNavItem	4
49261	(mMaxActivityCount	4
46580	(mMaxHeight	4
49795	(mMaxWidth	5
44722	(mMeasureParent	4
11020	(mMemo	28
39137	(mMenu	22
44329	(mMenu.dispatchMenuItemSelected(mMenu.getRootMenu(),this))	4
44645	(mMenu.isQwertyMode()	4
39197	(mMenuFrozenActionViewState	4
38125	(mMenuInflater	5
38814	(mMenuIsPrepared)	4
44467	(mMenuItemClickListener	4
43864	(mMenuView	10
48795	(mMethod.getReturnType()	5
3705	(mMoveAccountsRadioButton.isChecked()){	5
3026	(mMoveTransactionsRadioButton.isChecked()){	5
18949	(mMultiCurrency	15
596	(mMultiCurrency)	30
19852	(mMultiplier	5
26537	(mName	7
51189	(mName.length()	3
18790	(mNameEditText.getText().length()	6
44460	(mNativeActionExpandListener	4
39165	(mNativeItemMap	4
45264	(mNavigationMode)	4
46496	(mNeedSync	4
46369	(mNeedSync)	4
40742	(mNeedsSort)	4
47593	(mNextSelectedPosition	4
40479	(mNode.tmpDependencies.size()	4
40985	(mNodes.size()	4
20128	(mNotes	12
40552	(mNumKeyframes	8
57379	(mOC_dir.length()	7
47510	(mObserver	4
44887	(mOnActionExpandListener	4
52393	(mOnBackListener	8
50278	(mOnChooseActivityListener	4
50215	(mOnCloseListener	5
27345	(mOnColorSelectedListener	3
49309	(mOnDismissListener	4
46311	(mOnItemClickListener	4
45921	(mOnItemSelectedListener	4
50444	(mOnQueryChangeListener	5
48984	(mOnQueryTextFocusChangeListener	5
49755	(mOnSearchClickListener	5
50067	(mOnShareTargetSelectedListener	4
50005	(mOnSuggestionListener	5
31572	(mOnTransferFundsListener	12
47168	(mOnlyIndeterminate	4
45086	(mOptionsMenu	4
50992	(mOutsideDrawablesCache.containsKey(componentIconKey))	5
42613	(mOverflowButton	4
42468	(mOverflowPopup	5
62220	(mPager.getCurrentItem()	3
29994	(mPagerAdapter	14
62069	(mPagerAdapter.getCutOffPage()	3
27401	(mPalette	3
47800	(mParent.mMaxTabWidth	4
24570	(mParentAccountCursor	13
24213	(mParentAccountCursor.getCount()	6
24471	(mParentAccountCursorAdapter.getItemId(pos)	10
19774	(mParentAccountId	21
20556	(mParentAccountUID	21
59701	(mParentCheckBox.isChecked())	4
7679	(mParentCheckBox.isChecked()){	16
57626	(mPasscode.equals(pass))	2
19957	(mPeriod	11
7856	(mPeriodEnd	20
34926	(mPeriodType	11
9982	(mPeriodType)	5
7872	(mPeriodType){	21
42541	(mPlayingBackwards)	4
40536	(mPlayingSet.size()	4
42226	(mPlayingState	6
43103	(mPlayingState)	4
47570	(mPopup	4
47047	(mPopup.getBackground()	4
46960	(mPopup.isShowing())	4
39912	(mPosition	4
43253	(mPostedOpenRunnable	4
32598	(mPrefs.getBoolean(getString(R.string.owncloud_sync),false))	10
43441	(mPresenter	4
44202	(mPresenterCallback	4
44903	(mPresenters.isEmpty()	4
43389	(mPresenters.isEmpty())	7
11304	(mPrice	13
10967	(mPriceCommodity)	12
23930	(mPriceCurrency)	4
27511	(mProgress	7
9329	(mProgressDialog	21
47153	(mProgressDrawable	4
46828	(mProgressStatus	4
45552	(mProgressView	4
47583	(mPrompt	4
47128	(mPromptPosition)	4
46880	(mPromptView	4
41257	(mProperty	8
49642	(mProvider	4
42875	(mProxy	5
31666	(mQuantity	10
49233	(mQueryHint	8
50341	(mQueryRefinement	5
49831	(mQueryTextView.getTextSize()	5
50292	(mQueryTextView.hasFocus())	5
49895	(mQueryTextView.isPopupShowing()	5
43861	(mRadioButton	4
59476	(mReconcileState	6
51964	(mRecurrence	6
55678	(mRecurrence.getByDays().isEmpty())	2
53641	(mRecurrence.getPeriodEnd()	2
34740	(mRecurrence.getPeriodType())	11
8059	(mRecurrence.getPeriodType()){	11
3235	(mRecurrencePeriod	24
2432	(mRecurrenceRule	17
57598	(mReenter)	2
47125	(mRefreshProgressRunnable	4
26806	(mReleaseDbAdapter	9
42159	(mRepeatCount	4
43050	(mRepeatMode	4
14599	(mReplaceStatement	19
3529	(mReportEndTime	7
32446	(mReportGenerator	3
26501	(mReportPeriodEnd	6
26297	(mReportPeriodStart	6
2523	(mReportStartTime	25
32460	(mReportType	3
43296	(mReserveOverflow	4
42913	(mReserveOverflow)	4
23288	(mRootAccount	5
59402	(mRootAccount.getUID().equals(account.getParentUID())))	2
20367	(mRootAccountUID	12
40664	(mRule	4
41848	(mRunning	5
46990	(mSampleTile	4
30318	(mSaveMenuItem	6
51785	(mSaveTemplate.isChecked())	7
3048	(mSaveTemplate.isChecked()){	6
51797	(mSaveTemplateCheckbox.isChecked())	10
40008	(mSavedTabPosition	4
42575	(mScaleX	4
42483	(mScaleY	4
53488	(mScheduledAction	5
25274	(mScheduledAction.getActionType()	6
53699	(mScheduledAction.getActionUID()	6
42981	(mScrapActionButtonView	4
19652	(mSearchView	13
50531	(mSearchView.getVisibility()	5
48976	(mSearchable	10
50096	(mSearchable.getSuggestAuthority()	5
50264	(mSearchable.getVoiceSearchLaunchRecognizer())	5
50333	(mSearchable.getVoiceSearchLaunchWebSearch())	5
43210	(mSeekTime	4
8638	(mSelectedAccountId	19
27506	(mSelectedColor	3
59080	(mSelectedId	8
29264	(mSelectedIds.size()	5
46274	(mSelectedPosition	4
46385	(mSelectedRowId	4
40210	(mSelectedTab	4
60220	(mSelectedValueTextView	5
30491	(mSelectedViewPosition	12
45943	(mSelectionNotifier	4
40873	(mSetListener	4
42075	(mSetter	6
39141	(mSherlock	4
38322	(mSherlock.dispatchKeyEvent(event))	4
38355	(mSherlock.dispatchMenuOpened(featureId,menu))	4
44834	(mShortcutAlphabeticChar	4
44335	(mShortcutNumericChar	4
44089	(mShortcutView.getVisibility()	4
43605	(mShortcutsVisible	4
46846	(mShouldStartAnimationDrawable	4
44494	(mShowAsAction	4
49185	(mShowDefaultActivity	4
46829	(mShowDividers	4
49518	(mShowFooterView	4
49418	(mShowFooterView)	4
39998	(mShowHideAnimationEnabled)	4
60230	(mSkipNextReportTypeSelectedRun){	3
57072	(mSlidingPaneLayout.isOpen())	3
53500	(mSlotTagAttribute.equals(GncXmlHelper.ATTR_VALUE_NUMERIC))	2
60206	(mSmallestFraction	3
36460	(mSmallestFraction)	9
28591	(mSolo)	8
34175	(mSolo.waitForText(dismissDialog)){	10
54727	(mSolo.waitForText(dismissDialog,1,1000)){	7
40764	(mSortedNodes.size()	4
45311	(mSpinner	7
45561	(mSpinner.getAdapter()	4
7528	(mSplit.getValue().equals(	3
45653	(mSplitActionBar	4
45580	(mSplitBackground	4
35708	(mSplitList.size()	2
32020	(mSplitQuantity	21
59436	(mSplitType	6
40316	(mSplitView	10
45317	(mSplitWhenNarrow)	4
33417	(mSplitsList	9
36599	(mSplitsList.get(0).getAccountUID().equals(mAccountUID)	8
31340	(mSplitsList.isEmpty())	27
11506	(mSplitsList.size()	60
45564	(mStackedBackground	5
53458	(mStartDate	2
40660	(mStartDelay	10
43162	(mStrictWidthLimit)	4
44802	(mSubMenu	4
47830	(mSubUiVisibilityListener	4
50009	(mSubmitButton.getVisibility()	5
50604	(mSubmitButtonEnabled	5
44943	(mSubtitle	4
45258	(mSubtitleStyleRes	4
45590	(mSubtitleView	4
49304	(mSuggestionsAdapter	10
48167	(mTabClickListener	4
45215	(mTabContainer	4
48125	(mTabLayout.getMeasuredWidth()	4
13214	(mTabLayout.getTabCount()	15
40182	(mTabScrollView	11
48130	(mTabSelector	4
47638	(mTabSpinner	4
47845	(mTabSpinner.getAdapter()	4
41189	(mTarget	4
59587	(mTargetFilepath	2
47578	(mTempAdapter	4
53499	(mTemplateAccountUID	2
43535	(mTextAppearance	4
48034	(mTextView	4
40243	(mThemedContext	4
24879	(mTimePeriod	6
24939	(mTimePeriod)	6
45088	(mTitle	4
45648	(mTitleLayout	7
45591	(mTitleLayout.getParent()	4
45360	(mTitleStyleRes	4
38950	(mTitleView	11
43807	(mTitleView.getVisibility()	4
19823	(mTotalFrequency	11
32314	(mTotalPercentageMode)	7
1461	(mTransaction	83
20534	(mTransaction.getRecurrencePeriod()	16
29215	(mTransaction.getSplits().size()	7
20968	(mTransaction.isTemplate())	4
59631	(mTransactionIds	4
23584	(mTransactionTypeButton.isChecked()	6
54869	(mTransactionTypeButton.isChecked()){	5
63000	(mTransactionTypeSwitch.getVisibility()	4
1245	(mTransactionUID	3
13281	(mTransactionsActivity	5
59154	(mTransactionsDbAdapter.deleteRecord(id))	4
18337	(mTransactionsDbAdapter.deleteRecord(id)){	19
5978	(mTransactionsDbAdapter.getTemplateTransactionsCount()	2
42807	(mTranslationX	4
42808	(mTranslationY	4
44269	(mTreeObserver	4
13265	(mTypeButton.isChecked())	4
33916	(mUID	3
39843	(mUiOptions	4
46902	(mUiThreadId	4
46230	(mUpView.getVisibility()	4
42243	(mUpdateListeners	7
42215	(mUpdateListeners.size()	4
50000	(mUrlColor	5
1499	(mUseAccountColor)	27
63926	(mUseCompactView)	4
13495	(mUseDoubleEntry	63
2120	(mUseDoubleEntry)	53
12135	(mUseDoubleEntry){	24
46939	(mUseLargestChild)	5
32440	(mValue){	3
23661	(mValueDenom	7
41837	(mValueType	4
41397	(mValueType.equals(Double.class))	4
41325	(mValueType.equals(Float.class))	4
41368	(mValueType.equals(Integer.class))	4
41328	(mValues	11
21387	(mViewPager.getCurrentItem())	4
21396	(mViewPager.getCurrentItem()){	7
45355	(mVisibilityAnim	9
50206	(mVoiceButtonEnabled	5
49364	(mVoiceButtonEnabled)	5
4969	(mWakeLock.isHeld())	5
39449	(mWasHiddenBeforeMode)	4
7079	(mainAccountType.getNormalBalanceType()	5
52534	(maintain	6
58528	(manually	2
54572	(mapFullName.get(acc.getParentUID())	8
3054	(mapFullName.get(account.getUID())	11
40004	(markHiddenBeforeMode)	4
12659	(matcher.find()){	5
47396	(max	4
42558	(maxActions	4
48821	(maxActivityCount	4
49463	(maxWidth	5
46441	(measure)	4
43975	(measuredWidth	4
31382	(memo	8
43388	(menu	12
48546	(menuState.itemActionProvider	4
43866	(menuView	4
44060	(metaState	4
42702	(midy	4
44107	(minCellsItemCount	4
36248	(minimum)	6
39316	(mode	9
39363	(mode)	8
39541	(mode.dispatchOnCreate())	4
14213	(modelList.isEmpty())	9
47328	(modifying	4
32906	(mostCurrencyAppearance	8
41791	(msg.what)	4
19105	(nRow	15
18678	(name	19
26230	(name.length()	9
18685	(nameChanged	7
63419	(nameCount	4
44795	(nativeItem	4
44275	(nativeProvider	4
23656	(ne	5
47213	(needUpdate)	4
43756	(needsExpansion)	4
44998	(needsInvalidate)	4
46246	(needsMeasuring)	4
14226	(new	16
60626	(newCursor	3
38674	(newMenus	4
63580	(newParentAccountID	4
18880	(newParentAccountId	9
62580	(newParentAccountUID	5
24173	(newParentUID	10
46042	(newPos	4
49879	(newQuery	5
63114	(newTransactionFragment	2
30647	(newTransactionsFragment	16
20966	(newValue	10
43984	(newVisibility	4
46073	(next	4
40627	(nextFraction	4
41059	(nextKeyframe.getFraction()	8
54050	(nextRunTime	7
40363	(nextValue	4
18240	(no	9
47149	(noInputMethod)	4
41079	(node	4
40823	(node.animation.isRunning())	4
40445	(node.dependencies	4
41014	(node.nodeDependencies	4
41076	(node.nodeDependencies.size()	4
27916	(non	5
44388	(nonActionItem.hasSubMenu())	4
44496	(nonActionItem.isExclusiveCheckable())	4
44909	(nonActionItems	4
24988	(not	52
41381	(note	5
9783	(note)	11
24641	(notes	13
42304	(null	8
23849	(num1	5
41461	(numKeyframes	5
42170	(numReadyAnims	4
54039	(numberOfAccounts	2
33258	(numerator	15
48649	(numeric	4
48777	(numeric)	4
36357	(o	8
26329	(obj	9
62150	(object	3
63120	(ocCheckBox	3
52790	(offset	8
8994	(old	6
58382	(old)"	6
61938	(oldAdapter	3
59363	(oldBackupFolder.delete())	2
14065	(oldBackupFolder.exists()){	7
60494	(oldCursor	4
49032	(oldDataModel	5
49380	(oldDefaultActivity	4
59424	(oldExportFolder.exists()){	2
44910	(oldFlags	4
40912	(oldListeners	4
40262	(oldMode)	8
45426	(oldParent	4
63572	(oldParentAccountId	4
41459	(oldTarget	4
42392	(oldValues	4
18481	(oldVersion	55
61722	(oldVersion+1),SQLiteDatabase.class)	3
6943	(omitXmlDeclaration)	14
52772	(on	13
38716	(onOptionsItemSelected(item))	4
52111	(one	14
47827	(only	4
45143	(options	4
37620	(or	35
48716	(order	4
24128	(orderBy	12
46704	(orientation	4
46728	(orientation)	5
49506	(other.activity	4
26476	(other.mAmount	3
26288	(other.mCurrency	3
43904	(otherCompoundButton.getVisibility()	4
24969	(otherSlice	8
33407	(out	15
6530	(outChannel	15
43180	(outSpecificItems	13
39921	(outValue.resourceId	4
43763	(p	8
43901	(p.isOverflowButton)	4
45030	(paddedViewHeight	4
62236	(page.isRequired()	3
62184	(page.isRequired())	3
51556	(params.getExportFormat()	4
55460	(params.getExportTarget()	2
43900	(parcel	4
3968	(parent	23
42851	(parent.getChildAt(childIndex)	4
3032	(parentAccount	7
56904	(parentAccount.getAccountType()	9
3264	(parentAccountFullName	13
24174	(parentAccountFullName.length()	5
5762	(parentAccountId	23
3969	(parentAccountUID	46
58534	(parentEquity.length()	2
7788	(parentUID	13
1312	(parsePosition.getIndex()	6
23652	(parsed	2
48758	(parser	4
23697	(parts.length	4
57613	(pass.equals(passCode))	3
984	(pass.equals(passcode))	7
1766	(pass.length()	5
1481	(passcode.equals(pass))	9
50791	(path	5
22417	(ped	5
42144	(pendingAnimations.size()	4
58751	(pendingIntent	9
19319	(period	5
8452	(period/	5
32407	(period/(2*RecurrenceParser.WEEK_MILLIS))	4
8622	(period/RecurrenceParser.DAY_MILLIS)	10
34857	(period/RecurrenceParser.HOUR_MILLIS)	2
8200	(period/RecurrenceParser.MONTH_MILLIS)	10
8144	(period/RecurrenceParser.WEEK_MILLIS)	10
9695	(period/RecurrenceParser.YEAR_MILLIS)	9
8408	(periodEnd	8
51746	(periodType	5
32309	(periodType)	5
32346	(periodType){	4
28595	(permStatus	3
24837	(pieData	11
42433	(popup	4
47403	(popupBackground	4
4123	(pos	4
763	(position	53
6660	(position)	18
973	(position){	45
44237	(positionType	8
43439	(possibleItem	4
56500	(precision)	10
51597	(pref	7
51527	(preference	9
57213	(preference.getKey().equals(getString(R.string.key_default_currency))){	22
59455	(preference.getKey().equals(getString(R.string.key_default_export_email))){	7
52301	(preference.getKey().equals(getString(R.string.key_default_export_format))){	3
1223	(preference.getKey().equals(getString(R.string.key_enable_passcode)))	17
30922	(preference.getKey().equals(getString(R.string.key_import_accounts))){	6
63510	(preference.getKey().equals(getString(R.string.key_report_currency)))	5
1833	(preference.getKey().equals(getString(R.string.key_use_account_color)))	9
1082	(preference.getKey().equals(getString(R.string.key_use_double_entry))){	16
13861	(prefs.getBoolean(UxArgument.ENABLED_PASSCODE,false)	6
43716	(presenter	7
44101	(presenterStates	4
19089	(preserveOpeningBalances)	29
27707	(pressedOrFocused)	3
29741	(prev	20
47397	(prevHeightWithoutPartialChild	4
51305	(previousAccountId	3
12910	(price.first	17
14056	(price.getSource()	12
14318	(price.getType()	7
24039	(priceCount	12
58587	(pricePair.first	6
22829	(prima	6
26863	(primaryCode)	14
39369	(progress	8
18814	(progressDialog	12
47437	(progressDrawable	4
9707	(project.hasProperty("RELEASE_DROPBOX_APP_KEY")){	21
23303	(project.hasProperty("RELEASE_STORE_FILE")){	16
10599	(projectedAmount.asDouble()	4
41224	(property	8
41906	(propertyMap	6
41975	(propertyName	4
42325	(provider	8
43097	(proxy	4
48881	(pruneCount	4
17293	(przed	13
61999	(purely	3
32960	(q.charAt(0)	6
61603	(qName.equals(TAG_CURRENCY))	3
53434	(qualifiedName)	4
63906	(qualifiedName){	2
19896	(qualifiedName.equals(GncXmlHelper.TAG_RX_MULT)){	7
19456	(qualifiedName.equals(GncXmlHelper.TAG_RX_PERIOD_TYPE)){	7
2559	(qualifiedName.equals(GncXmlHelper.TAG_SCHEDULED_ACTION)){	5
19841	(qualifiedName.equals(GncXmlHelper.TAG_SX_ENABLED)){	7
32360	(qualifiedName.equals(GncXmlHelper.TAG_SX_ID)){	6
32133	(qualifiedName.equals(GncXmlHelper.TAG_SX_NAME)){	6
19535	(qualifiedName.equals(GncXmlHelper.TAG_SX_NUM_OCCUR)){	7
3822	(qualifiedName.equals(GncXmlHelper.TAG_SX_TEMPL_ACTION)){	5
32255	(qualifiedName.equals(GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS)){	4
2821	(qualifiedName.equals(GncXmlHelper.TAG_TRN_SPLIT)){	13
35760	(qualifiedName.equals(GncXmlHelper.TAG_TRX_SPLIT)){	4
63905	(qualifiedName.equals(mIgnoreElement))	2
30547	(qualifiedName.equalsIgnoreCase("cmdty:space")){	7
31268	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_ACCOUNT))	7
3910	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_ACCOUNT)){	13
31793	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_ACCT_ID)){	8
31757	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_COMMODITY_ID)){	7
31487	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_COMMODITY_SPACE)){	8
20142	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_DATE)){	15
32249	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_DATE_ENTERED)){	3
2037	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_DATE_POSTED)){	10
1812	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_NAME))	6
3903	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_PARENT_UID)){	10
20511	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_RECURRENCE_PERIOD)){	11
32384	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SCHEDULED_ACTION)){	3
31915	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SLOT_KEY)){	12
31082	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SLOT_VALUE)){	17
31535	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SPLIT_ACCOUNT)){	10
20165	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SPLIT_ID)){	11
31976	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SPLIT_MEMO)){	10
31808	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SPLIT_VALUE)){	10
32367	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SX_END)){	3
32447	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SX_LAST)){	3
32330	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_SX_START)){	3
1507	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_TEMPLATE_TRANSACTION))	7
32064	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS))	3
3887	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_TRANSACTION)){	22
20337	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_TRN_DESCRIPTION)){	11
31280	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_TRN_SPLIT)){	8
35615	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_TRX_DESCRIPTION)){	4
31916	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_TRX_ID)){	7
35606	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_TRX_SPLIT)){	5
31965	(qualifiedName.equalsIgnoreCase(GncXmlHelper.TAG_TYPE)){	8
30624	(qualifiedName.equalsIgnoreCase(TAG_ACCOUNT))	6
18692	(qualifiedName.equalsIgnoreCase(TAG_ACCOUNT)){	12
36020	(qualifiedName.equalsIgnoreCase(TAG_COMMODITY_SPACE)){	5
3762	(qualifiedName.equalsIgnoreCase(TAG_CURRENCY)){	15
30568	(qualifiedName.equalsIgnoreCase(TAG_NAME))	6
30535	(qualifiedName.equalsIgnoreCase(TAG_PARENT_UID)){	9
28498	(qualifiedName.equalsIgnoreCase(TAG_SLOT_KEY)){	5
18799	(qualifiedName.equalsIgnoreCase(TAG_SLOT_VALUE)){	11
30660	(qualifiedName.equalsIgnoreCase(TAG_TYPE)){	6
30512	(qualifiedName.equalsIgnoreCase(TAG_UID)){	6
445	(qualifiedName.equalsIgnoreCase(mIgnoreElement))	4
31190	(qualifiedName.toLowerCase()){	10
57172	(quantity_denom	9
57157	(quantity_denom)	4
49039	(query	9
28052	(quotidiane,settimanali,mensili)\n	5
23988	(quotidien,hebdomadaire,mensuel)\n	5
43448	(qwerty	4
23883	(r	9
42737	(r.bottom	4
54482	(r.length()	4
42363	(r.right	4
62196	(recalculateCutOffPage())	3
6900	(recentTxCursor.moveToNext()){	11
2356	(recomendado).	41
11960	(recommand).	11
25389	(recommended)	3
4482	(recommended).	67
15641	(recommended).-No	1
23150	(reconcileDate	5
33708	(recur	5
52345	(recurrence	7
8280	(recurrence.getByDay()	10
14210	(recurrence.getPeriodEnd()	4
18220	(recurrenceIndex	10
18378	(recurrencePeriod	11
34216	(reenter)	6
28705	(reflectivelyDisableAnimation(DEFAULT))	3
57674	(reflectivelyDisableAnimation(DISABLED))	2
40049	(removedTab	4
32191	(reportType	3
35607	(representing	9
25313	(requestCode	18
21244	(requestCode)	33
3951	(requestCode){	42
32449	(requiresAccountTypeOptions())	6
32424	(requiresTimeRangeOptions())	6
46665	(resID	4
44405	(resId	9
7401	(result	21
48950	(result)	12
52469	(result){	2
43808	(result.gravity	4
1711	(resultCode	95
60432	(results.values	3
46930	(returnedHeight	4
43529	(right	4
40550	(root.nodeDependents	4
24596	(rootAccount	15
13280	(rootAccountUID	20
40404	(roots.size()	4
27199	(rowElements	3
6780	(rowId	50
50704	(rowInserted	15
27419	(rowNumber	6
26640	(rowsAffected	4
51391	(rpd	5
54848	(s.charAt(0)	9
14618	(s.length()	13
60684	(s.toString().length()	6
44040	(sCategoryToOrder[index]	4
9128	(sDbxClient	2
6265	(sDefaultZero	11
6514	(sLastTitleColor	7
44419	(sPrependShortcutLabel	4
49585	(sRegistryLock)	4
42366	(sY	4
64176	(sameDay)	3
55521	(sameSelected){	2
27820	(sat1	3
42521	(saved.openSubMenuId	4
38916	(savedActionViewStates.size()	4
11125	(savedInstanceState	44
23794	(scale	25
50621	(scheduledAction.computeNextScheduledExecutionTime()	8
50793	(scheduledAction.computeNextTimeBasedScheduledExecutionTime()	4
25737	(scheduledAction.getActionType()	6
32351	(scheduledAction.getActionType()){	17
25494	(scheduledAction.getEndTime()	12
6085	(scheduledAction.getExecutionCount()	16
25511	(scheduledAction.getLastRun()	5
53559	(scheduledAction.getLastRunTime()	2
59939	(scheduledAction.getStartTime()	8
25502	(scheduledAction.getTotalFrequency()	6
60046	(scheduledAction.getTotalPlannedExecutionCount()	3
19543	(scheduledActionUID	19
51485	(scheduledBackup	5
30725	(scheduledEvent.getEventType()){	4
33673	(scheduledEvent.getExecutionCount()	3
18829	(scheduledEvent.getPeriod()	4
59730	(scheduledEvent.period*eventRecurrence.count)	2
14078	(schedxAction.getTag()	18
47288	(scrollState	4
47586	(scrollable)	4
50460	(searchable.getVoiceLanguageId()	5
50432	(searchable.getVoiceLanguageModeId()	5
50060	(searchable.getVoiceMaxResults()	5
49671	(searchable.getVoicePromptTextId()	5
50231	(searchable.getVoiceSearchLaunchRecognizer())	5
50124	(searchable.getVoiceSearchLaunchWebSearch())	5
22592	(sebelum	7
47040	(secondaryProgress	4
25807	(see	34
46486	(selectablePos	4
39463	(selected	4
27585	(selected)	3
45850	(selectedPosition	4
40186	(selectedTabPosition	4
46038	(selectedView	4
33204	(selection	7
33222	(series.getValue(i)	3
37892	(set	8
6826	(set.getYValueSum()	13
39524	(setSelected)	8
45011	(setUp)	4
44487	(setVisibleInt(shown))	4
42225	(setterOrGetter	4
34705	(setting	10
37096	(share	5
23869	(sharedPreferences.getBoolean(UxArgument.ENABLED_PASSCODE,false)	11
39156	(sherlockItem	4
44259	(shortcut	4
44346	(shortcut)	4
43625	(shortcutChar	4
48588	(shortcutString	4
35539	(should	9
9595	(shouldDisplayBalance)	4
43956	(shouldIncludeItem(childIndex,item))	4
52082	(shouldShowRequestPermissionRationale(Manifest.permission.WRITE_EXTERNAL_STORAGE)){	5
47022	(showDividers	4
43570	(showShortcut	4
45019	(showTitle)	4
44406	(shown	4
35935	(sign.equals("+")	5
63878	(single-book)	2
27262	(size	7
64171	(slotKey	2
36381	(smallestFraction	9
39604	(smallestWidthDp	4
42309	(specified	4
21844	(spesielle	10
11236	(split	41
31192	(split.getAccountUID().equals(accountUID)	5
31355	(split.getAccountUID().equals(accountUID))	5
31453	(split.getAccountUID().equals(accountUID)){	15
11017	(split.getAccountUID().equals(mAccountUID))	5
31285	(split.getAccountUID().equals(mAccountUID)){	20
61826	(split.getAmount().asBigDecimal().compareTo(biggestAmount.asBigDecimal())	5
35886	(split.getAmount().compareTo(biggestAmount)	4
14414	(split.getMemo()	12
5929	(split.getType()	41
61807	(split.getValue().asBigDecimal().compareTo(biggestAmount.asBigDecimal())	3
10528	(split.getValue().getCommodity().getCurrencyCode().equals(accountCurrencyCode)){	2
10577	(split.getValue().getCurrency()	7
51294	(splitAccountUID	4
39721	(splitActionBar)	8
31197	(splitList.size()	8
57721	(splitMemo	3
33437	(splitStrings	9
59304	(splitType	2
39521	(splitView	4
39571	(splitWhenNarrow)	4
35872	(splits	2
34663	(splits.size()	7
51545	(src.isDirectory()	3
14151	(src.isDirectory())	7
14158	(src.isDirectory()){	11
55324	(srcDir.listFiles()	2
46064	(ss.selectedId	4
44087	(start	4
25734	(start,end	7
50878	(startTime	4
7781	(startTime.toDateTime().getMillis()	5
21108	(startTimestamp	24
24012	(starting	10
27829	(state	12
45541	(state.expandedMenuItemId	4
45014	(state.isOverflowOpen)	4
43575	(states	4
35231	(still	3
14135	(stmt	4
50750	(stream	5
31630	(stringAmount.isEmpty())	7
56893	(stripped.length()	3
43320	(structureChanged)	4
38943	(stub	4
44676	(sub)menu	4
19472	(subAccountCount	22
19738	(subAccountsListFragment	10
18946	(subBalance.getCurrency().equals(balance.getCurrency())){	9
44902	(subItem.isExclusiveCheckable())	4
44002	(subMenu	4
44850	(subMenu.hasVisibleItems())	4
44707	(subPopup.tryShow())	4
49301	(submit	5
40774	(such	20
53594	(sum	5
30488	(sum.isNegative())	9
19058	(sumCursor	8
26821	(sumCursor.moveToFirst())	5
63077	(super.equals(split))	4
46086	(super.onRequestSendAccessibilityEvent(child,event))	4
42407	(super.performClick())	4
41920	(supplied	4
19030	(support	7
32931	(swapped)	5
26707	(t.getDoubleEntryAccountUID().equals(account.getUID())){	4
45614	(tabView	4
33600	(tag	8
48618	(tagName.equals(XML_GROUP))	4
48598	(tagName.equals(XML_ITEM))	4
48750	(tagName.equals(XML_MENU))	4
39083	(targetThemeRes	8
9400	(task.name.startsWith('assembleBetaDebugAndroidTest')){	6
8985	(task.name.startsWith('assembleDevelopmentDebugAndroidTest')){	6
8973	(task.name.startsWith('assembleProductionDebugAndroidTest')){	6
28335	(task.name.startsWith('connectedAndroidTest'))	3
25677	(templateTransaction.getUID().equals(actionUID)){	2
49842	(testIntent	5
47916	(text	4
43333	(text)	4
49695	(text2	5
37248	(that	9
1815	(the	368
41685	(these	4
26424	(this	24
7802	(this)	20
26972	(this){	7
27714	(this.mDisplayMode){	5
4304	(thousandths	4
30554	(through	12
3912	(time	17
41409	(time/value	4
55095	(timeMillis	3
32245	(timeRangeLayout	11
34158	(timeString	11
44176	(title	8
21380	(title.equals(getString(R.string.wizard_title_account_setup))){	6
21373	(title.equals(getString(R.string.wizard_title_default_currency))){	6
21675	(title.equals(getString(R.string.wizard_title_feedback_options))){	6
21912	(title.equals(getString(R.string.wizard_title_select_currency))){	6
44356	(titleRes	4
40516	(tmpListeners	4
48600	(to	4
39740	(toActionMode)	4
3223	(tokens.length	21
43850	(top	4
25053	(top-level	11
59381	(topLevel	2
42708	(topSubMenu.getParentMenu()	4
50945	(totalPlannedExecutions	11
39808	(trans	4
54516	(transAccID	3
34512	(transaction.getAccountUID()	5
13969	(transaction.getDescription().equals("Power	12
63240	(transaction.getModifiedTimestamp().before(exportStartTime))	6
36481	(transaction.getName().equals("Power	5
1391	(transaction.getNote()	6
20473	(transaction.getRecurrencePeriod()	9
1874	(transaction.getScheduledActionUID()	38
1445	(transaction.getSplits().get(0).isPairOf(transaction.getSplits().get(1)))	6
33786	(transaction.getSplits().get(0).isPairOf(transaction.getSplits().get(1))){	5
2032	(transaction.getSplits().size()	18
26349	(transaction.getType()	7
26808	(transaction.isExported()	3
21145	(transaction.isTemplate())	21
14277	(transactionId	23
50928	(transactionTime	11
59185	(transactionTime.compareTo(today.minusDays(1))	4
59141	(transactionTime.getYear()	4
24190	(transactionType)	7
13551	(transactionUID	29
12727	(transactions)	18
27847	(transactionsCursor	14
20360	(transactionsCursor.moveToNext())	4
31349	(transactionsCursor.moveToNext()){	9
19838	(transactionsListFragment	14
6550	(transferAccountUID	11
44675	(true)	15
43771	(true),	4
26881	(trx.getType()	4
5912	(trxType.equals("CREDIT")	21
45825	(tv.type	4
23692	(type	10
64219	(type)	3
26708	(type){	8
7285	(typePref.equals("CREDIT")){	13
31542	(typically	17
39959	(uiOptions	4
11440	(uid	52
41940	(unlike	4
44199	(until	4
44128	(updateChildrenOnMenuViews)	4
13651	(updateMethod)	6
53325	(upgraded)	2
19610	(use	9
62002	(useDoubleEntry	6
20743	(useSgmlHeader){	6
6876	(useXmlHeader){	20
55316	(usually	3
29187	(v	51
43943	(v.getVisibility()	5
40514	(v1	8
60376	(val	3
27631	(val1	3
32970	(value	23
33491	(value)	6
54835	(value.length()	6
12300	(valueNum	4
41242	(valueType	4
42156	(values	4
33066	(values.get(i).getVal()	3
34270	(values.get(j-1).getVal()	2
42030	(valuesHolder	4
55640	(vedi	2
55756	(ver	4
46963	(verifyDrawable(dr))	4
47637	(verticalOffset	4
45091	(vgravity)	4
43309	(view	33
32807	(view.getId()){	24
45972	(view.getLayoutParams()	4
2085	(view.isShown())	11
53937	(viewHolder.amountEditText.getError()	6
54168	(viewHolder.budgetAccountSpinner.getCount()	6
31990	(viewHolder.quantity	11
59311	(viewHolder.splitAmountEditText.getError()	3
56649	(viewHolder.splitAmountEditText.getText().length()	7
31737	(viewHolder.splitAmountEditText.getText().toString().isEmpty())	7
59305	(viewHolder.splitAmountEditText.getValue()	7
24750	(viewHolder.splitTypeSwitch.isChecked())	9
60370	(viewLength	3
44071	(viewStates	4
48956	(viewTreeObserver.isAlive())	5
39744	(views	4
50014	(views.mIcon1	5
50013	(views.mIcon2	5
49720	(views.mText1	5
49721	(views.mText2	5
42473	(visibility	17
42985	(visible	4
50400	(visible)	5
45455	(visibleChildren	4
47324	(w	4
39296	(wActionBar	8
40093	(wActionBar.getTitle()	4
39215	(wActionBar.getVisibility()	4
64342	(wActionBar.isOverflowMenuShowing())	1
44075	(wasFormatted	4
25688	(we	30
24085	(where	17
8720	(which	88
47270	(who	4
46159	(width	8
40143	(widthDp	4
42369	(widthMode	16
46399	(widthMode)	9
20687	(will	17
3173	(with	40
48413	(within	4
36036	(without	18
50728	(wizardModel	4
44877	(wrapped	4
56807	(writer	5
47317	(x	12
17856	(zalecane).	23
40419	({@link	4
2044	)	371
11463	)"	48
14624	)")	29
3512	)",	32
1135	))	19
18518	))"	11
28953	)).perform(click()).check(matches(withText(R.string.label_spend)))	2
21661	),	26
41179	),you	4
30358	).	27
25305	).create().show()	6
61854	).getMonths()	12
29740	).show()	3
9449	).start()	18
28041	)\n	21
5603	){	13
1675	){1,2	13
1092	){2	3
2147	*	400
62325	*****************	3
52651	******************	6
62351	*******************	3
56555	************************	13
35366	**********************************************************************************************************/	3
63889	*-	1
1904	*/	396
46008	*/))	4
64351	*/+	1
63901	*/-	1
19312	*/package	7
50270	*/void	5
33433	*</p>	7
47622	*<p>	4
1898	*=	12
35547	*not*	2
25254	*now*	9
37353	*or*	5
42968	*should*	4
47068	*using	4
40	+	445
57595	+"'	11
51349	+")	6
55441	+")"	3
25528	+"-"+	6
19644	+*	8
64353	+**	1
58933	+**/	2
7652	+*/	41
18889	++	32
8163	++count	5
25486	++generatedTransactionCount	5
20052	++i	15
40543	++i)	21
40639	++j)	4
50912	++position	3
10308	+-	30
10108	+-->	197
55792	+-Adicionada	2
56391	+-Se	2
10261	+-Support	3
2214	+/*	191
33884	+/*")	3
1810	+/**	181
30	+//	169
303	+//TODO:	3
35210	+//def	2
35982	+//make	3
36689	+//todo:	4
34807	+//use	2
7605	+0200"))	5
8379	+0200</ts:date>	8
63892	+0200</ts:date>+	1
47823	+1	5
26324	+1-617-542-2652	18
26233	+1-617-542-5942	18
7647	+<!--	210
64325	+<!--+	1
14456	+<!--Generated	41
56936	+</FrameLayout>	8
56608	+</Keyboard>	8
18368	+</LinearLayout>	60
2131	+</PreferenceScreen>	26
62601	+</RadioGroup>	2
25952	+</RelativeLayout>	28
27107	+</ScrollView>	10
31529	+</TableLayout>	3
21851	+</TableRow>	6
670	+</android.support.design.widget.CoordinatorLayout>	3
26915	+</android.support.v4.widget.DrawerLayout>	14
57036	+</android.support.v4.widget.SlidingPaneLayout>	3
24614	+</android.support.v7.widget.CardView>	18
55162	+</android.support.v7.widget.Toolbar>	3
56847	+</appwidget-provider>	1
8666	+</book:slots>	8
57852	+</currencylist>	6
8667	+</gnc-v2>	8
7396	+</gnc:account>	8
8018	+</gnc:book>	8
7629	+</gnc:commodity>	8
8637	+</gnc:pricedb>	3
8113	+</gnc:schedxaction>	4
8212	+</gnc:template-transactions>	4
7421	+</gnc:transaction>	8
53878	+</layer-list>	2
57733	+</manifest>	2
19687	+</menu>	32
27461	+</merge>	3
35369	+</org.gnucash.android.ui.util.CheckableLinearLayout>	4
62280	+</org.gnucash.android.ui.util.widget.CheckableLinearLayout>	3
33090	+</org.gnucash.android.util.CheckableLinearLayout>	3
10117	+</paths>	2
64323	+</preference-headers>	1
30965	+</project>	6
6175	+</resources>	134
23711	+</selector>	13
64383	+</shape>	1
10824	+</string>	11
539	+<?xml	216
27624	+<CheckBox	3
62203	+<CheckedTextView	5
56909	+<FrameLayout	8
56609	+<Keyboard	8
18061	+<LinearLayout	59
1033	+<PreferenceScreen	27
63513	+<ProgressBar	4
62611	+<RadioGroup	2
25916	+<RelativeLayout	28
27363	+<ScrollView	10
31664	+<TableLayout	3
21422	+<TableRow	6
29891	+<TextView	13
35329	+<View	2
419	+<android.support.design.widget.CoordinatorLayout	3
26715	+<android.support.v4.widget.DrawerLayout	11
57095	+<android.support.v4.widget.SlidingPaneLayout	3
24890	+<android.support.v7.widget.CardView	18
54618	+<android.support.v7.widget.Toolbar	6
56878	+<appwidget-provider	1
7760	+<book:id	8
7920	+<book:slots>	8
61391	+<currencylist>	3
7511	+<gnc-v2	8
7566	+<gnc:account	8
8016	+<gnc:book	8
8187	+<gnc:commodity	8
8000	+<gnc:count-data	8
7994	+<gnc:pricedb	3
8665	+<gnc:schedxaction	4
8714	+<gnc:template-transactions>	4
7634	+<gnc:transaction	8
56728	+<item>BMD</item>	1
51317	+<item>KRW</item>	1
60244	+<item>WIR	1
53846	+<layer-list	2
28309	+<manifest	8
20027	+<menu	34
27305	+<merge	3
35325	+<org.gnucash.android.ui.util.CheckableLinearLayout	7
62266	+<org.gnucash.android.ui.util.widget.CheckableLinearLayout	3
33224	+<org.gnucash.android.util.CheckableLinearLayout	3
9745	+<paths	2
64324	+<preference-headers	1
30881	+<project	10
14306	+<resources	76
23634	+<resources>	58
23567	+<selector	9
27541	+<shape	4
206	+=	152
7537	+@Config(constants	39
62279	+@Deprecated	3
36608	+@FixMethodOrder(MethodSorters.NAME_ASCENDING)	7
50666	+@Implements(Crashlytics.class)	1
51877	+@Implements(UserVoice.class)	3
28519	+@RunWith(AndroidJUnit4.class)	18
7636	+@RunWith(GnucashTestRunner.class)	30
30817	+@RunWith(RobolectricGradleTestRunner.class)	3
56542	+@SuppressWarnings("deprecation")	4
61781	+@SuppressWarnings("unused")	3
63188	+@TargetApi(11)	6
34766	+Aucune	2
30254	+Copyright	31
15428	+Este	8
15203	+Ingen	4
58626	+Konto	2
57053	+Layout	3
30317	+Licensed	23
4971	+Nenhuma	3
20623	+Neste	11
14900	+No	21
30305	+See	27
63506	+This	4
30185	+Unless	23
30419	+WITHOUT	23
30219	+You	23
59136	+\n</string>	4
17571	+adne	9
28312	+afterEvaluate	2
64259	+allprojects	1
64258	+android	1
36853	+android.library.reference.1=gen-external-apklibs/com.actionbarsherlock_actionbarsherlock_4.2.0	4
12103	+android.productFlavors.all	3
63107	+android:layout_height="match_parent">	3
63194	+android:layout_width="match_parent"	3
63113	+android:orientation="vertical"	3
9922	+apply	6
64260	+buildscript	1
60629	+class	4
3544	+def	131
64264	+dependencies	1
30445	+distributed	23
62656	+format	2
30340	+http://www.apache.org/licenses/LICENSE-2.0	23
1071	+import	324
64252	+include	1
30438	+limitations	23
51933	+muligheten	4
1352	+package	206
635	+public	248
63158	+repositories{	3
57727	+task	2
57732	+tasks.whenTaskAdded	2
62489	+ve	3
30276	+you	23
61975	+{@code	3
2323	,	318
654	,"	122
14326	,"))	2
14093	,",mColumns)	2
30032	,"trans_acct_balance	5
21477	,'",accountTypes)	3
18607	,'",accountUIDList)	14
62291	,'",accountUIDs)	3
64196	,'",accountsListLevel)	6
56549	,'",splitUIDs)	7
52311	,''	13
56605	,'BANK','ASSET','EXPENSE','RECEIVABLE','STOCK','MUTUAL'	12
52337	,(	11
3206	,0)	34
31462	,0x23)	9
13685	,100)	18
33854	,2	14
31599	,200)	5
25914	,500)	10
39527	,<code>cancel()</code>	4
14141	,?	49
14647	,?)")	30
14566	,?,?	20
14466	,?,?)")	5
21654	,AccountsActivity.PERMISSION_REQUEST_WRITE_SD_CARD)	6
21410	,AccountsActivity.REQUEST_PERMISSION_WRITE_SD_CARD)	5
63459	,BookEntry.COLUMN_ACTIVE	4
32775	,COUNT	12
57560	,DELAY)	2
30202	,DatabaseHelper.KEY_PARENT_ACCOUNT_UID	8
3620	,DatabaseSchema.SplitEntry.COLUMN_ACCOUNT_UID,accountsDbAdapter.getUID(targetAccountId))	5
31313	,IOException	5
52103	,MAX	7
20514	,PERMISSION_REQUEST_WRITE_SD_CARD)	6
52787	,Press.FINGER)	11
21152	,REQUEST_PERMISSION_WRITE_SD_CARD)	5
52151	,SUBSTR	15
33846	,TOTAL	17
17986	,\n	9
47735	,a	4
52367	,accounts	10
56962	,after	6
41412	,and	14
40851	,because	4
40542	,but	4
62606	,columnKey,newValue)	2
47703	,combined	4
56908	,condition,null,null,null,	3
50071	,if	4
7645	,new	29
21656	,null)	22
24391	,null,	4
12120	,null,null,	13
24406	,null,null,AccountEntry.COLUMN_NAME	3
2640	,null,null,null)	68
46730	,or	8
56983	,orderBy)	11
59949	,ordinal:2</p>	3
34338	,otherwise	16
49183	,read	5
41593	,since	4
19555	,so	6
41977	,the	12
24563	,trans_extra_info	16
18783	,transactions	4
41761	,which	8
63075	,{@code	4
32153	,{@link	35
261	-	451
31132	-&gt	7
59708	-*	1
36808	-**	8
33829	-**/	2
25383	-*/	39
11160	--	31
2168	-->	320
27525	-->+	1
38397	--><item	5
55663	--Support	2
64290	--import	1
42025	--numAnims	4
25262	--short	4
1848	-/*	131
25068	-/*")	2
1757	-/**	103
1850	-//	168
62288	-//TODO:	3
9182	-//def	2
41166	-//import	4
13666	-//make	4
64242	-//todo:	3
35530	-//use	2
36859	-/>	4
64256	-0,0	1
1127	-1	235
3703	-1)	72
53614	-1)){	2
53424	-1){	2
57221	-1*/)	4
38973	-1,	4
451	-1,end	5
54857	-1.	3
57247	-1/*	4
47170	-1/*NO_POSITION*/)	4
48290	-1:	4
8192	-1</p>	4
45831	-2	4
21792	-200"	11
26719	-5:	18
59028	-80009596835057456L	2
264	-<!--	90
64338	-<!---/*	1
36634	-<!--Generated	4
27649	-</FrameLayout>	13
29550	-</LinearLayout>	23
1171	-</PreferenceScreen>	10
34129	-</RelativeLayout>	12
34716	-</ScrollView>	11
56709	-</TableLayout>	4
61863	-</android.support.v4.widget.DrawerLayout>	3
29485	-</android.support.v7.widget.CardView>	2
23145	-</android.support.v7.widget.Toolbar>	3
36763	-</com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout>	6
36840	-</com.actionbarsherlock.internal.view.menu.ActionMenuItemView>	4
37678	-</com.actionbarsherlock.internal.view.menu.ListMenuItemView>	4
37105	-</com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow>	4
37220	-</com.actionbarsherlock.internal.widget.IcsLinearLayout>	4
57892	-</currencylist>	3
3425	-</item>	34
36702	-</layer-list>	4
32669	-</manifest>	7
34791	-</org.gnucash.android.ui.util.CheckableLinearLayout>	9
63335	-</org.gnucash.android.util.CheckableLinearLayout>	2
29882	-</preference-headers>	2
19238	-</project>	5
4116	-</resources>	76
29502	-</selector>	10
36832	-</shape>	4
5652	-</string>	15
36745	-</transition>	4
36698	-</view>	4
409	-<?xml	89
37315	-<CheckBox	6
27727	-<FrameLayout	13
37685	-<ImageView	4
29582	-<LinearLayout	23
1255	-<PreferenceScreen	11
37485	-<RadioButton	4
34042	-<RelativeLayout	12
34513	-<ScrollView	11
56678	-<TableLayout	4
29612	-<TextView	16
61847	-<android.support.v4.widget.DrawerLayout	3
29588	-<android.support.v7.widget.CardView	2
23190	-<android.support.v7.widget.Toolbar	6
36796	-<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout	6
36821	-<com.actionbarsherlock.internal.view.menu.ActionMenuItemView	4
36737	-<com.actionbarsherlock.internal.view.menu.ActionMenuView	4
37053	-<com.actionbarsherlock.internal.view.menu.ListMenuItemView	4
37245	-<com.actionbarsherlock.internal.widget.ActionBarContextView	4
37249	-<com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow	4
36930	-<com.actionbarsherlock.internal.widget.IcsLinearLayout	6
36902	-<layer-list	4
28365	-<manifest	14
54390	-<menu	3
34813	-<org.gnucash.android.ui.util.CheckableLinearLayout	10
63299	-<org.gnucash.android.util.CheckableLinearLayout	2
29863	-<preference-headers	2
18963	-<project	9
15952	-<resources	22
15088	-<resources>	65
29529	-<selector	6
36847	-<shape	4
15007	-<string	1
36936	-<transition	4
36779	-<view	4
6475	-=	46
9410	->	54
38901	-@ActionBarSherlock.Implementation(api	7
51002	-@Config(constants	10
58546	-@Deprecated	2
46865	-@RemoteView	4
61731	-@RunWith(GnucashTestRunner.class)	3
51070	-@RunWith(RobolectricGradleTestRunner.class)	1
64404	-@RunWith(RobolectricTestRunner.class)	1
61769	-@SuppressWarnings("deprecation")	3
41399	-@SuppressWarnings("rawtypes")	6
41045	-@SuppressWarnings("unchecked")	5
41664	-@SuppressWarnings({"rawtypes","unchecked"	9
307	-@TargetApi(11)	14
63960	-AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext())	1
10451	-Aucune	3
33485	-Copyright	11
15970	-Este	3
16863	-Ingen	7
61881	-Licensed	3
64332	-Log.d(TAG,"Account	1
62432	-Nenhuma	3
33324	-Neste	5
4320	-No	40
61896	-See	3
22646	-Support	4
36892	-This	7
61920	-Unless	3
61940	-WITHOUT	3
61898	-You	3
25676	-\n</string>	3
17377	-adne	3
18887	-amount	10
33262	-amount_num	15
36724	-android.library.reference.1=../com_actionbarsherlock	4
60123	-apply	3
7116	-art</string>	8
9482	-beta${versionBuild	20
40517	-class	19
2307	-def	129
5826	-dev${versionBuild	23
61875	-distributed	3
34411	-e	11
37638	-enabled.	4
44096	-extraPixels	4
48194	-final	4
51888	-format	3
61913	-http://www.apache.org/licenses/LICENSE-2.0	3
88	-import	375
37343	-large	4
61937	-limitations	3
45217	-mClose.getWidth()	4
39621	-mContainerView.getHeight()))	4
39750	-mContainerView.getHeight(),0))	4
47960	-mTempRect.left	4
46815	-mTempRect.top	4
23513	-mValueDenom	6
23494	-mValueNum	7
51925	-muligheten	4
23356	-num1	5
1652	-package	146
54	-public	249
34366	-s	9
28294	-task	2
28358	-tasks.whenTaskAdded	2
36955	-the	7
62495	-ve	3
37196	-xlarge	4
61922	-you	3
61966	-{@code	3
357	.	232
2613	.${versionMinor	51
2450	.${versionPatch	51
23985	..	4
46692	...	4
12603	...</item>	10
18183	...</string>	13
38062	.</p>	14
5460	.</string>	146
23191	.</string>+	1
23284	.<br>	3
13033	.\n	53
17449	.\n-	31
5633	.\n\n	34
25428	.account"/>	2
51695	.addApi(Drive.API)	7
23957	.addCategory(Intent.CATEGORY_HOME)	5
51706	.addConnectionCallbacks(new	7
51901	.addInstrumentedClass(Crashlytics.class.getName())	5
51874	.addInstrumentedClass(UserVoice.class.getName())	5
51663	.addOnConnectionFailedListener(new	7
51620	.addScope(Drive.SCOPE_APPFOLDER)	7
51727	.addScope(Drive.SCOPE_FILE)	7
25264	.apk")	2
25399	.apk".replaceAll(":","-"))	3
26812	.append("	26
51869	.append("Imbalance-")	6
25782	.append(AccountsDbAdapter.getImbalanceAccountName(	6
57666	.append(QifHelper.formatDate(cursor.getLong(cursor.getColumnIndexOrThrow("trans_time"))))	3
26619	.append(SimpleDateFormat.getDateInstance(DateFormat.SHORT).format(new	9
57007	.append(String.format("%."	4
57144	.append(String.format("%f",quantity))	6
56905	.append(currencyCode)	5
51902	.append(cursor.getString(cursor.getColumnIndexOrThrow("acct1_currency")))	6
57710	.append(cursor.getString(cursor.getColumnIndexOrThrow("acct1_full_name")))	3
57699	.append(cursor.getString(cursor.getColumnIndexOrThrow("acct2_full_name")))	3
57694	.append(cursor.getString(cursor.getColumnIndexOrThrow("split_amount")))	7
57672	.append(cursor.getString(cursor.getColumnIndexOrThrow("trans_desc")))	4
51905	.append(decimalImbalance.toPlainString())	6
25926	.append(newLine)	28
57704	.append(splitMemo)	3
57186	.append(splitType.equals("DEBIT")	9
8975	.apply()	52
54014	.asBigDecimal()	2
36656	.atPosition(1)	10
54255	.await(1,TimeUnit.MINUTES)	7
28223	.await(TIMEOUT,TimeUnit.SECONDS)	5
8040	.beginTransaction()	74
28113	.build()	23
23182	.build())	9
64310	.buildAccountInstance(cursor)	1
28460	.check(matches(allOf(isDisplayed(),hasDescendant(withText(accountName)))))	3
14009	.check(matches(allOf(isDisplayed(),isNotChecked())))	6
12165	.check(matches(allOf(isDisplayed(),withText(R.string.label_receive))))	5
13452	.check(matches(isDisplayed()))	31
13298	.check(matches(isNotChecked()))	12
28391	.check(matches(not(isDisplayed())))	3
28870	.check(matches(withText(R.string.label_spend)))	5
9915	.clear()	3
1869	.commit()	65
54298	.contains("first","second","third")	2
54213	.contains("test","secondAccount")	2
54423	.contains(-1L,4L).doesNotContain(1L,2L,3L)	2
54312	.contains(0L,1L,2L,3L,4L,5L).doesNotContain(-1L)	2
54230	.contains(1L,2L,5L).doesNotContain(-1L)	2
59377	.contains(TRANSACTIONS_ACCOUNT_UID)	5
62859	.contains(account.getUID()).contains(mBaseAccount.getUID())	4
54373	.contains(budget.getUID())	2
59465	.contains(euroAccount.getUID())	5
62980	.contains(mTransferAccount.getUID())	4
56819	.contains(t1.getUID())	5
2510	.create()	22
39806	.disallowAddToBackStack()	5
50721	.divide(denominator,currencyCommodity.getSmallestFractionDigits(),BigDecimal.ROUND_HALF_EVEN)	7
50962	.divide(denominator,mTargetCommodity.getSmallestFractionDigits(),BigDecimal.ROUND_HALF_EVEN)	2
36275	.divide(new	9
62946	.divide(pricePair.second.intValue())	4
56772	.doesNotContain("account-something")	5
56784	.doesNotContain("non-existent")	4
56739	.doesNotContain("pre-existent")	4
56768	.doesNotContain("random")	5
63065	.doesNotContain(euroAccount.getUID())	4
10593	.doubleValue()	4
239	.edit()	72
13908	.edit().putBoolean(context.getString(R.string.key_use_compact_list),false)	4
36566	.edit().putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry),false)	11
52866	.edit().putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry),true)	7
5312	.edit().putInt(getString(R.string.key_last_export_destination),position)	6
51669	.edit().putString(context.getString(R.string.key_google_drive_app_folder_id),	7
34853	.enableWebKitInspector(	6
55296	.enableWebKitInspector(Stetho.defaultInspectorModulesProvider(application))	2
32347	.execute()	6
63664	.exists()	3
31385	.extracting("mActionType").contains(ScheduledAction.ActionType.BACKUP)	13
27019	.fetchAccounts(DatabaseHelper.KEY_NAME	4
59140	.fetchAccounts(DatabaseSchema.AccountEntry.COLUMN_HIDDEN	1
24165	.fetchAccounts(DatabaseSchema.AccountEntry.COLUMN_NAME	7
10236	.fileprovider"	2
64184	.findFragmentByTag("add_account_dialog")	1
4889	.findFragmentByTag(AccountsActivity.FRAGMENT_ACCOUNTS_LIST)	46
36714	.findFragmentByTag(AccountsActivity.FRAGMENT_TRANSACTIONS_LIST)	5
19201	.findFragmentByTag(FRAGMENT_ACCOUNTS_LIST)	12
64181	.findFragmentByTag(FRAGMENT_NEW_ACCOUNT)	2
30691	.findFragmentByTag(FRAGMENT_NEW_TRANSACTION)	16
19952	.findFragmentByTag(FRAGMENT_TRANSACTIONS_LIST)	14
52205	.findFragmentByTag(MainActivity.FRAGMENT_ACCOUNTS_LIST)	2
52118	.findFragmentByTag(MainActivity.FRAGMENT_TRANSACTIONS_LIST)	3
63132	.findFragmentByTag(TransactionsActivity.FRAGMENT_NEW_TRANSACTION)	2
13995	.findFragmentByTag(TransactionsActivity.FRAGMENT_TRANSACTIONS_LIST)	13
34433	.findViewById(R.id.account_name)	8
27636	.findViewById(R.id.checkbox_delete_sub_accounts)	7
34346	.findViewById(R.id.primary_text)	7
23996	.findViewById(R.id.transactions_summary)	35
34983	.format(new	6
50025	.fragment("")	5
52390	.getAccountType(accountId).hasDebitNormalBalance()	2
56916	.getActivity(context,0,accountViewIntent,0)	3
56976	.getActivity(context,0,newTransactionIntent,0)	3
9660	.getActivity(context,appWidgetId,accountViewIntent,0)	16
8775	.getActivity(context,appWidgetId,newTransactionIntent,0)	18
7541	.getApplicationContext())	8
64311	.getApplicationContext(),R.layout.item_accounts,null,	1
31219	.getApplicationContext(),R.layout.list_item_account,null,	2
39822	.getBoolean(R.styleable.SherlockTheme_windowSplitActionBar,false)	4
9251	.getBoolean(UxArgument.ENABLED_PASSCODE,false)	7
9405	.getBoolean(UxArgument.HIDE_ACCOUNT_BALANCE_IN_WIDGET	6
8719	.getBoolean(UxArgument.SHOULD_DISPLAY_BALANCE	4
63876	.getBoolean(context.getString(R.string.key_use_double_entry),!useDoubleEntry)	2
57156	.getBoolean(getActivity().getString(R.string.key_use_compact_list),!GnuCashApplication.isDoubleEntryEnabled())	11
63915	.getBoolean(getActivity().getString(R.string.key_use_compact_list),false)	7
31786	.getBoolean(getString(R.string.key_owncloud_sync),false)))	14
20525	.getBoolean(getString(R.string.key_sgml_ofx_header),false)	6
887	.getBoolean(getString(R.string.key_use_account_color),false)	20
12467	.getBoolean(getString(R.string.key_use_double_entry),false)	13
6861	.getBoolean(getString(R.string.key_xml_ofx_header),false)	9
7367	.getBoolean(mContext.getString(R.string.key_xml_ofx_header),false)	17
25945	.getCommodity(GnuCashApplication.getDefaultCurrencyCode())	3
31401	.getCurrencyInstance(Locale.getDefault())	1
8982	.getDefaultSharedPreferences(context)	15
54634	.getDefaultSharedPreferences(context).edit()	2
34177	.getDefaultSharedPreferences(getActivity().getApplicationContext()).edit()	5
536	.getDefaultSharedPreferences(getApplicationContext())	9
49928	.getDimensionPixelSize(R.dimen.abs__search_view_preferred_width)	5
1925	.getFullyQualifiedAccountName(split.getAccountUID()))	6
60196	.getInt(getString(R.string.key_last_export_destination),0)	3
54859	.getLong(TransactionsListFragment.SELECTED_ACCOUNT_ID	9
63310	.getLong(UxArgument.SELECTED_ACCOUNT_ID	6
11220	.getOrCreateImbalanceAccountUID(transaction.getCommodity())	2
62948	.getPrice(commodityUID,targetCmdtyUID)	4
7935	.getSelectedItemPosition())	20
50684	.getSharedPreferences(bookUID,Context.MODE_PRIVATE)	3
31539	.getString(Exporter.PREF_LAST_EXPORT_TIME,Exporter.TIMESTAMP_ZERO)	10
50718	.getString(PREFERENCE_LAST_EXPORT_TIME_KEY,	10
52463	.getString(PREFERENCE_LAST_EXPORT_TIME_KEY,PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE)	5
23702	.getString(UxArgument.PASSCODE,"")	6
8960	.getString(UxArgument.SELECTED_ACCOUNT_UID	18
9599	.getString(context.getString(R.string.key_dropbox_access_token),null)	2
5892	.getString(getString(R.string.key_chart_currency),Money.DEFAULT_CURRENCY_CODE)	3
5019	.getString(getString(R.string.key_chart_currency),Money.DEFAULT_CURRENCY_CODE))	4
6671	.getString(getString(R.string.key_default_export_email),null)	9
5484	.getString(getString(R.string.key_report_currency),Money.DEFAULT_CURRENCY_CODE)	10
1626	.getString(getString(R.string.key_report_currency),Money.DEFAULT_CURRENCY_CODE))	23
7093	.getString(mContext.getString(R.string.key_default_export_email),null)	12
63875	.getStringExtra(TransactionsListFragment.SELECTED_ACCOUNT_NAME)	2
50395	.getSuggestActionMsgColumn()	5
14170	.getSupportActionBar()	4
4885	.getSupportFragmentManager()	30
64175	.getSupportFragmentManager().beginTransaction()	2
54115	.getSystemService(Activity.INPUT_METHOD_SERVICE))	6
50356	.getSystemService(Context.INPUT_METHOD_SERVICE)	5
49293	.getSystemService(Context.LAYOUT_INFLATER_SERVICE)	5
50323	.getText().toString())	5
2761	.getThemedContext(),R.layout.sherlock_spinner_item,	8
25233	.gnca)	6
32536	.hasExtension(ExportFormat.XML.getExtension().substring(1))	6
13187	.hasSize(1)	11
54015	.hideSoftInputFromWindow(v.getWindowToken(),0)	6
36490	.inAdapterView(withId(R.id.split_list_layout))	10
62088	.inAdapterView(withTagValue(is((Object)"currency_list_view"))).perform(click())	3
56601	.inMode(CalendarPickerView.SelectionMode.RANGE)	5
13324	.inRoot(withDecorView(not(is(getActivity().getWindow().getDecorView()))))	7
58628	.inRoot(withDecorView(not(is(mActivityRule.getActivity().getWindow().getDecorView()))))	3
13152	.inRoot(withDecorView(not(mTransactionsActivity.getWindow().getDecorView())))	2
45296	.inflate(R.layout.abs__action_bar_tab_bar_view,null)	9
60441	.inflate(R.layout.cardview_account,parent,false)	6
54058	.inflate(R.layout.cardview_budget,parent,false)	2
60659	.inflate(R.layout.cardview_transaction,parent,false)	7
63918	.inflate(layoutRes,parent,false)	6
39499	.inflate(layoutResId,null))	4
7486	.isEqualTo(GncXmlHelper.parseDate("2016-08-24	3
13735	.isEqualTo(TransactionFormFragment.DATE_FORMATTER.format(trxDate))	6
13303	.isEqualTo(TransactionFormFragment.TIME_FORMATTER.format(trxDate))	6
55588	.isEqualTo(expectedNextDueDate)	4
52553	.isEqualTo(goldenBoyBirthdayTimestamp)	2
54832	.isEqualTo(new	4
52426	.isEqualTo(the1234567890thSecondTimestamp)	5
52439	.isEqualTo(the1234567890thSecondUtcString)	5
52468	.isEqualTo(unixBillenniumTimestamp)	5
52695	.isEqualTo(unixBillenniumUtcString)	5
52649	.isEqualTo(unixBillenniumUtcStringAfterSubtract)	5
62934	.isEquivalentTo(multiTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)))	4
63022	.isEquivalentTo(savedTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)))	4
52713	.isLessThanOrEqualTo(after)	5
62916	.isTrue()	4
36973	.jar</file>	4
50266	.length()	5
51008	.minusMonths(4).minusDays(2).toDate().getTime())	4
50886	.newBuilder().addShadowClass(ShadowCrashlytics.class).build()	4
6851	.newInstance()	34
64186	.newInstance(this)	3
39638	.obtainStyledAttributes(R.styleable.SherlockTheme)	4
60691	.openRawResource(R.raw.iso_4217_currencies)	6
12565	.perform(click())	41
18785	.perform(longClick())	7
3478	.perform(typeText("Lunch"))	20
59091	.permission.CREATE_ACCOUNT"	3
59144	.permission.RECORD_TRANSACTION"	3
25346	.permission.group.GNUCASH"	6
57655	.putBoolean(UxArgument.ENABLED_PASSCODE,(Boolean)	6
57204	.putBoolean(UxArgument.ENABLED_PASSCODE,false)	8
57110	.putBoolean(UxArgument.ENABLED_PASSCODE,flag)	5
57146	.putBoolean(UxArgument.ENABLED_PASSCODE,true)	5
9855	.putBoolean(UxArgument.HIDE_ACCOUNT_BALANCE_IN_WIDGET,hideAccountBalance)	3
244	.putBoolean(getString(R.string.key_use_account_color),Boolean.valueOf(newValue.toString()))	8
23185	.putBoolean(keySaveOpeningBalance,saveOpeningBalance)	5
23260	.putBoolean(keyUseCompactView,useCompactTrnView)	8
23125	.putBoolean(keyUseDoubleEntry,useDoubleEntry)	6
13110	.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export),false).commit()	11
13619	.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export),true).commit()	14
13083	.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry),true)	7
20106	.putBoolean(mContext.getString(R.string.key_use_double_entry),true)	5
57735	.putBoolean(mSolo.getString(R.string.key_delete_transactions_after_export),false).commit()	4
57668	.putBoolean(mSolo.getString(R.string.key_delete_transactions_after_export),true).commit()	4
23633	.putExtra(UxArgument.PASSCODE_CLASS_CALLER,this.getClass().getName())	19
24001	.putExtra(UxArgument.SELECTED_ACCOUNT_ID,getIntent().getLongExtra(UxArgument.SELECTED_ACCOUNT_ID,0L))	5
28937	.putExtra(UxArgument.SELECTED_ACCOUNT_UID,	13
30213	.putExtra(UxArgument.SELECTED_ACCOUNT_UID,getIntent().getLongExtra(UxArgument.SELECTED_ACCOUNT_UID,0L))	5
28988	.putExtra(UxArgument.SELECTED_ACCOUNT_UID,getIntent().getStringExtra(UxArgument.SELECTED_ACCOUNT_UID))	11
31312	.putExtras(getIntent().getExtras())	7
55370	.putString(BookUtils.KEY_BACKUP_FILE,backupFileUri.toString())	3
23915	.putString(Exporter.PREF_LAST_EXPORT_TIME,timeStamp.toString())	9
31095	.putString(PREFERENCE_LAST_EXPORT_TIME_KEY,utcString)	6
9353	.putString(UxArgument.BOOK_UID,bookUID)	3
33935	.putString(UxArgument.PASSCODE,data.getStringExtra(UxArgument.PASSCODE))	13
9497	.putString(UxArgument.SELECTED_ACCOUNT_UID,accountUID)	3
13488	.putString(context.getString(R.string.key_default_currency),CURRENCY.getCurrencyCode())	5
57114	.putString(getAppContext().getString(R.string.key_default_currency),currencyCode)	13
5918	.putString(getString(R.string.key_chart_currency),newValue.toString())	3
3522	.putString(getString(R.string.key_default_currency),currency)	11
1737	.putString(getString(R.string.key_report_currency),allCurrencyCodes.get(allCurrencyNames.indexOf(currencyName)))	5
4023	.putString(getString(R.string.key_report_currency),newValue.toString())	6
63501	.putString(getString(R.string.key_use_account_color),newValue.toString())	3
8828	.putString(keyAccessToken,accessToken)	2
23211	.putString(keyLastExportTime,lastExportTime)	6
13319	.putString(mReportsActivity.getString(R.string.key_default_currency),CURRENCY.getCurrencyCode())	11
50185	.query("")	5
9993	.remove(UxArgument.HIDE_ACCOUNT_BALANCE_IN_WIDGET	3
9706	.remove(UxArgument.SELECTED_ACCOUNT_UID	3
55589	.remove(context.getString(R.string.key_last_export_destination))	2
51111	.remove(mAcccountsActivity.getString(R.string.key_first_run))	10
35172	.remove(mAccountsActivity.getString(R.string.key_first_run))	6
32443	.replace(R.id.fragment_container,fragment)	5
50015	.scheme(ContentResolver.SCHEME_CONTENT)	5
13484	.setAction(getIntent().getAction())	28
20585	.setActionTextColor(getResources().getColor(R.color.theme_accent))	8
48280	.setAlphabeticShortcut(itemAlphabeticShortcut)	4
62167	.setBackgroundDrawable(new	3
48659	.setCheckable(itemCheckable	4
62133	.setChoices(mContext.getString(R.string.wizard_option_auto_send_crash_reports),	3
62105	.setChoices(mContext.getString(R.string.wizard_option_create_default_accounts),	3
24027	.setClassName(this,getIntent().getStringExtra(UxArgument.PASSCODE_CLASS_CALLER))	18
39591	.setDefaultShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM)	4
2596	.setDropDownViewResource(R.layout.sherlock_spinner_dropdown_item)	17
48761	.setEnabled(itemEnabled)	4
29012	.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP	8
23745	.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)	12
13701	.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK	20
57568	.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK)	2
23538	.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK))	5
27080	.setIcon(R.drawable.ic_close_black_24dp)	8
27060	.setIcon(R.drawable.ic_close_white_24dp)	3
62175	.setIcon(R.drawable.ic_warning_black_24dp)	3
49844	.setIcon(activity.loadIcon(packageManager))	4
27897	.setIcon(android.R.drawable.ic_delete)	26
6939	.setIcon(android.R.drawable.ic_dialog_alert)	9
48306	.setIcon(itemIconResId)	4
42890	.setIcon(ri.loadIcon(pm))	8
42495	.setIntent(rintent)	8
27103	.setMessage("All	3
27074	.setMessage("Are	3
3623	.setMessage("The	6
55313	.setMessage("There	5
27991	.setMessage(R.string.message_confirm_create_default_accounts_setting)	5
6913	.setMessage(R.string.message_create_default_accounts_confirmation)	4
62228	.setMessage(R.string.msg_confirm_create_default_accounts_setting)	5
55433	.setMessage(R.string.msg_confirm_restore_backup_into_new_book)	3
55314	.setMessage(R.string.msg_no_backups_to_restore_from)	3
2637	.setMessage(R.string.whats_new)	10
54517	.setMessage(getString(R.string.msg_all_book_data_will_be_deleted))	4
25319	.setMessage(getString(R.string.msg_enable_crashlytics))	6
51736	.setMimeType(getExportMimeType())	7
28237	.setMimeType(mExporter.getExportMimeType())	10
3740	.setNegativeButton("Cancel",new	6
27709	.setNegativeButton(R.string.alert_dialog_cancel,	24
3549	.setNegativeButton(R.string.btn_cancel,new	29
55226	.setNegativeButton(R.string.label_dismiss,new	5
48524	.setNumericShortcut(itemNumericShortcut)	4
9792	.setOnDateSetListener(TransactionFormFragment.this)	2
50367	.setOnMenuItemClickListener(mOnMenuItemClickListener)	4
62135	.setOnPageSelectedListener(new	3
34182	.setOnPreferenceChangeListener(new	6
34234	.setOnPreferenceClickListener(new	11
9526	.setOnTimeSetListener(TransactionFormFragment.this)	2
2502	.setPositiveButton("Create	6
27810	.setPositiveButton(R.string.alert_dialog_ok_delete,	26
2676	.setPositiveButton(R.string.btn_create_accounts,new	19
3133	.setPositiveButton(R.string.btn_rename,new	6
55452	.setPositiveButton(R.string.btn_restore,new	3
3920	.setPositiveButton(R.string.label_dismiss,new	10
25209	.setPositiveButton(R.string.label_enable,new	6
9645	.setPreselectedDate(year,monthOfYear,dayOfMonth)	2
62079	.setRequired(true)	3
28171	.setResultCallback(fileCallback)	8
55086	.setScale(2,RoundingMode.HALF_EVEN)	2
9375	.setStartTime(calendar.get(Calendar.HOUR_OF_DAY),	2
29978	.setText(String.format(SELECTED_VALUE_PATTERN,label,value,value	11
7025	.setText(mChart.getData().getXVals().get(e.getXIndex())	15
33173	.setText(mSeries.getCategory(selection.getPointIndex())	3
7522	.setTextColor(ContextCompat.getColor(context,R.color.account_red))	4
7591	.setTextColor(getResources().getColor(R.color.account_red))	5
2509	.setTitle("Confirm")	6
55369	.setTitle("No	8
32420	.setTitle(R.string.label_create_account)	7
30618	.setTitle(R.string.title_confirm_delete).setMessage(R.string.confirm_delete_all_accounts)	4
30876	.setTitle(R.string.title_confirm_delete).setMessage(R.string.delete_all_transactions_confirmation_message)	6
57108	.setTitle(R.string.title_confirm_delete).setMessage(R.string.msg_delete_all_transactions_confirmation)	5
55406	.setTitle(R.string.title_confirm_restore_backup)	3
6657	.setTitle(R.string.title_create_default_accounts)	9
20871	.setTitle(R.string.title_edit_account)	9
55378	.setTitle(R.string.title_no_backups_found)	3
51555	.setTitle(R.string.title_whats_new)	5
51618	.setTitle(context.getString(R.string.app_name)).build()	7
28170	.setTitle(exportedFile.getName())	14
25177	.setTitle(getString(R.string.title_enable_crashlytics))	6
27537	.setTitle(mTitleResId)	3
3315	.setTitle(releaseTitle.toString())	11
27663	.setTitle(title).setMessage(R.string.delete_account_confirmation_message)	13
56805	.setTitle(title).setMessage(R.string.delete_confirmation_message)	5
56777	.setTitle(title).setMessage(message)	8
48669	.setTitleCondensed(itemTitleCondensed)	4
62123	.setValue(mContext.getString(R.string.wizard_option_create_default_accounts))	3
55569	.setView(R.layout.dialog_rename_book)	2
27668	.setView(dialogLayout)	5
3495	.setView(nameEditText)	6
27598	.setView(view)	3
62091	.setVisibility(position	3
48214	.setVisible(itemVisible)	4
3983	.show()	8
34107	.startSupportActionMode(mActionModeCallbacks)	14
6490	.toDate().getTime()	8
50334	.toString())	5
25048	.transaction"/>	2
3489	.updateRecord(bookUID,	6
10095	.uploadAndFinish(inputStream)	3
9493	.uploadBuilder("/"	3
62924	.withCurrency(cmdtyDbAdapter.getRecord(targetCmdtyUID))	4
30107	.withDayOfMonth(1)	7
55816	.withDayOfWeek(firstScheduledWeekday)	3
5065	.withMaximumValue().withMillisOfDay(86399999).isAfter(mEarliestTransaction))	4
30114	.withMillisOfDay(0)	7
56562	.withSelectedDate(today)	5
453	/	149
36806	/${project.build.finalName	4
47432	/&gt	8
32664	/)	6
2064	/*	213
39314	/*&&	4
93	/**	392
18511	/**********************************************************************************************************	12
63888	/**-	1
21352	/**8	6
49449	/*AsyncTask.*/SERIAL_EXECUTOR.execute(new	4
47326	/*R.styleable.*/ProgressBar_indeterminate,mIndeterminate))	4
46879	/*R.styleable.*/ProgressBar_indeterminateOnly,mOnlyIndeterminate)	4
41092	/*Time*/Interpolator	20
47204	/*com.android.internal.R.styleable.*/ProgressBar_interpolator,	4
47150	/*mDropDownList.*/measureHeightOfChildren(MeasureSpec.UNSPECIFIED,	4
47033	/*mPopup.*/getMaxAvailableHeight(	4
21192	/*transaction.isExported()*/	9
2060	//	381
21466	//""	9
6007	//(TextView)	7
58681	//(expected	3
62364	//************	3
62304	//**************	3
52658	//****************	6
56516	//******************	13
1505	//+	20
14493	///	27
9687	////	80
37857	///////////////////////////////////////////////////////////////////////////	13
3429	//0	22
63447	//==============	4
31964	//================	10
12528	//=================	23
25410	//================================	16
25088	//==============================BEGIN	6
43420	//@Override	9
8684	//@Test	6
10	//ALL	15
47553	//Account	4
29961	//AccountsDbAdapter	8
44561	//Allow	5
4951	//Android	10
33909	//Backup	4
7247	//Basically,if	16
21843	//BufferedWriter	4
38960	//Callback	4
39348	//Calling	4
40283	//Check	9
35367	//Column	3
39746	//Copy	4
38531	//Create	4
26274	//Currency	7
36112	//Currency.getInstance(currencyCode)	4
19040	//Cursor	10
6801	//DEBIT	5
31434	//DROPBOX	4
39325	//Do	4
62701	//EUR	2
39236	//Emulate	4
45679	//Even	4
24425	//FIXME	7
292	//FIXME:	104
49677	//Fallback	5
55253	//First	3
45601	//Fix	5
39637	//Fully-qualified	4
58532	//German	2
44625	//Get	5
2426	//Gnucash	20
5689	//I	25
40039	//If	11
46005	//Ignored	5
32030	//Ignoring	9
40295	//Invalidate	4
51700	//It	13
30349	//JellyBean	6
50981	//Log.d(LOG_TAG,"Parsing	4
18649	//Log.d(LOG_TAG,"Replacing	7
19985	//Log.d(TAG,"Replacing	23
36115	//Log.d(getClass().getName(),"currency	8
36362	//Log.d(getClass().getName(),commodity	8
50819	//Log.v(LOG_TAG,"Setting	4
39434	//Make	8
39431	//Manually	4
60267	//Migrate	8
51667	//NOTE:	15
36453	//Namespace	12
43789	//Need	4
40333	//No	8
39310	//Nothing	4
50514	//Oh	5
49274	//Oh,well...	5
38658	//Only	4
20376	//Open...	23
40001	//Our	8
12059	//Parse	7
13426	//PreferenceActivity.getActiveBookSharedPreferences(getActivity()).edit()	4
9417	//PreferenceManager.getDefaultSharedPreferences(WidgetConfigurationActivity.this)	7
50623	//PreferenceManager.getDefaultSharedPreferences(context)	3
50899	//PreferenceManager.getDefaultSharedPreferences(context).edit()	3
62699	//ROOT	2
37864	//Register	8
39584	//Relative	4
30104	//ScheduledAction	8
30086	//ScheduledActionDbAdapter	13
39643	//See	4
43516	//See:	4
24878	//Settings	20
39853	//Since	4
46447	//Some	5
30029	//SplitsDbAdapter	13
30118	//String	16
3769	//TODO	39
1105	//TODO:	253
26538	//The	9
24562	//This	19
18915	//ToDo	3
64193	//TransactionsActivity.sLastTitleColor	4
30010	//TransactionsDbAdapter	8
40217	//Trash	4
40082	//UNUSED	26
39918	//Unqualified	4
39891	//Usually	4
46800	//View	4
25745	//We	32
47789	//Workaround	4
44486	//Wrap	5
39371	//XXX	14
19969	//a	12
32956	//abort	8
2242	//account	20
34414	//accounts	6
33218	//activates	3
63713	//actually	2
12979	//add	40
28657	//after	10
24637	//aha!	13
6570	//all	23
13466	//always	18
31155	//amount	21
55707	//an	2
35157	//and	6
36168	//as	9
29120	//assertThat(mSolo.getEditText(0).getText().toString()).isEqualTo("44.99")	4
8297	//assertThat(split1.getQuantity()).isEqualTo(new	4
7860	//assertThat(split2.getQuantity()).isEqualTo(new	4
25245	//assign	11
13220	//at	14
25234	//auto-balance	15
5612	//auto-balanced	5
13862	//auto-balancing	10
64135	//autobalance	3
33955	//balance	8
25791	//because	19
30885	//bravo	10
53444	//budget	2
53572	//budgets	2
21524	//bufferedWriter.flush()	4
9519	//bug	5
25104	//build	14
6783	//but	16
25182	//cancel	19
19302	//cannot	7
31272	//capture	20
31680	//catch	10
6278	//check	46
6595	//checking	6
26739	//child	5
62923	//clean	4
28569	//clear	16
31044	//close	20
54609	//column	8
18546	//columns	14
25015	//commit	11
54380	//commodities	4
26017	//commodity	23
14298	//commodity_uid	9
24194	//condition	13
5232	//confirm	7
5627	//converted	10
40058	//copy	4
19990	//create	32
63789	//created	2
60295	//creates	5
3136	//creating	10
62493	//credit	3
53543	//currency	2
1813	//current	18
59020	//db	2
36593	//debit	9
51650	//decimal	3
503	//default	54
2948	//delete	22
50722	//determine	7
37553	//device/apps/common/assets/res/any/dimens.xml	4
36929	//device/apps/common/assets/res/any/layout/simple_spinner_item.xml	8
37003	//device/apps/common/assets/res/layout/screen_simple.xml	4
54977	//dexportCommodity(xmlSerializer)	5
63781	//differ	2
54202	//different	2
19861	//disable	23
3488	//do	59
33096	//don't	8
34209	//drawer	5
36015	//due	8
30537	//dummy	13
35485	//during	4
56527	//e.g.	4
54466	//edit	4
56631	//editable.replace(start,end,Character.toString((char)	10
18058	//else	13
35994	//empty	10
19719	//enabled	14
19847	//end	11
13451	//enter	35
12494	//euro	10
27398	//explicitly	10
53423	//export	2
11761	//exported	8
53197	//extract	2
25141	//favorite	9
18390	//fetch	5
6494	//file	17
47272	//final	5
5066	//first	31
53100	//fixme:	5
53600	//flag	5
2290	//for	42
52149	//form	7
35573	//get	11
34402	//getActivity().findViewById(R.id.btn_save)	6
4953	//getActivity().finish()	11
39032	//getContext()	4
43384	//getDividerWidth()	4
39717	//getLocalFeatures()	4
29038	//give	7
29872	//go	5
6686	//has	15
35922	//hide	6
3354	//if	259
18847	//ignore	16
4387	//imbalance	11
34180	//in	11
52288	//in-case	6
13988	//including	2
30393	//increase	11
30487	//inform	16
18030	//init	11
55300	//initAdapters(bookUID)	5
13326	//initialize	3
39852	//initialized	4
60087	//initializes	3
5077	//initiate	14
2406	//inside	17
7508	//int	6
39582	//into	4
27234	//introducing	20
39961	//is	5
18319	//it	23
19741	//just	13
33822	//kill	3
44112	//late	4
24172	//legacy	15
19822	//legacy,will	10
59945	//limit	6
19932	//load	20
29936	//long	8
53959	//loop	5
13641	//lots	6
63099	//mAccountsSpinner.getSelectedItemId()	1
56645	//mAmountEditText.addTextChangedListener(mAmountInputFormatter)	11
24299	//mNameEditText.requestFocus()	17
49797	//mSearchView.getWindow().getDecorView().post(mStartSpinnerRunnable)	5
64191	//mSectionHeaderTransactions.setBackgroundColor(sLastTitleColor)	4
18231	//mSelectedIds.size()	16
4085	//mSolo.getImage(3).isEnabled())	7
4615	//mSolo.getText(6).getText().toString()	11
8889	//mStartDate	10
59943	//made	7
54992	//maintain	4
13317	//make	31
6716	//mark	24
6794	//may	17
632	//means	32
27100	//minifyEnabled	4
20209	//modifying	13
20850	//more	11
2648	//move	5
7518	//multiplier	15
19213	//multiply	3
7991	//must	6
34106	//names	4
41768	//native	4
24451	//need	19
7251	//negate	16
12926	//new	29
41817	//newPVH.mProperty	4
23754	//no	46
51166	//noinspection	7
10729	//not	14
247	//nothing	103
4688	//now	65
33301	//old	7
21906	//on	9
56343	//onView(withId(R.id.menu_export)).perform(click())	5
32500	//once	31
5502	//one	14
19081	//only	31
5759	//open	20
4543	//or	9
26925	//our	5
39974	//ourselves	4
40076	//out	8
8733	//package	21
43080	//perform	4
43181	//persist	4
52423	//plus	4
23417	//prevent	43
23544	//price	7
57469	//prices	3
41624	//private	17
41279	//protected	4
41281	//public	23
58821	//purposefully	7
55099	//push	4
64	//put	21
55129	//read	3
30325	//reassign	6
14372	//recurrence	7
20477	//recurringTransaction.getRecurrencePeriod()	4
18728	//recurse	13
11113	//refresh	19
62895	//refreshTransactionsList()	4
58757	//release	6
33809	//remaining	5
18028	//remove	28
6139	//replace	4
30454	//replaceStatement.bindLong(7,transaction.getRecurrencePeriod())	6
60310	//required	3
3597	//reset	43
51462	//retrieve	15
20387	//return	13
10265	//returns	7
52168	//robolectric	10
5469	//robotium	7
13561	//root	2
35309	//row_id,uid,name	3
34731	//run	11
2402	//save	39
4223	//scheduled	23
30121	//scheduledAction.setActionUID(cursor.getString(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID)))	8
26097	//scheduledAction.setLastRun(System.currentTimeMillis())	12
29931	//scheduledAction.setPeriod(period)	8
30137	//scheduledAction.setStartTime(timestampT.getTime())	8
61601	//scheduledActionDbAdapter.addRecord(scheduledAction)	7
30035	//scheduledActionDbAdapter.addScheduledAction(scheduledAction)	7
12989	//select	11
32137	//selection	3
12319	//set	51
12106	//sets	10
32718	//setting	4
13616	//should	16
13789	//show	52
2247	//since	27
57373	//sleep	9
13374	//sleep(2000)	3
157	//so	70
34657	//some	8
2174	//sometimes	42
54749	//sorted	4
31846	//split	23
12379	//split.setAmount(split.getAmount().withCurrency(Currency.getInstance(mCurrencyCode)))	3
2983	//start	35
55284	//stop	3
53043	//store	5
31158	//switch	12
23385	//takes	8
33568	//target	5
7606	//test	15
1406	//the	153
4838	//then	18
2422	//there	90
8796	//these	21
55548	//they	2
5251	//this	107
36172	//throw	10
39737	//to	5
27091	//todo	20
275	//todo:	50
27693	//toggle	17
4574	//transaction	39
18659	//transactions	11
30199	//transactionsDBAdapter.getTransactionsSum(accountId)	10
23733	//trigger	11
41901	//try	5
29397	//two	13
35690	//unsolicited	8
1979	//update	85
18034	//updateTransferAccountsList	20
36618	//uploading	8
27076	//use	6
12499	//user	3
25472	//using	4
5833	//validate	20
36734	//validateNewTransactionFields()	2
20254	//value	7
39562	//values	4
39792	//values-sw600dp	4
39351	//values-w360dp	4
40203	//values-w480dp	4
39790	//values-w500dp	4
39919	//values-w600dp	4
4201	//verify	7
50742	//wait	27
1738	//we	162
3977	//when	83
5997	//whenever	5
25721	//which	10
25832	//will	29
39483	//window.hasFeature()	4
9155	//without	9
60060	//would	3
10413	//yes,this	7
23091	/</string>	10
23876	/=	6
2069	/>	272
31167	/Apps/GnuCash	4
46675	/LinearLayout&gt	4
55732	/\'	4
56298	/\'</string>	2
27943	/\n	9
56762	/some/path/file.ext	8
60925	/usr/share/xml/iso-codes/iso_4217.xml	3
562	0	380
13633	0"	100
14550	0")	6
18457	0",	37
25011	0",null)	4
23546	0",null,null,null,null)	21
327	0)	358
5622	0))	42
62498	0)){	3
27498	0),	3
46216	0),or	4
970	0){	225
47144	0,	4
18340	0,"	73
46632	0,-1/*ListView.NO_POSITION*/,maxHeight	4
39608	0,-mContainerView.getHeight()))	4
43764	0,/*	4
42962	0,0	8
46541	0,0)	8
39526	0,DISPLAY_HOME_AS_UP)	4
39425	0,DISPLAY_SHOW_CUSTOM)	4
40072	0,DISPLAY_SHOW_HOME)	4
40250	0,DISPLAY_SHOW_TITLE)	4
39397	0,DISPLAY_USE_LOGO)	4
47730	0,LayoutParams.MATCH_PARENT,1))	4
39945	0,children	4
44863	0,length	5
47819	0,no	4
41769	0,the	4
56788	0,then	6
49956	0,url.length(),	5
40433	0,which	8
59078	0-based	2
39010	0-get	4
42091	0.	16
47541	0...100	4
47225	0...<tt>max</tt>.</p>	4
57202	0.0	9
28835	0.0f	7
5922	0.1	5
5866	0.1000000000000000055511151231257827021181583404541015625.	5
58558	0.1234	2
60386	0.15f)	3
58278	0.4293	6
48176	0.4f)	4
58363	0.585274	6
43968	0.5f	11
60352	0.5f)	3
58167	0.702804	6
27784	0.70f	3
58024	0.787564	6
60381	0.85f)	3
1190	0.8f	6
49514	0.95f	4
51923	0.9f	7
7710	00:00:00	8
31364	00:00:00.000	7
52580	00:46:40.000"	2
54839	01.06.2016	2
59761	01.08.2014	2
52685	01:46:40"	5
52689	01:46:40.000"	5
54130	02/14"/>	2
26388	02110-1301,	23
36296	03.11.2015	15
32625	08.12.2015	7
30770	09.02.2015	4
320	0:	71
59894	0</code>	5
47135	0</li>	4
32748	0L	3
63472	0L)	8
18327	0d	10
24836	0f	10
40524	0f)	8
23777	0l	6
42819	0x00000001	8
42817	0x00000002	8
42820	0x00000004	8
42823	0x00000008	8
43088	0x00000010	8
44224	0x00000020	4
48063	0x0000ffff	4
47607	0x0001	4
47991	0x00010000	4
47796	0x0002	4
48015	0x00020000	4
47608	0x00030000	4
48106	0x00040000	4
46516	0x00FFFFFF)	5
52336	0x01	8
42261	0x01)	4
27746	0x1	21
2067	0x10	29
63996	0x100	2
30459	0x11	35
63981	0x111	2
32809	0x12	12
55445	0x13	3
55397	0x14	3
55193	0x1f	3
57557	0x2	2
27068	0x20	2
19406	0x21	9
57632	0x3	2
57634	0x4	2
55207	0x8b	3
23307	0xA	5
20705	0xAB	8
53777	0xB	2
8763	0xB00C	5
9974	0xBA	5
53776	0xC	2
47937	0xffff0000	4
660	1	335
24294	1"	26
14068	1")	11
30017	1",	16
60291	1",null,null,null,null,"1")	9
805	1)	246
8410	1))	48
40020	1)))	8
32958	1),series.getValue(i	4
41565	1),values[i])	4
44141	1).getLayoutParams())	4
34273	1).getVal()	2
33256	1).getVal())	3
41482	1).getValue())	4
40852	1).getValue()).floatValue()	4
40454	1).getValue()).intValue()	4
59913	1).isEqualTo(afterCount)	7
33128	1).setVal(tmp1)	3
34286	1).setVal(values.get(j).getVal())	2
30110	1).split(","))	7
29937	1).split(",")[h.getStackIndex()]	5
30097	1).split(",")[index]	10
3341	1){	60
62206	1,	3
19398	1,"	14
60339	1,(account.getColorHexCode()	5
43392	1,/*	4
36046	1,10,100	4
29738	1,Color.LTGRAY)	5
28459	1,accountsListView.getCount())	16
34421	1,afterCount)	13
34246	1,colors.get(j))	2
1705	1,dayOfMonth,0,0)	11
29150	1,getTransactionCount())	4
6015	1,getTranscationCount())	19
29999	1,i))	6
44947	1,j	4
34259	1,labels.get(j))	2
62031	1,mCurrentPageSequence	3
41464	1,representing	5
46139	1,seed)	4
26650	1,start)	13
11200	1,then	28
32930	1,tmp2)	3
33065	1,tmp2,tmp1)	4
33030	1,tmp3)	4
59017	1-based	2
7952	1.	16
61785	1.0	6
41599	1.0).	4
28756	1.0f	7
42385	1.0f)	4
42381	1.0f))	4
30381	1.1.0	28
8585	1.2.0	19
50174	1.25)	5
31744	1.34	7
23462	1.7.0.	5
58023	1.95583	6
57853	1/1	6
12243	1/3	3
2436	10	63
32508	10)	8
19032	10))	2
32603	10),"	5
32791	10,"	3
58373	10,but	6
31242	10.	16
2249	100	90
6759	100)	28
11930	100))	31
62321	100),"	3
571	100,"	12
62310	100,but	3
58072	100,reunite	6
46682	100.	4
36325	100.<br>	4
2805	1000	70
36323	1000"	7
58036	1000,2008-08-01	6
3400	10000	56
36169	10000)	16
36587	100000	7
60077	100000)	3
36217	1000000	17
57771	10000000000,2009-02-01	6
58377	1000000000000	6
36416	1000000:	7
36341	100000:	7
36176	10000:	7
57832	10000:1	6
36320	1000:	17
52541	1000L	5
56619	1001:	18
56654	1002:	13
62314	1003:	4
54784	100644	4
54760	100755	4
33003	100:	20
47416	100</li>	4
32957	10:	28
36241	10^&lt	4
36338	10^2	4
2827	11	30
33335	11)	5
38676	11),the	4
52464	11.	2
53178	11.10.2015	2
63941	11.12.2015	5
52427	1190136000L	2
794	12	128
52601	12")	2
18955	12*MONTH_MILLIS	7
48775	12-key	5
53173	12.	6
53024	12.10.2015	2
60318	12.49	3
58576	1234/10000	2
51713	12345/100	4
51647	12345/4100	7
52562	1234567890	5
7650	12:44:19	3
64063	12:56:07.175	3
28530	12</item>	5
14273	13	15
58145	13.7603	6
7409	14	35
14116	14")	11
39583	14)	5
34870	14.	7
19025	1413109811000"	4
63268	144.	2
34465	15	30
55419	15")	2
9616	15.08.2016	9
58479	15.6466	6
52008	15.75	7
35854	15:25	5
47853	16	8
60090	16.08.2016	7
58481	166.386	6
35795	17.07.2014	4
57831	17.08.2016	3
20546	18	17
23259	18.05.2016	9
8699	1800	20
2830	19	24
35083	19.04.2016.	2
58371	1936.27	6
4440	1970	14
31412	1970-01-01	7
58046	1984-07-01	6
58092	1990-10-13	6
58078	1992-01-01	8
57860	1993	6
57943	1993-08-01	6
58175	1994-07-01	6
58364	1994-08:	6
58162	1995-07-01	6
57934	1997-01-01	6
57768	1998-01-1	6
58309	1998-06-22	6
58005	1999-07-05	6
7655	19:31:41	3
7578	19:49:32	4
8068	19:50:15	4
797	1:	105
63434	1L	8
26784	1]	4
29989	1])	7
52642	1_000_000_000	5
42731	1f	4
40442	1f)	12
23609	1s	11
63697	1st	2
779	2	288
23662	2")	2
1252	2)	86
32223	2).dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime()	15
3535	2){	58
7206	2*extraPadding	19
44387	2,	8
43553	2,/*	4
21389	2,500"	3
21890	2,500"/>	10
21324	2,700"	8
45286	2,MeasureSpec.EXACTLY),	4
42816	2,height)	4
12395	2,then	5
41677	2-keyframe	4
9484	2.	9
1396	2.0	365
22232	2.0.	20
4099	2.0.0	12
19381	2.0</name>	3
36543	2.1	7
7976	2.1.3	11
5547	2.2	10
58045	2.20371	6
35904	2.45	9
822	20)	14
35065	20.04.2016	2
31208	20.04.2017	4
7391	20.06.2013</b>\n\n	19
45306	200	12
58305	200.482	6
3527	2000	30
21921	2000"	9
57899	2000-01-01	6
58221	2000-02-01	6
58424	2000-09-15	6
60317	2000.00	3
31941	2000.00"	11
58316	2001-01-01	6
58018	2002-01-01	8
57932	2002-11-01	6
58507	2003	6
57840	2003-01-02	6
58124	2003-07-31	6
58310	2004-01-01	6
58211	2005-07-01	6
44161	2006	25
36850	2006,The	8
57795	2006-01-01	6
57873	2006-07-01	6
58297	2006-08-01	6
37729	2007	12
37132	2007,The	4
58361	2007-01-01	6
58157	2007-07-01	7
36968	2008	8
36833	2008,The	9
58356	2008-01-01	9
50597	2009	5
37433	2009,The	4
58441	2009-01-01	6
58285	2009-04	6
58275	2009.	6
36922	2010	50
36766	2010,The	4
58152	2010-10	6
29499	2011	46
37077	2011,The	6
58383	2011-01-01	6
57896	2011-03-18	6
3668	2012	218
58224	2012-01-01	6
27952	2012-13	7
27953	2012-14	5
17758	2012-15	5
54826	2012-2013	3
57770	2012..14:	6
3667	2013	93
57847	2013,now	6
57776	2013-01-01	6
1795	2014	180
34261	2014-2015	5
1794	2015	150
24678	2015"	5
7743	2016	27
64076	2016-06-25	3
55540	2017	2
57761	2017-01-01	3
7393	20:23:55	3
8227	20:24:06	3
52076	21	10
9272	21,	3
58017	21,560.19	6
7787	21,packageName	29
57074	21.12.2015	8
51171	22	14
8241	22.10.2015	12
23099	22.11.15	9
9222	23	35
35472	23.03.2014	4
57746	239.640	6
52560	23:31:30"	5
52487	23:31:30.000"	5
9479	24	20
46053	24)	9
45968	24))	5
18826	24*60*MINUTE_MILLIS	4
8892	2445	13
34933	2445)	5
35897	245	6
52072	25	3
63760	25.01.14	2
60289	25.08.2016	3
53997	25.10.15	2
47194	250	4
58103	25000	6
995	255)	6
36156	2550/100	6
58074	2750	6
32318	29.11.2015	6
1248	2:	68
29926	2:{	2
42620	2f	8
12683	2nd	5
877	3	252
30400	3")	3
1710	3)	10
32167	3).dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime()	15
18453	3){	14
6518	3*extraPadding	19
43607	3,/*	4
33019	3-character	8
26041	3-letter	16
38590	3.0	4
40290	3.2+	4
34790	30	4
18624	30*DAY_MILLIS	5
58010	30.126	6
41632	300	8
60172	3000	12
53809	3000"/>	2
23816	300s	11
26240	31	17
58171	31.	6
30389	31.01.2013</b>\n\n	28
49337	32))	4
23463	32.50$,the	8
23485	3250</p>	8
58035	340.750	6
39871	360)	4
1706	3:	63
28328	3</item>	5
54286	3])	4
2785	3rd	13
8402	4	129
18174	4")	19
2095	4)	22
18324	4){	14
18628	4*WEEK_MILLIS	2
44124	4,/*	4
5187	4.0	13
46285	4.0+.	4
30408	4.2	6
29971	4.5f,i))	10
57913	40.3399	7
47307	4000	4
3577	4217	92
555	4217)	43
26983	42:	12
26657	43:	12
60665	45"	3
26781	45:	8
56586	46	9
26898	46:	5
63753	47	2
27052	47:	8
20316	48	12
63263	48.	2
40193	480)	4
27047	48:	11
33285	490	5
26726	49:	11
2180	4:	53
8664	5	120
27720	5")	8
59602	5)	5
1964	5){	21
43360	5,/*	4
47351	5,5,5,5,5,5,5,5	4
58927	5,result.asDouble())	3
51880	5,y	11
57748	5.94573	6
48690	50	9
55170	500	9
39447	500)	4
57809	5000	9
58513	5000000	6
49747	500L	5
50170	500ms	5
26893	50:	11
26521	51	18
52836	51:	10
52814	52:	10
52781	53:	10
52746	54:	10
52905	55:	12
44012	56	4
7651	562	4
52875	56:	14
13920	57/100	2
26941	57:	16
440	5:	36
25348	5:{	6
29956	5f	10
1179	6	182
34006	6")	13
29834	6)	8
34070	6){	18
58282	6.55957	6
33608	6.<br>	9
34805	60	9
19042	60*SECOND_MILLIS	4
40261	600)	4
43427	64.	4
58219	65	6
36603	6:	7
25277	6:{	8
28293	6</item>	5
12125	7	81
28463	7")	18
39041	7)	4
19384	7*DAY_MILLIS	4
45728	70)	4
57919	727466	6
18270	8	48
14506	8")	21
33397	8)	9
59171	8){	9
49071	8+	5
59384	8.	9
57981	8.75	6
55215	800	7
25024	8:	6
1478	9	52
31486	9")	15
26571	9)	18
27123	9){	4
60821	9.	7
24933	9.99	6
57858	90	6
55132	900	7
63797	990	2
25468	9:	11
384	:	416
36997	:(	5
10644	:</string>	62
34616	:\n"	5
6722	:\n</string>	80
1696	;	449
2025	<	298
2622	<!--	291
36795	<!--This	4
37295	<!--bool	4
38573	<!--item	4
64296	</AutoCompleteTextView>	3
18579	</EditText>	38
9244	</FrameLayout>	21
26980	</Keyboard>	8
46	</LinearLayout>	167
30517	</Preference>	27
1686	</PreferenceCategory>	34
3332	</PreferenceScreen>	42
34572	</RadioGroup>	16
24433	</RelativeLayout>	53
7167	</Row>	20
3914	</ScrollView>	47
528	</TableLayout>	50
1381	</TableRow>	62
8017	</act:commodity>	8
8596	</act:slots>	8
36772	</action>	4
2200	</activity>	65
30155	</android.support.design.widget.AppBarLayout>	6
30327	</android.support.design.widget.CoordinatorLayout>	17
29140	</android.support.design.widget.TextInputLayout>	33
59644	</android.support.v4.widget.DrawerLayout>	3
2153	</android.support.v7.widget.CardView>	16
967	</android.support.v7.widget.Toolbar>	25
9443	</application>	30
62270	</appwidget-provider>	4
27257	</array>	3
36789	</artifact>	4
36906	</artifacts>	4
37228	</attr>	4
47527	</br>	4
19005	</build>	27
53781	</clip>	2
47838	</code>	8
36839	</com.actionbarsherlock.internal.widget.ActionBarContainer>	7
13588	</configuration>	19
37541	</declare-styleable>	9
18975	</dependencies>	21
18870	</dependency>	35
18876	</developer>	10
19100	</developers>	10
38457	</div>	17
30757	</emulator>	3
18772	</exclusion>	2
18732	</exclusions>	2
18741	</execution>	13
18652	</executions>	13
8662	</gnc:recurrence>	4
8265	</gnc:transaction>	3
19138	</goals>	13
659	</group>	8
3842	</header>	11
2533	</intent-filter>	62
13886	</intent>	5
19292	</issueManagement>	7
2145	</item>	252
12752	</li>	24
19320	</license>	3
18902	</licenses>	7
36803	</lifecycleMappingMetadata>	4
9828	</manifest>	24
1470	</menu>	78
19160	</modules>	7
12781	</ol>	13
33580	</org.gnucash.android.ui.util.CheckableLinearLayout>	5
9553	</p>	146
63896	</p>-	1
38071	</p></blockquote>	4
13526	</parent>	70
13951	</path>	16
18927	</plugin>	22
36894	</pluginExecution>	4
36938	</pluginExecutionFilter>	4
36887	</pluginExecutions>	4
18719	</pluginManagement>	14
25337	</pluginRepositories>	3
25131	</pluginRepository>	3
19311	</plugins>	26
3524	</plurals>	205
7949	</pre>	21
38281	</pre></blockquote>	4
2704	</preference-headers>	10
8426	</price:commodity>	3
7970	</price:currency>	3
7773	</price:time>	3
7589	</price>	3
33083	</project>	10
18598	</properties>	25
9446	</provider>	2
8799	</receiver>	29
7459	</recurrence:start>	4
25223	</repositories>	7
25013	</repository>	7
1803	</resources>	272
19355	</scm>	7
13429	</sdk>	16
60395	</selector>	3
33887	</shape>	13
7380	</slot:value>	8
8126	</slot>	8
7545	</split:slots>	4
782	</string-array>	287
52356	</string-array>+	1
3613	</string>	306
149	</style>	64
7998	</sx:schedule>	4
8321	</sx:start>	4
8674	</trn:currency>	8
7388	</trn:date-entered>	8
8652	</trn:date-posted>	8
8708	</trn:slots>	8
8057	</trn:split>	8
7495	</trn:splits>	8
32494	</ul>	45
19162	</version>	24
12740	<<	20
4117	<=	192
12252	<?xml	122
20224	<AutoCompleteTextView	19
26106	<Button	71
3056	<CheckBox	65
1724	<CheckBoxPreference	59
55480	<CheckedTextView	2
64283	<DatePicker	2
725	<EditText	80
30753	<EditTextPreference	17
1053	<FrameLayout	52
9032	<ImageButton	48
1560	<ImageView	82
7117	<Key	20
59388	<Keyboard	8
230	<LinearLayout	163
4425	<ListPreference	32
8527	<ListView	39
1971	<Preference	70
1342	<PreferenceCategory	54
5196	<PreferenceScreen	48
23076	<ProgressBar	18
31688	<RadioButton	23
34660	<RadioGroup	10
13869	<RelativeLayout	54
6428	<Row>	20
28797	<ScrollView	41
1380	<Spinner	107
41183	<T,V>	4
41275	<T>	8
1425	<TableLayout	43
2183	<TableRow	56
21945	<TableRow>	13
1451	<TextView	199
23466	<ToggleButton	6
41579	<V>	4
60522	<VH>	3
560	<View	66
37447	<ViewStub	4
38496	<a	23
30951	<abs.version>4.1.0</abs.version>	3
34423	<abs.version>4.2.0</abs.version>	8
19217	<abs.version>4.4.0</abs.version>	8
20412	<account_uid>	13
8615	<act:commodity-scu>100</act:commodity-scu>	8
7747	<act:commodity-scu>1</act:commodity-scu>	4
8350	<act:commodity>	8
34203	<act:commodity>+	1
7491	<act:description>Assets</act:description>	8
8311	<act:description>Cash	8
8506	<act:description>Dining</act:description>	8
7754	<act:description>Expenses</act:description>	8
7594	<act:id	8
8371	<act:name>9def659b35e85b09fe2bfade35053487</act:name>	4
7858	<act:name>Assets</act:name>	8
7485	<act:name>Bank</act:name>	6
7683	<act:name>Cash	8
7714	<act:name>Dining</act:name>	8
7525	<act:name>Euro	3
8348	<act:name>Expenses</act:name>	8
8002	<act:name>Imbalance-USD</act:name>	6
7448	<act:name>Root	8
7429	<act:name>Template	4
7684	<act:parent	8
7703	<act:slots>	8
7840	<act:type>ASSET</act:type>	8
7670	<act:type>BANK</act:type>	6
8579	<act:type>CASH</act:type>	8
8214	<act:type>EXPENSE</act:type>	8
8001	<act:type>ROOT</act:type>	8
1009	<action	64
36799	<action>	4
880	<activity	78
40281	<activity>	8
39566	<activity>")	8
17661	<al@galanin.nnov.ru>	14
52715	<alceurneto@gmail.com>	2
10055	<alexandre.magaz@gmail.com>	3
35640	<amount>	2
30741	<android.device>emulator</android.device>	5
18697	<android.device>usb</android.device>	8
52845	<android.inputmethodservice.KeyboardView	19
18817	<android.maven.plugin.version>4.1.1</android.maven.plugin.version>	3
30206	<android.support.design.widget.AppBarLayout	6
30452	<android.support.design.widget.CoordinatorLayout	11
228	<android.support.design.widget.FloatingActionButton	21
30320	<android.support.design.widget.NavigationView	17
23322	<android.support.design.widget.TabLayout	19
29075	<android.support.design.widget.TextInputLayout	26
20045	<android.support.v4.view.ViewPager	22
29733	<android.support.v4.widget.DrawerLayout	4
57188	<android.support.v7.preference.SwitchPreferenceCompat	6
21739	<android.support.v7.widget.CardView	11
48	<android.support.v7.widget.RecyclerView	19
63246	<android.support.v7.widget.SwitchCompat	6
878	<android.support.v7.widget.Toolbar	24
30919	<android.version>4.0.1.2</android.version>	6
19342	<android.version>4.1.1.4</android.version>	7
61878	<anirudhaagashe@gmail.com>	3
2839	<application	37
40153	<application>	8
39797	<application>")	8
63233	<appwidget-provider	1
27135	<array	7
36967	<artifact>	4
33215	<artifactId>achartengine</artifactId>	5
19265	<artifactId>actionbarsherlock</artifactId>	8
18753	<artifactId>android-maven-plugin</artifactId>	27
19165	<artifactId>android-test</artifactId>	3
19090	<artifactId>android</artifactId>	7
36964	<artifactId>build-helper-maven-plugin</artifactId>	4
25424	<artifactId>crashlytics-maven</artifactId>	3
25314	<artifactId>crashlytics</artifactId>	3
18879	<artifactId>fest-android</artifactId>	4
30774	<artifactId>gnucash-android-app</artifactId>	13
18784	<artifactId>gnucash-android-integration-tests</artifactId>	5
13538	<artifactId>gnucash-android-parent</artifactId>	69
30866	<artifactId>gnucash-android-test</artifactId>	6
19274	<artifactId>gnucash-android</artifactId>	16
33017	<artifactId>joda-time</artifactId>	4
36919	<artifactId>junit</artifactId>	5
19348	<artifactId>library</artifactId>	9
36711	<artifactId>lifecycle-mapping</artifactId>	4
36879	<artifactId>maven-checkstyle-plugin</artifactId>	4
30882	<artifactId>maven-compiler-plugin</artifactId>	6
36760	<artifactId>maven-javadoc-plugin</artifactId>	4
36886	<artifactId>maven-replacer-plugin</artifactId>	5
36786	<artifactId>parent</artifactId>	5
64341	<artifactId>robolectric</artifactId>	1
18726	<artifactId>robotium-solo</artifactId>	3
19376	<artifactId>spoon-maven-plugin</artifactId>	3
18590	<artifactId>support-v4</artifactId>	6
36972	<artifacts>	4
37125	<attr	9
30830	<avd>Nexus</avd>	3
51504	<b>	14
27851	<b>Note</b>	12
51416	<b>Versi&#243	12
30428	<b>Versie	11
28265	<b>Version	38
51460	<b>Versione	12
7438	<b>Versjon	12
48086	<b>expanded	4
47926	<b>icon	4
59148	<b>not</b>	1
19239	<betterpickers.version>1.5.2</betterpickers.version>	2
38171	<blockquote><p>	4
38595	<blockquote><pre>	4
29717	<bool	11
5281	<br/>	13
20747	<br/>In	2
20521	<br>	34
52851	<br>All	4
60167	<br>Put	3
35740	<br>This	4
19371	<build>	27
8930	<cache-path	2
1148	<category	35
14923	<christian@stimming.de>	16
53731	<clip>	2
8678	<cmdty:fraction>1</cmdty:fraction>	8
8338	<cmdty:get_quotes/>	8
8523	<cmdty:id>EUR</cmdty:id>	3
8014	<cmdty:id>USD</cmdty:id>	8
8519	<cmdty:id>template</cmdty:id>	8
8414	<cmdty:name>template</cmdty:name>	8
8330	<cmdty:quote_source>currency</cmdty:quote_source>	8
8631	<cmdty:quote_tz/>	8
8087	<cmdty:space>ISO4217</cmdty:space>	8
8370	<cmdty:space>template</cmdty:space>	8
8504	<cmdty:xcode>template</cmdty:xcode>	8
47788	<code>	12
55104	<code>Account</code>,you	6
40505	<code>Animator</code>	4
39973	<code>AnimatorListeners</code>	4
40358	<code>AnimatorSet</code>	5
40997	<code>AnimatorSet</code>:	4
40485	<code>Builder</code	4
41112	<code>Builder</code>	4
41021	<code>Builder</code>.	4
40674	<code>Float</code>	4
40932	<code>Integer</code>	4
31948	<code>Money</code>	21
41454	<code>ObjectAnimator.ofInt(target,propertyName,0,10).setDuration(500).start()</code>.	4
41377	<code>PropertyValueHolder</code>	4
48661	<code>R.menu.main_activity</code>)	4
41981	<code>ValueAnimator.ofInt(0,10).setDuration(500).start()</code>.	4
42185	<code>ValueAnimator</code>	7
41815	<code>ValueAnimator</code>.	7
41115	<code>a1</code>	4
40835	<code>a1</code>.	4
40406	<code>a2</code>	4
40804	<code>a2</code>,and	4
40685	<code>a3</code>	4
41109	<code>a3</code>.</p>	4
30334	<code>accoundId</code>	12
30585	<code>account</code>.	4
18449	<code>accountID</code>	22
8874	<code>accountId</code>	67
27842	<code>accountReassignId</code>	5
24291	<code>accountRowID</code>	12
27113	<code>accountType</code>	11
13824	<code>accountType</code>,false	4
18104	<code>accountUID</code>	39
24597	<code>accountUID</code>.	14
48375	<code>activities</code>	4
51610	<code>addend</code>.	4
33252	<code>amount</code>	22
35903	<code>amountString</code>	9
9534	<code>appWidgetId</code>	14
40686	<code>clear()</code>	4
783	<code>color</code>.	21
27743	<code>columnKey</code>	6
24067	<code>condition</code>	15
62357	<code>context</code>	4
36185	<code>currency</code>	9
18251	<code>currencyCode</code>	22
36035	<code>divisor</code>	11
53426	<code>divisor</code>.	3
7171	<code>doc</code>	15
30211	<code>document</code>	5
6456	<code>dst</code>	17
41306	<code>end()</code>	8
41897	<code>endValue</code>	4
40763	<code>endValue</code>,	8
9490	<code>false</code>	5
50416	<code>false</code>,since	5
40579	<code>float</code>	8
41602	<code>foo</code>	7
41119	<code>fraction</code>	8
40374	<code>fraction</code>.	8
20120	<code>generateNewUID</code>,	4
40364	<code>getListeners()</code>	4
26334	<code>id</code>	17
40535	<code>int</code>	8
32699	<code>locale</code>	5
63358	<code>milliseconds</code>	4
18033	<code>money</code>	12
64407	<code>money</code>.	1
31936	<code>multiplier</code>	12
41543	<code>name</code>	4
54827	<code>newParentUID</code>	4
27796	<code>newValue</code>	6
27678	<code>newValue</code><br/>	6
6414	<code>node</code>	17
30472	<code>null</code>	33
50442	<code>null</code>.	5
50938	<code>null</null>	5
54809	<code>oldParentUID</code>	4
24431	<code>orderBy</code>	9
35734	<code>other</code>	4
7293	<code>outputWriter</code>	18
33012	<code>parent</code>	3
59870	<code>parentAccountId	5
27529	<code>parentAccountId</code>	16
40838	<code>play()</code>	4
40716	<code>play(a1).after(a2)</code>	4
40995	<code>play(a1).before(a2).before(a3)</code>	4
40952	<code>play(a1).before(a2)</code>	4
40911	<code>play(a1).with(a2)</code>	4
40910	<code>play</code>	4
30510	<code>position</code>	9
39093	<code>position</code>.	5
4266	<code>prefix</code>	12
41170	<code>propertyName</code>	4
41250	<code>propertyName</code>,since	4
42010	<code>propertyName</code>.	4
32270	<code>recurringTransaction</code>	7
42205	<code>repeatCount</code>	6
40719	<code>result	8
25689	<code>rowID</code>	9
20994	<code>rowId</code>	47
19061	<code>scheduledEvent</code>.	9
41194	<code>setFoo()</code>	7
41221	<code>setName()</code>,where	4
24228	<code>sortOrder</code>	4
35715	<code>sourceSplit</code>	6
31972	<code>split</code>	5
7182	<code>src</code>	17
42705	<code>startDelay</code>	4
41331	<code>startDelay</code>,the	8
42230	<code>startValue</code>	4
40529	<code>startValue</code>,<code>x1</code>	8
51182	<code>subtrahend</code>	7
64406	<code>subtrahend</code>.	1
40889	<code>t</code>	8
25680	<code>tableName</code>	20
18227	<code>transaction</code>	11
18522	<code>transaction</code>.	15
3812	<code>true</code>	141
26772	<code>type</code>.	4
7243	<code>uid</code>	43
41508	<code>value</code>	4
41387	<code>valueFrom</code>	7
41310	<code>valueTo</code>	7
41523	<code>void</code>	4
12052	<code>where</code>	12
40425	<code>x0</code>	8
19771	<color	24
36770	<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout	7
36708	<com.actionbarsherlock.internal.widget.ActionBarContainer	7
36992	<com.actionbarsherlock.internal.widget.ActionBarContextView	7
36946	<com.actionbarsherlock.internal.widget.ActionBarView	7
36849	<com.actionbarsherlock.internal.widget.CapitalizingButton	4
64343	<com.actionbarsherlock.internal.widget.IcsLinearLayout	1
1618	<com.github.mikephil.charting.charts.BarChart	14
24736	<com.github.mikephil.charting.charts.LineChart	9
26636	<com.github.mikephil.charting.charts.PieChart	10
56571	<com.squareup.timessquare.CalendarPickerView	3
62243	<com.tech.freak.wizardpager.ui.StepPagerStrip	3
19540	<com.viewpagerindicator.TitlePageIndicator	13
36951	<configLocation>../checkstyle.xml</configLocation>	4
13640	<configuration>	23
30898	<connection>scm:git:git://github.com/codinguser/GnucashMobile.git</connection>	6
19210	<connection>scm:git:git://github.com/codinguser/gnucash-android.git</connection>	5
34010	<corners	13
16495	<cri.penta@gmail.com>	10
55450	<currency	11
20762	<currency_code>	13
3938	<data	15
19358	<debug>true</debug>	3
37184	<declare-styleable	9
18770	<dependencies>	17
18673	<dependency>	28
13460	<description>Gnucash	65
19038	<description>Instrumentation	12
19103	<description>Parent	7
18960	<developer>	10
30879	<developerConnection>scm:git:git@github.com:codinguser/GnucashMobile.git</developerConnection>	6
19222	<developerConnection>scm:git:git@github.com:codinguser/gnucash-android.git</developerConnection>	5
19286	<developers>	10
18407	<dimen	38
19167	<distribution>repo</distribution>	3
38761	<div	21
37281	<eat-comment	5
48408	<em>not</em>	7
48500	<em>something</em>	4
18627	<email>ngewif@gmail.com</email>	10
30902	<emulator>	3
37565	<enum	4
18936	<exclusion>	2
19215	<exclusions>	2
19002	<execution>	13
19314	<executions>	13
19003	<extensions>true</extensions>	22
13724	<extra	5
4064	<fefe.wyx@gmail.com>	40
18666	<fest-android.version>1.0.6</fest-android.version>	8
36897	<file>${project.build.directory	4
36960	<file>target/generated-sources/r/com/actionbarsherlock/R.java</file>	4
37667	<flag	4
71	<fragment	6
7777	<gdate>2016-07-24</gdate>	3
7704	<gdate>2016-08-23</gdate>	3
8116	<gdate>2016-08-24</gdate>	4
8653	<gdate>2016-09-18</gdate>	3
8511	<gdate>2016-09-24</gdate>	4
8514	<gnc:recurrence	4
7653	<gnc:transaction	3
25266	<goal>CleanupResources</goal>	3
25300	<goal>GenerateResources</goal>	3
36754	<goal>attach-artifact</goal>	4
36790	<goal>checkstyle</goal>	4
30699	<goal>emulator-start</goal>	3
36728	<goal>replace</goal>	5
18974	<goal>run</goal>	3
18952	<goals>	13
54096	<gradient	2
2194	<group	5
18617	<groupId>com.actionbarsherlock</groupId>	9
25202	<groupId>com.crashlytics.android</groupId>	3
25380	<groupId>com.crashlytics</groupId>	3
18572	<groupId>com.doomonafireball.betterpickers</groupId>	2
18639	<groupId>com.google.android</groupId>	8
36837	<groupId>com.google.code.maven-replacer-plugin</groupId>	5
19051	<groupId>com.jayway.android.robotium</groupId>	3
25162	<groupId>com.jayway.maven.plugins.android.generation2</groupId>	26
64381	<groupId>com.pivotallabs</groupId>	1
18845	<groupId>com.simpligility.maven.plugins</groupId>	7
18848	<groupId>com.squareup.spoon</groupId>	3
19099	<groupId>com.squareup</groupId>	4
18561	<groupId>com.viewpagerindicator</groupId>	5
32929	<groupId>joda-time</groupId>	4
36881	<groupId>junit</groupId>	5
33156	<groupId>org.achartengine</groupId>	4
36738	<groupId>org.apache.maven.plugins</groupId>	4
36729	<groupId>org.codehaus.mojo</groupId>	4
36996	<groupId>org.eclipse.m2e</groupId>	4
13877	<groupId>org.gnucash.android</groupId>	71
38293	<h3>Developer	21
1090	<header	29
16836	<i18n@haanen.net>	9
25393	<id>CleanupResources</id>	3
25365	<id>GenerateResources</id>	3
33077	<id>achartengine</id>	4
19112	<id>codinguser</id>	10
25240	<id>crashlytics-plugin-repo</id>	3
25295	<id>crashlytics-repo</id>	3
30701	<id>startEmulator</id>	3
36907	<ignore	4
36895	<ignoreMissingFile>false</ignoreMissingFile>	4
7404	<include	89
32744	<instrumentation	5
37208	<integer	5
3585	<intent	37
14	<intent-filter>	44
15745	<israel.buitron@gmail.com>	8
19041	<issueManagement>	13
2133	<item	314
12256	<item>	131
27130	<item>#000066</item>	3
27413	<item>#0B57A4</item>	7
27559	<item>#1B4F15</item>	3
27471	<item>#2A82D7</item>	3
27492	<item>#2B4726</item>	3
27570	<item>#2B8A6D</item>	3
27341	<item>#3714A4</item>	3
27488	<item>#3AA03A</item>	3
27452	<item>#6041FA</item>	3
27233	<item>#686868</item>	3
27604	<item>#6B28CE</item>	3
27609	<item>#7F2B14</item>	3
27590	<item>#8BBDEB</item>	3
27402	<item>#964B00</item>	3
27219	<item>#A50516</item>	3
27325	<item>#A51497</item>	3
27327	<item>#AF31F2</item>	3
27214	<item>#D7462C</item>	3
27358	<item>#F69E94</item>	3
27453	<item>#FB3C8F</item>	3
27277	<item>#FC0D1B</item>	3
27292	<item>#FC1CAD</item>	3
27342	<item>#FC331C</item>	3
27586	<item>#FC5AB8</item>	3
27189	<item>#FC6A6C</item>	3
27184	<item>#FD7222</item>	3
27129	<item>#FEC42E</item>	3
27403	<item>#FF0080</item>	3
3025	<item>&#218	10
12417	<item>&#8230	33
12629	<item>......</item>	3
11012	<item>...</item>	17
17913	<item>/</item>	7
18505	<item>0</item>	8
16177	<item>12	7
59316	<item>12</item>	4
18524	<item>2630000000</item>	9
10270	<item>3	32
23128	<item>3</item>	14
16462	<item>6	7
18383	<item>604800000</item>	11
59300	<item>6</item>	4
18322	<item>86400000</item>	8
4988	<item></item>	137
17994	<item></item>-	1
15876	<item>A	13
12163	<item>ABONO</item>	27
20614	<item>AC&#199	11
15323	<item>ACCIONES</item>	19
62399	<item>ACES</item>	8
10382	<item>ACTIONS</item>	17
14783	<item>ACTIU</item>	3
15375	<item>ACTIVO</item>	29
5350	<item>AED</item>	42
4706	<item>AES</item>	17
6059	<item>AFN</item>	47
17430	<item>AKCJE</item>	11
7750	<item>AKSJE</item>	24
7603	<item>AKSJEFOND</item>	19
56035	<item>AKTIE</item>	2
4254	<item>AKTIENKONTO</item>	13
5976	<item>AKTIVA</item>	12
17805	<item>AKTYWA</item>	9
5884	<item>ALL</item>	42
5552	<item>AMD</item>	42
6110	<item>ANG</item>	42
56140	<item>ANSVAR</item>	2
6374	<item>AOA</item>	42
16030	<item>ARGENT</item>	10
5095	<item>ARS</item>	46
62780	<item>ASET</item>	3
4877	<item>ASSET</item>	87
57624	<item>ATIVO</item>	9
16396	<item>ATTIVIT</item>	15
26764	<item>AUCUN</item>	7
6177	<item>AUD</item>	42
6385	<item>AUFWENDUNGEN</item>	13
15953	<item>AVOIRS</item>	10
4185	<item>AWG</item>	42
16185	<item>AZIONE</item>	19
6185	<item>AZN</item>	42
16790	<item>Aangepast	9
62378	<item>Acar</item>	6
29747	<item>Accounts</item>	5
7556	<item>Actif</item>	6
23495	<item>Actifs</item>	9
8091	<item>Activa</item>	11
8178	<item>Activos</item>	13
29078	<item>Afegane</item>	13
62385	<item>Afego</item>	6
15812	<item>Afgani</item>	16
16719	<item>Afgelopen	30
4623	<item>Afghani</item>	122
21693	<item>Afghanske</item>	10
5859	<item>Aktiva</item>	23
56212	<item>Aktuell	2
23082	<item>Aktueller	17
5044	<item>Algerian	121
17215	<item>Algerijnse	9
62512	<item>Algerischer	6
21310	<item>Algeriske	10
947	<item>All	120
16988	<item>Alle	9
16654	<item>Amerikaanse	6
15251	<item>Amerikanske	14
16499	<item>Antilliaanse	6
17208	<item>Argentijnse	9
4777	<item>Argentine	101
62530	<item>Argentinischer	6
21534	<item>Argentinsk	10
15845	<item>Ariary	22
17082	<item>Armeense	9
4937	<item>Armenian	101
62507	<item>Armenischer	6
21700	<item>Armensk	10
17015	<item>Arubaanse	9
5629	<item>Aruban	101
21923	<item>Arubiske	10
21605	<item>Aserbajdsjanske	10
8139	<item>Assets</item>	19
8118	<item>Assicurazione</item>	7
8056	<item>Assurance</item>	6
7549	<item>Ativos</item>	9
52018	<item>Attivit</item>	7
5930	<item>Ausgaben</item>	24
5593	<item>Australian	101
16567	<item>Australische	9
62513	<item>Australischer	6
21441	<item>Australske	10
6086	<item>Azerbaijanian	101
16858	<item>Azerbeidzjaanse	9
5295	<item>BAM</item>	42
14752	<item>BANC</item>	3
16270	<item>BANCA</item>	11
15559	<item>BANCO</item>	32
6355	<item>BANK</item>	101
16052	<item>BANQUE</item>	10
4979	<item>BARGELD</item>	6
5635	<item>BBD</item>	42
6036	<item>BDT</item>	42
56375	<item>BETALBAR</item>	2
6181	<item>BGN</item>	42
6316	<item>BHD</item>	42
4526	<item>BIF</item>	42
5398	<item>BMD</item>	42
4169	<item>BND</item>	42
4110	<item>BOB</item>	42
5620	<item>BOV</item>	42
4473	<item>BRL</item>	42
4578	<item>BSD</item>	42
5202	<item>BTN</item>	42
4412	<item>BWP</item>	42
5355	<item>BYR</item>	42
5180	<item>BZD</item>	42
16721	<item>Bahamaanse	9
4496	<item>Bahamian	104
5784	<item>Bahraini	104
17174	<item>Bahreinse	9
15411	<item>Baht	13
6381	<item>Baht</item>	104
15528	<item>Balboa	13
6230	<item>Balboa</item>	107
17061	<item>Barbadaanse	6
4532	<item>Barbados	104
28936	<item>Bath	10
5847	<item>Belarussian	98
16878	<item>Belizaanse	6
4897	<item>Belize	105
51410	<item>Beni</item>	8
59243	<item>Benutzerdefiniert&#8230	6
17065	<item>Bermuda	6
4805	<item>Bermudian	107
17660	<item>Biecy	32
8199	<item>Bienes</item>	7
15739	<item>Birr	22
5426	<item>Bolivar	110
4938	<item>Boliviano</item>	108
15980	<item>Bolvar	6
62525	<item>Brasilianischer	6
21908	<item>Brasilianske	10
16685	<item>Braziliaanse	6
5508	<item>Brazilian	102
4866	<item>Brunei	105
17128	<item>Bruneise	6
17071	<item>Bulgaarse	6
4469	<item>Bulgarian	102
21291	<item>Bulgarske	10
16998	<item>Burundese	6
5709	<item>Burundi	105
15459	<item>C&#243	13
5989	<item>CAD</item>	42
15527	<item>CAPITAL</item>	13
16145	<item>CAPITALE</item>	15
12260	<item>CARGO</item>	27
20223	<item>CART&#195	11
16413	<item>CARTA	15
16003	<item>CARTE	10
57559	<item>CARTO	11
6043	<item>CASH</item>	91
5628	<item>CDF</item>	42
4378	<item>CFA	105
16747	<item>CFA-Frank	6
5099	<item>CFP	105
16828	<item>CFP-Frank</item>	6
4651	<item>CHE</item>	44
4822	<item>CHF</item>	42
6249	<item>CHW</item>	42
5654	<item>CLF</item>	44
4377	<item>CLP</item>	42
6207	<item>CNY</item>	42
16092	<item>COMERCIO</item>	3
11339	<item>COMMERCE</item>	3
5643	<item>CONTAS	22
29232	<item>CONTO	4
4986	<item>COP</item>	42
5440	<item>COU</item>	44
20822	<item>CR&#201	11
6399	<item>CRC</item>	44
14808	<item>CRDIT</item>	13
28860	<item>CRDITO</item>	18
5292	<item>CREDIT	80
4909	<item>CREDIT</item>	133
12205	<item>CREDITO</item>	15
30871	<item>CREDIT_CARD</item>	8
5749	<item>CUC</item>	44
5580	<item>CUP</item>	44
5377	<item>CURRENCY</item>	94
5378	<item>CVE</item>	42
4672	<item>CZK</item>	44
17008	<item>Canadese	6
5297	<item>Canadian	98
6330	<item>Cape	102
51457	<item>Capital</item>	9
8283	<item>Capitali</item>	15
23372	<item>Capitaux	11
20958	<item>Cart&#227	15
10970	<item>Carte	20
12742	<item>Carto	18
6099	<item>Cayman	102
16991	<item>Caymaneilandse	6
21731	<item>Caymanyene	10
28957	<item>Cedi	11
15590	<item>Cedi</item>	14
23886	<item>Charges</item>	11
15558	<item>Chel&#237	10
15607	<item>Cheln	10
5420	<item>Chilean	102
16901	<item>Chileense	6
21682	<item>Chilenske	10
15454	<item>Col&#243	13
15389	<item>Coln	10
16739	<item>Colombiaanse	6
4695	<item>Colombian	102
21181	<item>Colombianske	10
29033	<item>Colon	13
17011	<item>Comorese	6
4069	<item>Comoro	105
28913	<item>Compartilhar	8
15435	<item>Compartir	23
16425	<item>Condividi	19
4632	<item>Congolese	102
16524	<item>Converteerbare	6
4313	<item>Convertible	102
4219	<item>Cordoba	111
29022	<item>Coroa	13
15923	<item>Corona	16
5850	<item>Costa	112
16697	<item>Costaricaanse	6
28983	<item>Cotao	10
15935	<item>Crdoba	14
5616	<item>Croatian	109
16622	<item>Cubaanse	6
4111	<item>Cuban	117
21376	<item>Cubansk	10
1303	<item>Current	133
481	<item>Custom	93
6076	<item>Czech	110
21150	<item>D&#201	11
8469	<item>D&#233	14
15826	<item>D&#237	10
15355	<item>D&#243	18
25004	<item>DAGELIJKS</item>	7
28127	<item>DAGLIG</item>	6
4051	<item>DAILY</item>	17
14708	<item>DBIT</item>	13
28938	<item>DBITO</item>	18
15258	<item>DEBET</item>	43
5995	<item>DEBIT</item>	113
12543	<item>DEBITO</item>	15
20547	<item>DESPESA</item>	25
14766	<item>DESPESES</item>	5
16084	<item>DETTES</item>	9
11181	<item>DEVISES</item>	14
28225	<item>DIARIO</item>	6
20631	<item>DINHEIRO</item>	19
28207	<item>DIRIO</item>	3
15730	<item>DIVISA</item>	16
4471	<item>DJF</item>	42
5264	<item>DKK</item>	44
17512	<item>DOCHD</item>	9
4748	<item>DOP</item>	42
5556	<item>DZD</item>	46
29204	<item>Da	4
5817	<item>Dalasi</item>	122
62379	<item>Dalassi</item>	6
5464	<item>Danish	116
21327	<item>Dansk	10
14706	<item>Danske	14
17183	<item>Deense	6
14804	<item>Delt	16
15367	<item>Denar	14
5403	<item>Denar</item>	113
15513	<item>Derechos	14
62800	<item>Desde	3
8261	<item>Despesas</item>	11
15927	<item>Dinar	26
29069	<item>Direito	10
28914	<item>Dirham	11
7956	<item>Diverso</item>	3
8262	<item>Divertissement</item>	3
6340	<item>Djibouti	113
16926	<item>Djiboutiaanse	6
15314	<item>Dlar	25
62529	<item>Dnische	6
15458	<item>Dobra	21
4931	<item>Dobra</item>	113
15383	<item>Dolar	13
17150	<item>Dominicaanse	6
4453	<item>Dominican	104
21627	<item>Dominikanske	10
15316	<item>Dong	14
6247	<item>Dong</item>	107
29046	<item>Dongue</item>	10
15760	<item>Dram	22
15434	<item>Drham	10
10788	<item>DropBox</item>	134
10330	<item>Dropbox</item>	48
12951	<item>Dysk	9
14656	<item>EFECTIU</item>	6
15768	<item>EFECTIVO</item>	13
8266	<item>EGENKAPITAL</item>	19
55950	<item>EGET	2
5173	<item>EGP</item>	42
8255	<item>EIENDEL</item>	13
5841	<item>EIGENKAPITAL</item>	10
4328	<item>EINKOMMEN</item>	10
62766	<item>EKUITAS</item>	3
16259	<item>ENTRATA</item>	18
29259	<item>ENTRATE</item>	4
5060	<item>EQUITY</item>	96
5998	<item>ERN</item>	42
35234	<item>ERTRGE</item>	3
5781	<item>ETB</item>	42
5525	<item>EUR</item>	42
5526	<item>EXPENSE</item>	103
4740	<item>East	104
8034	<item>Egenkapital</item>	7
55983	<item>Eget	2
4519	<item>Egyptian	104
17118	<item>Egyptische	6
21588	<item>Egyptisk	10
8508	<item>Eiendeler</item>	7
26345	<item>Eigen	10
4499	<item>Einkommen</item>	24
4274	<item>El	107
14896	<item>Engelske	14
7987	<item>Entertainment</item>	13
8286	<item>Entrate</item>	17
8231	<item>Entretenimiento</item>	9
12279	<item>Envia	17
12191	<item>Enviar	26
12965	<item>Envoyer	8
8473	<item>Equity</item>	36
15510	<item>Escudo	22
5338	<item>Ethiopian	107
17107	<item>Ethiopische	6
15593	<item>Euro	20
4614	<item>Euro</item>	101
8111	<item>Expenses</item>	20
29883	<item>Export	5
6329	<item>Externer	2
59006	<item>Externes	2
4297	<item>FJD</item>	42
6382	<item>FKP</item>	42
21247	<item>FOND</item>	6
16172	<item>FONDO	17
15848	<item>FONDOS</item>	19
11705	<item>FONDS	17
15963	<item>FONDS</item>	9
58594	<item>FONS	2
4470	<item>FORDERUNGEN</item>	10
55862	<item>FORDRAN</item>	2
8417	<item>FORDRING</item>	13
11019	<item>FRAIS</item>	12
4202	<item>FUNDO	17
20464	<item>FUNDO</item>	16
17482	<item>FUNDUSZ	11
5126	<item>Falkland	101
16830	<item>Falklandeilands	6
21750	<item>Falklandske	10
29814	<item>Favorites</item>	5
5791	<item>Fiji	104
17024	<item>Filippijnse	6
21566	<item>Filippinske	10
15804	<item>Flor&#237	8
28926	<item>Florim	11
15684	<item>Florin	18
15924	<item>Florn	10
62407	<item>Forint	6
6377	<item>Forint</item>	107
15595	<item>Forinto	14
7757	<item>Forsikringer</item>	7
15904	<item>Franco	25
6213	<item>Freigeben&#8230	3
11488	<item>GASTO</item>	19
5298	<item>GBP</item>	44
25458	<item>GEEN</item>	8
6250	<item>GEL</item>	42
4824	<item>GHS</item>	42
4702	<item>GIP</item>	42
8647	<item>GJELD</item>	19
6132	<item>GMD</item>	44
4392	<item>GNF</item>	42
17314	<item>GOTWKA</item>	14
4294	<item>GTQ</item>	42
5516	<item>GYD</item>	42
21169	<item>Gassiske	10
7595	<item>Gastos</item>	15
16927	<item>Geen	6
4027	<item>Ghana	104
17134	<item>Ghanese	6
4073	<item>Gibraltar	101
16677	<item>Gibraltarees	6
21681	<item>Gibraltarske	10
7474	<item>Gjeld</item>	7
21963	<item>Gjeldende	31
4832	<item>Gold</item>	97
10742	<item>Google	144
16545	<item>Goud</item>	6
28775	<item>Gourde	10
6108	<item>Gourde</item>	107
15365	<item>Grivna</item>	14
62478	<item>Grvnia</item>	6
15366	<item>Guaran&#237	6
15534	<item>Guaran</item>	13
6077	<item>Guarani</item>	110
55984	<item>Guardar	2
4221	<item>Guinea	106
16698	<item>Guinese	6
21328	<item>Gull</item>	10
16716	<item>Guyaanse	6
5416	<item>Guyana	106
56146	<item>HANDEL</item>	2
59093	<item>HANDELSKONTO</item>	4
4371	<item>HKD</item>	42
5572	<item>HNL</item>	42
4653	<item>HRK</item>	44
5576	<item>HTG</item>	42
6105	<item>HUF</item>	42
4366	<item>Haben</item>	13
12521	<item>Hafza	13
58635	<item>Handlowy</item>	2
4076	<item>Hong	108
17176	<item>Hongkongse	6
6057	<item>Hryvnia</item>	107
16712	<item>Huidige	30
21849	<item>Hviterussiske	10
4732	<item>IDR</item>	42
4590	<item>ILS</item>	42
4533	<item>INCOME</item>	104
51974	<item>INGEN</item>	4
10468	<item>INGRESO</item>	19
58547	<item>INGRESSOS	2
14852	<item>INGRESSOS</item>	5
56315	<item>INKOMST</item>	2
21549	<item>INNGENDE</item>	6
8581	<item>INNTEKT</item>	19
4646	<item>INR</item>	42
5249	<item>INVESTMENTFONDS</item>	13
6142	<item>IQD</item>	42
5243	<item>IRR</item>	42
5034	<item>ISK</item>	42
6365	<item>Iceland	105
28723	<item>Iene</item>	11
17158	<item>Ijslandse	6
7598	<item>Income</item>	20
5483	<item>Indian	105
16513	<item>Indiase	6
62506	<item>Indische	6
21358	<item>Indiske	10
21487	<item>Ingen	10
8603	<item>Ingresos</item>	15
8351	<item>Inkomsten</item>	13
8456	<item>Inntekter</item>	9
8484	<item>Insurance</item>	14
29431	<item>Intervallo	7
54923	<item>Intervalo	17
7501	<item>Intrattenimento</item>	4
22557	<item>Invia	8
16744	<item>Iraakse	6
17103	<item>Iraanse	6
62536	<item>Irakischer	6
21938	<item>Irakiske	10
5022	<item>Iranian	105
62528	<item>Iranischer	6
21288	<item>Iranske	10
4400	<item>Iraqi	103
21272	<item>Islandske	10
21234	<item>Israelske	10
16933	<item>Isralische	6
6112	<item>JMD</item>	42
4279	<item>JOD</item>	42
4197	<item>JPY</item>	42
17187	<item>Jamaicaanse	6
4311	<item>Jamaican	103
21602	<item>Jamaicanske	10
17149	<item>Jemenitische	6
16889	<item>Jordaanse	6
6315	<item>Jordanian	103
62505	<item>Jordanischer	6
21430	<item>Jordanske	10
17770	<item>KAPITA</item>	9
17350	<item>KARTA	9
62771	<item>KARTU	3
5739	<item>KEINE</item>	8
6290	<item>KES</item>	42
4760	<item>KGS</item>	42
6380	<item>KHR</item>	42
4063	<item>KMF</item>	42
56447	<item>KONTANT</item>	2
8039	<item>KONTANTER</item>	19
4516	<item>KPW</item>	42
59331	<item>KRED</item>	4
11242	<item>KREDIT</item>	33
5494	<item>KREDITKARTE</item>	6
55939	<item>KREDITKORT</item>	2
8066	<item>KREDITTKORT</item>	19
17611	<item>KREDYT</item>	9
4057	<item>KRW</item>	41
4984	<item>KWD</item>	42
5450	<item>KYD</item>	42
4289	<item>KZT</item>	42
17084	<item>Kaapverdische	6
62526	<item>Kanadische	6
21202	<item>Kanadiske	10
26864	<item>KapitalKonto</item>	7
21271	<item>Kapp	10
12625	<item>Karta	20
16820	<item>Keniaanse	6
5245	<item>Kenyan	103
21672	<item>Kenyanske	10
17995	<item>Kina	15
4232	<item>Kina</item>	109
5634	<item>Kip</item>	106
12062	<item>Kirim	5
16644	<item>Koeweitse	6
62531	<item>Kolumbianischer	6
62509	<item>Kongolesischer	6
21275	<item>Kongolesiske	10
21296	<item>Konvertible	10
16810	<item>Kroatische	10
21547	<item>Kroatiske	10
29083	<item>Krone	10
62503	<item>Kubanischer	6
15580	<item>Kuna	29
4031	<item>Kuwaiti	101
21392	<item>Kuwaitiske	10
15617	<item>Kwacha	18
6401	<item>Kwacha</item>	104
15833	<item>Kwanza	14
4349	<item>Kwanza</item>	107
15321	<item>Kyat	14
5763	<item>Kyat</item>	104
6306	<item>LAK</item>	42
6123	<item>LBP</item>	42
7444	<item>LEVERANDRGJELD</item>	13
62783	<item>LIABILITAS</item>	3
5573	<item>LIABILITY</item>	87
16166	<item>LIQUIDI</item>	11
4780	<item>LKR</item>	42
5587	<item>LRD</item>	42
6320	<item>LSL</item>	42
5016	<item>LTL</item>	42
5608	<item>LVL</item>	42
5031	<item>LYD</item>	42
15451	<item>Lari	14
4391	<item>Lari</item>	107
64326	<item>Lari</item>-	1
1976	<item>Last	115
29076	<item>Lat	10
15698	<item>Lats	18
6083	<item>Latvian	97
21903	<item>Latviske	10
4697	<item>Lebanese	101
15903	<item>Lek	29
5121	<item>Lek</item>	109
15393	<item>Lempira	14
4260	<item>Lempira</item>	109
62375	<item>Leoa</item>	6
5246	<item>Leone</item>	109
17179	<item>Letse	6
23052	<item>Letzte	17
15909	<item>Leu	22
15912	<item>Lev	22
7413	<item>Liabilities</item>	36
16652	<item>Libanees	6
21375	<item>Libanesiske	10
16975	<item>Liberiaanse	6
5218	<item>Liberian	103
62520	<item>Liberianischer	6
21463	<item>Liberiske	10
16694	<item>Libische	6
15566	<item>Libra	29
4888	<item>Libyan	103
62532	<item>Libyscher	6
21199	<item>Libyske	10
15468	<item>Lilangeni	14
5632	<item>Lilangeni</item>	109
15865	<item>Lira	18
28834	<item>Lita	10
15611	<item>Litas	18
21178	<item>Litauisk	10
6375	<item>Lithuanian	103
16729	<item>Litouwse	6
4125	<item>Loti</item>	109
25413	<item>MAANDELIJKS</item>	11
5649	<item>MAD</item>	42
62737	<item>MATA	3
6022	<item>MDL</item>	42
28177	<item>MENSAL</item>	6
28158	<item>MENSILE</item>	8
25998	<item>MENSUAL</item>	12
26970	<item>MENSUEL</item>	10
5858	<item>MGA</item>	42
4105	<item>MKD</item>	42
6073	<item>MMK</item>	42
28142	<item>MNEDLIG</item>	9
4409	<item>MNT</item>	42
20425	<item>MOEDA</item>	16
5289	<item>MONATLICH</item>	12
14705	<item>MONEDA</item>	5
4690	<item>MONTHLY</item>	25
6341	<item>MOP</item>	44
5389	<item>MRO</item>	42
55911	<item>MSESIDIG	2
6106	<item>MUR</item>	42
4514	<item>MUTUAL	92
28284	<item>MUTUAL</item>	18
30792	<item>MUTUAL_FUND</item>	8
4998	<item>MVR</item>	42
6033	<item>MWK</item>	42
5788	<item>MXN</item>	42
5786	<item>MXV</item>	42
6372	<item>MYR</item>	42
6236	<item>MZN</item>	42
16872	<item>Malagasi	6
4895	<item>Malagasy	105
5322	<item>Malaysian	105
21527	<item>Malaysiske	10
16717	<item>Maleisische	6
15882	<item>Manat	22
15855	<item>Marco	25
16774	<item>Marokkaanse	6
21905	<item>Marokkanske	10
17013	<item>Mauritiaanse	6
6268	<item>Mauritius	108
21811	<item>Meksikansk	10
3732	<item>Mes	49
23255	<item>Mese	26
15578	<item>Metical	18
17170	<item>Mexicaanse	7
5637	<item>Mexican	113
62501	<item>Mexikanischer	6
62454	<item>Moeda	6
4978	<item>Moeda</item>	6
10809	<item>Mois	32
17184	<item>Moldavische	6
21429	<item>Moldova	10
4269	<item>Moldovan	99
15380	<item>Moneda	14
6064	<item>Moroccan	105
21355	<item>Mosambik	10
5087	<item>Mozambique	101
23270	<item>Ms	42
4596	<item>Mvdol</item>	117
64243	<item>Mvdol</item>-	1
5431	<item>NAD</item>	42
17703	<item>NALENO</item>	9
62384	<item>NEGOCIAO</item>	8
28080	<item>NENHUM</item>	3
28152	<item>NESSUNA</item>	5
4346	<item>NGN</item>	42
28120	<item>NINGUNO</item>	8
5685	<item>NIO</item>	44
5798	<item>NOK</item>	42
6298	<item>NONE</item>	22
5915	<item>NPR</item>	42
5869	<item>NZD</item>	42
15589	<item>Naira	14
5382	<item>Naira</item>	114
4441	<item>Nakfa</item>	114
4603	<item>Namibia	101
16612	<item>Namibische	6
21405	<item>Namibiske	10
21824	<item>Nederlandske	10
62413	<item>Nenhuma	6
4280	<item>Nepalese	101
21378	<item>Nepalske	10
4778	<item>Netherlands	101
4934	<item>New	107
21185	<item>Newzealandske	10
15676	<item>Ngultrum	14
5819	<item>Ngultrum</item>	120
62409	<item>Ngultrume	6
17171	<item>Nieuw-Zeelandse	6
16756	<item>Nieuwe	6
5195	<item>No	107
16796	<item>Noord-Koreaanse	6
16584	<item>Noorse	6
21559	<item>Nordkoreanske	10
14833	<item>Norske	24
6368	<item>North	107
5539	<item>Norwegian	104
29096	<item>Nova	10
29093	<item>Novo	11
5903	<item>Nuevo	110
21488	<item>Nye	10
4671	<item>OFX</item>	128
5754	<item>OMR</item>	42
17641	<item>Od	10
22101	<item>Odeslat&#8230	7
16591	<item>Oeganda	6
16566	<item>Oezbekistaanse	6
21673	<item>Omansk	10
7817	<item>Ontspanning</item>	3
16514	<item>Oost-Caribische	6
15406	<item>Oro</item>	17
17757	<item>Ostatnich	8
17487	<item>Ostatnie	32
5028	<item>Ouguiya</item>	117
29110	<item>Ouro	12
29029	<item>Ouro</item>	11
23311	<item>OwnCloud</item>	7
23113	<item>Owncloud</item>	21
5614	<item>PAB</item>	42
58595	<item>PAGAMENTS	2
15586	<item>PASIVO</item>	13
14657	<item>PASSIU</item>	5
4698	<item>PASSIVA</item>	10
16242	<item>PASSIVIT</item>	15
20286	<item>PASSIVO</item>	19
5743	<item>PATRIMNIO	9
4347	<item>PAYABLE</item>	100
5082	<item>PEN</item>	42
62740	<item>PENDAPATAN</item>	3
62772	<item>PENGELUARAN</item>	3
62765	<item>PERDAGANGAN</item>	3
4807	<item>PGK</item>	42
5337	<item>PHP</item>	44
62736	<item>PIUTANG</item>	3
5394	<item>PKR</item>	44
4844	<item>PLN</item>	46
6235	<item>PYG</item>	42
16930	<item>Pa\'anga</item>	16
5042	<item>Paanga</item>	117
16568	<item>Pakistaanse	6
5591	<item>Pakistan	105
21892	<item>Pakistanske	10
28667	<item>Paladio</item>	12
62437	<item>Paldio</item>	6
6294	<item>Palladium</item>	111
16091	<item>Partager	17
51438	<item>Pasivo</item>	6
52050	<item>Pasivos</item>	4
26302	<item>Passiva</item>	15
51566	<item>Passivit</item>	11
51516	<item>Passivos</item>	4
4302	<item>Pataca</item>	122
51433	<item>Patrimnio	4
5351	<item>Peso	65
5523	<item>Philippine	118
15893	<item>Plata</item>	14
16687	<item>Platina</item>	23
15524	<item>Platino</item>	16
6080	<item>Platinum</item>	114
16853	<item>Pond	6
6151	<item>Pound	114
28899	<item>Prata</item>	11
16120	<item>Priode&#8230	5
16481	<item>Priode</item>	7
4565	<item>Pula</item>	120
21511	<item>Pund	10
4095	<item>QAR</item>	42
6356	<item>QIF</item>	124
28117	<item>QUOTIDIANO</item>	5
26773	<item>QUOTIDIEN</item>	7
16629	<item>Qatarese	6
5424	<item>Qatari	117
28872	<item>Quacha	10
29021	<item>Quacha</item>	10
4414	<item>Quetzal</item>	120
28678	<item>Quiate</item>	10
28614	<item>Quipe</item>	10
34943	<item>RECEITA</item>	9
6032	<item>RECEIVABLE</item>	94
16073	<item>RECEVABLE</item>	9
62777	<item>REKSA	3
20569	<item>RENDIMENTO</item>	19
11993	<item>REVENU</item>	3
16101	<item>REVENUS</item>	9
5955	<item>RON</item>	42
5553	<item>RSD</item>	42
4417	<item>RUB</item>	42
6391	<item>RWF</item>	42
15303	<item>Rail	14
15295	<item>Rand	14
4193	<item>Rand</item>	111
28583	<item>Rande</item>	10
3024	<item>Rango	11
15340	<item>Real	22
8400	<item>Receitas</item>	11
29832	<item>Recurring	3
28885	<item>Renmimbi	10
7687	<item>Revenu</item>	8
23506	<item>Revenus</item>	9
5352	<item>Rial	111
5317	<item>Riel</item>	114
28961	<item>Riel</item>-	1
15687	<item>Ringgit	22
15840	<item>Riyal	14
17108	<item>Roepie</item>	6
62422	<item>Rpia	6
62415	<item>Ruble	6
15829	<item>Rublo	22
28727	<item>Rufia</item>	10
4384	<item>Rufiyaa</item>	111
15294	<item>Rupia	26
62435	<item>Rupia</item>	6
4719	<item>Rupiah</item>	111
5871	<item>Russian	96
16575	<item>Russische	6
21962	<item>Russisk	10
4525	<item>Rwanda	111
62761	<item>SAHAM</item>	3
5204	<item>SAR</item>	42
5907	<item>SBD</item>	42
5931	<item>SCR</item>	42
10935	<item>SD	114
6038	<item>SD-Kartenspeicher</item>	20
16875	<item>SD-kaart</item>	12
11077	<item>SD-kort</item>	33
12885	<item>SD-krtya</item>	7
10830	<item>SD</item>	42
4212	<item>SDG</item>	42
4200	<item>SDR	115
18003	<item>SDR()</item>	11
5115	<item>SEK</item>	42
26752	<item>SEMAINE</item>	10
26057	<item>SEMANAL</item>	13
28145	<item>SETTIMANALE</item>	8
5372	<item>SGD</item>	42
4168	<item>SHP</item>	42
20487	<item>SITUA&#199	11
62421	<item>SITUAO	8
6337	<item>SLL</item>	42
6226	<item>SOS</item>	42
5497	<item>SRD</item>	42
5767	<item>SSP</item>	42
5795	<item>STD</item>	42
4848	<item>STOCK</item>	97
5822	<item>SVC</item>	42
4579	<item>SYP</item>	42
4683	<item>SZL</item>	42
5166	<item>Saint	108
16844	<item>Salomonseilandse	6
21774	<item>Salomonyene	10
55681	<item>Salva	2
16620	<item>Salvadoraanse	6
55773	<item>Salvar	2
21314	<item>Sankthelenske	10
16659	<item>Saoedi-Arabische	6
4705	<item>Saudi	108
21876	<item>Saudiarabiske	10
21530	<item>Save	16
16199	<item>Scheda	19
29884	<item>Scheduled	3
8131	<item>Seguro</item>	7
7688	<item>Seguros</item>	12
31063	<item>Select	4
28930	<item>Sem	10
56043	<item>Senaste	2
10609	<item>Send	110
12598	<item>Senden	11
5451	<item>Senden&#8230	17
6056	<item>Serbian	112
21525	<item>Serbiske	10
16616	<item>Servische	6
29839	<item>Settings</item>	3
21456	<item>Seychellene	10
4046	<item>Seychelles	112
16711	<item>Seychelse	6
16278	<item>Share	42
28891	<item>Shequl	10
4773	<item>Silver</item>	97
15920	<item>Sin	14
21363	<item>Singapor	10
5167	<item>Singapore	101
16542	<item>Singaporese	6
16650	<item>Sint-Heleense	6
21625	<item>Siste	31
11484	<item>Skicka	7
21435	<item>Slv</item>	10
16967	<item>Soedanese	6
5683	<item>Soll</item>	15
6093	<item>Solomon	112
15555	<item>Som	25
4423	<item>Som</item>	115
4040	<item>Somali	108
16605	<item>Somalische	6
21225	<item>Somaliske	10
15541	<item>Somoni	14
5835	<item>Somoni</item>	114
5515	<item>South	108
56415	<item>Spara	2
21513	<item>Sr	10
5675	<item>Sri	108
16960	<item>Srilankaanse	6
21483	<item>Srilankiske	10
6053	<item>Sucre</item>	122
4611	<item>Sudanese	116
21561	<item>Sudanske	10
62453	<item>Sum	6
16917	<item>Surinaamse	6
6221	<item>Surinam	119
21386	<item>Sveitsiske	10
14881	<item>Svenske	22
5953	<item>Swedish	109
4853	<item>Swiss	109
5625	<item>Syrian	116
17014	<item>Syrisch	6
21910	<item>Syriske	10
14665	<item>TARGETA	3
15408	<item>TARJETA	13
28232	<item>TGLICH</item>	3
4257	<item>THB</item>	42
56095	<item>TILLGNG</item>	2
5607	<item>TJS</item>	42
6066	<item>TMT</item>	42
5960	<item>TND</item>	42
5100	<item>TOP</item>	42
4465	<item>TRADING</item>	109
6166	<item>TRY</item>	42
4303	<item>TTD</item>	42
62784	<item>TUNAI</item>	3
4846	<item>TWD</item>	42
6284	<item>TZS</item>	42
28610	<item>Taca</item>	10
16664	<item>Taiwanese	6
5613	<item>Taka</item>	119
15819	<item>Tala	14
4101	<item>Tala</item>	127
17163	<item>Tanzaniaanse	6
4485	<item>Tanzanian	120
21631	<item>Tanzanianske	10
12939	<item>Targeta	15
12703	<item>Tarjeta	25
15636	<item>Tenge	14
5045	<item>Tenge</item>	121
16764	<item>Testen	6
5773	<item>Testing	103
21584	<item>Tidsrom</item>	8
21235	<item>Tilpasset	8
2481	<item>Todo	11
62482	<item>Todos	5
16437	<item>Tout	9
6240	<item>Trinidad	123
62533	<item>Tschechische	6
16798	<item>Tsjechische	6
21802	<item>Tsjekkiske	10
55037	<item>Tudo</item>	15
15312	<item>Tugrik	18
5729	<item>Tugrik</item>	124
62289	<item>Tugrik</item>+	1
16852	<item>Tunesische	6
4137	<item>Tunisian	120
21787	<item>Tunisiske	10
4552	<item>Turkish	104
5886	<item>Turkmenistan	108
21703	<item>Turkmensk	10
17221	<item>Turkse	6
21508	<item>Tyrkiske	10
5445	<item>UAE	111
4270	<item>UAH</item>	42
5176	<item>UGX</item>	42
21241	<item>UIC	10
6192	<item>UIC-Franc</item>	111
62461	<item>UIC-Franco</item>	6
16908	<item>UIC-Frank</item>	6
28181	<item>UKENTLIG</item>	9
5575	<item>US	115
16173	<item>USCITA</item>	18
29467	<item>USCITE</item>	4
6197	<item>USD</item>	44
62714	<item>UTANG</item>	3
21643	<item>UTGENDE</item>	6
7468	<item>UTGIFT</item>	21
4660	<item>UYI</item>	44
5862	<item>UYU</item>	44
4443	<item>UZS</item>	44
17363	<item>Udostpnij	17
4341	<item>Uganda	108
21960	<item>Ugandiske	10
28967	<item>Uguia</item>	10
15899	<item>Uguiya</item>	14
8683	<item>Uitgaven</item>	13
55786	<item>Uloit	2
23265	<item>Ultimi	26
59339	<item>Unbegrenzt</item>	6
8357	<item>Underholdning</item>	4
5302	<item>Unidad	128
29148	<item>Unidade	13
4418	<item>Unidades	128
4571	<item>Unterhaltung</item>	19
28992	<item>Uruguai	12
4989	<item>Uruguay	128
14587	<item>Uruguayan	85
21946	<item>Uruguayanske	10
21785	<item>Usbekiske	10
7579	<item>Uscite</item>	17
15111	<item>Uten	12
7993	<item>Utgifter</item>	9
4364	<item>Uzbekistan	127
7622	<item>VALUTA</item>	36
5000	<item>VEF</item>	42
59163	<item>VERBINDLICHKEITEN</item>	4
5178	<item>VND</item>	42
55553	<item>VR</item>	2
4847	<item>VUV</item>	44
6367	<item>Vatu</item>	133
4307	<item>Versicherung</item>	20
7567	<item>Verzekering</item>	6
16507	<item>Verzenden&#8230	16
17766	<item>WALUTA</item>	11
28217	<item>WCHENTLICH</item>	5
6133	<item>WEEKLY</item>	22
25101	<item>WEKELIJKSE</item>	11
5078	<item>WHRUNG</item>	13
17573	<item>WIERZYTELNO</item>	9
4428	<item>WIR	127
6156	<item>WST</item>	42
17372	<item>WYDATEK</item>	9
17827	<item>Wasny	10
16707	<item>Wit-Russische	6
15571	<item>Won	22
5150	<item>Won</item>	104
5834	<item>XAF</item>	42
4857	<item>XAG</item>	42
5346	<item>XAU</item>	42
4204	<item>XCD</item>	42
4082	<item>XDR</item>	42
5666	<item>XFU</item>	42
6371	<item>XML</item>	105
6264	<item>XOF</item>	42
6280	<item>XPD</item>	44
6098	<item>XPF</item>	42
4427	<item>XPT</item>	44
6004	<item>XSU</item>	42
6218	<item>XTS</item>	42
4997	<item>XXX</item>	42
28912	<item>Xelim	11
5169	<item>YER</item>	42
5110	<item>Yemeni	116
15775	<item>Yen	14
6012	<item>Yen</item>	107
5623	<item>Yuan	107
4310	<item>ZAR</item>	42
6291	<item>ZMK</item>	43
17776	<item>ZOBOWIZANIE</item>	9
5244	<item>ZWL</item>	46
16577	<item>Zambiaanse	6
4296	<item>Zambian	109
21769	<item>Zambiske	10
17152	<item>Zilver</item>	6
16935	<item>Zimbabwaanse	6
5849	<item>Zimbabwe	114
21398	<item>Zimbabwiske	10
15729	<item>Zloty	17
5599	<item>Zloty</item>	123
16541	<item>Zuid	6
16910	<item>Zweedse	6
17180	<item>Zwitserse	6
15809	<item>ltimos	58
23043	<item>ltims	20
11631	<item>ownCloud</item>	57
21913	<item>stkaribiske	10
29098	<item>unidades	12
37905	<jakewharton@gmail.com>	4
16784	<janssens-geert@telenet.be>	15
35992	<jesse.shieh.pub@gmail.com>	2
12398	<jorgeml@gmail.com>	19
16913	<kjelltp@gmail.com>	8
47833	<li>	8
47854	<li><b>Context	4
47876	<li><b>Options	4
47661	<li><b>Sub	4
53522	<li><b>c</b>:	2
53573	<li><b>n</b>:	2
53713	<li><b>y</b>:	2
32730	<li>Add	18
33556	<li>Added	11
32880	<li>Adds	21
12936	<li>Append	5
34058	<li>Auto-balancing	8
62869	<li>Change	4
63039	<li>Create	4
58526	<li>Default	2
59442	<li>Extract	6
12844	<li>Find	5
34875	<li>Fixes	3
12957	<li>If	5
32813	<li>Migrate	15
33932	<li>New	8
59376	<li>Shared	3
58535	<li>United	2
58530	<li>User	2
62824	<li>We	4
46592	<li>animation	4
46564	<li>behavior	4
47034	<li>indeterminate	4
47359	<li>max	4
46986	<li>progress	4
38217	<li>{@link	15
18998	<license>	3
18959	<licenses>	3
36831	<lifecycleMappingMetadata>	4
18216	<lxbzmy@gmail.com>	13
7126	<manifest	96
54931	<me@fmorato.com>	3
20191	<memo>".	13
33452	<memo>"</p>	7
21149	<menu	46
1650	<menu>	23
9373	<meta-data	25
14858	<mmaglis@metacom.gr>	10
13087	<modelVersion>4.0.0</modelVersion>	66
30821	<module>GnucashMobile</module>	6
30827	<module>GnucashMobileTest</module>	6
19301	<module>app</module>	5
18676	<module>integration-tests</module>	5
18651	<modules>	7
36739	<name>ActionBarSherlock</name>	5
19227	<name>Apache	3
13707	<name>GnuCash	61
18687	<name>Gnucash	11
19354	<name>Ngewi	10
33006	<name>Public	4
36771	<nativeLibrariesDirectory>ignored</nativeLibrariesDirectory>	5
2423	<ngewi.fet@gmail.com>	18
58971	<ngewif@gmail.com	2
971	<ngewif@gmail.com>	329
63931	<ngewif@gmail.com>+	1
12899	<ol>	13
40440	<old,new>	4
799	<olexandr.tyshkovets@gmail.com>	88
27605	<org.gnucash.android.ui.colorpicker.ColorPickerPalette	3
27404	<org.gnucash.android.ui.colorpicker.ColorSquare	3
56700	<org.gnucash.android.ui.util.CalculatorEditText	6
61897	<org.gnucash.android.ui.util.EmptyRecyclerView	6
56570	<org.gnucash.android.ui.util.ReselectSpinner	6
20784	<org.gnucash.android.ui.util.TransactionTypeSwitch	20
30348	<org.gnucash.android.ui.util.TransactionTypeToggleButton	9
28854	<org.gnucash.android.ui.util.widget.CalculatorEditText	8
53772	<org.gnucash.android.ui.util.widget.EmptyRecyclerView	6
29125	<org.gnucash.android.ui.util.widget.ReselectSpinner	11
52804	<org.gnucash.android.ui.util.widget.TransactionTypeSwitch	7
36781	<outputFile>target/generated-sources/r/com/actionbarsherlock/R.java</outputFile>	4
40943	<p/>	17
14199	<p>	59
53704	<p><b>NOTE:</b>	2
18124	<p><b>Note:</b>	26
52839	<p><b>Note:</b>As	6
54640	<p><b>Note:</b>If	10
33495	<p><b>Only	5
51834	<p><b>The	6
27859	<p><b>This	8
50657	<p><i>Note</i>:	8
46702	<p><strong>XML	4
48162	<p>A	11
48341	<p>Abstract	4
61795	<p>Adds	3
34895	<p>Afer	7
35124	<p>After	3
32278	<p>All	18
34834	<p>Allows	4
21159	<p>Also	11
20518	<p>Although	2
34818	<p>Among	7
40512	<p>An	12
46588	<p>Another	4
32138	<p>Any	5
47709	<p>Associated	4
50846	<p>Backups	4
60140	<p>Base	3
53367	<p>Basically	2
38631	<p>Beginning	4
38445	<p>By	13
46459	<p>Callback	4
47227	<p>Change	4
8513	<p>Checks	3
59862	<p>Class	3
59785	<p>Classes	5
60460	<p>Converts	3
48122	<p>Creates	4
35078	<p>Currently	6
54625	<p>Currently,it	3
38521	<p>Custom	4
35086	<p>Days	3
46812	<p>Define	4
38552	<p>Denotes	4
53955	<p>Each	9
61670	<p>Either	3
23353	<p>Example:	14
36363	<p>For	39
38507	<p>From	4
47463	<p>Get	4
12615	<p>GnuCash	7
8447	<p>Happens	4
37970	<p>Helper	4
59147	<p>Hidden	4
5574	<p>If	77
32444	<p>Implementing	3
27763	<p>In	26
47440	<p>Increase	4
46726	<p>Indicate	4
40849	<p>It	10
44651	<p>Items	4
48055	<p>Like	4
31732	<p>Make	5
36270	<p>No	4
61767	<p>Normally	3
62626	<p>Not	2
40738	<p>Note	15
38837	<p>Note:	8
41098	<p>Notifies	8
53439	<p>Only	5
47558	<p>Other	4
30762	<p>Overload	2
41271	<p>Overriders	4
41547	<p>Overrides	11
62956	<p>Pair	4
33821	<p>Recurring	2
35722	<p>Remember	5
46683	<p>Return	4
9150	<p>See	17
46921	<p>Set	4
35817	<p>Sets	10
37761	<p>Setting	7
41955	<p>Since	4
46572	<p>Start	4
40486	<p>Starting	4
46661	<p>Stop	4
23292	<p>Sub-classes	9
38831	<p>Tabs	4
58706	<p>Template	1
54862	<p>Tests	7
9458	<p>The	136
40509	<p>There	19
18539	<p>These	5
2412	<p>This	162
6819	<p>To	13
63238	<p>Transactions	3
35707	<p>Two	11
56800	<p>Typically	5
20011	<p>Typically,this	5
35805	<p>Uses	2
37818	<p>Very	4
35480	<p>We	7
53119	<p>When	2
47886	<p>Wrapper	4
37815	<p>You	9
63192	<p>e.g.	6
36188	<p>i.e.	4
47940	<p>if	4
34113	<p>{@link	3
18751	<packaging>apk</packaging>	13
36747	<packaging>apklib</packaging>	5
19062	<packaging>pom</packaging>	7
36980	<padding	9
13064	<parent>	70
13434	<path>${env.ANDROID_HOME	16
27907	<pedroabel@gmail.com>	7
51836	<permission	8
3191	<permission-group	16
30705	<phase>initialize</phase>	3
18926	<phase>integration-test</phase>	3
36994	<phase>package</phase>	4
36701	<phase>process-sources</phase>	4
36842	<phase>verify</phase>	4
30832	<platform>15</platform>	12
13888	<platform>16</platform>	5
13884	<platform>19</platform>	4
19252	<plugin>	27
36866	<pluginExecution>	4
36716	<pluginExecutionFilter>	5
36864	<pluginExecutions>	4
18752	<pluginManagement>	13
25183	<pluginRepositories>	3
25357	<pluginRepository>	3
18702	<plugins>	17
3368	<plurals	239
8182	<pre>	23
2061	<preference-headers	12
7382	<price:commodity>	3
7602	<price:currency>	3
7854	<price:id	3
8159	<price:source>Finance::Quote</price:source>	3
8315	<price:time>	3
7547	<price:type>last</price:type>	3
8472	<price:value>111530000/100000000</price:value>	3
7741	<price>	3
13489	<project	61
19117	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>	9
19383	<properties>	27
9891	<provider	4
33416	<quantityCurrencyCode>	7
33343	<quantityDenom>	7
33402	<quantityNum>	7
25455	<receiver	15
7539	<recurrence:mult>1</recurrence:mult>	4
8198	<recurrence:period_type>month</recurrence:period_type>	4
8496	<recurrence:start>	4
36966	<regex>false</regex>	4
36717	<relativePath>../pom.xml</relativePath>	5
25208	<repositories>	7
25084	<repository>	7
18755	<requestFocus	27
64305	<requestFocus/>	3
11905	<resources	102
24534	<resources>	54
8124	<rivaldi8@gmail.com>	17
30926	<robotium.version>3.4.1</robotium.version>	5
34500	<robotium.version>4.2</robotium.version>	5
18933	<robotium.version>5.2.1</robotium.version>	5
36825	<rotate	4
36829	<scale	4
18831	<scm>	7
19375	<scope>provided</scope>	20
36826	<scope>test</scope>	5
13876	<sdk>	20
34043	<selector	11
2781	<service	16
63610	<shape	4
33958	<shape>	14
16947	<sigurdga-github@sigurdga.no>	6
36858	<skip>true</skip>	4
7482	<slot:key>Budgeting</slot:key>	8
7389	<slot:key>account</slot:key>	4
7967	<slot:key>color</slot:key>	8
7449	<slot:key>counter_formats</slot:key>	8
8443	<slot:key>credit-formula</slot:key>	4
8393	<slot:key>credit-numeric</slot:key>	3
8254	<slot:key>date-posted</slot:key>	8
8398	<slot:key>debit-formula</slot:key>	4
8141	<slot:key>debit-numeric</slot:key>	3
8696	<slot:key>options</slot:key>	8
8089	<slot:key>placeholder</slot:key>	8
8063	<slot:key>sched-xaction</slot:key>	4
8353	<slot:value	8
7964	<slot>	8
33977	<solid	18
30784	<source>1.6</source>	6
19421	<sourceDirectory>src</sourceDirectory>	19
8041	<split:account	8
8598	<split:id	8
8268	<split:memo>tip</split:memo>	3
8352	<split:quantity>	4
8158	<split:quantity>-1000/100</split:quantity>	3
8279	<split:quantity>-1793/100</split:quantity>	3
7845	<split:quantity>-2000/100</split:quantity>	4
8604	<split:quantity>-4500/100</split:quantity>	3
8546	<split:quantity>-500/100</split:quantity>	3
8172	<split:quantity>0/1</split:quantity>	4
7940	<split:quantity>1000/100</split:quantity>	3
7701	<split:quantity>2000/100</split:quantity>	6
7649	<split:quantity>5000/100</split:quantity>	3
8471	<split:reconciled-state>n</split:reconciled-state>	8
8217	<split:slots>	4
7588	<split:value>-1000/100</split:value>	3
8100	<split:value>-2000/100</split:value>	6
7470	<split:value>-4500/100</split:value>	3
7943	<split:value>-500/100</split:value>	3
8133	<split:value>0/100</split:value>	4
7682	<split:value>1000/100</split:value>	3
8529	<split:value>2000/100</split:value>	6
8394	<split:value>5000/100</split:value>	3
34462	<spoon-client.version>1.0.5</spoon-client.version>	7
19266	<spoon-client.version>1.1.2</spoon-client.version>	3
1613	<string	351
7	<string-array	289
33999	<stroke	18
49226	<strong>Always	4
38198	<strong>Note:	4
37698	<strong>Note:</strong>	16
37908	<strong>This	4
691	<style	64
8099	<sx:advanceCreateDays>0</sx:advanceCreateDays>	4
7780	<sx:advanceRemindDays>0</sx:advanceRemindDays>	4
7702	<sx:autoCreate>n</sx:autoCreate>	4
7816	<sx:autoCreateNotify>n</sx:autoCreateNotify>	4
8287	<sx:enabled>y</sx:enabled>	4
8322	<sx:id	4
7889	<sx:instanceCount>1</sx:instanceCount>	4
8685	<sx:name>Los	4
7837	<sx:schedule>	4
8055	<sx:start>	4
8501	<sx:templ-acct	13
18711	<system>GitHub	13
30910	<target>1.6</target>	6
17991	<terrywmc@gmail.com>	6
36749	<testSourceDirectory>test</testSourceDirectory>	4
19086	<title>GnuCash	3
36783	<token>static	4
33415	<transaction_uid>	7
8692	<trn:currency>	8
7735	<trn:date-entered>	8
7484	<trn:date-posted>	8
7874	<trn:description>Kahuna	3
8333	<trn:description>Los	4
7435	<trn:description>Salad	3
7691	<trn:description>Tandoori	3
8114	<trn:id	8
7669	<trn:slots>	8
7973	<trn:split>	8
8181	<trn:splits>	8
8023	<ts:date>2016-08-23	3
8022	<ts:date>2016-08-24	4
8095	<ts:date>2016-09-18	3
20643	<type>	13
18654	<type>aar</type>	2
18912	<type>apk</type>	13
18934	<type>apklib</type>	19
19240	<type>jar</type>	20
33561	<ul>	46
13115	<undeployBeforeDeploy>true</undeployBeforeDeploy>	12
25058	<url>http://download.crashlytics.com/maven</url>	3
18886	<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>	3
19048	<url>http://www.codinguser.com</url>	5
30861	<url>https://github.com/codinguser/GnucashMobile/issues</url>	9
30739	<url>https://github.com/codinguser/GnucashMobile</url>	6
19253	<url>https://github.com/codinguser/gnucash-android/issues</url>	8
18828	<url>https://github.com/codinguser/gnucash-android</url>	5
30791	<url>https://github.com/codinguser</url>	9
33175	<url>https://repository-achartengine.forge.cloudbees.com/snapshot/</url>	4
32509	<uses-library	3
2327	<uses-permission	41
2881	<uses-sdk	110
36860	<value>static	4
33362	<valueCurrencyCode>	7
33414	<valueDenom>	7
33470	<valueNum>	5
52821	<var>EditText<var>	13
31981	<var>KeyboardView</var>	17
47695	<var>caller</var>,<var>specifics</var>,and	4
48188	<var>flags</var>	4
31698	<var>host</var>	17
48360	<var>icon</var>	4
48762	<var>iconRes</var>	4
47635	<var>intent</var>	4
31503	<var>layoutid</var>	17
52743	<var>resid</var>	13
47912	<var>specifics</var>	4
47994	<var>title</var>	4
48234	<var>title</var>.	4
48759	<var>titleRes</var>	4
48380	<var>view</var>.	4
31540	<var>viewid</var>)	14
18883	<version>${abs.version	12
18563	<version>${android.maven.plugin.version	3
19146	<version>${android.version	10
19050	<version>${betterpickers.version	2
19036	<version>${fest-android.version	4
19133	<version>${project.version	4
18918	<version>${robotium.version	3
19235	<version>${spoon-client.version	3
18650	<version>${viewpagerindicator.version	10
30875	<version>1.0.0-SNAPSHOT</version>	11
36774	<version>1.0.0</version>	4
33092	<version>1.1.0</version>	14
36963	<version>1.1.1-SNAPSHOT</version>	12
34727	<version>1.1.1</version>	3
51996	<version>1.1.2</version>	6
30828	<version>1.1.3-SNAPSHOT</version>	13
30709	<version>1.2.0-SNAPSHOT</version>	7
54825	<version>1.2.1</version>	5
54882	<version>1.2.2-SNAPSHOT</version>	4
63643	<version>1.2.2</version>	6
23726	<version>1.2.3-SNAPSHOT</version>	4
23414	<version>1.2.3</version>	5
34485	<version>1.2.4-SNAPSHOT</version>	9
30441	<version>1.2.6-SNAPSHOT</version>	7
28009	<version>1.2.7-SNAPSHOT</version>	6
26984	<version>1.3.0-SNAPSHOT</version>	5
26712	<version>1.3.2-SNAPSHOT</version>	6
33859	<version>1.4.0-SNAPSHOT</version>	6
36978	<version>1.4.0</version>	4
34105	<version>1.4.1-SNAPSHOT</version>	4
57410	<version>1.4.2-SNAPSHOT</version>	5
56584	<version>1.4.3-SNAPSHOT</version>	8
56580	<version>1.5.0-SNAPSHOT</version>	7
56502	<version>1.5.1-SNAPSHOT</version>	7
57625	<version>1.5.2-SNAPSHOT</version>	5
13544	<version>1.5.3-SNAPSHOT</version>	5
13061	<version>1.5.4-SNAPSHOT</version>	6
29590	<version>1.5.5-SNAPSHOT</version>	2
36777	<version>1.7</version>	4
25210	<version>1.9.2</version>	3
33268	<version>2.4</version>	4
30748	<version>2.5.1</version>	6
30816	<version>3.3.0</version>	6
30959	<version>3.3.2</version>	6
50779	<version>3.5.0</version>	7
54813	<version>3.6.0</version>	5
64362	<version>4.1.0</version>	1
36814	<version>4.2.0</version>	5
25017	<version>[1.1.11,)</version>	3
18898	<version>r7</version>	2
36957	<versionRange>[1.4.0,)</versionRange>	5
64386	<versionRange>[1.4.1,)</versionRange>	1
37121	<view	5
19352	<viewpagerindicator.version>2.4.1</viewpagerindicator.version>	5
30958	<wait>90000</wait>	3
16094	<wicowyn@gmail.com>	9
21114	<xliff:g	51
1896	=	399
24718	="?android:attr/textAppearanceMedium"	5
20720	=0"	9
1939	==	382
63488	==========	4
37392	===========	5
37141	=============	4
37547	===================	4
5923	=========================	6
37414	============================	5
25338	================================	16
12374	=================================	23
5832	==================================	6
31841	=====================================	10
25444	========================================	6
12978	============================================	9
29759	====================================================================	4
26799	=======================================================================	5
26796	========================================================================	5
49271	=>	4
2008	>	381
13433	>=	212
43630	>>	4
45993	>>>	9
47684	>>{@link	4
34666	>Email&#8230	2
34526	>SD	3
34700	>Share	2
2121	?	379
2742	?"	68
14280	?")	2
3282	?",	129
19845	?",new	56
24181	?)	6
62622	?)"	2
668	?:	11
15960	?</string>	52
7696	?>	14
57915	???	6
18001	?\n	11
22847	?\n\n	9
18710	?x	4
4029	@	14
64248	@@	1
11892	@After	65
13868	@AfterClass	2
7663	@Before	55
13905	@BeforeClass	10
32381	@Bind	3
9676	@Bind(R.id.account_balance)	5
9780	@Bind(R.id.account_color_strip)	7
10037	@Bind(R.id.account_recycler_view)	5
8734	@Bind(R.id.amount_to_convert)	5
9338	@Bind(R.id.balance_credit)	5
8817	@Bind(R.id.balance_debit)	5
426	@Bind(R.id.bar_chart)	14
9525	@Bind(R.id.btn_add_budget_amount)	8
33429	@Bind(R.id.btn_add_split)	9
9550	@Bind(R.id.btn_balance_sheet)	8
8298	@Bind(R.id.btn_bar_chart)	12
8051	@Bind(R.id.btn_cancel)	19
9075	@Bind(R.id.btn_fetch_exchange_rate)	5
8640	@Bind(R.id.btn_line_chart)	12
7859	@Bind(R.id.btn_pie_chart)	12
9976	@Bind(R.id.btn_remove_item)	7
9432	@Bind(R.id.btn_remove_split)	9
7642	@Bind(R.id.btn_save)	19
8869	@Bind(R.id.btn_split_editor)	9
9984	@Bind(R.id.btn_split_type)	8
51061	@Bind(R.id.btn_text_report)	4
9659	@Bind(R.id.budget_account)	4
8723	@Bind(R.id.budget_amount)	4
9112	@Bind(R.id.budget_amount_layout)	6
9463	@Bind(R.id.budget_amount_recycler)	4
53985	@Bind(R.id.budget_amount_table_layout)	6
9559	@Bind(R.id.budget_chart)	4
9960	@Bind(R.id.budget_indicator)	5
9808	@Bind(R.id.budget_left)	4
8859	@Bind(R.id.budget_recurrence)	4
8837	@Bind(R.id.budget_recycler_view)	4
9258	@Bind(R.id.budget_spent)	4
9108	@Bind(R.id.calculator_keyboard)	23
9187	@Bind(R.id.calendar_view)	5
457	@Bind(R.id.chart_data_spinner)	7
24947	@Bind(R.id.chart_date)	5
9865	@Bind(R.id.checkbox_default_transfer_account)	5
34529	@Bind(R.id.checkbox_export_all)	6
8998	@Bind(R.id.checkbox_parent_account)	5
9604	@Bind(R.id.checkbox_placeholder_account)	5
8871	@Bind(R.id.checkbox_post_export_delete)	8
9215	@Bind(R.id.checkbox_save_template)	6
8781	@Bind(R.id.converted_amount_text_input_layout)	5
10015	@Bind(R.id.coordinatorLayout)	6
9671	@Bind(R.id.create_transaction)	5
9152	@Bind(R.id.currency_symbol)	11
151	@Bind(R.id.date_range_recyclerview)	5
9142	@Bind(R.id.drawer_layout)	12
9724	@Bind(R.id.edit_transaction)	9
9386	@Bind(R.id.empty_view)	7
8914	@Bind(R.id.exchange_rate_text_input_layout)	5
9541	@Bind(R.id.export_date_layout)	5
9387	@Bind(R.id.export_start_date)	5
9934	@Bind(R.id.export_start_time)	5
10002	@Bind(R.id.export_warning)	5
9790	@Bind(R.id.fab_create_account)	5
10087	@Bind(R.id.fab_create_transaction)	14
8937	@Bind(R.id.favorite_status)	7
8900	@Bind(R.id.fragment_transaction_details)	6
9255	@Bind(R.id.from_currency)	5
10063	@Bind(R.id.imbalance_textview)	14
9308	@Bind(R.id.input_account_description)	5
9342	@Bind(R.id.input_account_name)	5
9465	@Bind(R.id.input_account_type_spinner)	5
8942	@Bind(R.id.input_accounts_spinner)	16
8863	@Bind(R.id.input_books_spinner)	6
9180	@Bind(R.id.input_budget_account_spinner)	7
9246	@Bind(R.id.input_budget_amount)	7
9427	@Bind(R.id.input_budget_name)	8
9072	@Bind(R.id.input_color_picker)	8
9530	@Bind(R.id.input_converted_amount)	5
9265	@Bind(R.id.input_currency_spinner)	5
10028	@Bind(R.id.input_date)	6
8766	@Bind(R.id.input_default_transfer_account)	8
10045	@Bind(R.id.input_description)	12
9757	@Bind(R.id.input_exchange_rate)	5
10083	@Bind(R.id.input_hide_account_balance)	3
8884	@Bind(R.id.input_parent_account)	5
8916	@Bind(R.id.input_recurrence)	19
9938	@Bind(R.id.input_should_display_balance)	2
10080	@Bind(R.id.input_split_amount)	9
9793	@Bind(R.id.input_split_memo)	9
9413	@Bind(R.id.input_start_date)	6
9821	@Bind(R.id.input_time)	6
9135	@Bind(R.id.input_transaction_amount)	6
8840	@Bind(R.id.input_transaction_name)	6
8926	@Bind(R.id.input_transaction_type)	6
9797	@Bind(R.id.input_transfer_account_spinner)	6
9249	@Bind(R.id.label_exchange_rate_example)	5
9298	@Bind(R.id.layout_double_entry)	5
752	@Bind(R.id.line_chart)	11
8772	@Bind(R.id.name_text_input_layout)	10
9720	@Bind(R.id.nav_view)	13
7471	@Bind(R.id.net_worth)	14
24647	@Bind(R.id.next_month_chart_button)	5
9140	@Bind(R.id.options_menu)	15
9528	@Bind(R.id.pager)	14
597	@Bind(R.id.pie_chart)	19
24902	@Bind(R.id.previous_month_chart_button)	5
9299	@Bind(R.id.primary_text)	18
9000	@Bind(R.id.radio_converted_amount)	5
8873	@Bind(R.id.radio_exchange_rate)	5
10103	@Bind(R.id.radio_ofx_format)	5
9943	@Bind(R.id.radio_qif_format)	5
9468	@Bind(R.id.radio_xml_format)	5
1504	@Bind(R.id.report_account_type_spinner)	23
23167	@Bind(R.id.report_type_spinner)	6
61988	@Bind(R.id.row_amount)	4
62012	@Bind(R.id.row_transfer_account)	4
8769	@Bind(R.id.secondary_text)	18
1441	@Bind(R.id.selected_chart_slice)	22
10051	@Bind(R.id.slidingpane_layout)	7
8761	@Bind(R.id.spinner_export_destination)	8
21961	@Bind(R.id.spinner_toolbar)	7
9936	@Bind(R.id.split_account_name)	5
8915	@Bind(R.id.split_credit)	5
10023	@Bind(R.id.split_currency_symbol)	12
8877	@Bind(R.id.split_debit)	5
9957	@Bind(R.id.split_list_layout)	14
9705	@Bind(R.id.split_uid)	8
9206	@Bind(R.id.strip)	8
9066	@Bind(R.id.switch_export_all)	5
9110	@Bind(R.id.tab_layout)	9
9067	@Bind(R.id.table_assets)	11
9713	@Bind(R.id.table_equity)	11
8844	@Bind(R.id.table_liabilities)	14
10097	@Bind(R.id.target_currency)	5
1384	@Bind(R.id.time_range_spinner)	20
9061	@Bind(R.id.to_currency)	5
9770	@Bind(R.id.toolbar)	20
9511	@Bind(R.id.toolbar_progress)	12
9337	@Bind(R.id.toolbar_spinner)	5
1268	@Bind(R.id.toolbar_transaction_info)	6
9228	@Bind(R.id.total_assets)	5
8148	@Bind(R.id.total_liabilities)	11
9852	@Bind(R.id.total_liability_and_equity)	11
9916	@Bind(R.id.transaction_account)	6
9330	@Bind(R.id.transaction_amount)	9
389	@Bind(R.id.transaction_amount)TextView	7
9594	@Bind(R.id.transaction_date)	9
9223	@Bind(R.id.transaction_recycler_view)	14
9436	@Bind(R.id.transactions_sum)	9
1141	@Bind(R.id.trn_description)	12
87	@Bind(R.id.trn_notes)	12
758	@Bind(R.id.trn_recurrence)	12
1931	@Bind(R.id.trn_time_and_date)	14
2114	@Bind(R.id.trn_transfer_account)	6
10066	@BindView(R.id.account_balance)	2
9370	@BindView(R.id.account_color_strip)	2
9210	@BindView(R.id.account_recycler_view)	2
9888	@BindView(R.id.amount_to_convert)	2
9178	@BindView(R.id.balance_credit)	2
9115	@BindView(R.id.balance_debit)	2
9881	@BindView(R.id.bar_chart)	2
9662	@BindView(R.id.btn_add_budget_amount)	2
10089	@BindView(R.id.btn_balance_sheet)	2
9216	@BindView(R.id.btn_bar_chart)	2
9864	@BindView(R.id.btn_cancel)	4
9675	@BindView(R.id.btn_fetch_exchange_rate)	2
9941	@BindView(R.id.btn_line_chart)	2
8831	@BindView(R.id.btn_pie_chart)	2
9909	@BindView(R.id.btn_remove_item)	2
9149	@BindView(R.id.btn_remove_split)	2
9368	@BindView(R.id.btn_save)	4
8857	@BindView(R.id.btn_split_editor)	2
9179	@BindView(R.id.btn_split_type)	2
9156	@BindView(R.id.budget_account)	2
9667	@BindView(R.id.budget_amount)	2
9966	@BindView(R.id.budget_amount_layout)	2
9164	@BindView(R.id.budget_amount_recycler)	2
9049	@BindView(R.id.budget_chart)	2
9755	@BindView(R.id.budget_indicator)	2
9641	@BindView(R.id.budget_left)	2
9153	@BindView(R.id.budget_recurrence)	2
8810	@BindView(R.id.budget_recycler_view)	2
9694	@BindView(R.id.budget_spent)	2
9231	@BindView(R.id.calculator_keyboard)	2
8797	@BindView(R.id.calendar_view)	2
10109	@BindView(R.id.checkbox_default_transfer_account)	2
8902	@BindView(R.id.checkbox_parent_account)	2
9577	@BindView(R.id.checkbox_placeholder_account)	2
9561	@BindView(R.id.checkbox_post_export_delete)	2
8990	@BindView(R.id.checkbox_save_template)	2
9678	@BindView(R.id.converted_amount_text_input_layout)	2
9352	@BindView(R.id.coordinatorLayout)	2
9753	@BindView(R.id.create_transaction)	2
8909	@BindView(R.id.currency_symbol)	2
9183	@BindView(R.id.drawer_layout)	2
9334	@BindView(R.id.edit_transaction)	2
9899	@BindView(R.id.empty_view)	2
8972	@BindView(R.id.exchange_rate_text_input_layout)	2
9055	@BindView(R.id.export_date_layout)	2
9233	@BindView(R.id.export_start_date)	2
9360	@BindView(R.id.export_start_time)	2
9431	@BindView(R.id.export_warning)	4
9848	@BindView(R.id.fab_create_account)	2
8729	@BindView(R.id.fab_create_transaction)	2
9498	@BindView(R.id.favorite_status)	2
9457	@BindView(R.id.fragment_transaction_details)	2
9276	@BindView(R.id.from_currency)	2
9504	@BindView(R.id.imbalance_textview)	2
9161	@BindView(R.id.input_account_description)	2
9946	@BindView(R.id.input_account_name)	2
9741	@BindView(R.id.input_account_type_spinner)	2
9230	@BindView(R.id.input_accounts_spinner)	2
9028	@BindView(R.id.input_books_spinner)	2
9685	@BindView(R.id.input_budget_account_spinner)	2
9198	@BindView(R.id.input_budget_amount)	2
9382	@BindView(R.id.input_budget_name)	2
9434	@BindView(R.id.input_color_picker)	2
9226	@BindView(R.id.input_converted_amount)	2
9647	@BindView(R.id.input_currency_spinner)	2
9949	@BindView(R.id.input_date)	2
9971	@BindView(R.id.input_default_transfer_account)	2
8839	@BindView(R.id.input_description)	2
10022	@BindView(R.id.input_exchange_rate)	2
10030	@BindView(R.id.input_hide_account_balance)	2
9100	@BindView(R.id.input_parent_account)	2
9709	@BindView(R.id.input_recurrence)	2
8949	@BindView(R.id.input_split_amount)	2
8865	@BindView(R.id.input_split_memo)	2
8827	@BindView(R.id.input_start_date)	2
8885	@BindView(R.id.input_time)	2
9769	@BindView(R.id.input_transaction_amount)	2
9788	@BindView(R.id.input_transaction_name)	2
10085	@BindView(R.id.input_transaction_type)	2
9461	@BindView(R.id.input_transfer_account_spinner)	2
9257	@BindView(R.id.label_exchange_rate_example)	2
9988	@BindView(R.id.layout_double_entry)	2
9777	@BindView(R.id.line_chart)	2
9376	@BindView(R.id.name_text_input_layout)	2
9094	@BindView(R.id.nav_view)	2
9248	@BindView(R.id.net_worth)	2
9328	@BindView(R.id.options_menu)	2
9287	@BindView(R.id.pager)	2
9381	@BindView(R.id.pie_chart)	2
9794	@BindView(R.id.primary_text)	2
9282	@BindView(R.id.radio_converted_amount)	2
9696	@BindView(R.id.radio_exchange_rate)	2
9872	@BindView(R.id.radio_ofx_format)	2
9267	@BindView(R.id.radio_qif_format)	4
9476	@BindView(R.id.radio_xml_format)	4
55498	@BindView(R.id.recurrence_options)	2
9857	@BindView(R.id.report_account_type_spinner)	5
9735	@BindView(R.id.secondary_text)	2
9948	@BindView(R.id.selected_chart_slice)	2
9212	@BindView(R.id.slidingpane_layout)	2
8920	@BindView(R.id.spinner_export_destination)	2
9488	@BindView(R.id.split_account_name)	2
9509	@BindView(R.id.split_credit)	2
9586	@BindView(R.id.split_currency_symbol)	2
9614	@BindView(R.id.split_debit)	2
9539	@BindView(R.id.split_list_layout)	2
8785	@BindView(R.id.split_uid)	2
9318	@BindView(R.id.strip)	2
8918	@BindView(R.id.switch_export_all)	2
9170	@BindView(R.id.tab_layout)	2
9144	@BindView(R.id.table_assets)	2
8964	@BindView(R.id.table_equity)	2
9439	@BindView(R.id.table_liabilities)	2
10005	@BindView(R.id.target_currency)	2
31194	@BindView(R.id.target_uri)	2
8858	@BindView(R.id.time_range_spinner)	5
9573	@BindView(R.id.to_currency)	2
9146	@BindView(R.id.toolbar)	2
9756	@BindView(R.id.toolbar_progress)	2
9838	@BindView(R.id.toolbar_spinner)	2
9137	@BindView(R.id.total_assets)	2
9913	@BindView(R.id.total_liabilities)	2
9764	@BindView(R.id.total_liability_and_equity)	2
9021	@BindView(R.id.transaction_account)	2
8977	@BindView(R.id.transaction_amount)	2
9208	@BindView(R.id.transaction_date)	2
8968	@BindView(R.id.transaction_recycler_view)	2
8888	@BindView(R.id.transactions_sum)	2
9407	@BindView(R.id.trn_description)	2
8881	@BindView(R.id.trn_notes)	2
8953	@BindView(R.id.trn_recurrence)	2
9681	@BindView(R.id.trn_time_and_date)	2
13312	@ClassRule	5
32452	@ColorRes	6
36684	@Config(constants	8
14377	@Deprecated	46
63658	@FixMethodOrder(MethodSorters.NAME_ASCENDING)	3
51046	@Implementation	4
37954	@Implementation")	4
23282	@LayoutRes	12
7383	@NonNull	95
51104	@NonNull+	1
14446	@NotNull	4
692	@Nullable	70
57491	@OnClick(R.id.btn_add_budget_amount)	3
482	@OnClick(R.id.fab_edit_transaction)	6
57441	@OnClick(R.id.input_start_date)	4
60190	@OnClick({R.id.btn_bar_chart,R.id.btn_pie_chart,R.id.btn_line_chart,R.id.btn_balance_sheet	3
366	@Override	379
38764	@Retention(RetentionPolicy.RUNTIME)	4
13472	@Rule	7
13355	@RunWith(AndroidJUnit4.class)	37
26377	@RunWith(GnucashTestRunner.class)	21
58929	@RunWith(RobolectricGradleTestRunner.class)	2
23298	@StringRes	6
43824	@SuppressWarnings("deprecation")	21
44986	@SuppressWarnings("rawtypes")	8
48631	@SuppressWarnings("unchecked")	4
13486	@SuppressWarnings("unused")	6
38734	@Target(ElementType.TYPE)	4
254	@TargetApi(11)	25
28897	@TargetApi(23)	5
34970	@TargetApi(Build.VERSION_CODES.HONEYCOMB)	8
55500	@TargetApi(Build.VERSION_CODES.KITKAT)	5
858	@Test	176
1978	@Test(expected	38
44351	@ViewDebug.CapturedViewProperty	8
46390	@ViewDebug.ExportedProperty(category	8
39323	@ViewDebug.ExportedProperty(mapping	4
39200	@ViewDebug.IntToString(from	4
60279	@VisibleForTesting	4
52950	@XmlRes	8
37251	@android:id/text1	4
38779	@attr	25
95	@author	263
52795	@date	17
14176	@deprecated	43
30442	@drawable/abs__ab_bottom_solid_light_holo	6
48289	@exception	4
37549	@hide	52
38468	@interface	4
25207	@notnull	3
37098	@null	4
313	@param	377
1538	@return	379
25205	@rev	7
1449	@see	259
52834	@source	11
225	@throws	133
62805	@{@link	4
38649	@{code	12
2291	A	219
52088	A"	3
18031	A&#241	6
36052	A,"	7
36255	A."	7
58388	A/99"	6
55189	A700	6
21992	A:</string>	7
15835	ABONO	17
25783	ABONO/CARGO\n	7
45950	ABS	5
12593	ACCOUNT	20
13109	ACCOUNT:	3
33072	ACCOUNTS_CURRENCY	4
32981	ACCOUNTS_CURRENCY_CODE	4
33528	ACCOUNTS_TABLE_CREATE	13
18434	ACCOUNTS_TABLE_NAME	32
34514	ACCOUNTS_TABLE_NAME)	3
1117	ACCOUNT_COLOR_HEX_REGEX	3
744	ACCOUNT_FORM:	8
52364	ACCOUNT_HEADER	7
52081	ACCOUNT_NAME_PREFIX	7
3218	ACCOUNT_NAME_SEPARATOR	26
51190	ACCTID	9
60433	ACTION	3
6138	ACTIONS	6
9406	ACTION_MANAGE_BOOKS	4
48505	ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE	4
48469	ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE,	4
55125	ACTION_TYPE)	3
48734	ACTION_VIEW_CONSTRUCTOR_SIGNATURE	4
48538	ACTION_VIEW_CONSTRUCTOR_SIGNATURE,mActionViewConstructorArguments)	4
27814	ACTION_VIEW_RECURRING	4
43337	ACTION_VIEW_STATES_KEY	4
49966	ACTV	6
33245	AChartEngine	4
499	ADD	72
861	AFTER	15
40845	AFTER)	4
3614	ALL	148
436	ALL:	6
37537	ALLCAPS	4
4451	ALLE	51
54620	ALL_ACTIONS:	7
62588	ALL_EVENTS:	3
30732	ALPHA_ACCOUNT_NAME	22
30778	ALPHA_ACCOUNT_UID	8
43419	ALT	4
43672	ALT-enabled	4
1404	ALTER	46
44019	ALTERNATIVE	4
52376	AMOUNT_PREFIX	3
23436	AMOUNT_STRING	11
60638	AN	3
2009	AND	166
45683	ANIMATE_IDLE	5
45099	ANIMATE_IN	5
44973	ANIMATE_OUT	5
45280	ANIMATE_OUT)	4
7823	ANIMATION_DURATION	33
41871	ANIMATION_FRAME	4
42255	ANIMATION_FRAME.	4
42024	ANIMATION_FRAME:	4
28824	ANIMATION_PERMISSION	3
46543	ANIMATION_RESOLUTION	4
46968	ANIMATION_RESOLUTION)	4
42137	ANIMATION_START	4
42111	ANIMATION_START:	4
1427	ANY	352
2335	API	82
38859	API.	4
38179	APIs	4
49559	APIs.	4
33147	APIs</p>	3
49631	APP_DATA	5
59184	APP_ID	3
27627	ARG_PARENT_ACCOUNT_ID	9
20099	AS	93
21470	ASC	47
20495	ASC"	35
2316	ASC")	90
62064	ASC"),	3
18304	ASC,"	9
56758	ASC,trans_time	9
52105	ASC,trans_uid	18
6419	ASSET:	23
62721	ATAU	3
48797	ATTRIBUTE_ACTIVITY	4
35725	ATTRIBUTE_CD_TYPE	4
48746	ATTRIBUTE_TIME	4
48742	ATTRIBUTE_WEIGHT	4
39343	ATTRS	5
61700	ATTR_EXCHANGE_CODE	3
61710	ATTR_FULL_NAME	3
61629	ATTR_ISO_CODE	3
4783	ATTR_KEY_CD_TYPE	4
4044	ATTR_KEY_TYPE	6
54456	ATTR_KEY_VERSION	4
61676	ATTR_LOCAL_SYMBOL	3
61506	ATTR_NAMESPACE	3
61720	ATTR_SMALLEST_FRACTION	3
32293	ATTR_VALUE_BOOK	10
53364	ATTR_VALUE_FRAME	2
33746	ATTR_VALUE_GDATE	4
32107	ATTR_VALUE_GUID	10
53542	ATTR_VALUE_NUMERIC	4
32422	ATTR_VALUE_STRING	8
36073	AUD	6
60466	AUTHORS	3
25097	AXIS	8
25635	Aade	8
56149	Aadida	2
27941	Abel	7
55064	AboutPreferenceFragment	9
1133	AboutPreferenceFragment.class.getName().equals(fragmentName)	13
45182	AbsActionBarView	7
44921	AbsActionBarView(Context	4
46297	AbsListView	4
46244	AbsSpinner#onSaveInstanceState()	4
6540	Absolute	29
21027	Abstract	7
51000	AbstractWizardModel	8
42320	AccelerateDecelerateInterpolator	4
41880	AccelerateDecelerateInterpolator()	4
35404	Acceptable	3
746	Accepts	16
19944	Access	12
46351	AccessibilityEvent	4
44959	AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED)	4
46345	AccessibilityEvent.obtain()	4
47340	AccessibilityEventSender	4
47024	AccessibilityEventSender()	4
47183	AccessibilityManager	4
3681	Acciones]]></string>	11
288	Account	278
13158	Account"	75
6246	Account")	81
31183	Account",Commodity.getInstance("EUR"))	2
19446	Account",Commodity.getInstance(CURRENCY_CODE))	9
28279	Account",account.getName())	8
62918	Account",bgnCommodity)	4
63021	Account",euroCommodity)	4
28461	Account",latest.getName())	8
32626	Account",new	3
34407	Account",newestAccount.getName())	4
34372	Account",v.getText().toString())	4
21684	Account"/>	5
55209	Account#EXTRA_CURRENCY_CODE	4
55113	Account#MIME_TYPE	4
31218	Account("")	14
34503	Account("Acct	15
18723	Account("AlphaAccount")	10
54297	Account("Another	2
59994	Account("Base	3
31410	Account("Basic	2
19119	Account("BetaAccount")	10
54205	Account("Budgeted	2
13953	Account("Child	15
58895	Account("Child")	7
26220	Account("Dummy	6
30750	Account("Dummy")	3
32538	Account("Dummy",Commodity.EUR)	5
32862	Account("Dummy",Commodity.USD)	5
59395	Account("Euro	5
13738	Account("Exportable")	21
14015	Account("Exportable",new	5
54375	Account("First",Commodity.EUR)	2
29010	Account("Higher	11
36589	Account("Japanese",Commodity.JPY)	4
30815	Account("Japanese",Currency.getInstance("JPY"))	11
36598	Account("Move	9
28965	Account("New	8
13081	Account("Other	6
62696	Account("Parent")	2
25427	Account("ROOT	9
54412	Account("ROOT")	2
58928	Account("Some	7
13401	Account("Sub-account")	2
52440	Account("Sub-test")	2
4263	Account("TO	10
32627	Account("Target")	5
53079	Account("Template	5
165	Account("Test	16
11	Account("Test")	13
26518	Account("Test",Commodity.USD)	8
36643	Account("Test",Currency.getInstance("USD"))	6
52517	Account("Third-party")	2
11292	Account("Transfer	38
36633	Account("Transfer")	9
54479	Account("Transfer",Commodity.EUR)	2
31016	Account("US	2
19779	Account("Z	9
62831	Account("Zen	4
34385	Account("dummy")	5
30560	Account("new")	6
13517	Account("ownCloud")	2
13524	Account("ownCloud",new	4
59770	Account("tele	2
51154	Account(@NonNull	4
30952	Account(ALPHA_ACCOUNT_NAME)	26
31466	Account(BRAVO_ACCOUNT_NAME)	20
26005	Account(BaseModel.generateUID())	6
13201	Account(CHILD_ACCOUNT_NAME)	5
13086	Account(DUMMY_ACCOUNT_NAME)	44
13999	Account(DUMMY_ACCOUNT_NAME,COMMODITY)	9
13632	Account(DUMMY_ACCOUNT_NAME,commodity)	2
32605	Account(DUMMY_ACCOUNT_NAME,new	13
13562	Account(PARENT_ACCOUNT_NAME)	5
13422	Account(ROOT_ACCOUNT_NAME)	5
33053	Account(SEARCH_ACCOUNT_NAME)	15
33049	Account(SIMPLE_ACCOUNT_NAME)	4
284	Account(String	32
62933	Account(TRANSACTIONS_ACCOUNT_NAME,COMMODITY)	4
13530	Account(TRANSFER_ACCOUNT_NAME)	17
13919	Account(TRANSFER_ACCOUNT_NAME,COMMODITY)	9
13882	Account(TRANSFER_ACCOUNT_NAME,commodity)	2
26047	Account(UUID.randomUUID().toString().replaceAll("-",""))	5
36548	Account(accountName,Commodity.EUR)	6
28414	Account(accountName,Currency.getInstance("EUR"))	14
28370	Account(accountNameToDelete)	9
51378	Account(args.getString(Intent.EXTRA_TITLE))	6
35417	Account(c.getString(DatabaseAdapter.COLUMN_NAME))	4
1685	Account(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_NAME)))	16
33840	Account(fullName)	4
19118	Account(getEnteredName())	15
10360	Account(imbalanceAccountName,commodity)	9
35341	Account(imbalanceAccountName,currency)	11
32743	Account(imbalancePrefix	9
26489	Account(name)	5
26568	Account(name))	5
28968	Account(targetAccountName)	16
33651	Account(token)	7
2629	Account,ensure	9
57677	Account,transaction	7
6448	Account.AccountType	19
6679	Account.AccountType.ASSET	6
26829	Account.AccountType.EQUITY.name()	4
27025	Account.AccountType.EXPENSE	4
7266	Account.AccountType.EXPENSE)	6
26858	Account.AccountType.INCOME	4
26732	Account.AccountType.ROOT	4
27018	Account.AccountType.valueOf(accountTypeEntries[selectedAccountTypeIndex])	4
6705	Account.AccountType.valueOf(type)	8
286	Account.DEFAULT_COLOR	6
1077	Account.DEFAULT_COLOR)	9
63283	Account.DEFAULT_CURRENCY_CODE	2
34637	Account.convertToOfxAccountType(acctDbAdapter.getAccountType(doubleAccountUID))	7
30811	Account.convertToOfxAccountType(acctDbAdapter.getAccountType(transferAccountUID))	5
8701	Account</act:name>	8
6408	Account</string>	209
35896	AccountBalanceTask	8
31149	AccountBalanceTask(TextView	11
60581	AccountBalanceTask(accountBalanceTextView).execute(accountUID)	3
27551	AccountBalanceTask(accountBalanceTextView,getActivity()).execute(accountId)	10
64210	AccountBalanceTask(accountBalanceTextView,getActivity()).execute(accountUID)	2
34300	AccountBalanceTask(holder.accountBalance).execute(accountUID)	12
34243	AccountBalanceTask(holder.accountBalance).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR,accountUID)	8
30339	AccountBalanceTask(mSumTextView).execute(mAccountUID)	9
34266	AccountBalanceTask(mSumTextView).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR,mAccountUID)	6
35895	AccountBalanceTask(mSumTextView,getActivity()).execute(mAccountID)	4
64220	AccountBalanceTask(mSumTextView,getActivity()).execute(mAccountUID)	4
23859	AccountBalanceTask(summary,getActivity()).execute(accountId)	11
35898	AccountBalanceTask.class.getName()	4
28275	AccountCreator	10
28375	AccountCreator()	3
28406	AccountCreator().onReceive(mAcccountsActivity,intent)	9
51151	AccountCreator().onReceive(mAccountsActivity,intent)	5
35463	AccountEntry	2
14270	AccountEntry.COLUMN_COLOR_CODE	32
2157	AccountEntry.COLUMN_COMMODITY_UID	27
14447	AccountEntry.COLUMN_COMMODITY_UID,	5
14451	AccountEntry.COLUMN_CREATED_AT	22
14460	AccountEntry.COLUMN_CURRENCY	71
14620	AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID	41
14612	AccountEntry.COLUMN_DESCRIPTION	18
10542	AccountEntry.COLUMN_FAVORITE	38
11798	AccountEntry.COLUMN_FULL_NAME	56
14307	AccountEntry.COLUMN_HIDDEN	29
25385	AccountEntry.COLUMN_MODIFIED_AT	9
14556	AccountEntry.COLUMN_NAME	44
14382	AccountEntry.COLUMN_PARENT_ACCOUNT_UID	51
14217	AccountEntry.COLUMN_PARENT_ACCOUNT_UID,	5
14129	AccountEntry.COLUMN_PLACEHOLDER	40
14547	AccountEntry.COLUMN_TYPE	66
3130	AccountEntry.COLUMN_UID	122
24182	AccountEntry.COLUMN_UID,	24
53140	AccountEntry.INDEX_UID	13
1088	AccountEntry.TABLE_NAME	128
25352	AccountEntry.TABLE_NAME)	7
34734	AccountEntry.TABLE_NAME,	10
58808	AccountEntry.TABLE_NAME,contentValues,	5
1116	AccountEntry._ID	35
27002	AccountFormFragment	28
27006	AccountFormFragment()	14
34540	AccountFormFragment.newInstance()	8
63336	AccountFormFragment.newInstance(mAccountsDbAdapter)	6
51216	AccountFormFragment.newInstance(null)	4
3258	AccountImporterTask	7
35863	AccountImporterTask(Context	4
3741	AccountImporterTask(this).execute(accountInputStream)	7
3099	AccountImporterTask(this).execute(data.getData())	5
3950	AccountPreferencesFragment	14
2022	AccountPreferencesFragment.class.getName().equals(fragmentName)	12
10093	AccountRecyclerAdapter	12
59754	AccountRecyclerAdapter(Cursor	9
60654	AccountRecyclerAdapter(null)	6
24087	AccountT	6
30897	AccountTest	5
30722	AccountTest(String	9
36570	AccountTest{	6
1233	AccountType	180
1456	AccountType#CASH	17
51366	AccountType#CHECKING	8
6809	AccountType()	8
6874	AccountType(TransactionType	5
7170	AccountType(boolean	6
1903	AccountType.CASH	16
26322	AccountType.CHECKING	4
35842	AccountType.EQUITY.name()	6
64209	AccountType.EQUITY.name()+	4
1537	AccountType.EXPENSE	57
20041	AccountType.EXPENSE.name()	2
19727	AccountType.INCOME	10
19546	AccountType.INCOME.name()	2
58739	AccountType.INCOME.toString(),AccountType.EXPENSE.toString()	3
35853	AccountType.ROOT	7
3682	AccountType.ROOT)	56
31080	AccountType.ROOT){	18
24371	AccountType.ROOT.name()	18
19430	AccountType.TRADING.name()	2
35915	AccountType.valueOf(accountTypeEntries[selectedAccountTypeIndex])	4
53555	AccountType.valueOf(characterString)	5
7224	AccountType.valueOf(type)	13
9073	AccountViewHolder	16
8756	AccountViewHolder(View	7
61917	AccountViewHolder(v)	3
19532	AccountViewPagerAdapter	15
19506	AccountViewPagerAdapter(FragmentManager	17
13982	AccountViewPagerAdapter(getSupportFragmentManager())	35
52382	Account_UID	13
580	Accounts	133
2567	Accounts",new	6
54420	Accounts"/>	5
6648	Accounts</string>	134
2506	AccountsActivity	61
20394	AccountsActivity#REQUEST_PICK_ACCOUNTS_FILE	6
20761	AccountsActivity#startXmlFileChooser(Activity)	7
3966	AccountsActivity().createDefaultAccounts(defaultCurrency,activity)	4
24954	AccountsActivity)	6
13232	AccountsActivity){	14
27944	AccountsActivity.AccountImporterTask(AccountsActivity.this).execute(accountFileInputStream)	5
3001	AccountsActivity.AccountImporterTask(getActivity()).execute(accountFileInputStream)	8
3154	AccountsActivity.AccountImporterTask(this).execute(accountInputStream)	7
2235	AccountsActivity.AccountImporterTask(this).execute(data.getData())	5
63271	AccountsActivity.DEFAULT_CURRENCY_CODE	2
25434	AccountsActivity.INDEX_FAVORITE_ACCOUNTS_FRAGMENT)	7
29732	AccountsActivity.INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT)	2
21495	AccountsActivity.REQUEST_PERMISSION_WRITE_SD_CARD:{	5
19929	AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE:	38
13804	AccountsActivity.class)	4
51099	AccountsActivity.createDefaultAccounts("EUR",mAcccountsActivity)	7
51124	AccountsActivity.createDefaultAccounts("EUR",mAccountsActivity)	6
30453	AccountsActivity.createDefaultAccounts(GnuCashApplication.getDefaultCurrencyCode(),getActivity())	2
18725	AccountsActivity.createDefaultAccounts(Money.DEFAULT_CURRENCY_CODE,activity)	6
57128	AccountsActivity.createDefaultAccounts(Money.DEFAULT_CURRENCY_CODE,getActivity())	3
57022	AccountsActivity.createDefaultAccounts(Money.DEFAULT_CURRENCY_CODE,mActivity)	6
21223	AccountsActivity.createDefaultAccounts(currencyCode,FirstRunWizardActivity.this)	6
21701	AccountsActivity.createDefaultAccounts(mCurrencyCode,FirstRunWizardActivity.this)	11
21481	AccountsActivity.importAccounts(FirstRunWizardActivity.this)	6
21295	AccountsActivity.importAccounts(this)	6
57147	AccountsActivity.importXmlFileFromIntent(getActivity(),data,null)	3
21928	AccountsActivity.importXmlFileFromIntent(this,data)	9
59118	AccountsActivity.importXmlFileFromIntent(this,data,new	4
19409	AccountsActivity.importXmlFileFromIntent(this,data,null)	12
34701	AccountsActivity.openExportFragment(getActivity())	6
24708	AccountsActivity.openExportFragment(this)	6
59903	AccountsActivity.rateAppConfig	3
21724	AccountsActivity.removeFirstRunFlag()	13
29744	AccountsActivity.showExportDialog(getActivity())	9
25022	AccountsActivity.showExportDialog(this)	13
2451	AccountsActivity.showWhatsNewDialog(getActivity())	3
3485	AccountsActivity.showWhatsNewDialog(this)	11
20048	AccountsActivity.start(GnuCashApplication.getAppContext())	9
31768	AccountsActivity.start(context)	10
19751	AccountsActivity.start(getAppContext())	13
19913	AccountsActivity.start(mContext)	7
12169	AccountsActivity.start(this)	15
54866	AccountsActivity.startXmlFileChooser(getActivity())	5
12346	AccountsActivity.startXmlFileChooser(this)	30
19389	AccountsActivity.this,	9
19313	AccountsActivityTest	32
28494	AccountsActivityTest()	25
13750	AccountsActivityTest.preventFirstRunDialogs(GnuCashApplication.getAppContext())	2
13430	AccountsActivityTest.preventFirstRunDialogs(context)	2
13871	AccountsActivityTest.preventFirstRunDialogs(getInstrumentation().getTargetContext())	20
18709	AccountsCursorAdapter	20
29196	AccountsCursorAdapter(	24
30619	AccountsCursorAdapter(Context	14
31033	AccountsCursorAdapter(getActivity()	2
27738	AccountsCursorLoader	17
27634	AccountsCursorLoader(Context	26
27722	AccountsCursorLoader(getActivity(),mCurrentFilter)	10
31066	AccountsCursorLoader(this.getActivity()	1
31345	AccountsCursorLoader(this.getActivity())	2
27705	AccountsCursorLoader(this.getActivity(),accountId)	10
27875	AccountsCursorLoader(this.getActivity(),accountId,mDisplayMode)	5
64217	AccountsCursorLoader(this.getActivity(),accountUID,mDisplayMode)	2
30693	AccountsCursorLoader(this.getActivity().getApplicationContext())	10
750	AccountsDbAdapter	251
19334	AccountsDbAdapter#getDoubleEntryAccountsBalance()	9
35454	AccountsDbAdapter#getFullyQualifiedAccountName(String)	6
24176	AccountsDbAdapter(@NonNull	5
9291	AccountsDbAdapter(BookDbHelper.getDatabase(bookUID))	6
35354	AccountsDbAdapter(Context	9
6950	AccountsDbAdapter(GnuCashApplication.getAppContext())	19
14055	AccountsDbAdapter(SQLiteDatabase	14
30681	AccountsDbAdapter(TransactionsActivity.this)	7
18640	AccountsDbAdapter(activity)	5
3803	AccountsDbAdapter(context)	58
28282	AccountsDbAdapter(db)	17
10136	AccountsDbAdapter(db,mTransactionsDbAdapter)	44
24996	AccountsDbAdapter(db,transactionsDbAdapter)	12
57236	AccountsDbAdapter(db,trnAdapter)	6
3905	AccountsDbAdapter(getActivity())	87
31154	AccountsDbAdapter(getActivity().getApplicationContext())	1
28070	AccountsDbAdapter(getApplicationContext())	4
30245	AccountsDbAdapter(getContext())	22
27028	AccountsDbAdapter(getSherlockActivity())	11
35475	AccountsDbAdapter(mContext)	20
28384	AccountsDbAdapter(mDb)	5
58772	AccountsDbAdapter(mDb).getAccountsBalance(accountUIDs,periodStart,periodEnd)	3
13162	AccountsDbAdapter(mDb,mTransactionsDbAdapter)	48
10243	AccountsDbAdapter(mDb,this)	2
11580	AccountsDbAdapter(mDb,this).getOrCreateImbalanceAccountUID(transaction.getCurrency())	5
58796	AccountsDbAdapter(mDb,transactionsDbAdapter).getAllOpeningBalanceTransactions()	3
63420	AccountsDbAdapter(mainDb,	6
7530	AccountsDbAdapter(mainDb,mTransactionsDbAdapter)	10
2773	AccountsDbAdapter(this)	43
3454	AccountsDbAdapter.ACCOUNT_NAME_SEPARATOR	16
34781	AccountsDbAdapter.deleteRecord(long).	3
612	AccountsDbAdapter.getActiveAccountColorResource(accountUID)	5
217	AccountsDbAdapter.getActiveAccountColorResource(mAccountUID)	6
30994	AccountsDbAdapter.getImbalanceAccountName(Currency.getInstance(mCurrencyCode))	5
59391	AccountsDbAdapter.getImbalanceAccountPrefix()	4
1452	AccountsDbAdapter.getInstance()	135
30735	AccountsDbAdapter.getInstance().addAccount(account)	4
52277	AccountsDbAdapter.getInstance().addRecord(account)	5
52346	AccountsDbAdapter.getInstance().addRecord(account,DatabaseAdapter.UpdateMethod.insert)	5
30754	AccountsDbAdapter.getInstance().deleteAllRecords()	1
61952	AccountsDbAdapter.getInstance().getAccountBalance(mAccountUID,-1,transaction.getTimeMillis())	4
62017	AccountsDbAdapter.getInstance().getAccountFullName(mAccountUID))	5
33686	AccountsDbAdapter.getInstance().getAccountName(mOriginAccountUID)	3
53624	AccountsDbAdapter.getInstance().getAccountType(accountUID).hasDebitNormalBalance()	5
53147	AccountsDbAdapter.getInstance().getAccountsBalance(accountUIDs,periodStart,periodEnd)	5
31403	AccountsDbAdapter.getInstance().getAllOpeningBalanceTransactions()	7
614	AccountsDbAdapter.getInstance().getCurrencies()	10
34518	AccountsDbAdapter.getInstance().getFullyQualifiedAccountName(split.getAccountUID())	7
53831	AccountsDbAdapter.getInstance().getID(accountUID)	2
59409	AccountsDbAdapter.getInstance().getOrCreateImbalanceAccountUID(currency))	5
26215	AccountsDbAdapter.getInstance().getOrCreateImbalanceAccountUID(transaction.getCurrency())	12
33594	AccountsDbAdapter.getInstance().getSubAccountCount(accountUID)	3
30696	AccountsDbAdapter.getInstance().getUID(accountID)	4
30742	AccountsDbAdapter.getInstance().getUID(accountId)	4
31427	AccountsDbAdapter.getInstance().getUID(dstAccountId)	7
31379	AccountsDbAdapter.getInstance().isFavoriteAccount(mAccountUID)	5
55192	AccountsDbAdapter.getInstance().isFavoriteAccount(mSelectedAccountUID)	8
3693	AccountsDbAdapter.getInstance().reassignDescendantAccounts(mOriginAccountUID,accountsDbAdapter.getUID(targetAccountId))	5
30812	AccountsDbAdapter.getInstance().updateAllAccounts(DatabaseSchema.AccountEntry.COLUMN_CURRENCY,currencyCode)	4
30955	AccountsDbAdapterTest	5
32623	AccountsDbAdapterTest.loadDefaultAccounts()	6
30942	AccountsDbAdapterTest{	12
13841	AccountsListFragment	64
20997	AccountsListFragment#mDisplayMode	4
19551	AccountsListFragment()	22
27868	AccountsListFragment(),FRAGMENT_ACCOUNTS_LIST)	8
51112	AccountsListFragment)	6
19568	AccountsListFragment){	21
35929	AccountsListFragment.AccountBalanceTask(mSumTextView,getActivity()).execute(mAccountID)	5
3211	AccountsListFragment.REQUEST_PICK_ACCOUNTS_FILE:	15
27795	AccountsListFragment.newInstance(AccountsListFragment.DisplayMode.FAVORITES)	6
27775	AccountsListFragment.newInstance(AccountsListFragment.DisplayMode.RECENT)	6
27703	AccountsListFragment.newInstance(AccountsListFragment.DisplayMode.TOP_LEVEL)	6
19805	Acct"	3
28927	Acct")	8
25569	Accumulate	7
20927	Acesso	10
19127	Action	59
1749	ActionBar	148
37978	ActionBar's	6
37894	ActionBar.	7
45535	ActionBar.DISPLAY_HOME_AS_UP	4
45771	ActionBar.DISPLAY_HOME_AS_UP)	4
45171	ActionBar.DISPLAY_SHOW_CUSTOM	4
45528	ActionBar.DISPLAY_SHOW_CUSTOM)	7
45622	ActionBar.DISPLAY_SHOW_HOME	4
45749	ActionBar.DISPLAY_SHOW_HOME)	8
45135	ActionBar.DISPLAY_SHOW_HOME))	4
45620	ActionBar.DISPLAY_SHOW_TITLE	4
44966	ActionBar.DISPLAY_SHOW_TITLE)	7
45713	ActionBar.DISPLAY_USE_LOGO	4
45393	ActionBar.DISPLAY_USE_LOGO)	4
44992	ActionBar.LayoutParams	4
45435	ActionBar.LayoutParams(DEFAULT_CUSTOM_GRAVITY)	4
45005	ActionBar.LayoutParams(getContext(),attrs)	4
46176	ActionBar.NAVIGATION_MODE_LIST)	4
45346	ActionBar.NAVIGATION_MODE_LIST:	4
45129	ActionBar.NAVIGATION_MODE_STANDARD	4
45506	ActionBar.NAVIGATION_MODE_STANDARD)	4
45514	ActionBar.NAVIGATION_MODE_STANDARD:	4
45057	ActionBar.NAVIGATION_MODE_TABS)	7
45053	ActionBar.NAVIGATION_MODE_TABS:	4
45045	ActionBar.NAVIGATION_MODE_TABS:-	1
14299	ActionBar.OnNavigationListener	9
14202	ActionBar.OnNavigationListener()	5
40248	ActionBar.Tab	8
39399	ActionBar.TabListener	4
56822	ActionBarActivity	5
55008	ActionBarCompat	4
40059	ActionBarContainer	11
45676	ActionBarContainer(Context	5
38818	ActionBarContextView	17
45253	ActionBarContextView(Context	4
9450	ActionBarDrawerToggle	23
23085	ActionBarDrawerToggle(	10
39133	ActionBarImpl	8
39495	ActionBarImpl(Activity	4
40301	ActionBarImpl(Dialog	4
38903	ActionBarImpl(mActivity,mFeatures)	4
45066	ActionBarImpl.	6
28811	ActionBarSherlock	28
38580	ActionBarSherlock(Activity	4
39330	ActionBarSherlock.wrap(this,ActionBarSherlock.FLAG_DELEGATE)	4
38469	ActionBarSherlock>	4
37763	ActionBarSherlock>>	4
38287	ActionBarSherlock>>()	4
38530	ActionBarSherlock>>(IMPLEMENTATIONS)	4
39078	ActionBarSherlockCompat	4
38894	ActionBarSherlockCompat(Activity	5
44990	ActionBarSherlockCompat.cleanActivityName(packageName,xml.getAttributeValue(i))	4
39709	ActionBarSherlockNative	4
40336	ActionBarSherlockNative#startActionMode	4
39755	ActionBarSherlockNative(Activity	4
39525	ActionBarSherlockNative.this.getMenuInflater()	4
34156	ActionBarUtils	5
34499	ActionBarUtils.clickSherlockActionBarItem(mSolo,R.id.menu_export)	11
28411	ActionBarUtils.clickSherlockActionBarItem(mSolo,R.id.menu_search)	17
39043	ActionBarView	13
45668	ActionBarView(Context	4
46032	ActionBarView.this)	4
40178	ActionBarWrapper	6
40273	ActionBarWrapper(Activity	4
39880	ActionBarWrapper(mActivity)	4
43298	ActionButtonSubmenu	4
42337	ActionButtonSubmenu(Context	4
42512	ActionButtonSubmenu(mContext,subMenu)	4
43177	ActionMenu	4
42799	ActionMenu(Context	4
43514	ActionMenuChildView	4
44134	ActionMenuChildView)	4
43300	ActionMenuChildView,View_HasStateListenerSupport	4
42845	ActionMenuItem	8
42917	ActionMenuItem(Context	4
45294	ActionMenuItem(context,0,android.R.id.home,0,0,mTitle)	4
43118	ActionMenuItem(getContext(),	4
42722	ActionMenuItemView	7
43136	ActionMenuItemView(Context	4
43685	ActionMenuItemView)	4
42718	ActionMenuItemView))	4
43155	ActionMenuItems	4
42997	ActionMenuPresenter	10
43192	ActionMenuPresenter(Context	4
45225	ActionMenuPresenter(mContext)	4
39382	ActionMenuPresenter.reserveOverflow(mActivity)	4
42733	ActionMenuView	13
43952	ActionMenuView(Context	4
43188	ActionMenuView.ActionMenuChildView,View_HasStateListenerSupport	4
43219	ActionMenuView.measureChildForCells(v,	4
18348	ActionMode	63
47640	ActionMode's	4
47603	ActionMode.	4
18198	ActionMode.Callback	53
18508	ActionMode.Callback()	21
39817	ActionModeCallbackWrapper	5
39879	ActionModeCallbackWrapper(ActionMode.Callback	5
38997	ActionModeCallbackWrapper(callback)	8
39544	ActionModeImpl	4
39786	ActionModeImpl(ActionMode.Callback	4
39810	ActionModeImpl(callback)	4
39493	ActionModeWrapper	5
40279	ActionModeWrapper(android.view.ActionMode	4
39352	ActionModeWrapper(mode)	4
37625	ActionProvider	32
50252	ActionProvider#onCreateActionView()	4
47713	ActionProvider(Context	4
48133	ActionProvider.	4
43066	ActionProvider.SubUiVisibilityListener	4
42380	ActionProviderWrapper	4
42840	ActionProviderWrapper(ActionProvider	4
44761	ActionProviderWrapper(actionProvider))	4
44745	ActionProviderWrapper)	4
19591	ActionType	16
2524	Actions</string>	110
51012	Activates	5
30859	Activi	6
60168	Activing	3
48642	Activities	4
26820	Activities.	8
1491	Activity	179
38695	Activity#	4
48200	Activity#getMenuInflater()	5
48068	Activity#onContextItemSelected(MenuItem)	8
38103	Activity#onCreate	4
23046	Activity#onCreate(Bundle)	6
50003	Activity#onCreateOptionsMenu	4
48096	Activity#onOptionsItemSelected(MenuItem)	8
9562	Activity#onResume()	2
23118	Activity#setContentView(int)	6
26638	Activity's	10
9736	Activity)	46
51497	Activity){	4
20104	Activity.RESULT_CANCELED)	22
28285	Activity.RESULT_CANCELED){	23
1983	Activity.RESULT_OK	38
25079	Activity.RESULT_OK)	20
697	Activity.RESULT_OK){	29
38386	Activity.class,int.class	4
48029	Activity.onOptionsItemSelected(MenuItem)	4
48784	ActivityChooserModel	13
48239	ActivityChooserModel#chooseActivity(int)	4
48971	ActivityChooserModel(Context	4
49413	ActivityChooserModel(context,historyFileName)	4
48707	ActivityChooserModel.class.getSimpleName()	4
48460	ActivityChooserModel.get(context,"task_specific_history_file_name.xml")	4
49973	ActivityChooserModel.get(mContext,	4
49824	ActivityChooserModel.get(mContext,mShareHistoryFileName)	4
48346	ActivityChooserModelClient	8
37367	ActivityChooserView	12
48932	ActivityChooserView(Context	4
49857	ActivityChooserView(mContext)	4
49289	ActivityChooserViewAdapter	4
49251	ActivityChooserViewAdapter()	4
48970	ActivityChooserViewAdapter.ITEM_VIEW_TYPE_ACTIVITY:	4
49551	ActivityChooserViewAdapter.ITEM_VIEW_TYPE_FOOTER:	4
49021	ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_DEFAULT	4
48974	ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_DEFAULT)	4
49041	ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_UNLIMITED	4
50678	ActivityInfo	5
40321	ActivityInfo.UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW)	4
58644	ActivityInstrumentationTestCase2	3
18742	ActivityInstrumentationTestCase2<AccountsActivity>	45
62080	ActivityInstrumentationTestCase2<FirstRunWizardActivity>{	3
52269	ActivityInstrumentationTestCase2<MainActivity>	2
60328	ActivityInstrumentationTestCase2<PieChartActivity>	5
24635	ActivityInstrumentationTestCase2<PieChartFragment>	5
54968	ActivityInstrumentationTestCase2<PreferenceActivity>	5
13772	ActivityInstrumentationTestCase2<ReportsActivity>	7
13978	ActivityInstrumentationTestCase2<TransactionsActivity>	20
49488	ActivityResolveInfo	6
49259	ActivityResolveInfo(ResolveInfo	4
49026	ActivityResolveInfo(resolveInfo))	4
48339	ActivitySorter	7
58639	ActivityTestRule	3
58613	ActivityTestRule#getActivity()	3
13383	ActivityTestRule<>(	4
35084	ActivityTestRule<>(AccountsActivity.class)	2
32624	ActivityTestRule<>(ReportsActivity.class)	2
13052	ActivityTestRule<>(ReportsActivity.class,true,false)	4
13536	ActivityTestRule<>(TransactionsActivity.class,true,false)	2
13507	ActivityTestRule<AccountsActivity>	5
13647	ActivityTestRule<ReportsActivity>	4
13667	ActivityTestRule<TransactionsActivity>	2
37296	Actual	4
1220	Adapter	80
45939	Adapter#getItemViewType(int)	4
47790	Adapter.	4
46024	Adapter>	4
46284	AdapterContextMenuInfo	4
45869	AdapterContextMenuInfo(View	4
61934	AdapterDataObserver	3
61919	AdapterDataObserver()	3
46426	AdapterDataSetObserver	4
45802	AdapterDataSetObserver()	4
43541	AdapterView	16
46484	AdapterView")	4
49313	AdapterView#OnItemClickListener	4
46334	AdapterView,read	4
46514	AdapterView.	4
47422	AdapterView.OnItemClickListener	4
2215	AdapterView.OnItemClickListener()	10
49609	AdapterView.OnItemClickListener,	4
44474	AdapterView.OnItemClickListener,View.OnKeyListener,	4
21460	AdapterView.OnItemSelectedListener	20
985	AdapterView.OnItemSelectedListener()	66
1294	AdapterView.OnItemSelectedListener,	14
46497	AdapterView</a>	4
13904	Add	118
18224	Add,view	17
64321	AddAccountDialogFragment	1
64319	AddAccountDialogFragment(View.OnClickListener	1
64322	AddAccountDialogFragment(listener)	1
64308	AddAccountDialogFragment.this.dismiss()	1
64316	AddAccountDialogFragment.this.mSaveButton.setEnabled(false)	1
64313	AddAccountDialogFragment.this.mSaveButton.setEnabled(true)	1
27185	AddAccountFragment	17
51361	AddAccountFragment()	4
30562	AddAccountFragment.newInstance(mAccountsDbAdapter)	9
30608	AddAccountFragment.newInstance(null)	6
38112	Added	16
26321	Adding	12
42114	Additional	11
11323	Adds	96
10264	Adiciona	13
56231	Adicionada	2
23658	Affichage	13
62193	Afghani")).perform(click())	3
59015	African	2
20577	After	8
61929	Agashe	3
23032	Agendadas</string>	14
20416	Agendamentos	10
55612	Aggiunta	2
27959	Aggiunta,visualizzazione	5
25772	Aggiunto	5
23756	Aggregate	5
25911	Aiuto	5
11001	Ajoute	9
23848	Ajouter,afficher	5
26143	Ajustes	7
11371	Akses	8
11939	Akses</string>	10
12816	Aktar&#8230	9
22451	Aktionen</string>	8
10299	Akum	5
10298	Akun	7
10796	Akun</string>	13
18370	AlarmManager	33
20588	AlarmManager.INTERVAL_DAY,	8
20126	AlarmManager.INTERVAL_DAY,pendingIntent)	5
55294	AlarmManager.INTERVAL_FIFTEEN_MINUTES,	6
58802	AlarmManager.INTERVAL_HALF_DAY,	4
55404	AlarmManager.INTERVAL_HALF_DAY,pendingIntent)	6
55263	AlarmManager.INTERVAL_HOUR,pendingIntent)	3
52609	Alceu	2
2649	AlertDialog	34
2702	AlertDialog.Builder	45
19204	AlertDialog.Builder(AccountsActivity.this)	7
27295	AlertDialog.Builder(activity)	3
3074	AlertDialog.Builder(context)	8
3627	AlertDialog.Builder(getActivity())	48
48168	AlertDialog.Builder(getContext())	4
3479	AlertDialog.Builder(this)	28
18531	Alex	7
17479	Alexander	14
36105	Alias	4
2300	All	187
56433	Alla	2
6184	Alle	34
1774	Allow	23
25144	Allowed	13
24621	Allows	11
46745	AlphaAnimation	4
47094	AlphaAnimation(0.0f,1.0f)	4
46770	AlphaAnimation.RESTART	4
48774	Alphabetic	4
38979	Already	4
7548	Also	59
49455	Also,	5
44872	Also,any	4
39480	Also,if	12
41317	Also,the	4
20701	Also,we	5
35177	Although	12
48344	Always	4
11979	Ambas	25
36075	American	7
5228	Amount	48
57547	Amount"	3
28956	Amount">	10
2326	Amount</string>	80
13449	AmountInputFormatter	39
18633	AmountInputFormatter())	7
13295	AmountInputFormatter(EditText	9
13800	AmountInputFormatter(mAmountEditText)	16
13128	AmountInputFormatter(mAmountEditText,mTransactionTypeButton)	4
31890	AmountInputFormatter(mConvertedAmountInput))	8
12298	AmountInputFormatter(mExchangeRateInput))	10
56650	AmountInputFormatter(splitAmountEditText)	7
13768	AmountInputFormatter(splitAmountEditText))	10
13607	AmountInputFormatter(splitAmountEditText,splitTypeButton))	4
19049	AmountInputWatcher	2
18774	AmountInputWatcher())	2
31545	AmountParser	3
31952	AmountParser.parse("")	3
31538	AmountParser.parse("123.45asdf")	3
31512	AmountParser.parse("asdf123.45")	3
31595	AmountParser.parse(getText().toString())	3
31571	AmountParser.parse(mConvertedAmountInput.getText().toString())	3
31856	AmountParser.parse(mExchangeRateInput.getText().toString())	3
31475	AmountParserTest	3
31485	AmountTextWatcher	18
31903	AmountTextWatcher(EditText	18
56640	AmountTextWatcher(mAmountEditText)	17
57448	Amounts")	4
57422	Amounts"/>	3
1647	An	117
52968	Analogous	2
50315	And	5
11551	Anda	12
29637	Anda.	5
11741	Anda</string>	11
6118	Andernfalls	30
17078	Anders	28
2449	Android	365
3043	Android!	139
17966	Android!\n	35
17681	Android!\nMoesz	14
4074	Android!\nSie	19
11585	Android!\nVous	14
52868	Android)	23
21925	Android,just	5
14927	Android-eksportering	12
6040	Android.	41
38264	Android.</p>	4
29833	Android.\n	40
29900	Android.\nDen	12
28699	Android.\nEle	12
23989	Android.\nElle	15
26213	Android.\nHet	13
29739	Android.\nIl	7
4880	Android.\nIt	21
29852	Android.\nPermite	16
21264	Android/\'	16
55789	Android/\'</string>	4
19122	Android</description>	12
3231	Android</string>	183
51743	Android</string><string	2
29159	AndroidJUnitRunner{	3
19331	AndroidManifest	7
39932	AndroidManifest.xml	8
42173	AndroidRuntimeException("Animators	4
40046	AndroidRuntimeException("requestFeature()	4
30803	AndroidTestCase	7
29907	Android\nEsta	10
17763	Androida</string>	13
15049	Anfangsbestand	22
46833	Animatable)	4
46294	Animate	4
39802	Animation	8
40897	Animation.	4
47181	AnimationDrawable	9
47492	AnimationDrawable()	4
46920	AnimationDrawable)	4
46740	AnimationDrawable))	4
46958	AnimationDrawables	4
42308	AnimationHandler	4
41982	AnimationHandler()	4
41774	AnimationUtils.currentAnimationTimeMillis()	4
40078	AnimationUtils.loadAnimation(mActivity,android.R.anim.fade_out)	4
41081	Animations	8
39903	Animator	22
40728	Animator,not	4
40423	Animator,we	4
40675	Animator.AnimatorListener	12
40174	AnimatorListener	12
39497	AnimatorListener#onAnimationStart(Animator)	4
40559	AnimatorListenerAdapter	4
39914	AnimatorListenerAdapter()	8
42546	AnimatorProxy	10
43096	AnimatorProxy(View	4
42431	AnimatorProxy(view)	4
43186	AnimatorProxy.NEEDS_PROXY	6
45332	AnimatorProxy.wrap(mMenuView.getChildAt(i))	4
42451	AnimatorProxy.wrap(this)	6
39513	AnimatorSet	14
40673	AnimatorSet")	4
40866	AnimatorSet#play(Animator)	5
40711	AnimatorSet#playSequentially(Animator[])	5
40455	AnimatorSet#playTogether(Animator[])	5
39780	AnimatorSet()	14
40976	AnimatorSet)	4
40434	AnimatorSet).	4
40749	AnimatorSet,	4
40799	AnimatorSet,although	4
40480	AnimatorSet,because	4
40865	AnimatorSet,when	4
40973	AnimatorSet.	5
39944	AnimatorSet.Builder	11
40796	AnimatorSetListener	5
41033	AnimatorSetListener(AnimatorSet	4
41030	AnimatorSetListener(this)	4
40504	AnimatorSetListener)	4
41003	AnimatorSets	4
42440	AnimatorUpdateListener	4
42189	AnimatorUpdateListener#onAnimationUpdate(ValueAnimator)	4
40703	Animators.	4
61907	Anirudha	3
41870	Another	10
12448	Ansicht</string>	8
29047	Antilhas	11
4158	Antillean	101
58250	Antillian	6
30644	Any	26
6096	Anzeigen</string>	11
17	Apache	377
55722	Aperfeioado	5
6602	App	33
21995	App,welche	21
18674	App</name>	7
30139	AppBarLayout	3
30391	AppBarLayout)	3
57163	AppCompat.	6
2096	AppCompatActivity	25
91	AppCompatActivity{	10
10078	AppCompatButton	5
50843	AppCompatButton)	6
57104	AppCompatDelegate	6
57149	AppCompatDelegate.create(this,null)	6
55461	AppCompatEditText	2
32765	AppCompatPreferenceActivity	10
55464	AppCompatSpinner	2
55200	AppCompats	7
8907	AppWidgetManager	36
54755	AppWidgetManager.EXTRA_APPWIDGET_ID,	5
54730	AppWidgetManager.INVALID_APPWIDGET_ID)	6
9429	AppWidgetManager.INVALID_APPWIDGET_ID){	6
10110	AppWidgetManager.getInstance(context)	26
50803	AppWidgetProvider	11
27151	Appends	3
7204	Application	102
45483	ApplicationInfo	4
39125	Applications	4
9283	Application{	10
39596	Apply	4
41500	Appropriate	4
47934	Apps	10
55693	Apps/GnuCash	4
28046	Apresentao	9
50379	Arabic	5
28586	Arbia	10
42125	ArgbEvaluator	4
15939	Argelino</item>	25
15544	Argentino</item>	21
35703	Argument	2
30652	Arguments	38
58315	Ariary"	6
6135	Ariary</item>	108
12626	ArithmeticException	3
28905	Armeniano</item>	10
15794	Armenio</item>	13
35073	Array	18
5745	ArrayAdapter.createFromResource(getActivity(),	36
64140	ArrayAdapter.createFromResource(this,	3
1359	ArrayAdapter.createFromResource(this,R.array.report_time_range,	12
1996	ArrayAdapter<>(	10
152	ArrayAdapter<>(actionBar.getThemedContext(),	11
1184	ArrayAdapter<>(actionBar.getThemedContext(),android.R.layout.simple_spinner_item,currencyNames)	6
484	ArrayAdapter<>(getActivity(),	6
57205	ArrayAdapter<>(getActivity(),android.R.layout.select_dialog_singlechoice)	3
834	ArrayAdapter<>(this,	26
54746	ArrayAdapter<>(this,android.R.layout.select_dialog_singlechoice)	4
24907	ArrayAdapter<>(this,android.R.layout.simple_spinner_item,currencyNames)	5
2142	ArrayAdapter<AccountType>	27
4150	ArrayAdapter<AccountType>(this,	9
1465	ArrayAdapter<CharSequence>	55
46027	ArrayAdapter<CharSequence>(context,	4
1764	ArrayAdapter<String>	58
309	ArrayAdapter<String>(	21
8502	ArrayAdapter<String>(getActivity(),android.R.layout.simple_spinner_item,getResources().getStringArray(R.array.currency_names))	4
25228	ArrayAdapter<String>(this,	10
57082	ArrayList<>((int)commoditiesDbAdapter.getRecordsCount())	6
733	ArrayList<>()	184
60124	ArrayList<>(Arrays.asList(AccountType.INCOME,AccountType.EXPENSE)))	3
3611	ArrayList<>(Arrays.asList(AccountType.INCOME,AccountType.EXPENSE))))	34
19279	ArrayList<>(accountList.size()*2)	13
53159	ArrayList<>(budgetList.size())	2
52268	ArrayList<>(budgetList.size()*2)	4
35198	ArrayList<>(byDay.length)	4
34902	ArrayList<>(byDays)	4
32236	ArrayList<>(colors),new	13
34388	ArrayList<>(count	13
32094	ArrayList<>(labels))	13
53510	ArrayList<>(mBudgetAmounts)	2
26440	ArrayList<>(mDescendantAccountUIDs)	3
30084	ArrayList<>(mEarliestTimestampsMap.values())	5
32231	ArrayList<>(mReportTypeMap.keySet())	6
25147	ArrayList<>(mTransaction.getSplits())	8
61894	ArrayList<>(months	7
52136	ArrayList<>(scheduledActions.size())	4
52355	ArrayList<>(transaction.getSplits().size())	7
50755	ArrayList<>(transactionList.size()*3)	11
1327	ArrayList<Account>	22
250	ArrayList<Account>()	25
32564	ArrayList<Account>())	5
58759	ArrayList<AccountType>(Arrays.asList(AccountType.INCOME,AccountType.EXPENSE))	4
54386	ArrayList<AccountType>(Arrays.asList(AccountType.INCOME,AccountType.EXPENSE))))	10
42390	ArrayList<ActionMenuItem>	4
43095	ArrayList<ActionMenuItem>()	4
48753	ArrayList<ActivityResolveInfo>()	4
40682	ArrayList<Animator>	4
40473	ArrayList<Animator>()	5
39907	ArrayList<AnimatorListener>	14
40875	ArrayList<AnimatorListener>()	6
40934	ArrayList<AnimatorListener>(oldListeners)	4
42171	ArrayList<AnimatorUpdateListener>	7
41938	ArrayList<AnimatorUpdateListener>()	7
62678	ArrayList<BarDataSet>	5
62677	ArrayList<BarDataSet>()	5
62660	ArrayList<BarDataSet>(Arrays.asList(set)))	7
20225	ArrayList<BarEntry>	9
20595	ArrayList<BarEntry>()	9
57476	ArrayList<BudgetAmount>	4
35042	ArrayList<CharSequence>	12
34973	ArrayList<CharSequence>()	7
24511	ArrayList<Currency>()	11
40857	ArrayList<Dependency>	4
40451	ArrayList<Dependency>()	4
26673	ArrayList<Entry>	19
26758	ArrayList<Entry>()	14
54901	ArrayList<Entry>(months	5
38042	ArrayList<Fragment>	5
38409	ArrayList<Fragment>()	4
48769	ArrayList<HistoricalRecord>()	8
49394	ArrayList<HistoricalRecord>(mHistoricalRecords)	4
27986	ArrayList<Integer>	12
27999	ArrayList<Integer>()	10
40678	ArrayList<Keyframe>	8
41720	ArrayList<Keyframe>()	4
26847	ArrayList<LineDataSet>	8
26750	ArrayList<LineDataSet>()	8
62684	ArrayList<LineDataSet>(Arrays.asList(set)))	6
24582	ArrayList<Long>()	19
25311	ArrayList<Long>(mEarliestTimestampsMap.values())	14
42868	ArrayList<MenuItemImpl>	12
43444	ArrayList<MenuItemImpl>()	4
40991	ArrayList<Node>	5
40880	ArrayList<Node>()	5
39713	ArrayList<OnMenuVisibilityListener>	4
39598	ArrayList<OnMenuVisibilityListener>()	4
62163	ArrayList<ReviewItem>	3
51558	ArrayList<ScheduledAction>()	18
19198	ArrayList<ScheduledEvent>()	9
62900	ArrayList<Split>	4
13552	ArrayList<Split>()	51
25360	ArrayList<Split>(mTransaction.getSplits())	14
24202	ArrayList<Split>(transactionList.size()*3)	9
916	ArrayList<String>	105
917	ArrayList<String>()	72
26468	ArrayList<String>(mDescendantAccountUIDs)	8
56497	ArrayList<String>(transaction.getSplits().size())	8
39413	ArrayList<TabImpl>	4
39617	ArrayList<TabImpl>()	4
24565	ArrayList<Transaction>	17
1911	ArrayList<Transaction>()	54
8822	ArrayList<Uri>	15
51684	ArrayList<Uri>()	6
41850	ArrayList<ValueAnimator>	4
42268	ArrayList<ValueAnimator>()	4
31397	ArrayList<View>()	16
39555	ArrayList<View>(1)	4
26566	Arrays.asList(	6
58764	Arrays.asList(AccountType.EXPENSE,AccountType.INCOME)	5
36	Arrays.asList(AccountType.EXPENSE,AccountType.INCOME))	22
32668	Arrays.asList(AccountType.INCOME,AccountType.EXPENSE)	6
27616	Arrays.asList(accountTypeEntries).indexOf(account.getAccountType().name())	8
27228	Arrays.asList(accountTypeEntries).indexOf(accountType.name())	7
54732	Arrays.asList(backupFiles)	7
30490	Arrays.asList(getResources().getStringArray(R.array.currency_codes))	9
18961	Arrays.asList(getResources().getStringArray(R.array.currency_codes)).get(which)	5
290	Arrays.asList(getResources().getStringArray(R.array.currency_names))	8
256	Arrays.asList(getResources().getStringArray(R.array.key_currency_codes))	17
26189	Arrays.asList(getResources().getStringArray(R.array.key_currency_codes)).get(which)	4
35045	Arrays.fill(scaleFactors,scaleFactor)	2
54722	Arrays.sort(backupFiles)	7
26740	Arrays.toString(Account.AccountType.values()).replaceAll("\\[|]","")	4
26917	Arrays.toString(Account.AccountType.values()).replaceAll("\\[|]","").split(",")	4
19718	Arrays.toString(AccountType.values()).replaceAll("\\[|]","")	4
285	Arrays.toString(AccountType.values()).replaceAll("\\[|]","").split(",")	5
25816	Arreglar	7
28772	Aruba</item>	11
15384	Arube&#241	8
15469	Arubeo</item>	9
62417	Arzebeijo</item>	6
41145	As	21
21688	As&#8230	16
3815	Asegurese	11
46978	Aspect	4
29555	Assegureu-vos	5
19290	AssertJ	3
41016	AssertionError()	8
39668	AssetManager	8
8080	Assets	3
26390	Assets")	3
21645	Assets"/>	11
61759	Assets:Cash	5
26467	Assets:Savings	3
2224	Assets</string>	81
29367	Assicurati	4
35482	Assigns	7
19567	Associate	12
39453	Associated	4
31274	Assume.assumeTrue(hasActiveInternetConnection())	4
43863	Assumes	4
18717	AsyncTask	3
7045	AsyncTask<ExportParams,Void,Boolean>	9
18557	AsyncTask<InputStream,Void,Boolean>	12
2653	AsyncTask<InputStream,Void,Boolean>{	5
35979	AsyncTask<Long,Void,Money>	8
64227	AsyncTask<String,Void,Money>	2
31624	AsyncTask<Uri,Void,Boolean>	4
3229	AsyncTask<Uri,Void,Boolean>{	5
9500	AsyncTask<Void,Void,Void>	5
23248	AsyncTask<Void,Void,Void>()	8
63533	AsyncTaskLoader<Cursor>	3
7002	Asynchronous	12
63554	Asynchronously	1
25747	At	29
55001	Ativos</string>	10
31543	Attaches	10
44974	Attempt	4
63829	Attempting	3
48766	Attribute	4
48365	AttributeSet	9
37570	Attributes	13
1540	Aucune	77
22455	Ausdruck!</string>	11
57750	Austral"	6
15925	Australiano</item>	21
9956	Auth#startOAuth2Authentication(Context,String)	2
9260	Auth.getOAuth2Token()	2
9389	Auth.startOAuth2Authentication(getActivity(),dropboxAppKey)	2
9186	Auth.startOAuth2Authentication(getActivity(),getString(R.string.dropbox_app_key))	2
8468	Authority	6
54621	Auto-balance	6
19278	Auto-generated	11
10033	AutoCompleteTextView	27
50495	AutoCompleteTextView#onKeyUp(int,KeyEvent)	5
50459	AutoCompleteTextView.	5
50006	AutoCompleteTextView.class.getMethod("ensureImeVisible",boolean.class)	5
50455	AutoCompleteTextView.class.getMethod("setText",CharSequence.class,boolean.class)	5
33942	Autobalancing	4
18928	Automated	19
51883	Automatisk	7
54935	Avanar</string>	10
29470	Avanti.</string>	4
34757	Avoid	3
11469	Awal</string>	10
15415	Azer&#237	8
15450	Azer</item>	9
28619	Azerbaijo</item>	10
15837	B&#250	8
25532	B.	8
51406	BACKUP:	16
24943	BACKUP_FOLDER_PATH	14
12820	BALANCE	15
12303	BANK	23
19408	BANK:	21
13063	BASE_FOLDER_PATH	17
488	BASIS,	349
57923	BCEAO"	6
5692	BCEAO</item>	108
6253	BE	20
57778	BEAC"	6
4797	BEAC</item>	106
1081	BEGIN	34
19126	BETWEEN	14
20986	BITO</item>	11
19529	BITO</string>	19
60343	BOOKS_EXPENSE_ACCOUNT_NAME	3
60331	BOOKS_EXPENSE_ACCOUNT_UID	3
63397	BOOKS_TABLE_CREATE	4
63484	BOOK_DATABASE_NAME	4
63431	BOOK_DATABASE_VERSION	4
50871	BOOK_UID	3
4351	BOOK_VERSION	12
30840	BRAVO_ACCOUNT_NAME	22
30966	BRAVO_ACCOUNT_UID	5
54156	BUDGET:	2
53150	BUDGETS_TABLE_CREATE	2
53182	BUDGET_AMOUNTS_TABLE_CREATE	2
57490	BUDGET_AMOUNT_EDITOR:	3
50867	BUDGET_AMOUNT_LIST	10
53999	BUDGET_UID	5
27906	BUG\n	7
60491	BUT	3
32739	BY	23
7844	BYxxx	6
38830	Back	4
37725	Background	13
41990	Backing	4
20538	Backup	23
14678	Backup&#8230	59
51476	Backup...</string>	4
5916	Backup/Export	26
20456	Backup/Exporta&#231	10
5339	Backup/Exportar	6
6271	Backup</string>	131
51380	BackupPreferenceFragment	5
55448	BackupPreferenceFragment.REQUEST_RESOLVE_CONNECTION	6
55357	BackupPreferenceFragment.REQUEST_RESOLVE_CONNECTION:	3
2163	BackupPreferenceFragment.class.getName().equals(fragmentName)	8
28165	BackupPreferenceFragment.getGoogleApiClient(GnuCashApplication.getAppContext())	19
55372	BackupPreferenceFragment.getGoogleApiClient(getActivity())	6
55394	BackupPreferenceFragment.mGoogleApiClient	6
55318	BackupPreferenceFragment.mGoogleApiClient.connect()	6
63661	BackupTest	3
4648	Backups	28
29031	Bahamas</item>	11
15374	Bahame&#241	8
15756	Bahameo</item>	9
29160	Bahrein</item>	11
59063	Baht")	2
9459	Balance	49
2358	Balance</string>	15
9761	BalanceSheetFragment	13
60205	BalanceSheetFragment()	5
24864	BalanceSheetFragment())	8
60185	BalanceSheetFragment)	8
2132	BalanceSheetFragment){	8
33365	BalanceTextWatcher	22
33360	BalanceTextWatcher()	21
11137	Balances"	10
11327	Balances</string>	81
29489	Balken	6
22181	Balken-	8
22022	Balkens	8
18006	Bank	12
8201	Bank</act:name>	3
58370	Banque	6
27926	Bao	10
36740	Bar	19
37089	Bar,if	8
37453	Bar,including	4
37632	Bar.	8
37957	Bar</a>	4
1855	BarChart	30
6229	BarChart(this)	15
25347	BarChartActivity	7
21633	BarChartFragment	12
32213	BarChartFragment()	7
60233	BarChartFragment())	6
2098	BarData	66
53956	BarData(xVals,barDataSet)	2
62676	BarData(xVals,dataSets)	4
30007	BarData(xValues,Collections.singletonList(set))	7
30053	BarData(xValues,dataSets)	8
62659	BarData(xValues,new	7
29992	BarData(xValues,set)	6
18229	BarDataSet	34
53804	BarDataSet(barEntries,label)	2
18155	BarDataSet(values,"")	24
29970	BarDataSet(yValues,getResources().getString(R.string.label_chart_no_data))	8
20187	BarDataSet(yValues,noDataMsg)	4
30098	BarEntry	11
54078	BarEntry(amount.floatValue(),periodNum))	2
30034	BarEntry(array,i))	5
30026	BarEntry(array,i,stackLabels))	4
30011	BarEntry(floatListToArray(stack),i,	4
29963	BarEntry(floatListToArray(stack),i,stackLabels))	11
29952	BarEntry(i	12
29962	BarEntry(stack,i))	5
62669	BarEntry(stackedValues,z))	3
15668	Barbadense</item>	13
29105	Barbados</item>	11
15409	Barein&#237	8
15422	Barein</item>	9
15967	Barranger	9
20925	Barras/Linhas/Circulares)\n	10
4670	Barras/Pizza/Linhas)	6
20388	Barras</string>	18
20266	Base	34
44246	BaseAdapter	12
35537	BaseColumns	5
13996	BaseDrawerActivity	49
19466	BaseDrawerActivity.REQUEST_OPEN_DOCUMENT:	5
42792	BaseMenuPresenter	8
44069	BaseMenuPresenter(Context	4
44129	BaseMenuPresenter.	4
20929	BaseModel	41
36459	BaseModel#equals(Object)	7
26069	BaseModel(){	13
59737	BaseModel)	1
30835	BaseModel))	2
25873	BaseModel.generateUID()	4
61489	BaseModel>	3
53566	BaseModel{	16
9424	BaseReportFragment	19
63495	BaseReportFragment)	3
45447	BaseSavedState	12
25828	Basically	31
60565	Basically,if	3
22813	Batang</string>	7
25579	Bcher\n	5
54530	Be	6
6061	Bearbeiten	16
27377	Because	10
11904	Because,legacy	7
52052	Bedret	4
58671	Before	3
21922	Begin	6
43355	Behaves	4
30264	Behavior	3
30432	Behebung	8
28790	Belarus</item>	10
15442	Belice&#241	8
15587	Beliceo</item>	9
28714	Belize</item>	11
28244	Benutzername/Kennwort	5
22186	Benutzername/Passwort	7
10681	Beri	7
25580	Berichte\n	7
28708	Bermudas</item>	11
15621	Bermude&#241	8
15357	Bermudeo</item>	9
4312	Besttigen.	8
16708	Betere	6
6378	Betrag	40
25642	Betrag</string>	12
22119	Betrge	11
2942	Better	101
16630	Bewerker</string>	3
62376	Bielorrussia</item>	6
15581	Bieloruso</item>	13
2801	Bienvenido	18
845	BigDecimal	197
53541	BigDecimal#ROUND_HALF_EVEN	5
24948	BigDecimal#ZERO	3
36389	BigDecimal#intValue()	7
54048	BigDecimal("0.2"))).asBigDecimal()	2
31812	BigDecimal("123.45"))	3
58862	BigDecimal("13.75"),result.asBigDecimal())	3
36007	BigDecimal("350")	7
36386	BigDecimal("45.90")	7
51897	BigDecimal("99"))	6
51907	BigDecimal("99.00"))	3
23404	BigDecimal(0)	9
24062	BigDecimal(0))	16
26361	BigDecimal(0),this.mCurrency)	15
4093	BigDecimal(0).setScale(DEFAULT_DECIMAL_PLACES,DEFAULT_ROUNDING_MODE)	9
4467	BigDecimal(0.1)	5
31365	BigDecimal(100)	10
23478	BigDecimal(100))	7
32556	BigDecimal(100),2,	10
23878	BigDecimal(100),2,RoundingMode.HALF_EVEN)	4
31483	BigDecimal(123))	3
51915	BigDecimal(4.99))	12
58867	BigDecimal(8)	4
60161	BigDecimal(BigInteger.valueOf(numerator),scale)	8
6259	BigDecimal(String)	5
23559	BigDecimal(amount)	2
24059	BigDecimal(amount))	9
26226	BigDecimal(amount),	5
58914	BigDecimal(amount),Currency.getInstance(CURRENCY_CODE))	3
18241	BigDecimal(amount),currency)	13
26512	BigDecimal(amount),currency),	2
18323	BigDecimal(amountDouble),Currency.getInstance(currencyCode))	6
4936	BigDecimal(amountString)	25
36559	BigDecimal(amountString),Commodity.getInstance(CURRENCY_CODE))	4
36544	BigDecimal(amountString),Currency.getInstance(CURRENCY_CODE))	7
23459	BigDecimal(amountText)	2
52798	BigDecimal(amountText.replaceAll(",",".").trim())	8
2011	BigDecimal(args.getString(UxArgument.AMOUNT_STRING))	18
4894	BigDecimal(characterString),mTransaction.getCurrency())	4
32901	BigDecimal(clean).setScale(2,	11
55149	BigDecimal(cleanString)	2
24014	BigDecimal(cleanString).divide(new	2
26582	BigDecimal(cleanString).setScale(2,RoundingMode.HALF_EVEN).divide(new	2
4961	BigDecimal(cursor.getString(cursor.getColumnIndexOrThrow("split_amount")))	14
30974	BigDecimal(denomInt)	14
61794	BigDecimal(denominator),BigDecimal.ROUND_HALF_EVEN)	4
32987	BigDecimal(denominator),MathContext.UNLIMITED)	7
36133	BigDecimal(divisor),mCommodity)	4
26480	BigDecimal(divisor),mCurrency)	10
58569	BigDecimal(exchangeRateString)	2
24827	BigDecimal(expression.evaluate())	12
26403	BigDecimal(factor),mCurrency)	2
23340	BigDecimal(getDenominator())).intValue()	7
56575	BigDecimal(mAmountEditText.getText().toString().replaceAll(",",".").trim())	9
12726	BigDecimal(mValueDenom)	5
58577	BigDecimal(mValueNum)	2
36355	BigDecimal(multiplier),mCommodity)	4
31724	BigDecimal(multiplier),mCurrency)	12
5660	BigDecimal(number.doubleValue()),mTransaction.getCurrency())	7
32926	BigDecimal(numerator).divide(new	8
32217	BigDecimal(numerator,scale)	5
51714	BigDecimal(numeratorInt,scale)	8
12337	BigDecimal(parsedAmountString)	5
12581	BigDecimal(price.first)	13
36390	BigDecimal(price.first))	8
12475	BigDecimal(price.second)	13
36359	BigDecimal(price.second),commodity.getSmallestFractionDigits(),BigDecimal.ROUND_HALF_EVEN)	4
36353	BigDecimal(price.second),currency.getDefaultFractionDigits(),BigDecimal.ROUND_HALF_EVEN)	8
58588	BigDecimal(pricePair.first)	2
50797	BigDecimal(pricePair.second)	4
18714	BigDecimal(result))	5
57481	BigDecimal(source.readString()),Commodity.DEFAULT_COMMODITY)	3
55181	BigDecimal(stripCurrencyFormatting(amountString))	2
23807	BigDecimal(stripCurrencyFormatting(amountString)).divide(new	3
6511	BigDecimal(sum)	8
32134	BigDecimal(tokens[0])	4
32182	BigDecimal(tokens[1])	4
49264	BigDecimal(weight))	4
8442	BigDecimal.	13
51712	BigDecimal.ONE.scaleByPowerOfTen(scale).longValueExact()	3
24899	BigDecimal.ZERO	32
6168	BigDecimal.ZERO.setScale(DEFAULT_DECIMAL_PLACES,DEFAULT_ROUNDING_MODE)	6
30126	BigDecimal.valueOf(imbalance).setScale(2,BigDecimal.ROUND_HALF_UP)	15
32071	BigInteger	10
32260	BigInteger(amountString.substring(0,pos))	5
51723	BigInteger(numerator)	8
13795	Bigdecimal	4
6046	Bind	7
23547	Binds	21
58493	Birr"	6
5980	Birr</item>	107
43555	Bit	8
55594	Bitcoin	6
55662	Bitcoin\n	4
55695	Bitcoins	2
45490	Bitmap	9
45315	Bitmap.createBitmap(1,1,Bitmap.Config.ARGB_8888)	5
47367	BitmapDrawable)	4
47393	BitmapShader	4
47358	BitmapShader(tileBitmap,	4
47051	BitmapShader.	4
62538	Bitte	3
15791	Blgaro</item>	19
51500	Block	5
49284	Bluetooth	4
49080	Bluetooth"	4
16848	Boekingen	6
62815	Bok</string>	3
58213	Bolvar"	6
8755	Book	51
27064	Book")	4
27087	Book",new	4
30467	Book"/>	3
9610	Book("testRootAccountUID")	3
32631	Book()	15
52083	Book(){	6
30251	Book(BaseModel.generateUID())	3
52312	Book(String	8
32482	Book(rootAccountGUID)	8
63449	Book(rootAccountUID)	6
51501	Book:	6
10568	Book</string>	56
8851	BookDbHelper	17
63385	BookDbHelper(Context	6
9754	BookDbHelper(GnuCashApplication.getAppContext())	3
34798	BookDbHelper(getApplicationContext())	11
32541	BookDbHelper(mAcccountsActivity).getWritableDatabase())	8
63391	BookEntry	4
32911	BookEntry.COLUMN_ACTIVE	16
63964	BookEntry.COLUMN_ACTIVE,	2
63435	BookEntry.COLUMN_CREATED_AT	6
32502	BookEntry.COLUMN_DISPLAY_NAME	9
3875	BookEntry.COLUMN_DISPLAY_NAME,	8
63958	BookEntry.COLUMN_LAST_SYNC	2
63387	BookEntry.COLUMN_MODIFIED_AT	6
32526	BookEntry.COLUMN_ROOT_GUID	9
63954	BookEntry.COLUMN_ROOT_GUID,	4
32492	BookEntry.COLUMN_SOURCE_URI	11
63951	BookEntry.COLUMN_SOURCE_URI,	4
32905	BookEntry.COLUMN_TEMPLATE_GUID	11
63953	BookEntry.COLUMN_TEMPLATE_GUID,	4
32850	BookEntry.COLUMN_UID	9
63962	BookEntry.COLUMN_UID,	2
32796	BookEntry.TABLE_NAME	14
32632	BookEntry._ID	6
63704	BookListFragment	3
63737	BookListFragment())	3
7512	BookManagerFragment	4
63735	BookManagerFragment())	2
55239	BookUtils	3
55319	BookUtils.activateBook(bookUID)	2
55399	BookUtils.getBookBackupFileUri(BooksDbAdapter.getInstance().getActiveBookUID())	3
55246	BookUtils.getBookBackupFileUri(bookUID)	4
55377	BookUtils.loadBook(bookUID)	2
55269	BookUtils.loadBook(mImportedBookUID)	2
55252	BookUtils.loadBook(testBookUID)	2
63458	Books	4
10981	Books&#8230	33
32812	Books...")	5
32745	Books...</string>	3
10551	Books</string>	37
8035	BooksCursorAdapter	4
7475	BooksCursorAdapter(Context	4
63983	BooksCursorAdapter(getActivity(),R.layout.cardview_book,	2
8092	BooksCursorLoader	4
8310	BooksCursorLoader(Context	4
63980	BooksCursorLoader(getActivity())	2
8167	BooksDbAdapter	42
63411	BooksDbAdapter(SQLiteDatabase	8
9401	BooksDbAdapter(bookDbHelper.getWritableDatabase())	17
32874	BooksDbAdapter(db).generateDefaultBookName())	5
32724	BooksDbAdapter(new	8
3465	BooksDbAdapter.getInstance()	31
59942	BooksDbAdapter.getInstance().addRecord(book)	3
54592	BooksDbAdapter.getInstance().deleteBook(bookUID)	5
30335	BooksDbAdapter.getInstance().deleteRecord(bookUID)	15
32681	BooksDbAdapter.getInstance().fetchAllRecords(null,null,	8
55412	BooksDbAdapter.getInstance().getActiveBookDisplayName()	9
3428	BooksDbAdapter.getInstance().getActiveBookUID()	41
51033	BooksDbAdapter.getInstance().getActiveBookUID())	3
9830	BooksDbAdapter.getInstance().getActiveBookUID(),hideAccountBalance)	6
9822	BooksDbAdapter.getInstance().getActiveBookUID(),shouldDisplayBalance)	4
60299	BooksDbAdapter.getInstance().getAttribute(mBookUID,DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME)	3
60260	BooksDbAdapter.getInstance().getRecord(bookUID)	3
50641	BooksDbAdapter.getInstance().getRecord(id)	3
10121	BooksDbAdapter.getInstance().getUID(bookId)	6
32904	BooksDbAdapter.getInstance().getUID(id)	8
9349	BooksDbAdapter.getInstance().getUID(mBooksSpinner.getSelectedItemId())	3
11478	BooksDbAdapter.getInstance().setActive(bookUID)	8
13870	BooksDbAdapter.getInstance().setActive(testBookUID)	4
32818	BooksDbAdapter.getInstance().updateRecord(bookUID,DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME,displayName)	4
20080	BooksDbAdapter.getInstance().updateRecord(bookUID,contentValues)	6
19801	BooksDbAdapter.getInstance().updateRecord(mImportedBookUID,contentValues)	3
32731	BooksDbAdapterTest	2
3309	Boolean	93
48428	Boolean.TYPE)	5
52420	Boolean.parseBoolean(tokens[2])	8
52671	Boolean.toString(mDeleteTransactionsAfterExport)	14
59582	Boolean.toString(mExportAllTransactions)	5
54256	Boolean.toString(mIsPlaceholderAccount)))	4
21109	Boolean.toString(mIsPlaceholderAccount),GncXmlHelper.ATTR_VALUE_STRING))	9
62556	BootReceiver	2
12835	Borrar	26
15464	Bosnioherzegovino</item>	17
26524	Boston,MA	23
37187	Bottom	5
62046	BranchPage	3
62190	BranchPage(this,mContext.getString(R.string.wizard_title_default_currency))	3
15394	Brasile&#241	8
28697	Brasileiro</item>	10
15806	Brasileo</item>	9
9040	Broadcast	17
35866	BroadcastReceiver	9
51966	Bruk	7
15801	Bruneano</item>	13
29176	Brunei</item>	11
22341	Buch	7
25687	Buch</string>	3
4327	Buchfhrung	20
22113	Buchfhrung</string>	8
34860	Buchfhrung\n	5
25495	Buchs	3
5329	Buchung	65
4795	Buchung(en)	28
25712	Buchung</item>	3
15081	Buchung</string>	28
4912	Buchungen	88
59275	Buchungen.\nWas	4
25503	Buchungen</item>	6
4444	Buchungen</string>	52
25597	Buchungen\n	5
15223	Buchungsart:	10
15079	Buchungsart</string>	10
25582	Buchungsbetrge\n	7
22380	Buchungsliste	7
25510	Buchungsliste\n	5
22378	Buchungsteile	11
14475	Budge	4
14073	Budget	18
54351	Budget"	3
54167	Budget")	5
54280	Budget#getCompactedBudgetAmounts()	2
54481	Budget#getExpandedBudgetAmounts()	2
54509	Budget("")	2
54464	Budget("",new	2
54329	Budget("Random",new	2
54409	Budget("Test")	4
53619	Budget()	2
53388	Budget(){	2
53645	Budget(@NonNull	2
53019	Budget(name)	4
14639	BudgetAmount	18
53560	BudgetAmount(Money	2
54268	BudgetAmount(Money.getZeroInstance(),"second"))	2
54382	BudgetAmount(Money.getZeroInstance(),"test")	2
54376	BudgetAmount(Money.getZeroInstance(),"test"))	2
54461	BudgetAmount(Money.getZeroInstance(),"unknown-account"))	2
57507	BudgetAmount(Money.getZeroInstance(),account.getUID())	3
54451	BudgetAmount(Money.getZeroInstance(),mAccount.getUID()))	2
57454	BudgetAmount(Parcel	3
53562	BudgetAmount(String	2
54264	BudgetAmount(accountAmount,"account1")	2
53806	BudgetAmount(amount,accountUID)	5
52984	BudgetAmount(budgetUID,accountUID)	2
53417	BudgetAmount(getUID(),accountUID)	2
53625	BudgetAmount(getUID(),entry.getKey())	2
53612	BudgetAmount(mBudget.getUID(),mBudgetAmountAccountUID)	2
54463	BudgetAmount(new	2
57521	BudgetAmount(source)	3
53894	BudgetAmountAdapter	2
53958	BudgetAmountAdapter())	2
53949	BudgetAmountAdapter(){	2
57407	BudgetAmountEditor</p>	3
9898	BudgetAmountEditorFragment	6
9394	BudgetAmountEditorFragment()	5
57536	BudgetAmountEditorFragment.newInstance(args)	3
53175	BudgetAmountEntry	2
14651	BudgetAmountEntry.COLUMN_ACCOUNT_UID	4
14462	BudgetAmountEntry.COLUMN_AMOUNT_DENOM	4
14061	BudgetAmountEntry.COLUMN_AMOUNT_NUM	4
14125	BudgetAmountEntry.COLUMN_BUDGET_UID	4
53089	BudgetAmountEntry.COLUMN_BUDGET_UID)	2
52967	BudgetAmountEntry.COLUMN_CREATED_AT	2
53246	BudgetAmountEntry.COLUMN_MODIFIED_AT	2
14540	BudgetAmountEntry.COLUMN_PERIOD_NUM	4
14573	BudgetAmountEntry.COLUMN_UID	4
53215	BudgetAmountEntry.INDEX_UID	2
14339	BudgetAmountEntry.TABLE_NAME	4
53149	BudgetAmountEntry._ID	2
9307	BudgetAmountViewHolder	8
10047	BudgetAmountViewHolder(View	9
53799	BudgetAmountViewHolder(budgetAmountView)	5
53935	BudgetAmountViewHolder(view)	2
8806	BudgetAmountViewHolder{	7
57417	BudgetAmount[]	3
57436	BudgetAmount[size]	3
53418	BudgetAmounts	5
14472	BudgetAmountsDbAdapter	10
14373	BudgetAmountsDbAdapter(SQLiteDatabase	4
14403	BudgetAmountsDbAdapter(db)	7
32865	BudgetAmountsDbAdapter(db),recurrenceDbAdapter)	6
53028	BudgetAmountsDbAdapter(mDb)	6
63478	BudgetAmountsDbAdapter(mainDb)	4
32899	BudgetAmountsDbAdapter(mainDb),recurrenceDbAdapter)	3
54374	BudgetAmountsDbAdapter.getInstance()	2
8735	BudgetDetailFragment	4
54102	BudgetDetailFragment()	2
53133	BudgetEntry	2
53146	BudgetEntry.COLUMN_CREATED_AT	2
14320	BudgetEntry.COLUMN_DESCRIPTION	4
14147	BudgetEntry.COLUMN_DESCRIPTION,	2
53156	BudgetEntry.COLUMN_MODIFIED_AT	2
14283	BudgetEntry.COLUMN_NAME	4
14643	BudgetEntry.COLUMN_NAME,	2
14041	BudgetEntry.COLUMN_NUM_PERIODS	4
14503	BudgetEntry.COLUMN_RECURRENCE_UID	4
14152	BudgetEntry.COLUMN_RECURRENCE_UID,	2
14640	BudgetEntry.COLUMN_UID	4
53023	BudgetEntry.INDEX_UID	2
14616	BudgetEntry.TABLE_NAME	4
53242	BudgetEntry._ID	2
9069	BudgetFormFragment	8
53847	BudgetFormFragment()	2
9289	BudgetFormFragment.this,	4
54041	BudgetListFragment	2
53845	BudgetListFragment())	2
53880	BudgetRecyclerAdapter	2
53807	BudgetRecyclerAdapter(Cursor	2
53967	BudgetRecyclerAdapter(null)	2
54499	BudgetTest	2
9931	BudgetViewHolder	4
9036	BudgetViewHolder(View	4
53797	BudgetViewHolder(v)	2
53588	Budgeting	2
53520	Budgets	6
54429	Budgets"/>	2
54099	BudgetsActivity	2
53913	BudgetsCursorLoader	2
54169	BudgetsCursorLoader(Context	2
53977	BudgetsCursorLoader(getActivity())	2
8880	BudgetsDbAdapter	17
14174	BudgetsDbAdapter(SQLiteDatabase	7
53277	BudgetsDbAdapter(db)	8
32638	BudgetsDbAdapter(db,new	6
53341	BudgetsDbAdapter(mDb)	6
63396	BudgetsDbAdapter(mainDb,mBudgetAmountsDbAdapter,mRecurrenceDbAdapter)	4
32674	BudgetsDbAdapter(mainDb,new	3
32761	BudgetsDbAdapter.getInstance()	17
57493	BudgetsDbAdapter.getInstance().addRecord(budget)	3
53904	BudgetsDbAdapter.getInstance().deleteRecord(budgetId)	2
54040	BudgetsDbAdapter.getInstance().getAccountBudgets(accountUID)	2
54191	BudgetsDbAdapterTest	2
29602	Budou	5
30549	BufferedInputStream	22
30593	BufferedInputStream(accountsInputStream)	6
61370	BufferedInputStream(commoditiesInputStream)	6
32702	BufferedInputStream(gncXmlInputStream)	10
8679	BufferedInputStream(inputStream))	3
55069	BufferedInputStream(new	3
50943	BufferedInputStream(pb)	7
21944	BufferedOutputStream	18
55363	BufferedOutputStream(context.getContentResolver().openOutputStream(Uri.parse(backupFile)))){	3
21579	BufferedOutputStream(fileOutputStream)	18
55290	BufferedOutputStream(outputStream)	3
2858	BufferedReader	22
2991	BufferedReader(new	20
35870	BufferedReader(stringReader)	2
7277	BufferedWriter	55
21899	BufferedWriter(fileWriter)	6
6798	BufferedWriter(new	51
25700	Bugfixes	5
38285	Build.VERSION.SDK_INT	30
44036	Build.VERSION_CODES.FROYO	4
39616	Build.VERSION_CODES.FROYO)	13
46105	Build.VERSION_CODES.GINGERBREAD	5
55510	Build.VERSION_CODES.GINGERBREAD_MR1)	5
34301	Build.VERSION_CODES.HONEYCOMB	25
30651	Build.VERSION_CODES.HONEYCOMB)	39
511	Build.VERSION_CODES.HONEYCOMB){	35
39947	Build.VERSION_CODES.HONEYCOMB_MR2)	4
45938	Build.VERSION_CODES.ICE_CREAM_SANDWICH	5
34394	Build.VERSION_CODES.ICE_CREAM_SANDWICH)	13
27083	Build.VERSION_CODES.KITKAT){	11
51052	Build.VERSION_CODES.LOLLIPOP	6
62282	Build.VERSION_CODES.LOLLIPOP)	3
54680	Build.VERSION_CODES.LOLLIPOP){	6
21261	Build.VERSION_CODES.M)	13
29668	Build</string>	5
606	BuildConfig.APPLICATION_ID	27
55147	BuildConfig.BUILD_TIME)	8
30889	BuildConfig.class)	4
8767	BuildConfig.class,	3
61752	BuildConfig.class,packageName	6
8006	BuildConfig.class,sdk	29
50658	BuildConfig.class,shadows	6
25111	BuildTime	6
40636	Builder	5
41140	Builder#after(Animator)	4
41004	Builder#before(Animator)	4
41002	Builder(Animator	4
40366	Builder(anim)	4
40907	Builder.	4
40946	Builders	4
6862	Builds	70
25409	Built	3
25453	Built:	10
15862	Buitron	8
59650	BulkMoveDialogFragment	6
33227	BulkMoveDialogFragment()	15
59639	BulkMoveDialogFragment.newInstance(ids,mAccountUID)	3
777	Bundle	229
19918	Bundle()	85
10327	Bureau</string>	7
8617	Burger")	3
8203	Burger</trn:description>	3
15298	Burund&#233	8
28974	Burundi</item>	11
15649	Burunds</item>	9
4972	But	75
32085	ButterKnife	3
23272	ButterKnife#bind(Activity)	3
32448	ButterKnife#bind(View)	3
625	ButterKnife.bind(this)	31
53950	ButterKnife.bind(this,itemView)	11
31701	ButterKnife.bind(this,splitView)	12
52862	ButterKnife.bind(this,v)	13
8026	ButterKnife.bind(this,view)	50
4282	Button	111
7159	By	63
24626	By"	6
26204	By:	18
2901	By</string>	98
34937	Byday	5
2617	ByteArrayInputStream(accountFile.getBytes())	5
34471	ByteArrayOutputStream()	15
36276	C	7
36419	C."	7
18740	CAB	36
36093	CAD	6
14344	CARD	6
5932	CARD</item>	80
15639	CARGO</string>	17
63898	CARGO</string>+	1
20608	CASCADE	35
24033	CASCADE"	16
59149	CASCADE",re-assign	3
56493	CASCADE",the	5
25456	CASCADE,"	21
19106	CASE	55
18350	CASH	24
13272	CASH(TransactionType.DEBIT),BANK(TransactionType.DEBIT),CREDIT,ASSET(TransactionType.DEBIT),LIABILITY,	7
6462	CASH(TransactionType.DEBIT),BANK,CREDIT,ASSET(TransactionType.DEBIT),LIABILITY,INCOME,	5
6845	CASH,BANK,CREDIT,ASSET(true),LIABILITY,INCOME,EXPENSE(true),	6
19703	CASH:	24
60319	CASH_IN_WALLET_ASSET_ACCOUNT_UID	3
47775	CATEGORY_*	4
48172	CATEGORY_ALTERNATIVE	4
48135	CATEGORY_CONTAINER	4
47722	CATEGORY_MASK	4
44191	CATEGORY_MASK)	4
52133	CATEGORY_PREFIX	3
48171	CATEGORY_SECONDARY	4
43856	CATEGORY_SHIFT	8
44117	CATEGORY_SHIFT)	4
47837	CATEGORY_SYSTEM	4
51016	CENTER_TEXT_SIZE	7
15592	CFA	24
15693	CFP</item>	22
42676	CHECKABLE	9
42999	CHECKABLE)	8
42866	CHECKED	9
42785	CHECKED)	8
31713	CHECKING,SAVINGS,MONEYMRKT,CREDITLINE	7
18272	CHECKING,now	11
36124	CHF	6
33089	CHILD_ACCOUNT_NAME	4
33140	CHILD_ACCOUNT_UID	3
36625	CI	4
60452	CLAIM,DAMAGES	3
49886	CLEAR_TOP	5
58057	CLF	6
58067	CLP	6
58238	CN	6
15858	COBRAR</item>	13
1173	COLORS	43
342	COLORS.length]	19
6963	COLORS.length])	26
60353	COLORS[(dataSet.getEntryCount()	7
1797	COLORS[accountToColorMap.size()	19
30005	COLORS[accountToColorMap.size()]	4
1205	COLOR_HEX_REGEX	10
27615	COLOR_KEY	9
27497	COLOR_PICKER_DIALOG_TAG	6
201	COLUMN	72
55072	COLUMN_ACCOUNT_CURRENCY_CODE	3
18049	COLUMN_ACCOUNT_UID	19
31585	COLUMN_ACTION_UID	4
63404	COLUMN_ACTIVE	6
53275	COLUMN_ADVANCE_CREATION	2
53282	COLUMN_ADVANCE_NOTIFY	2
26231	COLUMN_AMOUNT	16
53128	COLUMN_AMOUNT_DENOM	2
53062	COLUMN_AMOUNT_NUM	2
53143	COLUMN_AUTO_CREATE	2
53265	COLUMN_AUTO_NOTIFY	2
53292	COLUMN_BUDGET_UID	2
53152	COLUMN_BYDAY	2
25401	COLUMN_COLOR_CODE	16
56656	COLUMN_COMMODITY_UID	10
59443	COLUMN_CREATED_AT	3
20150	COLUMN_CURRENCY	15
18487	COLUMN_CURRENCY_CODE	20
61312	COLUMN_CURRENCY_UID	3
60824	COLUMN_CUSIP	3
61374	COLUMN_DATE	3
27362	COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID	15
25007	COLUMN_DESCRIPTION	18
63442	COLUMN_DISPLAY_NAME	4
18450	COLUMN_DOUBLE_ENTRY_ACCOUNT_UID	8
19778	COLUMN_ENABLED	12
31499	COLUMN_END_TIME	9
59695	COLUMN_EVENT_UID	4
20102	COLUMN_EXECUTION_COUNT	12
18530	COLUMN_EXPORTED	36
27699	COLUMN_FAVORITE	9
36204	COLUMN_FRACTION	7
61291	COLUMN_FULLNAME	3
35422	COLUMN_FULL_NAME	6
59113	COLUMN_HIDDEN	1
31578	COLUMN_LAST_RUN	9
63966	COLUMN_LAST_SYNC	2
61525	COLUMN_LOCAL_SYMBOL	3
35579	COLUMN_MEMO	7
56509	COLUMN_MEMO,empty	5
60779	COLUMN_MNEMONIC	6
59415	COLUMN_MODIFIED_AT	7
53223	COLUMN_MULTIPLIER	2
25248	COLUMN_NAME	18
61392	COLUMN_NAMESPACE	3
54185	COLUMN_NOTES	5
19926	COLUMN_NUM_OCCURRENCES	10
53137	COLUMN_NUM_PERIODS	2
25216	COLUMN_PARENT_ACCOUNT_UID	17
19978	COLUMN_PERIOD	13
53286	COLUMN_PERIOD_END	2
53009	COLUMN_PERIOD_NUM	2
53021	COLUMN_PERIOD_START	2
53304	COLUMN_PERIOD_TYPE	2
25349	COLUMN_PLACEHOLDER	18
61727	COLUMN_QUANTITY_DENOM	3
61757	COLUMN_QUANTITY_NUM	3
60737	COLUMN_QUOTE_FLAG	3
53347	COLUMN_RECONCILE_DATE	2
53189	COLUMN_RECONCILE_STATE	2
18317	COLUMN_RECURRENCE_PERIOD	15
53262	COLUMN_RECURRENCE_UID	2
63445	COLUMN_ROOT_GUID	6
35302	COLUMN_ROW_ID	3
19933	COLUMN_SCHEDX_ACTION_UID	10
36235	COLUMN_SMALLEST_FRACTION	4
60791	COLUMN_SOURCE	3
63485	COLUMN_SOURCE_URI	4
51320	COLUMN_SPLIT_ACCOUNT_UID	3
31527	COLUMN_START_TIME	8
19527	COLUMN_TAG	14
19495	COLUMN_TEMPLATE	17
53226	COLUMN_TEMPLATE_ACCT_UID	2
63378	COLUMN_TEMPLATE_GUID	6
19762	COLUMN_TIMESTAMP	30
19675	COLUMN_TOTAL_FREQUENCY	5
35555	COLUMN_TRANSACTION_UID	9
26559	COLUMN_TYPE	27
26543	COLUMN_UID	9
60839	COLUMN_VALUE_DENOM	6
61058	COLUMN_VALUE_NUM	6
53052	COMMODITIES_TABLE_CREATE	5
13149	COMMODITY	7
11003	COMMUNS</item>	17
16190	COMUNE</item>	17
146	CONDITIONS	349
33789	CONFLICT	5
60622	CONNECTION	3
38353	CONSTRUCTOR_ARGS	4
44055	CONTAINER	4
39799	CONTEXT_DISPLAY_NORMAL	4
39669	CONTEXT_DISPLAY_SPLIT	4
40067	CONTEXT_DISPLAY_SPLIT)	4
60649	CONTRACT,TORT	3
60603	COPYRIGHT	3
63543	COUNT	3
5792	COUNT(*)	47
5818	CPU	5
15496	CR&#201	24
14700	CRDIT</item>	3
15511	CRDITO</item>	16
43092	CREATOR	23
29056	CREDIT	11
33426	CREDIT")	10
33948	CREDIT.opposite	5
7155	CREDIT/DEBIT	15
35616	CREDIT/DEBIT<br/>	2
57608	CREDIT/DEBITs	5
18983	CREDIT/DEBITs\n	18
27007	CREDIT:	21
16062	CREDIT</item>	10
31623	CREDITLINE:	4
16405	CREDITO</item>	15
29345	CREDITORE</item>	4
6991	CREDITS/DEBITS	8
34635	CREDIT_CARD:	6
33408	CSV	14
63748	CSV.	1
62293	CURRENCIES	3
59025	CURRENCIES_TABLE_CREATE	2
59053	CURRENCIES_TABLE_NAME	3
13159	CURRENCY	20
26737	CURRENCY:	16
13145	CURRENCY_CODE	27
62205	CURRENCY_CODE_DATA_KEY	3
19438	CURRENT_TIMESTAMP	40
25356	CURRENT_TIMESTAMP"	7
53258	CURRENT_TIMESTAMP)	2
19455	CURRENT_TIMESTAMP,"	49
36045	CUSIP	7
51034	CUSTOM_SHADOW_TARGETS	4
50810	CUSTOM_SHADOW_TARGETS.contains(classInfo.getName())	4
17440	CZAS</string>	11
62355	C[lear]	4
28733	Cabo	11
13437	Cache	22
49752	Cached	5
62774	Cadangan&#8230	3
22650	Cadangan</string>	7
15529	Caim&#225	8
15342	Caimn</item>	9
62457	Caimo</item>	6
25685	Caj&#243	6
26162	Calcolatrice	5
2826	Calculadora	18
29972	Calculates	20
3169	Calculator	91
10017	CalculatorEditText	26
31753	CalculatorEditText"	14
34561	CalculatorEditText(Context	9
60223	CalculatorEditText)){	3
13895	CalculatorEditTextTest	5
13108	CalculatorEditTextTest()	5
34509	CalculatorKeyboard	33
56585	CalculatorKeyboard(Activity	9
52906	CalculatorKeyboard(Context	8
56530	CalculatorKeyboard(getActivity(),R.id.calculator_keyboard,R.xml.calculator_keyboard)	10
56616	CalculatorKeyboard(getActivity(),mKeyboardView,R.xml.calculator_keyboard)	7
35050	CalculatorKeyboard(mContext,keyboardView,mCalculatorKeysLayout))	7
56477	CalculatorKeyboard.	9
57340	CaledarPicker	3
472	Calendar	83
35139	Calendar.	4
18684	Calendar.FRIDAY	5
35196	Calendar.FRIDAY:	3
19178	Calendar.MONDAY	5
35155	Calendar.MONDAY:	3
19070	Calendar.SATURDAY	5
35254	Calendar.SATURDAY:	3
18830	Calendar.SUNDAY	7
35090	Calendar.SUNDAY:	3
18600	Calendar.THURSDAY	5
35108	Calendar.THURSDAY:	3
18899	Calendar.TUESDAY	5
34910	Calendar.TUESDAY:	3
18620	Calendar.WEDNESDAY	5
35095	Calendar.WEDNESDAY:	3
702	Calendar.getInstance()	87
55171	Calendar.getInstance().getTimeZone()	5
24002	CalendarDatePickerDialog	11
53830	CalendarDatePickerDialog.OnDateSetListener,	5
23741	CalendarDatePickerDialog.OnDateSetListener,RadialTimePickerDialog.OnTimeSetListener,	16
54031	CalendarDatePickerDialog.newInstance(	8
23880	CalendarDatePickerDialog.newInstance(TransactionFormFragment.this,	6
9391	CalendarDatePickerDialogFragment	6
9119	CalendarDatePickerDialogFragment()	2
54001	CalendarDatePickerDialogFragment.OnDateSetListener,	5
53734	CalendarDatePickerDialogFragment.OnDateSetListener,RadialTimePickerDialogFragment.OnTimeSetListener,	2
9583	CalendarDatePickerDialogFragment.newInstance(	6
9111	CalendarPickerView	5
13504	Call	40
6806	Callback	76
39775	Callback")	4
47824	Callback#onActionItemClicked(ActionMode,MenuItem)	4
48018	Callback#onCreateActionMode(ActionMode,Menu)	4
48179	Callback#onDestroyActionMode(ActionMode)	4
48052	Callback#onPrepareActionMode(ActionMode,Menu)	4
29288	Callback()	12
18145	Callbacks	34
48990	Callbacks()	4
24787	Called	62
19276	Caller	11
46687	Calling	13
35489	Calls	4
27777	Can	30
29030	Canadense</item>	10
15549	Canadiense</item>	13
32670	Cancel	15
34670	Cancels	15
14140	Cannot	21
44917	Canvas	5
45263	Canvas(bitmap)	5
29711	Capital	16
42786	CapitalizingButton	8
46160	CapitalizingButton(Context	4
46388	CapitalizingTextView	9
46430	CapitalizingTextView(Context	5
47899	CapitalizingTextView(getContext(),null,	4
10430	Capitaux	12
30365	Captures	9
62429	Carabas	6
3383	Card	104
21362	Card"	3
36863	Card")	2
55579	Card"),SHARING("External	2
21540	Card"/>	5
11008	Card</item>	109
10263	Card</string>	121
4340	Caribbean	110
15347	Caribe	21
48349	Carriage	4
48789	Case	4
8681	Cash	10
32263	CashFlowBarChartFragment	8
32403	CashFlowBarChartFragment()	6
60197	CashFlowFragment	5
63701	CashFlowLineChartFragment	3
32113	CashFlowLineChartFragment()	8
28954	Catar</item>	10
47655	Category	4
33266	CategorySeries	8
33023	CategorySeries("")	6
28948	Cayman</item>	10
58456	Cedi"	6
4176	Cedi</item>	104
43875	Center	4
45496	Centering	4
15665	Central</item>	13
58252	Centrale	6
47375	Certain	4
23577	Cette	5
2973	Change	22
60627	ChangeObserver	7
60424	ChangeObserver()	3
44271	Changes	9
34893	Changing	3
3802	CharSequence	89
49910	CharSequence)	5
60652	CharSequence.	3
46515	CharSequence[]	11
57098	CharSequence[currencyEntries.size()]	6
57199	CharSequence[currencyEntryValues.size()]	6
57030	CharSequence[mCurrencyEntries.size()]	6
57122	CharSequence[mCurrencyEntryValues.size()]	6
53557	Character	2
44559	Character.toLowerCase(alphaChar)	4
52958	Character.toString(DecimalFormatSymbols.getInstance().getDecimalSeparator())	10
42305	Character.toUpperCase(propertyName.charAt(0))	4
33645	Chart"	8
32226	Chart",BarChartFragment.class)	7
32177	Chart",PieChartFragment.class)	7
50821	Chart"/>	5
5678	Chart</string>	107
34283	ChartDatePickerFragment	5
34269	ChartDatePickerFragment()	6
34341	ChartDatePickerFragment(OnDateSetListener	3
34334	ChartDatePickerFragment(PieChartActivity.this,	3
34251	ChartDatePickerFragment.class.getSimpleName()	5
1422	ChartDatePickerFragment.newInstance(	6
61864	ChartDatePickerFragment.newInstance(PieChartActivity.this,	3
789	ChartDatePickerFragment.newInstance(PieChartFragment.this,	7
6945	ChartFactory.getPieChartView(this,mSeries,mRenderer)	5
34205	ChartFactory.getPieChartView(this,series,renderer)	3
4976	ChartPreferenceFragment	4
33693	ChartReportActivity	5
60139	Charts	3
15851	Checa</item>	20
4196	Check	192
3800	CheckBox	76
32569	CheckBoxPreference	16
33127	Checkable	3
32952	Checkable)	3
32953	Checkable.	3
33016	CheckableLinearLayout	3
33180	CheckableLinearLayout(Context	6
2331	Checkbox	33
37024	Checkbox,and/or	4
24797	Checked	3
3375	Checks	75
58386	Chemins	6
44111	Child	11
50066	ChildViewCache	5
49751	ChildViewCache(View	5
50294	ChildViewCache(v))	5
15852	Chileno</item>	21
49459	Chooses	4
15037	Christian	16
34845	Chrome	7
17993	Chung	6
28729	Cingapura</item>	10
11231	Circulaire</string>	9
21020	Circular</string>	13
11912	Citation</string>	3
23570	Class	12
35101	Class.forName("android.os.ServiceManager")	4
35130	Class.forName("android.view.IWindowManager")	4
35223	Class.forName("android.view.IWindowManager$Stub")	4
57183	Class.forName(pref.getFragment())	3
38641	Class<?	4
35074	Class<?>	13
38183	Class<?>[]	9
62148	ClassCastException("Activity	3
19052	ClassCastException(activity.toString()	16
51890	ClassHandler	6
41456	Class[1]	4
38550	Class[]	13
39167	Clear	29
39864	Clears	8
12918	Clic	24
11353	Click	119
23938	Clickez	8
35053	Clicking	12
9157	Client	14
37127	Clients	10
46793	ClipDrawable	4
46931	ClipDrawable(shapeDrawable,Gravity.LEFT,	4
47275	ClipDrawable.HORIZONTAL)	4
20269	Clique	29
11558	Cliquez	14
26382	Clone	6
31750	CloneNotSupportedException	9
39535	Cloneable	12
33929	Clones	10
35387	Close	4
23778	Closes	17
47777	Closing	4
11251	Cochez	37
23628	Code	24
59935	Codes")	3
48420	Collapse	4
45931	Collapse.	4
46405	CollapsibleActionView	13
44565	CollapsibleActionView)	9
46415	CollapsibleActionViewWrapper	5
46358	CollapsibleActionViewWrapper(View	5
44779	CollapsibleActionViewWrapper(view)	5
44493	CollapsibleActionViewWrapper(view))	5
44544	CollapsibleActionViewWrapper)	5
12443	Collection	20
53158	Collection<Acco	2
34898	Collections.emptyList()	4
54753	Collections.reverse(backupFilesList)	7
780	Collections.singletonList(account.getUID()),start,end).asDouble()	27
49571	Collections.sort(activities)	4
25375	Collections.sort(timestamps)	15
30225	Collections.sort(xTimestamps)	4
50833	Collections.unmodifiableList(Arrays.asList(	4
35144	Collections.unmodifiableList(mByDays)	3
48998	Collections.unmodifiableList(mHistoricalRecords))	4
25265	Collects	35
15536	Colombiano</item>	21
58330	Colon"	9
6314	Colon</item>	111
546	Color	128
60100	Color.GRAY	5
251	Color.HSVToColor(hsv)	9
920	Color.LTGRAY	34
173	Color.LT_GRAY	4
34296	Color.TRANSPARENT	9
55093	Color.alpha(	4
55110	Color.argb(	4
55177	Color.blue(	4
553	Color.colorToHSV(color,hsv)	9
27893	Color.colorToHSV(lhs,hsv)	3
27892	Color.colorToHSV(rhs,hsv2)	3
55045	Color.green(	4
52840	Color.parseColor("#0065FF"),Color.parseColor("#8F038A"),	7
52885	Color.parseColor("#008000"),Color.parseColor("#FF0000"),Color.parseColor("#BE6B00"),	4
30065	Color.parseColor("#1469EB"),Color.parseColor("#B304AD"),	8
2999	Color.parseColor("#17d6ed"),Color.parseColor("#e4a9a2"),Color.parseColor("#8fe6cd"),	20
141	Color.parseColor("#17ee4e"),Color.parseColor("#cc1f09"),Color.parseColor("#3940f7"),	27
30009	Color.parseColor("#68F1AF"),Color.parseColor("#CC1f09"),Color.parseColor("#EE8600"),	6
54915	Color.parseColor("#68F1AF"),Color.parseColor("#cc1f09"),Color.parseColor("#EE8600"),	7
3981	Color.parseColor("#8b48fb"),Color.parseColor("#343a36"),Color.parseColor("#6decb1"),	16
2320	Color.parseColor("#a6dcfd"),Color.parseColor("#5c3378"),Color.parseColor("#a6dcfd"),	16
3853	Color.parseColor("#ba037c"),Color.parseColor("#708809"),Color.parseColor("#32072c"),	22
3274	Color.parseColor("#f0f8ff"),Color.parseColor("#5c3378"),Color.parseColor("#a6dcfd"),	9
2272	Color.parseColor("#f9cd04"),Color.parseColor("#5f33a8"),Color.parseColor("#e005b6"),	20
892	Color.parseColor("#fddef8"),Color.parseColor("#fa0e6e"),Color.parseColor("#d9e7b5")	33
2020	Color.parseColor(account.getColorHexCode())	27
926	Color.parseColor(accountColor)	22
6933	Color.parseColor(colorCode)	22
2104	Color.parseColor(mAccount.getColorHexCode())	4
6690	Color.parseColor(parentColor)	6
55140	Color.red(	4
25052	Color.rgb(104,241,175),Color.RED	7
6384	Color</string>	101
45351	ColorDrawable	5
12	ColorDrawable(colorCode))	5
197	ColorDrawable(iColor))	8
62060	ColorDrawable(res.getColor(R.color.theme_accent)))	3
62182	ColorDrawable(res.getColor(android.R.color.transparent)))	3
61850	ColorDrawable(resolvedColor))	3
75	ColorDrawable(themeColor))	3
787	ColorPickerDialog	11
27424	ColorPickerDialog()	3
27115	ColorPickerDialog.SIZE_LARGE)	3
1531	ColorPickerDialog.newInstance(	7
27128	ColorPickerDialogFragment.	3
27524	ColorPickerPalette	4
27443	ColorPickerPalette(Context	3
27370	ColorPickerSwatch	3
27251	ColorPickerSwatch(Context	3
27581	ColorPickerSwatch(getContext(),color,	3
9994	ColorPickerSwatch.OnColorSelectedListener	11
9654	ColorPickerSwatch.OnColorSelectedListener()	11
9219	ColorSquare	11
27467	ColorSquare(Context	3
27758	ColorStateDrawable	3
27825	ColorStateDrawable(Drawable[]	3
27536	ColorStateDrawable(colorDrawable,color))	3
8047	ColorStateList	25
7843	ColorStateList(new	23
27803	Column	6
35516	Columns	6
51347	Come	3
46648	Command	8
36408	Commodities	12
61928	CommoditiesCursorAdapter	10
61893	CommoditiesCursorAdapter(	9
61923	CommoditiesCursorAdapter(Context	6
62226	CommoditiesCursorAdapter(getActivity(),R.layout.list_item_commodity)	3
7434	CommoditiesDbAdapter	79
14513	CommoditiesDbAdapter(SQLiteDatabase	15
10717	CommoditiesDbAdapter(db)	32
13564	CommoditiesDbAdapter(db).getCommodity("USD")	8
13636	CommoditiesDbAdapter(mDb)	29
32649	CommoditiesDbAdapter(mDb).getCommodity("USD"))	3
13316	CommoditiesDbAdapter(mDb).getCommodity(CURRENCY_CODE)	5
32794	CommoditiesDbAdapter(mDb).getCommodity(DUMMY_ACCOUNT_CURRENCY_CODE))	13
32697	CommoditiesDbAdapter(mDb).getCommodity(account.getCurrency().getCurrencyCode())	6
13971	CommoditiesDbAdapter(mDb).getCommodity(currencyCode))	7
32691	CommoditiesDbAdapter(mainDb)	7
7739	CommoditiesDbAdapter.getInstance()	59
61924	CommoditiesDbAdapter.getInstance().fetchAllRecords()	9
57181	CommoditiesDbAdapter.getInstance().fetchAllRecords(DatabaseSchema.CommodityEntry.COLUMN_MNEMONIC	9
36098	CommoditiesDbAdapter.getInstance().getCommodity("AUD")	6
63043	CommoditiesDbAdapter.getInstance().getCommodity("BGN")	4
36078	CommoditiesDbAdapter.getInstance().getCommodity("CAD")	6
36349	CommoditiesDbAdapter.getInstance().getCommodity("CHF")	6
36330	CommoditiesDbAdapter.getInstance().getCommodity("EUR")	10
36079	CommoditiesDbAdapter.getInstance().getCommodity("GBP")	6
36082	CommoditiesDbAdapter.getInstance().getCommodity("JPY")	6
13421	CommoditiesDbAdapter.getInstance().getCommodity("USD")	13
13301	CommoditiesDbAdapter.getInstance().getCommodity(CURRENCY_CODE)	4
14406	CommoditiesDbAdapter.getInstance().getCommodity(account.getCurrency().getCurrencyCode())	9
36307	CommoditiesDbAdapter.getInstance().getCommodity(acctCurrencyCode)	6
36541	CommoditiesDbAdapter.getInstance().getCommodity(currency.getCurrencyCode())	7
13054	CommoditiesDbAdapter.getInstance().getCommodity(currencyCode)	16
57207	CommoditiesDbAdapter.getInstance().getCommodity(defaultCurrency).getFullname()	6
58538	CommoditiesDbAdapter.getInstance().getCommodity(expectedCode)	8
36146	CommoditiesDbAdapter.getInstance().getCommodity(getCurrency().getCurrencyCode())	6
64298	CommoditiesDbAdapter.getInstance().getCommodity(mAccountsDbAdapter.getCurrencyCode(mAccountUID))	3
36246	CommoditiesDbAdapter.getInstance().getCommodity(mCurrency.getCurrencyCode())	9
57121	CommoditiesDbAdapter.getInstance().getCommodity(newValue.toString()).getFullname()	7
50934	CommoditiesDbAdapter.getInstance().getCommodity(targetCurrencyCode)	2
14128	CommoditiesDbAdapter.getInstance().getCommodity(transaction.getCurrencyCode())	14
54296	CommoditiesDbAdapter.getInstance().getCommodityUID("EUR")	2
54507	CommoditiesDbAdapter.getInstance().getCommodityUID("USD")	2
36681	CommoditiesDbAdapter.getInstance().getCommodityUID(account.getCurrency().getCurrencyCode())	7
51985	CommoditiesDbAdapter.getInstance().getCommodityUID(transaction.getCurrency().getCurrencyCode())	4
36525	CommoditiesDbAdapter.getInstance().getRecord(commodityId)	7
61269	CommoditiesXmlHandler	9
60858	CommoditiesXmlHandler(SQLiteDatabase	6
61262	CommoditiesXmlHandler(db)	6
941	Commodity	115
59414	Commodity#DEFAULT_COMMODITY	3
36178	Commodity("","AUD",100)	6
36102	Commodity("","CAD",100)	6
36077	Commodity("","CHF",100)	6
36443	Commodity("","EUR",100)	6
36189	Commodity("","GBP",100)	6
36193	Commodity("","JPY",1)	6
36008	Commodity("","USD",100)	6
36303	Commodity("Euro","EUR",100)	4
51716	Commodity("Test","USD",100)	3
36167	Commodity("Test","USD",4)	7
13136	Commodity("US	15
36365	Commodity(String	9
60917	Commodity(fullname,isoCode,Integer.parseInt(smallestFraction))	6
36090	Commodity(fullname,mnemonic,fraction)	7
32900	Commodity.AUD	7
32785	Commodity.CAD	7
36675	Commodity.CHF	4
13801	Commodity.DEFAULT_COMMODITY	20
60288	Commodity.DEFAULT_COMMODITY)	3
36514	Commodity.EUR	4
36637	Commodity.GBP	4
32917	Commodity.JPY	7
53243	Commodity.Namespace.ISO4217.name()	12
36495	Commodity.USD	4
59456	Commodity.getInstance("EUR")	4
36412	Commodity.getInstance("USD")	7
12455	Commodity.getInstance((mTransactionsDbAdapter.getAccountCurrencyCode(mAccountUID)))	3
33174	Commodity.getInstance(ACCOUNTS_CURRENCY_CODE)	4
36526	Commodity.getInstance(CURRENCY_CODE)	7
33178	Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE)	16
36471	Commodity.getInstance(Money.DEFAULT_CURRENCY_CODE)	7
12691	Commodity.getInstance(code)	7
12648	Commodity.getInstance(currencyCode)	21
26082	Commodity.getInstance(cursor.getString(cursor.getColumnIndexOrThrow("acct1_currency")))	3
36469	Commodity.getInstance(mCurrency.getCurrencyCode())	6
7880	Commodity.getInstance(mTargetCurrency.getCurrencyCode())	3
8360	Commodity.getInstance(mTargetCurrencyCode)	4
61218	CommodityEntry	3
36116	CommodityEntry.COLUMN_CREATED_AT	13
14333	CommodityEntry.COLUMN_CUSIP	17
14083	CommodityEntry.COLUMN_CUSIP,	2
36361	CommodityEntry.COLUMN_FRACTION	18
14508	CommodityEntry.COLUMN_FULLNAME	16
14272	CommodityEntry.COLUMN_FULLNAME,	2
14495	CommodityEntry.COLUMN_LOCAL_SYMBOL	11
36482	CommodityEntry.COLUMN_LOCAL_SYMBOL+	11
14649	CommodityEntry.COLUMN_LOCAL_SYMBOL,	2
14393	CommodityEntry.COLUMN_MNEMONIC	30
14400	CommodityEntry.COLUMN_MNEMONIC,	2
36225	CommodityEntry.COLUMN_MODIFIED_AT	13
14426	CommodityEntry.COLUMN_NAMESPACE	15
14598	CommodityEntry.COLUMN_NAMESPACE,	2
14192	CommodityEntry.COLUMN_QUOTE_FLAG	19
14081	CommodityEntry.COLUMN_SMALLEST_FRACTION	6
14332	CommodityEntry.COLUMN_SMALLEST_FRACTION,	2
347	CommodityEntry.COLUMN_UID	35
53306	CommodityEntry.INDEX_UID	8
1242	CommodityEntry.TABLE_NAME	40
53245	CommodityEntry._ID	9
36447	CommodityTest	4
38262	Common	8
31626	CommonColumns	21
21177	CommonColumns.COLUMN_MODIFIED_AT	12
20531	CommonColumns.COLUMN_UID	9
58462	Communaut	6
10671	Community</string>	80
28825	Comores</item>	10
15905	Comorono</item>	17
62389	Comoros</item>	6
10450	Compact	23
12473	Compacta</string>	10
48393	Comparable.	4
49270	Comparable<ActivityResolveInfo>	4
26457	Comparable<Money>{	10
27751	Comparator<Integer>	3
42947	ComponentName	25
43256	ComponentName(	12
52388	ComponentName(context,TransactionAppWidgetProvider.class)	9
43671	CompoundButton	4
18882	CompoundButton.OnCheckedChangeListener()	29
11841	Compte</string>	14
51505	Comptes	6
21885	Compute	3
8189	Computes	35
24553	Condition	7
30847	Conditions	1
23193	Config	14
23267	Config("gnucash.uservoice.com")	14
9313	Configuration	21
44135	Configuration.KEYBOARD_NOKEYS	4
50331	Configuration.ORIENTATION_LANDSCAPE	5
31547	Configuration.ORIENTATION_LANDSCAPE)	5
56959	Configuration.updateAllWidgets(getActivity(),mAccountID)	2
56835	Configuration.updateAllWidgets(getActivity(),mOriginAccountId)	2
56972	Configuration.updateAllWidgets(getActivity().getApplicationContext(),accountID)	2
56968	Configuration.updateAllWidgets(getActivity().getApplicationContext(),id)	2
56876	Configuration.updateWidget(context,appWidgetId,accountId)	2
8758	Configure	3
30662	Confirmation	15
15695	Congol&#233	11
58115	Congolais"	6
29158	Congoles</item>	10
15681	Congols</item>	10
59332	ConnectivityManager	2
20543	Consider	26
38139	Consists	4
51176	ConstantConditions	7
33615	Construct	17
1288	Constructor	45
63834	Constructor,specify	3
35569	Constructor.	6
37863	Constructor<?	4
48568	Constructor<?>	4
3696	Constructs	49
20466	Conta	26
12980	Conta</string>	75
51567	Contabilidad	6
51415	Contabilidade	8
51429	Contabilit	7
40507	Contains	8
22958	Contas	23
6131	Contas-Comuns	6
4396	Contas</string>	52
10973	Content	99
60560	ContentObserver	7
60471	ContentObserver#onChange(boolean)	7
50782	ContentResolver	5
49692	ContentResolver#openOutputStream(android.net.Uri,String)	5
50989	ContentResolver.SCHEME_ANDROID_RESOURCE	5
18226	ContentValues	136
18438	ContentValues()	127
2191	Context	297
48628	Context.	4
30842	Context.INPUT_METHOD_SERVICE)	12
32805	Context.MODE_PRIVATE).getBoolean(	11
32919	Context.MODE_PRIVATE).getString(	11
64013	Context.MODE_PRIVATE,R.xml.fragment_transaction_preferences,true)	2
46493	ContextMenu.ContextMenuInfo	4
42507	ContextMenuInfo	16
38698	ContextMode	4
47560	ContextThemeWrapper(context,defStyleRes)	4
39558	ContextThemeWrapper(context,outValue.resourceId)	4
39327	ContextThemeWrapper(context,targetThemeRes)	4
39866	ContextThemeWrapper(mContext,targetThemeRes)	4
30561	Contextual	9
51464	Conti	7
60440	Contract:	3
16072	Contrase&#241	6
15488	Contrasea</string>	11
48679	Control	6
28476	Convenience	7
28755	Conversvel</item>	10
47021	Convert	10
17044	Convertibele	6
14549	Convertible	88
5053	Convertible</item>	41
54949	Convertido</string>	7
12917	Converts	67
51957	CoordinatesProvider()	13
9341	CoordinatorLayout	6
30345	CoordinatorLayout.Behavior<FloatingActionButton>	3
30423	CoordinatorLayout.LayoutParams	8
25563	Copia	12
25671	Copias	6
6575	Copies	30
18380	Copy	11
43809	CopyOnWriteArrayList<WeakReference<MenuPresenter>>	4
43615	CopyOnWriteArrayList<WeakReference<MenuPresenter>>()	4
1297	Copyright	370
5475	Cor</string>	9
57903	Cordoba"	6
28717	Cordoba</item>	12
28911	Coreano</item>	10
20672	Correc&#231	10
26132	Correci&#243	7
19143	Correction	7
31562	Corresponding	5
29164	Costa	13
15704	Costarricense</item>	19
9606	Could	6
42251	Couldn't	9
30905	Count	9
2597	Counts	11
30156	Courtesy:	3
5287	Crash	108
20554	Crash</string>	16
36584	Crashlytics	4
23268	Crashlytics())	11
23317	Crashlytics.Builder().core(	16
24788	Crashlytics.log("Could	8
63676	Crashlytics.log("Error	3
54844	Crashlytics.log("No	7
57337	Crashlytics.log(Log.ERROR,TAG,"Error	4
31639	Crashlytics.log(err_msg)	10
23419	Crashlytics.log(message)	6
7573	Crashlytics.log(msg)	40
9663	Crashlytics.logException(e)	86
63759	Crashlytics.logException(e.getTargetException())	3
23055	Crashlytics.logException(ex)	23
23366	Crashlytics.logException(exception)	10
61622	Crashlytics.logException(sqlEx)	3
61452	Crashlytics.logException(sqle)	3
56792	Crashlytics.logException(tfException)	3
8855	Crashlytics.logException(unauthorized)	8
24984	Crashlytics.start(this)	12
60171	CrashlyticsCore.Builder().disabled(!BuildConfig.USE_CRASHLYTICS).build()).build())	6
23277	CrashlyticsCore.Builder().disabled(!isCrashlyticsEnabled()).build())	7
32258	CrashlyticsCore.Builder().disabled(!isCrashlyticsEnabled()).build()).build())	9
18994	Cration	12
18506	Crear	13
3337	Create	191
57386	CreateRemoteFolderOperation(	8
34916	Created	2
1703	Creates	184
39264	Creating	4
35071	Credit:	2
6969	Credits	6
16498	Cristian	10
15626	Croata</item>	29
11898	CrowdIn</string>	96
29304	Crowdin</string>	25
35424	Crowdln</string>	18
58291	Cruzeiro	6
58131	Cruzeiro"	6
15416	Cubano</item>	28
2840	Cuenta</string>	54
51520	Cuentas	6
13026	Cuentas</string>	30
9800	Currencies	22
1843	Currency	232
4094	Currency"	10
36298	Currency#getDefaultFractionDigits()	6
36515	Currency.getInstance("EUR").getSymbol(Locale.GERMAN)	8
13911	Currency.getInstance("EUR").getSymbol(Locale.GERMANY)	7
13977	Currency.getInstance("EUR").getSymbol(Locale.US)	9
10819	Currency.getInstance("USD")	15
63269	Currency.getInstance(Account.DEFAULT_CURRENCY_CODE)	2
63276	Currency.getInstance(AccountsActivity.DEFAULT_CURRENCY_CODE)	2
36660	Currency.getInstance(CURRENCY_CODE)	7
19192	Currency.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE)	8
6745	Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode())	32
25928	Currency.getInstance(GnuCashApplication.getDefaultCurrencyCode()).getSymbol(Locale.getDefault())	10
58543	Currency.getInstance(GnuCashApplication.getDefaultLocale())	5
4250	Currency.getInstance(GnuCashApplication.getDefaultLocale()).getCurrencyCode()	9
26289	Currency.getInstance(Locale.getDefault())	3
26520	Currency.getInstance(Locale.getDefault()).getCurrencyCode()	8
60292	Currency.getInstance(Locale.getDefault()).getCurrencyCode())	4
23888	Currency.getInstance(Locale.getDefault()).getSymbol()	4
63856	Currency.getInstance(MainActivity.DEFAULT_CURRENCY_CODE)	2
4804	Currency.getInstance(Money.DEFAULT_CURRENCY_CODE)	29
2113	Currency.getInstance(PreferenceManager	5
59497	Currency.getInstance(PreferenceManager.getDefaultSharedPreferences(getActivity())	6
4119	Currency.getInstance(PreferenceManager.getDefaultSharedPreferences(this)	17
30439	Currency.getInstance(accountsDbAdapter.getCurrencyCode(mOriginAccountUID))	6
58996	Currency.getInstance(c.getString(DatabaseAdapter.COLUMN_CURRENCY_CODE))	2
119	Currency.getInstance(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_CURRENCY)))	19
12793	Currency.getInstance(code)	26
36284	Currency.getInstance(commodity.getMnemonic())	6
31177	Currency.getInstance(currency)	11
10436	Currency.getInstance(currencyCode)	61
26502	Currency.getInstance(currencyCode))	5
26144	Currency.getInstance(cursor.getString(cursor.getColumnIndexOrThrow("acct1_currency")))	6
31762	Currency.getInstance(fromCurrencyCode))	7
7280	Currency.getInstance(getCurrencyCode(accountUID))	13
34186	Currency.getInstance(locale).getCurrencyCode()	12
20053	Currency.getInstance(locale).getCurrencyCode())	15
36279	Currency.getInstance(mAccountsDbAdapter.getAccountCurrencyCode(mAccountUID))	8
31975	Currency.getInstance(mAccountsDbAdapter.getCurrencyCode(	7
52395	Currency.getInstance(mAccountsDbAdapter.getCurrencyCode(mAccountId))	8
13944	Currency.getInstance(mAccountsDbAdapter.getCurrencyCode(mAccountUID))	14
32742	Currency.getInstance(mAccountsDbAdapter.getCurrencyCode(split.getAccountUID()))	6
10902	Currency.getInstance(mCommodity.getCurrencyCode())	14
766	Currency.getInstance(mCurrencyCode)	23
1241	Currency.getInstance(mCurrencyCode))	25
24729	Currency.getInstance(mCurrencyCode).getSymbol(Locale.getDefault())	9
4163	Currency.getInstance(mCurrencyCode).getSymbol(Locale.getDefault()))	5
31207	Currency.getInstance(mTransactionsDbAdapter.getAccountCurrencyCode(accountUID))	3
12953	Currency.getInstance(mTransactionsDbAdapter.getAccountCurrencyCode(mAccountUID))	42
7059	Currency.getInstance(mTransactionsDbAdapter.getCurrencyCode(accountID))	18
59707	Currency.getInstance(mTransactionsDbAdapter.getCurrencyCode(accountUID))	3
8712	Currency.getInstance(targetCurrencyCode)	7
8239	Currency.getInstance(targetCurrencyCode).getCurrencyCode()	4
10174	Currency.getInstance(this.mCurrencyCode)	14
3277	Currency</string>	98
59003	CurrencyDbAdapter	2
58979	CurrencyDbAdapter(Context	2
59046	CurrencyDbAdapter(getActivity())	2
53649	CurrencyMismatchException	2
53438	CurrencyMismatchException()	2
62213	CurrencySelectFragment	3
62030	CurrencySelectFragment()	3
62099	CurrencySelectFragment.newInstance(getKey())	3
62256	CurrencySelectPage	3
62072	CurrencySelectPage(ModelCallbacks	3
62216	CurrencySelectPage(this,mContext.getString(R.string.wizard_title_select_currency)),defaultAccountsPage).setRequired(true)	3
35134	Current	30
1997	Currently	38
42197	Currently,	4
191	Cursor	293
60573	Cursor,null	7
60413	Cursor,or	7
60568	Cursor,returning	3
60533	Cursor.	3
49113	CursorAdapter	9
60623	CursorAdapter!	3
60618	CursorAdapter.	3
60407	CursorFilter	3
60523	CursorFilter(CursorFilterClient	3
60437	CursorFilter(this)	3
59790	CursorFilter.CursorFilterClient	3
60482	CursorFilterClient	3
60453	CursorRecyclerAdapter(	3
61900	CursorRecyclerAdapter<AccountRecyclerAdapter.AccountViewHolder>	3
59734	CursorRecyclerAdapter<AccountRecyclerAdapter.ViewHolder>	6
53738	CursorRecyclerAdapter<BudgetRecyclerAdapter.BudgetViewHolder>{	2
30231	CursorRecyclerAdapter<TransactionRecyclerAdapter.ViewHolder>{	14
59821	CursorRecyclerAdapter<VH	6
28841	Custom	28
52385	CustomKeyboard	11
52794	CustomKeyboard(Activity	10
52412	CustomKeyboard(getActivity(),R.id.calculator_keyboard,R.xml.calculator_keyboard)	10
52735	CustomKeyboard.	10
62143	Cut	3
20237	D&#201	11
32321	DAILY:	5
62742	DANA</item>	3
23769	DATABASE_NAME	13
14034	DATABASE_VERSION	53
25433	DATE:	5
6214	DATE_FORMATTER	19
35802	DATE_FORMATTER.format(new	4
35797	DATE_FORMATTER.parse(dateString)	4
23783	DATE_FORMATTER.parse(mDateTextView.getText().toString())	13
1750	DATE_PATTERN	22
52221	DATE_PREFIX	3
8670	DAY	5
7469	DAY,WEEK,MONTH,YEAR	13
7793	DAY:	34
19060	DAY_MILLIS	10
23647	DB	70
24609	DB")	6
12323	DB,	14
59552	DB.	5
41327	DBG	14
15959	DBIT</string>	10
28868	DBITO</string>	13
14811	DE	26
60508	DEALINGS	3
10756	DEBET</string>	31
55504	DEBETN</string>	2
33400	DEBIT	15
35883	DEBIT,CREDIT	2
35911	DEBIT.opposite	2
30968	DEBIT/CREDIT	7
24305	DEBIT:	7
5681	DEBIT</string>	101
12700	DEBITO</string>	18
29182	DEBITORE</item>	4
37871	DEBUG	18
62330	DECIMAL	3
26374	DECIMAL_PLACES	8
19647	DEFAULT	51
48510	DEFAULT_ACTIVITY_INFLATION	7
38423	DEFAULT_API	4
1347	DEFAULT_COLOR	7
13955	DEFAULT_COMMODITY	9
36016	DEFAULT_CURRENCY	6
56420	DEFAULT_CURRENCY_CODE	8
45164	DEFAULT_CUSTOM_GRAVITY	4
44919	DEFAULT_CUSTOM_GRAVITY)	4
26339	DEFAULT_DECIMAL_PLACES	9
38656	DEFAULT_DPI	4
38843	DEFAULT_FEATURES	5
42147	DEFAULT_FRAME_DELAY	4
48542	DEFAULT_HISTORICAL_RECORD_WEIGHT	7
48768	DEFAULT_HISTORY_FILE_NAME	4
48381	DEFAULT_HISTORY_MAX_LENGTH	4
50501	DEFAULT_INITIAL_ACTIVITY_COUNT	4
19857	DEFAULT_NUM_PAGES	17
26435	DEFAULT_ROUNDING_MODE	13
49777	DEFAULT_SHARE_HISTORY_FILE_NAME	4
57561	DELAY	5
20437	DELETE	59
28526	DELETED"	9
6328	DELETED")	11
50456	DELETE_KEY_POST_DELAY	5
20963	DESC"	19
18421	DESC")	21
12236	DESC","1")	4
24192	DESC",//	5
7312	DESC",Integer.toString(numberOfRecents))	5
10428	DESC,"	2
16280	DI	15
31330	DIALOG_ADD_ACCOUNT	14
60324	DINING_EXPENSE_ACCOUNT_NAME	3
60320	DINING_EXPENSE_ACCOUNT_UID	3
29092	DISABLED	3
57593	DISABLE_PASSCODE	2
38710	DISPLAY_	4
44952	DISPLAY_DEFAULT	4
38260	DISPLAY_HOME_AS_UP	8
45151	DISPLAY_RELAYOUT_MASK	4
45637	DISPLAY_RELAYOUT_MASK)	4
38068	DISPLAY_SHOW_CUSTOM	8
38466	DISPLAY_SHOW_HOME	8
38190	DISPLAY_SHOW_TITLE	8
38361	DISPLAY_USE_LOGO	8
37764	DISPLAY_USE_LOGO)	4
62329	DISPOSABLE	5
3773	DISTINCT	38
20510	DITO	11
15310	DITO</item>	24
20005	DITO</string>	15
44766	DOES	4
6543	DOM	55
6632	DOMSource	24
20777	DOMSource(document)	11
31438	DOMSource(mDocument)	5
7256	DOMSource(node)	14
2691	DOUBLE_TAP_DELAY	15
41455	DOUBLE_VARIANTS	4
38005	DPI	4
52792	DRAWABLE_BOTTOM	14
52788	DRAWABLE_LEFT	11
51910	DRAWABLE_RIGHT	17
52900	DRAWABLE_TOP	11
55528	DROPBOX("Dropbox"),GOOGLE_DRIVE("Google	2
9145	DROPBOX:	19
25437	DROPBOX_APP_KEY	14
25077	DROPBOX_APP_KEY,DROPBOX_APP_SECRET)	6
9935	DROPBOX_APP_SECRET	13
18890	DUMMY_ACCOUNT_CURRENCY	20
18930	DUMMY_ACCOUNT_CURRENCY_CODE	27
13481	DUMMY_ACCOUNT_NAME	48
13378	DUMMY_ACCOUNT_UID	47
58568	D\'INVERSI</item>	2
17772	Dalej</string>	8
15937	Danesa</item>	16
26358	Data	11
48485	DataSetObservable	4
44497	DataSetObserver	21
49073	DataSetObserver()	4
3736	Database	183
3628	DatabaseAdapter	53
51106	DatabaseAdapter(@NonNull	4
35413	DatabaseAdapter(Context	11
14544	DatabaseAdapter(SQLiteDatabase	30
25039	DatabaseAdapter.class.getName()	6
61613	DatabaseAdapter<Account>	3
63408	DatabaseAdapter<Book>	4
53346	DatabaseAdapter<Budget>{	2
53091	DatabaseAdapter<BudgetAmount>	2
61597	DatabaseAdapter<Commodity>	3
61559	DatabaseAdapter<Model	3
61455	DatabaseAdapter<Price>	3
53031	DatabaseAdapter<Recurrence>	2
53259	DatabaseAdapter<ScheduledAction>	8
14291	DatabaseAdapter<Split>	5
61717	DatabaseAdapter<Transaction>	3
8253	DatabaseCursorLoader	46
63550	DatabaseCursorLoader(Context	3
7848	DatabaseHelper	94
35523	DatabaseHelper(Context	14
63409	DatabaseHelper(GnuCashApplication.getAppContext(),	7
13470	DatabaseHelper(GnuCashApplication.getAppContext(),activeBookUID)	3
55425	DatabaseHelper(GnuCashApplication.getAppContext(),book.getUID())	8
8686	DatabaseHelper(GnuCashApplication.getAppContext(),bookUID)	17
32845	DatabaseHelper(GnuCashApplication.getAppContext(),mBook.getUID())	3
9628	DatabaseHelper(GnuCashApplication.getAppContext(),testBook.getUID())	3
50970	DatabaseHelper(WidgetConfigurationActivity.this,book.getUID()).getWritableDatabase()	3
28343	DatabaseHelper(context)	13
28720	DatabaseHelper(getActivity())	11
52074	DatabaseHelper(getActivity(),BaseModel.generateUID())	7
54907	DatabaseHelper(getActivity(),activeBookUID)	7
59287	DatabaseHelper(getAppContext(),	2
30744	DatabaseHelper(getApplicationContext())	24
59215	DatabaseHelper(getApplicationContext(),	9
30915	DatabaseHelper(getContext())	4
28863	DatabaseHelper(getInstrumentation().getTargetContext())	17
52369	DatabaseHelper(getInstrumentation().getTargetContext(),BaseModel.generateUID())	7
13092	DatabaseHelper(getInstrumentation().getTargetContext(),DatabaseSchema.LEGACY_DATABASE_NAME)	2
13628	DatabaseHelper(getInstrumentation().getTargetContext(),activeBookUID)	5
28489	DatabaseHelper(mAcccountsActivity)	6
51123	DatabaseHelper(mAcccountsActivity,activeBookUID)	7
52164	DatabaseHelper(mAcccountsActivity,book1.getUID())	7
34905	DatabaseHelper(mAccountsActivity,activeBookUID)	8
52316	DatabaseHelper(mActivity)	7
52306	DatabaseHelper(mActivity,BaseModel.generateUID())	4
52156	DatabaseHelper(mReportsActivity,BaseModel.generateUID())	7
13174	DatabaseHelper(mReportsActivity,bookUID)	5
27641	DatabaseHelper.ACCOUNTS_TABLE_NAME	8
35442	DatabaseHelper.COLUMN_RECURRENCE_PERIOD	4
35467	DatabaseHelper.COLUMN_TIMESTAMP	4
18186	DatabaseHelper.KEY_ACCOUNT_UID	24
6417	DatabaseHelper.KEY_AMOUNT	17
3135	DatabaseHelper.KEY_CURRENCY_CODE	24
18125	DatabaseHelper.KEY_DOUBLE_ENTRY_ACCOUNT_UID	14
35468	DatabaseHelper.KEY_EXPORTED	3
26746	DatabaseHelper.KEY_FAVORITE	7
35359	DatabaseHelper.KEY_FULL_NAME	4
3824	DatabaseHelper.KEY_NAME	35
35490	DatabaseHelper.KEY_NAME)	5
26672	DatabaseHelper.KEY_PARENT_ACCOUNT_UID	21
13902	DatabaseHelper.KEY_PLACEHOLDER	16
18121	DatabaseHelper.KEY_RECURRENCE_PERIOD	5
8389	DatabaseHelper.KEY_ROW_ID	57
51311	DatabaseHelper.KEY_SPLIT_ACCOUNT_UID	3
18096	DatabaseHelper.KEY_TIMESTAMP	5
3456	DatabaseHelper.KEY_TYPE	19
2321	DatabaseHelper.KEY_UID	49
6764	DatabaseHelper.TRANSACTIONS_TABLE_NAME	20
35259	DatabaseHelper.class.getName()	9
61820	DatabaseHelper.createUpdatedAtTrigger(AccountEntry.TABLE_NAME))	3
63412	DatabaseHelper.createUpdatedAtTrigger(BookEntry.TABLE_NAME)	6
53244	DatabaseHelper.createUpdatedAtTrigger(BudgetAmountEntry.TABLE_NAME))	2
53130	DatabaseHelper.createUpdatedAtTrigger(BudgetEntry.TABLE_NAME))	2
53174	DatabaseHelper.createUpdatedAtTrigger(CommodityEntry.TABLE_NAME)	5
52985	DatabaseHelper.createUpdatedAtTrigger(CommodityEntry.TABLE_NAME))	2
33641	DatabaseHelper.createUpdatedAtTrigger(PriceEntry.TABLE_NAME)	8
53066	DatabaseHelper.createUpdatedAtTrigger(PriceEntry.TABLE_NAME))	2
53065	DatabaseHelper.createUpdatedAtTrigger(RecurrenceEntry.TABLE_NAME))	2
53192	DatabaseHelper.createUpdatedAtTrigger(ScheduledActionEntry.TABLE_NAME))	5
61832	DatabaseHelper.createUpdatedAtTrigger(SplitEntry.TABLE_NAME))	9
61831	DatabaseHelper.createUpdatedAtTrigger(TransactionEntry.TABLE_NAME))	3
35464	DatabaseSchema	9
33583	DatabaseSchema#SPLITS_DB_VERSION	10
35580	DatabaseSchema(){	12
19716	DatabaseSchema(){}	55
18597	DatabaseSchema.AccountEntry.COLUMN_CURRENCY	29
57272	DatabaseSchema.AccountEntry.COLUMN_CURRENCY,null,null)	4
57578	DatabaseSchema.AccountEntry.COLUMN_FAVORITE,isFavorite	5
10922	DatabaseSchema.AccountEntry.COLUMN_HIDDEN	16
59168	DatabaseSchema.AccountEntry.COLUMN_NAME	1
18987	DatabaseSchema.AccountEntry.COLUMN_PARENT_ACCOUNT_UID	12
19033	DatabaseSchema.AccountEntry.COLUMN_PLACEHOLDER	37
25659	DatabaseSchema.AccountEntry.COLUMN_TYPE	8
13290	DatabaseSchema.AccountEntry.COLUMN_UID	56
57229	DatabaseSchema.AccountEntry.TABLE_NAME	4
35920	DatabaseSchema.AccountEntry._ID	8
32597	DatabaseSchema.BookEntry.COLUMN_MODIFIED_AT	8
51899	DatabaseSchema.CommodityEntry.COLUMN_MNEMONIC	3
53151	DatabaseSchema.CommodityEntry.TABLE_NAME	8
25050	DatabaseSchema.CommonColumns.COLUMN_CREATED_AT	3
21860	DatabaseSchema.CommonColumns.COLUMN_MODIFIED_AT	16
23575	DatabaseSchema.CommonColumns.COLUMN_UID	15
24408	DatabaseSchema.CommonColumns._ID	6
31407	DatabaseSchema.DATABASE_VERSION	9
63450	DatabaseSchema.LEGACY_DATABASE_NAME)	7
35578	DatabaseSchema.SPLITS_DB_VERSION	14
56551	DatabaseSchema.SPLITS_DB_VERSION)	7
24300	DatabaseSchema.SPLITS_DB_VERSION){	25
59568	DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT,	3
59595	DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN,	3
53881	DatabaseSchema.ScheduledActionEntry.COLUMN_TYPE	7
50643	DatabaseSchema.ScheduledActionEntry.COLUMN_UID	12
27077	DatabaseSchema.ScheduledActionEntry.COLUMN_UID))	5
33744	DatabaseSchema.ScheduledEventEntry.COLUMN_EXECUTION_COUNT,	3
20993	DatabaseSchema.ScheduledEventEntry.COLUMN_LAST_RUN,	4
30248	DatabaseSchema.SplitEntry.COLUMN_ACCOUNT_UID	6
30384	DatabaseSchema.SplitEntry.COLUMN_ACCOUNT_UID,	7
64172	DatabaseSchema.SplitEntry.COLUMN_TRANSACTION_UID,	2
35936	DatabaseSchema.SplitEntry.COLUMN_TYPE	4
64162	DatabaseSchema.SplitEntry.TABLE_NAME	2
58881	DatabaseSchema.TransactionEntry.COLUMN_EXPORTED)	5
55191	DatabaseSchema.TransactionEntry.COLUMN_SCHEDX_ACTION_UID	2
64168	DatabaseSchema.TransactionEntry.COLUMN_UID	2
55122	DatabaseSchema.TransactionEntry.TABLE_NAME	4
24152	DatabaseUtils.queryNumEntries	11
781	Date	102
1320	Date"	5
56482	Date()	7
25215	Date())	11
51579	Date()))	6
23576	Date(System.currentTimeMillis())	7
12272	Date(System.currentTimeMillis()))	26
7248	Date(System.currentTimeMillis())))	32
64279	Date(c.getLong(DatabaseAdapter.COLUMN_TIMESTAMP)))	1
30241	Date(dateMillis))	10
30195	Date(dateMillis)))	8
56479	Date(endDate)	3
50681	Date(lastActionTime))	7
63714	Date(lastSyncMillis))	3
19856	Date(mEndDate))	5
26862	Date(mEndDate)))	9
26865	Date(mEndDate))).append(separator)	3
53352	Date(mLastRun))	5
64145	Date(mPeriodEnd.getTime()))	3
57450	Date(mPeriodEnd.getTime())))	6
34962	Date(mPeriodStart.getTime()))	11
8776	Date(mStartDate))	22
19972	Date(mStartDate)))	9
5399	Date(mTransactionTimeMillis)	22
6376	Date(mTransactionTimeMillis))	16
55135	Date(milliseconds)	6
35770	Date(milliseconds))	4
53754	Date(scheduledAction.getLastRun()))))	8
54109	Date(scheduledAction.getLastRunTime()))))	2
56548	Date(startDate)	3
57326	Date(startDate.getTime())	3
26942	Date(startTime))	9
2817	Date(time)))	9
52110	Date(timeMillis)	3
28765	Date(timeMillis))	7
6980	Date(timeMillis1)	11
6666	Date(timeMillis2)	11
9711	Date(timestamp.getTime())	7
1276	Date(transaction.getTimeMillis())	13
6894	Date(transactionTime))	8
6389	Date(trx.getTimeMillis())	22
30870	Date:	14
3634	DateFormat	29
35959	DateFormat.getDateInstance()	6
28886	DateFormat.getDateInstance(DateFormat.FULL).format(trnDate)	3
30346	DateFormat.getDateInstance(DateFormat.MEDIUM)	8
63730	DateFormat.getDateTimeInstance()	3
942	DateFormat.getDateTimeInstance(DateFormat.FULL,DateFormat.SHORT).format(trnDate)	9
53926	DateFormat.getInstance().format(new	8
6857	DateFormat.getLongDateFormat(getActivity())	8
35952	DateFormat.getTimeInstance()	4
1428	DatePicker	14
338	DatePickerDialog	25
63555	DatePickerDialog(getActivity(),	2
34278	DatePickerDialog(getActivity(),callback,	5
13554	DatePickerDialog.OnDateSetListener,DateRangePickerDialogFragment.OnDateRangeSetListener,	2
13785	DatePickerDialog.OnDateSetListener,DateRangePickerDialogFragment.OnDateRangeSetListener{	11
2074	DatePickerDialog.OnDateSetListener,ReportOptionsListener	5
645	DatePickerDialog.OnDateSetListener{	6
55060	DatePickerDialogFragment	4
55190	DatePickerDialogFragment()	6
63559	DatePickerDialogFragment(NewTransactionFragment.this)	2
63486	DatePickerDialogFragment(NewTransactionFragment.this,dateMillis)	3
51215	DatePickerDialogFragment(OnDateSetListener	10
63441	DatePickerDialogFragment(TransactionFormFragment.this,dateMillis)	3
23517	DatePickerDialogFragment.newInstance(TransactionFormFragment.this,dateMillis)	4
1472	DateRangeAdapter	7
1047	DateRangeAdapter()	5
9172	DateRangePickerDialogFragment	8
56533	DateRangePickerDialogFragment()	6
8075	DateRangePickerDialogFragment.newInstance(	9
7431	DateTime	28
1945	DateTime().dayOfMonth().withMaximumValue().toDate().getTime()	13
6588	DateTime().dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue()	8
1648	DateTime().dayOfMonth().withMinimumValue().toDate().getTime()	13
60243	DateTime(2015,10,5,0,0)	3
60039	DateTime(2015,5,31,14,0).getMillis())	4
8722	DateTime(2015,8,15,12,0)	6
60240	DateTime(2016,1,5,0,0)	3
50845	DateTime(2016,2,15,12,0)	7
50828	DateTime(2016,2,17,17,0).getMillis())	10
8150	DateTime(2016,6,6,9,0)	14
55586	DateTime(2016,6,6,9,0).getMillis())	4
58695	DateTime(2016,7,4,12	6
60079	DateTime(2016,7,4,9,0)	3
8070	DateTime(2016,8,29,10,0)	5
7980	DateTime(2016,8,29,10,0)).getWeeks()	9
60236	DateTime(2016,8,5,0,0)	3
13256	DateTime(2016,8,8,9,0).getMillis())	5
58705	DateTime(2016,9,12,8,0)	3
55672	DateTime(2017,4,12,9,0).getMillis())	4
55633	DateTime(2017,4,17,9,0).getMillis())	3
55809	DateTime(2017,4,20,9,0).getMillis()	3
55604	DateTime(2017,4,26,9,0).getMillis()	3
59998	DateTime(2017,8,16,9,0).getMillis())	3
7969	DateTime(mPeriodEnd.getTime())	8
7575	DateTime(mPeriodStart.getTime())	8
52598	DateTimeFormat.forPattern("yyyy-MM-dd	2
52457	DateTimeFormatter	2
52549	DateTimeZone	2
52493	DateTimeZone.forID("UTC")	2
53053	DateUtils.FORMAT_SHOW_DATE	8
53334	DateUtils.FORMAT_SHOW_WEEKDAY	8
53064	DateUtils.FORMAT_SHOW_YEAR)	12
59159	DateUtils.formatDateTime(context,dateMillis,DateUtils.FORMAT_ABBREV_MONTH	4
52983	DateUtils.formatDateTime(getActivity(),timestamp,	3
60676	DateUtils.formatDateTime(getActivity(),transactionTime,	5
30370	DateUtils.getRelativeTimeSpanString(dateMillis).toString()	6
36576	DateUtils.getRelativeTimeSpanString(dateMillis,System.currentTimeMillis(),DateUtils.DAY_IN_MILLIS).toString()	8
713	DateViewHolder	6
772	DateViewHolder(final	6
1282	DateViewHolder(view)	6
4640	Datei	38
5503	Dateien	33
22151	Dateimanager	15
22025	Daten	8
4113	Daten</string>	9
5966	Datenaufzeichungs-App	25
18580	Day	5
35088	Days	3
7593	Days.days(multiple)	7
8602	Days.daysBetween(startDate,endDate).dividedBy(multiplier).getDays()	5
7716	Days.daysBetween(startDate,endDate).getDays()	12
53928	Db	2
9785	DbxAccountManager	15
9470	DbxAccountManager.getInstance(getActivity().getApplicationContext(),	14
25273	DbxAccountManager.getInstance(getApplicationContext(),	9
8933	DbxAccountManager.getInstance(mContext.getApplicationContext(),	11
8931	DbxClientV2	3
9081	DbxClientV2(config,accessToken)	2
9487	DbxFile	16
10114	DbxFileSystem	13
9714	DbxFileSystem.forAccount(mDbxAcctMgr.getLinkedAccount())	13
9019	DbxPath(exportedFile.getName()))	11
9527	DbxRequestConfig	2
9615	DbxRequestConfig(BuildConfig.APPLICATION_ID)	2
5368	Ddoc:	5
34856	De	5
30573	De-selects	9
12827	Deactivate	3
12192	DebugAndroidTest"	3
45568	DecelerateInterpolator()	8
45242	DecelerateInterpolator())	4
52832	December	17
12181	DecimalFormat	47
54393	DecimalFormat("###E0")	4
51240	DecimalFormat)	6
12725	DecimalFormatSymbols	9
51254	DecimalFormatSymbols(Locale.US).getGroupingSeparator()	8
47867	Declaring	4
39079	Decor	4
630	Default	200
11088	Default</string>	12
3991	DefaultHandler	31
33032	DefaultRenderer	6
33014	DefaultRenderer()	6
49424	DefaultSorter	4
48632	DefaultSorter()	4
946	Defaults	50
42252	Defines	8
18047	Definir	6
50509	Delayed	5
30272	Delete	29
33801	DeleteAccountDialogFragment	10
33513	DeleteAccountDialogFragment()	3
58696	DeleteAccountDialogFragment.newInstance(mAccountsDbAdapter.getUID(id))	5
30498	DeleteAccountsConfirmationDialog	7
30591	DeleteAccountsConfirmationDialog()	7
30650	DeleteAccountsConfirmationDialog.newInstance()	7
30960	DeleteAllAccountsConfirmationDialog	10
30971	DeleteAllAccountsConfirmationDialog()	4
30909	DeleteAllAccountsConfirmationDialog.newInstance()	7
30708	DeleteAllTransacationsConfirmationDialog	11
30924	DeleteAllTransacationsConfirmationDialog()	5
30862	DeleteAllTransacationsConfirmationDialog.newInstance()	5
57048	DeleteAllTransactionsConfirmationDialog	4
64156	DeleteAllTransactionsConfirmationDialog()	1
57135	DeleteAllTransactionsConfirmationDialog.newInstance()	4
27781	DeleteConfirmationDialogFragment	20
30588	DeleteConfirmationDialogFragment()	11
30503	DeleteConfirmationDialogFragment.newInstance(R.string.title_confirm_delete,id)	8
59665	DeleteConfirmationDialogFragment.newInstance(R.string.title_confirm_delete,mAccountsDbAdapter.getAccountUID(id))	3
59685	DeleteConfirmationDialogFragment.newInstance(R.string.title_confirm_delete,mAccountsDbAdapter.getUID(id))	3
54580	Deleted"	2
2239	Deletes	84
42942	Demote	4
60149	Denominator	6
40484	Dependency	4
41078	Dependency(Node	4
40410	Dependency(clonedDependencyNode,	4
40745	Dependency(mCurrentNode,Dependency.AFTER)	4
40343	Dependency(mCurrentNode,Dependency.WITH)	4
40347	Dependency(node,Dependency.AFTER)	4
40576	Dependency.AFTER)	4
40795	Dependency.WITH)	4
41107	DependencyGraph	4
40987	DependencyListener	4
40994	DependencyListener(AnimatorSet	4
40872	DependencyListener(this,node,dependency.rule))	4
41684	Depending	8
2161	Depends	18
10247	Desain	5
8717	Describes	23
37719	Description	12
55854	Desea	2
55844	Deseja	4
33069	Deselects	4
26012	Design	11
25542	Design\n	7
4587	Desktop	38
4175	Desktop-PC	25
5234	Desktop-Version	10
12016	Desktop</string>	36
7130	Destination	16
28469	Destination</string>	25
15773	Destino</string>	49
22449	Details	11
5799	Details</string>	34
55977	Detaljer</string>	2
23047	Detaylar	8
45789	Detect	4
40334	Determine	8
35793	Determines	18
11080	Dettes	12
40569	Developers	4
43463	Devices	4
23346	Dfinir	5
25583	Diagramms,um	3
11804	Diaktifkan</string>	5
2484	Dialog	131
1482	DialogFragment	97
9239	DialogFragment{	5
2701	DialogInterface.OnClickListener()	83
23432	DialogInterface.OnDismissListener()	9
28025	DialogInterface.OnMultiChoiceClickListener()	4
47851	DialogPopup	4
43108	Did	8
33497	Didn't	10
35218	Dienst</string>	3
6604	Different	18
10297	Dimatikan</string>	8
28611	Dinamarca</item>	12
58064	Dinar"	9
5777	Dinar</item>	144
59289	Dinge	4
7386	Dining	3
22795	Dir	5
58495	Dirham"	8
6309	Dirham</item>	114
28534	Disable	37
13598	DisableAnimationsRule	5
13089	DisableAnimationsRule()	5
8106	Disabled	14
48596	Disabling	4
46719	Disallowing	4
12863	Disk</item>	26
14977	Disk</string>	19
52033	Disk\n	4
42581	Dismiss	8
49621	Dismisses	4
43785	Dispatch	4
18144	Display	53
39412	DisplayMetrics	8
38170	DisplayMetrics.DENSITY_TV	4
37833	DisplayMetrics.DENSITY_TV)	4
37943	DisplayMetrics.DENSITY_TV))	4
27791	DisplayMode	13
27804	DisplayMode#TOP_LEVEL	3
54690	DisplayMode.ALL_ACTIONS	5
62599	DisplayMode.ALL_EVENTS	3
56472	DisplayMode.FAVORITES)	3
27828	DisplayMode.TOP_LEVEL	7
1078	Displays	50
39345	Ditch	4
22898	Diversas	27
43888	Divide	4
3016	Divisa</string>	9
54917	Diviso</string>	7
29134	Djibuti</item>	11
28758	Dlar	17
21520	Do	73
34768	Dobbel	7
15317	Doble	22
5895	Dobradas</string>	13
7261	Document	45
7359	DocumentBuilder	21
7184	DocumentBuilderFactory	36
20611	DocumentBuilderFactory.newInstance()	11
55347	DocumentFile	3
3	Does	34
40464	Doesn't	4
51047	Doing	8
15038	Dolar</item>	14
58254	Dollar	6
58476	Dollar"	9
59008	Dollar")	2
5147	Dollar</item>	145
62486	Dollar</item>+	1
13004	Dollars	11
62212	Dollars"	3
13262	Dollars","USD",100)	15
12903	Dollars,for	3
58529	Dollars</li>	2
28791	Dominicano</item>	10
1123	Don't	52
34747	Doppelte	9
10617	Double	135
41552	Double.class,Integer.class	4
59880	Double.parseDouble(Money.parse(value))	2
63769	Double.parseDouble(Money.parseToString(value))	2
36893	Double.parseDouble(NewTransactionFragment.stripCurrencyFormatting(amountString))/100	3
23926	Double.parseDouble(cleanString)	3
23580	Double.parseDouble(stripCurrencyFormatting(amountString))/100	4
23514	Double.toString(account.getBalance())	2
57973	Drachma"	6
57977	Dram"	6
4549	Dram</item>	104
5433	Drawable	66
48351	Drawable)	4
50788	Drawable,or	5
48348	Drawable.	4
50919	Drawable.ConstantState	5
50814	Drawable.createFromStream(stream,null)	5
46788	Drawable[N]	4
27246	Drawable[]	7
31225	DrawerActions.openDrawer(R.id.drawer_layout)	24
20629	DrawerItemClickListener	15
23316	DrawerItemClickListener())	12
9143	DrawerLayout	33
6020	Drawing	118
4570	Drive	117
28132	Drive")	22
55577	Drive"),OWNCLOUD("ownCloud"),	2
28199	Drive",Toast.LENGTH_LONG)	6
51619	Drive",Toast.LENGTH_LONG).show()	10
51720	Drive",Toast.LENGTH_SHORT).show()	10
9816	Drive.	10
28167	Drive.DriveApi.getFolder(googleApiClient,DriveId.decodeFromString(folderId))	13
51666	Drive.DriveApi.getRootFolder(mGoogleApiClient).createFolder(	7
54304	Drive.DriveApi.newDriveContents(googleApiClient).await(1,TimeUnit.MINUTES)	7
28198	Drive.DriveApi.newDriveContents(googleApiClient).await(TIMEOUT,TimeUnit.SECONDS)	5
28130	Drive.DriveApi.newDriveContents(googleApiClient).setResultCallback(new	6
10325	Drive</item>	135
4283	Drive</string>	153
28103	DriveApi.DriveContentsResult	11
28090	DriveContents	15
28243	DriveFolder	14
28174	DriveFolder.DriveFileResult	11
31909	DriveId.decodeFromString(folderId).asDriveFolder()	4
5985	Drive\n	38
25686	Drive\n+	1
42805	Drop	4
4865	DropBox	56
8847	DropBox")	13
5865	DropBox</string>	152
29802	DropBoxGoogle	10
47755	DropDownAdapter	5
47620	DropDownAdapter(SpinnerAdapter	4
47965	DropDownAdapter(adapter)	4
47974	DropDownAdapter(adapter))	4
52910	DropDownCursorAdapter	3
52991	DropDownCursorAdapter(	3
52734	DropDownCursorAdapter(Context	3
46633	DropDownListView	5
47102	DropDownListView(Context	4
46574	DropDownListView(context,!mModal)	4
9090	Dropbox	6
31468	Dropbox")	4
21411	Dropbox</string>	27
9737	DropboxHelper	2
9293	DropboxHelper.getClient()	3
9238	DropboxHelper.retrieveAndSaveToken()	2
47915	DropdownPopup	6
47725	DropdownPopup(Context	4
47896	DropdownPopup(context,attrs,defStyle)	4
25296	Drops	4
7997	Du	32
52585	Due	6
55304	Dummy	2
2527	Duration	11
58663	Dyskiem	4
17887	Dzenle</string>	16
58488	E	6
15206	E-Mail</string>	10
5537	E-mail</string>	8
34051	EACH	5
29141	EAU</item>	10
14957	ELLER	11
19077	ELSE	56
49912	EMPTY_STATE_SET)	5
42597	ENABLED	8
43039	ENABLED)	8
57555	ENABLED_PASSCODE	5
49731	ENABLED_STATE_SET	5
63584	ENCODING=\"UTF-8\"	4
743	END	81
25030	END,"	6
26622	ENTRY	5
52167	ENTRY_TERMINATOR	7
63997	EPOCH_ZERO_TIMESTAMP	2
31894	EQUITY,CURRENCY,STOCK,MUTUAL_FUND,CHECKING,SAVINGS,MONEYMRKT,CREDITLINE	4
26909	EQUITY:	19
30551	ERROR_TAG	7
21005	ES</item>	11
28673	EUA</item>	12
26368	EUR	29
31566	EUR"	7
58501	EUR,if	6
60597	EVENT	3
43596	EXACTLY	4
43266	EXCLUSIVE	9
44270	EXCLUSIVE)	4
21420	EXISTS	36
43761	EXPANDED_ACTION_VIEW_ID	4
46756	EXPAND_LIST_TIMEOUT	4
63790	EXPECTED_FILE_SIZE	2
63786	EXPECTED_FILE_SIZE)	2
1866	EXPENSE	8
7235	EXPENSE(TransactionType.DEBIT),PAYABLE,RECEIVABLE,EQUITY,CURRENCY,STOCK,MUTUAL,ROOT	5
6720	EXPENSE:	25
13179	EXPORT:	10
54660	EXPORT_ACTIONS:	7
62581	EXPORT_EVENTS:	3
13602	EXPORT_FILENAME_DATE_FORMAT	17
54693	EXPORT_FILENAME_DATE_FORMAT.format(	4
56808	EXPORT_FILENAME_DATE_FORMAT.format(new	6
3021	EXPORT_FILENAME_DATE_FORMAT.parse(tokens[0]	4
28403	EXPORT_FOLDER_PATH	8
13624	EXPORT_FORM:	9
20301	EXTRA_ACCOUNT_UID	8
18244	EXTRA_AMOUNT	11
115	EXTRA_CURRENCY_CODE	14
54684	EXTRA_DISPLAY_MODE	6
20667	EXTRA_DOUBLE_ACCOUNT_UID	6
1170	EXTRA_PARENT_UID	8
10461	EXTRA_SPLITS	5
20430	EXTRA_TAB_INDEX	9
18371	EXTRA_TRANSACTION_TYPE	7
23152	Each	24
58043	Eastern	6
36759	Eclipse	4
18532	Edit	20
588	EditText	134
52824	EditText's	19
2477	EditText(context)	6
50128	EditText.	5
31526	EditText.class)	17
52808	Editable	17
54837	Editable.Factory.getInstance().newEditable("-"	9
13057	Edited	4
6297	Editor	85
31370	Editor)	27
62834	Editor.	4
2391	Editor</string>	92
49989	EditorInfo.IME_FLAG_NO_FULLSCREEN)	5
21616	Egenkapital]]></string>	8
28929	Egpcia</item>	10
21469	Eiendeler</string>	6
29545	Eigenkapital]]></string>	6
4711	Einstellungen	20
29575	Einstellungen</string>	6
4015	Eintrge	8
44439	Either	8
10482	Ekspor	12
28203	Eksport	5
27981	El	18
42857	Elapsed/interpolated	4
7352	Element	96
15807	Elena</item>	14
57519	Else	11
5707	Email	6
15311	Emiratos	14
27560	Empty	3
9477	EmptyRecyclerView	11
61877	EmptyRecyclerView(Context	3
38875	Emulate	4
28536	Enable	28
31717	Enables	28
6509	Encapsulation	13
33516	Enclosing	2
1267	End	21
8610	End:	8
40240	Ends	4
43883	Enforce	4
10688	English	30
432	Ensure	11
15441	Entrada</string>	22
35275	Entries	7
26549	Entry	7
520	Entry((float)	43
6413	Entry(1,0))	13
34202	Entry(balance,i	18
62687	Entry(i	6
24904	Entry(otherSlice,newEntries.size()))	6
60375	Entry(val,newEntries.size()))	3
11715	Entry</string>	119
54929	Enumeration	3
13150	Environment.getExternalStorageDirectory()	14
8130	Epoch	21
15152	Equity	10
21260	Equity"/>	6
2473	Equity]]></string>	89
51173	Equivalent	7
29722	Eriimi</string>	6
25340	Errors	3
4845	Erstellen	14
18166	Escoger	6
58235	Escudo"	8
5395	Escudo</item>	105
15430	Especiales	14
28431	Espresso	3
12842	Espresso.closeSoftKeyboard()	31
24816	Espresso.pressBack()	13
15902	Est	8
3068	Est&#225	30
15854	Esta	6
15576	Estadounidense</item>	16
1734	Este	108
28951	Esterlina</item>	13
29007	Etiopia</item>	10
36506	Euro	11
58243	Euro"	6
5687	Euro</item>	122
64304	Euro</item>-	1
35170	Evaluates	7
42023	Evaluators	4
36856	Even	8
9122	Event	39
9732	EventRecurrence	34
8993	EventRecurrence()	25
19254	EventRecurrence.DAILY:	11
19193	EventRecurrence.FR:	7
34799	EventRecurrence.HOURLY:	2
18896	EventRecurrence.MO:	7
19236	EventRecurrence.MONTHLY:	5
19258	EventRecurrence.SA:	7
18873	EventRecurrence.SU:	7
18966	EventRecurrence.TH:	7
19296	EventRecurrence.TU:	7
18596	EventRecurrence.WE:	7
19273	EventRecurrence.WEEKLY:	5
19008	EventRecurrence.YEARLY:	5
51474	EventRecurrenceFormatter.getRepeatString(getActivity(),getResources(),	2
3370	EventRecurrenceFormatter.getRepeatString(getActivity(),getResources(),mEventRecurrence,true)	10
33697	EventType	6
48247	Eventually	4
35728	Every	13
45682	Everything	6
48686	Example	4
49430	Example:	4
47784	Examples	4
25129	Exceptio	3
8252	Exception	158
31514	Exception("")	7
9731	Exec,dependsOn:	22
48384	Execute	4
50743	Executes	14
3955	Execution	15
50695	ExecutionException	13
48897	Executor	5
49512	Executors.newSingleThreadExecutor()	5
43805	Existing	4
48597	Expand	8
39011	ExpandableListActivity	4
45190	ExpandedActionViewMenuPresenter	6
45184	ExpandedActionViewMenuPresenter()	4
44244	ExpandedIndexObserver	4
44380	ExpandedIndexObserver())	4
8081	Expenses	3
64244	Expenses.getFormattedCurrentTime(mTimestamp.getTime())))	1
55617	Explicit	2
6103	Export	218
25128	Export")	10
63711	Export:")	3
22349	Export</string>	7
34535	ExportAsyncTask	9
55527	ExportAsyncTask(Context	10
51424	ExportAsyncTask(GnuCashApplication.getAppContext()).execute(params).get()	7
50853	ExportAsyncTask(GnuCashApplication.getAppContext(),db).execute(params).get()	16
5946	ExportAsyncTask(getActivity()).execute(exportParameters)	23
58930	ExportAsyncTask(getActivity(),GnuCashApplication.getActiveDb()).execute(exportParameters)	3
34711	ExportClickListener	9
30344	ExportClickListener())	18
34588	ExportDialogFragment	14
29769	ExportDialogFragment()	11
34519	ExportDialogFragment.buildExportFilename()	10
36290	ExportDialogFragment.buildExportFilename(ExportFormat.OFX)	5
36061	ExportDialogFragment.buildExportFilename(ExportFormat.QIF)	5
6601	ExportDialogFragment.buildExportFilename(mExportParams.getExportFormat()))	5
33338	ExportFormFragment	18
55571	ExportFormFragment#bindViewListeners()	2
33345	ExportFormFragment()	11
62298	ExportFormFragment.onPause()	4
9284	ExportFormFragment.this,	7
9939	ExportFormFragment.this,calendar.get(Calendar.HOUR_OF_DAY),	7
6856	ExportFormat	40
6581	ExportFormat#QIF	3
55023	ExportFormat(String	3
51441	ExportFormat.	4
51491	ExportFormat.GNC_XML	3
32574	ExportFormat.OFX	15
6995	ExportFormat.QIF	19
31198	ExportFormat.QIF)	27
55611	ExportFormat.QIF){	2
51420	ExportFormat.XML	10
30258	ExportFormat.valueOf(defaultExportFormat)	17
63199	ExportFormat.valueOf(defaultExportFormat.toUpperCase())	3
6516	ExportParams	101
6998	ExportParams(ExportFormat	5
20496	ExportParams(ExportFormat.GNC_XML)	12
9791	ExportParams(ExportFormat.OFX)	5
8737	ExportParams(ExportFormat.QIF)	11
13245	ExportParams(ExportFormat.XML)	28
57312	ExportParams(ExportFormat.XML))	7
52721	ExportParams(ExportFormat.valueOf(tokens[0]))	9
33542	ExportParams(format)	6
7152	ExportParams(mExportFormat)	21
25080	ExportParams.ExportTarget	19
9775	ExportParams.ExportTarget.DROPBOX	18
25186	ExportParams.ExportTarget.GOOGLE_DRIVE	10
31036	ExportParams.ExportTarget.OWNCLOUD	13
25149	ExportParams.ExportTarget.SD_CARD	19
6681	ExportParams.ExportTarget.SD_CARD)	9
7039	ExportParams.ExportTarget.SHARING	21
31381	ExportParams.ExportTarget.URI	8
55488	ExportParams.ExportTarget.URI){	2
51417	ExportParams.parseCsv(paramsCsv)	4
50689	ExportParams.parseCsv(scheduledAction.getTag())	33
62559	ExportParams.parseCsv(scheduledEvent.getTag())	3
6520	ExportTarget	16
55360	ExportTarget#URI	3
55462	ExportTarget(String	2
7340	ExportTarget.SHARING	9
36601	ExportTransactionsTest	13
13850	ExportTransactionsTest()	12
19796	Exporta&#231	18
22881	Exportao	17
22234	Exporte</string>	15
10228	Exported:</string>	38
28446	Exporter	31
63663	Exporter#BACKUP_FOLDER_PATH	5
60265	Exporter#getBackupFolderPath()	5
60257	Exporter#getBackupFolderPath(String)	3
13943	Exporter(ExportParams	35
56756	Exporter.	3
56810	Exporter.EXPORT_FOLDER_PATH	5
31906	Exporter.ExporterException	13
8912	Exporter.ExporterException(mExportParams)	6
55355	Exporter.ExporterException(mExportParams,	6
55261	Exporter.ExporterException(mExportParams,"Error	6
55280	Exporter.ExporterException(mExportParams,"Invalid	7
55354	Exporter.ExporterException(mExportParams,"No	6
57320	Exporter.ExporterException(mExportParams,"ownCloud	4
57297	Exporter.ExporterException(mExportParams,dirResult.getLogMessage())	5
55268	Exporter.ExporterException(mExportParams,e)	9
57336	Exporter.ExporterException(mExportParams,result.getLogMessage())	4
20841	Exporter.buildExportFilename(ExportFormat.GNC_XML))	8
32787	Exporter.buildExportFilename(ExportFormat.OFX)	6
36019	Exporter.buildExportFilename(ExportFormat.QIF)	4
33557	Exporter.buildExportFilename(format))	6
35446	Exporter.buildExportFilename(mExportFormat)	17
55723	Exporter.buildExportFilename(mExportFormat,bookName)	2
28347	Exporter.buildExportFilename(mExportParams.getExportFormat()))	4
28422	Exporter.createExportFile(mExportParams.getExportFormat())	13
60287	Exporter.getBackupFolderPath()	6
60300	Exporter.getBackupFolderPath(book.getUID())	3
60242	Exporter.getExportFolderPath()	5
56705	Exporter.getExportFolderPath(BooksDbAdapter.getInstance().getActiveBookUID()))	7
60251	Exporter.getExportFolderPath(mExporter.mBookUID)	3
3134	Exporter.getExportTime(backupFile.getName())	9
51689	Exporter.getMostRecentBackupFile()	6
20307	ExporterAsyncTask	16
34128	ExporterAsyncTask(Activity	3
33826	ExporterAsyncTask(Context	7
62571	ExporterAsyncTask(GnuCashApplication.getAppContext()).execute(params).get()	5
58524	ExporterAsyncTask(getActivity()).execute(exportParameters)	4
8277	ExporterException	91
57088	ExporterException(@NonNull	8
25624	ExporterException(ExportParams	19
63653	ExporterException(mExportParams,"split	3
52533	ExporterException(mExportParams,e)	8
57116	ExporterException(mParameters,"split	7
21122	ExporterException(mParameters,e)	24
4244	ExporterException{	48
6458	ExporterTask	5
6948	ExporterTask(Context	5
6774	ExporterTask(getActivity()).execute(exportParameters)	8
28570	Exporteren</string>	12
31360	Exporter{	17
4493	Exportieren	42
6115	Exportieren</string>	30
6910	Exports	30
35206	Exports"/>	7
3917	Exports</string>	96
55581	Exports</string>+	1
25574	Exportziel	5
51833	Expose	13
21695	Express"/>	5
24669	Expression	22
24694	ExpressionBuilder	22
24696	ExpressionBuilder(amountString)	7
52823	ExpressionBuilder(amountText)	19
19006	Extends	27
52819	Extension	13
59	Extra	23
53029	Extract	8
31056	Extracts	21
44932	FADE_DURATION	8
27744	FAVORITES:	6
35626	FAVORITE_KEY	4
48279	FEATURE_ACTION_BAR	4
48336	FEATURE_ACTION_BAR_OVERLAY	4
48479	FEATURE_ACTION_MODE_OVERLAY	4
48613	FEATURE_INDETERMINATE_PROGRESS	4
48385	FEATURE_NO_TITLE	4
48493	FEATURE_PROGRESS	4
8537	FILE_PROVIDER_AUTHORITY	5
52809	FILL_COLORS	4
37845	FILTERING	4
47778	FIRST	4
26350	FITNESS	21
32563	FIXME	3
8226	FIXME:	111
48182	FLAG_ALWAYS_PERFORM_CLOSE	4
43800	FLAG_ALWAYS_PERFORM_CLOSE)	4
48132	FLAG_APPEND_TO_GROUP	4
42963	FLAG_APPEND_TO_GROUP)	8
53683	FLAG_CLEARED	2
37767	FLAG_DELEGATE	4
37883	FLAG_DELEGATE)	4
53406	FLAG_NOT_RECONCILED	2
47933	FLAG_PERFORM_NO_CLOSE	4
43700	FLAG_PERFORM_NO_CLOSE)	4
53696	FLAG_RECONCILED	2
41416	FLOAT_VARIANTS	4
50450	FOCUSED_STATE_SET	5
45082	FOCUS_AFTER_DESCENDANTS)	4
45613	FOCUS_BLOCK_DESCENDANTS	4
56142	FOND</item>	2
26437	FOR	26
31122	FOREIGN_KEY	2
33372	FORM_TYPE	8
32421	FORTNIGHTLY:	4
18568	FRAGMENT_ACCOUNTS_LIST	15
29887	FRAGMENT_EXPORT_DIALOG	7
28045	FRAGMENT_EXPORT_OFX	6
55107	FRAGMENT_NEW_ACCOUNT	7
30854	FRAGMENT_NEW_TRANSACTION	17
23487	FRAGMENT_TAG_RECURRENCE_PICKER	14
54110	FRAGMENT_TAG_RECURRENCE_PICKER)	3
23867	FRAGMENT_TAG_SPLITS_EDITOR	9
18978	FRAGMENT_TRANSACTIONS_LIST	11
42044	FRAME	4
1355	FROM	129
60604	FROM,	3
5131	FUND</item>	92
23308	Fabric.with(this,new	17
31661	Factor	12
48019	Factory	4
46254	FakeDialogPhoneWindow	4
46201	FakeDialogPhoneWindow(Context	4
29000	Falkland</item>	10
50709	Fall	5
33242	Fallback	3
16262	Fare	24
15201	Farge	15
28139	Fargekoding	4
25512	Faster	23
11407	Favorite	2
26429	Fax:	18
7628	Feature	7
2288	Feedback"	9
25658	Feedback-Bereich\n	7
54904	Feedback</string>	15
25877	Feedback\n	5
3606	Feedback]]></string>	115
5570	Fehler	17
25631	Fehlerbehebungen	7
30182	Fehlern\n	8
54954	Felipe	3
478	Fet	329
19163	Fet</name>	10
26265	Fet<ngewif@gmail.com>	4
20806	Fetch	17
18070	Fetches	19
30761	Fett")	7
22438	Feu	7
25562	Fgt	5
9166	Field	19
12786	Figure	19
28972	Fiji</item>	11
6658	File	129
25374	File(	10
28263	File(BACKUP_FOLDER_PATH	7
28377	File(BACKUP_FOLDER_PATH)	8
24901	File(BACKUP_FOLDER_PATH).mkdirs()	14
28345	File(EXPORT_FOLDER_PATH	5
28525	File(EXPORT_FOLDER_PATH).mkdirs()	5
6687	File(Environment.getExternalStorageDirectory()	33
59433	File(Exporter.BACKUP_FOLDER_PATH	4
32878	File(Exporter.BACKUP_FOLDER_PATH).listFiles()	12
25268	File(Exporter.BACKUP_FOLDER_PATH).mkdirs()	14
14265	File(Exporter.BASE_FOLDER_PATH	7
14086	File(Exporter.BASE_FOLDER_PATH)	6
59464	File(Exporter.EXPORT_FOLDER_PATH	4
34238	File(Exporter.EXPORT_FOLDER_PATH)	13
25297	File(Exporter.EXPORT_FOLDER_PATH).mkdirs()	11
14089	File(Exporter.LEGACY_BASE_FOLDER_PATH	3
14354	File(Exporter.LEGACY_BASE_FOLDER_PATH)	6
14225	File(Exporter.LEGACY_BASE_FOLDER_PATH,"README.txt")	6
60085	File(Exporter.getBackupFolderPath())	9
60255	File(Exporter.getBackupFolderPath()).listFiles()	6
60268	File(Exporter.getBackupFolderPath(BooksDbAdapter.getInstance().getActiveBookUID()))	5
55276	File(Exporter.getBackupFolderPath(bookUID)).listFiles()	6
60293	File(Exporter.getExportFolderPath())	5
31037	File(Exporter.getExportFolderPath(BooksDbAdapter.getInstance().getActiveBookUID()))	7
55837	File(Exporter.getExportFolderPath(mExporter.mBookUID))	9
56794	File(dst)	6
51439	File(dst,file.getName())	6
14609	File(dstDir,src.getName())	5
55652	File(exportedFile)	2
9536	File(exportedFilePath)	13
57292	File(exportedFilePath).delete()	7
31026	File(exportedFiles.get(0))	2
56744	File(fullPathName)).getName()	3
34622	File(getActivity().getExternalFilesDir(null)	2
34639	File(getActivity().getExternalFilesDir(null),filename)	5
63677	File(getExportCacheFilePath())	3
50154	File(getFilesDir(),"foo.jpg"))	4
29209	File(mContext.getCacheDir(),params.getExportFormat().name())	11
60271	File(mDb.getPath()).getName()	3
56764	File(mExportParams.getInternalExportPath())	4
7049	File(mExportParams.getTargetFilepath())	26
7338	File(mFilePath)	18
56759	File(mParameters.getInternalExportPath())	5
63383	File(mainDbPath)	4
14109	File(newBasePath,"Book	5
63845	File(newBasePath,activeBookName.replaceAll("[^a-zA-Z0-9.-]","_"))	3
14271	File(oldExportFolder,"backup")	9
14105	File(oldExportFolder,"backup").listFiles())	7
9396	File(path)	10
51636	File(path))	15
51738	File(path),new	10
56834	File(src)	6
55367	File(src).delete()	3
63427	File(src.getParent(),book.getUID())	4
63682	File(xmlFiles.get(0)))	3
31163	File</item>	4
6655	FileChannel	31
28441	FileFilter()	5
9882	FileInputStream	36
28307	FileInputStream(Exporter.getMostRecentBackupFile())	3
31769	FileInputStream(backupFile)	9
9885	FileInputStream(exportedFile)	15
55802	FileInputStream(file)	2
35493	FileInputStream(filepath)	8
55305	FileInputStream(src))	3
7281	FileInputStream(src).getChannel()	28
56825	FileInputStream(srcFile).getChannel()	6
8887	FileMetadata	3
51036	FileNotFoundException	5
50831	FileNotFoundException("Failed	5
50827	FileNotFoundException("More	5
50887	FileNotFoundException("No	7
50780	FileNotFoundException("Resource	5
51035	FileNotFoundException("Single	5
21722	FileOutputStream	22
51543	FileOutputStream(Exporter.buildBackupFile())	5
21323	FileOutputStream(Exporter.createBackupFile())	5
55329	FileOutputStream(backupFile)	3
6501	FileOutputStream(dst).getChannel()	28
56743	FileOutputStream(dstFile).getChannel()	3
20250	FileOutputStream(exportParams.getTargetFilepath()),"UTF-8"))	15
6884	FileOutputStream(file),"UTF-8"))	30
24833	FileOutputStream(getBackupFilePath())	11
55285	FileOutputStream(getBackupFilePath(bookUID))	6
63648	FileOutputStream(outputFile)	3
9820	FileProvider.getUriForFile(GnuCashApplication.getAppContext(),GnuCashApplication.FILE_PROVIDER_AUTHORITY,file)	2
33289	FileReader(file))	11
33424	FileReader(src))	16
57353	FileUtils.PATH_SEPARATOR	8
14281	FileWriter	21
21647	FileWriter(Exporter.createBackupFile())	6
20598	FileWriter(file)	9
33388	FileWriter(newFileName))	15
56949	FileWriter(pathParts[0]	5
14635	FileWriter(readmeFile)	6
28426	File[]	37
29097	Filipino</item>	12
27293	Fills	3
43727	Filter	16
50036	Filter.Delayer()	5
60451	FilterQueryProvider	3
2355	FilterQueryProvider()	13
60438	FilterResults	3
60525	FilterResults()	3
60404	Filterable,CursorFilter.CursorFilterClient	3
4127	Financial	64
58313	Financire	6
29586	Finanzmanager	6
13890	Find	29
28861	Finds	15
30492	Finish	16
1337	Finishes	37
33225	First	22
49984	First,check	5
41072	First,clear	4
41808	First,process	4
50918	First,see	5
40421	First,sort	4
8815	FirstRunWizardActivity	5
62059	FirstRunWizardActivityTest	3
62176	FirstRunWizardActivityTest()	3
62118	FirstRunWizardModel	4
62141	FirstRunWizardModel(Context	3
50744	FirstRunWizardModel(this)	7
20114	Fix	12
18591	Fixed	18
1280	Flag	165
38018	Flags	4
56082	Flera	2
40744	Float	8
41288	Float.class)	8
41229	Float.class,Double.class	4
41527	Float.class,Integer.class	4
49469	Float.floatToIntBits(another.weight)	4
49391	Float.floatToIntBits(other.weight))	4
49339	Float.floatToIntBits(weight)	4
49162	Float.parseFloat(parser.getAttributeValue(null,ATTRIBUTE_WEIGHT))	4
40429	FloatEvaluator	4
41185	FloatEvaluator()	8
40641	FloatKeyframe	8
41382	FloatKeyframe(float	4
41274	FloatKeyframe(fraction)	4
41695	FloatKeyframe(fraction,value)	4
41506	FloatKeyframe(getFraction(),mValue)	4
41219	FloatKeyframe)	4
40360	FloatKeyframeSet	8
40492	FloatKeyframeSet(FloatKeyframe...	4
41535	FloatKeyframeSet(floatKeyframes)	4
41587	FloatKeyframeSet(keyframes)	4
40353	FloatKeyframeSet(newKeyframes)	4
41309	FloatKeyframeSet)	4
41311	FloatKeyframeSet,	4
41235	FloatKeyframe[Math.max(numKeyframes,2)]	4
40968	FloatKeyframe[]	4
40612	FloatKeyframe[numKeyframes]	8
42609	FloatMath.ceil(after.bottom))	4
42532	FloatMath.ceil(after.right),	4
43258	FloatMath.floor(after.left),	4
42515	FloatMath.floor(after.top),	4
41893	FloatProperty	4
41883	FloatProperty)	4
41866	FloatPropertyValuesHolder	5
42180	FloatPropertyValuesHolder(Property	4
41734	FloatPropertyValuesHolder(String	5
41333	FloatPropertyValuesHolder(property,(FloatKeyframeSet)	4
41628	FloatPropertyValuesHolder(property,values)	4
41227	FloatPropertyValuesHolder(propertyName,(FloatKeyframeSet)	4
41644	FloatPropertyValuesHolder(propertyName,values)	4
55482	FloatingActionBu	5
9241	FloatingActionButton	27
26375	Floor	18
4476	Florin</item>	101
10897	Flow</string>	59
47856	Flush	4
36953	Focused	4
13508	Folder	13
3473	Fondos</string>	13
16293	Fonds</string>	11
11422	For	94
21658	Forbedrede	9
46249	Force	8
63540	ForceLoadContentObserver	3
63539	ForceLoadContentObserver()	2
59177	Foreign	6
7974	Forelpig	6
59037	Forint")	2
2101	FormActivity	25
465	FormType	25
1371	FormType.valueOf(formtypeString)	5
16626	Formaat</string>	13
4143	Format	26
25501	Format"	5
35559	Format"),	7
61363	Format:	3
5569	Format</string>	154
22748	Formato</string>	6
24003	Formats	43
36265	Formatted	27
5797	Formatting	3
28651	Forte</item>	10
45905	Found	4
26194	Foundation	18
523	Fragment	209
63553	Fragment-to-Activity	1
47877	Fragment.onOptionsItemSelected(MenuItem)	4
38537	FragmentActivity	5
39418	FragmentActivity)	5
193	FragmentManager	114
59383	FragmentPagerAdapter	3
19790	FragmentStatePagerAdapter	19
7936	FragmentTransaction	102
3935	Fragments	8
27518	FrameLayout	19
44291	FrameLayout(mContext)	4
40246	FrameLayout)	4
19960	Framework	12
55648	Framework.	2
56347	Framework\n	2
5710	Franc	113
58192	Franc"	9
59059	Franc")	2
5590	Franc</item>	127
16583	Frank</item>	7
26400	Franklin	18
26411	Free	18
61088	French	3
19696	Frequency	5
58073	Fuerte"	6
5531	Fuerte</item>	107
35495	Full	7
3780	Fully	32
19169	Function	7
31704	Funds	9
31718	Funds")	6
3386	Funds</string>	107
44068	G1,'!'	4
36266	GBP	6
46557	GC'ed	4
43595	GENERATED_ITEM_PADDING	4
36431	GIFTS_RECEIVED_INCOME_ACCOUNT_NAME	10
36317	GIFTS_RECEIVED_INCOME_ACCOUNT_UID	10
5008	GNC	12
5314	GNCA	19
28486	GNC_XML	8
28261	GNC_XML)	4
33521	GNC_XML:	12
26470	GNU	18
42798	GONE	30
42886	GONE)	25
46425	GONE,so	4
51413	GOOGLE_DRIVE:	17
32729	GROUP	23
8293	GROUPING_SMALLER_SLICES_THRESHOLD	16
60391	GROUPING_SMALLER_SLICES_THRESHOLD)	3
27	GUID	167
757	GUID")	3
36406	GUID's	4
52628	GUID,it	6
9698	GUID.	13
53294	GUIDs	10
55180	GZIPInputStream(pb))	3
21880	GZIPOutputStream	18
21402	GZIPOutputStream(bufferedOutputStream)	18
17609	Galanin	14
46127	Gallery	4
28903	Gana</item>	11
22828	Garis</string>	7
16734	Gartmann	6
5177	Gaveta	6
16669	Geert	15
25554	General	44
19219	General)\n	19
60337	GeneralClickAction(	3
52762	GeneralClickAction(Tap.SINGLE,	7
1411	GeneralPreferenceFragment	14
57168	GeneralPreferenceFragment())	5
638	GeneralPreferenceFragment.PASSCODE_REQUEST_CODE)	7
1641	GeneralPreferenceFragment.PASSCODE_REQUEST_CODE:	13
1159	GeneralPreferenceFragment.REQUEST_CHANGE_PASSCODE)	6
308	GeneralPreferenceFragment.REQUEST_CHANGE_PASSCODE:	6
1791	GeneralPreferenceFragment.REQUEST_DISABLE_PASSCODE:	6
1708	GeneralPreferenceFragment.class.getName().equals(fragmentName)	10
56498	Generalize	2
20657	Generate	20
51178	Generated	9
6844	Generates	40
30153	Geneste	8
29011	Gerais</string>	10
14918	German	8
25693	Gert	7
22273	Gesamtsumme	8
21985	Gesamtwert	8
7245	Get	77
63124	GetRemoteStatusOperation	3
63195	GetRemoteStatusOperation(mContext)	3
58726	GetRemoteStatusOperation)	7
58691	GetRemoteUserNameOperation	7
63154	GetRemoteUserNameOperation()	3
58727	GetRemoteUserNameOperation)	7
38778	Gets	52
28807	Gibraltar</item>	11
15778	Giro	14
39102	Give	11
23779	Given	11
34928	Giving	3
21783	Gjeld	8
21893	Gjeld</string>	6
25777	Global	6
43583	Gmail,Menu+1	4
12846	Gnc	19
20602	GncXML	7
20377	GncXmlExporter	17
31328	GncXmlExporter(ExportParams	14
51131	GncXmlExporter(exportParams)	4
20829	GncXmlExporter(exportParams,db)	16
35433	GncXmlExporter(mExportParams)	11
52383	GncXmlExporter(mExportParams,mDb)	7
57347	GncXmlExporter(new	7
56830	GncXmlExporter(params).generateExport()	4
28451	GncXmlExporter(params).generateExport())	5
21678	GncXmlExporter(params).generateExport(fileWriter)	4
21742	GncXmlExporter(params).generateExport(outputStreamWriter)	8
24747	GncXmlExporter(params).generateExport(writer)	9
20632	GncXmlExporter.createBackup()	52
3956	GncXmlHandler	26
3646	GncXmlHandler()	17
51129	GncXmlHandler(){	4
35744	GncXmlHandler(Context	9
4006	GncXmlHandler(SQLiteDatabase	15
3108	GncXmlHandler(boolean	7
35647	GncXmlHandler(context)	7
51243	GncXmlHandler(context,true)	5
3508	GncXmlHandler(db)	11
3624	GncXmlHandler(false,db)	4
2225	GncXmlHandler(true)	4
35750	GncXmlHandler.parse(context,inputStreams[0])	4
35508	GncXmlHandler.parse(db,inputStream)	4
7526	GncXmlHandlerTest	3
5054	GncXmlHelper	8
33711	GncXmlHelper#DATE_FORMATTER	2
33698	GncXmlHelper#TAG_GDATE	2
53007	GncXmlHelper.ATTR_KEY_TYPE,GncXmlHelper.ATTR_VALUE_GUID)	2
53267	GncXmlHelper.ATTR_KEY_VERSION,GncXmlHelper.BOOK_VERSION)	2
53433	GncXmlHelper.ATTR_VALUE_FRAME	2
5225	GncXmlHelper.DATE_FORMATTER.parse(characterString).getTime()	2
62573	GncXmlHelper.KEY_COLOR:	4
6258	GncXmlHelper.KEY_CREDIT_FORMULA	9
58715	GncXmlHelper.KEY_CREDIT_FORMULA:	7
59317	GncXmlHelper.KEY_CREDIT_NUMERIC:	2
5182	GncXmlHelper.KEY_DEBIT_FORMULA)	9
59308	GncXmlHelper.KEY_DEBIT_FORMULA:	6
59257	GncXmlHelper.KEY_DEBIT_NUMERIC:	2
62583	GncXmlHelper.KEY_DEFAULT_TRANSFER_ACCOUNT:	4
58674	GncXmlHelper.KEY_EXPORTED:	5
54400	GncXmlHelper.KEY_FAVORITE,Boolean.toString(mIsFavorite)))	4
20404	GncXmlHelper.KEY_FAVORITE,Boolean.toString(mIsFavorite),GncXmlHelper.ATTR_VALUE_STRING))	9
62600	GncXmlHelper.KEY_FAVORITE:	4
62585	GncXmlHelper.KEY_NOTES:	4
53496	GncXmlHelper.KEY_PLACEHOLDER:	6
58712	GncXmlHelper.KEY_SPLIT_ACCOUNT:	5
58714	GncXmlHelper.KEY_SPLIT_ACCOUNT_SLOT:	3
31261	GncXmlHelper.TAG_ACCOUNT:	13
25784	GncXmlHelper.TAG_ACCT_DESCRIPTION:	5
53465	GncXmlHelper.TAG_ACCT_ID:	4
53620	GncXmlHelper.TAG_ACCT_NAME:	2
53647	GncXmlHelper.TAG_ACCT_TYPE:	2
53048	GncXmlHelper.TAG_BUDGET)	2
53446	GncXmlHelper.TAG_BUDGET:	2
53451	GncXmlHelper.TAG_BUDGET_DESCRIPTION)	2
53455	GncXmlHelper.TAG_BUDGET_DESCRIPTION:	2
53256	GncXmlHelper.TAG_BUDGET_ID)	3
53454	GncXmlHelper.TAG_BUDGET_NAME)	2
53449	GncXmlHelper.TAG_BUDGET_NAME:	2
53593	GncXmlHelper.TAG_BUDGET_NUM_PERIODS)	2
53585	GncXmlHelper.TAG_BUDGET_NUM_PERIODS:	2
53467	GncXmlHelper.TAG_BUDGET_RECURRENCE)	2
53463	GncXmlHelper.TAG_BUDGET_RECURRENCE:	2
53385	GncXmlHelper.TAG_BUDGET_SLOTS:	2
10801	GncXmlHelper.TAG_COMMODITY_ID:	17
23991	GncXmlHelper.TAG_COMMODITY_SPACE:	6
5279	GncXmlHelper.TAG_DATE:	4
62595	GncXmlHelper.TAG_DATE_ENTERED:	2
51739	GncXmlHelper.TAG_DATE_POSTED:	6
5345	GncXmlHelper.TAG_GDATE:	4
53531	GncXmlHelper.TAG_GNC_RECURRENCE:	2
53650	GncXmlHelper.TAG_NAME:	4
23995	GncXmlHelper.TAG_PARENT_UID:	10
23922	GncXmlHelper.TAG_PRICE:	5
23596	GncXmlHelper.TAG_PRICE_COMMODITY:	4
24038	GncXmlHelper.TAG_PRICE_CURRENCY:	4
23368	GncXmlHelper.TAG_PRICE_ID:	4
23790	GncXmlHelper.TAG_PRICE_SOURCE:	4
23418	GncXmlHelper.TAG_PRICE_TYPE:	4
23488	GncXmlHelper.TAG_PRICE_VALUE:	4
23890	GncXmlHelper.TAG_RECURRENCE_PERIOD:	4
60063	GncXmlHelper.TAG_RX_MULT:	5
7412	GncXmlHelper.TAG_RX_PERIOD_TYPE:	7
6225	GncXmlHelper.TAG_RX_START:	6
25044	GncXmlHelper.TAG_SCHEDULED_ACTION:	19
53527	GncXmlHelper.TAG_SLOT:	2
53379	GncXmlHelper.TAG_SLOT_KEY:	4
51004	GncXmlHelper.TAG_SLOT_VALUE:	8
32376	GncXmlHelper.TAG_SPLIT_ACCOUNT:	11
63903	GncXmlHelper.TAG_SPLIT_ID:	2
12963	GncXmlHelper.TAG_SPLIT_MEMO:	7
12865	GncXmlHelper.TAG_SPLIT_QUANTITY:	11
12841	GncXmlHelper.TAG_SPLIT_VALUE:	8
25619	GncXmlHelper.TAG_SX_AUTO_CREATE:	4
25479	GncXmlHelper.TAG_SX_ENABLED:	5
62584	GncXmlHelper.TAG_SX_END:	2
4944	GncXmlHelper.TAG_SX_ID:	4
5891	GncXmlHelper.TAG_SX_LAST:	4
58709	GncXmlHelper.TAG_SX_NAME:	3
25612	GncXmlHelper.TAG_SX_NUM_OCCUR:	9
62577	GncXmlHelper.TAG_SX_START:	2
4472	GncXmlHelper.TAG_SX_TEMPL_ACCOUNT:	4
58703	GncXmlHelper.TAG_SX_TEMPL_ACTION:	3
1912	GncXmlHelper.TAG_TEMPLATE_TRANSACTION	7
5702	GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS:	7
31363	GncXmlHelper.TAG_TRANSACTION:	17
6231	GncXmlHelper.TAG_TRN_DESCRIPTION:	4
31284	GncXmlHelper.TAG_TRN_SPLIT:	20
53422	GncXmlHelper.TAG_TRX_ID:	4
5705	GncXmlHelper.TAG_TS_DATE:	2
53716	GncXmlHelper.TAG_TYPE:	4
23721	GncXmlHelper.formatDate(Timestamp.valueOf(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_DATE))).getTime())	7
52589	GncXmlHelper.formatDate(TimestampHelper.getTimestampForUtcString(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_DATE))).getTime())	5
52636	GncXmlHelper.formatDate(TimestampHelper.getTimestampFromUtcString(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_DATE))).getTime())	4
6071	GncXmlHelper.formatDate(cursor.getLong(cursor.getColumnIndexOrThrow("trans_time")))	7
4721	GncXmlHelper.formatDate(timeEntered.getTime())	9
36026	GncXmlHelper.formatSplitAmount(bigDecimal,Currency.getInstance("EUR"))	7
36177	GncXmlHelper.formatSplitAmount(bigDecimal,Currency.getInstance("USD"))	7
36247	GncXmlHelper.formatSplitAmount(bigDecimal,euroCommodity)	4
36216	GncXmlHelper.formatSplitAmount(bigDecimal,usdCommodity)	4
59264	GncXmlHelper.formatSplitAmount(splitAmount,trxCurrency)	6
32416	GncXmlHelper.getNumberFormatForTemplateSplits()	5
32335	GncXmlHelper.parseMoney(characterString)	5
4618	GncXmlHelper.parseMoney(q)	4
58861	GncXmlHelper.parseSplitAmount("1.234,50/100")	3
58876	GncXmlHelper.parseSplitAmount("123.45")	3
8304	GncXmlHelper.parseSplitAmount(characterString)	14
33067	GncXmlHelper.parseSplitAmount(characterString).abs()	5
5493	GncXmlHelper.parseSplitAmount(q)	10
58846	GncXmlHelper.parseSplitAmount(splitAmount)	3
58838	GncXmlHelperTest	3
35638	GncXmlImportTask	4
35930	GncXmlImportTask(AccountsActivity.this).execute(accountFileInputStream)	4
35664	GncXmlImportTask(Context	4
35846	GncXmlImportTask(getActivity()).execute(accountFileInputStream)	4
35856	GncXmlImportTask(this).execute(accountInputStream)	4
28258	GncXmlImportTask(this).execute(inputStream)	5
32755	GncXmlImporter	5
13354	GncXmlImporter.parse(GnuCashApplication.getAppContext().getResources().openRawResource(R.raw.default_accounts))	26
19426	GncXmlImporter.parse(accountInputStream)	15
25069	GncXmlImporter.parse(context,inputStreams[0])	6
14017	GncXmlImporter.parse(context.getResources().openRawResource(R.raw.default_accounts))	6
58533	GncXmlImporter.parse(db,inputStream)	6
24997	GncXmlImporter.parse(inputStreams[0])	6
18953	Gnral)\n	7
10769	Gnrales</string>	7
657	GnuCash	342
57317	GnuCash"	6
51804	GnuCash,read	3
5708	GnuCash-Anwendung	25
14942	GnuCash-Daten</string>	11
4420	GnuCash-Konten	14
5405	GnuCash-Kontenstruktur	19
56460	GnuCash-XML</string>	2
14703	GnuCash-data</string>	15
56384	GnuCash-konton</string>	2
56224	GnuCash-skrivbord</string>	2
26253	GnuCash-toepassing	13
2334	GnuCash.	88
28026	GnuCash.</string>	19
7592	GnuCash.\n	23
11699	GnuCash.\nBuat	9
16057	GnuCash.\nCr&#233	8
12218	GnuCash.\nCreare	22
7553	GnuCash.\nCreate	109
12784	GnuCash.\nCreeu	10
11379	GnuCash.\nCrez	19
7983	GnuCash.\nCriar	15
12349	GnuCash.\nCrie	33
12920	GnuCash.\nOpprett	20
56246	GnuCash.\nSkapa	2
13037	GnuCash.\nUtwrz	19
22168	GnuCash.\nVytvote	5
17935	GnuCash.\n\n	33
10170	GnuCash.\n\nLes	14
12708	GnuCash</p>	7
2626	GnuCash</string>	241
10067	GnuCashApplication	10
59407	GnuCashApplication#onCreate()	3
13590	GnuCashApplication.PASSCODE_SESSION_INIT_TIME	24
23380	GnuCashApplication.SESSION_TIMEOUT	7
50889	GnuCashApplication.activateBook(bookUID)	5
12944	GnuCashApplication.context	32
53907	GnuCashApplication.darken(android.graphics.Color.HSVToColor(new	2
24682	GnuCashApplication.getAccountsDbAdapter()	16
30704	GnuCashApplication.getAccountsDbAdapter().addAccount(account)	3
30717	GnuCashApplication.getAccountsDbAdapter().deleteAllRecords()	3
31135	GnuCashApplication.getAccountsDbAdapter().getAllOpeningBalanceTransactions()	3
31007	GnuCashApplication.getAccountsDbAdapter().getUID(dstAccountId)	2
31199	GnuCashApplication.getAccountsDbAdapter().isFavoriteAccount(mAccountUID)	2
51108	GnuCashApplication.getAccountsDbAdapter().isFavoriteAccount(mAccountsDbAdapter.getAccountID(mAccountUID))	3
30963	GnuCashApplication.getAccountsDbAdapter().updateAllAccounts(DatabaseSchema.AccountEntry.COLUMN_CURRENCY,currencyCode)	3
60038	GnuCashApplication.getActiveDb()	6
8434	GnuCashApplication.getAppContext()	93
58395	GnuCashApplication.getAppContext().deleteDatabase(bookUID)	6
55273	GnuCashApplication.getAppContext().getContentResolver().openOutputStream(Uri.parse(backupFile))	3
58207	GnuCashApplication.getAppContext().getDatabasePath(bookUID)	3
51489	GnuCashApplication.getAppContext().getExternalFilesDir(null)	5
14560	GnuCashApplication.getAppContext().getExternalFilesDir(null).getAbsolutePath()	3
62272	GnuCashApplication.getAppContext().getFilesDir()	9
7712	GnuCashApplication.getAppContext().getResources()	22
60514	GnuCashApplication.getAppContext().getResources().getColor(R.color.theme_primary)	3
31461	GnuCashApplication.getAppContext().getSharedPreferences(bookUID,Context.MODE_PRIVATE)	2
7221	GnuCashApplication.getAppContext().getString(R.string.imbalance_account_name)	35
20349	GnuCashApplication.getAppContext().getSystemService(Context.ALARM_SERVICE)	4
59333	GnuCashApplication.getAppContext().getSystemService(Context.CONNECTIVITY_SERVICE)	2
60119	GnuCashApplication.getAppContext().getSystemService(Context.SEARCH_SERVICE)	3
63460	GnuCashApplication.getBooksDbAdapter()	4
55409	GnuCashApplication.getBooksDbAdapter().setActive(bookUID)	2
53228	GnuCashApplication.getBudgetAmountsDbAdapter()	2
53172	GnuCashApplication.getBudgetDbAdapter()	2
61502	GnuCashApplication.getCommoditiesDbAdapter()	3
3975	GnuCashApplication.getDefaultCurrency()	7
468	GnuCashApplication.getDefaultCurrencyCode()	79
61590	GnuCashApplication.getPricesDbAdapter()	3
53083	GnuCashApplication.getRecurrenceDbAdapter()	2
2885	GnuCashApplication.getScheduledEventDbAdapter()	36
30860	GnuCashApplication.getSplitsDbAdapter()	6
30718	GnuCashApplication.getTransactionDbAdapter()	12
30706	GnuCashApplication.getTransactionDbAdapter().addTransaction(transaction)	3
55385	GnuCashApplication.initializeDatabaseAdapters()	2
62131	GnuCashApplication.isCrashlyticsEnabled()	3
30031	GnuCashApplication.isDoubleEntryEnabled()	11
3818	GnuCashApplication.loadBook(bookUID)	10
19464	GnuCashApplication.loadBook(mImportedBookUID)	8
55375	GnuCashApplication.loadBook(testBookUID)	4
58583	GnuCashApplication.setDefaultCurrencyCode("JPY")	8
64240	GnuCashApplication.setDefaultCurrencyCode(currencyCode)	3
64239	GnuCashApplication.setDefaultCurrencyCode(mCurrencyCode)	3
32768	GnuCashApplication.setDefaultCurrencyCode(mostAppearedCurrency)	6
57018	GnuCashApplication.setDefaultCurrencyCode(newValue.toString())	10
30892	GnuCashApplication.shouldSaveOpeningBalances(false)	26
55311	GnuCashApplication.startScheduledActionExecutionService(GnuCashApplication.getAppContext())	13
55368	GnuCashApplication.startScheduledActionExecutionService(context)	3
24057	GnuCashApplication.startScheduledActionExecutionService(this)	6
62545	GnuCashApplication.startScheduledEventExecutionService()	3
20757	GnuCashApplication.startScheduledEventExecutionService(GnuCashApplication.getAppContext())	8
59584	GnuCashApplication.startScheduledEventExecutionService(context)	3
20950	GnuCashApplication.startScheduledEventExecutionService(this)	3
28028	GnuCash\n	8
12184	GnuCassh.\n	10
27974	GnuCcash</string>	7
3548	Gnucash	150
55041	Gnucash)	4
4700	Gnucash-Daten</string>	5
14826	Gnucash-data</string>	13
25339	Gnucash.	6
7654	Gnucash.\n	42
7885	Gnucash.\nCr&#233	14
8323	Gnucash.\nCrea	13
7724	Gnucash.\nCreare	13
12763	Gnucash.\nCreate	10
8188	Gnucash.\nCree	40
8482	Gnucash.\nOpprett	15
2757	Gnucash</string>	131
26892	GnucashAccountXmlHandler	9
27415	GnucashAccountXmlHandler(Context	12
27045	GnucashAccountXmlHandler(context)	9
3472	GnucashAccountXmlHandler.parse(context,context.getContentResolver().openInputStream(uris[0]))	5
2743	GnucashAccountXmlHandler.parse(context,inputStreams[0])	5
30575	GnucashAccountXmlHandler.parse(getActivity(),getActivity().getContentResolver().openInputStream(data.getData()))	7
30532	GnucashAccountXmlHandler.parse(this,getContentResolver().openInputStream(data.getData()))	10
28804	GnucashAndroidTestRunner	3
25324	GnucashMobile	10
57562	GnucashMobile</string>	3
50778	GnucashTestRunner	4
50955	GnucashTestRunner(Class<?>	9
37472	Go	9
4238	Going	6
5496	Google	181
17897	Google+</string>	22
12762	Google</item>	9
58606	Google</string>	4
25072	GoogleApiClient	30
51634	GoogleApiClient.Builder(context)	7
51678	GoogleApiClient.ConnectionCallbacks()	7
51621	GoogleApiClient.OnConnectionFailedListener()	7
51653	GoogleDrive	9
51733	GooglePlayServicesUtil.getErrorDialog(connectionResult.getErrorCode(),(Activity)	7
8510	Graa	20
33192	GraphicalView	6
37049	Gravity	9
39255	Gravity.BOTTOM,	4
44982	Gravity.BOTTOM:	4
45740	Gravity.CENTER	4
38855	Gravity.CENTER,	4
45361	Gravity.CENTER_HORIZONTAL	4
45756	Gravity.CENTER_HORIZONTAL)	4
42958	Gravity.CENTER_HORIZONTAL,0,height)	4
38883	Gravity.CENTER_HORIZONTAL,to	4
45747	Gravity.CENTER_HORIZONTAL:	8
39208	Gravity.CENTER_VERTICAL	16
47945	Gravity.CENTER_VERTICAL)	4
39086	Gravity.CENTER_VERTICAL,	4
45417	Gravity.CENTER_VERTICAL:	4
38947	Gravity.FILL,	4
39065	Gravity.FILL_HORIZONTAL,	4
38870	Gravity.FILL_VERTICAL,	4
45576	Gravity.HORIZONTAL_GRAVITY_MASK	4
47835	Gravity.HORIZONTAL_GRAVITY_MASK)	4
39287	Gravity.LEFT	12
39226	Gravity.LEFT,	4
45629	Gravity.LEFT:	4
43766	Gravity.NO_GRAVITY)	4
39068	Gravity.NO_GRAVITY,	4
45675	Gravity.RIGHT	4
39206	Gravity.RIGHT,	8
45594	Gravity.RIGHT:	8
39000	Gravity.TOP,	4
44985	Gravity.TOP:	4
45081	Gravity.VERTICAL_GRAVITY_MASK	4
22198	Gre	8
51496	Great,right?	6
24036	GregorianCalendar(	18
63564	GregorianCalendar()	4
23760	GregorianCalendar(0,0,0,hourOfDay,minute)	12
24021	GregorianCalendar(year,monthOfYear,dayOfMonth)	11
35899	GregorianCalendar.getInstance()	5
31805	GridLayoutManager	5
31530	GridLayoutManager(getActivity(),2)	5
46130	GridView	4
70	Group	11
1515	GroupInterval	29
1639	GroupInterval.MONTH	27
1132	GroupInterval.QUARTER	3
1830	GroupInterval.YEAR	3
34505	GroupInterval.YEAR)	7
24844	Groups	10
28777	Guiana</item>	11
38296	Guides</h3>	21
58352	Guilder"	9
6276	Guilder</item>	101
29130	Guine</item>	10
62465	Guinea</item>	6
3046	H0NEYCOMB,	11
7564	HACK:	8
62294	HAVE	3
62368	HAVING	3
25103	HEAD'.execute().text.trim()	4
16021	HEURE</string>	13
11826	HH:mm	87
6644	HH:mm")	14
5658	HH:mm:ss	13
52496	HH:mm:ss")	2
52717	HH:mm:ss'	2
52512	HH:mm:ss.SSS")	2
52526	HH:mm:ss.SSS'	2
42691	HIDDEN	8
43295	HIDDEN)	8
9147	HIDE_ACCOUNT_BALANCE_IN_WIDGET	2
48680	HISTORY_FILE_EXTENSION	6
45933	HIT")	4
60614	HOLDERS	3
30796	HONEYCOMB	4
15874	HORA</string>	42
47319	HORIZONTAL:	5
34835	HOUR,DAY,WEEK,MONTH,YEAR	2
34871	HOUR:	2
34794	HOUR_MILLIS	4
16957	Haanen	9
15181	Haben</string>	10
28658	Haitiano</item>	10
48412	Hander	4
25489	Handhabung	5
33251	Handle	22
2379	Handler	55
40237	Handler()	16
60415	Handler())	3
25921	Handler().postDelayed(new	9
48201	Handler).	4
18910	Handles	26
31687	Haptic	17
60574	Harl	3
42388	HasPermanentMenuKey	4
19538	HashMap()	6
755	HashMap<>()	45
54333	HashMap<>(mAccountList.size())	8
62666	HashMap<AccountType,List<String>>()	9
24992	HashMap<AccountType,Long>()	12
40944	HashMap<Animator,Node>	4
40710	HashMap<Animator,Node>()	5
41818	HashMap<Class,HashMap<String,Integer>>	4
41770	HashMap<Class,HashMap<String,Integer>>()	4
41548	HashMap<Class,HashMap<String,Method>>	5
41472	HashMap<Class,HashMap<String,Method>>()	4
37785	HashMap<Implementation,Class<?	4
19287	HashMap<Integer,Long>	8
18885	HashMap<Integer,Long>()	8
13376	HashMap<Integer,Refreshable>()	4
40534	HashMap<Node,Node>	4
40557	HashMap<Node,Node>()	4
2155	HashMap<String,Account>	25
2014	HashMap<String,Account>()	10
3497	HashMap<String,Account>(mAccountList.size())	6
48509	HashMap<String,ActivityChooserModel>()	4
49487	HashMap<String,ActivityResolveInfo>()	4
42139	HashMap<String,Integer>	5
41828	HashMap<String,Integer>()	5
42090	HashMap<String,Method>	4
41961	HashMap<String,Method>()	4
42115	HashMap<String,PropertyValuesHolder>	4
41912	HashMap<String,PropertyValuesHolder>(numValues)	7
3071	HashMap<String,String>	12
35406	HashMap<String,String>()	5
2571	HashMap<String,String>(mAccountList.size())	6
38788	HashMap<android.view.MenuItem,MenuItemImpl>	5
38872	HashMap<android.view.MenuItem,MenuItemImpl>()	4
53663	HashSet<>()	2
39895	HashSet<OnMenuVisibilityListener>(1)	4
42685	HashSet<View_OnAttachStateChangeListener>()	4
42184	Have	4
43475	Header	10
5209	Header"	3
45842	Height	4
5772	Helena	114
28624	Helena</item>	11
9512	Helper	27
30684	Hence	11
4808	Hence,there	3
38053	Here	8
58359	Herzegovina	6
10252	Hide	33
31918	Hides	8
5174	Hierarchie	19
30078	Highlight	35
30609	Highlights	9
25561	Hilfe	7
48157	Hint	4
48431	Historical	7
49451	HistoricalRecord	5
49297	HistoricalRecord(ComponentName	4
48840	HistoricalRecord(String	4
49262	HistoricalRecord(activity,time,	4
48902	HistoricalRecord(chosenName,	4
49428	HistoricalRecord(defaultName,	4
49103	HistoryLoader	4
49294	HistoryLoader())	4
49475	HistoryPersister	4
48846	HistoryPersister())	4
21206	Hjelp	9
62433	Hngaro</item>	6
28803	Holandesas</item>	11
26761	Hold	3
9653	Holds	12
38119	Holo	4
37890	Home	4
44993	HomeView	4
46191	HomeView(Context	4
2783	Honeycomb	12
15867	Hong	25
37483	Horizontal	4
42364	HorizontalScrollView	4
34746	Hours.hours(multiple)	2
34833	Hours.hoursBetween(startDate,endDate).getHours()	2
19877	How	25
35777	However	6
40999	However,note	4
42211	However,this	4
27767	HsvColorComparator	3
5024	I	31
37809	I'm	5
48450	I.e.	4
35012	IBinder	4
950	ID	264
35565	ID)	9
44488	ID).	4
30783	ID,	24
34625	ID,it	5
3316	ID,they	6
27577	ID.	36
51045	ID:	5
29654	ID</string>	4
8843	ID_MANAGE_BOOKS	5
63939	ID_MANAGE_BOOKS){	5
30934	IDentifier	3
19121	IDs	40
50285	IDs.	5
21741	IF	29
52097	IFNULL	15
37323	IME	10
46750	IME.	4
49365	IME_OPTION_NO_MICROPHONE	5
38040	IMPLEMENTATIONS	4
38056	IMPLEMENTATIONS.put(impl,implementationClass)	4
37793	IMPLEMENTATIONS.values().remove(implementationClass)	4
60513	IMPLIED,INCLUDING	3
2952	IN	79
1837	INCOME	8
13687	INCOME,EXPENSE(TransactionType.DEBIT),PAYABLE,RECEIVABLE(TransactionType.DEBIT),EQUITY,CURRENCY,	7
19714	INCOME:	19
53188	INDEX	14
13694	INDEX_FAVORITE_ACCOUNTS_FRAGMENT	5
27799	INDEX_FAVORITE_ACCOUNTS_FRAGMENT:	6
27733	INDEX_RECENT_ACCOUNTS_FRAGMENT	3
27773	INDEX_RECENT_ACCOUNTS_FRAGMENT:	6
54686	INDEX_SCHEDULED_EXPORTS	6
54663	INDEX_SCHEDULED_EXPORTS:	3
54600	INDEX_SCHEDULED_TRANSACTIONS	6
54645	INDEX_SCHEDULED_TRANSACTIONS:	3
20061	INDEX_SUB_ACCOUNTS_FRAGMENT	3
13752	INDEX_SUB_ACCOUNTS_FRAGMENT:	11
27731	INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT	3
27887	INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT:	6
19667	INDEX_TRANSACTIONS_FRAGMENT	3
19612	INDEX_TRANSACTIONS_FRAGMENT:	10
19405	INDEX_UID	23
41957	INFINITE	4
42477	INFINITE)	4
40558	INFINITE.</p>	4
12587	INFO	20
14476	INNER	25
381	INSERT	12
41680	INTEGER_VARIANTS	4
56941	INTERNAL_CURRENCY_PREFIX	4
14305	INTO	42
48535	INVALID_INDEX	11
50518	INVALID_INDEX)	9
38896	INVALID_POSITION	13
39996	INVALID_POSITION)	4
46366	INVALID_ROW_ID	5
46409	INVALID_ROW_ID)	4
45606	INVISIBLE)	8
31361	IOE	13
31439	IOEx	7
5676	IOExcept	16
6454	IOException	133
63835	IOException(String.format("Target	3
63846	IOException(msg)	3
7218	IOException{	39
19175	IS	58
806	IS"	349
60495	IS",WITHOUT	3
61319	ISIN/CUSIP	3
767	ISO	109
36221	ISO4217	23
44584	IS_ACTION	5
44276	IS_ACTION)	4
44110	IS_FROYO	4
46237	IS_GINGERBREAD	5
43955	IS_HONEYCOMB	16
44880	ITEM_LAYOUT	4
63985	ITEM_TYPE_COMPACT	2
63992	ITEM_TYPE_FULL	2
48924	ITEM_VIEW_TYPE_ACTIVITY	4
48983	ITEM_VIEW_TYPE_ACTIVITY:	4
49189	ITEM_VIEW_TYPE_COUNT	4
49285	ITEM_VIEW_TYPE_FOOTER	4
49461	ITEM_VIEW_TYPE_FOOTER)	4
49453	ITEM_VIEW_TYPE_FOOTER:	4
46052	ITEM_VIEW_TYPE_HEADER_OR_FOOTER	4
46205	ITEM_VIEW_TYPE_IGNORE	4
37571	Icon	4
50017	Iconifies	5
37199	Icons	5
46293	IcsAbsSpinner	8
45867	IcsAbsSpinner(Context	4
46194	IcsAbsSpinner.RecycleBin	4
46033	IcsAdapterView(Context	4
45457	IcsAdapterView.OnItemSelectedListener	8
44915	IcsAdapterView.OnItemSelectedListener()	4
45870	IcsAdapterView.this.onRestoreInstanceState(mInstanceState)	4
46137	IcsAdapterView.this.onSaveInstanceState()	4
46022	IcsAdapterView<SpinnerAdapter>	4
46439	IcsAdapterView<T	4
45848	IcsColorDrawable	5
45520	IcsColorDrawable(color)	5
46503	IcsColorDrawable(int	5
44154	IcsLinearLayout	21
46723	IcsLinearLayout(Context	5
47859	IcsLinearLayout.LayoutParams(	4
47643	IcsLinearLayout.LayoutParams(0,	4
44515	IcsListPopupWindow	16
46694	IcsListPopupWindow(Context	4
49319	IcsListPopupWindow(getContext())	4
44483	IcsListPopupWindow(mContext,null,R.attr.popupMenuStyle)	4
39107	IcsProgressBar	15
46816	IcsProgressBar#onSaveInstanceState()	4
47231	IcsProgressBar(Context	4
45308	IcsProgressBar(mContext,null,0,mIndeterminateProgressStyle)	4
45616	IcsProgressBar(mContext,null,0,mProgressStyle)	4
45145	IcsSpinner	10
47687	IcsSpinner(Context	4
48078	IcsSpinner(getContext(),null,	4
45009	IcsSpinner(mContext,null,	4
37013	IcsSpinner.	5
47973	IcsSpinner.this.getPaddingLeft()	4
47875	IcsSpinner.this.getPaddingRight()	4
47946	IcsSpinner.this.getWidth()	4
48155	IcsSpinner.this.setSelection(position)	4
47657	IcsView	4
47999	IcsView()	4
18398	Id	38
30953	Id,you	8
29404	Id:	17
53191	Ideally,the	3
28202	Ideen	11
6993	Identifier	84
35312	Identifier.	5
28692	Iemen</item>	10
961	If	254
1285	Ignore	17
46107	Ignored.	4
39639	Ignoring	4
5800	Ihre	19
62523	Ihren	3
28074	Il	7
28716	Ilhas	11
56997	IllegalAccessException	3
23631	IllegalArgumentException	35
24099	IllegalArgumentException("Account	22
42213	IllegalArgumentException("Animators	4
52235	IllegalArgumentException("Budgets	4
26491	IllegalArgumentException("Cannot	14
38555	IllegalArgumentException("Class	4
51827	IllegalArgumentException("Column	4
64129	IllegalArgumentException("Commodity	4
33990	IllegalArgumentException("Currency	7
14175	IllegalArgumentException("Database	27
34009	IllegalArgumentException("Failed	7
32892	IllegalArgumentException("GUID	6
296	IllegalArgumentException("Invalid	12
18484	IllegalArgumentException("No	18
26293	IllegalArgumentException("Only	17
26210	IllegalArgumentException("Operation	14
31295	IllegalArgumentException("ROOT	4
26203	IllegalArgumentException("Record	5
44530	IllegalArgumentException("SHOW_AS_ACTION_ALWAYS,SHOW_AS_ACTION_IF_ROOM,"	4
14084	IllegalArgumentException("Source	6
33676	IllegalArgumentException("The	9
24218	IllegalArgumentException("Transaction	5
717	IllegalArgumentException("Transparent	6
54662	IllegalArgumentException("Unable	3
24370	IllegalArgumentException("Unique	4
40319	IllegalArgumentException("Unknown	6
24578	IllegalArgumentException("account	16
40474	IllegalArgumentException("duration	4
51172	IllegalArgumentException("fullName	6
23615	IllegalArgumentException("guid	4
43510	IllegalArgumentException("order	4
24584	IllegalArgumentException("row	5
24283	IllegalArgumentException("split	9
24474	IllegalArgumentException("transacion	3
24587	IllegalArgumentException("transaction	3
49269	IllegalArgumentException()	4
53293	IllegalArgumentException(LOG_TAG	2
25284	IllegalArgumentException(String.format("Column	3
25148	IllegalArgumentException(String.format("Record	2
24449	IllegalArgumentException(String.format("account	3
24445	IllegalArgumentException(String.format("rowId	5
33292	IllegalArgumentException(file.getPath()	11
32607	IllegalArgumentException(mTableName	7
33548	IllegalArgumentException(src.getPath()	15
58869	IllegalArgumentException)	4
1197	IllegalArgumentException.class)	31
53491	IllegalArgumentException{	2
49278	IllegalStateException	4
40212	IllegalStateException(	4
39997	IllegalStateException("Action	4
41141	IllegalStateException("Circular	4
44695	IllegalStateException("MenuPopupHelper	4
38506	IllegalStateException("More	4
39259	IllegalStateException("Native	4
38673	IllegalStateException("No	9
49059	IllegalStateException("SearchView	5
48295	IllegalStateException("The	4
44475	IllegalStateException("Wrapped	4
39723	IllegalStateException("You	4
60467	IllegalStateException("couldn't	3
60645	IllegalStateException("this	3
38844	IllegalStateException(getClass().getSimpleName()	12
23916	ImageButton	41
49787	ImageSpan(searchIcon),1,2,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE)	5
2258	ImageView	93
27150	ImageView(getContext())	7
10126	Imbalance	23
51557	Imbriquation	6
45861	Impelmenters	4
43211	Implement	4
38097	Implementation	20
37846	Implementation.DEFAULT_API)	4
45859	Implementers	4
42863	Implementors	4
47767	Implements	9
7552	Import	21
18778	ImportAsyncTask	10
3445	ImportAsyncTask(AccountsActivity.this).execute(accountFileInputStream)	6
19205	ImportAsyncTask(Activity	17
34131	ImportAsyncTask(Context	4
31616	ImportAsyncTask(SettingsActivity.this).execute(Uri.fromFile(backupFile))	7
31859	ImportAsyncTask(SettingsActivity.this).execute(inputStream)	5
3587	ImportAsyncTask(activity).execute(accountFileInputStream)	4
19199	ImportAsyncTask(activity,delegate).execute(accountFileInputStream)	7
31573	ImportAsyncTask(activity,delegate).execute(uri)	4
20212	ImportAsyncTask(context).execute(accountInputStream)	7
31881	ImportAsyncTask(context).execute(data.getData())	8
59090	ImportAsyncTask(context,onFinishTask).execute(data.getData())	4
57129	ImportAsyncTask(getActivity()).execute(Uri.fromFile(backupFile))	3
55240	ImportAsyncTask(getActivity()).execute(Uri.parse(defaultBackupFile))	3
3971	ImportAsyncTask(getActivity()).execute(accountFileInputStream)	5
21368	ImportAsyncTask(this).execute(accountInputStream)	23
31935	ImportAsyncTask(this).execute(data)	4
54798	ImportAsyncTask(this).execute(inputStream)	3
28030	Importa	10
27987	Importaci&#243	9
27922	Importao	9
28072	Importazione	10
55047	Importer	7
7744	Importering	9
5969	Importieren	14
2270	Imports	38
20619	Improve	21
11362	Improved	23
2959	In	96
29496	Inc.	3
60530	Incidentally,	3
47129	Include	6
44150	Indended	4
23048	Indeterminate	3
20178	Index	26
48511	IndexOutOfBoundsException	4
5128	Indexadas	128
58279	Indexadas"	6
28812	Indexadas</item>	12
28736	Indiana</item>	10
37837	Indicate	4
6710	Indicates	29
39169	Indication	5
29018	Indonesia</item>	10
48372	Inflate	7
48235	InflateException	4
48624	InflateException(	4
48574	InflateException("Error	4
48220	InflatedOnMenuItemClickListener	4
64364	InflatedOnMenuItemClickListener(Context	1
48811	InflatedOnMenuItemClickListener(Object	5
64373	InflatedOnMenuItemClickListener(mContext,itemListenerMethodName))	1
48773	InflatedOnMenuItemClickListener(mRealOwner,itemListenerMethodName))	5
51138	Inflates	12
48943	Inform	5
57662	Information	10
25626	Informes	6
208	Ingen	50
48719	Inherit	4
6334	Iniciais</string>	8
23839	Init	14
51007	InitializationError	9
18357	Initialize	79
1318	Initializes	110
39309	Initializing	4
37192	Inner	5
51924	Innstillinger->Generelt)\n	7
9799	Input	32
7400	InputLayoutErrorClearer	8
7641	InputLayoutErrorClearer()	8
19326	InputMethodManager	32
50248	InputMethodManager.displayCompletions(),	5
49679	InputMethodSession.displayCompletions().	5
8069	InputSource	3
2492	InputSource(bos))	50
8222	InputSource(new	3
3482	InputStream	80
2318	InputStreamReader(accountFileInputStream))	5
50028	InputType.TYPE_CLASS_TEXT)	5
50552	InputType.TYPE_MASK_CLASS)	5
49996	InputType.TYPE_TEXT_FLAG_AUTO_COMPLETE	5
50267	InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS	5
52884	InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS)	16
12738	InputWatcher	10
12403	InputWatcher()	10
29903	Insert	3
50682	Inserts	5
11197	Instance	15
35681	Instantiates	8
57026	InstantiationException	3
38233	Instead	4
16736	Instellingen	13
14868	Instillinger,s	19
51978	InstrumentationConfiguration	5
51940	InstrumentationConfiguration.Builder	5
51951	InstrumentationConfiguration.newBuilder()	5
50645	InstrumenterConfig	4
18569	InstrumenterConfig()	8
18962	InstrumentingClassLoaderConfig	8
16043	Int&#233	8
40723	IntEvaluator	4
41584	IntEvaluator()	8
40881	IntKeyframe	8
41468	IntKeyframe(float	4
41350	IntKeyframe(fraction)	4
41594	IntKeyframe(fraction,value)	4
41324	IntKeyframe(getFraction(),mValue)	4
41385	IntKeyframe)	4
40547	IntKeyframeSet	11
40930	IntKeyframeSet(IntKeyframe...	4
41400	IntKeyframeSet(intKeyframes)	4
41442	IntKeyframeSet(keyframes)	4
40651	IntKeyframeSet(newKeyframes)	4
41702	IntKeyframeSet)	4
41577	IntKeyframe[Math.max(numKeyframes,2)]	4
40661	IntKeyframe[]	4
40495	IntKeyframe[numKeyframes]	8
42190	IntProperty	4
41965	IntProperty)	4
41932	IntPropertyValuesHolder	4
42140	IntPropertyValuesHolder(Property	4
42071	IntPropertyValuesHolder(String	4
41595	IntPropertyValuesHolder(property,(IntKeyframeSet)	4
41289	IntPropertyValuesHolder(property,values)	4
41370	IntPropertyValuesHolder(propertyName,(IntKeyframeSet)	4
41199	IntPropertyValuesHolder(propertyName,values)	4
1040	Integer	52
41811	Integer)	4
43925	Integer.MAX_VALUE	15
41329	Integer.class)	8
60098	Integer.numberOfTrailingZeros((int)denominator)	3
60157	Integer.numberOfTrailingZeros(mSmallestFraction)	3
51688	Integer.numberOfTrailingZeros(scale)	4
19735	Integer.parseInt(characterString)	12
50738	Integer.parseInt(drawableId)	5
63426	Integer.parseInt(isActive)	4
51777	Integer.parseInt(isFavorite)	3
51763	Integer.parseInt(isHidden)	3
51801	Integer.parseInt(isPlaceholder)	3
23446	Integer.parseInt(minorVersion)	4
50869	Integer.parseInt(path.get(0))	5
57644	Integer.parseInt(result.toString())	6
33436	Integer.parseInt(tokens[0])	7
33354	Integer.parseInt(tokens[1])	10
33489	Integer.parseInt(tokens[2])	8
33311	Integer.parseInt(tokens[3])	7
33377	Integer.parseInt(tokens[4])	10
33471	Integer.parseInt(tokens[5])	8
13260	Integer.parseInt(versionName.substring(0,end))	6
45969	Integer.toHexString(System.identityHashCode(this))	4
41216	Integer.toHexString(hashCode())	8
45453	Integer.toHexString(logo))	4
39800	Integer.toHexString(uiOptions))	4
52954	Integer.toString(5)	3
31350	Integer.toString(denomInt)	14
24150	Integer.toString(numberOfRecent)	2
24505	Integer.toString(numberOfRecents)	5
59583	Integer.toString(scheduledAction.getExecutionCount()+1))	3
33634	Integer.toString(scheduledEvent.getExecutionCount()+1))	3
33206	Integer[]	5
30004	Integer[colors.size()])))	11
18195	Integer[mLegendLabels.size()])))	5
33052	Integer[mSelectedIds.size()]	5
18730	Integration	11
43752	Intended	12
563	Intent	286
49846	Intent#ACTION_SEND	4
50064	Intent#ACTION_SEND_MULTIPLE	4
47699	Intent#CATEGORY_ALTERNATIVE	4
47989	Intent#CATEGORY_SELECTED_ALTERNATIVE	4
55206	Intent#EXTRA_TITLE	4
55051	Intent#EXTRA_UID	4
42465	Intent(	8
9130	Intent()	39
14003	Intent())	4
34214	Intent().putExtra(UxArgument.PASSCODE,pass))	6
13097	Intent(AccountsActivity.this,FormActivity.class)	9
30877	Intent(AccountsListFragment.this.getActivity(),AccountsActivity.class)	12
13809	Intent(AccountsListFragment.this.getActivity(),FormActivity.class)	8
54883	Intent(AppWidgetManager.ACTION_APPWIDGET_UPDATE)	2
54166	Intent(BudgetsActivity.this,FormActivity.class)	2
19890	Intent(GnuCashApplication.getAppContext(),FirstRunWizardActivity.class))	3
55408	Intent(Intent.ACTION_CREATE_DOCUMENT)	5
3996	Intent(Intent.ACTION_GET_CONTENT)	43
5811	Intent(Intent.ACTION_INSERT)	45
23715	Intent(Intent.ACTION_MAIN)	5
27070	Intent(Intent.ACTION_OPEN_DOCUMENT)	12
49894	Intent(Intent.ACTION_SEARCH)	5
6947	Intent(Intent.ACTION_SEND)	24
51658	Intent(Intent.ACTION_SEND_MULTIPLE)	11
13792	Intent(Intent.ACTION_VIEW)	33
13992	Intent(Intent.ACTION_VIEW))	11
49133	Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH)	5
49205	Intent(RecognizerIntent.ACTION_WEB_SEARCH)	5
13897	Intent(TransactionsActivity.this,FormActivity.class)	8
50297	Intent(action)	5
13727	Intent(activity,FormActivity.class)	11
49851	Intent(baseIntent)	5
49101	Intent(choiceIntent)	4
25299	Intent(context,AccountsActivity.class)	4
54756	Intent(context,AccountsActivity.class),0)	5
9920	Intent(context,FormActivity.class)	6
56917	Intent(context,MainActivity.class)	2
55251	Intent(context,ScheduledActionService.class)	8
58778	Intent(context,SchedulerService.class)	10
9173	Intent(context,TransactionsActivity.class)	24
20066	Intent(getActivity(),AccountsActivity.class)	17
13534	Intent(getActivity(),FormActivity.class)	28
56993	Intent(getActivity(),PasscodeLockScreenActivity.class)	7
31448	Intent(getActivity(),PasscodePreferenceActivity.class)	13
57164	Intent(getActivity(),PasscodePreferenceActivity.class),	3
63806	Intent(getActivity(),PasscodePreferenceActivity.class),PASSCODE_REQUEST_CODE)	4
34157	Intent(getActivity(),PasscodePreferenceActivity.class),REQUEST_CODE)	4
27905	Intent(getActivity(),SettingsActivity.class))	13
62010	Intent(getActivity(),TransactionDetailActivity.class)	3
1237	Intent(getActivity(),TransactionInfoActivity.class)	8
13335	Intent(getActivity(),TransactionsActivity.class)	29
289	Intent(getApplicationContext(),AccountsActivity.class))	5
49265	Intent(mIntent)	4
28712	Intent(mSolo.getCurrentActivity(),TransactionsActivity.class)	3
28582	Intent(mTransactionsActivity,TransactionsActivity.class)	6
853	Intent(this,AccountsActivity.class)	36
693	Intent(this,AccountsActivity.class))	6
53906	Intent(this,BudgetsActivity.class))	4
13336	Intent(this,ChartReportActivity.class))	13
19665	Intent(this,FirstRunWizardActivity.class))	6
369	Intent(this,FormActivity.class)	6
998	Intent(this,PasscodeLockScreenActivity.class)	34
188	Intent(this,PasscodePreferenceActivity.class),	18
33720	Intent(this,PieChartActivity.class))	7
63956	Intent(this,PreferenceActivity.class)	2
57192	Intent(this,PreferenceActivity.class))	3
24958	Intent(this,ReportsActivity.class)	6
24847	Intent(this,ReportsActivity.class))	11
25429	Intent(this,ScheduledActionsActivity.class)	20
62586	Intent(this,ScheduledEventsActivity.class)	3
13125	Intent(this,SettingsActivity.class))	33
30527	Intent(this,TransactionsActivity.class)	13
1727	Intent(this.getApplicationContext(),FormActivity.class)	11
30658	Intent(this.getApplicationContext(),TransactionsActivity.class)	13
33570	Intent(view.getContext(),BarChartActivity.class))	9
26832	Intent(view.getContext(),LineChartActivity.class))	8
33751	Intent(view.getContext(),PieChartActivity.class))	7
47680	Intent.	8
49744	Intent.ACTION_SEARCH	5
13659	Intent.FLAG_ACTIVITY_CLEAR_TASK)	25
13638	Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY)	13
28627	Intent.FLAG_ACTIVITY_NEW_TASK	8
24968	Intent.FLAG_ACTIVITY_SINGLE_TOP)	13
19848	Intent.FLAG_GRANT_WRITE_URI_PERMISSION)	10
20314	Intent.createChooser(pickIntent,"Select	33
20933	Intent.createChooser(pickIntent,getString(R.string.title_select_gnucash_xml_file))	16
5159	IntentService	8
43476	Intent[]	4
639	Intents	9
35860	Intents,broadcast	3
35938	Intents.	3
32804	Intents.intended(hasComponent(PreferenceActivity.class.getName()))	5
32656	IntentsTestRule<>(AccountsActivity.class)	2
32907	IntentsTestRule<AccountsActivity>	2
35507	Interchange	7
19270	Interface	38
38087	Internal	29
58368	International	6
57814	Internationale	6
28562	Internationalize	6
46817	Internet&mdash	4
47521	Interpolator	4
25808	Intervals	6
15395	Intntelo	6
27947	Introdotta	5
28057	Introdotti	5
60186	InvalidParameterException("invalid	8
48005	Invalidate	4
15691	Inversi&#243	8
15664	Inversin	10
5910	Inversion	119
28750	Inverso</item>	10
33969	Inverted	3
33945	Inverts	3
35185	Investigate	2
44418	Invokes	4
47727	Invoking	4
28701	Iraniano</item>	10
28744	Iraquiano</item>	10
19188	Is	41
28932	Islandia</item>	10
6174	Islands	122
15427	Islas	14
15747	Israel	8
29051	Israelense</item>	10
5921	Israeli	103
18729	Issues</system>	13
957	It	185
50660	It's	26
37539	Item	17
43954	ItemInvoker	4
44890	ItemView	4
44804	ItemView.	4
42416	Items	7
32955	Iterates	3
52191	Iterator<Account>	7
33635	Its	5
29175	Iuan</item>	10
41755	JNI	5
42234	JNI,use	5
14113	JOIN	33
36455	JPY	6
58670	JUnit	3
59318	Jahre</item>	7
38714	Jake	9
29081	Jamaicano</item>	10
57924	Jan	6
17007	Janssens	15
52265	January	3
41392	JavaBeans	4
18786	JavaVersion.VERSION_1_7	18
825	JellyBean,the	9
62753	Jenis	3
35912	Jesse	2
26868	Joda	9
29112	Jordaniano</item>	10
13007	Jorge	19
35861	July	7
34677	July"	3
34531	July"/>	9
46063	Jump	4
13348	Just	39
56015	KAPITAL</item>	2
17444	KARCIE	11
17480	KARTA	14
18228	KEY	49
18328	KEY_ACCOUNT_UID	18
23505	KEY_AMOUNT	11
55303	KEY_BACKUP_FILE	3
56484	KEY_CODE_DECIMAL_SEPARATOR	9
52895	KEY_CODE_DECIMAL_SEPARATOR){	13
52848	KEY_CODE_DECIMAL_SEPARATOR:	7
4873	KEY_COLOR	12
27201	KEY_COLORS	3
27411	KEY_COLOR_CODE	11
27213	KEY_COLUMNS	3
19469	KEY_CREDIT_FORMULA	10
59240	KEY_CREDIT_NUMERIC	2
26391	KEY_CURRENCY_CODE	22
19448	KEY_DEBIT_FORMULA	10
59295	KEY_DEBIT_NUMERIC	2
19865	KEY_DEFAULT_TRANSFER_ACCOUNT	15
27134	KEY_DEFAULT_TRANSFER_ACCOUNT_UID	12
23940	KEY_DESCRIPTION	12
18029	KEY_DOUBLE_ENTRY_ACCOUNT_UID	28
18233	KEY_EXPORTED	30
19878	KEY_FAVORITE	21
19986	KEY_FROM_SCHED_ACTION	8
35393	KEY_FULL_NAME	5
23709	KEY_NAME	16
19413	KEY_NOTES	17
27618	KEY_PARENT_ACCOUNT_UID	19
5254	KEY_PLACEHOLDER	23
18042	KEY_RECURRENCE_PERIOD	12
26461	KEY_ROW_ID	13
19442	KEY_SCHEDX_ACTION	8
27371	KEY_SELECTED_COLOR	3
27248	KEY_SIZE	3
19666	KEY_SPLIT_ACCOUNT	8
58707	KEY_SPLIT_ACCOUNT_SLOT	3
51276	KEY_SPLIT_ACCOUNT_UID	3
23885	KEY_TIMESTAMP	12
27244	KEY_TITLE_ID	3
23897	KEY_TYPE	19
18278	KEY_UID	32
60644	KIND,EXPRESS	3
1825	KIND,either	349
51926	KREDIT/DEBET\n	7
62775	KREDIT</item>	3
17799	KREDYTOWA</item>	9
21570	Kalkulator	11
29725	Kart	6
12495	Kart</item>	13
17740	Karty	13
47732	Keep	8
22839	Kerusakan</string>	7
9134	Key	58
39304	KeyCharacterMap	4
43411	KeyCharacterMap.KeyData	4
43826	KeyCharacterMap.KeyData()	4
38924	KeyCharacterMap.NUMERIC)	4
39217	KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD)	4
13863	KeyEvent	11
49687	KeyEvent#KEYCODE_UNKNOWN	5
50355	KeyEvent.ACTION_DOWN	7
1690	KeyEvent.ACTION_DOWN)	10
44856	KeyEvent.ACTION_UP	4
39239	KeyEvent.ACTION_UP)	11
50489	KeyEvent.DispatcherState	5
38846	KeyEvent.KEYCODE_BACK)	9
32302	KeyEvent.KEYCODE_BACK){	3
26647	KeyEvent.KEYCODE_BACK:	9
43836	KeyEvent.KEYCODE_DEL))	4
50216	KeyEvent.KEYCODE_DPAD_LEFT	5
50419	KeyEvent.KEYCODE_DPAD_LEFT)	5
49794	KeyEvent.KEYCODE_DPAD_RIGHT)	5
50503	KeyEvent.KEYCODE_DPAD_UP	5
49980	KeyEvent.KEYCODE_ENTER	5
50387	KeyEvent.KEYCODE_ENTER)	5
820	KeyEvent.KEYCODE_ENTER))	5
64360	KeyEvent.KEYCODE_MENU	1
44272	KeyEvent.KEYCODE_MENU)	4
50306	KeyEvent.KEYCODE_SEARCH	5
49955	KeyEvent.KEYCODE_TAB)	5
50581	KeyEvent.KEYCODE_UNKNOWN)	5
44125	KeyEvent.META_ALT_ON)	4
43691	KeyEvent.META_SYM_ON))	4
49834	KeyEventCompat.hasNoModifiers(event))	5
31511	Keyboard	28
52828	Keyboard(mContext,keyboardLayoutResId)	8
56528	Keyboard(mHostActivity,layoutid)	4
52753	Keyboard(mHostActivity,layoutid))	7
56583	Keyboard(mHostActivity,xmlLayoutResId)	9
26067	KeyboardFragment	8
335	KeyboardFragment.OnPasscodeEnteredListener	13
25795	KeyboardFragment.OnPasscodeEnteredListener.class)	3
8792	KeyboardView	41
13842	KeyboardView.	20
41390	Keyframe	7
41243	Keyframe.	8
41600	Keyframe.ofFloat((float)	4
41209	Keyframe.ofFloat(0f)	4
41701	Keyframe.ofFloat(0f,values[0])	4
41364	Keyframe.ofFloat(1f,values[0])	4
41290	Keyframe.ofInt((float)	4
41618	Keyframe.ofInt(0f)	4
41357	Keyframe.ofInt(0f,values[0])	4
41161	Keyframe.ofInt(1f,values[0])	4
41276	Keyframe.ofObject((float)	4
41476	Keyframe.ofObject(0f)	4
41260	Keyframe.ofObject(0f,values[0])	4
41375	Keyframe.ofObject(1f,values[0])	4
41122	KeyframeSet	11
41212	KeyframeSet(Keyframe...	4
41528	KeyframeSet(keyframes)	4
41398	KeyframeSet(newKeyframes)	4
40561	KeyframeSet,along	4
41516	KeyframeSet.ofFloat(values)	4
41335	KeyframeSet.ofInt(values)	4
41512	KeyframeSet.ofKeyframe(values)	4
41519	KeyframeSet.ofObject(values)	4
41264	KeyframeSets	4
41295	Keyframe[Math.max(numKeyframes,2)]	4
41568	Keyframe[]	4
41396	Keyframe[numKeyframes]	4
40494	Keyframes	7
41430	Keyframes.	4
44153	Kick	4
16778	Kjell	8
56317	Klicka	2
4132	Klicken	33
10939	Klik	27
14912	Klikk	31
17378	Kliknij	13
22287	Kliknte	5
56639	Known	8
10296	Kode	11
22210	Kompaktansicht	9
23025	Kompaktvisning	7
11378	Kompaktvisning</string>	15
4775	Kong	114
15907	Kong</item>	25
4765	Konten	73
25627	Konten</item>	3
5091	Konten</string>	35
4811	Kontenstruktur	6
4213	Kontenstruktur,welche	10
5349	Konto	70
31206	Konto",Commodity.getInstance("USD"))	2
59362	Konto",euro)	4
25588	Konto</item>	3
7334	Konto</string>	45
7982	Kontoer</string>	16
22121	Kontofarben	8
51346	Kontoname	4
4229	Kontonamen	16
4624	Kontos	13
21685	Kontroller	8
4522	Korean	113
29052	Koreano</item>	10
57886	Koruna"	9
59075	Koruna")	2
5401	Koruna</item>	113
64037	Krjk,prblja	2
58465	Krona"	8
59062	Krona")	2
4133	Krona</item>	117
58360	Krone"	7
59071	Krone")	2
5908	Krone</item>	119
51970	Kroner</item>	4
57817	Kuna"	6
5766	Kuna</item>	112
62447	Kuwait</item>	6
58399	Kwacha"	6
4814	Kwacha</item>	112
28878	Kwait</item>	10
57987	Kwanza	6
58039	Kwanza"	6
52352	L"	3
20529	L&#205	11
59504	L&#237	6
14012	LAST_OPEN_TAB_INDEX	3
24143	LEFT	9
14325	LEGACY_BASE_FOLDER_PATH	3
63477	LEGACY_DATABASE_NAME	4
7916	LEGEND_TEXT_SIZE	14
60647	LIABILITY,WHETHER	3
26965	LIABILITY:	18
60636	LIABLE	3
3616	LIKE	35
37738	LIMIT=25]	4
4405	LIMIT=30]	134
37384	LIMIT=NONE]	6
60454	LIMITED	3
12483	LIST	12
52835	LOCALE_DECIMAL_SEPARATOR	4
1862	LOG_TAG	99
4272	LOG_TAG)	8
62462	LQUIDA</item>	8
4750	LQUIDO</item>	9
17460	LUB	11
22070	La	13
37050	Label	4
56441	Lade	2
51855	Lag	7
5018	Lanka	114
15493	Lanka</item>	22
22564	Laporan</string>	7
54445	LargeValueFormatter	4
54360	LargeValueFormatter()	4
54430	LargeValueFormatter())	8
54483	LargeValueFormatter(String	4
26592	LargeValueFormatter(mCommodity.getSymbol()))	3
8629	LargeValueFormatter(mCurrency.getSymbol(Locale.getDefault())))	36
23901	Last	14
58416	Lats"	6
58958	Lats")	2
5672	Lats</item>	100
49823	Launch	5
18386	Launches	14
47575	Launching	4
27895	LayerDrawable	7
46764	LayerDrawable(outDrawables)	4
46674	LayerDrawable)	4
9357	Layout	36
11267	LayoutInflater	62
399	LayoutInflater.from(ReportsActivity.this).inflate(R.layout.card_item_date_range,parent,false)	6
43408	LayoutInflater.from(context)	16
27611	LayoutInflater.from(context).inflate(R.layout.color_picker_swatch,this)	3
21578	LayoutInflater.from(getActivity())	3
54072	LayoutInflater.from(getActivity()).inflate(R.layout.cardview_budget_amount,parent,false)	2
27431	LayoutInflater.from(getActivity()).inflate(R.layout.color_picker_dialog,null)	3
44923	LayoutInflater.from(getContext())	9
48961	LayoutInflater.from(getContext()).inflate(	4
43822	LayoutInflater.from(mContext)	12
31749	LayoutInflater.from(parent.getContext())	20
10440	LayoutInflater.from(this)	9
39126	LayoutParams	26
43335	LayoutParams((LayoutParams)	4
38847	LayoutParams(Context	9
38913	LayoutParams(LayoutParams	8
43518	LayoutParams(LayoutParams.WRAP_CONTENT,	12
39243	LayoutParams(ViewGroup.LayoutParams	4
43453	LayoutParams(getContext(),attrs)	4
39008	LayoutParams(int	9
43702	LayoutParams)	4
39030	LayoutParams.	9
45477	LayoutParams.MATCH_PARENT	5
45722	LayoutParams.MATCH_PARENT)	4
47936	LayoutParams.MATCH_PARENT,1))	4
51325	LayoutParams.SOFT_INPUT_STATE_VISIBLE)	3
45335	LayoutParams.WRAP_CONTENT	5
27105	LayoutParams.WRAP_CONTENT)	11
45150	LayoutParams.WRAP_CONTENT,LayoutParams.MATCH_PARENT)	4
50402	Lazily	5
38900	Lazy-load	4
28713	Lbano</item>	10
62466	Lbio</item>	6
28032	Le	6
60942	Learned	3
9507	Leaving	8
19351	Lecture	7
8076	Legend	53
16582	Legenda</string>	7
59276	Legende	4
28118	Legg	4
18454	Lei	13
59056	Lempira")	2
23949	Les	16
50467	Let	8
24888	Let's	25
62450	Leto</item>	6
28893	Letonia</item>	10
29080	Leu	11
58266	Leu"	6
6164	Leu</item>	102
58381	Lev	6
58076	Lev"	6
5157	Lev</item>	105
3830	Liabilites	91
21827	Liabilities"/>	11
3225	Liabilities</string>	81
28677	Liberiano</item>	10
28725	Libia</item>	10
28590	Libra	10
62424	Libria</item>	6
669	License	399
1175	License,Version	365
26507	License,or	18
1069	License.	393
1091	Licensed	363
38126	Lifecycle	8
7731	Lifetime	8
26961	Limit	15
53914	LimitLine	6
53879	LimitLine(budgetAmount.getAmount().asBigDecimal().floatValue())	2
57276	LimitLine(set.getYValueSum()	4
107	LineChart	21
5436	LineChart(this)	17
26943	LineChartActivity	7
21810	LineChartFragment	11
60179	LineChartFragment()	5
60150	LineChartFragment())	6
34176	LineChartFragment)	7
2201	LineData	52
26731	LineData(xVals,dataSets)	4
64306	LineData(xValues,Collections.singletonList(set))	2
30172	LineData(xValues,dataSets)	8
54978	LineData(xValues,dataSets))	3
62691	LineData(xValues,new	6
26612	LineDataSet	11
52763	LineDataSet(getEntryList(accountType),accountType.toString())	8
26639	LineDataSet(setData(AccountType.EXPENSE),AccountType.EXPENSE.toString())	5
26695	LineDataSet(setData(AccountType.INCOME),AccountType.INCOME.toString())	6
62683	LineDataSet(yValues,getResources().getString(R.string.label_chart_no_data))	4
42108	LinearInterpolator()	8
10014	LinearLayout	63
47249	LinearLayout(context)	4
44321	LinearLayout(context),false))	4
44108	LinearLayout.LayoutParams	14
45064	LinearLayout.LayoutParams(	13
47753	LinearLayout.LayoutParams.WRAP_CONTENT,LinearLayout.LayoutParams.MATCH_PARENT))	5
1582	LinearLayoutManager	19
30290	LinearLayoutManager(getActivity())	14
1921	LinearLayoutManager(this,LinearLayoutManager.HORIZONTAL,false)	5
46039	LinearLayout_divider	5
46504	LinearLayout_dividerPadding	5
46403	LinearLayout_measureWithLargestChild	5
45998	LinearLayout_showDividers	5
20616	Linhas</string>	18
8634	LinkedHashMap<>()	16
58955	LinkedHashMap<String,String>	2
58961	LinkedHashMap<String,String>()	2
29933	LinkedHashSet<>(Arrays.asList(dataSet.getStackLabels()))	16
18017	LinkedHashSet<>(colors)	5
30069	LinkedHashSet<>(dataSet.getColors())	18
18389	LinkedHashSet<>(labels)	5
48822	LinkedHashSet<HistoricalRecord>(readRecords)	4
30096	LinkedHashSet<Integer>	18
30070	LinkedHashSet<String>	16
59753	LinkedList<>()	9
24554	LinkedList<Account>	29
24333	LinkedList<Account>()	26
64391	LinkedList<Runnable>	1
64355	LinkedList<Runnable>()	1
28846	Lira	10
58401	Lira"	8
59029	Lira")	2
5844	Lira</item>	107
23134	Lisans	8
15077	Lisens	31
1221	List	176
13586	List<Account>	108
21546	List<AccountType>	18
48783	List<ActivityResolveInfo>	6
29966	List<BarDataSet>	8
7928	List<BarEntry>	22
53617	List<BigDecimal>	2
55330	List<Book>	6
52129	List<Budget>	9
52217	List<BudgetAmount>	12
57105	List<CharSequence>	7
25876	List<Commodity>	10
125	List<Currency>	55
56578	List<Date>	6
24756	List<Entry>	21
54745	List<File>	7
7692	List<Float>	18
311	List<Fragment>	11
48810	List<HistoricalRecord>	8
7532	List<Integer>	31
61918	List<LineDataSet>	7
634	List<LocalDate>	5
19387	List<Long>	45
44277	List<MenuItemImpl>	4
9750	List<Metadata>	2
13984	List<Model>	28
24726	List<OnCheckedChangeListener>	3
9266	List<Page>	8
23812	List<Price>	4
52170	List<Recurrence>	4
35392	List<ResolveInfo>	18
3008	List<ScheduledAction>	73
18749	List<ScheduledEvent>	11
51299	List<Spl	2
11062	List<Split>	106
881	List<String>	190
756	List<Transaction>	134
10088	List<View>	30
38998	ListActivity	4
27648	ListAdapter	26
48158	ListAdapter)	4
47776	ListAdapter,SpinnerAdapter	4
48008	ListAdapter,delegate	4
47931	ListAdapter.</p>	4
7898	ListFragment	26
43828	ListMenuItemView	4
44057	ListMenuItemView(Context	4
6143	ListPreference	6
47211	ListSelectorHider	5
46533	ListSelectorHider()	4
18209	ListView	75
43701	ListView-based	4
30552	ListView.	9
46376	ListView.INVALID_POSITION	4
49708	ListView.INVALID_POSITION)	5
47315	ListView.LayoutParams	4
48043	ListView.LayoutParams(ListView.LayoutParams.MATCH_PARENT,	4
47202	ListView.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,	4
59633	ListView.OnItemClickListener	5
47134	ListView.OnScrollListener	4
33122	ListViews	3
943	Listener	30
40545	Listeners	8
31689	Listens	16
58340	Litas"	6
4908	Litas</item>	106
29106	Lituania</item>	10
10821	Livro</string>	8
11929	Livros&#8230	8
64126	Livros</string>	2
9730	Load	30
64257	Loader.ForceLoadContentObserver	1
18515	Loader<Cursor>	32
18791	LoaderCallbacks<Cursor>	7
60552	LoaderCallbacks<Cursor>,	3
30600	LoaderCallbacks<Cursor>,OnItemLongClickListener	14
19745	LoaderCallbacks<Cursor>,OnItemLongClickListener,	13
64177	LoaderCallbacks<Cursor>,View.OnClickListener	2
29239	LoaderCallbacks<Cursor>{	3
18503	LoaderManager.LoaderCallbacks<Cursor>	16
8587	LoaderManager.LoaderCallbacks<Cursor>,Refreshable{	5
501	Loads	76
8224	Local	13
949	LocalDate	69
933	LocalDate()	10
842	LocalDate())	7
7137	LocalDate().dayOfMonth().withMinimumValue().toDate().getTime()	11
6956	LocalDate().minusMonths(11).dayOfMonth().withMinimumValue().toDate().getTime()	9
6724	LocalDate().minusMonths(11).toDate().getTime()	13
823	LocalDate().minusMonths(12).toDate().getTime()	5
7090	LocalDate().minusMonths(2).dayOfMonth().withMinimumValue().toDate().getTime()	19
6877	LocalDate().minusMonths(2).toDate().getTime()	14
1348	LocalDate().minusMonths(3).toDate().getTime()	5
6600	LocalDate().minusMonths(5).dayOfMonth().withMinimumValue().toDate().getTime()	9
6612	LocalDate().minusMonths(5).toDate().getTime()	13
1857	LocalDate().minusMonths(6).toDate().getTime()	5
7424	LocalDate().plusDays(1).toDate().getTime()	20
8101	LocalDate().plusDays(1).toDate().getTime(),	9
7363	LocalDate().toDate().getTime()	8
26994	LocalDate(2014,1,1)	4
26879	LocalDate(2015,1,1)	4
9374	LocalDate(System.currentTimeMillis())	7
34726	LocalDate(System.currentTimeMillis()).plusDays(interval)	4
2987	LocalDate(adapter.getTimestampOfEarliestTransaction(accountType,code))	10
3314	LocalDate(adapter.getTimestampOfEarliestTransaction(accountType,code)).withDayOfMonth(1)	7
2255	LocalDate(adapter.getTimestampOfLatestTransaction(accountType,code))	10
3754	LocalDate(adapter.getTimestampOfLatestTransaction(accountType,code)).withDayOfMonth(1)	7
59145	LocalDate(dateMillis)	4
61949	LocalDate(mEarliestTimestampsMap.get(accountType)).withDayOfMonth(1)	9
32530	LocalDate(mEarliestTransactionTimestamp)	4
3706	LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1)	17
61951	LocalDate(mEarliestTransactionTimestamp).withDayOfMonth(1),	9
32777	LocalDate(mLatestTransactionTimestamp)	4
3285	LocalDate(mLatestTransactionTimestamp).withDayOfMonth(1)	14
53413	LocalDate(mPeriodEnd.getTime())	8
9148	LocalDate(mPeriodStart.getTime())	16
3290	LocalDate(mReportEndTime)	7
3447	LocalDate(mReportEndTime).withDayOfMonth(1)	11
32055	LocalDate(mReportPeriodEnd)	3
32366	LocalDate(mReportPeriodEnd).withDayOfMonth(1)	3
32229	LocalDate(mReportPeriodStart)	3
32215	LocalDate(mReportPeriodStart).withDayOfMonth(1)	3
2947	LocalDate(mReportStartTime)	7
2908	LocalDate(mReportStartTime).withDayOfMonth(1)	11
1423	LocalDate(mTransactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType,mCurrencyCode))	6
1801	LocalDate(mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType,mCurrencyCode))	7
30175	LocalDate(xTimestamps.get(0))	3
30298	LocalDate(xTimestamps.get(xTimestamps.size()	3
53382	LocalDate.fromDateFields(new	5
9546	LocalDate.now().minusMonths(1).toDate()	8
9585	LocalDate.now().toDate()	8
3372	LocalDateTime	82
8168	LocalDateTime()	24
24734	LocalDateTime().minusMonths(2)	6
25317	LocalDateTime().minusMonths(5).withDayOfMonth(1).withMillisOfDay(0)	3
32885	LocalDateTime().minusMonths(minusMonths).toDate().getTime())	5
25073	LocalDateTime().withDayOfMonth(1).withMillisOfDay(0)	3
34770	LocalDateTime(System.currentTimeMillis())	2
34830	LocalDateTime(System.currentTimeMillis()).plusDays(interval)	2
34859	LocalDateTime(System.currentTimeMillis()).plusHours(interval)	2
30077	LocalDateTime(adapter.getTimestampOfEarliestTransaction(accountType,code))	6
29991	LocalDateTime(adapter.getTimestampOfLatestTransaction(accountType,code))	7
32332	LocalDateTime(endDate.toDate().getTime()))	12
8174	LocalDateTime(getEndDate(accountType).toDate().getTime()))	10
7960	LocalDateTime(getEndDate(mAccountType).toDate().getTime()))	9
7862	LocalDateTime(getStartDate(accountType).toDate().getTime())	12
8436	LocalDateTime(getStartDate(accountType).toDate().getTime()),new	10
7673	LocalDateTime(getStartDate(mAccountType).toDate().getTime())	9
7666	LocalDateTime(getStartDate(mAccountType).toDate().getTime()),	9
2381	LocalDateTime(mEarliestTimestampsMap.get(accountType))	13
59988	LocalDateTime(mEarliestTimestampsMap.get(accountType)))	7
34211	LocalDateTime(mEarliestTransactionTimestamp),earliest)	8
59977	LocalDateTime(mEarliestTransactionTimestamp),new	7
25159	LocalDateTime(mEarliestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0)	12
2818	LocalDateTime(mLatestTimestampsMap.get(accountType))	13
25285	LocalDateTime(mLatestTransactionTimestamp).withDayOfMonth(1).withMillisOfDay(0)	9
8583	LocalDateTime(mPeriodEnd.getTime())	8
8704	LocalDateTime(mPeriodStart.getTime())	18
8576	LocalDateTime(mRecurrence.getPeriodStart().getTime())	7
3389	LocalDateTime(mReportEndTime)	16
32340	LocalDateTime(mReportPeriodEnd)	3
32146	LocalDateTime(mReportPeriodStart)	3
3146	LocalDateTime(mReportStartTime)	16
32701	LocalDateTime(mTransactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType))	6
336	LocalDateTime(mTransactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType,mCurrencyCode))	17
32842	LocalDateTime(mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType))	8
1800	LocalDateTime(mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType,mCurrencyCode))	19
34190	LocalDateTime(startDate.toDate().getTime()))	9
32280	LocalDateTime(startDate.toDate().getTime()),new	12
26964	LocalDateTime(transactionsDbAdapter.getTimestampOfEarliestTransaction(accountType))	3
33027	LocalDateTime(transactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType))	4
26937	LocalDateTime(transactionsDbAdapter.getTimestampOfLatestTransaction(accountType))	3
33170	LocalDateTime(transactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType))	4
893	LocalDateTime(year,monthOfYear	11
55794	LocalDateTime.	2
55668	LocalDateTime.fromCalendarFields(cal).getDayOfWeek()	3
9332	LocalDateTime.fromDateFields(new	12
55728	LocalDateTime.now().plusDays(1)	2
55637	LocalDateTime.now().toDate().getTime()	2
13997	LocalDateTime.now().withDayOfWeek(DateTimeConstants.WEDNESDAY).toDate().getTime())	3
8238	LocalDateTime?	14
2746	Locale	52
64334	Locale#GERMAN	1
51604	Locale#US	8
3699	Locale(locale.getLanguage(),"ES")	5
3502	Locale(locale.getLanguage(),"GB")	18
36429	Locale-formatted	8
46162	Locale.ROOT.	5
5567	Locale.US	16
3748	Locale.getDefault()	16
31558	Locale.setDefault(Locale.GERMANY)	14
31858	Locale.setDefault(Locale.US)	11
32003	Locale.setDefault(mPreviousLocale)	3
25373	Localize	12
30899	Localizes	7
55281	Location	3
48506	Lock	4
6483	Log	16
2884	Log.d("Handler:",String.format("	21
2786	Log.d("Handler:",String.format("%d	29
50713	Log.d("Import",String.format("%d	7
41564	Log.d("ObjectAnimator","	4
41222	Log.d("ObjectAnimator","Anim	4
42112	Log.d("PropertyValuesHolder",	5
63854	Log.d("RecursiveMoveFiles",String.format("Moved	2
19154	Log.d("TransactionFormFragment",event.toString())	3
56965	Log.d("export","root	3
50690	Log.d(GncXmlImporter.class.getSimpleName(),"Start	4
21822	Log.d(GncXmlImporter.class.getSimpleName(),String.format("%d	25
60606	Log.d(LOG_TAG,"Account	3
26458	Log.d(LOG_TAG,"Adding	14
54005	Log.d(LOG_TAG,"Budget	2
61702	Log.d(LOG_TAG,"Bulk	3
21691	Log.d(LOG_TAG,"Computing	7
54007	Log.d(LOG_TAG,"Creating	8
14630	Log.d(LOG_TAG,"Empty	6
63822	Log.d(LOG_TAG,"Error	3
63984	Log.d(LOG_TAG,"Finished	2
51051	Log.d(LOG_TAG,"Found	8
63707	Log.d(LOG_TAG,"Legacy	2
60250	Log.d(LOG_TAG,"Migrating	6
14110	Log.d(LOG_TAG,"Moving	7
23112	Log.d(LOG_TAG,"Parsing	6
52350	Log.d(LOG_TAG,"Replace	12
26305	Log.d(LOG_TAG,"Replacing	21
53969	Log.d(LOG_TAG,"Resetting	9
50995	Log.d(LOG_TAG,"Retrieving	13
3317	Log.d(LOG_TAG,"Saving	13
2297	Log.d(LOG_TAG,"Setting	11
31085	Log.d(LOG_TAG,"Storing	9
61528	Log.d(LOG_TAG,"Transaction	3
60660	Log.d(LOG_TAG,"Transactions	5
60008	Log.d(LOG_TAG,"Updating	3
21515	Log.d(LOG_TAG,"all	13
57243	Log.d(LOG_TAG,"amount	8
50232	Log.d(LOG_TAG,"changeCursor("	5
50202	Log.d(LOG_TAG,"close()")	5
50608	Log.d(LOG_TAG,"mTextListener.onKey("	5
50235	Log.d(LOG_TAG,"notifyDataSetChanged")	5
50526	Log.d(LOG_TAG,"notifyDataSetInvalidated")	5
50542	Log.d(LOG_TAG,"onItemClick()	5
50162	Log.d(LOG_TAG,"onItemSelected()	5
49946	Log.d(LOG_TAG,"onNothingSelected()")	5
50338	Log.d(LOG_TAG,"runQueryOnBackgroundThread("	5
50277	Log.d(LOG_TAG,"updateSpinnerState	5
51044	Log.d(LOG_TAG,String.format("%d	11
52321	Log.d(LOG_TAG,String.format("Added	4
13117	Log.d(LOG_TAG,String.format("Adding	15
14338	Log.d(LOG_TAG,String.format(Locale.US,"Moving	3
59836	Log.d(LOG_TAG,deleted	5
14507	Log.d(LOG_TAG,msg	3
52148	Log.d(LOG_TAG,transaction.getSplits().size()	7
63879	Log.d(MigrationHelper.LOG_TAG,"Error	2
2624	Log.d(TAG,"Account	16
29334	Log.d(TAG,"Accounts	13
26811	Log.d(TAG,"Adding	20
32044	Log.d(TAG,"Bulk	2
19054	Log.d(TAG,"Computing	15
18360	Log.d(TAG,"Creating	26
24137	Log.d(TAG,"Delete	34
25370	Log.d(TAG,"Deleting	2
2824	Log.d(TAG,"Earliest	24
24282	Log.d(TAG,"Fetching	6
27836	Log.d(TAG,"Found	5
40095	Log.d(TAG,"Got	8
7728	Log.d(TAG,"GroupInterval	10
2545	Log.d(TAG,"Latest	25
35338	Log.d(TAG,"Migrating	4
1430	Log.d(TAG,"Passcode:	7
19682	Log.d(TAG,"Replace	19
19750	Log.d(TAG,"Replacing	15
18492	Log.d(TAG,"Resetting	22
54557	Log.d(TAG,"Scheduled	5
20240	Log.d(TAG,"Transaction	13
18249	Log.d(TAG,"Transactions	7
26929	Log.d(TAG,"Updating	20
34399	Log.d(TAG,"X	10
29976	Log.d(TAG,"X-axis	14
38688	Log.d(TAG,"[<ctor>]	4
39976	Log.d(TAG,"[addContentView]	5
38584	Log.d(TAG,"[callbackCreateOptionsMenu]	4
38462	Log.d(TAG,"[callbackOptionsItemSelected]	4
38685	Log.d(TAG,"[callbackPrepareOptionsMenu]	4
38893	Log.d(TAG,"[dispatchCloseOptionsMenu]")	4
38951	Log.d(TAG,"[dispatchConfigurationChanged]	4
38988	Log.d(TAG,"[dispatchCreateOptionsMenu]	8
38928	Log.d(TAG,"[dispatchInvalidateOptionsMenu]")	8
38809	Log.d(TAG,"[dispatchKeyEvent]	5
38994	Log.d(TAG,"[dispatchMenuOpened]	4
39081	Log.d(TAG,"[dispatchOnPostCreate]")	4
39245	Log.d(TAG,"[dispatchOpenOptionsMenu]")	4
40323	Log.d(TAG,"[dispatchOptionsItemSelected]	4
38941	Log.d(TAG,"[dispatchPanelClosed]	4
38852	Log.d(TAG,"[dispatchPause]")	4
39211	Log.d(TAG,"[dispatchPostResume]")	4
39256	Log.d(TAG,"[dispatchPrepareOptionsMenu]	8
38922	Log.d(TAG,"[dispatchStop]")	4
39066	Log.d(TAG,"[dispatchTitleChanged]	4
40023	Log.d(TAG,"[generateLayout]	4
40144	Log.d(TAG,"[generateLayout]")	4
39037	Log.d(TAG,"[getActionBar]")	7
39842	Log.d(TAG,"[getFeatures]	4
38438	Log.d(TAG,"[getMenuInflater]")	4
39181	Log.d(TAG,"[getSupportMenuInflater]")	4
39554	Log.d(TAG,"[hasFeature]	5
38983	Log.d(TAG,"[initActionBar]")	4
39519	Log.d(TAG,"[installDecor]")	4
39180	Log.d(TAG,"[invalidateOptionsMenu]")	4
39228	Log.d(TAG,"[mNativeItemListener.onMenuItemClick]	4
37951	Log.d(TAG,"[onCreatePanelMenu]	8
38622	Log.d(TAG,"[onMenuItemSelected]	8
37977	Log.d(TAG,"[onPreparePanel]	9
40029	Log.d(TAG,"[requestFeature]	5
38587	Log.d(TAG,"[setContentView]	9
39109	Log.d(TAG,"[setProgressBarIndeterminateVisibility]	8
39134	Log.d(TAG,"[setProgressBarIndeterminate]	8
38874	Log.d(TAG,"[setProgressBarVisibility]	8
39199	Log.d(TAG,"[setProgress]	8
39971	Log.d(TAG,"[setSecondaryProgress]	7
38589	Log.d(TAG,"[setTitle]	12
39368	Log.d(TAG,"[setUiOptions]	5
39198	Log.d(TAG,"[startActionMode]	8
39064	Log.d(TAG,"[supportInvalidateOptionsMenu]")	4
19109	Log.d(TAG,"all	11
19246	Log.d(TAG,"amount	6
63803	Log.d(TAG,String.format("%d	3
3288	Log.d(TAG,accountType	35
56592	Log.d(TAG,deleted	4
30087	Log.d(TAG,entry.getKey()	7
7417	Log.d(TAG,mAccountType	14
58788	Log.d(TAG,mAccountTypeList.toString())	3
1299	Log.d(TAG,passcode)	5
35488	Log.d(TAG,transaction.getSplits().size()	6
40110	Log.d(TAG,xml.getAttributeName(i)	8
23943	Log.d(getClass().getName(),"price	4
14437	Log.d(getClass().getSimpleName(),"before	8
14449	Log.d(getClass().getSimpleName(),"bulk	11
57453	Log.d(getClass().getSimpleName(),"finish	4
57546	Log.d(getClass().getSimpleName(),"trans	4
23972	Log.d(getClass().getSimpleName(),String.format("%d	10
23536	Log.d(getClass().getSimpleName(),String.format("bulk	18
14237	Log.d(getClass().getSimpleName(),String.format("deb	8
57540	Log.d(getClass().getSimpleName(),where	4
13956	Log.e("AccountsActivityTest","Error	3
13197	Log.e("CalculatorEditTextTest","Error	2
20572	Log.e("GncXmlExporter","Error	15
59298	Log.e("GnuCashApplication","Error	2
58951	Log.e("Money","Could	3
58676	Log.e("OC",result.getLogMessage(),result.getException())	7
41471	Log.e("PropertyValuesHolder",	4
41941	Log.e("PropertyValuesHolder","No	4
42059	Log.e("PropertyValuesHolder",e.toString())	6
41155	Log.e("PropertyValuesHolder",targetClass.getSimpleName()	4
63595	Log.e("SettingsActivity","Could	4
57021	Log.e(BackupPreferenceFragment.class.getName(),"Trying	3
57005	Log.e(BackupPreferenceFragment.class.getName(),e.getMessage())	6
57649	Log.e(DatabaseHelper.LOG_TAG,"Error	5
19412	Log.e(ImportAsyncTask.class.getName(),""	21
34104	Log.e(ImportAsyncTask.class.getName(),exception.getMessage())	7
50700	Log.e(LOG_TAG,	5
55327	Log.e(LOG_TAG,"Auto	3
57650	Log.e(LOG_TAG,"Database	6
6034	Log.e(LOG_TAG,"Error	55
50533	Log.e(LOG_TAG,"Failed	5
963	Log.e(LOG_TAG,"Invalid	5
51453	Log.e(LOG_TAG,"Scheduled	4
49737	Log.e(LOG_TAG,"error	5
5691	Log.e(LOG_TAG,e.getMessage())	25
63469	Log.e(LOG_TAG,err_msg,e)	6
23879	Log.e(LOG_TAG,message	2
23660	Log.e(LOG_TAG,message)	4
8709	Log.e(LOG_TAG,msg	8
8454	Log.e(LOG_TAG,msg)	14
57654	Log.e(LOG_TAG,msg,e)	3
59819	Log.e(LOG_TAG,sqlEx.getMessage())	5
61685	Log.e(LOG_TAG,sqle.getMessage())	3
57154	Log.e(PreferenceActivity.class.getName(),"Connection	3
51644	Log.e(SettingsActivity.class.getName(),"Connection	5
51662	Log.e(SettingsActivity.class.getName(),"Trying	5
51730	Log.e(SettingsActivity.class.getName(),e.getMessage())	5
34221	Log.e(TAG,""	6
45180	Log.e(TAG,"Activity	4
44374	Log.e(TAG,"Can't	4
34162	Log.e(TAG,"Earliest	9
9063	Log.e(TAG,"Error	37
34167	Log.e(TAG,"Latest	9
39278	Log.e(TAG,"Options	4
32518	Log.e(TAG,"Owncloud	7
40016	Log.e(TAG,"Requested	4
56861	Log.e(TAG,"error	4
32873	Log.e(TAG,"ownCloud	8
34204	Log.e(TAG,(e.getMessage()	5
57387	Log.e(TAG,dirResult.getLogMessage(),dirResult.getException())	7
6949	Log.e(TAG,e.getMessage())	58
57295	Log.e(TAG,result.getLogMessage(),result.getException())	7
9618	Log.e(TAG,unauthorized.getMessage())	12
34241	Log.e(context.getString(R.string.app_name),""	5
34168	Log.e(context.getString(R.string.app_name),e.getMessage())	5
23679	Log.e(getClass().getName(),"Currency	12
13851	Log.e(getClass().getName(),"Error	28
36575	Log.e(getClass().getName(),msg)	4
31882	Log.e(getClass().getSimpleName(),"Are	7
23572	Log.e(getTag(),"Error	22
31567	Log.e(getTag(),e.getMessage())	7
52810	Log.e(this.getClass().getSimpleName(),msg)	13
19137	Log.i("AccountFormFragment","Saving	6
23497	Log.i("DatabaseHelper","Upgrading	6
52107	Log.i("DeleteDialog",String.format("Deleted	6
18141	Log.i("Gnucash","Received	9
62557	Log.i("SchedulerReceiver","Starting	3
28447	Log.i("Settings","Importing	7
32877	Log.i("Settings","Opening	19
3774	Log.i("TransactionFormFragment",event.toString())	22
18137	Log.i("TransactionRecorder","Received	5
54879	Log.i("WidgetConfigruation","Updating	7
30424	Log.i("WidgetConfiguration","Account	15
9859	Log.i("WidgetConfiguration","Updating	21
61778	Log.i(DatabaseHelper.LOG_TAG,"Adding	3
61838	Log.i(DatabaseHelper.LOG_TAG,"Auto-balancing	6
61733	Log.i(DatabaseHelper.LOG_TAG,"Converting	3
61809	Log.i(DatabaseHelper.LOG_TAG,"Creating	3
61813	Log.i(DatabaseHelper.LOG_TAG,"Dropping	3
61836	Log.i(DatabaseHelper.LOG_TAG,"Migrating	3
14596	Log.i(DatabaseHelper.LOG_TAG,"Upgrading	26
21091	Log.i(LOG_TAG,"Adding	18
25153	Log.i(LOG_TAG,"Auto-balancing	14
55472	Log.i(LOG_TAG,"Backup/export	2
6044	Log.i(LOG_TAG,"Completed	14
35541	Log.i(LOG_TAG,"Converting	5
49143	Log.i(LOG_TAG,"Could	4
20140	Log.i(LOG_TAG,"Creating	32
25042	Log.i(LOG_TAG,"Dropping	12
53936	Log.i(LOG_TAG,"Executing	14
20439	Log.i(LOG_TAG,"Exporting	8
14336	Log.i(LOG_TAG,"Failed	3
35462	Log.i(LOG_TAG,"Importing	7
3631	Log.i(LOG_TAG,"Invalid	14
25353	Log.i(LOG_TAG,"Migrating	13
63712	Log.i(LOG_TAG,"No	2
49156	Log.i(LOG_TAG,"Pruned:	4
49002	Log.i(LOG_TAG,"Read	4
18721	Log.i(LOG_TAG,"Saving	6
59950	Log.i(LOG_TAG,"Skipping	6
49548	Log.i(LOG_TAG,"Sorted:	4
6126	Log.i(LOG_TAG,"Starting	6
20082	Log.i(LOG_TAG,"Updating	8
20325	Log.i(LOG_TAG,"Upgrading	34
49044	Log.i(LOG_TAG,"Wrote	4
25613	Log.i(LOG_TAG,String.format("Bulk	13
25611	Log.i(LOG_TAG,String.format("Generated	10
51508	Log.i(LOG_TAG,String.format("Processing	6
3854	Log.i(LOG_TAG,mAccount.getName()	6
52704	Log.i(MigrationHelper.LOG_TAG,"Upgrading	2
26818	Log.i(TAG,"ACCOUNT	4
18126	Log.i(TAG,"Adding	19
28918	Log.i(TAG,"All	3
13072	Log.i(TAG,"Backup	6
27049	Log.i(TAG,"Balance	4
18078	Log.i(TAG,"Cancelling	16
18109	Log.i(TAG,"Cannot	20
4454	Log.i(TAG,"Commencing	38
18462	Log.i(TAG,"Converting	8
8970	Log.i(TAG,"Copying	19
28643	Log.i(TAG,"Could	3
28206	Log.i(TAG,"Created	14
35457	Log.i(TAG,"Creating	4
54519	Log.i(TAG,"Deleting	7
30068	Log.i(TAG,"EXPENSE"	4
27015	Log.i(TAG,"MONTHS	4
24411	Log.i(TAG,"Moving	41
19588	Log.i(TAG,"Opening	21
39350	Log.i(TAG,"Parsing	8
1006	Log.i(TAG,"Passcode	4
38095	Log.i(TAG,"Registering	4
59164	Log.i(TAG,"Removing	4
39377	Log.i(TAG,"Returning	8
9712	Log.i(TAG,"Successfully	2
18211	Log.i(TAG,"Updating	8
27532	Log.i(TAG,"Upgrade	5
27232	Log.i(TAG,"Upgrading	16
8976	Log.i(TAG,"Uploading	3
38571	Log.i(TAG,"Using	4
25405	Log.i(TAG,"xVals	4
29935	Log.i(TAG,mAccountType	6
53479	Log.i(getClass().getSimpleName(),"Skip	2
31763	Log.i(getClass().getSimpleName(),msg,e)	14
35891	Log.i(this.getClass().getName(),"Received	2
10361	Log.v(LOG_TAG,"Fetching	6
7979	Log.v(LOG_TAG,"Saving	4
31853	Log.v(LOG_TAG,"Setting	11
24956	Log.v(SplitEditorFragment.this.getClass().getSimpleName(),	3
3972	Log.v(TAG,"Fetching	50
19786	Log.v(TAG,"Returning	8
31076	Log.v(TAG,"Show	7
29864	Log.w("Tag","Other	4
29816	Log.w("Tag","Percent	4
29867	Log.w("Tag","Total	4
48261	Log.w(LOG_TAG,"Cannot	4
49889	Log.w(LOG_TAG,"Could	5
63456	Log.w(LOG_TAG,"Database	6
50897	Log.w(LOG_TAG,"Icon	5
48778	Log.w(LOG_TAG,"Ignoring	4
50864	Log.w(LOG_TAG,"Invalid	5
50424	Log.w(LOG_TAG,"Search	5
63833	Log.w(LOG_TAG,"Target	3
50601	Log.w(LOG_TAG,"Tried	5
33937	Log.w(LOG_TAG,"Upgrade	14
50914	Log.w(LOG_TAG,ex.toString())	5
57676	Log.w(TAG,"Cannot	2
38613	Log.w(TAG,"Class	4
26954	Log.w(TAG,"DIFF:	8
34201	Log.w(TAG,"Diff	9
26835	Log.w(TAG,"END:	6
57316	Log.w(TAG,"Error	4
34210	Log.w(TAG,"GroupInterval	9
55371	Log.w(TAG,"No	3
55000	Log.w(TAG,"OFFSET	4
26798	Log.w(TAG,"START:	6
35505	Log.w(TAG,"Upgrade	4
25196	Log.w(TAG,"X	21
57637	Log.w(TAG,"colors	6
34458	Log.w(TAG,"count	6
58736	Log.w(TAG,"empty	3
32486	Log.w(TAG,"end	7
8037	Log.w(TAG,"getData")	6
57640	Log.w(TAG,"labels	6
62295	Log.w(TAG,"onPause")	5
62320	Log.w(TAG,"onResume")	5
32769	Log.w(TAG,"start	7
56565	Log.w(TAG,"sum2	9
26959	Log.w(TAG,"xVals	4
30366	Log.w(TAG,"xValues	4
32548	Log.w(TAG,"year	7
26688	Log.w(TAG,accountType	14
58787	Log.w(TAG,accountTypes.toString())	4
34293	Log.w(TAG,e.getMessage())	5
62681	Log.w(TAG,entry.getKey()	3
56680	Log.w(VIEW_LOG_TAG,"Expression	11
18062	Logging	60
5052	Logging</string>	108
45436	Logo	4
13202	Lollipop	7
20184	Long	39
18777	Long.MAX_VALUE	4
28373	Long.MIN_VALUE	9
43916	Long.bitCount(smallestItemsAt)	4
25742	Long.parseLong(characterString)	5
48996	Long.parseLong(parser.getAttributeValue(null,ATTRIBUTE_TIME))	4
18302	Long.parseLong(recurrenceOption))	7
18382	Long.parseLong(recurrenceOptions[recurrenceIndex])	12
18908	Long.parseLong(recurrencePeriod)	5
60222	Long.parseLong(tokens[1])	3
60210	Long.parseLong(tokens[2])	3
60136	Long.parseLong(tokens[4])	3
60169	Long.parseLong(tokens[5])	3
21031	Long.toString(System.currentTimeMillis())	3
33719	Long.toString(System.currentTimeMillis()))	4
44056	Look	8
46002	Looked	4
46301	Looking	4
44818	Looks	4
50398	Lookup	4
39946	Looper	8
12759	Lpez	19
54975	Lquido</string>	12
15112	Lschen	19
25508	M&#225	6
25753	M&#250	6
21733	M,we	5
47584	MATCH_PARENT)	4
44934	MATCH_PARENT.	4
23359	MAX	9
48820	MAX_ACTIVITY_COUNT_DEFAULT	4
49367	MAX_ACTIVITY_COUNT_UNLIMITED	4
47670	MAX_ITEMS_MEASURED	4
47980	MAX_ITEMS_MEASURED)	4
54273	MAX_LENGTH	4
46989	MAX_LEVEL	4
47160	MAX_LEVEL)	4
47399	MAX_LEVEL))	4
52322	MEMO_PREFIX	3
30484	MENU_IMPORT_ACCOUNTS	9
30550	MENU_IMPORT_ACCOUNTS:	9
26567	MERCHANTABILITY	18
60509	MERCHANTABILITY,	3
60380	MIDDLE	3
25179	MIGRATIONS	16
25310	MIME	17
474	MIME_TYPE	21
52079	MIN	15
23574	MIN)	9
19073	MINUTE_MILLIS	6
43323	MIN_CELL_SIZE	4
46371	MISS")	4
60418	MIT	3
2684	MM	40
29396	MMM	25
59101	MMM")	4
8588	MMMM	30
47632	MODE_DIALOG	4
48183	MODE_DROPDOWN	4
47579	MODE_THEME	4
166	MONTH	14
1463	MONTH:	65
32466	MONTHLY:	4
18570	MONTH_MILLIS	11
8003	MPAndroidChart	11
6092	MTUO</item>	17
26742	MUTUAL:	14
31735	MUTUAL_FUND:	6
58286	MXN)	6
57822	MXP	6
51300	Ma	2
52878	Maarten	17
29025	Macedonia</item>	10
15677	Macedonio</item>	14
28982	Madagascar</item>	10
8586	Magaz	20
15054	Maglis	10
7798	Mahal")	3
7481	Mahal</trn:description>	3
39027	Main	7
52224	MainActivity	2
59886	MainActivity.DEFAULT_CURRENCY_CODE	3
47309	Maintain	4
2577	Make	176
46240	Makes	9
28890	Malasia</item>	10
15351	Maldivas</item>	14
62419	Malsia</item>	6
62402	Malvinas</item>	6
2525	Manages	57
28762	Manat	11
58463	Manat"	6
6104	Manat</item>	117
8345	Mange	37
51564	Manifest	9
20516	Manifest.permission.READ_EXTERNAL_STORAGE	15
50806	ManifestParsingTest	5
57760	Mantenimiento	6
13967	Map	23
29953	Map<AccountType,List<String>>	12
25051	Map<AccountType,Long>	18
13807	Map<Integer,Refreshable>	10
58721	Map<String,Account>	1
48736	Map<String,ActivityChooserModel>	4
48865	Map<String,ActivityResolveInfo>	5
32307	Map<String,Class>	6
8383	Map<String,Integer>	24
32553	Map<String,List<Account>>	5
53495	Map<String,List<BigDecimal>>	2
32019	Map<String,String>	10
27218	Maps	15
18013	Marcar	7
16497	Marchi	10
38996	MarginLayoutParams	9
45007	MarginLayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.WRAP_CONTENT)	4
45373	MarginLayoutParams(getContext(),attrs)	4
5092	Mark	32
58142	Mark"	7
4146	Mark</item>	105
28141	Marker	4
11838	Markera	9
28215	Markere	4
58367	Markka"	6
274	Marks	26
58170	Marks"	6
19616	Marque	30
23621	Marquer	5
22356	Marqueu	7
29005	Marrocos</item>	10
52198	Marshmallow	9
12246	Marshmallow"	3
12322	Martnez	19
12946	Matcher	5
3695	Material	93
34076	Math.abs(balance),dataSet.getEntryCount()))	4
32408	Math.abs(entry.getVals()[index])	7
29831	Math.abs(mSlicePercentThreshold	5
52565	Math.abs(timeZone.getOffset(timestamp.getTime()))	2
55083	Math.max(	4
44987	Math.max(0,	4
45468	Math.max(0,availableWidth	4
45181	Math.max(0,availableWidth)	4
47786	Math.max(0,getSelectedItemPosition())	4
45098	Math.max(0,leftOfCenter	4
45159	Math.max(0,rightOfCenter	4
45976	Math.max(0,seed)	4
43540	Math.max(0,spacerCount	4
48166	Math.max(0,start	4
47198	Math.max(child.getMeasuredHeight(),largestChildHeight)	5
47292	Math.max(child.getMeasuredWidth(),largestChildWidth)	5
49231	Math.max(contentWidth,itemView.getMeasuredWidth())	4
46693	Math.max(distanceToBottom,distanceToTop)	4
46023	Math.max(height,	4
46521	Math.max(iconLp.leftMargin,hCenter	4
45887	Math.max(iconLp.topMargin,vCenter	4
47030	Math.max(mMinHeight,Math.min(mMaxHeight,d.getIntrinsicHeight()))	4
47287	Math.max(mMinWidth,Math.min(mMaxWidth,d.getIntrinsicWidth()))	4
44122	Math.max(maxCellsUsed,cellsUsed)	4
44137	Math.max(maxChildHeight,child.getMeasuredHeight())	4
46302	Math.max(preferredHeight,getSuggestedMinimumHeight())	4
46522	Math.max(preferredWidth,getSuggestedMinimumWidth())	4
44860	Math.max(res.getDisplayMetrics().widthPixels	4
49327	Math.max(resources.getDisplayMetrics().widthPixels	4
44318	Math.max(width,itemView.getMeasuredWidth())	8
45759	Math.min(actionBarViewHeight	4
49067	Math.min(activityCount,mMaxActivityCount)	4
48082	Math.min(adapter.getCount(),start	4
46242	Math.min(count	4
50214	Math.min(expandedActivityCount,mMaxShownActivityCount)	4
42796	Math.min(fraction,1.0f)	4
49767	Math.min(getPreferredWidth(),width)	5
45920	Math.min(height,heightSize)	4
45060	Math.min(leftOfCenter,rightOfCenter)	4
45780	Math.min(lp.height,height)	4
45669	Math.min(lp.width,availableWidth)	4
49091	Math.min(mAdapter.measureContentWidth(),mListPopupMaxWidth)	4
62093	Math.min(mCutOffPage	3
49977	Math.min(mMaxWidth,width)	5
62198	Math.min(mPagerAdapter.getCount()	3
59919	Math.min(scheduledAction.getEndTime(),now)	9
43154	Math.min(specSize,mMinWidth)	4
45999	Math.min(width,widthSize)	4
25968	Math.pow(10,Currency.getInstance(acctCurrencyCode).getDefaultFractionDigits())))	15
31092	Math.pow(10,fractionDigits)	10
20788	Math.pow(10,fractionDigits))))	9
23717	Math.pow(10,mCurrency.getDefaultFractionDigits())	7
34040	Math.pow(10,valueFractionDigits))	5
33056	MathContext	18
12389	MathContext.	3
42445	Matrix	4
43282	Matrix()	4
60588	Matthieu	3
62464	Maurcias</item>	6
15616	Mauricio</item>	21
36810	Maven	4
47512	Max	4
46000	Maximum	4
38718	May	6
26486	Maybe	12
43001	Measure	11
44164	MeasureSpec	4
42513	MeasureSpec.AT_MOST	8
45761	MeasureSpec.AT_MOST)	9
47647	MeasureSpec.AT_MOST))	4
46512	MeasureSpec.AT_MOST:	9
42556	MeasureSpec.EXACTLY	20
43599	MeasureSpec.EXACTLY)	12
46625	MeasureSpec.EXACTLY))	5
46628	MeasureSpec.EXACTLY),	5
46035	MeasureSpec.EXACTLY:	9
47343	MeasureSpec.UNSPECIFIED	4
45485	MeasureSpec.UNSPECIFIED)	8
46248	MeasureSpec.UNSPECIFIED:	9
44063	MeasureSpec.getMode(heightMeasureSpec)	11
43342	MeasureSpec.getMode(parentHeightMeasureSpec)	4
43030	MeasureSpec.getMode(widthMeasureSpec)	24
43549	MeasureSpec.getSize(heightMeasureSpec)	11
43847	MeasureSpec.getSize(parentHeightMeasureSpec)	4
43283	MeasureSpec.getSize(widthMeasureSpec)	22
47882	MeasureSpec.getSize(widthMeasureSpec))	4
47779	MeasureSpec.getSize(widthMeasureSpec)),	4
43796	MeasureSpec.makeMeasureSpec(	4
42619	MeasureSpec.makeMeasureSpec(0,MeasureSpec.UNSPECIFIED)	19
49287	MeasureSpec.makeMeasureSpec(MeasureSpec.getSize(heightMeasureSpec),	4
45418	MeasureSpec.makeMeasureSpec(availableWidth,MeasureSpec.AT_MOST)	4
45556	MeasureSpec.makeMeasureSpec(availableWidth,MeasureSpec.AT_MOST),	4
46987	MeasureSpec.makeMeasureSpec(child.getMeasuredHeight(),	5
46733	MeasureSpec.makeMeasureSpec(child.getMeasuredWidth(),	5
43658	MeasureSpec.makeMeasureSpec(childHeightSize,childHeightMode)	4
45350	MeasureSpec.makeMeasureSpec(customHeight,customHeightMode))	4
45507	MeasureSpec.makeMeasureSpec(customNavHeight,customNavHeightMode))	4
45707	MeasureSpec.makeMeasureSpec(customNavWidth,customNavWidthMode),	4
45523	MeasureSpec.makeMeasureSpec(getMeasuredHeight(),MeasureSpec.AT_MOST))	4
45344	MeasureSpec.makeMeasureSpec(height,MeasureSpec.AT_MOST)	4
45660	MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY))	4
43928	MeasureSpec.makeMeasureSpec(heightSize	4
47006	MeasureSpec.makeMeasureSpec(largestChildHeight,	5
46790	MeasureSpec.makeMeasureSpec(largestChildWidth,	5
45542	MeasureSpec.makeMeasureSpec(lp.width,MeasureSpec.EXACTLY)	4
47350	MeasureSpec.makeMeasureSpec(lpHeight,MeasureSpec.EXACTLY)	4
48170	MeasureSpec.makeMeasureSpec(mContentHeight,MeasureSpec.EXACTLY)	4
45396	MeasureSpec.makeMeasureSpec(mContentHeight,MeasureSpec.EXACTLY),0)	4
47438	MeasureSpec.makeMeasureSpec(mDropDownWidth,MeasureSpec.AT_MOST)	4
46443	MeasureSpec.makeMeasureSpec(min,EXACTLY)	4
45871	MeasureSpec.makeMeasureSpec(width,EXACTLY)	4
44412	Measurement	4
16860	Meerdere	6
25695	Mehrere	5
25621	Mehrwhrungsbuchungen\n	7
25682	Mejora	8
3715	Mejores	12
10665	Melhorado	11
6238	Melhores	13
35671	Memo	6
10881	Menambahkan	5
10559	Mendukung	5
15282	Menelaos	10
27833	Menu	66
48213	Menu#CATEGORY_ALTERNATIVE	4
48228	Menu#CATEGORY_CONTAINER	4
48394	Menu#CATEGORY_SECONDARY	4
48791	Menu#CATEGORY_SYSTEM	4
48343	Menu#add	4
48250	Menu#setGroupCheckable	4
48521	Menu#setGroupCheckable(int,boolean,boolean)	4
43489	Menu+!	4
48644	Menu.	4
48584	Menu.CATEGORY_MASK)	4
48767	Menu.USER_MASK)	4
44457	MenuAdapter	4
44813	MenuAdapter(MenuBuilder	4
44251	MenuAdapter(mMenu)	4
39166	MenuBuilder	27
44591	MenuBuilder#TYPE_DIALOG	4
44842	MenuBuilder#TYPE_EXPANDED	4
44231	MenuBuilder#TYPE_ICON	4
44776	MenuBuilder#addMenuPresenter(MenuPresenter)	4
43774	MenuBuilder(Context	4
39084	MenuBuilder(context)	4
42491	MenuBuilder(context).setDefaultShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM)	4
39761	MenuBuilder(getThemedContext())	4
40065	MenuBuilder.Callback	8
38865	MenuBuilder.Callback,com.actionbarsherlock.view.Window.Callback,MenuPresenter.Callback,android.view.MenuItem.OnMenuItemClickListener	4
42898	MenuBuilder.ItemInvoker	4
43559	MenuBuilder.ItemInvoker,MenuView	4
2685	MenuInflater	104
48356	MenuInflater(Context	5
40170	MenuInflater(getThemedContext())	5
38115	MenuInflater(getThemedContext(),mActivity)	5
38594	MenuInflater(mActivity)	5
43116	MenuInflater(mContext)	4
18605	MenuItem	117
48541	MenuItem#SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW	4
48173	MenuItem#collapseActionView()	8
47820	MenuItem#expandActionView()	8
48000	MenuItem#getActionProvider()	4
50065	MenuItem#getActionView()	4
47953	MenuItem#getOrder()	4
47929	MenuItem#setActionProvider(ActionProvider)	4
48325	MenuItem#setCheckable	4
48606	MenuItem#setChecked	4
48246	MenuItem#setEnabled	4
48701	MenuItem#setIcon(Drawable)	4
48258	MenuItem#setIcon(int)	4
47565	MenuItem#setIntent	4
47716	MenuItem#setIntent(android.content.Intent)	4
48427	MenuItem#setShowAsActionFlags(int)	4
47626	MenuItem#setTitleCondensed(CharSequence)	4
48809	MenuItem#setVisible	4
44871	MenuItem,android.view.MenuItem.OnMenuItemClickListener	4
42770	MenuItem.OnMenuItemClickListener	13
48032	MenuItem.OnMenuItemClickListener#onMenuItemClick	4
48193	MenuItem.OnMenuItemClickListener.onMenuItemClick	4
43611	MenuItem.SHOW_AS_ACTION_NEVER	4
48757	MenuItem.class	5
50520	MenuItem.getActionView()	4
47662	MenuItem.setIntent(android.content.Intent)	4
48609	MenuItem:	4
59548	MenuItemCompat.getActionView(menu.findItem(R.id.menu_search))	6
44723	MenuItemData.	4
39061	MenuItemImpl	26
44592	MenuItemImpl(MenuBuilder	4
43694	MenuItemImpl(this,group,id,categoryOrder,	4
48432	MenuItemImpl)	4
44579	MenuItemWrapper	4
44648	MenuItemWrapper(android.view.MenuItem	4
39016	MenuItemWrapper(item))	4
44263	MenuItemWrapper(mNativeSubMenu.getItem())	4
44797	MenuItemWrapper(nativeItem)	4
44729	MenuItemWrapper(nativeOutItems[i])	5
42606	MenuItem[]	4
42348	MenuPopupHelper	8
44297	MenuPopupHelper(Context	4
39745	MenuPopupHelper(getThemedContext(),subMenu).show()	4
42774	MenuPopupHelper(mContext,subMenu).show()	4
44711	MenuPopupHelper(mContext,subMenu,mAnchorView,false)	4
42864	MenuPresenter	16
42991	MenuPresenter.Callback	4
44105	MenuPresenters	4
48666	MenuState	4
48370	MenuState(final	4
48464	MenuState(menu)	4
42720	MenuView	16
44838	MenuView.	4
42711	MenuView.ItemView	12
43729	MenuView.ItemView)	4
43274	MenuView.ItemView,View.OnClickListener,View.OnLongClickListener,	4
43640	MenuViews.	4
40230	MenuWrapper	9
44614	MenuWrapper(android.view.Menu	4
40296	MenuWrapper(mActionMode.getMenu())	4
39897	MenuWrapper(menu)	4
38940	MenuWrapper(menu))	4
39023	MenuWrapper(menu),mActivity.getSupportMenuInflater())	4
44681	Menus	4
43902	Menus:	4
25466	MergeAdapter	17
25342	MergeAdapter()	11
7610	Merk	51
48733	Message	4
42208	Messages	4
28119	MetadataChangeSet	16
28229	MetadataChangeSet.Builder()	16
22301	Mete	5
20770	Method	45
28892	Metical	10
58358	Metical"	6
5742	Metical</item>	104
15781	Mexicana	21
28707	Mexicano</item>	10
25847	Migliorata	5
19613	Migrate	22
27655	Migrating	7
56884	Migration")	4
31108	MigrationHelper	16
61760	MigrationHelper.class.getDeclaredMethod("upgradeDbToVersion"	3
25251	MigrationHelper.createUpdatedAndModifiedColumns(db,AccountEntry.TABLE_NAME)	8
21038	MigrationHelper.createUpdatedAndModifiedColumns(db,SplitEntry.TABLE_NAME)	11
25060	MigrationHelper.createUpdatedAndModifiedColumns(db,TransactionEntry.TABLE_NAME)	5
28269	MigrationHelper.exportDatabase(db,ExportFormat.GNC_XML)	10
33804	MigrationHelper.exportGnucashXML(db)	6
30056	MigrationHelper.generateUUID()	7
28533	MigrationHelper.getCurrencies(db)	6
35548	MigrationHelper.getFullyQualifiedAccountName(db,uid)	7
53331	MigrationHelper.importCommodities(db)	5
34035	MigrationHelper.importGnucashXML(db,filepath)	10
14250	MigrationHelper.moveFile(...)")	6
14465	MigrationHelper.moveFile(src,dst)	11
52577	MigrationHelper.subtractTimeZoneOffset(unixBillenniumTimestamp,timeZone)	5
52470	MigrationHelperTest	2
35780	Milliseconds	9
25220	Mime	6
44883	Minimal	4
37218	Minimum	5
51879	Minnekort</item>	4
51956	Minnekort</string>	4
39687	Miscellaneous	4
54641	MissingFormatArgumentException("Missing	6
18	MissingFormatArgumentException("You	3
55024	Mltiplas	7
22294	Mltiples	12
61732	Mnemonic	3
28612	Moambique</item>	11
23675	Mode	13
13278	Model	47
14278	Model)	6
37497	Modes.	4
56522	Modified	7
48570	Modifying	8
55027	Moeda</string>	7
17382	Moesz	13
28879	Moldvia</item>	11
28060	Molte	18
23161	Monat</item>	17
23068	Monate</item>	17
59272	Monate</string>	4
50792	Monday	16
55833	Monday,the	3
54154	Monday.	5
55718	Mondays	3
57936	Monetary	6
754	Money	260
36366	Money#DEFAULT_CURRENCY_CODE	23
7309	Money(	16
54300	Money("-20","USD")	2
59875	Money("-8.99").toPlainString(),actualValue)	2
18907	Money("0",currencyCode)	37
59809	Money("1.19","USD"),account.getUID())	5
54263	Money("10","EUR"),"second")	2
7909	Money("10","USD"))	3
54250	Money("10","USD"),"account2")	2
54215	Money("10","USD"),"first")	2
54405	Money("10","USD"),"test")	2
57227	Money("10",Commodity.DEFAULT_COMMODITY.getCurrencyCode()),	3
54367	Money("10",Money.DEFAULT_CURRENCY_CODE),mSecondAccount.getUID()))	2
54459	Money("10.50",Money.DEFAULT_CURRENCY_CODE),mAccount.getUID()))	2
36595	Money("1024",CURRENCY_CODE))	10
11460	Money("11.11",currencyCode),account.getUID())	7
31259	Money("12","USD"),new	2
63773	Money("12.25")	2
51722	Money("12.345","JPY")	3
51652	Money("125","JPY")	3
54353	Money("13","EUR"),"third")	2
51655	Money("14.15","USD")	3
31097	Money("15","EUR"),foreignAccount.getUID())	2
54174	Money("15","USD"),"test")	2
63765	Money("15.50","USD")	2
62703	Money("17.29","USD")	2
8539	Money("17.93","EUR"))	3
36647	Money("2"),"dummy")	6
36611	Money("2","USD"),"dummy")	4
58814	Money("2",CURRENCY_CODE))	4
7801	Money("20","USD"))	6
54776	Money("23.50"),BRAVO_ACCOUNT_UID)	4
36552	Money("23.50"),bravoAccount.getUID())	6
36641	Money("23.50",DEFAULT_CURRENCY.getCurrencyCode()),bravoAccount.getUID())	4
58910	Money("3",CURRENCY_CODE))	3
59828	Money("3.49","EUR"),account.getUID())	5
34133	Money("3.50",DEFAULT_CURRENCY.getCurrencyCode())	2
54368	Money("30","USD"))	2
54196	Money("32.35",Money.DEFAULT_CURRENCY_CODE),mSecondAccount.getUID()))	2
54492	Money("4","USD")	6
33295	Money("4.90","USD"))	10
33482	Money("4.90","USD").getNumerator())	5
59775	Money("4.99","USD"),account.getUID())	5
34039	Money("4.99",DEFAULT_CURRENCY.getCurrencyCode())	2
7461	Money("45","USD"))	3
62963	Money("5","BGN")	4
63054	Money("5","EUR")	4
7646	Money("5","USD"))	3
54251	Money("5","USD"),"secondAccount")	2
58931	Money("5",CURRENCY_CODE))	4
54474	Money("5",Money.DEFAULT_CURRENCY_CODE),mAccount.getUID())	2
59393	Money("5",euro.getCurrencyCode())	4
7992	Money("50","USD"))	3
59851	Money("8.39","USD"),transferAcct.getUID())	5
54740	Money("8.99","USD"),account.getUID())	9
11206	Money("8.99",currencyCode),account.getUID())	8
36619	Money("9.7469")	8
13986	Money("9.7469",CURRENCY_CODE)	9
58848	Money("9.95")	3
26542	Money()	30
26308	Money())	3
58514	Money(-	1
52744	Money(9.7469)	5
63766	Money(9.95)	3
51203	Money(@NonNull	4
10803	Money(BigDecimal	40
11055	Money(BigDecimal.TEN,ACCOUNTS_CURRENCY),account.getUID())	6
59434	Money(BigDecimal.TEN,COMMODITY)	5
60020	Money(BigDecimal.TEN,Commodity.DEFAULT_COMMODITY),mBaseAccount.getUID())	3
54271	Money(BigDecimal.TEN,Commodity.EUR)	2
36519	Money(BigDecimal.TEN,Commodity.USD),account.getUID())	4
36694	Money(BigDecimal.TEN,Commodity.getInstance("EUR")),"random-account")	4
36392	Money(BigDecimal.TEN,Commodity.getInstance("USD")),account.getUID())	6
36690	Money(BigDecimal.TEN,Commodity.getInstance(CURRENCY_CODE)))	4
36545	Money(BigDecimal.TEN,Currency.getInstance("EUR")),"random-account")	6
36313	Money(BigDecimal.TEN,Currency.getInstance("USD")),account.getUID())	10
36527	Money(BigDecimal.TEN,Currency.getInstance(CURRENCY_CODE)))	7
26335	Money(BigDecimal.TEN,Currency.getInstance(Money.DEFAULT_CURRENCY_CODE)),	7
36569	Money(BigDecimal.TEN,DEFAULT_CURRENCY),	4
33936	Money(BigDecimal.TEN,DEFAULT_CURRENCY),alphaAccount.getUID())	7
18803	Money(BigDecimal.TEN,DUMMY_ACCOUNT_CURRENCY),account.getUID())	20
36658	Money(BigDecimal.TEN,commodity)	7
36668	Money(BigDecimal.TEN,currency)	6
53718	Money(BigDecimal.ZERO,Commodity.DEFAULT_COMMODITY)	2
36477	Money(BigDecimal.ZERO,Commodity.getInstance(currencyCode))	9
4622	Money(BigDecimal.ZERO,Currency.getInstance(currencyCode))	8
36229	Money(BigDecimal.ZERO,commodity)	4
8418	Money(BigDecimal.ZERO,mSplit.getValue().getCommodity())))	3
60367	Money(BigDecimal.valueOf(TRANSACTION2_AMOUNT),CURRENCY),BOOKS_EXPENSE_ACCOUNT_UID)	3
24709	Money(BigDecimal.valueOf(TRANSACTION3_AMOUNT),CURRENCY),GIFTS_RECEIVED_INCOME_ACCOUNT_UID)	6
60341	Money(BigDecimal.valueOf(TRANSACTION_AMOUNT),CURRENCY),DINING_EXPENSE_ACCOUNT_UID)	3
18583	Money(BigDecimal.valueOf(amount).setScale(2,BigDecimal.ROUND_HALF_UP),Currency.getInstance(currencyCode))	12
12092	Money(GncXmlHelper.parseMoney(characterString),mTransaction.getCurrency())	12
5740	Money(GncXmlHelper.parseTemplateSplitAmount(characterString),	6
18401	Money(Money	18
11963	Money(String	27
63049	Money(TRANSACTION_AMOUNT,CURRENCY_CODE)	4
13618	Money(TRANSACTION_AMOUNT,CURRENCY_CODE),DUMMY_ACCOUNT_UID)	17
62796	Money(TRANSACTION_AMOUNT,CURRENCY_CODE),TRANSACTIONS_ACCOUNT_UID)	4
18388	Money(amount)	15
26490	Money(amount))	7
58859	Money(amount,"USD")	4
36596	Money(amount,CURRENCY_CODE)	7
7779	Money(amount,Commodity.getInstance(mTargetCurrency.getCurrencyCode()))	7
8439	Money(amount,Commodity.getInstance(mTargetCurrencyCode))	5
50781	Money(amount,mTargetCommodity)	2
31991	Money(amount,mTargetCurrency)	9
26554	Money(amount.setScale(DECIMAL_PLACES,ROUNDING_MODE),mCurrency)	2
36451	Money(amountBigD,Commodity.getInstance(fromCurrencyCode))	4
36250	Money(amountBigD,Currency.getInstance(fromCurrencyCode))	8
8713	Money(amountBigD,getCommodityForAccount(mSplit.getAccountUID()))	9
36224	Money(amountBigD,getCurrencyForAccount(mSplit.getAccountUID()))	9
36262	Money(amountBigDecimal,Commodity.getInstance(currencyCode))	6
18203	Money(amountBigDecimal,Currency.getInstance(currencyCode))	26
36321	Money(amountBigDecimal.abs(),Commodity.getInstance(currencyCode))	4
36126	Money(amountBigDecimal.abs(),Currency.getInstance(currencyCode))	7
62849	Money(amountBigd,Commodity.getInstance(baseCurrencyCode)).abs()	4
53786	Money(amountBigd,Commodity.getInstance(currency.getCurrencyCode())).abs()	6
36433	Money(amountBigd,Commodity.getInstance(currency.getCurrencyCode())).absolute()	9
12765	Money(amountBigd,Commodity.getInstance(fromCurrency.getCurrencyCode())).abs()	5
36186	Money(amountBigd,Commodity.getInstance(fromCurrency.getCurrencyCode())).absolute()	6
26506	Money(amountBigd,account.getCurrency())	2
7153	Money(amountBigd,currency)	14
31055	Money(amountBigd,currency).absolute()	28
31523	Money(amountBigd,from).absolute()	5
12133	Money(amountBigd,fromCommodity).abs()	5
36122	Money(amountBigd,fromCurrency).absolute()	11
36373	Money(amountConverted,commodity))	4
36315	Money(amountConverted,currency))	8
53326	Money(amountNum,amountDenom,getAccountCurrencyCode(accountUID)))	2
32582	Money(amountString)	2
28621	Money(amountString,Currency.getInstance(Locale.getDefault()).getCurrencyCode())	16
20024	Money(amountString,currencyCode)	18
51764	Money(amountText).negate()	2
53868	Money(amountValue,Commodity.DEFAULT_COMMODITY)	5
32975	Money(amount_num,amount_denom,Currency.getInstance(currencyCode))	7
33119	Money(amount_num,amount_denom,currencyCode)	8
36218	Money(amount_num,amount_denom,currencyCode))	8
36191	Money(bigD,mCommodity)	6
36107	Money(bigD,mCurrency)	7
53719	Money(bigDecimal,Commodity.DEFAULT_COMMODITY))	2
51319	Money(c.getString(0),currencyCode))	4
18556	Money(c.getString(DatabaseAdapter.COLUMN_AMOUNT),currencyCode)	10
58832	Money(decimal,currency)	3
26517	Money(double	7
53640	Money(first,Commodity.DEFAULT_COMMODITY))	2
52411	Money(imbalance,mCommodity))	2
24941	Money(imbalance.negate(),mCommodity))	8
33248	Money(long	15
36149	Money(mAmount,commodity)	4
26200	Money(mAmount,currency)	11
36426	Money(mAmount.abs(),mCommodity)	6
35705	Money(mAmount.abs(),mCurrency)	16
36375	Money(mAmount.multiply(multiplier),mCommodity)	4
31640	Money(mAmount.multiply(multiplier),mCurrency)	7
36428	Money(mAmount.negate(),mCommodity)	4
26587	Money(mAmount.negate(),mCurrency)	10
13583	Money(mBaseAmount,currency),mAccountUID)	8
24675	Money(mBaseAmount.abs(),Commodity.getInstance(currencyCode)),mAccountUID)	7
36425	Money(mBaseAmount.abs(),currency),mAccountUID)	7
24893	Money(mBaseAmount.negate(),mCommodity))	6
10642	Money(mQuantity,getCommodityForAccount(characterString)))	10
51587	Money(mQuantity,getCurrencyForAccount(characterString))	12
33161	Money(mQuantity,getCurrencyForAccount(characterString)))	9
33183	Money(mQuantity,mTransaction.getCurrency()))	5
32695	Money(mValue,Commodity.getInstance(mTransaction.getCurrency().getCurrencyCode())))	7
10727	Money(mValue,mCommoditiesDbAdapter.getCommodity(mTransaction.getCurrency().getCurrencyCode())))	6
11213	Money(mValue,mTransaction.getCommodity()))	3
33112	Money(mValue,mTransaction.getCurrency()))	8
6063	Money(new	60
62973	Money(qtyNum,qtyDenom,qtyCurrency)	4
31745	Money(quantityNum,quantityDenom,currencyCode)	9
33278	Money(quantityNum,quantityDenom,qtyCurrencyCode)	7
23782	Money(rateDecimal,mTargetCurrency)	8
34063	Money(sourceSplit.mQuantity)	7
34061	Money(sourceSplit.mValue)	7
35928	Money(stripCurrencyFormatting(amountText)).divide(100).negate()	3
7086	Money(sumDecimal,currency)	8
33490	Money(tokens[0],tokens[1])	17
62852	Money(value)	4
57483	Money(value,Commodity.DEFAULT_COMMODITY)	3
32011	Money(valueNum,valueDenom,currencyCode)	6
31645	Money(valueNum,valueDenom,transactionCurrency)	8
62925	Money(valueNum,valueDenom,valueCurrency)	4
33326	Money(valueNum,valueDenom,valueCurrencyCode)	10
54228	Money.CurrencyMismatchException.class)	2
2887	Money.DEFAULT_CURRENCY_CODE	98
3954	Money.DEFAULT_CURRENCY_CODE)	12
18813	Money.createInstance(Currency.getInstance(Locale.getDefault()).getCurrencyCode())	8
27658	Money.createInstance(currencyCode)	5
18619	Money.createInstance(getCurrencyCode(accountId))	14
2877	Money.createZeroInstance(Currency.getInstance(Locale.getDefault()).getCurrencyCode())	5
2724	Money.createZeroInstance(GnuCashApplication.getDefaultCurrencyCode())	11
11944	Money.createZeroInstance(accountCurrencyCode)	2
54846	Money.createZeroInstance(currency.getCurrencyCode())	10
2385	Money.createZeroInstance(currencyCode)	62
53272	Money.createZeroInstance(getAccountCurrencyCode(accountUID))	2
11263	Money.createZeroInstance(mCommodity.getCurrencyCode())	7
35798	Money.createZeroInstance(mCurrency.getCurrencyCode())	11
4919	Money.createZeroInstance(mCurrencyCode)	36
35868	Money.createZeroInstance(mTransaction.getCurrencyCode())	11
36288	Money.getBigDecimal(amount_num,amount_denom)	8
61842	Money.getBigDecimal(splitValueNum,splitValueDenom)	4
19022	Money.getZeroInstance()	22
32756	Money.parseToDecimal(value).doubleValue()	2
52000	MoneyTest	9
58891	MoneyTest(String	3
36369	MoneyTest{	7
62400	Monglia</item>	6
10869	Monnaie</string>	10
7715	Months.months(multiple)	5
61950	Months.monthsBetween(	9
3825	Months.monthsBetween(earliest.withDayOfMonth(1).withMillisOfDay(0),	15
26741	Months.monthsBetween(earliest.withDayOfMonth(1).withMillisOfDay(0),latest.withDayOfMonth(1).withMillisOfDay(0)).getMonths()	5
29969	Months.monthsBetween(getStartDate(accountType),getEndDate(accountType)).getMonths()	6
30072	Months.monthsBetween(mEarliestTransactionDate,mLatestTransactionDate).getMonths()	6
32643	Months.monthsBetween(start.withDayOfMonth(1).withMillisOfDay(0),end.withDayOfMonth(1).withMillisOfDay(0)).getMonths()	20
8230	Months.monthsBetween(startDate,endDate).dividedBy(multiplier).getMonths()	5
7624	Months.monthsBetween(startDate,endDate).getMonths()	16
54996	Morato	3
41338	More	4
37480	Most	8
18208	Mostrar	6
34854	MotionEvent	29
47561	MotionEvent.ACTION_DOWN	4
52825	MotionEvent.ACTION_DOWN:	8
52793	MotionEvent.ACTION_MOVE:	8
46581	MotionEvent.ACTION_UP)	18
51881	Mottaker</string>	4
9942	Move	39
55776	Moves	14
27945	Muestra	10
51961	Mulighet	7
3384	Multi-currency	85
32763	MultiBookTest	2
9274	MultiDexApplication	2
4583	Multiplas	6
3661	Multiple	146
18789	Multiples	12
5158	Multiplier	16
21781	Multivaluta	9
42662	Must	16
44473	Mutually	4
47162	MyActivity	4
54595	MyAlertDialogFragment	4
54667	MyAlertDialogFragment()	2
54607	MyAlertDialogFragment.newInstance(R.string.title_confirm_delete,id)	3
60562	MyDataSetObserver	3
60563	MyDataSetObserver()	3
9998	MyPagerAdapter	5
62140	MyPagerAdapter(FragmentManager	3
50834	MyPagerAdapter(getSupportFragmentManager())	7
9636	N	19
38342	NAVIGATION_MODE_LIST	4
39386	NAVIGATION_MODE_LIST:	4
38244	NAVIGATION_MODE_STANDARD	4
38358	NAVIGATION_MODE_TABS	8
39500	NAVIGATION_MODE_TABS)	4
40064	NAVIGATION_MODE_TABS:	4
42696	NEEDS_PROXY	4
24983	NEVER	9
1615	NEW."	10
20129	NEWFILEUID=\"NONE\""	9
36582	NEWFILEUID=\"NONE\"")	5
21330	NEW_ACCOUNT_NAME	27
24823	NEXT_MONTH:	6
60521	NO	6
47942	NONE	4
60641	NONINFRINGEMENT.	3
13171	NOT	113
35250	NOTE	20
31271	NOTE:	20
2670	NO_CURRENCY_CODE	34
30058	NO_DATA_BAR_COUNTS	19
8090	NO_DATA_COLOR	26
43168	NO_ICON	9
44197	NO_ICON)	4
46188	NO_ID	8
30999	NPE	2
19353	NULL	85
33607	NULL"	16
30580	NULL")	11
25301	NULL",null)	6
52545	NULL,"	5
34463	NUMBER_OF_ACCOUNTS	17
29094	Nambia</item>	11
818	Name	117
10820	Name")	2
24806	Name","email@example.com")	13
32712	Name"/>	15
12381	Name</string>	54
51326	NameFieldWatcher	3
51350	NameFieldWatcher())	4
36145	Namespace	14
36342	Namespace.ISO4217	12
39186	Native	5
4180	Navegao	6
52019	Navigasjonssskuff	4
6211	Navigation	28
8777	NavigationView	27
20305	NavigationView.OnNavigationItemSelectedListener	13
37708	Needed	5
26420	Negate	7
36038	Negated	9
2591	Nenhuma	45
28675	Neozelands</item>	10
28636	Nepal</item>	10
11483	Neste	73
7390	Nested	45
34762	Nestede	7
8533	Nestet	9
52479	Neto	2
2419	Neto</string>	9
11430	Nette</string>	10
59222	NetworkInfo	2
25499	Neuer	7
25577	Neugestaltung	5
48782	Never	4
2993	New	250
10916	New</string>	120
18888	NewAccountDialogFragment	12
51356	NewAccountDialogFragment()	4
59024	NewAccountDialogFragment(AccountsDbAdapter	2
64320	NewAccountDialogFragment(View.OnClickListener	2
59054	NewAccountDialogFragment(dbAdapter)	2
64317	NewAccountDialogFragment(listener)	2
51334	NewAccountDialogFragment.newInstance(mAccountsDbAdapter)	3
51373	NewAccountDialogFragment.this.dismiss()	3
51329	NewAccountDialogFragment.this.mSaveButton.setEnabled(false)	3
51351	NewAccountDialogFragment.this.mSaveButton.setEnabled(true)	3
29261	NewTransactionFragment	16
29398	NewTransactionFragment()	10
5480	NewTransactionFragment.DATE_FORMATTER.format(new	14
4667	NewTransactionFragment.DATE_FORMATTER.format(transaction.getTimeMillis())	9
5602	NewTransactionFragment.DATE_FORMATTER.format(trxDate))	7
19508	NewTransactionFragment.SELECTED_TRANSACTION_ID,-1)	9
5152	NewTransactionFragment.TIME_FORMATTER.format(new	15
5192	NewTransactionFragment.TIME_FORMATTER.format(transaction.getTimeMillis())	10
4461	NewTransactionFragment.TIME_FORMATTER.format(trxDate))	7
39753	Newer	8
10091	Next	33
49949	Next,check	5
2954	Next</string>	90
515	Ngewi	334
15318	Nicarag&#252	8
15336	Nicaragense</item>	19
16022	Nicolas	9
16668	Nieuw	6
17110	Nieuwe	6
39699	NineFrameLayout	13
43201	NineFrameLayout(Context	5
43040	NineHorizontalScrollView	8
42916	NineHorizontalScrollView(Context	4
42780	NineLinearLayout	13
43056	NineLinearLayout(Context	5
43038	NineViewGroup	8
42444	NineViewGroup(Context	4
1026	No	177
44789	Nobody	4
6552	Node	41
40712	Node(Animator	4
40628	Node(anim)	4
40782	Node.	4
23614	Nombreuses	12
36718	Non	4
37718	Normal	9
44316	Normally	8
28806	Norte	10
36181	North	11
29149	Noruegues</item>	10
26618	Not	53
31827	Note	44
18680	Note,in	9
47044	Note:	4
9700	Nothing	19
40466	Notifications	4
24950	Notify	18
11109	Nouvelle	9
54989	Nova	16
14787	Nova</string>	10
40418	Now	19
26114	Nowe	5
26119	Nowy	5
56177	Nsta</string>	2
2925	Nuevas	12
3756	Nuevo	12
40207	NullPointerException	4
54291	NullPointerException.class)	2
12488	Num	4
2023	Number	161
5307	NumberFormat	57
23464	NumberFormat.getCurrencyInstance().format(	2
12975	NumberFormat.getCurrencyInstance(locale)	12
23552	NumberFormat.getInstance()	28
6242	NumberFormat.getInstance().format(-8.99)	20
59904	NumberFormat.getInstance().format(-899)	3
51250	NumberFormat.getInstance(Locale.US)	8
13760	NumberFormat.getInstance(Locale.getDefault())	31
26494	NumberFormat.getInstance(locale)	22
12198	NumberFormat.getNumberInstance()	15
12720	NumberFormat.getNumberInstance().format(amount)	2
5408	NumberFormat.getNumberInstance(Locale.GERMANY)	7
61818	Numerator	3
48691	Numeric	4
11126	Numerical	2
25785	Numerose	5
18087	Numerosos	6
4966	Numerous	58
11941	Numrical	7
26161	Nuova	5
62107	Nurik	4
21958	Ny	9
21514	Nytt	9
20218	O	14
9098	OAuth	2
11542	OC	35
25991	OC-server</string>	6
58669	OC_DIR	4
31172	OC_DIR))	5
58657	OC_PASSWORD	4
58650	OC_SERVER	4
58646	OC_USERNAME	4
1528	OF	351
1379	OFX	265
6130	OFX")	16
26797	OFX&#8230	11
35455	OFX("Open	7
29869	OFX-	14
5411	OFX-Datei:\n</string>	21
4217	OFX-Datei</string>	27
5116	OFX-Dateien	25
4520	OFX-Format	25
8694	OFX-data</string>	12
27037	OFX-eksport	8
51895	OFX-eksportering	6
51871	OFX-eksportering</string>	6
51931	OFX-fil	4
12721	OFX.	11
7067	OFX:	25
4109	OFX</string>	168
30369	OFX\n	20
12902	OFX_DATE_FORMATTER	7
55106	OFX_DATE_FORMATTER.format(date)	4
20154	OFX_HEADER	9
20474	OFX_SGML_HEADER	7
1527	OK	14
10517	OK</string>	53
33852	OLD."	4
20365	OLDFILEUID=\"NONE\"	12
1525	ON	109
57339	ONE_DAY_IN_MILLIS	3
57315	ONE_DAY_IN_MILLIS)	3
1536	OR	381
16490	ORA</string>	11
62110	ORDER_BY	3
63311	ORIGIN_ACCOUNT_ID	7
57602	ORIGIN_ACCOUNT_UID	4
60640	OTHER	3
60450	OTHERWISE,ARISING	3
4502	OU	21
60559	OUT	3
24557	OUTER	9
32483	OWNCLOUD:	12
1664	Object	109
48664	Object()	4
41201	Object...	4
41488	Object.class	4
41083	ObjectAnimator	24
41549	ObjectAnimator()	4
41371	ObjectAnimator(Object	4
41361	ObjectAnimator(T	4
41505	ObjectAnimator(target,property)	4
41320	ObjectAnimator(target,propertyName)	4
40528	ObjectAnimator)	8
41567	ObjectAnimator,since	4
41852	ObjectAnimator,the	4
42220	ObjectAnimator,to	4
41875	ObjectAnimator,which	4
41287	ObjectAnimator.	4
42319	ObjectAnimator.</p>	4
41218	ObjectAnimator.animatedValue().	4
44979	ObjectAnimator.ofFloat(child,"scaleY",0)	4
45753	ObjectAnimator.ofFloat(child,"scaleY",0,1)	4
45646	ObjectAnimator.ofFloat(mClose,"translationX",	4
45158	ObjectAnimator.ofFloat(mClose,"translationX",0)	4
45307	ObjectAnimator.ofFloat(mMenuView,"alpha",0)	4
45549	ObjectAnimator.ofFloat(mMenuView,"alpha",1)	4
44981	ObjectAnimator.ofFloat(this,"alpha",0)	8
45604	ObjectAnimator.ofFloat(this,"alpha",1)	8
41569	ObjectKeyframe	5
41318	ObjectKeyframe(float	4
41518	ObjectKeyframe(fraction,null)	4
41152	ObjectKeyframe(fraction,value)	4
41610	ObjectKeyframe(getFraction(),mValue)	4
41598	ObjectKeyframe[Math.max(numKeyframes,2)]	4
41348	Object[1]	4
41682	Object[]	10
41856	Objects,this	4
41586	Objects.	6
49228	Observer	4
47785	Obtain	4
15501	Occidental</item>	13
5805	Off</string>	97
36402	Official	7
331	OfxAccountType	46
31950	OfxAccountType.CHECKING	7
31809	OfxAccountType.CREDITLINE	10
31695	OfxAccountType.MONEYMRKT	7
31686	OfxAccountType.SAVINGS	7
36776	OfxExportTest	8
36962	OfxExportTest()	10
6606	OfxExporter	16
26948	OfxExporter(Context	10
35711	OfxExporter(ExportParams	9
8724	OfxExporter(exportParameters,mDb)	5
6805	OfxExporter(getActivity(),exportAll)	5
6971	OfxExporter(mContext,exportAll)	5
35527	OfxExporter(mExportParams)	7
52413	OfxExporter(mExportParams,mDb)	7
54874	OfxExporter.getFormattedCurrentTime()	5
54854	OfxExporter.getOfxFormattedTime(mTimestamp)))	5
9339	OfxExporterTest	3
36657	OfxFormatter	11
34397	OfxFormatter(Context	11
36627	OfxFormatter(getActivity(),exportAll)	8
12255	OfxFormatter.getFormattedCurrentTime()	7
54861	OfxFormatter.getOfxFormattedTime(mTimestamp)))	4
63350	OfxHelper	2
52669	OfxHelper.OFX_SGML_HEADER	5
63360	OfxHelper.getFormattedCurrentTime()	5
35619	OfxHelper.getOfxFormattedTime(mTimestamp)))	4
50275	Oh	5
32833	Ok	14
54871	Old	10
39701	Older	4
398	Oleksandr	88
12798	Olutur</string>	20
29091	Om</item>	10
58146	Omani"	6
5269	Omani</item>	108
50182	Omit	4
21709	On	15
33961	On/Off	8
5760	On</string>	95
2722	OnAccountClickedListener	22
19478	OnAccountClickedListener,OnTransactionClickedListener{	7
19144	OnAccountSelectedListener	6
18944	OnAccountSelectedListener")	12
44545	OnActionExpandListener	13
48665	OnActionExpandListener#onMenuItemActionCollapse(MenuItem)	4
48377	OnActionExpandListener#onMenuItemActionExpand(MenuItem)	4
38478	OnActionModeFinishedListener	4
40077	OnActionModeFinishedListener)	6
38359	OnActionModeStartedListener	9
39344	OnActionModeStartedListener)	4
39091	OnActionModeStartedListener,OnActionModeFinishedListener	5
64315	OnArticleSelectedListener")	2
21537	OnChartValueSelectedListener	14
1503	OnChartValueSelectedListener,	10
24800	OnChartValueSelectedListener,DatePickerDialog.OnDateSetListener	9
33002	OnChartValueSelectedListener,OnItemSelectedListener	4
60143	OnChartValueSelectedListener,ReportOptionsListener,Refreshable	3
6070	OnCheckedChangeListener()	37
36337	OnCheckedChangeListener{	5
48288	OnChooseActivityListener	11
45119	OnClickListener	20
45421	OnClickListener()	23
49164	OnCloseListener	5
27324	OnColorSelectedListener	7
27312	OnColorSelectedListener)	3
48444	OnCreateContextMenuListener	4
38299	OnCreateOptionsMenuListener	6
38197	OnCreateOptionsMenuListener#onCreateOptionsMenu(com.actionbarsherlock.view.Menu)	4
37768	OnCreateOptionsMenuListener)	6
38792	OnCreateOptionsMenuListener,OnPrepareOptionsMenuListener,OnOptionsItemSelectedListener	4
38327	OnCreatePanelMenuListener	4
38257	OnCreatePanelMenuListener)	4
37963	OnCreatePanelMenuListener,OnPreparePanelListener,OnMenuItemSelectedListener	5
38772	OnCreatePanelMenuListener,OnPreparePanelListener,OnMenuItemSelectedListener,OnActionModeStartedListener,OnActionModeFinishedListener	4
56521	OnDateRangeSetListener	6
34295	OnDateSetListener	9
29328	OnDateSetListener,OnTimeSetListener	8
23860	OnDateSetListener,OnTimeSetListener,RecurrencePickerDialog.OnRecurrenceSetListener	4
50272	OnEditorActionListener	5
49790	OnEditorActionListener()	5
49217	OnFocusChangeListener	5
34989	OnFocusChangeListener()	22
49175	OnGlobalLayoutListener	4
49038	OnGlobalLayoutListener()	4
46304	OnItemClickListener	9
48126	OnItemClickListener()	9
45899	OnItemClickListener,if	4
19272	OnItemClickedListener	5
46492	OnItemLongClickListener	4
6682	OnItemSelectedListener	18
1326	OnItemSelectedListener()	18
52827	OnKeyboardActionListener	16
52779	OnKeyboardActionListener()	16
49317	OnLayoutChangeListener()	5
49432	OnLongClickListener#onLongClick	4
44783	OnMenuItemClickListener	12
38136	OnMenuItemSelectedListener	4
38292	OnMenuItemSelectedListener)	4
39077	OnMenuVisibilityListener	4
14585	OnNavigationListener	34
14057	OnNavigationListener()	23
38465	OnOptionsItemSelectedListener	6
38383	OnOptionsItemSelectedListener)	6
25969	OnPasscodeEnteredListener	5
650	OnPreferenceChangeListener	6
34126	OnPreferenceChangeListener()	14
3862	OnPreferenceChangeListener,Preference.OnPreferenceClickListener{	26
53	OnPreferenceChangeListener{	18
37928	OnPrepareOptionsMenuListener	5
38616	OnPrepareOptionsMenuListener)	6
38157	OnPreparePanelListener	4
37823	OnPreparePanelListener)	4
49582	OnQueryTextListener	5
53817	OnRecurrenceSetListener	5
63138	OnRemoteOperationListener	3
63096	OnRemoteOperationListener()	3
50265	OnShareTargetSelectedListener	4
49320	OnSuggestionListener	5
55092	OnTimeSetListener	3
46658	OnTouchListener	12
35132	OnTouchListener()	25
34990	OnTouchListener,removing	8
30444	OnTransactionClickedListener	9
30621	OnTransactionClickedListener{	6
7569	OnTransferFundsListener	10
9781	OnTransferFundsListener{	9
36072	OnTypeChangedListener	5
62496	OnTypeChangedListener(CalculatorEditText	3
36148	OnTypeChangedListener(EditText	8
13810	OnTypeChangedListener(amoutView,currencyTextView))	7
44569	Once	4
32647	Oncloud	7
40715	One	18
2394	Only	88
21074	Op&#231	13
20452	Opc&#231	11
62382	Opces	5
26079	Opci&#243	7
27962	Opciones	12
4999	Open	138
43065	OpenOverflowRunnable	5
43737	OpenOverflowRunnable(OverflowPopup	4
43014	OpenOverflowRunnable(popup)	4
54910	OpenOwnCloudDialog()	5
52673	Opening	14
14498	Opens	84
35298	Opens/creates	4
4567	Operation	13
10960	Opes	29
28221	Opprette	4
52257	Optimize	6
6303	Option	51
47764	Optional	4
4171	Optionen	19
6755	Options	53
3124	Options</string>	84
28054	Opzione	10
16435	Opzioni	27
54833	Or	8
59924	Ordinal	3
58468	Organisation	6
62474	Orientais</item>	6
15429	Oriental</item>	21
57992	Oro"	6
6074	Oro</item>	111
59556	Oro</item>+	1
9844	Os.isFamily(Os.FAMILY_WINDOWS)	4
41406	Other	14
38303	Others	4
23158	Otherwise	23
20159	Otherwise,a	4
47614	Otherwise,return	4
58790	Otherwise,the	3
45915	Our	4
55346	Output	6
28184	OutputStream	15
21478	OutputStreamWriter	17
20288	OutputStreamWriter(	19
63647	OutputStreamWriter(bufferedOutputStream)	3
21459	OutputStreamWriter(gzipOutputStream)	15
6480	OutputStreamWriter(new	30
42930	Overflow	7
42664	OverflowMenuButton	4
42530	OverflowMenuButton(Context	4
42736	OverflowMenuButton(mSystemContext)	4
42643	OverflowPopup	5
43241	OverflowPopup(Context	4
43034	OverflowPopup(mContext,mMenu,mOverflowButton,true)	4
61454	Overload	3
1080	Overloaded	100
50288	Overridden	5
34071	Override	11
885	Overrides	26
63184	OwnCloudClient	4
63097	OwnCloudClientFactory.createOwnCloudClient(serverUri,mContext,true)	3
63118	OwnCloudClientFactory.createOwnCloudClient(serverUri,this.mContext,true)	3
31105	OwnCloudCredentials()	7
63109	OwnCloudCredentialsFactory.newBasicCredentials(mOC_username,mOC_password)	4
32490	OwnCloudDialogFragment	8
32641	OwnCloudDialogFragment()	4
32614	OwnCloudDialogFragment.	4
32672	OwnCloudDialogFragment.newInstance(null)	4
32636	OwnCloudDialogFragment.newInstance(pref)	7
31012	OwnCloudExport()	7
54884	OwnCloudExportTest	5
54961	OwnCloudExportTest()	5
32520	Owncloud	7
32540	Owncloud")	7
32680	Owncloud</string>	7
31671	OwncloudDialogFragment	9
32514	OwncloudDialogFragment()	7
32578	OwncloudDialogFragment.	7
31642	OwncloudDialogFragment.newInstance(null)	9
32566	OwncloudDialogFragment.newInstance(pref)	7
38454	Owning	4
5482	PAGAR</item>	32
39110	PANELS_TAG	5
48688	PARAM_TYPES	5
35933	PARENT_ACCOUNT_ID	9
33097	PARENT_ACCOUNT_NAME	3
8952	PARENT_ACCOUNT_UID	11
26474	PARTICULAR	21
62338	PASS	5
57597	PASSCODE	9
23913	PASSCODE_CLASS_CALLER	5
23394	PASSCODE_REQUEST_CODE	11
24127	PASSCODE_REQUEST_CODE:	7
23802	PASSCODE_SESSION_INIT_TIME	6
7071	PAYABLE,RECEIVABLE,EQUITY,CURRENCY,STOCK,MUTUAL,ROOT	8
30686	PAYABLE,RECEIVABLE,EQUITY,CURRENCY,STOCK,MUTUAL_FUND	7
30595	PAYABLE,RECEIVABLE,EQUITY,CURRENCY,STOCK,MUTUAL_FUND,ROOT	8
27046	PAYABLE:	10
3788	PC.</string>	113
11489	PC</string>	47
27961	PC\n	9
58592	PENDENTS</item>	2
12241	PERIOD	11
20603	PERMISSION_REQUEST_WRITE_SD_CARD	6
20722	PERMISSION_REQUEST_WRITE_SD_CARD:{	6
32227	PIE_CHART(0),BAR_CHART(1),LINE_CHART(2),TEXT(3),NONE(4)	6
22373	PIN	8
29503	PIN</string>	6
27269	PLACEHOLDER_KEY	12
62352	PLACES	3
62158	POSITION_NONE	3
46984	POSITION_PROMPT_ABOVE	4
47501	POSITION_PROMPT_ABOVE:	4
46765	POSITION_PROMPT_BELOW	4
46562	POSITION_PROMPT_BELOW:	4
62040	POSITION_UNCHANGED	3
52552	PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE	3
52716	PREFERENCE_LAST_EXPORT_TIME_DEFAULT_VALUE.equals(utcString)	5
31139	PREFERENCE_LAST_EXPORT_TIME_KEY	7
21283	PREF_LAST_EXPORT_TIME	8
43724	PRESENTER_KEY	4
27866	PRESSED_STATE_MULTIPLIER	3
24807	PREVIOUS_MONTH,NEXT_MONTH,ALL_TIME	8
24959	PREVIOUS_MONTH:	6
61401	PRICES_TABLE_CREATE	3
6129	PROCESSING	14
46843	PROGRESS	4
60515	PROVIDED	3
42692	PROXIES	4
42907	PROXIES.get(view)	4
42713	PROXIES.put(view,proxy)	4
60524	PURPOSE	3
26565	PURPOSE.	18
58177	Pacifique	6
3781	PackageInfo	15
43100	PackageManager	24
50544	PackageManager.MATCH_DEFAULT_ONLY)	5
21063	PackageManager.PERMISSION_GRANTED)	14
43650	Padding	8
28589	Padro</string>	15
62130	Page	4
62124	PageFragmentCallbacks	3
62197	PageFragmentCallbacks")	3
62092	PageFragmentCallbacks))	3
9673	PageFragmentCallbacks,ReviewFragment.Callbacks,ModelCallbacks	5
62195	PageList	3
62045	PageList(	3
20089	Pager	6
14018	PagerAdapter	50
62229	Page{	3
62751	Pai</string>	3
46445	Paint	5
46078	Paint()	5
12698	Pair	8
13027	Pair<>(0L,0L)	4
7729	Pair<Long,Long>	21
12377	Pair<Long,Long>(1L,1L)	4
12452	Pair<Long,Long>(valueNum,valueDenom)	4
21080	Palavra	25
15569	Paname&#241	8
15820	Panameo</item>	9
38799	PanelFeatureState	4
34725	Panneau	5
28794	Paquisto</item>	12
33655	Parameters	4
18843	Paramtres	7
57528	Parcel	7
42974	Parcelable	27
57531	Parcelable.Creator<BudgetAmount>	3
57524	Parcelable.Creator<BudgetAmount>(){	3
43275	Parcelable.Creator<SavedState>	16
43272	Parcelable.Creator<SavedState>()	16
62883	Parcelable.Creator<Split>	4
63033	Parcelable.Creator<Split>()	4
62804	Parcelable{	4
63060	Parcels	4
6431	Parent	61
25124	Parse	26
12928	ParseExcep	18
603	ParseException	39
32320	ParseException("Cannot	5
2078	ParseException("Parse	6
32017	ParseException.class)	6
32002	ParsePosition	5
31492	ParsePosition(0)	5
59268	Parsed	2
31168	ParserConfigura	5
21804	ParserConfigurati	22
30328	ParserConfigurationExcept	13
7047	ParserConfigurationException	39
25175	ParserConfigurationException,SAXException,IOException	11
6837	ParserConfigurationException{	10
4505	Parses	60
6403	Partidas	13
2779	Pasivo	11
30829	Pass	11
616	PassLockActivity	42
11409	Passcode	33
62527	Passcode.	3
735	Passcode</string>	134
9361	PasscodeLockActivity	18
1720	PasscodeLockScreenActivity	11
34160	PasscodePreferenceActivity	10
856	PasscodePreferenceFragment	12
1916	PasscodePreferenceFragment.PASSCODE_REQUEST_CODE)	14
1922	PasscodePreferenceFragment.PASSCODE_REQUEST_CODE:	14
734	PasscodePreferenceFragment.REQUEST_CHANGE_PASSCODE)	5
25	PasscodePreferenceFragment.REQUEST_CHANGE_PASSCODE:	5
661	PasscodePreferenceFragment.REQUEST_DISABLE_PASSCODE:	5
1366	PasscodePreferenceFragment.class.getName().equals(fragmentName)	9
21087	Passe</string>	25
29687	Passivo	14
59521	Passivo</string>	11
55030	Passivos	7
54938	Passivos</string>	10
15032	Passkode</string>	11
29655	Pastikan	5
20801	Path	15
12868	Pattern	8
12442	Pattern.compile(".*\\D")	5
16590	Pedersen	8
27903	Pedro	7
12039	Penanganan	5
22725	Pencatatan	7
47196	Pending	8
9947	PendingIntent	57
25106	PendingIntent.FLAG_CANCEL_CURRENT)	3
50023	PendingIntent.FLAG_ONE_SHOT)	5
33940	PendingIntent.FLAG_UPDATE_CURRENT)	3
54777	PendingIntent.getActivity(context,0,	5
49736	PendingIntent.getActivity(getContext(),0,queryIntent,	5
20334	PendingIntent.getBroadcast(GnuCashApplication.getAppContext(),	4
25096	PendingIntent.getBroadcast(context,	9
18369	PendingIntent.getBroadcast(getActivity().getApplicationContext(),	6
35513	PendingIntent.getBroadcast(mContext,	4
58789	PendingIntent.getService(context,0,alarmIntent,0)	7
55364	PendingIntent.getService(context,0,alarmIntent,PendingIntent.FLAG_NO_CREATE)	11
22807	Pengguna</string>	7
52861	Pennings	12
52955	Pennings,extended	17
27949	Per	10
39053	Per-child	4
11875	Perbaikan	5
8813	Perform	12
35514	Performs	20
7607	Period	20
8288	PeriodType	45
8020	PeriodType#WEEK	15
32358	PeriodType.DAILY	4
32209	PeriodType.DAY	8
32273	PeriodType.FORTNIGHTLY	4
34750	PeriodType.HOUR	2
9944	PeriodType.MONTH	15
32290	PeriodType.MONTHLY	4
8367	PeriodType.WEEK	14
35062	PeriodType.WEEK)	14
35080	PeriodType.WEEK,but	3
32324	PeriodType.WEEKLY	4
32147	PeriodType.YEAR	6
32357	PeriodType.YEARLY	4
8688	PeriodType.parse(period)	5
7770	PeriodType.valueOf(characterString.toUpperCase())	14
8272	PeriodType.valueOf(type)	8
53524	Periodicity	5
60488	Permission	3
12281	Permissions")	3
20670	Permite	10
54822	Persist	2
49300	Persists	5
58001	Peseta	6
58014	Peseta"	7
5560	Peso	137
58029	Peso"	8
59070	Peso")	2
4826	Peso</item>	127
45793	PhoneWindow	4
1474	PieChart	30
6482	PieChartActivity	15
50655	PieChartActivity.COLORS.length])	4
50911	PieChartActivity.COLORS[(dataSet.getEntryCount()	4
24913	PieChartActivityTest	7
24875	PieChartActivityTest()	7
24884	PieChartActivityTest.class.getName()	7
2051	PieChartFragment	10
32454	PieChartFragment()	9
60234	PieChartFragment())	6
24627	PieChartFragment.groupSmallerSlices(getData(),getActivity())	6
13947	PieChartReportTest	7
13165	PieChartReportTest()	10
13542	PieChartReportTest.class.getName()	5
1905	PieData	49
24802	PieData(Collections.singletonList(""),dataSet)	11
24848	PieData(labels,dataSet)	12
51808	PieData(names,dataSet)	5
33880	PieData(names,dataSet))	5
6869	PieData(names,set))	5
839	PieData(newLabels,dataSet)	6
6721	PieDataSet	28
60392	PieDataSet(newEntries,"")	3
8281	PieDataSet(null,"")	25
50715	PieDataSet(null,getResources().getString(R.string.label_chart_no_data))	6
7353	PieDataSet(values,"")	4
46378	Pin	4
18527	Placeholder	12
52016	Planlegge	4
2124	Play	56
10940	PlayStore</string>	5
42246	Playing	4
42064	Plays	4
4235	Please	102
11265	Plusieurs	19
20666	Pode	19
48329	Policy	8
49486	PopUpWindow.OnDismissListener#onDismiss	4
46263	Populate	8
49316	Popup	4
47398	PopupDataSetObserver	4
46576	PopupDataSetObserver()	4
3931	PopupMenu	20
2301	PopupMenu(context,v)	7
60412	PopupMenu(getActivity(),v)	9
63521	PopupMenu(this,view)	4
9010	PopupMenu.OnMenuItemClickListener	9
2230	PopupMenu.OnMenuItemClickListener()	7
9806	PopupMenu.OnMenuItemClickListener{	21
43028	PopupPresenterCallback	4
42560	PopupPresenterCallback()	4
46873	PopupScrollListener	5
47392	PopupScrollListener()	4
47243	PopupTouchInterceptor	5
47205	PopupTouchInterceptor()	4
37548	PopupWindow	8
46646	PopupWindow's	4
46749	PopupWindow(context,attrs,defStyleAttr)	4
46789	PopupWindow(context,attrs,defStyleAttr,defStyleRes)	4
46615	PopupWindow(wrapped,attrs,defStyleAttr)	4
47488	PopupWindow.INPUT_METHOD_NOT_NEEDED	4
49263	PopupWindow.OnDismissListener	4
20081	Por	15
30516	Position	36
28078	Possibilit	5
42303	Possible	13
39756	Post	8
58267	Pound"	9
59055	Pound")	2
5565	Pound</item>	118
4030	PowerManager	8
6243	PowerManager.WakeLock	11
20206	Pr&#243	21
3637	Preference	65
57203	Preference.OnPreferenceChangeListener	3
31277	Preference.OnPreferenceChangeListener()	5
57127	Preference.OnPreferenceChangeListener,Preference.OnPreferenceClickListener{	3
2421	Preference.OnPreferenceClickListener()	32
57091	Preference.OnPreferenceClickListener,Preference.OnPreferenceChangeListener	3
38803	PreferenceActivity	17
8969	PreferenceActivity.getActiveBookSharedPreferences()	17
9554	PreferenceActivity.getActiveBookSharedPreferences().edit()	10
59860	PreferenceActivity.getActiveBookSharedPreferences().getString(getString(R.string.key_default_transaction_type),"DEBIT")	3
31273	PreferenceActivity.getActiveBookSharedPreferences(GnuCashApplication.getAppContext())	7
13396	PreferenceActivity.getActiveBookSharedPreferences(context)	15
13144	PreferenceActivity.getActiveBookSharedPreferences(context).edit()	8
13235	PreferenceActivity.getActiveBookSharedPreferences(getActivity())	9
13700	PreferenceActivity.getActiveBookSharedPreferences(getActivity()).edit()	4
59890	PreferenceActivity.getActiveBookSharedPreferences(getActivity()).getString(getString(R.string.key_default_transaction_type),"DEBIT")	5
59874	PreferenceActivity.getActiveBookSharedPreferences(mAcccountsActivity)	5
13170	PreferenceActivity.getActiveBookSharedPreferences(mReportsActivity).edit()	4
13907	PreferenceActivity.getActiveBookSharedPreferences(mTransactionsActivity)	5
10112	PreferenceActivity.getBookSharedPreferences(bookUID)	10
59859	PreferenceActivity.getBookSharedPreferences(bookUID).edit().clear().apply()	3
57212	PreferenceActivity.getBookSharedPreferences(context)	6
57070	PreferenceActivity.getBookSharedPreferences(context).edit()	5
57208	PreferenceActivity.getBookSharedPreferences(getActivity())	8
57130	PreferenceActivity.getBookSharedPreferences(getActivity()).edit()	5
57107	PreferenceActivity.getBookSharedPreferences(getActivity()).getString(getString(R.string.key_default_transaction_type),"DEBIT")	4
57001	PreferenceActivity.getBookSharedPreferences(mAcccountsActivity)	5
56998	PreferenceActivity.getBookSharedPreferences(mReportsActivity).edit()	5
142	PreferenceFragment	35
57065	PreferenceFragmentCompat	5
57008	PreferenceFragmentCompat.OnPreferenceStartFragmentCallback{	5
57124	PreferenceFragmentCompat{	3
55082	PreferenceFragment{	9
57020	PreferenceHeadersFragment	3
1130	PreferenceManager	24
57189	PreferenceManager#getDefaultSharedPreferences(Context)	6
19318	PreferenceManager.getDefaultSharedPreferences(AccountsActivity.this)	13
56854	PreferenceManager.getDefaultSharedPreferences(Configuration.this)	2
21581	PreferenceManager.getDefaultSharedPreferences(FirstRunWizardActivity.this)	9
23629	PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext())	24
24349	PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext()).edit()	6
21854	PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext()).edit().putString(Exporter.PREF_LAST_EXPORT_TIME,timeStamp).apply()	10
59467	PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext()).edit().putString(GnuCashApplication.getAppContext().getString(R.string.key_default_currency),mostAppearedCurrency).apply()	5
9286	PreferenceManager.getDefaultSharedPreferences(WidgetConfigurationActivity.this)	15
3886	PreferenceManager.getDefaultSharedPreferences(context)	45
28326	PreferenceManager.getDefaultSharedPreferences(context).edit()	39
57060	PreferenceManager.getDefaultSharedPreferences(context).getBoolean(context.getString(R.string.key_enable_crashlytics),false)	3
1322	PreferenceManager.getDefaultSharedPreferences(getActivity())	119
13601	PreferenceManager.getDefaultSharedPreferences(getActivity()).edit()	17
6932	PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(getString(R.string.key_default_transaction_type),"DEBIT")	24
63272	PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(getString(R.string.pref_default_currency),Account.DEFAULT_CURRENCY_CODE)	2
63281	PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(getString(R.string.pref_default_currency),AccountsActivity.DEFAULT_CURRENCY_CODE)	2
63870	PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(getString(R.string.pref_default_currency),MainActivity.DEFAULT_CURRENCY_CODE)	2
63771	PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(getString(R.string.pref_default_currency),Money.DEFAULT_CURRENCY_CODE)	2
62316	PreferenceManager.getDefaultSharedPreferences(getActivity().getApplicationContext())	5
34179	PreferenceManager.getDefaultSharedPreferences(getActivity().getApplicationContext()).edit()	9
56991	PreferenceManager.getDefaultSharedPreferences(getAppContext()).edit()	9
178	PreferenceManager.getDefaultSharedPreferences(getApplicationContext())	55
63798	PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit()	4
36651	PreferenceManager.getDefaultSharedPreferences(mAcccountsActivity)	21
35104	PreferenceManager.getDefaultSharedPreferences(mAccountsActivity)	8
7082	PreferenceManager.getDefaultSharedPreferences(mContext)	35
21329	PreferenceManager.getDefaultSharedPreferences(mContext).edit().putString("qif_last_export",timeStamp).apply()	7
21872	PreferenceManager.getDefaultSharedPreferences(mContext).edit().putString(Exporter.PREF_LAST_EXPORT_TIME,timeStamp).apply()	16
21266	PreferenceManager.getDefaultSharedPreferences(mContext).getString("qif_last_export",zeroTimeStamp)	7
21491	PreferenceManager.getDefaultSharedPreferences(mContext).getString(Exporter.PREF_LAST_EXPORT_TIME,Exporter.TIMESTAMP_ZERO)	9
57013	PreferenceManager.getDefaultSharedPreferences(mReportsActivity).edit()	7
3239	PreferenceManager.getDefaultSharedPreferences(this)	65
25156	PreferenceManager.getDefaultSharedPreferences(this).edit()	7
1594	PreferenceManager.getDefaultSharedPreferences(this).getString(getString(R.string.key_report_currency),Money.DEFAULT_CURRENCY_CODE)	20
64165	PreferenceManager.setDefaultValues(this,BooksDbAdapter.getInstance().getActiveBookUID(),	1
64010	PreferenceManager.setDefaultValues(this,BooksDbAdapter.getInstance().getActiveBookUID(),+	1
3067	PreferenceManager.setDefaultValues(this,R.xml.fragment_transaction_preferences,false)	14
52459	Preferences	2
31111	Preferences.")	15
6338	Preferences</string>	168
52425	PreferencesHelper	2
7381	PreferencesHelper()	11
23189	PreferencesHelper.PREFERENCE_LAST_EXPORT_TIME_KEY	5
9160	PreferencesHelper.getLastExportTime()	10
28728	PreferencesHelper.getLastExportTime(bookUID)	4
31290	PreferencesHelper.setLastExportTime(	4
52424	PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampForNow())	5
52511	PreferencesHelper.setLastExportTime(TimestampHelper.getTimestampFromNow())	4
52604	PreferencesHelper.setLastExportTime(goldenBoyBirthdayTimestamp)	2
52665	PreferencesHelper.setLastExportTime(updatedLastExportTime)	2
52498	PreferencesHelperTest	2
37014	Preferred	5
52313	Prefixes	3
4727	Prefs	3
5486	Prefs")	3
5489	Prefs">	3
8084	Preliminary	21
38990	Prepare	8
60669	Prepares	6
39203	Preparing	4
44313	Presenter	4
44787	Presenters	4
44481	Presents	4
60364	Press.FINGER)	3
36750	Pressed	4
35213	Pressing	3
30342	PrettyTime	8
30142	PrettyTime()	8
51403	Prevent	4
28549	Prevents	12
6718	Previous	7
29573	Prfe,ob	6
16123	Prfrences</string>	14
11368	Price	49
52140	Price("commodity1UID","commodity2UID",exchangeRate)	3
12291	Price()	9
52521	Price(){	11
52622	Price(String	13
23837	Price(commoditiesDbAdapter.getCommodityUID(mOriginAmount.getCurrency().getCurrencyCode()),	10
13762	Price(commodityUID,currencyUID)	18
54388	Price(currencyUID,commodityUID)	2
8146	Price(originCommodityUID,targetCommodityUID)	6
8104	Price(originCommodityUID,targetCommodityUID,rate)	6
13010	Price.toString()	3
54399	PriceDbAdapterTest	2
61282	PriceEntry	3
12627	PriceEntry.COLUMN_COMMODITY_UID	23
14441	PriceEntry.COLUMN_COMMODITY_UID,	2
33515	PriceEntry.COLUMN_CREATED_AT	14
12718	PriceEntry.COLUMN_CURRENCY_UID	23
14461	PriceEntry.COLUMN_CURRENCY_UID,	2
12320	PriceEntry.COLUMN_DATE	17
14653	PriceEntry.COLUMN_DATE,	2
33517	PriceEntry.COLUMN_MODIFIED_AT	15
14391	PriceEntry.COLUMN_SOURCE	13
14218	PriceEntry.COLUMN_SOURCE,	2
14321	PriceEntry.COLUMN_TYPE	12
14026	PriceEntry.COLUMN_TYPE,	2
14608	PriceEntry.COLUMN_UID	19
14424	PriceEntry.COLUMN_VALUE_DENOM	16
14492	PriceEntry.COLUMN_VALUE_NUM	13
14053	PriceEntry.COLUMN_VALUE_NUM,	2
53095	PriceEntry.INDEX_UID	8
14433	PriceEntry.TABLE_NAME	21
53012	PriceEntry._ID	11
12153	PriceTest	5
7494	PricesDbAdapter	54
14255	PricesDbAdapter(SQLiteDatabase	8
23725	PricesDbAdapter(db)	20
36147	PricesDbAdapter(mDb)	23
32841	PricesDbAdapter(mainDb)	7
8487	PricesDbAdapter.getInstance()	37
52332	PricesDbAdapter.getInstance().addRecord(price)	3
9383	Primarily	3
29026	Principe</item>	10
41717	Private	12
16606	Probeer	3
28179	Probleme	11
58797	Process	4
7242	ProcessingInstruction	17
22209	Produktu</string>	5
3220	Programadas</string>	36
5668	Programm	35
39031	Progress	4
9875	ProgressBar	27
46887	ProgressBar&gt	4
46712	ProgressBar_animationResolution	4
47417	ProgressBar_indeterminate	4
46616	ProgressBar_indeterminateBehavior	4
47284	ProgressBar_indeterminateDrawable	4
46776	ProgressBar_indeterminateDuration	4
47347	ProgressBar_indeterminateOnly	4
46780	ProgressBar_interpolator	4
46524	ProgressBar_max	4
47460	ProgressBar_maxHeight	4
47067	ProgressBar_maxWidth	4
47455	ProgressBar_minHeight	4
46534	ProgressBar_minWidth	4
47200	ProgressBar_progress	4
46587	ProgressBar_progressDrawable	4
46604	ProgressBar_secondaryProgress	4
2598	ProgressDialog	27
31696	ProgressDialog(context)	9
6736	ProgressDialog(mContext)	8
33911	ProgressDialog.show(mContext,"Upgrading	4
27500	Project	87
27481	Proper	4
6498	Properly	27
39131	Properties	9
41637	Property	4
41721	PropertyValuesHOlder	8
40868	PropertyValuesHolder	16
41658	PropertyValuesHolder(Property	4
41515	PropertyValuesHolder(String	4
41715	PropertyValuesHolder(property)	4
41649	PropertyValuesHolder(propertyName)	4
41590	PropertyValuesHolder,since	4
41711	PropertyValuesHolder.	7
41301	PropertyValuesHolder...	4
42238	PropertyValuesHolder[]	7
42247	PropertyValuesHolder[]{PropertyValuesHolder.ofFloat("",values)	4
42203	PropertyValuesHolder[]{PropertyValuesHolder.ofInt("",values)	4
42158	PropertyValuesHolder[]{PropertyValuesHolder.ofObject("",	4
42395	PropertyValuesHolder[numValues]	4
41609	PropertyValuesObjects	4
60473	Provide	3
20034	Provides	11
22147	Prozentsatz	8
23023	Prprio</string>	19
55002	Prprio]]></string>	7
48979	Prunes	4
14696	Prv	17
26409	Public	22
12176	Puedes	12
31537	Pull	3
55108	PushbackInputStream	3
55196	PushbackInputStream(	3
45854	Put	13
34495	Q	6
6263	QIF	182
35561	QIF("Quicken	7
52174	QIF,OFX	4
17924	QIF-</string>	14
22404	QIF-Datei	8
55948	QIF-filer	2
6926	QIF:	33
25618	QIF\n	6
52143	QIF_DATE_FORMATTER	7
52123	QIF_DATE_FORMATTER.format(date)	3
449	QUARTER:	31
50478	QUERY_LIMIT	5
20403	QUIDA</item>	11
44847	QWERTY-mode	4
62391	Qatar</item>	6
56757	Qif	6
6548	QifExporter	23
35716	QifExporter(Context	5
25872	QifExporter(ExportParams	29
9656	QifExporter(exportParameters,mDb)	5
33687	QifExporter(exportParams,db)	8
6426	QifExporter(getActivity(),exportAll)	7
6946	QifExporter(mContext,exportAllTransactions)	5
35500	QifExporter(mExportParams)	10
52410	QifExporter(mExportParams,mDb)	7
56747	QifExporter.splitQIF(new	8
33340	QifExporter.splitQIF(src,dst)	8
9125	QifExporterTest	3
52215	QifHelper	5
7332	QifHelper.formatDate(mTimestamp)	6
18191	QifHelper.getImbalanceAccountName(Currency.getInstance(Money.DEFAULT_CURRENCY_CODE))	5
7324	QifHelper.getImbalanceAccountName(mAmount.getCurrency())	8
31065	QifHelper.getQifHeader(mAccountType)	8
15498	Qu&#233	27
32151	Qualified	8
3476	QualifiedAccountNameCursorAdapter	24
21455	QualifiedAccountNameCursorAdapter(	26
2923	QualifiedAccountNameCursorAdapter(Context	14
2516	QualifiedAccountNameCursorAdapter(getActivity(),	32
10936	QualifiedAccountNameCursorAdapter(getActivity(),accountCursor)	5
59651	QualifiedAccountNameCursorAdapter(getActivity(),cursor)	5
11309	QualifiedAccountNameCursorAdapter(getActivity(),mAccountCursor)	7
10719	QualifiedAccountNameCursorAdapter(getActivity(),mCursor)	10
3181	QualifiedAccountNameCursorAdapter(getSupportActionBar().getThemedContext(),	11
34355	QualifiedAccountNameCursorAdapter(this,	10
50624	QualifiedAccountNameCursorAdapter(this,cursor)	9
54903	Quantity	3
29173	Quenia</item>	10
38390	Query	9
27348	QuickContactBadge	3
28647	Quirguisto</item>	10
34688	R.array.export_destinations,android.R.layout.simple_spinner_item)	17
18204	R.array.recurrence_entries,android.R.layout.simple_spinner_item)	5
19317	R.array.recurrence_period_strings,android.R.layout.simple_spinner_item)	6
64142	R.array.report_account_types,android.R.layout.simple_spinner_item)	3
45419	R.attr.actionBarStyle,0)	10
48137	R.attr.actionBarTabTextStyle)	4
45710	R.attr.actionDropDownStyle)	8
39648	R.bool.abs__action_bar_embed_tabs)	4
39901	R.bool.abs__action_bar_embed_tabs))	4
39362	R.bool.abs__action_bar_expanded_action_views_exclusive)	4
45459	R.bool.abs__action_bar_expanded_action_views_exclusive))	4
39777	R.bool.abs__config_allowActionMenuItemTextWithIcon)	8
44084	R.bool.abs__config_showMenuShortcutsWhenKeyboardPresent)	4
40337	R.bool.abs__split_action_bar_is_narrow)	4
44996	R.bool.abs__split_action_bar_is_narrow))	4
32154	R.color.account_blue	5
32428	R.color.account_green	5
32079	R.color.account_purple	5
32265	R.color.account_red	6
1619	R.color.credit_green	28
518	R.color.debit_red	28
32056	R.color.theme_primary	6
27469	R.color.title_green	6
51719	R.drawable.ic_drawer,	5
21611	R.drawable.ic_star_black_24dp	9
21894	R.drawable.ic_star_border_black_24dp	9
55103	R.drawable.ic_star_border_white_24dp	5
55216	R.drawable.ic_star_border_white_48dp	4
55183	R.drawable.ic_star_white_24dp	5
55211	R.drawable.ic_star_white_48dp	4
40073	R.id.abs__action_bar_container)	4
40091	R.id.abs__action_context_bar)	4
49072	R.id.abs__list_item)	4
40038	R.id.abs__split_action_bar)	9
29290	R.id.account_name	12
60135	R.id.btn_balance_sheet:	5
32035	R.id.btn_bar_chart:	9
32121	R.id.btn_line_chart:	10
60235	R.id.btn_pie_chart:	3
18201	R.id.context_menu_delete:	54
59640	R.id.context_menu_duplicate_transaction:	3
25708	R.id.context_menu_edit_accounts:	19
53855	R.id.context_menu_edit_budget:	2
59607	R.id.context_menu_move_transaction:	3
18313	R.id.context_menu_move_transactions:	12
54552	R.id.ctx_menu_delete_book:	2
2843	R.id.ctx_menu_rename_book:	8
3175	R.id.ctx_menu_sync_book:	10
298	R.id.group_all_time:	7
277	R.id.group_by_month:	7
340	R.id.group_by_quarter:	7
1574	R.id.group_by_week:	7
1477	R.id.group_by_year:	7
19645	R.id.menu_add_account:	21
57544	R.id.menu_add_budget_amount:	3
14002	R.id.menu_add_scheduled_export:	12
56628	R.id.menu_add_split:	4
27721	R.id.menu_add_transaction:	9
18836	R.id.menu_cancel:	17
13412	R.id.menu_chart_report:	4
63922	R.id.menu_compact_trn_view:	6
30433	R.id.menu_create_book:	2
1796	R.id.menu_edit_account:	14
64330	R.id.menu_edit_accounts:	1
53724	R.id.menu_edit_budget:	2
19429	R.id.menu_export:	25
27675	R.id.menu_favorite_account:	16
29753	R.id.menu_group_other_slice:	10
800	R.id.menu_group_reports_by:	6
5476	R.id.menu_order_by_size)	5
6244	R.id.menu_order_by_size:	7
32152	R.id.menu_percentage_mode:	10
33739	R.id.menu_pie_chart:	4
18202	R.id.menu_recurring_transactions:	15
13849	R.id.menu_reports:	5
156	R.id.menu_save:	42
27969	R.id.menu_settings:	15
24638	R.id.menu_toggle_average_lines:	7
34312	R.id.menu_toggle_labels:	6
4800	R.id.menu_toggle_legend:	28
53870	R.id.nav_item_budgets:	4
24841	R.id.nav_item_export:	3
24915	R.id.nav_item_export:{	9
59619	R.id.nav_item_favorites:	3
57138	R.id.nav_item_help:	9
20848	R.id.nav_item_open:	17
24791	R.id.nav_item_reports:	12
24894	R.id.nav_item_scheduled_actions:	10
54514	R.id.nav_item_scheduled_export:	6
54573	R.id.nav_item_scheduled_trn:	9
24732	R.id.nav_item_settings:	12
30378	R.id.primary_text	8
23058	R.id.progress_indicator	3
32890	R.id.radio_ofx_format:	18
12769	R.id.radio_qif_format:	17
51381	R.id.radio_xml_format:	9
23321	R.id.toolbar	3
39911	R.integer.abs__max_action_buttons)	8
18731	R.java	15
45244	R.layout.abs__action_bar_home)	4
42456	R.layout.abs__action_menu_item_layout)	4
49238	R.layout.abs__activity_chooser_view_list_item,parent,false)	4
39831	R.layout.abs__dialog_title_holo	4
44525	R.layout.abs__popup_menu_item_layout	4
39858	R.layout.abs__screen_action_bar	4
40117	R.layout.abs__screen_action_bar_overlay	4
40166	R.layout.abs__screen_simple	4
39670	R.layout.abs__screen_simple_overlay_action_mode	4
49694	R.layout.abs__search_dropdown_item_icons_2line,	5
23049	R.layout.activity_accounts	3
23102	R.layout.activity_budgets	3
23217	R.layout.activity_reports	3
23087	R.layout.activity_scheduled_events	3
23090	R.layout.activity_transactions	3
63917	R.layout.cardview_compact_transaction	6
63930	R.layout.cardview_transaction	6
25281	R.layout.drawer_list_item,aboutNavOptions)	6
25447	R.layout.drawer_list_item,accountNavOptions)	8
29760	R.layout.drawer_list_item,mNavDrawerEntries))	3
25064	R.layout.drawer_list_item,transactionsNavOptions)	9
32399	R.layout.fragment_bar_chart	6
60194	R.layout.fragment_line_chart	3
60176	R.layout.fragment_pie_chart	3
60165	R.layout.fragment_report_summary	3
60106	R.layout.fragment_text_report	3
29432	R.layout.list_item_account,null,	21
30788	R.layout.list_item_scheduled_trxn,null,	13
18430	R.layout.list_item_transaction,null,	21
63696	R.layout.sherlock_spinner_item,	2
3787	R.layout.sherlock_spinner_item,accountsCursor)	14
27014	R.layout.sherlock_spinner_item,mAccountsCursor)	6
45820	R.layout.simple_spinner_item,entries)	4
61337	R.layout.split_account_spinner_item,mCursor)	6
19791	R.layout.widget_4x1)	23
19764	R.plurals.label_sub_accounts,subAccountCount,subAccountCount)	7
31536	R.raw.default_accounts)	4
45070	R.string.abs__action_bar_home_description))	4
45376	R.string.abs__action_bar_up_description))	4
49658	R.string.abs__activity_chooser_view_see_all))	4
49291	R.string.abs__activitychooserview_choose_application))	4
50365	R.string.abs__shareactionprovider_share_with)	4
50376	R.string.abs__shareactionprovider_share_with_application)	4
62230	R.string.btn_wizard_next)	3
27422	R.string.color_picker_default_title	3
27204	R.string.color_picker_default_title,	3
56804	R.string.delete_all_transactions_confirmation_message	6
56745	R.string.delete_transaction_confirmation_message	6
51583	R.string.drawer_close	5
51721	R.string.drawer_open,	5
51275	R.string.msg_delete_all_transactions_confirmation	4
51315	R.string.msg_delete_transaction_confirmation	4
23207	R.string.nav_menu_scheduled_actions	3
62067	R.string.review	3
23163	R.string.title_accounts	3
32159	R.string.title_balance_sheet_report	5
32329	R.string.title_bar_chart	6
23242	R.string.title_budgets	3
32157	R.string.title_cash_flow_report	6
32193	R.string.title_line_chart	6
60191	R.string.title_pie_chart	3
23214	R.string.title_reports	6
23271	R.string.title_transactions	3
51419	R.string.toast_backup_failed	11
51389	R.string.toast_backup_successful	11
24640	R.string.toast_chart_percentage_mode_current_bar	12
32253	R.string.toast_chart_percentage_mode_total	10
31723	R.string.toast_disable_double_entry_to_save_transaction,	15
1084	R.string.toast_enter_full_passcode,Toast.LENGTH_LONG).show()	5
20092	R.string.toast_error_importing_accounts	17
35749	R.string.toast_error_importing_accounts,Toast.LENGTH_LONG).show()	4
51368	R.string.toast_no_account_name_entered,	8
9221	R.string.toast_no_transactions_to_export,	3
59129	R.string.toast_recurring_transaction_deleted,	4
19983	R.string.toast_success_importing_accounts	17
66	R.string.toast_wrong_passcode,Toast.LENGTH_SHORT).show()	5
56688	R.styleable.CalculatorEditText,	4
45666	R.styleable.SherlockActionBar)	4
45142	R.styleable.SherlockActionBar_backgroundSplit)	4
45232	R.styleable.SherlockActionBar_backgroundStacked)	5
45238	R.styleable.SherlockActionBar_homeLayout,	4
45642	R.styleable.SherlockActionBar_indeterminateProgressStyle,0)	4
43149	R.styleable.SherlockActionMenuItemView,0,0)	4
43207	R.styleable.SherlockActionMenuItemView_android_minWidth,0)	4
45416	R.styleable.SherlockActionMode_background))	4
45048	R.styleable.SherlockActionMode_backgroundSplit)	4
45599	R.styleable.SherlockActionMode_height,0)	4
45624	R.styleable.SherlockActionMode_subtitleTextStyle,0)	4
45389	R.styleable.SherlockActionMode_titleTextStyle,0)	4
49033	R.styleable.SherlockActivityChooserView,defStyle,0)	4
49335	R.styleable.SherlockActivityChooserView_expandActivityOverflowButtonDrawable)	4
48857	R.styleable.SherlockActivityChooserView_initialActivityCount,	4
48812	R.styleable.SherlockMenuGroup)	4
48675	R.styleable.SherlockMenuItem)	4
43825	R.styleable.SherlockMenuView_preserveIconSpacing,false)	4
47697	R.styleable.SherlockSpinner,defStyle,0)	4
48021	R.styleable.SherlockSpinner_android_dropDownHorizontalOffset,0)	4
48010	R.styleable.SherlockSpinner_android_dropDownVerticalOffset,0)	4
48077	R.styleable.SherlockSpinner_android_dropDownWidth,	4
47712	R.styleable.SherlockSpinner_android_popupBackground))	4
14597	README	6
61782	REAL	6
4019	RECEBER</item>	22
26910	RECEIVABLE:	10
27880	RECENT:	8
63428	RECONCILE_DATE	4
63465	RECONCILE_STATE	4
53317	RECURRENCE_TABLE_CREATE	2
6353	RECURRENCE_VERSION	6
479	REFERENCES	60
50609	REFINE_ALL	5
50321	REFINE_BY_ENTRY	5
50580	REFINE_NONE	5
25009	RELEASE_KEY_ALIAS	2
25057	RELEASE_KEY_PASSWORD	2
25005	RELEASE_STORE_PASSWORD	2
33418	REMOVED_SPLITS	14
25303	RENAME	20
21058	REPLACE	18
33643	REPLACE,"	5
55288	REQUEST_BACKUP_FILE	3
55430	REQUEST_BACKUP_FILE:	3
57174	REQUEST_CHANGE_PASSCODE	7
57600	REQUEST_CHANGE_PASSCODE:	4
34173	REQUEST_CODE	4
23231	REQUEST_CREATE_BUDGET	5
57575	REQUEST_DISABLE_PASSCODE	4
31051	REQUEST_DISABLE_PASSCODE:	6
19859	REQUEST_EDIT_ACCOUNT	21
54061	REQUEST_EDIT_BUDGET	2
9669	REQUEST_EDIT_BUDGET_AMOUNTS	5
57425	REQUEST_EDIT_BUDGET_AMOUNTS){	3
111	REQUEST_EDIT_TRANSACTION	3
55295	REQUEST_EXPORT_FILE	3
55223	REQUEST_EXPORT_FILE:	3
32661	REQUEST_LINK_TO_DBX	11
51397	REQUEST_LINK_TO_DBX:	9
54083	REQUEST_OPEN_ACCOUNT	2
27065	REQUEST_OPEN_DOCUMENT	2
20555	REQUEST_PERMISSION	6
20226	REQUEST_PERMISSION_WRITE_SD_CARD	5
20799	REQUEST_PERMISSION_WRITE_SD_CARD:{	5
27620	REQUEST_PICK_ACCOUNTS_FILE	17
31250	REQUEST_PICK_ACCOUNTS_FILE:	10
32726	REQUEST_RESOLVE_CONNECTION	12
51632	REQUEST_RESOLVE_CONNECTION:	7
31864	REQUEST_SPLIT_EDITOR	10
49890	REST	5
42063	RESTART	4
30901	RESULT_CANCELED)	4
30692	RESULT_CANCELED){	8
51586	RESULT_OK)	5
42065	REVERSE	4
42579	REVERSE)	4
9138	RFC	13
42073	RGB	4
2904	ROOT	78
59562	ROOT,and	2
54261	ROOT,create	3
19757	ROOT:	14
54449	ROOT_ACCOUNT_FULL_NAME	4
32959	ROOT_ACCOUNT_NAME	3
33195	ROOT_ACCOUNT_UID	3
32735	ROUND	5
26513	ROUNDING_MODE	16
33989	ROW"	5
57909	RSD	6
41869	RUNNING	6
42130	RUNNING)	4
42832	RUNNING:	4
58217	RUR:	6
46416	R_styleable_Button	4
46015	R_styleable_Button_textAllCaps	4
46235	R_styleable_LinearLayout	5
45947	R_styleable_TextView	4
46056	R_styleable_TextView_textAllCaps	4
23492	RadialTimePickerDialog	8
53922	RadialTimePickerDialog.OnTimeSetListener	5
23865	RadialTimePickerDialog.newInstance(	8
9529	RadialTimePickerDialogFragment	4
9269	RadialTimePickerDialogFragment()	2
53954	RadialTimePickerDialogFragment.OnTimeSetListener	5
8893	RadialTimePickerDialogFragment.newInstance(	4
9097	RadioButton	33
58940	Rand")	2
25987	Random	6
1786	Range:"/>	4
21259	RangeDenomination	5
21236	RangeDenomination.ALL	5
21444	RangeDenomination.ALL){	5
21712	RangeDenomination.MONTH	5
21585	RangeDenomination.QUARTER	5
21270	RangeDenomination.WEEK	5
21758	RangeDenomination.YEAR	5
211	RangeInterval	5
824	RangeInterval.ALL	5
33	RangeInterval.ALL){	5
1027	RangeInterval.MONTH	5
2017	RangeInterval.QUARTER	5
219	RangeInterval.WEEK	5
700	RangeInterval.YEAR	5
16477	Raport</string>	6
34776	Raports	5
11634	Rapport</string>	9
52034	Rapporter	4
98	RateThisApp.Config	21
34365	RateThisApp.Config(10000,10000)	6
35179	RateThisApp.Config(14,100)	12
1765	RateThisApp.Config(14,30)	9
36029	RateThisApp.Config(14,50)	6
59472	RateThisApp.Config(30,100)	6
573	RateThisApp.init(config)	7
28792	RateThisApp.init(rateAppConfig)	6
837	RateThisApp.onStart(this)	11
31	RateThisApp.showRateDialogIfNeeded(this)	11
60301	Raw	3
10728	Re-design	23
34764	Re-enable	6
46638	Re-measure	9
48016	Re-post	4
62155	Re-use	3
50404	React	5
19360	Read	23
7614	ReadablePeriod	10
1263	Reads	28
57799	Reajustado"	6
58494	Real"	6
58994	Real")	2
5248	Real</item>	133
51328	Really?	3
27770	Reassigns	7
36184	Received"	10
62553	Receiver	2
47715	Receiving	4
47771	Recenter	4
25600	Rechner	7
50511	RecognizerIntent.LANGUAGE_MODEL_FREE_FORM	5
49186	RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH)	5
44837	Recompute	4
18192	Record	78
42824	Rect	20
6747	Rect()	42
43244	RectF	4
42849	RectF()	4
3507	Recurrence	69
7540	Recurrence(@NonNull	8
8864	Recurrence(PeriodType.DAY)	5
34729	Recurrence(PeriodType.HOUR)	2
9096	Recurrence(PeriodType.MONTH)	15
54471	Recurrence(PeriodType.MONTH))	10
9508	Recurrence(PeriodType.WEEK)	16
54493	Recurrence(PeriodType.WEEK))	6
9377	Recurrence(PeriodType.YEAR)	3
9999	Recurrence(PeriodType.parse(period))	5
7690	Recurrence(biWeekly)	5
8549	Recurrence(periodType)	18
9827	Recurrence(periodType))	10
55765	Recurrence.	2
7440	Recurrence.fromLegacyPeriod(period)	4
14553	RecurrenceDbAdapter	26
14605	RecurrenceDbAdapter(SQLiteDatabase	4
14610	RecurrenceDbAdapter(db)	15
58686	RecurrenceDbAdapter(db)).updateRecord(scheduledAction.getUID(),contentValues)	8
53096	RecurrenceDbAdapter(mDb)	9
13937	RecurrenceDbAdapter(mDb))	8
32815	RecurrenceDbAdapter(mainDb)	7
53297	RecurrenceDbAdapter.getInstance()	7
53139	RecurrenceDbAdapter.getInstance().getRecord(recurrenceUID)	2
53315	RecurrenceEntry	2
14294	RecurrenceEntry.COLUMN_BYDAY	4
14220	RecurrenceEntry.COLUMN_BYDAY,	2
52993	RecurrenceEntry.COLUMN_CREATED_AT	2
53153	RecurrenceEntry.COLUMN_MODIFIED_AT	2
14584	RecurrenceEntry.COLUMN_MULTIPLIER	4
14211	RecurrenceEntry.COLUMN_MULTIPLIER,	2
14518	RecurrenceEntry.COLUMN_PERIOD_END	4
14429	RecurrenceEntry.COLUMN_PERIOD_START	4
14562	RecurrenceEntry.COLUMN_PERIOD_START,	2
14411	RecurrenceEntry.COLUMN_PERIOD_TYPE	4
14136	RecurrenceEntry.COLUMN_PERIOD_TYPE,	2
14374	RecurrenceEntry.COLUMN_UID	4
53324	RecurrenceEntry.INDEX_UID	2
14266	RecurrenceEntry.TABLE_NAME	4
53004	RecurrenceEntry._ID	2
34777	RecurrenceParser	6
19012	RecurrenceParser.DAY_MILLIS	9
34785	RecurrenceParser.HOUR_MILLIS	2
32199	RecurrenceParser.MONTH_MILLIS	4
32183	RecurrenceParser.WEEK_MILLIS	4
8269	RecurrenceParser.YEAR_MILLIS	7
7427	RecurrenceParser.YEAR_MILLIS)	5
53940	RecurrenceParser.parse(mEventRecurrence)	4
2863	RecurrenceParser.parse(mEventRecurrence,	16
3797	RecurrenceParser.parse(mEventRecurrence,ScheduledAction.ActionType.TRANSACTION)	3
20442	RecurrenceParser.parse(mEventRecurrence,ScheduledEvent.EventType.TRANSACTION)	4
51512	RecurrencePickerDialog	5
34555	RecurrencePickerDialog()	8
23362	RecurrencePickerDialog.OnRecurrenceSetListener	25
53857	RecurrencePickerDialog.OnRecurrenceSetListener,	5
31634	RecurrencePickerDialog.OnRecurrenceSetListener,OnTransferFundsListener	5
54144	RecurrencePickerDialogFragment	2
54148	RecurrencePickerDialogFragment()	2
54074	RecurrencePickerDialogFragment.OnRecurrenceSetListener	4
53756	RecurrencePickerDialogFragment.OnRecurrenceSetListener,	5
8718	RecurrencePickerDialogFragment.OnRecurrenceSetListener,CalendarDatePickerDialogFragment.OnDateSetListener	6
54172	RecurrencePickerDialogFragment.OnRecurrenceSetListener,OnTransferFundsListener	2
54502	RecurrenceTest	2
53915	RecurrenceViewClickListener	2
54029	RecurrenceViewClickListener((AppCompatActivity)	5
53920	RecurrenceViewClickListener(AppCompatActivity	5
18135	Recurrentes</string>	8
19269	RecurringTransactionsCursorLoader	4
19280	RecurringTransactionsCursorLoader(Context	8
18325	RecurringTransactionsCursorLoader(getActivity())	4
18448	RecurringTransactionsListFragment	5
18106	RecurringTransactionsListFragment()	5
63823	RecursiveMoveFiles	3
63818	RecursiveMoveFiles(File	3
14314	RecursiveMoveFiles(src,dst)).start()	6
63684	Recursively	5
46384	RecycleBin	5
46469	RecycleBin()	4
1663	RecyclerView	17
54018	RecyclerView.Adapter<BudgetAmountAdapter.BudgetAmountViewHolder>{	2
1995	RecyclerView.Adapter<DateRangeAdapter.DateViewHolder>	7
59820	RecyclerView.Adapter<VH>	6
1275	RecyclerView.ViewHolder	26
10787	Redesenhado	11
25724	Rediseo	8
27535	Redraw	3
41239	ReentrantReadWriteLock	4
41330	ReentrantReadWriteLock()	4
26626	Reference	30
13084	Refresh	34
47262	RefreshProgressRunnable	4
46785	RefreshProgressRunnable(id,progress,fromUser)	4
47314	RefreshProgressRunnable(int	4
9851	Refreshable	7
59474	Refreshable)	2
13479	Refreshable){	2
20100	Refreshable,	12
19734	Refreshable,LoaderCallbacks<Cursor>	5
60378	Refreshable,LoaderCallbacks<Cursor>,AdapterView.OnItemLongClickListener{	8
60664	Refreshable,LoaderCallbacks<Cursor>{	3
19903	Refreshable,OnAccountClickedListener,OnTransactionClickedListener{	9
13948	Refreshable{	2
1877	Refreshes	26
38538	Register	21
63551	Registers	1
4293	Registrierung	25
2047	Regular	6
17151	Rekenmachine	6
21079	Relat&#243	10
5659	Relatrios	6
39216	Relevant	4
23435	Relies	11
18535	Reload	14
42850	Remeasure	7
46462	Remember	4
32496	RemoteOperationResul	8
57359	RemoteOperationResult	8
30435	RemoteViews	21
30149	RemoteViews(context.getPackageName(),	21
10113	Remove	38
50543	Remove,workaround	5
40469	Removes	18
58420	Renminbi"	6
5058	Renminbi</item>	107
1281	Report	7
24712	Report"/>	7
2176	ReportOptionsListener	19
1733	ReportOptionsListener){	10
21341	ReportOptionsListener{	6
1960	ReportPreferenceFragment	5
1206	ReportPreferenceFragment.class.getName().equals(fragmentName)	5
1728	ReportSummaryFragment	24
745	ReportSummaryFragment())	15
32067	ReportType	6
32238	ReportType(int	6
32214	ReportType.BAR_CHART	6
60213	ReportType.LINE_CHART	3
32072	ReportType.NONE	6
32080	ReportType.NONE)	7
32434	ReportType.NONE){	6
60097	ReportType.PIE_CHART	3
60133	ReportType.TEXT	3
1550	Reporting	14
1434	ReportsActivity	41
32171	ReportsActivity")	6
24900	ReportsActivity))	9
12462	ReportsActivity.COLORS.length]	9
2106	ReportsActivity.COLORS.length])	9
1557	ReportsActivity.COLORS[(dataSet.getEntryCount()	9
34147	ReportsActivity.COLORS[accountToColorMap.size()	7
60151	ReportsActivity.GroupInterval	3
60163	ReportsActivity.GroupInterval.MONTH	3
32248	ReportsOverviewFragment	3
32474	ReportsOverviewFragment()	3
19912	Represents	34
1773	Request	30
14108	Require	19
32535	Required	13
27553	Required,else	14
45323	Reread	8
55560	ReselectSpinner	5
55508	ReselectSpinner(Context	5
42961	Reserve	4
43993	Reset	4
3430	ResetCounter	7
2820	ResetCounter(),DOUBLE_TAP_DELAY)	7
2989	Resets	15
47281	Resize	4
46766	ResizePopupRunnable	5
47550	ResizePopupRunnable()	4
42489	ResolveInfo	19
35408	Resolves	5
38487	Resource	14
50263	ResourceCursorAdapter	5
2428	Resources	57
50627	Resources,to	5
39009	Resources.Theme	8
33657	Resources.getSystem().getIdentifier("btn_check_holo_light","drawable","android")	11
40183	ResourcesCompat	4
39972	ResourcesCompat()	4
47729	Respect	4
25946	Restaurar	7
18875	Restaurer	7
18990	Restore	23
7003	Result	20
28102	ResultCallback<DriveApi.DriveContentsResult>()	6
28201	ResultCallback<DriveFolder.DriveFileResult>	9
28186	ResultCallback<DriveFolder.DriveFileResult>()	12
51616	ResultCallback<DriveFolder.DriveFolderResult>()	7
18647	Retrieve	31
8929	Retrieved	2
8807	Retrieves	46
51938	Rettet	7
2042	Return	112
3537	Returning	30
350	Returns	338
50114	Reusable	4
43971	Reuses	4
50586	Reverse	5
62102	ReviewFragment()	3
62181	ReviewItem(getTitle(),mData.getString(CURRENCY_CODE_DATA_KEY),getKey()))	3
28906	Revisit	13
57966	Rial"	8
4447	Rial</item>	125
21230	Rica	10
28604	Rica</item>	13
5735	Rican	115
25918	Ridisegno	5
5063	Right)</item>	112
58004	Rights	6
58122	Ringgit"	6
59033	Ringgit")	2
4062	Ringgit</item>	108
33468	Riprova.</string>	2
29444	Riprovare</string>	4
29253	Ritentare</string>	6
57872	Riyal"	6
5657	Riyal</item>	111
54209	Robolectric	2
50620	RobolectricGradleTestRunner	4
52701	Rodrigues	2
16918	Roebel</item>	6
17124	Roemeense	6
16978	Roepie</item>	6
62241	Roman	4
6201	Romanian	97
28963	Romeno</item>	10
2519	Root	13
53220	Root")	5
8024	Root</act:name>	4
58263	Rouble"	9
46670	RoundRectShape(roundedCorners,null,null)	4
36236	Rounding	9
26267	RoundingMode	13
36092	RoundingMode#HALF_EVEN	5
26608	RoundingMode.HALF_EVEN	6
31748	RoundingMode.HALF_EVEN)	14
32525	RoundingMode.HALF_EVEN).divide(new	10
10484	RoundingMode.HALF_EVEN).doubleValue()	2
46435	Row	4
11613	Rpertoire	5
28761	Ruanda</item>	10
58486	Ruble"	6
58968	Ruble")	2
5154	Ruble</item>	101
58642	Rule	3
58623	Rules	3
40061	Runnable	48
48456	Runnable#run	4
6770	Runnable()	117
48548	Runnable,because	4
60633	Runs	3
52035	RuntimeException	6
26584	RuntimeException("Could	12
39401	RuntimeException("Couldn't	4
46184	RuntimeException("Don't	4
35518	RuntimeException("Error	4
48533	RuntimeException("Expecting	4
35008	RuntimeException("Failed	2
32130	RuntimeException("Report	6
4042	RuntimeException("Splits	8
60249	RuntimeException("There	5
48586	RuntimeException("Unexpected	4
23980	RuntimeException("Unsupported	19
19108	RuntimeException("bad	7
48026	RuntimeException("setOnItemClickListener	4
1032	RuntimeException(e)	41
63746	RuntimeException(e.getTargetException())	3
31357	RuntimeException{	16
58411	Rupee"	7
58993	Rupee")	2
5242	Rupee</item>	121
16496	Rupee</item>+	2
58976	Rupiah")	2
62508	Rupie</item>	6
28881	Russo</item>	11
62440	Rwanda</item>	6
8186	S	20
31281	SAF	2
31353	SAF.	2
46500	SANS_ICE_CREAM	5
19220	SAVED_SELECTED_ITEMS	7
1265	SAXException	100
64093	SAXException("Commodity	3
23233	SAXException("Multiple	7
52154	SAXException("ROOT	4
5726	SAXException("Unable	17
23181	SAXException("multiple	4
23831	SAXException(message)	5
23402	SAXException(message,e)	2
23623	SAXException(msg,e)	8
61259	SAXException,ParserConfigurationException,IOException	8
8532	SAXParser	34
25136	SAXParserFactory	28
25304	SAXParserFactory.newInstance()	28
7822	SAXParserFactory.newInstance().newSAXParser()	3
4534	SCHEDULED	6
51781	SCHEDULED_ACTIONS_TABLE_CREATE	11
26664	SCHEDULED_ACTION_UID	6
59668	SCHEDULED_EVENTS_TABLE_CREATE	4
47235	SCROLL_STATE_TOUCH_SCROLL	4
3171	SD	197
29498	SD-Karte	6
5266	SD-Kartenspeicher</string>	16
16997	SD-kaart	5
21197	SD-kort</string>	8
21503	SD-kortet	8
11108	SD</item>	80
10903	SD</string>	90
4255	SDCARD	14
51518	SDCARD/org.gnucash.android/backups"	4
5286	SDCARD</string>	111
5043	SDK	9
64099	SD_CARD	3
7066	SD_CARD:	26
28433	SEARCH_ACCOUNT_NAME	17
43435	SECONDARY	4
34736	SECOND_MILLIS	6
20916	SECURITY=\"NONE\"	12
41918	SEEKED	4
43249	SEEKED:	4
3572	SELECT	70
19257	SELECTED_ACCOUNT_ID	14
29427	SELECTED_ACCOUNT_NAME	6
8823	SELECTED_ACCOUNT_UID	6
43317	SELECTED_ALTERNATIVE	4
29267	SELECTED_TRANSACTION_ID	8
36042	SELECTED_TRANSACTION_IDS	8
64218	SELECTED_TRANSACTION_UID	2
1365	SELECTED_VALUE_PATTERN	32
12352	SELURUH	5
11193	SEMUA	3
49024	SERIAL_EXECUTOR	5
9817	SESSION_TIMEOUT	5
14254	SET	27
6776	SEt	3
6739	SGML	59
60587	SHALL	3
51446	SHARE	5
7057	SHARING:	22
9704	SHOULD_DISPLAY_BALANCE	4
44532	SHOW_AS_ACTION_ALWAYS	9
44646	SHOW_AS_ACTION_ALWAYS)	4
44650	SHOW_AS_ACTION_ALWAYS:	4
48264	SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW	4
44362	SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW)	4
44833	SHOW_AS_ACTION_IF_ROOM	9
44807	SHOW_AS_ACTION_IF_ROOM)	4
44800	SHOW_AS_ACTION_IF_ROOM:	4
44858	SHOW_AS_ACTION_MASK	4
44898	SHOW_AS_ACTION_MASK)	4
44576	SHOW_AS_ACTION_NEVER	9
44472	SHOW_AS_ACTION_NEVER:	4
44508	SHOW_AS_ACTION_WITH_TEXT	8
44205	SHOW_AS_ACTION_WITH_TEXT)	4
46117	SHOW_DIVIDER_BEGINNING	4
47449	SHOW_DIVIDER_BEGINNING)	4
47079	SHOW_DIVIDER_END	4
46896	SHOW_DIVIDER_END)	4
45888	SHOW_DIVIDER_MIDDLE	4
46679	SHOW_DIVIDER_MIDDLE)	4
46431	SHOW_DIVIDER_NONE	4
32977	SIMPLE_ACCOUNT_NAME	3
32944	SIMPLE_ACCOUNT_UID	3
26992	SIZE	6
27208	SIZE_LARGE	7
27239	SIZE_SMALL	7
27159	SIZE_SMALL)	3
62358	SKIP_PASSCODE_SCREEN	4
60631	SOFTWARE	3
59852	SOFTWARE.	6
52602	SOURCE_USER	8
50672	SPACE_BETWEEN_SLICES	4
62345	SPLITS	3
33613	SPLITS_DB_VERSION	12
34097	SPLITS_DB_VERSION)	4
20073	SPLITS_DB_VERSION){	10
35556	SPLITS_TABLE_CREATE	3
52131	SPLIT_AMOUNT_PREFIX	3
52199	SPLIT_CATEGORY_PREFIX	3
33390	SPLIT_EDITOR:	5
33284	SPLIT_LIST	7
52056	SPLIT_MEMO_PREFIX	3
52233	SPLIT_PERCENTAGE_PREFIX	3
61835	SPLIT_VALUE_AMOUNT	6
12012	SQL	81
19967	SQL,code	12
51062	SQLit	12
2610	SQLite	87
50636	SQLiteDa	16
59937	SQLiteDataba	4
3212	SQLiteDatabase	137
34090	SQLiteException.class)	4
35296	SQLiteOpenHelper	15
21128	SQLiteQueryBuilder	25
20886	SQLiteQueryBuilder()	25
1854	SQLiteStatement	102
14085	SQlite	15
14045	SQliteDatabase	19
25459	START	9
21019	STATE_DISPLAY_MODE	4
11192	STATE_REPORT_TYPE	6
13848	STOCK(TransactionType.DEBIT),MUTUAL(TransactionType.DEBIT),ROOT	7
33847	STOCK(TransactionType.DEBIT),MUTUAL(TransactionType.DEBIT),TRADING,ROOT	3
26706	STOCK:	16
41872	STOPPED	7
42009	STOPPED)	6
42231	STOPPED).	4
42048	STOPPED,RUNNING,SEEKED.	4
19083	SU,MO,etc.	7
52062	SUBSTR	7
54352	SUFFIX	4
54683	SX	5
55116	SX_ID	5
45934	SYNC_FIRST_POSITION	4
46273	SYNC_MAX_DURATION_MILLIS	4
46084	SYNC_SELECTED_POSITION	4
44185	SYSTEM	4
29551	S\'eliminaran	5
48709	Safe	4
14988	Saldo	25
28039	Saldos	6
15844	Salom&#243	10
15933	Salomn</item>	10
28622	Salomo</item>	11
5023	Salvador	113
28696	Salvador</item>	11
46192	Same	4
22513	Sandi</string>	7
60304	Sanitized	3
15598	Santa	22
29049	Saudita</item>	10
18991	Sauvegarde	7
16384	Sauvegarde&#8230	8
34839	Sauvegarde/Export	5
16322	Sauvegarde</string>	14
34751	Sauvegardes	5
27283	Save	26
43029	SavedState	16
43122	SavedState()	4
42852	SavedState(Parcel	16
44911	SavedState(Parcelable	12
42783	SavedState(in)	16
45741	SavedState(superState)	12
42861	SavedState[]	16
43125	SavedState[size]	16
32808	Saves	5
36388	Scale	16
46949	Schedule	4
4896	Scheduled	56
19726	ScheduledActio	3
83	ScheduledAction	113
20088	ScheduledAction(ActionType	11
8917	ScheduledAction(ActionType.TRANSACTION)	12
5601	ScheduledAction(ScheduledAction.ActionType.BACKUP)	43
7665	ScheduledAction(ScheduledAction.ActionType.TRANSACTION)	38
19471	ScheduledAction(ScheduledAction.ActionType.valueOf(typeString))	10
54104	ScheduledAction(actionType)	4
32297	ScheduledAction.ActionType	12
25765	ScheduledAction.ActionType.BACKUP)	15
54616	ScheduledAction.ActionType.BACKUP){	10
25581	ScheduledAction.ActionType.TRANSACTION	9
2553	ScheduledAction.ActionType.TRANSACTION)	28
54637	ScheduledAction.ActionType.TRANSACTION){	6
32272	ScheduledAction.ActionType.valueOf(characterString)	7
53034	ScheduledAction.ActionType.valueOf(cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TYPE)))	3
19548	ScheduledAction.PeriodType	5
19889	ScheduledAction.PeriodType.valueOf(characterString.toUpperCase())	5
55717	ScheduledAction.computeNextTimeBasedScheduledExecutionTime()	2
53260	ScheduledAction.getPeriodType(period)	4
3174	ScheduledAction.parseScheduledAction(mTransaction,mRecurrencePeriod)	11
855	ScheduledActionDbAdapter	85
14099	ScheduledActionDbAdapter(SQLiteDatabase	17
3284	ScheduledActionDbAdapter(db)	41
58704	ScheduledActionDbAdapter(db,new	8
32829	ScheduledActionDbAdapter(db,recurrenceDbAdapter)	12
36588	ScheduledActionDbAdapter(mDb)	28
13968	ScheduledActionDbAdapter(mDb,new	8
63437	ScheduledActionDbAdapter(mainDb,mRecurrenceDbAdapter)	4
32652	ScheduledActionDbAdapter(mainDb,recurrenceDbAdapter)	3
13106	ScheduledActionDbAdapter.getInstance()	54
26123	ScheduledActionDbAdapter.getInstance().addRecord(scheduledAction)	11
6379	ScheduledActionDbAdapter.getInstance().addRecord(scheduledAction,DatabaseAdapter.UpdateMethod.insert)	11
34684	ScheduledActionDbAdapter.getInstance().addScheduledAction(scheduledAction)	8
59085	ScheduledActionDbAdapter.getInstance().deleteRecord(id)	4
51767	ScheduledActionDbAdapter.getInstance().deleteRecord(scheduledActionUID)	5
61780	ScheduledActionDbAdapter.getInstance().getRecord(scheduledActionUID)	3
61761	ScheduledActionDbAdapter.getInstance().getRecord(transaction.getScheduledActionUID())	3
27088	ScheduledActionDbAdapter.getInstance().getScheduledAction(scheduledActionUID)	9
1235	ScheduledActionDbAdapter.getInstance().getScheduledAction(transaction.getScheduledActionUID())	6
19989	ScheduledActionDbAdapter.getInstance().getScheduledActionsWithUID(mTransaction.getUID())	5
59574	ScheduledActionDbAdapter.getInstance().updateRecord(	3
53739	ScheduledActionDbAdapter.getInstance().updateRecord(scheduledAction.getUID(),contentValues)	6
54457	ScheduledActionDbAdapterTest	2
31525	ScheduledActionEntry	4
14458	ScheduledActionEntry.COLUMN_ACTION_UID	30
26921	ScheduledActionEntry.COLUMN_ACTION_UID)	8
14341	ScheduledActionEntry.COLUMN_ADVANCE_CREATION	4
14594	ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY	4
14292	ScheduledActionEntry.COLUMN_AUTO_CREATE	4
14381	ScheduledActionEntry.COLUMN_AUTO_NOTIFY	4
14240	ScheduledActionEntry.COLUMN_CREATED_AT	19
14448	ScheduledActionEntry.COLUMN_ENABLED	17
14428	ScheduledActionEntry.COLUMN_END_TIME	17
62568	ScheduledActionEntry.COLUMN_EVENT_UID	4
62563	ScheduledActionEntry.COLUMN_EVENT_UID)	3
14350	ScheduledActionEntry.COLUMN_EXECUTION_COUNT	15
19411	ScheduledActionEntry.COLUMN_EXECUTION_COUNT+	15
14485	ScheduledActionEntry.COLUMN_LAST_RUN	21
19410	ScheduledActionEntry.COLUMN_MODIFIED_AT	18
19761	ScheduledActionEntry.COLUMN_NUM_OCCURRENCES	5
19730	ScheduledActionEntry.COLUMN_NUM_OCCURRENCES+	5
32161	ScheduledActionEntry.COLUMN_PERIOD	19
14317	ScheduledActionEntry.COLUMN_RECURRENCE_UID	4
14523	ScheduledActionEntry.COLUMN_START_TIME	14
14054	ScheduledActionEntry.COLUMN_TAG	20
14134	ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID	4
14315	ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY	16
14251	ScheduledActionEntry.COLUMN_TYPE	37
14477	ScheduledActionEntry.COLUMN_UID	37
60960	ScheduledActionEntry.INDEX_UID	8
14413	ScheduledActionEntry.TABLE_NAME	36
25157	ScheduledActionEntry.TABLE_NAME)	4
26745	ScheduledActionEntry.TABLE_NAME+"."+ScheduledActionEntry.COLUMN_UID	6
25213	ScheduledActionEntry._ID	19
55839	ScheduledActionService	5
60052	ScheduledActionService()	3
7680	ScheduledActionService.processScheduledActions(actions,mDb)	25
60072	ScheduledActionServiceTest	3
54426	ScheduledActionTest	2
32364	ScheduledActions	8
54627	ScheduledActionsActivity	8
54564	ScheduledActionsActivity.DisplayMode.EXPORT_ACTIONS)	5
54543	ScheduledActionsActivity.DisplayMode.TRANSACTION_ACTIONS)	8
54668	ScheduledActionsListFragment	3
54691	ScheduledActionsListFragment()	3
54700	ScheduledActionsListFragment.getInstance(ScheduledAction.ActionType.BACKUP)	3
54681	ScheduledActionsListFragment.getInstance(ScheduledAction.ActionType.TRANSACTION)	3
54631	ScheduledActionsViewPager	3
54646	ScheduledActionsViewPager(FragmentManager	3
54692	ScheduledActionsViewPager(getSupportFragmentManager())	3
18661	ScheduledEvent	35
18608	ScheduledEvent(EventType	7
59774	ScheduledEvent(ScheduledEvent.EventType.TRANSACTION)	2
33630	ScheduledEvent(ScheduledEvent.EventType.valueOf(typeString))	6
18610	ScheduledEvent(eventType)	4
19010	ScheduledEventDbAdapter	14
59680	ScheduledEventDbAdapter(Context	2
30894	ScheduledEventDbAdapter(SQLiteDatabase	5
33550	ScheduledEventDbAdapter(db)	3
59663	ScheduledEventDbAdapter(getActivity())	2
62569	ScheduledEventDbAdapter(mDb)	3
20945	ScheduledEventDbAdapter.getInstance()	5
20953	ScheduledEventDbAdapter.getInstance().updateRecord(	4
59698	ScheduledEventEntry	3
33704	ScheduledEventEntry.COLUMN_CREATED_AT	4
33750	ScheduledEventEntry.COLUMN_ENABLED	3
33745	ScheduledEventEntry.COLUMN_END_TIME	6
20919	ScheduledEventEntry.COLUMN_EVENT_UID	8
33601	ScheduledEventEntry.COLUMN_EVENT_UID)	4
33512	ScheduledEventEntry.COLUMN_EXECUTION_COUNT+	3
59699	ScheduledEventEntry.COLUMN_LAST_RUN	4
33621	ScheduledEventEntry.COLUMN_MODIFIED_AT	4
33788	ScheduledEventEntry.COLUMN_NUM_OCCURRENCES+	3
59676	ScheduledEventEntry.COLUMN_PERIOD	4
33815	ScheduledEventEntry.COLUMN_START_TIME	6
33564	ScheduledEventEntry.COLUMN_TAG	5
59700	ScheduledEventEntry.COLUMN_TYPE	4
59666	ScheduledEventEntry.COLUMN_UID	6
62561	ScheduledEventEntry.INDEX_UID	3
33560	ScheduledEventEntry.TABLE_NAME	7
59681	ScheduledEventEntry.TABLE_NAME)	3
59697	ScheduledEventEntry._ID	4
19688	ScheduledEvents	15
62589	ScheduledEventsActivity	3
62594	ScheduledEventsActivity.DisplayMode.TRANSACTION_EVENTS)	3
54583	ScheduledExportCursorAdapter	6
54569	ScheduledExportCursorAdapter(	6
54535	ScheduledExportCursorAdapter(Context	6
54605	ScheduledExportCursorLoader	5
54639	ScheduledExportCursorLoader(Context	5
54523	ScheduledExportCursorLoader(getActivity())	6
54526	ScheduledExportListFragment	9
54596	ScheduledExportListFragment()	5
54715	ScheduledTransactionsCursorAdapter	3
54632	ScheduledTransactionsCursorAdapter(	3
54694	ScheduledTransactionsCursorAdapter(Context	3
64286	ScheduledTransactionsCursorLoader	1
30888	ScheduledTransactionsCursorLoader(Context	4
54597	ScheduledTransactionsCursorLoader(getActivity())	6
54652	ScheduledTransactionsListFragment	9
29764	ScheduledTransactionsListFragment()	8
3541	Scheduler	15
62554	SchedulerReceiver	3
62558	SchedulerReceiver.completeWakefulIntent(intent)	3
20123	SchedulerService	6
4301	SchedulerService()	13
60062	SchedulerService.processScheduledActions(actions,mDb)	4
3542	Schedules	11
58049	Schilling"	6
30464	ScrollingFABBehavior	3
30361	ScrollingFABBehavior(Context	3
40254	ScrollingTabContainerView	12
48107	ScrollingTabContainerView(Context	4
40109	ScrollingTabContainerView(mContext)	4
12254	Se	27
37319	Search	15
49450	SearchAutoComplete	10
50528	SearchAutoComplete(Context	5
49672	SearchAutoComplete.class.getMethod("doAfterTextChanged")	5
50058	SearchAutoComplete.class.getMethod("doBeforeTextChanged")	5
49446	SearchDialog	5
19493	SearchManager	18
50576	SearchManager#EXTRA_DATA_KEY	5
50361	SearchManager#FLAG_QUERY_REFINEMENT	5
50441	SearchManager#SUGGEST_COLUMN_FLAGS	5
49277	SearchManager,for	5
50220	SearchManager.FLAG_QUERY_REFINEMENT)	5
20049	SearchView	27
49496	SearchView(Context	5
37309	SearchView.	12
50343	SearchView.this.onItemSelected(position)	5
50413	SearchView.this.onTextChanged(s)	5
48965	SearchableInfo	10
49547	SearchableInfo.	7
49811	SearchableInfo.ActionKeyInfo	5
45932	Searches	4
51202	Second	7
243	See	366
42223	Seeked	4
22090	Segment	8
22075	Segmente	8
59520	Seguinte</string>	11
22917	Segurana</string>	11
22600	Seimbang</string>	7
12333	Selecciona	6
12634	Seleccione	34
5106	Selecionar	17
15673	Selecione	15
38806	Select	5
33013	Selected	8
46463	SelectionNotifier	4
46196	SelectionNotifier()	4
1585	Selects	21
16307	Selezionare	39
11878	Seluruh	3
4037	Senha</string>	19
3356	Separator	9
64356	SerialExecutor	1
64399	SerialExecutor()	1
33551	Serializes	6
33004	SeriesSelection	3
20902	Service	6
55534	Service")	2
55530	Service"),	2
2679	Service"/>	15
238	Set	203
681	Set"))	8
7515	Set</slot:value>	8
48894	Set<HistoricalRecord>	4
18247	Set<Integer>	6
39675	Set<OnMenuVisibilityListener>	4
18413	Set<String>	11
43255	Set<View_OnAttachStateChangeListener>	4
49399	SetActivated	4
49212	SetActivated.invoke(convertView,false)	4
49402	SetActivated.invoke(convertView,true)	4
58653	SetOwnCloudCredentials()	4
159	Sets	259
28216	Sette	4
47797	Setting	11
332	Settings	151
51405	Settings",Toast.LENGTH_LONG).show()	4
51473	Settings",Toast.LENGTH_SHORT).show()	4
57198	Settings">	3
25683	Settings)\n	23
54887	Settings.	5
31790	Settings.System.HAPTIC_FEEDBACK_ENABLED,0)	4
31509	Settings.System.getInt(mKeyboardView.getContext().getContentResolver(),	4
3767	SettingsActivity	35
25119	SettingsActivity.DROPBOX_APP_KEY,SettingsActivity.DROPBOX_APP_SECRET)	6
25113	SettingsActivity.REQUEST_RESOLVE_CONNECTION	7
51611	SettingsActivity.getGoogleApiClient(GnuCashApplication.getAppContext())	8
25135	SettingsActivity.getGoogleApiClient(getActivity())	7
25043	SettingsActivity.mGoogleApiClient	5
25291	SettingsActivity.mGoogleApiClient.connect()	8
57820	Settlements	6
2531	Setup</string>	100
28829	Seycheles</item>	10
15743	Seychelles</item>	18
46862	Shader.TileMode.REPEAT,Shader.TileMode.CLAMP)	4
50710	Shadow	4
51001	ShadowCrashlytics	1
19189	ShadowMap	11
51870	ShadowUserVoice	3
47175	Shape	4
46869	ShapeDrawable	4
47169	ShapeDrawable(getDrawableShape())	4
37609	Share	4
49690	ShareAcitivityChooserModelPolicy	4
50517	ShareAcitivityChooserModelPolicy()	4
37621	ShareActionProvider	9
50591	ShareActionProvider(Context	4
50251	ShareActionProvider.this,intent)	4
49670	ShareMenuItemOnMenuItemClickListener	4
50382	ShareMenuItemOnMenuItemClickListener()	4
57109	Shared	8
1203	SharedPreferences	166
13634	SharedPreferences.Editor	37
21486	Sheet")	9
32378	Sheet",BalanceSheetFragment.class)	7
24832	Sheet"/>	5
2753	Sheet</string>	82
59021	Shekel")	2
58504	Sheqel"	6
5778	Sheqel</item>	97
62386	Shequel	6
38388	Sherlock	8
37983	SherlockActivity	8
27136	SherlockDialogFragment	30
39044	SherlockExpandableListActivity	4
23771	SherlockFragment	30
6616	SherlockFragmentActivity	41
64361	SherlockFragmentActivity)	1
39148	SherlockFragmentActivity))	4
38800	SherlockFragmentActivity.")	4
39339	SherlockListActivity	4
18163	SherlockListFragment	39
43680	SherlockMenuView_itemTextAppearance,-1)	4
2446	SherlockPreferenceActivity	24
55138	SherlockPreferenceActivity{	3
5787	Sherloock	7
35907	Shieh	2
57942	Shilling"	8
5210	Shilling</item>	124
24101	Should	49
41904	Shouldn't	4
2984	Show	52
2970	Showing	10
653	Shows	61
23441	Si	11
14922	Sicherheitskopie	11
22086	Sicherungskopie	8
22295	Sicherungskopie</string>	15
4554	Sie	81
3751	Siguiente</string>	9
16681	Sigurd	6
52047	Sikkerhetskopiering	4
11341	Silakan	3
28784	Simple	9
3166	SimpleCursorAdapter	120
30887	SimpleCursorAdapter(	24
2706	SimpleCursorAdapter(getActivity(),	9
3194	SimpleCursorAdapter(getSupportActionBar()	8
34447	SimpleCursorAdapter(this,	10
35919	SimpleCursorAdapter.CursorToStringConverter()	10
52841	SimpleCursorAdapter{	3
5396	SimpleDateFormat	90
26940	SimpleDateFormat("'TZID'=zzzz':'yyyyMMdd'T'HHmmss",Locale.US)	5
19554	SimpleDateFormat("E",Locale.US).format(new	7
19949	SimpleDateFormat("EE",Locale.US).format(new	8
59115	SimpleDateFormat("EEE,d	4
9515	SimpleDateFormat("EEEE",GnuCashApplication.getDefaultLocale())	9
51806	SimpleDateFormat("EEEE",Locale.US).format(new	11
29249	SimpleDateFormat("HH:mm")	6
19964	SimpleDateFormat("M/d",Locale.US).format(new	5
19582	SimpleDateFormat("M/d/yyyy",Locale.US).format(new	5
30230	SimpleDateFormat("MMMM	5
29391	SimpleDateFormat("dd	6
18819	SimpleDateFormat("dd.MM.yyyy")	6
19654	SimpleDateFormat("dd.MM.yyyy",Locale.US)	6
6028	SimpleDateFormat("yyyy-MM-dd	11
5881	SimpleDateFormat("yyyy-MM-dd",Locale.US)	5
25028	SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")	4
6506	SimpleDateFormat("yyyy.MM.dd	14
52228	SimpleDateFormat("yyyy/M/d")	7
59502	SimpleDateFormat("yyyy/MM/dd	4
31510	SimpleDateFormat("yyyyMM",Locale.US)	6
10996	SimpleDateFormat("yyyyMMdd	82
24256	SimpleDateFormat("yyyyMMdd")	18
26861	SimpleDateFormat("yyyyMMdd'T'HHmmss'Z'",Locale.US)	5
12362	SimpleDateFormat("yyyyMMddHHmmss")	7
12644	SimpleDateFormat("yyyyMMddHHmmss",Locale.US)	6
12355	SimpleDateFormat("yyyyMMdd_HHmm")	9
12227	SimpleDateFormat("yyyyMMdd_HHmm",Locale.US)	7
12520	SimpleDateFormat("yyyyMMdd_HHmm'UTC'")	10
25014	SimpleDateFormat("yyyyMMdd_HHmm'Z'")	3
13358	SimpleDateFormat("yyyyMMdd_HHmmss",Locale.US)	25
57527	SimpleDateFormat.getDateInstance().format(new	6
3607	SimpleDateFormat.getDateTimeInstance()	31
33240	SimpleSeriesRenderer	5
33184	SimpleSeriesRenderer()	4
33110	SimpleSeriesRenderer())	3
52754	SimplicityApks	17
2772	Simply	12
1000	Since	16
11809	Sincronizao</string>	6
15748	Singapur</item>	14
62438	Singapura</item>	6
63074	Single-entry	4
62254	SingleFixedChoicePage(this,mContext.getString(R.string.wizard_title_account_setup))	3
62112	SingleFixedChoicePage(this,mContext.getString(R.string.wizard_title_feedback_options))	3
29036	Siria</item>	10
21895	Sist	10
26146	Sistemati	5
27455	Size	11
14940	Sjekk	14
4005	Sleep	12
5974	Slices</string>	103
9622	SlidingPaneLayout	7
57103	SlidingPaneLayout.PanelSlideListener()	3
32333	Slot	8
37686	Small	5
5076	Smaller	103
36356	Smallest	4
52234	Snackbar.LENGTH_INDEFINITE).setAction("GRANT",	5
52271	Snackbar.make(mCoordinatorLayout,	5
1186	So	126
17157	Soedanese	6
25912	Soft	6
26463	Software	21
60536	Software,and	3
60646	Software.	3
57865	Sol"	6
5506	Sol</item>	113
14992	Soll	10
28363	Solo	30
28356	Solo(getInstrumentation(),getActivity())	35
34710	Some	25
49967	Somewhere	4
28973	Somlia</item>	10
27908	Sono	5
25664	Soporte	24
24441	Sort	9
24684	Sorts	14
14376	Source	106
58500	South	6
45275	Span	4
58509	Spanish	6
50317	Spannable.SPAN_EXCLUSIVE_EXCLUSIVE)	5
49768	SpannableString	5
50111	SpannableString(url)	5
50040	SpannableStringBuilder	5
50381	SpannableStringBuilder("	5
10077	SparseArray<>()	18
43618	SparseArray<Parcelable>	4
43848	SparseArray<Parcelable>()	4
9366	SparseArray<Refreshable>	31
13259	SparseArray<Refreshable>()	16
46466	SparseArray<View>	4
46146	SparseArray<View>()	4
18032	SparseBooleanArray	18
42428	SparseBooleanArray()	4
42290	Special	14
41630	Special-case	4
47726	Specific	4
64398	Specified	1
37133	Specifies	11
4831	Speicher	2
5538	Speicher</item>	3
5626	Speichern	14
22030	Speichern,ob	11
618	Spinner	185
46451	Spinner.	8
13826	Spinner.INVALID_ROW_ID){	5
19817	SpinnerAdapter	50
47602	SpinnerPopup	6
47781	SpinnerPopup,DialogInterface.OnClickListener	4
55546	Spinners	5
46329	Spinnners	4
729	Split	197
19693	Split"))	7
36614	Split")).perform(click())	8
20814	Split#toCsv()	13
31779	Split(@NonNull	21
35694	Split(Money	13
31216	Split(Money.createZeroInstance("EUR"),account.getUID()))	2
31253	Split(Money.getZeroInstance(),"")	19
30714	Split(Money.getZeroInstance(),"Test")	3
62881	Split(Money.getZeroInstance(),"account-something")	4
33947	Split(Money.getZeroInstance(),"non-existent")	10
62992	Split(Money.getZeroInstance(),"random")	4
26346	Split(Money.getZeroInstance(),"test-account")	7
30848	Split(Money.getZeroInstance(),ALPHA_ACCOUNT_NAME)	8
54782	Split(Money.getZeroInstance(),ALPHA_ACCOUNT_UID)	4
28262	Split(Money.getZeroInstance(),DUMMY_ACCOUNT_UID))	3
61725	Split(Money.getZeroInstance(),account.getUID())	6
18914	Split(Money.getZeroInstance(),account1.getUID())	8
28547	Split(Money.getZeroInstance(),accountUidToDelete))	6
26316	Split(Money.getZeroInstance(),alphaAccount.getUID())	8
33844	Split(Money.getZeroInstance(),mAccount.getUID())	9
62793	Split(Parcel	4
33951	Split(Split	19
61997	Split(accountBalance,mAccountUID)	4
31384	Split(amount,accountUID)	27
31263	Split(amount,mAccountUID)	19
33413	Split(amount,tokens[2])	15
53686	Split(amount.abs(),accountUID)	2
19855	Split(amount.absolute(),accountUID)	19
10877	Split(balance.abs(),accountUID)	5
53319	Split(balance.absolute(),accountUID)	4
62953	Split(expectedValue,TRANSACTIONS_ACCOUNT_UID)	5
62928	Split(expectedValue,expectedQty,euroAccount.getUID())	5
34084	Split(firstSplitAmount,alphaAccount.getUID())	2
25252	Split(imbalance.negate(),	25
10748	Split(imbalance.negate(),mCommodity.getCurrencyCode())	3
10432	Split(imbalance.negate(),mCurrencyCode)	7
34099	Split(mAmount,mAccountUID)	13
34023	Split(mAmount.absolute(),accountUID)	12
61792	Split(mValue,mAccountUID)	3
53711	Split(mValue.abs(),accountUID)	2
53714	Split(mValue.absolute(),accountUID)	5
54323	Split(money,account.getUID())	2
11701	Split(new	78
33830	Split(secondSplitAmount,bravoAccount.getUID())	5
63058	Split(source)	4
58863	Split(split,false)	2
63755	Split(split,generateNewUID))	1
33315	Split(split,true)	11
35668	Split(split,true))	8
57282	Split(splitSum.absolute(),imbalanceAccountUID)	4
54872	Split(splitSum.negate(),mAccountsDbAdapter.getOrCreateImbalanceAccountUID(currency))	10
31702	Split(value,accountUID)	6
62957	Split(value,mAccountUID)	4
63030	Split(value,quantity,transferAcctUID)	4
33430	Split(value,tokens[7])	7
33457	Split(value,tokens[8])	5
31770	Split(valueAmount,accountUID)	13
33446	Split.parseSplit(csv)	10
35926	Split.parseSplit(line)	2
31833	SplitAccountListener	3
31615	SplitAccountListener(TransactionTypeSwitch	5
31938	SplitAccountListener(splitTypeButton,this))	10
24880	SplitAccountListener(splitTypeSwitch,this))	6
8945	SplitAmountViewHolder	9
29086	SplitAmountViewHolder(View	7
61960	SplitAmountViewHolder(view,split)	7
33406	SplitEditorDialogFragment	9
33271	SplitEditorDialogFragment()	7
33359	SplitEditorDialogFragment.newInstance(baseAmountString)	8
9840	SplitEditorFragment	16
33297	SplitEditorFragment()	5
33358	SplitEditorFragment.newInstance(args)	5
35562	SplitEntry	2
1345	SplitEntry.COLUMN_ACCOUNT_UID	97
35384	SplitEntry.COLUMN_ACCOUNT_UID)	5
14611	SplitEntry.COLUMN_ACCOUNT_UID,	23
24105	SplitEntry.COLUMN_ACCOUNT_UID,//groupby	6
364	SplitEntry.COLUMN_AMOUNT	59
14388	SplitEntry.COLUMN_CREATED_AT	25
14201	SplitEntry.COLUMN_CREATED_AT,	2
1083	SplitEntry.COLUMN_MEMO	66
14221	SplitEntry.COLUMN_MEMO,	2
25174	SplitEntry.COLUMN_MODIFIED_AT	21
14030	SplitEntry.COLUMN_QUANTITY_DENOM	30
14346	SplitEntry.COLUMN_QUANTITY_DENOM,	6
14638	SplitEntry.COLUMN_QUANTITY_NUM	32
14069	SplitEntry.COLUMN_QUANTITY_NUM,	2
14111	SplitEntry.COLUMN_RECONCILE_DATE	12
14375	SplitEntry.COLUMN_RECONCILE_DATE,	2
14187	SplitEntry.COLUMN_RECONCILE_STATE	9
14615	SplitEntry.COLUMN_RECONCILE_STATE,	2
120	SplitEntry.COLUMN_TRANSACTION_UID	91
35382	SplitEntry.COLUMN_TRANSACTION_UID)	17
24569	SplitEntry.COLUMN_TRANSACTION_UID,	12
1630	SplitEntry.COLUMN_TYPE	84
14455	SplitEntry.COLUMN_TYPE,	2
14515	SplitEntry.COLUMN_UID	64
14035	SplitEntry.COLUMN_VALUE_DENOM	26
14407	SplitEntry.COLUMN_VALUE_DENOM,	2
14538	SplitEntry.COLUMN_VALUE_NUM	28
14356	SplitEntry.COLUMN_VALUE_NUM,	2
57596	SplitEntry.INDEX_UID	8
827	SplitEntry.TABLE_NAME	128
25026	SplitEntry.TABLE_NAME)	7
19982	SplitEntry.TABLE_NAME+"."+	18
56857	SplitEntry.TABLE_NAME+"."+SplitEntry.COLUMN_ACCOUNT_UID	3
56951	SplitEntry.TABLE_NAME+"."+SplitEntry.COLUMN_AMOUNT	3
56850	SplitEntry.TABLE_NAME+"."+SplitEntry.COLUMN_MEMO	3
56860	SplitEntry.TABLE_NAME+"."+SplitEntry.COLUMN_TYPE	3
56866	SplitEntry.TABLE_NAME+"."+SplitEntry.COLUMN_UID	3
58777	SplitEntry.TABLE_NAME,	5
24461	SplitEntry._ID	29
30800	SplitTest	9
34019	SplitType	3
9331	SplitViewHolder	26
31682	SplitViewHolder(View	12
31844	SplitViewHolder(splitView,split)	3
62915	Split[]	4
62829	Split[size]	4
20988	Splits	41
63042	Splits,their	4
934	SplitsDbAdapter	134
24335	SplitsDbAdapter(@NonNull	6
35494	SplitsDbAdapter(Context	4
14348	SplitsDbAdapter(SQLiteDatabase	14
35470	SplitsDbAdapter(context)	4
10657	SplitsDbAdapter(db)	45
13975	SplitsDbAdapter(db))	40
35829	SplitsDbAdapter(getActivity())	20
19170	SplitsDbAdapter(getContext())	13
13153	SplitsDbAdapter(mDb)	38
58761	SplitsDbAdapter(mDb))	3
63464	SplitsDbAdapter(mainDb)	4
8027	SplitsDbAdapter(mainDb))	6
63429	SplitsDbAdapter(mainDb)))	6
2399	SplitsDbAdapter.getInstance()	72
34662	SplitsDbAdapter.getInstance().getSplitsForTransaction(transactionUID)	7
30171	SplitsDbAdapter.getInstance().updateRecords(	6
3129	SplitsDbAdapter.getInstance().updateRecords(DatabaseSchema.SplitEntry.COLUMN_ACCOUNT_UID	5
50839	SplitsDbAdapterTest	12
17462	Sprbuj	9
15685	Sri	22
62377	Sria</item>	6
28871	Srvio</item>	10
20282	St	11
52334	Stack<>()	9
3531	Stack<Account>()	6
32527	StackedBarChartFragment	3
32717	StackedBarChartFragment()	3
42551	StandaloneActionMode	4
43107	StandaloneActionMode(Context	4
39155	StandaloneActionMode(mActivity,mActionModeView,wrappedCallback,true)	4
4594	Standard	12
5670	Standard-E-Mail,an	12
5851	Standard-GnuCash-Konten</string>	18
22188	Standardkonten	7
1600	Start	68
3393	Starting	12
3408	Starts	69
48266	State	4
47370	StateListDrawable	4
46710	StateListDrawable()	4
46994	StateListDrawable)	4
12813	Statement	12
32136	Statement",CashFlowLineChartFragment.class)	5
60105	Statement",LineChartFragment.class)	5
35253	Statement()	2
58086	States	11
61846	Status	3
37889	Stealing	5
8783	StepPagerStrip	8
62249	StepPagerStrip.OnPageSelectedListener()	3
58147	Sterling"	6
5594	Sterling</item>	117
34851	Stetho	7
34826	Stetho.Initializer	6
34831	Stetho.defaultInspectorModulesProvider(this))	6
55391	Stetho.initialize(Stetho.newInitializerBuilder(application)	2
34756	Stetho.initialize(initializer)	6
34874	Stetho.newInitializerBuilder(this)	6
55439	StethoUtils	2
55415	StethoUtils.install(this)	2
50923	Stick	7
27001	Still	10
15260	Stimming	16
46131	Stolen	4
43923	Stop	4
43614	Stop.	4
18853	Stops	15
19803	Storage	12
12433	Store	15
1189	Store">	20
11468	Store</string>	40
27684	Stores	22
51247	Str	5
42419	Straighten	4
6784	StreamResult	24
6680	StreamResult(outputWriter)	17
20517	StreamResult(stringWriter)	9
26443	Street,Fifth	18
64107	Stri	3
43094	StrictMode	4
20610	Strin	4
1547	String	387
14215	String(new	2
979	String.format("#%06X",(0xFFFFFF	9
63963	String.format("#%06X",0xFFFFFF	3
6854	String.format("%.2f",(e.getVal()	14
32941	String.format("%.2f",percent)	3
439	String.format("%d	6
57635	String.format("Database	3
63850	String.format("Error	3
19680	String.format("Repeats	5
1822	String.format("Week	7
13154	String.format(BaseReportFragment.SELECTED_VALUE_PATTERN,DINING_EXPENSE_ACCOUNT_NAME,TRANSACTION_AMOUNT,percent)	5
63840	String.format(Locale.US,"Source	3
13247	String.format(Locale.US,BaseReportFragment.SELECTED_VALUE_PATTERN,DINING_EXPENSE_ACCOUNT_NAME,TRANSACTION_AMOUNT,percent)	2
60344	String.format(PieChartActivity.SELECTED_VALUE_PATTERN,DINING_EXPENSE_ACCOUNT_NAME,TRANSACTION_AMOUNT,percent)	5
60398	String.format(PieChartActivity.SELECTED_VALUE_PATTERN,GIFTS_RECEIVED_INCOME_ACCOUNT_NAME,TRANSACTION3_AMOUNT,100f)	5
60218	String.format(PieChartFragment.SELECTED_VALUE_PATTERN,DINING_EXPENSE_ACCOUNT_NAME,TRANSACTION_AMOUNT,percent)	6
13318	String.format(PieChartFragment.SELECTED_VALUE_PATTERN,GIFTS_RECEIVED_INCOME_ACCOUNT_NAME,TRANSACTION3_AMOUNT,100f)	19
13134	String.format(mContext.getString(R.string.toast_exported_to),targetLocation),	10
27117	String.format(mDescription,accessibilityIndex)	3
27111	String.format(mDescriptionSelected,accessibilityIndex)	3
34011	String.valueOf((int)	5
34074	String.valueOf((int)Math.pow(10,qtyFractionDigits))	5
61812	String.valueOf(mQuantity.getNumberOfDecimalPlaces())	5
34083	String.valueOf(mQuantity.multiply(Integer.parseInt(qtyDenom)).intValue())	5
61824	String.valueOf(mQuantity.multiply(mQuantity.getNumberOfDecimalPlaces()).intValue())	5
61806	String.valueOf(mValue.getNumberOfDecimalPlaces())	5
34053	String.valueOf(mValue.multiply(Integer.parseInt(valueDenom)).intValue())	5
61791	String.valueOf(mValue.multiply(mValue.getNumberOfDecimalPlaces()).intValue())	5
7035	StringBuffer	48
7051	StringBuffer()	14
26977	StringBuffer(DatabaseHelper.KEY_NAME)	10
7318	StringBuffer(OfxExporter.OFX_SGML_HEADER)	8
20907	StringBuffer(OfxFormatter.OFX_SGML_HEADER)	9
21763	StringBuffer(OfxHelper.OFX_SGML_HEADER)	14
29358	StringBuffer(TransactionEntry.COLUMN_DESCRIPTION)	9
35536	StringBuffer(TransactionEntry.COLUMN_NAME)	4
3387	StringBuilder	82
6515	StringBuilder("(")	20
2836	StringBuilder()	68
8657	StringBuilder(getFrequencyRepeatString())	3
3663	StringBuilder(getResources().getString(R.string.title_whats_new))	6
7584	StringBuilder(mPeriodType.getFrequencyRepeatString())	14
53723	StringBuilder(mRecurrence.getRepeatString())	5
53695	StringBuilder(mRecurrence.getRuleString())	2
19883	StringBuilder(periodType.getFrequencyDescription())	5
26871	StringBuilder(periodType.getFrequencyRepeatString())	8
19558	StringBuilder(periodType.getLocalizedFrequencyDescription())	5
2572	StringBuilder(resources.getString(R.string.title_whats_new))	8
44815	StringBuilder(sPrependShortcutLabel)	4
35964	StringReader	2
35841	StringReader(splits)	2
6804	StringWriter	36
6765	StringWriter()	36
1508	String[]	208
14289	String[]{	62
24293	String[]{""	10
57501	String[]{"COUNT(*)"	3
23468	String[]{"MAX("	13
23381	String[]{"MAX(trans_split_count)"	11
29945	String[]{"ROOT"	9
18599	String[]{"TOTAL	20
7876	String[]{"gnc","act","book","cd","cmdty","price","slot",	9
24297	String[]{"trans_currency_count"	9
24544	String[]{AccountEntry.COLUMN_CURRENCY	16
24241	String[]{AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID	4
35362	String[]{AccountEntry.COLUMN_FAVORITE	6
24355	String[]{AccountEntry.COLUMN_FULL_NAME	7
51814	String[]{AccountEntry.COLUMN_HIDDEN	4
33849	String[]{AccountEntry.COLUMN_NAME	9
61471	String[]{AccountEntry.COLUMN_PARENT_ACCOUNT_UID	3
24221	String[]{AccountEntry.COLUMN_PLACEHOLDER	9
24260	String[]{AccountEntry.COLUMN_UID	22
24248	String[]{AccountEntry.TABLE_NAME	16
24263	String[]{AccountEntry._ID	13
24469	String[]{AccountEntry._ID,AccountEntry.COLUMN_COLOR_CODE	6
24166	String[]{AccountEntry._ID,AccountEntry.COLUMN_NAME	10
35542	String[]{AccountEntry._ID,AccountEntry.COLUMN_UID	8
24151	String[]{AccountType.ROOT.name()	30
3644	String[]{AccountType.ROOT.toString()	5
63457	String[]{BookEntry.COLUMN_DISPLAY_NAME	4
63998	String[]{BookEntry.COLUMN_DISPLAY_NAME,BookEntry.COLUMN_SOURCE_URI	2
60282	String[]{BookEntry.COLUMN_ROOT_GUID	7
55222	String[]{BookEntry.COLUMN_UID	9
53335	String[]{BudgetEntry.TABLE_NAME	2
23529	String[]{CommodityEntry.COLUMN_MNEMONIC	7
33853	String[]{CommodityEntry.COLUMN_UID	7
6446	String[]{DatabaseHelper.KEY_ACCOUNT_UID	14
51280	String[]{DatabaseHelper.KEY_AMOUNT	10
19027	String[]{DatabaseHelper.KEY_AMOUNT,DatabaseHelper.TRANSACTIONS_TABLE_NAME	9
30506	String[]{DatabaseHelper.KEY_NAME	12
18358	String[]{DatabaseHelper.KEY_ROW_ID	19
26744	String[]{DatabaseHelper.KEY_ROW_ID,DatabaseHelper.KEY_COLOR_CODE	8
27112	String[]{DatabaseHelper.KEY_ROW_ID,DatabaseHelper.KEY_DEFAULT_TRANSFER_ACCOUNT_UID	5
27701	String[]{DatabaseHelper.KEY_ROW_ID,DatabaseHelper.KEY_FAVORITE	5
3052	String[]{DatabaseHelper.KEY_ROW_ID,DatabaseHelper.KEY_NAME	17
27783	String[]{DatabaseHelper.KEY_ROW_ID,DatabaseHelper.KEY_PLACEHOLDER	8
26867	String[]{DatabaseHelper.KEY_ROW_ID,DatabaseHelper.KEY_UID	10
7099	String[]{DatabaseHelper.KEY_TYPE	11
26850	String[]{DatabaseHelper.KEY_UID	7
61905	String[]{DatabaseSchema.AccountEntry.COLUMN_FULL_NAME	7
35827	String[]{DatabaseSchema.AccountEntry.COLUMN_NAME	5
24232	String[]{DatabaseSchema.AccountEntry.COLUMN_TYPE	10
24071	String[]{DatabaseSchema.AccountEntry.COLUMN_UID	7
24138	String[]{DatabaseSchema.AccountEntry._ID	7
50712	String[]{DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME	3
62032	String[]{DatabaseSchema.CommodityEntry.COLUMN_FULLNAME	3
51908	String[]{DatabaseSchema.CommodityEntry.COLUMN_UID	3
30904	String[]{DatabaseSchema.CommonColumns.COLUMN_UID	2
53269	String[]{DatabaseSchema.TransactionEntry.COLUMN_DESCRIPTION	5
35949	String[]{DatabaseSchema.TransactionEntry.COLUMN_NAME	4
35441	String[]{KEY_ROW_ID,KEY_UID	4
20294	String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE,	15
31921	String[]{ScheduledAction.ActionType.BACKUP.name()	16
25473	String[]{ScheduledAction.ActionType.TRANSACTION.name()	4
53206	String[]{ScheduledActionEntry.COLUMN_UID,	2
51493	String[]{ScheduledActionEntry.COLUMN_UID,ScheduledActionEntry.COLUMN_TAG	7
35411	String[]{SplitEntry.COLUMN_ACCOUNT_UID	5
24302	String[]{SplitEntry.COLUMN_UID	7
21036	String[]{SplitEntry.TABLE_NAME	4
57288	String[]{String.valueOf(endTimestamp)	7
18970	String[]{String.valueOf(start),String.valueOf(end)	3
57248	String[]{String.valueOf(startTimestamp)	14
34268	String[]{String.valueOf(startTimestamp),String.valueOf(endTimestamp)	8
52686	String[]{TimestampHelper.getUtcStringForTimestamp(lastExportTimeStamp)	5
52544	String[]{TimestampHelper.getUtcStringFromTimestamp(lastExportTimeStamp)	4
24201	String[]{TransactionEntry.COLUMN_UID	7
20767	String[]{TransactionEntry.TABLE_NAME	23
24304	String[]{TransactionEntry._ID	9
2285	String[]{TransactionEntry._ID,TransactionEntry.COLUMN_DESCRIPTION	18
35458	String[]{TransactionEntry._ID,TransactionEntry.COLUMN_NAME	4
29941	String[]{TransactionUID	8
21548	String[]{accountType.name()	3
3622	String[]{accountUID	65
58735	String[]{acct.getUID()	6
51549	String[]{actionUID	4
19638	String[]{bookUID	9
53087	String[]{budgetUID	2
51850	String[]{columnName	7
12512	String[]{commodityUID,currencyUID,currencyUID,commodityUID	4
19262	String[]{currencyCode	25
62232	String[]{defaultCurrencyCode,"CHF","EUR","GBP","USD"	3
7017	String[]{defaultEmail	25
31963	String[]{entry.getKey()	4
19397	String[]{eventUID	11
24203	String[]{fullName	6
27837	String[]{getAccountUID(accountId)	23
2438	String[]{getAccountUID(rowId)	12
59569	String[]{getOrCreateGnuCashRootAccountUID(),AccountType.ROOT.name()	1
59675	String[]{getUID(accountId)	3
59674	String[]{getUID(rowId)	3
23892	String[]{guid	7
30023	String[]{imbalanceAccountName	12
52532	String[]{lastExportTimeStamp.toString()	5
24503	String[]{mAccountUID,""	2
11747	String[]{mAccountUID,AccountType.ROOT.name()	12
31570	String[]{mAccountsDbAdapter.getCurrencyCode(mAccountUID)	5
24772	String[]{mAccountsDbAdapter.getCurrencyCode(mAccountUID),""	2
2563	String[]{mOriginAccountUID	10
24776	String[]{mOriginAccountUID,	10
59608	String[]{mOriginAccountUID,accountsDbAdapter.getCurrencyCode(mOriginAccountUID)	3
33534	String[]{mOriginAccountUID,currencyCode,accountType.name()	5
24455	String[]{oldParentUID	4
29273	String[]{prefix+"%"	5
51848	String[]{recordUID	6
50941	String[]{scheduledAction.getUID()	15
56515	String[]{transaction.getUID()	9
24467	String[]{transactionUID	10
24243	String[]{transactionUID,accountUID	12
30890	String[]{trxUID	9
14363	String[]{type.toString()	6
20391	String[]{uid	41
63814	String[currencyNames.size()]))	4
62188	String[currencySet.size()]))	3
18221	String[labels.size()]))	17
18103	String[mLegendLabels.size()]))	5
63801	String[size]	5
60286	Strings	3
35918	Stripped	3
23389	Strips	6
8984	Studio,it	13
22940	Suas	7
48693	Sub	4
23264	Sub-class	3
59578	Sub-classes	4
43212	SubMenu	25
48142	SubMenu#getItem()	4
43102	SubMenuBuilder	12
44200	SubMenuBuilder(Context	4
43846	SubMenuBuilder(mContext,this,item)	4
44090	SubMenuBuilder)	4
44865	SubMenuWrapper	4
44870	SubMenuWrapper(android.view.SubMenu	4
44734	SubMenuWrapper(mNativeItem.getSubMenu())	4
44744	SubMenuWrapper(nativeSubMenu)	4
42998	SubMenuWrapper(subMenu))	4
48187	SubUiVisibilityListener	4
48454	Subclass	9
13157	Subclasses	32
60067	Subcompte</item>	3
60050	Subcomptes</item>	3
51398	Subcontas\n	6
14097	Subdirectories	3
44699	Submenu	8
38321	Subtitle	8
49154	Such	4
58497	Sucre"	6
29099	Sudanesa</item>	10
4580	Sudanese	108
21668	Sudanske	10
62473	Sudo	6
29147	Sueca</item>	11
3305	Sugerencias]]></string>	13
50497	SuggestionsAdapter	6
50274	SuggestionsAdapter(Context	5
50144	SuggestionsAdapter(getContext(),	5
49314	SuggestionsAdapter)	8
49937	SuggestionsAdapter.REFINE_ALL	7
49920	SuggestionsAdapter.REFINE_BY_ENTRY)	7
50346	SuggestionsAdapter.getColumnString(c,column)	5
29121	Suio</item>	10
16151	Suivant</string>	7
29127	Sul	10
62404	Sul</item>	6
7282	Sum	23
58506	Sum"	6
5712	Sum</item>	130
11725	Suporte	17
47750	Supplied	4
44372	Supplies	4
10186	Support	38
36283	Supported	4
25754	Supporto	12
62373	Surinam</item>	6
28776	Suriname</item>	10
41636	Swallow	4
60611	Swap	3
18384	Swapping	29
29776	Swaps	6
63265	Swiss	2
9638	Switch	15
9343	SwitchCompat	12
64014	SwitchPreferenceCompat	2
9516	Sync	32
8899	Sync"	10
54988	Sync")).perform(click())	7
63709	Sync:")	3
4793	Sync</string>	131
59223	Synchronisierung	6
15271	Synk</string>	11
1191	System.currentTimeMillis()	122
25548	System.currentTimeMillis())	6
25736	System.currentTimeMillis()){	16
48873	System.currentTimeMillis(),DEFAULT_HISTORICAL_RECORD_WEIGHT)	4
49009	System.currentTimeMillis(),weight)	4
13574	System.err.println("Faile	2
13283	System.err.println("Failed	8
3639	System.nanoTime()	59
46501	System.out.print("Looking	4
46414	System.out.println("	4
59429	System.out.println("Default	6
51025	System.out.println("Shadowing	1
20663	SystemClock.elapsedRealtime()	10
4468	SystemClock.elapsedRealtime())	10
46316	SystemClock.uptimeMillis()	8
42210	T	12
500	TABLE	102
31961	TABLE_NAME	24
1110	TAG	168
31800	TAGS	10
28264	TAG_ACCOUNT	19
53698	TAG_ACCOUNT_COMMODITY	5
63325	TAG_ACCOUNT_ID	2
63326	TAG_ACCOUNT_TYPE	2
53359	TAG_ACCT_COMMODITY	2
25773	TAG_ACCT_DESCRIPTION	11
35688	TAG_ACCT_ID	4
53659	TAG_ACCT_NAME	2
53549	TAG_ACCT_SLOTS	2
53689	TAG_ACCT_TYPE	2
26026	TAG_ACT_SLOTS	11
63298	TAG_BALANCE_AMOUNT	2
63346	TAG_BANK_ACCOUNT_FROM	2
63342	TAG_BANK_ACCOUNT_TO	2
63318	TAG_BANK_ID	2
63301	TAG_BANK_MESSAGES_V1	2
63374	TAG_BANK_TRANSACTION_LIST	2
35601	TAG_BOOK	4
35651	TAG_BOOK_ID	4
53384	TAG_BUDGET	2
53508	TAG_BUDGET_DESCRIPTION	2
53554	TAG_BUDGET_ID	2
53390	TAG_BUDGET_NAME	2
53482	TAG_BUDGET_NUM_PERIODS	2
53366	TAG_BUDGET_RECURRENCE	2
53447	TAG_BUDGET_SLOTS	2
35667	TAG_COMMODITY	6
35739	TAG_COMMODITY_ID	7
35599	TAG_COMMODITY_SCU	7
28429	TAG_COMMODITY_SPACE	15
35692	TAG_COUNT_DATA	6
28260	TAG_CURRENCY	15
63308	TAG_CURRENCY_DEF	2
4691	TAG_DATE	6
63331	TAG_DATE_AS_OF	2
63373	TAG_DATE_END	2
5736	TAG_DATE_ENTERED	6
4816	TAG_DATE_POSTED	8
63319	TAG_DATE_START	2
63322	TAG_DATE_USER	2
32063	TAG_GDATE	8
5123	TAG_GNC_PREFIX	2
53371	TAG_GNC_RECURRENCE	2
48411	TAG_HISTORICAL_RECORD	4
48409	TAG_HISTORICAL_RECORDS	8
63321	TAG_LEDGER_BALANCE	2
63354	TAG_MEMO	2
28508	TAG_NAME	17
28286	TAG_PARENT_UID	19
5190	TAG_PREFIX	8
23939	TAG_PRICE	8
23764	TAG_PRICEDB	7
23951	TAG_PRICE_COMMODITY	8
23553	TAG_PRICE_CURRENCY	7
23907	TAG_PRICE_ID	8
23448	TAG_PRICE_SOURCE	7
23884	TAG_PRICE_TIME	7
23858	TAG_PRICE_TYPE	7
23683	TAG_PRICE_VALUE	7
53605	TAG_RECONCILED_DATE	2
35682	TAG_RECONCILED_STATE	7
33533	TAG_RECURRENCE	8
20857	TAG_RECURRENCE_PERIOD	15
35632	TAG_ROOT	2
33667	TAG_RX_MULT	8
33572	TAG_RX_PERIOD_TYPE	4
5564	TAG_RX_START	6
33633	TAG_SCHEDULED_ACTION	2
26035	TAG_SLOT	11
28443	TAG_SLOT_KEY	9
25818	TAG_SLOT_VALUE	16
35893	TAG_SPLITS_EDITOR_FRAGMENT	3
32028	TAG_SPLIT_ACCOUNT	9
2190	TAG_SPLIT_ID	13
751	TAG_SPLIT_MEMO	13
20842	TAG_SPLIT_QUANTITY	18
23690	TAG_SPLIT_SLOTS	11
32402	TAG_SPLIT_VALUE	9
63351	TAG_STATEMENT_TRANSACTION	2
63316	TAG_STATEMENT_TRANSACTIONS	2
63295	TAG_STATEMENT_TRANSACTION_RESPONSE	2
33562	TAG_SX_ADVANCE_CREATE_DAYS	2
33714	TAG_SX_ADVANCE_REMIND_DAYS	2
33773	TAG_SX_AUTO_CREATE	2
33593	TAG_SX_AUTO_CREATE_NOTIFY	2
33638	TAG_SX_ENABLED	2
33510	TAG_SX_END	2
33539	TAG_SX_ID	2
33525	TAG_SX_INSTANCE_COUNT	2
33702	TAG_SX_LAST	2
33527	TAG_SX_NAME	2
33664	TAG_SX_NUM_OCCUR	6
33753	TAG_SX_REM_OCCUR	6
33776	TAG_SX_SCHEDULE	8
33545	TAG_SX_START	2
33591	TAG_SX_TAG	8
53501	TAG_SX_TEMPL_ACCOUNT	3
55062	TAG_SX_TEMPL_ACTION	5
1901	TAG_TEMPLATE_TRANSACTION	4
32033	TAG_TEMPLATE_TRANSACTIONS	2
26022	TAG_TRANSACTION	9
63347	TAG_TRANSACTION_AMOUNT	2
63324	TAG_TRANSACTION_FITID	2
63364	TAG_TRANSACTION_TYPE	2
63330	TAG_TRANSACTION_UID	2
4090	TAG_TRN_DESCRIPTION	4
1354	TAG_TRN_SLOTS	6
1617	TAG_TRN_SPLIT	6
467	TAG_TRN_SPLITS	8
5136	TAG_TRX_CURRENCY	4
35820	TAG_TRX_DESCRIPTION	4
5609	TAG_TRX_ID	11
35663	TAG_TRX_SPLIT	4
35605	TAG_TRX_SPLITS	4
5215	TAG_TS_DATE	2
28563	TAG_TYPE	16
28564	TAG_UID	9
21421	TEMP	20
26826	TEST	6
33205	TEST_DB_NAME	13
50573	TEXT_2_URL	5
60601	THE	3
19095	THEN	54
26836	THIS!!!	6
14672	TID</string>	25
203	TIME	26
26814	TIME!	7
10707	TIME</string>	97
28208	TIMEOUT	5
47453	TIMEOUT_SEND_ACCESSIBILITY_EVENT	4
19517	TIMESTAMP	49
21614	TIMESTAMP_ZERO	8
4368	TIME_FORMATTER	17
54257	TIME_FORMATTER.format(new	2
54186	TIME_FORMATTER.parse(dateString)	2
29068	TIME_FORMATTER.parse(mTimeTextView.getText().toString())	7
25449	TO	23
2910	TODAS	52
19237	TODO	40
497	TODO:	169
20136	TODOS	16
59077	TOP_CURRENCIES_MAP	2
58970	TOP_CURRENCIES_MAP.entrySet())	2
27843	TOP_LEVEL,RECENT,FAVORITES	3
27797	TOP_LEVEL:	6
18820	TOTAL	17
7205	TOTAL("	17
7565	TOTAL_VALUE_LABEL_PATTERN	18
29564	TOTES	5
15962	TOUTES	21
19858	TRADING:	2
31619	TRANSACTION	10
60333	TRANSACTION2_AMOUNT	3
13650	TRANSACTION2_AMOUNT)	12
60322	TRANSACTION2_NAME	3
60323	TRANSACTION3_AMOUNT	3
60332	TRANSACTION3_NAME	3
13065	TRANSACTION:	28
12284	TRANSACTIONS	12
63076	TRANSACTIONS_ACCOUNT_NAME	4
62862	TRANSACTIONS_ACCOUNT_UID	4
26269	TRANSACTIONS_TABLE_CREATE	9
18173	TRANSACTIONS_TABLE_NAME	23
34719	TRANSACTIONS_TABLE_NAME)	3
54615	TRANSACTION_ACTIONS:	7
13527	TRANSACTION_AMOUNT	20
34390	TRANSACTION_COUNT	9
62582	TRANSACTION_EVENTS:	3
13719	TRANSACTION_FORM:	6
13770	TRANSACTION_NAME	19
35114	TRANSFER_ACCOUNT_NAME	15
13926	TRANSFER_ACCOUNT_UID	19
1522	TRIGGER	11
60893	TRUE	3
16366	TUTTE	13
38385	TVDPI	4
50307	TYPE_TEXT_FLAG_AUTO_COMPLETE	5
37824	Tab	11
38796	Tab's	4
40225	Tab.INVALID_POSITION)	4
48042	TabAdapter	4
48080	TabAdapter())	4
48059	TabClickListener	4
48196	TabClickListener()	4
40326	TabImpl	4
40054	TabImpl()	4
10042	TabLayout	27
35069	TabLayout.OnTabSelectedListener()	17
35082	TabLayout.TabLayoutOnPageChangeListener(mTabLayout))	9
35110	TabLayout.TabLayoutOnPageChangeListener(tabLayout))	14
38906	TabListener	8
47758	TabView	4
47905	TabView(Context	4
40192	TabWrapper	4
39984	TabWrapper(android.app.ActionBar.Tab	4
39613	TabWrapper(mActionBar.newTab())	4
21752	Table	3
1111	TableLayout	33
62339	TableLayout.LayoutParams	3
27542	TableRow	7
27355	TableRow(getContext())	3
27561	TableRow.LayoutParams	3
27587	TableRow.LayoutParams(mSwatchLength,mSwatchLength)	3
7446	Tag	97
22091	Tag</item>	13
3379	Tags	36
15690	Tailand&#233	8
28785	Tailandez</item>	10
15579	Tailands</item>	9
6219	Taiwan	107
62446	Taiwan</item>	6
28587	Taiwanes</item>	10
6422	Take	21
12087	Tampilan	5
29045	Tanzania</item>	10
62431	Tanznia</item>	6
60399	Tap.SINGLE,	3
48835	Tapping	4
6986	Target	12
59095	Task	4
19037	TaskDelegate	16
18839	TaskDelegate()	10
33649	Tasks	9
28869	Tcheca</item>	12
25586	Teil	3
46495	Temporary	13
20946	Tenha	19
4047	Tente	6
10774	Terbaru</string>	5
23156	Tercihler</string>	8
29663	Terjadwal</string>	6
18004	Terry	6
28271	Test	73
30747	Test</name>	6
30929	TestCase	14
35112	TestRule	2
9409	Testing	14
7841	Tests	66
19024	Tests</name>	5
54767	Tests</string>	4
18762	Tests</title>	3
8768	Text	24
37614	TextAppearance	4
50359	TextAppearanceSpan(null,0,0,mUrlColor,null),	5
8818	TextInputLayout	16
49689	TextUtils.getTrimmedLength(getText())	5
50325	TextUtils.getTrimmedLength(query)	5
45090	TextUtils.isEmpty(mSubtitle)))	4
14155	TextUtils.join("	11
18864	TextUtils.join("'	30
19597	TextUtils.join("','",accountTypeStrings)	6
29547	TextUtils.join("','",descendantAccountUIDs)	13
13678	TextUtils.join("','",mDescendantAccountUIDs)	19
1388	TextView	267
48891	TextView#setImeOptions(int)	5
49541	TextView#setInputType(int)	5
47412	TextView)	4
13548	TextWatcher	40
1988	TextWatcher()	20
12637	That	18
1350	The	340
38301	Theme)	5
38744	Theme.Holo)	5
39803	Theme.Sherlock,Theme.Sherlock.Light,Theme.Sherlock.Light.DarkActionBar,or	4
20574	Then	23
34911	There	35
57354	Therefore	3
48764	Therefore,it	4
42179	Therefore,there	4
48708	Therefore,this	4
7581	These	39
18243	They	17
1836	This	410
16537	Thomas	8
18082	Those	5
25070	Thread(MigrationHelper.moveExportedFilesToNewDefaultLocation).start()	7
14303	Thread(moveExportedFilesToNewDefaultLocation).start()	8
9304	Thread(new	18
46835	Thread.currentThread().getId()	4
47236	Thread.currentThread().getId())	4
13893	Thread.sleep(1000)	15
28308	Thread.sleep(2000)	3
2482	Thread.sleep(millis)	12
41745	ThreadLocal	4
42026	ThreadLocal<AnimationHandler>	4
42020	ThreadLocal<AnimationHandler>()	4
41757	ThreadLocal<ArrayList<ValueAnimator>>	4
41756	ThreadLocal<ArrayList<ValueAnimator>>()	4
35091	Throwable	11
48674	Throws	4
55790	Thursday	3
50720	Thursday,two	8
55632	Thursdays,we	3
48326	Thus,	4
49248	Thus,any	4
26534	Tijd</string>	8
51959	Tilbakelegging	7
21575	Tilbakemeldingsseksjon	9
18706	Time	47
18776	Time()	12
40629	TimeInterpolator	6
24711	TimePeriod	8
24811	TimePeriod.ALL_TIME	7
24852	TimePeriod.ALL_TIME)	6
24777	TimePeriod.NEXT_MONTH	6
24896	TimePeriod.PREVIOUS_MONTH	6
23978	TimePickerDialog	9
64267	TimePickerDialog(getActivity(),	1
55102	TimePickerDialogFragment	3
55054	TimePickerDialogFragment()	4
63556	TimePickerDialogFragment(NewTransactionFragment.this)	2
59406	TimePickerDialogFragment(NewTransactionFragment.this,timeMillis)	6
51224	TimePickerDialogFragment(OnTimeSetListener	8
63394	TimePickerDialogFragment(TransactionFormFragment.this,timeMillis)	3
23480	TimePickerDialogFragment.newInstance(TransactionFormFragment.this,timeMillis)	4
52548	TimeZone	9
52667	TimeZone.getTimeZone("GMT+0:00")	5
52466	TimeZone.getTimeZone("GMT+1:00")	5
52433	TimeZone.getTimeZone("GMT-1:00")	5
3467	Timer	9
3743	Timer()	9
51687	TimerTask	5
2853	TimerTask{	4
3017	Timestamp	98
52666	Timestamp(0)	7
28820	Timestamp(0)))	4
21815	Timestamp(0).toString()	9
32048	Timestamp(GncXmlHelper.parseDate(characterString))	4
23663	Timestamp(GncXmlHelper.parseDate(characterString)))	4
57269	Timestamp(LocalDateTime.now().minusDays(9).toDate().getTime()))	3
8451	Timestamp(System.currentTimeMillis())	25
30119	Timestamp(System.currentTimeMillis())).toString()	11
21831	Timestamp(System.currentTimeMillis()).toString()	21
52438	Timestamp(System.currentTimeMillis()).toString())	5
25418	Timestamp(c.getLong(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_TIMESTAMP)))	5
54331	Timestamp(cal.getTimeInMillis()))	8
54277	Timestamp(calendar.getTimeInMillis()))	6
25275	Timestamp(cursor.getLong(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_TIMESTAMP)))	15
4905	Timestamp(date))	4
52449	Timestamp(dateTime.getMillis())	2
8300	Timestamp(end.getMillis()))	5
8550	Timestamp(endDate.getMillis())	8
53405	Timestamp(endDate.toDate().getTime())	8
8476	Timestamp(endDate.toDateTime().getMillis())	5
63078	Timestamp(endTime))	4
8605	Timestamp(endTime.getMillis()))	5
53934	Timestamp(endTime.toMillis(false)))	2
35122	Timestamp(eventRecurrence.startDate.toMillis(false)))	8
52588	Timestamp(goldenBoyBirthday)	2
51863	Timestamp(mEndDate))	6
52434	Timestamp(mExportStartCalendar.getTimeInMillis()))	8
53670	Timestamp(mStartDate))	2
52226	Timestamp(mStartDate.getTimeInMillis()))	4
55495	Timestamp(scheduledAction.getLastRunTime()))	5
13178	Timestamp(scheduledBackup.getStartTime()))	6
60308	Timestamp(start.getMillis()))	3
53580	Timestamp(startDate))	2
9101	Timestamp(startDate.getMillis()))	10
7613	Timestamp(startTime))	9
8337	Timestamp(startTime.getMillis()))	8
52528	Timestamp(the1234567890thSecond)	5
52708	Timestamp(timestamp.getTime()	2
25526	Timestamp(transactionTime))	12
52443	Timestamp(unixBillennium)	5
52564	Timestamp.valueOf(Exporter.TIMESTAMP_ZERO)	5
21500	Timestamp.valueOf(PreferenceManager.getDefaultSharedPreferences(GnuCashApplication.getAppContext()).getString(Exporter.PREF_LAST_EXPORT_TIME,Exporter.TIMESTAMP_ZERO))	9
6055	Timestamp.valueOf(createdTimestamp).getTime()	4
4799	Timestamp.valueOf(cursor.getString(cursor.getColumnIndexOrThrow("trans_date_posted")))	6
52525	Timestamp.valueOf(lastExportTimeStamp)	6
62835	Timestamp.valueOf(source.readString())	4
24061	Timestamp.valueOf(timeString)	10
31754	Timestamp.valueOf(tokens[2])	6
52692	TimestampHelper	4
52646	TimestampHelper()	5
52693	TimestampHelper.getTimestampForEpochZero()	8
52587	TimestampHelper.getTimestampForNow()	6
52523	TimestampHelper.getTimestampForNow().getTime()	5
52586	TimestampHelper.getTimestampForUtcString(createdTimestamp).getTime()	5
52478	TimestampHelper.getTimestampForUtcString(cursor.getString(cursor.getColumnIndexOrThrow("trans_date_posted")))	5
52682	TimestampHelper.getTimestampForUtcString(timeString)	5
52418	TimestampHelper.getTimestampForUtcString(tokens[2])	5
52506	TimestampHelper.getTimestampForUtcString(utcString)	5
52460	TimestampHelper.getTimestampFromEpochZero()	6
50633	TimestampHelper.getTimestampFromEpochZero()))	3
52503	TimestampHelper.getTimestampFromNow()	6
52454	TimestampHelper.getTimestampFromNow().getTime()	4
52593	TimestampHelper.getTimestampFromUtcString(createdTimestamp).getTime()	4
52495	TimestampHelper.getTimestampFromUtcString(cursor.getString(cursor.getColumnIndexOrThrow("trans_date_posted")))	4
52554	TimestampHelper.getTimestampFromUtcString(timeString)	4
52706	TimestampHelper.getTimestampFromUtcString(tokens[2])	4
50885	TimestampHelper.getTimestampFromUtcString(utcString)	7
52641	TimestampHelper.getUtcStringForTimestamp(PreferencesHelper.getLastExportTime())	5
52539	TimestampHelper.getUtcStringForTimestamp(TimestampHelper.getTimestampForNow())	5
52491	TimestampHelper.getUtcStringForTimestamp(lastExportTime)	5
52462	TimestampHelper.getUtcStringForTimestamp(mExportParams.getExportStartTime())	5
52476	TimestampHelper.getUtcStringForTimestamp(mExportStartTime)	5
50745	TimestampHelper.getUtcStringFromTimestamp(	3
52591	TimestampHelper.getUtcStringFromTimestamp(PreferencesHelper.getLastExportTime())	4
52461	TimestampHelper.getUtcStringFromTimestamp(TimestampHelper.getTimestampFromEpochZero()))	7
52627	TimestampHelper.getUtcStringFromTimestamp(TimestampHelper.getTimestampFromNow())	4
8314	TimestampHelper.getUtcStringFromTimestamp(lastExportTime)	10
52419	TimestampHelper.getUtcStringFromTimestamp(mExportParams.getExportStartTime())	4
52697	TimestampHelper.getUtcStringFromTimestamp(mExportStartTime)	7
57275	TimestampHelper.getUtcStringFromTimestamp(timestamp))	3
52619	TimestampHelperTest	5
5733	Tipo</string>	29
5830	Tippen	8
36999	Title	31
6781	TitlePageIndicator	29
4992	To	33
11121	To:</string>	102
6964	ToDo	9
27619	Toast	15
7122	Toast.LENGTH_LONG).show()	66
25654	Toast.LENGTH_SHORT).show()	28
35702	Toast.makeText(GnuCashApplication.getAppContext(),	4
33790	Toast.makeText(GnuCashApplication.getAppContext(),"Upgrading	6
31497	Toast.makeText(SettingsActivity.this,R.string.toast_error_importing_accounts,Toast.LENGTH_LONG).show()	5
62089	Toast.makeText(activity,R.string.toast_install_file_manager,Toast.LENGTH_LONG).show()	3
31746	Toast.makeText(context,	7
51726	Toast.makeText(context,"Connected	10
51590	Toast.makeText(context,"Connection	7
51737	Toast.makeText(context,"Unable	10
27672	Toast.makeText(context,R.string.toast_all_accounts_deleted,Toast.LENGTH_SHORT).show()	18
19018	Toast.makeText(context,R.string.toast_all_transactions_deleted,Toast.LENGTH_SHORT).show()	19
64149	Toast.makeText(context,R.string.toast_connected_to_google_drive,Toast.LENGTH_SHORT).show()	3
26729	Toast.makeText(context,R.string.toast_error_importing_accounts,Toast.LENGTH_LONG).show()	15
20700	Toast.makeText(context,R.string.toast_error_importing_accounts,Toast.LENGTH_SHORT).show()	7
64152	Toast.makeText(context,R.string.toast_unable_to_connect_to_google_drive,Toast.LENGTH_LONG).show()	3
42706	Toast.makeText(context,mItemData.getTitle(),Toast.LENGTH_SHORT)	4
35724	Toast.makeText(context,message,Toast.LENGTH_LONG).show()	7
24095	Toast.makeText(context,message,Toast.LENGTH_SHORT).show()	9
54868	Toast.makeText(fragment.getActivity(),R.string.toast_install_file_manager,Toast.LENGTH_LONG).show()	2
6641	Toast.makeText(getActivity(),	46
57404	Toast.makeText(getActivity(),"Add	3
19241	Toast.makeText(getActivity(),"Found	4
30405	Toast.makeText(getActivity(),"Multi-currency	4
33449	Toast.makeText(getActivity(),"Please	13
2769	Toast.makeText(getActivity(),"Scheduled	11
54032	Toast.makeText(getActivity(),"Set	5
56953	Toast.makeText(getActivity(),"The	5
51749	Toast.makeText(getActivity(),"Updated	8
51393	Toast.makeText(getActivity(),"You	10
6787	Toast.makeText(getActivity(),R.string.error_exporting,	12
57270	Toast.makeText(getActivity(),R.string.notify_account_deleted,Toast.LENGTH_SHORT).show()	3
27860	Toast.makeText(getActivity(),R.string.toast_account_deleted,Toast.LENGTH_SHORT).show()	21
57075	Toast.makeText(getActivity(),R.string.toast_backup_folder_not_found,Toast.LENGTH_LONG).show()	6
64153	Toast.makeText(getActivity(),R.string.toast_enter_amount_to_split,Toast.LENGTH_SHORT).show()	3
59249	Toast.makeText(getActivity(),R.string.toast_error_check_split_amounts,	3
1334	Toast.makeText(getActivity(),R.string.toast_error_edit_multi_currency_transaction,Toast.LENGTH_LONG).show()	24
30569	Toast.makeText(getActivity(),R.string.toast_error_importing_accounts,Toast.LENGTH_LONG).show()	7
31436	Toast.makeText(getActivity(),R.string.toast_incompatible_currency,Toast.LENGTH_LONG).show()	14
32203	Toast.makeText(getActivity(),R.string.toast_legend_too_long,Toast.LENGTH_LONG).show()	8
23504	Toast.makeText(getActivity(),R.string.toast_passcode_set,Toast.LENGTH_SHORT).show()	16
18123	Toast.makeText(getActivity(),R.string.toast_recurring_transaction_deleted,Toast.LENGTH_SHORT).show()	21
52075	Toast.makeText(getActivity(),R.string.toast_scheduled_recurring_transaction,Toast.LENGTH_SHORT).show()	7
30513	Toast.makeText(getActivity(),R.string.toast_success_importing_accounts,Toast.LENGTH_LONG).show()	7
63785	Toast.makeText(getActivity(),R.string.toast_transaction_has_no_splits_and_cannot_open,Toast.LENGTH_SHORT).show()	2
60160	Toast.makeText(getActivity(),R.string.toast_transanction_amount_required,	7
485	Toast.makeText(getActivity(),R.string.toast_transanction_amount_required,Toast.LENGTH_SHORT).show()	30
64146	Toast.makeText(getActivity(),R.string.toast_updated_transaction_recurring_schedule,Toast.LENGTH_SHORT).show()	3
57195	Toast.makeText(getActivity(),msg,Toast.LENGTH_SHORT).show()	3
24785	Toast.makeText(getActivity(),msgId,Toast.LENGTH_LONG).show()	8
293	Toast.makeText(getApplicationContext(),	5
33842	Toast.makeText(getApplicationContext(),R.string.toast_passcode_set,Toast.LENGTH_SHORT).show()	9
51357	Toast.makeText(getSherlockActivity(),	5
7034	Toast.makeText(mContext,	34
51526	Toast.makeText(mContext,"DropBox	4
34092	Toast.makeText(mContext,"Error	8
6559	Toast.makeText(mContext,R.string.error_exporting,	5
25557	Toast.makeText(mContext,R.string.toast_export_error,	12
35273	Toast.makeText(mContext,R.string.toast_no_compatible_apps_to_receive_export,	6
33855	Toast.makeText(mContext,e.getLocalizedMessage(),Toast.LENGTH_LONG).show()	4
25637	Toast.makeText(mContext,err_msg,Toast.LENGTH_LONG).show()	7
19736	Toast.makeText(mContext,message,Toast.LENGTH_SHORT).show()	9
28205	Toast.makeText(mContext,message,duration).show()	6
57657	Toast.makeText(this,"The	8
52007	Toast.makeText(this,R.string.error_no_accounts,Toast.LENGTH_LONG).show()	11
3047	Toast.makeText(this,R.string.toast_all_accounts_deleted,Toast.LENGTH_LONG).show()	8
2452	Toast.makeText(this,R.string.toast_all_transactions_deleted,Toast.LENGTH_LONG).show()	16
57197	Toast.makeText(this,R.string.toast_backup_folder_not_found,Toast.LENGTH_LONG).show()	4
34141	Toast.makeText(this,R.string.toast_confirm_passcode,Toast.LENGTH_SHORT).show()	6
30530	Toast.makeText(this,R.string.toast_error_importing_accounts,Toast.LENGTH_LONG).show()	10
2823	Toast.makeText(this,R.string.toast_error_importing_accounts,Toast.LENGTH_SHORT).show()	19
54759	Toast.makeText(this,R.string.toast_install_file_manager,Toast.LENGTH_LONG).show()	6
34149	Toast.makeText(this,R.string.toast_invalid_passcode_confirmation,Toast.LENGTH_LONG).show()	5
57641	Toast.makeText(this,R.string.toast_legend_too_long,Toast.LENGTH_LONG).show()	5
51672	Toast.makeText(this,R.string.toast_no_recent_backup,Toast.LENGTH_SHORT).show()	5
57142	Toast.makeText(this,R.string.toast_passcode_set,Toast.LENGTH_SHORT).show()	5
30541	Toast.makeText(this,R.string.toast_success_importing_accounts,Toast.LENGTH_LONG).show()	10
2682	Toast.makeText(this,R.string.toast_tap_again_to_confirm_delete,Toast.LENGTH_SHORT).show()	15
1042	Toast.makeText(this,R.string.toast_wrong_passcode,Toast.LENGTH_SHORT).show()	16
51515	Toast.makeText(this,msg,Toast.LENGTH_SHORT).show()	5
59975	Toast.makeText(this,msgId,Toast.LENGTH_LONG).show()	8
5367	Tobago	126
16715	Tobago-Dollar</item>	6
28862	Tobago</item>	11
21954	Tobagos	10
2632	Todas	37
5790	ToggleButton	27
6683	Toggles	45
58393	Tolar"	6
28615	Tome	10
816	Toolbar	46
37101	Top	4
22431	Tortendiagrammen</string>	8
59513	Totais</string>	11
19935	Total	19
3392	Total</string>	17
46761	Touch	4
6465	TouchDelegate(hitRect,addTransactionButton))	9
6432	TouchDelegate(hitRect,checkBoxView))	19
10783	Toutes	13
29726	Tr</string>	6
40776	Tracks	8
11563	Traitement	9
19710	Transa&#231	18
15917	Transacci&#243	12
15650	Transaccin</string>	10
3710	Transacciones	12
16015	Transacciones</string>	10
53485	Transact	2
16818	Transactietype</string>	13
187	Transaction	290
60081	Transaction")	3
35977	Transaction#EXTRA_ACCOUNT_UID	3
36142	Transaction(	14
26498	Transaction("")	29
36121	Transaction("2.50","Underground")	3
32888	Transaction("2.99","T800")	8
36257	Transaction("3.49","Tube")	4
36332	Transaction("4.99","T1000")	3
5619	Transaction("5.99","hats")	10
36378	Transaction("9.99","Pizza")	7
36271	Transaction("9.99","buyout")	3
32764	Transaction("9.99",TRANSACTION_NAME)	2
26579	Transaction("Auto	7
34008	Transaction("Autobalance")	4
30781	Transaction("Bobba	7
34037	Transaction("Compute")	2
31070	Transaction("Multicurrency")	2
18815	Transaction("MyTransaction")	8
31013	Transaction("One	2
57285	Transaction("Orient	3
13747	Transaction("Pizza")	16
30767	Transaction("Random")	4
60012	Transaction("Recurring	3
11797	Transaction("Simple	26
31025	Transaction("T1000")	6
31258	Transaction("T800")	10
57226	Transaction("Tandoori	3
54204	Transaction("Template")	2
36292	Transaction("Test	12
62952	Transaction("Test")	4
30923	Transaction("TestTrn")	8
36157	Transaction("Transaxion	6
36062	Transaction("Underground")	8
13837	Transaction("birds")	4
31414	Transaction("buyout")	6
28516	Transaction("hats")	11
55212	Transaction(2.50,"Underground")	2
63763	Transaction(2.99,"T800")	2
63776	Transaction(4.99,"T1000")	2
36835	Transaction(5.99,"hats")	3
36828	Transaction(9.99,"Pizza")	7
63774	Transaction(9.99,"buyout")	2
55213	Transaction(9.99,TRANSACTION_NAME)	2
51225	Transaction(@NonNull	4
23835	Transaction(BigDecimal	2
11835	Transaction(GnuCashApplication.getAppContext().getString(R.string.account_name_opening_balances))	8
18027	Transaction(Money	10
34406	Transaction(Money.getZeroInstance(),"Transaxion	5
20454	Transaction(String	12
32489	Transaction(TRANSACTION2_NAME)	5
24733	Transaction(TRANSACTION3_NAME)	6
32539	Transaction(TRANSACTION_AMOUNT,TRANSACTION_NAME)	6
13075	Transaction(TRANSACTION_NAME)	30
10797	Transaction(Transaction	33
18501	Transaction(amount,name)	8
29238	Transaction(amount,name,TransactionType.valueOf(type))	4
36000	Transaction(amount,name,type)	6
23718	Transaction(c.getDouble(DatabaseAdapter.COLUMN_AMOUNT),	2
23699	Transaction(c.getString(DatabaseAdapter.COLUMN_AMOUNT),	2
11110	Transaction(description)	28
23566	Transaction(double	6
51113	Transaction(mContext.getString(R.string.account_name_opening_balances))	6
18080	Transaction(mTransaction)	5
2979	Transaction(mTransaction,true)	21
56681	Transaction(mTransactionsDbAdapter.getRecord(id),true)	7
54418	Transaction(mTransactionsDbAdapter.getTransaction(id),true)	9
18119	Transaction(moneyAmount,name)	6
11530	Transaction(name)	19
26477	Transaction(new	2
26969	Transaction(t,false)	4
25714	Transaction(templateTransaction,true)	2
30863	Transaction(transaction,false)	7
30801	Transaction(transaction,true)	8
63017	Transaction(trnDescription)	5
25633	Transaction(trxnTemplate,true)	23
52305	Transaction,which	10
18466	Transaction.TransactionType	5
18476	Transaction.TransactionType#name()	5
18172	Transaction.TransactionType.valueOf(args.getString(Transaction.EXTRA_TRANSACTION_TYPE))	5
35990	Transaction.computeBalance(accountUID,mSplitsList)	4
20132	Transaction.computeBalance(accountUID,splitList)	7
32801	Transaction.computeBalance(mAccountUID,mSplitsList)	18
63020	Transaction.createAutoBalanceSplit())	4
25939	Transaction.getAutoBalanceSplit())	7
31269	Transaction.getFormattedAmount(balance)	2
57251	Transaction.getTypeForBalance(AccountType.BANK,splitSum.negate().isNegative())	4
31204	Transaction.getTypeForBalance(accountType,imbalanceAmount.isNegative())	5
13964	Transaction.getTypeForBalance(accountType,mBaseAmount.signum()	10
11774	Transaction.getTypeForBalance(getAccountType(accountUID),	14
19520	Transaction.getTypeForBalance(getAccountType(accountUID),amount.isNegative())	7
11442	Transaction</string>	104
55081	TransactionAppWidgetProvider	3
9017	TransactionDetailActivity	9
35560	TransactionEntry	4
14263	TransactionEntry.COLUMN_COMMODITY_UID	24
14443	TransactionEntry.COLUMN_COMMODITY_UID,	2
14432	TransactionEntry.COLUMN_CREATED_AT	31
14164	TransactionEntry.COLUMN_CREATED_AT,	2
14473	TransactionEntry.COLUMN_CURRENCY	59
14600	TransactionEntry.COLUMN_CURRENCY,	2
2540	TransactionEntry.COLUMN_DESCRIPTION	72
14025	TransactionEntry.COLUMN_DESCRIPTION,	2
14427	TransactionEntry.COLUMN_EXPORTED	68
14444	TransactionEntry.COLUMN_EXPORTED,	2
59731	TransactionEntry.COLUMN_EXPORTED,String.valueOf(0))	3
20418	TransactionEntry.COLUMN_EXPORTED,String.valueOf(rowId	9
20009	TransactionEntry.COLUMN_MODIFIED_AT	35
20523	TransactionEntry.COLUMN_MODIFIED_AT,Long.toString(System.currentTimeMillis()))	8
52529	TransactionEntry.COLUMN_MODIFIED_AT,TimestampHelper.getUtcStringForTimestamp(TimestampHelper.getTimestampForNow()))	5
52509	TransactionEntry.COLUMN_MODIFIED_AT,TimestampHelper.getUtcStringFromTimestamp(TimestampHelper.getTimestampFromNow()))	4
52524	TransactionEntry.COLUMN_MODIFIED_AT,new	5
35290	TransactionEntry.COLUMN_NAME	6
14077	TransactionEntry.COLUMN_NOTES	36
14570	TransactionEntry.COLUMN_NOTES,	2
14231	TransactionEntry.COLUMN_RECURRENCE_PERIOD	44
14442	TransactionEntry.COLUMN_SCHEDX_ACTION_UID	26
14517	TransactionEntry.COLUMN_SCHEDX_ACTION_UID,	2
2628	TransactionEntry.COLUMN_TEMPLATE	63
14408	TransactionEntry.COLUMN_TIMESTAMP	90
14644	TransactionEntry.COLUMN_TIMESTAMP,	2
1543	TransactionEntry.COLUMN_UID	144
29984	TransactionEntry.COLUMN_UID,	8
57570	TransactionEntry.INDEX_UID	5
3462	TransactionEntry.TABLE_NAME	154
25256	TransactionEntry.TABLE_NAME)	7
19496	TransactionEntry.TABLE_NAME+"."+	11
56932	TransactionEntry.TABLE_NAME+"."+TransactionEntry.COLUMN_CURRENCY	3
56836	TransactionEntry.TABLE_NAME+"."+TransactionEntry.COLUMN_DESCRIPTION	3
56895	TransactionEntry.TABLE_NAME+"."+TransactionEntry.COLUMN_EXPORTED	3
56914	TransactionEntry.TABLE_NAME+"."+TransactionEntry.COLUMN_NOTES	3
56957	TransactionEntry.TABLE_NAME+"."+TransactionEntry.COLUMN_RECURRENCE_PERIOD	3
33511	TransactionEntry.TABLE_NAME+"."+TransactionEntry.COLUMN_TEMPLATE	5
56931	TransactionEntry.TABLE_NAME+"."+TransactionEntry.COLUMN_TIMESTAMP	3
56928	TransactionEntry.TABLE_NAME+"."+TransactionEntry.COLUMN_UID	3
19078	TransactionEntry.TABLE_NAME,	30
19664	TransactionEntry._ID	31
23931	TransactionFormFragment	28
34615	TransactionFormFragment()	8
28981	TransactionFormFragment.DATE_FORMATTER.format(new	7
28759	TransactionFormFragment.DATE_FORMATTER.format(transaction.getTimeMillis())	11
13580	TransactionFormFragment.DATE_FORMATTER.format(trxDate))	11
57515	TransactionFormFragment.DATE_FORMATTER.parse(((TextView)	4
63197	TransactionFormFragment.DATE_FORMATTER.parse(mExportStartDate.getText().toString())	3
29015	TransactionFormFragment.TIME_FORMATTER.format(new	7
29020	TransactionFormFragment.TIME_FORMATTER.format(transaction.getTimeMillis())	7
13069	TransactionFormFragment.TIME_FORMATTER.format(trxDate))	11
63261	TransactionFormFragment.TIME_FORMATTER.parse(mExportStartTime.getText().toString())	3
36136	TransactionFormFragment.parseInputToDecimal(amountText).negate().toPlainString()	6
7919	TransactionFormFragment.parseInputToDecimal(convertedAmount)	11
31534	TransactionFormFragment.parseInputToDecimal(exchangeRateString)	8
13341	TransactionFormFragment.parseInputToDecimal(s.toString())	9
31956	TransactionFormFragment.parseInputToDecimal(splitAmountEditText.getText().toString())	9
31901	TransactionFormFragment.parseInputToDecimal(stringAmount),	7
31675	TransactionFormFragment.parseInputToDecimal(viewHolder.splitAmountEditText.getText().toString())	7
58853	TransactionFormFragment.stripCurrencyFormatting(amount.multiply(denom).stripTrailingZeros().toPlainString())	3
51639	TransactionFormFragment.stripCurrencyFormatting(amountString.substring(0,pos))	8
61843	TransactionFormFragment.stripCurrencyFormatting(numerator)	3
9404	TransactionFormFragment.this,	13
8779	TransactionFormFragment.this,calendar.get(Calendar.HOUR_OF_DAY),	7
387	TransactionInfoActivity	6
35888	TransactionRecorder	4
28693	TransactionRecorder().onReceive(mTransactionsActivity,transactionIntent)	9
10036	TransactionRecyclerAdapter	23
30262	TransactionRecyclerAdapter(Cursor	21
60667	TransactionRecyclerAdapter(null)	3
53456	TransactionT	5
30836	TransactionTest	8
30918	TransactionTest(String	4
5165	TransactionType	88
33879	TransactionType#CREDIT	3
33956	TransactionType#DEBIT	3
33897	TransactionType#invert()	8
20854	TransactionType#name()	4
4666	TransactionType.CREDIT	64
6474	TransactionType.CREDIT)	11
59314	TransactionType.CREDIT){	2
6983	TransactionType.DEBIT	57
6397	TransactionType.DEBIT)	79
31337	TransactionType.DEBIT){	5
35956	TransactionType.valueOf(args.getString(Transaction.EXTRA_TRANSACTION_TYPE))	9
62978	TransactionType.valueOf(source.readString())	4
5585	TransactionType.valueOf(trxType)	9
24589	TransactionType.valueOf(typeString)	7
31613	TransactionTypeButton	8
10065	TransactionTypeSwitch	20
24651	TransactionTypeSwitch(Context	6
55869	TransactionTypeSwitch.this.setTextColor(green)	3
56166	TransactionTypeSwitch.this.setTextColor(red)	3
13231	TransactionTypeToggleButton	23
30102	TransactionTypeToggleButton(Context	6
36319	TransactionTypeToggleButton.this.setTextColor(green)	5
36100	TransactionTypeToggleButton.this.setTextColor(red)	5
25830	TransactionUID	13
2758	Transactions	66
7303	Transactions"	6
18312	Transactions")	14
29904	Transactions</item>	5
5901	Transactions</string>	175
13930	TransactionsActivity	28
13734	TransactionsActivity){	23
62365	TransactionsActivity.displayBalance(accountBalance,mAccountsDbAdapter.getAccountBalance(accountTypes,-1,System.currentTimeMillis()))	3
35839	TransactionsActivity.displayBalance(amountTextView,amount)	9
21650	TransactionsActivity.displayBalance(assetBalance,mAccountsDbAdapter.getAccountBalance(accountTypes))	6
61974	TransactionsActivity.displayBalance(balanceTextView,accountBalance)	3
21447	TransactionsActivity.displayBalance(balanceTextView,balance)	11
28774	TransactionsActivity.displayBalance(balanceView,quantity)	6
61985	TransactionsActivity.displayBalance(balanceView,split.getQuantity())	4
34664	TransactionsActivity.displayBalance(holder.transactionAmount,amount)	8
24722	TransactionsActivity.displayBalance(mImbalanceTextView,new	9
31857	TransactionsActivity.displayBalance(mImbalanceTextView,splitSum)	17
62305	TransactionsActivity.displayBalance(mNetWorth,assetsBalance.add(liabilitiesBalance))	5
21592	TransactionsActivity.displayBalance(mNetWorth,assetsBalance.subtract(liabilitiesBalance))	12
60110	TransactionsActivity.displayBalance(mNetWorth,mAssetsBalance.subtract(mLiabilitiesBalance))	4
8271	TransactionsActivity.displayBalance(mStartAmountLabel,mOriginAmount)	9
31636	TransactionsActivity.displayBalance(mStartAmountLabel,mTransactionAmount)	5
21621	TransactionsActivity.displayBalance(mTotalAssets,assetsBalance)	11
60192	TransactionsActivity.displayBalance(mTotalAssets,mAssetsBalance)	3
21263	TransactionsActivity.displayBalance(mTotalLiabilities,liabilitiesBalance)	11
60173	TransactionsActivity.displayBalance(mTotalLiabilities,mLiabilitiesBalance)	3
21227	TransactionsActivity.displayBalance(mTotalLiabilitiesAndEquity,liabilitiesBalance.add(equityBalance))	6
62001	TransactionsActivity.displayBalance(mTransactionAmount,balance)	4
59139	TransactionsActivity.getPrettyDateFormat(getActivity(),dateMillis)	8
7166	TransactionsActivity.sLastTitleColor	9
13462	TransactionsActivityTest	21
13370	TransactionsActivityTest()	19
19004	TransactionsCursorAdapter	17
18395	TransactionsCursorAdapter(	25
18764	TransactionsCursorAdapter(Context	27
31400	TransactionsCursorLoader	6
29235	TransactionsCursorLoader(Context	9
31352	TransactionsCursorLoader(getActivity(),mAccountID)	6
64225	TransactionsCursorLoader(getActivity(),mAccountUID)	2
24337	TransactionsDbAdap	4
1754	TransactionsDbAdapter	222
51089	TransactionsDbAdapter(@NonNull	4
23518	TransactionsDbAdapter(Context	7
31441	TransactionsDbAdapter(GnuCashApplication.getAppContext())	7
14454	TransactionsDbAdapter(SQLiteDatabase	11
18349	TransactionsDbAdapter(context)	36
30976	TransactionsDbAdapter(db)	12
11455	TransactionsDbAdapter(db,mSplitsDbAdapter)	23
13680	TransactionsDbAdapter(db,new	40
25467	TransactionsDbAdapter(db,splitsDbAdapter)	14
6325	TransactionsDbAdapter(getActivity())	63
29271	TransactionsDbAdapter(getActivity().getApplicationContext())	4
19379	TransactionsDbAdapter(getContext())	10
54790	TransactionsDbAdapter(getInstrumentation().getTargetContext())	5
28511	TransactionsDbAdapter(getSherlockActivity())	13
31129	TransactionsDbAdapter(mContext)	16
13815	TransactionsDbAdapter(mDb,mSplitsDbAdapter)	34
58738	TransactionsDbAdapter(mDb,new	3
63480	TransactionsDbAdapter(mainDb,mSplitsDbAdapter)	4
8339	TransactionsDbAdapter(mainDb,new	11
2222	TransactionsDbAdapter(this)	13
1603	TransactionsDbAdapter.getInstance()	124
52255	TransactionsDbAdapter.getInstance().addRecord(transaction)	5
52358	TransactionsDbAdapter.getInstance().addRecord(transaction,DatabaseAdapter.UpdateMethod.insert)	2
30760	TransactionsDbAdapter.getInstance().addTransaction(transaction)	4
56734	TransactionsDbAdapter.getInstance().deleteAllRecords()	17
20948	TransactionsDbAdapter.getInstance().deleteRecord(transactionId)	3
30167	TransactionsDbAdapter.getInstance().deleteTransactionsForAccount(mOriginAccountUID)	4
53094	TransactionsDbAdapter.getInstance().getAttribute(actionUID,TransactionEntry.COLUMN_DESCRIPTION)	3
31816	TransactionsDbAdapter.getInstance().getAttribute(transxUID,TransactionEntry.COLUMN_CURRENCY)	8
53170	TransactionsDbAdapter.getInstance().getBalance(transactionUID,mAccountUID)	3
13970	TransactionsDbAdapter.getInstance().getSplitCount(mTransactionUID)	6
6037	TransactionsDbAdapter.getInstance().getTimestampOfEarliestTransaction(type)	7
23814	TransactionsDbAdapter.getInstance().getTimestampOfLastModification()	13
31229	TransactionsDbAdapter.getInstance().getTimestampOfLastModification(),	2
6322	TransactionsDbAdapter.getInstance().getTimestampOfLatestTransaction(type)	7
33713	TransactionsDbAdapter.getInstance().getTransactionsCount(accountUID)	3
30969	TransactionsDbAdapterTest	22
6578	TransactionsDeleteConfirmationDialog	18
56780	TransactionsDeleteConfirmationDialog()	6
7131	TransactionsDeleteConfirmationDialog.newInstance(R.string.title_confirm_delete,0)	17
26610	TransactionsDeleteConfirmationDialogFragment	18
60389	TransactionsDeleteConfirmationDialogFragment()	5
26995	TransactionsDeleteConfirmationDialogFragment.newInstance(R.string.title_confirm_delete,0)	9
36748	TransactionsFragmentTest	4
36815	TransactionsFragmentTest()	4
18822	TransactionsListFragment	44
19711	TransactionsListFragment()	21
6453	TransactionsListFragment.SELECTED_ACCOUNT_ID,-1)	22
57085	TransactionsPreferenceFragment	6
1987	TransactionsPreferenceFragment.class.getName().equals(fragmentName)	12
54972	Transaes	7
22912	Transaes</string>	23
26155	Transakcje	5
10237	Transaksi	3
11775	Transaksi</string>	7
51965	Transaksjon</string>	4
15161	Transaksjoner</string>	14
22924	Transaksjonsliste</string>	7
28660	Transao	13
23014	Transao</string>	19
25958	Transazioni	5
5006	Transfer	97
11561	Transfer</string>	5
62943	TransferFunds	4
8248	TransferFundsDialogFragment	27
8530	TransferFundsDialogFragment()	9
12874	TransferFundsDialogFragment.getInstance(amount,targetCurrency,this)	15
31594	TransferFundsDialogFragment.getInstance(amount,targetCurrencyCode,mSplitViewHolder)	11
12751	TransferFundsDialogFragment.getInstance(amount,targetCurrencyCode,this)	3
31522	TransferFundsDialogFragment.getInstance(amount,to.getCurrencyCode(),this)	5
59306	Transferkonto	4
46602	Transformation	4
46919	Transformation()	4
6564	Transformer	24
6674	TransformerFactory	25
20139	TransformerFactory.newInstance()	9
47610	Transforms	4
46795	Translate	4
7354	Transmits	10
46560	Transparent,since	4
31038	Travis	9
58710	TreeMap<>()	1
62126	TreeSet<>(Arrays.asList(currencies))	3
2075	Trigger	12
28941	Trinidad	11
63068	Trn"	5
38817	True	31
13818	Try	30
41749	Trying	4
53886	Tuesday,then	5
11078	Tujuan</string>	7
28845	Tunisiano</item>	10
28787	Turca</item>	10
29053	Turcomenisto</item>	11
5803	Turned	98
16364	Tutti	15
33310	Two	18
18178	Type	77
5235	Type</string>	162
31524	TypeButtonLabelUpdater	8
31850	TypeButtonLabelUpdater(TransactionTypeSwitch	6
35836	TypeButtonLabelUpdater(TransactionTypeToggleButton	5
13266	TypeButtonLabelUpdater(splitTypeButton))	18
40815	TypeEvaluator	12
41343	TypeEvaluator.	7
40956	TypeEvaluator<Integer>	4
41039	TypeEvaluator<Number>	4
41858	TypeEvaluator<T>	4
41534	TypeEvaluator<V>	4
234	TypedArray	52
30234	TypedValue	28
30205	TypedValue()	29
46223	TypedValue.TYPE_DIMENSION)	4
46095	TypedValue.TYPE_FRACTION)	4
48564	TypedValue.TYPE_INT_HEX	4
46050	TypedValue.TYPE_NULL)	4
48729	TypedValue.TYPE_STRING	5
30140	TypedValue.complexToDimensionPixelSize(tv.data,	3
51553	Types	9
504	Tyshkovets	88
17212	U	21
62418	UAE</item>	6
62748	UANG</item>	3
18474	UI	147
27662	UI)	15
37318	UI).	5
43998	UI.	9
59157	UI</p>	7
15868	UIC</item>	14
423	UID	166
64113	UID")	3
60549	UID,returning	3
27877	UID.	31
57541	UID:	6
64190	UIDParent	4
2601	UIDs	36
63575	UIDs,if	5
56520	UNION	12
53263	UNIQUE	14
25095	UNIQUE,"	29
59112	UNSOLICITED_TRANSACTION_ID	3
46088	UNSPECIFIED.	4
33943	UPDATE	8
50733	URI	8
55470	URI("Sync	2
50965	URI,without	5
55248	URI.	3
55340	URI:	3
50403	URIs	11
50751	URIs.	5
49948	URL	5
12306	US	26
26573	USA	23
62394	USA</item>	6
3059	USD	52
60600	USE	3
48014	USER_MASK	4
43717	USER_MASK)	4
47914	USER_SHIFT	4
8209	UTC	8
52702	UTC"	8
52653	UTC.	5
52618	UTC_DATE_FORMAT	2
52678	UTC_DATE_FORMAT.withZone(UTC_TIME_ZONE).parseDateTime(utcString)	2
52456	UTC_DATE_WITH_MILLISECONDS_FORMAT	2
52473	UTC_DATE_WITH_MILLISECONDS_FORMAT.withZone(UTC_TIME_ZONE).parseDateTime(utcString)	2
52710	UTC_DATE_WITH_MILLISECONDS_FORMAT.withZone(UTC_TIME_ZONE).print(timestamp.getTime())	5
52709	UTC_TIME_ZONE	2
34264	UUID	1
18102	UUID.randomUUID().toString()	15
18794	UUID.randomUUID().toString().replaceAll("-","")	26
10627	Uang</string>	3
28959	Uganda</item>	11
25974	Ulepszone	5
52025	Umoliwia	9
47244	Uncache	4
18143	Unchecks	14
58294	Unicode	6
4028	Unidad	122
4122	Unidades	137
15465	Unidos</item>	14
58126	Union	6
1829	Unique	137
62023	United	3
486	Unless	347
35415	Unlike	12
38611	Unregister	4
45970	UnsupportedOperationException	8
36417	UnsupportedOperationException("Invalid	9
44653	UnsupportedOperationException("MenuPopupHelpers	4
45978	UnsupportedOperationException("addView(View)	4
45856	UnsupportedOperationException("addView(View,LayoutParams)	4
46153	UnsupportedOperationException("addView(View,int)	4
46177	UnsupportedOperationException("addView(View,int,LayoutParams)	4
45912	UnsupportedOperationException("removeAllViews()	4
46093	UnsupportedOperationException("removeView(View)	4
46004	UnsupportedOperationException("removeViewAt(int)	4
42822	UnsupportedOperationException()	4
59253	Unterkonten	4
59244	Unterkonten.	4
2315	Unterkonten</item>	40
34723	Unterkonten\n	5
2439	Unterkonto</item>	37
25705	Untersttzung	5
58810	Upda	6
1928	Update	42
10209	UpdateMet	6
11911	UpdateMethod	29
63863	UpdateMethod#replace	2
2154	Updates	92
17320	Upewnij	16
14576	Upgrade	21
34754	Upgrades	21
63123	UploadRemoteFileOperation(	3
9095	Uri	32
55413	Uri#parse(String)	3
50593	Uri.Builder	5
50417	Uri.Builder()	5
50052	Uri.encode(id)	5
50022	Uri.fromFile(new	4
31776	Uri.parse("android.resource://"	4
50257	Uri.parse(data)	5
50671	Uri.parse(drawableId)	5
55245	Uri.parse(mExportParams.getExportLocation())	3
63187	Uri.parse(mOC_server)	4
55513	Uri.parse(params.getExportLocation()).getHost()	2
32856	Uri.parse(uriString))	2
50523	Uri.writeToParcel()	5
28921	Uruguaio</item>	12
58166	Uruguayo"	6
4900	Uruguayo</item>	43
25768	Usar	7
62390	Usbequisto</item>	6
475	Use	146
13912	Used	100
3395	Useful	32
29357	User	15
34800	UserVoice.	4
24643	UserVoice.init(config,this)	15
62271	UserVoice.launchUserVoice(this)	6
23595	Users	5
51028	Uses	8
46811	Using	12
7105	Usually	17
18997	Utilisation	7
42186	Utility	13
63341	UxArgument	4
33314	UxArgument#AMOUNT_STRING	5
33460	UxArgument#SPLIT_LIST	5
23856	UxArgument(){	27
63470	UxArgument.SELECTED_ACCOUNT_ID,-1)	8
28931	Uzbequisto</item>	12
14052	VALUES	49
20267	VERSION=\"211\"	12
47533	VERTICAL)	5
47542	VERTICAL:	5
40187	VERY	4
21219	VIEW	20
30468	VIEW_TYPE_CONTENT	5
30462	VIEW_TYPE_HEADER	5
42585	VISIBLE	25
42321	VISIBLE)	33
49748	VISIBLE))	5
39951	VOLATILE!	4
7902	Valg	9
38588	Valid	10
36733	Validate	9
30222	Validates	5
51362	Validation	3
18694	ValidationsWatcher	9
19281	ValidationsWatcher()	6
5900	Valor	137
24812	Value	43
54489	Value-formatter	4
40882	ValueAnimator	16
41979	ValueAnimator#setEvaluator(TypeEvaluator)	4
42129	ValueAnimator#setInterpolator(TimeInterpolator)	4
41803	ValueAnimator()	4
41900	ValueAnimator,then	4
42242	ValueAnimator,to	4
41418	ValueAnimator.	8
41742	ValueAnimator.animateValue().	4
41601	ValueAnimator.animatedValue()	4
40769	ValueAnimator.ofFloat(0f,1f)	4
54424	ValueFormatter	4
30831	Values	5
41326	Values["	4
57299	Var	3
38475	Variation	8
3177	Varios	29
30377	Vele	10
25570	Verbesserte	9
25696	Verbesserungen\n	9
28178	Verbesserungsvorschlge	11
29624	Verbindlichkeiten	6
59265	Verbindlichkeiten</string>	4
35077	Verbindung	3
6267	Verde	111
29124	Verde</item>	11
4784	Verifique	9
46350	Verify	4
59341	Vermgen</string>	4
26385	Vermogen</item>	10
16994	Vermogen</string>	19
16357	Verranno	15
14058	Version	21
5804	Version</string>	36
17123	Vertalen</string>	6
37283	Vertical	4
11663	Veuillez	10
25632	Viele	7
680	View	325
63935	View"	7
23301	View#GONE	3
47968	View#startActionMode(Callback)	4
46110	View's	4
27405	View.GONE	16
33059	View.GONE)	23
39883	View.INVISIBLE	7
39671	View.INVISIBLE)	4
44287	View.NO_ID	4
44081	View.NO_ID)	4
27141	View.OnClickListener	33
1431	View.OnClickListener()	180
56600	View.OnClickListener(){	3
48879	View.OnClickListener,View.OnLongClickListener,PopupWindow.OnDismissListener	4
53941	View.OnClickListener{	2
56638	View.OnFocusChangeListener()	9
49762	View.OnKeyListener	5
221	View.OnKeyListener()	10
34789	View.OnLongClickListener()	16
52774	View.OnTouchListener	7
52807	View.OnTouchListener()	19
27349	View.VISIBLE	50
38934	View.VISIBLE)	24
62892	View.VISIBLE){	4
46825	View.resolveSize(dh,heightMeasureSpec))	4
47086	View.resolveSizeAndState(dh,heightMeasureSpec,0))	4
46031	View.setFocusableInTouchMode()	4
10415	View</string>	45
51972	ViewAction	15
50909	ViewCompat.setBackgroundTintList(button,tint)	3
43086	ViewConfiguration.get(context).hasPermanentMenuKey()	4
3234	ViewGroup	189
45101	ViewGroup)	8
33098	ViewGroup){	3
27250	ViewGroup.LayoutParams	24
45971	ViewGroup.LayoutParams(	8
27366	ViewGroup.LayoutParams(LayoutParams.WRAP_CONTENT,	3
38349	ViewGroup.LayoutParams(MATCH_PARENT,MATCH_PARENT))	8
33230	ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT))	6
48192	ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,	4
46906	ViewGroup.LayoutParams.MATCH_PARENT	4
46914	ViewGroup.LayoutParams.MATCH_PARENT)	5
47677	ViewGroup.LayoutParams.MATCH_PARENT))	4
46074	ViewGroup.LayoutParams.MATCH_PARENT,	4
46819	ViewGroup.LayoutParams.MATCH_PARENT,0,1.0f	4
46654	ViewGroup.LayoutParams.WRAP_CONTENT	4
46344	ViewGroup.LayoutParams.WRAP_CONTENT)	10
48145	ViewGroup.LayoutParams.WRAP_CONTENT))	4
47652	ViewGroup.LayoutParams.WRAP_CONTENT,	4
46531	ViewGroup.LayoutParams.WRAP_CONTENT,0)	4
48044	ViewGroup.getChildMeasureSpec(mHeightMeasureSpec,	4
47850	ViewGroup.getChildMeasureSpec(mWidthMeasureSpec,	4
46777	ViewGroup.getChildMeasureSpec(widthMeasureSpec,	4
9393	ViewHolder	28
60550	ViewHolder(View	16
30430	ViewHolder(v)	17
9185	ViewPager	50
43395	ViewPager).	4
62120	ViewPager.SimpleOnPageChangeListener()	3
45476	ViewParent	12
38930	ViewStub	4
44547	ViewTreeObserver	9
48987	ViewTreeObserver.OnGlobalLayoutListener()	5
44282	ViewTreeObserver.OnGlobalLayoutListener,PopupWindow.OnDismissListener,	4
43026	View_HasStateListenerSupport	4
42768	View_OnAttachStateChangeListener	4
44283	View_OnAttachStateChangeListener,MenuPresenter	4
43544	Views	4
56357	Vill	2
28148	Vis	4
56369	Visa</string>	2
50464	Visibility	5
45487	VisibilityAnimListener	9
45394	VisibilityAnimListener()	8
10598	Vista	15
4066	Visual	30
28071	Visualizaci\'on	9
55750	Visualizao	5
28022	Visualizzazione	13
52026	Visuelle	4
51519	Voc	9
37491	Voice	5
26493	Voice:	18
23281	Void	6
17138	Volgende</string>	3
59218	Vorlage	4
10926	Vos	7
11770	Vous	26
11253	Vrias	17
10714	Vrifiez	13
11968	Vue	9
55807	Vuoi	2
4330	W&#228	18
10257	WAKTU</string>	5
46938	WARNING:	4
1934	WARRANTIES	349
26448	WARRANTY	21
7415	WEEK	5
34761	WEEK){	2
1232	WEEK:	43
32406	WEEKLY:	4
19332	WEEK_MILLIS	11
49384	WEIGHT_DECAY_COEFFICIENT	5
19362	WHEN	55
301	WHERE	117
62308	WHOSE	3
58452	WIR	6
15702	WIR</item>	20
40570	WITH	10
1166	WITHOUT	350
47928	WRAP_CONTENT)	4
28950	WRITING	12
17540	WSZYSTKIE	11
17376	WZAJEMNY</item>	11
5104	Wake	5
62551	WakefulBroadcastReceiver	3
41091	Walk	4
61744	Wallet",AccountType.ASSET)	5
8403	Wallet</act:description>	8
7660	Wallet</act:name>	8
4288	Wang	44
62728	Warna</string>	3
38723	Watson	9
843	We	74
45705	We'll	8
27484	We're	14
47342	We've	4
49353	WeakHashMap<String,Drawable.ConstantState>	10
48826	WeakHashMap<String,Drawable.ConstantState>()	5
42568	WeakHashMap<View,AnimatorProxy>	4
43254	WeakHashMap<View,AnimatorProxy>()	4
44478	WeakHashMap<android.view.MenuItem,MenuItem>	4
44320	WeakHashMap<android.view.MenuItem,MenuItem>()	4
43788	WeakReference	4
44138	WeakReference<MenuPresenter>(presenter))	4
35867	WeakReference<TextView>	8
31431	WeakReference<TextView>(balanceTextView)	9
40041	WeakReference<View>	9
40214	WeakReference<View>(view)	9
37018	WebView	4
25729	Wechselbetrag	9
25638	Wechselkurs	9
25706	Wechselkurs</string>	8
55748	Wednesday	3
55655	Wednesday,2	3
55704	Weekly	4
8071	Weeks.weeks(multiple)	5
7583	Weeks.weeksBetween(startDate,endDate).dividedBy(multiplier).getWeeks()	5
7402	Weeks.weeksBetween(startDate,endDate).getWeeks()	9
8121	Weeks.weeksBetween(startTime,endTime).dividedBy(multiplier).getWeeks()	2
7873	Weeks.weeksBetween(startTime,new	9
48953	Weight	4
59334	Weiter</string>	4
62101	Welcome	3
62202	WelcomePage	3
62244	WelcomePage(ModelCallbacks	3
62087	WelcomePage(this,mContext.getString(R.string.wizard_title_welcome_to_gnucash)),	3
62049	WelcomePageFragment	3
62041	WelcomePageFragment()	3
38185	Wharton	9
6898	What	15
6685	What's	27
9065	When	110
20665	Whether	72
46485	Which	4
45368	While	10
15047	Whrung	7
22329	Whrung</string>	9
9092	Why	8
9107	Widget	9
47230	Widget.ProgressBar.Horizontal	4
46528	Widget.ProgressBar.Inverse	4
47241	Widget.ProgressBar.Large	4
46886	Widget.ProgressBar.Large.Inverse	4
46548	Widget.ProgressBar.Small	4
47489	Widget.ProgressBar.Small.Inverse	4
54801	WidgetConfigurationActivity	9
55075	WidgetConfigurationActivity#updateAllWidgets(Context)	1
9322	WidgetConfigurationActivity.removeWidgetConfiguration(context,appWidgetId)	3
30216	WidgetConfigurationActivity.updateAllWidgets(context)	17
54823	WidgetConfigurationActivity.updateAllWidgets(context,accountId)	2
8276	WidgetConfigurationActivity.updateAllWidgets(getActivity()	7
13425	WidgetConfigurationActivity.updateAllWidgets(getActivity())	43
54852	WidgetConfigurationActivity.updateAllWidgets(getActivity(),mAccountID)	2
54841	WidgetConfigurationActivity.updateAllWidgets(getActivity(),mOriginAccountId)	2
1079	WidgetConfigurationActivity.updateAllWidgets(getActivity().getApplicationContext())	39
54877	WidgetConfigurationActivity.updateAllWidgets(getActivity().getApplicationContext(),accountID)	2
54808	WidgetConfigurationActivity.updateAllWidgets(getActivity().getApplicationContext(),id)	2
9423	WidgetConfigurationActivity.updateWidget(context,appWidgetId)	3
30392	WidgetConfigurationActivity.updateWidget(context,appWidgetId,accountId)	6
10062	WidgetConfigurationActivity.updateWidget(context,appWidgetId,accountUID)	8
10061	WidgetConfigurationActivity.updateWidget(context,appWidgetId,accountUID,	8
9543	WidgetConfigurationActivity.updateWidget(context,appWidgetId,accountUID,shouldDisplayBalance)	3
5143	Widgets	44
37364	Width	5
22467	Wiederherstellung	8
25927	Wiele	5
36678	Will	7
38449	Window	21
39192	Window#FEATURE_ACTION_BAR_OVERLAY	4
37351	Window's	5
48354	Window(Context	4
38707	Window.	8
44976	Window.Callback	4
38921	Window.FEATURE_ACTION_BAR	4
39635	Window.FEATURE_ACTION_BAR:	4
39686	Window.FEATURE_ACTION_BAR_OVERLAY))	4
39679	Window.FEATURE_ACTION_BAR_OVERLAY:	4
40298	Window.FEATURE_ACTION_MODE_OVERLAY:	4
39589	Window.FEATURE_INDETERMINATE_PROGRESS)	4
40241	Window.FEATURE_INDETERMINATE_PROGRESS))	4
39597	Window.FEATURE_INDETERMINATE_PROGRESS:	4
39490	Window.FEATURE_NO_TITLE:	4
38919	Window.FEATURE_OPTIONS_PANEL	4
38239	Window.FEATURE_OPTIONS_PANEL)	8
39663	Window.FEATURE_PROGRESS	4
39725	Window.FEATURE_PROGRESS))	4
39578	Window.FEATURE_PROGRESS:	4
39373	Window.PROGRESS_END)	4
39130	Window.PROGRESS_INDETERMINATE_OFF)	6
39160	Window.PROGRESS_INDETERMINATE_ON	4
40335	Window.PROGRESS_INDETERMINATE_ON)	4
39529	Window.PROGRESS_SECONDARY_END)	4
39586	Window.PROGRESS_SECONDARY_START)	5
39187	Window.PROGRESS_START)	6
38948	Window.PROGRESS_VISIBILITY_OFF)	6
39328	Window.PROGRESS_VISIBILITY_ON	4
39793	Window.PROGRESS_VISIBILITY_ON)	4
33384	WindowManager.LayoutParams.MATCH_PARENT)	10
58419	Wirtschaftsring-Genossenschaft	6
14301	With	49
62211	Wizard	3
59335	Woche</item>	4
58083	Won"	6
59019	Won")	2
4790	Won</item>	110
56491	Works	2
54752	World!</string>	4
21740	Worth"/>	10
2914	Worth</string>	81
37964	Wrap	4
45975	Wraps	5
7358	Writer	24
7315	Writes	20
26282	Written	18
46195	X	4
3179	X-axis	14
62344	XAF	3
57779	XB*	6
62689	XLabels	3
2167	XML	350
20750	XML")	24
48323	XML",e)	4
51456	XML("GnuCash	2
51440	XML)	6
4752	XML)\n	38
25778	XML,and	8
53180	XML,except	2
17761	XML-	30
21556	XML-fil</string>	20
48705	XML.	4
51454	XML:	15
53475	XML</p>	2
4393	XML</string>	111
62484	XML</string>+	1
8528	XMLReader	34
25949	XML\n	7
48721	XML_GROUP	4
48563	XML_ITEM	4
48527	XML_MENU	4
25907	XXX:	32
32389	X_AXIS_MONTH_PATTERN	13
21436	X_AXIS_PATTERN	26
32163	X_AXIS_QUARTER_PATTERN	13
32115	X_AXIS_YEAR_PATTERN	10
27984	Xiao	10
48334	Xml.asAttributeSet(parser)	4
49485	Xml.newPullParser()	4
49544	Xml.newSerializer()	4
48578	XmlPullParser	8
48853	XmlPullParser.END_DOCUMENT	4
39430	XmlPullParser.END_DOCUMENT)	16
48611	XmlPullParser.END_DOCUMENT:	4
48934	XmlPullParser.END_TAG	4
48283	XmlPullParser.END_TAG:	4
49135	XmlPullParser.START_DOCUMENT	4
40288	XmlPullParser.START_TAG)	16
48407	XmlPullParser.START_TAG:	4
49502	XmlPullParser.TEXT)	4
49386	XmlPullParserException("Share	4
48805	XmlPullParserException,IOException	4
7709	XmlPullParserFactory.newInstance().newSerializer()	14
40149	XmlResourceParser	12
7764	XmlSerializer	18
46330	Y	4
7521	YEAR	5
2030	YEAR:	63
32100	YEARLY:	4
18968	YEAR_MILLIS	11
21662	YY"	31
32235	YY")))	7
52360	YYYY.	3
8046	Years.years(multiple)	5
34371	Years.yearsBetween(earliest.dayOfYear().withMinimumValue().millisOfDay().withMinimumValue(),	7
57588	Years.yearsBetween(earliest.withDayOfMonth(1).withMillisOfDay(0),	6
32757	Years.yearsBetween(start.withDayOfYear(1).withMillisOfDay(0),end.withDayOfYear(1).withMillisOfDay(0)).getYears()	20
8423	Years.yearsBetween(startDate,endDate).dividedBy(multiplier).getYears()	5
8663	Years.yearsBetween(startDate,endDate).getYears()	10
58939	Yen")	2
15728	Yibutiano</item>	14
4582	Yongxin	44
1502	You	388
57400	Yrit	3
59073	Yuan")	2
32254	Z"	6
33684	Z")	6
4359	Z",Locale.US)	7
58464	ZMK	6
57859	ZMW	6
4481	Zahlungsvorg&#228	25
22242	Zakrtnte	7
29179	Zambia</item>	10
23029	Zaznacz	6
4151	Zealand	113
28251	Zeichen:	5
14899	Zeit</string>	12
34996	Zeitplan</string>	3
62412	Zelndia</item>	6
53590	Zero-based	2
6260	Zielkontos	22
28984	Zimbabue</item>	14
62425	Zimbabwe</item>	6
55659	ZipEntry(file.getName()))	2
55829	ZipOutputStream	2
55666	ZipOutputStream(outputStream)	2
62711	Zkuste	3
59065	Zloty")	2
62396	Zmbia</item>	6
16825	Zorg	5
17247	Zostan	9
62504	Zugangscode,bitte	5
25558	Zugangscode-Sperrbildschirms\n	5
62514	Zugangscode</string>	3
52995	['*.jar'])	27
28289	['installBetaDebug','installProductionDebug']){	2
28472	['installDevelopmentDebug','installBetaDebug','installProductionDebug'])	3
41542	[0-1]	4
1562	[0-9a-fA-F]	11
4314	[CHAR	140
21041	[]	34
61368	[x	3
25886	\	6
8867	\""	19
25982	\"|	6
10182	\&quot	42
15128	\'	39
21744	\'/Apps/GnuCash	16
12202	\'</item>	18
17990	\'</string>	17
25874	\'\n	6
23218	\']]></string>	7
5950	\Voc	6
11025	\\	42
2988	\n	192
15368	\n&#161	6
16033	\n&#191	6
10653	\n12\	33
11492	\n12\n\n	5
11320	\n</string>	48
26919	\nA	13
29625	\nAnda	5
62750	\nApa	3
51536	\nBackups	4
20938	\nCHARSET:UTF-8	5
20644	\nCOMPRESSION:NONE	5
23420	\nCette	6
29212	\nCosa	4
20996	\nDATA:OFXSGML	5
7559	\nDenne	13
16706	\nDeze	13
15243	\nDu	32
5937	\nEs	25
15797	\nEsta	24
15028	\nHva	17
16637	\nJe	15
21274	\nMlkontoen	10
20222	\nNEWFILEUID:NONE"	5
6227	\nO	19
20260	\nOFXHEADER:100	5
20424	\nOLDFILEUID:NONE	5
11535	\nPode	25
3050	\nPuede	28
15777	\nQue	5
16422	\nQuesta	15
20528	\nSECURITY:NONE	5
7199	\nThis	41
20881	\nVERSION:211	5
56041	\nVad	2
10739	\nVous	5
59342	\nWas	4
5089	\nWhat	83
5532	\nYou	105
4720	\n\n	59
26083	\n\n?</string>	8
3650	\n\nAmbas	28
6094	\n\nAs	6
14985	\n\nBegge	32
16526	\n\nBeide	16
4782	\n\nBoth	110
55937	\n\nDenna	2
21189	\n\nDenne	10
4399	\n\nDiese	13
16251	\n\nEntrambe	31
29676	\n\nKedua	5
11061	\n\nLes	5
11537	\n\nOperasi	9
22406	\n\nTato	7
6988	\n\nThis	5
12450	\n\n\n</string>	7
21203	\nla	6
36683	\u20AC	9
52747	\u20AC",money.formattedString(Locale.GERMAN))	2
52726	\u20AC",money.formattedString(Locale.US))	2
30125	]	10
12985	]]></string>	27
913	^	21
24492	_${buildTime()	12
64379	_ActionBarSherlockTrojanHorse	1
56553	_ID,autogenerated	5
43513	_not_	4
4657	_r${gitSha()	14
24007	`modified_at`	6
1224	a	451
3712	a&#241	32
12994	a&#8230	36
41025	a)	4
55199	a,	4
17209	a.	3
45209	a.end()	4
43532	a.getBoolean(	8
47234	a.getBoolean(/*com.android.internal.R.styleable.*/LinearLayout_measureWithLargestChild,false)	5
48737	a.getBoolean(R.styleable.SherlockMenuGroup_android_enabled,defaultItemEnabled)	4
48678	a.getBoolean(R.styleable.SherlockMenuGroup_android_visible,defaultItemVisible)	4
48780	a.getBoolean(R.styleable.SherlockMenuItem_android_checkable,false)	4
48457	a.getBoolean(R.styleable.SherlockMenuItem_android_checked,defaultItemChecked)	4
48353	a.getBoolean(R.styleable.SherlockMenuItem_android_enabled,groupEnabled)	4
48361	a.getBoolean(R.styleable.SherlockMenuItem_android_visible,groupVisible)	4
64375	a.getBoolean(R.styleable.SherlockTheme_absForceOverflow,false)	1
39872	a.getBoolean(R.styleable.SherlockTheme_android_windowIsFloating,false)	4
49340	a.getBoolean(R.styleable.SherlockView_android_focusable,focusable)	5
46069	a.getBoolean(R_styleable_Button_textAllCaps,true)	4
46259	a.getBoolean(R_styleable_TextView_textAllCaps,true)	4
47701	a.getDimensionPixelOffset(	4
45424	a.getDimensionPixelOffset(R.styleable.SherlockActionBar_itemPadding,0)	4
45677	a.getDimensionPixelOffset(R.styleable.SherlockActionBar_progressBarPadding,0)	4
43083	a.getDimensionPixelSize(	4
46691	a.getDimensionPixelSize(/*R.styleable.*/ProgressBar_maxHeight,mMaxHeight)	4
47122	a.getDimensionPixelSize(/*R.styleable.*/ProgressBar_maxWidth,mMaxWidth)	4
47481	a.getDimensionPixelSize(/*R.styleable.*/ProgressBar_minHeight,mMinHeight)	4
47484	a.getDimensionPixelSize(/*R.styleable.*/ProgressBar_minWidth,mMinWidth)	4
46883	a.getDimensionPixelSize(/*com.android.internal.R.styleable.*/LinearLayout_dividerPadding,0)	5
48823	a.getDimensionPixelSize(R.styleable.SherlockSearchView_android_maxWidth,-1)	5
45733	a.getDrawable(	6
47120	a.getDrawable(/*R.styleable.*/ProgressBar_indeterminateDrawable)	4
46899	a.getDrawable(/*R.styleable.*/ProgressBar_progressDrawable)	4
45509	a.getDrawable(R.styleable.SherlockActionBar_background)	4
44991	a.getDrawable(R.styleable.SherlockActionBar_icon)	4
45574	a.getDrawable(R.styleable.SherlockActionBar_logo)	4
43704	a.getDrawable(R.styleable.SherlockMenuView_itemBackground)	4
47184	a.getInt(/*R.styleable.*/ProgressBar_indeterminateBehavior,mBehavior)	4
46799	a.getInt(/*R.styleable.*/ProgressBar_indeterminateDuration,mDuration)	4
47483	a.getInt(/*R.styleable.*/ProgressBar_secondaryProgress,mSecondaryProgress))	4
47219	a.getInt(/*com.android.internal.R.styleable.*/LinearLayout_showDividers,SHOW_DIVIDER_NONE)	5
38833	a.getInt(0,-1)	5
45114	a.getInt(R.styleable.SherlockActionBar_navigationMode,	4
48252	a.getInt(R.styleable.SherlockMenuGroup_android_checkableBehavior,defaultItemCheckable)	4
48402	a.getInt(R.styleable.SherlockMenuGroup_android_menuCategory,defaultItemCategory)	4
48333	a.getInt(R.styleable.SherlockMenuGroup_android_orderInCategory,defaultItemOrder)	4
48366	a.getInt(R.styleable.SherlockMenuItem_android_menuCategory,groupCategory)	4
48594	a.getInt(R.styleable.SherlockMenuItem_android_orderInCategory,groupOrder)	4
48850	a.getInt(R.styleable.SherlockSearchView_android_imeOptions,-1)	5
49635	a.getInt(R.styleable.SherlockSearchView_android_inputType,-1)	5
47646	a.getInt(R.styleable.SherlockSpinner_android_gravity,Gravity.CENTER)	4
46823	a.getInteger(/*R.styleable.*/ProgressBar_animationResolution,	4
45117	a.getLayoutDimension(	8
45440	a.getLayoutDimension(R.styleable.SherlockActionBar_height,0)	4
44984	a.getResourceId(	9
43446	a.getResourceId(R.styleable.	4
56706	a.getResourceId(R.styleable.CalculatorEditText_keyboardKeysLayout,R.xml.calculator_keyboard)	4
45357	a.getResourceId(R.styleable.SherlockActionBar_customNavigationLayout,0)	4
45380	a.getResourceId(R.styleable.SherlockActionBar_progressBarStyle,0)	4
45729	a.getResourceId(R.styleable.SherlockActionBar_subtitleTextStyle,0)	4
45400	a.getResourceId(R.styleable.SherlockActionBar_titleTextStyle,0)	4
48378	a.getResourceId(R.styleable.SherlockMenuGroup_android_id,defaultGroupId)	4
48495	a.getResourceId(R.styleable.SherlockMenuItem_android_actionLayout,0)	5
48308	a.getResourceId(R.styleable.SherlockMenuItem_android_icon,0)	4
48296	a.getResourceId(R.styleable.SherlockMenuItem_android_id,defaultItemId)	4
48292	a.getString(R.styleable.SherlockMenuItem_android_actionProviderClass)	5
48388	a.getString(R.styleable.SherlockMenuItem_android_actionViewClass)	5
48263	a.getString(R.styleable.SherlockMenuItem_android_onClick)	5
45125	a.getText(R.styleable.SherlockActionBar_subtitle)	4
45326	a.getText(R.styleable.SherlockActionBar_title)	4
48240	a.getText(R.styleable.SherlockMenuItem_android_title)	4
48448	a.getText(R.styleable.SherlockMenuItem_android_titleCondensed)	4
49473	a.getText(R.styleable.SherlockSearchView_queryHint)	5
46236	a.getTextArray(R.styleable.AbsSpinner_entries)	4
48491	a.getValue(R.styleable.SherlockMenuItem_android_actionProviderClass,value)	5
48269	a.getValue(R.styleable.SherlockMenuItem_android_actionViewClass,value)	5
48751	a.getValue(R.styleable.SherlockMenuItem_android_showAsAction,value)	4
46013	a.getValue(R.styleable.SherlockTheme_windowMinWidthMajor,mMinWidthMajor)	4
46203	a.getValue(R.styleable.SherlockTheme_windowMinWidthMinor,mMinWidthMinor)	4
38801	a.recycle()	47
45456	a.setDuration(100)	4
45658	a.setStartDelay(i	4
45657	a.setStartDelay(j	4
41134	a1	5
41138	a1.	4
40727	a2,a2	4
41135	a3	4
40352	a3,and	4
3077	a:	21
3860	a:</string>	25
2328	a:\n</string>	32
15895	a</item>	11
3817	a</string>	28
38783	aActionBar	4
39248	aActionBar.dispatchMenuVisibilityChanged(false)	4
39283	aActionBar.dispatchMenuVisibilityChanged(true)	4
38995	aActionBar.getThemedContext()	4
39319	aActionBar.onConfigurationChanged(newConfig)	4
39234	aActionBar.setShowHideAnimationEnabled(false)	4
39267	aActionBar.setShowHideAnimationEnabled(true)	4
39040	aActionBar.startActionMode(wrappedCallback)	4
18020	aBar	19
18548	aBar.setDisplayHomeAsUpEnabled(true)	24
32696	aBar.setDisplayShowTitleEnabled(false)	14
18097	aBar.setDisplayShowTitleEnabled(true)	6
18377	aBar.setTitle("Recurring	6
63692	aBar.setTitle(name)	3
63836	aBar.setTitle(title)	2
23251	aVoid)	8
56431	aadido	2
12850	aadir	19
26370	aan	6
16563	aangekoppeld!</string>	5
8284	aanmaken	44
12823	aanmaken</string>	36
12611	abans	10
22861	abbiano	8
36179	abbreviated	7
5220	aberta</string>	32
10463	aberto	18
21161	abertura	22
21083	abertura</string>	22
15618	abierto</string>	12
55660	ability	6
28852	able	28
45302	ablp	4
45111	ablp.bottomMargin	4
45034	ablp.gravity	4
45768	ablp.leftMargin	4
45450	ablp.rightMargin	4
45013	ablp.topMargin	4
50699	abort	11
62593	abortOnError	7
47977	aborted.	4
3945	about	222
42049	about:	4
25115	aboutNavAdapter	11
25232	aboutNavOptions	13
25408	aboutNavOptions.add("Backup	10
25242	aboutNavOptions.add("Settings")	6
58641	aboutNavOptions.add(getString(R.string.nav_menu_scheduled_backups))	5
25226	aboutNavOptions.add(getString(R.string.nav_menu_settings))	7
2237	above	93
63514	above,this	4
30826	above.	8
22192	abrir	12
11067	abrir</string>	11
53377	abs()	2
11736	absAmount	14
61957	absAmount.negate()	3
61766	absence,the	3
2283	absolute	39
35633	absolute()	20
4551	abstract	139
41374	abstract.	4
38105	abstraction	4
17567	aby	23
3012	acc	46
5027	acc.addTransaction(transaction)	20
59606	acc.getBalance()	3
54576	acc.getName()	6
3116	acc.getName())	11
3126	acc.getParentUID()	12
59594	acc.getTransactionCount()	3
56865	acc.getUID()	5
4226	acc.setUID("to-be-deleted")	10
28560	acc.setUID(accountUidToDelete)	11
30884	acc1	11
36084	acc1.addTransaction(term)	8
36427	acc1.addTransaction(trx)	8
30809	acc1.setUID("simile")	11
4434	accAdapter	22
4521	accAdapter.close()	23
52003	accAdapter.deleteAllAccounts()	5
51101	accAdapter.deleteAllRecords()	6
34484	accAdapter.getAllAccounts()	11
34350	accAdapter.getId(DUMMY_ACCOUNT_UID)	5
64245	accAdapter.getName(mAccountID)	2
5796	accDbAdapter	18
5038	accDbAdapter.addAccount(acc)	17
5449	accDbAdapter.close()	15
36703	accDbAdapter.fetchAccountWithUID("to-be-deleted")	3
4386	accDbAdapter.getAccountID("to-be-deleted")	8
34496	accDbAdapter.getAccountID(accountUidToDelete)	7
54805	accId	3
63270	acccount.	1
23665	accdez-y	5
41864	accelerates	4
40080	acceleration	12
46725	accept	9
28488	accept(File	8
24146	acceptable	15
8986	accepts	10
18056	acceso	14
5867	access	126
8732	accessToken	2
27582	accessibility	21
45632	accessibility.	4
27215	accessibilityIndex	6
6746	accessible	31
41198	accessing	22
29454	accesso	14
22662	accesso</string>	18
26176	accesso\n	5
59590	accessor	1
46364	accomodate	11
20161	accompanying	13
33779	accomplished	9
33962	accomplishes	18
47983	accomplishing	4
32752	according	37
34200	accordingly	17
36335	accordingly)	2
12515	accordingly</li>	5
30489	accoun	17
54794	accound	7
9986	accoundId	10
1741	account	386
19323	account"	54
1846	account")	69
23370	account"))	21
52314	account"),DatabaseAdapter.UpdateMethod.insert)	6
26466	account",Commodity.EUR)	7
7327	account's	88
14603	account)	20
23604	account),if	3
771	account){	105
30343	account,	6
19746	account,<code>false</code>	44
52099	account,UpdateMethod	2
57723	account,be	6
19085	account,e.t.	5
27625	account,false	4
25831	account,favorite	11
2366	account,full	10
35030	account,insert	2
36572	account,it	10
24205	account,null	20
36682	account,otherwise	8
3630	account,parent	5
51179	account,the	6
10766	account,then	7
6444	account,use	17
19195	account-specific	19
1043	account.	157
33037	account.",	4
2302	account...")	16
7211	account.</p>	5
13965	account.addTransaction(mTransaction)	24
12068	account.addTransaction(transaction)	43
14536	account.getAccountType()	31
24399	account.getAccountType().name())	15
30383	account.getBalance().formattedString(Locale.getDefault()))	6
8390	account.getBalance().isNegative()	19
12508	account.getBalance().toPlainString()	5
337	account.getColor()	8
649	account.getColorHexCode()	23
35377	account.getColorHexCode())	8
14300	account.getCommodity()	17
25861	account.getCommodity().equals(mCommodity))	4
26016	account.getCommodity().getCurrencyCode()	3
36597	account.getCommodityUID()	7
59153	account.getCreatedTimestamp().toString())	4
283	account.getCurrency()	43
26285	account.getCurrency().equals(mCurrency))	6
25756	account.getCurrency().getCurrencyCode()	18
35340	account.getCurrency().getCurrencyCode())	11
21301	account.getDefaultTransferAccountUID()	14
35373	account.getDefaultTransferAccountUID())	6
35390	account.getFullName())	17
8162	account.getName()	21
24292	account.getName())	18
62013	account.getName().contains(mContext.getString(R.string.imbalance_account_name)))	3
741	account.getParentUID()	33
35283	account.getParentUID())	11
26833	account.getTransactions())	32
1045	account.getUID()	27
35399	account.getUID())	7
35262	account.isFavorite()	17
59162	account.isHidden()	7
35355	account.isPlaceholderAccount()	13
26209	account.setAccountType(AccountType.ASSET)	17
1418	account.setAccountType(AccountType.BANK)	27
26298	account.setAccountType(AccountType.CASH)	8
26232	account.setAccountType(AccountType.EQUITY)	8
26499	account.setAccountType(AccountType.EXPENSE)	8
26485	account.setAccountType(AccountType.INCOME)	8
26556	account.setAccountType(AccountType.LIABILITY)	8
26421	account.setAccountType(AccountType.valueOf(c.getString(DatabaseAdapter.COLUMN_TYPE)))	7
396	account.setAccountType(AccountType.valueOf(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_TYPE))))	24
33752	account.setAccountType(accountType)	7
1413	account.setColor("#964B00")	3
1761	account.setColor("443859")	3
627	account.setColor(Color.parseColor("#aa112233"))	3
1776	account.setColor(color)	3
533	account.setColorCode("#964B00")	8
480	account.setColorCode("443859")	9
27205	account.setColorCode(c.getString(DatabaseAdapter.COLUMN_COLOR_CODE))	10
177	account.setColorCode(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_COLOR_CODE)))	12
675	account.setColorCode(color)	4
27601	account.setColorCode(getString(R.color.account_blue))	6
27329	account.setColorCode(getString(R.color.account_gold))	6
27211	account.setColorCode(getString(R.color.account_green))	6
27596	account.setColorCode(getString(R.color.account_purple))	6
27315	account.setColorCode(getString(R.color.account_red))	6
1827	account.setCommodity(CommoditiesDbAdapter.getInstance().getCommodity(currency.getCurrencyCode()))	10
26320	account.setCommodity(Commodity.JPY)	7
10434	account.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY.getCurrencyCode()))	6
13258	account.setCommodity(Commodity.getInstance(CURRENCY_CODE))	14
33033	account.setCommodity(Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY.getCurrencyCode()))	11
32487	account.setCommodity(Commodity.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE))	11
36542	account.setCommodity(Commodity.getInstance(currencyCode))	7
64117	account.setCommodity(commodity)	3
26095	account.setCommodity(mCommoditiesDbAdapter.getCommodity(currency.getCurrencyCode()))	6
25908	account.setCommodity(mCommoditiesDbAdapter.getCommodity(currencyCode))	3
63775	account.setCurrency(Currency.getInstance("USD"))	2
28770	account.setCurrency(Currency.getInstance(CURRENCY_CODE))	14
36376	account.setCurrency(Currency.getInstance(DUMMY_ACCOUNT_CURRENCY.getCurrencyCode()))	6
28323	account.setCurrency(Currency.getInstance(DUMMY_ACCOUNT_CURRENCY_CODE))	20
32863	account.setCurrency(Currency.getInstance(Locale.getDefault()))	24
55048	account.setCurrency(Currency.getInstance(c.getString(DatabaseAdapter.COLUMN_ACCOUNT_CURRENCY_CODE)))	2
26243	account.setCurrency(Currency.getInstance(c.getString(DatabaseAdapter.COLUMN_CURRENCY_CODE)))	11
35420	account.setCurrency(Currency.getInstance(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_CURRENCY))))	4
36190	account.setCurrency(DUMMY_ACCOUNT_CURRENCY)	7
36602	account.setCurrency(currency)	9
26527	account.setCurrencyCode("USD")	7
27456	account.setDefaultTransferAccountUID(c.getString(DatabaseAdapter.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID))	11
1548	account.setDefaultTransferAccountUID(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID)))	18
456	account.setDescription(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_DESCRIPTION)))	6
1031	account.setDescription(description	6
27626	account.setFavorite(c.getInt(DatabaseAdapter.COLUMN_FAVORITE)	7
1707	account.setFavorite(c.getInt(c.getColumnIndexOrThrow(AccountEntry.COLUMN_FAVORITE))	7
35378	account.setFullName(c.getString(DatabaseAdapter.COLUMN_FULL_NAME))	4
906	account.setFullName(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_FULL_NAME)))	7
3552	account.setFullName(mapFullName.get(account.getUID()))	16
33523	account.setFullName(parentName)	3
325	account.setHidden(!GnuCashApplication.isDoubleEntryEnabled())	18
2171	account.setHidden(c.getInt(c.getColumnIndexOrThrow(AccountEntry.COLUMN_HIDDEN))	5
54254	account.setName("Edited	4
33980	account.setName("Name")	4
28322	account.setParentUID(DUMMY_ACCOUNT_UID)	17
13219	account.setParentUID(SIMPLE_ACCOUNT_UID)	4
51377	account.setParentUID(args.getString(Account.EXTRA_PARENT_UID))	6
35266	account.setParentUID(c.getString(DatabaseAdapter.COLUMN_PARENT_ACCOUNT_UID))	4
2034	account.setParentUID(c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_PARENT_ACCOUNT_UID)))	24
1787	account.setParentUID(getOrCreateGnuCashRootAccountUID())	17
54272	account.setParentUID(mRootAccount.getUID())	3
33579	account.setParentUID(uid)	7
27568	account.setPlaceHolderFlag(c.getInt(DatabaseAdapter.COLUMN_PLACEHOLDER)	12
739	account.setPlaceHolderFlag(c.getInt(c.getColumnIndexOrThrow(AccountEntry.COLUMN_PLACEHOLDER))	17
24419	account.setTransactions(mTransactionsAdapter.getAllTransactionsForAccount(account.getUID()))	9
26291	account.setTransactions(mTransactionsAdapter.getAllTransactionsForAccount(uid))	12
13101	account.setUID(CHILD_ACCOUNT_UID)	2
13096	account.setUID(DUMMY_ACCOUNT_UID)	54
54787	account.setUID(accountUID)	5
24392	account.setUID(uid)	27
20922	account.toGncXml(document,bookNode)	6
31233	account.toGncXml(mDocument,bookNode)	7
12149	account.toOfx(doc,bankTransactionsList,mExportAll)	6
12155	account.toOfx(doc,statementTransactionResponse,mExportAll)	6
63681	account.toOfx(doc,statementTransactionResponse,mExportParams.getExportStartTime())	3
63209	account.toOfx(doc,statementTransactionResponse,mParameters.getExportStartTime())	6
35727	account.toOfx(doc,statementTransactionResponse,mParameters.shouldExportAllTransactions())	8
59181	account.toXml(doc,bankTransactionsList,mExportAll)	3
19329	account1	33
29495	account1."	20
19306	account1.addTransaction(transaction)	11
52626	account1.setDefaultTransferAccountUID(account2.getUID())	2
24277	account1.uid	14
13931	account2	45
56872	account2."	10
18675	account2.addTransaction(transaction)	11
13921	account2.setCommodity(Commodity.getInstance(CURRENCY_CODE))	14
31124	account2.setCurrency(Currency.getInstance(CURRENCY_CODE))	17
62700	account2.setParentUID(account.getUID())	2
13363	account2.setUID(TRANSFER_ACCOUNT_UID)	27
57725	account2.uid	6
52624	account3	2
52610	account3.setParentUID(account1.getUID())	2
52607	account4	2
52654	account4.setDefaultTransferAccountUID(account3.getUID())	2
32431	account:	29
54582	account:accountList)	8
3061	account:mAccountList)	14
2949	account:mAccountList){	20
10763	account</item>	16
35566	account</p>	15
4017	account</string>	195
64134	account</string>-	1
54238	accountAmount	2
53598	accountAmountMap	2
53365	accountAmountMap.entrySet())	2
53692	accountAmountMap.get(accountUID).add(amount)	2
53579	accountAmountMap.put(accountUID,amounts)	2
9715	accountBalance	32
7725	accountBalance.formattedString(Locale.getDefault()))	25
7953	accountBalance.isNegative()	13
62328	accountBalance.setTextSize(16)	3
62299	accountBalance.setTypeface(null,Typeface.BOLD)	3
30333	accountBalanceTextView	8
31109	accountBalanceTextViewReference	11
19016	accountBalanceTextViewReference.get()	16
983	accountColor	21
12882	accountCommodity	3
13419	accountCount	13
20421	accountCountNode	13
21034	accountCountNode.appendChild(document.createTextNode(String.valueOf(accountCount)))	4
31131	accountCountNode.appendChild(mDocument.createTextNode(String.valueOf(accountCount)))	7
35614	accountCountNode.appendChild(mDocument.createTextNode(String.valueOf(accountList.size())))	4
35712	accountCountNode.setAttribute("cd:type","account")	6
20183	accountCountNode.setAttribute(GncXmlHelper.ATTR_KEY_CD_TYPE,"account")	9
28539	accountCreator	3
28448	accountCreator.onReceive(mAcccountsActivity,intent)	3
10151	accountCurrency	48
11288	accountCurrency){	7
10373	accountCurrencyCode	2
10159	accountCursor	5
13345	accountExists(String	5
2352	accountFile	5
3746	accountFileInputStream	19
34624	accountFormFragment	14
13190	accountFormFragment,AccountsActivity.FRAGMENT_NEW_ACCOUNT)	8
34715	accountFormFragment.setArguments(args)	14
28300	accountFound	9
18872	accountFragment	8
64278	accountFragment.showAddAccountDialog()	3
19310	accountFragment.showAddAccountDialog(0)	7
27821	accountFragment.showAddAccountFragment(0)	9
25085	accountHeader	11
25381	accountHeader.setText("Accounts")	5
25231	accountHeader.setText(R.string.title_accounts)	8
25292	accountHeader.setTextColor(titleColorGreen)	10
18187	accountID	49
2277	accountID)	51
23787	accountID){	50
24160	accountID,	10
2344	accountId	133
13221	accountId)	73
3865	accountId){	156
24154	accountId,	30
24504	accountId,@NonNull	4
24580	accountId,String	9
13802	accountId,final	4
18427	accountId,long	14
27787	accountId,null)	5
26891	accountId,null,	9
2874	accountInputStream	41
39	accountList	44
19335	accountList)	32
14196	accountList){	34
26154	accountList,	6
52368	accountList,UpdateMethod	2
2144	accountList.add(accountUID)	7
29949	accountMap	11
30042	accountMap.put(accountType,accountUIDList)	9
33824	accountMoveConditions	2
3294	accountName	63
18977	accountName)	9
21589	accountName.setText("Total:	6
62361	accountName.setText(R.string.label_balance_sheet_total)	5
28993	accountName.setText(accountsDbAdapter.getAccountFullName(split.getAccountUID()))	3
28796	accountName.setText(accountsDbAdapter.getAccountName(split.getAccountUID()))	7
21476	accountName.setTextSize(16)	8
28274	accountNameToDelete	9
25118	accountNavOptions	10
29830	accountNavOptions.add("Accounts")	2
25038	accountNavOptions.add("Favorites")	7
25126	accountNavOptions.add("Open...")	7
25272	accountNavOptions.add("Reports")	5
25021	accountNavOptions.add(getString(R.string.nav_menu_favorites))	5
25023	accountNavOptions.add(getString(R.string.nav_menu_open))	5
25094	accountNavOptions.add(getString(R.string.nav_menu_reports))	5
20959	accountNode	13
20834	accountNode.appendChild(acctSlotsNode)	9
20735	accountNode.appendChild(commodityNode)	9
21165	accountNode.appendChild(commodityScuNode)	9
20491	accountNode.appendChild(descriptionNode)	9
20127	accountNode.appendChild(doc.createTextNode(mAccountUID))	11
20807	accountNode.appendChild(idNode)	11
20894	accountNode.appendChild(nameNode)	11
20170	accountNode.appendChild(parentAccountNode)	11
20626	accountNode.appendChild(typeNode)	11
20406	accountNode.setAttribute("type","guid")	11
35787	accountNode.setAttribute("version",GncXmlHelper.BOOK_VERSION)	4
20844	accountNode.setAttribute(GncXmlHelper.ATTR_KEY_VERSION,GncXmlHelper.BOOK_VERSION)	11
21649	accountOptions	6
32940	accountOptionsView	5
32991	accountOptionsView.findViewById(R.id.description)).setText(R.string.label_delete_account_subaccounts_description)	3
32997	accountOptionsView.findViewById(R.id.radio_delete)	3
33199	accountOptionsView.findViewById(R.id.radio_move)	3
33153	accountOptionsView.findViewById(R.id.target_accounts_spinner)	3
33028	accountOptionsView.findViewById(R.id.title_content)).setText(R.string.section_header_subaccounts)	3
32948	accountOptionsView.setVisibility(mSubAccountCount	3
13237	accountPendingIntent	15
31301	accountQIFBuilder	5
31022	accountQIFBuilder.append(QifHelper.ACCOUNT_HEADER).append(newLine)	5
31314	accountQIFBuilder.append(QifHelper.ACCOUNT_NAME_PREFIX).append(fullyQualifiedAccountName).append(newLine)	5
31241	accountQIFBuilder.append(QifHelper.ENTRY_TERMINATOR).append(newLine)	5
31157	accountQIFBuilder.append(header	5
31146	accountQIFBuilder.append(transaction.toQIF(mUID)	5
31322	accountQIFBuilder.toString()	5
6833	accountQifBuffer	8
35778	accountQifBuffer.append(QifHelper.ACCOUNT_HEADER).append(newLine)	5
35745	accountQifBuffer.append(QifHelper.ACCOUNT_NAME_PREFIX).append(fullyQualifiedAccountName).append(newLine)	5
35680	accountQifBuffer.append(QifHelper.ENTRY_TERMINATOR).append(newLine)	5
35773	accountQifBuffer.append(header	5
7012	accountQifBuffer.append(transaction.toQIF()	5
6814	accountQifBuffer.append(transaction.toQIF(context)	6
7046	accountQifBuffer.toString()	8
27879	accountReass	4
24479	accountReassignI	8
27673	accountReassignId	5
27674	accountReassignId){	7
24418	accountRowID	12
24481	accountRowID)	5
18332	accountRowID){	14
24480	accountRowID,	11
63552	accountRowId	3
19174	accountRowId)	26
19155	accountRowId,String	6
25312	accountSelected(String	8
18969	accountSelected(long	24
53589	accountSet	2
53682	accountSet.add(budgetAmount.getAccountUID())	2
53553	accountSet.size()	2
54490	accountSplits	5
31307	accountStats	8
53932	accountString	2
7838	accountToColorMap	16
30022	accountToColorMap.put(account.getUID(),color)	19
14163	accountTy	6
233	accountType	115
1871	accountType)	79
7077	accountType){	92
3745	accountType,	15
51268	accountType,@NonNull	4
13442	accountType,TransactionType	8
35807	accountType,boolean	6
21233	accountType,long	3
10161	accountType.hasDebitNormalBalance()	13
26852	accountTypeEntries	18
27423	accountTypeIndex	12
8639	accountTypeL	24
29977	accountTypeList	25
3801	accountTypeList)	57
4267	accountTypeList.iterator()	15
6011	accountTypeList.remove(type)	5
32465	accountTypeSpinner	10
32145	accountTypeSpinner.setVisibility(View.GONE)	10
32325	accountTypeSpinner.setVisibility(View.VISIBLE)	10
32034	accountTypeSpinner.setVisibility(visibility)	3
26787	accountTypeString	7
26790	accountTypeStrings	7
26609	accountTypeStrings)	7
26646	accountTypeStrings.remove(Account.AccountType.EQUITY.name())	4
26949	accountTypeStrings.remove(Account.AccountType.EXPENSE.name())	4
26986	accountTypeStrings.remove(Account.AccountType.INCOME.name())	4
35825	accountTypeStrings.remove(AccountType.EQUITY.name())	5
35924	accountTypeStrings.remove(AccountType.EXPENSE.name())	6
35940	accountTypeStrings.remove(AccountType.INCOME.name())	6
64207	accountTypeStrings.remove(AccountType.ROOT.name())	3
1853	accountTypes	30
927	accountTypes)	21
21853	accountTypes){	6
944	accountTypes,	11
21902	accountTypes,TableLayout	3
62349	accountTypes,long	3
21535	accountTypes.add(AccountType.ASSET)	12
60184	accountTypes.add(AccountType.BANK)	9
21333	accountTypes.add(AccountType.CASH)	12
21367	accountTypes.add(AccountType.CREDIT)	10
21176	accountTypes.add(AccountType.EQUITY)	9
21321	accountTypes.add(AccountType.LIABILITY)	10
21705	accountTypes.clear()	12
58780	accountTypes.remove(entry.getKey())	4
1867	accountTypesAdapter	10
711	accountTypesAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	7
1367	accountTypesList	7
174	accountTypesList.add(accountType.trim())	7
51252	accountU	2
1697	accountUID	212
9773	accountUID)	130
1886	accountUID){	160
3558	accountUID,	49
51220	accountUID,@NonNull	6
24242	accountUID,@Nullable	4
11750	accountUID,List<Split>	12
2071	accountUID,String	27
53517	accountUID,TransactionType	5
9279	accountUID,boolean	5
53363	accountUID,int	2
19345	accountUID,long	6
25733	accountUID.getName()	2
19026	accountUIDList	30
1012	accountUIDList,	47
24321	accountUIDList,@NonNull	4
19045	accountUIDList,String	13
3689	accountUIDList,long	17
26378	accountUIDList.add(account.getUID())	17
18737	accountUIDList.size()	8
62679	accountUIDMap	3
62662	accountUIDMap.entrySet())	3
62671	accountUIDMap.put(accountType,accountUIDList)	3
52973	accountUIDs	5
62323	accountUIDs.add(accountUID)	3
53051	accountUIDs.add(budgetAmount.getAccountUID())	5
62354	accountUIDs.clear()	3
21612	accountUidList	3
21812	accountUidList.add(accountUID)	3
21334	accountUidList.size())	9
28573	accountUidToDelete	9
9829	accountViewIntent	23
13440	accountViewIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK	8
13981	accountViewIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_CLEAR_TASK)	14
63436	accountViewIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,accountId)	4
50696	accountViewIntent.putExtra(UxArgument.BOOK_UID,bookUID)	3
63388	accountViewIntent.putExtra(UxArgument.SELECTED_ACCOUNT_ID,accountId)	4
13217	accountViewIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,accountUID)	10
13223	accountViewIntent.setAction(Intent.ACTION_VIEW)	22
56924	accountViewIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)	2
56947	accountViewIntent.setFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)	2
18024	account\n	17
61912	account_balance_toolbar.xml	6
36450	account_uid	7
33419	account_uid&gt	5
24354	account_uid=?"	6
2606	accounting	61
57855	accounting?	6
30259	accounting\n	27
26261	accountnaam	16
1028	accounts	376
53972	accounts"	7
18460	accounts")	36
3675	accounts)	21
62639	accounts).	2
10792	accounts,	10
3338	accounts,delete	36
2968	accounts,displaying,exporting	32
11026	accounts,now	7
4628	accounts,or	110
52435	accounts,reset	2
21381	accounts,transactions	17
3976	accounts,we	9
863	accounts.	77
19046	accounts.add(account1)	7
18906	accounts.add(account2)	7
24422	accounts.add(buildAccountInstance(c))	6
24195	accounts.add(buildSimpleAccountInstance(c))	7
25771	accounts.get(0)	27
63275	accounts.get(accounts.size()-1)	3
13705	accounts/transactions	8
8421	accounts/transactions\n	21
34541	accounts:	6
11679	accounts</item>	22
61805	accounts</p>	3
2634	accounts</string>	205
63853	accounts</string>-	1
26840	accounts?	4
25318	accountsActivityIntent	5
25047	accountsActivityIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)	6
25298	accountsActivityIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)	6
25329	accountsActivityIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_SINGLE_TOP)	2
36295	accountsAdapter	9
51128	accountsAdapter.addAccount(account)	3
51118	accountsAdapter.addAccount(first)	5
36244	accountsAdapter.addAccount(second)	8
51086	accountsAdapter.close()	3
57264	accountsCount	6
2677	accountsCursor	39
63689	accountsCursor,	2
3982	accountsCursor,new	8
20068	accountsCursor.close()	19
19605	accountsCursor.getLong(DatabaseAdapter.COLUMN_ROW_ID)	17
20816	accountsCursor.getLong(accountsCursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry._ID))	14
55101	accountsCursor.getString(accountsCursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_UID))	5
19756	accountsCursor.moveToFirst()	12
3835	accountsDbAdapter	159
32840	accountsDbAdapter.addAccount(account)	15
31024	accountsDbAdapter.addRecord(account)	2
31189	accountsDbAdapter.addRecord(foreignAccount)	2
57224	accountsDbAdapter.addRecord(mBaseAccount)	6
57253	accountsDbAdapter.addRecord(mTransferAccount)	6
2544	accountsDbAdapter.close()	79
3242	accountsDbAdapter.deleteAllRecords()	25
33737	accountsDbAdapter.fetchAccountsOrderedByFullName(accountMoveConditions,	5
24728	accountsDbAdapter.fetchAccountsOrderedByFullName(conditions,	10
33775	accountsDbAdapter.fetchAccountsOrderedByFullName(transactionDeleteConditions,	5
63693	accountsDbAdapter.fetchAllAccounts()	3
35564	accountsDbAdapter.fetchAllRecords()	4
51134	accountsDbAdapter.getAccount(DUMMY_ACCOUNT_UID).getTransactionCount()	8
51142	accountsDbAdapter.getAccount(account.getUID()).getTransactionCount()	9
30191	accountsDbAdapter.getAccount(accountId)	11
31278	accountsDbAdapter.getAccount(accountUID)	15
19651	accountsDbAdapter.getAccountBalance(accountId)	9
54726	accountsDbAdapter.getAccountBalance(accountUID)	6
9217	accountsDbAdapter.getAccountBalance(accountUID,-1,System.currentTimeMillis())	9
64203	accountsDbAdapter.getAccountBalance(accountsDbAdapter.getAccountUID(params[0]))	5
53746	accountsDbAdapter.getAccountBalance(budgetAmount.getAccountUID(),	5
30616	accountsDbAdapter.getAccountBalance(mAccountID)	7
61969	accountsDbAdapter.getAccountBalance(mAccountUID,-1,transaction.getTimeMillis())	3
18800	accountsDbAdapter.getAccountBalance(params[0])	20
58944	accountsDbAdapter.getAccountBalance(params[0],-1,System.currentTimeMillis())	6
60505	accountsDbAdapter.getAccountColorCode(accountsDbAdapter.getID(parentAccountUID))	3
10652	accountsDbAdapter.getAccountCurrencyCode(accountUID)	7
53867	accountsDbAdapter.getAccountFullName(budget.getBudgetAmounts().get(0).getAccountUID())	2
18957	accountsDbAdapter.getAccountID(cursor.getString(DatabaseAdapter.COLUMN_ACCOUNT_UID))	5
51139	accountsDbAdapter.getAccountID(mAccountUID)	5
53970	accountsDbAdapter.getAccountName(budgetAmount.getAccountUID())	2
18935	accountsDbAdapter.getAccountName(currentAccountUid))	6
11871	accountsDbAdapter.getAccountType(accountUID)	19
33817	accountsDbAdapter.getAccountType(mOriginAccountUID)	2
33685	accountsDbAdapter.getAccountType(mOriginAccountUID).name()	3
35913	accountsDbAdapter.getAccountType(newAccountId)	9
31425	accountsDbAdapter.getAccountType(newAccountUID)	6
35706	accountsDbAdapter.getAllAccounts()	5
30880	accountsDbAdapter.getAllOpeningBalanceTransactions()	12
25951	accountsDbAdapter.getCommoditiesInUse()	3
35851	accountsDbAdapter.getContext()	8
59179	accountsDbAdapter.getCurrencies()	4
26166	accountsDbAdapter.getCurrenciesInUse()	10
19721	accountsDbAdapter.getCurrency(newAccountId)	3
35624	accountsDbAdapter.getCurrencyCode(accountUID)	9
33535	accountsDbAdapter.getCurrencyCode(mOriginAccountUID)	2
24731	accountsDbAdapter.getCurrencyCode(mOriginAccountUID),	10
19370	accountsDbAdapter.getCurrencyCode(newAccountId)	18
31472	accountsDbAdapter.getCurrencyCode(newAccountUID)	5
33723	accountsDbAdapter.getDescendantAccountUIDs(mOriginAccountUID,null,null)	3
35779	accountsDbAdapter.getExportableAccounts()	5
35549	accountsDbAdapter.getFullyQualifiedAccountName(id))	4
6960	accountsDbAdapter.getFullyQualifiedAccountName(mDoubleEntryAccountUID)	10
6545	accountsDbAdapter.getFullyQualifiedAccountName(mUID)	11
31053	accountsDbAdapter.getFullyQualifiedAccountName(split.getAccountUID())	5
24689	accountsDbAdapter.getGnuCashRootAccountUID()	4
51146	accountsDbAdapter.getID(DUMMY_ACCOUNT_UID)	6
31143	accountsDbAdapter.getID(mAccountUID)	3
51132	accountsDbAdapter.getID(uid)	6
34375	accountsDbAdapter.getId(DUMMY_ACCOUNT_UID)	5
25839	accountsDbAdapter.getImbalanceAccountUID(commodity)	3
20299	accountsDbAdapter.getImbalanceAccountUID(currency)	13
10248	accountsDbAdapter.getImbalanceAccountUID(split.getValue().getCommodity())))	2
25278	accountsDbAdapter.getOrCreateGnuCashRootAccountUID()	24
20051	accountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance(currencyCode))	6
30379	accountsDbAdapter.getOrCreateImbalanceAccountUID(accountCurrency)	6
28571	accountsDbAdapter.getOrCreateImbalanceAccountUID(currency)	10
25332	accountsDbAdapter.getOrCreateImbalanceAccountUID(imbalance.getCurrency()))	17
60572	accountsDbAdapter.getParentAccountUID(parentAccountUID)	3
50693	accountsDbAdapter.getRecord(accountUID)	8
57274	accountsDbAdapter.getRecordsCount()	6
51105	accountsDbAdapter.isFavoriteAccount(accountId)	6
27752	accountsDbAdapter.isFavoriteAccount(mAccountId)	7
31367	accountsDbAdapter.isFavoriteAccount(mAccountUID)	2
51115	accountsDbAdapter.isFavoriteAccount(mAccountsDbAdapter.getAccountID(mAccountUID))	4
35676	accountsDbAdapter.markAsExported(account.getUID())	10
33688	accountsDbAdapter.recursiveDeleteAccount(accountsDbAdapter.getID(mOriginAccountUID))	3
51137	accountsDbAdapter.updateAccount(accountId,DatabaseSchema.AccountEntry.COLUMN_FAVORITE,isFavorite	6
35503	accountsDbAdapter.updateAccount(id,AccountEntry.COLUMN_FULL_NAME,	4
27700	accountsDbAdapter.updateAccount(mAccountId,DatabaseHelper.KEY_FAVORITE,isFavorite	5
35987	accountsDbAdapter.updateAccount(mAccountId,DatabaseSchema.AccountEntry.COLUMN_FAVORITE,isFavorite	4
18943	accountsDbAdapter.updateAllAccounts(DatabaseSchema.AccountEntry.COLUMN_CURRENCY,currencyCode)	5
21104	accountsDbAdapter.updateRecord(DatabaseSchema.AccountEntry.TABLE_NAME,	3
20913	accountsDbAdapter.updateRecord(uid,DatabaseSchema.AccountEntry.COLUMN_HIDDEN,isHidden)	9
7536	accountsImport()	3
26674	accountsInputStream){	11
2072	accountsList	50
19164	accountsList.add(0,accountUID)	15
33540	accountsList.add(account)	3
64201	accountsList.add(accountUID)	6
61585	accountsList.add(buildAccountInstance(cursor))	6
61520	accountsList.add(buildModelInstance(cursor))	3
64202	accountsList.addAll(accountsListLevel)	6
52120	accountsList.iterator()	7
19359	accountsList.size())	18
27881	accountsListFragment	10
20008	accountsListFragment.refresh()	6
19758	accountsListFragment.refreshList()	7
245	accountsListLevel	13
1188	accountsListLevel.add(accountUID)	9
64198	accountsListLevel.add(cursor.getString(columnIndex))	6
64200	accountsListLevel.clear()	6
34425	accountsListView	14
25386	accountsNavAdapter	11
31739	accountsSp	9
9411	accountsSpinner	30
13172	accountsSpinner){	4
13713	accountsSpinner.postDelayed(new	4
32004	accountsSpinner.setEnabled(b)	6
13657	accountsSpinner.setOnItemSelectedListener(new	28
13127	accountsSpinner.setSelection(pos)	2
13428	accountsSpinner.setSelection(position)	4
19140	accountsToUpdate	13
535	accountsToUpdate)	6
30838	accountsToUpdate.add(mAccount)	8
18734	accountsToUpdate.addAll(mAccountsDbAdapter.getSimpleAccountList(	12
18442	accounts\n	43
12028	accounts\n\nYour	45
63538	accounts_currency	3
59845	accounts_uid	4
35625	accounttype	3
13909	accounty	4
34811	accs	5
176	acct	18
58744	acct.getName()	8
24086	acct.getName())	11
58774	acct.setFullName(	8
24519	acct.setFullName(acct.getName())	7
51213	acct.setFullName(mAccount.getFullName()	5
24281	acct.setFullName(parentAccountFullName	7
62597	acct.setParentUID(newParentAccountUID)	2
24156	acct.setParentUID(parentAccountUID)	9
56946	acct1_currency	4
29488	acct1_currency",	11
29563	acct1_full_name",	12
57692	acct1_type",	7
29542	acct1_uid",	12
20526	acct2_full_name"	9
53061	acctCurrencyCode	9
12468	acctDbAdapter	13
13036	acctDbAdapter.close()	12
12735	acctDbAdapter.getAccount(doubleAccountUID)	2
12616	acctId	19
12430	acctId.appendChild(doc.createTextNode(account.getUID()))	6
34521	acctId.appendChild(doc.createTextNode(doubleAccountUID))	7
59598	acctId.appendChild(doc.createTextNode(getUID()))	4
12892	acctId.appendChild(doc.createTextNode(mDoubleEntryAccountUID))	5
12861	acctId.appendChild(doc.createTextNode(mUID))	11
30698	acctId.appendChild(doc.createTextNode(transferAccountUID))	5
20714	acctSlotsNode	13
20703	acctSlotsNode.appendChild(GncXmlHelper.createSlot(doc,	11
54444	acctSlotsNode.appendChild(GncXmlHelper.createSlot(doc,GncXmlHelper.KEY_COLOR,mColorCode))	4
21066	acctSlotsNode.appendChild(GncXmlHelper.createSlot(doc,GncXmlHelper.KEY_COLOR,mColorCode,GncXmlHelper.ATTR_VALUE_STRING))	9
20152	acctSlotsNode.appendChild(GncXmlHelper.createSlot(doc,GncXmlHelper.KEY_DEFAULT_TRANSFER_ACCOUNT,mDefaultTransferAccountUID,"guid"))	9
21103	acctSlotsNode.appendChild(GncXmlHelper.createSlot(doc,GncXmlHelper.KEY_PLACEHOLDER,	11
35650	acctSlotsNode.appendChild(createSlot(doc,"color",mColorCode))	4
35799	acctSlotsNode.appendChild(createSlot(doc,"favorite",Boolean.toString(mIsFavorite)))	4
35814	acctSlotsNode.appendChild(createSlot(doc,"placeholder",Boolean.toString(mIsPlaceholderAccount)))	4
51174	acctUID	7
53248	acct_type	5
12514	accttype	21
12697	accttype.appendChild(doc.createTextNode(OfxAccountType.CHECKING.toString()))	5
12199	accttype.appendChild(doc.createTextNode(account.getAccountType().toString()))	6
34581	accttype.appendChild(doc.createTextNode(acctDbAdapter.getAccountType(doubleAccountUID).toString()))	4
12898	accttype.appendChild(doc.createTextNode(mAccountType.toString()))	5
34545	accttype.appendChild(doc.createTextNode(ofxAccountType))	8
30878	accttype.appendChild(doc.createTextNode(ofxAccountType.toString()))	11
3028	accumulated	26
28538	accumulating	7
9517	accumulation	2
5112	accuracy.	6
7815	accurate	12
55572	accurate,but	2
60041	accurately	3
28010	acecdervi	5
4083	acesso	8
55942	acesso</string>	2
20558	achieved	5
50697	acitivy	5
52914	acknowledgment	10
51156	acocunt	5
63520	acount	4
58963	acountRowID	3
59580	acountRowID){	4
59601	acountRowID,	2
35491	acronym	7
38364	across	33
16676	acties</string>	7
1167	action	203
2788	action!")	6
25738	action",count))	9
33867	action,	7
49918	action,Uri	5
48113	action,the	4
44397	action-item	4
19531	action-specific	11
19975	action.	41
59915	action.</p>	3
63727	action.equals(ACTION_MANAGE_BOOKS)){	3
13790	action.equals(ACTION_VIEW_RECURRING))	9
21115	action.equals(Intent.ACTION_INSERT))	8
13360	action.equals(Intent.ACTION_INSERT_OR_EDIT))	23
30805	action.equals(Intent.ACTION_INSERT_OR_EDIT)){	4
54070	action:	14
2126	actionBar	112
1457	actionBar.setBackgroundDrawable(new	5
578	actionBar.setDisplayHomeAsUpEnabled(true)	92
1693	actionBar.setDisplayShowTitleEnabled(false)	24
60159	actionBar.setDisplayShowTitleEnabled(mReportType	3
14039	actionBar.setDisplayShowTitleEnabled(true)	18
361	actionBar.setElevation(0)	8
1387	actionBar.setHomeAsUpIndicator(R.drawable.ic_close_white_24dp)	9
1397	actionBar.setHomeButtonEnabled(true)	74
19760	actionBar.setListNavigationCallbacks(mSpinnerAdapter,	16
63699	actionBar.setListNavigationCallbacks(mSpinnerAdapter,mOnNavigationListener)	2
19895	actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST)	14
63695	actionBar.setSelectedNavigationItem(i)	2
867	actionBar.setSubtitle(mAccountsDbAdapter.getFullyQualifiedAccountName(mAccountUID))	15
57412	actionBar.setTitle("Budget:	3
23222	actionBar.setTitle("Budgets")	5
6182	actionBar.setTitle("Chart	3
57489	actionBar.setTitle("Edit	3
27964	actionBar.setTitle("Recurring	5
58990	actionBar.setTitle(R.string.add_transaction)	4
18922	actionBar.setTitle(R.string.edit_transaction)	3
57182	actionBar.setTitle(R.string.title_about_gnucash)	12
3413	actionBar.setTitle(R.string.title_account_preferences)	19
1526	actionBar.setTitle(R.string.title_add_transaction)	12
9176	actionBar.setTitle(R.string.title_backup_prefs)	10
31913	actionBar.setTitle(R.string.title_edit_transaction)	11
1304	actionBar.setTitle(R.string.title_general_prefs)	11
30278	actionBar.setTitle(R.string.title_manage_books)	3
2052	actionBar.setTitle(R.string.title_passcode_preferences)	10
33973	actionBar.setTitle(R.string.title_pie_chart)	4
1246	actionBar.setTitle(R.string.title_report_prefs)	11
23139	actionBar.setTitle(R.string.title_reports)	8
54538	actionBar.setTitle(R.string.title_scheduled_exports)	5
54624	actionBar.setTitle(R.string.title_scheduled_transactions)	5
57050	actionBar.setTitle(R.string.title_settings)	8
56610	actionBar.setTitle(R.string.title_split_editor)	4
57047	actionBar.setTitle(R.string.title_transaction_preferences)	9
33385	actionBar.setTitle(R.string.title_transaction_splits)	9
25897	actionBar.setTitle(getTitle())	6
23119	actionBar.setTitle(getTitleRes())	10
30312	actionBarHeight	3
37418	actionBarStyle	7
45596	actionBarViewHeight	4
44434	actionEnum	8
42923	actionEnum)	13
44765	actionFormatChanged()	4
50002	actionId,KeyEvent	5
43311	actionItemView	4
43071	actionItemView.setItemInvoker(menuView)	4
43142	actionItems	4
42911	actionItems.get(i).getActionProvider()	4
42463	actionItems.size()	4
50120	actionKey	6
49992	actionKey)	5
50368	actionKey,String	5
50406	actionKey.getSuggestActionMsg()	5
49999	actionKey.getSuggestActionMsgColumn()	5
39979	actionMode	4
40092	actionMode)	4
50106	actionMsg	6
50394	actionMsg)	5
50364	actionMsg,String	5
44861	actionProvider	8
42996	actionProvider)	12
19617	actionType	24
32301	actionType)	7
19569	actionType){	18
25649	actionUID	39
32243	actionUID)	10
51402	actionUID){	2
32303	actionUid	9
42677	actionView	13
43137	actionView)	4
42359	actionView.getLayoutParams()	4
43076	actionView.setLayoutParams(menuParent.generateLayoutParams(lp))	4
42618	actionView.setVisibility(item.isActionViewExpanded()	4
48593	actionViewSpecified	4
6165	actionbar	33
19886	actionbar.setDisplayHomeAsUpEnabled(false)	16
32039	actionbar.setDisplayHomeAsUpEnabled(true)	13
54071	actionbar.setTitle("Create	5
57439	actionbar.setTitle("Edit	3
30646	actionbar.setTitle(R.string.title_accounts)	24
49875	actionkey	5
2966	actions	164
25527	actions",count))	3
52282	actions",nRecurrences))	4
51784	actions)	7
38577	actions,	4
44772	actions.	10
7615	actions.add(scheduledAction)	12
60082	actions.add(scheduledAction1)	3
51006	actions.add(scheduledBackup)	18
33843	actions</li>	8
46179	actionview	4
10984	activ</string>	12
16759	activa</string>	8
14765	activada</string>	23
49976	activate	5
50922	activateBook(@NonNull	5
50805	activateBook(bookUID)	5
30477	activated	25
49172	activated)	5
28455	activated,we	10
9039	activates	23
8791	activating	8
63530	activating/deactivating	4
63967	activation	2
2248	active	92
63505	active)	4
23607	active,and	3
63395	active,{@code	4
40126	active.	6
32766	activeBook	5
63852	activeBookName	3
2719	activeBookUID	26
14031	activeBookUID)	7
14236	activeBookUID){	5
59261	activeNetworkInfo	2
59283	activeNetworkInfo.isConnected()	2
20144	activities	49
48322	activities,	8
48321	activities.	17
49524	activities.get(i)	6
49381	activities.get(i))	4
49223	activities.size()	6
1385	activity	237
50530	activity")	5
23291	activity's	10
2348	activity)	102
31898	activity).	17
26786	activity,	22
49098	activity,<code>null</code>	4
54165	activity,String	5
48938	activity,The	4
38591	activity,int	13
50443	activity,launch	5
45402	activity,logo	4
1249	activity,need	5
34451	activity,one	5
50427	activity,perform	5
51049	activity,taking	4
50462	activity,then	5
39381	activity,uiOptions	4
38081	activity,you	4
23192	activity.	45
39845	activity.createPackageContext(packageName,0).getAssets()	8
32375	activity.findViewById(R.id.date_range_divider)	6
32124	activity.findViewById(R.id.report_account_type_spinner)	6
32216	activity.findViewById(R.id.time_range_layout)	6
39751	activity.getActionBar()	4
40181	activity.getApplicationInfo().packageName	8
39567	activity.getClass().getName()	8
38093	activity.getResources().getDisplayMetrics().densityDpi	4
3511	activity.getResources().openRawResource(R.raw.default_accounts)	8
29778	activity.getSupportFragmentManager()	7
39885	activity.getWindow()	4
49490	activity.hashCode())	4
49507	activity.loadLabel(packageManager)	4
49583	activity.resolveInfo.activityInfo.packageName	4
13163	activity.startActivity(intent)	11
32725	activity.startActivityForResult(chooser,REQUEST_PICK_ACCOUNTS_FILE)	6
49097	activity.weight	4
38167	activity:	9
49382	activity:").append(activity)	4
37379	activity</string>	4
50293	activityChooserView	4
49699	activityChooserView.setActivityChooserModel(dataModel)	4
50537	activityChooserView.setDefaultActionButtonContentDescription(	4
49981	activityChooserView.setExpandActivityOverflowButtonContentDescription(	4
49836	activityChooserView.setExpandActivityOverflowButtonDrawable(drawable)	4
49725	activityChooserView.setProvider(this)	4
49255	activityCount	6
49326	activityCount--	4
51027	activityInfo	5
50818	activityInfo.getIconResource()	5
45687	activityLogo	4
45314	activityLogo.intValue()	4
39722	activityName	8
40088	activityName)	4
49147	activityName,long	4
40257	activityPackage	8
49079	activitySorter	4
48854	activitySorter)	4
39366	activityUiOptions	4
39844	activityUiOptions.intValue()	4
55905	activo	2
56135	activo</string>	2
45080	acts	4
6324	actual	115
3928	actual</item>	62
15514	actual</string>	34
13487	actualOuputDE	7
13531	actualOuputUS	7
5734	actualValue	26
22158	actuales	10
11406	actualizado</string>	6
3203	actually	95
10278	actuel</item>	32
10187	actuels	7
28033	ad	10
12692	ad</string>	13
11476	ada	15
2029	adapter	241
46169	adapter's	4
44552	adapter)	28
38298	adapter,	4
47734	adapter,Drawable	4
39765	adapter,OnNavigationListener	4
49792	adapter,if	5
26831	adapter.	28
48147	adapter.</p>	4
34448	adapter.addAccount(account)	22
54718	adapter.addAccount(account2)	5
48061	adapter.areAllItemsEnabled()	4
19770	adapter.close()	38
36758	adapter.deleteAllAccounts()	9
28381	adapter.deleteAllRecords()	16
51995	adapter.deleteAllTransactions()	8
19732	adapter.deleteRecord(rowId)	15
51999	adapter.deleteTransaction(rowId)	8
54735	adapter.getAccountID(DUMMY_ACCOUNT_UID)	5
6217	adapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID)	11
39619	adapter.getCount()	16
46111	adapter.getCount())	4
46324	adapter.getItem(position)	4
45948	adapter.getItem(selection)	4
46025	adapter.getItemId(mFirstPosition)	4
45858	adapter.getItemId(position)	4
46006	adapter.getItemId(seed)	4
44542	adapter.getItemViewType(i)	8
49511	adapter.getItemViewType(position)	4
4448	adapter.getTransactionsCount(adapter.getAccountID(DUMMY_ACCOUNT_UID))	17
59720	adapter.getTransactionsCount(adapter.getID(DUMMY_ACCOUNT_UID))	2
44484	adapter.getView(i,itemView,mMeasureParent)	4
47648	adapter.getView(i,itemView,this)	4
46048	adapter.isEmpty())	4
47702	adapter.isEnabled(position)	4
44725	adapter.mAdapterMenu.performItemAction(adapter.getItem(position),0)	4
61874	adapter.registerAdapterDataObserver(observer)	3
47176	adapter.registerDataSetObserver(mObserver)	4
35969	adapter.setCursorToStringConverter(new	10
45992	adapter.setDropDownViewResource(R.layout.simple_spinner_dropdown_item)	4
2117	adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	30
3113	adapter.setFilterQueryProvider(new	13
1627	adapterView)	86
6610	adapterView,	56
268	adapterView,View	57
23737	adapters	42
9631	adb	29
28295	adb!	3
62113	adb.create()	3
19148	adb.create().show()	4
19367	adb.setAdapter(arrayAdapter,new	5
26528	adb.setSingleChoiceItems(arrayAdapter,currencyIndex,new	5
19284	adb.setTitle(R.string.title_choose_currency)	7
2087	add	238
25799	add("0")	3
25977	add("1")	3
25986	add("2")	3
26070	add("3")	3
26092	add("4")	3
25866	add("5")	3
25883	add("6")	3
25956	add("7")	3
25989	add("8")	3
25758	add("9")	3
42602	add(0,0,0,title)	4
42421	add(0,0,0,titleRes)	4
51185	add(@NonNull	4
42700	add(CharSequence	16
26244	add(Money	13
26021	add(String	3
43410	add(group,id,categoryOrder,ri.loadLabel(pm))	4
43073	add(groupId,itemId,order,mContext.getResources().getString(titleRes))	4
42965	add(groupId,itemId,order,ri.loadLabel(pm))	4
43227	add(int	16
44280	add.	8
18409	add/remove	17
24574	addAccount(@NonNull	5
19184	addAccount(Account	52
63702	addAccount(String	3
35389	addAccount(account)	10
64174	addAccount(mAddAccountFragment.getEnteredName())	2
25206	addAccount(rootAccount)	9
27491	addAccountColor	9
27819	addAccountFavorite	9
13443	addAccountIntent	41
25002	addAccountIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)	8
20047	addAccountIntent.putExtra(AccountsListFragment.ARG_PARENT_ACCOUNT_ID,mAccountId)	5
19633	addAccountIntent.putExtra(AccountsListFragment.ARG_PARENT_ACCOUNT_ID,mParentAccountId)	8
53820	addAccountIntent.putExtra(UxArgument.BUDGET_UID,mBudgetUID)	2
53953	addAccountIntent.putExtra(UxArgument.BUDGET_UID,mBudgetsDbAdapter.getUID(budgetId))	2
13671	addAccountIntent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.ACCOUNT.name())	3
13553	addAccountIntent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.ACCOUNT_FORM.name())	11
53910	addAccountIntent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.BUDGET.name())	2
63461	addAccountIntent.putExtra(UxArgument.PARENT_ACCOUNT_ID,mAccountId)	4
63323	addAccountIntent.putExtra(UxArgument.PARENT_ACCOUNT_ID,mParentAccountId)	4
13617	addAccountIntent.putExtra(UxArgument.PARENT_ACCOUNT_UID,mAccountUID)	15
30336	addAccountIntent.putExtra(UxArgument.PARENT_ACCOUNT_UID,mParentAccountUID)	11
13056	addAccountIntent.setAction(Intent.ACTION_INSERT_OR_EDIT)	37
32698	addBook(){	3
53607	addBudgetAmount(BudgetAmount	2
53841	addBudgetAmountView(BudgetAmount	5
53876	addBudgetAmountView(budgetAmount)	5
53909	addBudgetAmountView(null)	7
53994	addBudgetAmountView(null).getTag()	6
23796	addColumnSql	22
38213	addContentView(View	18
25133	addCreatedColumn	3
19924	addDefaultTransferAccount	13
40428	addDependency()	4
40707	addDependency(Dependency	4
33917	addFullAccountNameQuery	14
44750	addGlobalListener	4
33902	addHiddenFlagSql	5
25236	addHiddenFlagSqlToAccounts	4
49046	addHisoricalRecord(HistoricalRecord	4
49426	addHisoricalRecord(historicalRecord)	4
42767	addIntentOptions(int	17
43884	addInternal(0,0,0,mResources.getString(titleRes))	4
43318	addInternal(0,0,0,title)	4
44764	addInternal(android.view.MenuItem	4
44624	addInternal(android.view.SubMenu	4
43963	addInternal(group,id,categoryOrder,mResources.getString(title))	4
43433	addInternal(group,id,categoryOrder,title)	4
43865	addInternal(int	4
44239	addInternal(mNativeMenu.add(groupId,itemId,order,title))	4
44558	addInternal(mNativeMenu.add(groupId,itemId,order,titleRes))	4
44727	addInternal(mNativeMenu.add(title))	4
44693	addInternal(mNativeMenu.add(titleRes))	4
44720	addInternal(mNativeMenu.addSubMenu(groupId,itemId,order,title))	4
44583	addInternal(mNativeMenu.addSubMenu(groupId,itemId,order,titleRes))	4
44415	addInternal(mNativeMenu.addSubMenu(title))	4
44273	addInternal(mNativeMenu.addSubMenu(titleRes))	4
44479	addInternal(nativeItem)	4
48256	addItem()	4
43331	addItemView(View	4
43576	addItemView(itemView,childIndex)	4
4861	addItemsOnSpinner()	11
40446	addListener(AnimatorListener	4
44049	addMenuPresenter(MenuPresenter	4
25350	addModifiedColumn	3
43032	addOnAttachStateChangeListener(View_OnAttachStateChangeListener	4
24658	addOnCheckedChangeListener(OnCheckedChangeListener	3
38824	addOnMenuVisibilityListener(OnMenuVisibilityListener	8
34669	addParentAccountSql	10
27517	addPlaceHolderAccountFlagSql	11
1487	addPreferencesFromResource(R.xml.fragment_about_preferences)	31
796	addPreferencesFromResource(R.xml.fragment_account_preferences)	25
1682	addPreferencesFromResource(R.xml.fragment_backup_preferences)	18
5086	addPreferencesFromResource(R.xml.fragment_chart_preferences)	3
1193	addPreferencesFromResource(R.xml.fragment_general_preferences)	29
1074	addPreferencesFromResource(R.xml.fragment_passcode_preferences)	13
689	addPreferencesFromResource(R.xml.fragment_report_preferences)	10
631	addPreferencesFromResource(R.xml.fragment_transaction_preferences)	28
57196	addPreferencesFromResource(R.xml.preference_fragment_headers)	3
11283	addRecord(@NonNull	59
2045	addRecord(account)	11
52243	addRecord(account,UpdateMethod.insert)	2
59827	addRecord(model,UpdateMethod.replace)	4
33995	addRecord(rootAccount)	7
18542	addRecurrencePeriod	15
19461	addScheduledAction(ScheduledAction	11
32282	addScheduledEvent(ScheduledAction	5
33813	addScheduledEvent(ScheduledEvent	6
25461	addSchedxActionToTrns	4
29032	addSplit	4
24483	addSplit(@NonNull	7
12921	addSplit(Split	31
35673	addSplit(new	8
10623	addSplit(split)	13
24612	addSplitView(Split	10
31758	addSplitView(null)	12
13540	addSplitView(split)	17
43402	addSubMenu(0,0,0,mResources.getString(titleRes))	4
43745	addSubMenu(0,0,0,title)	4
42788	addSubMenu(CharSequence	12
47761	addSubMenu(final	4
43417	addSubMenu(group,id,categoryOrder,mResources.getString(title))	4
43058	addSubMenu(int	17
48275	addSubMenuItem()	4
27389	addSwatchToRow(TableRow	3
27466	addSwatchToRow(row,colorSwatch,rowNumber)	3
27122	addSwatchToRow(row,createBlankSpace(),rowNumber)	3
47862	addTab(ActionBar.Tab	4
37789	addTab(Tab	10
40132	addTab(tab,mTabs.isEmpty())	4
39789	addTab(tab,position,mTabs.isEmpty())	4
25345	addTemplatesToTransactions	4
56696	addTextChangedListener(new	4
30641	addToBackStack()	8
24487	addTransaction(@NonNull	5
547	addTransaction(Transaction	63
20655	addTransaction(recurringTransaction)	12
30303	addTransactionButton	8
7052	addTransactionButton.getHitRect(hitRect)	9
13831	addTransactionForCurrentMonth()	18
24859	addTransactionForPreviousMonth(1)	8
24760	addTransactionForPreviousMonth(2)	6
24771	addTransactionForPreviousMonth(int	16
42245	addUpdateListener(AnimatorUpdateListener	4
46058	addView(View	4
45895	addView(child)	5
47719	addView(custom)	4
47888	addView(iconView,0)	4
43572	addView(mCheckBox)	4
45634	addView(mClose)	4
45543	addView(mCustomNavView)	4
46510	addView(mExpandedActionView)	4
46047	addView(mExpandedHomeLayout)	4
45027	addView(mHomeLayout)	4
43339	addView(mIconView,0)	4
45526	addView(mIndeterminateProgressView)	4
45464	addView(mListNavLayout)	4
45036	addView(mMenuView)	4
45428	addView(mMenuView,layoutParams)	4
45010	addView(mProgressView)	4
44152	addView(mRadioButton)	4
47814	addView(mTabLayout,new	4
45153	addView(mTabScrollView)	4
47966	addView(mTabSpinner,new	4
45097	addView(mTitleLayout)	4
45787	addView(menuView,layoutParams)	4
27374	addView(row)	3
45696	addView(tabView)	4
47801	addView(textView)	4
45214	addView(view)	4
47720	addViewInLayout(child,0,lp)	4
3298	added	204
26545	added")	26
48765	added,allowing	4
37891	added.	20
53643	addend	9
36161	addend){	11
8388	adding	200
18648	adding,modifying	11
54284	addingBudgetAmount_shouldSetBudgetUID(){	2
54396	addingNegativePeriodNum_shouldExpandOnRetrieval(){	2
54299	addingSameAmounts_shouldCompactOnRetrieval(){	2
58837	addingSplitShouldUnsetExportedFlagOfTransaction(){	6
26247	addingSplitsShouldSetTransactionUID(){	15
3846	addition	53
51183	addition.	7
33957	additional	24
44476	additions).	4
48184	additions.	4
11457	address	127
21232	adds	53
18393	adem&#225	11
55788	adicionada	2
55783	adicionado	2
8574	adicionar	45
30451	adicione	7
7667	adir	33
45936	adjacent	8
32026	adjective	4
44958	adjust	12
49110	adjustDropDownSizeAndPosition()	10
62937	adjusted	4
22969	adne	9
17807	adres	13
22374	adresa	5
8244	adresse	10
41943	advance	6
53041	advanceCreate	2
53461	advanceCreateDays	2
53478	advanceCreateDays)	2
53144	advanceNotify	2
53355	advanceNotifyDays	2
53667	advanceNotifyDays)	2
42214	advanced	4
32936	advantage	3
17200	af</string>	42
26	affect	46
20411	affected	33
37431	affecting	4
27642	affects	16
11650	afficher	6
15996	afficher.</string>	16
11742	afficher</string>	46
37819	affordance	11
37656	affordance.	11
44855	affordances	9
26262	afforded	2
16833	afgelopen	8
12783	afia</string>	11
10256	afin	5
2792	after	323
40820	after(Animator	4
40720	after(anim)	4
40736	after(long	4
19067	after)	32
50476	after.invoke(mQueryTextView)	5
50082	after.setAccessible(true)	5
42511	after.union(mBefore)	4
3726	afterCount	46
9418	afterEvaluate	42
28745	afterOriginCount	21
2107	afterTextChanged(Editable	76
16600	afzonderlijke	7
3066	again	164
56676	again,	7
52916	again,by	7
39573	again,it	4
31455	again.	27
394	again</string>	105
39104	against	24
21090	agendada</string>	33
5261	agendadas	45
5383	agendadas</string>	46
4401	agendadas\n	24
22919	agendade	13
5988	agendados	6
5638	agendados</string>	8
35044	agendamento	3
20457	agendamento</string>	20
29685	agent	4
26030	aggiornata</string>	3
8485	aggiungere	31
28035	aggiunti	10
26061	aggregate	29
54478	aggregates	2
22871	agli	6
28027	agora	6
1918	agreed	349
62307	agrees	3
56253	agregado	2
7887	agregar	16
55134	ahead	3
16470	ai	15
16401	aient	11
48475	aims	4
11588	ajout</string>	12
54979	ajuda	7
15470	ajustes	8
11335	akan	9
17644	akcje</string>	12
11920	akses	10
12034	akses</string>	6
10516	akses\n	5
56336	aktiv	2
56168	aktiva	2
21506	aktivert</string>	8
4277	aktivieren	18
14911	aktivieren,den	19
4174	aktivieren,wenn	25
4991	aktivieren</string>	30
17692	aktualnej	13
14990	aktuellen	22
11653	akun	15
10421	akun</string>	15
1061	al	175
5775	alarm	17
25699	alarm)	25
55366	alarmIntent	14
18500	alarmManager	33
20229	alarmManager.cancel(pendingIntent)	13
18467	alarmManager.cancel(recurringPendingIntent)	17
20499	alarmManager.setInexactRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP,	10
20369	alarmManager.setInexactRepeating(AlarmManager.RTC_WAKEUP,	6
18107	alarmManager.setRepeating(AlarmManager.RTC_WAKEUP,firstRunMillis,	13
15856	alban&#233	8
15655	albans</item>	10
28015	albero	10
8233	alcun	31
29216	alcune	4
38493	alert	4
7192	alertFragment	38
6903	alertFragment.setTargetFragment(currentFragment,0)	22
30668	alertFragment.setTargetFragment(this,0)	16
6477	alertFragment.show(fragmentManager,"transactions_delete_confirmation_dialog")	12
58716	alertFragment.show(getActivity().getSupportFragmentManager(),"delete_confirmation_dialog")	6
7317	alertFragment.show(getActivity().getSupportFragmentManager(),"transactions_delete_confirmation_dialog")	14
58683	alertFragment.show(getSherlockActivity().getSupportFragmentManager(),"delete_confirmation_dialog")	5
30482	alertFragment.show(getSherlockActivity().getSupportFragmentManager(),"dialog")	13
54991	algumas	10
36108	alias	8
31579	aligned	17
27936	alinhadas	9
1096	all	428
30382	all!!	7
49389	all..."	4
37672	all...</string>	4
1900	allCurrencyCodes	14
1103	allCurrencyNames	11
40670	allDone	4
44174	allMenusAreClosing	8
38805	allMenusAreClosing)	24
28814	allOf(isDisplayed(),withText(R.string.label_receive))	2
53550	allSame	2
63015	allSplits	4
59431	allTransactions	5
6653	allTransactions){	17
59445	allTransactions.get(0)	5
28031	all\'interno	5
11268	alla	37
3198	alle	115
4841	allen	10
43860	allocated	4
7331	allow	95
47678	allowCollapse	4
47971	allowCollapse)	4
18738	allowed	32
27603	allowing	11
30282	allows	47
29916	allprojects	15
55946	alltid	2
56052	almacenamiento	2
12280	almacenar	14
49809	almost	5
35335	alone	8
1492	along	155
43608	along.	4
35818	alongside	11
30950	alpha	18
42660	alpha)	10
41256	alpha).	4
34089	alphaAccount	8
26192	alphaAccount.getUID())	7
42567	alphaChar	8
43089	alphaChar)	12
37017	alphabetic	9
26078	alphabetical	24
30775	alphabetically	23
28421	alphabetically.	15
36034	alphanumeric	16
2375	already	258
45989	already)	8
45391	already.	8
5216	als	88
3295	also	313
48245	alt	4
47765	alter	4
10543	alteradas</string>	24
21017	alterado	19
35255	alteraes	22
51538	alterar	9
40122	alternate	4
46396	alternates	4
12030	alternativ	10
48062	alternative	4
33213	alternatively	3
21173	alternativer	14
21172	alternativet	25
62337	although	4
22077	altre</string>	7
16194	altro</string>	26
7568	alvorens	34
3219	always	181
40291	am	14
40315	am.openXmlResourceParser("AndroidManifest.xml")	8
43759	ambiguity	4
10125	amlior	9
19339	amliorations	7
23583	amliorations\n	12
10221	amliorations\n</string>	9
43851	among	8
33239	amongst	3
1165	amount	355
59035	amount")	3
1649	amount)	68
5168	amount){	52
11624	amount,	44
51175	amount,@NonNull	5
36468	amount,Commodity	11
26369	amount,Currency	22
10402	amount,String	50
6961	amount,and	5
33103	amount,clear	13
30302	amount,only	6
23729	amount,terminate	5
54216	amount,the	2
5807	amount.	43
47107	amount.</p>	4
53535	amount.abs()	5
53419	amount.absolute()	5
23371	amount.appendChild(doc.createTextNode(Double.toString(mAmount)))	2
35641	amount.appendChild(doc.createTextNode(balance.toPlainString()))	2
23408	amount.appendChild(doc.createTextNode(mAmount.toPlainString()))	6
35822	amount.asBigDecimal().multiply(new	4
23906	amount.doubleValue()	6
53623	amount.getDenominator())	2
7355	amount.isNegative()	24
1407	amount.length())	6
2079	amount.length()))	3
58852	amount.multiply(denom).stripTrailingZeros().toPlainString()	5
36206	amount.multiply(new	8
7370	amount.negate()	19
51206	amount.setScale(DECIMAL_PLACES,ROUNDING_MODE)	9
36452	amount.setScale(commodity.getSmallestFractionDigits(),BigDecimal.ROUND_HALF_EVEN)	7
36439	amount.setScale(commodity.getSmallestFractionDigits(),ROUNDING_MODE)	6
63228	amount.setScale(mCommodity.getSmallestFractionDigits(),BigDecimal.ROUND_HALF_EVEN)	3
36328	amount.setScale(mCommodity.getSmallestFractionDigits(),ROUNDING_MODE)	7
36415	amount.setScale(mCurrency.getDefaultFractionDigits(),BigDecimal.ROUND_HALF_EVEN)	7
36074	amount.setScale(mCurrency.getDefaultFractionDigits(),ROUNDING_MODE)	7
62497	amount.signum()	3
5284	amount.toPlainString()	4
5982	amount</string>	126
8646	amountBigD	18
18238	amountBigDecimal	34
36352	amountBigDecimal.setScale(Currency.getInstance(currencyCode).getDefaultFractionDigits(),BigDecimal.ROUND_HALF_EVEN).round(MathContext.DECIMAL128)	7
36214	amountBigDecimal.setScale(commodity.getSmallestFractionDigits(),BigDecimal.ROUND_HALF_EVEN).round(MathContext.DECIMAL128)	8
12967	amountBigd	47
31780	amountBigd.equals(BigDecimal.ZERO))	15
36343	amountConverted	8
53250	amountDenom	2
18063	amountDouble	7
9030	amountEditText	20
56416	amountEditText,	3
36306	amountEditText,TextView	5
36410	amountEditText.addTextChangedListener(this)	4
53852	amountEditText.bindListeners(mKeyboardView)	5
13233	amountEditText.removeTextChangedListener(this)	6
13045	amountEditText.setSelection(current.length())	6
13688	amountEditText.setText(current)	6
54116	amountEditText.setValue(budgetAmount.getAmount().asBigDecimal())	5
28715	amountEdittext	7
28975	amountEdittext.getText().toString()	7
56719	amountEntered	9
13758	amountInput	6
13224	amountInput)	24
13847	amountInput,ToggleButton	4
56636	amountInputFormatter	7
53204	amountNum	2
5510	amountString	91
4182	amountString)	22
3771	amountString){	63
32315	amountString,0)	5
6150	amountString.indexOf("/")	6
32334	amountString.length()	10
51219	amountString.replace(Character.toString(separator),"")	8
6354	amountString.replaceAll(",",".")	4
5662	amountString.replaceAll("\\.","")	4
32471	amountString.split("/")	4
12511	amountString.substring(0,index).replaceAll("\\D","")	5
51648	amountString.substring(0,pos)	5
13002	amountString.substring(index)	5
19221	amountSum	13
18846	amountSum.add(money)	6
18574	amountSum.add(money.negate())	6
51308	amountSum.add(new	4
23958	amountText	33
52731	amountText.replaceAll(",",".")	13
56679	amountText.startsWith("-")){	7
56691	amountText.substring(1)	7
52957	amountText.trim()	8
33650	amountTextView	16
63796	amountTextView.setText(getString(R.string.label_split_count,transaction.getSplits().size()))	2
33567	amountTextView.setText(transaction.getSplits().get(0).getAmount().formattedString())	5
61814	amountTextView.setText(transaction.getSplits().get(0).getValue().formattedString())	5
33747	amountTextView.setText(transaction.getSplits().size()	10
53796	amountValue	5
28922	amountView	4
28809	amountView.getText().toString()	4
36297	amount_denom	12
36110	amount_denom)	12
33187	amount_num	15
3514	amounts	166
52340	amounts")	4
53398	amounts)	2
36199	amounts,credits	20
30198	amounts,it	13
52183	amounts,they	4
26260	amounts,which	3
53437	amounts.add(amount)	2
53681	amounts.get(0)	2
53507	amountsToAdd	2
53652	amountsToAdd)	2
53613	amountsToAdd.add(bgtAmount)	2
53646	amountsToRemove	2
53515	amountsToRemove)	2
53577	amountsToRemove.add(budgetAmount)	2
2938	amounts\n	84
13631	amoutView	7
24655	amoutView,	3
13755	amoutView,TextView	7
54865	amt	10
2019	an	449
12950	an&#8230	11
59251	an</string>	4
25406	analysis.	3
46747	ancestor	4
16343	anche	26
371	anchor	26
44350	anchor")	4
44652	anchor)	8
47470	anchor,int	4
46627	anchor.getContext().getResources()	4
46855	anchor.getHeight())	4
46714	anchor.getLocationOnScreen(anchorPos)	4
44385	anchor.getViewTreeObserver()	4
47285	anchor.getWindowVisibleDisplayFrame(displayFrame)	4
49819	anchorPadding	5
50062	anchorPadding)	5
46550	anchorPos	4
46565	anchorPos[1]	4
44844	anchorView	4
44749	anchorView)	4
43041	anchorView,	4
44562	anchorView,boolean	4
44587	anchored	14
10778	ancien	15
808	and	451
19260	and/or	42
16559	andere</string>	26
4759	anderen	18
4140	anderes	35
17049	anders	37
55855	andra	2
3883	android	105
21927	android.Manifest	27
47228	android.R.anim.linear_interpolator)	4
38693	android.R.attr#uiOptions	4
46838	android.R.attr.animationResolution,	4
46299	android.R.attr.divider,	5
45987	android.R.attr.dividerPadding,	5
47143	android.R.attr.indeterminate,	4
46932	android.R.attr.indeterminateBehavior,	4
47536	android.R.attr.indeterminateDrawable,	4
46908	android.R.attr.indeterminateDuration,	4
46734	android.R.attr.indeterminateOnly,	4
46926	android.R.attr.interpolator,	4
38822	android.R.attr.layout_gravity	5
46943	android.R.attr.max,	4
47004	android.R.attr.maxHeight,	4
47454	android.R.attr.maxWidth,	4
46340	android.R.attr.measureWithLargestChild,	5
47151	android.R.attr.minHeight,	4
46916	android.R.attr.minWidth,	4
47458	android.R.attr.progress,	4
47233	android.R.attr.progressDrawable,	4
47355	android.R.attr.secondaryProgress,	4
46320	android.R.attr.showDividers,	5
27826	android.R.attr.state_focused)	3
27756	android.R.attr.state_pressed	3
45810	android.R.attr.textAllCaps	4
63258	android.R.color.black	3
63231	android.R.color.darker_gray	3
27846	android.R.drawable.btn_star_big_off	14
27739	android.R.drawable.btn_star_big_on	14
24822	android.R.id.home){	3
38063	android.R.id.home.	4
703	android.R.id.home:	59
46635	android.R.id.progress	4
47146	android.R.id.progress)	4
47268	android.R.id.secondaryProgress))	4
3810	android.R.id.text1	6
18948	android.R.layout.select_dialog_singlechoice,	9
32205	android.R.layout.simple_list_item_1,	6
55146	android.R.layout.simple_spinner_dropdown_item)	8
545	android.R.layout.simple_spinner_item)	6
543	android.R.layout.simple_spinner_item,	58
50840	android.R.layout.simple_spinner_item,booksCursor,	3
2311	android.R.layout.simple_spinner_item,cursor)	14
55131	android.R.layout.simple_spinner_item,mAccountsCursor)	8
2440	android.R.layout.simple_spinner_item,mCursor)	17
38294	android.R.style#Theme_Holo	4
47526	android.R.style#Widget_ProgressBar_Horizontal	4
47333	android.R.style#Widget_ProgressBar_Inverse	4
46536	android.R.style#Widget_ProgressBar_Large	4
47289	android.R.style#Widget_ProgressBar_Large_Inverse	4
47551	android.R.style#Widget_ProgressBar_Small	4
47434	android.R.style#Widget_ProgressBar_Small_Inverse	4
46142	android.R.styleable#AbsSpinner_entries	4
39324	android.R.styleable#ActionBar_LayoutParams_layout_gravity	5
47498	android.R.styleable#LinearLayout_measureWithLargestChild	5
47362	android.R.styleable#ProgressBar	4
47549	android.R.styleable#ProgressBar_animationResolution	4
46613	android.R.styleable#ProgressBar_indeterminate	4
47156	android.R.styleable#ProgressBar_indeterminateBehavior	4
46773	android.R.styleable#ProgressBar_indeterminateDrawable	4
46577	android.R.styleable#ProgressBar_indeterminateDuration	4
47345	android.R.styleable#ProgressBar_indeterminateOnly	4
47534	android.R.styleable#ProgressBar_interpolator	4
47452	android.R.styleable#ProgressBar_max	4
47159	android.R.styleable#ProgressBar_maxHeight	4
46746	android.R.styleable#ProgressBar_maxWidth	4
47049	android.R.styleable#ProgressBar_minHeight	4
46854	android.R.styleable#ProgressBar_minWidth	4
46568	android.R.styleable#ProgressBar_progress	4
47255	android.R.styleable#ProgressBar_progressDrawable	4
46709	android.R.styleable#ProgressBar_secondaryProgress	4
48861	android.R.styleable#SearchView_iconifiedByDefault	7
49087	android.R.styleable#SearchView_imeOptions	6
49587	android.R.styleable#SearchView_inputType	6
49104	android.R.styleable#SearchView_maxWidth	9
49236	android.R.styleable#SearchView_queryHint	6
47808	android.R.styleable#Spinner_gravity	4
47903	android.R.styleable#Spinner_prompt	4
38435	android.R.styleable#Theme_windowActionBar	4
47515	android.R.styleable#View	4
40597	android.animation.Animator.AnimatorListener	5
39821	android.animation.Animator.AnimatorListener#onAnimationCancel(Animator)	4
40147	android.animation.Animator.AnimatorListener#onAnimationEnd(Animator)	4
41642	android.animation.TypeEvaluator	4
1684	android.annotation.TargetApi	51
39569	android.app.ActionBar	12
38722	android.app.ActionBar.DISPLAY_HOME_AS_UP	4
38195	android.app.ActionBar.DISPLAY_SHOW_CUSTOM	4
38614	android.app.ActionBar.DISPLAY_SHOW_HOME	4
38352	android.app.ActionBar.DISPLAY_SHOW_TITLE	4
38117	android.app.ActionBar.DISPLAY_USE_LOGO	4
40303	android.app.ActionBar.LayoutParams	4
39466	android.app.ActionBar.LayoutParams(layoutParams)	4
38416	android.app.ActionBar.NAVIGATION_MODE_LIST	4
38396	android.app.ActionBar.NAVIGATION_MODE_STANDARD	4
38586	android.app.ActionBar.NAVIGATION_MODE_TABS	4
40251	android.app.ActionBar.OnNavigationListener,android.app.ActionBar.OnMenuVisibilityListener	5
39990	android.app.ActionBar.Tab	4
40236	android.app.ActionBar.TabListener	4
13	android.app.Activity	178
38365	android.app.Activity#getActionBar	4
47839	android.app.Activity#onOptionsItemSelected(MenuItem)	4
13786	android.app.AlarmManager	24
3418	android.app.AlertDialog	90
12619	android.app.Application	14
1219	android.app.DatePickerDialog	33
18604	android.app.DatePickerDialog.OnDateSetListener	31
27310	android.app.Dialog	57
27595	android.app.DialogFragment	21
39277	android.app.ExpandableListActivity	4
23747	android.app.Fragment	9
48073	android.app.Fragment#onOptionsItemSelected(MenuItem)	4
32923	android.app.FragmentManager	14
64369	android.app.FragmentT	1
64384	android.app.FragmentTra	1
55386	android.app.IntentService	10
38982	android.app.ListActivity	4
13305	android.app.PendingIntent	38
7180	android.app.ProgressDialog	41
49483	android.app.SearchManager	18
49517	android.app.SearchableInfo	10
23920	android.app.TimePickerDialog	17
19015	android.app.TimePickerDialog.OnTimeSetListener	16
9862	android.appwidget.AppWidgetManager	15
9038	android.appwidget.AppWidgetProvider	7
28996	android.content.ActivityNotFoundException	21
18520	android.content.BroadcastReceiver	14
9444	android.content.ClipData	3
43280	android.content.ComponentName	35
30694	android.content.ContentResolver	11
6634	android.content.ContentValues	111
708	android.content.Context	293
48410	android.content.Context#startActivity	4
3355	android.content.DialogInterface	89
47969	android.content.DialogInterface.OnClickListener	4
1933	android.content.Intent	255
31474	android.content.IntentSender	16
50	android.content.SharedPreferences	179
3906	android.content.SharedPreferences.Editor	71
38888	android.content.pm.ActivityInfo	9
45123	android.content.pm.ApplicationInfo	4
3584	android.content.pm.PackageInfo	17
9728	android.content.pm.PackageManager	63
48066	android.content.pm.PackageManager#queryIntentActivityOptions	4
3568	android.content.pm.PackageManager.NameNotFoundException	39
35161	android.content.pm.ResolveInfo	29
39089	android.content.res.AssetManager	8
460	android.content.res.ColorStateList	12
23149	android.content.res.Configuration	82
1064	android.content.res.Resources	90
26768	android.content.res.TypedArray	60
39308	android.content.res.XmlResourceParser	12
59817	android.database.ContentObserver	6
363	android.database.Cursor	239
60582	android.database.Cursor)	3
48670	android.database.DataSetObservable	4
44499	android.database.DataSetObserver	22
155	android.database.SQLException	73
1932	android.database.sqlite.SQLiteDatabase	198
33851	android.database.sqlite.SQLiteException	6
25280	android.database.sqlite.SQLiteOpenHelper	30
24091	android.database.sqlite.SQLiteQueryBuilder	35
6731	android.database.sqlite.SQLiteStatement	80
9810	android.getAdbExe().toString()	22
45170	android.graphics.Bitmap	9
46993	android.graphics.BitmapShader	4
43682	android.graphics.Canvas	17
1462	android.graphics.Color	111
46157	android.graphics.ColorFilter	5
42754	android.graphics.Matrix	4
45878	android.graphics.Paint	5
5062	android.graphics.PorterDuff	21
27225	android.graphics.PorterDuff.Mode	5
1584	android.graphics.Rect	67
43132	android.graphics.RectF	4
47158	android.graphics.Shader	4
21586	android.graphics.Typeface	9
46585	android.graphics.drawable.Animatable	4
46834	android.graphics.drawable.AnimationDrawable	4
47431	android.graphics.drawable.BitmapDrawable	4
46927	android.graphics.drawable.ClipDrawable	4
495	android.graphics.drawable.ColorDrawable	50
4376	android.graphics.drawable.Drawable	71
27156	android.graphics.drawable.LayerDrawable	10
46803	android.graphics.drawable.ShapeDrawable	4
47100	android.graphics.drawable.shapes.RoundRectShape	4
46532	android.graphics.drawable.shapes.Shape	4
31887	android.inputmethodservice.Keyboard	22
31491	android.inputmethodservice.KeyboardView	49
31582	android.inputmethodservice.KeyboardView.OnKeyboardActionListener	22
31021	android.net.ConnectivityManager	4
31329	android.net.NetworkInfo	4
2928	android.net.Uri	85
3147	android.os.AsyncTask	74
1621	android.os.Build	193
13051	android.os.Build.VERSION_CODES.HONEYCOMB)	6
367	android.os.Bundle	276
6035	android.os.Environment	57
3924	android.os.Handler	47
10084	android.os.IBinder	6
42123	android.os.Looper	4
41794	android.os.Message	4
43036	android.os.Parcel	25
42562	android.os.Parcelable	36
55437	android.os.PowerManager	13
49283	android.os.ResultReceiver	5
9015	android.os.SystemClock	20
9579	android.permission.SET_ANIMATION_SCALE"	4
12414	android.permission.SET_ANIMATION_SCALE".execute()	3
9612	android.permission.SET_ANIMATION_SCALE".split('	16
8941	android.permission.WRITE_EXTERNAL_STORAGE"	4
12304	android.permission.WRITE_EXTERNAL_STORAGE".execute()	3
8866	android.permission.WRITE_EXTERNAL_STORAGE".split('	10
48561	android.policy.PhoneWindow,which	4
31993	android.preference.CheckBoxPreference	26
57133	android.preference.ListPreference	13
172	android.preference.Preference	65
1068	android.preference.Preference.OnPreferenceChangeListener	41
38927	android.preference.PreferenceActivity	10
196	android.preference.PreferenceFragment	57
1338	android.preference.PreferenceManager	233
55720	android.preference.PreferenceManager.getDefaultSharedPreferences(context)	2
55208	android.productFlavors.all	2
30793	android.provider.BaseColumns	3
32659	android.provider.OpenableColumns	3
31889	android.provider.Settings	4
49050	android.speech.RecognizerIntent	5
32473	android.support.annotation.ColorRes	6
56666	android.support.annotation.IdRes	7
23121	android.support.annotation.LayoutRes	42
295	android.support.annotation.NonNull	148
63	android.support.annotation.Nullable	108
23226	android.support.annotation.StringRes	12
55260	android.support.annotation.VisibleForTesting	6
31598	android.support.annotation.XmlRes	22
23130	android.support.design.widget.AppBarLayout	18
23154	android.support.design.widget.CoordinatorLayout	14
23306	android.support.design.widget.FloatingActionButton	34
23078	android.support.design.widget.NavigationView	13
23162	android.support.design.widget.Snackbar	20
23126	android.support.design.widget.TabLayout	29
31761	android.support.design.widget.TextInputLayout	16
8836	android.support.multidex.MultiDex	2
10120	android.support.multidex.MultiDexApplication	2
13942	android.support.test.InstrumentationRegistry	50
10290	android.support.test.InstrumentationRegistry.getInstrumentation	6
13938	android.support.test.espresso.Espresso	35
24004	android.support.test.espresso.Espresso.onData	23
11204	android.support.test.espresso.Espresso.onView	55
21837	android.support.test.espresso.Espresso.openActionBarOverflowOrOptionsMenu	7
35191	android.support.test.espresso.Espresso.pressBack	8
13532	android.support.test.espresso.ViewAction	26
51989	android.support.test.espresso.ViewInteraction	5
13773	android.support.test.espresso.action.CoordinatesProvider	23
13881	android.support.test.espresso.action.GeneralClickAction	20
13456	android.support.test.espresso.action.Press	14
13279	android.support.test.espresso.action.Tap	17
13584	android.support.test.espresso.action.ViewActions.*	5
11185	android.support.test.espresso.action.ViewActions.clearText	30
13457	android.support.test.espresso.action.ViewActions.click	56
13292	android.support.test.espresso.action.ViewActions.closeSoftKeyboard	8
21759	android.support.test.espresso.action.ViewActions.longClick	19
21839	android.support.test.espresso.action.ViewActions.scrollTo	19
21493	android.support.test.espresso.action.ViewActions.swipeRight	12
13740	android.support.test.espresso.action.ViewActions.swipeUp	11
13608	android.support.test.espresso.action.ViewActions.typeText	17
13188	android.support.test.espresso.assertion.ViewAssertions.doesNotExist	5
13629	android.support.test.espresso.assertion.ViewAssertions.matches	51
13635	android.support.test.espresso.contrib.DrawerActions	25
53055	android.support.test.espresso.contrib.PickerActions	5
52375	android.support.test.espresso.contrib.RecyclerViewActions	13
32503	android.support.test.espresso.intent.Intents	2
32814	android.support.test.espresso.intent.matcher.IntentMatchers.hasComponent	4
32720	android.support.test.espresso.intent.rule.IntentsTestRule	2
13073	android.support.test.espresso.matcher.RootMatchers.withDecorView	24
13351	android.support.test.espresso.matcher.ViewMatchers	19
13547	android.support.test.espresso.matcher.ViewMatchers.*	6
13918	android.support.test.espresso.matcher.ViewMatchers.hasDescendant	19
13653	android.support.test.espresso.matcher.ViewMatchers.hasSibling	10
52826	android.support.test.espresso.matcher.ViewMatchers.isAssignableFrom	12
13627	android.support.test.espresso.matcher.ViewMatchers.isChecked	22
13275	android.support.test.espresso.matcher.ViewMatchers.isDisplayed	44
13585	android.support.test.espresso.matcher.ViewMatchers.isEnabled	17
23826	android.support.test.espresso.matcher.ViewMatchers.isNotChecked	20
23511	android.support.test.espresso.matcher.ViewMatchers.withChild	5
53167	android.support.test.espresso.matcher.ViewMatchers.withClassName	5
32933	android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility	11
13783	android.support.test.espresso.matcher.ViewMatchers.withId	46
33191	android.support.test.espresso.matcher.ViewMatchers.withParent	15
23643	android.support.test.espresso.matcher.ViewMatchers.withSpinnerText	5
13715	android.support.test.espresso.matcher.ViewMatchers.withText	49
13369	android.support.test.rule.ActivityTestRule	18
13113	android.support.test.runner.AndroidJUnit4	60
9483	android.support.test.runner.AndroidJUnitRunner	4
37784	android.support.v4.app	4
19836	android.support.v4.app.*	9
51682	android.support.v4.app.ActionBarDrawerToggle	8
1740	android.support.v4.app.DialogFragment	117
832	android.support.v4.app.Fragment	187
6661	android.support.v4.app.FragmentActivity	32
1177	android.support.v4.app.FragmentManager	145
13192	android.support.v4.app.FragmentPagerAdapter	7
1274	android.support.v4.app.FragmentStatePagerAdapter	24
1230	android.support.v4.app.FragmentTransaction	100
8460	android.support.v4.app.ListFragment	30
8578	android.support.v4.app.LoaderManager	24
14586	android.support.v4.app.LoaderManager.LoaderCallbacks	42
39114	android.support.v4.app.Watson	5
64397	android.support.v4.app._ActionBarSherlockTrojanHorse	1
53213	android.support.v4.content.AsyncTaskLoader	6
7640	android.support.v4.content.ContextCompat	6
8921	android.support.v4.content.FileProvider	4
7762	android.support.v4.content.Loader	66
62540	android.support.v4.content.WakefulBroadcastReceiver	3
49650	android.support.v4.view.KeyEventCompat	5
14268	android.support.v4.view.MenuItemCompat	15
872	android.support.v4.view.PagerAdapter	42
32396	android.support.v4.view.ViewCompat	10
1823	android.support.v4.view.ViewPager	46
49323	android.support.v4.widget.CursorAdapter	5
14132	android.support.v4.widget.DrawerLayout	24
323	android.support.v4.widget.ResourceCursorAdapter	25
2641	android.support.v4.widget.SimpleCursorAdapter	131
57057	android.support.v4.widget.SlidingPaneLayout	5
1473	android.support.v7.app.ActionBar	108
14328	android.support.v7.app.ActionBarActivity	8
20855	android.support.v7.app.ActionBarDrawerToggle	19
30181	android.support.v7.app.AlertDialog	9
55336	android.support.v7.app.AlertDialog.Builder	8
55396	android.support.v7.app.AlertDialog.Builder(getActivity())	8
1806	android.support.v7.app.AppCompatActivity	105
57125	android.support.v7.app.AppCompatDelegate	6
30160	android.support.v7.appcompat.R.attr.actionBarSize	3
60414	android.support.v7.internal.widget.AdapterViewCompat	5
57150	android.support.v7.preference.CheckBoxPreference	12
57139	android.support.v7.preference.ListPreference	3
57056	android.support.v7.preference.Preference	15
57068	android.support.v7.preference.Preference.OnPreferenceChangeListener,Preference.OnPreferenceClickListener	3
57158	android.support.v7.preference.PreferenceFragmentCompat	11
9634	android.support.v7.preference.PreferenceManager	25
60385	android.support.v7.preference.SwitchPreferenceCompat	5
14384	android.support.v7.view.ActionMode	17
24705	android.support.v7.widget.AppCompatButton	15
55484	android.support.v7.widget.AppCompatEditText	2
55466	android.support.v7.widget.AppCompatSpinner	2
31983	android.support.v7.widget.GridLayoutManager	8
1363	android.support.v7.widget.LinearLayoutManager	29
30395	android.support.v7.widget.PopupMenu	25
54100	android.support.v7.widget.PopupMenu(getActivity(),v)	2
297	android.support.v7.widget.RecyclerView	27
59818	android.support.v7.widget.RecyclerView.Adapter	6
59838	android.support.v7.widget.RecyclerView.ViewHolder>	6
56779	android.support.v7.widget.SearchView	6
9355	android.support.v7.widget.SearchView.OnCloseListener	11
56771	android.support.v7.widget.SearchView.OnQueryTextListener,	9
30105	android.support.v7.widget.SwitchCompat	13
1239	android.support.v7.widget.Toolbar	60
5170	android.test.ActivityInstrumentationTestCase2	77
30764	android.test.AndroidTestCase	9
56844	android.text.AndroidCharacter	5
12331	android.text.Editable	90
34633	android.text.InputType	34
52929	android.text.Layout	8
49075	android.text.Spannable	10
49888	android.text.SpannableString	5
49657	android.text.SpannableStringBuilder	5
2778	android.text.TextUtils	128
48013	android.text.TextUtils.TruncateAt	4
12234	android.text.TextWatcher	59
28977	android.text.format.DateFormat	13
14194	android.text.format.DateUtils	40
14238	android.text.format.Time	36
48817	android.text.style.ImageSpan	5
50547	android.text.style.TextAppearanceSpan	5
39311	android.util.AndroidRuntimeException	8
27369	android.util.AttributeSet	76
38163	android.util.DisplayMetrics	12
43120	android.util.FloatMath	4
41226	android.util.FloatProperty	4
41650	android.util.IntProperty	4
1743	android.util.Log	315
12463	android.util.Pair	16
41360	android.util.Property	4
41620	android.util.Property#get(Object)	4
14285	android.util.SparseArray	47
14021	android.util.SparseBooleanArray	31
26660	android.util.SparseIntArray	4
30247	android.util.TypedValue	32
48740	android.util.Xml	6
6790	android.view.*	6
38720	android.view.ActionMode	12
39828	android.view.ActionMode.Callback	4
43228	android.view.ActionProvider	8
45811	android.view.CollapsibleActionView	5
46472	android.view.ContextMenu	11
43148	android.view.ContextMenu.ContextMenuInfo	17
6430	android.view.ContextThemeWrapper	17
13276	android.view.Gravity	31
31743	android.view.HapticFeedbackConstants	17
48619	android.view.InflateException	4
39047	android.view.KeyCharacterMap	8
32083	android.view.KeyEvent	52
784	android.view.LayoutInflater	193
64366	android.view.Me	1
901	android.view.Menu	91
48387	android.view.Menu#add	4
38819	android.view.Menu:	4
14150	android.view.MenuInflater	64
1213	android.view.MenuItem	96
49192	android.view.MenuItem#SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW	5
37734	android.view.MenuItem#setActionProvider(android.view.ActionProvider)	4
37113	android.view.MenuItem#setActionView(android.view.View)	4
44292	android.view.MenuItem.OnActionExpandListener	4
44875	android.view.MenuItem.OnActionExpandListener()	4
48461	android.view.MenuItem.SHOW_AS_ACTION_ALWAYS	4
48487	android.view.MenuItem.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW	4
48671	android.view.MenuItem.SHOW_AS_ACTION_IF_ROOM	4
48398	android.view.MenuItem.SHOW_AS_ACTION_NEVER	4
48442	android.view.MenuItem.SHOW_AS_ACTION_WITH_TEXT	4
44430	android.view.MenuItem[]	5
44510	android.view.MenuItem[outSpecificItems.length]	5
42966	android.view.MotionEvent	38
42730	android.view.SoundEffectConstants	8
44198	android.view.SubMenu	5
6763	android.view.TouchDelegate	31
1314	android.view.View	289
46410	android.view.View#measure(int,int)	4
47717	android.view.View#onLayout(boolean,int,int,int,int)	4
45804	android.view.View#requestLayout()	4
42349	android.view.View.MeasureSpec	12
46295	android.view.View.MeasureSpec.EXACTLY	4
50159	android.view.View.OnClickListener	17
46391	android.view.View.OnCreateContextMenuListener#onCreateContextMenu(ContextMenu,View,ContextMenuInfo)	4
52930	android.view.View.OnFocusChangeListener	12
46727	android.view.View.OnTouchListener	16
43163	android.view.ViewConfiguration	4
38187	android.view.ViewDebug	16
788	android.view.ViewGroup	211
39087	android.view.ViewGroup.LayoutParams	7
38258	android.view.ViewGroup.LayoutParams.MATCH_PARENT	12
47986	android.view.ViewGroup.LayoutParams.WRAP_CONTENT	4
38039	android.view.ViewGroup.MarginLayoutParams	4
45359	android.view.ViewParent	12
38839	android.view.ViewStub	4
44233	android.view.ViewTreeObserver	9
49643	android.view.ViewTreeObserver.OnGlobalLayoutListener	4
37987	android.view.Window	17
37777	android.view.Window#requestFeature	4
39402	android.view.Window.Callback	4
48514	android.view.Window.FEATURE_ACTION_BAR	4
48291	android.view.Window.FEATURE_ACTION_BAR_OVERLAY	4
48244	android.view.Window.FEATURE_ACTION_MODE_OVERLAY	4
48725	android.view.Window.FEATURE_INDETERMINATE_PROGRESS	4
48494	android.view.Window.FEATURE_NO_TITLE	4
48744	android.view.Window.FEATURE_PROGRESS	4
33322	android.view.WindowManager	32
13889	android.view.WindowManager.LayoutParams	22
38781	android.view.accessibility.AccessibilityEvent	32
46697	android.view.accessibility.AccessibilityManager	4
46152	android.view.accessibility.AccessibilityNodeInfo	9
39724	android.view.animation.AccelerateDecelerateInterpolator	8
46895	android.view.animation.AlphaAnimation	4
38885	android.view.animation.Animation	12
39185	android.view.animation.AnimationUtils	12
45282	android.view.animation.DecelerateInterpolator	10
39922	android.view.animation.Interpolator	27
41849	android.view.animation.LinearInterpolator	8
43024	android.view.animation.Transformation	8
48863	android.view.inputmethod.EditorInfo	9
13946	android.view.inputmethod.InputMethodManager	70
2907	android.widget.*	65
47009	android.widget.AbsListView	4
45953	android.widget.Adapter	4
1054	android.widget.AdapterView	106
46215	android.widget.AdapterView.OnItemClickListener	13
6631	android.widget.AdapterView.OnItemLongClickListener	27
6867	android.widget.AdapterView.OnItemSelectedListener	30
55479	android.widget.AdapterView.OnItemSelectedListener#onItemSelected(AdapterView,View,int,long)	2
222	android.widget.ArrayAdapter	80
20676	android.widget.AutoCompleteTextView	16
44830	android.widget.BaseAdapter	12
3985	android.widget.Button	90
9914	android.widget.CheckBox	54
33073	android.widget.Checkable	3
13846	android.widget.CompoundButton	55
13423	android.widget.CompoundButton.OnCheckedChangeListener	26
59795	android.widget.CursorAdapter	6
60458	android.widget.CursorAdapter#FLAG_REGISTER_CONTENT_OBSERVER	3
60541	android.widget.CursorAdapter#bindView(android.view.View,android.content.Context,	3
1701	android.widget.DatePicker	31
13945	android.widget.EditText	103
60543	android.widget.Filter	3
21111	android.widget.FilterQueryProvider	13
60607	android.widget.FilterQueryProvider#runQuery(CharSequence)	3
59759	android.widget.Filterable	6
27230	android.widget.FrameLayout	35
43158	android.widget.HorizontalScrollView	4
8853	android.widget.ImageButton	31
27276	android.widget.ImageView	65
7181	android.widget.LinearLayout	99
30680	android.widget.ListAdapter	23
60612	android.widget.ListAdapter#getItemId(int)	3
50598	android.widget.ListAdapter#getView(int,View,ViewGroup)	5
4661	android.widget.ListView	80
33155	android.widget.ListView#CHOICE_MODE_NONE	3
44586	android.widget.PopupWindow	15
23129	android.widget.ProgressBar	28
27207	android.widget.QuickContactBadge	5
31792	android.widget.RadioButton	21
9105	android.widget.RemoteViews	20
46653	android.widget.RemoteViews.RemoteView	4
55006	android.widget.SearchView	8
1360	android.widget.Spinner	144
14229	android.widget.SpinnerAdapter	36
13299	android.widget.TableLayout	25
13725	android.widget.TableRow	14
1924	android.widget.TextView	210
48883	android.widget.TextView.OnEditorActionListener	5
23976	android.widget.TimePicker	14
3041	android.widget.Toast	179
5545	android.widget.ToggleButton	45
2416	android:action="android.intent.action.VIEW"	37
47679	android:actionProviderClass="foo.bar.SomeActionProvider"	4
54438	android:actionViewClass="android.support.v7.widget.SearchView"	4
59864	android:actionViewClass="com.actionbarsherlock.widget.SearchView"	6
36742	android:addStatesFromChildren="true"	6
36696	android:adjustViewBounds="true"	6
53104	android:allowBackup="true">	2
53835	android:angle="0"	2
53888	android:angle="270"	2
53733	android:animateLayoutChanges="true"	13
11082	android:authorities="${applicationId	2
9945	android:authorities="org.gnucash.android.fileprovider"	4
29580	android:background="#000000"	3
27030	android:background="#111"/>	12
30338	android:background="#CCCCCC"	9
62592	android:background="?android:attr/activatedBackgroundIndicator"	3
36867	android:background="?attr/actionBarItemBackground"	4
36720	android:background="?attr/actionBarItemBackground">	6
37229	android:background="?attr/activatedBackgroundIndicator"	4
1712	android:background="?attr/colorPrimary"	30
37699	android:background="?attr/searchViewEditQueryBackground"	5
37743	android:background="?attr/searchViewTextField">	5
37514	android:background="?attr/searchViewTextFieldRight">	5
37408	android:background="?attr/selectableItemBackground"	5
34713	android:background="?attr/selectableItemBackgroundBorderless"	22
1357	android:background="@android:color/darker_gray"	34
20199	android:background="@android:color/transparent"	49
37664	android:background="@color/abs__holo_blue_light"	5
35357	android:background="@color/abs__holo_blue_light"/>	5
35320	android:background="@color/light_gray"/>	2
61314	android:background="@color/theme_accent"/>	3
34987	android:background="@color/theme_primary"	6
63598	android:background="@color/transparent"/>	4
30190	android:background="@drawable/abc_ab_share_pack_mtrl_alpha"	6
51360	android:background="@drawable/abs__ab_bottom_solid_light_holo"	6
9171	android:background="@drawable/appwidget_bg_clickable"	6
56986	android:background="@drawable/appwidget_dark_bg_clickable"	1
64179	android:background="@drawable/content_new"	3
23472	android:background="@drawable/content_new_holo_light"	9
35204	android:background="@drawable/ic_launcher"	7
63626	android:background="@drawable/numeric_button"	4
36710	android:background="@null"	9
36954	android:bottom="1dp"	5
63623	android:bottom="5dp"	4
53774	android:centerColor="#234"	2
54138	android:centerColor="#ee8600"	2
53912	android:centerY="0.75"	2
62106	android:checkMark="?android:attr/listChoiceIndicatorSingle"	3
21105	android:checkable="true"	23
1709	android:checkableBehavior="single">	5
31484	android:checked="false"	23
730	android:checked="true"	41
9789	android:checked="true"/>	29
26974	android:choiceMode="singleChoice"	12
37216	android:clickable="false"	6
23743	android:clickable="true"	49
63257	android:clickable="true"/>	6
54345	android:clipToPadding="false"	8
7115	android:codes="-5"	19
26824	android:codes="1001"	17
56637	android:codes="1002"	14
62348	android:codes="1003"	4
26779	android:codes="42"	14
26888	android:codes="43"	14
26702	android:codes="45"	14
26823	android:codes="46"	17
26950	android:codes="47"	14
26827	android:codes="48"	19
26956	android:codes="49"	16
26819	android:codes="50"	16
26713	android:codes="5001"	7
27026	android:codes="5002"	7
26711	android:codes="51"	16
27024	android:codes="52"	16
27016	android:codes="53"	16
26875	android:codes="54"	16
7374	android:codes="55"	18
26945	android:codes="55006"	7
6466	android:codes="56"	19
7144	android:codes="57"	19
53750	android:color="#D0CFCC"	2
36725	android:color="#F0A0A0A0"/>	5
36817	android:color="#F0FFFFFF"/>	5
33907	android:color="@android:color/transparent"	8
60365	android:color="@color/abc_primary_text_disable_only_material_dark"	7
36762	android:color="@color/abs__bright_foreground_disabled_holo_dark"/>	4
33882	android:color="@color/abs__bright_foreground_disabled_holo_light"	7
36804	android:color="@color/abs__bright_foreground_disabled_holo_light"/>	4
36904	android:color="@color/abs__bright_foreground_holo_dark"/>	4
36787	android:color="@color/abs__bright_foreground_holo_light"/>	4
33913	android:color="@color/abs__primary_text_disable_only_holo_dark"	7
63630	android:color="@color/credit_green"/>	4
33923	android:color="@color/default_line_indicator_selected_color"	8
63593	android:color="@color/theme_primary"	4
63613	android:color="@color/transparent"/>	4
60374	android:color="@color/vpi__bright_foreground_disabled_holo_light"	7
29986	android:completionThreshold="1"	3
3187	android:configChanges="orientation|keyboard">	7
19401	android:configChanges="orientation|screenSize"	6
747	android:configChanges="orientation|screenSize"/>	24
27932	android:configChanges="orientation|screenSize">	28
62277	android:configure="org.gnucash.android.ui.homescreen.WidgetConfigurationActivity"	3
56954	android:configure="org.gnucash.android.ui.widget.Configuration"	2
62263	android:configure="org.gnucash.android.ui.widget.WidgetConfigurationActivity"	4
37179	android:contentDescription="@string/abs__searchview_description_clear"	5
37595	android:contentDescription="@string/abs__searchview_description_query"	5
37457	android:contentDescription="@string/abs__searchview_description_search"	5
37242	android:contentDescription="@string/abs__searchview_description_submit"	5
37727	android:contentDescription="@string/abs__searchview_description_voice"	5
56898	android:contentDescription="@string/add_transaction_icon_description"/>	6
9778	android:contentDescription="@string/description_add_transaction_icon"/>	18
9896	android:contentDescription="@string/description_view_account_icon"/>	3
52942	android:contentDescription="Open	4
26063	android:cursorVisible="false"	11
30661	android:data="http://www.apache.org/licenses/LICENSE-2.0.html"	21
36372	android:data="http://www.gnu.org/licenses/gpl-2.0.html"	2
55157	android:data="https://crowdin.com/project/gnucash-android"	7
55142	android:data="https://plus.google.com/communities/104728406764752407046"/>	7
12447	android:data="mailto:gnucash.org@gmail.com"	5
2798	android:data="mailto:gnucash.org@gmail.com?subject=GnuCash	5
2921	android:data="market://details?id=org.gnucash.android"	16
26649	android:defaultValue="USD"/>	10
57028	android:defaultValue="false"	7
26697	android:defaultValue="true"	10
903	android:dependency="@string/key_enable_passcode"	13
64000	android:dependency="@string/key_use_double_entry"	2
25000	android:description="@string/description_permission_group"	9
59068	android:dialogTitle="@string/choose_currency"	4
27036	android:dialogTitle="@string/title_choose_currency"	17
54337	android:digits	5
54226	android:digits="0123456789.,"	5
51846	android:divider="?android:attr/dividerHorizontal"	1
36852	android:divider="?attr/actionBarDivider"	4
26845	android:divider="@android:color/transparent"	12
64009	android:divider="@null"	2
26789	android:dividerHeight="0dp"	12
36735	android:dividerPadding="12dip"	4
51339	android:drawSelectorOnTop="false"	11
18132	android:drawSelectorOnTop="false"/>	21
29486	android:drawable="@android:color/transparent"	7
60358	android:drawable="@drawable/abc_item_background_holo_light"	3
36876	android:drawable="@drawable/abs__btn_cab_done_default_holo_dark"	4
36950	android:drawable="@drawable/abs__btn_cab_done_default_holo_light"	4
36915	android:drawable="@drawable/abs__btn_cab_done_focused_holo_dark"	4
36928	android:drawable="@drawable/abs__btn_cab_done_focused_holo_light"	4
36791	android:drawable="@drawable/abs__btn_cab_done_pressed_holo_dark"	4
36873	android:drawable="@drawable/abs__btn_cab_done_pressed_holo_light"	4
36807	android:drawable="@drawable/abs__ic_clear_disabled"	5
36916	android:drawable="@drawable/abs__ic_clear_normal"	5
36990	android:drawable="@drawable/abs__ic_clear_search_api_disabled_holo_light"	5
36865	android:drawable="@drawable/abs__ic_clear_search_api_holo_light"	5
36977	android:drawable="@drawable/abs__ic_menu_moreoverflow_normal_holo_dark"	4
36926	android:drawable="@drawable/abs__ic_menu_moreoverflow_normal_holo_light"	4
23475	android:drawable="@drawable/abs__item_background_holo_light"	6
36947	android:drawable="@drawable/abs__list_activated_holo"	4
36976	android:drawable="@drawable/abs__list_focused_holo"	4
36875	android:drawable="@drawable/abs__list_longpressed_holo"	4
36920	android:drawable="@drawable/abs__list_pressed_holo_dark"	4
36741	android:drawable="@drawable/abs__list_pressed_holo_light"	4
36699	android:drawable="@drawable/abs__list_selector_background_transition_holo_dark"	4
36732	android:drawable="@drawable/abs__list_selector_background_transition_holo_light"	4
36836	android:drawable="@drawable/abs__list_selector_disabled_holo_dark"	4
36843	android:drawable="@drawable/abs__list_selector_disabled_holo_light"	4
36970	android:drawable="@drawable/abs__progress_bg_holo_dark"	4
36695	android:drawable="@drawable/abs__progress_bg_holo_light"	4
36801	android:drawable="@drawable/abs__progress_primary_holo_dark"	4
36933	android:drawable="@drawable/abs__progress_primary_holo_light"	4
36854	android:drawable="@drawable/abs__progress_secondary_holo_dark"	4
36969	android:drawable="@drawable/abs__progress_secondary_holo_light"	4
36942	android:drawable="@drawable/abs__spinner_48_inner_holo"	4
36985	android:drawable="@drawable/abs__spinner_48_outer_holo"	4
36988	android:drawable="@drawable/abs__spinner_ab_default_holo_dark"	4
36900	android:drawable="@drawable/abs__spinner_ab_default_holo_light"	4
36705	android:drawable="@drawable/abs__spinner_ab_disabled_holo_dark"	4
36838	android:drawable="@drawable/abs__spinner_ab_disabled_holo_light"	4
36744	android:drawable="@drawable/abs__spinner_ab_focused_holo_dark"	4
36927	android:drawable="@drawable/abs__spinner_ab_focused_holo_light"	4
36979	android:drawable="@drawable/abs__spinner_ab_pressed_holo_dark"	4
36769	android:drawable="@drawable/abs__spinner_ab_pressed_holo_light"	4
36995	android:drawable="@drawable/abs__tab_selected_focused_holo"	4
36731	android:drawable="@drawable/abs__tab_selected_holo"	4
36869	android:drawable="@drawable/abs__tab_selected_pressed_holo"	4
36780	android:drawable="@drawable/abs__tab_unselected_pressed_holo"	4
36910	android:drawable="@drawable/abs__textfield_search_default_holo_dark"	5
36880	android:drawable="@drawable/abs__textfield_search_default_holo_light"	5
36905	android:drawable="@drawable/abs__textfield_search_right_default_holo_dark"	5
36871	android:drawable="@drawable/abs__textfield_search_right_default_holo_light"	5
36824	android:drawable="@drawable/abs__textfield_search_right_selected_holo_dark"	5
36756	android:drawable="@drawable/abs__textfield_search_right_selected_holo_light"	5
36723	android:drawable="@drawable/abs__textfield_search_selected_holo_dark"	5
36811	android:drawable="@drawable/abs__textfield_search_selected_holo_light"	5
56841	android:drawable="@drawable/appwidget_bg"	1
56869	android:drawable="@drawable/appwidget_bg_focused"	1
56892	android:drawable="@drawable/appwidget_bg_pressed"	1
56975	android:drawable="@drawable/appwidget_dark_bg"	1
56887	android:drawable="@drawable/appwidget_dark_bg_focused"	1
29610	android:drawable="@drawable/appwidget_inner_focused_c"	3
29549	android:drawable="@drawable/appwidget_inner_focused_l"	3
29619	android:drawable="@drawable/appwidget_inner_focused_r"	3
29521	android:drawable="@drawable/appwidget_inner_pressed_c"	3
29566	android:drawable="@drawable/appwidget_inner_pressed_l"	3
29544	android:drawable="@drawable/appwidget_inner_pressed_r"	3
20656	android:drawableEnd="@drawable/content_split_holo_light"	22
32491	android:drawableEnd="@drawable/ic_arrow_drop_down_white_24dp"	3
59910	android:drawableLeft="@drawable/content_copy"	2
35416	android:drawableLeft="@drawable/content_new_holo_light"	8
30297	android:drawableLeft="@drawable/content_split_holo_light"	5
50737	android:drawableLeft="@drawable/ic_data_usage_white_24dp"	6
50772	android:drawableLeft="@drawable/ic_equalizer_white_24dp"	6
34999	android:drawableLeft="@drawable/ic_launcher"	11
63512	android:drawableLeft="@drawable/ic_nav_header"	4
24911	android:drawableLeft="@drawable/ic_subject_white_24dp"	11
50967	android:drawableLeft="@drawable/ic_trending_up_white_24dp"	6
51788	android:drawableLeft="@drawable/navigation_accept"	6
51782	android:drawableLeft="@drawable/navigation_accept_holo_light"	5
51771	android:drawableLeft="@drawable/navigation_cancel"	6
51840	android:drawableLeft="@drawable/navigation_cancel_holo_light"	5
37637	android:drawablePadding="0dip"	5
35209	android:drawablePadding="10dp"	11
21057	android:drawableRight="@drawable/content_split_holo_light"	20
32559	android:drawableRight="@drawable/ic_arrow_drop_down_white_24dp"	7
24867	android:drawableStart="@drawable/ic_subject_white_24dp"	11
50903	android:drawableStart="@drawable/ic_trending_up_white_24dp"	6
37119	android:dropDownAnchor="@id/abs__search_edit_frame"	5
37355	android:dropDownHeight="wrap_content"	5
37396	android:dropDownHorizontalOffset="0dip"	5
37569	android:dropDownVerticalOffset="0dip"	5
37563	android:duplicateParentState="true"	5
37134	android:duplicateParentState="true">	4
19386	android:ellipsize="end"	42
29570	android:ellipsize="marquee"	17
63782	android:ellipsize="marquee"/>	2
29115	android:ellipsize="middle"	5
36921	android:ellipsize="none"	4
27447	android:ellipsize="start"	36
18483	android:ems="10"	13
27261	android:ems="15"	21
26149	android:enabled="false"	29
36982	android:enabled="false">	4
9022	android:enabled="true"	12
53946	android:endColor="#a24"	2
53800	android:endColor="#e00404"	2
3709	android:entries="@array/currency_names"	26
51547	android:entries="@array/export_formats"	5
57119	android:entries="@array/key_currency_codes"	6
4830	android:entries="@array/transaction_types"	15
26614	android:entryValues="@array/currency_codes"	4
2770	android:entryValues="@array/currency_codes"/>	20
34602	android:entryValues="@array/currency_codes"/><CheckBoxPreference	2
57034	android:entryValues="@array/key_currency_codes"	11
57162	android:entryValues="@array/key_currency_codes"/>	8
51434	android:entryValues="@array/key_export_format_values"	5
6292	android:entryValues="@array/key_transaction_type_values"	13
5474	android:entryValues="@array/transaction_types"	6
34445	android:excludeFromRecents="true">	11
3569	android:exported="false"	19
62542	android:exported="false"/>	3
62541	android:exported="false">	2
54738	android:exported="true">	5
37057	android:fadingEdge="horizontal"	5
36993	android:fitsSystemWindows="true"	16
36707	android:fitsSystemWindows="true">	7
23765	android:focusable="false"	41
24676	android:focusable="true"	42
25964	android:focusableInTouchMode="false"	11
54487	android:focusableInTouchMode="true"	15
28995	android:focusableInTouchMode="true">	10
63110	android:fontFamily="sans-serif"	3
36726	android:foreground="?attr/windowContentOverlay"	7
37381	android:foreground="?attr/windowContentOverlay">	5
24664	android:foreground="?selectableItemBackground"	24
36914	android:foregroundGravity="fill_horizontal|top"	7
2053	android:fragment="org.gnucash.android.ui.settings.AboutPreferenceFragment"	22
770	android:fragment="org.gnucash.android.ui.settings.AccountPreferencesFragment"	11
1302	android:fragment="org.gnucash.android.ui.settings.BackupPreferenceFragment"	7
5770	android:fragment="org.gnucash.android.ui.settings.ChartPreferenceFragment"	3
1807	android:fragment="org.gnucash.android.ui.settings.GeneralPreferenceFragment"	13
682	android:fragment="org.gnucash.android.ui.settings.PasscodePreferenceFragment"	11
2148	android:fragment="org.gnucash.android.ui.settings.ReportPreferenceFragment"	5
63600	android:fragment="org.gnucash.android.ui.settings.SettingsActivity$AboutPreferenceFragment"	3
63249	android:fragment="org.gnucash.android.ui.settings.SettingsActivity$GeneralPreferenceFragment"	4
621	android:fragment="org.gnucash.android.ui.settings.TransactionsPreferenceFragment"	16
36755	android:fromDegrees="0"	4
36945	android:fromDegrees="720"	4
9419	android:grantUriPermissions="true">	4
531	android:gravity="bottom"	18
463	android:gravity="center"	102
37711	android:gravity="center"/>	4
26624	android:gravity="center">	14
24870	android:gravity="center_horizontal"	5
24869	android:gravity="center_horizontal">	5
63872	android:gravity="center_horizontal|center_vertical"	1
24804	android:gravity="center_horizontal|center_vertical">	6
991	android:gravity="center_vertical"	93
23080	android:gravity="center_vertical">	14
37210	android:gravity="center_vertical|left"	4
62018	android:gravity="center_vertical|right"	3
20185	android:gravity="center|left"	5
18502	android:gravity="center|right"	10
33342	android:gravity="end|center_vertical"	16
31832	android:gravity="left"	16
34591	android:gravity="left|bottom|start"	8
28320	android:gravity="left|center_vertical"	6
54141	android:gravity="left|start"	4
21385	android:gravity="right"	33
34820	android:gravity="right|bottom|end"	4
30313	android:gravity="right|center_vertical"	32
54052	android:gravity="right|end"	2
3919	android:gravity="top"	30
36706	android:gravity="top">	7
63608	android:hapticFeedbackEnabled="true"	4
1368	android:hint=""	5
25922	android:hint="*"	11
28640	android:hint="@string/hint_account_description">	6
29065	android:hint="@string/hint_converted_amount">	5
28662	android:hint="@string/hint_exchange_rate"/>	6
33351	android:hint="@string/hint_split_memo"	10
27183	android:hint="@string/label_account_name"	14
51370	android:hint="@string/label_account_name">	3
18308	android:hint="@string/label_transaction_amount"	45
20419	android:hint="@string/label_transaction_description"	17
18242	android:hint="@string/label_transaction_name"	29
63092	android:hint="@string/owncloud_server"	3
63152	android:hint="@string/password"	3
29409	android:hint="@string/transaction_description"	5
63142	android:hint="@string/username"	3
61889	android:hint="Account	5
53725	android:hint="Budget	5
29066	android:hint="Converted	10
54188	android:hint="Description"	5
28960	android:hint="Exchange	12
62341	android:horizontalGap="14.2%p"	4
56621	android:horizontalGap="20%"	10
26901	android:horizontalGap="40%"	8
26757	android:horizontalGap="6.25%p"	7
25322	android:host="*"	6
27643	android:icon="@android:drawable/btn_star_big_off"	12
9486	android:icon="@drawable/abc_ic_search_api_mtrl_alpha"	6
59873	android:icon="@drawable/abs__ic_search"	6
63601	android:icon="@drawable/action_about_holo_light"	3
18306	android:icon="@drawable/action_settings"	20
63212	android:icon="@drawable/action_settings_holo_light"	4
13321	android:icon="@drawable/chart_icon"	12
29327	android:icon="@drawable/content_copy"	3
54427	android:icon="@drawable/content_copy_holo_dark"	10
29210	android:icon="@drawable/content_discard"	3
34220	android:icon="@drawable/content_discard_holo_dark"	15
59573	android:icon="@drawable/content_edit"	5
20015	android:icon="@drawable/content_edit_holo_dark"	29
54189	android:icon="@drawable/content_event_holo_dark"	9
59589	android:icon="@drawable/content_import_export"	4
54229	android:icon="@drawable/content_import_export_holo_dark"	10
7095	android:icon="@drawable/content_import_export_holo_light"	14
29338	android:icon="@drawable/content_new"	5
6668	android:icon="@drawable/content_new_holo_dark"	28
54354	android:icon="@drawable/ic_action_forward"	2
30401	android:icon="@drawable/ic_add_white_24dp"	13
31878	android:icon="@drawable/ic_backup_black_24dp"	5
54384	android:icon="@drawable/ic_dashboard_black_24dp"	4
51707	android:icon="@drawable/ic_dropbox_android"	6
31727	android:icon="@drawable/ic_equalizer_black_24dp"	7
24850	android:icon="@drawable/ic_filter_list_white_24dp"	6
31927	android:icon="@drawable/ic_folder_open_black_24dp"	5
51596	android:icon="@drawable/ic_google_drive"	8
54249	android:icon="@drawable/ic_help_black_24dp"	5
2500	android:icon="@drawable/ic_launcher"	34
63153	android:icon="@drawable/ic_owncloud"	3
9983	android:icon="@drawable/ic_search_white_24dp"	2
32015	android:icon="@drawable/ic_settings_backup_restore_black_24dp"	5
31692	android:icon="@drawable/ic_settings_black_24dp"	8
31481	android:icon="@drawable/ic_star_black_24dp"	7
55087	android:icon="@drawable/ic_star_border_white_24dp"	6
55091	android:icon="@drawable/ic_star_border_white_48dp"	4
48163	android:icon="@drawable/my_menu_item_icon"	4
64234	android:icon="@drawable/navigation_accept"	2
20308	android:icon="@drawable/navigation_accept_holo_dark"	7
63225	android:icon="@drawable/navigation_cancel"	3
21084	android:icon="@drawable/navigation_cancel_holo_dark"	7
53975	android:id/text1	5
36721	android:id="@+id/abs__action_bar"	7
36952	android:id="@+id/abs__action_bar_container"	7
36940	android:id="@+id/abs__action_bar_subtitle"	4
36752	android:id="@+id/abs__action_bar_title"	4
36912	android:id="@+id/abs__action_context_bar"	7
37640	android:id="@+id/abs__action_mode_bar_stub"	4
36882	android:id="@+id/abs__action_mode_close_button"	6
37304	android:id="@+id/abs__activity_chooser_view_content"	5
37067	android:id="@+id/abs__checkbox"	4
36819	android:id="@+id/abs__content"	7
37106	android:id="@+id/abs__default_activity_button"	4
37064	android:id="@+id/abs__expand_activities_button"	4
37120	android:id="@+id/abs__icon"	5
37180	android:id="@+id/abs__image"	4
36834	android:id="@+id/abs__imageButton"	4
37122	android:id="@+id/abs__list_item"	4
37407	android:id="@+id/abs__radio"	4
37579	android:id="@+id/abs__search_badge"	5
37558	android:id="@+id/abs__search_bar"	5
37066	android:id="@+id/abs__search_button"	5
37267	android:id="@+id/abs__search_close_btn"	5
37575	android:id="@+id/abs__search_edit_frame"	5
37145	android:id="@+id/abs__search_go_btn"	5
37118	android:id="@+id/abs__search_mag_icon"	5
37730	android:id="@+id/abs__search_plate"	5
37254	android:id="@+id/abs__search_src_text"	5
37520	android:id="@+id/abs__search_voice_btn"	5
37157	android:id="@+id/abs__shortcut"	4
37025	android:id="@+id/abs__split_action_bar"	4
37291	android:id="@+id/abs__submit_area"	5
36722	android:id="@+id/abs__textButton"	4
37285	android:id="@+id/abs__title"	5
37622	android:id="@+id/abs__titleDivider"	4
21745	android:id="@+id/account_balance"	10
30465	android:id="@+id/account_balance_toolbar"	6
27347	android:id="@+id/account_color_strip"	14
21667	android:id="@+id/account_name"	9
30243	android:id="@+id/account_recycler_view"	15
51835	android:id="@+id/accounts_list_spinner"	4
33762	android:id="@+id/accounts_options"	3
64269	android:id="@+id/accounts_spinner"	2
24266	android:id="@+id/add_account_button"	10
24318	android:id="@+id/add_preference_button"	11
59052	android:id="@+id/add_transaction_button"	4
31504	android:id="@+id/amount_to_convert"	9
21677	android:id="@+id/assets_card"	8
61990	android:id="@+id/balance_credit"	3
62011	android:id="@+id/balance_debit"	3
1163	android:id="@+id/bar_chart"	15
24842	android:id="@+id/bar_chart_button"	9
34927	android:id="@+id/book_name"	8
54279	android:id="@+id/btn_add_budget_amount"	5
33442	android:id="@+id/btn_add_split"	14
61862	android:id="@+id/btn_balance_sheet"	5
50618	android:id="@+id/btn_bar_chart"	6
51756	android:id="@+id/btn_cancel"	12
31589	android:id="@+id/btn_fetch_exchange_rate"	9
50798	android:id="@+id/btn_line_chart"	4
59897	android:id="@+id/btn_move"	2
24054	android:id="@+id/btn_new_transaction"	14
30299	android:id="@+id/btn_open_splits"	6
50730	android:id="@+id/btn_pie_chart"	4
54308	android:id="@+id/btn_remove_item"	2
35364	android:id="@+id/btn_remove_split"	5
51830	android:id="@+id/btn_save"	12
52730	android:id="@+id/btn_split_editor"	4
35310	android:id="@+id/btn_split_type"	17
50848	android:id="@+id/btn_text_report"	5
9538	android:id="@+id/btn_view_account"	3
54055	android:id="@+id/budget_account"	2
54038	android:id="@+id/budget_account_layout"	2
53805	android:id="@+id/budget_amount"	4
57465	android:id="@+id/budget_amount_layout"	3
53858	android:id="@+id/budget_amount_recycler"	2
54236	android:id="@+id/budget_amount_table_layout"	5
53982	android:id="@+id/budget_chart"	2
53898	android:id="@+id/budget_indicator"	2
53795	android:id="@+id/budget_info_table"	5
54117	android:id="@+id/budget_left"	2
53838	android:id="@+id/budget_progress_layout"	2
54151	android:id="@+id/budget_recurrence"	4
54465	android:id="@+id/budget_recycler_view"	2
53938	android:id="@+id/budget_spent"	2
52758	android:id="@+id/calculator_keyboard"	19
56532	android:id="@+id/calendar_view"	3
28980	android:id="@+id/card_report_summary_chart"	7
21364	android:id="@+id/card_total"	8
26676	android:id="@+id/chart"	13
138	android:id="@+id/chart_data_spinner"	19
24679	android:id="@+id/chart_date"	10
27472	android:id="@+id/checkbox"	16
27182	android:id="@+id/checkbox_default_transfer_account"	3
27888	android:id="@+id/checkbox_delete_sub_accounts"	5
34618	android:id="@+id/checkbox_export_all"	16
27268	android:id="@+id/checkbox_parent_account"	10
27116	android:id="@+id/checkbox_placeholder_account"	7
30998	android:id="@+id/checkbox_post_export_delete"	17
2732	android:id="@+id/checkbox_save_template"	16
28883	android:id="@+id/checkbox_transaction"	6
27597	android:id="@+id/color_picker"	3
27386	android:id="@+id/color_picker_checkmark"	3
27158	android:id="@+id/color_picker_swatch"	3
29298	android:id="@+id/context_menu_delete"	17
59645	android:id="@+id/context_menu_duplicate_transaction"	3
54343	android:id="@+id/context_menu_edit_accounts"	12
54363	android:id="@+id/context_menu_edit_budget"	2
59634	android:id="@+id/context_menu_move_transaction"	3
29455	android:id="@+id/context_menu_move_transactions"	12
31580	android:id="@+id/converted_amount_text_input_layout"	7
30218	android:id="@+id/coordinatorLayout"	8
60556	android:id="@+id/create_transaction"	3
54561	android:id="@+id/ctx_menu_delete_book"	2
34534	android:id="@+id/ctx_menu_rename_book"	3
34689	android:id="@+id/ctx_menu_sync_book"	6
1914	android:id="@+id/currency_symbol"	29
628	android:id="@+id/date_range_divider"	10
1718	android:id="@+id/date_range_recyclerview"	6
29562	android:id="@+id/date_section_header"	12
33341	android:id="@+id/default_buttons"	10
54585	android:id="@+id/delete_book"	4
26164	android:id="@+id/delete_btn"	16
62614	android:id="@+id/description"	2
61909	android:id="@+id/description_input_layout"	3
24672	android:id="@+id/drawer_layout"	25
35002	android:id="@+id/drawer_title"	10
37709	android:id="@+id/edit_query"	5
27520	android:id="@+id/edit_text_account_name"	10
60674	android:id="@+id/edit_transaction"	3
25882	android:id="@+id/eight_btn"	13
63619	android:id="@+id/eight_btn">	4
26077	android:id="@+id/empty_btn"	13
29084	android:id="@+id/empty_view"	8
21250	android:id="@+id/equity_card"	6
31888	android:id="@+id/exchange_rate_text_input_layout"	7
63245	android:id="@+id/export_date_layout"	3
63216	android:id="@+id/export_start_date"	3
63218	android:id="@+id/export_start_time"	3
34551	android:id="@+id/export_warning"	12
1325	android:id="@+id/fab_create_account"	11
54030	android:id="@+id/fab_create_budget"	2
30266	android:id="@+id/fab_create_transaction"	10
1755	android:id="@+id/fab_edit_transaction"	12
60598	android:id="@+id/favorite_status"	3
25899	android:id="@+id/five_btn"	13
63622	android:id="@+id/five_btn">	4
33290	android:id="@+id/footer"	14
25953	android:id="@+id/four_btn"	13
63603	android:id="@+id/four_btn">	4
26094	android:id="@+id/four_to_six"	13
28989	android:id="@+id/fragment_account_form"	4
28802	android:id="@+id/fragment_account_list"	8
54440	android:id="@+id/fragment_budget_list"	2
722	android:id="@+id/fragment_container"	43
57639	android:id="@+id/fragment_transaction_details"	7
8	android:id="@+id/fragment_transaction_form"	22
28763	android:id="@+id/fragment_transaction_list"	8
60212	android:id="@+id/fragment_view"	3
31967	android:id="@+id/from_currency"	7
1025	android:id="@+id/group_all_time"	5
1317	android:id="@+id/group_by_month"	8
24713	android:id="@+id/group_by_quarter"	6
1131	android:id="@+id/group_by_week"	5
663	android:id="@+id/group_by_year"	8
64314	android:id="@+id/icon_add_transaction"	1
57423	android:id="@+id/imbalance_layout"	6
35331	android:id="@+id/imbalance_textview"	12
61903	android:id="@+id/input_account_description"	3
28766	android:id="@+id/input_account_name"	5
27170	android:id="@+id/input_account_type_spinner"	16
33463	android:id="@+id/input_accounts_spinner"	15
55478	android:id="@+id/input_book_title"	2
50835	android:id="@+id/input_books_spinner"	3
54447	android:id="@+id/input_budget_account_spinner"	2
54505	android:id="@+id/input_budget_amount"	5
54043	android:id="@+id/input_budget_name"	5
27217	android:id="@+id/input_color_picker"	3
31667	android:id="@+id/input_converted_amount"	9
27383	android:id="@+id/input_currency_spinner"	12
20484	android:id="@+id/input_date"	16
27321	android:id="@+id/input_default_transfer_account"	3
20773	android:id="@+id/input_description"	21
2390	android:id="@+id/input_double_entry_accounts_spinner"	19
31818	android:id="@+id/input_exchange_rate"	10
10064	android:id="@+id/input_hide_account_balance"	2
27421	android:id="@+id/input_parent_account"	7
20169	android:id="@+id/input_recurrence"	27
18200	android:id="@+id/input_recurring_transaction_spinner"	5
9749	android:id="@+id/input_should_display_balance"	4
51297	android:id="@+id/input_split_accounts_spinner"	3
35397	android:id="@+id/input_split_amount"	11
33300	android:id="@+id/input_split_memo"	10
57478	android:id="@+id/input_start_date"	4
30406	android:id="@+id/input_time"	14
23503	android:id="@+id/input_transaction_amount"	20
64276	android:id="@+id/input_transaction_date"	2
20544	android:id="@+id/input_transaction_name"	21
20697	android:id="@+id/input_transaction_type"	28
31674	android:id="@+id/input_transfer_account_spinner"	6
24826	android:id="@+id/item_date_range"	5
34114	android:id="@+id/keypad"	6
51010	android:id="@+id/label_account"	8
50790	android:id="@+id/label_book"	3
54242	android:id="@+id/label_budgeted_accounts_header"	5
27161	android:id="@+id/label_default_transfer_account"	3
18294	android:id="@+id/label_description"	10
29156	android:id="@+id/label_exchange_rate_example"	15
63227	android:id="@+id/label_export_date"	6
25730	android:id="@+id/label_export_format"	11
34594	android:id="@+id/label_last_sync"	7
54042	android:id="@+id/label_left"	2
27563	android:id="@+id/label_parent_account"	9
18544	android:id="@+id/label_recurring_transaction"	15
54134	android:id="@+id/label_spent"	2
51310	android:id="@+id/label_split_account"	3
30145	android:id="@+id/label_sum"	5
18252	android:id="@+id/label_timeanddate"	9
54143	android:id="@+id/labels_layout"	2
34548	android:id="@+id/last_sync_time"	5
27385	android:id="@+id/layout_color_type"	3
27361	android:id="@+id/layout_default_transfer_account"	3
3102	android:id="@+id/layout_double_entry"	24
30341	android:id="@+id/layout_open_splits"	4
27356	android:id="@+id/layout_parent_account"	9
26857	android:id="@+id/left_drawer"	12
21914	android:id="@+id/liabilities_card"	8
24963	android:id="@+id/line_chart"	9
24936	android:id="@+id/line_chart_button"	9
1262	android:id="@+id/listFragment"	3
59549	android:id="@+id/list_checkbox"	2
53825	android:id="@+id/list_item_2_lines"	14
19785	android:id="@+id/menu_add_account"	19
57408	android:id="@+id/menu_add_budget_amount"	3
54392	android:id="@+id/menu_add_scheduled_export"	8
56687	android:id="@+id/menu_add_split"	4
27896	android:id="@+id/menu_add_transaction"	14
20393	android:id="@+id/menu_cancel"	9
13976	android:id="@+id/menu_chart_report"	4
63937	android:id="@+id/menu_compact_trn_view"	7
30200	android:id="@+id/menu_create_book"	3
19782	android:id="@+id/menu_edit_account"	17
59600	android:id="@+id/menu_edit_accounts"	4
54237	android:id="@+id/menu_edit_budget"	2
6605	android:id="@+id/menu_export"	19
27788	android:id="@+id/menu_favorite_account"	16
54476	android:id="@+id/menu_goto_account"	2
24690	android:id="@+id/menu_group_other_slice"	8
24889	android:id="@+id/menu_group_reports_by"	6
5899	android:id="@+id/menu_order_by_size"	9
24624	android:id="@+id/menu_percentage_mode"	8
33701	android:id="@+id/menu_pie_chart"	6
6868	android:id="@+id/menu_recurring_transactions"	18
13294	android:id="@+id/menu_reports"	8
20877	android:id="@+id/menu_save"	15
9309	android:id="@+id/menu_search"	9
34868	android:id="@+id/menu_settings"	13
24650	android:id="@+id/menu_toggle_average_lines"	8
20586	android:id="@+id/menu_toggle_labels"	15
4555	android:id="@+id/menu_toggle_legend"	15
47751	android:id="@+id/my_menu_item"	4
53844	android:id="@+id/name_text_input_layout"	8
54301	android:id="@+id/nav_item_budgets"	4
31843	android:id="@+id/nav_item_export"	12
31600	android:id="@+id/nav_item_favorites"	14
54411	android:id="@+id/nav_item_help"	5
31629	android:id="@+id/nav_item_open"	12
31922	android:id="@+id/nav_item_reports"	14
54702	android:id="@+id/nav_item_scheduled_actions"	3
31560	android:id="@+id/nav_item_scheduled_export"	12
31957	android:id="@+id/nav_item_scheduled_trn"	12
31588	android:id="@+id/nav_item_settings"	17
35119	android:id="@+id/nav_section_accounts"	12
35079	android:id="@+id/nav_section_settings"	11
35203	android:id="@+id/nav_section_transactions"	7
30210	android:id="@+id/nav_view"	17
21427	android:id="@+id/net_worth"	6
24701	android:id="@+id/next_month_chart_button"	11
26087	android:id="@+id/nine_btn"	13
63586	android:id="@+id/nine_btn">	4
25962	android:id="@+id/one_btn"	13
63615	android:id="@+id/one_btn">	4
26102	android:id="@+id/one_to_three"	11
34661	android:id="@+id/options_menu"	18
63140	android:id="@+id/owncloud_dir"	3
63168	android:id="@+id/owncloud_dir_invalid"	3
63121	android:id="@+id/owncloud_hostname"	3
63167	android:id="@+id/owncloud_hostname_invalid"	3
63098	android:id="@+id/owncloud_password"	3
63091	android:id="@+id/owncloud_username"	3
63127	android:id="@+id/owncloud_username_invalid"	3
19454	android:id="@+id/pager"	22
26118	android:id="@+id/pass_label"	7
252	android:id="@+id/passcode"	5
25837	android:id="@+id/passcode1"	13
25904	android:id="@+id/passcode2"	9
26014	android:id="@+id/passcode3"	9
25813	android:id="@+id/passcode4"	9
581	android:id="@+id/passcodeLabel"	5
26072	android:id="@+id/passcode_label"	11
26703	android:id="@+id/pie_chart"	8
24786	android:id="@+id/pie_chart_button"	9
24741	android:id="@+id/previous_month_chart_button"	10
30427	android:id="@+id/primary_text"	9
23286	android:id="@+id/progress_indicator"	6
31544	android:id="@+id/radio_converted_amount"	7
62638	android:id="@+id/radio_delete"	2
31775	android:id="@+id/radio_exchange_rate"	10
62603	android:id="@+id/radio_move"	2
34550	android:id="@+id/radio_ofx_format"	11
34694	android:id="@+id/radio_qif_format"	9
34619	android:id="@+id/radio_xml_format"	8
34579	android:id="@+id/recurrence_options"	11
1218	android:id="@+id/report_account_type_spinner"	8
1679	android:id="@+id/report_currency_spinner"	8
23296	android:id="@+id/report_type_spinner"	7
33709	android:id="@+id/right_text"	2
61978	android:id="@+id/row_amount"	4
265	android:id="@+id/row_time_and_date"	9
1086	android:id="@+id/row_transfer_account"	6
1435	android:id="@+id/row_trn_notes"	7
1014	android:id="@+id/row_trn_recurrence"	7
54246	android:id="@+id/scroll_view"	5
30148	android:id="@+id/secondary_text"	9
20029	android:id="@+id/section_header_sub_accounts"	7
19561	android:id="@+id/section_header_transactions"	16
26866	android:id="@+id/selected_chart_slice"	11
26150	android:id="@+id/seven_btn"	13
63620	android:id="@+id/seven_btn">	4
26170	android:id="@+id/seven_to_nine"	13
24032	android:id="@+id/sign"	2
26115	android:id="@+id/six_btn"	13
63629	android:id="@+id/six_btn">	4
57063	android:id="@+id/slidingpane_layout">	3
34644	android:id="@+id/spinner_export_destination"	11
23101	android:id="@+id/spinner_toolbar"	9
61983	android:id="@+id/split_account_name"	4
61954	android:id="@+id/split_credit"	4
35346	android:id="@+id/split_currency_symbol"	2
61958	android:id="@+id/split_debit"	4
35268	android:id="@+id/split_list_layout"	13
35272	android:id="@+id/split_uid"	2
62255	android:id="@+id/strip"	3
2558	android:id="@+id/sub_accounts_container"	11
63237	android:id="@+id/switch_export_all"	6
23274	android:id="@+id/tab_layout"	17
21350	android:id="@+id/table_assets"	3
21799	android:id="@+id/table_equity"	3
21877	android:id="@+id/table_liabilities"	3
28771	android:id="@+id/target_accounts_spinner"	8
31907	android:id="@+id/target_currency"	7
31234	android:id="@+id/target_uri"	2
24926	android:id="@+id/textView"	6
33412	android:id="@+id/textinputlayout"	11
26038	android:id="@+id/three_btn"	13
63585	android:id="@+id/three_btn">	4
623	android:id="@+id/time_range_layout"	8
1341	android:id="@+id/time_range_spinner"	16
62634	android:id="@+id/title_content"	2
19921	android:id="@+id/titles"	13
32000	android:id="@+id/to_currency"	7
23086	android:id="@+id/toolbar"	17
923	android:id="@+id/toolbar_actionbar"	7
23312	android:id="@+id/toolbar_layout"	6
23295	android:id="@+id/toolbar_progress"	10
23064	android:id="@+id/toolbar_spinner"	3
714	android:id="@+id/toolbar_transaction_info"	9
21866	android:id="@+id/total_assets"	6
21613	android:id="@+id/total_liabilities"	6
21532	android:id="@+id/total_liability_and_equity"	9
58748	android:id="@+id/transaction_account"	6
144	android:id="@+id/transaction_amount"	26
34730	android:id="@+id/transaction_date"	4
29375	android:id="@+id/transaction_name"	8
30458	android:id="@+id/transaction_note"	6
30240	android:id="@+id/transaction_recycler_view"	14
2794	android:id="@+id/transactions_container"	10
33814	android:id="@+id/transactions_options"	3
28372	android:id="@+id/transactions_sum"	6
8358	android:id="@+id/transactions_sum_bar"	15
30418	android:id="@+id/transactions_summary"	10
63858	android:id="@+id/transactions_summary_bar"	1
988	android:id="@+id/trn_description"	9
1961	android:id="@+id/trn_notes"	7
1041	android:id="@+id/trn_recurrence"	7
557	android:id="@+id/trn_time_and_date"	3
270	android:id="@+id/trn_transfer_account"	6
25769	android:id="@+id/two_btn"	13
63587	android:id="@+id/two_btn">	4
30394	android:id="@+id/vertical_line"	9
56903	android:id="@+id/widget_layout"	1
26160	android:id="@+id/zero"	13
64307	android:id="@+id/zero"+	1
25937	android:id="@+id/zero_btn"	13
63596	android:id="@+id/zero_btn">	4
36883	android:id="@android:id/background"	4
54006	android:id="@android:id/background">	2
37450	android:id="@android:id/icon1"	5
37235	android:id="@android:id/icon2"	5
28875	android:id="@android:id/list"	6
27534	android:id="@android:id/progress"	3
36751	android:id="@android:id/progress">	6
36800	android:id="@android:id/secondaryProgress">	6
29579	android:id="@android:id/text1"	26
37577	android:id="@android:id/text2"	5
37044	android:id="@android:id/title"	4
36956	android:id="@id/abs__home"	4
36700	android:id="@id/abs__up"	4
18184	android:id="@id/android:empty"	24
7827	android:id="@id/android:list"	23
54402	android:imeOptions="actionDone"	5
18254	android:imeOptions="actionNext"	30
37226	android:imeOptions="actionSearch"	5
53850	android:indeterminate="false"	2
23045	android:indeterminate="true"	14
37661	android:inflatedId="@+id/abs__action_mode_bar"	4
56874	android:initialLayout="@layout/widget_4x1"	5
52894	android:inputType="none"	22
981	android:inputType="number"	38
29171	android:inputType="numberDecimal"	14
26109	android:inputType="numberPassword"	5
63767	android:inputType="numberSigned"	3
56623	android:inputType="text"	11
18052	android:inputType="textCapSentences"	37
19315	android:inputType="textCapWords"	19
20811	android:inputType="textEmailAddress"/>	14
29190	android:inputType="textMultiLine"	8
20961	android:inputType="textMultiLine|textCapSentences"	32
34121	android:inputType="textPassword|number"	9
63115	android:inputType="textUri"	3
63129	android:inputType="textWebPassword"	3
37001	android:inputType="text|textAutoComplete|textNoSuggestions"	5
7124	android:isRepeatable="true"	19
30577	android:key="@string/key_about"	19
55089	android:key="@string/key_about_gnucash"	7
55398	android:key="@string/key_backup_location"	4
30614	android:key="@string/key_build_version"	21
1344	android:key="@string/key_change_passcode"	13
5936	android:key="@string/key_chart_currency"	3
51674	android:key="@string/key_create_backup"	7
2266	android:key="@string/key_create_default_accounts"	11
30907	android:key="@string/key_default_currency"	12
30726	android:key="@string/key_default_export_email"	16
52315	android:key="@string/key_default_export_format"	3
4530	android:key="@string/key_default_transaction_type"	17
2771	android:key="@string/key_delete_all_accounts"	13
2869	android:key="@string/key_delete_all_transactions"	13
20639	android:key="@string/key_delete_transactions_after_export"	15
51699	android:key="@string/key_dropbox_sync"	6
25307	android:key="@string/key_enable_crashlytics"	13
1017	android:key="@string/key_enable_passcode"	13
20659	android:key="@string/key_export_all_transactions"	15
51646	android:key="@string/key_google_drive_sync"	8
3936	android:key="@string/key_import_accounts"	22
30558	android:key="@string/key_license">	22
63171	android:key="@string/key_owncloud_sync"	3
34489	android:key="@string/key_prefs_header_general"	7
6019	android:key="@string/key_report_currency"	7
25040	android:key="@string/key_restore_backup"	10
51431	android:key="@string/key_restore_last_backup"	5
57049	android:key="@string/key_save_opening_balances"	8
20461	android:key="@string/key_sgml_ofx_header"	4
1393	android:key="@string/key_use_account_color"	6
57094	android:key="@string/key_use_compact_list"	5
2693	android:key="@string/key_use_double_entry"	18
25270	android:key="@string/key_xml_ofx_header"	12
63201	android:key="@string/pref_default_currency"	3
6735	android:keyEdgeFlags="left"	20
59479	android:keyEdgeFlags="left"/>	7
26620	android:keyEdgeFlags="right"	19
59358	android:keyEdgeFlags="right"/>	9
56626	android:keyHeight="10%p">	11
59485	android:keyHeight="15%p">	10
7033	android:keyIcon="@drawable/ic_action_backspace"	10
7229	android:keyIcon="@drawable/ic_backspace_normal_dark"	14
59351	android:keyIcon="@drawable/ic_chevron_right_white_24dp"	9
56620	android:keyIcon="@drawable/navigation_next_item"	5
26936	android:keyLabel="*"	14
26807	android:keyLabel="+"	14
26665	android:keyLabel="-"	14
26997	android:keyLabel="."	19
26855	android:keyLabel="/"	14
26630	android:keyLabel="0"	19
26928	android:keyLabel="1"	16
26802	android:keyLabel="2"	16
26679	android:keyLabel="3"	16
26653	android:keyLabel="4"	16
27013	android:keyLabel="5"	16
26878	android:keyLabel="6"	16
6742	android:keyLabel="7"	18
7080	android:keyLabel="8"	19
6918	android:keyLabel="9"	19
26851	android:keyLabel="="	19
62324	android:keyLabel="C"	4
26968	android:keyLabel="CLR"	7
56627	android:keyOutputText	8
62362	android:keyWidth="14.2%p"	4
56613	android:keyWidth="20%p"	12
59460	android:keyWidth="25%p"	8
12150	android:label="@string/app_name"	36
23952	android:label="@string/app_name">	28
51800	android:label="@string/label_permission_create_account"	7
30981	android:label="@string/label_permission_create_accounts"	11
25382	android:label="@string/label_permission_group"	10
51829	android:label="@string/label_permission_record_transaction"	7
51766	android:label="@string/label_permission_record_transactions"	10
19754	android:label="@string/label_widget_configuration"	18
12164	android:label="@string/permission_access_sdcard"	18
51795	android:label="@string/permission_create_accounts"	2
51753	android:label="@string/permission_record_transactions"	2
31251	android:label="Allow	11
54724	android:label="Creates	5
9197	android:label="Dropbox	7
2985	android:label="Export	6
3333	android:label="GnuCash	15
34218	android:label="Records	10
3064	android:label="Schedule	8
62543	android:label="Schedules	2
2813	android:launchMode="singleTask"	8
53082	android:launchMode="singleTop"/>	16
26195	android:launchMode="singleTop">	8
19773	android:launchMode="singleTop"></activity>	7
63566	android:launchMode="singleTop"></activity><activity	2
37084	android:layout="@layout/abs__action_mode_bar"	4
52811	android:layout_above="@+id/calculator_keyboard"	7
35317	android:layout_above="@+id/footer">	10
25997	android:layout_above="@+id/four_to_six"	7
25849	android:layout_above="@+id/seven_to_nine"	7
26137	android:layout_above="@+id/zero"	7
37143	android:layout_above="@android:id/text2"	5
30284	android:layout_above="@id/account_balance_toolbar"	9
33421	android:layout_above="@id/btn_add_split">	9
54195	android:layout_above="@id/calculator_keyboard"	5
33474	android:layout_above="@id/default_buttons">	10
33319	android:layout_above="@id/footer"/>	11
1093	android:layout_above="@id/transactions_sum_bar"	22
63855	android:layout_above="@id/transactions_summary_bar"	1
53741	android:layout_alignBottom="@id/options_menu"	8
34539	android:layout_alignLeft="@id/list_item_2_lines"	8
140	android:layout_alignParentBottom="true"	66
33306	android:layout_alignParentBottom="true"/>	10
30273	android:layout_alignParentEnd="true"	29
35006	android:layout_alignParentLeft="true"	29
60630	android:layout_alignParentLeft="true"+	1
1370	android:layout_alignParentRight="true"	51
35186	android:layout_alignParentStart="true"/>	10
33614	android:layout_alignParentTop="true"	12
34852	android:layout_alignRight="@id/transaction_amount"	4
34595	android:layout_alignStart="@id/list_item_2_lines"	3
37305	android:layout_alignWithParentIfMissing="true"	5
25957	android:layout_below="@+id/pass_label"	7
36845	android:layout_below="@id/abs__action_bar_container"	7
37398	android:layout_below="@id/abs__title"	4
54127	android:layout_below="@id/budget_account_layout"	2
53784	android:layout_below="@id/budget_indicator"	2
54224	android:layout_below="@id/budget_info_table"	5
54131	android:layout_below="@id/budget_spent"	2
60174	android:layout_below="@id/date_range_divider"	3
34945	android:layout_below="@id/drawer_title"	6
60107	android:layout_below="@id/fragment_view"	3
64301	android:layout_below="@id/imbalance_layout"	3
53761	android:layout_below="@id/labels_layout"	2
34681	android:layout_below="@id/list_item_2_lines"	8
29089	android:layout_below="@id/primary_text"	14
60219	android:layout_below="@id/toolbar_layout"	3
34823	android:layout_below="@id/transaction_amount"	4
30249	android:layout_below="@id/transaction_name"	6
25826	android:layout_centerHorizontal="true">	7
37264	android:layout_centerVertical="true"	5
35120	android:layout_gravity="bottom"	28
18112	android:layout_gravity="center"	37
24667	android:layout_gravity="center"/>	5
27162	android:layout_gravity="center_horizontal"	6
27510	android:layout_gravity="center_vertical"	13
36782	android:layout_gravity="center_vertical|left"	4
561	android:layout_gravity="end|bottom"	11
306	android:layout_gravity="end|bottom|right"	11
57080	android:layout_gravity="left|start"/>	3
235	android:layout_gravity="right"	11
54432	android:layout_gravity="right|end"	5
26749	android:layout_gravity="start"	17
26669	android:layout_height="0dip"	29
1126	android:layout_height="0dp"	39
26148	android:layout_height="100dp"	13
53983	android:layout_height="10dp"	2
60164	android:layout_height="120dp">	3
2016	android:layout_height="128dp"	8
34903	android:layout_height="150dp"	7
1231	android:layout_height="1dp"	23
50800	android:layout_height="200dp"	5
29556	android:layout_height="20dp"	12
61853	android:layout_height="250dp"	5
37754	android:layout_height="29dip"	5
37417	android:layout_height="2dip"	5
35280	android:layout_height="2dp"	5
37370	android:layout_height="32dip"	4
37352	android:layout_height="36dip"	7
1943	android:layout_height="40dp"	23
37010	android:layout_height="48dip"	5
34593	android:layout_height="48dp"	23
51353	android:layout_height="50dp"	3
26151	android:layout_height="55dp"	7
23279	android:layout_height="5dp"	6
25961	android:layout_height="70dp"	7
35214	android:layout_height="80dp"	7
53995	android:layout_height="8dp"	2
30197	android:layout_height="?android:attr/listPreferredItemHeight"	32
59628	android:layout_height="?android:listPreferredItemHeight"/>	3
1698	android:layout_height="?attr/actionBarSize"	26
23276	android:layout_height="?attr/actionBarSize">	12
36764	android:layout_height="?attr/dropdownListPreferredItemHeight"	12
37736	android:layout_height="?attr/listPreferredItemHeightSmall">	4
37715	android:layout_height="?attr/searchResultListItemHeight"	5
63621	android:layout_height="@dimen/passcode_btn"	4
19748	android:layout_height="@dimen/section_header_height"	14
23202	android:layout_height="@dimen/toolbar_progress_height"	11
33906	android:layout_height="fill_parent"	18
36959	android:layout_height="fill_parent">	4
324	android:layout_height="match_parent"	160
64231	android:layout_height="match_parent"-	1
28788	android:layout_height="match_parent"/>	21
1513	android:layout_height="match_parent">	95
1099	android:layout_height="wrap_content"	220
34792	android:layout_height="wrap_content"-	1
21871	android:layout_height="wrap_content"/>	21
2036	android:layout_height="wrap_content">	63
45597	android:layout_height=\"wrap_content\"")	4
51341	android:layout_margin="10dp"	6
30146	android:layout_margin="12dp"	9
35227	android:layout_margin="16dp"	11
31795	android:layout_margin="20dp"	8
30159	android:layout_margin="8dp"	13
51769	android:layout_margin="@dimen/dialog_padding"	6
63634	android:layout_margin="@dimen/passcode_btn_margin"	4
3556	android:layout_marginBottom="-8dip"	49
27391	android:layout_marginBottom="-8dp"	12
31159	android:layout_marginBottom="-8dp">	5
19187	android:layout_marginBottom="10dp"	13
63088	android:layout_marginBottom="16dp"	3
27550	android:layout_marginBottom="20dp"	18
37068	android:layout_marginBottom="2dip"	5
37482	android:layout_marginBottom="3dip"	5
36908	android:layout_marginBottom="4dip"	9
34587	android:layout_marginBottom="4dp"	13
37320	android:layout_marginBottom="8dip"	4
36784	android:layout_marginBottom="@dimen/abs__action_bar_icon_vertical_padding"	4
36878	android:layout_marginBottom="@dimen/abs__action_bar_subtitle_bottom_margin"	4
18057	android:layout_marginBottom="@dimen/dialog_padding"	59
54051	android:layout_marginBottom="@dimen/dialog_padding">	2
21496	android:layout_marginBottom="@dimen/edge_padding"	8
50952	android:layout_marginBottom="@dimen/edge_padding">	4
3460	android:layout_marginBottom="@dimen/form_row_bottom_margin"	32
18545	android:layout_marginBottom="@dimen/form_row_bottom_margin">	12
34690	android:layout_marginEnd="52dp"	3
20575	android:layout_marginEnd="5dp"	6
20749	android:layout_marginLeft="0dp"	17
31331	android:layout_marginLeft="100dp"	5
27546	android:layout_marginLeft="10dp"	24
55542	android:layout_marginLeft="15dp"	5
37603	android:layout_marginLeft="16dip"	4
62151	android:layout_marginLeft="16dp"	3
51336	android:layout_marginLeft="20dp"	4
62326	android:layout_marginLeft="35dp"	3
37026	android:layout_marginLeft="3dip"	5
36793	android:layout_marginLeft="4dip"	4
60681	android:layout_marginLeft="4dp"	8
32913	android:layout_marginLeft="55dp"	7
1910	android:layout_marginLeft="5dp"	42
58771	android:layout_marginLeft="6dp"	3
61963	android:layout_marginLeft="6dp">	4
35160	android:layout_marginLeft="75dp"	10
33309	android:layout_marginLeft="7dp"	11
37419	android:layout_marginLeft="8dip"	6
89	android:layout_marginLeft="8dp"	33
61911	android:layout_marginLeft="9dp"	3
37081	android:layout_marginLeft="?attr/listPreferredItemPaddingLeft"	4
37030	android:layout_marginLeft="@dimen/abs__dropdownitem_text_padding_left"	5
27290	android:layout_marginLeft="@dimen/dialog_padding"	49
10012	android:layout_marginLeft="@dimen/edge_padding"	17
54064	android:layout_marginLeft="@dimen/strip_width"	2
56901	android:layout_marginLeft="@dimen/widget_margin"	1
36802	android:layout_marginRight="-8dip"	7
57169	android:layout_marginRight="0dp"	3
23889	android:layout_marginRight="10dp"	23
30421	android:layout_marginRight="12dp"	23
36785	android:layout_marginRight="16dip"	4
36822	android:layout_marginRight="16dip">	6
62210	android:layout_marginRight="16dp"	3
34598	android:layout_marginRight="20dp"	11
63897	android:layout_marginRight="20dp"-	1
37671	android:layout_marginRight="3dip"	5
36958	android:layout_marginRight="4dip"	4
60675	android:layout_marginRight="4dp"	8
34652	android:layout_marginRight="50dp"/>	4
34707	android:layout_marginRight="52dp"	3
34524	android:layout_marginRight="52dp"/>	8
13490	android:layout_marginRight="5dp"	28
36767	android:layout_marginRight="8dip"	9
63243	android:layout_marginRight="8dp"	6
37601	android:layout_marginRight="?attr/listPreferredItemPaddingRight"	4
28779	android:layout_marginRight="@dimen/dialog_padding"	15
54085	android:layout_marginRight="@dimen/dialog_padding"/>	9
9734	android:layout_marginRight="@dimen/edge_padding"	12
30293	android:layout_marginRight="@dimen/edge_padding"/>	9
56897	android:layout_marginRight="@dimen/widget_margin"	1
33732	android:layout_marginStart="5dp"	8
55476	android:layout_marginStart="8dp"	5
32592	android:layout_marginStart="@dimen/dialog_padding"	6
54124	android:layout_marginStart="@dimen/strip_width"	2
63683	android:layout_marginTop="-8dp"	2
27514	android:layout_marginTop="10dp"	12
63087	android:layout_marginTop="16dp"	3
1592	android:layout_marginTop="20dp"	6
50993	android:layout_marginTop="20dp">	4
63614	android:layout_marginTop="25dp"	4
24659	android:layout_marginTop="30dp">	5
37200	android:layout_marginTop="3dip"	5
36870	android:layout_marginTop="4dip"	9
63186	android:layout_marginTop="4dp"	3
1902	android:layout_marginTop="5dp"	13
34708	android:layout_marginTop="6dp"	8
37112	android:layout_marginTop="8dip"	4
9295	android:layout_marginTop="8dp"	6
36746	android:layout_marginTop="@dimen/abs__action_bar_icon_vertical_padding"	4
36924	android:layout_marginTop="@dimen/abs__action_bar_subtitle_top_margin"	4
34612	android:layout_marginTop="@dimen/dialog_padding"	20
21574	android:layout_marginTop="@dimen/dialog_padding">	10
28859	android:layout_marginTop="@dimen/edge_padding"	14
30108	android:layout_span="2"	9
34621	android:layout_toEndOf="@id/account_color_strip"	3
34558	android:layout_toEndOf="@id/label_last_sync"	3
33715	android:layout_toEndOf="@id/primary_text"	2
37596	android:layout_toLeftOf="@android:id/icon2"	5
53966	android:layout_toLeftOf="@id/create_transaction"	5
37169	android:layout_toLeftOf="@id/edit_query"	5
53899	android:layout_toLeftOf="@id/options_menu"	8
37088	android:layout_toRightOf="@android:id/icon1"	5
34515	android:layout_toRightOf="@id/account_color_strip"	13
54132	android:layout_toRightOf="@id/budget_spent"	2
33373	android:layout_toRightOf="@id/default_buttons"	8
34676	android:layout_toRightOf="@id/label_last_sync"	5
33800	android:layout_toRightOf="@id/primary_text"	2
34026	android:layout_weight="0.1"	10
61867	android:layout_weight="0.2"	3
1087	android:layout_weight="0.3"	6
20710	android:layout_weight="0.5"	18
63602	android:layout_weight="0.6"	4
31951	android:layout_weight="0.7"	7
585	android:layout_weight="0.8"	14
24858	android:layout_weight="0.9"	10
1022	android:layout_weight="1"	128
1056	android:layout_weight="1"/>	6
33901	android:layout_weight="1">	13
24762	android:layout_weight="1.2"	26
599	android:layout_weight="1.4"	10
21452	android:layout_weight="1.5"	18
958	android:layout_weight="1.8"	12
1476	android:layout_weight="2"	58
56537	android:layout_weight="2"/>	3
52931	android:layout_weight="2.5"	4
61866	android:layout_weight="2.5">	3
1324	android:layout_weight="3"	62
21163	android:layout_weight="5"	23
61869	android:layout_weight="5">	3
37215	android:layout_width="0dip"	4
2088	android:layout_width="0dp"	132
53948	android:layout_width="100dp"	2
30170	android:layout_width="1dp"	9
33329	android:layout_width="220dp"	8
26656	android:layout_width="240dp"	12
37506	android:layout_width="32dip"	4
1196	android:layout_width="40dp"	15
36788	android:layout_width="48dip"	8
9227	android:layout_width="48dp"	27
37739	android:layout_width="56dip"	4
37568	android:layout_width="@dimen/abs__dropdownitem_icon_width"	6
63631	android:layout_width="@dimen/passcode_btn"	4
27504	android:layout_width="@dimen/strip_width"	14
19831	android:layout_width="fill_parent"	59
1198	android:layout_width="match_parent"	217
21284	android:layout_width="match_parent">	10
1947	android:layout_width="wrap_content"	175
31513	android:layout_width="wrap_content"/>	7
45414	android:layout_width=\"match_parent\"	4
36792	android:left="5dp"	9
29208	android:lines="2"	2
30371	android:listSelector="@drawable/abc_list_selector_holo_light"	13
18533	android:listSelector="@drawable/abs__list_selector_holo_light"	10
47445	android:max	4
53839	android:max="100"	2
25923	android:maxLength="1"	11
1655	android:maxLength="4"	7
34683	android:maxLines="1"	16
33566	android:maxLines="2"	2
1659	android:maxLines="3"	9
31457	android:maxSdkVersion="18"	4
52287	android:maxSdkVersion="18"/>	4
25063	android:mimeType="*/*"	6
25054	android:mimeType="vnd.android.cursor.item/vnd.${applicationId	2
24991	android:mimeType="vnd.android.cursor.item/vnd.org.gnucash.android.account"/>	7
25224	android:mimeType="vnd.android.cursor.item/vnd.org.gnucash.android.transaction"/>	6
52801	android:minHeight="200dp"	13
51048	android:minHeight="200dp">	4
63927	android:minHeight="20dp">	4
1870	android:minHeight="300dp"	6
24868	android:minHeight="350dp"	4
1234	android:minHeight="400dp"	7
33363	android:minHeight="40dp"	8
55202	android:minHeight="40dp"/>	5
104	android:minHeight="50dp"	15
56864	android:minHeight="56dp"	1
60403	android:minHeight="80dp">	8
63895	android:minHeight="80dp">+	1
10100	android:minHeight="?android:attr/listPreferredItemHeight"	37
55079	android:minHeight="?android:attr/listPreferredItemHeightSmall"/>	6
2151	android:minHeight="?attr/actionBarSize"	17
37748	android:minHeight="@dimen/abs__alert_dialog_title_height"	4
35092	android:minHeight="@dimen/card_min_height"	4
53769	android:minHeight="@dimen/card_min_height">	7
2899	android:minSdkVersion="10"	5
36884	android:minSdkVersion="7"	6
7132	android:minSdkVersion="8"	102
2209	android:minSdkVersion="9"	4
23744	android:minWidth="100dp"	29
18465	android:minWidth="120dp"	11
37189	android:minWidth="196dip"	5
34416	android:minWidth="250dp"	3
56837	android:minWidth="270dp"	1
37732	android:minWidth="@dimen/abs__search_view_text_min_width"	5
25403	android:name="${applicationId	6
25171	android:name=".receivers.AccountCreator"	7
62555	android:name=".receivers.BootReceiver"	2
62548	android:name=".receivers.SchedulerReceiver"	3
25388	android:name=".receivers.TransactionAppWidgetProvider"	6
34219	android:name=".receivers.TransactionRecorder"	13
9619	android:name=".service.ScheduledActionService"	5
3680	android:name=".service.SchedulerService"	14
52201	android:name=".ui.AccountsActivity"	1
1164	android:name=".ui.FormActivity"	14
52276	android:name=".ui.MainActivity"	2
23846	android:name=".ui.account.AccountsActivity"	23
30676	android:name=".ui.accounts.AccountsActivity"	9
52998	android:name=".ui.budget.BudgetsActivity"	2
3018	android:name=".ui.chart.BarChartActivity"	8
415	android:name=".ui.chart.ChartReportActivity"	13
1941	android:name=".ui.chart.LineChartActivity"	15
392	android:name=".ui.chart.PieChartActivity"	18
62287	android:name=".ui.common.FormActivity"	3
62278	android:name=".ui.homescreen.WidgetConfigurationActivity"	3
1595	android:name=".ui.passcode.PasscodeLockScreenActivity"	10
23963	android:name=".ui.passcode.PasscodePreferenceActivity"	25
53164	android:name=".ui.report.ReportsActivity"	16
9866	android:name=".ui.settings.PreferenceActivity"	5
54533	android:name=".ui.settings.SettingsActivity"	6
23877	android:name=".ui.settings.SettingsActivity"/>	18
19678	android:name=".ui.settings.SettingsActivity"></activity>	14
54540	android:name=".ui.transaction.ScheduledActionsActivity"	15
62564	android:name=".ui.transaction.ScheduledEventsActivity"	3
61965	android:name=".ui.transaction.TransactionDetailActivity"	6
1576	android:name=".ui.transaction.TransactionInfoActivity"	12
34166	android:name=".ui.transaction.TransactionsActivity"	24
19961	android:name=".ui.transactions.TransactionsActivity"	13
56770	android:name=".ui.widget.Configuration"	2
20108	android:name=".ui.widget.WidgetConfigurationActivity"	28
53054	android:name=".ui.wizard.FirstRunWizardActivity"	8
33729	android:name="android.appwidget.action.APPWIDGET_CONFIGURE"/>	18
54781	android:name="android.appwidget.action.APPWIDGET_UPDATE"	4
25074	android:name="android.appwidget.provider"	10
8896	android:name="android.intent.action.BOOT_COMPLETED"/>	17
25031	android:name="android.intent.action.EDIT"	6
25364	android:name="android.intent.action.INSERT"	7
328	android:name="android.intent.action.MAIN"	28
3832	android:name="android.intent.action.VIEW"	10
2202	android:name="android.intent.category.BROWSABLE"/>	5
2681	android:name="android.intent.category.DEFAULT"	17
26237	android:name="android.intent.category.HOME"/>	5
1375	android:name="android.intent.category.LAUNCHER"	22
13594	android:name="android.intent.extra.SUBJECT"	5
13808	android:name="android.intent.extra.TEXT"	5
51510	android:name="android.permission.ACCESS_NETWORK_STATE"	5
2383	android:name="android.permission.INTERNET"	6
25331	android:name="android.permission.INTERNET"/>	3
3399	android:name="android.permission.RECEIVE_BOOT_COMPLETED"	7
28748	android:name="android.permission.SET_ANIMATION_SCALE"	3
31062	android:name="android.permission.VIBRATE"	11
2561	android:name="android.permission.WAKE_LOCK"	12
31321	android:name="android.permission.WRITE_EXTERNAL_STORAGE"	7
12195	android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>	18
9347	android:name="android.support.FILE_PROVIDER_PATHS"	2
9262	android:name="android.support.v4.content.FileProvider"	4
32767	android:name="android.test.InstrumentationTestRunner"	5
32644	android:name="android.test.runner"	3
25037	android:name="com.crashlytics.ApiKey"	6
3828	android:name="com.dropbox.client2.android.AuthActivity"	17
9894	android:name="com.dropbox.core.android.AuthActivity"	2
10041	android:name="com.dropbox.sync.android.DbxAuthActivity"	20
9103	android:name="com.dropbox.sync.android.DbxSyncService"	4
36612	android:name="io.fabric.ApiKey"	13
3722	android:name="org.gnucash.android.app.GnuCashApplication"	29
13529	android:name="org.gnucash.android.permission.CREATE_ACCOUNT"	27
13392	android:name="org.gnucash.android.permission.RECORD_TRANSACTION"	19
2401	android:name="org.gnucash.android.permission.group.GNUCASH"	15
57214	android:name="org.gnucash.android.ui.settings.PreferenceHeadersFragment"	3
20590	android:nextFocusDown="@+id/input_description"	33
35288	android:nextFocusDown="@+id/input_split_memo"	9
20175	android:nextFocusDown="@+id/input_transaction_amount"	29
683	android:noHistory="true"	14
48397	android:onClick	4
59060	android:onClick="onAddNewPreferenceClick"	3
53889	android:onClick="onCreateBudgetClick"	2
24139	android:onClick="onNewAccountClick"	11
59076	android:onClick="onNewTransactionClick"	5
29243	android:orderInCategory="1"	17
54435	android:orderInCategory="1"/>	10
13546	android:orderInCategory="10"/>	20
34196	android:orderInCategory="2"	12
29228	android:orderInCategory="2"/>	11
54578	android:orderInCategory="3"	2
7154	android:orderInCategory="3"/>	26
6627	android:orderInCategory="4"	15
18016	android:orderInCategory="4"/>	9
6951	android:orderInCategory="5"/>	11
2076	android:orientation="horizontal"	94
27302	android:orientation="horizontal">	49
1828	android:orientation="vertical"	152
57510	android:orientation="vertical"/>	3
18529	android:orientation="vertical">	78
51760	android:padding="10dp"	7
59898	android:padding="12dp"	4
51780	android:padding="14dp"	5
51751	android:padding="15dp"	3
27350	android:padding="28dp"	3
23786	android:padding="2dp"	13
57552	android:padding="3dp"	3
54120	android:padding="5dp"	14
809	android:padding="@dimen/dialog_padding"	74
28722	android:padding="@dimen/dialog_padding">	19
51807	android:padding="@dimen/edge_padding"	4
56942	android:padding="@dimen/widget_margin">	1
63649	android:paddingBottom="10dp"	4
344	android:paddingBottom="20dp"	9
34578	android:paddingBottom="22dp"	17
37015	android:paddingBottom="2dip"	4
36805	android:paddingBottom="4dip"	8
53923	android:paddingBottom="4dp"	7
53808	android:paddingBottom="4dp"/>	2
61984	android:paddingBottom="5dp"	4
62044	android:paddingBottom="8dp"	3
54346	android:paddingBottom="@dimen/card_min_height"	11
56730	android:paddingBottom="@dimen/dialog_padding"	7
34693	android:paddingEnd="6dp"	5
2731	android:paddingLeft="10dp"	30
37550	android:paddingLeft="12dip"	4
37006	android:paddingLeft="16dip"	7
55057	android:paddingLeft="16dp"	6
34686	android:paddingLeft="22dp"	17
34699	android:paddingLeft="24dp"	19
36983	android:paddingLeft="4dip"	4
30466	android:paddingLeft="5dp"	18
36943	android:paddingLeft="8dip"	9
37455	android:paddingLeft="@dimen/abs__dropdownitem_text_padding_left"	6
28998	android:paddingLeft="@dimen/dialog_padding"	29
62003	android:paddingLeft="@dimen/dialog_padding">	4
30398	android:paddingLeft="@dimen/edge_padding"	5
62034	android:paddingLeft="@dimen/list_item_padding_left"	3
53308	android:paddingRight="10dp"	5
37256	android:paddingRight="12dip"	4
59547	android:paddingRight="12dp"	3
36775	android:paddingRight="16dip"	9
37293	android:paddingRight="16dip">	4
55203	android:paddingRight="16dp"	6
36877	android:paddingRight="4dip"	8
18543	android:paddingRight="5dp"	16
34668	android:paddingRight="6dp"	17
37545	android:paddingRight="8dip"	5
37082	android:paddingRight="@dimen/abs__dropdownitem_text_padding_right"	5
35326	android:paddingRight="@dimen/dialog_padding"	17
54335	android:paddingRight="@dimen/dialog_padding">	14
23599	android:paddingRight="@dimen/edge_padding"	14
62052	android:paddingRight="@dimen/list_item_padding_right"	3
34607	android:paddingStart="22dp"	5
34714	android:paddingStart="24dp"	5
64232	android:paddingTop="10dp"	2
62083	android:paddingTop="16dp"	3
34542	android:paddingTop="20dp"	19
37202	android:paddingTop="2dip"	4
36890	android:paddingTop="4dip"	4
13910	android:paddingTop="5dp"	11
34610	android:paddingTop="6dp"	18
28853	android:paddingTop="@dimen/dialog_padding"	13
35260	android:paddingTop="@dimen/dialog_padding">	9
498	android:password="true"	14
25243	android:pathPattern=".*\\.gnca"	6
25302	android:pathPattern=".*\\.gnca.zip"	6
25117	android:pathPattern=".*\\.gnucash"	6
28819	android:pathPattern="/.*\\.gnca"	3
28655	android:pathPattern="/.*\\.gnca.zip"	3
28650	android:pathPattern="/.*\\.gnucash"	3
54768	android:permission="org.gnucash.android.permission.CREATE_ACCOUNT"	5
34155	android:permission="org.gnucash.android.permission.RECORD_TRANSACTION">	10
59134	android:permissionGroup="${applicationId	3
51825	android:permissionGroup="org.gnucash.android.permission.group.GNUCASH"	7
36925	android:pivotX="50%"	4
36798	android:pivotY="50%"	4
56907	android:previewImage="@drawable/widget_preview"	5
54024	android:progressDrawable="@drawable/budget_progress_indicator"	2
51811	android:protectionLevel="dangerous"	11
33827	android:radius="200dp"	11
54157	android:radius="3dp"	2
56875	android:resizeMode="horizontal">	5
9937	android:resource="@xml/filepaths"	2
25150	android:resource="@xml/transaction_appwidget_info"	10
36934	android:right="5dp"	9
1578	android:scaleType="center"	16
35252	android:scaleType="centerCrop"	7
34538	android:scaleType="centerInside"	25
36753	android:scaleType="fitCenter"	6
27556	android:scaleType="fitXY"	10
36896	android:scaleWidth="100%"	4
25416	android:scheme="@string/manifest_dropbox_app_key"	2
3109	android:scheme="db-86miy05q183gy7r"	3
25457	android:scheme="db-dhjh8ke9wf05948"	4
28894	android:scheme="file"	4
30188	android:scrollbars="vertical"	19
27131	android:shape="oval"	3
63632	android:shape="oval">	4
27281	android:shape="rectangle"	3
27792	android:showAsAction="always"	11
6574	android:showAsAction="always"/>	27
54355	android:showAsAction="always|withText"/>	5
13491	android:showAsAction="collapseActionView|ifRoom"	13
47649	android:showAsAction="ifRoom"	9
4081	android:showAsAction="never"	35
4072	android:showAsAction="never"/>	6
6872	android:showAsAction="never|withText"	17
51799	android:showDividers="middle">	1
20883	android:singleLine="false"	37
18688	android:singleLine="true"	79
36827	android:src="?attr/actionModeCloseDrawable"	6
36885	android:src="?attr/homeAsUpIndicator"	4
37635	android:src="?attr/searchViewCloseIcon"	5
37518	android:src="?attr/searchViewEditQuery"	5
37085	android:src="?attr/searchViewGoIcon"	5
37223	android:src="?attr/searchViewSearchIcon"	5
37154	android:src="?attr/searchViewVoiceIcon"	5
36868	android:src="?attr/windowContentOverlay"	7
8948	android:src="@drawable/action_about_holo_light"	3
24862	android:src="@drawable/chart_bar_button"	7
24749	android:src="@drawable/chart_line_button"	7
24646	android:src="@drawable/chart_pie_button"	7
26136	android:src="@drawable/clear_btn"	12
56967	android:src="@drawable/content_new"	2
10092	android:src="@drawable/content_new_holo_light"	11
52927	android:src="@drawable/content_split_holo_light"	4
30429	android:src="@drawable/content_split_holo_light"/>	4
59099	android:src="@drawable/ic_action_backspace"	7
1454	android:src="@drawable/ic_action_forward"/>	22
1676	android:src="@drawable/ic_action_rotate_right"/>	25
810	android:src="@drawable/ic_action_sort_by_size"/>	25
218	android:src="@drawable/ic_action_time"/>	16
60431	android:src="@drawable/ic_add_black_24dp"	3
30279	android:src="@drawable/ic_add_white_48dp"/>	21
34582	android:src="@drawable/ic_clear_black_24dp"	7
54294	android:src="@drawable/ic_close_black_24dp"	5
27314	android:src="@drawable/ic_colorpicker_swatch_selected"	3
34078	android:src="@drawable/ic_launcher"	8
60668	android:src="@drawable/ic_mode_edit_black_24dp"	3
1962	android:src="@drawable/ic_mode_edit_white_24dp"	6
34628	android:src="@drawable/ic_more_vert_black_24dp"	19
60518	android:src="@drawable/ic_star_border_black_24dp"	3
35265	android:src="@drawable/navigation_cancel_holo_light"/>	5
24873	android:src="@drawable/navigation_next_item"	8
24835	android:src="@drawable/navigation_previous_item"	8
54053	android:startColor="#234"	2
53760	android:startColor="#319d67"	2
36898	android:state_activated="true"	4
33860	android:state_enabled="false"	16
29540	android:state_enabled="true"	7
63588	android:state_enabled="true">	4
36986	android:state_focused="false"	4
23651	android:state_focused="true"	14
36794	android:state_pressed="false"	4
23332	android:state_pressed="true"	22
63605	android:state_pressed="true">	4
36901	android:state_selected="false"	4
36941	android:state_selected="true"	4
36948	android:state_window_focused="false"	4
29509	android:state_window_focused="true"	3
817	android:stretchColumns="1"	15
36086	android:summary="@string/app_version"	6
55194	android:summary="@string/app_version_name"	7
55159	android:summary="@string/app_version_name"/>	4
20479	android:summary="@string/hint_delete_after_export"	15
20277	android:summary="@string/hint_export_choice"	15
25249	android:summary="@string/msg_enable_crashlytics"	13
30640	android:summary="@string/summary_about_gnucash"	18
57628	android:summary="@string/summary_about_gnucash"/><Preference	2
51617	android:summary="@string/summary_create_backup_pref"	7
2933	android:summary="@string/summary_create_default_accounts"	8
30745	android:summary="@string/summary_default_currency"	12
52195	android:summary="@string/summary_default_export_email"	10
52100	android:summary="@string/summary_default_export_format"/>	3
5846	android:summary="@string/summary_default_transaction_type"/>	19
3407	android:summary="@string/summary_delete_all_accounts"	13
3728	android:summary="@string/summary_delete_all_transactions"	13
51728	android:summary="@string/summary_dropbox_sync"	2
51709	android:summary="@string/summary_google_drive_sync"	5
55049	android:summary="@string/summary_google_plus"	7
2909	android:summary="@string/summary_import_accounts"	19
30471	android:summary="@string/summary_licence_details"	23
55270	android:summary="@string/summary_owncloud_sync"	6
51693	android:summary="@string/summary_restore_backup_pref"	3
51478	android:summary="@string/summary_restore_last_backup"	5
56989	android:summary="@string/summary_save_opening_balances"	8
55247	android:summary="@string/summary_select_backup_file"	3
20451	android:summary="@string/summary_sgml_ofx_header"/>	4
55205	android:summary="@string/summary_translate_gnucash">	7
2027	android:summary="@string/summary_use_account_color"	6
57191	android:summary="@string/summary_use_compact_list"	5
3885	android:summary="@string/summary_use_double_entry"	18
24987	android:summary="@string/summary_xml_ofx_header"	12
24999	android:summary="Restore	7
6360	android:summary="Select	11
57025	android:tag="PreferenceHeadersFragment"	3
28704	android:tag="currency_list_view"	6
32567	android:targetPackage="org.gnucash.android"	4
23548	android:targetSdkVersion="15"	20
6608	android:targetSdkVersion="15"/>	69
13692	android:targetSdkVersion="16"	5
13697	android:targetSdkVersion="16"/>	40
13263	android:targetSdkVersion="18"	6
13100	android:targetSdkVersion="18"/>	7
2882	android:targetSdkVersion="19"/>	7
26172	android:text=""	16
556	android:text="$"	32
35267	android:text="$"/>	8
33451	android:text="$200"/>	10
23687	android:text="-"	2
26039	android:text="0"	13
59586	android:text="0.00"	2
25924	android:text="1"	13
25804	android:text="2"	13
26105	android:text="3"	13
25983	android:text="4"	13
25878	android:text="5"	13
26177	android:text="6"	13
26055	android:text="7"	13
25935	android:text="8"	13
26133	android:text="9"	13
36923	android:text="@string/abs__action_mode_done"	4
62015	android:text="@string/account_balance"	3
59030	android:text="@string/add_account"	3
59050	android:text="@string/add_transaction"	3
35158	android:text="@string/app_name"	8
33293	android:text="@string/btn_add_split"/>	15
51798	android:text="@string/btn_cancel"	12
58988	android:text="@string/btn_export"	4
28630	android:text="@string/btn_fetch_quote"/>	6
59895	android:text="@string/btn_move"	2
51802	android:text="@string/btn_save"	6
51783	android:text="@string/confirm_post_export_delete"	4
63625	android:text="@string/digit_eight"/>	4
63628	android:text="@string/digit_eight_text"/>	4
63597	android:text="@string/digit_five"/>	4
63641	android:text="@string/digit_five_text"/>	4
63618	android:text="@string/digit_four"/>	4
63589	android:text="@string/digit_four_text"/>	4
63612	android:text="@string/digit_nine"/>	4
63609	android:text="@string/digit_nine_text"/>	4
63624	android:text="@string/digit_one"/>	4
63617	android:text="@string/digit_one_text"/>	4
63638	android:text="@string/digit_seven"/>	4
63636	android:text="@string/digit_seven_text"/>	4
63639	android:text="@string/digit_six"/>	4
63599	android:text="@string/digit_six_text"/>	4
63590	android:text="@string/digit_three"/>	4
63606	android:text="@string/digit_three_text"/>	4
63635	android:text="@string/digit_two"/>	4
63642	android:text="@string/digit_two_text"/>	4
63637	android:text="@string/digit_zero"/>	4
63611	android:text="@string/digit_zero_text"/>	4
51842	android:text="@string/export_all_transactions"	4
34623	android:text="@string/hint_delete_after_export"	15
31347	android:text="@string/hint_export_choice"	17
63122	android:text="@string/label_account"	4
28266	android:text="@string/label_account_balance"	2
27425	android:text="@string/label_account_color_and_type"	6
29155	android:text="@string/label_account_currency"	10
30410	android:text="@string/label_account_name"	7
27480	android:text="@string/label_account_type"	10
28947	android:text="@string/label_assets"/>	3
29017	android:text="@string/label_convert_from"	3
28685	android:text="@string/label_convert_to"	3
24512	android:text="@string/label_create_account"	8
51792	android:text="@string/label_date"	3
27138	android:text="@string/label_default_transfer_account"	3
63665	android:text="@string/label_delete_after_export"	2
27759	android:text="@string/label_delete_sub_accounts"	5
29400	android:text="@string/label_description"	4
50749	android:text="@string/label_display_account"	4
3137	android:text="@string/label_double_entry_account"	9
29042	android:text="@string/label_equity"/>	3
59042	android:text="@string/label_export_choice"	3
31432	android:text="@string/label_export_destination"	12
25476	android:text="@string/label_export_format"	8
64151	android:text="@string/label_export_transactions_since_date"	3
9158	android:text="@string/label_hide_account_balance"	2
56711	android:text="@string/label_imbalance"/>	10
28904	android:text="@string/label_last_3_months_expenses"/>	3
29043	android:text="@string/label_liabilities"/>	3
52227	android:text="@string/label_move_destination"	2
29035	android:text="@string/label_move_to"	6
28867	android:text="@string/label_net_worth"/>	6
29553	android:text="@string/label_no_accounts"	12
18122	android:text="@string/label_no_recurring_transactions"	3
59567	android:text="@string/label_no_transactions"	7
27364	android:text="@string/label_parent_account"	11
577	android:text="@string/label_passcode"	11
27249	android:text="@string/label_placeholder_account"	3
18347	android:text="@string/label_recurring_transaction"	17
24746	android:text="@string/label_report_currency"	5
28778	android:text="@string/label_report_period"/>	6
2710	android:text="@string/label_save_template"	16
9303	android:text="@string/label_should_display_balance"	4
51289	android:text="@string/label_split_account"	3
30256	android:text="@string/label_tap_to_create_schedule"	21
30263	android:text="@string/label_timeanddate"	4
29054	android:text="@string/label_total_assets"/>	3
29157	android:text="@string/label_total_liabilities"/>	3
28659	android:text="@string/label_total_liabilities_and_equity"/>	6
28909	android:text="@string/label_transaction_amount"	20
30220	android:text="@string/label_transaction_description"	4
18663	android:text="@string/label_transaction_name"	15
30347	android:text="@string/label_transaction_name"/>	9
28287	android:text="@string/label_transactions_total"	6
46690	android:text="@string/loading"	4
28726	android:text="@string/msg_provide_exchange_rate"	3
62043	android:text="@string/msg_wizard_welcome_page"/>	3
54619	android:text="@string/no_accounts"	3
63837	android:text="@string/no_transactions_to_display"	3
34604	android:text="@string/option_delete_after_export"	10
31422	android:text="@string/option_export_all_transactions"	15
2703	android:text="@string/section_header_accounts"	6
18387	android:text="@string/section_header_subaccounts"	4
2946	android:text="@string/section_header_transactions"	13
64147	android:text="@string/switch_export_transactions_from_all_time"	3
24398	android:text="@string/title_add_account"	7
58962	android:text="@string/title_add_transaction"	4
61856	android:text="@string/title_bar_chart"/>	5
29608	android:text="@string/title_create_account"	5
61852	android:text="@string/title_line_chart"/>	5
61859	android:text="@string/title_pie_chart"/>	5
28768	android:text="@string/title_report_sheet"/>	3
28813	android:text="@string/wizard_title_select_currency"/>	6
62233	android:text="@string/wizard_title_welcome_to_gnucash"/>	3
35279	android:text="Add	8
54348	android:text="Add"/>	5
63239	android:text="All	6
21505	android:text="American	5
33596	android:text="Amount"/>	5
28991	android:text="Amount:"	10
21457	android:text="Assets"/>	8
24846	android:text="Balance	5
33760	android:text="Bar	9
50777	android:text="Book"	3
54179	android:text="Budgeted	5
21832	android:text="Checking	5
21856	android:text="Credit	5
25981	android:text="Enter	9
21289	android:text="Equity"/>	6
29163	android:text="Expenses	7
25630	android:text="Export	5
29060	android:text="Fetch	12
28654	android:text="From:"	10
35187	android:text="GnuCash"	7
35318	android:text="Imbalance:"/>	5
53794	android:text="Left"/>	2
21528	android:text="Liabilities"/>	8
33656	android:text="Line	9
28917	android:text="Move	5
21294	android:text="Net	10
61895	android:text="No	7
2552	android:text="Not	4
34626	android:text="OFX"/>	14
30253	android:text="Open	4
220	android:text="Period:"/>	12
33632	android:text="Pie	9
54395	android:text="Propose	2
28635	android:text="Provide	13
34654	android:text="QIF"	9
57460	android:text="START"/>	4
21723	android:text="Savings	5
54177	android:text="Set	5
63198	android:text="Since"	6
34528	android:text="Some	8
54086	android:text="Spent"/>	2
3642	android:text="Sub-Accounts"	7
24886	android:text="Summary"/>	7
3009	android:text="Tap	4
24615	android:text="Text	7
1450	android:text="Time	4
28815	android:text="To:"	10
21449	android:text="Total	11
3664	android:text="Transactions"	7
34722	android:text="XML"/>	8
29526	android:textAlignment="inherit"/>	9
33410	android:textAllCaps="true"	21
24632	android:textAppearance	5
37605	android:textAppearance="?android:attr/dropDownHintAppearance"	5
56867	android:textAppearance="?android:attr/textAppearanceLarge"	8
55105	android:textAppearance="?android:attr/textAppearanceListItemSmall"	6
18230	android:textAppearance="?android:attr/textAppearanceMedium"	53
28668	android:textAppearance="?android:attr/textAppearanceSmall"	53
18092	android:textAppearance="?android:textAppearanceLarge"	5
36709	android:textAppearance="?attr/actionMenuTextAppearance"	4
37623	android:textAppearance="?attr/textAppearanceLargePopupMenu"	5
37597	android:textAppearance="?attr/textAppearanceListItemSmall"	4
37330	android:textAppearance="?attr/textAppearanceSearchResultSubtitle"	5
37378	android:textAppearance="?attr/textAppearanceSearchResultTitle"	5
37691	android:textAppearance="?attr/textAppearanceSmall"	4
37164	android:textAppearance="?attr/textAppearanceSmallPopupMenu"	4
765	android:textAppearance="@style/TextAppearance.AppCompat.Widget.ActionBar.Title"/>	13
55067	android:textColor="#fff"	6
36743	android:textColor="?attr/actionMenuTextColor"	4
37377	android:textColor="?attr/textColorPrimary"	5
28816	android:textColor="@android:color/black"	27
34674	android:textColor="@android:color/darker_gray"	9
3283	android:textColor="@android:color/white"	59
51483	android:textColor="@color/account_red"	5
3020	android:textColor="@color/debit_red"	56
21874	android:textColor="@color/theme_accent"	27
19425	android:textColor="@color/title_green"	25
58823	android:textOff="@string/credit"	4
18510	android:textOff="@string/label_credit"	33
58890	android:textOn="@string/debit"	4
18023	android:textOn="@string/label_debit"	30
36932	android:textSize="12sp"	6
1458	android:textSize="14sp"	40
29585	android:textSize="15sp"	20
21597	android:textSize="16sp"	28
21473	android:textSize="18sp"	45
20458	android:textSize="20sp"	34
1395	android:textSize="22dp"	31
20911	android:textSize="22sp"	34
1642	android:textSize="22sp"/>	6
64299	android:textSize="22sp">	3
62201	android:textSize="24sp"	3
25980	android:textSize="25sp"	15
25761	android:textSize="25sp"/>	9
25836	android:textSize="33sp"	11
32921	android:textSize="@dimen/text_size_medium"	7
21794	android:textStyle="bold"	19
55458	android:textStyle="italic"	8
34470	android:theme="@style/Dialog.WidgetConfiguration"	11
55195	android:theme="@style/Theme.AppCompat.Light.DarkActionBar">	5
55143	android:theme="@style/Theme.AppCompat.Light.NoActionBar"	4
8943	android:theme="@style/Theme.GnucashTheme"	19
54581	android:theme="@style/Theme.GnucashTheme">	9
1651	android:theme="@style/Theme.GnucashTheme.NoActionBar"	18
61849	android:theme="@style/Theme.GnucashTheme.NoActionBar"/>	6
53312	android:theme="@style/Theme.GnucashTheme.NoActionBar">	5
52094	android:theme="@style/Theme.Sherlock.Light">	4
12370	android:theme="@style/Theme.Sherlock.Light.DarkActionBar">	23
30622	android:theme="@style/Theme.Sherlock.Light.Dialog"	10
1802	android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"	18
30330	android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"/>	12
59038	android:title="@string/add_account"	4
29389	android:title="@string/add_transaction"	3
56670	android:title="@string/btn_add_split"	4
21007	android:title="@string/btn_cancel"	8
20188	android:title="@string/btn_save"	15
29321	android:title="@string/delete"	2
58992	android:title="@string/edit_accounts"	5
59047	android:title="@string/export_ofx"	6
1769	android:title="@string/header_about_gnucash"	23
1494	android:title="@string/header_account_settings"	21
870	android:title="@string/header_backup_and_export_settings"	16
1565	android:title="@string/header_general_settings"	22
34487	android:title="@string/header_manage_books"	5
431	android:title="@string/header_passcode_settings"	11
762	android:title="@string/header_report_settings"	5
1010	android:title="@string/header_transaction_settings"	22
24332	android:title="@string/label_create_account"	9
64148	android:title="@string/label_recommend_app">	3
24766	android:title="@string/label_report_currency"	4
13200	android:title="@string/menu_chart_report"	6
29356	android:title="@string/menu_delete"	18
34163	android:title="@string/menu_duplicate_transaction"	7
30177	android:title="@string/menu_export_ofx"	8
7151	android:title="@string/menu_export_transactions"	17
28773	android:title="@string/menu_group_by"	3
29077	android:title="@string/menu_group_by_month"	3
29064	android:title="@string/menu_group_by_quarter"	3
29085	android:title="@string/menu_group_by_year"	3
24724	android:title="@string/menu_group_smaller_slices"	8
6825	android:title="@string/menu_item_recurring_transactions"	5
63337	android:title="@string/menu_item_scheduled_transactions"	3
29415	android:title="@string/menu_move"	11
59649	android:title="@string/menu_move_transaction"	3
4053	android:title="@string/menu_order_by_size"	9
34658	android:title="@string/menu_rename"	3
54468	android:title="@string/menu_scheduled_transactions"	8
9059	android:title="@string/menu_search_accounts"	9
64144	android:title="@string/menu_show_compact_view"	3
34703	android:title="@string/menu_title_enable_sync"	7
54443	android:title="@string/menu_title_favorite"	13
63779	android:title="@string/menu_title_new_book"/>	2
24697	android:title="@string/menu_toggle_average_lines"	9
24648	android:title="@string/menu_toggle_labels"	9
5409	android:title="@string/menu_toggle_legend"	16
24677	android:title="@string/menu_toggle_percentage_mode"	9
54303	android:title="@string/nav_menu_budgets"	4
31930	android:title="@string/nav_menu_export"/>	7
31635	android:title="@string/nav_menu_favorites"/>	11
54330	android:title="@string/nav_menu_help"/>	5
31778	android:title="@string/nav_menu_open"/>	9
31531	android:title="@string/nav_menu_reports"	11
54704	android:title="@string/nav_menu_scheduled_actions"/>	3
32007	android:title="@string/nav_menu_scheduled_backups"/>	9
31925	android:title="@string/nav_menu_scheduled_transactions"/>	9
31508	android:title="@string/nav_menu_settings"/>	12
58953	android:title="@string/settings"	2
30689	android:title="@string/title_about"/>	15
30582	android:title="@string/title_about"/><Preference	7
30715	android:title="@string/title_about_gnucash"/>	13
30768	android:title="@string/title_account_preferences"/>	7
35152	android:title="@string/title_accounts">	9
6810	android:title="@string/title_add_account"	11
27692	android:title="@string/title_add_transaction"	14
21086	android:title="@string/title_always_delete_exported_transactions"/>	15
51671	android:title="@string/title_backup_preference_category">	6
55114	android:title="@string/title_build_version"	4
30628	android:title="@string/title_build_version"/>	17
1583	android:title="@string/title_change_passcode"	13
51585	android:title="@string/title_create_backup_pref"	7
3986	android:title="@string/title_create_default_accounts"	11
54347	android:title="@string/title_create_export_schedule"	8
3960	android:title="@string/title_default_currency"	26
30927	android:title="@string/title_default_export_email"	13
51484	android:title="@string/title_default_export_format"	5
5582	android:title="@string/title_default_transaction_type"	15
3902	android:title="@string/title_delete_all_accounts"	13
2216	android:title="@string/title_delete_all_transactions"	11
51589	android:title="@string/title_dropbox_sync_preference"	2
20075	android:title="@string/title_edit_account"	20
25181	android:title="@string/title_enable_crashlytics"	13
33878	android:title="@string/title_enable_passcode"	8
31009	android:title="@string/title_enable_passcode"/>	2
21008	android:title="@string/title_export_all_transactions"/>	15
30967	android:title="@string/title_export_preference_category">	21
51668	android:title="@string/title_google_drive_sync_pref"	5
55097	android:title="@string/title_google_plus_community"	7
2728	android:title="@string/title_import_accounts"	17
30473	android:title="@string/title_license"	22
34348	android:title="@string/title_manage_books"	2
55315	android:title="@string/title_owncloud_sync_preference"	6
135	android:title="@string/title_passcode_preferences"/>	11
164	android:title="@string/title_passcode_preferences">	5
4870	android:title="@string/title_report_currency"	5
1051	android:title="@string/title_report_prefs">	9
13365	android:title="@string/title_reports"	8
51568	android:title="@string/title_restore_backup"	5
51423	android:title="@string/title_restore_last_backup"	5
57035	android:title="@string/title_save_opening_balances"	5
55821	android:title="@string/title_section_preferences">	2
55298	android:title="@string/title_select_backup_file"	3
18473	android:title="@string/title_settings"	19
20858	android:title="@string/title_sgml_ofx_header"	4
30921	android:title="@string/title_transaction_preferences"/>	7
35146	android:title="@string/title_transactions">	7
55160	android:title="@string/title_translate_gnucash"	7
248	android:title="@string/title_use_account_color"	6
57177	android:title="@string/title_use_compact_list"/>	5
3432	android:title="@string/title_use_double_entry"/>	18
25193	android:title="@string/title_xml_ofx_header"/>	12
35233	android:title="Accounts">	7
57500	android:title="Add	3
590	android:title="All	5
51560	android:title="Backup">	4
5448	android:title="Chart	3
63933	android:title="Compact	7
54266	android:title="Edit	3
63783	android:title="Enable	3
34972	android:title="Export..."/>	7
34917	android:title="Favorites"/>	7
57100	android:title="GnuCash	3
54206	android:title="Go	2
24942	android:title="Group	6
24620	android:title="Month"	6
30314	android:title="New	3
35151	android:title="Open..."/>	7
34193	android:title="Pie	4
54178	android:title="Preferences">	4
24628	android:title="Quarter"	6
427	android:title="Rate	20
6416	android:title="Recurring	6
35135	android:title="Reports"	7
25178	android:title="Restore	7
35212	android:title="Scheduled	7
35180	android:title="Scheduled"/>	7
55365	android:title="Select	4
3127	android:title="Send	8
35165	android:title="Settings"/>	7
35148	android:title="Settings">	7
47721	android:title="Title"	4
34958	android:title="Transactions">	7
1864	android:title="Week"/>	5
473	android:title="Year"	8
36861	android:toDegrees="0"	4
36812	android:toDegrees="1080"	4
36918	android:toDegrees="720"	4
36872	android:top="0dp"	5
63591	android:top="5dp"	4
56984	android:updatePeriodMillis="86400000"	5
25120	android:value="46fe045d00d4ad8a71014c53567be3368e10bd64"/>	16
13105	android:value="@string/app_version_name"	5
13300	android:value="GnuCash	5
34774	android:versionCode="1"	11
63644	android:versionCode="10"	6
36911	android:versionCode="100"	5
19066	android:versionCode="11"	4
19206	android:versionCode="12"	4
23348	android:versionCode="13"	5
34475	android:versionCode="14"	9
19303	android:versionCode="16"	6
12245	android:versionCode="17"	4
12172	android:versionCode="18"	4
52830	android:versionCode="19"	4
24630	android:versionCode="2"	11
7023	android:versionCode="20"	4
6753	android:versionCode="21"	6
28063	android:versionCode="22"	6
27931	android:versionCode="23"	4
27913	android:versionCode="24"	5
12312	android:versionCode="25"	4
13005	android:versionCode="26"	4
26908	android:versionCode="27"	4
27003	android:versionCode="28"	5
34775	android:versionCode="29"	4
13686	android:versionCode="3"	25
35403	android:versionCode="30"	4
58516	android:versionCode="31"	4
13567	android:versionCode="32"	4
13828	android:versionCode="33"	3
58556	android:versionCode="34"	3
58589	android:versionCode="35"	3
34007	android:versionCode="36"	4
33868	android:versionCode="37"	4
57473	android:versionCode="39"	5
20618	android:versionCode="4"	5
56480	android:versionCode="40"	7
52952	android:versionCode="41"	6
52803	android:versionCode="42"	6
56496	android:versionCode="43"	7
57606	android:versionCode="44"	4
57611	android:versionCode="45"	5
13966	android:versionCode="46"	7
13704	android:versionCode="47"	5
3783	android:versionCode="48"	8
20280	android:versionCode="5"	11
34803	android:versionCode="6"	6
30806	android:versionCode="7"	10
52009	android:versionCode="8"	6
56488	android:versionCode="9"	6
64392	android:versionCode="90"	1
34850	android:versionName="1.0"	10
51745	android:versionName="1.0.0"	4
24623	android:versionName="1.0.1"	5
24928	android:versionName="1.0.2"	5
20728	android:versionName="1.0.3"	5
20779	android:versionName="1.0.4.beta1"	5
63607	android:versionName="1.0.rc"	5
34419	android:versionName="1.1.0"	6
34356	android:versionName="1.1.0.beta1"	7
34760	android:versionName="1.1.1"	6
30937	android:versionName="1.1.2"	8
23342	android:versionName="1.2.0"	12
56538	android:versionName="1.2.1"	6
63645	android:versionName="1.2.2"	6
23738	android:versionName="1.2.3"	7
19075	android:versionName="1.2.3.beta"	4
19136	android:versionName="1.2.3.beta2"	4
13696	android:versionName="1.2.4"	15
34418	android:versionName="1.2.4.beta"	5
19373	android:versionName="1.2.5"	6
6505	android:versionName="1.2.6"	7
12315	android:versionName="1.2.6.beta"	4
12294	android:versionName="1.2.6.beta2"	4
52728	android:versionName="1.2.6.beta3"	4
27990	android:versionName="1.2.7"	6
12729	android:versionName="1.3.0"	4
28029	android:versionName="1.3.0.beta1"	4
28004	android:versionName="1.3.0.beta2"	5
64345	android:versionName="4.1.0"	1
36971	android:versionName="4.2.0"	5
2470	android:versionName="@string/app_version_name"	50
3439	android:visibility="gone"	95
19599	android:visibility="gone"/>	16
37430	android:visibility="invisible"	5
63592	android:visibility="invisible"/>	4
23176	android:visibility="visible"/>	10
34596	android:visible="false"	3
33921	android:weightSum="1">	8
34013	android:weightSum="2">	8
26013	android:weightSum="3"	16
24685	android:weightSum="3">	8
1980	android:weightSum="4"	6
34123	android:weightSum="4">	8
13373	android:weightSum="5"	7
33864	android:width="1dp"	18
63640	android:width="1dp"/>	4
36961	android:width="2dp"	5
1951	android:windowSoftInputMode="stateAlwaysHidden">	15
1575	android:windowSoftInputMode="stateAlwaysVisible">	5
9940	androidEspressoVersion	27
34930	androidEspressoVersion)	8
32528	androidEspressoVersion,	10
28081	androidOFX	22
9650	androidSupportTestVersion	24
9897	androidSupportTestVersion,	12
8746	androidSupportVersion	29
32516	androidSupportVersion)	4
9058	androidSupportVersion,	32
9592	androidTestCompile	30
30891	androidTestCompile('com.jayway.android.robotium:robotium-solo:5.2.1',	8
28314	androidTestCompile('com.jayway.android.robotium:robotium-solo:5.3.1')	5
28529	androidTestCompile('com.squareup.assertj:assertj-android:1.0.0'){	22
53016	androidTestCompile('com.squareup.assertj:assertj-android:1.1.0'){	5
9195	androidTestCompile('com.squareup.assertj:assertj-android:1.1.1'){	4
15052	anf&#252	7
59233	anfangen,\nlassen	4
15270	anfgen	10
56070	ange	2
21445	angi	6
15921	angole&#241	8
15567	angoleo</item>	10
21253	angres!	10
41592	aniamted	4
28020	anidada\n	10
51506	anidadas\n	6
39634	anim	29
41029	anim)	4
40063	anim.addListener(mHideListener)	4
39423	anim.addListener(mShowListener)	4
45265	anim.addListener(mVisAnimListener.withFinalVisibility(visibility))	9
42787	anim.mCurrentIteration	4
43299	anim.mInitialized	4
40832	anim.mListeners	4
40761	anim.mListeners.add(oldListeners.get(i))	4
40786	anim.mNeedsSort	4
40355	anim.mNodeMap	4
40458	anim.mNodeMap.put(nodeClone.animation,nodeClone)	4
41048	anim.mNodes	4
40448	anim.mNodes.add(nodeClone)	4
42394	anim.mPlayingBackwards	4
40622	anim.mPlayingSet	4
42355	anim.mPlayingState	4
42101	anim.mRunning	4
43077	anim.mSeekTime	4
40521	anim.mSortedNodes	4
40476	anim.mStarted	4
43284	anim.mStartedDelay	4
41206	anim.mTarget	4
41058	anim.mTerminated	4
42878	anim.mUpdateListeners	4
43276	anim.mUpdateListeners.add(oldListeners.get(i))	4
42818	anim.mValues	4
43238	anim.mValuesMap	4
42493	anim.mValuesMap.put(newValuesHolder.getPropertyName(),newValuesHolder)	4
43264	anim.mValues[i]	4
39938	anim.play(ObjectAnimator.ofFloat(mContainerView,"alpha",0))	4
39798	anim.play(ObjectAnimator.ofFloat(mContainerView,"alpha",1))	4
40100	anim.setDuration(1000)	4
45656	anim.setDuration(FADE_DURATION)	8
41113	anim.setDuration(delay)	4
41510	anim.setEvaluator(evaluator)	8
41629	anim.setFloatValues(values)	8
41154	anim.setIntValues(values)	8
45228	anim.setInterpolator(sAlphaInterpolator)	9
41261	anim.setObjectValues(values)	8
41704	anim.setValues(values)	8
40265	anim.start()	13
42133	anim.startAnimation()	4
41017	anim1	4
41018	anim2	4
41019	anim3	4
40966	anim3,this	4
40481	anim3:	4
41020	anim4	4
40549	animNode	4
41096	animNode.done	4
40175	animate	23
46269	animate)	8
39572	animate,false	4
39531	animate.	9
42155	animateFrame()	4
39738	animateToMode(boolean	4
40129	animateToMode(false)	4
39928	animateToMode(true)	4
47821	animateToTab(final	4
47873	animateToTab(position)	4
45252	animateToVisibility(int	8
42227	animateValue(0f)	4
42068	animateValue(1f)	4
41408	animateValue(float	8
42424	animateValue(fraction)	4
40904	animated	34
41888	animated).	4
39467	animated,then	4
41514	animated,use	4
42301	animated,which	4
41384	animated.	8
41947	animatedValue	4
41192	animates	8
41605	animating	8
50347	animating,but	5
47774	animating,make	4
44944	animating,the	4
35056	animation	38
40731	animation's	14
40056	animation)	21
40389	animation).	8
41541	animation,	8
40176	animation,in	16
41951	animation,including	4
41766	animation,prior	4
41148	animation,so	4
40775	animation,such	4
39504	animation.	23
39771	animation.</p>	15
40916	animation.clone()	4
40630	animation.removeListener(this)	4
42022	animationFrame()	4
42054	animationFrame().	4
41997	animationFrame(currentTime)	4
42760	animationFrame(long	4
41931	animationHandler	4
41914	animationHandler.sendEmptyMessage(ANIMATION_START)	4
57734	animationScale	2
57693	animationScale)	2
28557	animations	31
42232	animations,call	4
41922	animations,since	4
40989	animations,then	4
40650	animations.	11
29142	animations.")	3
41942	animations.get(i)	4
42235	animations.size()	4
41150	animator	12
39986	animator.	4
41023	animatorSet	4
40961	animatorSet)	4
40537	animatorSet,Node	4
41041	anims	4
59564	anly	2
56382	annan	2
56227	annat</string>	2
8522	annen	61
7487	annen</string>	20
29413	anni</item>	2
29469	anno</item>	2
23187	annotate	9
38177	annotated	4
24698	annotation	12
23044	annotations.	3
16383	annullata!	15
22574	annullata!</string>	6
29252	anomalo</string>	4
4374	anos</item>	16
2380	another	132
26561	another)	29
31974	another.	16
34427	another.getUID()	5
10374	another</string>	115
10992	ans</item>	8
56363	ansluta	2
36553	ant.propertyfile(file:	4
23124	anteckning</string>	9
2534	antes	95
39782	anticipate	4
21136	antiga</string>	31
2797	antigua</string>	13
15754	antillano	14
21686	antillegylden</item>	10
56014	antingen	2
56278	anvnda	2
56160	anvndarnamn/lsenord	2
56009	anvnder	2
813	any	279
39219	any.	9
63027	anymore	4
60080	anys</item>	3
13558	anything	41
44382	anything,everything	4
45382	anything.	8
25212	anyway	5
40975	anyway),circular	4
50246	anyway.	5
3618	anywhere	12
22157	anzeigen	8
5041	anzeigen</string>	27
5631	anzuf&#252	26
25707	anzuzeigen</string>	3
5179	ao	74
20352	aos	23
15325	aos</item>	5
19835	ap&#243	15
19526	apagada</string>	24
20872	apagadas	37
20642	apagadas!</string>	20
20668	apagadas.</string>	13
20300	apagadas.\n\nTem	16
19685	apagadas</string>	18
20402	apagados!!</string>	16
10810	apagar	29
19492	apagar</string>	22
54902	aperfeiadas\n	7
54888	aperfeioamentos\n	7
55646	aperfeioamentos\n</string>	2
25852	aperta</string>	5
22512	aperto	9
22556	aperto</string>	6
15381	apertura	30
15630	apertura</string>	29
38208	api()	4
15689	apilada	14
18964	apk,which	10
20296	aplica&#231	13
15610	aplicaci	13
3499	aplicaci&#243	34
15346	aplicacin	7
15715	aplicaciones	71
25746	aplicacions	8
12054	aplicaes	36
12036	aplicao,para	17
29165	aplicativo	12
55634	aplikace	5
52045	aplikacj	9
17447	aplikacji	31
17461	aplikacji,take	14
11155	aplikasi	13
1719	app	277
44641	app's	4
58522	app)</li>	2
4779	app,ento	6
56127	app-fel	2
50983	app-specific	5
47591	app-specified	4
7304	app.	18
9725	app:actionViewClass="android.support.v7.widget.SearchView"	8
54114	app:cardCornerRadius="4dp"	3
53927	app:cardElevation="5dp"	6
53925	app:cardPreventCornerOverlap="false"	6
53742	app:cardUseCompatPadding="true"	6
23170	app:elevation="0dp"	14
1636	app:elevation="10dp"	44
30193	app:elevation="6dp"	14
58584	app:elevation="@dimen/elevation_default"	3
20076	app:footerColor="@color/title_green"	12
57059	app:fragment="org.gnucash.android.ui.settings.AboutPreferenceFragment"	6
34441	app:fragment="org.gnucash.android.ui.settings.AccountPreferencesFragment"	8
57176	app:fragment="org.gnucash.android.ui.settings.BackupPreferenceFragment"	3
63706	app:fragment="org.gnucash.android.ui.settings.BookListFragment"	3
34477	app:fragment="org.gnucash.android.ui.settings.BookManagerFragment"	4
34457	app:fragment="org.gnucash.android.ui.settings.GeneralPreferenceFragment"/>	8
57167	app:fragment="org.gnucash.android.ui.settings.TransactionsPreferenceFragment"	6
53768	app:headerLayout="@layout/nav_drawer_header"	8
54235	app:keyboardKeysLayout="@xml/calculator_keyboard"/>	2
23278	app:layout_anchor="@+id/toolbar"	6
23232	app:layout_anchor="@id/toolbar"	9
698	app:layout_anchor="@id/toolbar_transaction_info"	6
348	app:layout_anchorGravity="bottom|left|start"	12
30443	app:layout_behavior="@string/appbar_scrolling_view_behavior"	3
30183	app:layout_behavior="@string/appbar_scrolling_view_behavior"/>	6
30214	app:layout_behavior="org.gnucash.android.ui.util.ScrollingFABBehavior"	9
1217	app:layout_scrollFlags="enterAlways"	16
23079	app:layout_scrollFlags="scroll|enterAlways"	17
53893	app:menu="@menu/nav_drawer_menu"/>	8
1278	app:popupTheme="@style/ThemeOverlay.AppCompat.Light"	32
589	app:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>	12
19917	app:selectedBold="true"/>	13
19422	app:selectedColor="@color/title_green"	13
30169	app:showAsAction="always"	24
54218	app:showAsAction="always"/>	16
20177	app:showAsAction="always|withText"/>	13
9910	app:showAsAction="collapseActionView|ifRoom"	11
34614	app:showAsAction="ifRoom"	15
1859	app:showAsAction="ifRoom|withText">	8
21107	app:showAsAction="never"	20
54415	app:showAsAction="never|withText"	13
30415	app:tabGravity="fill"	6
30295	app:tabIndicatorColor="@android:color/white"	12
1001	app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"	18
25257	appFolderId	9
45690	appInfo	4
45107	appInfo.loadIcon(pm)	4
45544	appInfo.loadLogo(pm)	4
49590	appSearchData	6
49649	appSearchData)	5
49850	appSearchIntent	5
9326	appWidgetId	26
9456	appWidgetId)	42
7648	appWidgetId,	52
56978	appWidgetId,-1)	5
10069	appWidgetId,MODE_PRIVATE)	3
9842	appWidgetId,MODE_PRIVATE).edit()	3
8904	appWidgetId,String	15
9743	appWidgetId,false)	5
54864	appWidgetId,long	8
9617	appWidgetId,null)	13
9926	appWidgetId,true)	6
52414	appWidgetIds	8
9979	appWidgetIds)	29
10102	appWidgetIds.length	5
8923	appWidgetIds[i]	11
10057	appWidgetManager	26
9013	appWidgetManager,	20
9587	appWidgetManager.updateAppWidget(appWidgetId,views)	27
18307	app\n	17
55873	appar	2
17042	apparaat	6
37847	appear	25
47382	appear,that	4
37272	appear.	8
37499	appearance	4
62350	appearing	5
23393	appears	20
28210	appen\n	4
3845	append	26
35005	append(context.getString(R.string.repeat_on_weekday,getDaysOfWeekString()))	3
54203	appended	5
54467	appends	4
10712	apper	31
1125	applicable	349
61860	applicable)	3
56602	applicable)</p>	7
49343	applicable.	4
63528	applicable</p>	4
17006	applicatie	37
1628	application	284
60487	application's	3
55403	application)	2
55234	application){	2
14005	application,and	8
12158	application-specific	5
30945	application-wide	3
25067	application.	42
13053	application</description>	65
21610	application</p>	7
37152	application</string>	4
2476	applicationId	52
25412	applicationVariants.all	6
25083	applications	21
36309	applied	29
45493	applies	10
3600	apply	143
35156	apply(final	2
25398	apply)	8
40608	apply.	4
34331	applyChartSetting()	3
42339	applyTransformation(float	4
7457	appointment	5
52890	appreciated	12
20724	approach	36
40640	approaches	8
1580	appropriate	104
43502	appropriate.	4
42443	appropriately	4
2070	appropriately.	20
47957	approval	4
33699	approximate	9
11802	apps	89
16097	apr&#232	15
16096	apr&#233	17
11388	apres	6
27911	apresentar	6
28952	apresentar</string>	13
10354	aprs	32
5894	aps	36
9796	apt	4
27414	aqua	7
29522	aquest	5
22468	aquesta	12
58503	ar.:	6
58228	ar.:.	6
58451	ar:..	6
58276	arabic	6
19247	arbitrary	44
12741	archivo	44
15753	archivo&#8230	23
15509	archivos	32
15332	archivos</string>	24
1876	are	426
47829	areAllItemsEnabled()	4
42345	areYouMyGroupie	4
42979	areYouMyGroupie.setIsActionButton(false)	4
30321	area	16
48728	area,default	4
37007	area,usually	5
37360	area.	9
8744	aren't	19
41911	arg)	4
31657	arg0	14
30534	arg0)	34
18159	arg0,Bundle	18
55120	arg0,int	2
18311	arg1)	18
55179	arg1,Intent	2
55144	arg2)	2
62434	argelino</item>	6
62401	argentino</item>	6
47	args	138
29731	args)	19
10096	args){	47
18419	args.getDouble(Transaction.EXTRA_AMOUNT,0)	7
59869	args.getLong(ARG_PARENT_ACCOUNT_ID)	5
29220	args.getLong(SELECTED_ACCOUNT_ID)	7
63290	args.getLong(TransactionsListFragment.ORIGIN_ACCOUNT_ID)	3
63307	args.getLong(UxArgument.ORIGIN_ACCOUNT_ID)	4
63339	args.getLong(UxArgument.PARENT_ACCOUNT_ID)	4
63407	args.getLong(UxArgument.SELECTED_ACCOUNT_ID)	4
63361	args.getLongArray(TransactionsListFragment.SELECTED_TRANSACTION_IDS)	3
63328	args.getLongArray(UxArgument.SELECTED_TRANSACTION_IDS)	4
18551	args.getSerializable(Transaction.EXTRA_AMOUNT)	14
18131	args.getString(Account.EXTRA_CURRENCY_CODE)	19
18293	args.getString(Intent.EXTRA_TEXT)	6
18235	args.getString(Intent.EXTRA_TITLE)	6
36653	args.getString(Intent.EXTRA_UID)	11
11297	args.getString(Transaction.EXTRA_ACCOUNT_UID)	12
18158	args.getString(Transaction.EXTRA_DOUBLE_ACCOUNT_UID)	7
35906	args.getString(Transaction.EXTRA_SPLITS)	2
64224	args.getString(UxArgument.ORIGIN_ACCOUNT_UID)	2
23927	args.getString(UxArgument.PARENT_ACCOUNT_UID)	14
31243	args.getString(UxArgument.SELECTED_ACCOUNT_UID)	23
29781	args.putInt("account_list_type",position)	3
54671	args.putInt("title",title)	13
19499	args.putLong(AccountsListFragment.ARG_PARENT_ACCOUNT_ID,mAccountId)	14
30639	args.putLong(AccountsListFragment.ARG_PARENT_ACCOUNT_ID,parentAccountId)	6
20065	args.putLong(NewTransactionFragment.SELECTED_TRANSACTION_ID,transactionId)	16
33257	args.putLong(ORIGIN_ACCOUNT_ID,mAccountID)	6
19902	args.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID,	18
30648	args.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID,accountId)	11
30495	args.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID,accountRowId)	8
54651	args.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID,id)	4
20032	args.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID,mAccountId)	16
56828	args.putLong(TransactionsListFragment.SELECTED_TRANSACTION_IDS,id)	6
13375	args.putLong(UxArgument.ORIGIN_ACCOUNT_ID,mAccountID)	5
63473	args.putLong(UxArgument.PARENT_ACCOUNT_ID,mAccountId)	4
63306	args.putLong(UxArgument.PARENT_ACCOUNT_ID,parentAccountId)	4
63393	args.putLong(UxArgument.SELECTED_ACCOUNT_ID,	4
63376	args.putLong(UxArgument.SELECTED_ACCOUNT_ID,accountId)	4
63294	args.putLong(UxArgument.SELECTED_ACCOUNT_ID,id)	4
63414	args.putLong(UxArgument.SELECTED_ACCOUNT_ID,mAccountId)	8
63386	args.putLong(UxArgument.SELECTED_TRANSACTION_ID,transactionId)	4
63467	args.putLong(UxArgument.SELECTED_TRANSACTION_IDS,id)	2
33031	args.putLongArray(SELECTED_TRANSACTION_IDS,getListView().getCheckedItemIds())	5
33264	args.putLongArray(SELECTED_TRANSACTION_IDS,selectedIds)	6
13698	args.putLongArray(UxArgument.SELECTED_TRANSACTION_IDS,getListView().getCheckedItemIds())	8
59653	args.putLongArray(UxArgument.SELECTED_TRANSACTION_IDS,transactionIds)	3
63882	args.putString(TransactionsListFragment.SELECTED_ACCOUNT_NAME,	2
31079	args.putString(TransactionsListFragment.SELECTED_ACCOUNT_NAME,accountName)	2
33374	args.putString(UxArgument.AMOUNT_STRING,baseAmountString)	7
54173	args.putString(UxArgument.BUDGET_UID,budgetUID)	2
60680	args.putString(UxArgument.ORIGIN_ACCOUNT_UID,mAccountUID)	5
59617	args.putString(UxArgument.ORIGIN_ACCOUNT_UID,originAccountUID)	3
64228	args.putString(UxArgument.PARENT_ACCOUNT_UID,mAccountUID)	2
60501	args.putString(UxArgument.PARENT_ACCOUNT_UID,parentAccountUID)	5
27056	args.putString(UxArgument.SCHEDULED_ACTION_UID,scheduledActionUID)	6
60475	args.putString(UxArgument.SELECTED_ACCOUNT_UID,accountUID)	7
27075	args.putString(UxArgument.SELECTED_ACCOUNT_UID,mAccountUID)	8
62620	args.putString(UxArgument.SELECTED_ACCOUNT_UID,uid)	4
27101	args.putString(UxArgument.SELECTED_TRANSACTION_UID,transactionUID)	8
41342	args[0]	4
41207	args[]	4
9163	argument	49
10986	arguments	69
48204	arguments)	4
47569	arguments.	6
64216	arguments.getString(UxArgument.PARENT_ACCOUNT_UID)	2
35242	arithmetic	15
55805	armazenamento	2
62392	armnio</item>	6
12843	around	26
4484	arquivo	25
28625	arquivo</item>	8
4054	arquivos	15
5747	arquivos</string>	13
27133	arrange	3
27306	array	49
7689	arrayAdapter	26
2339	arrayAdapter.add(backupFile.getName())	8
3526	arrayAdapter.add(dateFormatter.format(new	9
8455	arrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	15
62261	arrayList)	4
62039	arrayList.add(new	3
29951	array[]	9
29944	array[i]	6
30113	array[k]	6
3322	arreglos	18
29218	arresto	4
50240	arrival	5
5648	arrived	10
38088	arrow	4
1063	as	445
33275	as:<br/>	7
16089	as</item>	6
3804	as</string>	21
26581	asBigDecimal()	11
26242	asDouble(){	10
35136	asInterface	4
35163	asInterface.invoke(null,windowManagerBinder)	4
12815	asString(){	26
11445	asal</string>	7
24735	ascending	7
57360	asetettu</string>	3
47817	ask	4
45420	asked.	4
47330	aspect	4
16351	assegnare	15
9316	assemble	13
12724	assemblePattern	3
12500	assentament	13
22111	assentaments	10
29587	assentaments&#8230	10
14798	assentaments</string>	13
2015	assert	72
60408	assert(actionBar	3
60682	assert(mAccountUID	3
36713	assertEquals("	3
6111	assertEquals("-9.99",amount.toPlainString())	12
36650	assertEquals("10",temp.asBigDecimal().toPlainString())	9
51629	assertEquals("10.00",temp.asBigDecimal().toPlainString())	3
36676	assertEquals("1225.00",temp.toPlainString())	10
36502	assertEquals("15,75	9
36591	assertEquals("15.75	12
52739	assertEquals("15.75",money.asString())	6
58934	assertEquals("20.75",result.toPlainString())	3
36571	assertEquals("9.75",some.asString())	8
28492	assertEquals("EUR",account.getCurrency().getCurrencyCode())	7
28385	assertEquals("Edited	8
28364	assertEquals("Intent	8
13461	assertEquals("Intents	9
32732	assertEquals("JPY",t.getAmount().getCurrency().getCurrencyCode())	4
31254	assertEquals("JPY",t.getBalance(acc1.getUID()).getCurrency().getCurrencyCode())	8
34360	assertEquals("New	4
30833	assertEquals("T1000",transactionsList.get(0).getDescription())	7
54528	assertEquals("T1000",transactionsList.get(0).getName())	3
30957	assertEquals("T800",transactionsList.get(1).getDescription())	7
54565	assertEquals("T800",transactionsList.get(1).getName())	3
28380	assertEquals("intent-account",account.getUID())	7
4118	assertEquals(-1,id)	14
32575	assertEquals(-8.99,actualValue)	4
34422	assertEquals(0,adapter.getTransactionsCount(id))	14
51090	assertEquals(0,mTransactionsDbAdapter.getAllTransactionsCount())	4
13184	assertEquals(0,mTransactionsDbAdapter.getTransactionsCount(id))	16
6120	assertEquals(0,transAdapter.getAllTransactionsCount())	15
4018	assertEquals(0,transactions.size())	17
28907	assertEquals(1,targetCount)	13
4236	assertEquals(1,transactions.size())	21
31287	assertEquals(1,trxn.getSplits().size())	4
58854	assertEquals(12.25,temp.asDouble())	5
58872	assertEquals(15.50,temp.asDouble())	5
30867	assertEquals(2,accountsList.size())	9
34469	assertEquals(2,mSolo.getCurrentViews(ListView.class).size())	5
54728	assertEquals(2,transaction.getSplits().size())	7
54788	assertEquals(2,transactions.size())	7
36440	assertEquals(4.99,transaction.getAmount().asDouble())	3
13662	assertEquals(4.99,transaction.getBalance(DUMMY_ACCOUNT_UID).asDouble())	10
58842	assertEquals(9.95,temp.asDouble())	4
30964	assertEquals(ALPHA_ACCOUNT_NAME,accountsList.get(0).getName())	7
30749	assertEquals(BRAVO_ACCOUNT_NAME,accountsList.get(1).getName())	6
30849	assertEquals(BRAVO_ACCOUNT_NAME,trxn.getSplits().get(0).getAccountUID())	7
11354	assertEquals(CURRENCY_CODE,mMoneyInEur.getCommodity().getCurrencyCode())	2
11495	assertEquals(CURRENCY_CODE,mMoneyInEur.getCurrency().getCurrencyCode())	3
58923	assertEquals(CURRENCY_CODE,money.getCurrency().getCurrencyCode())	4
28350	assertEquals(DUMMY_ACCOUNT_CURRENCY_CODE,latest.getCurrency().getCurrencyCode())	11
36813	assertEquals(DUMMY_ACCOUNT_NAME,actualValue)	4
54763	assertEquals(DUMMY_ACCOUNT_UID,parentUID)	5
63795	assertEquals(EXPECTED_FILE_SIZE,file.length())	2
34368	assertEquals(Money.DEFAULT_CURRENCY_CODE,newestAccount.getCurrency().getCurrencyCode())	11
34480	assertEquals(NEW_ACCOUNT_NAME,newestAccount.getName())	10
34443	assertEquals(NEW_ACCOUNT_NAME,v.getText().toString())	7
28329	assertEquals(NUMBER_OF_ACCOUNTS	16
5320	assertEquals(NewTransactionFragment.DATE_FORMATTER.format(expectedDate),	7
4052	assertEquals(NewTransactionFragment.TIME_FORMATTER.format(expectedDate),	7
34378	assertEquals(TRANSACTION_COUNT,listView.getCount())	5
13094	assertEquals(TRANSACTION_NAME,trx.getDescription())	9
6062	assertEquals(TRANSACTION_NAME,trx.getName())	9
13859	assertEquals(TransactionFormFragment.DATE_FORMATTER.format(expectedDate),	13
13812	assertEquals(TransactionFormFragment.TIME_FORMATTER.format(expectedDate),	11
28676	assertEquals(TransactionType.DEBIT,split.getType())	9
34408	assertEquals(TransactionsActivity.class.getName(),classname)	6
58827	assertEquals(amount	3
58921	assertEquals(amount*-1,result.asDouble())	3
58908	assertEquals(amount*3,result.asDouble())	3
58871	assertEquals(amount,money.asDouble())	3
58896	assertEquals(amount-2,result.asDouble())	3
58902	assertEquals(amount/2,result.asDouble())	3
36512	assertEquals(amountString,mMoneyInEur.asString())	8
11583	assertEquals(amountString,mMoneyInEur.toPlainString())	3
58840	assertEquals(amountString,money.asString())	3
58905	assertEquals(amountString,money.toPlainString())	3
34444	assertEquals(beforeCount	13
28958	assertEquals(beforeCount,afterCount)	17
29055	assertEquals(beforeOriginCount-1,afterOriginCount)	10
36592	assertEquals(commodity,temp.getCommodity())	7
36669	assertEquals(currency,temp.getCurrency())	9
58843	assertEquals(decimal,temp.asBigDecimal())	4
34473	assertEquals(editedAccountName,tv.getText().toString())	12
4161	assertEquals(expectedValue,actualValue)	22
4335	assertEquals(expectedValue,value)	15
4715	assertEquals(false,mSolo.getImage(3).isEnabled())	9
34172	assertEquals(getActivity().getString(R.string.label_receive),label)	7
36704	assertEquals(getTranscationCount(),transactionsCount	3
63264	assertEquals(latest.getCurrency().getCurrencyCode(),"CHF")	2
63277	assertEquals(latest.getCurrency().getCurrencyCode(),"EUR")	2
51100	assertEquals(latest.getName(),"Edited	7
10303	assertEquals(mHashcode,mMoneyInEur.hashCode())	3
58926	assertEquals(mHashcode,money.hashCode())	4
36688	assertEquals(mMoneyInEur.asString(),mMoneyInEur.toPlainString())	8
58636	assertEquals(mPrefs.getString(mAccountsActivity.getString(R.string.key_owncloud_dir),null),OC_DIR)	3
58617	assertEquals(mPrefs.getString(mAccountsActivity.getString(R.string.key_owncloud_password),null),OC_PASSWORD)	3
58664	assertEquals(mPrefs.getString(mAccountsActivity.getString(R.string.key_owncloud_server),null),OC_SERVER)	3
58637	assertEquals(mPrefs.getString(mAccountsActivity.getString(R.string.key_owncloud_username),null),OC_USERNAME)	3
58619	assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_dir),null),OC_DIR)	4
58607	assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_password),null),OC_PASSWORD)	4
58625	assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_server),null),OC_SERVER)	4
58605	assertEquals(mPrefs.getString(mPreferenceActivity.getString(R.string.key_owncloud_username),null),OC_USERNAME)	4
6254	assertEquals(mTransactionTimeMillis,trx.getTimeMillis())	10
52783	assertEquals(money.asString(),money.toPlainString())	6
58844	assertEquals(new	5
63282	assertEquals(newestAccount.getCurrency().getCurrencyCode(),"CHF")	2
63267	assertEquals(newestAccount.getCurrency().getCurrencyCode(),"EUR")	2
63279	assertEquals(newestAccount.getName(),"New	3
58829	assertEquals(temp.getCurrency().getCurrencyCode(),"USD")	5
30917	assertEquals(transaction,clone1)	3
36862	assertEquals(transaction.getAccountUID(),actualValue)	5
32590	assertEquals(transaction.getAmount(),amount)	6
28598	assertEquals(transaction.getBalance(DUMMY_ACCOUNT_UID),amount)	11
4559	assertEquals(transaction.getDescription(),description)	13
29152	assertEquals(transaction.getDescription(),name)	9
32497	assertEquals(transaction.getName(),name)	6
54562	assertEquals(transaction.getNote(),description)	4
29006	assertEquals(transaction.getNote(),transactionNotes)	7
6072	assertEquals(transactionsCount	21
5458	assertEquals(trx.getAccountUID(),DUMMY_ACCOUNT_UID)	9
36874	assertEquals(v.getText().toString(),"New	4
57263	assertEquals(v.getText().toString(),"Test	2
28257	assertFalse(accountFound)	9
13047	assertFalse(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID))	4
6252	assertFalse(saveButtonView.isEnabled())	7
34482	assertFalse(uid.contains("	5
59788	assertFalse(uid.contains("tele	2
33123	assertNotNull(ACCOUNTS_CURRENCY)	4
32984	assertNotNull(DUMMY_ACCOUNT_CURRENCY)	7
28386	assertNotNull(account)	8
34474	assertNotNull(accountsListView)	14
29082	assertNotNull(expectedException)	6
34695	assertNotNull(file)	16
4141	assertNotNull(fragment)	28
34404	assertNotNull(listView)	5
34460	assertNotNull(lv)	8
51117	assertNotNull(mAcccountsActivity)	5
35235	assertNotNull(mAccountsActivity)	6
33243	assertNotNull(mDb)	9
35031	assertNotNull(mDbHelper)	7
34436	assertNotNull(mSolo.getCurrentListViews())	7
34438	assertNotNull(mSolo.getCurrentListViews().get(0))	7
33113	assertNotNull(mSplitsDbAdapter)	9
32978	assertNotNull(mTransactionsDbAdapter)	8
54796	assertNotNull(parentUID)	5
59811	assertNotSame(result,mMoneyInEur)	1
58909	assertNotSame(result,money)	4
13459	assertThat(!accountExists(CHILD_ACCOUNT_UID)).isTrue()	3
13961	assertThat(!accountExists(PARENT_ACCOUNT_UID)).isTrue()	3
13604	assertThat(!accountExists(SIMPLE_ACCOUNT_UID)).isTrue()	3
33858	assertThat("-9.99").isEqualTo(amount.toPlainString())	3
28702	assertThat("-9.99").isEqualTo(amountString)	4
51593	assertThat("10").isNotEqualTo(temp.asBigDecimal().toPlainString())	3
36585	assertThat("12.25").isEqualTo(temp.toPlainString())	9
36533	assertThat("157.50").isEqualTo(result.toPlainString())	7
13582	assertThat("Intents	6
58746	assertThat(0).isEqualTo(mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID))	3
13672	assertThat(0).isEqualTo(mTransactionsDbAdapter.getTransactionsCount(id))	9
58889	assertThat(2).isEqualTo(mAccountsDbAdapter.getTotalAccountCount())	4
13350	assertThat(4.99).isEqualTo(transaction.getBalance(DUMMY_ACCOUNT_UID).asDouble())	6
62817	assertThat(4.99).isEqualTo(transaction.getBalance(TRANSACTIONS_ACCOUNT_UID).asDouble())	4
31759	assertThat(AmountParser.parse("123")).isEqualTo(new	3
31804	assertThat(AmountParser.parse("123,45")).isEqualTo(new	3
31879	assertThat(AmountParser.parse("123.45")).isEqualTo(new	3
59922	assertThat(BooksDbAdapter.getInstance().getActiveBookUID()).isEqualTo(book.getUID())	3
58912	assertThat(Boolean.parseBoolean(isExported)).isFalse()	2
57532	assertThat(BudgetAmountsDbAdapter.getInstance().getRecordsCount()).isZero()	3
54431	assertThat(BudgetsDbAdapter.getInstance().getRecordsCount()).isZero()	4
54434	assertThat(CommoditiesDbAdapter.getInstance().getRecordsCount()).isGreaterThan(50)	4
59440	assertThat(Commodity.DEFAULT_COMMODITY).isEqualTo(Commodity.JPY)	3
60238	assertThat(Commodity.DEFAULT_COMMODITY).isEqualTo(Commodity.USD)	3
58580	assertThat(Commodity.DEFAULT_COMMODITY).isEqualTo(expectedDefaultCommodity)	8
23444	assertThat(DUMMY_ACCOUNT_UID).isEqualTo(parentUID)	9
58542	assertThat(GnuCashApplication.getDefaultCurrencyCode()).isEqualTo("JPY")	8
60264	assertThat(GnuCashApplication.getDefaultCurrencyCode()).isEqualTo("USD")	3
58540	assertThat(GnuCashApplication.getDefaultCurrencyCode()).isEqualTo(expectedCode)	8
58541	assertThat(GnuCashApplication.getDefaultCurrencyCode()).isNotEqualTo("JPY")	8
36644	assertThat(Money.DEFAULT_CURRENCY_CODE).isEqualTo(temp.getCurrency().getCurrencyCode())	6
52513	assertThat(PreferencesHelper.getLastExportTime())	2
54480	assertThat(PricesDbAdapter.getInstance().getRecordsCount()).isZero()	4
33062	assertThat(ROOT_ACCOUNT_UID).isEqualTo(parentUID)	4
62986	assertThat(TRANSACTION_NAME).isEqualTo(transaction.getDescription())	4
13413	assertThat(TRANSACTION_NAME).isEqualTo(trx.getDescription())	6
52471	assertThat(TimestampHelper.getTimestampForUtcString(the1234567890thSecondUtcString))	5
52522	assertThat(TimestampHelper.getTimestampForUtcString(the1234567890thSecondWithMillisecondsUtcString))	5
52600	assertThat(TimestampHelper.getTimestampForUtcString(unixBillenniumUtcString))	5
52546	assertThat(TimestampHelper.getTimestampForUtcString(unixBillenniumWithMillisecondsUtcString))	5
52485	assertThat(TimestampHelper.getTimestampFromUtcString(the1234567890thSecondUtcString))	4
52516	assertThat(TimestampHelper.getTimestampFromUtcString(the1234567890thSecondWithMillisecondsUtcString))	4
52417	assertThat(TimestampHelper.getTimestampFromUtcString(unixBillenniumUtcString))	4
52644	assertThat(TimestampHelper.getTimestampFromUtcString(unixBillenniumWithMillisecondsUtcString))	4
52530	assertThat(TimestampHelper.getUtcStringForTimestamp(result))	5
52421	assertThat(TimestampHelper.getUtcStringForTimestamp(the1234567890thSecondTimestamp))	5
52514	assertThat(TimestampHelper.getUtcStringForTimestamp(unixBillenniumTimestamp))	5
52561	assertThat(TimestampHelper.getUtcStringFromTimestamp(result))	4
52568	assertThat(TimestampHelper.getUtcStringFromTimestamp(the1234567890thSecondTimestamp))	4
52573	assertThat(TimestampHelper.getUtcStringFromTimestamp(unixBillenniumTimestamp))	4
14004	assertThat(TransactionFormFragment.DATE_FORMATTER.format(expectedDate))	6
13716	assertThat(TransactionFormFragment.TIME_FORMATTER.format(expectedDate))	6
26066	assertThat(account).isNotNull()	13
955	assertThat(account.getColor()).isEqualTo(Account.DEFAULT_COLOR)	3
317	assertThat(account.getColorHexCode()).isEqualTo(Account.DEFAULT_COLOR)	4
716	assertThat(account.getCommodity()).isEqualTo(Commodity.EUR)	10
26062	assertThat(account.getCommodity().getCurrencyCode()).isEqualTo("EUR")	3
26465	assertThat(account.getCommodity().getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE)	3
26586	assertThat(account.getCurrency()).isEqualTo(Currency.getInstance("JPY"))	7
319	assertThat(account.getCurrency()).isEqualTo(Currency.getInstance("USD"))	10
26046	assertThat(account.getCurrency().getCurrencyCode()).isEqualTo("EUR")	12
26196	assertThat(account.getCurrency().getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE)	6
1604	assertThat(account.getDescription()).isEqualTo("")	7
34012	assertThat(account.getFullName()).isEqualTo(fullName)	8
34056	assertThat(account.getFullName()).isEqualTo(fullName.trim())	4
26037	assertThat(account.getName()).isEqualTo("Intent	12
33877	assertThat(account.getName()).isEqualTo("Name")	8
33991	assertThat(account.getName()).isEqualTo(fullName.trim())	4
26181	assertThat(account.getUID()).isEqualTo("intent-account")	15
30755	assertThat(account.getUID()).isNotNull()	3
13404	assertThat(accountExists(CHILD_ACCOUNT_UID)).isFalse()	2
13706	assertThat(accountExists(SIMPLE_ACCOUNT_UID)).isFalse()	2
13050	assertThat(accountExists(subAccount.getUID())).isTrue()	3
58817	assertThat(accounts).extracting("mAccountType").contains(AccountType.ROOT)	5
61747	assertThat(accounts).extracting("mUID").contains(uid)	5
13060	assertThat(accounts).hasSize(0)	2
33146	assertThat(accounts).hasSize(2)	12
61764	assertThat(accounts).hasSize(3)	5
33229	assertThat(accounts).hasSize(5)	4
28464	assertThat(accounts).isNotNull()	14
58877	assertThat(accountsList).contains(first,Index.atIndex(0))	5
58882	assertThat(accountsList).contains(second,Index.atIndex(1))	2
31153	assertThat(action.getEndTime()).isEqualTo(0)	14
34086	assertThat(action.getPeriodType()).isEqualTo(PeriodType.DAY)	9
34093	assertThat(action.getPeriodType()).isEqualTo(PeriodType.WEEK)	8
31356	assertThat(action.getRecurrence().getPeriodType()).isEqualTo(PeriodType.WEEK)	4
30244	assertThat(activeBook.getDisplayName()).isEqualTo("Book	6
13251	assertThat(actualOuputDE).isEqualTo("15,75	7
14013	assertThat(actualOuputUS).isEqualTo("15.75	7
13444	assertThat(actualOuputUS).isEqualTo(symbol	3
28618	assertThat(afterCount).isEqualTo(beforeCount)	6
59089	assertThat(afterOriginCount).isEqualTo(beforeOriginCount	9
29135	assertThat(afterOriginCount).isEqualTo(beforeOriginCount-1)	5
62950	assertThat(allSplits).extracting("mAccountUID")	4
63014	assertThat(allSplits).extracting("mQuantity").contains(expectedValue).doesNotContain(expectedQty)	4
62989	assertThat(allSplits).extracting("mValue").contains(expectedValue).doesNotContain(expectedQty)	4
59354	assertThat(allTransactions).hasSize(transactionCount+1)	5
36103	assertThat(amount).isEqualTo("35000/100")	7
36240	assertThat(amount).isEqualTo("4590/100")	7
58841	assertThat(amount.toPlainString()).isEqualTo("123.45")	3
58858	assertThat(amount.toPlainString()).isEqualTo("1234.50")	3
28706	assertThat(amountString).startsWith("-")	4
7378	assertThat(assetSplit1.getAccountUID()).isEqualTo("dae686a1636addc0dae1ae670701aa4a")	3
7425	assertThat(assetSplit1.getMemo()).isEqualTo("tip")	3
7493	assertThat(assetSplit1.getQuantity()).isEqualTo(new	3
7819	assertThat(assetSplit1.getTransactionUID()).isEqualTo("042ff745a80e94e6237fb0549f6d32ae")	3
8165	assertThat(assetSplit1.getType()).isEqualTo(TransactionType.CREDIT)	3
7723	assertThat(assetSplit1.getUID()).isEqualTo("4930f412665a705eedba39789b6c3a35")	3
8324	assertThat(assetSplit1.getValue()).isEqualTo(new	3
8177	assertThat(assetSplit1.isPairOf(expenseSplit)).isFalse()	3
7758	assertThat(assetSplit2.getAccountUID()).isEqualTo("ee139a5658a0d37507dc26284798e347")	3
8219	assertThat(assetSplit2.getMemo()).isNull()	3
8676	assertThat(assetSplit2.getQuantity()).isEqualTo(new	3
7737	assertThat(assetSplit2.getTransactionUID()).isEqualTo("042ff745a80e94e6237fb0549f6d32ae")	3
8156	assertThat(assetSplit2.getType()).isEqualTo(TransactionType.CREDIT)	3
7921	assertThat(assetSplit2.getUID()).isEqualTo("b97cd9bbaa17f181d0a5b39b260dabda")	3
8486	assertThat(assetSplit2.getValue()).isEqualTo(new	3
8094	assertThat(assetSplit2.isPairOf(expenseSplit)).isFalse()	3
8425	assertThat(assetsAccount.getAccountType()).isEqualTo(AccountType.ASSET)	3
8195	assertThat(assetsAccount.getName()).isEqualTo("Assets")	3
8067	assertThat(assetsAccount.getParentUID()).isEqualTo(rootAccount.getUID())	3
8356	assertThat(assetsAccount.isHidden()).isFalse()	3
7426	assertThat(assetsAccount.isPlaceholderAccount()).isTrue()	3
51039	assertThat(backupFiles).hasSize(1)	15
50662	assertThat(backupFiles[0]).exists().hasExtension("gnca")	15
60088	assertThat(backupFiles[0]).hasExtension("gnca")	6
56736	assertThat(backupFolder).exists()	15
56702	assertThat(backupFolder.listFiles()).hasSize(0)	9
57222	assertThat(backupFolder.listFiles()).hasSize(1)	3
56723	assertThat(backupFolder.listFiles()).isEmpty()	15
63670	assertThat(backupResult).isTrue()	3
62697	assertThat(balance).isEqualTo(expectedBalance)	2
33839	assertThat(balanced).isNotNull()	4
33994	assertThat(balanced.getSplits()).extracting("mAccountUID").contains(imbalanceUID)	4
34032	assertThat(balanced.getSplits()).hasSize(2)	4
63037	assertThat(baseSplit.getQuantity()).isEqualTo(expectedAmount)	4
62911	assertThat(baseSplit.getQuantity()).isEqualTo(expectedValueAmount)	4
62927	assertThat(baseSplit.getType()).isEqualTo(TransactionType.DEBIT)	4
62864	assertThat(baseSplit.getValue()).isEqualTo(expectedAmount)	4
62855	assertThat(baseSplit.getValue()).isEqualTo(expectedValueAmount)	4
59914	assertThat(beforeCount	7
32501	assertThat(book.isActive()).isFalse()	2
57986	assertThat(booksDbAdapter.getRecord(bookUID)).isNotNull()	3
58269	assertThat(booksDbAdapter.getRecordsCount()).isEqualTo(booksCount	3
54319	assertThat(budget.getAmount("account1")).isEqualTo(accountAmount.abs())	2
54472	assertThat(budget.getAmountSum()).isEqualTo(new	2
54450	assertThat(budget.getBudgetAmounts()).extracting("mBudgetUID")	2
54356	assertThat(budget.getBudgetAmounts()).hasSize(1)	2
54222	assertThat(budget.getBudgetAmounts()).isNotNull()	2
54283	assertThat(budget.getNumberOfAccounts()).isEqualTo(3)	2
54199	assertThat(budgetAmount.getBudgetUID()).isEqualTo(budget.getUID())	2
54503	assertThat(budgets).hasSize(2)	2
28474	assertThat(checkbox).isVisible()	6
58915	assertThat(child.getFullName()).isEqualTo("Test:Child")	4
33361	assertThat(clone1).isEqualTo(split)	7
33504	assertThat(clone2.getUID()).isNotEqualTo(split.getUID())	9
33305	assertThat(clone2.toCsv()).isEqualTo(split.toCsv())	7
36195	assertThat(commodity.getSmallestFraction()).isEqualTo(100)	7
36039	assertThat(commodity.getSmallestFraction()).isEqualTo(1000)	4
36347	assertThat(commodity.getSmallestFractionDigits()).isEqualTo(0)	4
36013	assertThat(commodity.getSmallestFractionDigits()).isEqualTo(1)	4
36080	assertThat(commodity.getSmallestFractionDigits()).isEqualTo(2)	7
54240	assertThat(compactedBudgetAmounts).extracting("mAccountUID")	2
54336	assertThat(compactedBudgetAmounts).extracting("mAccountUID").hasSize(3)	2
54381	assertThat(compactedBudgetAmounts).extracting("mPeriodNum")	2
54175	assertThat(compactedBudgetAmounts).extracting("mPeriodNum").hasSize(3)	2
54477	assertThat(compactedBudgetAmounts).hasSize(3)	2
32789	assertThat(currencies).hasSize(expectedSize)	5
58293	assertThat(dbPath).doesNotExist()	3
58304	assertThat(dbPath).exists()	3
62258	assertThat(defaultCurrencyCode).isEqualTo("AFA")	3
62259	assertThat(defaultCurrencyCode).isEqualTo("EUR")	3
26234	assertThat(descendants).hasSize(4)	3
8132	assertThat(diningAccount.getAccountType()).isEqualTo(AccountType.EXPENSE)	3
7483	assertThat(diningAccount.getColor()).isEqualTo(Account.DEFAULT_COLOR)	3
7890	assertThat(diningAccount.getCommodity().getCurrencyCode()).isEqualTo("USD")	3
8466	assertThat(diningAccount.getDefaultTransferAccountUID()).isNull()	3
8693	assertThat(diningAccount.getDescription()).isEqualTo("Dining")	3
8536	assertThat(diningAccount.getName()).isEqualTo("Dining")	3
7805	assertThat(diningAccount.getParentUID()).isEqualTo("9b607f63aecb1a175556676904432365")	3
8015	assertThat(diningAccount.isFavorite()).isFalse()	3
7718	assertThat(diningAccount.isHidden()).isFalse()	3
8065	assertThat(diningAccount.isPlaceholderAccount()).isFalse()	3
59624	assertThat(dummyAccountTrns).hasSize(2)	7
59616	assertThat(dummyAccountTrns.get(0).getDescription()).isEqualTo(dummyAccountTrns.get(1).getDescription())	7
59629	assertThat(dummyAccountTrns.get(0).getTimeMillis()).isNotEqualTo(dummyAccountTrns.get(1).getTimeMillis())	3
62908	assertThat(editedTransaction.getBalance(TRANSFER_ACCOUNT_UID)).isEqualTo(expectedValue)	5
59380	assertThat(editedTransaction.getDescription()).isEqualTo(trnName)	5
62968	assertThat(editedTransaction.getSplits()).hasSize(2)	4
59357	assertThat(editedTransaction.getSplits()).isEqualTo(mTransaction.getSplits())	5
62960	assertThat(editedTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)	4
62095	assertThat(enableCrashlytics).isFalse()	3
62247	assertThat(enableCrashlytics).isTrue()	3
54491	assertThat(enabledActions).hasSize(1)	2
54210	assertThat(enabledActions.get(0).getRecurrence().getPeriodType()).isEqualTo(PeriodType.WEEK)	2
52681	assertThat(epochZero.getTime()).isZero()	5
59477	assertThat(euroSplit.getQuantity()).isEqualTo(expectedQty)	4
59396	assertThat(euroSplit.getValue()).isEqualTo(expectedValue)	4
62880	assertThat(euroTransxns).hasSize(0)	4
54452	assertThat(expandedBudgetAmount).extracting("mAccountUID").hasSize(6)	2
54197	assertThat(expandedBudgetAmount).extracting("mPeriodNum").hasSize(6)	2
54253	assertThat(expandedBudgetAmount).hasSize(6)	2
51037	assertThat(expected,equalTo(actual))	4
8120	assertThat(expenseSplit.getAccountUID()).isEqualTo("6a7cf8267314992bdddcee56d71a3908")	3
7765	assertThat(expenseSplit.getMemo()).isNull()	3
8243	assertThat(expenseSplit.getQuantity()).isEqualTo(new	3
7821	assertThat(expenseSplit.getTransactionUID()).isEqualTo("042ff745a80e94e6237fb0549f6d32ae")	3
7418	assertThat(expenseSplit.getType()).isEqualTo(TransactionType.DEBIT)	3
8380	assertThat(expenseSplit.getUID()).isEqualTo("c50cce06e2bf9085730821c82d0b36ca")	3
8493	assertThat(expenseSplit.getValue()).isEqualTo(new	3
31057	assertThat(exportFile.getName()).endsWith(format.getExtension())	6
30990	assertThat(exportedFiles).hasSize(1)	2
31409	assertThat(exportedFiles).hasSize(2)	2
8748	assertThat(exporter.generateExport()).isEmpty()	5
31443	assertThat(file).exists().hasExtension("ofx")	2
31469	assertThat(file).exists().hasExtension("qif")	2
31388	assertThat(file.length()).isGreaterThan(0L)	2
34103	assertThat(firstAccount).isNotNull()	4
34002	assertThat(firstAccount.getFullName()).isEqualTo(account1.getFullName())	4
33872	assertThat(firstAccount.getUID()).isEqualTo(account1.getUID())	4
63045	assertThat(firstAcctBalance).isEqualTo(editedTransaction.getBalance(TRANSACTIONS_ACCOUNT_UID))	4
31351	assertThat(folder).exists()	15
31195	assertThat(folder.listFiles().length).isEqualTo(1)	13
28689	assertThat(fragment).isInstanceOf(TransactionsListFragment.class)	6
29061	assertThat(fragment).isNotNull()	6
30426	assertThat(generatedName).isEqualTo("Book	5
30354	assertThat(generatedName).isNotEqualTo(book3.getDisplayName())	5
27499	assertThat(getActivity().findViewById(R.id.checkbox)).isVisible()	6
27368	assertThat(getActivity().findViewById(R.id.checkbox_parent_account)).isVisible()	5
34014	assertThat(getActivity().getString(R.string.label_receive)).isEqualTo(label)	3
28743	assertThat(getTransactionCount()).isEqualTo(transactionsCount	2
59776	assertThat(id).isGreaterThan(0)	6
33914	assertThat(id1).isGreaterThan(0)	14
33978	assertThat(id2).isGreaterThan(0)	14
4964	assertThat(imbalanceAcctUID).isNotEmpty()	7
5644	assertThat(imbalanceAcctUID).isNotNull()	7
4012	assertThat(imbalanceAcctUID).isNull()	14
28731	assertThat(imbalanceSplits).hasSize(1)	13
28831	assertThat(imbalanceTextView).hasText("-4.99	4
26362	assertThat(imbalanceUID).isNotNull().isNotEmpty()	6
11331	assertThat(imbalanceUID).isNull()	8
52696	assertThat(lastExportTime).isEqualTo(TimestampHelper.getTimestampForEpochZero())	5
52578	assertThat(lastExportTime).isEqualTo(TimestampHelper.getTimestampFromEpochZero())	4
25973	assertThat(latest.getCommodity().getCurrencyCode()).isEqualTo(ACCOUNTS_CURRENCY_CODE)	3
26010	assertThat(latest.getCurrency().getCurrencyCode()).isEqualTo(ACCOUNTS_CURRENCY_CODE)	6
19378	assertThat(latest.getCurrency().getCurrencyCode()).isEqualTo(DUMMY_ACCOUNT_CURRENCY_CODE)	14
26023	assertThat(latest.getName()).isEqualTo(editedAccountName)	15
18916	assertThat(mAccountsDbAdapter.getAccount(DUMMY_ACCOUNT_UID).getTransactionCount()).isEqualTo(1)	10
19322	assertThat(mAccountsDbAdapter.getAccount(account1.getUID()).getTransactions()).hasSize(1)	7
36672	assertThat(mAccountsDbAdapter.getAccountBalance(DUMMY_ACCOUNT_UID)).isEqualTo(Money.createZeroInstance(CURRENCY_CODE))	8
54811	assertThat(mAccountsDbAdapter.getAccountBalance(TRANSACTIONS_ACCOUNT_UID)).isEqualTo(Money.createZeroInstance(CURRENCY_CODE))	6
54855	assertThat(mAccountsDbAdapter.getAccountBalance(account.getUID()))	4
36538	assertThat(mAccountsDbAdapter.getAccountBalance(account.getUID())).isEqualTo(new	10
35068	assertThat(mAccountsDbAdapter.getAllRecords()).hasSize(1)	2
32685	assertThat(mAccountsDbAdapter.getCurrenciesInUse()).hasSize(++expectedSize)	5
32586	assertThat(mAccountsDbAdapter.getCurrenciesInUse()).hasSize(expectedSize)	3
26223	assertThat(mAccountsDbAdapter.getFullyQualifiedAccountName(savingsAcctUID)).isEqualTo("Assets:Savings	3
26481	assertThat(mAccountsDbAdapter.getParentAccountUID(savingsAcctUID)).isEqualTo(assetsUID)	3
26263	assertThat(mAccountsDbAdapter.getParentAccountUID(savingsAcctUID)).isEqualTo(currentAssetsUID)	3
33255	assertThat(mAccountsDbAdapter.getRecord(DUMMY_ACCOUNT_UID).getTransactionCount()).isEqualTo(1)	8
32954	assertThat(mAccountsDbAdapter.getRecord(SIMPLE_ACCOUNT_UID).getTransactionCount()).isEqualTo(1)	3
52497	assertThat(mAccountsDbAdapter.getRecord(account1.getUID()).getDefaultTransferAccountUID()).isNull()	2
61774	assertThat(mAccountsDbAdapter.getRecord(account1.getUID()).getTransactions()).hasSize(1)	3
52657	assertThat(mAccountsDbAdapter.getRecord(account4.getUID()).getDefaultTransferAccountUID()).isNull()	2
26199	assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(0)	8
13781	assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(1)	4
11190	assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(1L)	5
13625	assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(2)	12
52608	assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(2L)	7
13349	assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(3)	9
52446	assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(3L)	2
52518	assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(4L)	2
8191	assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(5)	5
13185	assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(5L)	3
13306	assertThat(mAccountsDbAdapter.getRecordsCount()).isEqualTo(accountCount+2)	2
13234	assertThat(mAccountsDbAdapter.getRecordsCount()).isGreaterThan(20)	6
62215	assertThat(mAccountsDbAdapter.getRecordsCount()).isGreaterThan(60)	3
52705	assertThat(mAccountsDbAdapter.getRecordsCount()).isZero()	10
23928	assertThat(mAccountsDbAdapter.getSimpleAccountList()).extracting("mAccountType").contains(AccountType.TRADING)	6
23841	assertThat(mAccountsDbAdapter.getSubAccountCount(DUMMY_ACCOUNT_UID)).isEqualTo(0)	9
33045	assertThat(mAccountsDbAdapter.getSubAccountCount(SIMPLE_ACCOUNT_UID)).isEqualTo(0)	3
23626	assertThat(mAccountsDbAdapter.getSubAccountCount(mAccountsDbAdapter.getOrCreateGnuCashRootAccountUID())).isEqualTo(2)	9
58883	assertThat(mAccountsDbAdapter.getSubAccountCount(parent.getUID())).isEqualTo(1)	5
6270	assertThat(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID)).isFalse()	5
6189	assertThat(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID)).isTrue()	5
30362	assertThat(mBooksDbAdapter.generateDefaultBookName()).isEqualTo("Book	3
32633	assertThat(mBooksDbAdapter.getActiveBookUID()).isEqualTo(book1.getUID())	2
32554	assertThat(mBooksDbAdapter.getActiveBookUID()).isNotEqualTo(book.getUID())	3
32568	assertThat(mBooksDbAdapter.getActiveBookUID()).isNotNull()	2
32587	assertThat(mBooksDbAdapter.getRecord(book.getUID()).getDisplayName()).isEqualTo("Book	3
32779	assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(1)	3
30387	assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(2L)	2
30308	assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(3L)	2
54545	assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(bookCount	2
54534	assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(bookCount)	2
30267	assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(bookCount+1)	4
32834	assertThat(mBooksDbAdapter.getRecordsCount()).isEqualTo(booksCount+1)	5
7597	assertThat(mBooksDbAdapter.getRecordsCount()).isZero()	5
32889	assertThat(mBooksDbAdapter.isActive(book2.getUID())).isTrue()	2
54184	assertThat(mBudgetAmountsDbAdapter.getAllRecords().get(0).getUID()).isEqualTo(budgetAmount.getUID())	2
54245	assertThat(mBudgetAmountsDbAdapter.getRecordsCount()).isEqualTo(1)	2
54225	assertThat(mBudgetAmountsDbAdapter.getRecordsCount()).isEqualTo(2)	2
54421	assertThat(mBudgetAmountsDbAdapter.getRecordsCount()).isEqualTo(3)	2
54265	assertThat(mBudgetAmountsDbAdapter.getRecordsCount()).isZero()	2
54510	assertThat(mBudgetsDbAdapter.getAccountBudgets(mSecondAccount.getUID())).hasSize(1)	2
54377	assertThat(mBudgetsDbAdapter.getRecordsCount()).isEqualTo(1)	2
54327	assertThat(mBudgetsDbAdapter.getRecordsCount()).isEqualTo(2)	2
54314	assertThat(mBudgetsDbAdapter.getRecordsCount()).isZero()	2
54234	assertThat(mRecurrenceDbAdapter.getRecordsCount()).isEqualTo(1)	2
54285	assertThat(mRecurrenceDbAdapter.getRecordsCount()).isEqualTo(2)	2
54325	assertThat(mRecurrenceDbAdapter.getRecordsCount()).isZero()	2
54364	assertThat(mScheduledActionDbAdapter.getAllRecords()).hasSize(2)	2
28864	assertThat(mSolo.getView(R.id.input_transaction_type)).isNotVisible()	4
18992	assertThat(mSplitsDbAdapter.fetchSplitsForAccount(DUMMY_ACCOUNT_UID).getCount()).isEqualTo(1)	10
33197	assertThat(mSplitsDbAdapter.fetchSplitsForAccount(SIMPLE_ACCOUNT_UID).getCount()).isEqualTo(1)	3
61755	assertThat(mSplitsDbAdapter.getRecordsCount()).isEqualTo(2)	5
54339	assertThat(mSplitsDbAdapter.getRecordsCount()).isZero()	6
26471	assertThat(mSplitsDbAdapter.getSplitsForTransaction(transaction.getUID())).hasSize(0)	5
58831	assertThat(mSplitsDbAdapter.getSplitsForTransaction(transaction.getUID())).hasSize(1)	5
18672	assertThat(mSplitsDbAdapter.getSplitsForTransaction(transaction.getUID())).hasSize(2)	17
57680	assertThat(mTransactionsDbAdapter.getAllTransactionsCount()).isEqualTo(0)	6
57711	assertThat(mTransactionsDbAdapter.getAllTransactionsCount()).isGreaterThan(0)	6
59623	assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID)).hasSize(0)	7
36685	assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID)).hasSize(1)	11
62947	assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID)).hasSize(0)	4
62991	assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID)).hasSize(1)	4
36606	assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(account.getUID())).hasSize(0)	9
59626	assertThat(mTransactionsDbAdapter.getAllTransactionsForAccount(account.getUID())).hasSize(1)	7
5889	assertThat(mTransactionsDbAdapter.getRecordsCount()).isEqualTo(0)	19
4604	assertThat(mTransactionsDbAdapter.getRecordsCount()).isEqualTo(1)	28
13453	assertThat(mTransactionsDbAdapter.getRecordsCount()).isGreaterThan(0)	11
54232	assertThat(mTransactionsDbAdapter.getRecordsCount()).isZero()	6
54408	assertThat(mTransactionsDbAdapter.getScheduledTransactionsForAccount(account.getUID())).hasSize(1)	4
8375	assertThat(mTransactionsDbAdapter.getTemplateTransactionsCount()).isEqualTo(1)	6
28623	assertThat(mTransactionsDbAdapter.getTotalTransactionsCount()).isEqualTo(0)	7
28994	assertThat(mTransactionsDbAdapter.getTotalTransactionsCount()).isEqualTo(1)	10
54856	assertThat(mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID)).isEqualTo(1)	4
54816	assertThat(mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID)).isZero()	4
51645	assertThat(money.getDenominator()).isEqualTo(1)	3
51703	assertThat(money.getDenominator()).isEqualTo(100L)	3
51731	assertThat(money.getDenominator()).isEqualTo(1L)	3
51633	assertThat(money.getNumerator()).isEqualTo(125L)	3
51725	assertThat(money.getNumerator()).isEqualTo(12L)	3
51584	assertThat(money.getNumerator()).isEqualTo(1415L)	3
59385	assertThat(multiTrans.getSplits()).extracting("mAccountUID")	5
62955	assertThat(multiTrans.getSplits()).hasSize(2)	4
63672	assertThat(new	3
13749	assertThat(newParentUID).isEqualTo(tranferAcct.getUID())	2
26167	assertThat(newestAccount.getCommodity().getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE)	3
26183	assertThat(newestAccount.getCurrency().getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE)	8
25792	assertThat(newestAccount.getName()).isEqualTo(NEW_ACCOUNT_NAME)	12
25995	assertThat(newestAccount.isPlaceholderAccount()).isTrue()	10
52664	assertThat(now).isGreaterThanOrEqualTo(before)	5
58864	assertThat(pair.getAmount()).isEqualTo(split.getAmount())	5
58892	assertThat(pair.getMemo()).isEqualTo(split.getMemo())	5
58904	assertThat(pair.getTransactionUID()).isEqualTo(split.getTransactionUID())	5
58874	assertThat(pair.getType()).isEqualTo(TransactionType.DEBIT)	5
61833	assertThat(pair.getValue()).isEqualTo(split.getValue())	3
58920	assertThat(parent.getUID()).isEqualTo(child.getParentUID())	5
35149	assertThat(parentUID).isEqualTo(SIMPLE_ACCOUNT_UID)	2
33203	assertThat(parentUID).isNotNull()	9
52377	assertThat(price.getValueDenom()).isEqualTo(denominator)	2
13896	assertThat(price.getValueNum()).isEqualTo(134)	4
13589	assertThat(price.getValueNum()).isEqualTo(67)	2
52362	assertThat(price.getValueNum()).isEqualTo(numerator)	2
12649	assertThat(price.toString()).isEqualTo("1,234")	6
58559	assertThat(price.toString()).isEqualTo(exchangeRateString)	2
13400	assertThat(pricesDbAdapter.getRecordsCount()).isEqualTo(1)	4
54378	assertThat(pricesDbAdapter.getRecordsCount()).isEqualTo(2)	2
54812	assertThat(recurrence.getCount()).isEqualTo(-1)	6
8170	assertThat(recurrence.getCount()).isEqualTo(10)	10
8235	assertThat(recurrence.getCount()).isEqualTo(7)	2
51977	assertThat(recurrence.getPeriodEnd()).isNull()	4
54287	assertThat(recurrence.getPeriodEnd().getTime()).isEqualTo(cal.getTimeInMillis())	5
51962	assertThat(recurrence.getPeriodEnd().getTime()).isEqualTo(endTime)	5
60245	assertThat(recurrence.getPeriodEnd().getTime()).isEqualTo(expectedEndtime.getMillis())	3
51980	assertThat(recurrence.getPeriodEnd().getTime()).isEqualTo(newEndTime)	5
54274	assertThat(recurrence.getPeriodStart().getTime()).isEqualTo(newStartTime)	6
54193	assertThat(recurrence.getPeriodStart().getTime()).isEqualTo(startTime)	6
54425	assertThat(recurrence.getPeriodStart().getTime()).isNotEqualTo(startTime)	2
36524	assertThat(result).isNotEqualTo(mMoneyInEur)	5
58849	assertThat(result).isNotEqualTo(money)	3
62698	assertThat(result).isTrue()	2
58887	assertThat(result.toPlainString()).isEqualTo("7.88")	3
58873	assertThat(result.toPlainString()).startsWith("-")	3
7794	assertThat(rootAccount.getName()).isEqualTo("Root	3
7542	assertThat(rootAccount.getParentUID()).isNull()	3
7509	assertThat(rootAccount.isHidden()).isTrue()	3
59782	assertThat(rootAccountUID).isEqualTo(accounts.get(1).getParentUID())	1
34052	assertThat(savedBalance).isEqualTo(firstSplitAmount.negate())	8
33891	assertThat(savedBalance).isEqualTo(secondSplitAmount.negate())	5
11414	assertThat(savedBalance.getCommodity()).isEqualTo(secondSplitAmount.getCommodity())	2
11326	assertThat(savedBalance.getCurrency()).isEqualTo(secondSplitAmount.getCurrency())	6
10600	assertThat(savedBalance.getNumerator()).isEqualTo(secondSplitAmount.negate().getNumerator())	6
54262	assertThat(savedPrice.getUID()).isEqualTo(price1.getUID())	2
54217	assertThat(savedPrice.getValueDenom()).isEqualTo(100)	2
54358	assertThat(savedPrice.getValueNum()).isEqualTo(187)	2
62944	assertThat(savedTransaction.getSplits()).extracting("mQuantity").contains(expectedQty)	5
62905	assertThat(savedTransaction.getSplits()).extracting("mValue").contains(expectedValue)	5
62907	assertThat(savedTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)	4
51053	assertThat(scheduledAction.computeNextCountBasedScheduledExecutionTime()).isEqualTo(expectedTime.getMillis())	4
51020	assertThat(scheduledAction.computeNextCountBasedScheduledExecutionTime()).isEqualTo(startDate.getMillis())	4
50980	assertThat(scheduledAction.computeNextScheduledExecutionTime()).isEqualTo(expectedTime.getMillis())	7
51031	assertThat(scheduledAction.computeNextScheduledExecutionTime()).isEqualTo(startDate.getMillis())	7
55775	assertThat(scheduledAction.computeNextTimeBasedScheduledExecutionTime())	3
55795	assertThat(scheduledAction.computeNextTimeBasedScheduledExecutionTime()).isGreaterThan(now)	2
54219	assertThat(scheduledAction.getEndTime()).isEqualTo(calendar.getTimeInMillis())	6
60040	assertThat(scheduledAction.getEndTime()).isEqualTo(endTime)	7
60071	assertThat(scheduledAction.getExecutionCount()).isEqualTo(expectedCount)	4
51969	assertThat(scheduledAction.getRecurrence()).isNull()	7
28233	assertThat(scheduledAction.getRepeatString().trim()).isEqualTo(repeatString)	7
51919	assertThat(scheduledAction.getStartTime()).isEqualTo(0)	7
54387	assertThat(scheduledAction.getStartTime()).isEqualTo(calendar.getTimeInMillis())	6
62889	assertThat(scheduledAction.getStartTime()).isEqualTo(startTime)	4
60003	assertThat(scheduledAction.getTimeOfLastSchedule()).isEqualTo(-1L)	3
59969	assertThat(scheduledAction.getTimeOfLastSchedule()).isEqualTo(expectedDate.getMillis())	3
54439	assertThat(scheduledActionDbAdapter.getRecordsCount()).isZero()	6
64109	assertThat(scheduledActionFromDb.getActionUID()).isEqualTo(	3
64083	assertThat(scheduledActionFromDb.getAdvanceCreateDays()).isEqualTo(	3
64078	assertThat(scheduledActionFromDb.getAdvanceNotifyDays()).isEqualTo(	3
64058	assertThat(scheduledActionFromDb.getEndTime()).isEqualTo(	3
64101	assertThat(scheduledActionFromDb.getExecutionCount()).isEqualTo(	3
64121	assertThat(scheduledActionFromDb.getLastRunTime()).isEqualTo(	3
64127	assertThat(scheduledActionFromDb.getRecurrence()).isEqualTo(	3
64089	assertThat(scheduledActionFromDb.getStartTime()).isEqualTo(	3
64130	assertThat(scheduledActionFromDb.getTag()).isEqualTo(	3
64096	assertThat(scheduledActionFromDb.getUID()).isEqualTo(	3
64090	assertThat(scheduledActionFromDb.isEnabled()).isEqualTo(	3
64066	assertThat(scheduledActionFromDb.shouldAutoCreate()).isEqualTo(	3
64115	assertThat(scheduledActionFromDb.shouldAutoNotify()).isEqualTo(	3
13353	assertThat(scheduledActions)	14
56721	assertThat(scheduledBackup.getExecutionCount()).isEqualTo(1)	8
57266	assertThat(scheduledBackup.getExecutionCount()).isEqualTo(2)	3
50653	assertThat(scheduledBackup.getExecutionCount()).isEqualTo(3)	11
57267	assertThat(scheduledBackup.getLastRunTime()).isEqualTo(previousLastRun)	4
57254	assertThat(scheduledBackup.getLastRunTime()).isGreaterThan(previousLastRun)	5
7587	assertThat(scheduledTransaction.getCommodity().getCurrencyCode()).isEqualTo("USD")	3
8459	assertThat(scheduledTransaction.getCreatedTimestamp().getTime())	3
7965	assertThat(scheduledTransaction.getDescription()).isEqualTo("Los	4
7686	assertThat(scheduledTransaction.getNote()).isEqualTo("")	3
7408	assertThat(scheduledTransaction.getScheduledActionUID()).isNull()	3
8703	assertThat(scheduledTransaction.getSplits().size()).isEqualTo(2)	4
8607	assertThat(scheduledTransaction.getTimeMillis())	3
8336	assertThat(scheduledTransaction.isExported()).isTrue()	3
8548	assertThat(scheduledTransaction.isTemplate()).isTrue()	4
58631	assertThat(scheduledactionDbAdapter.getAllEnabledScheduledActions())	5
34059	assertThat(secondAccount).isNotNull()	4
33918	assertThat(secondAccount.getUID()).isEqualTo(account2.getUID())	4
62845	assertThat(singleCurrencyTrn.getUID()).isEqualTo(multiTransaction.getUID())	4
33323	assertThat(split.getAccountUID()).isEqualTo("test-account")	10
58815	assertThat(split.getAmount()).isEqualTo(new	5
28978	assertThat(split.getAmount().toPlainString()).isEqualTo("0.99")	5
28934	assertThat(split.getAmount().toPlainString()).isEqualTo("4.99")	4
58812	assertThat(split.getMemo()).isEqualTo("Didn't	2
26482	assertThat(split.getTransactionUID()).isEmpty()	10
33473	assertThat(split.getTransactionUID()).isEqualTo("trx-action")	10
26585	assertThat(split.getTransactionUID()).isEqualTo(transaction.getUID())	11
28979	assertThat(split.getType()).isEqualTo(TransactionType.CREDIT)	13
33336	assertThat(split.getType()).isEqualTo(TransactionType.DEBIT)	10
33395	assertThat(split.getValue()).isEqualTo(new	8
51975	assertThat(split.getValue().asBigDecimal()).isEqualTo(new	6
33405	assertThat(split.getValue().getNumerator()).isEqualTo(new	5
59899	assertThat(split.getValue().toPlainString()).isEqualTo("0.99")	6
62865	assertThat(split.isEquivalentTo(clone2)).isTrue()	4
62914	assertThat(split.isEquivalentTo(editedSplit)).isTrue()	4
34137	assertThat(split.toCsv()).isEqualTo("10.00	6
33370	assertThat(split.toCsv()).isEqualTo("1000	8
33288	assertThat(split.toCsv()).isEqualTo(split.getUID()	5
7933	assertThat(split1.getAccountUID()).isEqualTo("6a7cf8267314992bdddcee56d71a3908")	8
8544	assertThat(split1.getMemo()).isNull()	5
8007	assertThat(split1.getQuantity()).isEqualTo(new	5
7499	assertThat(split1.getReconcileState()).isEqualTo('n')	3
8411	assertThat(split1.getTransactionUID()).isEqualTo("b33c8a6160494417558fd143731fc26a")	3
8571	assertThat(split1.getTransactionUID()).isEqualTo("b645bef06d0844aece6424ceeec03983")	3
7514	assertThat(split1.getTransactionUID()).isEqualTo("ded49386f8ea319ccaee043ba062b3e1")	3
8396	assertThat(split1.getType()).isEqualTo(TransactionType.CREDIT)	4
7697	assertThat(split1.getType()).isEqualTo(TransactionType.DEBIT)	5
8698	assertThat(split1.getUID()).isEqualTo("88bbbbac7689a8657b04427f8117a783")	3
8489	assertThat(split1.getUID()).isEqualTo("ad2cbc774fc4e71885d17e6932448e8e")	3
8166	assertThat(split1.getUID()).isEqualTo("f66794ef262aac3ae085ecc3030f2769")	3
7774	assertThat(split1.getValue()).isEqualTo(new	8
8654	assertThat(split2.getAccountUID()).isEqualTo("0469e915a22ba7846aca0e69f9f9b683")	3
8545	assertThat(split2.getAccountUID()).isEqualTo("dae686a1636addc0dae1ae670701aa4a")	6
8558	assertThat(split2.getMemo()).isNull()	5
8582	assertThat(split2.getQuantity()).isEqualTo(new	5
7753	assertThat(split2.getReconcileState()).isEqualTo('n')	5
7707	assertThat(split2.getTransactionUID()).isEqualTo("b33c8a6160494417558fd143731fc26a")	3
7870	assertThat(split2.getTransactionUID()).isEqualTo("b645bef06d0844aece6424ceeec03983")	3
8043	assertThat(split2.getTransactionUID()).isEqualTo("ded49386f8ea319ccaee043ba062b3e1")	3
7733	assertThat(split2.getType()).isEqualTo(TransactionType.CREDIT)	5
8134	assertThat(split2.getType()).isEqualTo(TransactionType.DEBIT)	4
7562	assertThat(split2.getUID()).isEqualTo("57e2be6ca6b568f8f7c9b2e455e1e21f")	3
7881	assertThat(split2.getUID()).isEqualTo("61d4d604bc00a59cabff4e8875d00bee")	3
8183	assertThat(split2.getUID()).isEqualTo("e0dd885065bfe3c9ef63552fe84c6d23")	3
8137	assertThat(split2.getValue()).isEqualTo(new	8
7410	assertThat(split2.isPairOf(split1)).isTrue()	8
28898	assertThat(splitListView).hasChildCount(1)	4
28985	assertThat(splitListView).hasChildCount(2)	4
33930	assertThat(splits).isEmpty()	9
34115	assertThat(splits).isNotEmpty()	4
34066	assertThat(splits.get(0).getUID()).isEqualTo(split.getUID())	4
18671	assertThat(splitsDbAdapter.getSplitsForTransactionInAccount(transaction.getUID(),account1.getUID())).hasSize(1)	7
19226	assertThat(splitsDbAdapter.getSplitsForTransactionInAccount(transaction.getUID(),account2.getUID())).hasSize(1)	7
56813	assertThat(t1.getSplits()).extracting("mTransactionUID")	5
29072	assertThat(targetCount).isEqualTo(1)	11
51664	assertThat(temp.getDenominator()).isEqualTo(100L)	3
51665	assertThat(temp.getNumerator()).isEqualTo(1225L)	3
58925	assertThat(term.getCurrencyCode()).isEqualTo("JPY")	2
62704	assertThat(testAcct.getTransactionCount()).isZero()	2
28585	assertThat(toggleButton).hasText(R.string.label_receive)	4
28626	assertThat(toggleButton).hasText(R.string.label_spend)	4
29095	assertThat(toggleButton).isNotNull()	4
28798	assertThat(toggleButton).isVisible()	9
58875	assertThat(transaction).isEqualTo(clone1)	2
7871	assertThat(transaction.getCommodity().getCurrencyCode()).isEqualTo("USD")	5
8494	assertThat(transaction.getCreatedTimestamp().getTime()).	3
36610	assertThat(transaction.getCurrencyCode()).isEqualTo(Commodity.DEFAULT_COMMODITY.getCurrencyCode())	4
26419	assertThat(transaction.getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE)	10
30949	assertThat(transaction.getCurrencyCode()).isEqualTo(clone2.getCurrencyCode())	2
8372	assertThat(transaction.getDescription()).isEqualTo("Kahuna	3
8422	assertThat(transaction.getDescription()).isEqualTo("Salad	3
8312	assertThat(transaction.getDescription()).isEqualTo("Tandoori	3
30707	assertThat(transaction.getDescription()).isEqualTo(clone2.getDescription())	2
7883	assertThat(transaction.getNote()).isEqualTo("")	3
30808	assertThat(transaction.getNote()).isEqualTo(clone2.getNote())	3
7995	assertThat(transaction.getScheduledActionUID()).isNull()	3
62874	assertThat(transaction.getSplits()).extracting("mAccountUID")	4
13872	assertThat(transaction.getSplits()).extracting("mAccountUID").contains(imbalanceAcctUID)	4
4914	assertThat(transaction.getSplits()).hasSize(2)	16
4741	assertThat(transaction.getSplits()).hasSize(3)	5
7621	assertThat(transaction.getSplits().size()).isEqualTo(2)	5
8142	assertThat(transaction.getSplits().size()).isEqualTo(3)	3
7891	assertThat(transaction.getTimeMillis()).	3
26280	assertThat(transaction.getTimeMillis()).isEqualTo(clone2.getTimeMillis())	6
30733	assertThat(transaction.getUID()).isEqualTo(clone1.getUID())	7
30843	assertThat(transaction.getUID()).isEqualTo(split.getTransactionUID())	2
30856	assertThat(transaction.getUID()).isNotEqualTo(clone2.getUID())	3
30851	assertThat(transaction.getUID()).isNotNull()	7
7748	assertThat(transaction.isExported()).isTrue()	8
8547	assertThat(transaction.isTemplate()).isFalse()	3
28837	assertThat(transactionTypeButton).isChecked()	10
28633	assertThat(transactionTypeButton).isNotChecked()	10
28272	assertThat(transactions).hasSize(0)	3
13342	assertThat(transactions).hasSize(1)	11
28910	assertThat(transactions).hasSize(2)	8
28283	assertThat(transactions).isEmpty()	3
7616	assertThat(transactionsDbAdapter.getRecordsCount()).isEqualTo(7)	5
59996	assertThat(transactionsDbAdapter.getRecordsCount()).isEqualTo(expectedCount)	3
8538	assertThat(transactionsDbAdapter.getRecordsCount()).isEqualTo(expectedTransactionCount)	8
50931	assertThat(transactionsDbAdapter.getRecordsCount()).isZero()	10
58894	assertThat(transactionsList).contains(t1,Index.atIndex(1))	2
58839	assertThat(transactionsList).contains(t2,Index.atIndex(0))	5
28944	assertThat(transferAccountID).isEqualTo(spinner.getSelectedItemId())	5
63019	assertThat(transferAcctSplit.getQuantity()).isEqualTo(expectedValue)	4
62902	assertThat(transferAcctSplit.getValue()).isEqualTo(expectedValue)	4
62894	assertThat(transferAcctTrns).hasSize(1)	4
62896	assertThat(transferBalance).isEqualTo(editedTransaction.getBalance(TRANSFER_ACCOUNT_UID))	4
62866	assertThat(transferBalance).isEqualTo(expectedValue)	5
63013	assertThat(transferSplit.getQuantity()).isEqualTo(convertedQuantity)	4
63055	assertThat(transferSplit.getQuantity()).isEqualTo(expectedAmount)	4
62879	assertThat(transferSplit.getType()).isEqualTo(TransactionType.CREDIT)	4
62976	assertThat(transferSplit.getValue()).isEqualTo(expectedAmount)	4
62807	assertThat(transferSplit.getValue()).isEqualTo(expectedValueAmount)	4
4960	assertThat(trn.getSplits()).extracting("mAccountUID").contains(imbalanceAccountUID)	6
5443	assertThat(trn.getSplits()).hasSize(2)	6
13612	assertThat(trx.getBalance(DUMMY_ACCOUNT_UID).isNegative()).isTrue()	6
62868	assertThat(trx.getBalance(TRANSACTIONS_ACCOUNT_UID).isNegative()).isTrue()	4
58935	assertThat(trx.getCurrencyCode()).isEqualTo("JPY")	2
58828	assertThat(trx.getCurrencyCode()).isEqualTo(Money.DEFAULT_CURRENCY_CODE)	2
13464	assertThat(trx.getSplits()).hasSize(2)	10
61726	assertThat(trxn.getSplits().get(0).getAccountUID()).isEqualTo(BRAVO_ACCOUNT_NAME)	5
61751	assertThat(trxn.getSplits().size()).isEqualTo(1)	5
60056	assertThat(trxnAdapter.getRecordsCount()).isZero()	4
28946	assertThat(typeToggleButton).isVisible()	3
28976	assertThat(typeToogleButton).isNotVisible()	4
59375	assertThat(usdSplit.getQuantity()).isEqualTo(expectedValue)	4
59418	assertThat(usdSplit.getValue()).isEqualTo(expectedValue)	4
29154	assertThat(value).isEqualTo(expectedValue)	3
63675	assertThat(xmlFiles).hasSize(1)	3
63674	assertToastDisplayed(R.string.toast_backup_successful)	3
3353	assertToastDisplayed(R.string.toast_transanction_amount_required)	26
58614	assertToastDisplayed(String	3
30996	assertToastDisplayed(String.format(mAccountsActivity.getString(R.string.toast_exported_to),"ownCloud	5
13049	assertToastDisplayed(int	10
13539	assertTrue("Child	5
13834	assertTrue("Parent	5
34472	assertTrue(account.getUID().contains("dummy"))	5
28496	assertTrue(accountFound)	9
58816	assertTrue(expectedException	4
34647	assertTrue(file.exists())	15
54942	assertTrue(file.length()	8
31437	assertTrue(id	15
31100	assertTrue(id1	10
31101	assertTrue(id2	10
55022	assertTrue(isDeleted)	7
13545	assertTrue(mAccountsDbAdapter.isHiddenAccount(imbalanceAcctUID))	4
31362	assertTrue(mPrefs.getBoolean(mAccountsActivity.getString(R.string.key_owncloud_sync),false))	5
34435	assertTrue(mSolo.getCurrentListViews().size()	5
34018	assertTrue(mSolo.searchToggleButton(label))	8
54729	assertTrue(mSolo.searchToggleButton(text))	6
51095	assertTrue(mTransactionsDbAdapter.getAllTransactionsCount()	4
54769	assertTrue(newestAccount.isPlaceholderAccount())	4
28801	assertTrue(toastFound)	12
5821	assertTrue(transAdapter.getAllTransactionsCount()	12
5069	assertTrue(transactionTypeButton.isChecked()	7
4558	assertTrue(transactionTypeButton.isChecked())	7
4156	assertTrue(trx.getAmount().isNegative())	9
13626	assertTrue(trx.getBalance(DUMMY_ACCOUNT_UID).isNegative())	11
34395	assertTrue(uid.contains("tele-pathy"))	4
34450	assertTrue(uid.contains("telepathy"))	4
21821	assetBalance	8
21315	assetBalance.setTextSize(16)	8
21929	assetBalance.setTypeface(null,Typeface.BOLD)	8
7910	assetSplit1	3
7713	assetSplit2	3
37746	assets	5
8433	assetsAccount	3
21601	assetsBalance	12
26439	assetsUID	3
11321	assign	121
60023	assignar	3
10995	assigne	13
20909	assigned	54
18259	assigned,throw	5
41184	assigned.	8
23882	assigner	7
32345	assignment	10
41352	associate	13
3505	associated	164
61790	associated</p>	3
35394	associates	3
19382	assume	22
1036	assumed	23
43967	assumed).	4
53563	assumed</p>	5
29126	assumes	8
5441	assumption	4
59127	assured	6
6287	async	55
7321	asynchronous	49
10052	asynchronously	50
59881	asynchronously.	5
1065	at	417
46037	at.	4
10743	atau	3
58850	atestAddTransaction(){	3
57724	atestCreateExportSchedule(){	6
16075	ation	15
55644	ativo</string>	2
30289	atleast	15
12051	att	17
20520	attach	20
507	attached	32
47990	attaching	4
41863	attempt	8
49230	attempting	5
47050	attempts	4
29456	attivo</string>	6
39395	attrName	8
37690	attribute	45
48259	attribute,use	4
47029	attribute.	4
37521	attribute.)	4
8343	attributes	83
51847	attributes")	6
30672	attributes)	23
7662	attributes.	16
61050	attributes.getValue("exchange-code")	6
61101	attributes.getValue("fullname")	6
60965	attributes.getValue("isocode")	6
60937	attributes.getValue("namespace")	6
60835	attributes.getValue("smallest-fraction")	6
61706	attributes.getValue(ATTR_EXCHANGE_CODE)	6
61598	attributes.getValue(ATTR_FULL_NAME)	6
61633	attributes.getValue(ATTR_ISO_CODE)	3
61707	attributes.getValue(ATTR_LOCAL_SYMBOL)	6
61518	attributes.getValue(ATTR_NAMESPACE)	6
61566	attributes.getValue(ATTR_SMALLEST_FRACTION)	6
53583	attributes.getValue(GncXmlHelper.ATTR_KEY_TYPE)	2
46928	attributes</b></strong>	4
49084	attributesArray	4
49324	attributesArray.getDrawable(	4
49213	attributesArray.getInt(	4
49082	attributesArray.recycle()	4
47571	attrs	23
27360	attrs)	71
56674	attrs){	4
55491	attrs,	7
48202	attrs,Menu	4
43647	attrs,R.styleable.SherlockMenuView,defStyle,0)	4
24631	attrs,int	65
47706	attrs.xml	8
22894	atuais	7
6122	atual	13
23136	atual</item>	36
4490	atual</string>	13
34955	atualizada	3
11886	atualizada</string>	9
4786	auch	19
11044	aucun	3
4089	auf	56
4970	aufgetreten!</string>	17
35015	aufzuteilenden	3
21977	aus	11
22320	aus</string>	8
6369	ausgew&#228	18
14989	ausgewhlt</string>	7
25523	ausgewhlte	3
11475	aussi	15
62426	australiano</item>	6
4833	ausw&#228	30
6972	auswhlen</string>	34
22306	auszuwhlen</string>	15
9254	authentication	2
9801	authentication,save	2
12017	authority	9
50811	authority:	5
9437	authorization	8
51521	authorized.	4
20414	auto	25
53273	auto-/advance-	4
19899	auto-balance	7
54659	auto-balancing	10
49872	auto-complete	5
49769	auto-completion	8
25727	auto-create	10
4129	auto-created	11
25718	auto-created,{@code	4
35701	auto-generated	3
38926	auto-hiding	4
50566	auto-requery	5
38464	auto-suggesting	4
55244	autoBackup()	3
55395	autoBackup(){	3
51592	autoBalance(){	7
54629	autoBalanceImportAccount(){	4
64138	autoBalanceSplits	3
25722	autoCreate	6
25492	autoCreate)	4
53044	autoNotify	4
53474	autoNotify)	2
53642	auto_notify,advance_create,advance_notify	5
26516	autobalance	9
54934	autobalancing	4
40346	autoboxing	4
5313	autocomplete	15
7308	autocompleting,only	29
35833	autocompletion	11
36487	autogenerated	4
25371	autoincrement,"	52
3937	autom&#225	14
21606	automatic	20
19297	automatically	89
42281	automatically,but	4
22605	automaticamente	8
54897	automaticamente</string>	15
55705	automatici	2
55751	automatico</string>	2
19285	automatique	7
11640	automatiquement	14
59288	automatisch	4
21174	automatisk	10
21775	automatisk</string>	6
55956	automatiska	2
55961	automatiskt	2
15942	automticamente	5
56303	automticas	2
56406	automticas</string>	2
55719	automticos	2
55757	automticos</string>	2
11105	autre	43
10680	autre</string>	7
10134	aux	31
8644	av	83
15274	av</string>	11
38297	availability	9
3351	available	226
6450	available")	10
48847	available,and	5
60420	available,so	3
44820	available,the	4
49328	available,true	5
5820	available,{@code	8
38127	available.	7
2245	available</string>	108
45223	availableWidth	5
45702	availableWidth)	4
45031	availableWidth,int	4
56312	avaktivera	2
7693	avant	52
3265	avec	37
29860	avec&#8230	7
26839	avec</string>	7
2855	average	123
2115	avoid	73
42177	avoid.	4
40580	avoided,and	4
41049	avoided.	4
47133	away	12
52920	away</p>	6
49232	awhile.	4
34225	axis	22
59323	ayarla</string>	6
3029	ayuda	12
1315	b	41
18015	b&#243	11
3450	b)	34
41086	b,which	4
17087	b.	3
51379	b.putLong(RecurrencePickerDialog.BUNDLE_START_TIME_MILLIS,t.toMillis(false))	5
53989	b.putLong(RecurrencePickerDialogFragment.BUNDLE_START_TIME_MILLIS,t.toMillis(false))	2
51432	b.putString(RecurrencePickerDialog.BUNDLE_RRULE,mRecurrenceRule)	5
51443	b.putString(RecurrencePickerDialog.BUNDLE_TIME_ZONE,t.timezone)	5
53759	b.putString(RecurrencePickerDialogFragment.BUNDLE_RRULE,mRecurrenceRule)	2
53780	b.putString(RecurrencePickerDialogFragment.BUNDLE_TIME_ZONE,t.timezone)	2
39378	b.with(ObjectAnimator.ofFloat(mContainerView,"translationY",	4
39379	b.with(ObjectAnimator.ofFloat(mContainerView,"translationY",0))	4
39988	b.with(ObjectAnimator.ofFloat(mContentView,"translationY",	4
39543	b.with(ObjectAnimator.ofFloat(mSplitView,"alpha",0))	4
39404	b.with(ObjectAnimator.ofFloat(mSplitView,"alpha",1))	4
45120	b.with(a)	4
12869	back	49
1906	back-references	5
17185	back-up	9
5806	back.	10
47663	backed	15
59367	backed-up	5
7177	background	55
47762	background)	4
47032	background).</p>	4
48331	background,title	4
38054	background.	4
47311	background.getId(i)	4
46779	background.getNumberOfFrames()	4
46685	background.getNumberOfLayers()	4
47425	background.getPadding(mTempRect)	8
46837	backgrounds	4
20831	backing	25
2221	backreferences	8
39317	backs	12
1356	backstack	18
30688	backstack.	8
3019	backup	251
25420	backup"	7
20494	backup",e)	15
29388	backup&#8230	10
55780	backup)	2
55848	backup)\n	2
50701	backup,the	4
21887	backup.	29
31597	backup:	7
21609	backup</string>	36
13196	backupAndDeleteTransactions()	12
52182	backupAndDeleteTransactions(){	18
2595	backupFile	24
31574	backupFile.getName())	5
55417	backupFileUri	3
32710	backupFiles	32
55278	backupFiles.length	8
54734	backupFilesList	7
54775	backupFilesList.toArray()	6
14091	backupFolder	26
50748	backupFolder.listFiles()	15
28383	backupFolder.listFiles(new	5
14028	backupFolder.mkdir()	3
13754	backupParams	18
13438	backupParams.setExportStartTime(new	6
13408	backupParams.setExportTarget(ExportParams.ExportTarget.SD_CARD)	23
63657	backupResult	3
6346	backups	157
55301	backups"	4
59399	backups)	2
21830	backups.	21
33996	backups</p>	3
21365	backups</string>	18
20480	backwards	10
27437	backwards-ordered	6
42263	backwards.	4
50205	bad	5
37069	badge	5
22700	bagan	7
29642	bagian	5
370	balance	304
26583	balance")	11
8591	balance)	50
35923	balance){	14
35821	balance,<code>false</code>	6
609	balance,dataSet.getEntryCount()))	37
13169	balance,false	8
6807	balance,values.size()))	5
6553	balance,while	6
35714	balance.add(absAmount)	2
26343	balance.add(getAccount(accountId).getBalance())	7
21920	balance.add(getAccountBalance(accountType,-1,-1))	6
62340	balance.add(getAccountBalance(accountType,start,end))	3
18754	balance.add(getAccountBalance(id))	9
18644	balance.add(mTransactionsAdapter.getTransactionsSum(accountId))	16
35629	balance.add(split.getAmount())	4
19264	balance.add(splitSum)	24
62544	balance.add(splitSum).absolute()	6
18587	balance.add(subBalance)	10
26526	balance.add(transaction.getAmount())	10
25780	balance.add(transaction.getBalance(getUID()))	9
35709	balance.add(transaction.getBalance(mUID))	3
23443	balance.add(transx.getAmount())	10
26252	balance.add(transx.getAmount().asBigDecimal())	2
54101	balance.divide(budget.getAmount(accountUID)).asBigDecimal().doubleValue()	2
355	balance.isNegative()	31
11801	balance.isNegative())	12
35611	balance.subtract(absAmount)	2
26590	balance.subtract(transaction.getAmount())	7
35974	balance:	13
9980	balance?</string>	4
12170	balanceAmount	15
12716	balanceAmount.appendChild(doc.createTextNode(balance))	14
21320	balanceTextView	26
59138	balanceTextView,	12
31334	balanceTextView,Context	9
35849	balanceTextView,Money	2
35902	balanceTextView.setText(balance.formattedString())	11
34455	balanceTextView.setTextColor(fontColor)	19
28896	balanceView	7
26550	balanced	24
20246	balanced)	17
18996	balanced,this	7
52141	balanced.	10
7260	balances	79
18139	balances</p>	9
4455	balances</string>	129
25715	balances\n	23
25774	balancing	9
7464	balanse	34
14997	balanse</string>	13
51917	balanser	7
15006	balanser</string>	24
52838	balloons	13
10321	bandes/circulaire</string>	15
2333	bank	16
12764	bankAccountTo	13
31633	bankAccountTo.appendChild(acctId)	7
31980	bankAccountTo.appendChild(accttype)	7
12368	bankAccountTo.appendChild(bankId)	12
12161	bankFrom	13
12887	bankFrom.appendChild(acctId)	11
12532	bankFrom.appendChild(accttype)	11
12860	bankFrom.appendChild(bankId)	12
12189	bankId	17
12345	bankId.appendChild(doc.createTextNode(APP_ID))	5
54820	bankId.appendChild(doc.createTextNode(OfxExporter.APP_ID))	5
12817	bankId.appendChild(doc.createTextNode(OfxFormatter.APP_ID))	8
35764	bankId.appendChild(doc.createTextNode(OfxHelper.APP_ID))	8
12270	bankTransactionsList	17
6959	bankTransactionsList.appendChild(dtend)	23
12810	bankTransactionsList.appendChild(dtstart)	20
21563	bankTransactionsList.appendChild(transaction.toOFX(doc,getUID()))	13
35618	bankTransactionsList.appendChild(transaction.toOFX(doc,mUID))	3
7005	bankTransactionsList.appendChild(transaction.toOfx(doc,mUID))	9
59110	bankmsgs	3
59175	bankmsgs.appendChild(statementTransactionResponse)	3
29626	banyak	5
302	bar	247
38578	bar's	8
23153	bar)	7
48335	bar,always	4
46763	bar,apply	4
38768	bar,if	4
37830	bar,including	4
39097	bar,initialize	4
38249	bar,leaving	4
39213	bar,mode,etc.).	5
38923	bar,not	4
39291	bar,you	4
38356	bar-enhanced	4
23253	bar.	31
3145	bar/pie	96
54011	barChart	2
59959	barChart,	3
54163	barChart,BudgetAmount	2
54161	barChart.animateX(1000)	2
54026	barChart.getAxisLeft().addLimitLine(limitLine)	2
53814	barChart.getAxisLeft().setAxisMaxValue(maxValue.floatValue())	2
54066	barChart.invalidate()	2
53729	barChart.setAutoScaleMinMaxEnabled(true)	2
53861	barChart.setData(barData)	2
53971	barChart.setDrawValueAboveBar(true)	2
53990	barData	2
53952	barDataSet	2
53887	barEntries	2
53896	barEntries.add(new	2
32275	barEntry	7
32468	barEntry.getNegativeSum()	7
32098	barEntry.getPositiveSum()	7
46977	barberpole	4
21617	bare	22
3690	barra	63
4588	barra</string>	9
20562	barras/linhas</string>	18
29960	barras/pizza</string>	6
2261	barras</string>	22
10952	barre	10
29257	barre/torta</string>	4
22782	barre</string>	9
16180	barres</string>	9
38337	bars	8
46889	bars),then	4
11421	baru	15
10930	baru</string>	8
11258	bas	25
11308	base	89
14497	baseAmountString	22
33279	baseAmountString){	7
10908	baseCommodity	2
10690	baseCurrencyCode	6
50243	baseIntent	5
49964	baseIntent,SearchableInfo	5
8711	baseMillis	10
30810	baseModel	6
63073	baseSplit	4
6517	based	130
41009	based.	4
8234	basic	25
6829	basically	9
16958	basis	7
22875	batang	7
22696	batang/pai</string>	7
43574	batch	11
43776	batch.	4
43454	batching	4
17495	bazy.	9
56417	bcker&#8230	2
56394	bcker</string>	2
17774	bd	33
17826	bdach	23
17555	bdach</string>	8
25793	bdw	5
17752	bdw</string>	21
17659	bdzie	13
587	be	449
50112	be,in	5
37282	be.	13
4584	bearbeiten	2
4258	bearbeiten</string>	38
25491	bearbeitet	9
11572	beberapa	5
42166	became	4
3927	because	196
37612	become	25
33875	becomes	16
2615	becuase	8
16640	bedrag	30
16638	bedrag</string>	12
16831	bedragen	7
55565	beeen	2
2478	been	326
55965	befintliga	2
55958	befintligt	2
2317	before	362
40371	before(Animator	4
48219	before).	4
19259	before,	24
51651	before,because	8
1300	before,int	23
31162	before,skip	8
31387	before.	17
49706	before.invoke(mQueryTextView)	5
49939	before.setAccessible(true)	5
53063	before/after	2
4504	beforeCount	34
28901	beforeOriginCount	14
980	beforeTextChanged(CharSequence	45
42162	began	4
40726	begin	8
51824	beginTransaction()	8
19640	beginning	33
42299	beginning.	4
52090	begins	22
41809	begins,FRAME	4
42132	begins,typically	4
41114	begins.	4
17202	beginsaldo	7
41913	begun	4
39146	behavior	29
38665	behavior.	8
16763	beheer	5
6060	bei	20
4745	beim	45
966	being	145
17199	bekijken</string>	7
54687	bekreft	1
15137	bekrefte.	20
21833	bekreftelse.	6
57395	bekrfta	3
64022	belltsa</string>	4
13985	belong	38
63548	belong.	1
6449	belonging	75
8951	belongs	75
32009	belongs.	15
56021	belopp	2
55910	belopp</string>	2
56250	beloppet	2
18301	below	42
44840	below,but	4
38911	below.	4
47178	below.</p>	4
8216	belp	44
28301	belp:</string>	9
21619	belp</string>	17
21764	belpet	8
16608	benaderen</string>	19
6067	ber	43
5379	ber</string>	30
10219	berbagai	5
10226	berbeda	9
22571	berdasarkan	7
21646	beregnet	10
16934	bereik&#8230	9
16726	berekend	7
11338	berhasil	9
22857	berhasil</string>	7
28114	berichte	11
62722	berisi	3
56076	berknas	2
15086	bernehmen	19
15064	bernehmen</string>	22
59232	bersetzen</string>	4
25678	bersetzungen	14
62752	berulang	3
62724	berulang</string>	3
4620	berweisung	22
6654	berweisungskonto</string>	6
16665	beschikbaar	22
8190	beschikbaar.\nU	34
12093	beschikbaar</string>	25
16580	beschrijving</string>	3
17114	beslissen.	13
12635	best	16
10339	best!")	12
4021	best&#228	11
38574	bestApi	4
38619	bestApi)	4
17219	bestaande	12
26460	bestand	9
26452	bestand:\n</string>	4
16596	bestand</string>	7
17122	bestanden	9
17129	bestandsbeheerder	9
25576	bestehenden	7
16984	bestemming	7
28450	bestemming</string>	10
21859	bestemt	10
62518	besttigen	3
14979	besttigen</string>	10
4862	beta	25
8911	beta"	18
12341	better	22
9841	betterpickers	10
2902	between	135
42200	between,or	4
42116	between,this	4
41315	between.	8
16538	bevat	3
16502	bevestigen.	11
17117	bevestigen</string>	19
17135	bevestiging.	3
22083	bevorzugten	8
52341	beware	7
16808	bewaren	17
17193	bewaren</string>	15
16733	bewerken</string>	43
43268	beyond	8
45649	bg	4
45636	bg)	4
47924	bgOffset	4
63016	bgnCommodity	4
53415	bgtAmount	2
53708	bgtAmount.setAmount(budgetAmount.getAmount())	2
53401	bgtAmount.setAmount(new	2
53717	bgtAmount.setPeriodNum(-1)	2
53627	bgtAmount.setPeriodNum(period)	2
4343	bi-weekly	17
8450	biWeekly	5
8401	biWeekly.setMultiplier(2)	5
16972	biedt	7
5682	big	7
26256	bigD	10
36203	bigDecimal	9
53429	bigDecimal.equals(first)	2
35831	biggestAmount	11
33325	biggestAmount.toPlainString()	12
17063	bij	24
22736	bilanci	6
22827	bilancio	6
4061	binary.	5
18781	bind	21
42739	bindItemView(MenuItemImpl	8
44098	bindItemView(item,itemView)	4
10094	bindListeners()	23
34997	bindListeners(CalculatorKeyboard	10
34991	bindListeners(KeyboardView	7
34556	bindListeners(calculatorKeyboardView)	9
34517	bindListeners(mCalculatorKeyboardView)	13
35022	bindListeners(new	7
44575	bindNativeOverflow(android.view.Menu	4
13658	bindSplitView(final	13
31783	bindSplitView(splitView,split)	5
48041	bindTab(ActionBar.Tab	4
3087	bindView(View	125
63210	bindViewListeners()	3
6323	bindViewListeners(){	8
550	bindViews()	38
113	bindViews(){	48
53903	bindViews(BudgetAmount	5
13906	binding	28
5559	bindings	30
242	binds	36
12852	bir	11
59227	birimi</string>	4
23075	birimini	8
15688	birmano</item>	14
11575	bisa	7
38561	bit	15
43693	bitfield	4
45558	bitmap	5
45525	bitmap.getPixel(0,0)	5
45422	bitmap.recycle()	5
46783	bitmapShader	4
38210	bits	12
48268	bits).	4
43813	bits,find	4
44145	bits.	4
4881	bitte,bevor	6
3260	blank	12
105	blank.	19
7829	ble	23
736	bli	106
15033	blir	24
26185	blocco	5
9710	block	22
126	block,doesn't	23
10427	bloqueio	11
25668	bloqueo	8
27154	blue	3
22429	bnho	5
16891	boekhouden	19
12216	boeking	13
16672	boeking(en)	12
17211	boeking</string>	10
17127	boekingen	19
16535	boekingen.	3
16571	boekingen</item>	9
16529	boekingen</string>	9
16903	boekingsbedragen\n	6
23895	bogues	7
42240	bogus	4
40681	boil	4
22956	bok	10
63067	bok</string>	3
62967	boken	3
14978	bokfring	19
7420	bokfring</string>	36
34735	bokfring\n	7
56270	bokfringar\n	2
56365	bokfringen</string>	2
63968	boo	3
3988	book	131
7411	book")	10
14227	book)	13
31186	book,and	5
32686	book,or	3
51050	book,then	5
63525	book,{@code	4
14088	book-specific	13
7842	book.	27
27061	book.\nThis	3
32784	book.getDisplayName()	2
32797	book.setActive(active	8
63732	book.setActive(true)	2
59940	book.setDisplayName("Launch	3
32595	book.setDisplayName(displayName)	10
32579	book.setLastSync(TimestampHelper.getTimestampFromUtcString(lastSync))	4
32709	book.setRootAccountUID(BaseModel.generateUID())	2
63721	book.setRootAccountUID(rootAccountUID)	2
32750	book.setRootTemplateUID(rootTemplateGUID)	8
32506	book.setSourceUri(Uri.parse(uriString))	8
32716	book.setSourceUri(uriString	2
30260	book1	10
32480	book1.setActive(true)	8
32510	book1.setDisplayName("Book	5
32778	book1.setRootAccountUID(rootUID)	8
30283	book2	3
30287	book3	2
63499	book</p>	4
21369	book</string>	18
30154	bookCount	11
63392	bookCount++	4
20704	bookCountNode	11
20138	bookCountNode.appendChild(document.createTextNode("1"))	4
31072	bookCountNode.appendChild(mDocument.createTextNode("1"))	7
35596	bookCountNode.setAttribute("cd:type","book")	4
20241	bookCountNode.setAttribute(GncXmlHelper.ATTR_KEY_CD_TYPE,GncXmlHelper.ATTR_VALUE_BOOK)	9
9804	bookDbHelper	14
9535	bookId	7
21011	bookIdNode	11
20444	bookIdNode.appendChild(document.createTextNode(UUID.randomUUID().toString().replaceAll("-","")))	4
31107	bookIdNode.appendChild(mDocument.createTextNode(UUID.randomUUID().toString().replaceAll("-","")))	7
35731	bookIdNode.setAttribute("type","guid")	4
20646	bookIdNode.setAttribute(GncXmlHelper.ATTR_KEY_TYPE,GncXmlHelper.ATTR_VALUE_GUID)	9
2721	bookName	16
60253	bookName)	3
3204	bookName,final	5
20774	bookNode	11
20506	bookNode.appendChild(accountCountNode)	13
21052	bookNode.appendChild(bookIdNode)	11
20604	bookNode.appendChild(cmdtyCountData)	13
21051	bookNode.appendChild(transactionCountNode)	15
35675	bookNode.setAttribute("version",GncXmlHelper.BOOK_VERSION)	4
20805	bookNode.setAttribute(GncXmlHelper.ATTR_KEY_VERSION,GncXmlHelper.BOOK_VERSION)	9
23106	bookPrefs	6
23062	bookPrefs.edit()	6
9703	bookSharedPreferences	6
55537	bookTitle	2
55533	bookTitle.getText().toString().trim())	2
7675	bookUID	61
3579	bookUID)	25
10324	bookUID){	36
9445	bookUID,String	3
9114	bookUID,boolean	4
55338	bookUIDs	3
55317	bookUIDs)	3
55436	bookUIDs.add(cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_UID)))	3
25781	book_id	7
7360	booked	6
11769	books	54
63995	books")	2
55388	books)	6
32910	booksCount	8
50882	booksCursor	3
50940	booksCursor.getString(booksCursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry.COLUMN_UID))	3
50957	booksCursorAdapter	3
50961	booksCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	3
9549	booksDbAdapter	31
32543	booksDbAdapter.addRecord(book1)	8
32711	booksDbAdapter.addRecord(mBook)	5
63952	booksDbAdapter.addRecord(mBook,DatabaseAdapter.UpdateMethod.insert)	2
9001	booksDbAdapter.addRecord(testBook)	3
57821	booksDbAdapter.deleteBook(bookUID)	3
13939	booksDbAdapter.deleteRecord(testBookUID)	2
50809	booksDbAdapter.fetchAllRecords()	5
50629	booksDbAdapter.getActiveBookUID()	3
55279	booksDbAdapter.getAllBookUIDs()	3
55231	booksDbAdapter.getAllRecords()	6
58349	booksDbAdapter.getRecordsCount()	3
19997	booksDbAdapter.getUID(id)	8
13058	booksDbAdapter.setActive(oldActiveBookUID)	2
55670	books\n	6
1722	boolean	386
27957	boolean[]	5
27971	boolean[]{true,true,false,false,false	5
39561	booleans	4
49282	boost	4
62552	booting.	2
15599	borrada	11
15712	borrada</string>	23
2660	borradas	49
15398	borradas!</string>	18
15901	borradas</string>	35
15744	borrado</string>	23
25992	borrado\n	7
11724	borrar	59
15723	borrar&#225	13
15774	borrarn	5
56383	bort</string>	5
23302	borttaget</string>	9
30578	bos	26
1419	both	102
41336	both.	4
31931	bottom	41
11987	bottom)	17
49545	bottom,	5
46480	bottom,or	4
46523	bottomEdge	4
44948	bottomMargin	4
10571	bound	33
47119	boundAspect	4
47208	boundAspect)	4
43815	boundaries	4
41616	bounds,if	4
41653	bounds.	9
34921	box	30
50019	box,handle	5
50138	box,without	5
7320	box.	13
48111	boxes.	4
62380	brasileiro</item>	6
33938	bravoAccount	8
154	break	330
44748	breaks	4
38815	brief	4
13207	brings	7
18215	broadcast	20
55063	broadcasts	3
42482	broke	9
5120	broken	14
45882	brought	4
27125	brown	3
38221	browser	4
37331	browser.	5
21932	bruke,kredit-	6
21820	bruker	10
1847	brukerinformasjon	56
23028	brukernavn/passord	8
15144	brukes	28
14894	brukte	32
18851	btw,I	7
2110	bubbleSort()	23
33210	bubbleSort(CategorySeries	4
33237	bubbleSort(mSeries)	4
14423	budge)	4
9644	budget	19
54077	budget!",	5
63911	budget!",-	1
54097	budget!",Toast.LENGTH_SHORT).show()	5
57405	budget")	3
53840	budget",	5
14101	budget)	7
54009	budget){	5
52266	budget,UpdateMethod	2
53410	budget.	2
54442	budget.addBudgetAmount(budgetAmount)	4
54436	budget.addBudgetAmount(budgetAmount1)	2
54501	budget.addBudgetAmount(new	2
11201	budget.getAmountSum()	4
52108	budget.getBudgetAmounts())	4
54391	budget.getBudgetAmounts().clear()	2
54288	budget.getCompactedBudgetAmounts()	4
53849	budget.getCompactedBudgetAmounts())	2
53773	budget.getDescription()	2
53393	budget.getDescription())	2
54259	budget.getExpandedBudgetAmounts()	2
53678	budget.getExpandedBudgetAmounts())	2
53789	budget.getNumberOfAccounts()	2
53655	budget.getNumberOfPeriods()	2
53891	budget.getRecurrence().getDaysLeftInCurrentPeriod()	2
53942	budget.getRecurrence().getRuleString()	2
53829	budget.getStartofCurrentPeriod(),budget.getEndOfCurrentPeriod())	2
54316	budget.setBudgetAmounts(budgetAmounts)	2
53237	budget.setBudgetAmounts(mBudgetAmountsDbAdapter.getBudgetAmountsForBudget(budget.getUID()))	2
53207	budget.setDescription(description)	2
54406	budget.setNumberOfPeriods(6)	2
53161	budget.setNumberOfPeriods(numPeriods)	2
53336	budget.setRecurrence(mRecurrenceDbAdapter.getRecord(recurrenceUID))	2
54267	budget.setRecurrence(new	4
54349	budget.setRecurrence(recurrence)	2
9416	budgetAccount	4
9057	budgetAccountSpinner	7
53890	budgetAccountSpinner.setAdapter(mAccountCursorAdapter)	5
53873	budgetAccountSpinner.setOnItemSelectedListener(new	5
54135	budgetAccountSpinner.setSelection(mAccountCursorAdapter.getPosition(budgetAmount.getAccountUID()))	5
8910	budgetAmount	14
14117	budgetAmount)	9
53610	budgetAmount){	7
53376	budgetAmount.getAccountUID()	2
53693	budgetAmount.getAmount()	5
54107	budgetAmount.getAmount().add(budgetAmount.getAmount().multiply(new	2
53677	budgetAmount.getAmount().asBigDecimal()	2
53715	budgetAmount.getPeriodNum()	2
52971	budgetAmount.setAmount(new	2
53392	budgetAmount.setBudgetUID(getUID())	2
54414	budgetAmount.setPeriodNum(-1)	2
54187	budgetAmount.setPeriodNum(1)	2
54417	budgetAmount.setPeriodNum(2)	2
54324	budgetAmount.setPeriodNum(4)	2
54365	budgetAmount.setPeriodNum(5)	2
53022	budgetAmount.setPeriodNum(periodNum)	2
54419	budgetAmount1	2
52302	budgetAmountList	4
52353	budgetAmountList.addAll(budget.getBudgetAmounts())	4
53836	budgetAmountView	6
53744	budgetAmountView.getTag()	6
53013	budgetAmounts	11
53302	budgetAmounts)	9
54140	budgetAmounts){	5
53778	budgetAmounts.add(budgetAmount)	5
53179	budgetAmounts.add(buildModelInstance(cursor))	2
54317	budgetAmounts.add(new	2
63384	budgetAmountsDbAdapter	4
63483	budgetAmountsDbAdapter,	4
9858	budgetChart	4
53763	budgetFormFragment	2
54012	budgetFormFragment.setArguments(args)	2
9664	budgetId	4
53833	budgetId){	2
9052	budgetIndicator	5
9390	budgetLeft	4
52347	budgetList)	4
52112	budgetList,UpdateMethod	2
9041	budgetName	7
57411	budgetName)	3
53853	budgetPeriods	5
10203	budgetProgress	5
54164	budgetProgress)	2
53939	budgetProgress))	2
8747	budgetRecurrence	4
9294	budgetSpent	4
10838	budgetTotal	4
10286	budgetTotal.formattedString()	4
10377	budgetTotal.getCommodity()	2
11086	budgetTotal.getCurrency()	4
53011	budgetUID	9
53358	budgetUID)	4
53288	budgetUID){	4
58782	budgetUID,	3
53473	budgetUID,String	2
52980	budgetUID,long	2
53701	budgeted	4
53203	budgeting	8
52294	budgets	15
54332	budgets,all	2
53337	budgets.<br>	2
54292	budgets.add(budget)	2
53222	budgets.add(buildModelInstance(cursor))	2
53921	budgets.get(0)	2
53229	budgets</li>	6
22229	budou	10
28236	buffer	19
21251	bufferedOutputStream	18
35857	bufferedReader	2
35882	bufferedReader.readLine())	2
21413	bufferedWriter	6
28437	bufferedWriter.flush()	5
28558	bufferedWriter.write(new	5
38073	buffering	4
3963	bug	214
37478	bug-fix	5
1212	bug.	9
8608	bug562_scheduledTransactionImportedWithImbalancedSplits()	3
27967	bug\n	16
53368	bugdets	5
18497	buggy	13
4835	bugs	48
60256	bugs!")	3
19291	bugs\n	26
36736	build	19
7627	build</string>	28
24135	buildAccountInstance(@NonNull	4
24204	buildAccountInstance(Cursor	29
24309	buildAccountInstance(c)	11
51458	buildBackupFile(){	5
4616	buildConfigField	24
59763	buildContentValues(@NonNull	6
47436	buildDropDown()	5
36550	buildExportFilename()	5
34629	buildExportFilename())	7
12489	buildExportFilename(){	10
2630	buildExportFilename(ExportFormat	22
28397	buildExportFilename(ExportFormat.GNC_XML))	4
24892	buildExportFilename(ExportFormat.XML)	14
60247	buildExportFilename(ExportFormat.XML,book.getDisplayName())	3
28493	buildExportFilename(format))	5
12585	buildExportFilename(mExportFormat)	13
6472	buildExportFilename(mExportFormat))	7
29186	buildExportFilename(mExportParams.getExportFormat())	11
60274	buildExportFilename(mExportParams.getExportFormat(),bookName)	3
8600	buildModelInstance(@NonNull	80
8470	buildModelInstance(cursor)	13
58629	buildScheduledActionInstance(cursor)	5
58633	buildScheduledActionInstance(final	5
20649	buildScheduledEventInstance(cursor)	10
19452	buildScheduledEventInstance(final	17
24410	buildSimpleAccountInstance(@NonNull	4
1498	buildSimpleAccountInstance(Cursor	33
24491	buildSimpleAccountInstance(c)	9
24261	buildSplitInstance(@NonNull	4
24315	buildSplitInstance(Cursor	13
24571	buildSplitInstance(cursor)	9
3162	buildTime()	120
2368	buildToolsVersion	37
24548	buildTransactionInstance(@NonNull	4
6637	buildTransactionInstance(Cursor	43
6835	buildTransactionInstance(c)	25
23179	buildTypes	22
17287	builda</string>	14
3894	builder	48
45692	builder)	4
44655	builder-style	4
45491	builder.addMenuPresenter(mActionMenuPresenter)	4
44980	builder.addMenuPresenter(mExpandedMenuPresenter)	4
48982	builder.append("	4
34909	builder.append(",")	9
35048	builder.append("FR")	6
35096	builder.append("MO")	6
35248	builder.append("SA")	6
34931	builder.append("SU")	6
34888	builder.append("TH")	6
35222	builder.append("TU")	6
35145	builder.append("WE")	6
49408	builder.append("[")	4
48948	builder.append("]")	4
49396	builder.append("resolveInfo:").append(resolveInfo.toString())	4
51928	builder.build()	5
25076	builder.create()	15
55220	builder.create().show()	8
53782	builder.deleteCharAt(builder.length())	5
35193	builder.deleteCharAt(builder.length()-1)	7
28017	builder.setMessage(R.string.message_confirm_create_default_accounts_first_run)	5
3286	builder.setMessage(R.string.msg_confirm_create_default_accounts_first_run)	9
27994	builder.setMultiChoiceItems(R.array.default_accounts,checkedDefaults,new	4
54711	builder.setNegativeButton(R.string.btn_cancel,new	5
30653	builder.setNeutralButton(R.string.btn_import_accounts,new	8
27973	builder.setPositiveButton(R.string.btn_create_accounts,new	10
48092	builder.setSingleChoiceItems(mListAdapter,	4
2790	builder.setTitle(R.string.title_default_accounts)	13
47577	builder.setTitle(mPrompt)	4
35020	builder.toString()	13
40704	builder.with(anim)	4
40373	builder.with(items[i])	4
35735	building	15
28484	builds	22
37435	builds.	4
9953	buildscript	39
28524	built	13
37834	built-in	4
59529	built:	4
11526	buku	5
62739	bulan</item>	3
3857	bulk	83
3831	bulk)	11
3836	bulk,	4
51269	bulk,@NonNull	3
51244	bulk,@Nullable	3
2612	bulk,SQLiteDatabase	5
52856	bulk.	7
24301	bulkAddAccounts(@NonNull	4
19080	bulkAddAccounts(List<Account>	22
33598	bulkAddAccounts(accountsList)	8
19340	bulkAddAccountsShouldNotModifyTransactions(){	7
10872	bulkAddRecords(@NonNull	44
52064	bulkAddRecords(accountsList)	5
52274	bulkAddRecords(accountsList,UpdateMethod.insert)	2
52117	bulkAddRecords(modelList,UpdateMethod.replace)	3
14645	bulkAddRecords(modelList,replace)	4
19407	bulkAddScheduledActions(List<ScheduledAction>	13
24268	bulkAddSplits(@NonNull	4
24336	bulkAddSplits(List<Split>	16
24440	bulkAddTransactions(@NonNull	4
19394	bulkAddTransactions(List<Transaction>	31
54289	bulkCreateBudgets()	2
59635	bulkMoveDialogFragment	3
59621	bulkMoveDialogFragment.setArguments(args)	3
33070	bulkMoveFragment	12
13059	bulkMoveFragment.setArguments(args)	14
13856	bulkMoveFragment.setTargetFragment(this,0)	7
13080	bulkMoveFragment.show(ft,"bulk_move_dialog")	13
21144	bundle	28
51698	bundle)	7
63950	bundle,	2
57055	bundle,String	5
27351	bundle.putInt(KEY_COLUMNS,columns)	3
27178	bundle.putInt(KEY_SIZE,size)	3
27557	bundle.putInt(KEY_TITLE_ID,titleResId)	3
51572	bureau</string>	8
23299	busy	3
26560	but	135
15302	butan&#233	8
62387	butanes</item>	6
15709	butans</item>	10
737	butterknife.Bind	106
9485	butterknife.BindView	10
158	butterknife.ButterKnife	97
1567	butterknife.OnClick	13
1678	button	158
5468	button's	7
37399	button)	5
50849	button).setSupportBackgroundTintList(tint)	3
7808	button,	18
32251	button,ColorStateList	9
5971	button,boolean	5
33366	button,but	5
39150	button,false	9
51342	button,what	3
32613	button.	40
39163	button.)	4
5987	button.getDrawable()	5
4665	button.setEnabled(enabled)	5
5280	button.setImageDrawable(originalIcon)	8
32234	button.setTextColor(getResources().getColor(android.R.color.white))	7
50208	button?	5
45709	buttonAnimator	4
45770	buttonAnimator.addListener(this)	4
44939	buttonAnimator.setDuration(200)	4
45105	buttonAnimator.setInterpolator(new	4
7238	buttonView,	31
5887	buttonView,boolean	39
7557	buttons	77
37021	buttons.	11
48852	buttons:	4
1563	by	447
31649	by.	12
56494	by:	7
7917	byDay	13
34963	byDay)	4
35087	byDay){	5
34968	byDays	3
35017	byDays)	3
35189	byDays){	4
35247	byDaysList	4
35220	byDaysList.add(Calendar.FRIDAY)	3
35237	byDaysList.add(Calendar.MONDAY)	3
34975	byDaysList.add(Calendar.SATURDAY)	3
34941	byDaysList.add(Calendar.SUNDAY)	3
35102	byDaysList.add(Calendar.THURSDAY)	3
34984	byDaysList.add(Calendar.TUESDAY)	3
34882	byDaysList.add(Calendar.WEDNESDAY)	3
35024	byDaysList.add(EventRecurrence.day2CalendarDay(day))	4
35194	byDaysString	3
35043	byDaysString)	3
35107	byDaysString.split(","))	3
35154	byDaysToString(@NonNull	3
34992	byday	6
35207	byday)	6
35067	byday){	9
35060	byday.length	6
22283	byly	9
56068	byta	2
55127	byte	3
28157	byte[1024]	15
55176	byte[2]	3
28194	byte[]	15
14072	bytesCopied	7
6997	c	123
25860	c&#225	7
59530	c&#226	6
20935	c&#244	21
2010	c)	55
7344	c){	72
19361	c,	42
39221	c,AttributeSet	9
49667	c,SearchableInfo.ActionKeyInfo	5
7946	c,String[]	7
59027	c,from,to,0)	2
50490	c,int	5
41046	c,which	4
7189	c.close()	76
50595	c.getColumnIndex(SearchManager.SUGGEST_COLUMN_FLAGS)	5
49666	c.getColumnIndex(SearchManager.SUGGEST_COLUMN_ICON_1)	5
49821	c.getColumnIndex(SearchManager.SUGGEST_COLUMN_ICON_2)	5
49898	c.getColumnIndex(SearchManager.SUGGEST_COLUMN_TEXT_1)	5
50192	c.getColumnIndex(SearchManager.SUGGEST_COLUMN_TEXT_2)	5
49975	c.getColumnIndex(SearchManager.SUGGEST_COLUMN_TEXT_2_URL)	5
60615	c.getColumnIndexOrThrow("_id")	3
19107	c.getCount()	9
19321	c.getDouble(0)	7
18366	c.getLong(0)	13
18525	c.getLong(DatabaseAdapter.COLUMN_RECURRENCE_PERIOD)	5
27027	c.getLong(DatabaseAdapter.COLUMN_ROW_ID)	15
25190	c.getLong(c.getColumnIndexOrThrow("recurrence_period"))	3
35294	c.getLong(c.getColumnIndexOrThrow(AccountEntry._ID))	3
20278	c.getLong(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_RECURRENCE_PERIOD))	6
11872	c.getLong(c.getColumnIndexOrThrow(TransactionEntry._ID))	23
48565	c.getMethod(methodName,PARAM_TYPES)	5
48419	c.getName())	4
50242	c.getPosition()	5
6459	c.getString(0)	21
34398	c.getString(1)	5
26304	c.getString(DatabaseAdapter.COLUMN_ACCOUNT_UID)	7
18269	c.getString(DatabaseAdapter.COLUMN_AMOUNT)	10
18747	c.getString(DatabaseAdapter.COLUMN_DOUBLE_ENTRY_ACCOUNT_UID)	12
18410	c.getString(DatabaseAdapter.COLUMN_NAME)	13
23453	c.getString(DatabaseAdapter.COLUMN_NAME))	5
35285	c.getString(DatabaseAdapter.COLUMN_UID)	5
1085	c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_COLOR_CODE))	14
25915	c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_CURRENCY))	3
15	c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_DESCRIPTION))	3
24251	c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_NAME))	8
24273	c.getString(c.getColumnIndexOrThrow(AccountEntry.COLUMN_UID))	21
26822	c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_COLOR_CODE))	8
19922	c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_DOUBLE_ENTRY_ACCOUNT_UID))	8
6478	c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_TYPE))	8
26716	c.getString(c.getColumnIndexOrThrow(DatabaseHelper.KEY_UID))	8
24329	c.getString(c.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_TYPE))	6
19950	c.getString(c.getColumnIndexOrThrow(SplitEntry.COLUMN_ACCOUNT_UID))	10
19948	c.getString(c.getColumnIndexOrThrow(SplitEntry.COLUMN_AMOUNT))	8
10157	c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_CURRENCY))	10
24179	c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_DESCRIPTION))	10
35443	c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_NAME))	4
24389	c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID))	5
6849	c.moveToFirst()){	33
35257	c.moveToNext())	4
49738	c.moveToPosition(position))	5
38890	c.obtainStyledAttributes(attrs,ATTRS)	5
60591	c.registerContentObserver(mChangeObserver)	3
60502	c.registerDataSetObserver(mDataSetObserver)	3
4872	cabealho	18
15329	cabecera	26
15749	caboverdiano</item>	13
9928	cache	38
50836	cache,using	5
41453	cache.	9
50866	cache:	5
29222	cachePath	11
47095	cached	16
50640	cached,find	5
64247	cached,so	2
51013	cached.newDrawable()	5
50785	cached.newDrawable(mProviderContext.getResources())	5
50592	caching	13
5375	cada	46
10580	cadangan	10
10566	cadre	15
22944	caixa</string>	12
17307	cakowitej	13
23454	cal	47
63558	cal.get(Calendar.HOUR_OF_DAY)	2
63560	cal.get(Calendar.MINUTE)	2
64268	cal.get(Calendar.MONTH),cal.get(Calendar.DAY_OF_MONTH))	1
54340	cal.set(2015,Calendar.OCTOBER,5)	8
54258	cal.set(2016,Calendar.AUGUST,5)	5
54183	cal.set(2016,Calendar.JANUARY,5)	5
55846	cal.set(Calendar.DAY_OF_WEEK,calendarWeekday)	3
35950	cal.setTimeInMillis(mTransaction.getTimeMillis())	6
18626	calcul	7
15369	calculado	14
40359	calculate	14
51894	calculateCoordinates(View	13
5768	calculateEarliestAndLatestTimestamps(List<AccountType>	37
2692	calculateEarliestAndLatestTimestamps(accountTypeList)	22
21130	calculateSplitBalance(List<String>	30
34292	calculateSplitBalance(accountUIDList,currencyCode,hasDebitNormalBalance,-1,-1)	1
34314	calculateSplitBalance(accountUIDList,currencyCode,hasDebitNormalBalance,startTimestamp,endTimestamp)	4
41234	calculateValue().	7
42289	calculateValue(float	5
4290	calculated	121
42002	calculated.	4
40180	calculating	13
40506	calculation	24
40700	calculation:	8
34632	calculations	16
34533	calculations.	5
9652	calculator	37
56672	calculatorEditText	7
56662	calculatorEditText.evaluate()	10
56659	calculatorEditText.focusSearch(View.FOCUS_DOWN).requestFocus()	7
56714	calculatorEditText.getSelectionEnd()	4
56689	calculatorEditText.getSelectionStart()	7
56712	calculatorEditText.getText()	7
34899	calculatorKeyboard	7
34988	calculatorKeyboard){	10
34884	calculatorKeyboard.getContext()	7
34522	calculatorKeyboardView	9
34537	calculatorKeyboardView)	12
63498	calculatorKeysLayout	4
63515	calculatorKeysLayout)	4
873	calendar	56
51942	calendar.clear()	7
9053	calendar.get(Calendar.DAY_OF_MONTH)	15
9744	calendar.get(Calendar.MINUTE))	2
9738	calendar.get(Calendar.MINUTE),true)	10
8795	calendar.get(Calendar.MONTH)	15
9365	calendar.get(Calendar.YEAR)	15
2006	calendar.getTimeInMillis()	16
51920	calendar.set(2014,8,26)	7
51860	calendar.set(2015,6,6)	7
54338	calendar.set(2017,8,26)	6
35016	calendar.set(Calendar.DAY_OF_WEEK,day)	3
55601	calendar.set(year,month,day)	10
276	calendar.set(year,monthOfYear,dayOfMonth)	6
23965	calendar.setTimeInMillis(dateMillis)	15
8771	calendar.setTimeInMillis(timeMillis)	10
54152	calendarDatePickerDialog,	2
24011	calendarDatePickerDialog,int	5
55597	calendarWeekday	3
55600	calendarWeekday)	3
16406	calendrier</string>	10
4112	call	147
38727	call.	12
42264	callAgain	4
46650	callBackToApp)	4
18771	callback	76
38524	callback)	22
51246	callback,	5
39321	callback,and	4
42761	callback,boolean	4
34332	callback,long	11
38311	callback.	18
39450	callback.onContentChanged()	4
39191	callback:	8
37915	callbackCreateOptionsMenu(Menu	4
39985	callbackCreateOptionsMenu(mMenu)	4
38505	callbackOptionsItemSelected(MenuItem	4
38816	callbackOptionsItemSelected(item)	4
40045	callbackOptionsItemSelected(mMenu.findItem(item))	4
38583	callbackPrepareOptionsMenu(Menu	4
39565	callbackPrepareOptionsMenu(mMenu)	4
430	callbacks	47
62075	callbacks,String	4
44361	callbacks.	4
1611	called	215
46317	called,false	4
37940	called,no	4
41647	called,to	8
39735	called.	43
41676	caller	28
32687	caller,	12
42766	caller,Intent[]	13
55561	caller,Preference	5
63150	caller,RemoteOperationResult	3
23543	caller,which	3
57244	callers	4
5498	calling	133
3967	calls	69
46367	calls.	5
29335	cambiamenti	8
12186	cambiar	24
12927	cambiarla	12
3518	cambio	26
3658	cambio</string>	11
16031	cambios	26
10855	camembert</string>	3
646	can	415
12677	can't	11
48152	can,however,	4
45910	canAnimate()	4
47834	canCollapse	4
53905	canSave	5
25965	canSave(){	26
62460	canadiano</item>	6
39118	cancel	13
39439	cancel()	12
41775	cancel()'d	4
40568	cancel().	4
18938	cancel(true)	15
40648	cancel/end	4
40915	canceled	8
40785	canceled,then	4
8760	canceled.	11
40705	canceling	8
26051	cancellate.\n\nContinuare?</string>	9
40525	cancellation	4
38962	cancels	8
55820	candidateNextDueTime	3
49813	candidates	5
50084	candidates,and	5
47836	cannnot	4
2880	cannot	288
2720	cantidad	23
2566	cantidades	16
46867	canvas	4
43412	canvas)	17
47530	canvas,int	4
46460	canvas.drawRect(getBounds(),paint)	5
46609	canvas.restore()	4
47477	canvas.save()	4
47145	canvas.translate(getPaddingLeft()	4
22395	canviar	7
22061	cap	7
42244	capabilities.	4
49063	capability	5
37477	capable	4
56256	capacidad	2
55810	capacidade	2
60051	capalera	3
29280	capitali	4
42285	capitalized	4
42005	capitalized.	4
33277	capofitto,\n	2
29401	capofitto,\nimpostiamo	4
48180	capped.	4
55551	capture	2
12630	caracteres	5
6756	card	33
57361	card"	6
9959	card,or	13
55691	card.	8
33895	card</li>	4
24725	cardview:cardCornerRadius="4dp"	14
24839	cardview:cardPreventCornerOverlap="false"	20
24908	cardview:cardUseCompatPadding="true"	20
19641	care	54
48519	careful	4
40874	cares	4
51670	caret	5
2686	carpeta	20
20390	cart&#227	14
10553	carte	30
29380	cartella	8
4489	carto	29
52146	cascade	7
21070	cascade"	4
914	case	354
40152	case).	8
34609	case,	9
20904	case,it	2
45015	case.	8
49757	case...	5
4669	cases	39
46437	cases,make	4
38696	cases,the	4
32326	cash	9
15625	catar&#237	8
15880	catar</item>	10
10711	catatan</string>	7
365	catch	324
96	catch!	19
54554	catch(Exception	6
48379	categories	4
43394	categories).	4
43434	categories,and	4
37233	category	16
48352	category)	4
44127	category,the	4
39004	category.	4
43873	category.")	4
42372	categoryOrder	11
43438	categoryOrder)	4
44022	categoryOrder,CharSequence	4
43494	categoryOrder,ComponentName	4
43004	categoryOrder,int	11
2054	caters	6
776	caught	11
7832	cause	54
13071	caused	19
62631	caused.</p>	2
3089	causes	52
27838	caution	6
62645	caution!!!</b></p>	2
43237	caution.	4
39113	cb	16
44168	cb)	15
38804	cb.onPanelClosed(FEATURE_ACTION_BAR,menu)	4
8093	cd:type="account">5</gnc:count-data>	3
8599	cd:type="account">6</gnc:count-data>	3
7855	cd:type="account">7</gnc:count-data>	6
7894	cd:type="book">1</gnc:count-data>	8
7580	cd:type="commodity">1</gnc:count-data>	8
8597	cd:type="price">1</gnc:count-data>	3
7612	cd:type="schedxaction">1</gnc:count-data>	4
7999	cd:type="transaction">1</gnc:count-data>	8
42625	cdesc	8
55903	cdigo	2
11931	ce	33
43406	cell	4
44077	cell-based	4
43593	cell.	4
43920	cellCount	4
42600	cellSize	7
44016	cellSize,0,mGeneratedItemPadding,0)	4
42590	cellSize,cellsRemaining,querySpec,0)	4
43795	cellSize,int	4
44047	cellSize.	4
42826	cellSizeRemaining	7
42899	cells	7
43749	cells,all	4
43819	cells.	4
43343	cellsAvailable	4
42649	cellsRemaining	7
43750	cellsRemaining)	4
43748	cellsRemaining,	4
43892	cellsRemaining,MeasureSpec.AT_MOST)	4
43696	cellsRemaining--	4
44027	cellsUsed	5
43767	cellsUsed++	4
17279	celu	23
11625	centang	7
42740	center	11
43594	centerSingleExpandedItem	4
37297	centered	4
44972	centeredLeft	4
43400	centering	4
43621	centers.	4
51786	central	6
52428	centralized	2
25858	centrum	5
15761	cerrado</string>	8
2005	certain	21
49683	certainly	5
4933	certeza	34
20717	certeze	19
16218	ces	5
10691	cette	66
39073	chaining	8
48512	chaining.	4
36470	chance	16
1440	change	283
61973	change)	3
18571	change,update	12
37844	change.	24
11936	change</string>	10
50510	changeCursor	5
50079	changeCursor()	5
50437	changeCursor(Cursor	12
50290	changeCursor(null)	5
43432	changeMenuMode()	4
28147	changeSet	16
6528	changed	159
43659	changed,	4
44041	changed,int	21
52869	changed,{@code	8
38503	changed.	25
19399	changed</p>	8
43604	changedAtLeastOneItem	4
36395	changedSignText	6
46649	changedView,int	4
10573	changements	3
10181	changer	21
6539	changes	175
62214	changes)	3
63266	changes,fix	3
40667	changes,it	4
35971	changes.	48
26932	changing	28
16334	chaque	16
42295	char	31
1201	charSequence,int	14
14122	char[mColumns.length]).replace("\0","?	2
12826	character	12
48620	character.	4
36254	character</p>	8
1048	characterString	60
23262	characterString)	6
53569	characterString,	5
7676	characterString,TransactionType	9
23678	characterString.split("/")	4
2654	characterString.trim()	20
3038	characterString.trim().replaceAll(".(.)?","$1").replace("null","")	6
38459	characteristics	4
2517	characters	83
3723	characters(char[]	19
60566	charge,to	3
44051	chars	20
2971	chars,	11
30565	chars,int	8
10943	chars:	42
1346	chart	177
58768	chart")	3
26905	chart.")	6
2619	chart</string>	108
2021	chart?	9
5615	chartCurrency	5
56589	chartDatePickerFragment	3
56523	chartDatePickerFragment.callback	3
56474	chartDatePickerFragment.mCalendar.setTimeInMillis(time)	3
56560	chartDatePickerFragment.maxDate	3
56511	chartDatePickerFragment.minDate	3
8122	chartLegend	25
8512	chartLegend.setForm(Legend.LegendForm.CIRCLE)	21
864	chartLegend.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER)	27
7981	chartLegend.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE)	11
785	chartLegend.setTextSize(16)	12
8614	chartLegend.setWordWrapEnabled(true)	19
6195	charts	3
5842	charts)	26
17525	chcesz	16
22035	chcete	8
17353	chciaby	11
22546	che	10
42841	cheat	4
42937	cheatSheet	4
42527	cheatSheet.setGravity(Gravity.BOTTOM	4
42984	cheatSheet.setGravity(Gravity.TOP	4
43054	cheatSheet.show()	4
24581	check	137
40841	check,as	4
38426	check.	8
33912	checkBoxPreference	11
33900	checkBoxPreference.setChecked(false)	10
57590	checkBoxPreference.setChecked(flag)	5
34110	checkBoxPreference.setOnPreferenceChangeListener(new	8
33841	checkBoxPreference.setTitle(checkBoxPreference.isChecked()	5
57587	checkBoxPreference.setTitle(getString(R.string.title_passcode_disabled))	4
33922	checkBoxPreference.setTitle(getString(R.string.title_passcode_enabled))	8
34064	checkBoxPreference.setTitle(passcodeDisabled)	5
19350	checkBoxView	14
7063	checkBoxView.getHitRect(hitRect)	19
39279	checkCloseActionMenu(Menu	4
39232	checkCloseActionMenu(menu)	4
32872	checkData()	4
46210	checkFocus()	5
50716	checkIconCache(String	5
50813	checkIconCache(drawableId)	5
50858	checkIconCache(drawableUri)	5
61946	checkIfEmpty()	3
44062	checkLayoutParams(ViewGroup.LayoutParams	4
57599	checkOldPassCode	3
46321	checkSelectionChanged()	9
32927	checkable	25
42810	checkable)	16
42813	checkable,	4
44132	checkable,boolean	12
48502	checkable,use	4
18134	checkbox	70
33791	checkbox.setButtonDrawable(id)	11
629	checkbox.setChecked(!checkbox.isChecked())	33
19372	checkbox.setChecked(false)	17
29004	checkbox.setChecked(true)	7
19251	checkbox.setOnCheckedChangeListener(new	23
32488	checkdata()	7
6786	checked	75
27106	checked)	19
27108	checked,	3
44728	checked,for	4
43744	checked,uncheck	4
27110	checked.	7
24945	checkedChangeListener	3
24967	checkedChangeListener){	3
18929	checkedCount	23
28011	checkedDefaults	5
18363	checkedPositions	14
18585	checkedPositions.keyAt(i)	14
18971	checkedPositions.size()	14
50049	checker	5
37592	checking	26
27564	checkmark	4
8105	checks	14
2485	child	97
44945	child!	4
43703	child's	4
45819	child)	11
43109	child).getItemData()	4
43683	child).hasText()	4
43944	child).needsDividerBefore()	4
45815	child,AccessibilityEvent	4
46028	child,LayoutParams	4
45026	child,android.view.ActionMode.Callback	4
47018	child,false	5
44024	child,int	16
46092	child.	8
46163	child.dispatchPopulateAccessibilityEvent(record)	4
47832	child.getBaseline()	4
47221	child.getBottom()/*	5
45817	child.getHitRect(frame)	4
43517	child.getLayoutParams()	14
47491	child.getLeft()	4
45379	child.getMeasuredHeight()	16
47911	child.getMeasuredHeight())	4
43416	child.getMeasuredWidth()	20
46814	child.getRight()/*	5
46621	child.getTop()	8
47294	child.getVisibility()	5
47682	child.layout(childLeft,childTop,childRight,childBottom)	4
45149	child.layout(x	4
45274	child.layout(x,childTop,x	4
47267	child.measure(	5
45592	child.measure(MeasureSpec.makeMeasureSpec(availableWidth,MeasureSpec.AT_MOST),	4
43843	child.measure(MeasureSpec.makeMeasureSpec(targetWidth,MeasureSpec.EXACTLY),	4
43537	child.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),heightSpec)	4
43882	child.measure(childWidthSpec,childHeightSpec)	11
44995	child.offsetTopAndBottom(tabHeight)	4
46331	child.onActionViewCollapsed()	5
45980	child.onActionViewExpanded()	5
47496	child.setDrawingCacheBackgroundColor(mDropDownList.getCacheColorHint())	4
48104	child.setEnabled(isEnabled())	4
47372	child.setLayoutParams(p)	4
43496	child.setPadding(mGeneratedItemPadding	4
44061	child.setPadding(mGeneratedItemPadding,0,mGeneratedItemPadding,0)	4
58818	child.setParentUID(parent.getUID())	5
45462	child.setScaleY(0)	4
48098	child.setSelected(child	4
47757	child.setSelected(hasFocus())	4
47763	child.setSelected(isSelected)	4
13987	childAccount	17
13813	childAccount.setAccountType(AccountType.LIABILITY)	5
13116	childAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE))	5
28844	childAccount.setParentUID(DUMMY_ACCOUNT_UID)	12
13296	childAccount.setParentUID(PARENT_ACCOUNT_UID)	5
62999	childAccount.setParentUID(TRANSACTIONS_ACCOUNT_UID)	4
13228	childAccount.setUID(CHILD_ACCOUNT_UID)	5
28828	childAccountsShouldUseParentTransferAccountSetting(){	15
48102	childBaseline	4
43536	childBefore	5
44119	childBefore).needsDividerAfter()	4
47792	childBottom	4
43455	childCount	21
46660	childExtra	5
44935	childHeight	4
45589	childHeight)	4
43397	childHeightMode	4
43637	childHeightSize	4
43855	childHeightSpec	11
43713	childHeightSpec)	4
44039	childIndex	8
42505	childIndex)	13
43852	childIndex++	4
42665	childIndex,MenuItemImpl	8
42833	childItem	8
43069	childItem.getIcon()	8
47604	childLeft	4
40687	childList	5
40753	childList.add(node.animation)	4
47595	childRight	4
45499	childSpecHeight	4
45726	childSpecHeight)	4
45467	childSpecHeight,	4
44994	childSpecHeight,0)	4
45073	childTop	8
32935	childView	3
45603	childWidth	4
45155	childWidth,childTop	4
45489	childWidth,childTop,x,childTop	4
43350	childWidthSpec	11
6425	children	60
46569	children,and	4
39769	children.	8
48160	childrenLeft	4
47816	childrenWidth	4
46525	childs	5
62480	chileno</item>	6
15929	chino</item>	14
29385	chiuso</string>	2
32939	choice	14
62317	choice.	4
49315	choiceIntent	4
49040	choiceIntent.setComponent(chosenName)	4
49001	choiceIntentCopy	4
49005	choiceIntentCopy)	4
49015	choiceRecords	4
49664	choiceRecords.remove(0)	4
48957	choiceRecords.size()	4
48614	choices	4
48373	choices.	4
16161	choisie,calcule	9
19592	choose	31
49180	chooseActivity(int	4
2262	chooser	76
48700	choosing	8
49608	choosing.	4
43755	chording	8
9850	chosen	32
48672	chosen.	13
48832	chosenActivity	4
49159	chosenActivity.resolveInfo.activityInfo.name)	4
48977	chosenActivity.resolveInfo.activityInfo.packageName,	4
49515	chosenName	4
22134	chyb</string>	9
55709	ci	2
25670	cil	6
20332	cila	10
29950	circulaire</string>	5
27227	circular	15
40024	circularProgressBar	4
39801	circularProgressBar.setVisibility(View.GONE)	4
40123	circularProgressBar.setVisibility(View.VISIBLE)	4
41463	circumstances.	8
1907	class	377
48741	class).	4
57102	class,do	3
40980	class,make	8
56992	class,not	6
42097	class,which	4
53108	class,you	3
26699	class.	36
23257	class.<br>	3
41407	class/property	4
48338	class:	4
32442	class</p>	6
36848	class="com.actionbarsherlock.internal.widget.ActionBarView$HomeView"	4
36823	class="com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView"	4
37188	class="com.actionbarsherlock.widget.SearchView$SearchAutoComplete"	5
312	class="org.gnucash.android.ui.passcode.KeyboardFragment"	3
38439	class="special	21
50659	classInfo)	4
48392	className,Class<?>[]	4
48786	className,e)	4
31722	classes	19
32437	classes.	3
34439	classname	6
10000	classpath	37
24267	clause	23
52176	clause.	10
56071	clave</string>	2
48749	clazz	7
48313	clazz.getConstructor(constructorSignature)	4
56995	clazz.newInstance()	3
14323	clean	27
50765	cleanActivityName("com.jakewharton.test",".ui.SomeClass")	4
50825	cleanActivityName("com.jakewharton.test","SomeClass")	4
50794	cleanActivityName("com.jakewharton.test","com.jakewharton.test.SomeClass")	4
50925	cleanActivityName("com.jakewharton.test","com.other.package.SomeClass")	4
39693	cleanActivityName(String	4
39665	cleanActivityName(packageName,xml.getAttributeValue(i))	4
23735	cleanString	5
13575	cleanup(){	2
39704	cleanupTabs()	4
38274	clear	26
42836	clear()	20
43917	clear.	4
44020	clearAll()	4
42594	clearAllAnimations()	4
43145	clearAnimation()	5
49398	clearFocus()	9
43714	clearHeader()	12
47058	clearListSelection()	4
46267	clearSavedState()	4
44527	cleared	24
42656	cleared)	16
53565	cleared,but	2
23752	clearing	23
20895	clears	9
16286	clic	30
5479	click	97
46337	click,false	4
30326	clickListener	27
44662	clickListener)	8
28613	clickOnView(R.id.btn_save)	8
28629	clickOnView(R.id.checkbox_transaction)	5
28925	clickOnView(R.id.context_menu_delete)	9
29129	clickOnView(R.id.context_menu_move_transactions)	5
35215	clickOnView(R.id.fab_create_transaction)	3
35228	clickOnView(R.id.input_transaction_amount)	3
35040	clickOnView(R.id.input_transaction_name)	3
29059	clickOnView(R.id.menu_save)	10
13264	clickOnView(int	20
25446	clickSherlockActionBarItem(R.id.context_menu_delete)	19
28342	clickSherlockActionBarItem(R.id.context_menu_edit_accounts)	11
29048	clickSherlockActionBarItem(R.id.context_menu_move_transactions)	10
28916	clickSherlockActionBarItem(R.id.menu_add_transaction)	15
29166	clickSherlockActionBarItem(R.id.menu_cancel)	10
28281	clickSherlockActionBarItem(R.id.menu_save)	23
34143	clickSherlockActionBarItem(Solo	5
28674	clickSherlockActionBarItem(int	13
51912	clickSplitIcon(){	14
51934	clickXY(final	6
30493	clicked	28
46167	clicked,or	4
50129	clicked,the	5
3721	clicked.	37
48138	clicked</li>	4
28691	clicking	17
29162	clicks	16
50123	clicks.	4
8939	client	24
60564	client)	3
46434	client,see	4
48935	client.	4
48312	clients	4
48763	clients.	4
47459	clip)	4
31015	clock	13
18117	clone	27
40743	clone's	4
31500	clone()	33
35654	clone(){	4
40572	clone.	4
30846	clone1	7
30845	clone2	12
40840	cloneDependency	4
40441	cloneListeners	4
40594	cloneListeners)	4
40657	cloneListeners.remove(listener)	4
18499	cloned	29
18051	cloned,but	5
41052	clonedDependencyNode	4
41082	clonedListeners	4
40955	clonedListeners)	4
13506	close	91
13767	close()	51
30545	close(){	16
43330	close(boolean	4
43773	close(false)	4
43715	close(true)	4
45199	closeButton	4
45169	closeButton.setOnClickListener(new	4
45548	closeMode()	4
38551	closeOptionsMenu()	8
26859	closed	17
38060	closed.	11
50198	closed.")	5
47766	closed</li>	4
6149	closed</string>	96
50222	closer	5
49307	closes	6
38655	closing	13
44319	closing.	4
37130	clue	8
10976	clutter	5
11967	clutter.	6
36557	cmbio	22
29684	cmbio</string>	8
20772	cmdtyCountData	13
21118	cmdtyCountData.appendChild(document.createTextNode(String.valueOf(mAccountsDbAdapter.getCurrencies().size())))	4
35762	cmdtyCountData.appendChild(mDocument.createTextNode("1"))	4
31421	cmdtyCountData.appendChild(mDocument.createTextNode(String.valueOf(mAccountsDbAdapter.getCurrencies().size())))	7
35766	cmdtyCountData.setAttribute("cd:type","commodity")	6
20617	cmdtyCountData.setAttribute(GncXmlHelper.ATTR_KEY_CD_TYPE,"commodity")	9
62941	cmdtyDbAdapter	4
62921	cmdtyDbAdapter.getCommodityUID(baseCurrencyCode)	4
62820	cmdtyDbAdapter.getCommodityUID(transferCurrencyCode)	4
20637	cmdtyIdNode	11
20987	cmdtyIdNode.appendChild(doc.createTextNode(mCurrency.getCurrencyCode()))	9
20775	cmdtyIdNode.appendChild(doc.createTextNode(mCurrencyCode))	9
21047	cmdtySpacenode	11
20317	cmdtySpacenode.appendChild(doc.createTextNode("ISO4217"))	11
57684	cnfe)	2
10794	coba	3
11085	cobalagi</string>	3
1657	code	246
3287	code")	6
61758	code)	3
10656	code,veuillez	12
36449	code,{@code	4
19390	code.	23
1055	code:	11
36180	code</p>	7
11060	code</string>	15
31267	codeCoverage	2
1624	codes	38
22798	codice	21
12789	codificaci&#243	5
17727	cofn!</string>	13
60813	coins	3
54926	coisas\n\nPara	7
50915	col	5
50734	col)	5
35869	colIndex	7
3027	coletada	49
44491	collapsable	8
45609	collapsable)	4
45607	collapsable.	4
39007	collapse	19
48696	collapse,false	4
43185	collapseActionView()	16
43935	collapseItemActionView(MenuBuilder	12
44737	collapseItemActionView(MenuItemImpl	5
43467	collapseItemActionView(mExpandedItem)	4
45823	collapseItemActionView(mMenu,mCurrentExpandedItem)	4
43711	collapsed	21
50139	collapsed)	5
48658	collapsed,false	4
48515	collapsed.	4
50302	collapsedActivityCount	4
49688	collapsedActivityCount,	4
48522	collapses	9
46389	collapsible	9
42683	collapsing	8
59558	collect	2
2156	collected	157
52902	collecting	7
24178	collection	17
40998	collection.	4
42202	collections	4
41927	collisions	4
16974	coln</item>	6
62416	colombiano</item>	6
899	color	314
2638	color")	6
291	color)	59
1937	color))	9
27665	color,adjusts	3
27289	color,boolean	3
55112	color,float	4
224	color,if	8
27319	color,int	3
37163	color,typeface,size,and	5
6930	color.	29
56906	color.length()	3
462	color.replaceAll(".(.)?","$1").replace("null","")	18
15588	color</string>	19
36797	color="#A00080FF"/>	5
2083	colorCode	48
461	colorCode)	20
27153	colorCode.length()	4
27278	colorDrawable	3
46404	colorFilter)	5
1917	colorHex	14
1408	colorHex){	14
2965	colorHexRegex	6
1181	colorOptions	9
227	colorOptions[i]	9
1444	colorPickerDialogFragment	7
27270	colorPickerDialogFragment.setOnColorSelectedListener(mColorSelectedListener)	3
27331	colorPickerDialogFragment.show(fragmentManager,COLOR_PICKER_DIALOG_TAG)	3
9356	colorStripView	17
27862	colorStripView.setBackgroundColor(Color.TRANSPARENT)	8
27142	colorStripView.setBackgroundColor(color)	11
27474	colorSwatch	3
27470	colorSwatch)	3
329	colorTypedArray	6
1013	colorTypedArray.getColor(i,R.color.title_green)	6
1622	colorTypedArray.getColor(i,getResources().getColor(R.color.title_green))	6
1169	colorTypedArray.length()	6
34345	colorTypedArray.recycle()	3
50027	colorValue	5
16302	colore	21
16361	colore</string>	16
47237	colored	4
27900	colori	5
272	colors	48
27508	colors)	4
41857	colors),a	4
27475	colors,int	4
27181	colors.	3
29965	colors.add(COLORS[(colors.size())	6
7044	colors.add(COLORS[(values.size()	5
6863	colors.add(Color.LTGRAY)	3
1789	colors.add(Color.parseColor(account.getColorHexCode()))	4
12530	colors.add(account.getColor()	2
1005	colors.add(account.getColor())	5
760	colors.add(account.getColorHexCode()	10
8659	colors.add(accountToColorMap.get(account.getUID()))	18
12242	colors.add(color)	2
1394	colors.add(mUseAccountColor	26
29934	colors.get(colors.size()	7
33149	colors.get(i)	3
34327	colors.get(j	2
33038	colors.set(i	3
32994	colors.set(i,colors.get(i	3
34274	colors.set(j	2
34263	colors.set(j,tmp3)	2
57661	colors.size())	6
52304	colum	3
7244	column	98
50724	column,or	5
35293	column.	8
64199	columnIndex	6
21101	columnKey	21
21069	columnKey,	21
24372	columnKey,@Nullable	5
20153	columnKey,String	19
59565	columnN	1
24995	columnName	16
50964	columnName)	5
51839	columnName){	7
14347	columns	43
49988	columns",e)	5
14387	columns)	2
33981	columns).</li>	8
51242	columns,	19
24079	columns,@Nullable	7
27516	columns,OnColorSelectedListener	3
24239	columns,String	22
56902	columns,condition,null,null,null	10
24145	columns,condition,null,null,null,	6
27157	columns,int	3
56843	columns,where,whereArgs,null,null	8
24452	columns,where,whereArgs,null,null,	5
50249	columns.	5
2469	com	55
3588	com&#250	19
26907	com&#8230	10
38159	com.actionbarsherlock	4
39144	com.actionbarsherlock.ActionBarSherlock	7
39158	com.actionbarsherlock.ActionBarSherlock.OnActionModeFinishedListener	5
39116	com.actionbarsherlock.ActionBarSherlock.OnActionModeStartedListener	5
37948	com.actionbarsherlock.ActionBarSherlock.OnCreatePanelMenuListener	8
37994	com.actionbarsherlock.ActionBarSherlock.OnMenuItemSelectedListener	8
37998	com.actionbarsherlock.ActionBarSherlock.OnPreparePanelListener	8
38902	com.actionbarsherlock.R	49
37826	com.actionbarsherlock.app	9
2647	com.actionbarsherlock.app.ActionBar	109
14397	com.actionbarsherlock.app.ActionBar.OnNavigationListener	18
27578	com.actionbarsherlock.app.SherlockDialogFragment	41
13271	com.actionbarsherlock.app.SherlockFragment	19
7220	com.actionbarsherlock.app.SherlockFragmentActivity	46
39036	com.actionbarsherlock.app.SherlockFragmentActivity.OnCreateOptionsMenuListener	4
39132	com.actionbarsherlock.app.SherlockFragmentActivity.OnOptionsItemSelectedListener	4
38862	com.actionbarsherlock.app.SherlockFragmentActivity.OnPrepareOptionsMenuListener	4
18291	com.actionbarsherlock.app.SherlockListFragment	36
2570	com.actionbarsherlock.app.SherlockPreferenceActivity	57
39059	com.actionbarsherlock.internal	13
38038	com.actionbarsherlock.internal.ActionBarSherlockCompat	8
50644	com.actionbarsherlock.internal.ActionBarSherlockCompat.cleanActivityName	5
38001	com.actionbarsherlock.internal.ActionBarSherlockNative	4
38918	com.actionbarsherlock.internal.ResourcesCompat.getResources_getBoolean	19
43081	com.actionbarsherlock.internal.ResourcesCompat.getResources_getInteger	4
39542	com.actionbarsherlock.internal.app	4
39162	com.actionbarsherlock.internal.app.ActionBarImpl	4
39590	com.actionbarsherlock.internal.app.ActionBarWrapper	4
40084	com.actionbarsherlock.internal.nineoldandroids.animation	16
39934	com.actionbarsherlock.internal.nineoldandroids.animation.Animator	15
39388	com.actionbarsherlock.internal.nineoldandroids.animation.Animator.AnimatorListener	8
39462	com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter	5
40312	com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet	11
40616	com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe.FloatKeyframe	7
41061	com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe.IntKeyframe	7
41444	com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe.ObjectKeyframe	4
39520	com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator	14
42644	com.actionbarsherlock.internal.nineoldandroids.view	4
45626	com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup	4
42980	com.actionbarsherlock.internal.nineoldandroids.view.animation	4
43020	com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy	9
42460	com.actionbarsherlock.internal.nineoldandroids.widget	5
39625	com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout	8
47893	com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView	4
45446	com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout	9
42931	com.actionbarsherlock.internal.view	4
44509	com.actionbarsherlock.internal.view.ActionProviderWrapper	5
38963	com.actionbarsherlock.internal.view.StandaloneActionMode	4
42630	com.actionbarsherlock.internal.view.View_HasStateListenerSupport	8
42727	com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener	8
42498	com.actionbarsherlock.internal.view.menu	12
45028	com.actionbarsherlock.internal.view.menu.ActionMenuItem	4
39045	com.actionbarsherlock.internal.view.menu.ActionMenuPresenter	11
44961	com.actionbarsherlock.internal.view.menu.ActionMenuView	7
42659	com.actionbarsherlock.internal.view.menu.ActionMenuView.ActionMenuChildView	4
39292	com.actionbarsherlock.internal.view.menu.MenuBuilder	17
38977	com.actionbarsherlock.internal.view.menu.MenuItemImpl	12
39095	com.actionbarsherlock.internal.view.menu.MenuItemWrapper	4
40310	com.actionbarsherlock.internal.view.menu.MenuPopupHelper	8
38770	com.actionbarsherlock.internal.view.menu.MenuPresenter	8
45132	com.actionbarsherlock.internal.view.menu.MenuView	4
38905	com.actionbarsherlock.internal.view.menu.MenuWrapper	7
39626	com.actionbarsherlock.internal.view.menu.SubMenuBuilder	12
42446	com.actionbarsherlock.internal.view.menu.SubMenuWrapper	4
45067	com.actionbarsherlock.internal.widget	20
39214	com.actionbarsherlock.internal.widget.ActionBarContainer	8
38884	com.actionbarsherlock.internal.widget.ActionBarContextView	12
39193	com.actionbarsherlock.internal.widget.ActionBarView	8
42844	com.actionbarsherlock.internal.widget.CapitalizingButton	4
44821	com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper	5
43927	com.actionbarsherlock.internal.widget.IcsLinearLayout	8
44539	com.actionbarsherlock.internal.widget.IcsListPopupWindow	8
39318	com.actionbarsherlock.internal.widget.IcsProgressBar	4
40114	com.actionbarsherlock.internal.widget.ScrollingTabContainerView	4
48175	com.actionbarsherlock.view	8
18504	com.actionbarsherlock.view.ActionMode	41
56811	com.actionbarsherlock.view.ActionMode.Callback	6
43179	com.actionbarsherlock.view.ActionProvider	21
44747	com.actionbarsherlock.view.CollapsibleActionView	16
3491	com.actionbarsherlock.view.Menu	101
3278	com.actionbarsherlock.view.MenuInflater	87
3657	com.actionbarsherlock.view.MenuItem	130
50247	com.actionbarsherlock.view.MenuItem.OnMenuItemClickListener	4
42686	com.actionbarsherlock.view.SubMenu	17
45049	com.actionbarsherlock.view.Window	4
48499	com.actionbarsherlock.widget	14
55019	com.actionbarsherlock.widget.*	8
49020	com.actionbarsherlock.widget.ActivityChooserModel.ActivityChooserModelClient	4
50564	com.actionbarsherlock.widget.ActivityChooserModel.OnChooseActivityListener	4
19519	com.actionbarsherlock.widget.SearchView	9
19891	com.actionbarsherlock.widget.SearchView.OnCloseListener	12
19672	com.actionbarsherlock.widget.SearchView.OnQueryTextListener,	13
48816	com.actionbarsherlock.widget.SuggestionsAdapter.getColumnString	5
27202	com.android.colorpicker.ColorPickerSwatch.OnColorSelectedListener	4
44317	com.android.internal.R.string.menu_delete_shortcut_label)	4
44554	com.android.internal.R.string.menu_enter_shortcut_label)	4
44901	com.android.internal.R.string.menu_space_shortcut_label)	4
44701	com.android.internal.R.string.prepend_shortcut_label)	4
45857	com.android.internal.R.styleable.AbsSpinner,defStyle,0)	4
53747	com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog	8
53957	com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialogFragment	4
54027	com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialog	8
54028	com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialogFragment	2
9876	com.codetroopers.betterpickers.recurrencepicker.EventRecurrence	18
9907	com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter	14
52450	com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog	11
9369	com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment	6
54036	com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialogFragment.OnRecurrenceSetListener	2
14100	com.commonsware.cwac.merge.MergeAdapter	11
3655	com.crashlytics.android.Crashlytics	132
34840	com.crashlytics.android.core.CrashlyticsCore	15
23670	com.doomonafireball.betterpickers.calendardatepicker.CalendarDatePickerDialog	9
23640	com.doomonafireball.betterpickers.radialtimepicker.RadialTimePickerDialog	9
23496	com.doomonafireball.betterpickers.recurrencepicker.EventRecurrence	20
23805	com.doomonafireball.betterpickers.recurrencepicker.EventRecurrenceFormatter	24
23818	com.doomonafireball.betterpickers.recurrencepicker.RecurrencePickerDialog	27
9281	com.dropbox.core.DbxRequestConfig	2
8890	com.dropbox.core.android.Auth	2
9268	com.dropbox.core.v2.DbxClientV2	2
9584	com.dropbox.core.v2.files.FileMetadata	2
9120	com.dropbox.core.v2.files.Metadata	2
9499	com.dropbox.sync.android.DbxAccountManager	32
9723	com.dropbox.sync.android.DbxException	8
9452	com.dropbox.sync.android.DbxFile	10
10056	com.dropbox.sync.android.DbxFileSystem	12
9460	com.dropbox.sync.android.DbxPath	12
34743	com.facebook.stetho.Stetho	6
14494	com.github.mikephil.charting.charts.BarChart	15
57097	com.github.mikephil.charting.charts.BarChart(this)	5
14613	com.github.mikephil.charting.charts.LineChart	18
14153	com.github.mikephil.charting.charts.PieChart	32
14580	com.github.mikephil.charting.components.Legend	26
8829	com.github.mikephil.charting.components.Legend.LegendForm	15
9025	com.github.mikephil.charting.components.Legend.LegendPosition	15
14386	com.github.mikephil.charting.components.LimitLine	7
14185	com.github.mikephil.charting.data.BarData	12
29139	com.github.mikephil.charting.data.BarDataSet	13
29071	com.github.mikephil.charting.data.BarEntry	17
21006	com.github.mikephil.charting.data.Entry	43
26776	com.github.mikephil.charting.data.LineData	14
27004	com.github.mikephil.charting.data.LineDataSet	21
5890	com.github.mikephil.charting.data.PieData	27
4344	com.github.mikephil.charting.data.PieDataSet	29
63900	com.github.mikephil.charting.formatter.LargeValueFormatter	5
20465	com.github.mikephil.charting.highlight.Highlight	23
6332	com.github.mikephil.charting.interfaces.OnChartValueSelectedListener	5
20397	com.github.mikephil.charting.listener.OnChartValueSelectedListener	33
54504	com.github.mikephil.charting.utils.Highlight	14
28648	com.github.mikephil.charting.utils.LargeValueFormatter	27
6148	com.github.mikephil.charting.utils.Legend.LegendForm	4
4663	com.github.mikephil.charting.utils.Legend.LegendPosition	4
54315	com.github.mikephil.charting.utils.ValueFormatter	4
8925	com.google.android.gms.common.ConnectionResult	14
9467	com.google.android.gms.common.GooglePlayServicesUtil	11
9918	com.google.android.gms.common.api.GoogleApiClient	14
9451	com.google.android.gms.common.api.ResultCallback	14
9324	com.google.android.gms.drive.Drive	14
28219	com.google.android.gms.drive.DriveApi	6
28189	com.google.android.gms.drive.DriveContents	6
51711	com.google.android.gms.drive.DriveFolder	11
51640	com.google.android.gms.drive.DriveId	8
51598	com.google.android.gms.drive.MetadataChangeSet	11
4898	com.jayway.android.robotium.solo.Solo	30
13371	com.kobakei.ratethisapp.RateThisApp	21
57062	com.owncloud.android.lib.common.OwnCloudClient	10
57040	com.owncloud.android.lib.common.OwnCloudClientFactory	10
57137	com.owncloud.android.lib.common.OwnCloudCredentialsFactory	10
60368	com.owncloud.android.lib.common.operations.OnRemoteOperationListener	6
60393	com.owncloud.android.lib.common.operations.RemoteOperation	6
57209	com.owncloud.android.lib.common.operations.RemoteOperationResult	10
57210	com.owncloud.android.lib.resources.files.CreateRemoteFolderOperation	6
57165	com.owncloud.android.lib.resources.files.FileUtils	10
57031	com.owncloud.android.lib.resources.files.UploadRemoteFileOperation	6
60371	com.owncloud.android.lib.resources.status.GetRemoteStatusOperation	6
60383	com.owncloud.android.lib.resources.users.GetRemoteUserNameOperation	6
28568	com.robotium.solo.Solo	14
56567	com.squareup.timessquare.CalendarPickerView	3
6708	com.sun.swing.internal.plaf.metal.resources.metal_pt_BR	6
60345	com.tech.freak.wizardpager.model.AbstractWizardModel	7
62128	com.tech.freak.wizardpager.model.BranchPage	3
60390	com.tech.freak.wizardpager.model.ModelCallbacks	7
60366	com.tech.freak.wizardpager.model.Page	7
62164	com.tech.freak.wizardpager.model.PageList	3
62224	com.tech.freak.wizardpager.model.ReviewItem	4
62199	com.tech.freak.wizardpager.model.SingleFixedChoicePage	3
54118	com.tech.freak.wizardpager.ui.PageFragmentCallbacks	5
62183	com.tech.freak.wizardpager.ui.ReviewFragment	3
62157	com.tech.freak.wizardpager.ui.StepPagerStrip	3
24964	com.uservoice.uservoicesdk.Config	14
20415	com.uservoice.uservoicesdk.UserVoice	29
7173	com.viewpagerindicator.TitlePageIndicator	31
64405	com.xtremelabs.robolectric.RobolectricTestRunner	1
22100	com</string>	10
38067	combination	8
41446	combination.	4
43986	combine	4
24843	combined	6
43869	combo)	4
12662	come	56
37462	comes	15
33333	cominciare	2
36974	coming	8
5423	comma	16
35240	comma-separated	5
47310	command	4
9973	commandLine	22
40843	commands	8
5507	commas	7
35081	commas.	3
11738	comme	30
26677	commencer	5
23411	commencer!	8
16164	commencez	7
47180	comment	4
36556	commentMessage	4
36516	commentMessage)	4
11279	commentaires</string>	3
33347	commento</string>	2
46406	comments	4
36536	committed	4
36117	commo	7
14157	commodities	70
33874	commodities")	7
25895	commodities)	4
8814	commodities.	7
25856	commodities.</p>	3
26076	commodities.remove(i)	3
26020	commodities.size()	3
25881	commodities</p>	6
61939	commoditiesAdapter	9
62186	commoditiesAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	6
62077	commoditiesCursorAdapter	3
7951	commoditiesDbAdapter	35
57194	commoditiesDbAdapter.fetchAllRecords(DatabaseSchema.CommodityEntry.COLUMN_MNEMONIC	6
13297	commoditiesDbAdapter.getCommodity(CURRENCY_CODE)	2
36280	commoditiesDbAdapter.getCommodity(currencyCode)	4
8477	commoditiesDbAdapter.getCommodity(mTargetCurrency.getCurrencyCode())	7
7672	commoditiesDbAdapter.getCommodity(mTargetCurrencyCode)	4
36118	commoditiesDbAdapter.getCommodityUID(commodity)	8
36424	commoditiesDbAdapter.getCommodityUID(commodityCode)	4
36391	commoditiesDbAdapter.getCommodityUID(currencyCode)	8
7480	commoditiesDbAdapter.getCommodityUID(fromCurrency.getCurrencyCode())	13
7504	commoditiesDbAdapter.getCommodityUID(fromCurrencyCode)	4
7795	commoditiesDbAdapter.getCommodityUID(mOriginAmount.getCurrency().getCurrencyCode())	6
8064	commoditiesDbAdapter.getCommodityUID(mTargetCurrency.getCurrencyCode())	11
23474	commoditiesDbAdapter.getCommodityUID(mTargetCurrency.getCurrencyCode()))	10
8250	commoditiesDbAdapter.getCommodityUID(mTargetCurrencyCode)	7
61071	commoditiesInputStream	6
684	commodity	122
11609	commodity)	26
5782	commodity){	25
61412	commodity,	3
36457	commodity.	12
11122	commodity.getCurrencyCode()	12
59832	commodity.getCusip())	5
59846	commodity.getFraction())	5
59784	commodity.getFullname())	5
59746	commodity.getMnemonic())	5
36305	commodity.getQuoteFlag())	10
36348	commodity.getSmallestFraction()	6
36030	commodity.getSmallestFractionDigits()	6
11337	commodity.getSmallestFractionDigits(),RoundingMode.HALF_EVEN)	2
12056	commodity.getSymbol()	2
61079	commodity.setCusip(cusip)	6
61634	commodity.setLocalSymbol(localSymbol)	3
61217	commodity.setNamespace(Commodity.Namespace.valueOf(namespace))	6
61462	commodity.setQuoteFlag(quoteFlag)	3
36260	commodity.setSmallestFraction(1)	4
36268	commodity.setSmallestFraction(10)	7
36063	commodity.setSmallestFraction(1000)	7
12578	commodity/currency	10
58563	commodity1UID	2
58571	commodity1UID,String	2
58550	commodity2UID	2
58548	commodity2UID,BigDecimal	2
60117	commodity</p>	3
36272	commodityCode	4
61910	commodityDbAdapter	3
61892	commodityDbAdapter.getID(commodityDbAdapter.getCommodityUID(currencyCode))	3
36565	commodityId	7
25887	commodityList	3
25800	commodityList.add(mCommoditiesDbAdapter.getCommodity(currencyCode))	3
20682	commodityNode	9
20306	commodityNode.appendChild(cmdtyIdNode)	9
20949	commodityNode.appendChild(cmdtySpacenode)	9
20217	commodityScuNode	9
20727	commodityScuNode.appendChild(doc.createTextNode(Integer.toString((int)	9
8012	commodityUID	49
36616	commodityUID)	7
58562	commodityUID,	2
12105	commodityUID,@NonNull	4
52571	commodityUID,String	11
12797	commodityUIDdb	4
35300	common	25
23994	commonDivisor	7
9060	commonly	12
6039	commonly-used	128
63532	communication	1
59325	community</string>	4
11451	comnmente	18
4959	como	67
55755	como&#8230	4
9762	compact	64
11139	compact</string>	7
53529	compactBudgetAmounts	2
53635	compactBudgetAmounts.add(bgtAmount)	2
10140	compacta	35
11271	compacta</string>	48
10139	compacte	10
11063	compacte</string>	10
54233	compactedBudgetAmounts	2
13141	companion	62
27725	comparator	7
26277	compare	27
27884	compare(Integer	3
36448	compareTo(@NonNull	19
48941	compareTo(ActivityResolveInfo	4
26539	compareTo(Money	12
27653	compares	3
26670	comparing	7
55168	compat,we	3
16771	compatibel</string>	21
22527	compatibile	17
20356	compatibility	15
11218	compatibility.	11
20405	compatibilty	11
12038	compatible	86
21873	compatibles	29
25919	compatta	5
12232	compatta</string>	20
23027	compatveis	22
27119	compensate	3
7721	compilaci&#243	29
29493	compilaci</string>	5
15802	compilacin</string>	11
7814	compilao</string>	15
9243	compile	52
60137	compile('com.android.support:support-v4:'	8
58900	compile('com.android.support:support-v4:21.0.+',	5
23854	compile('com.android.support:support-v4:22.1.1',	11
60361	compile('com.android.support:support-v4:22.2.0',	8
36671	compile('com.crashlytics.sdk.android:crashlytics:2.5.0@aar')	23
36665	compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar')	6
55237	compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar')	2
63180	compile(name:'owncloud_library',ext:'aar')	3
18884	compileOptions	18
476	compileReplaceStatement(@NonNull	48
57643	compileReplaceStatement(Account	10
59727	compileReplaceStatement(Commodity	8
61491	compileReplaceStatement(Model	6
59822	compileReplaceStatement(Price	8
61672	compileReplaceStatement(ScheduledAction	6
61550	compileReplaceStatement(Split	7
59789	compileReplaceStatement(Transaction	8
14595	compileReplaceStatement(model).execute()	12
34117	compileReplaceStatement(split).execute()	9
10021	compileSdkVersion	33
48530	compiled	4
58191	complementary	6
20149	completa</string>	23
22991	completada	16
15940	completamente</string>	14
28769	completar	11
7287	complete	56
40556	complete.	4
21875	complete</string>	16
39824	completeDeferredDestroyActionMode()	4
6800	completed	16
10977	completed</string>	108
63686	completed</string><string-array	2
24737	completely	20
50069	completely-configured	5
46652	completely.	4
38525	completely.</p>	4
19011	completion	3
44358	complexity	4
1162	compliance	365
24253	complicated	16
26882	complies	5
1156	component	39
50944	component)	5
43027	component.	8
50664	component.flattenToShortString()	5
51057	component.flattenToShortString())	5
51040	component.getPackageName()	5
51067	componentIconKey	5
52401	componentName	9
48053	components	12
41159	compose	8
48913	composed	4
43965	compound	4
44180	compoundButton	4
24925	compoundButton,	16
5755	compoundButton,boolean	18
43841	compoundButton.setChecked(checked)	4
43876	compoundButton.setChecked(mItemData.isChecked())	4
43947	compoundButton.setVisibility(newVisibility)	4
23815	compromised	5
11390	comptables	9
8427	compte	94
23522	compte.\n\n	11
5105	compte</string>	90
23734	compte\n	13
11022	comptes	96
22351	comptes!</string>	7
27948	comptes/transactions\n	9
10255	comptes</string>	64
27928	comptes\n	11
29841	computadora	10
9037	computation	64
34706	computations	13
7299	compute	42
51255	computeBalance(@NonNull	4
3930	computeBalance(String	49
34249	computeBalance(accountUID,-1,-1)	1
35758	computeBalance(accountUID,mSplitList)	6
21931	computeBalance(accountUID,startTimestamp,endTimestamp)	4
50861	computeNextCountBasedScheduledExecutionTime	8
50921	computeNextCountBasedScheduledExecutionTime(){	4
53472	computeNextRunTime(){	5
9600	computeNextScheduledExecutionTime(){	10
50642	computeNextScheduledExecutionTimeStartingAt(getLastRunTime())	4
50663	computeNextScheduledExecutionTimeStartingAt(getTimeOfLastSchedule())	4
34742	computeNextScheduledExecutionTimeStartingAt(long	10
51055	computeNextTimeBasedScheduledExecutionTime()	4
55685	computeNextWeeklyExecutionStartingAt(LocalDateTime	4
55664	computeNextWeeklyExecutionStartingAt(nextScheduledExecution)	3
43033	computeRect(after,view)	4
42879	computeRect(final	4
42925	computeRect(mBefore,view)	4
24327	computeSplitBalance(@NonNull	4
19055	computeSplitBalance(List<String>	13
13248	computeSplitBalance(String	16
19660	computed	31
62647	computed.	3
12399	computer.	7
13954	computing	42
60315	computingNextScheduledExecutionTime	3
16433	comunemente	33
16215	comuni	23
16104	comunque	20
3898	con	79
26873	con&#8230	11
35246	concat	6
35143	concatenation	6
44293	concept.	4
44323	concepts	4
44564	conceptual	4
38576	conclusion	4
37072	condensed	16
7738	condition	76
24380	condition)	15
18818	condition){	27
24379	condition,	19
24227	condition,String	20
24207	condition,formatted	4
30627	condition.append("	11
30657	condition.append("'"	6
35353	condition.append("'").append(getGnuCashRootAccountUID()).append("'")	4
30643	condition.append(")")	8
35350	condition.append(AccountEntry.COLUMN_PARENT_ACCOUNT_UID	4
35368	condition.append(AccountEntry.COLUMN_TYPE	4
30667	condition.append(DatabaseHelper.KEY_PARENT_ACCOUNT_UID	9
30523	condition.append(DatabaseHelper.KEY_TYPE	6
38601	conditionally	4
1948	conditions	81
60529	conditions:	3
4789	conectado!</string>	9
10272	conectar	14
16285	confermare.	15
114	config	25
19343	config)	7
51903	config,Context	3
24671	config.identifyUser("USER_ID","User	13
24805	config.putUserTrait("android_version",Build.VERSION.RELEASE)	7
24796	config.putUserTrait("app_version_code",BuildConfig.VERSION_CODE)	7
24824	config.putUserTrait("app_version_name",BuildConfig.VERSION_NAME)	7
24782	config.setForumId(320493)	9
24818	config.setTopicId(107400)	9
44914	configPresenters(MenuBuilder	4
45016	configPresenters(builder)	4
59541	configura&#231	6
56206	configuracin	2
4305	configuraes	13
3291	configurar	15
9962	configuration	64
37775	configuration.	8
38253	configuration.")	4
47615	configurations	4
37581	configurations.	8
9890	configure	8
40299	configureTab(Tab	4
40169	configureTab(tab,mTabs.size())	4
40271	configureTab(tab,position)	4
9207	configureWidget(WidgetConfigurationActivity.this,mAppWidgetId,bookUID,accountUID,hideAccountBalance)	3
9415	configureWidget(context,appWidgetId,bookUID,accountUID,hideAccountBalance)	3
9717	configureWidget(final	3
47848	configured	13
16330	configurer	7
47939	configures	4
889	configuring	12
5101	confirm	105
3300	confirm.	109
2443	confirmar.	48
3176	confirmation	53
6001	confirmation.	94
5466	confirme	18
4426	confirmed	9
10490	confirmer	13
15986	confirmer.	14
34198	confirming	11
30420	conflict	5
46724	confused	4
57231	confusing	4
62451	congols</item>	6
40791	conjunction	8
12778	conjuntos	5
11294	connect	30
11851	connecter	3
3363	connection	13
51656	connectionResult)	18
51661	connectionResult.startResolutionForResult((Activity)	10
59347	connectivityManager	2
59225	connectivityManager.getActiveNetworkInfo()	2
25802	connettersi	3
6979	consecutive	25
25091	consent	16
28076	consid&#233	6
20112	consider	45
27927	considera	9
27904	consideraci&#243	7
27997	considerados	6
7156	consideration	33
47482	consideration.	10
8376	consideration\n	21
18256	considered	54
35594	considered.	9
7024	considering	8
50917	considers	9
41193	consistent	16
63026	consistent.	4
16303	consisteranno	26
8630	constant	18
7635	constant:	9
13458	constants	40
18713	constants)	5
18708	constants.	7
41410	constrained	10
43138	constrained.	4
21024	constraint	42
50522	constraint)	8
60570	constraint,FilterResults	3
60421	constraint.	3
50521	constraint.length()	5
50245	constraint.toString()	5
59107	constraints	6
52186	constraints)	4
40805	constraints.	4
59160	constraits	6
41378	construct	16
24030	constructed	33
41153	constructed,the	4
50212	constructing	4
41668	construction	4
2129	constructor	109
41970	constructor),this	4
41431	constructor,	4
35450	constructor,provided	4
41175	constructor,used	4
3304	constructor.	84
48576	constructor.newInstance(arguments)	4
32252	constructor</p>	3
48396	constructorSignature,	4
41440	constructors	9
41131	constructs	4
34046	constructs)	4
48575	consume	4
44533	consumed	12
20624	consumes	8
1437	consuming	8
9218	consumption</p>	8
12111	cont</string>	11
5271	conta	78
25988	conta</item>	9
5938	conta</string>	72
32811	contact	10
18285	contain	71
43601	contained	13
39684	container	21
46287	container)	4
2487	container,	184
33047	container,@Nullable	8
8335	container,Bundle	45
19840	container,int	9
33454	container,replacing	13
40032	container.	12
45106	containerHeight	4
2499	containing	186
4513	contains	133
50626	containsKey()	5
4925	contas	83
11601	contas,ou	25
4852	contas-comuns,ou	6
20324	contas.	16
27910	contas/transaes\n	9
34919	contas</item>	6
3280	contas</string>	54
27958	contas\n	6
61829	conte	3
55607	contedo	4
18335	contener	6
28023	contenere	5
56204	contenido	2
14728	contenidor</string>	6
23881	contenir	5
13386	content	83
39752	content")	4
46544	content,it	4
31747	content.	35
28241	content:	9
38886	contentDesc	8
39142	contentDesc)	8
49456	contentDescription	4
45451	contentHeight	8
45001	contentHeight)	9
39593	contentParent	4
39488	contentParent.setId(android.R.id.content)	4
8820	contentUri	2
35430	contentValue	3
35526	contentValue,	3
35550	contentValue.put(DatabaseHelper.KEY_ACCOUNT_UID,accountUID)	3
19728	contentValues	121
59588	contentValues){	1
20962	contentValues,	32
52612	contentValues,@NonNull	10
24254	contentValues,@Nullable	4
24322	contentValues,String	8
7722	contentValues.clear()	51
25990	contentValues.put("amount",	7
53194	contentValues.put("period",cursor.getLong(cursor.getColumnIndexOrThrow("recurrence_period")))	2
35305	contentValues.put(AccountEntry.COLUMN_COLOR_CODE,	6
51260	contentValues.put(AccountEntry.COLUMN_COLOR_CODE,account.getColorHexCode())	9
51993	contentValues.put(AccountEntry.COLUMN_COMMODITY_UID,CommoditiesDbAdapter.getInstance().getCommodityUID(defaultCurrencyCode))	6
51896	contentValues.put(AccountEntry.COLUMN_COMMODITY_UID,getCommodityUID(defaultCurrencyCode))	3
30131	contentValues.put(AccountEntry.COLUMN_CURRENCY,	18
34034	contentValues.put(AccountEntry.COLUMN_CURRENCY,GnuCashApplication.getDefaultCurrencyCode())	7
51971	contentValues.put(AccountEntry.COLUMN_CURRENCY,defaultCurrencyCode)	6
35383	contentValues.put(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID,	4
51239	contentValues.put(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID,account.getDefaultTransferAccountUID())	15
35263	contentValues.put(AccountEntry.COLUMN_FAVORITE,	14
29930	contentValues.put(AccountEntry.COLUMN_FAVORITE,0)	8
30033	contentValues.put(AccountEntry.COLUMN_FULL_NAME,	21
58765	contentValues.put(AccountEntry.COLUMN_FULL_NAME,acct.getFullName())	5
35551	contentValues.put(AccountEntry.COLUMN_FULL_NAME,fullName)	8
34116	contentValues.put(AccountEntry.COLUMN_FULL_NAME,rootAccount.getFullName())	7
29998	contentValues.put(AccountEntry.COLUMN_HIDDEN,	14
33828	contentValues.put(AccountEntry.COLUMN_HIDDEN,rootAccount.isHidden()	10
24072	contentValues.put(AccountEntry.COLUMN_NAME,	19
34015	contentValues.put(AccountEntry.COLUMN_NAME,rootAccount.getName())	6
35306	contentValues.put(AccountEntry.COLUMN_PARENT_ACCOUNT_UID,	9
51258	contentValues.put(AccountEntry.COLUMN_PARENT_ACCOUNT_UID,account.getParentUID())	4
62591	contentValues.put(AccountEntry.COLUMN_PARENT_ACCOUNT_UID,newParentAccountUID)	2
35321	contentValues.put(AccountEntry.COLUMN_PARENT_ACCOUNT_UID,newParentUID)	4
58791	contentValues.put(AccountEntry.COLUMN_PARENT_ACCOUNT_UID,parentAccountUID)	13
25032	contentValues.put(AccountEntry.COLUMN_PARENT_ACCOUNT_UID,rootAccountUID)	11
30116	contentValues.put(AccountEntry.COLUMN_PLACEHOLDER,	18
24083	contentValues.put(AccountEntry.COLUMN_TYPE,	20
33883	contentValues.put(AccountEntry.COLUMN_TYPE,rootAccount.getAccountType().name())	7
35352	contentValues.put(AccountEntry.COLUMN_UID,	5
33925	contentValues.put(AccountEntry.COLUMN_UID,rootAccount.getUID())	6
19812	contentValues.put(BookEntry.COLUMN_ACTIVE,0)	8
20025	contentValues.put(BookEntry.COLUMN_ACTIVE,1)	12
63722	contentValues.put(BookEntry.COLUMN_ACTIVE,book.isActive()	2
32675	contentValues.put(BookEntry.COLUMN_DISPLAY_NAME,"Book1")	6
32760	contentValues.put(BookEntry.COLUMN_DISPLAY_NAME,new	5
63703	contentValues.put(BookEntry.COLUMN_ROOT_GUID,book.getRootAccountUID())	2
32694	contentValues.put(BookEntry.COLUMN_ROOT_GUID,rootAccountUID)	8
32857	contentValues.put(BookEntry.COLUMN_TEMPLATE_GUID,Book.generateUID())	8
32667	contentValues.put(BookEntry.COLUMN_UID,book.getUID())	8
59740	contentValues.put(CommodityEntry.COLUMN_CUSIP,	5
59733	contentValues.put(CommodityEntry.COLUMN_FRACTION,	5
59798	contentValues.put(CommodityEntry.COLUMN_FULLNAME,	5
59797	contentValues.put(CommodityEntry.COLUMN_LOCAL_SYMBOL,commodity.getLocalSymbol())	5
59810	contentValues.put(CommodityEntry.COLUMN_MNEMONIC,	5
59748	contentValues.put(CommodityEntry.COLUMN_NAMESPACE,commodity.getNamespace().name())	5
59778	contentValues.put(CommodityEntry.COLUMN_QUOTE_FLAG,commodity.getQuoteFlag())	5
52515	contentValues.put(CommonColumns.COLUMN_CREATED_AT,TimestampHelper.getUtcStringForTimestamp(model.getCreatedTimestamp()))	5
52700	contentValues.put(CommonColumns.COLUMN_CREATED_AT,TimestampHelper.getUtcStringFromTimestamp(model.getCreatedTimestamp()))	4
52650	contentValues.put(CommonColumns.COLUMN_CREATED_AT,model.getCreatedTimestamp().toString())	8
25803	contentValues.put(CommonColumns.COLUMN_CREATED_AT,timestamp)	9
25879	contentValues.put(CommonColumns.COLUMN_UID,BaseModel.generateUID())	6
25790	contentValues.put(CommonColumns.COLUMN_UID,generateUUID())	7
25966	contentValues.put(CommonColumns.COLUMN_UID,imbalanceAccountUID)	7
52538	contentValues.put(CommonColumns.COLUMN_UID,model.getUID())	11
26048	contentValues.put(CommonColumns.COLUMN_UID,rootAccountUID)	7
27816	contentValues.put(DatabaseHelper.KEY_ACCOUNT_UID,accountReassignId)	5
23789	contentValues.put(DatabaseHelper.KEY_ACCOUNT_UID,transaction.getAccountUID())	5
23612	contentValues.put(DatabaseHelper.KEY_AMOUNT,transaction.getAmount())	2
23668	contentValues.put(DatabaseHelper.KEY_AMOUNT,transaction.getAmount().toPlainString())	3
35405	contentValues.put(DatabaseHelper.KEY_COLOR_CODE,	4
27287	contentValues.put(DatabaseHelper.KEY_COLOR_CODE,account.getColorCode())	4
27194	contentValues.put(DatabaseHelper.KEY_COLOR_CODE,account.getColorHexCode())	8
26535	contentValues.put(DatabaseHelper.KEY_CURRENCY_CODE,account.getCurrency().getCurrencyCode())	14
35426	contentValues.put(DatabaseHelper.KEY_DEFAULT_TRANSFER_ACCOUNT_UID,	4
27515	contentValues.put(DatabaseHelper.KEY_DEFAULT_TRANSFER_ACCOUNT_UID,account.getDefaultTransferAccountUID())	10
18424	contentValues.put(DatabaseHelper.KEY_DESCRIPTION,transaction.getDescription())	10
18068	contentValues.put(DatabaseHelper.KEY_DOUBLE_ENTRY_ACCOUNT_UID,transaction.getDoubleEntryAccountUID())	5
35515	contentValues.put(DatabaseHelper.KEY_EXPORTED,1)	3
18053	contentValues.put(DatabaseHelper.KEY_EXPORTED,transaction.isExported()	9
35291	contentValues.put(DatabaseHelper.KEY_FAVORITE,	4
27710	contentValues.put(DatabaseHelper.KEY_FAVORITE,account.isFavorite()	5
35409	contentValues.put(DatabaseHelper.KEY_FULL_NAME,	4
35316	contentValues.put(DatabaseHelper.KEY_NAME,	4
26533	contentValues.put(DatabaseHelper.KEY_NAME,account.getName())	3
23813	contentValues.put(DatabaseHelper.KEY_NAME,transaction.getName())	4
35276	contentValues.put(DatabaseHelper.KEY_PARENT_ACCOUNT_UID,	4
27599	contentValues.put(DatabaseHelper.KEY_PARENT_ACCOUNT_UID,account.getParentUID())	12
35301	contentValues.put(DatabaseHelper.KEY_PARENT_ACCOUNT_UID,newParentUID)	4
35336	contentValues.put(DatabaseHelper.KEY_PLACEHOLDER,	4
27193	contentValues.put(DatabaseHelper.KEY_PLACEHOLDER,account.isPlaceholderAccount()	13
18277	contentValues.put(DatabaseHelper.KEY_RECURRENCE_PERIOD,transaction.getRecurrencePeriod())	5
51282	contentValues.put(DatabaseHelper.KEY_SPLIT_ACCOUNT_UID,transaction.getSplitAccountUID())	3
35451	contentValues.put(DatabaseHelper.KEY_TIMESTAMP,transaction.getTimeMillis())	7
35365	contentValues.put(DatabaseHelper.KEY_TYPE,	4
26404	contentValues.put(DatabaseHelper.KEY_TYPE,account.getAccountType().name())	5
23666	contentValues.put(DatabaseHelper.KEY_TYPE,transaction.getTransactionType().name())	4
35314	contentValues.put(DatabaseHelper.KEY_UID,	4
26271	contentValues.put(DatabaseHelper.KEY_UID,account.getUID())	11
23722	contentValues.put(DatabaseHelper.KEY_UID,transaction.getUID())	4
28746	contentValues.put(DatabaseSchema.AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID,transferAccount.getUID())	12
60409	contentValues.put(DatabaseSchema.AccountEntry.COLUMN_FAVORITE,!isFavoriteAccount)	3
19649	contentValues.put(DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME,displayName)	6
19931	contentValues.put(DatabaseSchema.BookEntry.COLUMN_SOURCE_URI,uris[0].toString())	6
30074	contentValues.put(DatabaseSchema.CommonColumns.COLUMN_CREATED_AT,timestamp)	8
30019	contentValues.put(DatabaseSchema.CommonColumns.COLUMN_UID,MigrationHelper.generateUUID())	7
30016	contentValues.put(DatabaseSchema.CommonColumns.COLUMN_UID,UUID.randomUUID().toString().replaceAll("-",""))	5
30054	contentValues.put(DatabaseSchema.CommonColumns.COLUMN_UID,imbalanceAccountUID)	7
30115	contentValues.put(DatabaseSchema.CommonColumns.COLUMN_UID,rootAccountUID)	7
50947	contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT,	8
50673	contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT,executionCount)	15
54155	contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_EXECUTION_COUNT,scheduledAction.getExecutionCount()+1)	3
51056	contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN,	8
50639	contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN,System.currentTimeMillis())	13
53755	contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN,lastRun)	7
50808	contentValues.put(DatabaseSchema.ScheduledActionEntry.COLUMN_LAST_RUN,scheduledAction.getLastRunTime())	5
35456	contentValues.put(KEY_FULL_NAME,fullName)	4
59750	contentValues.put(PriceEntry.COLUMN_COMMODITY_UID,	5
59735	contentValues.put(PriceEntry.COLUMN_CURRENCY_UID,	5
59791	contentValues.put(PriceEntry.COLUMN_DATE,	5
59842	contentValues.put(PriceEntry.COLUMN_SOURCE,	5
59767	contentValues.put(PriceEntry.COLUMN_TYPE,	5
59850	contentValues.put(PriceEntry.COLUMN_VALUE_DENOM,	5
59849	contentValues.put(PriceEntry.COLUMN_VALUE_NUM,	5
8627	contentValues.put(RecurrenceEntry.COLUMN_MULTIPLIER,recurrence.getMultiplier())	3
7623	contentValues.put(RecurrenceEntry.COLUMN_MULTIPLIER,recurrence.getPeriodType().getMultiplier())	5
8299	contentValues.put(RecurrenceEntry.COLUMN_PERIOD_START,recurrence.getPeriodStart().toString())	5
8435	contentValues.put(RecurrenceEntry.COLUMN_PERIOD_TYPE,recurrence.getPeriodType().name())	5
8463	contentValues.put(RecurrenceEntry.COLUMN_UID,recurrence.getUID())	5
26059	contentValues.put(ScheduledActionEntry.COLUMN_ACTION_UID,cursor.getString(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID)))	14
32190	contentValues.put(ScheduledActionEntry.COLUMN_ACTION_UID,scheduledAction.getActionUID())	7
32049	contentValues.put(ScheduledActionEntry.COLUMN_ACTION_UID,scheduledAction.getEventUID())	4
20013	contentValues.put(ScheduledActionEntry.COLUMN_ENABLED,	10
30013	contentValues.put(ScheduledActionEntry.COLUMN_ENABLED,1)	11
32164	contentValues.put(ScheduledActionEntry.COLUMN_END_TIME,	18
30128	contentValues.put(ScheduledActionEntry.COLUMN_END_TIME,0)	10
62565	contentValues.put(ScheduledActionEntry.COLUMN_EVENT_UID,scheduledAction.getEventUID())	3
29973	contentValues.put(ScheduledActionEntry.COLUMN_EXECUTION_COUNT,0)	11
19691	contentValues.put(ScheduledActionEntry.COLUMN_EXECUTION_COUNT,scheduledAction.getExecutionCount())	10
59764	contentValues.put(ScheduledActionEntry.COLUMN_LAST_RUN,	7
29964	contentValues.put(ScheduledActionEntry.COLUMN_LAST_RUN,lastRun)	10
19482	contentValues.put(ScheduledActionEntry.COLUMN_NUM_OCCURRENCES,scheduledAction.getNumberOfOccurences())	5
25943	contentValues.put(ScheduledActionEntry.COLUMN_PERIOD,	26
53014	contentValues.put(ScheduledActionEntry.COLUMN_RECURRENCE_UID,recurrence.getUID())	2
32126	contentValues.put(ScheduledActionEntry.COLUMN_START_TIME,scheduledAction.getStartTime())	18
30045	contentValues.put(ScheduledActionEntry.COLUMN_START_TIME,timestampT.getTime())	10
19963	contentValues.put(ScheduledActionEntry.COLUMN_TAG,	18
30027	contentValues.put(ScheduledActionEntry.COLUMN_TAG,"")	8
32001	contentValues.put(ScheduledActionEntry.COLUMN_TAG,entry.getValue())	4
63260	contentValues.put(ScheduledActionEntry.COLUMN_TAG,params.toCsv())	3
53210	contentValues.put(ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID,BaseModel.generateUID())	2
29995	contentValues.put(ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY,0)	11
19813	contentValues.put(ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY,scheduledAction.getTotalFrequency())	14
60033	contentValues.put(ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY,scheduledAction.getTotalPlannedExecutionCount())	3
19954	contentValues.put(ScheduledActionEntry.COLUMN_TYPE,	8
30091	contentValues.put(ScheduledActionEntry.COLUMN_TYPE,"TRANSACTION")	8
59800	contentValues.put(ScheduledActionEntry.COLUMN_TYPE,scheduledAction.getActionType().name())	5
63244	contentValues.put(ScheduledActionEntry.COLUMN_UID,uid)	3
33796	contentValues.put(ScheduledEventEntry.COLUMN_ENABLED,	3
59667	contentValues.put(ScheduledEventEntry.COLUMN_END_TIME,	4
59658	contentValues.put(ScheduledEventEntry.COLUMN_EVENT_UID,scheduledEvent.getEventUID())	4
33703	contentValues.put(ScheduledEventEntry.COLUMN_EXECUTION_COUNT,scheduledEvent.getExecutionCount())	3
33653	contentValues.put(ScheduledEventEntry.COLUMN_LAST_RUN,	5
33728	contentValues.put(ScheduledEventEntry.COLUMN_NUM_OCCURRENCES,scheduledEvent.getNumberOfOccurences())	3
59684	contentValues.put(ScheduledEventEntry.COLUMN_PERIOD,	4
59672	contentValues.put(ScheduledEventEntry.COLUMN_START_TIME,scheduledEvent.getStartTime())	4
33771	contentValues.put(ScheduledEventEntry.COLUMN_TAG,	4
33541	contentValues.put(ScheduledEventEntry.COLUMN_TYPE,	5
59682	contentValues.put(ScheduledEventEntry.COLUMN_UID,	2
35361	contentValues.put(SplitEntry.COLUMN_ACCOUNT_UID,accountReassignId)	4
30057	contentValues.put(SplitEntry.COLUMN_ACCOUNT_UID,accountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance(currencyCode)))	5
29942	contentValues.put(SplitEntry.COLUMN_ACCOUNT_UID,imbalanceAccountUID)	8
35591	contentValues.put(SplitEntry.COLUMN_ACCOUNT_UID,split.getAccountUID())	14
24539	contentValues.put(SplitEntry.COLUMN_AMOUNT,	22
30064	contentValues.put(SplitEntry.COLUMN_MEMO,	19
30073	contentValues.put(SplitEntry.COLUMN_TRANSACTION_UID,TransactionUID)	9
35471	contentValues.put(SplitEntry.COLUMN_TRANSACTION_UID,split.getTransactionUID())	14
26068	contentValues.put(SplitEntry.COLUMN_TYPE,	23
24092	contentValues.put(SplitEntry.COLUMN_UID,	11
52570	contentValues.put(TransactionEntry.COLUMN_CREATED_AT,TimestampHelper.getUtcStringForTimestamp(timestampT))	5
52615	contentValues.put(TransactionEntry.COLUMN_CREATED_AT,TimestampHelper.getUtcStringFromTimestamp(timestampT))	4
25279	contentValues.put(TransactionEntry.COLUMN_CREATED_AT,timestamp.toString())	9
29987	contentValues.put(TransactionEntry.COLUMN_CREATED_AT,timestampT.toString())	10
20101	contentValues.put(TransactionEntry.COLUMN_CURRENCY,	17
35506	contentValues.put(TransactionEntry.COLUMN_DESCRIPTION,	7
24607	contentValues.put(TransactionEntry.COLUMN_DESCRIPTION,transaction.getDescription())	12
19811	contentValues.put(TransactionEntry.COLUMN_EXPORTED,	14
24397	contentValues.put(TransactionEntry.COLUMN_EXPORTED,1)	17
30130	contentValues.put(TransactionEntry.COLUMN_MODIFIED_AT,timestamp)	8
35557	contentValues.put(TransactionEntry.COLUMN_NAME,transaction.getName())	4
21153	contentValues.put(TransactionEntry.COLUMN_NOTES,	12
20897	contentValues.put(TransactionEntry.COLUMN_RECURRENCE_PERIOD,transaction.getRecurrencePeriod())	13
19816	contentValues.put(TransactionEntry.COLUMN_SCHEDX_ACTION_UID,transaction.getScheduledActionUID())	8
19871	contentValues.put(TransactionEntry.COLUMN_TEMPLATE,	10
25241	contentValues.put(TransactionEntry.COLUMN_TEMPLATE,true)	4
20734	contentValues.put(TransactionEntry.COLUMN_TIMESTAMP,	13
59799	contentValues.put(TransactionEntry.COLUMN_TIMESTAMP,transaction.getTimeMillis())	5
24229	contentValues.put(TransactionEntry.COLUMN_UID,	12
20912	contentValues.put(columnKey,newValue)	14
30063	contentValues.putNull(AccountEntry.COLUMN_COLOR_CODE)	15
30124	contentValues.putNull(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID)	20
24601	contentValues.putNull(AccountEntry.COLUMN_PARENT_ACCOUNT_UID)	19
35379	contentValues.putNull(DatabaseHelper.KEY_PARENT_ACCOUNT_UID)	4
21059	contentValues.putNull(columnKey)	10
45631	contentWidth	8
21518	contents	76
28155	contents")	11
55762	contenuto	2
3366	context	268
48657	context")	5
47962	context's	4
2004	context)	168
45113	context).getComponentName())	4
3676	context){	119
3848	context,	175
51588	context,0).show()	7
62129	context,@LayoutRes	3
51222	context,@Nullable	3
42596	context,ActionBarContextView	4
9568	context,AppWidgetManager	5
24973	context,AttributeSet	68
2475	context,Cursor	66
25155	context,InputStream	12
18086	context,Intent	24
56698	context,KeyboardView	4
42992	context,MenuBuilder	16
48205	context,Object	5
51673	context,REQUEST_RESOLVE_CONNECTION)	10
58806	context,SQLiteDatabase	3
49788	context,SearchView	5
2413	context,String	21
42497	context,SubMenuBuilder	4
18595	context,TaskDelegate	10
34432	context,boolean	21
3528	context,final	10
2919	context,int	83
9589	context,int[]	10
27801	context,long	21
38418	context.	21
59892	context.deleteDatabase(bookUID)	3
49081	context.getApplicationContext()	13
45598	context.getApplicationInfo()	4
64380	context.getClass()	1
20596	context.getContentResolver().openInputStream(data.getData())	7
45241	context.getPackageManager()	4
3785	context.getPackageManager().getPackageInfo(context.getPackageName(),0)	6
26472	context.getPrecision()	8
3758	context.getResources()	24
39795	context.getResources().getBoolean(id)	4
35967	context.getResources().getColor(R.color.credit_green)	10
35998	context.getResources().getColor(R.color.debit_red)	10
61996	context.getResources().getColor(android.R.color.black)	3
49806	context.getResources().getConfiguration().orientation	5
39940	context.getResources().getDisplayMetrics()	4
30450	context.getResources().getDisplayMetrics())	3
43879	context.getResources().getDisplayMetrics().density	4
42342	context.getResources().getDisplayMetrics().widthPixels	4
45409	context.getResources().getDrawable(resId)	4
40224	context.getResources().getInteger(id)	4
26310	context.getRoundingMode()	11
10018	context.getSharedPreferences("widget:"	3
57159	context.getSharedPreferences(BooksDbAdapter.getInstance().getActiveBookUID(),Context.MODE_PRIVATE)	8
59872	context.getSharedPreferences(bookUID,Context.MODE_PRIVATE)	3
63860	context.getSharedPreferences(rootAccountUID,Context.MODE_PRIVATE)	2
58519	context.getString(R.string.account_name_equity)	4
24164	context.getString(R.string.account_name_equity).trim()	6
58520	context.getString(R.string.account_name_opening_balances)	4
57392	context.getString(R.string.app_minor_version)	2
54698	context.getString(R.string.book_default_name,bookCount)	3
9175	context.getString(R.string.key_dropbox_access_token)	2
23239	context.getString(R.string.key_save_opening_balances)	5
23285	context.getString(R.string.key_use_compact_list)	2
23096	context.getString(R.string.key_use_double_entry)	5
32006	context.getString(R.string.toast_error_importing_accounts)	7
21014	context.getSystemService(Context.ALARM_SERVICE)	25
39210	context.getTheme()	4
56682	context.getTheme().obtainStyledAttributes(	4
64372	context.getTheme().obtainStyledAttributes(R.styleable.SherlockTheme)	1
39337	context.getThemeResId()	4
44044	context.obtainStyledAttributes(	4
42694	context.obtainStyledAttributes(attrs,	20
47505	context.obtainStyledAttributes(attrs,/*R.styleable.*/ProgressBar,defStyle,styleRes)	4
64344	context.obtainStyledAttributes(attrs,/*com.android.internal.R.styleable.*/LinearLayout)	1
46985	context.obtainStyledAttributes(attrs,/*com.android.internal.R.styleable.*/R_styleable_LinearLayout)	5
44928	context.obtainStyledAttributes(attrs,R.styleable.SherlockActionBar,	4
45680	context.obtainStyledAttributes(attrs,R.styleable.SherlockActionMode,defStyle,0)	4
49374	context.obtainStyledAttributes(attrs,R.styleable.SherlockSearchView,0,0)	5
46449	context.obtainStyledAttributes(attrs,R.styleable.SherlockTheme)	4
49311	context.obtainStyledAttributes(attrs,R.styleable.SherlockView,0,0)	5
46323	context.obtainStyledAttributes(attrs,R_styleable_Button)	4
46490	context.obtainStyledAttributes(attrs,R_styleable_TextView,defStyle,0)	4
24043	context.runOnUiThread(new	11
54875	context.sendBroadcast(intent)	2
54765	context.sendBroadcast(transactionIntent)	4
25033	context.startActivity(accountsActivityIntent)	4
34867	context.startService(alarmIntent)	11
43012	context/config.	4
37204	contextual	16
12739	conti	65
22722	conti!</string>	6
26131	conti</item>	3
12671	conti</string>	43
28002	conti\n	13
15526	contiene	12
16254	contient	5
2265	continuar	9
59510	continuar,fa&#231	6
62430	continuar,faa	8
54896	continuar,precione	7
63044	continuar,pressione	3
4867	continuar?</string>	26
29376	continuare,premi	4
39205	continuation	4
3446	continue	185
3509	continue,press	90
47572	continue.	4
16444	continuer,\n	7
16478	continuer,appuez	7
3466	continuing	6
5273	contm	6
7699	conto	59
26080	conto</item>	3
12690	conto</string>	80
27978	conto\n	5
20441	contrapartida</string>	18
22986	contrapartidas	16
59514	contrapartidas</string>	11
3733	contrase&#241	15
15424	contrasea	10
15832	contrasea</string>	22
25475	contrasea\n	8
21968	contrasenya	10
14658	contrasenya</string>	15
37070	contrast	8
37896	control	14
44223	control.	4
36494	control."	4
28884	controle	12
38232	controlled	8
47689	controlling	13
37376	controls	8
22907	contul</string>	8
12268	contului</string>	13
12668	conturi	11
10480	conu	5
2219	convenience	20
35751	convenience).	2
41380	convention	4
41910	conventions	4
26379	conversion	48
62917	conversion.	4
31789	conversions	3
58531	conversvel	8
28888	conversvel</item>	12
26239	convert	22
55827	convertCalendarWeekdayToJoda(int	3
55813	convertCalendarWeekdayToJoda(mRecurrence.getByDays().get(0))	3
55706	convertCalendarWeekdayToJoda(weekDay)	4
63679	convertFilePathsToUris(List<String>	3
9236	convertFilePathsToUris(paths)	5
56789	convertPathsToUris(List<String>	5
56782	convertPathsToUris(paths)	5
60548	convertResultToString(Object	3
51198	convertToOfxAccountType(@NonNull	4
6879	convertToOfxAccountType(AccountType	27
34576	convertToOfxAccountType(mAccountType).toString()	9
1989	convertToRGBHexString(int	3
3965	convertToString(Cursor	25
30151	convertView	28
43941	convertView)	4
47984	convertView).bindTab((ActionBar.Tab)	4
43390	convertView).getItemData()	4
44501	convertView).setForceShowIcon(true)	4
7120	convertView,	8
19087	convertView,ViewGroup	56
49325	convertView.findViewById(R.id.abs__icon)	4
49281	convertView.findViewById(R.id.abs__title)	4
30301	convertView.findViewById(R.id.btn_new_transaction)	5
32973	convertView.findViewById(R.id.secondary_text)	5
49012	convertView.getId()	4
33040	convertView.setBackgroundColor(getResources().getColor(R.color.abs__holo_blue_light))	5
33094	convertView.setBackgroundColor(getResources().getColor(android.R.color.transparent))	5
49129	convertView.setId(ITEM_VIEW_TYPE_FOOTER)	4
2939	converted	154
31519	convertedAmount	14
62810	convertedQuantity	4
10972	converti	12
10250	converti</string>	10
15600	convertible</item>	16
2895	convertida	11
3673	convertida</string>	12
29682	convertido	21
59512	convertido</string>	11
23512	converting	22
29302	convertito	6
29461	convertito</string>	2
31860	converts	14
62388	convertvel</item>	6
46342	coordinate	4
43126	coords	4
3301	copia	36
15783	copias	19
7037	copied	42
48571	copied,so	4
63874	copied,{@code	2
40876	copies	12
790	copy	361
51447	copy(File	6
63847	copy(file,target)	3
63819	copy(mSource,mDestination)	3
34130	copy.	6
51513	copyCount	5
25367	copyExportToDropbox()	15
51686	copyExportToGoogleDrive()	5
51622	copyExportToGoogleDrive(){	5
56820	copyExportToGoogleDrive(){+	1
51679	copyExportToSDCard()	9
6701	copyFile(File	33
7292	copyFile(src,dst)	27
63867	copying	2
60423	copyright	3
4362	cor	8
39250	core	4
39060	corner	4
56195	correcciones	2
10409	correces	17
7833	correct	49
33331	correct")	16
22381	correctament</string>	7
12710	correctamente	5
22474	correcte</string>	5
30180	correctifs\n	10
10311	corrections	28
6161	correctly	39
8021	correctly.	3
41486	correctly.</p>	8
40788	correctly:</p>	4
22316	correcto</string>	12
22323	correctos</string>	12
34812	correcttions	5
5145	correes	38
22683	corrente	6
23105	corrente</item>	26
22686	corrente</string>	6
22680	correnti	7
12099	correo	32
30132	correspond	28
2012	corresponding	107
43757	corresponds	4
43817	corresponds)	4
16193	correttamente</string>	19
28043	corretti\n	5
25900	correzioni	21
35311	corrija	18
22598	corso</string>	8
2543	cosas\n\nPara	9
29256	cose	4
33505	cose.\n\nPer	2
61961	cosmetic	3
59526	cota&#231	6
54967	cotao	7
54892	cotao</string>	9
4134	could	126
31831	couldn't	8
53685	couldnt	2
10509	couleur	22
16381	couleur</string>	13
6362	count	202
34206	count"	4
85	count)	50
47705	count))	4
49342	count++	4
18700	count,	18
31592	count,int	13
44178	count,mark	4
44265	count,optionally	4
48302	count.	14
7934	count/mPeriodType.getMultiplier()	8
18788	counted	13
3647	counter	9
38153	counterpart	4
34369	couple	13
11345	couramment	25
16475	courant	20
10823	courants	7
41307	course	8
47036	cover	4
27082	coverage	11
33724	covered	13
53397	covers	2
14677	cpia	14
56229	cpias	2
22240	cpies	7
22973	cr	10
16085	cr&#233	18
62444	cr</string>	10
3669	crash	112
11533	crash</string>	18
55532	crashed")	2
9093	crashes	33
42040	crashing	4
20147	crashlytics	11
16750	crashrapporten</string>	3
16142	crashs</string>	7
10454	cration	9
37140	crazy	5
15821	creaci&#243	6
3057	crear	55
18549	crear&#225	11
13006	crear</string>	41
16183	creare	46
12486	creare</string>	23
3380	create	328
58521	create()	4
63646	create+	1
63831	create..."	3
9200	create</string>	98
24125	createAccountHierarchy(@NonNull	7
2094	createAccountHierarchy(String	21
24532	createAccountHierarchy(openingBalanceAccountName,AccountType.EQUITY)	4
53289	createAccountUidIndex	13
55400	createAccounts(){	8
12924	createAccountsAndFinish()	20
11458	createAutoBalanceSplit(){	9
20937	createBackup(){	26
55258	createBackup(BooksDbAdapter.getInstance().getActiveBookUID())	3
55382	createBackup(String	3
28502	createBackupFile(){	7
27507	createBlankSpace()	3
53291	createBudgetAmountUidIndex	2
53049	createBudgetUidIndex	2
51952	createClassHandler(ShadowMap	6
51876	createClassLoaderConfig()	5
27490	createColorSwatch(color,selectedColor)	3
27479	createColorSwatch(int	3
53320	createCommoditiesSql	9
60843	createCommodityUidIndex	6
1892	createDatabaseTables(SQLiteDatabase	28
33784	createDatabaseTables(db)	16
2420	createDefaultAccounts()	18
3357	createDefaultAccounts(){	15
2644	createDefaultAccounts(String	4
2208	createDefaultAccounts(currency,AccountsActivity.this)	6
18592	createDefaultAccounts(final	9
28514	createExportFile(ExportFormat	8
62147	createFragment()	4
42553	createFromParcel(Parcel	23
35627	createInstance(String	6
55393	createIntent	5
51210	createIntent(@NonNull	4
49927	createIntent(String	5
18314	createIntent(Transaction	16
50565	createIntent(action,dataUri,extraData,query,actionKey,actionMsg)	5
50250	createIntent(action,null,null,query,actionKey,actionMsg)	5
55255	createIntent.addCategory(Intent.CATEGORY_OPENABLE)	5
55424	createIntent.putExtra(Intent.EXTRA_TITLE,"gnucash_android_backup.gnca")	4
55362	createIntent.putExtra(Intent.EXTRA_TITLE,Exporter.buildExportFilename(mExportFormat,bookName))	5
55238	createIntent.putExtra(Intent.EXTRA_TITLE,Exporter.sanitizeFilename(bookName)+	4
55832	createIntent.putExtra(Intent.EXTRA_TITLE,filename)	2
55348	createIntent.setType("application/xml")	4
55414	createIntent.setType("application/zip")	6
55435	createIntent.setType("text/*").addCategory(Intent.CATEGORY_OPENABLE)	5
50453	createIntentFromSuggestion(Cursor	5
50136	createIntentFromSuggestion(c,actionKey,actionMsg)	5
43849	createItemView(ViewGroup	4
44103	createItemView(parent)	4
25283	createNavDrawerMergeAdapter()	16
25020	createNewAccountIntent(){	14
58030	createNewBookWithDefaultAccounts()	3
58206	createNewBookWithDefaultAccounts(){	3
18705	createNewTransaction(0)	3
13652	createNewTransaction(String	12
19295	createNewTransaction(long	17
20055	createNewTransaction(mAccountId)	11
30351	createNewTransaction(mAccountUID)	8
51207	createPair(@NonNull	4
31637	createPair(String	18
53038	createPriceUidIndex	8
53181	createPricesSql	11
53135	createRecurrenceUidIndex	2
25451	createScheduledActions	4
61064	createScheduledEventUidIndex	9
18859	createSetup()	8
18635	createShadowMap()	11
32415	createSlot(Document	8
47982	createSpinner()	4
57580	createSplitUidIndex	8
48060	createTabLayout()	5
47573	createTabView((ActionBar.Tab)	4
47605	createTabView(ActionBar.Tab	4
48056	createTabView(tab,false)	4
27203	createTableRow()	3
20310	createTempView()	45
9044	createTransaction	8
21955	createTransactionFAB	9
21747	createTransactionFAB.setOnClickListener(new	9
1968	createTransactionIntent	31
18066	createTransactionIntent.putExtra(NewTransactionFragment.SELECTED_TRANSACTION_ID,transactionId)	10
18376	createTransactionIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,accountId)	5
30485	createTransactionIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,accountRowId)	6
30671	createTransactionIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,mAccountId)	6
13949	createTransactionIntent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.TRANSACTION.name())	3
992	createTransactionIntent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.TRANSACTION_FORM.name())	10
13778	createTransactionIntent.putExtra(UxArgument.SCHEDULED_ACTION_UID,scheduledActionUid)	9
63359	createTransactionIntent.putExtra(UxArgument.SELECTED_ACCOUNT_ID,accountId)	4
63462	createTransactionIntent.putExtra(UxArgument.SELECTED_ACCOUNT_ID,accountRowId)	4
63455	createTransactionIntent.putExtra(UxArgument.SELECTED_ACCOUNT_ID,mAccountId)	4
13229	createTransactionIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,accountUID)	14
1966	createTransactionIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,mAccountUID)	9
63349	createTransactionIntent.putExtra(UxArgument.SELECTED_TRANSACTION_ID,transactionId)	5
1243	createTransactionIntent.putExtra(UxArgument.SELECTED_TRANSACTION_UID,mTransactionUID)	6
13683	createTransactionIntent.putExtra(UxArgument.SELECTED_TRANSACTION_UID,transactionUID)	14
1195	createTransactionIntent.setAction(Intent.ACTION_INSERT_OR_EDIT)	25
57615	createTransactionUidIndex	5
25192	createUpdatedAndModifiedColumns(SQLiteDatabase	5
52590	createUpdatedAtTrigger(AccountEntry.TABLE_NAME)	6
25379	createUpdatedAtTrigger(AccountEntry.TABLE_NAME))	5
53323	createUpdatedAtTrigger(BudgetAmountEntry.TABLE_NAME)	2
53058	createUpdatedAtTrigger(BudgetEntry.TABLE_NAME)	2
60923	createUpdatedAtTrigger(CommodityEntry.TABLE_NAME)	6
33595	createUpdatedAtTrigger(PriceEntry.TABLE_NAME)	14
53001	createUpdatedAtTrigger(RecurrenceEntry.TABLE_NAME)	2
24978	createUpdatedAtTrigger(ScheduledActionEntry.TABLE_NAME)	11
25263	createUpdatedAtTrigger(ScheduledActionEntry.TABLE_NAME))	5
33552	createUpdatedAtTrigger(ScheduledEventEntry.TABLE_NAME)	4
53185	createUpdatedAtTrigger(SplitEntry.TABLE_NAME)	6
25025	createUpdatedAtTrigger(SplitEntry.TABLE_NAME))	5
33949	createUpdatedAtTrigger(String	7
19809	createUpdatedAtTrigger(TransactionEntry.TABLE_NAME)	12
25132	createUpdatedAtTrigger(TransactionEntry.TABLE_NAME))	5
49963	createVoiceAppSearchIntent(Intent	5
50304	createVoiceAppSearchIntent(mVoiceAppSearchIntent,	5
50468	createVoiceWebSearchIntent(Intent	5
49978	createVoiceWebSearchIntent(mVoiceWebSearchIntent,	5
50932	createWizardModel(Bundle	4
50978	createWizardModel(savedInstanceState)	4
12080	createZeroInstance(@NonNull	10
5185	createZeroInstance(String	14
198	created	250
63816	created",dstDir.getPath()))	3
18399	created),	12
40397	created,	4
47995	created,false	4
62930	created,modified,reconciled)	4
35653	created.	33
31556	created.</p>	3
9853	created/edited	21
63156	created/modified	7
43468	created/refreshed	4
32143	created/replaced	9
28480	created/updated	6
5557	createdTimestamp	10
20965	createdTimestamp)	3
19566	created_at	31
2367	creates	50
1410	creating	232
19683	creating,activity	19
282	creating/editing	21
10118	creating/modifying	14
58570	creatingFromExchangeRate_ShouldGetPrecisionRight()	2
30469	creatingNewAccounts_shouldCreatedNewBook(){	9
5701	creation	158
38084	creation.	4
13135	creation/edit	17
47731	creation</li>	4
16156	creazione	18
6533	credit	56
6704	credit,one	5
6488	credit/debit	8
8246	credit/debit-numeric	6
6525	credits	22
57815	credits,not	6
10260	crer	34
10782	crer</string>	11
16624	creren,of	16
17055	creren</string>	17
29016	criadas	13
5597	criao	11
5596	criar	40
4630	criar</string>	47
27120	crimson	3
23659	crire	11
45892	criteria	9
48694	crowd	4
14239	crowdin.com-->	45
23727	crs	11
10334	crs</string>	12
62971	crux	4
7644	csl	23
33477	csv	16
57488	csv)	3
63756	csvParams	1
52594	csvParams){	13
52643	csvParams.split("	9
23374	ctor	31
37805	ctor.newInstance(activity,flags)	4
29750	cuales	10
10867	cualquier	26
15707	cuando	28
62436	cubano	6
62476	cubano</item>	6
2809	cuelgues</string>	17
3517	cuenta	80
11957	cuenta</item>	6
3320	cuenta</string>	83
18171	cuenta\n	6
2226	cuentas	95
28013	cuentas/transacciones\n	9
10608	cuentas</item>	6
4011	cuentas</string>	57
18516	cuentas\n	22
16421	cui	22
58950	cur	2
18564	curCode	16
44095	curItem	4
43506	curItem.setCheckedInt(curItem	4
33798	curTrxUID	13
57509	curTrxUID)	4
34702	currecy	4
23379	currenc	9
25539	currencey	23
1484	currencies	124
53634	currencies"	2
404	currencies)	31
62792	currencies,no	4
54705	currencies,not	10
4916	currencies,while	6
8328	currencies.	19
450	currencies.add(0,preferredCurrency)	5
26125	currencies.remove(i)	12
25822	currencies.size()	12
53349	currencies</p>	2
56982	currencies</string>	5
103	currency	344
3122	currency!")	6
58223	currency"	6
5472	currency")	21
4398	currency"/>	3
33212	currency(stock).	4
23795	currency)	39
255	currency){	88
33025	currency,	15
51153	currency,@NonNull	4
26425	currency,MathContext	10
12258	currency,but	7
60303	currency,or	3
18945	currency,which	9
9975	currency.	28
56809	currency.</p>	5
52247	currency.appendChild(doc.createTextNode(Currency.getInstance(Locale.getDefault()).getCurrencyCode()))	3
12179	currency.appendChild(doc.createTextNode(account.getCurrency().getCurrencyCode()))	5
36613	currency.appendChild(doc.createTextNode(mCommodity.getCurrencyCode()))	10
7267	currency.appendChild(doc.createTextNode(mCurrency.getCurrencyCode()))	17
6274	currency.getCurrencyCode()	36
59359	currency.getCurrencyCode())	6
11989	currency.getDefaultFractionDigits(),RoundingMode.HALF_EVEN)	4
10502	currency.getSymbol()	4
12594	currency.getSymbol(Locale.GERMANY)	10
12350	currency.getSymbol(Locale.US)	12
36120	currency.getSymbol(locale)	9
4649	currency</item>	113
32584	currency</li>	7
23343	currency</p>	18
2659	currency</string>	147
32896	currencyAccountMap	5
32823	currencyAccountMap.get(account.getCurrency().getCurrencyCode()).add(account)	5
32650	currencyAccountMap.put(currency.getCurrencyCode(),new	5
59018	currencyAdapter	2
59043	currencyAdapter.close()	2
58956	currencyAdapter.getCurrency(mCurrencySpinner.getSelectedItemId())	2
24170	currencyArrayAdapter	11
24272	currencyArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	15
18611	currencyCod	15
1888	currencyCode	224
10655	currencyCode)	25
382	currencyCode){	88
64293	currencyCode){+	1
30729	currencyCode,	6
2889	currencyCode,Activity	4
32790	currencyCode,Commodity.getInstance(currencyCode))	7
36645	currencyCode,Currency.getInstance(currencyCode))	6
18860	currencyCode,boolean	13
19156	currencyCode,final	3
2188	currencyCode,getAccountType(accountUID).hasDebitNormalBalance())	6
32558	currencyCode,mCommoditiesDbAdapter.getCommodity(currencyCode))	3
26205	currencyCodes	11
63809	currencyCodes)	4
26264	currencyCodes.get(which)	5
26459	currencyCodes.indexOf(userCurrencyCode.toUpperCase())	6
4397	currencyCodes[--size]	6
8378	currencyCommodity	9
8135	currencyCommodity.getUID()	9
59012	currencyDbAdapter	2
59051	currencyDbAdapter.close()	2
59011	currencyDbAdapter.getCurrencyId(currencyCode)	2
62125	currencyDialog	3
62068	currencyDialog.dismiss()	3
62221	currencyDialog.show()	3
56996	currencyEntries	6
57023	currencyEntries.add(code	6
57079	currencyEntryValues	6
57069	currencyEntryValues.add(code)	6
12174	currencyFormat	12
36011	currencyFormat.format(asDouble())	9
36403	currencyFormat.setCurrency(currency)	6
36561	currencyFormat.setMaximumFractionDigits(mCommodity.getSmallestFractionDigits())	7
36586	currencyFormat.setMinimumFractionDigits(mCommodity.getSmallestFractionDigits())	4
26290	currencyIndex	6
4810	currencyList	22
63802	currencyList)	5
24456	currencyList.add(Currency.getInstance(currencyCode))	11
6409	currencyList.size()	6
888	currencyName	16
62104	currencyName)	3
1781	currencyNames	8
5	currencyNames.add(allCurrencyNames.get(allCurrencyCodes.indexOf(currency.getCurrencyCode())))	5
63800	currencyNames.add(allCurrencyNames[allCurrencyCodes.indexOf(code)])	4
20346	currencyNode	11
20601	currencyNode.appendChild(cmdtyIdNode)	9
20502	currencyNode.appendChild(cmdtySpacenode)	9
62139	currencySet	3
62231	currencySet)	3
24764	currencySymbol	16
8736	currencySymbolTextView	7
55274	currencySymbolTextView.setText(commodity.getSymbol())	2
53834	currencySymbolTextView.setText(currency.getSymbol())	7
13384	currencyTextView	7
56403	currencyTextView)	3
13880	currencyTextView){	7
8446	currencyUID	39
12631	currencyUID)	7
52599	currencyUID){	13
31376	currencyformatter	1
31032	currencyformatter.format(balance)	2
2669	current	331
2192	currentAccountUID	29
18594	currentAccountUid	5
48844	currentActivity	4
26536	currentAssetsUID	3
50747	currentBookUID	3
434	currentColor	7
27395	currentColor,4,12)	3
26272	currentCurrency	17
26451	currentCurrency){	17
56823	currentCurrencyCode	8
6822	currentFragment	34
52501	currentLastExportTime	2
52488	currentLastExportTime,TimeZone.getDefault())	2
13676	currentMinor	8
44159	currentParent	4
43790	currentParent.removeView(itemView)	4
42222	currentPlayTime	4
57670	currentScales	2
57708	currentScales.length	2
57729	currentScales[i]	2
38794	currentTheme	8
39145	currentTheme.resolveAttribute(R.attr.actionBarWidgetTheme,	8
42313	currentTime	6
43035	currentTime)	4
41884	currentTime)))	4
56929	currentTransactionUID	7
53076	current_timestamp,"	6
3345	currently	229
40947	currently-playing	4
2026	cursor	263
18361	cursor")	29
49775	cursor's	5
2296	cursor)	190
19974	cursor){	55
2294	cursor,	18
50901	cursor,"	5
59847	cursor,BaseModel	7
50972	cursor,String	5
50454	cursor,ViewGroup	5
3427	cursor,final	5
50868	cursor,int	5
50386	cursor,moved	5
27870	cursor.	26
3437	cursor.close()	187
32894	cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME)	4
50758	cursor.getColumnIndex(columnName)	5
24495	cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID))	4
24339	cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID)))	2
64195	cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_UID)	6
3249	cursor.getColumnIndexOrThrow(BookEntry.COLUMN_DISPLAY_NAME))	5
27539	cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_DEFAULT_TRANSFER_ACCOUNT_UID))	5
35858	cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_NAME)	5
54455	cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_DESCRIPTION)	2
35910	cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_NAME)	4
2494	cursor.getCount()	32
57485	cursor.getCount())	4
18757	cursor.getDouble(0)	12
29437	cursor.getDouble(DatabaseAdapter.COLUMN_AMOUNT)	3
57160	cursor.getDouble(cursor.getColumnIndexOrThrow("split_quantity_denom"))	6
57071	cursor.getDouble(cursor.getColumnIndexOrThrow("split_quantity_num"))	6
29988	cursor.getDouble(cursor.getColumnIndexOrThrow("trans_acct_balance"))	12
50371	cursor.getExtras()	5
24529	cursor.getInt(0)	29
57260	cursor.getInt(1)	8
12090	cursor.getInt(cursor.getColumnIndex(DatabaseSchema.AccountEntry.COLUMN_FAVORITE))	2
57039	cursor.getInt(cursor.getColumnIndexOrThrow("split_quantity_denom"))	4
61840	cursor.getInt(cursor.getColumnIndexOrThrow("split_value_denom"))	4
53020	cursor.getInt(cursor.getColumnIndexOrThrow("split_value_num"))	6
24798	cursor.getInt(cursor.getColumnIndexOrThrow("trans_exported"))	9
33574	cursor.getInt(cursor.getColumnIndexOrThrow("trans_recur"))	5
35330	cursor.getInt(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_FAVORITE))	6
51779	cursor.getInt(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_HIDDEN))	4
24286	cursor.getInt(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_PLACEHOLDER))	8
63454	cursor.getInt(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_ACTIVE))	6
36478	cursor.getInt(cursor.getColumnIndexOrThrow(CommodityEntry.COLUMN_FRACTION))	7
36022	cursor.getInt(cursor.getColumnIndexOrThrow(CommodityEntry.COLUMN_QUOTE_FLAG))	7
36208	cursor.getInt(cursor.getColumnIndexOrThrow(CommodityEntry.COLUMN_SMALLEST_FRACTION))	4
26860	cursor.getInt(cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_FAVORITE))	8
26782	cursor.getInt(cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_PLACEHOLDER))	8
52986	cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ADVANCE_CREATION))	2
53253	cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ADVANCE_NOTIFY))	2
53209	cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_AUTO_CREATE))	2
53235	cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_AUTO_NOTIFY))	2
19465	cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ENABLED))	7
19829	cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_EXECUTION_COUNT))	12
19491	cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_NUM_OCCURRENCES))	5
19579	cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TOTAL_FREQUENCY))	7
33558	cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_ENABLED))	3
33725	cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_EXECUTION_COUNT))	4
33734	cursor.getInt(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_NUM_OCCURRENCES))	4
50269	cursor.getInt(mFlagsCol)	5
19851	cursor.getLong(0)	22
36435	cursor.getLong(1)	8
19433	cursor.getLong(DatabaseAdapter.COLUMN_ROW_ID)	29
7289	cursor.getLong(DatabaseAdapter.COLUMN_TIMESTAMP)	11
8406	cursor.getLong(cursor.getColumnIndexOrThrow("period"))	5
25343	cursor.getLong(cursor.getColumnIndexOrThrow("recurrence_period"))	12
26158	cursor.getLong(cursor.getColumnIndexOrThrow("recurrence_period")))	14
1982	cursor.getLong(cursor.getColumnIndexOrThrow(AccountEntry._ID))	19
53039	cursor.getLong(cursor.getColumnIndexOrThrow(BudgetAmountEntry.COLUMN_AMOUNT_DENOM))	2
53176	cursor.getLong(cursor.getColumnIndexOrThrow(BudgetAmountEntry.COLUMN_AMOUNT_NUM))	2
52992	cursor.getLong(cursor.getColumnIndexOrThrow(BudgetAmountEntry.COLUMN_PERIOD_NUM))	2
53305	cursor.getLong(cursor.getColumnIndexOrThrow(BudgetEntry.COLUMN_NUM_PERIODS))	2
35983	cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry._ID))	4
63720	cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry.COLUMN_CREATED_AT))	3
32678	cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry._ID))	8
30895	cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.CommonColumns._ID))	8
23386	cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_VALUE_DENOM)))	4
30237	cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_TIMESTAMP))	24
35988	cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry._ID))	11
35432	cursor.getLong(cursor.getColumnIndexOrThrow(KEY_ROW_ID))	4
12412	cursor.getLong(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_VALUE_DENOM))	13
12643	cursor.getLong(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_VALUE_NUM))	8
35111	cursor.getLong(cursor.getColumnIndexOrThrow(RecurrenceEntry.COLUMN_MULTIPLIER))	5
32032	cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_END_TIME))	8
5650	cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_LAST_RUN))	12
32036	cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_PERIOD))	15
5940	cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_START_TIME))	18
33624	cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_END_TIME))	6
33772	cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_LAST_RUN))	6
33811	cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_PERIOD))	6
33665	cursor.getLong(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_START_TIME))	6
61808	cursor.getLong(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_QUANTITY_DENOM))	3
61825	cursor.getLong(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_QUANTITY_NUM))	3
61834	cursor.getLong(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_VALUE_DENOM))	3
61837	cursor.getLong(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_VALUE_NUM))	3
24206	cursor.getLong(cursor.getColumnIndexOrThrow(SplitEntry._ID))	7
20867	cursor.getLong(cursor.getColumnIndexOrThrow(TransactionEntry._ID))	26
7020	cursor.getPosition()	17
53177	cursor.getShort(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ENABLED))	5
33677	cursor.getShort(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_ENABLED))	3
2557	cursor.getString(	12
3224	cursor.getString(0)	35
36393	cursor.getString(2)	8
6555	cursor.getString(DatabaseAdapter.COLUMN_ACCOUNT_UID)	5
6744	cursor.getString(DatabaseAdapter.COLUMN_AMOUNT),	13
27380	cursor.getString(DatabaseAdapter.COLUMN_COLOR_CODE)	5
30411	cursor.getString(DatabaseAdapter.COLUMN_DESCRIPTION)	8
6635	cursor.getString(DatabaseAdapter.COLUMN_DOUBLE_ENTRY_ACCOUNT_UID)	5
63884	cursor.getString(DatabaseAdapter.COLUMN_NAME)	2
51283	cursor.getString(DatabaseAdapter.COLUMN_SPLIT_ACCOUNT_UID)	3
30483	cursor.getString(DatabaseAdapter.COLUMN_UID)	9
51069	cursor.getString(col)	5
35972	cursor.getString(colIndex)	7
62342	cursor.getString(cursor.getColumnIndexOrThrow("account_uid"))	3
56952	cursor.getString(cursor.getColumnIndexOrThrow("acct1_currency"))	4
56862	cursor.getString(cursor.getColumnIndexOrThrow("acct1_uid"))	7
51790	cursor.getString(cursor.getColumnIndexOrThrow("origin_scheduled_action_uid"))	11
32430	cursor.getString(cursor.getColumnIndexOrThrow("split_acct_uid"))	3
56944	cursor.getString(cursor.getColumnIndexOrThrow("split_memo"))	5
23354	cursor.getString(cursor.getColumnIndexOrThrow("split_quantity_denom"))	8
24042	cursor.getString(cursor.getColumnIndexOrThrow("split_quantity_num"))	8
6321	cursor.getString(cursor.getColumnIndexOrThrow("split_type"))	22
29957	cursor.getString(cursor.getColumnIndexOrThrow("trans_currency"))	20
57416	cursor.getString(cursor.getColumnIndexOrThrow("trans_desc")))	4
20007	cursor.getString(cursor.getColumnIndexOrThrow("trans_from_sched_action"))	6
24817	cursor.getString(cursor.getColumnIndexOrThrow("trans_notes"))	10
25910	cursor.getString(cursor.getColumnIndexOrThrow("trans_uid"))	29
56894	cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_COLOR_CODE))	3
24575	cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_CURRENCY))	17
56939	cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID))	3
63576	cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_FULL_NAME))	3
24367	cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_NAME))	12
24421	cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_PARENT_ACCOUNT_UID))	11
56960	cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_TYPE))	3
21510	cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_UID))	23
56971	cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_UID)))	3
3651	cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_DISPLAY_NAME))	10
63972	cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_LAST_SYNC))	2
60263	cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_ROOT_GUID))	7
63481	cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_SOURCE_URI))	6
63417	cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_TEMPLATE_GUID))	4
28849	cursor.getString(cursor.getColumnIndexOrThrow(BookEntry.COLUMN_UID))	18
53097	cursor.getString(cursor.getColumnIndexOrThrow(BudgetAmountEntry.COLUMN_ACCOUNT_UID))	2
53107	cursor.getString(cursor.getColumnIndexOrThrow(BudgetAmountEntry.COLUMN_BUDGET_UID))	2
53251	cursor.getString(cursor.getColumnIndexOrThrow(BudgetEntry.COLUMN_DESCRIPTION))	2
53327	cursor.getString(cursor.getColumnIndexOrThrow(BudgetEntry.COLUMN_NAME))	2
53276	cursor.getString(cursor.getColumnIndexOrThrow(BudgetEntry.COLUMN_RECURRENCE_UID))	2
36197	cursor.getString(cursor.getColumnIndexOrThrow(CommodityEntry.COLUMN_CUSIP))	7
61641	cursor.getString(cursor.getColumnIndexOrThrow(CommodityEntry.COLUMN_FULLNAME))	3
36198	cursor.getString(cursor.getColumnIndexOrThrow(CommodityEntry.COLUMN_LOCAL_SYMBOL))	7
23761	cursor.getString(cursor.getColumnIndexOrThrow(CommodityEntry.COLUMN_MNEMONIC))	7
61637	cursor.getString(cursor.getColumnIndexOrThrow(CommodityEntry.COLUMN_NAMESPACE))	3
34049	cursor.getString(cursor.getColumnIndexOrThrow(CommodityEntry.COLUMN_UID))	7
59769	cursor.getString(cursor.getColumnIndexOrThrow(CommonColumns.COLUMN_CREATED_AT))	7
52527	cursor.getString(cursor.getColumnIndexOrThrow(CommonColumns.COLUMN_MODIFIED_AT))	12
59766	cursor.getString(cursor.getColumnIndexOrThrow(CommonColumns.COLUMN_UID))	7
18805	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_ACCOUNT_UID))	5
3152	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_NAME))	8
3790	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseHelper.KEY_PARENT_ACCOUNT_UID))	11
34280	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_COLOR_CODE))	16
52965	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_CURRENCY))	7
64163	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID))	2
26031	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_DESCRIPTION))	9
21300	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_NAME))	3
32451	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_PARENT_ACCOUNT_UID))	9
53333	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_TYPE))	4
13424	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_UID))	17
64164	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_UID)))	2
32677	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.BookEntry.COLUMN_DISPLAY_NAME))	9
57002	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.CommodityEntry.COLUMN_FULLNAME))	11
57215	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.CommodityEntry.COLUMN_MNEMONIC))	11
51909	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.CommodityEntry.COLUMN_UID))	3
30736	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.CommonColumns.COLUMN_UID))	8
23588	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_TYPE))	4
27097	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.ScheduledActionEntry.TABLE_NAME+"."+	5
35881	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_DESCRIPTION))	11
34659	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_NOTES))	6
53072	cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_UID))	12
35584	cursor.getString(cursor.getColumnIndexOrThrow(KEY_UID))	4
12151	cursor.getString(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_COMMODITY_UID))	7
61554	cursor.getString(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_CURRENCY_UID))	3
23541	cursor.getString(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_DATE))	7
23966	cursor.getString(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_SOURCE))	7
23502	cursor.getString(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_TYPE))	7
23982	cursor.getString(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_VALUE_DENOM))	7
23700	cursor.getString(cursor.getColumnIndexOrThrow(PriceEntry.COLUMN_VALUE_NUM))	7
7944	cursor.getString(cursor.getColumnIndexOrThrow(RecurrenceEntry.COLUMN_BYDAY))	8
35033	cursor.getString(cursor.getColumnIndexOrThrow(RecurrenceEntry.COLUMN_PERIOD_END))	5
35103	cursor.getString(cursor.getColumnIndexOrThrow(RecurrenceEntry.COLUMN_PERIOD_START))	5
53241	cursor.getString(cursor.getColumnIndexOrThrow(RecurrenceEntry.COLUMN_PERIOD_TYPE))	2
25607	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_ACTION_UID))	22
5651	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_CREATED_AT))	7
62567	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_EVENT_UID))	4
53036	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_RECURRENCE_UID))	2
19487	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TAG))	22
53332	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TEMPLATE_ACCT_UID))	2
19923	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TYPE))	5
8593	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_UID))	16
59709	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_EVENT_UID))	4
33636	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_TAG))	6
33647	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_TYPE))	5
33696	cursor.getString(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_UID))	5
35570	cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_ACCOUNT_UID))	11
24343	cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_AMOUNT))	14
31987	cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_MEMO))	11
53071	cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_RECONCILE_DATE))	5
53005	cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_RECONCILE_STATE))	5
31608	cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_TRANSACTION_UID))	11
24347	cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_TYPE))	14
24224	cursor.getString(cursor.getColumnIndexOrThrow(SplitEntry.COLUMN_UID))	9
24494	cursor.getString(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID))	6
25308	cursor.getString(cursor.getColumnIndexOrThrow(columnName))	6
50100	cursor.getString(mIconName1Col)	5
50428	cursor.getString(mIconName2Col)	5
32753	cursor.getString(nameIndex)	4
2614	cursor.moveToFirst()	45
32692	cursor.moveToFirst())	4
3645	cursor.moveToFirst()){	25
26373	cursor.moveToNext()	3
13941	cursor.moveToNext()){	15
6994	cursor.moveToPosition(position	16
6766	cursor.moveToPosition(position)	16
53217	cursor.moveToPrevious()	3
63536	cursor.registerContentObserver(mObserver)	2
60477	cursor.toString()	3
50625	cursorAdapter	13
9601	cursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	16
19777	cursorMoved	6
60542	cursorPresent	3
31081	cursors	5
47555	curve	4
36377	cusip	13
27566	custom	102
42174	custom,static	4
48124	custom.getParent()	4
45665	customHeight	4
44975	customHeightMode	4
45697	customNavHeight	4
45333	customNavHeightMode	4
45718	customNavId	4
45157	customNavWidth	4
45084	customNavWidthMode	4
48112	customParent	4
47963	customParent).removeView(custom)	4
45641	customView	4
45121	customView.getLayoutParams()	4
45427	customView.getMeasuredHeight()	4
45610	customView.getMeasuredHeight())	4
45736	customView.getMeasuredWidth()	4
45378	customView.layout(xpos,ypos,xpos	4
45279	customView.measure(	4
45579	customWidth	4
44949	customWidth,	4
45178	customWidthMode	4
49137	customization	4
62286	customizations	3
37552	customized	4
62237	cutOffPage	4
62252	cutOffPage)	4
18346	cv	19
58989	cv.put(KEY_CURRENCY_CODE,entry.getKey())	2
58981	cv.put(KEY_NAME,entry.getValue())	2
18160	cv.put(KEY_TYPE,AccountType.CASH.toString())	14
35492	cv.put(SplitEntry.COLUMN_TYPE,AccountType.CASH.toString())	5
42043	cycle.	4
13603	cyclic	35
17349	czy	12
11540	d	29
15979	d&#233	36
15981	d&#237	6
15463	d&#243	8
37780	d)	13
46673	d).findDrawableByLayerId(id)	4
47441	d).setLevel(level)	4
47291	d).start()	4
47552	d-pad	4
47098	d.draw(canvas)	4
46808	d.getMinimumHeight()	4
47192	d.setCallback(this)	4
47451	d.setLevel((int)	4
23344	d\'&#233	11
34824	d\'Export</string>	5
22489	d\'OC	5
60094	d\'OC</string>	3
11216	d\'OFX</string>	24
23924	d\'abord	11
10388	d\'accs	5
11034	d\'accs</string>	7
11111	d\'achat</string>	7
12814	d\'afegir	10
7619	d\'ajouter	36
11812	d\'amlioration	11
16369	d\'apertura</string>	15
23695	d\'applications	9
60075	d\'aquest	3
14836	d\'assentament	6
14747	d\'assentaments</string>	10
27923	d\'effacer	9
16168	d\'enregistrer	20
11485	d\'entre	3
23632	d\'espace	9
11150	d\'export	30
23361	d\'export</string>	22
14831	d\'exportaci	13
14780	d\'exportar</string>	14
11787	d\'exports	21
517	d\'identifier	79
14734	d\'informes</string>	10
14795	d\'origen	6
29560	d\'origen</string>	8
10342	d\'origine</string>	23
16261	d\'ouverture	20
10581	d\'ouverture</string>	27
21990	d\'s	10
10913	d\'un	59
23430	d\'une	5
22044	d\'usuari/contrasenya	5
22046	d\'usuari</string>	7
22645	d\'utilisateur</string>	7
2119	da	172
59999	dades	3
4239	dados	33
10734	daftar	5
14994	dag</item>	24
56163	dagar</item>	2
7706	dagboek	17
26433	dagboek</string>	6
8697	dagboeken	24
26525	dagboeken</string>	9
16576	dagen</item>	12
51075	daily	8
4627	daily.	5
16214	dal	21
11582	dalam	14
22583	dall\'importo	6
16263	dall\'ultima	39
11755	dan	52
17496	dane	9
5456	dann	25
8123	dans	67
17862	danych	18
11370	dapat	13
5134	dar</string>	18
11028	dari	14
904	darken(int	7
1057	darker	24
5983	das	72
15627	das</item>	17
17031	dat	23
679	data	350
23967	data!=	10
24055	data")	9
258	data)	152
257	data,	8
24660	data,Context	3
50255	data,String	5
59111	data,TaskDelegate	4
49805	data,for	5
44306	data,or	9
43657	data.	23
55453	data.getData()	4
60356	data.getDataSet().getYVals()	3
19463	data.getFlags()	9
57487	data.getParcelableArrayListExtra(UxArgument.BUDGET_AMOUNT_LIST)	3
62922	data.getParcelableArrayListExtra(UxArgument.SPLIT_LIST)	4
33391	data.getStringArrayListExtra(UxArgument.REMOVED_SPLITS)	9
33393	data.getStringArrayListExtra(UxArgument.SPLIT_LIST)	9
60360	data.getYValueSum()	3
57427	data.putParcelableArrayListExtra(UxArgument.BUDGET_AMOUNT_LIST,budgetAmounts)	3
62996	data.putParcelableArrayListExtra(UxArgument.SPLIT_LIST,extractSplitsFromView())	4
31627	data.putStringArrayListExtra(UxArgument.REMOVED_SPLITS,mRemovedSplitUIDs)	12
31707	data.putStringArrayListExtra(UxArgument.SPLIT_LIST,splitStrings)	12
10130	data</string>	125
1424	dataAdapter	28
642	dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	21
48357	dataModel	13
48310	dataModel)	9
50360	dataModel.chooseActivity(itemId)	4
49864	dataModel.getActivity(i)	4
50155	dataModel.getActivityCount()	4
49598	dataModel.readHistoricalData()	4
49252	dataModel.registerObserver(mModelDataSetOberver)	4
48779	dataModel.setIntent(intent)	4
50238	dataModel.setIntent(shareIntent)	4
49958	dataModel.setOnChooseActivityListener(mOnChooseActivityListener)	4
48967	dataModel.unregisterObserver(mModelDataSetOberver)	5
8507	dataSet	37
29857	dataSet.addColor(COLORS[(dataSet.getEntryCount()	13
1973	dataSet.addEntry(new	40
29771	dataSet.getColors().set(dataSet.getColors().size()	7
20180	dataSet.getYValueSum())	8
5848	dataSet.getYValueSum(),	6
21042	dataSet.setColor(Color.LTGRAY)	9
60335	dataSet.setColor(NO_DATA_COLOR)	3
50694	dataSet.setColor(PieChartActivity.NO_DATA_COLOR)	4
61857	dataSet.setColor(PieChartFragment.NO_DATA_COLOR)	3
50822	dataSet.setColors(colors)	6
60362	dataSet.setColors(newColors)	3
20989	dataSet.setDrawValues(false)	12
52815	dataSet.setSliceSpace(2)	7
50766	dataSet.setSliceSpace(PieChartActivity.SPACE_BETWEEN_SLICES)	4
61848	dataSet.setSliceSpace(PieChartFragment.SPACE_BETWEEN_SLICES)	3
60348	dataSet.setSliceSpace(SPACE_BETWEEN_SLICES)	3
6587	dataSetIndex)	8
30044	dataSetIndex,	27
1612	dataSetIndex,Highlight	24
26815	dataSets	20
29932	dataSets.add(set)	14
26689	dataSets.add(set1)	5
26809	dataSets.add(set2)	5
50556	dataUri	5
1495	database	290
63990	database"	2
14401	database")	43
34044	database","Processing...",true)	4
33619	database",Toast.LENGTH_LONG).show()	6
33546	database",Toast.LENGTH_SHORT).show()	3
57647	database",e)	3
25591	database",modelList.size(),	13
31147	database,create	14
63741	database,creating	2
62648	database,saves	3
63734	database,should	3
61955	database,with	3
3753	database.	187
18517	database.")	17
51499	database.</p>	7
33933	database.\n"	8
8264	database:	52
51747	database</b></p>	6
32897	database</li>	13
53468	database</p>	2
27633	database<br/>	8
8552	databaseHelper	12
8419	databaseHelper.getReadableDatabase()	3
9771	databaseHelper.getWritableDatabase()	9
63448	databaseName	4
63474	databaseName){	4
51988	databasen	7
7755	databasen.	24
51578	databases	10
55800	databzi	5
29657	datang	5
23540	dataset	27
678	date	160
53154	date"/>	3
8152	date)	29
19698	date,end	5
8613	date,it	4
55471	date,so	5
19063	date.	9
19366	date.add(Calendar.DAY_OF_MONTH,diff)	6
19267	date.get(Calendar.DAY_OF_WEEK)	6
32549	date.getMonthOfYear()	9
2977	date.getTime()	26
2081	date.toString("MMM	6
458	date.toString("yyyy")	6
6968	date1	11
6970	date2	11
2900	date:	18
21030	dateENode	9
20683	dateENode.appendChild(doc.createTextNode(GncXmlHelper.formatDate(mTimestamp)))	11
20870	dateEneteredNode	9
20513	dateEneteredNode.appendChild(dateENode)	11
4641	dateEntered	9
19261	dateFormat	13
19071	dateFormat.format(mEndDate)	8
18576	dateFormat.format(new	12
2295	dateFormatter	9
6996	dateHeader	19
27854	dateHeader.setText(accountsDbAdapter.getFullyQualifiedAccountName(currentAccountUid))	5
7311	dateHeader.setText(dateString)	11
19097	dateHeader.setText(getString(R.string.label_account)	6
6485	dateHeader.setVisibility(View.GONE)	17
6617	dateHeader.setVisibility(View.VISIBLE)	19
23781	dateMillis	42
51209	dateMillis)	13
20489	datePNode	9
20890	datePNode.appendChild(doc.createTextNode(GncXmlHelper.formatDate(mTimestamp)))	9
33263	datePattern	6
34335	datePicker	7
34252	datePicker.getClass().getDeclaredFields())	7
34328	datePicker.setMaxDate(maxDate)	6
34247	datePicker.setMinDate(minDate)	6
9863	datePickerDialog	15
9513	datePickerDialog.setOnDateSetListener(BudgetFormFragment.this)	2
8800	datePickerDialog.setOnDateSetListener(ExportFormFragment.this)	2
8996	datePickerDialog.setPreselectedDate(year,monthOfYear,dayOfMonth)	2
9964	datePickerDialog.show(getFragmentManager(),"date_picker_fragment")	23
64254	datePickerDialogFragment	1
64253	datePickerDialogFragment.mDate	1
64262	datePickerDialogFragment.mDate.setTimeInMillis(dateMillis)	1
64261	datePickerDialogFragment.mDateSetListener	1
34299	datePickerField	7
34340	datePickerField.get(dialog)	7
34248	datePickerField.setAccessible(true)	7
35678	datePosted	10
63546	datePosted.appendChild(doc.createTextNode(Expenses.getFormattedCurrentTime(mTimestamp.getTime())))	2
54819	datePosted.appendChild(doc.createTextNode(OfxExporter.getOfxFormattedTime(mTimestamp)))	5
54840	datePosted.appendChild(doc.createTextNode(OfxFormatter.getOfxFormattedTime(mTimestamp)))	4
35696	datePosted.appendChild(doc.createTextNode(OfxHelper.getOfxFormattedTime(mTimestamp)))	4
20371	datePostedNode	9
20817	datePostedNode.appendChild(datePNode)	9
32230	dateRangeDivider	11
32423	dateRangeDivider.setVisibility(View.GONE)	11
32187	dateRangeDivider.setVisibility(View.VISIBLE)	14
32352	dateRangeDivider.setVisibility(visibility)	3
56543	dateRangeSetListener	3
56535	dateRangeSetListener){	6
869	dateString	40
35685	dateString)	16
360	dateText	20
52492	dateTime	5
35721	dateUser	8
35736	dateUser.appendChild(doc.createTextNode(	8
4479	dateView	18
4682	dateView.getText().toString()	14
19830	dates	45
5267	dates",e)	2
16191	dati	29
12278	datos	38
15679	datos.	13
16367	davvero	25
7149	day	45
18868	day)	17
58026	day)"	6
7031	day,<code>false</code>	9
18807	day2CalendarDay(int	5
9905	dayOfMonth	20
123	dayOfMonth)	25
9344	dayOfWeek	24
19594	dayOfWeek)	5
26870	dayOfWeek.substring(0,dayOfWeek.length()-1).toUpperCase()	5
35115	dayOfWeekFormatter	3
18891	days	27
19826	days"	5
53592	days,	5
5581	days</item>	115
35142	daysOfWeekString	3
35014	daysOfWeekString.append(dayOfWeekFormatter.format(calendar.getTime())).append(",")	3
35052	daysOfWeekString.substring(0,daysOfWeekString.length()-2)	3
294	db	160
3475	db")	105
25016	db",columnName,recordUID))	3
25027	db",recordUID))	2
1935	db)	162
830	db){	124
3795	db,	101
14033	db,@NonNull	9
63739	db,Book	2
63416	db,BudgetAmountsDbAdapter	4
33757	db,ExportFormat	6
32545	db,InputStream	10
63141	db,RecurrenceDbAdapter	7
14537	db,SplitsDbAdapter	5
25425	db,String	17
14075	db,TransactionsDbAdapter	5
54696	db,but	7
34696	db,int	17
20262	db,remove	3
25798	db,so	8
52245	db,the	8
3907	db-	5
25143	db.beginTransaction()	32
51551	db.close()	3
32555	db.compileStatement(sql)	12
31788	db.endTransaction()	44
831	db.execSQL("	30
25055	db.execSQL("ALTER	20
1702	db.execSQL("CREATE	29
4	db.execSQL("DROP	50
25378	db.execSQL("INSERT	22
59087	db.execSQL("PRAGMA	1
62333	db.execSQL("REPLACE	3
33678	db.execSQL("UPDATE	9
56473	db.execSQL("create	10
35521	db.execSQL(ACCOUNTS_TABLE_CREATE)	9
63390	db.execSQL(BOOKS_TABLE_CREATE)	6
53000	db.execSQL(BUDGETS_TABLE_CREATE)	2
53074	db.execSQL(BUDGET_AMOUNTS_TABLE_CREATE)	2
53121	db.execSQL(COMMODITIES_TABLE_CREATE)	5
59058	db.execSQL(CURRENCIES_TABLE_CREATE)	2
25247	db.execSQL(DatabaseHelper.createUpdatedAtTrigger(tableName))	5
53211	db.execSQL(PRICES_TABLE_CREATE)	5
53231	db.execSQL(RECURRENCE_TABLE_CREATE)	2
33831	db.execSQL(SCHEDULED_ACTIONS_TABLE_CREATE)	11
20620	db.execSQL(SCHEDULED_EVENTS_TABLE_CREATE)	8
35502	db.execSQL(SPLITS_TABLE_CREATE)	10
35517	db.execSQL(TRANSACTIONS_TABLE_CREATE)	12
27396	db.execSQL(addAccountColor)	7
27632	db.execSQL(addAccountFavorite)	9
18250	db.execSQL(addColumnSql)	16
25145	db.execSQL(addCreatedColumn)	3
27409	db.execSQL(addDefaultTransferAccount)	10
35449	db.execSQL(addFullAccountNameQuery)	12
34067	db.execSQL(addHiddenFlagSql)	5
25419	db.execSQL(addHiddenFlagSqlToAccounts)	4
25109	db.execSQL(addModifiedColumn)	5
18480	db.execSQL(addParentAccountSql)	13
18364	db.execSQL(addPlaceHolderAccountFlagSql)	14
18292	db.execSQL(addRecurrencePeriod)	13
25127	db.execSQL(addSchedxActionToTrns)	4
25003	db.execSQL(addTemplatesToTransactions)	4
53344	db.execSQL(createAccountUidIndex)	13
53321	db.execSQL(createBudgetAmountUidIndex)	2
53212	db.execSQL(createBudgetUidIndex)	2
53103	db.execSQL(createCommoditiesSql)	9
53224	db.execSQL(createCommodityUidIndex)	5
53015	db.execSQL(createPriceUidIndex)	8
53084	db.execSQL(createPricesSql)	14
53059	db.execSQL(createRecurrenceUidIndex)	2
25328	db.execSQL(createScheduledActions)	4
25395	db.execSQL(createScheduledEventUidIndex)	8
53006	db.execSQL(createSplitUidIndex)	8
53110	db.execSQL(createTransactionUidIndex)	13
51575	db.getPath())	4
29948	db.insert(AccountEntry.TABLE_NAME,null,contentValues)	8
32707	db.insert(BookEntry.TABLE_NAME,null,contentValues)	8
58954	db.insert(CURRENCIES_TABLE_NAME,null,cv)	2
8160	db.insert(RecurrenceEntry.TABLE_NAME,null,contentValues)	5
29959	db.insert(ScheduledActionEntry.TABLE_NAME,null,contentValues)	18
30082	db.insert(SplitEntry.TABLE_NAME,null,contentValues)	9
14349	db.isReadOnly())	21
30050	db.query(	12
29996	db.query(AccountEntry.TABLE_NAME,	12
29954	db.query(AccountEntry.TABLE_NAME,new	8
35448	db.query(DatabaseHelper.ACCOUNTS_TABLE_NAME,	4
35439	db.query(DatabaseSchema.AccountEntry.TABLE_NAME,	5
53115	db.query(ScheduledActionEntry.TABLE_NAME	2
63204	db.query(ScheduledActionEntry.TABLE_NAME,	3
31653	db.query(ScheduledActionEntry.TABLE_NAME,null,	4
25363	db.query(TransactionEntry.TABLE_NAME	12
25368	db.query(TransactionEntry.TABLE_NAME,null,"recurrence_period	4
28452	db.query(true,AccountEntry.TABLE_NAME,new	4
36267	db.rawQuery(query,null)	7
1656	db.setTransactionSuccessful()	58
34804	db.update(	3
35436	db.update(ACCOUNTS_TABLE_NAME,contentValues,KEY_ROW_ID	4
18095	db.update(ACCOUNTS_TABLE_NAME,cv,null,null)	14
25211	db.update(AccountEntry.TABLE_NAME,contentValues,AccountEntry.COLUMN_PARENT_ACCOUNT_UID	11
35428	db.update(AccountEntry.TABLE_NAME,contentValues,AccountEntry._ID	8
35531	db.update(AccountEntry.TABLE_NAME,cv,null,null)	5
50683	db.update(DatabaseSchema.ScheduledActionEntry.TABLE_NAME,contentValues,	12
31872	db.update(ScheduledActionEntry.TABLE_NAME,contentValues,	6
25436	db.update(TransactionEntry.TABLE_NAME,contentValues,"recurrence_period	4
30020	db.update(TransactionEntry.TABLE_NAME,contentValues,TransactionEntry.COLUMN_UID	8
25390	db.update(TransactionEntry.TABLE_NAME,contentValues,TransactionEntry._ID	16
33983	db.update(TransactionEntry.TABLE_NAME,contentValues,TransactionEntry._ID+"="+transactionId,null)	3
26387	dbAdapter	49
58947	dbAdapter)	2
26955	dbAdapter){	16
26270	dbAdapter.addAccount(account)	8
26447	dbAdapter.addAccount(new	3
36981	dbAdapter.addTransaction(mTransaction)	3
26596	dbAdapter.close()	24
51121	dbAdapter.getAccount("intent-account")	5
26753	dbAdapter.getAllAccounts()	13
27048	dbAdapter.getExportableAccounts()	12
26574	dbAdapter.getTimestampOfEarliestTransaction(type,mCommodity.getCurrencyCode())	3
26594	dbAdapter.getTimestampOfEarliestTransaction(type,mCurrency.getCurrencyCode())	8
26412	dbAdapter.getTimestampOfLatestTransaction(type,mCommodity.getCurrencyCode())	3
26337	dbAdapter.getTimestampOfLatestTransaction(type,mCurrency.getCurrencyCode())	8
9051	dbExportFile	16
8978	dbExportFile.close()	10
9235	dbExportFile.writeFromExistingFile(exportedFile,false)	15
13274	dbHelper	30
13511	dbHelper.getReadableDatabase()	11
13637	dbHelper.getWritableDatabase()	21
58477	dbPath	3
55267	dbVersion	5
8875	dbxClient	3
10050	dbxClient.files()	3
10115	dbxClient.files().listFolder("").getEntries()	2
9672	dbxFileSystem	13
9919	dbxFileSystem.create(new	11
10956	dcider	20
16355	dcoupage</string>	7
16219	dcoupe	11
18736	dcoupes	7
35852	dd	7
2437	de	279
28099	de,slett	6
49525	de-iconified.	5
3761	de</string>	56
19110	dead,kill	11
21248	deaktivere	6
21182	deaktivert</string>	8
55580	deaktivert</string>-	1
59282	deaktivieren	4
59197	deaktivieren</string>	4
52507	deal	8
40677	dealing	12
21265	debet</string>	6
4209	debit	75
6469	debit,one	5
59861	debit,unless	2
35645	debit.	5
6522	debits	22
7302	debits.	6
8809	debug	33
55416	debugCompile	2
23100	debuggable	24
34843	debugging	10
42249	decelerates	4
39651	deceleration.	8
57874	december	6
47988	decent	4
5230	decide	114
16225	decidere	26
48545	decides	4
4041	decidir	28
54899	decidir</string>	7
3250	decidirlo	28
997	decimal	86
35658	decimal.stripTrailingZeros().toPlainString()	4
12596	decimal</li>	5
12811	decimalFormatSymbols	9
12930	decimalFormatSymbols.setCurrencySymbol(symbol)	9
30025	decimalImbalance	15
25820	decimalImbalance.abs().toPlainString())	13
25863	decimalImbalance.compareTo(BigDecimal.ZERO)	13
58117	decimals	6
7054	declaration	14
35908	declare	6
47187	declared	5
38490	declaring	4
38887	decor	8
39409	decor!	4
39415	decor)	4
39419	decor,	4
40268	decor.findViewById(	4
39774	decor.findViewById(R.id.abs__action_bar)	4
40185	decor.getContext()	4
32042	decorating	6
39151	decoration	5
52405	decouple	14
6547	decrease	26
38867	dedicated	7
25438	deep	18
25287	deeper	2
36004	deeply	8
3170	def	144
47597	defStyle	10
24935	defStyle)	56
46767	defStyle,int	4
47429	defStyleAttr)	13
47075	defStyleAttr,int	4
47101	defStyleRes)	8
1049	default	412
41164	default)	4
40362	default,	4
5839	default,CREDIT	92
12058	default,KREDIT	3
42092	default,ValueAnimator	4
52001	default,an	8
48069	default,every	4
11864	default,hanya	7
11149	default,only	129
49245	default,so	5
6622	default,the	14
16312	default,verranno	35
23060	default.	39
566	default:	218
63910	default:+	1
11411	default</string>	11
26438	defaultAccounts	6
62166	defaultAccountsPage	3
26531	defaultAccounts[index]	6
48926	defaultActivity	4
49438	defaultActivityButtonShown	4
55342	defaultBackupFile	3
55264	defaultBackupLocation	3
2765	defaultConfig	33
3299	defaultCurrency	18
51878	defaultCurrencyCode	10
62098	defaultCurrencyPage	3
62082	defaultCurrencyPage,	3
62240	defaultCurrencyPage.addBranch(currency,defaultAccountsPage)	3
62108	defaultCurrencyPage.addBranch(mContext.getString(R.string.wizard_option_currency_other),	3
62156	defaultCurrencyPage.setChoices(currencySet.toArray(new	3
62217	defaultCurrencyPage.setRequired(true)	3
62071	defaultCurrencyPage.setValue(defaultCurrencyCode)	3
7236	defaultEmail	25
6573	defaultEmail.trim().length()	23
8966	defaultExportFormat	26
63207	defaultFormat	3
48601	defaultGroupId	4
48714	defaultItemCategory	4
48772	defaultItemCheckable	4
48421	defaultItemChecked	4
48459	defaultItemEnabled	4
48230	defaultItemId	4
48547	defaultItemOrder	4
48727	defaultItemVisible	4
49346	defaultName	4
34862	defaultShared	10
9991	defaultSharedPrefs	22
43718	defaultShowAsAction	4
44194	defaultShowAsAction)	4
5155	defaultTransactionType	9
51316	defaultTransferAccount	2
24444	defaultTransferAccountCursor	9
26884	defaultTransferAccountCursor)	10
1856	defaultTransferAccountID	22
27304	defaultTransferAccountId	7
31217	defaultTransferAccountId)	7
4098	defaultTransferAccountId){	12
838	defaultTransferAccountId,	6
31232	defaultTransferAccountId,boolean	7
24484	defaultTransferAccountUID	10
27322	defaultTransferAccountUID)	10
64157	defaultTransferAcctUID	2
64159	defaultTransferAcctUID.length()	2
56945	defaultTransferAcctUUID	3
56891	defaultTransferAcctUUID.length()	3
51241	defaultTransferUID	3
34816	defaultValue	7
3378	defaultValue){	22
30528	defaults	13
27939	defaults,the	4
22162	defecte	10
60044	defecte,CRDIT	3
22454	defecte,noms	7
14781	defecte</string>	17
3256	defecto	80
12159	defecto.	28
15762	defecto:	13
3477	defecto</string>	40
22039	defecto\n\nSus	10
20707	defeito	28
20692	defeito,CR&#201	11
62443	defeito,CRDITO	6
19563	defeito,apenas	22
59536	defeito</string>	11
10686	defeito\n\nAs	13
9981	define	22
8633	defined	70
44214	defined)	4
43982	defined,that	4
45814	defined.	4
41693	defines	9
56386	definies	2
55665	definir	2
2418	definitely	5
46059	definition	19
20830	definitiva	18
22831	degli	8
48304	degrade	4
50727	degrees	7
12263	dei	72
28093	deine	11
55029	deixe	7
52030	dekstop</string>	6
3164	del	114
55908	dela</string>	2
56048	delar</string>	2
25098	delay	43
40801	delay)	4
40006	delay,in	12
40803	delay.	4
42278	delayed	6
43090	delayedAnimationFrame(long	4
41908	delayedAnims	4
42142	delayedAnims.add(anim)	4
42018	delayedAnims.get(i)	4
42293	delayedAnims.remove(anim)	4
42306	delayedAnims.size()	4
40768	delays	4
18603	delegate	19
18917	delegate){	13
18877	delegates	15
37946	delegating	4
39233	delegation	4
21951	deler</string>	10
4747	deletada	6
28721	deletada</string>	10
2491	deletadas	21
3697	deletadas!!!</string>	18
57619	deletadas!</string>	6
57565	deletadas.	6
4674	deletadas.\n\nTem	6
28672	deletadas</string>	10
5194	deletar	24
2600	delete	240
62609	delete,use	2
59108	delete.	3
10694	delete</string>	108
19607	deleteAccount(long	30
27737	deleteAccount(rowId)	9
27671	deleteAccount(rowId,false)	7
57242	deleteAccount(rowIdToDelete)	1
30710	deleteAllAccounts()	7
2480	deleteAllAccounts(){	20
31430	deleteAllNonTemplateTransactions(){	6
23509	deleteAllRecords()	25
23442	deleteAllRecords(){	40
24171	deleteAllRecords(@NonNull	4
35583	deleteAllRecords(DatabaseHelper.TRANSACTIONS_TABLE_NAME)	6
30763	deleteAllRecords(ScheduledEventEntry.TABLE_NAME)	3
30721	deleteAllRecords(SplitEntry.TABLE_NAME)	5
24231	deleteAllRecords(String	14
30883	deleteAllRecords(TransactionEntry.TABLE_NAME)	5
30740	deleteAllTransactions()	7
30858	deleteAllTransactions(){	14
32849	deleteBook(){	2
54608	deleteBook(@NonNull	8
2741	deleteBookBtn	7
30147	deleteBookBtn.setOnClickListener(new	8
54513	deleteBookBtn.setVisibility(View.GONE)	4
54095	deleteBudget(budgetId)	2
53802	deleteBudget(long	2
53328	deleteBudgetAmountsForBudget(String	2
4357	deleteButton	7
4708	deleteConfirm	13
30634	deleteConfirmationDialog	10
57024	deleteConfirmationDialog.show(getActivity().getSupportFragmentManager(),"account_settings")	3
30586	deleteConfirmationDialog.show(getFragmentManager(),"account_settings")	10
50637	deleteEmptyTransaction	9
63805	deleteEmptyTransaction.execute()	3
24592	deleteRecord(@NonNull	24
2829	deleteRecord(AccountEntry.TABLE_NAME,rowId)	15
26683	deleteRecord(DatabaseHelper.ACCOUNTS_TABLE_NAME,rowId)	12
30908	deleteRecord(DatabaseHelper.TABLE_NAME,rowId)	3
29217	deleteRecord(DatabaseHelper.TRANSACTIONS_TABLE_NAME,rowId)	9
30939	deleteRecord(ScheduledEventEntry.TABLE_NAME,rowId)	3
24147	deleteRecord(SplitEntry.TABLE_NAME,rowId)	7
24269	deleteRecord(String	14
35461	deleteRecord(TransactionEntry.TABLE_NAME,rowId)	6
30913	deleteRecord(TransactionEntry.TABLE_NAME,transactionId)	3
57756	deleteRecord(bookUID)	6
24412	deleteRecord(getID(uid))	13
20541	deleteRecord(id)	9
20527	deleteRecord(long	40
30785	deleteRecord(rowId)	3
51471	deleteScheduledBackupAction(ExportFormat	4
24497	deleteSplit(@NonNull	4
20954	deleteSplit(String	9
20605	deleteSplitsForTransaction(long	17
24416	deleteSplitsForTransactionAndAccount(@NonNull	4
24498	deleteSplitsForTransactionAndAccount(String	7
35571	deleteSplitsForTransactionAndAccount(long	4
56629	deleteStart	12
27645	deleteSubAccounts	7
27745	deleteSubAccounts)	12
27716	deleteSubAccountsCheckBox	7
24545	deleteTransaction(@NonNull	4
24114	deleteTransaction(String	16
30914	deleteTransaction(getID(transactionUID))	3
20733	deleteTransaction(getTransactionID(transactionUID))	8
20819	deleteTransaction(long	14
30912	deleteTransaction(transactionId)	9
6646	deleteTransactions	3
6990	deleteTransactions)	3
30869	deleteTransactionsConfirmationDialog	8
57093	deleteTransactionsConfirmationDialog.show(getActivity().getSupportFragmentManager(),"transaction_settings")	3
30954	deleteTransactionsConfirmationDialog.show(getFragmentManager(),"transaction_settings")	8
62633	deleteTransactionsForAccount(String	2
62644	deleteTransactionsWithNoSplits(){	2
4495	deleted	209
3095	deleted!!</string>	109
27069	deleted!")	3
3513	deleted!</string>	136
56593	deleted")	9
7125	deleted,<code>false</code>	27
27698	deleted,all	5
7073	deleted,false	3
34347	deleted,let	12
62623	deleted,rather,	2
9555	deleted,then	20
54795	deleted,we	9
25344	deleted.	12
33008	deleted.",!accountExists(PARENT_ACCOUNT_UID))	4
13093	deleted.",)	3
33111	deleted.",accountExists(CHILD_ACCOUNT_UID))	4
2455	deleted.\n\nAre	78
7084	deleted</string>	138
24523	deletedCount	11
25396	deletes	30
3561	deleting	213
58459	deletingBook_shouldDeleteDbFile(){	3
26504	deletingTransactionsShouldDeleteSplits(){	12
5639	deletion	76
63708	deliverResult(Cursor	1
60464	deliverSelfNotifications()	3
48703	delivered	4
12387	dell\'account</string>	7
22608	dell\'app	6
28075	dell\'app\n	5
16434	dell\'applicazione	26
16372	dell\'esportazione</string>	29
12733	della	44
16386	delle	46
56193	delning</string>	2
56334	delningar	2
24	delt	56
46465	delta	8
46489	delta,boolean	8
42781	deltaSX	4
42784	deltaSY	4
43243	deltaTime	4
40831	deltaValue	4
40702	deltaValue)	4
5315	dem	64
59527	demais</string>	8
11480	demand	10
3390	demasiado	11
50461	demonstrates	4
44208	demoted	4
44537	demoting	4
5316	den	35
7959	den</string>	13
16332	denaro	26
59262	deneyin</string>	6
11667	dengan	10
21754	denied,boo!	8
56040	denna	2
1264	denne	102
1075	denom	36
31075	denomInt	13
5370	denomString	29
32780	denominations	3
12525	denominator	45
33086	denominator)	18
61839	denominator,	4
33139	denominator,Currency	8
32976	denominator,String	12
57148	denominator:	7
41925	denotes	11
43981	density	9
43557	density)	4
7398	depend	19
749	dependencies	128
40760	dependencies,mapping	4
41005	dependencies.	4
40888	dependencies.add(dependency)	4
30286	dependency	8
30372	dependency)	7
19256	dependency,in	15
40511	dependency.	4
55559	dependency.getY()	5
40854	dependency.node	4
41080	dependency.node.animation	4
40354	dependency.node.animation.addListener(	4
40633	dependency.rule)	4
40748	dependencyAnimation	4
40593	dependencyAnimation)	4
40395	dependencyAnimation.removeListener(this)	4
40690	dependencyNode	4
40635	dependencyNode.nodeDependents	4
40693	dependencyNode.nodeDependents.add(this)	4
40689	dependencyToRemove	4
12590	dependent	8
58698	dependent?	3
19713	depending	30
6957	depends	73
19333	deployed	10
20878	depois	24
11790	deprecated	17
55698	deprecated,use	2
19385	depth	15
11555	depuis	51
5310	der	58
40331	derivative.")	4
41312	derive	8
27831	derive.	15
41293	derived	9
42034	derived)	4
41490	derived,if	4
41640	deriving	5
11374	dernier	37
11824	derniers	33
18601	dernire	7
4415	derzeitig	6
5311	des	106
4864	desabilitada</string>	10
4762	desabilite	16
14772	desactivada</string>	18
24625	desactivar	6
15725	desactive	8
14779	desar	13
2206	desarolladores	22
2097	descendant	40
62605	descendantAccountUID	2
24403	descendantAccountUIDs	20
51186	descendantAccountUIDs)	8
58786	descendantAccountUIDs.add(accountUID)	5
26423	descendantAccountUIDs.add(rootAccountUID)	8
58770	descendantAccounts	5
58804	descendantAccounts)	8
19161	descendants	25
23483	descendants.	8
48684	descending	4
19157	descent	12
8680	describe	6
42436	describeContents()	11
9630	describes	13
7531	describing	57
117	description	222
53199	description"	6
36028	description")	12
61936	description">	5
1412	description)	39
31836	description).	21
55547	description){	2
50233	description.	4
30269	description.length()	10
13249	description.trim()	6
3849	description</string>	89
20578	descriptionNode	12
21015	descriptionNode.appendChild(doc.createTextNode(mDescription))	9
20122	descriptionNode.appendChild(doc.createTextNode(mName))	13
19608	descriptionTextView	22
20725	descriptionTextView.setText(event.getRepeatString())	4
53832	descriptionTextView.setText(getString(R.string.label_scheduled_action_ended,	8
20141	descriptionTextView.setText(repeatStringBuilder.toString())	6
27078	descriptionTextView.setText(scheduledAction.getRepeatString())	18
25993	descriptions	13
63680	descriptor	3
12890	desde	55
18268	desea	11
5007	deseja	10
39241	deselect	4
29457	deselectAllItems()	8
29392	deselectItem(int	7
29226	deselectItem(itemPosition)	4
29426	deselectItem(position)	5
30645	deselectPreviousSelectedItem()	19
30496	deselectPreviousSelectedItem(){	8
30584	deselected	13
30519	deselected.	9
18581	deselects	15
22250	desen	7
6273	desenvolvedores	6
29692	desenvolvido	11
57553	desfeita!	6
22105	desfer!	7
11598	desglose	11
10301	desglose</string>	22
2322	desgloses	20
3003	desgloses</string>	9
14774	desglossament</string>	9
25534	desglossaments	5
22138	desgls</string>	10
15484	deshacer.	18
3112	design	95
30486	design)	11
44375	design.	4
6928	designated	10
34748	designation	9
2739	designed	107
31541	desired	35
42041	desired.	8
5589	desktop	234
53528	desktop,it	2
16503	desktop-GnuCash	13
26455	desktop-computer	13
4331	desktop.	17
4136	desktop.</string>	30
4562	desktop</string>	177
28006	desktop\n	13
52040	desktopa.</string>	9
17227	desktopa</string>	19
21127	desligada</string>	21
20236	despesas	19
20918	despesas.\n	10
14660	desprs	14
12250	despu&#233	23
15740	despues	31
15553	despus	12
56139	dessa	2
22382	dest	7
42324	dest,int	11
43164	dest.writeInt(openSubMenuId)	4
57419	dest.writeLong(mPeriodNum)	3
63003	dest.writeLong(mQuantity.getDenominator())	4
63001	dest.writeLong(mQuantity.getNumerator())	4
63059	dest.writeLong(mValue.getDenominator())	4
63006	dest.writeLong(mValue.getNumerator())	4
62964	dest.writeString(String.valueOf(mReconcileState))	4
57492	dest.writeString(getUID())	7
57543	dest.writeString(mAccountUID)	7
57413	dest.writeString(mAmount.toPlainString())	3
57497	dest.writeString(mBudgetUID)	3
62799	dest.writeString(mMemo	4
62827	dest.writeString(mQuantity.getCommodity().getCurrencyCode())	4
62920	dest.writeString(mReconcileDate.toString())	4
62929	dest.writeString(mSplitType.name())	4
62801	dest.writeString(mTransactionUID)	4
62959	dest.writeString(mValue.getCommodity().getCurrencyCode())	4
14701	dest</string>	10
19887	desta	20
55782	deste	2
22339	desti	7
5290	destination	198
55262	destination")	3
6797	destination.	14
11037	destination</string>	23
31166	destinations	10
16359	destinazione	30
16200	destinazione</string>	19
37168	destined	4
6159	destino	73
15823	destino</string>	24
23664	destroy	9
19570	destroyItem(ViewGroup	10
47760	destroyed	4
4309	destroyed,release	5
8981	destroyed.	18
49896	destructive	5
27670	destructiveDeleteAccount(accountId)	11
3075	destructiveDeleteAccount(long	33
30819	destructiveDeleteAccount(rowId)	5
27785	destructiveDeleteAccount(rowIdToDelete)	4
21305	det	8
21826	det</string>	8
45922	detaching	4
13974	detail	12
41142	detail.	4
31825	detailed	11
10107	details	58
24809	details")	17
26588	details.	20
3890	details</string>	161
22905	detalhes	9
10142	detalhes</string>	53
14893	detaljer.</string>	21
21479	detaljer</string>	15
22249	detalles	7
3994	detalles</string>	35
22439	detalls</string>	8
9211	detect	18
12365	detectar	5
3205	detected	7
39522	detects	4
7265	determine	75
1405	determined	58
52002	determined.	8
28483	determines	42
6597	determining	36
11856	detta	10
12886	dettagli	7
16480	dettagli</string>	28
8498	dette	53
10860	deux	23
9447	dev	21
34773	developer	28
4564	developers	78
14691	developers.</string>	78
32747	developers.\nThe	6
51677	development	11
38098	development/samples/ApiDemos/src/com/example/android/apis/app/FragmentTabs.java	4
3766	device	146
38667	device.	4
59369	device.</p>	2
59209	device/emulator	2
2592	devices	45
30502	devices-	9
17040	deze	44
10406	df	102
25309	df.format(new	11
25454	df.setTimeZone(TimeZone.getTimeZone("UTC"))	13
10592	dfaut	30
16098	dfaut,CRDIT	3
6187	dfaut,CREDIT	9
10424	dfaut,seul	13
10381	dfaut,seules	7
5588	dfaut</string>	40
10246	dfaut\n\n	7
16140	dfinitive	7
46732	dh	4
8082	di	95
29640	di-mount!</string>	5
22699	di-restore</string>	7
20311	dia</string>	11
14952	diagramdata	24
11461	diagramme	17
55909	diagrammet	5
55980	diagrammet</string>	2
1570	dialog	310
23637	dialog")	11
37643	dialog's	10
23405	dialog)	18
2254	dialog,	84
3765	dialog,int	92
2253	dialog.	57
3895	dialog.dismiss()	24
8479	dialog.getButton(AlertDialog.BUTTON_POSITIVE)	7
34245	dialog.getClass().getDeclaredField("mDatePicker")	7
23904	dialog.setOnDismissListener(new	8
56492	dialog.setTitle("Pick	3
31715	dialog.setTitle("Transfer	6
62276	dialog.setTitle(R.string.title_transfer_funds)	3
2926	dialog.show()	13
21053	dialog</p>	4
3782	dialogBuilder	22
3014	dialogBuilder.create()	18
27066	dialogBuilder.create().show()	3
27089	dialogBuilder.setNegativeButton("Cancel",new	3
27095	dialogBuilder.setNegativeButton(R.string.btn_cancel,new	4
27102	dialogBuilder.setPositiveButton("Delete	4
54536	dialogBuilder.setPositiveButton(getString(R.string.btn_delete_book),new	7
27072	dialogBuilder.setTitle("Confirm	4
2458	dialogBuilder.setTitle(R.string.title_rename_book)	6
34698	dialogBuilder.setTitle(getString(R.string.title_confirm_delete_book))	7
2495	dialogInterface,	20
3377	dialogInterface,int	32
2211	dialogInterface.dismiss()	6
27750	dialogLayout	9
18622	dialogs	33
39013	dialogs.	4
4840	dias</item>	25
11382	dibatalkan!	9
10319	dibuat	6
11520	dibuat</string>	8
19424	did	30
29635	didesain	5
24161	didn't	21
1747	didnt	5
4607	die	90
50776	die?",e)	5
10737	diekspor	12
10508	diekspor.	7
11437	diekspor</string>	7
4568	dies	19
21998	dies</item>	5
4354	diese	31
25483	diesem	3
59242	diesen	4
4206	dieser	36
4207	dieses	13
22228	diferent	7
15379	diferente	36
10314	diferentes\n	11
25645	diferents	8
19104	diff	15
16001	diff&#233	16
26643	diff)	8
34154	difference	47
931	different	321
42292	different,depending	4
41868	different:	4
25846	differenti	5
6689	differently	11
38172	differently.)	4
48371	differs	4
11576	diffrente	10
19305	diffrents	7
11412	diffrents\n	9
20	digit	55
23438	digits	34
23962	digits")	5
36129	digits,have	4
10563	digunakan	12
29672	digunakan,atau	5
10818	dihapus	5
12259	dihapus!!</string>	5
12481	dihapus!</string>	7
10135	dihapus</string>	9
22516	dihitung	7
11477	diimpor</string>	7
37649	dimension.	5
22866	dimensione</string>	11
46513	dimensions	4
11574	dimodifikasi</string>	5
14870	din	44
62428	dinamarquesa</item>	6
61344	dinar"	3
17097	dinar</item>	10
21607	dinarer</item>	10
16782	dingen	3
7452	diningAccount	3
22659	dipilih	7
11076	dipilih</string>	7
34434	diplay	6
44120	dips	4
22508	dipulihkan</string>	7
63685	dir	3
18428	dir,ver	6
57367	dirResult	8
57375	dirResult.getLogMessage())	4
12393	direcci&#243	28
15537	direccin	9
24100	direct	46
27439	direction	7
49052	direction,Rect	9
40398	direction.	4
41790	directions	4
768	directly	71
40437	directly,but	4
9510	directly,not	15
40856	directly.	12
63849	directories	3
22069	directorio	12
14016	directory	26
9626	directory)	4
29213	directory){	8
63841	directory,all	3
63839	directory,it	3
14046	directory,use	6
63669	directory.listFiles())	3
63821	directory/file.	3
14392	directory:	6
23030	directrio	6
23019	diretrio	7
63086	dirs	3
47493	dirty	4
47031	dirty.right	4
5335	disable	116
57700	disableAnimation()	2
13367	disableAnimationsRule	5
37190	disabled	38
1475	disabled")	4
62994	disabled,this	4
48537	disabled.	9
28843	disabled.")	3
59991	disabledScheduledActions_shouldNotRun(){	4
31620	disables	21
57603	disabling	4
48587	disallow.	6
47015	disallowPartialChildPosition)	4
47525	disallowPartialChildPosition))	4
46306	disappear	4
46290	disappeared.	4
46251	disappears	8
29268	disattiva	4
29436	disattivato</string>	4
36382	discarded	11
47631	discouraged.	4
30480	discovered	10
58052	discussion	6
3367	dise&#241	7
15785	diseo	8
22862	disimpan	7
6424	disk	34
22211	disk</item>	5
19123	dismiss	11
6521	dismiss()	107
49803	dismiss)	5
34151	dismissDialog	15
49440	dismissPopup()	4
42681	dismissPopupMenus()	8
9315	dismissProgressDialog()	3
49703	dismissSuggestions()	5
49085	dismissal	4
42635	dismissed,false	8
871	dismissed.	13
30670	dismisses	9
48980	dismissing	5
27357	dismissing.	3
38401	dispatch	18
38424	dispatchCloseOptionsMenu()	9
37828	dispatchConfigurationChanged(Configuration	8
37874	dispatchCreateOptionsMenu(android.view.Menu	12
38618	dispatchDestroy()	9
46339	dispatchFreezeSelfOnly(container)	4
42377	dispatchHoverEvent(MotionEvent	8
38308	dispatchInvalidateOptionsMenu()	12
38205	dispatchKeyEvent(KeyEvent	9
43560	dispatchMenuItemSelected(MenuBuilder	8
38271	dispatchMenuOpened(int	8
39398	dispatchMenuVisibilityChanged(boolean	4
39546	dispatchOnCreate()	4
38536	dispatchOpenOptionsMenu()	8
37782	dispatchOptionsItemSelected(android.view.MenuItem	12
38527	dispatchPanelClosed(int	9
38512	dispatchPause()	8
43251	dispatchPopulateAccessibilityEvent(AccessibilityEvent	15
38407	dispatchPostCreate(Bundle	8
38045	dispatchPostResume()	8
37803	dispatchPrepareOptionsMenu(android.view.Menu	12
43787	dispatchPresenterUpdate(boolean	4
43471	dispatchPresenterUpdate(structureChanged)	4
38402	dispatchRestoreInstanceState(Bundle	13
46356	dispatchRestoreInstanceState(SparseArray<Parcelable>	4
44078	dispatchRestoreInstanceState(state)	4
38382	dispatchSaveInstanceState(Bundle	13
46289	dispatchSaveInstanceState(SparseArray<Parcelable>	4
43931	dispatchSaveInstanceState(outState)	4
38194	dispatchStop()	8
43829	dispatchSubMenuSelected(SubMenuBuilder	4
43780	dispatchSubMenuSelected(subMenu)	4
46200	dispatchThawSelfOnly(container)	4
38307	dispatchTitleChanged(CharSequence	8
38841	dispatchTitleChanged(title,0)	4
34900	dispatchTouchEvent()?	19
38133	dispatched	4
46036	dispatched.	4
37927	dispatching	16
39396	dispatching,parse	4
2164	display	162
61914	display"	5
54674	display")	6
37074	display.	24
4339	display.</string>	97
2387	display</string>	148
12047	display</string>-	1
35865	displayBalance(TextView	14
6	displayChart()	52
42640	displayFrame	8
46851	displayFrame.bottom	4
42514	displayFrame.height())	4
46992	displayFrame.top	4
27856	displayMode	8
27780	displayMode)	5
27863	displayMode){	6
32700	displayName	13
23293	displayReport()	8
46737	displayable	4
2754	displayed	202
38599	displayed,false	4
38752	displayed,if	4
48311	displayed,returns	4
643	displayed.	33
35201	displayed.</p>	9
63690	displayed/manipulated	1
35047	displayed:</p>	7
62048	displayed</p>	3
558	displaying	161
2551	displaying,creating	34
44355	displaying.	4
1137	displays	70
20998	dispon&#237	13
16350	disponibili	41
22771	disponibili</string>	6
11661	disponible	30
11547	disponible</string>	18
3296	disponibles	53
2662	disponibles</string>	21
6078	disponveis	23
4645	disponveis</string>	9
22967	disponvel</string>	10
12076	disponves	17
62332	disposable	5
25578	dispositiu.\n\nEsteu	6
3911	dispositivo	25
21930	disse	6
15153	disse</string>	17
59516	disso</string>	11
46965	distance	4
46594	distanceToBottom	4
30227	distanceToScroll	8
46527	distanceToTop	4
38633	distinct	4
15487	distinta	21
15930	distintas	45
26147	distintos	7
1369	distributed	352
43451	distributing	4
16549	dit	26
62759	ditampilkan.</string>	3
10569	ditampilkan</string>	14
29638	ditemukan.	5
62730	ditemukan</string>	3
51533	diter	4
12006	ditetapkan	3
10945	ditingkatkan	5
21777	ditt	10
21746	ditt</string>	6
22622	ditumpuk	7
2737	dive	90
16473	diversa	49
55682	diversas	2
28040	diverse	13
20392	diversos	10
43976	divide	8
51188	divide(@NonNull	4
26547	divide(Money	13
26251	divide(int	13
26396	divide(moneyDiv)	10
36096	divided	10
53595	dividend	3
37158	divider	17
46760	divider)	4
47055	divider.getIntrinsicHeight()	4
47056	divider.getIntrinsicWidth()	4
46666	dividerHeight	4
44072	dividerWidth	4
26006	dividere</string>	3
45919	dividers	7
37636	dividers.	11
10316	dividir</string>	14
15648	divisa	21
2312	divisa</string>	19
11786	diviser</string>	3
10587	divises	18
12086	divises</string>	12
12123	division	13
53606	division.	3
12200	divisions	3
4186	diviso</string>	6
51195	divisor	7
26529	divisor){	13
17602	dla	27
15320	dlar	10
22252	dn	5
55629	dn</item>	2
17790	dni</item>	18
2433	do	338
52329	do.	5
2404	do:	27
17421	do:</string>	23
17366	do:\n</string>	16
13929	doAddModels(@NonNull	8
13717	doAddModels(modelList,updateMethod)	4
6484	doInBackground(ExportParams...	47
2696	doInBackground(InputStream...	22
19088	doInBackground(Long...	18
51081	doInBackground(String...	11
3888	doInBackground(Uri...	20
23135	doInBackground(Void...	6
47502	doRefreshProgress(android.R.id.progress,mProgress,false,false)	4
46729	doRefreshProgress(android.R.id.secondaryProgress,mSecondaryProgress,false,false)	4
47061	doRefreshProgress(id,progress,fromUser,true)	4
47106	doRefreshProgress(int	4
47016	doRefreshProgress(mId,mProgress,mFromUser,true)	4
50578	doShare(Intent	4
47090	doWork()	4
8180	dobbel	35
21734	dobbeltoppfringstransaksjoner</string>	10
15658	doble	25
4194	dobradas</string>	6
51435	dobradas\n	8
6881	doc	60
6670	doc)	26
12373	doc){	12
6673	doc,	72
51201	doc,@NonNull	6
6694	doc,Element	46
12392	doc,String	18
12122	doc.createElement("ACCTID")	13
59092	doc.createElement("ACCTTPYE")	2
12785	doc.createElement("ACCTTYPE")	10
12848	doc.createElement("BALAMT")	12
12773	doc.createElement("BANKACCTFROM")	10
13014	doc.createElement("BANKACCTTO")	8
12548	doc.createElement("BANKID")	12
59189	doc.createElement("BANKMSGSRSV1")	3
12285	doc.createElement("BANKTRANLIST")	8
7191	doc.createElement("CURDEF")	13
12130	doc.createElement("DTASOF")	8
12527	doc.createElement("DTEND")	8
54842	doc.createElement("DTPOSTED")	8
12208	doc.createElement("DTSTART")	8
54843	doc.createElement("DTUSER")	6
23917	doc.createElement("FITID")	4
12185	doc.createElement("LEDGERBAL")	8
59072	doc.createElement("MEMO")	5
58997	doc.createElement("NAME")	3
12344	doc.createElement("STMTRS")	8
12622	doc.createElement("STMTTRN")	9
59120	doc.createElement("STMTTRNRS")	3
23601	doc.createElement("TRNAMT")	8
12391	doc.createElement("TRNTYPE")	9
59169	doc.createElement("TRNUID")	6
20422	doc.createElement(GncXmlHelper.TAG_ACCOUNT)	13
21133	doc.createElement(GncXmlHelper.TAG_ACCT_DESCRIPTION)	9
20861	doc.createElement(GncXmlHelper.TAG_ACCT_ID)	11
20398	doc.createElement(GncXmlHelper.TAG_ACT_SLOTS)	13
20459	doc.createElement(GncXmlHelper.TAG_COMMODITY)	9
21095	doc.createElement(GncXmlHelper.TAG_COMMODITY_ID)	11
20214	doc.createElement(GncXmlHelper.TAG_COMMODITY_SCU)	9
20545	doc.createElement(GncXmlHelper.TAG_COMMODITY_SPACE)	11
20328	doc.createElement(GncXmlHelper.TAG_DATE)	9
21021	doc.createElement(GncXmlHelper.TAG_DATE_ENTERED)	9
20865	doc.createElement(GncXmlHelper.TAG_DATE_POSTED)	9
20503	doc.createElement(GncXmlHelper.TAG_NAME)	13
20759	doc.createElement(GncXmlHelper.TAG_PARENT_UID)	11
21135	doc.createElement(GncXmlHelper.TAG_RECONCILED_STATE)	9
20380	doc.createElement(GncXmlHelper.TAG_RECURRENCE_PERIOD)	11
35643	doc.createElement(GncXmlHelper.TAG_SLOT)	4
35784	doc.createElement(GncXmlHelper.TAG_SLOT_KEY)	4
35677	doc.createElement(GncXmlHelper.TAG_SLOT_VALUE)	4
20797	doc.createElement(GncXmlHelper.TAG_SPLIT_ACCOUNT)	9
20173	doc.createElement(GncXmlHelper.TAG_SPLIT_ID)	13
20475	doc.createElement(GncXmlHelper.TAG_SPLIT_MEMO)	9
20536	doc.createElement(GncXmlHelper.TAG_SPLIT_QUANTITY)	9
20338	doc.createElement(GncXmlHelper.TAG_SPLIT_VALUE)	9
20766	doc.createElement(GncXmlHelper.TAG_TRANSACTION)	11
20675	doc.createElement(GncXmlHelper.TAG_TRN_DESCRIPTION)	9
20999	doc.createElement(GncXmlHelper.TAG_TRN_SLOTS)	10
20864	doc.createElement(GncXmlHelper.TAG_TRN_SPLIT)	9
20264	doc.createElement(GncXmlHelper.TAG_TRN_SPLITS)	10
20115	doc.createElement(GncXmlHelper.TAG_TRX_CURRENCY)	11
35838	doc.createElement(GncXmlHelper.TAG_TRX_DESCRIPTION)	4
21100	doc.createElement(GncXmlHelper.TAG_TRX_ID)	15
35765	doc.createElement(GncXmlHelper.TAG_TRX_SPLIT)	4
35876	doc.createElement(GncXmlHelper.TAG_TRX_SPLITS)	4
21055	doc.createElement(GncXmlHelper.TAG_TYPE)	11
35620	doc.createElement(OfxHelper.TAG_ACCOUNT_ID)	8
30886	doc.createElement(OfxHelper.TAG_ACCOUNT_TYPE)	12
63362	doc.createElement(OfxHelper.TAG_BALANCE_AMOUNT)	5
63305	doc.createElement(OfxHelper.TAG_BANK_ACCOUNT_FROM)	5
35695	doc.createElement(OfxHelper.TAG_BANK_ACCOUNT_TO)	7
35785	doc.createElement(OfxHelper.TAG_BANK_ID)	7
63303	doc.createElement(OfxHelper.TAG_BANK_MESSAGES_V1)	2
21187	doc.createElement(OfxHelper.TAG_BANK_TRANSACTION_LIST)	11
36508	doc.createElement(OfxHelper.TAG_CURRENCY_DEF)	16
63353	doc.createElement(OfxHelper.TAG_DATE_AS_OF)	5
63314	doc.createElement(OfxHelper.TAG_DATE_END)	5
35672	doc.createElement(OfxHelper.TAG_DATE_POSTED)	4
63304	doc.createElement(OfxHelper.TAG_DATE_START)	5
35801	doc.createElement(OfxHelper.TAG_DATE_USER)	4
63320	doc.createElement(OfxHelper.TAG_LEDGER_BALANCE)	5
35726	doc.createElement(OfxHelper.TAG_MEMO)	6
35741	doc.createElement(OfxHelper.TAG_NAME)	7
35600	doc.createElement(OfxHelper.TAG_STATEMENT_TRANSACTION)	4
63340	doc.createElement(OfxHelper.TAG_STATEMENT_TRANSACTIONS)	5
63344	doc.createElement(OfxHelper.TAG_STATEMENT_TRANSACTION_RESPONSE)	2
35719	doc.createElement(OfxHelper.TAG_TRANSACTION_AMOUNT)	4
35753	doc.createElement(OfxHelper.TAG_TRANSACTION_FITID)	5
35659	doc.createElement(OfxHelper.TAG_TRANSACTION_TYPE)	4
35723	doc.createElement(OfxHelper.TAG_TRANSACTION_UID)	4
32475	doc.createElement(TAG_SLOT)	6
32148	doc.createElement(TAG_SLOT_KEY)	6
32371	doc.createElement(TAG_SLOT_VALUE)	6
7314	doc.getElementsByTagName("OFX").item(0)	14
7072	docBuilder	21
6615	docBuilder.newDocument()	20
6549	docFactory	36
7232	docFactory.newDocumentBuilder()	23
31011	docFactory.setNamespaceAware(true)	7
12137	docelowe	32
17637	docelowe</string>	15
7094	document	72
48241	document")	4
36497	document,Writer	8
6582	document.appendChild(pi)	17
6936	document.appendChild(root)	17
20780	document.appendChild(rootElement)	6
6924	document.createElement("OFX")	17
20709	document.createElement(GncXmlHelper.TAG_BOOK)	4
20460	document.createElement(GncXmlHelper.TAG_BOOK_ID)	4
20765	document.createElement(GncXmlHelper.TAG_COUNT_DATA)	4
21098	document.createElement(GncXmlHelper.TAG_ROOT)	4
36493	document.createProcessingInstruction("OFX","OFXHEADER=\"200\"	5
6769	document.createProcessingInstruction("OFX",OfxExporter.OFX_HEADER)	8
54814	document.createProcessingInstruction("OFX",OfxFormatter.OFX_HEADER)	5
35590	document.createProcessingInstruction("OFX",OfxHelper.OFX_HEADER)	5
21641	document.getElementsByTagName("OFX").item(0)	13
20200	document.setXmlStandalone(true)	4
20472	document.setXmlVersion("1.0")	4
20622	documentBuilder	9
21062	documentBuilder.newDocument()	9
25089	documentation	28
63355	documents	6
13041	dodasz	19
17098	doen	3
16718	doen</string>	3
3939	does	284
1852	doesn't	89
6000	doing	39
45423	doing.	4
37895	doing.</strong>	4
55711	dojde	5
22103	dokonen	7
14996	dollar</item>	21
56392	dollars	4
22401	dolo	9
15507	dominicano</item>	18
17276	domylna	11
17278	domylne	21
17234	domylnie,KREDYT	9
5348	don't	104
56039	donde	2
13894	done	124
50529	done,stop	5
3844	done.	27
50799	done.</p>	8
16082	donn&#233	25
10640	donnes	31
10267	donnes.	6
16611	door	3
17182	doorgaan?</string>	6
16316	dopo	25
22102	doppelte	8
29374	doppia	4
16320	doppia</string>	31
51479	doppia\n	7
28865	dos	21
17395	dostpne	14
17785	dostpnych	13
33506	dot	16
17325	dotknij	11
1497	double	240
34784	double-entries	4
5584	double-entry	152
17587	double-entry</string>	22
2795	double-tapped	9
12338	doubleAccountId	6
12575	doubleAccountUID	19
18550	doubleAccountUID.length()	5
21502	doubleDefaultAccountId	19
6839	doubleEntryAccountUID	22
26475	doubleEntryAccountUID)	5
26519	doubleEntryAccountUID.equals(accountUID)){	10
19349	doubleEntryAccountUID.equals(getAccountUID(accountId))){	3
12880	doubleEntryActive	17
26991	double[]	4
27012	double[diff	4
33792	double_account_uid	6
11419	doubles	25
19001	dow	6
19330	dow)	8
477	down	38
46967	down's	4
45982	down.	4
18316	downgrade	17
31264	downgrades	9
60777	downloaded	3
10526	dpenses	5
38048	dpi()	4
11069	dplacer	10
46610	dr)	4
47420	dr.getBounds()	4
16509	dragen</string>	3
16510	dram</item>	9
47531	draw	4
45889	draw(Canvas	5
46864	drawDividersHorizontal(Canvas	5
46598	drawDividersHorizontal(canvas)	4
46894	drawDividersVertical(Canvas	5
47377	drawDividersVertical(canvas)	4
46948	drawHorizontalDivider(Canvas	4
47123	drawHorizontalDivider(canvas,bottom)	5
47186	drawHorizontalDivider(canvas,top)	4
27240	drawPalette(int[]	3
47229	drawVerticalDivider(Canvas	4
47258	drawVerticalDivider(canvas,left)	4
47371	drawVerticalDivider(canvas,right)	5
27454	drawable	50
46647	drawable)	13
47240	drawable).getBitmap()	4
47389	drawable,boolean	4
49726	drawable,int	5
51043	drawable,or	7
46644	drawable.	17
50768	drawable.getConstantState()	5
50515	drawable.setVisible(false,false)	5
50396	drawable.setVisible(true,false)	5
47188	drawableHeight	4
47214	drawableHeight)	4
51076	drawableId	5
50612	drawableId)	6
51060	drawableId.length()	5
21229	drawableResource	9
47157	drawableStateChanged()	4
50994	drawableUri	5
46606	drawables	16
47174	drawables.	4
4686	drawer	159
51631	drawer"	5
20462	drawer,to	13
24917	drawerView)	15
18258	drawing	28
38362	drawn	4
59213	drcken	4
28122	driveContents	12
28245	driveContents.getOutputStream()	13
28169	driveContentsResult	11
28144	driveContentsResult.getDriveContents()	8
28154	driveFileResult	12
28163	driveFileResult.getDriveFile().getDriveId())	8
34755	droid	2
33582	drop	27
49827	drop-down	5
49853	drop-down's	5
50388	drop-drown	5
24979	dropAllDatabaseTables(SQLiteDatabase	7
28349	dropAllDatabaseTables(db)	14
47001	dropDownList	4
47276	dropDownList.mListSelectionHidden	4
49682	dropDownPadding	5
49799	dropDownPadding.left	5
49715	dropDownPadding.right	5
46539	dropDownView	4
9378	dropbox	2
9070	dropboxAppKey	26
9839	dropboxAppKey,dropboxAppSecret)	11
9426	dropboxAppSecret	21
37073	dropdown	18
50146	dropdown.	5
47627	dropdowns,but	4
49372	dropping	4
17717	drugie</string>	13
11612	dsactiv</string>	12
16493	dsactiver	5
6737	dst	56
6904	dst)	52
51450	dst){	6
7022	dst.getAbsolutePath(),	19
33447	dst.getPath().split("(?=\\.[^\\.]+$)")	16
14023	dst.mkdir()	3
51554	dst.mkdirs()	6
31318	dstAccountId	15
35486	dstAccountId)	4
35499	dstAccountId){	4
24328	dstAccountUID	19
24542	dstAccountUID)	6
24199	dstAccountUID){	6
14534	dstDir	6
55335	dstDir)	5
14637	dstDir){	6
14353	dstDir.getPath()	6
63830	dstDir.getPath())	3
56760	dstFile	6
56797	dstFiles	12
56832	dstFiles.add(dst)	12
22649	dtails	7
10777	dtails</string>	17
12999	dtasof	11
12425	dtasof.appendChild(doc.createTextNode(formattedCurrentTimeString))	11
12504	dtend	11
12523	dtend.appendChild(doc.createTextNode(formattedCurrentTimeString))	11
12110	dtstart	11
12974	dtstart.appendChild(doc.createTextNode(formattedCurrentTimeString))	11
4329	du	135
6222	duas	6
16609	dubbel	21
16906	dubbel-boekhouden	7
56066	dubbla	2
26029	due	52
59946	due,only	3
55334	due,{@code	3
50844	due.</p>	4
50729	due</p>	9
17593	duga</string>	8
17154	duikt,\nlaten	3
31209	dummy	17
59636	dummyAccountTrns	7
11464	dun	7
20892	dupla	13
20409	dupla</string>	24
34170	duplicate	12
52339	duplicate.setTime(System.currentTimeMillis())	5
49308	duplicates.	4
31323	duplicating	5
19000	duplication	3
21816	duration	26
28212	duration)	22
43161	duration,and	4
41162	duration,as	8
41210	duration,at	5
42698	duration,including	4
41111	duration.	7
42118	duration:	4
1378	during	146
12044	dutilisateur/mot	5
11928	dveloppeurs	11
11672	dveloppeurs.	7
47088	dw	4
56277	dyker	2
47567	dynamic	4
32311	dynamically	7
10446	dysfonctionnement	7
11771	dysfonctionnements	11
5162	e	143
2793	e)	310
30021	e).getVals().length	6
28987	e){	45
6749	e,	29
696	e,int	28
22440	e-mail</string>	5
22145	e-mailovou	5
21916	e-post</string>	12
55979	e-postadressen	2
1751	e.g.	68
25565	e.getLocalizedMessage()	9
5994	e.getMessage())	69
34184	e.getMessage()))	5
25525	e.getMessage(),	2
33927	e.getMessage(),Toast.LENGTH_LONG).show()	8
6978	e.getVal()	24
2906	e.printStackTrace()	173
50018	e2	5
16067	e</string>	8
5802	eXchange	43
35504	eXchange")	5
35552	eXchange"),	4
28047	eXchange)	22
29905	eXchange)-	9
51954	eXchange)-format	6
29849	eXchange).</string>	16
51452	e\n	6
169	each	184
41854	earlier	5
1289	earliest	53
34410	earliest.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime()	11
34380	earliest.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime()	11
34351	earliest.dayOfYear().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime()	6
34376	earliest.dayOfYear().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime()	6
34393	earliest.plusMonths(1)	9
34354	earliest.plusMonths(3)	5
34373	earliest.plusYears(1)	6
34215	earliest.toString("	17
2673	earliest.toString("dd	28
34405	earliest.withMonthOfYear(quarter	5
1893	earliestTransactionTime	15
8589	earliestTransactionTime,	9
4184	easier	51
47693	easiest	4
25121	easily	17
45281	eats	4
5465	ebenfalls	9
11785	ecr	11
16458	ed	27
37554	edge	4
43939	edges	4
43646	edges.	4
18440	edit	83
20688	edit&#225	11
63547	edit)	1
63101	edit.apply()	3
63193	edit.clear()	3
63116	edit.putBoolean(getString(R.string.owncloud_sync),true)	3
63089	edit.putString(getString(R.string.key_owncloud_dir),mOC_dir)	3
63112	edit.putString(getString(R.string.key_owncloud_password),mOC_password)	3
63128	edit.putString(getString(R.string.key_owncloud_server),mOC_server)	3
63160	edit.putString(getString(R.string.key_owncloud_username),mOC_username)	3
1392	editAccountIntent	25
30790	editAccountIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,accountId)	6
30933	editAccountIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,mAccountId)	6
13107	editAccountIntent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.ACCOUNT.name())	3
241	editAccountIntent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.ACCOUNT_FORM.name())	8
63289	editAccountIntent.putExtra(UxArgument.SELECTED_ACCOUNT_ID,accountId)	4
63403	editAccountIntent.putExtra(UxArgument.SELECTED_ACCOUNT_ID,mAccountId)	4
1466	editAccountIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,mAccountUID)	8
59712	editAccountIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,mAccountsDbAdapter.getAccountUID(accountId))	3
13759	editAccountIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,mAccountsDbAdapter.getUID(accountId))	9
509	editAccountIntent.setAction(Intent.ACTION_INSERT_OR_EDIT)	25
53779	editBudget(budgetId)	2
54063	editBudget(long	2
35007	editText	7
56519	editText)	13
56558	editText.getText().toString()	13
56568	editText.setError("Invalid	13
56526	editText.setSelection(result.toPlainString().length())	4
56485	editText.setSelection(resultString.length())	9
56634	editText.setText(Double.toString(expression.evaluate()))	5
56475	editText.setText(resultString)	9
9598	editTransaction	9
1244	editTransaction(){	6
13620	editTransaction(String	8
19130	editTransaction(long	13
30633	editTransaction(transactionId)	6
52812	editable	17
339	editable)	27
62311	editable.clear()	4
56614	editable.delete(deleteStart,end)	15
26747	editable.delete(start	13
26838	editable.delete(start,end)	14
26621	editable.insert(start,Character.toString((char)	16
52925	editable.insert(start,LOCALE_DECIMAL_SEPARATOR)	4
52750	editable.insert(start,mDecimalSeparator)	7
759	editable.toString()	5
1152	edited	58
30720	edited.	7
28578	editedAccount	16
28413	editedAccount.getParentUID()	15
13344	editedAccountName	33
62987	editedSplit	4
59370	editedTransaction	6
62819	editedTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)	4
62870	editedTransaction.getSplits(TRANSFER_ACCOUNT_UID).get(0)	5
3962	editing	166
47628	editing,etc.	4
51367	editing,stop	4
32924	editingAccountShouldNotDeleteTemplateSplits(){	7
10220	editingAccountShouldNotDeleteTransactions(){	30
20079	editingSplit_shouldNotSetAmountToZero(){	15
63056	editingTransferAccount_shouldKeepSplitAmountsConsistent()	5
4531	editor	161
30215	editor"	8
31005	editor)	20
28928	editor,we	10
50433	editor,with	5
28620	editor.	7
8787	editor.apply()	20
4851	editor.commit()	82
34020	editor.putBoolean(UxArgument.ENABLED_PASSCODE,(Boolean)	14
24051	editor.putBoolean(UxArgument.ENABLED_PASSCODE,false)	11
57567	editor.putBoolean(UxArgument.ENABLED_PASSCODE,flag)	5
57617	editor.putBoolean(UxArgument.ENABLED_PASSCODE,true)	5
9961	editor.putBoolean(UxArgument.HIDE_ACCOUNT_BALANCE_IN_WIDGET	4
8988	editor.putBoolean(UxArgument.SHOULD_DISPLAY_BALANCE	4
54717	editor.putBoolean(context.getString(R.string.key_first_run),false)	11
13741	editor.putBoolean(getActivity().getString(R.string.key_use_double_entry),enabled)	12
25450	editor.putBoolean(getString(R.string.key_enable_crashlytics),false)	6
25008	editor.putBoolean(getString(R.string.key_enable_crashlytics),true)	6
25369	editor.putBoolean(getString(R.string.key_first_run),false)	7
13218	editor.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export),false).commit()	4
13397	editor.putBoolean(mAcccountsActivity.getString(R.string.key_delete_transactions_after_export),true)	7
35175	editor.putBoolean(mAccountsActivity.getString(R.string.key_first_run),false).apply()	2
58601	editor.putBoolean(mAccountsActivity.getString(R.string.key_owncloud_sync),false).apply()	3
13513	editor.putBoolean(mTransactionsActivity.getString(R.string.key_use_double_entry),enabled)	5
57376	editor.putInt(AccountsActivity.LAST_OPEN_TAB_INDEX,AccountsActivity.INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT)	3
57374	editor.putInt(context.getString(R.string.key_previous_minor_version),currentMinor)	2
13302	editor.putInt(getString(R.string.key_previous_minor_version),currentMinor)	6
58655	editor.putInt(mAccountsActivity.getString(R.string.key_last_export_destination),0)	3
56900	editor.putLong(TransactionsListFragment.SELECTED_ACCOUNT_ID	6
63453	editor.putLong(UxArgument.SELECTED_ACCOUNT_ID	4
23838	editor.putString(UxArgument.PASSCODE,data.getStringExtra(UxArgument.PASSCODE))	14
34187	editor.putString(UxArgument.PASSCODE,newValue.toString())	5
10040	editor.putString(UxArgument.SELECTED_ACCOUNT_UID	13
5511	editor.putString(getActivity().getString(R.string.key_default_transaction_type),"CREDIT")	12
6172	editor.putString(getActivity().getString(R.string.key_default_transaction_type),"DEBIT")	12
13710	editor.putString(getActivity().getString(R.string.key_default_transaction_type),type.name())	9
64155	editor.putString(getString(R.string.key_build_version),version)	2
13751	editor.putString(mTransactionsActivity.getString(R.string.key_default_transaction_type),type.name())	5
54655	editor.remove(TransactionsListFragment.SELECTED_ACCOUNT_ID	11
63287	editor.remove(UxArgument.SELECTED_ACCOUNT_ID	6
9565	editor.remove(UxArgument.SELECTED_ACCOUNT_UID	12
35224	editor.remove(mAccountsActivity.getString(R.string.key_first_run)).commit()	2
31112	edits	29
34906	edittext	24
56612	edittext.focusSearch(View.FOCUS_DOWN).requestFocus()	11
52799	edittext.getScrollX()	8
52768	edittext.getSelectionEnd()	16
52908	edittext.getSelectionStart()	16
52943	edittext.getText()	14
52833	edittext.onTouchEvent(event)	13
52880	edittext.setInputType(edittext.getInputType()	15
52874	edittext.setOnClickListener(new	13
52923	edittext.setOnFocusChangeListener(new	13
34869	edittext.setOnLongClickListener(new	13
56590	edittext.setOnTouchListener(new	8
52729	edittext.setOnTouchListener(otl)	8
52724	edittext.setSelection(offset	8
52892	edittext.setSelection(offset)	8
5999	editvel</string>	12
8444	een	67
16904	eerst	9
22344	efectivo</string>	12
21142	efectuado	29
21073	efectuar	35
19176	effect	35
49017	effect.	4
61994	effecting	3
59825	effectively	3
55684	effettuare	2
20576	efficient	20
10601	efter	10
56344	efter</string>	2
15256	egen	32
15717	egipcia</item>	14
62398	egpcia</item>	6
12307	egy	9
16682	eigen	20
4220	eigene	19
5001	ein	67
4501	ein,um	22
30176	ein</string>	13
5996	eine	54
5393	einem	39
4240	einen	71
22106	eingeben</string>	13
59279	einholen</string>	4
21979	einrichten</string>	8
59291	einrichten\n\nZum	4
994	either	249
3484	ejecuci&#243	7
15512	ejecucin	9
12684	ekle</string>	11
21651	ekporteringsplan</string>	10
21204	eksisterende	14
10705	ekspor	12
11723	ekspor.	7
10827	ekspor.</string>	7
11255	ekspor</string>	12
11687	ekspor\n	5
17313	eksporcie</string>	19
14925	eksport	42
7908	eksport.	53
3798	eksport</string>	67
34779	eksport\n	7
21889	eksporter	12
8660	eksportere	76
14908	eksportere</string>	21
21399	eksporterer	18
21285	eksporterer.</string>	10
21395	eksporteres	36
8204	eksportering	45
7678	eksportering.</string>	20
7849	eksportering</string>	33
14937	eksporteringer</string>	19
8194	eksportert	36
7387	eksportert.	29
62842	eksportert:</string>	3
11649	eksporterte	70
15130	eksportformat</string>	23
22936	eksportowa	6
17792	eksportowane	17
17662	eksportowania	21
22997	eksportowanych	8
22998	eksportu,zostan	6
17715	eksportu.</string>	13
17538	eksportu</string>	25
17844	eksportujesz	19
17685	eksportw	23
17747	eksporty</string>	15
2775	el	90
40591	elapse	4
39370	elapsed	17
42038	elapsed,interpolated	4
41907	elapsed/eased	4
43234	elapsed/interpolated	4
39468	elapses.	12
52014	elastyczny	9
12656	electr&#243	28
22366	electrnica	7
15708	electrnico	9
12313	element	20
43769	element,we	4
47508	element.	4
16485	elementi	15
1635	elements	85
37762	elements.	4
24074	eligible	24
27938	eliminaci&#243	9
3053	eliminadas.	12
27968	eliminar	10
22635	eliminare	16
27917	eliminarli	10
10991	eliminarn	8
22411	eliminat	7
33356	eliminata	2
16174	eliminata</string>	13
16438	eliminate	64
3200	eliminate!</string>	25
52273	eliminated	10
22816	eliminati	6
16233	eliminati</string>	15
16275	eliminato</string>	19
28050	eliminazione	7
16222	eliminazione</string>	19
11607	eller	37
12834	els	24
1447	else	386
47619	else.	4
4769	em	48
54983	em"</string>	7
11914	email	149
10847	email</string>	122
59557	emailSetting	4
59560	emailSetting.trim().isEmpty()){	4
16602	emailaddress	21
16873	emailadres	21
17144	emailadres</string>	21
36652	emailing	8
37692	embedded	8
40518	embodiment	4
55922	emot	2
56341	emot</string>	2
2915	empezar	9
22285	empfangen	21
22487	empfehlen</string>	5
5973	empilhada	13
25819	empties	17
11473	empty	102
51161	empty")	6
46199	empty)	9
51170	empty,loop	7
50021	empty,or	5
46380	empty,the	7
42053	empty.	17
50516	empty/non-empty	5
31875	emptyString_shouldFailWithException()	3
46148	emptyView	7
46217	emptyView)	7
61882	emptyView.setVisibility(getAdapter().getItemCount()	3
57311	emulators	9
2776	en	239
23792	en:\n</string>	19
5600	en_GB	6
2896	en_UK	14
4980	enable	84
39739	enable)	21
32022	enableAllControls(boolean	14
31644	enableAllControls(false)	7
57701	enableAnimation()	2
28711	enableAnimation(){	3
3011	enableControls(boolean	12
2658	enableControls(false)	12
62253	enableCrashlytics	3
59088	enableForeignKey(boolean	8
31791	enableHapticFeedback(boolean	15
31113	enableTransferAccount)	7
4261	enabled	121
32651	enabled"	14
4215	enabled)	50
13436	enabled){	54
34864	enabled,<code>false</code>	18
48400	enabled,else	4
31584	enabled,so	11
33952	enabled,{@code	10
31703	enabled.	24
28880	enabled.")	13
31710	enabled:	14
54311	enabledActions	2
4264	enables	43
23774	enabling	16
33731	enalbed	9
12309	encabezado	5
40342	encapsulates.	4
3034	encargo</string>	9
58440	encoded	6
12339	encoding	15
18567	encoding="UTF-8"?>	7
8424	encoding="utf-8"	38
1670	encoding="utf-8"?>	260
5801	encontrada.	22
56451	encontradas	2
21124	encontrado	22
4639	encontrado</string>	24
2573	encuentra	11
108	end	216
40255	end()	12
42107	end()'d	4
40942	end()).	4
1963	end)	43
19053	end){	6
2059	end,ReportsActivity.RangeInterval	4
40847	end,then	4
40724	end.	13
24981	end.toString("dd	4
42212	endAnimation()	5
964	endDate	74
6526	endDate)	28
56534	endDate,	3
57345	endDate.	3
32400	endDate.getTime()	6
57371	endDate.setTime(endDate.getTime()	3
1415	endDate.toDateTimeAtCurrentTime().getMillis()	6
2687	endDate.toString("dd	17
2550	endDate.withDayOfMonth(1)	7
64139	endDateString	3
3435	endDocument()	77
633	endElement(String	105
25440	endPeriod	4
46849	endPosition	4
47442	endPosition,	4
21642	endT	3
2655	endTim	24
3808	endTime	106
19572	endTime)	28
19338	endTime.parse(eventRecurrence.until)	11
59856	endTime.toMillis(false)	2
8475	endTimeInTheFuture_shouldExecuteOnlyUntilPresent(){	12
9234	endTimestamp	37
3421	endTimestamp)	21
9566	endTimestamp){	12
52067	endTransaction()	3
41136	endValue	8
40679	endValue)	8
12085	endast	9
40563	ended	10
40376	ended).	4
64291	ended-	1
40666	ended.	11
20905	endere&#231	11
22963	endereo	11
40757	ending	16
41861	endingAnims	4
42217	endingAnims.add(anim)	4
41895	endingAnims.clear()	4
42254	endingAnims.get(i).endAnimation()	4
42008	endingAnims.remove(anim)	4
42282	endingAnims.size()	4
8445	endre	35
14872	endres</string>	22
22892	endret!</string>	10
11569	endringer	19
40830	ends	12
41037	ends,then	4
41063	ends,whether	4
40751	ends.	13
19481	endtime	16
20486	endtime,and	3
16645	ene	26
34904	enforce	10
57508	enforces	4
42131	engine	4
54276	enhanced	4
27704	enhances	6
21669	enheten	9
30186	enkel	15
52011	enklere	4
14931	enn	48
40825	enough	23
49876	enoughToFilter()	5
16157	enregistrer	5
15443	ense</item>	8
471	ensure	46
50568	ensureImeVisible(AutoCompleteTextView	5
50228	ensureImeVisible(mQueryTextView,true)	5
50484	ensureImeVisible(this,true)	5
39890	ensureTabsExist()	4
14425	ensured	2
42124	ensures	12
41821	entails	4
14945	enten	34
131	enter	95
50224	enter,and	5
49830	enter,search	5
26895	entered	82
51335	entered,disable	3
4345	entered,time	9
57534	entered,{@code	3
33997	enteredAmount	8
33870	enteredAmount.toPlainString()	8
20448	entering	21
44612	entering/exiting.	4
39196	enters	9
22319	enthalten!</string>	11
59195	enthlt	4
38797	entire	20
44413	entirely	4
38756	entirely.	4
30008	entities	13
16036	entr&#233	18
15462	entrada	32
15453	entrada</string>	22
51530	entrada\n	6
3933	entradas	30
29497	entrades!!</string>	5
11519	entre	20
10163	entre</string>	17
11722	entrer	10
16004	entres	16
12787	entri	5
2651	entries	173
24665	entries,colors	7
20760	entries.	8
60342	entries.get(i).getVal()	3
60388	entries.size()	3
1500	entry	222
36499	entry(key:	4
54778	entry)	2
25421	entry),then	17
35811	entry,all	7
54453	entry,use	5
11676	entry.	10
29993	entry.getData().toString()	11
32572	entry.getKey()	7
32106	entry.getNegativeSum()	14
32139	entry.getPositiveSum()	14
30134	entry.getVal()	12
30112	entry.getVals()[	7
56307	entry.getVals()[h.getStackIndex()]	4
30094	entry.getVals()[index]	7
32660	entry.getValue()	9
14178	entry</p>	7
57112	entryValues	7
4735	entscheiden	19
4954	entweder	20
2123	enum	155
48638	enum,values	4
48667	enum:	4
21141	enviadas	19
2306	enviar	58
20936	envio	21
36578	environment	8
49385	environment.	4
11092	envoyer	11
938	epoch	17
52453	epochZero	5
6179	equal	27
33438	equal,<code>false</code>	10
36351	equal,{@code	4
62872	equal.	4
33320	equality	9
52547	equals	7
51197	equals(@Nullable	4
26236	equals(Object	26
20599	equipamento	16
21959	equityBalance	6
62814	equivalence	4
5872	equivalent	25
62816	equivalent,but	4
62909	equivalent,{@code	4
55778	equivalent.	3
40778	equivalents	8
42287	equivalents:	4
7810	er	105
23748	er</string>	10
6257	erfolgreich	40
22036	erfolgreich</string>	15
25590	erforderlich</string>	9
5663	erm&#246	25
62534	erneut</string>	5
23946	err_msg	21
31810	err_msg,	5
29194	errata.	8
33317	errato,riprova</string>	6
29270	errato,ritentare</string>	8
22032	errechnet</string>	8
11966	erreur	11
21039	erro	24
3397	error	183
709	error",parsePosition.getErrorIndex())	6
14962	error,the	8
48277	error.	4
16137	errore	23
3347	errores	32
2234	errors	15
11486	erros	28
5255	erros</string>	18
4487	ersetzen	6
28104	erstatte	6
5873	erstellen	44
5721	erstellen</string>	57
4523	erstellende	37
5501	erstellt.\n\nWenn	6
16945	ervoor	5
2782	es	92
23606	es!</string>	5
21035	es)	11
16017	es.	21
16010	es</string>	39
20932	es?</string>	11
20947	es?n\nEsta	11
20891	es\n	10
2279	es_LG	5
20485	escolher	30
58518	escribir	4
22171	escriptori</string>	12
12693	escritorio	5
29792	escritorio.</string>	17
15573	escritorio</string>	51
27988	escritorio\n	12
22640	esecuzione	6
8542	esiste	31
27929	esistente.\n\n	10
28051	esistenti,occorre	10
23400	espace	5
4802	especfico	6
62469	especial	6
28679	especial</item>	10
55574	especially	2
5934	especificar	6
25850	especificas	7
15879	especifique	21
16418	esporta	37
22501	esporta.</string>	13
16432	esporta</string>	12
16363	esportare	39
16463	esportare</string>	32
27930	esportarle	19
16235	esportata	19
16237	esportate	43
22709	esportate!</string>	17
16365	esportate</string>	22
16220	esportati.	20
12384	esportato	28
22791	esportazione	11
16182	esportazione.	39
64100	esportazione:</string>	2
16431	esportazione</string>	41
26040	esportazioni\n	5
28638	espresso	9
5488	essa	39
5814	essas	6
20742	essentially	5
16197	essere	24
6302	est	56
2564	est&#225	31
21009	est&#227	11
2447	est&#233	7
10348	esta	115
35221	estabelecer	3
56340	establecer	2
15825	establecida</string>	21
56211	estar	2
15678	estas	24
2397	este	20
15790	esterlina</item>	16
26054	esterno</string>	3
5181	estiver	47
15583	estn	13
4271	esto	20
3094	estructura	46
27975	estructuras	10
4091	estrutura	41
7807	et	98
15653	et&#237	8
11611	et</string>	14
24385	etc	5
28500	etc)	16
36085	etc</p>	4
22835	etichette</string>	9
21674	etiketter</string>	16
55004	etiqueta	7
26142	etiquetas	7
3120	etiquetas</string>	40
22435	etiquetes</string>	7
22442	etnictn</string>	5
15766	etope</item>	14
12667	ett	15
7939	etter	53
21279	etter</string>	10
23040	etykiety</string>	15
59481	euro	7
59452	euroAccount	5
36411	euroCommodity	8
59379	euroSplit	4
62945	euroTransxns	4
44927	ev)	4
42207	evaluate	4
31501	evaluate()	29
35027	evaluate(){	22
40462	evaluate(float	8
56630	evaluateEditTextExpression((EditText)	11
56563	evaluateEditTextExpression(EditText	13
56617	evaluateEditTextExpression(edittext)	14
41537	evaluated	4
35001	evaluation	19
40735	evaluator	12
41578	evaluator)	7
41581	evaluator,	4
41180	evaluator,Object...	8
41443	evaluator,V...	4
41580	evaluator.	8
41588	evaluators	8
41878	evaulators	4
23375	even	90
27544	even-numbered	3
41546	evenly	8
43316	evenly.	4
3233	event	103
954	event)	101
47630	event,false	4
43018	event,int	16
9264	event.	26
46258	event.appendRecord(record)	4
59758	event.endDate	2
39249	event.getAction()	8
38967	event.getKeyCode()	4
43483	event.getKeyData(possibleChars)	4
44099	event.getMetaState()	4
49874	event.getRepeatCount()	5
42399	event.getText().add(cdesc)	8
47528	event.getX()	12
47182	event.getY()	4
64358	event.isLongPress())	1
59779	event.period	2
32458	event.setActionUID(actionUid)	4
32328	event.setActionUID(transactionUID)	11
53060	event.setAdvanceCreateDays(advanceCreate)	2
53227	event.setAdvanceNotifyDays(advanceNotify)	2
53118	event.setAutoCreate(autoCreate	5
52963	event.setAutoNotify(autoNotify	5
50524	event.setClassName(SearchView.class.getName())	5
45072	event.setClassName(getClass().getName())	4
45347	event.setContentDescription(mTitle)	4
46461	event.setCurrentItemIndex(getSelectedItemPosition())	4
46607	event.setCurrentItemIndex(mProgress)	4
19966	event.setEnabled(enabled)	12
45894	event.setEnabled(selectedView.isEnabled())	4
32409	event.setEndTime(endTime)	9
18842	event.setEndTime(endTime.toMillis(false))	2
18739	event.setEndTime(event.getStartTime()	2
32266	event.setEventUID(eventUid)	7
3100	event.setEventUID(recurringTransaction.getUID())	7
3829	event.setEventUID(transactionUID)	4
19650	event.setExecutionCount(execCount)	10
46149	event.setFromIndex(getFirstVisiblePosition())	4
46401	event.setItemCount(getCount())	4
47540	event.setItemCount(mMax)	4
3589	event.setLastRun(System.currentTimeMillis())	10
19928	event.setLastRun(lastRun)	13
19627	event.setNumberOfOccurences(numOccurrences)	5
45354	event.setPackageName(getContext().getPackageName())	4
19019	event.setPeriod(MONTH_MILLIS)	2
18658	event.setPeriod(YEAR_MILLIS)	2
19294	event.setPeriod(period)	15
53169	event.setRecurrence(mRecurrenceDbAdapter.getRecord(recurrenceUID))	2
45935	event.setScrollable(isScrollableForAccessibility())	4
45130	event.setSource(this)	4
19328	event.setStartTime(now.getTimeInMillis())	6
32441	event.setStartTime(startTime)	11
19395	event.setTag(tag)	12
53056	event.setTemplateAccountUID(templateActUID)	2
46482	event.setToIndex(getLastVisiblePosition())	4
19449	event.setTotalFrequency(numOccurrences)	8
60011	event.setTotalPlannedExecutionCount(numOccurrences)	3
59662	event.setUID(uid)	3
59749	event.startDate	2
39182	event:	4
52415	eventProcessed	8
18586	eventRecurrence	10
8804	eventRecurrence){	15
19885	eventRecurrence,	9
54045	eventRecurrence,Recurrence	2
53917	eventRecurrence,ScheduledAction	4
51762	eventRecurrence,ScheduledAction.ActionType	7
18699	eventRecurrence,ScheduledEvent	3
59786	eventRecurrence,ScheduledEvent.EventType	3
18703	eventRecurrence.byday)	7
19128	eventRecurrence.count))	4
9074	eventRecurrence.interval	10
18765	eventRecurrence.until.length()	7
18769	eventString	8
18558	eventType	20
62560	eventType)	3
19069	eventType){	8
19927	eventUID	24
32264	eventUID)	4
20038	eventUID){	12
32170	eventUid	7
2950	events	107
19043	events",Toast.LENGTH_LONG).show()	4
2953	events)	23
40488	events,such	4
20876	events.	25
51425	events.get(0)	9
18932	events.size()	9
39632	eventually	16
41103	eventually,	4
4070	ever	23
2210	every	77
9774	everyScheduledActionShouldHaveRecurrence(){	5
455	everything	47
32604	everytime	15
51517	everytime.	6
48415	ex	4
1340	ex)	44
3926	ex){	52
48748	ex.initCause(e)	4
3997	ex.printStackTrace()	22
33873	exact	15
23630	exacted	6
6048	exactly	26
49841	examined	5
33748	example	37
60506	example)	3
41035	example,	7
40921	example,<code>play(anim1).after(anim1)</code>	4
34980	example,Calendar.MONDAY</p>	3
12141	example,Canada	3
40416	example,a	16
40533	example,an	4
41143	example,calling	4
48316	example,choosing	4
43341	example,from	4
37534	example,if	24
44148	example,making	4
49501	example,sharing	4
40759	example,the	4
48405	example,then	4
41007	example,this	4
32029	example,transaction	3
40491	example,we	4
38319	example,when	8
47473	example,you	4
40860	example,{@link	4
19277	example.	15
48105	example:	4
46915	example:</p>	4
20818	example="14">%1$d</xliff:g>	46
20443	example="14">%1$d</xliff:g></string>	43
37751	example="Bluetooth">%s</xliff:g></string>	5
19991	exceed	20
42638	exceeded	11
60004	exceededExecutionCounts_shouldNotRun(){	4
42110	exceeds	10
976	except	374
13709	exception	67
3839	exception){	33
1533	exception,printStackTrace	8
48927	exception.	4
50607	exception.",e)	5
47828	exception.</p>	4
24044	exception.getLocalizedMessage()	13
34057	exception.getLocalizedMessage(),	4
19632	exception.getMessage())	21
2512	exception.printStackTrace()	25
24159	exceptions	21
49454	excessive	4
3578	exchange	136
60935	exchange-code	3
60975	exchange-code=""	3
60748	exchange-code="004"	3
61397	exchange-code="008"	3
61003	exchange-code="012"	3
61103	exchange-code="024"	3
60864	exchange-code="031"	3
61402	exchange-code="032"	3
60792	exchange-code="036"	3
61415	exchange-code="040"	3
60758	exchange-code="044"	3
61185	exchange-code="048"	3
61334	exchange-code="050"	3
60968	exchange-code="051"	3
60849	exchange-code="052"	3
60755	exchange-code="056"	3
61098	exchange-code="060"	3
61001	exchange-code="064"	3
61310	exchange-code="068"	3
60903	exchange-code="070"	3
61189	exchange-code="072"	3
60842	exchange-code="076"	3
61150	exchange-code="084"	3
61010	exchange-code="090"	3
61137	exchange-code="096"	3
61321	exchange-code="100"	3
61162	exchange-code="104"	3
60732	exchange-code="108"	3
61070	exchange-code="116"	3
60741	exchange-code="124"	3
61394	exchange-code="132"	3
60728	exchange-code="136"	3
60857	exchange-code="144"	3
61378	exchange-code="152"	3
61104	exchange-code="156"	3
61272	exchange-code="170"	3
61141	exchange-code="174"	3
60750	exchange-code="188"	3
61377	exchange-code="191"	3
61376	exchange-code="192"	3
60754	exchange-code="196"	3
60718	exchange-code="200"	3
61353	exchange-code="203"	3
61288	exchange-code="208"	3
61134	exchange-code="214"	3
61048	exchange-code="218"	3
61642	exchange-code="222"	3
60753	exchange-code="230"	3
61160	exchange-code="232"	3
60749	exchange-code="233"	3
60974	exchange-code="238"	3
61335	exchange-code="242"	3
61425	exchange-code="246"	3
61434	exchange-code="250"	3
60789	exchange-code="262"	3
60963	exchange-code="270"	3
61046	exchange-code="280"	3
61263	exchange-code="288"	3
61140	exchange-code="292"	3
60887	exchange-code="320"	3
60798	exchange-code="324"	3
60699	exchange-code="328"	3
61276	exchange-code="332"	3
61420	exchange-code="340"	3
60705	exchange-code="344"	3
61172	exchange-code="348"	3
61176	exchange-code="352"	3
60770	exchange-code="356"	3
61213	exchange-code="360"	3
61166	exchange-code="364"	3
61248	exchange-code="368"	3
60991	exchange-code="372"	3
60735	exchange-code="376"	3
60787	exchange-code="380"	3
61301	exchange-code="388"	3
61345	exchange-code="392"	3
60799	exchange-code="398"	3
61417	exchange-code="400"	3
60763	exchange-code="404"	3
60695	exchange-code="408"	3
61178	exchange-code="410"	3
61045	exchange-code="414"	3
61253	exchange-code="417"	3
60964	exchange-code="418"	3
61117	exchange-code="422"	3
61428	exchange-code="426"	3
61318	exchange-code="428"	3
60860	exchange-code="430"	3
60780	exchange-code="434"	3
60841	exchange-code="440"	3
61161	exchange-code="442"	3
61077	exchange-code="446"	3
61330	exchange-code="450"	3
61432	exchange-code="454"	3
60771	exchange-code="458"	3
60954	exchange-code="462"	3
60892	exchange-code="466"	3
61067	exchange-code="470"	3
60898	exchange-code="478"	3
61029	exchange-code="480"	3
61019	exchange-code="484"	3
61125	exchange-code="496"	3
60978	exchange-code="498"	3
61118	exchange-code="504"	3
61208	exchange-code="508"	3
60947	exchange-code="512"	3
61027	exchange-code="516"	3
61399	exchange-code="524"	3
61121	exchange-code="528"	3
61127	exchange-code="532"	3
61339	exchange-code="533"	3
61665	exchange-code="548"	3
60984	exchange-code="554"	3
61169	exchange-code="558"	3
61429	exchange-code="566"	3
61147	exchange-code="578"	3
61091	exchange-code="586"	3
60863	exchange-code="590"	3
61423	exchange-code="598"	3
61257	exchange-code="600"	3
61349	exchange-code="604"	3
61081	exchange-code="608"	3
60801	exchange-code="620"	3
60704	exchange-code="624"	3
61384	exchange-code="634"	3
60717	exchange-code="642"	3
60805	exchange-code="643"	3
61383	exchange-code="646"	3
61494	exchange-code="654"	3
61499	exchange-code="678"	3
61203	exchange-code="682"	3
61292	exchange-code="690"	3
61495	exchange-code="694"	3
61604	exchange-code="702"	3
61568	exchange-code="703"	3
61682	exchange-code="704"	3
61636	exchange-code="705"	3
61448	exchange-code="706"	3
61689	exchange-code="710"	3
61511	exchange-code="716"	3
60773	exchange-code="724"	4
61327	exchange-code="736"	3
61586	exchange-code="740"	3
61533	exchange-code="748"	3
61558	exchange-code="752"	3
61437	exchange-code="756"	3
61658	exchange-code="760"	3
61545	exchange-code="762"	3
61531	exchange-code="764"	3
61666	exchange-code="776"	3
61719	exchange-code="780"	3
61305	exchange-code="784"	3
61470	exchange-code="788"	3
61565	exchange-code="795"	3
61639	exchange-code="800"	3
60709	exchange-code="807"	3
61342	exchange-code="818"	3
61239	exchange-code="826"	3
61574	exchange-code="834"	3
61508	exchange-code="840"	3
61450	exchange-code="858"	3
61492	exchange-code="860"	3
61570	exchange-code="862"	3
61449	exchange-code="882"	3
61605	exchange-code="886"	3
61696	exchange-code="890"	3
61572	exchange-code="894"	3
61703	exchange-code="901"	3
60812	exchange-code="931"	3
58178	exchange-code="933"	3
61697	exchange-code="934"	3
61017	exchange-code="936"	3
61677	exchange-code="937"	3
60784	exchange-code="938"	3
61477	exchange-code="940"	3
61439	exchange-code="941"	3
61018	exchange-code="943"	3
60989	exchange-code="944"	3
61325	exchange-code="946"	3
61073	exchange-code="948"	3
61712	exchange-code="949"	3
61128	exchange-code="950"	5
61583	exchange-code="951"	3
61513	exchange-code="952"	3
61654	exchange-code="953"	3
61478	exchange-code="959"	3
61616	exchange-code="960"	3
61578	exchange-code="961"	3
61661	exchange-code="962"	3
61711	exchange-code="963"	3
61459	exchange-code="964"	3
61496	exchange-code="967"	3
61617	exchange-code="968"	3
60790	exchange-code="969"	3
61410	exchange-code="970"	3
61009	exchange-code="971"	3
61625	exchange-code="972"	3
61207	exchange-code="973"	3
61066	exchange-code="974"	3
60794	exchange-code="975"	3
61174	exchange-code="976"	3
60949	exchange-code="977"	3
60846	exchange-code="978"	3
61052	exchange-code="979"	3
61595	exchange-code="980"	3
60959	exchange-code="981"	3
61036	exchange-code="982"	3
61076	exchange-code="984"	3
60867	exchange-code="985"	3
61404	exchange-code="986"	3
61190	exchange-code="987"	3
61409	exchange-code="990"	3
61457	exchange-code="997"	3
61714	exchange-code="998"	3
61475	exchange-code="999"	3
60928	exchange-code="XXX"	3
55431	exchange-code="nil"	5
58573	exchangeRate	2
58557	exchangeRate)	2
31647	exchangeRateString	12
56079	excluda</string>	2
10696	excludas!</string>	9
9453	exclude	50
62850	excluding	4
43533	exclusive	14
42486	exclusive)	16
44736	exclusive.")	4
22970	excluso	10
28876	excluso</string>	12
11890	excution	14
59173	exec	6
19484	execCount	12
54893	execuo	7
18835	execute	26
64357	execute(final	1
50753	executeBackup(ScheduledAction	20
60298	executeBackup(scheduledAction,db)	3
25515	executeScheduledEvent(ScheduledAction	38
20971	executeScheduledEvent(ScheduledEvent	6
6215	executeScheduledEvent(scheduledAction)	16
58825	executeScheduledEvent(scheduledAction,db)	7
20696	executeScheduledEvent(scheduledEvent)	5
51071	executeTransactions(ScheduledAction	19
60252	executeTransactions(scheduledAction,db)	3
2309	executed	180
53407	executed,taking	5
32394	executed.	20
59923	executed.</p>	3
20385	executes	6
25485	executing	29
48689	executing.	4
5074	execution	60
19768	executionCount	39
57255	executionCount)	4
33807	executionCount))	5
19705	executionCount){	15
19655	executions	16
11567	exemple	3
63047	exemplo,1	8
22920	exibio	7
5500	exibir.</string>	6
4553	exist	205
40839	exist"	4
24360	exist")	24
24089	exist",accountRowID))	3
24212	exist",rowId))	5
63848	exist",srcDir.getPath())	3
51109	exist)	2
9297	exist,and	3
25180	exist,no	2
59555	exist,so	2
3107	exist,which	9
35900	exist.	31
50904	exist:	5
4035	exist</p>	9
10205	existant	13
23627	existants,supprimez-les	11
45689	existed	4
52200	existed,we	6
8564	existem	75
49929	existence	5
18342	existente.\n\nSi	11
4806	existentes	30
5518	existierenden	6
3533	existing	262
12623	exists	94
25288	exists")	10
52065	exists)	14
57352	exists):	4
33586	exists,don't	7
8826	exists,it	8
6702	exists,just	25
41421	exists,set	4
18189	exists,then	33
6411	exists,this	3
9448	exists,{@code	4
3405	exists.	45
3932	exit&#243	11
47653	exited	4
15734	exitosa</string>	24
23357	exits	8
31106	exits,create	7
48682	exits,it	4
37546	expand	33
48488	expand,false	4
43833	expand.	4
48525	expand/collapse	4
42671	expandActionView()	12
49510	expandActivityOverflowButtonDrawable	4
44008	expandCount	4
43398	expandCount)	4
44133	expandItemActionView(MenuBuilder	12
44642	expandItemActionView(MenuItemImpl	5
43490	expandable	5
43969	expandableItemCount	4
43477	expandableItemCount++	4
53720	expande	2
20813	expanded	58
43778	expanded).	4
48327	expanded,false	4
48796	expanded,the	4
50131	expanded,then	7
48582	expanded.	8
49773	expandedActivityCount	4
50370	expandedActivityCount)	4
54475	expandedBudgetAmount	2
53481	expandedBudgetAmounts	2
53632	expandedBudgetAmounts.add(bgtAmount)	2
53602	expandedBudgetAmounts.remove(bgtAmount)	2
42569	expandedFormat	4
43281	expandedFormat)	4
43692	expandedId	4
44881	expandedItem	4
44566	expandedItem)	4
45168	expandedMenuItemId	4
50033	expandedSubMenu	4
50226	expandedSubMenu.add(0,i,i,activity.loadLabel(packageManager))	4
37144	expanding	8
49656	expands	6
48374	expansion	8
62875	expect	4
51404	expectation	4
4388	expected	41
50963	expected,or	5
35057	expected.	3
62939	expectedAmount	4
62695	expectedBalance	2
58581	expectedCode	8
59412	expectedCode)	6
7596	expectedCount	6
5504	expectedDate	25
58539	expectedDefaultCommodity	8
60290	expectedEndtime	3
29168	expectedException	9
55777	expectedNextDueDate	3
59427	expectedQty	5
32517	expectedSize	5
50829	expectedTime	7
8570	expectedTransactionCount	9
5009	expectedValue	36
62903	expectedValueAmount	4
51789	expecting	12
27628	expects	9
346	expense	48
3678	expense-tracker	104
7451	expenseSplit	3
4421	expenses	41
35642	expenses.	12
42036	expensive,we	4
48270	experience	4
37822	experience.</p>	4
16929	experteren	15
42029	expired	4
39873	explanation.	4
46775	explicit	11
849	explicitly	58
39955	explicitly.	4
19937	explicity,but	5
51710	explicity.	9
2112	export	310
6551	export")	14
54912	export")).perform(click())	5
16066	export&#233	30
54544	export(s)")	5
9969	export,so	3
52279	export,when	10
6909	export.	33
10447	export.</string>	129
34125	export/backup	4
34536	export:"	3
34675	export:"/>	5
31559	export</p>	7
4494	export</string>	206
23329	exportAccounts(XmlSerializer	31
23558	exportAccounts(xmlSerializer)	14
56925	exportAccountsToGncXML(XmlSerializer	3
6767	exportAll	35
7011	exportAll)	40
35630	exportAll){	5
7009	exportAll,	3
6838	exportAll,Context	6
6455	exportAllTransactions	10
7121	exportAllTransactions)	5
7061	exportAllTransactions){	32
54344	exportAllTransactions,	2
31004	exportAllTransactions,List<String>	5
53134	exportBudgets(XmlSerializer	2
53373	exportBudgets(xmlSerializer)	2
25930	exportCommodities(XmlSerializer	5
26127	exportCommodities(xmlSerializer,commodities)	3
26091	exportCommodities(xmlSerializer,currencies)	5
23415	exportCommodity(XmlSerializer	15
23975	exportCommodity(xmlSerializer,currencies)	13
28416	exportDatabase(SQLiteDatabase	17
55556	exportDestination	2
55517	exportDestination)	2
31115	exportFile	11
9514	exportFiles	15
9856	exportFiles.add(Uri.fromFile(file))	5
9345	exportFiles.add(Uri.parse("file://"	14
9310	exportFiles.add(contentUri)	2
6840	exportFormat	19
7212	exportFormat)	17
51522	exportFormat){	5
52222	exportFormat.trim().isEmpty()){	3
29755	exportFragment	19
33432	exportFragment.setArguments(args)	5
29770	exportFragment.show(ft,AccountsActivity.FRAGMENT_EXPORT_OFX)	8
29730	exportFragment.show(ft,FRAGMENT_EXPORT_DIALOG)	7
55109	exportFragment.show(ft,FRAGMENT_EXPORT_OFX)	2
20800	exportGnucashXML(SQLiteDatabase	8
54665	exportListFragment	5
54635	exportListFragment,"fragment_recurring_transactions")	5
55249	exportLocation	3
55387	exportLocation){	3
6712	exportOfx(boolean	25
6728	exportOfx(exportAll)	12
7301	exportOfx(exportAllTransactions)	5
31110	exportOutput	5
31078	exportOutput)	5
7347	exportParameters	25
9034	exportParameters.setDeleteTransactionsAfterExport(false)	5
6234	exportParameters.setDeleteTransactionsAfterExport(mDeleteAllCheckBox.isChecked())	28
7053	exportParameters.setExportAllTransactions(mExportAllCheckBox.isChecked())	14
55289	exportParameters.setExportLocation(mExportUri	3
52719	exportParameters.setExportStartTime(Timestamp.valueOf(Exporter.TIMESTAMP_ZERO))	5
52662	exportParameters.setExportStartTime(TimestampHelper.getTimestampForEpochZero())	5
10106	exportParameters.setExportStartTime(TimestampHelper.getTimestampFromEpochZero())	9
52597	exportParameters.setExportStartTime(new	8
9473	exportParameters.setExportTarget(ExportParams.ExportTarget.SD_CARD)	5
5669	exportParameters.setExportTarget(mExportTarget)	19
7004	exportParameters.setExportTarget(position	9
6827	exportParameters.setTargetFilepath(mFilePath)	8
20625	exportParams	8
20289	exportParams.getTargetFilepath()	8
21012	exportParams.setDeleteTransactionsAfterExport(false)	6
20737	exportParams.setExportAllTransactions(true)	8
20942	exportParams.setExportTarget(ExportParams.ExportTarget.SD_CARD)	6
20233	exportParams.setTargetFilepath(Environment.getExternalStorageDirectory()	8
8025	exportPrices(XmlSerializer	21
23822	exportPrices(xmlSerializer)	9
7907	exportRecurrence(XmlSerializer	5
53389	exportRecurrence(xmlSerializer,budget.getRecurrence())	2
53030	exportRecurrence(xmlSerializer,recurrence)	2
6873	exportResult	10
6732	exportResult)	68
6178	exportScheduledActions(XmlSerializer	17
5528	exportScheduledActions(xmlSerializer)	7
25703	exportScheduledTransactions(XmlSerializer	15
25589	exportScheduledTransactions(xmlSerializer)	4
23911	exportSlots(XmlSerializer	22
19513	exportSlots(xmlSerializer,slotKey,slotType,slotValue)	12
5356	exportSlots(xmlSerializer,slotKeys,slotTypes,slotValues)	12
63220	exportStartTime	6
64068	exportStartTime)	3
63259	exportStartTime){	6
57357	exportSuccessful	4
57300	exportSuccessful)	5
63747	exportTarget	1
6307	exportTempl	56
53296	exportTemplateAccounts(XmlSerializer	3
58729	exportTemplateAccounts(xmlSerializer,mTransactionToTemplateAccountMap.values())	1
33670	exportTemplates	4
33681	exportTemplates)	8
5422	exportTransactions(XmlSerializer	62
33803	exportTransactions(xmlSerializer)	4
4287	exportTransactions(xmlSerializer,false)	16
5081	exportTransactions(xmlSerializer,true)	12
56868	exportTransactionsWithSplitsToGncXML(	4
55447	exportUri	3
55427	exportUri)	4
19658	exporta&#231	30
22437	exportaci	10
2861	exportaci&#243	65
22116	exportaci.	7
60028	exportaci:</string>	3
60032	exportaci</string>	3
15481	exportacin	19
15842	exportacin.</string>	9
10492	exportacin:</string>	8
15474	exportacin</string>	23
3459	exportaciones	36
25506	exportaciones\n	8
55618	exportaciones\n--	1
21966	exportacions.	7
15654	exportada	23
15382	exportadas	62
21580	exportadas!</string>	46
12431	exportadas.	55
12522	exportadas</string>	60
22112	exportades	5
2727	exportado	57
29889	exportados	17
5928	exportaes	42
22994	exportaes.	11
11670	exportaes\n	11
4817	exportando	59
22146	exportant	7
5247	exportao	42
51409	exportao.	9
22937	exportao.</string>	6
10180	exportao:</string>	11
3557	exportao</string>	49
5256	exportar	107
28786	exportar.	13
28645	exportar.</string>	17
3369	exportar</string>	94
62485	exportar</string>+	1
22012	exportat	7
10433	exportations:</string>	3
10466	exportations\n	9
22194	exportats</string>	10
541	exported	287
34601	exported,	11
3654	exported,<code>false</code>	11
6815	exported,or	6
35800	exported,regardless	3
6532	exported.	147
63219	exported</p>	3
9739	exportedFile	19
8751	exportedFile.delete()	11
9106	exportedFile.getName())	3
9435	exportedFilePath	21
57369	exportedFilePath,remotePath,mimeType).execute(mClient)	7
56798	exportedFilePaths	9
56740	exportedFilePaths)	5
56799	exportedFilePaths.add(mExportParams.getInternalExportPath())	4
58885	exportedFilePaths.add(mExportParams.getTargetFilepath())	8
31424	exportedFiles	7
56802	exportedFiles.add(getBackupFilePath())	5
63654	exportedFiles.add(getExportCacheFilePath())	3
56796	exportedFiles.add(mParameters.getInternalExportPath())	5
63662	exportedFiles.add(outputFile)	3
54486	exportedTransact	2
31399	exportedTransactionUIDs	5
31119	exportedTransactionUIDs)	5
31214	exportedTransactionUIDs.add(transaction.getUID())	5
31030	exportedTransactions	5
16714	exporteerd	20
17106	exporteerd.</string>	21
11095	exporten	7
7348	exporter	83
23330	exporter.	17
57341	exporter.generateExport()	7
31244	exporter.generateExport(writer)	5
20931	exporter.generateXML()	4
7371	exporter.toOfx(document,root)	11
36631	exporter.toXml(document,root)	5
10227	exportera	10
55895	exporterad	2
56236	exporterad:</string>	2
10281	exporterade	8
55897	exporterar	2
56288	exporterar.</string>	2
11179	exporteras	9
56235	exporteras.	2
11223	exporteras</string>	9
16995	exporteren	26
16544	exporteren&#8230	7
16610	exporteren.	28
12806	exporteren</string>	71
55991	exportering	3
55880	exportering</string>	3
530	exporteringsplan</string>	20
35567	exporters	4
10613	exportes	15
10444	exportes!</string>	7
11977	exportes.	31
10455	exportes</string>	13
25719	exporteu	8
22276	exporteu.</string>	7
63757	exportformat	1
55901	exportformat</string>	2
4126	exportieren	6
15147	exportieren&#8230	11
6008	exportieren.	30
4815	exportieren</string>	85
6248	exportiert	39
4515	exportiert.</string>	30
25497	exportiert:</string>	3
6590	exportiert</string>	23
4886	exportierte	39
6147	exportierten	50
6010	exporting	257
9903	exporting:	10
52771	exporting</p>	7
22262	exportn	5
22172	exportovan	10
22081	exportovanho	9
29569	exportovano	3
22182	exportovat	7
22131	exportovno	5
22133	exportovny	7
2434	exports	185
59155	exports")	4
11776	exports.	23
54657	exports</p>	3
17204	exports</string>	5
11381	exports\n	26
56169	exportschema</string>	2
22253	exportu	9
22215	exportu.	7
22424	exportu.</string>	5
22006	exportu</string>	9
58640	expose	3
38582	exposed	4
30277	exposing	14
1376	express	349
8044	express")	6
8036	express</trn:description>	3
34913	expressed	3
40789	expresses	4
16709	expressie!</string>	7
41027	expressing	4
895	expression	38
56599	expression!")	11
2897	expression!</string>	102
24618	expression)	14
56653	expression.")	9
24752	expression.validate().isValid())	21
52759	expression:	13
24754	expressionBuilder	22
24755	expressionBuilder.build()	25
28753	ext.enableCrashlytics	16
20729	extend	10
20862	extended	29
2089	extends	359
21855	extension	41
56778	extension).	8
60721	extensions:	3
7375	external	50
11347	externe</string>	3
11549	externo</string>	17
615	extra	65
49849	extraData	5
50189	extraData,String	5
6860	extraPadding	22
43567	extraPixels	5
35127	extraText	12
35219	extraText.add(mContext.getString(R.string.description_export_email)	12
27063	extract	18
53116	extractBaseModelAttributes(@NonNull	2
52188	extractBaseModelAttributes(contentValues,scheduledAction)	4
57472	extractBudgetAmounts()	3
54025	extractBudgetAmounts(){	5
31928	extractSplitsFromView()	26
63012	extractSplitsFromView())	4
31871	extractSplitsFromView(){	14
60400	extractTransactionFromView()	6
63009	extractTransactionFromView(){	4
42019	extracted	4
41802	extracted.	14
50061	extras	16
49998	extras.getBoolean(SearchManager.CURSOR_EXTRA_KEY_IN_PROGRESS)	5
50337	extras.getBoolean(SearchManager.CURSOR_EXTRA_KEY_IN_PROGRESS))	5
54737	extras.getInt(	5
37346	extremely	8
15988	ez	11
13099	f	35
20564	f&#225	13
16041	f&#233	15
4868	f&#252	32
26834	f.mAccountsDbAdapter	13
51344	f.mDbAdapter	4
37825	f.mHasMenu	5
38176	f.mMenuVisible	5
26801	f.mReleaseDbAdapter	5
37995	f.onDestroyOptionsMenu()	4
30434	fab,View	3
30309	fab.getHeight()	8
30242	fab.getLayoutParams()	8
30271	fab.setTranslationY(-distanceToScroll	8
30353	fabBottomMargin	8
21113	face	20
23585	facilement\n	5
4681	facilitar	6
40655	facilitate	4
60830	facilitating	3
30481	facilities	9
6107	fact	17
9572	factor	12
55141	factor)	4
55094	factor),0	4
26351	factor){	3
32622	factory	21
38058	fade	4
23749	fail	13
12360	fail("The	3
8342	fail()	3
12896	fail.")	3
41458	fail.</p>	7
9570	failed	16
51637	failed")	7
27127	failed.	19
5183	failed</string>	105
31341	failing	7
4929	fails	19
31028	fails,it	9
51641	failure")	7
16224	faire	5
4188	falhou</string>	6
41176	fall	19
15354	fallida</string>	24
49745	falling	5
2243	fallos	26
1879	false	345
38821	false")	8
5566	false)	24
28466	false){	5
47316	false,all	5
42074	false,but	4
48629	false,each	4
44669	false,the	4
20748	false.	16
46680	false</li>	4
1653	far	24
41268	far.	4
29447	fare	4
21426	farge	8
15012	farge</string>	21
42271	fast	10
41157	faster	4
14511	faster.	2
54889	fatia	7
5704	fatias	24
16059	faut	19
16081	faut,CRDIT	7
23746	faut,CREDIT	8
16014	faut,seul	24
15974	faut</string>	17
6158	favor	47
62844	favor,confirme	3
16735	favoriete	7
10907	favoris</string>	14
56001	favorit	2
18318	favoritas	6
3838	favoritas</string>	35
1021	favorite	161
27889	favorite,<code>false</code>	3
27691	favoriteAccountMenuItem	11
27681	favoriteAccountMenuItem.setIcon(favoriteIcon)	15
27798	favoriteIcon	17
9126	favoriteStatus	10
61821	favorites	3
21862	favoritt	10
28214	favoritter	4
22479	favourite	13
4781	fazer	22
53505	feasible	2
13307	feature	28
39778	feature)	4
38204	feature.	4
39767	feature:	4
38398	featureId	15
37949	featureId)	12
39678	featureId))	4
64389	featureId,	1
38514	featureId,Menu	9
38070	featureId,MenuItem	13
38441	featureId,View	9
38741	featureId,android.view.Menu	8
38789	featureId,android.view.MenuItem	4
40285	featureId,int	5
37853	featureId:	12
40003	featureMask	4
39889	featureMask)	4
2376	features	33
40135	features)	4
38634	features,defined	4
38547	features.	4
48071	features:	4
59468	featurs	3
5554	fechada</string>	16
2310	feedback	105
3974	feedback">	8
31693	feedback,falso	17
29233	feedback</string>	4
21918	feedbackOption	6
17047	feedback\n	13
25898	feedbacku	5
22037	fehlgeschlagen</string>	15
8526	feil	27
21343	feil</string>	10
15254	feillogging</string>	11
21431	feilrapporter	6
15004	feilrapportering	14
21331	feilrettinger	24
8595	feilrettinger\n	15
20201	feita	26
4631	feito	6
55933	fel	2
55902	felkorrigeringar	2
22043	fer	13
15208	ferdig</string>	11
11837	ferm</string>	9
62519	festgelegt</string>	5
22042	fet	7
31073	fetch	15
63090	fetchAccountWithUID(String	2
26352	fetchAccountWithUID(account.getUID()))	2
24457	fetchAccounts("("	8
10398	fetchAccounts(@Nullable	9
21418	fetchAccounts(AccountEntry.COLUMN_TYPE	12
19147	fetchAccounts(String	33
24400	fetchAccounts(condition)	10
30521	fetchAccounts(condition.toString())	8
24405	fetchAccounts(null)	10
24528	fetchAccounts(null,null)	9
59718	fetchAccounts(null,null,AccountEntry.COLUMN_FULL_NAME	1
1665	fetchAccounts(null,null,null)	5
24314	fetchAccounts(where,whereArgs,orderBy)	8
10837	fetchAccountsOrderedByFavoriteAndFullName(String	2
24191	fetchAccountsOrderedByFullName(@Nullable	4
11717	fetchAccountsOrderedByFullName(String	13
51998	fetchAllAccounts()	6
52006	fetchAllAccounts(){	6
18188	fetchAllRecords()	37
2865	fetchAllRecords(){	29
24175	fetchAllRecords(@NonNull	6
53163	fetchAllRecords(BudgetAmountEntry.COLUMN_ACCOUNT_UID	2
53249	fetchAllRecords(BudgetAmountEntry.COLUMN_BUDGET_UID	2
53132	fetchAllRecords(CommodityEntry.COLUMN_MNEMONIC	5
59571	fetchAllRecords(DatabaseHelper.ACCOUNTS_TABLE_NAME)	2
18310	fetchAllRecords(DatabaseHelper.TRANSACTIONS_TABLE_NAME)	13
30855	fetchAllRecords(ScheduledEventEntry.TABLE_NAME)	2
24088	fetchAllRecords(SplitEntry.TABLE_NAME)	7
25531	fetchAllRecords(String	18
24435	fetchAllRecords(TransactionEntry.TABLE_NAME)	7
25636	fetchAllRecords(null,null)	4
53070	fetchAllRecords(null,null,null)	2
24169	fetchAllRecordsOrderedByFullName(){	13
18190	fetchAllRecurringTransactions(){	17
20975	fetchAllScheduledTransactions(){	15
24246	fetchAllTransactionsForAccount(@NonNull	4
18538	fetchAllTransactionsForAccount(String	33
18720	fetchAllTransactionsForAccount(accountId)	18
24117	fetchAllTransactionsForAccount(accountUID)	17
24516	fetchAllTransactionsForAccount(getAccountUID(accountID))	8
30874	fetchAllTransactionsForAccount(getUID(AccountEntry.TABLE_NAME,accountID))	2
23638	fetchAllTransactionsForAccount(long	44
31231	fetchAllTransactionsForAccount(uid)	2
53098	fetchBudgetsForAccount(String	2
53122	fetchBudgetsForAccount(accountUID)	2
24547	fetchFavoriteAccounts(){	16
7021	fetchRecentAccounts(int	18
25697	fetchRecord(@NonNull	10
24470	fetchRecord(AccountEntry.TABLE_NAME,accountID)	7
24365	fetchRecord(AccountEntry.TABLE_NAME,rowId)	7
26654	fetchRecord(DatabaseHelper.ACCOUNTS_TABLE_NAME,accountID)	7
26687	fetchRecord(DatabaseHelper.ACCOUNTS_TABLE_NAME,rowId)	11
59036	fetchRecord(DatabaseHelper.CURRENCIES_TABLE_NAME,id)	2
6628	fetchRecord(DatabaseHelper.TRANSACTIONS_TABLE_NAME,rowId)	16
30822	fetchRecord(ScheduledEventEntry.TABLE_NAME,rowId)	3
24499	fetchRecord(SplitEntry.TABLE_NAME,rowId)	7
30865	fetchRecord(String	11
53120	fetchRecord(String)	2
24098	fetchRecord(TransactionEntry.TABLE_NAME,rowId)	7
30769	fetchRecord(accountID)	4
26805	fetchRecord(getID(uid))	9
24564	fetchRecord(id)	12
24462	fetchRecord(long	34
30938	fetchRecord(rowId)	5
61683	fetchRecord(uid)	3
52947	fetchScheduledTransactionsForAccount(String	4
52852	fetchScheduledTransactionsForAccount(accountUID)	4
24378	fetchSplits(@Nullable	4
24606	fetchSplits(String	12
24123	fetchSplitsForAccount(@NonNull	4
13557	fetchSplitsForAccount(String	10
18837	fetchSplitsForAccount(accountUID)	16
24448	fetchSplitsForTransaction(@NonNull	4
24585	fetchSplitsForTransaction(String	9
20497	fetchSplitsForTransaction(transactionUID)	12
24447	fetchSplitsForTransactionAndAccount(@Nullable	4
13523	fetchSplitsForTransactionAndAccount(String	12
13726	fetchSplitsForTransactionAndAccount(transactionUID,accountUID)	8
24515	fetchSubAccounts(@NonNull	4
24342	fetchSubAccounts(String	10
30203	fetchSubAccounts(accountId)	6
27666	fetchSubAccounts(long	22
3649	fetchTemplatesStartingWith(String	5
24310	fetchTopLevelAccounts()	8
7128	fetchTopLevelAccounts(){	22
52887	fetchTransactionSuggestions(String	3
24395	fetchTransactionWithUID(@NonNull	4
7361	fetchTransactionWithUID(String	17
18478	fetchTransactionWithUID(transaction.getUID()))	13
24096	fetchTransactionsStartingWith(@NonNull	6
2922	fetchTransactionsStartingWith(String	21
24524	fetchTransactionsWithSplits(@Nullable	4
24308	fetchTransactionsWithSplits(String	22
24222	fetchTransactionsWithSplitsWithTransactionAccount(@Nullable	4
20413	fetchTransactionsWithSplitsWithTransactionAccount(String	27
43629	fetched	14
44187	fetched.	4
28986	fetching	18
59673	fetching/saving/modifying	5
22716	fetta	8
22718	fette	6
3605	few	101
3217	ficas	7
19467	ficheiro	41
20985	ficheiro</string>	30
20840	ficheiros	31
10888	fichier	33
16068	fichier&#8230	17
16169	fichiers	21
16248	fichiers</string>	14
3501	fico	25
21018	ficos	10
1072	field	108
24642	field,or	3
49979	field,without	5
34255	field.	24
34307	field.get(datePicker)).setVisibility(View.GONE)	5
34281	field.getName().equals("mDayPicker"))	7
34282	field.setAccessible(true)	5
18280	fields	65
27562	fields.	3
59768	fields</p>	5
41840	figure	4
41551	figures	4
12240	fik</string>	9
12768	fikhoz</string>	9
51873	fil	8
14770	fil&#8230	16
14933	fil</string>	13
15055	filbehandler	32
1066	file	431
55265	file"	8
14169	file")	45
21904	file",endTime-startTime))	28
16304	file&#8230	49
25200	file("../debug.keystore")	4
36500	file('fabric.properties')	4
25237	file(RELEASE_STORE_FILE)	2
28439	file)	18
9154	file))	14
1753	file,such	4
48798	file,thus	4
47368	file,you	4
3148	file.	81
48473	file.)	4
36531	file..."))	3
31300	file.delete()	33
33401	file.getPath().split("(?=\\.[^\\.]+$)")	11
28458	file.isFile()	5
28497	file.lastModified()	5
60239	file.mkdirs()	5
9733	file.setReadable(true,false)	5
63182	file//	6
14578	file:	13
56814	file:///some/path/file.ext	5
63094	file:///some/path/file.ext</p>	6
5939	file</string>	140
28231	fileCallback	9
28230	fileInputStream	14
28129	fileInputStream.close()	10
28197	fileInputStream.read(buffer))	12
21438	fileOutputStream	18
53196	fileTree(dir:	27
21492	fileWriter	6
11593	filen	17
6976	filename	54
8294	filename)	18
3893	filename){	12
2694	filename,just	8
3143	filename.split("_")	4
20331	filepath	23
25400	filepath)	12
55573	filepath){	2
15253	filer	28
15170	filer</string>	34
5757	files	219
28444	files)	5
10054	files,like	10
6557	files.	34
20899	files</p>	4
5621	files</string>	106
15119	filformat	15
56099	filhanterare	2
15866	filipino</item>	20
27589	fill	20
44978	fill_parent)")	4
37859	filled	20
27104	filled.	3
37350	fills	5
18894	filter	37
49951	filter)	5
30947	filter){	6
42427	filterLeftoverView(ViewGroup	8
60643	filterQueryProvider	3
60620	filterQueryProvider)	7
18832	filtered	16
39980	filtering	7
60535	filtering,must	3
19224	filtering,once	9
60628	filtering.	3
1860	final	384
22018	finalitzar	5
55727	finalizar	4
25090	finalized	8
4595	finally	222
50298	finally,make	5
29721	finanas	8
2762	finance	134
29686	financeiro	11
35652	financial	12
16944	financieel	5
29850	financieros	16
10129	financire	5
11127	finansial	8
29691	finansw	4
2986	finanzas	21
29450	finanziaria	6
3575	find	91
48497	find.	4
24507	findAccountUidByFullName(String	7
5467	findAccountUidByFullName(imbalanceAccountName)	20
24526	findAccountUidByFullName(openingBalanceAccountName)	6
1364	findAccountUidByFullName(parentName)	10
33211	findCheckableView((ViewGroup)childView)	3
33137	findCheckableView(ViewGroup	3
33001	findCheckableView(this)	3
44278	findExpandedIndex()	4
44136	findGroupIndex(group)	4
43812	findGroupIndex(group,0)	4
44054	findGroupIndex(int	4
43872	findInsertIndex(ArrayList<MenuItemImpl>	4
44227	findItem(android.view.MenuItem	4
43830	findItem(expandedId)	4
42651	findItem(int	16
44535	findItem(nativeItem)	4
42634	findItemIndex(id)	4
43223	findItemIndex(int	8
43200	findItemWithShortcut(int	4
43037	findItemWithShortcut(keyCode,event)	4
43334	findItemWithShortcutForKey(int	4
43634	findItemWithShortcutForKey(keyCode,event)	4
43934	findItemsWithShortcutForKey(List<MenuItemImpl>	4
44169	findItemsWithShortcutForKey(items,keyCode,event)	4
55117	findPreference(getString(R.string.key_about_gnucash))	7
55283	findPreference(getString(R.string.key_backup_location))	3
2407	findPreference(getString(R.string.key_build_version))	30
34148	findPreference(getString(R.string.key_change_passcode))	21
57131	findPreference(getString(R.string.key_change_passcode)).setOnPreferenceClickListener(this)	3
5893	findPreference(getString(R.string.key_chart_currency))	4
32616	findPreference(getString(R.string.key_create_backup))	17
2278	findPreference(getString(R.string.key_create_default_accounts))	8
2454	findPreference(getString(R.string.key_default_currency))	25
5198	findPreference(getString(R.string.key_default_transaction_type))	13
2822	findPreference(getString(R.string.key_delete_all_accounts))	20
30799	findPreference(getString(R.string.key_delete_all_transactions))	10
51428	findPreference(getString(R.string.key_dropbox_sync))	12
31045	findPreference(getString(R.string.key_enable_passcode))	19
57155	findPreference(getString(R.string.key_enable_passcode))).setChecked(false)	8
1030	findPreference(getString(R.string.key_enable_passcode))).setChecked(flag)	8
57010	findPreference(getString(R.string.key_enable_passcode)).setTitle(getString(R.string.title_passcode_disabled))	5
33862	findPreference(getString(R.string.key_enable_passcode)).setTitle(getString(R.string.title_passcode_enabled))	10
51692	findPreference(getString(R.string.key_google_drive_sync))	12
30601	findPreference(getString(R.string.key_import_accounts))	19
32816	findPreference(getString(R.string.key_owncloud_sync))	13
5563	findPreference(getString(R.string.key_report_currency))	5
28256	findPreference(getString(R.string.key_restore_backup))	13
51490	findPreference(getString(R.string.key_restore_last_backup))	3
2196	findPreference(getString(R.string.key_use_account_color)).setOnPreferenceChangeListener(this)	5
51436	findPreference(getString(R.string.key_use_double_entry))	8
5303	findPreference(keyChartCurrency)	5
63989	findPreference(keyCompactView)	2
9776	findPreference(keyDefaultEmail)	10
9007	findPreference(keyDefaultExportFormat)	5
64005	findPreference(keyDoubleEntry)	2
34152	findPreference(keyEnablePasscode)	5
64003	findPreference(keySaveBalance)	2
46488	findSyncPosition()	4
45719	findViewById(R.id.abs__action_bar)	4
49010	findViewById(R.id.abs__activity_chooser_view_content)	4
49615	findViewById(R.id.abs__default_activity_button)	4
49640	findViewById(R.id.abs__expand_activities_button)	4
45951	findViewById(R.id.abs__home)	4
42417	findViewById(R.id.abs__imageButton)	4
49373	findViewById(R.id.abs__search_button)	5
48898	findViewById(R.id.abs__search_close_btn)	5
49202	findViewById(R.id.abs__search_edit_frame)	5
48991	findViewById(R.id.abs__search_go_btn)	5
48959	findViewById(R.id.abs__search_mag_icon)	5
49629	findViewById(R.id.abs__search_plate)	5
48944	findViewById(R.id.abs__search_src_text)	5
49244	findViewById(R.id.abs__search_voice_btn)	5
43356	findViewById(R.id.abs__shortcut)	4
49086	findViewById(R.id.abs__submit_area)	5
43134	findViewById(R.id.abs__textButton)	4
43452	findViewById(R.id.abs__title)	4
46402	findViewById(R.id.abs__up)	4
28848	findViewById(R.id.bar_chart)	5
28933	findViewById(R.id.bar_chart)).addView(mChart)	13
26795	findViewById(R.id.bar_chart_button).setOnClickListener(new	8
9367	findViewById(R.id.btn_cancel)	20
8882	findViewById(R.id.btn_save)	18
27022	findViewById(R.id.chart)	8
4336	findViewById(R.id.chart)).addView(mChart)	26
33050	findViewById(R.id.chart)).addView(mPieChartView,	5
34228	findViewById(R.id.chart)).addView(pieChartView,	3
4435	findViewById(R.id.chart_data_spinner)	16
7366	findViewById(R.id.chart_data_spinner)).getSelectedItem()	20
34169	findViewById(R.id.chart_data_spinner)).getSelectedItem(),true)	4
33171	findViewById(R.id.chart_date)	14
27272	findViewById(R.id.color_picker_checkmark)	3
27186	findViewById(R.id.color_picker_swatch)	3
60156	findViewById(R.id.date_range_divider)	8
34	findViewById(R.id.date_range_divider).setVisibility(View.GONE)	8
960	findViewById(R.id.date_range_divider).setVisibility(View.VISIBLE)	8
23203	findViewById(R.id.drawer_layout)	13
30409	findViewById(R.id.fab_create_account)	9
21950	findViewById(R.id.fab_create_transaction)	7
9812	findViewById(R.id.input_accounts_spinner)	15
9350	findViewById(R.id.input_should_display_balance)	3
29846	findViewById(R.id.left_drawer)	8
28680	findViewById(R.id.line_chart)	5
26825	findViewById(R.id.line_chart_button).setOnClickListener(new	6
23310	findViewById(R.id.nav_view)	9
32993	findViewById(R.id.next_month_chart_button)	15
13866	findViewById(R.id.pager)	38
1070	findViewById(R.id.passcode)	5
57592	findViewById(R.id.passcode_label)	3
34240	findViewById(R.id.passcode_label)).setText(R.string.toast_confirm_passcode)	5
5262	findViewById(R.id.pie_chart)	12
24695	findViewById(R.id.pie_chart_button).setOnClickListener(new	9
34101	findViewById(R.id.previous_month_chart_button)	14
47352	findViewById(R.id.progress_bar)	4
34142	findViewById(R.id.report_account_type_spinner)	7
21	findViewById(R.id.report_currency_spinner)	8
318	findViewById(R.id.report_currency_spinner)).getSelectedItem()	5
182	findViewById(R.id.row_transfer_account).setVisibility(View.GONE)	7
1256	findViewById(R.id.row_transfer_account).setVisibility(View.VISIBLE)	6
263	findViewById(R.id.row_trn_notes).setVisibility(View.GONE)	3
41	findViewById(R.id.row_trn_notes).setVisibility(View.VISIBLE)	6
1772	findViewById(R.id.row_trn_recurrence).setVisibility(View.GONE)	6
145	findViewById(R.id.row_trn_recurrence).setVisibility(View.VISIBLE)	6
19514	findViewById(R.id.section_header_sub_accounts)	10
7203	findViewById(R.id.section_header_transactions)	32
30099	findViewById(R.id.selected_chart_slice)	12
6713	findViewById(R.id.selected_chart_slice))	22
7365	findViewById(R.id.selected_chart_slice)).setText("")	18
59550	findViewById(R.id.selected_chart_slice)).setText(String.format(SELECTED_VALUE_PATTERN,label,value,percent))	3
29929	findViewById(R.id.selected_chart_slice)).setText(getResources().getString(R.string.label_chart_no_data))	12
62688	findViewById(R.id.selected_chart_slice)).setText(noDataMsg)	3
21838	findViewById(R.id.spinner_toolbar)	10
20058	findViewById(R.id.sub_accounts_container)	10
21879	findViewById(R.id.tab_layout)	20
60209	findViewById(R.id.time_range_layout)	8
1486	findViewById(R.id.time_range_layout).setVisibility(View.GONE)	8
1390	findViewById(R.id.time_range_layout).setVisibility(View.VISIBLE)	8
6866	findViewById(R.id.titles)	31
23227	findViewById(R.id.toolbar)	23
996	findViewById(R.id.toolbar_actionbar)	8
1067	findViewById(R.id.toolbar_transaction_info)	8
19524	findViewById(R.id.transactions_container)	6
21472	findViewById(R.id.transactions_sum)	7
49332	findViewById(mQueryTextView.getDropDownAnchor())	5
42856	findViewForItem(MenuItem	4
42508	findViewForItem(topSubMenu.getItem())	4
1272	finish	58
375	finish()	111
2100	finish(Activity.RESULT_CANCELED)	6
622	finish(Activity.RESULT_OK)	3
1432	finish(int	5
45092	finishAnimation()	4
18537	finishEditMode()	29
18196	finishEditMode(){	24
21056	finishFragment()	31
35941	finished	21
18181	finished.	49
40015	finishes	10
40430	finishes,and	4
40668	finishes:</p>	4
15984	finitive	7
23873	finitive!</string>	8
8677	finnes	35
12870	finns	15
1443	fire	19
45877	fireOnSelected()	4
32166	fired	9
25669	fires	30
2305	first	269
5446	first,	5
23500	first,but	20
40623	first,followed	4
46234	first,since	4
10755	first,sorted	2
45845	first--	4
20982	first-run	17
35375	first.	25
36010	first.addTransaction(t1)	8
36401	first.addTransaction(t2)	8
30716	first.setUID(ALPHA_ACCOUNT_NAME)	7
30802	first.setUID(ALPHA_ACCOUNT_UID)	11
34041	firstAccount	4
62942	firstAcctBalance	4
42535	firstActionWidth	4
52430	firstException)	2
41874	firstLetter	4
3361	firstRun	34
18154	firstRunMillis	21
55849	firstScheduledWeekday	3
33998	firstSplitAmount	2
40808	firstTime	4
40669	firstValue	4
47250	firstVisibleItem,int	4
2744	first\n\nTo	90
49025	fis	4
49355	fis.close()	4
38917	fit	16
46735	fit,so	4
42455	fit.	12
43818	fits.	4
22165	fitxer	7
22092	fitxers	7
21999	fitxers</string>	7
139	fix	43
37405	fixed	12
3805	fixes	170
8309	fixes\n	48
15878	fiyiano</item>	14
10512	fizer	31
549	flag	145
18636	flag")	16
37522	flag.	4
43288	flagActionItems()	16
27702	flagged	7
38513	flags	24
30987	flags)	54
42343	flags,	4
43425	flags,MenuItem[]	13
38786	flags.	4
45006	flagsChanged	4
49873	flaky	5
34907	flatDir{	5
48856	flattened	4
10725	flavor.	2
46413	flavors	4
12973	flavour	5
12265	flavour.applicationId	3
59389	flavours	2
29896	fleksibelt	14
51911	flere	7
20964	flex&#237	10
26407	flexibele	13
5810	flexible	49
29595	flexibler	6
28592	flexvel	12
28126	fliker	4
42950	flipped	4
7259	float	135
41466	float).	4
40603	float,exists	4
41470	float.	5
41171	float...	4
41220	float.class	9
41344	floatKeyframes[]	4
41553	floatKeyframes[i]	4
30071	floatListToArray(List<Float>	6
40381	floatValue()	4
1819	float[3]	9
2013	float[]	32
57679	float[].class)	2
53998	float[]{(float)value*120f,1f,1f	2
51922	float[]{x	11
57652	float[]{x,y	8
30030	float[accountTypeList.size()]	7
30106	float[list.size()]	6
62667	float[mAccountTypeList.size()]	3
30061	float[stack.size()]	5
30399	floating	13
30323	floatingActionButton	18
30232	floatingActionButton.setOnClickListener(new	18
30028	floats	12
41641	floats.	4
16560	florin</item>	9
32246	flow	11
56423	flytta	2
14707	flytte	32
28062	fm	24
54688	fm)	6
20036	fm){	17
51559	fm.findFragmentByTag(	5
27898	fm.popBackStack()	18
31705	fmt	8
31614	fmt.format(date1).equals(fmt.format(date2))	8
49096	fnfe)	9
50804	fnfe.getMessage())	5
34967	fo	3
34883	focus	39
34981	focus)	3
49938	focus,	5
35197	focus,but	20
48120	focus,such	4
49936	focus.	6
37076	focus/pressed	5
31638	focusCurrent	21
31995	focusCurrent.getClass()	17
46506	focusable	9
46471	focusable)	4
49596	focusable.	5
34918	focused	15
50436	focused,int	5
39020	focused,unfocused,added,or	4
27428	focused.	3
21003	foi	26
10235	fois</string>	10
2431	folder	155
14361	folder")	13
28248	folder.createFile(googleApiClient,changeSet,driveContents)	14
30985	folder.listFiles())	13
31071	folder.listFiles()[0]	11
31408	folder.mkdirs()	16
28100	folderId	18
51594	folderId).commit()	7
28543	folders	10
14430	folders")	7
42330	follow	9
40642	follow-on	4
3140	followed	13
31583	following	58
34108	following:	14
12429	follows:	19
57900	fomento"	6
4729	fomento</item>	131
22809	fondi</string>	8
3464	fondos</string>	9
10176	fonds</string>	10
30397	fontColor	22
46507	footer.	4
1891	for	449
23969	for(	5
2857	for(Account	14
56781	for(String	6
34287	for(int	2
41056	for.	8
40740	for.</p>	4
51017	for:	5
47892	forAdapter)	4
34271	forCurrentMonth	9
4569	forCurrentMonth)	33
47909	forList)	4
2472	foram	29
21268	forbedringer	9
28091	forbedringer\n	15
26661	forbid	10
43381	force	4
43322	forceShow	8
43811	forceShow)	8
50007	forceSuggestionQuery()	6
39809	forced	4
43707	forces	4
64365	forcing	1
37250	foreground	5
14402	foreign	34
31426	foreignAccount	2
31069	foreignAccount.addTransaction(multiCulti)	2
63944	foreign_keys=OFF	2
59132	foreign_keys=OFF")	8
63945	foreign_keys=ON	2
59142	foreign_keys=ON")	8
27224	forest	3
4871	forever	9
14193	forgotten.	9
21732	forklaring</string>	10
494	form	49
27384	form,every	3
602	form,the	3
2116	form,then	6
30524	form.	11
287	formType	5
22580	forma	18
30324	formaat\n	10
26966	formal	5
1519	format	294
63710	format")	2
3381	format)	38
7078	format){	63
60258	format,String	3
12469	format,and	4
63671	format,which	3
34586	format-based	14
7029	format.	30
63655	format.<br/>	3
63652	format.<br>	3
6571	format.format(new	8
35512	format.getExtension()	9
33469	format:<br/>	7
37705	format="boolean"	5
37627	format="boolean"/>	5
37365	format="color"	4
37410	format="color|reference"	4
37327	format="dimension"	5
37279	format="float"	4
37023	format="reference"	9
37333	format="reference|color"	5
37713	format="string"	5
32037	formatDate(long	12
5444	formatMoney(Split	10
36259	formatSplitAmount(BigDecimal	14
4322	formatTemplateSplitAmount(BigDecimal	7
50362	formatUrl(CharSequence	5
50053	formatUrl(text2)	5
30417	format\n	27
20179	formato	60
20557	formatos	10
12168	formats	48
1403	formatted	114
31411	formattedAmount	8
36310	formattedAmount(){	8
59064	formattedAmount){	5
12599	formattedCurrentTimeString	15
23981	formattedString	2
36069	formattedString(){	11
51194	formattedString(@NonNull	4
12688	formattedString(Locale	33
51199	formattedString(Locale.getDefault())	8
6981	formatter	111
12411	formatter.format(	17
31039	formatter.format(amount)	3
13393	formatter.format(amount.doubleValue())	10
26569	formatter.format(asDouble())	26
6992	formatter.format(new	34
36071	formatter.format(newAmount.doubleValue())	14
12884	formatter.format(numerator.divide(denominator))	5
12618	formatter.format(numerator.divide(denominator,MathContext.DECIMAL32))	3
56559	formatter.format(result.doubleValue())	12
31210	formatter.getCurrency().getSymbol()	3
1959	formatter.parse(amount,parsePosition)	6
51249	formatter.parse(amountString)	6
28939	formatter.parse(amountString).toString()	11
58579	formatter.parse(exchangeRateString)	6
63770	formatter.parse(formattedAmount)	2
59039	formatter.parse(formattedAmount).toString()	3
36043	formatter.setGroupingUsed(false)	24
13579	formatter.setMaximumFractionDigits(2)	19
12305	formatter.setMaximumFractionDigits(6)	5
32715	formatter.setMaximumFractionDigits(DECIMAL_PLACES)	13
36183	formatter.setMaximumFractionDigits(commodity.getSmallestFractionDigits())	9
36285	formatter.setMaximumFractionDigits(mCommodity.getSmallestFractionDigits())	12
36354	formatter.setMaximumFractionDigits(mCurrency.getDefaultFractionDigits())	20
36070	formatter.setMinimumFractionDigits(0)	16
13753	formatter.setMinimumFractionDigits(2)	19
32684	formatter.setMinimumFractionDigits(DECIMAL_PLACES)	11
36104	formatter.setMinimumFractionDigits(commodity.getSmallestFractionDigits())	6
36374	formatter.setMinimumFractionDigits(mCommodity.getSmallestFractionDigits())	9
36475	formatter.setMinimumFractionDigits(mCurrency.getDefaultFractionDigits())	11
31215	formatter.setNegativePrefix("-"	3
31061	formatter.setNegativeSuffix("")	3
31794	formatter.setParseBigDecimal(true)	11
4411	formatting	57
43386	formatting.	4
52048	formatw	9
705	forms	24
22117	formt	7
163	formtypeString	5
53493	formula	2
28125	forsetter!	6
28110	forskjellige	4
59292	fortfahren	4
5390	fortfahren!	6
25657	fortfahren?</string>	7
55856	fortfarande	2
59920	fortnight	3
21340	fortsette</string>	6
21813	fortsette?</string>	9
55963	fortstta,tryck	2
56345	fortstta?</string>	2
42275	forward	9
41983	forward.	8
50041	forwarding	5
49522	fos	4
48958	fos.close()	4
1015	found	130
46372	found!	4
45516	found!",e)	4
55292	found")	8
49516	found,-1	4
51539	found,abort	5
51079	found,bail	5
34486	found,resetting	10
12889	found,then	5
30235	found,updating	8
2982	found.	116
50946	found:	5
6023	found</string>	139
16955	foutcorrecties	6
5331	fr	100
8221	fra	41
7668	frac	6
13463	fraction	62
36066	fraction)	22
36318	fraction){	7
40611	fraction,Integer	4
40813	fraction,Number	4
41269	fraction,Object	4
42078	fraction,T	4
36233	fraction,a	4
41485	fraction,float	4
41886	fraction,for	4
41550	fraction,int	5
42716	fraction,of	4
42237	fraction,which	7
36059	fraction:	9
20537	fractionDigits	24
23384	fractional	18
7577	fractions	17
36252	fractions,1	4
36021	fractions,100	4
30674	frag	32
33532	frag.mOriginAccountUID	3
33759	frag.mSubAccountCount	3
33587	frag.mTransactionCount	3
56775	frag.setArguments(args)	12
937	fragment	232
13175	fragment")	8
1564	fragment)	28
2187	fragment).onAccountTypeUpdated(mAccountType)	3
1185	fragment).onGroupingUpdated(mReportGroupInterval)	3
32349	fragment).onTimeRangeUpdated(mReportPeriodStart,mReportPeriodEnd)	3
326	fragment).onTimeRangeUpdated(mReportStartTime,mReportEndTime)	6
13448	fragment).refresh()	21
5088	fragment).refreshList()	17
21440	fragment).updateDateRange(start,end)	5
636	fragment).updateDateRange(start,end,mDateRangeInterval)	4
7463	fragment){	22
30504	fragment,it	8
51401	fragment,this	9
19511	fragment.	29
54617	fragment.mActionType	3
56506	fragment.mDateRangeSetListener	3
27639	fragment.mDisplayMode	6
56505	fragment.mEndRange	3
8656	fragment.mOnTransferFundsListener	9
33770	fragment.mOriginAccountUID	2
7746	fragment.mOriginAmount	7
62070	fragment.mPageKey	3
56547	fragment.mStartRange	3
33780	fragment.mSubAccountCount	2
50686	fragment.mTargetCommodity	2
8110	fragment.mTargetCurrency	7
8303	fragment.mTargetCurrencyCode	4
31842	fragment.mTransactionAmount	5
33689	fragment.mTransactionCount	2
13468	fragment.refresh()	8
29790	fragment.setArguments(args)	14
59615	fragment.setTargetFragment(TransactionsListFragment.this,0)	3
23642	fragment.show(ft,"time_dialog")	16
59642	fragment.show(getActivity().getSupportFragmentManager(),"bulk_move_transactions")	3
31738	fragment.show(getFragmentManager(),"tranfer_funds_editor")	15
12714	fragment.show(getFragmentManager(),"transfer_funds_editor")	6
54834	fragment.startActivityForResult(chooser,REQUEST_PICK_ACCOUNTS_FILE)	2
30679	fragmentArguments	11
30598	fragmentArguments.getLong(ARG_PARENT_ACCOUNT_ID)	9
63332	fragmentArguments.getLong(UxArgument.PARENT_ACCOUNT_ID)	4
1480	fragmentManager	106
8171	fragmentManager.beginTransaction()	29
795	fragmentName)	18
8478	fragmentTransaction	71
27656	fragmentTransaction.add(R.id.fragment_container,	17
34553	fragmentTransaction.add(R.id.fragment_container,fragment)	6
50824	fragmentTransaction.add(R.id.fragment_container,new	6
34678	fragmentTransaction.add(R.id.fragment_container,transactionFormFragment)	6
8247	fragmentTransaction.addToBackStack(null)	46
1222	fragmentTransaction.commit()	80
13242	fragmentTransaction.replace(R.id.fragment_container,	37
53976	fragmentTransaction.replace(R.id.fragment_container,BudgetDetailFragment.newInstance(budgetUID))	2
34516	fragmentTransaction.replace(R.id.fragment_container,accountFormFragment)	6
8077	fragmentTransaction.replace(R.id.fragment_container,fragment)	19
910	fragmentTransaction.replace(R.id.fragment_container,new	12
19901	fragmentTransaction.replace(R.id.sub_accounts_container,subAccountsListFragment,AccountsActivity.FRAGMENT_ACCOUNTS_LIST)	15
20010	fragmentTransaction.replace(R.id.transactions_container,	10
1553	fragments	80
1573	fragments)	11
39464	fragments).	4
27549	fragments.	17
41473	frame	20
42854	frame's	4
43173	frame,after	4
42221	frame,immediately	4
42120	frame,which	4
41663	frame.	11
47064	frame.setLevel(10000)	4
42276	frameDelay	4
41847	frameDelay)	4
42262	frames	4
42066	frames,in	4
27079	framework	17
47207	framework.	6
63274	franc	2
59069	franc")	2
16728	frank</item>	6
56439	frbttringar\n	2
26338	free	18
44799	freed	4
45944	freezing	4
5785	freigeben	2
8616	frequency	10
7776	frequency.	20
49441	frequently	4
40467	fresh,empty	4
44340	freshly	4
56245	frg	2
56178	frg</string>	2
15431	frica	13
55915	frklaring</string>	2
56281	frmga	2
56247	frn	3
56120	frn</string>	2
55917	frndringar	2
1726	from	438
55426	from")	5
3272	from,	11
31515	from,Currency	5
7432	from,int[]	36
37298	from.	17
21806	from</string>	21
12942	fromCommodity	3
8341	fromCurrency	14
12096	fromCurrency.getCurrencyCode()	11
8103	fromCurrency.getCurrencyCode(),	5
8193	fromCurrencyCode	13
8048	fromCurrencyCode,	4
61981	fromCurrencyCode.equals(targetCurrencyCode)){	3
9633	fromLegacyPeriod(long	5
39727	fromResume)	4
47147	fromUser	4
46778	fromUser)	4
47085	fromUser,	4
38072	front	15
44182	frozen.	4
38956	frozen/restored	4
57306	frsk	3
55953	frst\n\nFr	2
23481	ft	38
38986	ft)	9
29757	ft.addToBackStack(null)	19
29786	ft.remove(prev)	20
27565	fuchsia	3
11675	fulfill	31
56536	fulfilled	7
1153	full	106
23919	full-name	4
24602	fullName	32
1640	fullName)	16
24402	fullName){	7
1638	fullName,	22
51097	fullName,@NonNull	6
51093	fullName,AccountType	6
58515	fullName.split(ACCOUNT_NAME_SEPARATOR)	4
213	fullName.trim().split(ACCOUNT_NAME_SEPARATOR)	14
56812	fullPathName)	7
21228	fullfrt</string>	20
36200	fullname	21
36171	fullname,	4
36394	fullname,String	7
61419	fullname="Afghani"	3
60872	fullname="Algerian	3
61195	fullname="Andorran	3
60817	fullname="Angola	3
61389	fullname="Argentine	3
60906	fullname="Armenian	3
60990	fullname="Aruban	3
61100	fullname="Australian	3
60804	fullname="Austrian	3
60723	fullname="Azerbaijanian	3
61024	fullname="Bahamian	3
61338	fullname="Bahraini	3
61673	fullname="Baht"	3
60760	fullname="Balboa"	3
60766	fullname="Barbados	3
58104	fullname="Belarussian	6
61237	fullname="Belgian	3
61438	fullname="Belize	3
60829	fullname="Bermudian	3
55219	fullname="Bitcoin"	2
61479	fullname="Bolivar	3
61295	fullname="Boliviano"	3
61159	fullname="Bosnia	3
60776	fullname="Brazilian	3
61199	fullname="Brunei	3
60955	fullname="Bulgarian	3
61369	fullname="Burundi	3
61611	fullname="CFA	3
61619	fullname="CFP	3
61108	fullname="Canadian	3
60993	fullname="Cape	3
61167	fullname="Cayman	3
60698	fullname="Cedi"	3
60980	fullname="Chilean	3
61458	fullname="Code	3
60783	fullname="Colombian	3
61440	fullname="Comoro	3
61209	fullname="Convertible	3
61244	fullname="Cordoba	3
61110	fullname="Costa	3
61230	fullname="Croatian	3
60702	fullname="Cuban	3
60945	fullname="Cyprus	3
60733	fullname="Czech	3
60931	fullname="Dalasi"	3
60851	fullname="Danish	3
61271	fullname="Denar"	3
61014	fullname="Deutsche	3
61357	fullname="Djibouti	3
61562	fullname="Dobra"	3
61258	fullname="Dominican	3
61688	fullname="Dong"	3
61647	fullname="East	3
61006	fullname="Ecuador	3
61136	fullname="Egyptian	3
61701	fullname="El	3
61279	fullname="Ethiopian	3
61187	fullname="Euro"	3
60922	fullname="Falkland	3
61224	fullname="Fiji	3
61245	fullname="Finnish	3
61013	fullname="Forint"	3
61348	fullname="Franc	3
61097	fullname="French	3
61170	fullname="Ghana	3
61308	fullname="Gibraltar	3
61464	fullname="Gold"	3
61587	fullname="Gold-Franc"	3
61264	fullname="Gourde"	3
60946	fullname="Greek	3
61390	fullname="Guarani"	3
61400	fullname="Guinea	3
60845	fullname="Guinea-Bissau	3
61299	fullname="Guyana	3
60912	fullname="Hong	3
61523	fullname="Hryvnia"	3
61214	fullname="Iceland	3
60769	fullname="Indian	3
61035	fullname="Iranian	3
60855	fullname="Iraqi	3
60900	fullname="Irish	3
61068	fullname="Italian	3
60901	fullname="Jamaican	3
60739	fullname="Jordanian	3
61109	fullname="Kenyan	3
60700	fullname="Kina"	3
61057	fullname="Kip"	3
60995	fullname="Kroon"	3
61200	fullname="Kuwaiti	3
61547	fullname="Kwacha	3
61364	fullname="Kwacha"	3
60744	fullname="Kwanza"	3
60875	fullname="Kyat"	3
61005	fullname="Lari"	3
61300	fullname="Latvian	3
60781	fullname="Lebanese	3
61316	fullname="Lek"	3
61421	fullname="Lempira"	3
61484	fullname="Leone"	3
61340	fullname="Liberian	3
60831	fullname="Libyan	3
61606	fullname="Lilangeni"	3
61406	fullname="Lithuanian	3
60833	fullname="Loti"	3
61034	fullname="Luxembourg	3
61022	fullname="Malagasy	3
61131	fullname="Malaysian	3
61095	fullname="Mali	3
60820	fullname="Maltese	3
61708	fullname="Manat"	3
61021	fullname="Mauritius	3
61030	fullname="Metical"	3
61016	fullname="Mexican	3
61149	fullname="Moldovan	3
61075	fullname="Moroccan	3
60998	fullname="Mozambique	3
60713	fullname="Mvdol"	3
60919	fullname="Naira"	3
61294	fullname="Nakfa"	3
61092	fullname="Namibia	3
60904	fullname="Nepalese	3
61113	fullname="Netherlands	4
61188	fullname="New	4
60724	fullname="Ngultrum"	3
61382	fullname="Nicaraguan	3
61602	fullname="No	3
61311	fullname="North	3
61148	fullname="Norwegian	3
61242	fullname="Nuevo	3
60891	fullname="Ouguiya"	3
61591	fullname="Pa'anga"	3
61171	fullname="Pakistan	3
61505	fullname="Palladium"	3
60961	fullname="Pataca"	3
61579	fullname="Peso	3
61247	fullname="Philippine	3
61456	fullname="Platinum"	3
61273	fullname="Portuguese	3
61145	fullname="Pound	3
60967	fullname="Pula"	3
61119	fullname="Qatari	3
61241	fullname="Quetzal"	3
61530	fullname="Rand"	3
61306	fullname="Rial	3
60899	fullname="Riel"	3
61355	fullname="Romanian	3
61107	fullname="Rufiyaa"	3
61153	fullname="Rupiah"	3
60908	fullname="Russian	3
61033	fullname="Rwanda	3
61612	fullname="SDR"	3
61498	fullname="Saint	3
61196	fullname="Saudi	3
61082	fullname="Serbian	3
60911	fullname="Seychelles	3
61500	fullname="Silver"	3
61541	fullname="Singapore	3
61512	fullname="Slovak	3
61483	fullname="Slovenian	3
61049	fullname="Solomon	3
61084	fullname="Som"	3
61593	fullname="Somali	3
61476	fullname="Somoni"	3
61317	fullname="Spanish	3
60814	fullname="Sri	3
61236	fullname="Sudanese	3
61480	fullname="Surinam	3
61668	fullname="Suriname	3
61621	fullname="Swedish	3
61375	fullname="Swiss	3
61543	fullname="Syrian	3
61699	fullname="Tajik	3
61385	fullname="Taka"	3
61507	fullname="Tala"	3
61549	fullname="Tanzanian	3
61280	fullname="Tenge"	3
61692	fullname="Trinidad	3
61194	fullname="Tugrik"	3
61680	fullname="Tunisian	3
61516	fullname="Turkish	3
60734	fullname="UAE	3
61473	fullname="UIC-Franc"	3
61540	fullname="US	3
61618	fullname="Uganda	3
60697	fullname="Unidad	3
60825	fullname="Unidades	3
61564	fullname="Uruguay	3
61671	fullname="Uzbekistan	3
61663	fullname="Vatu"	3
61536	fullname="Venezuela	3
60692	fullname="WIR	3
60918	fullname="Won"	3
61649	fullname="Yemeni	3
60797	fullname="Yen"	3
61251	fullname="Yuan	3
61544	fullname="Yugoslavian	3
61657	fullname="Zambian	3
61674	fullname="Zimbabwe	3
61004	fullname="Zloty"	3
19614	fully	57
6620	fullyQualifiedAccountName	11
56172	funcionalidade	2
14601	function	44
42050	function,called	4
19114	function,if	11
41723	function.	12
44633	functional.	4
41585	functionality	16
19357	functions	20
41286	functions.	4
35576	functtion	6
58242	fund	6
12518	funds	32
28646	funds"	13
3867	funds</string>	80
44118	funnel	4
15133	funnet.	14
15014	funnet.\nOpprett	14
14991	funnet</string>	21
60406	furnished	3
44500	further	8
59420	futher	2
6824	future	100
4696	future)	12
62109	future,consider	3
55779	future,if	8
50210	future,see	5
59948	future,we	9
6629	future.	32
60069	futureScheduledActions_shouldNotRun(){	4
55164	g	7
63177	g.execute(mClient,listener,mHandler)	3
26386	gaan!	6
16749	gaan,druk	3
22617	gagal</string>	7
38681	gain	4
10400	galement	28
38828	gameplay,or	4
55898	gamla	2
21239	gamle	10
37487	gap	4
42256	garbage	4
22668	garis	7
2725	gastos	28
23893	gather	17
25359	gave	16
17720	gdy	19
16922	ge&#235	37
30368	geben	9
16725	gebruiken	15
16603	gebruikte	16
16890	geef	3
16679	geen	7
16504	geexporteerd	5
25731	geffnet	3
22052	geffnet</string>	8
22360	geffnet\n\nIhre	7
29507	gefunden.	6
22317	gefunden</string>	13
26500	gegevens	13
4675	gel&#246	11
17020	geldige	7
5012	gelscht!</string>	14
4913	gelscht.</string>	27
25741	gelscht.\n\nWollen	7
4187	gelscht</string>	16
16530	gemaakt	13
4544	gemacht	13
55852	gemenskap</string>	2
16813	gemporteerd</string>	13
15078	gen	7
4738	gen</string>	26
22452	gendert!</string>	7
1062	general	24
40619	general,circular	4
59126	general.	9
16019	generales</string>	7
22745	generali</string>	6
28268	generalize	4
7333	generally	19
14686	generals</string>	13
1176	generate	75
54022	generateChartData(BarChart	5
54105	generateChartData(holder.budgetChart,budgetAmount)	2
32505	generateDefaultBookName()	6
44144	generateDefaultLayoutParams()	16
9880	generateExport()	38
5863	generateExport(Writer	93
63650	generateExport(writer)	3
31223	generateGncXml()	9
39505	generateLayout()	4
43719	generateLayoutParams(AttributeSet	8
43501	generateLayoutParams(ViewGroup.LayoutParams	8
45337	generateLayoutParams(customView.getLayoutParams())	4
25732	generateMissedScheduledTransactions(ScheduledAction	10
25655	generateMissedScheduledTransactions(mScheduledAction)	10
20133	generateNewUID	8
11545	generateNewUID){	30
8819	generateOfx(Document	28
35636	generateOfx(document,root)	2
9624	generateOfxExport()	16
43431	generateOverflowButtonLayoutParams()	4
30983	generateQIF()	7
7076	generateQIF(){	11
26130	generateReport()	10
35757	generateUID	10
26279	generateUID()	32
20318	generateUID(){	20
34005	generateUID){	19
26175	generateUUID()	12
21160	generateXML()	10
1637	generated	133
50883	generated,even	7
33588	generated.	4
18300	generated.</p>	7
20607	generated.<br/>	2
54092	generated</p>	5
30322	generatedName	2
25605	generatedTransactionCount	4
21139	generates	21
19866	generating	29
21408	generation	12
37181	generic	10
40508	generically	4
41345	generics	4
55943	genomsnittliga	2
16722	geopend</string>	7
15860	georgiano</item>	14
16979	geplande	7
22197	geplanten	8
4677	gerenciador	20
5073	geschickt	15
59201	geschlossen</string>	4
17000	geselecteerd</string>	12
16628	geselecteerde	7
17159	gesloten</string>	3
21976	gespeichert</string>	8
17213	gestapelde-staaf</string>	7
3840	gesti&#243	7
15623	gestin	7
11828	gestion	5
25812	gestione	11
16358	gestionnaire	14
29723	gesto	8
15817	gestor	59
854	get	153
43124	get(Context	8
45906	get(int	4
24376	getAccount(@NonNull	4
24407	getAccount(String	17
24463	getAccount(getID(uid))	9
35264	getAccount(getId(uid))	5
24409	getAccount(long	18
24482	getAccountBalance(@NonNull	4
21620	getAccountBalance(AccountType	12
21870	getAccountBalance(List<AccountType>	6
18806	getAccountBalance(String	22
19182	getAccountBalance(id)	9
19101	getAccountBalance(long	42
53216	getAccountBudgets(String	2
6684	getAccountColorCode(long	16
27519	getAccountColorOptions(),	3
27531	getAccountColorOptions(){	3
25620	getAccountCurrencyCode(@NonNull	7
31389	getAccountCurrencyCode(String	3
19596	getAccountCurrencyCode(accountUID)	14
30931	getAccountCurrencyCode(long	5
59704	getAccountCurrencyCode(uid)	1
24288	getAccountFullName(@NonNull	4
24250	getAccountFullName(String	14
62587	getAccountFullName(newParentAccountUID)	5
24558	getAccountFullName(parentAccountUID)	7
24200	getAccountID(@NonNull	4
24436	getAccountID(@Nullable	4
18441	getAccountID(String	30
26698	getAccountID(account.getUID()))	28
7175	getAccountID(accountUID)	8
24426	getAccountID(cursor.getString(	2
24489	getAccountID(defaultTransferAccountUID)	7
64263	getAccountID(uid)	1
62675	getAccountMap(List<AccountType>	6
62665	getAccountMap(accountTypeList).entrySet())	4
24330	getAccountName(@NonNull	4
2489	getAccountName(String	28
2714	getAccountName(accountUID)	9
53142	getAccountSum(String	5
51167	getAccountType()	7
26449	getAccountType().hasDebitNormalBalance()	7
1817	getAccountType(){	17
21060	getAccountType(@NonNull	7
6537	getAccountType(String	23
24129	getAccountType(accountUID)	8
19232	getAccountType(accountUID).hasDebitNormalBalance()	15
58760	getAccountType(accountUIDList.get(0)).hasDebitNormalBalance()	14
24338	getAccountType(getAccountUID(accountId))	8
59660	getAccountType(getUID(accountId))	1
11351	getAccountType(long	37
62578	getAccountType(newParentAccountUID)	5
24533	getAccountType(parentAccountUID)	4
26615	getAccountTypeStringList()	7
1790	getAccountTypeStringList(){	7
30101	getAccountTypeToAccountUidMap(List<AccountType>	7
30003	getAccountTypeToAccountUidMap(accountTypeList).entrySet())	5
34022	getAccountUID()	13
6619	getAccountUID(accountId)	42
35435	getAccountUID(dstAccountId)	4
24240	getAccountUID(id)	11
18461	getAccountUID(long	32
58724	getAccountUID(rowId)	4
35483	getAccountUID(srcAccountId)	4
18496	getAccountUidFromTransaction(long	7
840	getAccountsBalance(@NonNull	13
3208	getAccountsBalance(List<String>	19
36537	getAccountsDbAdapter()	21
38165	getActionBar()	11
29826	getActionBar().setTitle(mTitle)	2
55058	getActionInstanceCount(String	2
44348	getActionItems()	4
50218	getActionKeyMessage(Cursor	5
49921	getActionKeyMessage(c,actionKey)	5
42327	getActionProvider()	12
33700	getActionType()	5
32269	getActionUID()	5
42801	getActionView()	13
43617	getActionViewStatesKey()	8
43668	getActionViewStatesKey())	4
23984	getActiveAccountColorResource(@NonNull	20
63452	getActiveBookDisplayName(){	4
59888	getActiveBookSharedPreferences(){	3
59884	getActiveBookSharedPreferences(Context	5
57033	getActiveBookUID	8
58743	getActiveBookUID()	3
63443	getActiveBookUID(){	4
58792	getActiveDb(){	3
60237	getActiveRootAccountUID(){	7
2430	getActivity()	102
33898	getActivity())	28
1950	getActivity()).getAccountType()))	18
19549	getActivity()).getCurrentAccountID())	5
882	getActivity()).getCurrentAccountUID()	15
31446	getActivity()).getCurrentAccountUID())	4
1731	getActivity()).getSupportActionBar()	67
20698	getActivity()).getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_close_white_24dp)	5
54094	getActivity()).getSupportActionBar().setTitle(budgetName)	5
30607	getActivity()).importAccounts()	7
52408	getActivity()).setOnBackListener(mCalculatorKeyboard)	14
32218	getActivity()).updateReportTypeSpinner(getReportType())	6
7978	getActivity(),	21
52999	getActivity(),R.layout.dropdown_item_2lines,null,from,to)	3
35991	getActivity(),android.R.layout.simple_dropdown_item_1line,	10
1662	getActivity(),android.R.layout.simple_list_item_1,accountTypes)	7
62227	getActivity(),android.R.layout.simple_spinner_item)	6
61872	getActivity(),cursor)	6
61890	getActivity(),mParentAccountCursor)	3
53851	getActivity(),mRecurrenceRule,this))	5
116	getActivity().findViewById(R.id.date_range_divider).setVisibility(View.GONE)	9
2197	getActivity().findViewById(R.id.date_range_divider).setVisibility(View.VISIBLE)	6
1207	getActivity().findViewById(R.id.date_range_recyclerview).setVisibility(View.GONE)	6
978	getActivity().findViewById(R.id.date_range_recyclerview).setVisibility(View.VISIBLE)	6
27477	getActivity().findViewById(R.id.edit_text_account_name)	8
54008	getActivity().findViewById(R.id.fab_create_budget)	2
54160	getActivity().findViewById(R.id.fab_create_budget).setVisibility(View.VISIBLE)	2
4216	getActivity().findViewById(R.id.input_date)	7
4904	getActivity().findViewById(R.id.input_time)	7
23197	getActivity().findViewById(R.id.progress_indicator)	8
1532	getActivity().findViewById(R.id.time_range_layout).setVisibility(View.GONE)	6
1521	getActivity().finish()	42
18150	getActivity().getApplicationContext(),	40
55341	getActivity().getContentResolver().takePersistableUriPermission(backupFileUri,takeFlags)	3
31279	getActivity().getContentResolver().takePersistableUriPermission(mExportUri,takeFlags)	4
28545	getActivity().getCurrentAccountListFragment()	7
28971	getActivity().getCurrentPagerFragment()	11
12612	getActivity().getExternalFilesDir(null)	22
30941	getActivity().getIntent().getAction()	4
31518	getActivity().getLayoutInflater()	10
31445	getActivity().getResources().getStringArray(R.array.export_destinations)	17
57170	getActivity().getSharedPreferences(getString(R.string.owncloud_pref),Context.MODE_PRIVATE)	3
4950	getActivity().getString(R.string.alert_dialog_ok_delete)	13
5812	getActivity().getString(R.string.label_credit)	11
34224	getActivity().getString(R.string.label_dismiss)	15
59622	getActivity().getString(R.string.title_move_transactions,	10
29172	getActivity().getString(R.string.toast_transanction_amount_required)	8
14337	getActivity().getSupportActionBar()	7
32082	getActivity().getSupportActionBar().setTitle(R.string.label_create_account)	5
32093	getActivity().getSupportActionBar().setTitle(R.string.title_edit_account)	5
1400	getActivity().getSupportFragmentManager()	54
58718	getActivity().getSupportFragmentManager().popBackStack()	3
58688	getActivity().getSystemService(	3
18426	getActivity().getSystemService(Context.ALARM_SERVICE)	6
18768	getActivity().getSystemService(Context.INPUT_METHOD_SERVICE)	10
19473	getActivity().getSystemService(Context.SEARCH_SERVICE)	13
60688	getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN)	3
64303	getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE)	3
54712	getActivity().getWindow().setStatusBarColor(getResources().getColor(R.color.theme_primary_dark))	6
54650	getActivity().getWindow().setStatusBarColor(getResources().getColor(android.R.color.darker_gray))	3
21576	getActivity().requestPermissions(new	8
28895	getActivity().sendBroadcast(intent)	5
29113	getActivity().sendBroadcast(transactionIntent)	8
33453	getActivity().setResult(Activity.RESULT_CANCELED)	5
30797	getActivity().setResult(Activity.RESULT_OK)	7
31660	getActivity().setResult(Activity.RESULT_OK,data)	15
240	getActivity().setResult(resultCode)	3
54779	getActivity().setTab(AccountsActivity.INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT)	5
33976	getActivity().startActionMode(	5
33985	getActivity().startActionMode(mActionModeCallbacks)	5
13623	getActivity().startActivity(intent)	24
49106	getActivity(int	4
48453	getActivityChooserModelClient1()	4
48236	getActivityChooserModelClient2()	4
49298	getActivityCount()	6
50953	getActivityIcon(ComponentName	5
50998	getActivityIcon(component)	5
50638	getActivityIconWithCache(ComponentName	5
49239	getActivityIndex(ResolveInfo	4
46122	getAdapter()	7
46453	getAdapter().getCount()	4
45990	getAdapter().getItemId(selection))	4
53464	getAdvanceCreateDays()	2
53457	getAdvanceNotifyDays()	2
52351	getAllAccounts()	7
24556	getAllAccounts(){	15
19380	getAllAccountsBalance(){	12
55344	getAllBookUIDs(){	3
33622	getAllEnabledScheduledActions(){	10
153	getAllOpeningBalanceTransactions(){	10
61582	getAllRecords(){	3
51437	getAllScheduledActions(){	5
51388	getAllScheduledEvents(){	5
24610	getAllTransactions(){	6
3852	getAllTransactionsCount()	15
6958	getAllTransactionsCount(){	23
24093	getAllTransactionsForAccount(@NonNull	4
24070	getAllTransactionsForAccount(String	9
19225	getAllTransactionsSum(){	9
26735	getAllowedParentAccountTypes(Account.AccountType	4
444	getAllowedParentAccountTypes(AccountType	11
26938	getAllowedParentAccountTypes(accountType)	9
42499	getAlpha()	5
42338	getAlphabeticShortcut()	12
23398	getAmount()	23
53661	getAmount(@NonNull	2
53530	getAmountSum(){	2
24765	getAmountValue(){	3
42751	getAnimatedFraction()	4
41879	getAnimatedFraction().	4
42248	getAnimatedValue()	5
41807	getAnimatedValue(String	4
41606	getAnimatedValue(String)	4
41758	getAnimatedValue(String).	4
45721	getAnimatedVisibility()	4
57671	getAnimationScales	2
57717	getAnimationScales.invoke(windowManagerObj)	2
12891	getAppContext()	15
18993	getAppManifest(Config	7
19396	getApplication()).loadBook(bookUID)	6
12804	getApplicationContext()	29
19799	getApproxEndTime(){	11
349	getArguments()	46
27861	getArguments().getInt("title")	25
27168	getArguments().getInt(KEY_COLUMNS)	3
27303	getArguments().getInt(KEY_SIZE)	3
27538	getArguments().getInt(KEY_TITLE_ID)	3
27313	getArguments().getLong(AccountsListFragment.ARG_PARENT_ACCOUNT_ID)	10
18128	getArguments().getLong(SELECTED_TRANSACTION_ID)	22
63743	getArguments().getLong(TransactionsListFragment.ORIGIN_ACCOUNT_ID)	2
8517	getArguments().getLong(TransactionsListFragment.SELECTED_ACCOUNT_ID)	37
56741	getArguments().getLong(TransactionsListFragment.SELECTED_TRANSACTION_IDS)	6
26841	getArguments().getLong(UxArgument.PARENT_ACCOUNT_ID)	6
13133	getArguments().getLong(UxArgument.SELECTED_ACCOUNT_ID)	10
14133	getArguments().getLong(UxArgument.SELECTED_TRANSACTION_ID)	10
51084	getArguments().getLong(UxArgument.SELECTED_TRANSACTION_IDS)	6
59900	getArguments().getLongArray(TransactionsListFragment.SELECTED_TRANSACTION_IDS)	4
57440	getArguments().getParcelableArrayList(UxArgument.BUDGET_AMOUNT_LIST)	3
62833	getArguments().getParcelableArrayList(UxArgument.SPLIT_LIST)	4
29293	getArguments().getString(TransactionsListFragment.SELECTED_ACCOUNT_NAME)	5
53842	getArguments().getString(UxArgument.BUDGET_UID)	5
64212	getArguments().getString(UxArgument.PARENT_ACCOUNT_UID)	2
27071	getArguments().getString(UxArgument.SCHEDULED_ACTION_UID)	18
30776	getArguments().getString(UxArgument.SELECTED_ACCOUNT_UID)	25
18621	getArguments().getString(UxArgument.SELECTED_TRANSACTION_UID)	15
33321	getArguments().getStringArrayList(UxArgument.SPLIT_LIST)	9
19474	getArguments().putLong(ARG_PARENT_ACCOUNT_ID,parentAccountId)	9
63288	getArguments().putLong(UxArgument.PARENT_ACCOUNT_ID,parentAccountId)	4
19595	getArguments().putString(UxArgument.PARENT_ACCOUNT_UID,parentAccountUID)	11
25326	getAttribute(@NonNull	12
58809	getAttribute(TransactionEntry.TABLE_NAME,transxUID,TransactionEntry.COLUMN_CURRENCY)	3
51744	getAttribute(accountUID,AccountEntry.COLUMN_FAVORITE)	3
51774	getAttribute(accountUID,AccountEntry.COLUMN_HIDDEN)	3
62019	getAttribute(accountUID,AccountEntry.COLUMN_NAME)	3
51831	getAttribute(accountUID,AccountEntry.COLUMN_PLACEHOLDER)	3
63479	getAttribute(bookUID,BookEntry.COLUMN_ACTIVE)	4
58754	getAttribute(mTableName,recordUID,columnName)	3
26541	getAutoBalanceSplit(){	18
47659	getBackground()	4
24830	getBackupFilePath(){	11
60248	getBackupFilePath(String	3
55325	getBackupFilePath(bookUID)	3
60302	getBackupFolderPath(){	5
60280	getBackupFolderPath(String	3
64132	getBalance()	3
12400	getBalance().toPlainString()	12
58	getBalance(){	36
24486	getBalance(@NonNull	7
10364	getBalance(String	30
35595	getBalance(accountUID)	8
35575	getBalance(long	4
48127	getBaseline()	4
33194	getBigDecimal(long	17
33011	getBigDecimal(numerator,denominator)	11
55358	getBookBackupFileUri(String	4
59879	getBookSharedPreferences(BooksDbAdapter.getInstance().getActiveBookUID())	3
57006	getBookSharedPreferences(Context	5
59866	getBookSharedPreferences(String	3
32600	getBookUID(){	3
19637	getBooksDbAdapter(){	17
45201	getBottom()	4
53274	getBudgetAmountSum(String	2
53462	getBudgetAmounts()	2
53109	getBudgetAmounts(String	2
53299	getBudgetAmounts(accountUID)	2
53330	getBudgetAmountsDbAdapter(){	6
53018	getBudgetAmountsForBudget(String	2
53080	getBudgetDbAdapter()	2
53908	getBudgetProgressColor(double	2
53525	getBudgetUID()	2
7913	getByDay(){	11
34956	getByDays(){	3
8301	getByParts(long	10
34585	getCalculatorKeyboard(){	9
34562	getCalculatorKeyboardView()	9
34575	getCalculatorKeysLayout()	12
43653	getCallback	4
39260	getCallback()	12
40794	getChildAnimations()	4
43784	getChildAt(0)	14
43590	getChildAt(0).getLayoutParams()	4
43772	getChildAt(childCount	4
44172	getChildAt(childIndex	5
43499	getChildAt(childIndex)	5
46754	getChildAt(count	4
45245	getChildAt(getChildCount()	4
44104	getChildAt(i)	18
48174	getChildAt(i).setEnabled(enabled)	4
45846	getChildAt(mSelectedPosition	4
43495	getChildCount()	22
46798	getChildCount())	4
46348	getChildHeight(View	4
45959	getChildHeight(view)	4
46411	getChildWidth(View	4
46255	getChildWidth(view)	4
40328	getCircularProgressBar(boolean	4
40127	getCircularProgressBar(false)	4
40142	getCircularProgressBar(true)	4
36263	getClass()	8
8049	getClass().getClassLoader().getResourceAsStream(filename)	3
53309	getClass().getSimpleName()	2
31506	getCleanString()	19
52786	getCleanString(){	4
9784	getClient(){	2
437	getColor()	6
27288	getColorCode()	4
1438	getColorHexCode()	11
27442	getColors()	3
51072	getColumnString(Cursor	5
49932	getColumnString(c,SearchManager.SUGGEST_COLUMN_INTENT_ACTION)	5
49727	getColumnString(c,SearchManager.SUGGEST_COLUMN_INTENT_DATA)	5
50491	getColumnString(c,SearchManager.SUGGEST_COLUMN_INTENT_DATA_ID)	5
50201	getColumnString(c,SearchManager.SUGGEST_COLUMN_INTENT_EXTRA_DATA)	5
50147	getColumnString(c,SearchManager.SUGGEST_COLUMN_QUERY)	5
50452	getColumnString(cursor,SearchManager.SUGGEST_COLUMN_QUERY)	5
61628	getCommoditiesDbAdapter(){	3
25896	getCommoditiesInUse()	3
32908	getCommodity("AUD")	7
32654	getCommodity("CAD")	7
36624	getCommodity("CHF")	4
36600	getCommodity("EUR")	4
36567	getCommodity("GBP")	4
32825	getCommodity("JPY")	7
36639	getCommodity("USD")	4
11471	getCommodity()	18
1121	getCommodity(){	15
32802	getCommodity(GnuCashApplication.getDefaultCurrencyCode())	3
7637	getCommodity(String	15
7892	getCommodityForAccount(String	10
36617	getCommodityUID()	23
23896	getCommodityUID(String	11
36485	getCommodityUID(account.getCurrency().getCurrencyCode())	7
36642	getCommodityUID(transaction.getCurrency().getCurrencyCode())	7
53490	getCompactedBudgetAmounts(){	2
38871	getContentDescription()	17
45408	getContentHeight()	4
25267	getContentResolver().openInputStream(data)	6
3424	getContentResolver().openInputStream(data.getData())	27
27081	getContentResolver().takePersistableUriPermission(data.getData(),takeFlags)	2
59848	getContentValues(BaseModel	4
59854	getContentValues(account)	4
32174	getContentValues(scheduledAction)	11
59841	getContentValues(scheduledEvent)	3
59837	getContentValues(split)	4
59729	getContentValues(transaction)	4
23194	getContentView()	3
43291	getContext()	13
29100	getContext().checkCallingOrSelfPermission(ANIMATION_PERMISSION)	3
36345	getContext().getApplicationContext()	2
50409	getContext().getPackageManager().resolveActivity(testIntent,	5
50121	getContext().getResources()	6
46499	getContext().getResources().getDisplayMetrics()	4
45670	getContext().getResources().getDisplayMetrics().widthPixels,true)	4
27540	getContext().getResources().getDrawable(R.drawable.color_square)	3
49700	getContext().getResources().getDrawable(getSearchIconId())	5
49550	getContext().getString(hintId)	9
49406	getContext().getSystemService(Context.INPUT_METHOD_SERVICE)	9
50010	getContext().getTheme().resolveAttribute(R.attr.searchViewSearchIcon,	5
45582	getContext().obtainStyledAttributes(null,R.styleable.SherlockActionBar,	8
50207	getContext().startActivity(appSearchIntent)	5
50102	getContext().startActivity(intent)	5
50281	getContext().startActivity(webSearchIntent)	5
35339	getContext(){	11
19907	getCount()	47
8594	getCount(){	21
20354	getCreatedTimestamp()	3
24081	getCurrencies(){	11
28351	getCurrencies(SQLiteDatabase	4
26141	getCurrenciesInUse(){	6
1089	getCurrency()	34
10589	getCurrency(){	20
19402	getCurrency(long	5
10417	getCurrencyCode()	9
36379	getCurrencyCode(){	4
23723	getCurrencyCode(@NonNull	13
3090	getCurrencyCode(String	43
19209	getCurrencyCode(accountId)	23
1571	getCurrencyCode(accountUID)	15
2256	getCurrencyCode(getAccountID(accountUID))	12
24993	getCurrencyCode(getUID(accountId))	3
24238	getCurrencyCode(id)	8
2325	getCurrencyCode(long	26
32867	getCurrencyCodeToAccountMap(List<Account>	5
32723	getCurrencyCodeToAccountMap(accountList).get(mCurrencyCode))	7
12676	getCurrencyForAccount(String	13
59016	getCurrencyId(String	2
60730	getCurrencyUID()	3
19476	getCurrentAccountID(){	6
32759	getCurrentAccountListFragment().refresh()	6
23053	getCurrentAccountListFragment(){	15
1372	getCurrentAccountUID()	5
31386	getCurrentAccountUID(){	7
43023	getCurrentAnimationsCount()	4
47444	getCurrentDrawable()	4
31393	getCurrentPagerFragment(){	10
41974	getCurrentPlayTime()	4
30436	getCursor()	8
60578	getCursor(){	3
61122	getCusip()	3
44970	getCustomNavigationView()	4
38366	getCustomView()	19
62159	getCutOffPage()	3
802	getData()	41
7749	getData(AccountType	27
6281	getData(ArrayList<AccountType>	9
2233	getData(List<AccountType>	43
5193	getData(boolean	12
60227	getData(new	3
48833	getDataModel()	4
20600	getDataSet()	4
52962	getDataSet(List<AccountType>	7
50691	getDatabase(String	3
60809	getDate()	3
32746	getDateDiff(LocalDateTime	20
34188	getDateDiff(earliest,latest)	14
7771	getDateDiff(new	24
9567	getDaysLeftInCurrentPeriod(){	10
35171	getDaysOfWeekString()	3
50488	getDecoratedHint(CharSequence	5
49007	getDefaultActivity()	5
36664	getDefaultCommodity(){	7
2990	getDefaultCurrency(){	14
2252	getDefaultCurrencyCode(){	21
50613	getDefaultIcon1(Cursor	5
49983	getDefaultIcon1(cursor)	5
5407	getDefaultLocale()	12
23069	getDefaultProguardFile('proguard-android.txt'),'proguard-rules.pro'	17
63475	getDefaultProguardFile('proguard-android.txt'),proguard-rules.pro	7
24348	getDefaultTransferAccountID(long	13
27171	getDefaultTransferAccountUID()	7
57111	getDelegate()	6
57000	getDelegate().addContentView(view,params)	6
57166	getDelegate().getMenuInflater()	6
57184	getDelegate().getSupportActionBar()	6
57084	getDelegate().installViewFactory()	6
57032	getDelegate().invalidateOptionsMenu()	6
57066	getDelegate().onConfigurationChanged(newConfig)	6
57099	getDelegate().onCreate(savedInstanceState)	6
57179	getDelegate().onDestroy()	6
57132	getDelegate().onPostCreate(savedInstanceState)	6
57061	getDelegate().onPostResume()	6
57190	getDelegate().onStop()	6
57016	getDelegate().setContentView(layoutResID)	6
57117	getDelegate().setContentView(view)	6
57152	getDelegate().setContentView(view,params)	6
57086	getDelegate().setSupportActionBar(toolbar)	6
57120	getDelegate().setTitle(title)	6
23671	getDenominator()	26
23757	getDenominator(){	7
52210	getDenominator_shouldReduceAutomatically()	2
24472	getDescendantAccountUIDs(@NonNull	4
819	getDescendantAccountUIDs(String	10
18698	getDescendantAccountUIDs(accountUID,	12
24567	getDescendantAccountUIDs(accountUID,null,null)	10
2185	getDescription()	22
55564	getDescription(){	2
28357	getDialog().getContext()	20
63371	getDialog().getWindow().setLayout(LayoutParams.MATCH_PARENT,LayoutParams.WRAP_CONTENT)	5
33371	getDialog().getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,	10
51333	getDialog().getWindow().setSoftInputMode(	4
33508	getDialog().setTitle("Delete:	3
35835	getDialog().setTitle("Transaction	7
58975	getDialog().setTitle(R.string.add_account)	2
36663	getDialog().setTitle(R.string.export_ofx)	2
52275	getDialog().setTitle(R.string.menu_export_ofx)	8
51348	getDialog().setTitle(R.string.title_add_account)	3
51369	getDialog().setTitle(R.string.title_edit_account)	3
30359	getDialog().setTitle(R.string.title_export_dialog)	15
59901	getDialog().setTitle(R.string.title_move_transactions)	2
31256	getDialog().setTitle(R.string.title_transaction_splits)	17
33812	getDialog().setTitle(getString(R.string.alert_dialog_ok_delete)	2
13070	getDialog().setTitle(title)	20
63492	getDisplayName()	6
38559	getDisplayOptions()	12
46947	getDividerPadding()	4
46546	getDividerWidth()	4
26446	getDoubleEntryAccountUID()	8
35286	getDoubleEntryAccountsBalance(){	9
50670	getDrawable(Uri	5
50975	getDrawable(uri)	5
50842	getDrawableFromResourceValue(String	5
50151	getDrawableFromResourceValue(value)	5
47384	getDrawableShape()	4
46752	getDrawableState()	4
46934	getDrawingTime()	4
47869	getDropDownView(int	4
47846	getDropDownView(position,convertView,parent)	4
45727	getDropdownAdapter()	4
44962	getDropdownSelectedPosition()	4
39353	getDuration()	12
41283	getDuration())	4
2369	getEmptyData()	52
20428	getEmptyDataSet()	9
46520	getEmptyView()	4
1421	getEndDate(AccountType	24
7492	getEndOfCurrentPeriod(){	7
8273	getEndOfPeriod(int	7
19619	getEndTime()	16
19113	getEnteredName()	24
34493	getEnteredName(){	11
54924	getEntryList(AccountType	9
56699	getError()	8
33617	getEventType()	5
32073	getEventUID()	5
20059	getExecutionCount(){	5
53664	getExpandedBudgetAmounts(){	2
44442	getExpandedItem()	4
63659	getExportCacheFilePath()	3
29248	getExportCacheFilePath(){	13
60296	getExportFolderPath(){	5
60270	getExportFolderPath(String	3
7006	getExportFormat()	14
55322	getExportLocation(){	3
24759	getExportMimeType(){	28
63248	getExportStartTime(){	3
7145	getExportTarget()	3
4007	getExportTime(String	12
24097	getExportableAccounts(){	17
63164	getExportableAccounts(Timestamp	3
56833	getExportedFiles()	6
52407	getExporter()	6
35577	getExtension(){	4
39909	getFeatures()	4
60500	getFilter()	3
50314	getFilter().setDelayer(new	5
60551	getFilterQueryProvider()	3
46091	getFirstVisiblePosition()	4
41719	getFloatValue()	4
40422	getFloatValue(float	4
40898	getFloatValue(fraction)	4
41562	getFoo	4
35713	getFormattedAmount(){	3
53533	getFormattedAmount(Money	5
35597	getFormattedAmount(String	4
31310	getFormattedAmount(double	3
61972	getFormattedAmount(mQuantity,mAccountUID,mSplitType)	3
61956	getFormattedAmount(mValue,mAccountUID,mSplitType)	3
12624	getFormattedCurrentTime()	6
55217	getFormattedCurrentTime(){	6
59180	getFormattedCurrentTime(System.currentTimeMillis())	3
55070	getFormattedCurrentTime(long	5
53648	getFormattedQuantity(){	5
61986	getFormattedValue(){	3
54460	getFormattedValue(float	4
36155	getFraction()	14
60224	getFragment(String	3
55523	getFragmentManager()	8
23797	getFragmentManager().beginTransaction()	15
58941	getFragmentManager().findFragmentByTag("dialog")	2
42096	getFrameDelay()	4
8058	getFrequencyDescription()	12
7797	getFrequencyRepeatString(){	15
51159	getFullName()	6
61266	getFullname()	3
35588	getFullyQualifiedAccountName(SQLiteDatabase	9
2246	getFullyQualifiedAccountName(String	12
35431	getFullyQualifiedAccountName(db,parentAccountUID)	4
35534	getFullyQualifiedAccountName(db,uid)	7
3934	getFullyQualifiedAccountName(getAccountUID(accountId))	9
59689	getFullyQualifiedAccountName(getUID(accountId))	4
3144	getFullyQualifiedAccountName(long	18
3562	getFullyQualifiedAccountName(parentAccountUID)	3
24369	getGnuCashRootAccountUID()	22
24535	getGnuCashRootAccountUID(),AccountType.ROOT.name()	5
24362	getGnuCashRootAccountUID(){	15
14166	getGnuCashRootAccountUID(SQLiteDatabase	16
35558	getGnuCashRootAccountUID(db)	6
51606	getGoogleApiClient(final	7
9048	getGoogleApiClient(getActivity())	5
25065	getGoogleApiClient(this)	7
43170	getGroupId()	12
44216	getHeaderIcon()	4
44609	getHeaderTitle()	4
44717	getHeaderView()	4
39038	getHeight()	25
47611	getHintText()	4
49225	getHistoryMaxSize()	4
49534	getHistorySize()	5
40017	getHorizontalProgressBar(boolean	4
39429	getHorizontalProgressBar(true)	4
23719	getID(@NonNull	17
30903	getID(AccountEntry.TABLE_NAME,accountUID)	2
30930	getID(ScheduledEventEntry.TABLE_NAME,uid)	2
30844	getID(SplitEntry.TABLE_NAME,uid)	2
18290	getID(String	20
30746	getID(TransactionEntry.TABLE_NAME,transactionUID)	2
35546	getID(split.getUID()))	5
20251	getID(uid)	13
38808	getIcon()	20
49952	getIcon1(Cursor	5
49953	getIcon2(Cursor	5
44173	getId()	12
19507	getId(String	12
11874	getImbalance()	23
6286	getImbalance(){	35
24438	getImbalanceAccountName(@NonNull	4
10476	getImbalanceAccountName(Commodity	2
6789	getImbalanceAccountName(Currency	28
10556	getImbalanceAccountName(commodity)	3
4043	getImbalanceAccountName(currency)	21
10876	getImbalanceAccountPrefix()	9
10887	getImbalanceAccountUID(Commodity	3
4375	getImbalanceAccountUID(Currency	8
49616	getImeOptions()	5
47076	getIndeterminateDrawable()	4
43456	getInflater()	4
49102	getInputType()	5
14614	getInsertStatement()	2
60621	getInstance()	3
14459	getInstance(){	36
7582	getInstance(Money	9
54677	getInstance(ScheduledAction.ActionType	3
36055	getInstance(String	4
28410	getInstrumentation().getTargetContext()	18
54736	getInstrumentation().runOnMainSync(new	5
41401	getIntValue()	4
41128	getIntValue(float	4
40658	getIntValue(fraction)	4
2048	getIntent()	54
19846	getIntent().getAction()	17
57495	getIntent().getIntExtra(EXTRA_TAB_INDEX,lastTabIndex)	3
6799	getIntent().getLongExtra(	17
19962	getIntent().getLongExtra(NewTransactionFragment.SELECTED_TRANSACTION_ID,-1)	5
30449	getIntent().getLongExtra(UxArgument.SELECTED_ACCOUNT_UID,0L))	5
63439	getIntent().getLongExtra(UxArgument.SELECTED_TRANSACTION_ID,-1)	4
54666	getIntent().getSerializableExtra(EXTRA_DISPLAY_MODE)	7
50812	getIntent().getStringExtra(UxArgument.BOOK_UID)	5
27084	getIntent().getStringExtra(UxArgument.SCHEDULED_ACTION_UID)	6
534	getIntent().getStringExtra(UxArgument.SELECTED_ACCOUNT_UID)	25
28602	getIntent().getStringExtra(UxArgument.SELECTED_ACCOUNT_UID))	11
1669	getIntent().getStringExtra(UxArgument.SELECTED_TRANSACTION_UID)	12
62309	getIntent().putExtra(UxArgument.SELECTED_ACCOUNT_UID,mAccountUID)	3
63252	getInternalExportPath()	6
41263	getInterpolator()	12
44780	getItem()	8
44165	getItem(i)	4
19427	getItem(int	44
49632	getItem(position)	4
47690	getItem(position))	4
47866	getItem(position),true)	4
46158	getItemAtPosition(int	4
46141	getItemAtPosition(position)	4
1863	getItemCount()	13
43197	getItemData()	12
43005	getItemId()	12
44266	getItemId(int	16
45940	getItemIdAtPosition(int	4
45812	getItemIdAtPosition(position)	4
46224	getItemIdAtPosition),so	4
62117	getItemPosition(Object	3
43313	getItemView(MenuItemImpl	8
43457	getItemView(item,convertView,parent)	4
42647	getItemView(item,mScrapActionButtonView,parent)	4
30306	getItemViewType(int	15
49121	getItemViewType(position)	4
50054	getKeyDispatcherState()	5
50974	getLastExportTime()	13
50630	getLastExportTime(String	3
32350	getLastRun()	8
53403	getLastRunTime()	5
63961	getLastSync()	2
46072	getLastVisiblePosition()	4
25282	getLayoutInflater()	11
43636	getLayoutParams()	4
9958	getLayoutResource()	8
47815	getLeft()	4
45295	getLeft())	4
46483	getLeftOffset()	4
49620	getListPopupWindow()	4
49405	getListPopupWindow().dismiss()	4
49619	getListPopupWindow().isShowing()	4
49243	getListPopupWindow().show()	4
18271	getListView()	38
18218	getListView().getCheckedItemIds())	36
18037	getListView().getCheckedItemIds().length	26
18164	getListView().getCheckedItemPositions()	14
30479	getListView().getChildAt(mSelectedViewPosition	10
60146	getListView().getChildAt(mSelectedViewPosition)	3
33015	getListView().getChildAt(position	5
29339	getListView().getChildAt(position)	3
18472	getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE)	28
30403	getListView().setChoiceMode(ListView.CHOICE_MODE_NONE)	3
48040	getListView().setChoiceMode(ListView.CHOICE_MODE_SINGLE)	7
33134	getListView().setItemChecked(getListView().getCheckedItemPosition(),false)	9
19142	getListView().setItemChecked(itemPosition,isChecked)	17
60180	getListView().setItemChecked(mSelectedViewPosition,false)	4
29230	getListView().setItemChecked(position,false)	4
29131	getListView().setItemChecked(position,true)	19
60670	getListView().setOnItemLongClickListener(this)	5
40662	getListeners()	4
19403	getLoaderManager().destroyLoader(0)	21
18881	getLoaderManager().initLoader(0,null,this)	33
13017	getLoaderManager().restartLoader(0,null,this)	65
61728	getLocalSymbol()	3
19436	getLocalizedFrequencyDescription(){	5
43236	getLocationOnScreen(screenPos)	4
46582	getMax()	4
49043	getMaxActivityCount()	4
46757	getMaxAvailableHeight()	4
46664	getMaxAvailableHeight(View	4
49735	getMaxWidth()	5
45482	getMeasuredHeight()	4
47858	getMeasuredHeight())	4
47581	getMeasuredStateInt(View	4
42772	getMeasuredWidth()	13
33871	getMemo()	9
40051	getMenu()	12
23484	getMenuInflater()	25
23338	getMenuInflater().inflate(R.menu.chart_actions,menu)	10
24710	getMenuInflater().inflate(R.menu.report_actions,menu)	3
43270	getMenuInfo()	12
42912	getMenuView(ViewGroup	16
53412	getMessage()	2
41763	getMethodName("set",mPropertyName)	5
42160	getMethodName(String	4
41247	getMethodName(prefix,mPropertyName)	4
36464	getMnemonic()	10
21164	getModifiedTimestamp()	5
28405	getMostRecentBackupFile(){	8
7705	getMultiplier(){	11
26410	getName()	17
3806	getName(long	45
36326	getNamespace()	9
38234	getNavigationItemCount()	8
38016	getNavigationMode()	12
59694	getNextRun()	2
44286	getNonActionItems()	5
35535	getNonExportedTransactionsForAccount(String	3
6730	getNormalBalanceType(){	7
14342	getNote()	8
24359	getNumCurrencies(@NonNull	4
24490	getNumCurrencies(String	15
4284	getNumberFormatForTemplateSplits(){	4
53440	getNumberOfAccounts(){	2
61811	getNumberOfDecimalPlaces()	4
19797	getNumberOfOccurences(){	6
53892	getNumberOfPeriods	5
8308	getNumberOfPeriods()	5
9494	getNumberOfPeriods(int	10
23531	getNumerator()	17
23713	getNumerator(){	7
12689	getNumerator_shouldReduceAutomatically()	5
42687	getNumericShortcut()	12
63313	getOfxFormattedTime(System.currentTimeMillis())	3
63343	getOfxFormattedTime(long	5
46125	getOnItemClickListener()	4
45966	getOnItemLongClickListener()	4
46270	getOnItemSelectedListener()	6
55578	getOnItemSelectedListener().onItemSelected(this,getSelectedView(),position,getSelectedItemId())	5
46362	getOpacity()	5
24149	getOpeningBalanceAccountFullName()	6
24356	getOpeningBalanceAccountFullName(){	18
44660	getOptionalIconsVisible()	4
601	getOrCreateGnuCashRootAccountUID()	34
59576	getOrCreateGnuCashRootAccountUID(),AccountType.ROOT.name()	3
24255	getOrCreateImbalanceAccountUID(@NonNull	6
5189	getOrCreateImbalanceAccountUID(Commodity	5
1692	getOrCreateImbalanceAccountUID(Currency	32
24593	getOrCreateOpeningBalanceAccountUID()	5
24550	getOrCreateOpeningBalanceAccountUID(){	4
42752	getOrder()	12
44414	getOrdering()	4
43528	getOrdering(categoryOrder)	4
43946	getOrdering(int	4
46809	getOrientation()	6
3168	getPackageManager().getPackageInfo(getPackageName(),0)	10
64154	getPackageManager().getPackageInfo(getPackageName(),0).versionName	2
43585	getPaddingBottom()	17
43573	getPaddingLeft()	18
43746	getPaddingRight()	17
43918	getPaddingTop()	15
20002	getPageTitle(int	13
24183	getParentAccountUID(@NonNull	13
2767	getParentAccountUID(String	22
2359	getParentAccountUID(accountUID)	15
24290	getParentAccountUID(getAccountUID(id))	8
26266	getParentAccountUID(getUID(id))	7
24249	getParentAccountUID(long	17
44255	getParentMenu()	4
28531	getParentUID()	21
33671	getPeriod()	9
7516	getPeriod(){	16
9104	getPeriodEnd(){	5
53694	getPeriodNum()	2
53536	getPeriodStart()	2
19510	getPeriodType()	10
19559	getPeriodType(){	7
32237	getPeriodType(long	9
32289	getPeriodType(mPeriod)	4
29915	getPieData(boolean	6
39122	getPosition()	8
53728	getPosition(@NonNull	2
13952	getPosition(int	8
46065	getPositionForView(View	4
49911	getPostingDelay(CharSequence	5
57052	getPreferenceManager().getSharedPreferences()	5
57151	getPreferenceManager().getSharedPreferences().edit()	3
57051	getPreferenceManager().setSharedPreferencesName(BooksDbAdapter.getInstance().getActiveBookUID())	6
64246	getPreferences(MODE_PRIVATE)	2
49786	getPreferredWidth()	5
27736	getPressedColor(int	3
59165	getPrettyDateFormat(Context	4
12875	getPrice(@NonNull	4
52982	getPricesDbAdapter(){	5
46996	getProgress()	4
23273	getProgressBar(){	3
47142	getProgressDrawable()	4
47590	getPrompt()	4
41200	getPropertyFunction(Class	4
41898	getPropertyFunction(targetClass,prefix,valueType)	4
41213	getPropertyName()	7
7253	getQifHeader(Account.AccountType	11
35767	getQifHeader(AccountType	5
57683	getQifHeader(AccountType.valueOf(accountType))	3
57731	getQifHeader(String	3
61828	getQuantity()	3
7719	getQuarter(LocalDateTime	26
34415	getQuarter(earliest)	6
32783	getQuarter(end)	11
32594	getQuarter(end))	7
34359	getQuarter(latest)	6
34236	getQuarter(new	9
32620	getQuarter(start)	20
32601	getQuarter(start))	7
32045	getQuarter(tmpDate)	7
48910	getQuery()	5
49240	getQueryHint()	5
49783	getQueryRefinement()	5
36474	getQuoteFlag()	12
53370	getReconcileDate()	2
53498	getReconcileState()	2
26228	getRecord(@NonNull	8
61453	getRecord(getUID(id))	3
52556	getRecord(long	10
61567	getRecord(rowId)	3
59954	getRecordsCount()	10
62702	getRecordsCount(){	2
59932	getRecordsCount(@Nullable	6
3878	getRecurrence()	11
19250	getRecurrenceAsString(cursor.getLong(DatabaseAdapter.COLUMN_RECURRENCE_PERIOD)))	5
33802	getRecurrenceAsString(cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.TransactionEntry.COLUMN_RECURRENCE_PERIOD))))	5
18775	getRecurrenceAsString(long	12
52970	getRecurrenceDbAdapter()	2
18488	getRecurrencePeriod()	5
42109	getRepeatCount()	4
42015	getRepeatMode()	4
33565	getRepeatString()	7
8695	getRepeatString(){	29
14627	getReplaceStatement()	4
6493	getReportEndTime()	9
32160	getReportNames(){	6
32373	getReportPeriodEnd()	3
32429	getReportPeriodStart()	3
6437	getReportStartTime()	9
32388	getReportType()	6
46893	getResolvedLayoutDirection()	4
47494	getResolvedLayoutDirection(Drawable	4
27172	getResources()	22
40148	getResources().getBoolean()	4
23847	getResources().getColor(R.color.credit_green)	21
23479	getResources().getColor(R.color.debit_red)	22
59086	getResources().getColor(R.color.theme_primary)	6
6534	getResources().getColor(R.color.title_green)	20
61858	getResources().getColor(color)	3
7351	getResources().getDimension(R.dimen.edge_padding)	22
40026	getResources().getInteger()	4
19587	getResources().getQuantityString(	7
57219	getResources().getQuantityString(R.plurals.book_account_stats,accountsCount,accountsCount)	6
57268	getResources().getQuantityString(R.plurals.book_transaction_stats,transactionCount,transactionCount)	6
19699	getResources().getQuantityString(R.plurals.label_sub_accounts,subAccountCount,subAccountCount)	22
23410	getResources().getString(R.string.app_minor_version)	2
13763	getResources().getString(R.string.app_version_name)	4
20706	getResources().getString(R.string.label_chart_no_data)	4
24653	getResources().getString(R.string.label_chart_overall))	11
24912	getResources().getString(R.string.label_chart_total)	16
5059	getResources().getString(R.string.label_chart_total),	6
29333	getResources().getString(R.string.selected))	2
26631	getResources().getStringArray(R.array.account_type_entries)	14
136	getResources().getStringArray(R.array.account_type_entry_values)	10
63799	getResources().getStringArray(R.array.currency_names)	4
7626	getResources().getStringArray(R.array.currency_names))	23
26595	getResources().getStringArray(R.array.default_accounts)	6
51120	getResources().getStringArray(R.array.key_account_type_entries)	6
26599	getResources().getStringArray(R.array.key_currency_codes))	6
26775	getResources().getStringArray(R.array.key_recurrence_period_millis)	6
29768	getResources().getStringArray(R.array.nav_drawer_entries)	3
18897	getResources().getStringArray(R.array.recurrence_entries)	5
18464	getResources().getStringArray(R.array.recurrence_options)	9
28164	getResources().getStringArray(R.array.recurrence_period_millis)	6
27090	getResources().getStringArray(R.array.recurrence_period_strings)	7
3438	getResources().openRawResource(R.raw.default_accounts)	14
39930	getResources_getBoolean(Context	4
42437	getResources_getBoolean(context,	4
44938	getResources_getBoolean(getContext(),	4
40068	getResources_getBoolean(mActivity,R.bool.abs__split_action_bar_is_narrow)	4
40266	getResources_getInteger(Context	4
42612	getResources_getInteger(context,R.integer.abs__max_action_buttons)	4
43139	getResources_getInteger(mContext,	4
62171	getReviewItems(ArrayList<ReviewItem>	4
47718	getRight()	4
32851	getRootAccountUID()	7
44598	getRootMenu()	5
63490	getRootTemplateUID()	4
10068	getRuleString(){	15
9306	getSDWritePermission()	17
20163	getSDWritePermission(){	15
23803	getScale()	27
23545	getScale())	18
43105	getScaleX()	4
42806	getScaleY()	4
26659	getScheduledAction(String	12
20050	getScheduledActionUID()	3
19951	getScheduledActionsWithUID(@NonNull	5
51529	getScheduledBackupAction(ExportFormat	4
20037	getScheduledEvent(String	13
61631	getScheduledEventDbAdapter(){	6
21147	getScheduledEventWithUID(@NonNull	3
30956	getScheduledEventWithUID(String	4
19694	getScheduledEventsWithUID(@NonNull	8
32050	getScheduledPeriodType(ScheduledAction.PeriodType	4
33674	getScheduledPeriodType(ScheduledEvent.PeriodType	3
52945	getScheduledTransactionsForAccount(String	4
42922	getScrollX()	8
42927	getScrollY()	8
50472	getSearchIconId()	5
46877	getSecondaryProgress()	4
26684	getSelectedAccountType()	23
27237	getSelectedColor()	3
45907	getSelectedItem()	4
30623	getSelectedItemId()	15
46260	getSelectedItemPosition()	9
48091	getSelectedItemPosition(),this).show()	4
38702	getSelectedNavigationIndex()	8
38931	getSelectedTab()	8
46145	getSelectedView()	4
35003	getService	4
34960	getService.invoke(null,"window")	4
32682	getSharedPreferences(getString(R.string.owncloud_pref),Context.MODE_PRIVATE)	10
39005	getSherlock()	4
39157	getSherlock().addContentView(view,params)	4
38791	getSherlock().dispatchConfigurationChanged(newConfig)	4
39112	getSherlock().dispatchCreateOptionsMenu(menu)	4
39262	getSherlock().dispatchDestroy()	4
38869	getSherlock().dispatchInvalidateOptionsMenu()	4
39195	getSherlock().dispatchOptionsItemSelected(item)	4
38785	getSherlock().dispatchPanelClosed(featureId,menu)	4
39161	getSherlock().dispatchPause()	4
39033	getSherlock().dispatchPostCreate(savedInstanceState)	4
39108	getSherlock().dispatchPostResume()	4
39115	getSherlock().dispatchPrepareOptionsMenu(menu)	4
39190	getSherlock().dispatchRestoreInstanceState(savedInstanceState)	5
39329	getSherlock().dispatchSaveInstanceState(outState)	5
38981	getSherlock().dispatchStop()	4
39017	getSherlock().dispatchTitleChanged(title,color)	4
39229	getSherlock().getActionBar()	4
39202	getSherlock().getMenuInflater()	4
39100	getSherlock().requestFeature((int)featureId)	4
38782	getSherlock().setContentView(layoutResId)	4
38807	getSherlock().setContentView(view)	4
39070	getSherlock().setContentView(view,params)	4
39149	getSherlock().setProgress(progress)	4
39176	getSherlock().setProgressBarIndeterminate(indeterminate)	4
39175	getSherlock().setProgressBarIndeterminateVisibility(visible)	4
39207	getSherlock().setProgressBarVisibility(visible)	4
39055	getSherlock().setSecondaryProgress(secondaryProgress)	4
39090	getSherlock().startActionMode(callback)	4
39285	getSherlockActivity()	6
35916	getSherlockActivity()).getCurrentAccountID()	10
30980	getSherlockActivity()).getCurrentAccountUID()	5
27711	getSherlockActivity().getLayoutInflater()	9
18288	getSherlockActivity().getSupportActionBar()	28
24420	getSherlockActivity().getSupportActionBar().setTitle(R.string.label_create_account)	6
29181	getSherlockActivity().getSupportActionBar().setTitle(R.string.title_accounts)	3
24473	getSherlockActivity().getSupportActionBar().setTitle(R.string.title_add_account)	11
8344	getSherlockActivity().getSupportActionBar().setTitle(R.string.title_edit_account)	26
29417	getSherlockActivity().getSupportActionBar().setTitle(title)	4
29761	getSherlockActivity().getSupportFragmentManager()	22
18656	getSherlockActivity().getSupportFragmentManager().popBackStack()	17
30936	getSherlockActivity().getSystemService(	12
18665	getSherlockActivity().onBackPressed()	3
30520	getSherlockActivity().startActionMode(	13
29251	getSherlockActivity().startActionMode(mActionModCallbacks)	2
18631	getSherlockActivity().startActionMode(mActionModeCallbacks)	13
44383	getShortcut()	4
48212	getShortcut(String	4
48687	getShortcut(a.getString(R.styleable.SherlockMenuItem_android_alphabeticShortcut))	4
48253	getShortcut(a.getString(R.styleable.SherlockMenuItem_android_numericShortcut))	4
44632	getShortcutLabel()	4
49125	getShowDefaultActivity()	4
47378	getShowDividers()	4
58745	getSimpleAccountList(	5
24287	getSimpleAccountList(){	11
24078	getSimpleAccountList(@Nullable	4
24513	getSimpleAccountList(String	8
36048	getSmallestFraction()	9
36245	getSmallestFractionDigits(){	10
61289	getSource()	3
63518	getSourceUri()	4
24265	getSplit(@NonNull	4
24134	getSplit(String	11
24394	getSplit(getID(uid))	9
34072	getSplit(getUID(rowId)).getTransactionUID()	4
24450	getSplit(long	11
24531	getSplit(rowId)	8
51293	getSplitAccountUID()	3
13516	getSplitCount(@NonNull	3
24446	getSplitDbAdapter()	28
33330	getSplitList(){	7
31123	getSplits()	7
35679	getSplits(){	6
35761	getSplits(String	9
35788	getSplits(accountUID)	4
51148	getSplitsDbAdapter()	7
24368	getSplitsForTransaction(@NonNull	4
24307	getSplitsForTransaction(String	6
24220	getSplitsForTransaction(getTransactionUID(transactionID))	6
24414	getSplitsForTransaction(long	6
24442	getSplitsForTransactionInAccount(@NonNull	4
13959	getSplitsForTransactionInAccount(String	8
3718	getStartDate(AccountType	13
39993	getStartDelay()	12
8316	getStartOfPeriod(int	7
32336	getStartTime()	10
7507	getStartofCurrentPeriod(){	7
9403	getString(R.string.dropbox_app_key,BackupPreferenceFragment.DROPBOX_APP_KEY)	9
9478	getString(R.string.dropbox_app_key,DROPBOX_APP_KEY)	11
25235	getString(R.string.dropbox_app_key,SettingsActivity.DROPBOX_APP_KEY)	8
8742	getString(R.string.dropbox_app_secret,BackupPreferenceFragment.DROPBOX_APP_SECRET)	7
9113	getString(R.string.dropbox_app_secret,DROPBOX_APP_SECRET)	8
25391	getString(R.string.dropbox_app_secret,SettingsActivity.DROPBOX_APP_SECRET)	8
4157	getString(R.string.key_chart_currency)	3
9648	getString(R.string.key_default_export_email)	10
9305	getString(R.string.key_default_export_format)	5
57126	getString(R.string.key_default_transaction_type),	3
34237	getString(R.string.key_enable_passcode)	5
5711	getString(R.string.key_report_currency)	4
63810	getString(R.string.key_report_currency),Money.DEFAULT_CURRENCY_CODE))	4
63988	getString(R.string.key_save_opening_balances)	2
64001	getString(R.string.key_use_compact_list)	2
63993	getString(R.string.key_use_double_entry)	2
55374	getString(R.string.label_backup_filename))	3
4694	getString(R.string.label_debit)	11
57175	getString(R.string.label_debit))	3
33611	getString(R.string.label_tap_to_create_schedule)	9
19894	getString(R.string.section_header_subaccounts)	7
19729	getString(R.string.section_header_transactions)	3
27845	getString(R.string.title_all_accounts)	3
27669	getString(R.string.title_favorite_accounts)	3
34068	getString(R.string.title_passcode_disabled)	8
31133	getString(R.string.title_passcode_disabled))	15
63947	getString(R.string.title_passcode_disabled)-	1
31050	getString(R.string.title_passcode_enabled)	16
27730	getString(R.string.title_recent_accounts)	3
54647	getString(R.string.title_scheduled_exports)	3
54649	getString(R.string.title_scheduled_transactions)	3
6457	getString(R.string.toast_error_exporting_ofx)	9
6923	getString(R.string.toast_ofx_exported_to)	7
21183	getString(R.string.wizard_option_disable_crash_reports)	6
21458	getString(R.string.wizard_option_let_me_handle_it)	6
51080	getStringOrNull(Cursor	5
50759	getStringOrNull(cursor,col)	5
49681	getStringOrNull(cursor,mText1Col)	5
50167	getStringOrNull(cursor,mText2Col)	5
49862	getStringOrNull(cursor,mText2UrlCol)	5
24429	getSubAccountCount(@NonNull	4
24439	getSubAccountCount(String	8
27813	getSubAccountCount(long	16
18854	getSubAccountIds(accountId)	22
30164	getSubAccountIds(accountId).size()	7
24110	getSubAccountIds(long	14
42623	getSubMenu()	12
38757	getSubtitle()	20
50271	getSuggestions(String	5
50056	getSuggestions(query,QUERY_LIMIT)	5
49878	getSuggestionsAdapter()	5
1259	getSupportActionBar()	62
26770	getSupportActionBar().getThemedContext(),	15
21767	getSupportActionBar().getThemedContext(),mAccountsCursor)	9
64094	getSupportActionBar().getThemedContext(),mAccountsCursor,R.layout.account_spinner_item)	2
76	getSupportActionBar().setBackgroundDrawable(new	11
21666	getSupportActionBar().setDisplayHomeAsUpEnabled(true)	11
2040	getSupportActionBar().setDisplayShowTitleEnabled(false)	22
29855	getSupportActionBar().setHomeButtonEnabled(true)	7
34479	getSupportActionBar().setSelectedNavigationItem(i)	12
24856	getSupportActionBar().setTitle("GnuCash")	4
23188	getSupportActionBar().setTitle(R.string.nav_menu_scheduled_actions)	6
4863	getSupportActionBar().setTitle(R.string.title_bar_chart)	17
4120	getSupportActionBar().setTitle(R.string.title_line_chart)	13
57631	getSupportActionBar().setTitle(R.string.title_pie_chart)	10
24916	getSupportActionBar().setTitle(R.string.title_reports)	10
29911	getSupportActionBar().setTitle(mTitle)	5
18397	getSupportFragmentManager()	79
19564	getSupportFragmentManager().findFragmentByTag(FRAGMENT_ACCOUNTS_LIST)	8
975	getSupportFragmentManager().getFragments()	11
23532	getSupportMenuInflater()	17
20764	getSupportMenuInflater().inflate(R.menu.chart_actions,menu)	14
33076	getSupportMenuInflater().inflate(R.menu.pie_chart_actions,menu)	6
61762	getSymbol(){	3
51759	getSystemService(Context.INPUT_METHOD_SERVICE)	2
4026	getSystemService(POWER_SERVICE)	8
47812	getTab()	4
39247	getTabAt(int	8
44964	getTabContainer()	4
38882	getTabCount()	8
34054	getTag()	16
41448	getTarget()	4
7160	getTargetFilepath()	9
27173	getTargetFragment()	3
27764	getTargetFragment()).deleteAccount(rowId)	8
27740	getTargetFragment()).deleteAccount(rowId,deleteSubAccountsCheckBox.isChecked())	9
33304	getTargetFragment()).getSplitList()	10
51133	getTargetFragment()).refresh()	9
33294	getTargetFragment()).setSplitList(splitList,mRemovedSplitUIDs)	10
53712	getTemplateAccountUID()	2
5233	getTemplateTransactionsCount(){	9
13570	getTestActivity()	24
31569	getText()	11
56692	getText().length()	8
52850	getText().toString()	11
52935	getText().toString().replaceAll(",",".").trim()	4
34844	getTextOfCurrentPeriod(int	7
36014	getTextOff())	5
36128	getTextOn()	5
50807	getTheDrawable(Uri	5
50870	getTheDrawable(uri)	5
62096	getTheme().resolveAttribute(android.R.attr.textAppearanceMedium,v,	3
38243	getThemedContext()	12
50039	getThreshold()	5
64272	getTime(){	1
62813	getTimeInMillis(2014,8,26)	4
63008	getTimeInMillis(2015,6,6)	4
63071	getTimeInMillis(2017,8,26)	4
55823	getTimeInMillis(int	10
35810	getTimeMillis(){	9
9388	getTimeOfLastSchedule()	10
10016	getTimeOfLastSchedule(){	12
31266	getTimestamp("MAX",type)	7
31252	getTimestamp("MAX",type,currencyCode)	2
30991	getTimestamp("MIN",type)	4
31458	getTimestamp("MIN",type,currencyCode)	2
14389	getTimestamp(String	9
52680	getTimestampForEpochZero()	5
52648	getTimestampForNow()	5
52441	getTimestampForUtcString(String	5
52605	getTimestampFromEpochZero()	6
52629	getTimestampFromNow()	4
52432	getTimestampFromUtcString(String	4
31240	getTimestampOfEarliestTransaction(AccountType	4
23515	getTimestampOfLastModification(){	13
14308	getTimestampOfLatestTransaction(AccountType	15
32390	getTitle()	35
32241	getTitleColor()	6
32323	getTitleColor(){	6
42626	getTitleCondensed()	12
44788	getTitleForItemView(MenuView.ItemView	4
11241	getTitleRes()	9
30217	getToolbarHeight(Context	3
30355	getToolbarHeight(context)	3
45284	getTop()	4
24111	getTotalAccountCount()	8
24197	getTotalAccountCount(){	6
19537	getTotalFrequency(){	8
60027	getTotalPlannedExecutionCount(){	3
20821	getTotalTransactionsCount()	13
24331	getTotalTransactionsCount(){	6
57456	getTotalTransactionsCount(@Nullable	6
24555	getTransaction(@NonNull	4
24388	getTransaction(String	14
24319	getTransaction(getID(transactionUID))	14
6481	getTransaction(long	30
29143	getTransactionCount()	11
25913	getTransactionCount(){	24
51145	getTransactionDbAdapter()	4
24133	getTransactionID(@NonNull	4
20507	getTransactionID(String	17
20812	getTransactionID(split.getTransactionUID())	9
20847	getTransactionID(transactionUID)	2
23676	getTransactionMaxSplitNum(@NonNull	15
23557	getTransactionMaxSplitNum(String	7
35665	getTransactionType(){	7
35772	getTransactionTypeForAccount(String	4
34112	getTransactionUID()	10
24546	getTransactionUID(long	12
24274	getTransactionUID(transactionId)	13
64131	getTransactions()	3
1122	getTransactions(){	10
54723	getTransactionsCount(String	4
6967	getTransactionsCount(long	21
6512	getTransactionsSum(long	26
4071	getTranscationCount()	23
6075	getTranscationCount(){	22
62981	getTransferAccountUID()	4
42953	getTranslationX()	5
42952	getTranslationY()	5
26360	getType()	19
51223	getTypeForBalance(@NonNull	4
13385	getTypeForBalance(AccountType	8
11961	getUID()	27
36222	getUID().equals(baseModel.getUID())	4
36137	getUID().hashCode()	4
19377	getUID(){	8
30911	getUID(AccountEntry.TABLE_NAME,accountId)	2
30820	getUID(AccountEntry.TABLE_NAME,id)	2
30948	getUID(ScheduledEventEntry.TABLE_NAME,id)	2
30841	getUID(SplitEntry.TABLE_NAME,id)	2
30944	getUID(String	2
30737	getUID(TransactionEntry.TABLE_NAME,transactionId)	2
58870	getUID(accountId)	6
362	getUID(id)	4
23834	getUID(long	30
59670	getUID(rowId)	3
35438	getUID(transactionId)	4
14396	getUpdateStatement()	2
52711	getUtcStringForTimestamp(Timestamp	5
52502	getUtcStringFromTimestamp(Timestamp	6
31549	getValue()	18
31893	getValue(){	34
40779	getValue(float	8
23326	getValueDenom()	10
23703	getValueNum()	9
42257	getValues()	4
24358	getView()	42
27823	getView())	9
18026	getView().findViewById(R.id.layout_double_entry).setVisibility(View.GONE)	21
31650	getView().findViewById(R.id.layout_double_entry).setVisibility(visibility)	16
34650	getView().findViewById(R.id.recurrence_options)	10
19419	getView().findViewById(R.id.transactions_sum)	27
49540	getView(i,itemView,null)	4
6513	getView(int	53
49055	getViewTreeObserver()	5
49014	getViewTreeObserver().addOnGlobalLayoutListener(mOnGlobalLayoutListener)	4
48012	getViewTypeCount()	8
45765	getVisibility()	9
44389	getVisibleItems()	5
42838	getWidth()	12
13528	getWindow().addFlags(LayoutParams.FLAG_SECURE)	6
13062	getWindow().clearFlags(LayoutParams.FLAG_SECURE)	6
572	getWindow().setStatusBarColor(GnuCashApplication.darken(colorCode))	6
945	getWindow().setStatusBarColor(GnuCashApplication.darken(iColor))	3
1398	getWindow().setStatusBarColor(GnuCashApplication.darken(resolvedColor))	13
2077	getWindow().setStatusBarColor(GnuCashApplication.darken(themeColor))	3
23	getWindow().setStatusBarColor(TransactionsActivity.darken(colorCode))	5
841	getWindow().setStatusBarColor(darken(iColor))	7
55155	getWindow().setStatusBarColor(iColor)	4
44092	getWindowAnimations()	8
42529	getWindowVisibleDisplayFrame(displayFrame)	4
1994	getXAxisOffset(AccountType	24
34361	getXAxisOffset(accountType)	15
4536	getZeroInstance(){	25
33188	gets	40
29370	gettarti	4
41389	getter	7
42216	getter)	4
42103	getter).	4
41236	getter.	5
13885	getting	68
16894	geven</string>	7
17029	gevonden.	5
17205	gevonden.</string>	11
17085	gevonden</string>	5
59302	gewechselten	4
5226	gewhnlich	19
17214	gewijzigd	5
16854	gexporteerd.</string>	11
16834	gexporteerde	29
29198	gi	2
15660	gibraltare&#241	11
15830	gibraltarea</item>	10
22453	gibt	21
60316	gift"	3
56031	giltig	2
12519	giny</string>	10
22581	giorni</item>	8
22738	giorno</item>	12
29815	gir	12
59345	girin</string>	6
9363	gitSha()	26
37142	give	19
773	given	142
38373	given,the	4
39006	gives	4
35669	giving	13
14953	gjeldende	40
15150	gjeldene	11
21298	gjennomsnittslinjer</string>	14
21167	gjenopprette</string>	10
21415	gjenopprettes</string>	21
52029	gjentagende	4
21565	gjentakende	22
15146	gjre	17
16378	gli	20
5461	glicht	31
24506	global	42
22132	gltige	11
24989	gncXmlInputStream	19
2275	gncXmlInputStream)	44
35812	gncXmlInputStream){	4
55185	gncXmlInputStream,2	3
56456	gnger</string>	2
26299	gnu@gnu.org	23
23360	gnucash	13
30962	gnucash-android	11
28832	gnucash:keyboardKeysLayout="@xml/calculator_keyboard"	12
52766	gnucash:keyboardKeysLayout="@xml/calculator_keyboard"/>	10
35498	gnucashRootAccountUID	4
17236	go	36
41945	go.	4
45704	go?)	4
31708	goEnabled	18
31605	goEnabled)	15
57330	god	3
20203	goes	16
25219	going	18
36486	gold	7
52672	goldenBoyBirthday	2
52531	goldenBoyBirthdayTimestamp	2
41100	gone	8
37174	gone.	5
47769	good	8
44791	good!	4
28135	googleApiClient	23
28138	googleApiClient.blockingConnect()	19
184	got	21
5455	gotten	13
748	governing	354
3652	gr&#225	25
56450	gra	2
43793	grab	4
22690	grafici	8
22688	grafico	8
17216	grafiekgegevens	7
59540	grande	8
8782	grant	25
9232	grantAllPermissions	4
28303	grantAnimationPermission	3
28420	grantAnimationPermission(type:	3
28382	grantAnimationPermissionDevel	4
28567	grantAnimationPermissionDevel(type:	11
28546	grantAnimationPermissionProduction	4
28348	grantAnimationPermissionProduction(type:	11
12822	grantPermissionsTask	3
12251	grantPermissionsTask.description	3
12434	grantPermissionsTask.name	3
20580	grantResults)	9
21245	grantResults[0]	5
10044	grantTestPermissionsDevel	4
9336	grantTestPermissionsDevel(type:	10
9597	grantTestPermissionsProduction	4
9162	grantTestPermissionsProduction(type:	6
60642	granted,free	3
20594	granted,yay!	8
11860	graphe	18
11953	graphique	3
34802	graphiques\n	5
28687	gravao	7
10190	gravar	47
22966	gravar!</string>	16
39029	gravity	13
38857	gravity)	8
27376	gray	3
5003	grays-out	10
18825	greater	32
40663	greater")	4
39039	greater,the	4
23499	green	13
10137	grer</string>	10
60055	grfica	3
15635	grficas	12
5171	grfico	45
27501	grid	3
32012	gridLayoutManager	5
16663	grootte	7
699	group	54
48446	group's	4
42387	group)	8
43445	group))	4
42994	group,boolean	16
42815	group,int	11
48482	group,nothing	4
43245	group,they	4
37048	group.	14
64339	group.-	1
46579	group.removeView(mPromptView)	4
9050	group:	28
52800	groupBy	3
48543	groupCategory	4
48424	groupCheckable	5
48403	groupEnabled	4
42484	groupId	11
43153	groupId)	12
64354	groupId,	1
48035	groupId,final	4
42721	groupId,int	13
43113	groupId,itemId,0,order,title)	4
591	groupInterval	26
1490	groupInterval)	30
48550	groupOrder	4
1882	groupSmallerSlices(PieData	8
24692	groupSmallerSlices(pieData)	6
24674	groupSmallerSlices(pieData,getActivity())	9
48720	groupVisible	4
7337	grouped	22
999	grouping	19
44643	groups	9
37599	groups.	4
37172	grow	4
28339	gselecteerd</string>	8
63082	gu	3
58725	gu.execute(mClient,listener,mHandler)	7
48973	guarantee	4
49471	guaranteed	4
48677	guarantees	7
42259	guard	14
20434	guardado	18
15718	guardan	12
15724	guardar	55
2838	guardar.</string>	13
5434	guess	14
23910	guid	15
23986	guid)	7
38597	guide.</p>	17
45994	guide.</p></div>	4
48912	guide/topics/search/index.html">Search</a>	5
38326	guide/topics/ui/actionbar.html">Action	4
45923	guide/topics/ui/binding.html">Binding	4
47826	guide/topics/ui/menus.html">Menus</a>	8
15348	guineano</item>	17
16699	gulden</item>	6
15763	guyan&#233	11
15542	guyans</item>	10
59067	guys	2
21615	gylden</item>	10
21188	gyldig	10
55214	gzip	3
21467	gzipOutputStream	18
4115	h	60
20802	h&#225	13
15334	h&#250	8
2138	h)	50
46681	h,int	4
30036	h.getStackIndex()	10
46009	hCenter	4
12970	ha	38
5119	habilitada</string>	10
15767	hacer	8
24334	hack	16
19956	had	66
43562	half	4
45039	halfProgressHeight	4
2535	han	31
55570	hand	5
43413	hand,if	4
48119	hand.	4
48498	handing	4
3794	handle	187
45832	handleDataChanged()	8
7923	handleEndOfTemplateNumericSlot(String	14
53556	handleEndOfTemplateNumericSlot(characterString,TransactionType.CREDIT)	4
53571	handleEndOfTemplateNumericSlot(characterString,TransactionType.DEBIT)	4
2549	handleMenuRenameBook(Context	5
55487	handleMenuRenameBook(String	2
55481	handleMenuRenameBook(bookName,bookUID)	2
3245	handleMenuRenameBook(context,bookName,bookUID)	7
41783	handleMessage(Message	4
25323	handleOpenFileIntent(Intent	15
23235	handleOpenFileIntent(intent)	20
23421	handled	64
52138	handled,<code>false</code>	3
39048	handled,false	9
49704	handled,try	5
38730	handled.	4
2697	handler	85
42531	handler,used	4
42286	handler,which	4
7534	handler.getBookUID()	8
32749	handler.getRootAccountUID()	7
35662	handler.mAccountsDbAdapter.close()	4
26694	handler.mDatabaseAdapter.close()	5
35604	handler.mTransactionsDbAdapter.close()	4
41780	handler:	4
48903	handlers	4
20265	handles	43
3394	handling	86
49802	handling.	5
21670	handlinger</string>	10
41323	hands	4
56411	hantera	2
4774	happen	44
60261	happen!")	5
63425	happen)	4
54622	happen,but	11
60305	happen,fix	3
49779	happen,since	5
39461	happen.	4
41890	happened	19
42178	happened,and	4
47768	happened.	9
6301	happens	13
48481	happens.	4
32425	happy	5
31861	haptic	17
31943	hapticFeedback	21
10474	har	45
44416	hard	4
37515	hardware	13
50055	hardwired	5
22609	hari</item>	5
5384	harm	3
2488	has	344
48800	hasActionProvider	5
59210	hasActiveInternetConnection(){	2
48695	hasAddedItem()	4
44543	hasCollapsibleActionView()	4
18841	hasDebitNormalBalance	34
7372	hasDebitNormalBalance(){	5
24210	hasDebitNormalBalance){	8
34306	hasDebitNormalBalance,	4
19057	hasDebitNormalBalance,long	3
43380	hasDividerBeforeChildAt(int	9
40177	hasEmbeddedTabs	4
45775	hasEmbeddedTabs()	4
39863	hasEmbeddedTabs)	4
45724	hasExpandedActionView()	4
38820	hasFeature(Window.FEATURE_NO_TITLE)	4
38546	hasFeature(int	9
41617	hasFloat	4
46570	hasFocus()	9
34978	hasFocus)	33
41334	hasInt	4
7284	hasInvertedCredit(){	13
3629	hasNewFeatures(){	17
41449	hasOther	4
42734	hasOverflow	7
38021	hasQualfier	4
7008	hasSectionHeader	17
47669	hasStableIds()	9
43123	hasSubMenu()	20
45734	hasSubtitle	4
45377	hasTabs	4
49675	hasText	6
42555	hasText()	4
50169	hasText)	5
45742	hasTitle	4
9205	hasToken(){	2
23364	hasUnexportedTransactions(){	30
41639	hasValue()	4
42827	hasVisibleItems()	16
47556	hasVisibleViewBefore	4
49563	hasVoiceSearch()	9
47395	hasWindowFocus()	4
50086	hasWindowFocus)	5
17768	hasa.	9
17617	hasa</string>	13
26198	hashCode()	27
41725	hashmap	4
42298	hashmap<propName,int>	5
39667	hasn't	13
17475	haso,sprbuj	11
17789	haso</string>	25
25505	hat	7
372	have	400
8531	have:</p>	3
3530	having	32
2537	hay	104
15572	haya	28
3373	header	108
44686	header's	8
37275	header.	8
7868	header</string>	114
58537	headerView	7
63491	headerView.findViewById(R.id.book_name)	4
58574	headerView.findViewById(R.id.drawer_title).setOnClickListener(new	7
3281	headers	21
55007	headers,etc)	6
7179	headers,write	27
48663	heavily	4
17079	heen	21
37467	height	36
39018	height)	19
43523	height,boolean	4
45751	height,don't	4
39295	height,int	4
37310	height.	8
46101	height?	4
40276	heightDp	4
39813	heightDp)	4
44343	heightMeasureSpec	17
42501	heightMeasureSpec)	34
43688	heightMeasureSpec,heightPadding)	4
43995	heightMode	10
43814	heightPadding	4
43497	heightPadding,heightMode)	4
44030	heightSize	10
43992	heightSpec	9
47487	heightUsed)	4
6669	held	36
46017	held,or	4
46278	held.	4
3190	help	109
12736	helper	30
35319	helper)	4
63422	helper.close()	6
63402	helper.getWritableDatabase()	7
36174	hence	13
51	here	163
49778	here"	5
36056	here,	10
61740	here,just	6
489	here,line	10
59470	here,make	5
1382	here,move	103
49866	here,or	5
33124	here,otherwise	10
19671	here,rather	5
41353	here,then	4
8115	here,this	9
34796	here.	33
35519	here.</p>	8
52582	here:	2
60567	hereby	3
8009	hermanos")	4
7985	hermanos</sx:name>	4
7792	hermanos</trn:description>	4
16817	herstellen</string>	9
12113	hesaba	11
23177	hesap</string>	8
22375	hesla</string>	5
62727	heslo,prosm	3
22079	heslo</string>	8
17146	het	50
1037	hex	18
1845	hexadecimal	11
45056	hgrav	4
45786	hgravity	4
12289	hi	10
27966	hi&#233	9
4183	hidden	37
64071	hidden)	3
52741	hidden).	14
59102	hidden){	4
9247	hidden,	3
51748	hidden,<code>false</code>	7
42587	hidden,false	4
44758	hidden,it	4
23843	hidden.	17
37	hide	77
39303	hide()	8
8821	hideAccountBalance	6
10038	hideAccountBalance)	4
26869	hideCustomKeyboard()	26
43141	hideOverflowMenu()	9
40244	hideProgressBars(IcsProgressBar	4
39609	hideProgressBars(horizontalProgressBar,circularProgressBar)	4
43187	hideSubMenus()	4
34952	hides	3
38848	hiding	8
24509	hiding,else	3
15216	hieraki	19
17394	hierarchi	14
12055	hierarchical	5
20259	hierarchically	11
2508	hierarchies	9
13940	hierarchies.	25
3193	hierarchy	158
3554	hierarchy)	14
39204	hierarchy,does	4
46094	hierarchy,in	4
40204	hierarchy,then	8
45824	hierarchy.	13
39550	hierarchy.</p>	8
20019	hierarchy</p>	3
8448	hierarchy\n	43
21377	hierarki	17
7730	hierarki\n	9
5211	hierarquia	28
28007	hierarquicamente\n	9
26281	high	6
5642	higher	12
49592	highest	4
49513	highlightDefaultActivity	4
49111	highlightDefaultActivity)	4
18140	highlighted	20
30685	highlighting	9
47019	hijackFocus	4
46552	hijackFocus)	4
37578	hint	22
46892	hint's	4
48915	hint)	5
46882	hintContainer	4
46571	hintContainer.addView(dropDownView,hintParams)	4
47011	hintContainer.addView(hintView)	4
46945	hintContainer.setOrientation(LinearLayout.VERTICAL)	4
49266	hintId	8
46784	hintParams	4
47379	hintParams.bottomMargin	4
46786	hintParams.topMargin	4
47746	hintText	9
47634	hintText)	9
46976	hintView	4
46758	hintView.getLayoutParams()	4
47215	hintView.getMeasuredHeight()	4
47404	hintView.measure(widthSpec,heightSpec)	4
25711	hinzu\n	5
22154	hinzufgen</string>	8
12132	hinzuzufgen</string>	11
10697	hirarchie	23
48476	historical	8
48899	historicalRecord	5
49138	historicalRecord)	4
49443	historicalRecord.activity.getPackageName()	4
49011	historicalRecord.weight	4
48465	historicalRecords	8
48389	historicalRecords)	8
49049	historicalRecords.addAll(uniqueShareRecords)	4
49497	historicalRecords.clear()	4
49048	historicalRecords.get(i)	4
48827	historicalRecords.size()	4
49142	historicalRecordsCount	4
48319	history	12
49117	history,<code>null</code>	4
48390	history.	11
49076	historyFileName	5
49421	historyFileName)	5
48993	historyMaxSize	4
49552	historyMaxSize)	4
49508	historySize	4
46186	hit	15
45955	hitFirst	4
46397	hitFirst)	4
46079	hitLast	4
6433	hitRect	22
6823	hitRect.bottom	22
6623	hitRect.left	22
7288	hitRect.right	22
6773	hitRect.top	22
56090	hittade</string>	2
56358	hittades	2
62954	hitting	4
62773	hlaviku</string>	3
4962	hlen</string>	30
4446	hlt</string>	18
21696	hndtere	6
15752	hngaro</item>	14
55673	hodinu</item>	2
92	hold	48
9159	holder	11
10915	holder,	37
30437	holder,Cursor	12
1633	holder,final	16
60558	holder,int	3
41480	holder.	7
60577	holder.accoundId	9
53864	holder.accountName.setText(accountString)	2
60557	holder.accountName.setText(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_NAME)))	6
53865	holder.budgetAccount.setText(accountsDbAdapter.getAccountFullName(budgetAmount.getAccountUID()))	2
53871	holder.budgetAmount.setText(projectedAmount.formattedString())	2
10710	holder.budgetAmount.setText(usedAmount)	4
54084	holder.budgetAmount.setTextColor(BudgetsActivity.getBudgetProgressColor(1	2
54145	holder.budgetId	2
11616	holder.budgetIndicator.setProgress((int)	5
53987	holder.budgetIndicator.setVisibility(View.GONE)	2
54057	holder.budgetIndicator.setVisibility(View.VISIBLE)	2
54091	holder.budgetLeft.setText(projectedAmount.subtract(spentAmount.abs()).formattedString())	2
53988	holder.budgetLeft.setTextColor(BudgetsActivity.getBudgetProgressColor(1	2
53730	holder.budgetName.setText(budget.getName())	2
54137	holder.budgetRecurrence.setText(budget.getRecurrence().getRepeatString()	2
53860	holder.budgetSpent.setText(spentAmount.abs().formattedString())	2
53821	holder.budgetSpent.setTextColor(BudgetsActivity.getBudgetProgressColor(1	2
52246	holder.colorStripView.setBackgroundColor(Color.TRANSPARENT)	4
52115	holder.colorStripView.setBackgroundColor(color)	4
34320	holder.colorStripView.setBackgroundColor(colorCode)	12
60496	holder.createTransaction.setOnClickListener(new	6
60486	holder.createTransaction.setVisibility(View.GONE)	6
1723	holder.dateText.setText(dateString)	6
60595	holder.description.setText(text)	3
34321	holder.description.setVisibility(View.GONE)	9
60547	holder.description.setVisibility(View.VISIBLE)	3
60686	holder.editTransaction.setOnClickListener(new	7
53874	holder.favoriteStatus.setImageResource(R.drawable.ic_star_black_24dp)	5
60576	holder.favoriteStatus.setImageResource(R.drawable.ic_star_border_black_24dp)	3
21195	holder.favoriteStatus.setImageResource(drawableResource)	9
60590	holder.favoriteStatus.setOnClickListener(new	3
1899	holder.itemView.setOnClickListener(new	22
63929	holder.primaryText.setText(description)	4
63920	holder.secondaryText.setText(dateText)	4
63936	holder.secondaryText.setText(text)	4
30316	holder.transactionDate.setText(dateText)	14
30352	holder.transactionDate.setText(prettyTime.format(new	8
60679	holder.transactionDescription.setText(description)	7
30388	holder.transactionId	17
34679	holder.transactionNote.setText(notes)	4
30315	holder.transactionNote.setText(text)	17
18526	holding	65
48616	holding.	4
9823	holds	29
38592	home	15
38602	home,false	4
45411	home,put	4
38111	home/up	7
37051	home</string>	4
45131	homeAsUp	4
45198	homeAsUp)	4
45717	homeLayout	4
45503	homeLayout.getLayoutParams()	4
45236	homeLayout.getLeftOffset()	4
45262	homeLayout.getMeasuredWidth()	4
45381	homeLayout.measure(homeWidthSpec,	4
45693	homeResId	4
45259	homeWidth	4
45403	homeWidth)	4
45617	homeWidthSpec	4
50649	homescreen	16
15410	hondure&#241	8
15603	hondurea</item>	10
45305	honeycomb	4
37893	honor	4
41891	honor,but	4
16691	hoofding</string>	13
12586	hope	29
50236	hopefully	5
21564	hopper	6
55831	hora</item>	2
55826	horas</item>	4
37170	horizontal	19
51945	horizontal,final	6
60340	horizontal.getPosition(xy[0],view.getWidth())	3
44922	horizontalMargin	4
45635	horizontalMargin)	4
47975	horizontalOffset	4
39857	horizontalProgressBar	4
39479	horizontalProgressBar,IcsProgressBar	4
40119	horizontalProgressBar.getProgress()	4
39860	horizontalProgressBar.getVisibility()	4
39510	horizontalProgressBar.setIndeterminate(false)	4
39716	horizontalProgressBar.setIndeterminate(true)	4
39818	horizontalProgressBar.setProgress(value	4
40009	horizontalProgressBar.setSecondaryProgress(value	4
40154	horizontalProgressBar.setVisibility(View.GONE)	4
40036	horizontalProgressBar.setVisibility(View.INVISIBLE)	4
40206	horizontalProgressBar.setVisibility(View.VISIBLE)	4
39870	horizontalProgressBar.setVisibility(visibility)	4
39728	horizontalProgressBar.startAnimation(anim)	4
19639	horizontally	6
37885	host	34
56481	host,	7
48554	host,Intent	8
52737	host,int	15
3973	hosting	37
52912	hosts	19
27223	hot	3
63557	hour	2
64275	hour,	1
23617	hourOfDay,	6
23974	hourOfDay,int	12
7476	hourly	11
55124	hours	7
21550	hours</item>	16
43104	hover	11
109	how	93
25585	however	19
48484	however,one	4
12209	hozzadsa	9
37814	href="{@docRoot	23
5291	hrung	19
4713	hrung</string>	15
464	hsv	9
27734	hsv2	3
27830	hsv2[0]	3
27754	hsv2[1]	3
27766	hsv2[2]	3
27680	hsv[0]	3
27749	hsv[1]	3
952	hsv[2]	9
52740	http://androidpadanam.wordpress.com/2013/05/29/customkeyboard-example/	11
50548	http://b/1878430.	5
60815	http://en.wikipedia.org/wiki/ISO4217	3
34838	http://facebook.github.io/stetho/#features</p>	6
13765	http://maven.apache.org/maven-v4_0_0.xsd">	66
19039	http://maven.apache.org/xsd/maven-4.0.0.xsd">	11
9024	http://recurrance.sourceforge.net/</p>	11
519	http://www.apache.org/licenses/LICENSE-2.0	347
61182	http://www.evertype.com/standards/iso4217/iso4217-en.html	3
60981	http://www.iso.org/iso/support/faqs/faqs_widely_used_standards/widely_used_standards_other/currency_codes/currency_codes_list-1.htm	3
61047	http://www.thefinancials.com/vortex/CurrencyFormats.html	3
60772	http://www.xe.com/iso4217.htm	3
52659	https://en.wikipedia.org/wiki/Unix_time#Notable_events_in_Unix_time	5
61947	https://gist.github.com/AnirudhaAgashe/61e523dadbaaf064b9a0	3
61181	https://github.com/Gnucash/gnucash/blob/master/src/engine/iso-4217-currencies.xml	3
43919	https://github.com/JakeWharton/ActionBarSherlock/issues/272	4
54863	https://github.com/codinguser/gnucash-android/issues/526</p>	3
56658	https://github.com/codinguser/gnucash-android/issues/583</p>	4
30363	https://mzgreen.github.io/2015/06/23/How-to-hideshow-Toolbar-when-list-is-scrolling(part3)/	3
35184	https://product.reverb.com/2015/06/06/disabling-animations-in-espresso-for-android-testing/	2
27661	hue,saturation,and	3
27695	hue1	3
27723	hue2	3
27818	hue2)	3
4527	hufig	26
47714	huge	4
16675	huidige	7
16754	hulp	6
8947	human	12
46379	hunt	4
22768	huomautus</string>	9
14880	hver	11
14976	hvis	39
2065	i	333
46884	i'th	4
2514	i)	77
43515	i))	4
60608	i){	3
42990	i++	4
1991	i++)	167
24871	i,	11
56389	i,\nLt	2
1597	i,int	14
1704	i,long	22
39779	i--)	26
45449	i--,j++)	4
51306	i.e	7
2002	i.e.	28
56566	i18n	20
56655	i18n.	8
407	i2,int	14
1319	i3)	14
56821	i<	9
9442	i<N	19
9317	i=0	19
58918	iColor	16
49061	iae)	6
47077	icicle)	4
4869	icon	73
44866	icon's	4
37827	icon)	32
37466	icon,button(s)	5
44673	icon,final	4
44719	icon,then	4
49968	icon,while	5
37040	icon.	26
45964	iconHeight	4
46383	iconHeight)	4
50971	iconId	5
46427	iconLeft	4
43519	iconLp	8
45903	iconLp.bottomMargin)	4
46448	iconLp.leftMargin	4
45886	iconLp.rightMargin	4
46315	iconLp.topMargin	4
43521	iconLp.width	4
50438	iconOffset	5
49943	iconOffset)	5
43246	iconRes	12
42564	iconRes)	13
44365	iconRes,	4
44381	iconResId	4
44746	iconResId)	4
45884	iconTop	4
47686	iconView	8
48900	iconView.setImageDrawable(activity.loadIcon(packageManager))	4
47667	iconView.setLayoutParams(lp)	4
46182	iconWidth	4
45983	iconWidth,iconTop	4
37646	iconified	13
49295	iconified)	5
49818	iconified,false	5
49423	iconified,then	6
50211	iconified.	5
50326	iconify	5
50312	iconify)	5
34887	icons	18
47976	icons,and	4
47910	icons,or	8
37445	icons.	12
52032	iconti	6
379	id	261
3184	id")	30
1552	id)	200
3615	id){	82
26982	id,	12
29827	id,Bundle	17
42791	id,int	20
35334	id,null)	14
24311	id,null,null,null,null)	5
11474	id,which	2
44045	id.	21
31391	id1	21
31390	id2	21
28123	id:	8
37243	id="application_name"	5
20111	id="color_index"	46
20798	idNode	18
20674	idNode.appendChild(doc.createTextNode(mUID))	19
20914	idNode.setAttribute("type","guid")	17
21143	idNode.setAttribute(GncXmlHelper.ATTR_KEY_TYPE,GncXmlHelper.ATTR_VALUE_GUID)	15
45860	idToMatch	4
45995	idToMatch)	4
43584	idea	4
38245	ideal	4
11106	ideas,discuss	84
16099	ideas,discutir	26
29419	idee,discuti	8
10127	ideer,diskutere	19
35391	ideias,discuta	22
18067	idendtifier	17
50746	identifer	5
3819	identificao	49
1965	identificar	115
28065	identificare	5
18165	identifier	75
48790	identifier,but	4
48579	identifier,nothing	4
10987	identifier.	14
36141	identifies	7
18408	identify	11
18437	identifying	31
17298	identyfikacj	18
56176	ider,diskutera	2
11317	ides,discuter	3
59648	ids	3
62468	iemenita</item>	6
380	if	398
55068	if(	3
31180	if(!(PreferenceManager.getDefaultSharedPreferences(getActivity())	15
32495	if(!mOC_sync){	11
21522	if(Build.VERSION.SDK_INT	13
14548	if(bytesCopied	5
63887	if(copy(src,dst))	2
59083	if(event.getAction()	6
59187	if(event.getRawX()	6
10704	if(isFavorite	4
63170	if(mOkButton.getText().toString().equals(getString(R.string.btn_save))	3
46826	if(mRefreshProgressRunnable	4
25355	if(project.hasProperty("RELEASE_STORE_FILE"))	2
51278	if(splitAccountId	3
26413	if(transaction.getCommodityUID()	6
48792	ifRoom	4
41902	iff	4
15071	ifra	11
59301	ifre,ltfen	6
57331	igen</string>	3
15184	igjen	20
14792	igjen.</string>	11
14850	igjen</string>	20
3444	ignore	40
46705	ignoreBottomDecorations	4
46950	ignoreBottomDecorations)	4
62346	ignorePasscode	5
2891	ignored	27
44753	ignored).	4
52447	ignored){	2
7906	ignored.	22
53574	ignores	7
61968	ignoring	3
44326	ignoring",e)	4
23229	iin	8
7895	ikke	55
7618	il	58
12895	ilem	11
57118	illegal	7
4422	im	32
5140	image	26
38609	image.	4
26110	imbAccount	18
32870	imbAccount.setAccountType(AccountType.BANK)	9
32914	imbAccount.setParentUID(mRootAccount.getUID())	9
33974	imbSplit	17
57278	imbSplit.setType(splitType)	4
5975	imbalance	248
24930	imbalance.add(amount)	11
24906	imbalance.subtract(amount)	21
24934	imbalance:	3
24808	imbalance</p>	3
6052	imbalanceAccountName	35
30085	imbalanceAccountName)	8
6266	imbalanceAccountUID	36
30307	imbalanceAccountUID)	7
4943	imbalanceAcctUID	12
31395	imbalanceAmount	5
31148	imbalanceAmount.absolute()	5
31184	imbalanceAmount.negate()	5
59382	imbalancePrefix	4
10812	imbalanceSplit	12
11669	imbalanceSplit.setAccountUID(imbalanceAccountUID)	14
33931	imbalanceSplits	2
28940	imbalanceSplits.get(0)	13
29050	imbalanceTextView	4
31047	imbalanceType	5
11007	imbalanceUID	12
8620	imbalanced	4
28061	imbriqu&#233	9
49028	ime	9
48819	imeOptions	6
49660	imeOptions)	5
18810	imm	32
50101	imm,int	5
50446	imm.getClass().getMethod("showSoftInputUnchecked",int.class,ResultReceiver.class)	5
51787	imm.hideSoftInputFromWindow(findViewById(android.R.id.content).getWindowToken(),0)	2
50142	imm.hideSoftInputFromWindow(getWindowToken(),0)	5
20363	imm.hideSoftInputFromWindow(mDescriptionEditText.getApplicationWindowToken(),0)	5
35985	imm.hideSoftInputFromWindow(mNameEditText.getApplicationWindowToken(),0)	5
19231	imm.hideSoftInputFromWindow(mNameEditText.getWindowToken(),0)	18
49750	imm.showSoftInput(view,flags)	5
35029	immediate	6
25522	immediately	46
20808	immediately,do	8
39703	immediately,followed	4
40688	immediately.	9
4725	immer	15
26201	immutable	16
38697	impl	8
38346	impl)	4
38132	impl.getConstructor(CONSTRUCTOR_ARGS)	4
38376	impl.getSimpleName())	4
48255	impl.setExclusiveCheckable(true)	4
3590	implement	55
20645	implementation	57
37166	implementation.	13
41196	implementation...	4
48273	implementation.</p>	4
38014	implementation:	4
38314	implementationClass	4
38085	implementationClass)	4
38558	implementationClass.getAnnotation(Implementation.class)	4
38699	implementationClass.getSimpleName()	4
37980	implementations	20
2400	implemented	40
21088	implementing	33
951	implements	273
49867	implicit)	5
13082	implicitly	14
26603	implied	18
60613	implied,and	3
894	implied.	350
41671	implies	9
10616	implmentation	9
38228	impls	4
38065	impls.keySet())	4
38628	impls.keySet().iterator()	4
37986	impls.values().iterator().next()	4
41197	imply	4
29660	impor	5
879	import	369
50692	import")	4
16074	import&#233	24
25608	import)	10
35554	import,an	4
19603	import,delete	6
3302	import.	21
2538	importAccounts()	42
20500	importAccounts(Activity	6
60878	importCommodities(SQLiteDatabase	8
53148	importCommodities(db)	11
8173	importGnuCashXml("accountsImport.xml")	3
8307	importGnuCashXml("bug562_scheduledTransactionImportedWithImbalancedSplits.xml")	3
8208	importGnuCashXml("multiCurrencyTransactionImport.xml")	3
8179	importGnuCashXml("simpleScheduledTransactionImport.xml")	3
8520	importGnuCashXml("simpleTransactionImport.xml")	3
8621	importGnuCashXml("testAccountsImport.xml")	5
7937	importGnuCashXml("testImportSimpleScheduledTransaction.xml")	5
8220	importGnuCashXml("transactionWithNonDefaultSplitsImport.xml")	3
8368	importGnuCashXml(String	3
25443	importGnucashXML(SQLiteDatabase	12
28355	importMostRecentBackup()	9
28299	importMostRecentBackup(){	10
19987	importSuccess	17
18704	importSuccess)	24
20121	importXmlFileFromIntent(Activity	11
15522	importadas	46
20329	importado	10
29752	importados	17
22483	important	11
50874	important,do	11
37198	important.	4
3635	importar	77
16208	importare	31
28049	importarle	19
22082	importat	7
16326	importati	19
15755	importe	43
1145	imported	81
2585	imported,top	9
54553	imported,used	3
63500	imported.	4
7231	imported</string>	110
10396	importer	5
55974	importera</string>	2
55930	importerats</string>	2
15102	importere	32
17167	importeren	13
17191	importeren.	16
26366	importeren.</string>	13
16595	importeren</string>	13
2588	importeres	89
7734	importering	16
8573	importert</string>	26
22653	importi	11
6171	importieren	6
15212	importieren.\n\nBeide	17
5693	importieren</string>	20
4511	importieren\n\nBeide	5
6345	importiert	25
5149	importiert</string>	15
3063	importing	169
48706	importing,for	4
49242	importing.</strong>	4
32869	importingXml_shouldSetDefaultCurrency(){	11
60278	importingXml_shouldSetDefaultCurrencyFromXml(){	3
16388	importo	32
22441	importovny</string>	9
17522	importowania	13
11357	imports	17
22207	importu	9
28036	impostare	7
29320	impostato</string>	8
22789	impostazione	11
16423	impostazioni	28
33394	impostiamo	2
25258	improve	7
21085	improved	7
5056	improvement	67
3555	improvements\n	156
25218	impunity	21
377	in	451
43293	in)	16
2357	in,\nlet\'s	90
47997	in,through	4
49971	in-app	5
41689	in-between	4
48799	in.	4
56896	in.close()	7
46603	in.getStateCount()	4
42637	in.readInt()	16
33308	in.readLine())	15
46353	in.readLong()	4
29305	in:	4
22593	in:</string>	12
12652	in:\n</string>	31
16655	in</string>	28
7065	inChannel	31
7219	inChannel.close()	30
6715	inChannel.transferTo(0,inChannel.size(),outChannel)	28
42464	inGroup	4
42859	inGroup)	4
19725	inSubAcccount(){	10
57633	inaccessible	3
10323	inaccessible</string>	6
19945	inactive	11
44443	inadvertent	4
51301	inadvertently	3
62798	incio</item>	3
12037	incio</string>	9
5828	include	44
46537	include:</p>	4
32462	included	28
57370	included.	3
20097	includes	45
3656	including	47
44826	inclusion	4
47499	inclusive	4
37884	inclusive).	4
1632	income	10
39422	incompatible	4
24794	incomplete	3
62319	inconsistencies	3
48517	inconsistent	4
15637	incorrecta,intentar	21
19769	incorrecta,por	14
15675	incorrecta.	11
4910	incorreta,tente	14
5447	incorreta.	6
6741	increase	61
7165	increased	17
13642	increased,<code>false</code>	9
31291	incremend	7
31196	increment	10
47080	incrementProgressBy()	4
47148	incrementProgressBy(int	4
47163	incrementSecondaryProgressBy(int	4
43798	incremented.	4
41804	indefinitely.	4
6937	indent-amount","2")	24
35790	independent	24
48804	independently	4
23201	indeterminate	19
38225	indeterminate)	16
37934	indeterminate).	4
38224	indeterminate.	8
39025	indeterminate:	8
11660	index	118
38969	index)	33
2859	index){	23
18578	index++	5
63965	index,	3
46432	index,LayoutParams	4
53638	index,and	2
43942	index,boolean	4
27473	index,int	3
38939	index,use	4
38970	index.	16
47257	indexOfChild(child)	4
62370	indexadas	6
50513	indexes,updated	5
15919	india</item>	14
62458	indiana</item>	6
778	indicate	49
44328	indicated	4
50310	indicated,allow	5
40510	indicates	21
3165	indicating	86
47374	indication	4
23057	indicator	24
46797	indicator).	4
7058	indicator.	21
18041	indices	25
41013	indirect	9
44195	indirectly	8
9593	individual	29
15502	individuales	12
43578	individually	4
15591	indonesia</item>	14
11315	induk</string>	3
49754	ineffective.	5
46559	infinite	4
23209	inflate	27
48216	inflate(int	4
31663	inflated	9
35239	inflated,make	7
44400	inflated.	4
5388	inflater	84
200	inflater)	123
2364	inflater,	147
33055	inflater,@Nullable	11
8387	inflater,ViewGroup	115
48439	inflater.	5
45783	inflater.inflate(R.layout.abs__action_bar_title_item,	4
45691	inflater.inflate(R.layout.abs__action_bar_title_item,this)	4
49330	inflater.inflate(R.layout.abs__activity_chooser_view,this,true)	4
43834	inflater.inflate(R.layout.abs__list_menu_item_checkbox,	4
43842	inflater.inflate(R.layout.abs__list_menu_item_icon,	4
43656	inflater.inflate(R.layout.abs__list_menu_item_radio,	4
49644	inflater.inflate(R.layout.abs__search_view,this,true)	5
32950	inflater.inflate(R.layout.dialog_account_delete,container,false)	9
64318	inflater.inflate(R.layout.dialog_add_account,container,false)	1
59909	inflater.inflate(R.layout.dialog_bulk_move,container,false)	3
56597	inflater.inflate(R.layout.dialog_date_range_picker,container,false)	3
34530	inflater.inflate(R.layout.dialog_export,container,false)	7
36636	inflater.inflate(R.layout.dialog_export_ofx,container,false)	8
51365	inflater.inflate(R.layout.dialog_new_account,container,false)	4
63100	inflater.inflate(R.layout.dialog_owncloud_account,container,false)	3
33355	inflater.inflate(R.layout.dialog_split_editor,container,false)	7
31618	inflater.inflate(R.layout.dialog_transfer_funds,container,false)	5
29810	inflater.inflate(R.layout.drawer_list_item,null)	2
34827	inflater.inflate(R.layout.drawer_section_header,mDrawerList,false)	6
25035	inflater.inflate(R.layout.drawer_section_header,null)	10
34651	inflater.inflate(R.layout.fragment_account_form,container,false)	6
30587	inflater.inflate(R.layout.fragment_accounts_list,container,	11
60203	inflater.inflate(R.layout.fragment_bar_chart,container,false)	6
63987	inflater.inflate(R.layout.fragment_book_list,container,false)	2
57480	inflater.inflate(R.layout.fragment_budget_amount_editor,container,false)	3
53766	inflater.inflate(R.layout.fragment_budget_detail,container,false)	2
53933	inflater.inflate(R.layout.fragment_budget_form,container,false)	5
53770	inflater.inflate(R.layout.fragment_budget_list,container,false)	2
34653	inflater.inflate(R.layout.fragment_export_form,container,false)	6
60189	inflater.inflate(R.layout.fragment_line_chart,container,false)	6
24298	inflater.inflate(R.layout.fragment_new_account,container,false)	24
27890	inflater.inflate(R.layout.fragment_new_transaction,container,false)	20
26107	inflater.inflate(R.layout.fragment_numeric_keyboard,container,false)	3
60199	inflater.inflate(R.layout.fragment_pie_chart,container,false)	6
18101	inflater.inflate(R.layout.fragment_recurring_transactions_list,container,false)	4
50708	inflater.inflate(R.layout.fragment_report_summary,container,false)	6
54515	inflater.inflate(R.layout.fragment_scheduled_events_list,container,false)	6
31971	inflater.inflate(R.layout.fragment_split_editor,container,false)	12
60132	inflater.inflate(R.layout.fragment_text_report,container,false)	6
34527	inflater.inflate(R.layout.fragment_transaction_form,container,false)	13
18866	inflater.inflate(R.layout.fragment_transactions_list,container,false)	12
62173	inflater.inflate(R.layout.fragment_wizard_currency_select_page,container,false)	3
62218	inflater.inflate(R.layout.fragment_wizard_welcome_page,container,false)	3
62008	inflater.inflate(R.layout.item_split_amount_info,mDetailTableLayout,false)	7
21909	inflater.inflate(R.layout.row_balance_sheet,tableLayout,false)	9
64312	inflater.inflate(R.menu.acccount_actions,menu)	2
19941	inflater.inflate(R.menu.account_actions,menu)	24
5427	inflater.inflate(R.menu.account_context_menu,menu)	15
60434	inflater.inflate(R.menu.account_context_menu,popup.getMenu())	6
59061	inflater.inflate(R.menu.action_bar,menu)	2
30194	inflater.inflate(R.menu.book_list_actions,menu)	2
53856	inflater.inflate(R.menu.budget_actions,menu)	2
57449	inflater.inflate(R.menu.budget_amount_editor_actions,menu)	3
53943	inflater.inflate(R.menu.budget_context_menu,popup.getMenu())	2
1588	inflater.inflate(R.menu.chart_actions,menu)	18
14591	inflater.inflate(R.menu.default_save_actions,menu)	34
23832	inflater.inflate(R.menu.global_actions,menu)	6
18670	inflater.inflate(R.menu.new_transaction_actions,menu)	4
34721	inflater.inflate(R.menu.scheduled_export_actions,menu)	9
34235	inflater.inflate(R.menu.schedxactions_context_menu,menu)	4
56622	inflater.inflate(R.menu.split_editor_actions,menu)	4
19916	inflater.inflate(R.menu.sub_account_actions,menu)	5
18353	inflater.inflate(R.menu.transactions_context_menu,menu)	16
60685	inflater.inflate(R.menu.transactions_context_menu,popup.getMenu())	3
14040	inflater.inflate(R.menu.transactions_list_actions,menu)	22
45779	inflater.inflate(customNavId,this,false)	4
60127	inflater.inflate(getLayoutResource(),container,false)	3
45156	inflater.inflate(homeResId,this,false)	4
38776	inflating	13
48683	inflation	10
43531	inflation.	4
36935	influence	8
7298	info	38
46436	info)	9
44546	info,in	4
14577	info.	18
50153	info.setClassName(SearchView.class.getName())	5
46183	info.setEnabled(selectedView.isEnabled())	4
45794	info.setScrollable(isScrollableForAccessibility())	4
63451	info</li>	4
17665	inforamcje	23
9102	inform	19
20943	informa&#231	14
23083	informa&#231;&#245;es	20
2603	informaci&#243	20
2152	informaci&#243;n	47
11456	informacin	68
17580	informacje	18
17577	informacji	8
6311	informaes	68
3434	informao	49
22495	informasi	7
21542	informasjon	10
21886	informasjon</string>	10
1208	information	324
41393	information.	12
11322	informations	15
22618	informazioni	6
16064	informe</string>	10
48986	informed.	5
2930	informes	9
3474	informes</string>	16
3603	informes\n	12
12642	inga	15
12453	ingen	22
16799	ingeschakeld</string>	5
16647	ingesteld</string>	5
10649	ingin	12
11740	ingrese	6
23095	inheriting	3
40906	inherits	4
12073	ini	14
22794	ini</string>	7
10722	ini?</string>	3
4155	iniciais	6
5323	inicial	6
59517	iniciar,\nvamos	11
54925	iniciar,vamos	7
34253	init	14
3348	init()	97
26284	init(){	9
23635	init(@Nullable	28
51886	init(Config	3
51114	init(Context	11
60499	init(Cursor	3
51102	init(GnuCashApplication.getAppContext(),false)	4
3643	init(SQLiteDatabase	6
48129	init(ScrollingTabContainerView	4
40090	init(View	4
3659	init(boolean	7
3221	init(bulk,db)	5
2579	init(bulk,null)	5
56704	init(context,attrs)	4
51245	init(context,bulk)	5
51262	init(context,false)	5
60512	init(cursor)	3
2962	init(db)	8
39661	init(decor)	4
39530	init(dialog.getWindow().getDecorView())	4
32149	init(false,null)	4
27200	init(int	3
2513	init(null)	5
3538	init(true,null)	3
46209	initAbsSpinner()	4
39332	initActionBar()	8
10968	initAdapters(String	5
32916	initAdapters(bookUID)	3
10582	initAdapters(null)	5
41686	initAnimation()	10
202	initArgs()	46
56545	initCalculatorKeyboard()	10
9540	initCrashlyticsPropertiesIfNeeded()	19
19934	initDatabaseAdapters()	20
18536	initDefaults()	21
10706	initDefaults(){	48
42450	initForMenu(Context	17
45189	initForMode(final	4
44999	initIndeterminateProgress()	4
45212	initProgress()	4
47390	initProgressBar()	4
45206	initTitle()	7
18299	initTransactionNameAutocomplete()	30
53883	initViews(Budget	5
54054	initViews(mBudget	5
7193	initalizeViews()	95
39726	initial	42
42149	initialValue()	4
20868	initialization	45
20429	initialization.	2
14234	initialize	52
43997	initialize(MenuBuilder	9
42842	initialize(MenuItemImpl	12
27575	initialize(int	3
51211	initializeColorSquarePreview(@NonNull	4
1516	initializeColorSquarePreview(String	14
1307	initializeColorSquarePreview(account.getColorHexCode())	6
26774	initializeColorSquarePreview(colorHex)	7
19646	initializeCreateOrEditTransaction()	29
51018	initializeDatabaseAdapters()	5
39028	initializePanelMenu()	4
26645	initializeViews()	9
677	initializeViews(){	22
1895	initializeViewsWithAccount(Account	51
27164	initializeViewsWithAccount(mAccount)	13
3563	initializeViewsWithTransaction()	37
3749	initializeViewsWithTransaction(){	91
2665	initialized	62
49019	initialized.	4
34759	initializer	6
13120	initializes	45
5362	initializing	41
19068	initially	28
18701	initiated	12
16149	initiaux</string>	14
49696	inject	5
13244	injectInstrumentation(InstrumentationRegistry.getInstrumentation())	33
8029	inkluderer	6
4315	inkompatibel</string>	22
49749	inline	5
21699	inn	22
56350	innan	3
56468	innehller	2
56469	innehllet	2
28092	inneholde	4
14856	inneholder	17
12441	innej	35
56557	inner	7
44906	inner-class	4
14891	inngende	28
14740	innspilling	12
14875	innstillinger	28
21322	innstillinger</string>	10
52042	innstillinger\n	4
5679	input	145
33464	input.	15
27353	inputAccountName	13
49733	inputManager	5
50551	inputManager.showSoftInput(this,0)	5
60297	inputName	3
60276	inputName)	3
60284	inputName.replaceAll("[^a-zA-Z0-9-_\\.]","_")	3
8260	inputSource	3
7942	inputStream	24
9697	inputStream.close()	3
55383	inputStream.read(buffer))	3
2625	inputStreams)	22
48972	inputType	10
48814	inputType)	5
31677	inputting	8
17043	inschakelen</string>	3
2099	insert	68
14422	insert,update,replace	11
52949	insert.	10
19834	insert/edit	12
13398	insert:	5
14042	insertBook(SQLiteDatabase	5
63733	insertBook(db,book)	2
43896	insertCheckBox()	4
43961	insertIconView()	4
44189	insertRadioButton()	4
1128	insert_account_commodity	10
33833	insert_transaction_commodity	7
14313	inserted	69
2981	inserted",nAccounts))	25
52155	inserted",nBudgets))	6
23501	inserted",nPrices))	10
2292	inserted",nSchedActions))	15
50763	inserted",nSplits))	10
52104	inserted",nTempTransactions))	8
3125	inserted",nTransactions))	22
52870	inserted,full	10
54591	inserted,instead	3
54571	inserted,used	3
14043	inserted.	5
54524	inserted/updated	8
14060	insertion	2
512	insertions:	6
171	inserts	6
47557	inset	4
506	inside	45
63057	insira	3
46450	inspects	4
56152	inspelning	2
51987	inspilling	4
55420	install(Application	2
8816	install*	15
39294	installDecor()	7
59413	installation	2
34140	installed	5
39458	installed...	4
9192	install{productFlavour	20
3757	instance	233
53679	instance,because	2
33716	instance.	34
55071	instanceCount	3
52978	instance_count	2
161	instanceof	184
23603	instances	66
37400	instantiate	9
25289	instantiated	35
52566	instantiated.	7
35437	instantiating	12
51168	instantiation	6
1767	instead	142
42314	instead")	8
41773	instead,	4
50237	instead,consume	5
30773	instead.	26
47472	instead.</p>	4
32663	instead</p>	9
16923	instellen\n\nOm	3
16704	instellingen	3
38881	insterted	4
56116	instllningar	2
56087	instllningar</string>	2
38099	instruction.</p>	4
59739	instructions	5
2170	int	387
40978	int,exists	4
50706	int,look	5
41403	int.	4
41489	int.class	8
36931	int</token>	4
36846	int</value>	4
41420	intKeyframes[]	4
41669	intKeyframes[i]	4
40741	intValue()	4
36150	intValue(){	7
7948	int[0]	23
43205	int[2]	18
582	int[]	166
7377	int[][]{new	23
54579	int[]{	6
30604	int[]{R.id.primary_text	12
64004	int[]{R.id.primary_text,R.id.secondary_text	2
35955	int[]{android.R.id.text1	22
50855	int[]{getResources().getColor(R.color.account_blue)	4
7572	int[]{getResources().getColor(R.color.account_green)	16
21636	int[]{getResources().getColor(R.color.account_purple)	13
50960	int[]{getResources().getColor(R.color.account_red)	3
1646	int[colorTypedArray.length()]	6
18584	int[mSelectedIds.size()]	4
56064	inte	3
56096	inte</string>	2
18415	integer	112
53234	integer,"	2
51065	integer,but	5
49962	integer,it	5
50675	integer,use	5
48095	integer.	4
40209	integers	12
47644	integers.	4
55708	integration	2
23336	integrity	5
44344	intended	7
540	intent	223
18276	intent")	11
5201	intent)	109
48752	intent,List<ActivityResolveInfo>	8
49852	intent,ex)	5
50340	intent,including	5
42432	intent,int	17
48803	intent.	14
49668	intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)	5
13518	intent.getAction()	17
25238	intent.getData()	6
18262	intent.getExtras()	16
25293	intent.getIntExtra(EXTRA_TAB_INDEX,INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT)	6
29800	intent.getIntExtra(EXTRA_TAB_INDEX,lastTabIndex)	16
20004	intent.getLongExtra(	14
27650	intent.getLongExtra(AccountsListFragment.ARG_PARENT_ACCOUNT_ID,0L)	9
27850	intent.getLongExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,0L)	9
63352	intent.getLongExtra(UxArgument.PARENT_ACCOUNT_ID,0L)	4
13043	intent.getLongExtra(UxArgument.SELECTED_ACCOUNT_ID,0L)	5
720	intent.getStringExtra(UxArgument.FORM_TYPE)	5
1501	intent.getStringExtra(UxArgument.PARENT_ACCOUNT_UID)	10
2041	intent.getStringExtra(UxArgument.SELECTED_ACCOUNT_UID)	11
28507	intent.putExtra(Account.EXTRA_CURRENCY_CODE,"EUR")	11
18232	intent.putExtra(Account.EXTRA_CURRENCY_CODE,transaction.getAmount().getCurrency().getCurrencyCode())	5
35986	intent.putExtra(Account.EXTRA_CURRENCY_CODE,transaction.getCurrencyCode())	4
25430	intent.putExtra(AccountsActivity.EXTRA_TAB_INDEX,	7
54880	intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS,appWidgetIds)	2
18206	intent.putExtra(EXTRA_ACCOUNT_UID,transaction.getAccountUID())	5
18169	intent.putExtra(EXTRA_AMOUNT,transaction.getAmount().asBigDecimal())	5
18339	intent.putExtra(EXTRA_DOUBLE_ACCOUNT_UID,transaction.getDoubleEntryAccountUID())	5
18194	intent.putExtra(EXTRA_TRANSACTION_TYPE,transaction.getTransactionType().name())	5
18540	intent.putExtra(Intent.EXTRA_TEXT,transaction.getDescription())	7
54295	intent.putExtra(Intent.EXTRA_TEXT,transaction.getNote())	2
6084	intent.putExtra(Intent.EXTRA_TITLE,"Intent	14
51237	intent.putExtra(Intent.EXTRA_TITLE,transaction.getDescription())	6
18490	intent.putExtra(Intent.EXTRA_TITLE,transaction.getName())	7
28475	intent.putExtra(Intent.EXTRA_UID,"intent-account")	10
25172	intent.putExtra(ScheduledActionsActivity.EXTRA_DISPLAY_MODE,	16
62576	intent.putExtra(ScheduledEventsActivity.EXTRA_DISPLAY_MODE,	3
50088	intent.putExtra(SearchManager.ACTION_KEY,actionKey)	5
50339	intent.putExtra(SearchManager.ACTION_MSG,actionMsg)	5
49922	intent.putExtra(SearchManager.APP_DATA,mAppSearchData)	5
50577	intent.putExtra(SearchManager.EXTRA_DATA_KEY,extraData)	5
50329	intent.putExtra(SearchManager.QUERY,query)	5
49714	intent.putExtra(SearchManager.USER_QUERY,mUserQuery)	5
31298	intent.putExtra(Transaction.EXTRA_SPLITS,stringBuilder.toString())	5
30630	intent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,accountId)	9
30589	intent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,accountRowId)	9
34468	intent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,id)	6
63865	intent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_NAME,accountName)	2
33367	intent.putExtra(UxArgument.AMOUNT_STRING,baseAmountString)	9
57539	intent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.BUDGET_AMOUNT_EDITOR.name())	3
13131	intent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.EXPORT.name())	5
13420	intent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.EXPORT_FORM.name())	11
33380	intent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.SPLIT_EDITOR.name())	9
13048	intent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.TRANSACTION.name())	7
13916	intent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.TRANSACTION_FORM.name())	8
63367	intent.putExtra(UxArgument.SELECTED_ACCOUNT_ID,accountId)	4
63369	intent.putExtra(UxArgument.SELECTED_ACCOUNT_ID,accountRowId)	4
63401	intent.putExtra(UxArgument.SELECTED_ACCOUNT_ID,id)	4
13445	intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,DUMMY_ACCOUNT_UID)	23
62861	intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,TRANSACTIONS_ACCOUNT_UID)	4
13829	intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,accountUID)	10
29008	intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,childAccount.getUID())	5
54757	intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,id)	4
134	intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,mAccountUID)	24
53827	intent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,mBudgetAmounts.get(position).getAccountUID())	2
731	intent.putExtra(UxArgument.SELECTED_TRANSACTION_UID,mTransactionsDbAdapter.getUID(id))	8
13123	intent.putExtra(UxArgument.SELECTED_TRANSACTION_UID,transactionUID)	10
31117	intent.putExtras(getIntent().getExtras())	3
57437	intent.putParcelableArrayListExtra(UxArgument.BUDGET_AMOUNT_LIST,mBudgetAmounts)	3
63069	intent.putParcelableArrayListExtra(UxArgument.SPLIT_LIST,(ArrayList<Split>)	4
33287	intent.putStringArrayListExtra(UxArgument.SPLIT_LIST,splitStrings)	9
27824	intent.setAction(ACTION_VIEW_RECURRING)	7
13980	intent.setAction(Intent.ACTION_INSERT_OR_EDIT)	24
30542	intent.setAction(Intent.ACTION_VIEW)	11
63973	intent.setAction(PreferenceActivity.ACTION_MANAGE_BOOKS)	2
54851	intent.setClass(context,TransactionAppWidgetProvider.class)	2
50157	intent.setComponent(mSearchable.getSearchActivity())	5
54876	intent.setData(Uri.parse(intent.toUri(Intent.URI_INTENT_SCHEME)))	2
50480	intent.setData(data)	5
25358	intent.setData(null)	6
24831	intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP	13
25445	intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP)	17
28671	intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK)	6
28478	intent.setType(Account.MIME_TYPE)	10
18089	intent.setType(Transaction.MIME_TYPE)	17
50590	intent:	4
41071	intention	4
36205	intentional:	20
40300	intentionally	4
25432	intents	19
34239	intents"	10
51103	intents")	12
13791	intents")){	15
20364	intents)	11
36496	intents.	10
38181	interact	8
45407	interacting	4
38147	interaction	23
47811	interactions	4
38392	interactive	4
51793	interal	6
58609	interceptors	3
1416	interface	123
33143	interface.	7
49322	interfaces	4
28387	interfere	3
46940	intermediate	18
6852	internal	57
26214	internally	36
37886	internally.	6
57805	international	6
32734	internationalize	5
59246	internet	2
41492	interpolate	8
41299	interpolated	11
42639	interpolatedTime,Transformation	4
40391	interpolating	8
40935	interpolation	12
42007	interpolation,via	4
41322	interpolation,which	4
41285	interpolation.	12
39594	interpolator	20
41051	interpolator)	12
40828	interpolator.getInterpolation(fraction)	8
45852	intersect	4
548	interval	37
1520	interval)	7
1316	interval,then	4
41589	interval.	4
40489	intervalFraction	8
56400	intervall&#8230	2
55654	intervalli	2
32298	intervals.	7
41246	intervalue	4
50879	intervening	7
34667	intialized	9
3480	into	251
36312	into,as	4
48544	into.	9
46720	intrinsicAspect	4
46672	intrinsicAspect)	4
47546	intrinsicAspect))	4
46856	intrinsicHeight	4
47407	intrinsicWidth	4
27940	introdotte	5
20681	introduced	32
31161	introduction	12
11745	introduza	9
15800	introduzca	13
51019	ints	5
41545	ints.	4
3083	inv&#225	21
24960	invalid	35
36522	invalid,just	4
24970	invalid,null	3
12446	invalid.	17
62891	invalid.</p>	4
56663	invalid:	11
10133	invalid</string>	42
36857	invalidate	20
36466	invalidate()	32
46618	invalidate(dirty.left	4
42746	invalidateAfterUpdate()	4
47232	invalidateDrawable(Drawable	4
38876	invalidateOptionsMenu()	10
46478	invalidateSelf()	5
46112	invalidated	4
48049	invalidated.	4
47782	invalidated</li>	4
16483	invalide!</string>	11
11964	invalide.	10
60091	invalids:	3
33845	inverse	16
21499	inversjon	10
62381	inverso	6
12694	invert	8
34003	invert()	5
6726	inverted	13
6848	invertedCredit	6
7185	invertedCredit){	6
62360	investigate	3
16110	inviare	20
48566	invisible	4
52907	invisible.	13
22149	invlida!</string>	24
62456	invlida.	7
15568	invlida</string>	20
63196	invlido</string>	5
28156	invlidos:	13
41457	invocation	16
48591	invocation.	4
48227	invokable	4
48569	invokable.	4
48560	invokations.	4
45362	invoke	8
42391	invoke()	8
49397	invoke(View	5
43524	invokeItem(MenuItemImpl	4
39085	invoked	27
39252	invoked.	15
42921	invoker	4
42354	invoker)	4
27399	invokes	7
34672	involve	10
23397	involved	9
31551	involves	6
20597	involving	16
60200	io.fabric.sdk.android.Fabric	3
49004	ioe)	4
15713	iran&#237	8
15466	iran</item>	10
62372	iraniano</item>	6
15467	iraqu&#237	8
15545	iraqu</item>	10
62441	iraquiano</item>	6
25587	irgendeinen	3
10435	iro	13
23819	irrelevant	11
12730	irrespective	12
49580	irreversibly	4
373	is	449
44032	is,give	4
50449	is,then	5
32175	is.	3
35796	is:	3
43000	isAction	4
44485	isActionButton()	4
44715	isActionButton)	4
42469	isActionViewExpanded()	12
63421	isActive	4
63519	isActive()	4
54630	isActive(String	15
53548	isAmountZero()	10
42959	isCheckable()	12
63224	isChecked	3
33496	isChecked()	17
5647	isChecked)	78
45255	isCollapsed()	8
62078	isCompleted()	3
34569	isContentModified	9
55232	isCrashlyticsEnabled(){	12
52889	isCustomKeyboardVisible()	15
10467	isDebitAccount	19
31946	isDebitSplit	12
26509	isDebitTransaction	7
54764	isDeleted	9
33261	isDisplayed())).perform(click())	3
56966	isDoubleEntryEnabled(){	14
34825	isDoubleEntryEnabled(boolean	7
48065	isEmpty()	9
42741	isEnabled()	13
33530	isEnabled(){	5
47813	isEnabled(int	4
7527	isEqualTo(GncXmlHelper.parseDate("2016-08-23	3
62871	isEquivalentTo(Split	4
42550	isExclusive	4
43314	isExclusive)	4
44225	isExclusiveCheckable()	4
44571	isExpanded	4
44735	isExpanded)	4
43376	isExpandedFormat()	4
3947	isExported	11
2457	isExported(){	11
3814	isExported){	6
11090	isFavorite	34
27809	isFavorite()	3
1146	isFavorite)	18
27735	isFavoriteAccount	18
1154	isFavoriteAccount(String	19
24424	isFavoriteAccount(long	26
42989	isFocusable	4
42967	isFocusable)	4
46935	isFocused()	4
44042	isGeneratedItem	4
31912	isHapticFeedbackEnabled()	4
25841	isHidden	19
64095	isHidden()	3
59119	isHidden(){	4
51778	isHiddenAccount(String	4
49837	isIconfiedByDefault()	5
50594	isIconified()	5
35845	isInDoubleAccount()){	2
30373	isInDoubleAccount(){	6
46374	isInFilterMode()	4
46225	isInFilterMode()))	4
40245	isInTabMode	4
39987	isInTabMode)	4
46832	isInTouchMode()	4
47108	isIndeterminate()	4
47007	isInputMethodNotNeeded()	5
36023	isInputModified()	4
31839	isInputModified(){	20
52837	isInputValid(){	12
44086	isKeyCodeMapped	4
50500	isLandscapeMode(Context	5
46657	isMeasureWithLargestChildEnabled()	5
13450	isModified	7
63050	isMultiCurrencyTransaction(){	4
26340	isNegative(){	21
13042	isOpen(){	23
39421	isOurActivity	8
43743	isOverflowButton	4
43844	isOverflowButton)	4
42629	isOverflowMenuShowing()	9
45571	isOverflowOpen	4
43206	isOverflowReserved()	12
51264	isPairOf(@NonNull	4
35608	isPairOf(Split	14
13246	isPassEnabled	11
19980	isPlaceHolderAccount(){	12
24541	isPlaceholder	22
64102	isPlaceholder)	3
27436	isPlaceholder){	15
19525	isPlaceholderAccount	23
64103	isPlaceholderAccount()	3
28415	isPlaceholderAccount(){	9
24279	isPlaceholderAccount(@NonNull	4
24537	isPlaceholderAccount(String	20
27760	isPlaceholderAccount(getAccountUID(accountId))	7
59124	isPlaceholderAccount(getUID(accountId))	2
27778	isPlaceholderAccount(long	11
19873	isPlaceholderAccount){	6
45829	isPortrait	4
50525	isQueryRefinementEnabled()	5
42945	isQwerty	12
42554	isQwerty)	16
43908	isQwertyMode()	8
53700	isReconciled(){	2
40018	isReservingOverflow()	4
64348	isReservingOverflow())	1
55227	isRoboUnitTest())	2
55250	isRoboUnitTest(){	8
40439	isRunning()	11
40706	isRunning().	8
6529	isSameAccount(long	11
6914	isSameDay(long	11
64188	isSameDay(mPreviousTimestamp,transactionTime)	3
31852	isSameMonth(long	6
30390	isSameMonth(previousTimestamp,transactionTime)	5
46743	isScrap)	4
45833	isScrollableForAccessibility()	4
47947	isSelected	4
23467	isSessionActive()	5
42717	isShortcutKey(int	16
44003	isShortcutsVisible()	8
38834	isShowing()	20
49533	isShowingPopup()	4
46276	isShown()	4
49400	isShown())	5
45510	isSplitActionBar()	4
56693	isSplitPair	7
40586	isStarted()	10
27762	isStateful()	3
50532	isSubmitAreaEnabled()	5
50324	isSubmitButtonEnabled()	5
3755	isTemplate	4
2353	isTemplate(){	4
2501	isTemplate){	4
45513	isTransitioning	4
45650	isTransitioning)	4
38711	isTvDpi	4
42897	isUiFocusable()	8
46288	isUp)	4
1284	isValidFragment(String	18
39269	isVisible	8
42480	isVisible()	12
38793	isVisible)	16
49022	ise)	4
15614	islandesa</item>	18
43577	isn't	24
60859	iso-4217-currencies.c.	3
61240	iso-codes	3
60722	iso-currencies-to-c	3
61180	isoCode	6
61307	isocode	3
61393	isocode="ADF"	3
61373	isocode="ADP"	3
60865	isocode="AED"	3
61090	isocode="AFA"	3
61206	isocode="AFN"	3
60693	isocode="ALL"	3
61358	isocode="AMD"	3
61324	isocode="ANG"	3
60795	isocode="AOA"	3
60844	isocode="AON"	3
60913	isocode="AOR"	3
60689	isocode="ARA"	3
61132	isocode="ARS"	3
61096	isocode="ATS"	3
60956	isocode="AUD"	3
60819	isocode="AWG"	3
60788	isocode="AZM"	3
60992	isocode="AZN"	3
60850	isocode="BAD"	3
60874	isocode="BAM"	3
61396	isocode="BBD"	3
60952	isocode="BDT"	3
61078	isocode="BEF"	3
60803	isocode="BGL"	3
61012	isocode="BGN"	3
61144	isocode="BHD"	3
60932	isocode="BIF"	3
61227	isocode="BMD"	3
61235	isocode="BND"	3
61381	isocode="BOB"	3
60889	isocode="BOV"	3
61020	isocode="BRE"	3
61031	isocode="BRL"	3
61062	isocode="BRR"	3
60920	isocode="BSD"	3
61350	isocode="BTN"	3
60972	isocode="BWP"	3
60966	isocode="BYB"	3
58118	isocode="BYN"	3
58391	isocode="BYR"	6
60837	isocode="BZD"	3
61275	isocode="CAD"	3
60962	isocode="CDF"	3
61341	isocode="CHE"	3
60802	isocode="CHF"	3
61360	isocode="CHW"	3
61158	isocode="CLF"	3
60883	isocode="CLP"	3
61347	isocode="CNY"	3
61281	isocode="COP"	3
60986	isocode="COU"	3
60715	isocode="CRC"	3
61210	isocode="CUC"	3
60746	isocode="CUP"	3
61056	isocode="CVE"	3
61255	isocode="CYP"	3
61231	isocode="CZK"	3
60970	isocode="DEM"	3
60818	isocode="DJF"	3
61277	isocode="DKK"	3
61116	isocode="DOP"	3
58081	isocode="DZD"	6
60886	isocode="ECS"	3
60930	isocode="EEK"	3
61112	isocode="EGP"	3
61234	isocode="ERN"	3
61215	isocode="ESP"	3
61351	isocode="ETB"	3
60987	isocode="EUR"	3
61179	isocode="FIM"	3
61059	isocode="FJD"	3
61143	isocode="FKP"	3
61028	isocode="FRF"	3
61023	isocode="GBP"	3
61238	isocode="GEL"	3
61293	isocode="GHC"	3
60948	isocode="GHS"	3
60969	isocode="GIP"	3
61424	isocode="GMD"	3
60719	isocode="GNF"	3
61431	isocode="GRD"	3
61060	isocode="GTQ"	3
61129	isocode="GWP"	3
61270	isocode="GYD"	3
61151	isocode="HKD"	3
60810	isocode="HNL"	3
61043	isocode="HRK"	3
61011	isocode="HTG"	3
61407	isocode="HUF"	3
61074	isocode="IDR"	3
61433	isocode="IEP"	3
60909	isocode="ILS"	3
61268	isocode="INR"	3
61435	isocode="IQD"	3
60756	isocode="IRR"	3
61290	isocode="ISK"	3
61249	isocode="ITL"	3
60786	isocode="JMD"	3
61026	isocode="JOD"	3
60822	isocode="JPY"	3
61039	isocode="KES"	3
61395	isocode="KGS"	3
61222	isocode="KHR"	3
61426	isocode="KMF"	3
61168	isocode="KPW"	3
61163	isocode="KRW"	3
61387	isocode="KWD"	3
61287	isocode="KYD"	3
61216	isocode="KZT"	3
61352	isocode="LAK"	3
61354	isocode="LBP"	3
61413	isocode="LKR"	3
61430	isocode="LRD"	3
60712	isocode="LSL"	3
60958	isocode="LTL"	3
60838	isocode="LUF"	3
60870	isocode="LVL"	3
61164	isocode="LYD"	3
61256	isocode="MAD"	3
60768	isocode="MDL"	3
61233	isocode="MGA"	3
60933	isocode="MGF"	3
61228	isocode="MKD"	3
61323	isocode="MLF"	3
61302	isocode="MMK"	3
60876	isocode="MNT"	3
61346	isocode="MOP"	3
61094	isocode="MRO"	3
61343	isocode="MTL"	3
60997	isocode="MUR"	3
60834	isocode="MVR"	3
61333	isocode="MWK"	3
60894	isocode="MXN"	3
60714	isocode="MXV"	3
60853	isocode="MYR"	3
61422	isocode="MZM"	3
60808	isocode="MZN"	3
60873	isocode="NAD"	3
60994	isocode="NGN"	3
61126	isocode="NIC"	3
60957	isocode="NIO"	3
61212	isocode="NLG"	3
61072	isocode="NOK"	3
60716	isocode="NPR"	3
60926	isocode="NZD"	3
60751	isocode="OMR"	3
60996	isocode="PAB"	3
61191	isocode="PEN"	3
60816	isocode="PGK"	3
61133	isocode="PHP"	3
61372	isocode="PKR"	3
61405	isocode="PLN"	3
61436	isocode="PTE"	3
60902	isocode="PYG"	3
60778	isocode="QAR"	3
60759	isocode="ROL"	3
61175	isocode="RON"	3
61135	isocode="RSD"	3
60757	isocode="RUB"	3
61192	isocode="RWF"	3
61038	isocode="SAR"	3
61120	isocode="SBD"	3
60929	isocode="SCR"	3
61403	isocode="SDD"	3
61219	isocode="SDG"	3
61223	isocode="SDP"	3
60707	isocode="SEK"	3
61527	isocode="SGD"	3
61548	isocode="SHP"	3
61678	isocode="SIT"	3
61715	isocode="SKK"	3
61648	isocode="SLL"	3
61589	isocode="SOS"	3
61679	isocode="SRD"	3
61653	isocode="SRG"	3
61684	isocode="STD"	3
61537	isocode="SVC"	3
61519	isocode="SYP"	3
61553	isocode="SZL"	3
61514	isocode="THB"	3
61592	isocode="TJR"	3
61580	isocode="TJS"	3
61569	isocode="TMM"	3
61482	isocode="TMT"	3
61662	isocode="TND"	3
61472	isocode="TOP"	3
61652	isocode="TRY"	3
61651	isocode="TTD"	3
61485	isocode="TWD"	3
61656	isocode="TZS"	3
61640	isocode="UAH"	3
61446	isocode="UGX"	3
61675	isocode="USD"	3
61490	isocode="USN"	3
61630	isocode="USS"	3
61542	isocode="UYI"	3
61705	isocode="UYU"	3
61529	isocode="UZS"	3
61681	isocode="VEB"	3
61551	isocode="VEF"	3
61521	isocode="VND"	3
61463	isocode="VUV"	3
61555	isocode="WST"	3
61504	isocode="XAF"	3
61694	isocode="XAG"	3
61620	isocode="XAU"	3
55272	isocode="XBT"	2
61561	isocode="XCD"	3
61445	isocode="XDR"	3
61632	isocode="XFO"	3
61493	isocode="XFU"	3
61447	isocode="XOF"	3
61646	isocode="XPD"	3
61460	isocode="XPF"	3
61535	isocode="XPT"	3
61664	isocode="XTS"	3
61669	isocode="XXX"	3
61660	isocode="YER"	3
61526	isocode="YUM"	3
61503	isocode="ZAR"	3
61644	isocode="ZMK"	3
61467	isocode="ZMW"	3
61599	isocode="ZWD"	3
61563	isocode="ZWL"	3
15861	israel&#237	8
15392	israel</item>	10
62397	israelita</item>	6
51573	isso	9
45194	issue	13
46558	issue.	4
29371	issues	16
56652	issues:	8
4228	ist	46
29584	ist!</string>	6
17600	istniejce	12
374	it	344
46001	it!	4
8327	it's	74
55834	it),it	2
23399	it,even	14
49645	it,false	5
28700	it,since	12
46553	it,so	4
46619	it,that	4
41743	it,to	4
6693	it.	95
45508	it.)	4
51042	it.</p>	8
26701	it.next()	6
26897	it.remove()	6
34429	it.split("\\s")[0]	9
27728	it</b></p>	6
24285	it</p>	15
2848	it</string>	88
57691	ite)	2
4610	item	134
43366	item's	20
43	item)	270
48529	item,	8
43195	item,MenuView.ItemView	8
43199	item,View	8
48382	item,and	4
49528	item,false	5
43580	item,int	4
49057	item,it	5
46511	item,or	4
44548	item,so	4
44461	item,the	8
48528	item,then	4
59646	item,update	5
47592	item,use	4
43949	item,we	4
37065	item.	42
46016	item.</p>	4
45488	item.collapseActionView()	4
45469	item.expandActionView()	4
43874	item.getActionProvider()	4
43079	item.getActionView()	12
42919	item.getAlphabeticShortcut()	8
42617	item.getGroupId()	8
32478	item.getItemId()	14
42633	item.getNumericShortcut()	8
43248	item.getSubMenu()	8
43423	item.getSubMenu().findItem(id)	4
37904	item.getTitleCondensed())	8
43013	item.hasCollapsibleActionView())	4
42334	item.invoke()	4
42865	item.isActionButton()	4
42591	item.isActionViewExpanded())	4
43690	item.isEnabled())	4
48300	item.setActionProvider(itemActionProvider)	4
48209	item.setActionView(actionView)	4
48534	item.setActionView(itemActionViewLayout)	4
45898	item.setActionViewExpanded(false)	4
46257	item.setActionViewExpanded(true)	4
42728	item.setCheckable(checkable)	8
1739	item.setChecked(!item.isChecked())	16
32310	item.setChecked(!mChart.getLegend().isEnabled())	8
32397	item.setChecked(false)	8
48788	item.setChecked(itemChecked)	4
63928	item.setChecked(mUseCompactView)	7
2127	item.setChecked(true)	7
63942	item.setEnabled(GnuCashApplication.isDoubleEntryEnabled())	3
42470	item.setEnabled(enabled)	8
42678	item.setExclusiveCheckable(exclusive)	8
42742	item.setIsActionButton(isAction)	4
42672	item.setIsActionButton(true)	4
43363	item.setMenuInfo(mCurrentMenuInfo)	4
48303	item.setOnMenuItemClickListener(	5
48282	item.setShowAsAction(itemShowAsAction)	4
30666	item.setShowAsActionFlags(MenuItem.SHOW_AS_ACTION_NEVER)	9
43641	item.setSubMenu(subMenu)	4
42735	item.setVisible(visible)	4
37843	item:	12
48738	itemActionProvider	5
48447	itemActionProviderClassName	6
48647	itemActionViewClassName	6
48646	itemActionViewLayout	6
48455	itemAdded	5
48281	itemAlphabeticShortcut	5
48305	itemCategoryOrder	4
48467	itemCheckable	5
48274	itemChecked	5
43021	itemCount	16
42627	itemCount)	11
42987	itemCount--	4
43166	itemData	12
43016	itemData,int	12
48445	itemEnabled	5
48435	itemIconResId	5
19784	itemId	31
14216	itemId)	80
64347	itemId,	1
42332	itemId,int	13
44171	itemImpl	4
43985	itemImpl.expandActionView()	4
43959	itemImpl.invoke()	4
43627	itemLayoutRes	4
43712	itemLayoutRes)	4
62061	itemLayoutResource)	3
48320	itemListenerMethodName	6
48599	itemNumericShortcut	5
45480	itemPaddingSize	4
45329	itemPaddingSize)	4
19159	itemPosition	29
39123	itemPosition,long	8
48557	itemShowAsAction	5
48604	itemTitle	4
48486	itemTitleCondensed	5
43722	itemToExpand	4
43937	itemToExpand.expandActionView()	4
44825	itemType	8
44391	itemType)	8
9481	itemView	35
2082	itemView)	38
43504	itemView,int	4
60469	itemView.findViewById(R.id.account_balance)	6
60520	itemView.findViewById(R.id.account_color_strip)	6
58922	itemView.findViewById(R.id.btn_new_transaction)	5
60478	itemView.findViewById(R.id.create_transaction)	6
60596	itemView.findViewById(R.id.favorite_status)	6
524	itemView.findViewById(R.id.item_date_range)	6
60405	itemView.findViewById(R.id.options_menu)	6
60489	itemView.findViewById(R.id.primary_text)	6
58836	itemView.findViewById(R.id.secondary_text)	8
43966	itemView.getParent()	4
43464	itemView.hasText()	4
44678	itemView.initialize(getItem(position),0)	4
42516	itemView.initialize(item,0)	4
43983	itemView.jumpDrawablesToCurrentState()	4
44634	itemView.measure(widthMeasureSpec,heightMeasureSpec)	12
44674	itemView.prefersCondensedTitle())	4
58919	itemView.setBackgroundColor(getResources().getColor(R.color.abs__holo_blue_light))	5
58820	itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent))	5
47978	itemView.setLayoutParams(new	4
44186	itemView.setPressed(false)	4
54034	itemView.setTag(this)	5
49003	itemViewType	4
48418	itemVisible	5
61	items	138
38654	items".	4
44480	items'	5
40950	items)	4
50149	items,false	5
44043	items,int	4
37933	items,navigation	4
50391	items,to	5
46326	items,which	4
37798	items,with	4
37551	items.	43
43353	items.add(item)	4
44017	items.clear()	4
43508	items.get(0)	4
42658	items.get(i)	12
44455	items.get(position)	4
40564	items.length	4
43085	items.remove(i)	4
40972	items.size()	16
47612	items/groups	4
42422	itemsSize	9
4609	iter	15
6256	iter.hasNext()	15
6386	iter.next()	15
5972	iter.remove()	5
41991	iteration	25
42134	iteration.	4
1214	iteratorDate	7
1668	iteratorDate.plusMonths(1)	6
1975	iteratorDate.plusMonths(3)	6
1799	iteratorDate.plusWeeks(1)	7
1865	iteratorDate.plusYears(1)	6
3197	its	174
1468	itself	77
44894	itself.	16
36765	itself.-->	4
20401	itself...	7
17825	j	41
33164	j++	5
34337	j++)	6
22739	jadwal	7
62746	jadwal</string>	3
17565	jak	13
17737	jako	14
55838	jako&#8230	2
62471	jamaicano</item>	6
15377	jamaiquino</item>	14
15700	japon&#233	10
15737	japons</item>	9
17050	jaren</item>	8
3207	java.io.*	35
8223	java.io.BufferedInputStream	17
7685	java.io.BufferedOutputStream	17
19230	java.io.BufferedReader	29
6707	java.io.BufferedWriter	31
19263	java.io.ByteArrayInputStream	6
6538	java.io.File	127
21603	java.io.FileFilter	17
6614	java.io.FileInputStream	44
3872	java.io.FileNotFoundException	85
7319	java.io.FileOutputStream	49
51635	java.io.FileReader	10
14327	java.io.FileWriter	28
30081	java.io.IOError	9
7254	java.io.IOException	127
3359	java.io.InputStream	94
18679	java.io.InputStreamReader	5
51704	java.io.OutputStream	9
6864	java.io.OutputStreamWriter	36
21443	java.io.PushbackInputStream	13
10105	java.io.StringReader	7
6609	java.io.StringWriter	34
6955	java.io.Writer	54
648	java.lang.IllegalArgumentException	28
38579	java.lang.annotation.ElementType	4
38250	java.lang.annotation.Retention	4
38660	java.lang.annotation.RetentionPolicy	4
38252	java.lang.annotation.Target	4
35996	java.lang.ref.WeakReference	30
38256	java.lang.reflect.Constructor	8
34336	java.lang.reflect.Field	5
28823	java.lang.reflect.InvocationTargetException	20
29090	java.lang.reflect.Method	30
3106	java.math.BigDecimal	206
12517	java.math.BigInteger	27
2284	java.math.MathContext	54
2444	java.math.RoundingMode	52
6699	java.nio.channels.FileChannel	42
52784	java.security.InvalidParameterException	11
2866	java.sql.Timestamp	119
610	java.text.DateFormat	87
51383	java.text.DateFormat.getDateTimeInstance().format(new	6
2360	java.text.DecimalFormat	55
52751	java.text.DecimalFormatSymbols	17
3896	java.text.NumberFormat	74
3098	java.text.ParseException	110
31694	java.text.ParsePosition	5
6966	java.text.SimpleDateFormat	120
3735	java.util.*	46
1818	java.util.ArrayList	252
32	java.util.Arrays	101
1151	java.util.Calendar	61
6282	java.util.Collection	15
4608	java.util.Collections	66
27635	java.util.Comparator	5
2057	java.util.Currency	224
1331	java.util.Date	156
3303	java.util.GregorianCalendar	42
5103	java.util.HashMap	114
39532	java.util.HashSet	13
57461	java.util.IllegalFormatCodePointException	6
23305	java.util.IllegalFormatException	4
4987	java.util.Iterator	26
29975	java.util.LinkedHashMap	15
18260	java.util.LinkedHashSet	20
25796	java.util.LinkedList	10
137	java.util.List	287
3964	java.util.Locale	206
5896	java.util.Map	75
1253	java.util.MissingFormatArgumentException	11
23751	java.util.Objects	4
18248	java.util.Set	23
25214	java.util.Stack	14
3922	java.util.Stack<Account>	13
14062	java.util.TimeZone	14
3292	java.util.Timer	16
3352	java.util.TimerTask	13
5727	java.util.TreeMap	13
62025	java.util.TreeSet	3
3339	java.util.UUID	90
43146	java.util.WeakHashMap	18
43358	java.util.concurrent.CopyOnWriteArrayList	4
20787	java.util.concurrent.ExecutionException	15
48589	java.util.concurrent.Executor	10
48440	java.util.concurrent.Executors	10
28173	java.util.concurrent.TimeUnit	6
41386	java.util.concurrent.locks.ReentrantReadWriteLock	4
32882	java.util.prefs.PreferenceChangeEvent	7
10081	java.util.prefs.Preferences	3
12655	java.util.regex.Matcher	6
1199	java.util.regex.Pattern	33
21282	java.util.zip.GZIPInputStream	13
21401	java.util.zip.GZIPOutputStream	11
55845	java.util.zip.ZipEntry	2
55752	java.util.zip.ZipOutputStream	2
6927	javax.xml.parsers.DocumentBuilder	35
6495	javax.xml.parsers.DocumentBuilderFactory	26
7255	javax.xml.parsers.ParserConfigurationException	81
8566	javax.xml.parsers.SAXParser	40
3521	javax.xml.parsers.SAXParserFactory	36
7062	javax.xml.transform.*	10
6906	javax.xml.transform.OutputKeys	20
6695	javax.xml.transform.Transformer	20
6719	javax.xml.transform.TransformerConfigurationException	13
7343	javax.xml.transform.TransformerException	13
6583	javax.xml.transform.TransformerFactory	22
7225	javax.xml.transform.dom.DOMSource	26
6503	javax.xml.transform.stream.StreamResult	28
9358	jcenter()	37
16931	je	33
22013	jede	8
17418	jednego	13
22430	jednoho	8
22033	jeho	7
64018	jelsz,krjk	4
64054	jelsz-megersts.	2
64031	jelszavt</string>	2
27951	jer&#225	9
3324	jerarqu&#237	28
15606	jerarqua	13
17696	jest	24
17334	jeste	13
22034	jin</string>	8
55696	jinho	5
22332	jinou	5
55590	jmno/heslo	2
55767	jmno</string>	2
19074	job	11
7766	jodaPeriod	10
55596	jodaWeekDay	4
15445	jodano</item>	14
53026	join	10
52333	join.	10
56470	joint,empty	7
62414	jordaniano</item>	6
11366	jour	3
17022	journaalposten</string>	24
10618	jours</item>	12
64019	jra</string>	4
22313	jsou	7
10829	juga	8
11415	juga.	3
10404	jumlah	14
47497	jumpDrawablesToCurrentState()	4
13250	junit.framework.Assert.assertEquals	4
13439	junit.framework.Assert.assertTrue	4
30786	junit.framework.TestCase	11
43877	junk,useful	4
412	just	193
32547	just-imported	3
22335	k	15
4728	k&#246	34
30088	k++)	5
26314	kaart	14
51715	kaart</item>	7
17292	kadej	15
29639	kaikki	5
14955	kakediagrammet</string>	11
51864	kalkulering	7
15255	kalkulert	11
8505	kan	68
5836	kann	16
22296	kann!</string>	21
17858	kapita	10
55874	kapital</string>	2
22156	kapitl</string>	5
22893	karcie	6
29702	karta	4
22408	karta</item>	5
29531	kartu</string>	6
15337	kazajo</item>	14
29578	kd	6
11384	ke	22
10951	ke&#8230	5
22702	ke:	7
11946	ke:</string>	7
11768	ke:\n</string>	8
32192	keep	34
5305	keeping	5
33010	keeps	3
22460	keine	23
15672	keniano</item>	14
48652	kept	4
11791	ketiga	5
10389	ketika	14
898	key	193
50344	key"	5
43909	key)	7
49965	key).	5
62042	key){	3
43910	key,	4
32041	key,String	8
43945	key,and	9
50068	key,at	5
43775	key,but	4
48726	key,respectively.	4
50665	key,since	5
49753	key,we	5
32244	key-value	8
14504	key.	29
51477	key.equals(getString(R.string.key_restore_backup))){	4
52883	key.label	13
9609	keyAccessToken	2
25442	keyAlias	2
38511	keyApi	4
5471	keyChartCurrency	5
39076	keyCode	21
13994	keyCode,	2
454	keyCode,KeyEvent	30
44167	keyCode.	4
26617	keyCodes)	36
63982	keyCompactView	2
9649	keyDefaultEmail	10
9879	keyDefaultExportFormat	5
63994	keyDoubleEntry	2
38629	keyDpi	4
34194	keyEnablePasscode	5
23319	keyLastExportTime	5
25394	keyPassword	2
63999	keySaveBalance	2
23133	keySaveOpeningBalance	5
23240	keyUseCompactView	2
23074	keyUseDoubleEntry	5
8789	keyboard	87
52398	keyboard)	11
34671	keyboard){	12
47071	keyboard*	4
48906	keyboard,as	5
52944	keyboard,call	15
45809	keyboard,etc.	4
31756	keyboard,that	14
35085	keyboard.	37
52909	keyboard.getKeys())	13
56665	keyboardLayoutResId	4
56724	keyboardLayoutResId)	4
56664	keyboardView	4
35063	keyboardView){	7
52919	keyboardView,	4
56732	keyboardView,@XmlRes	4
52948	keyboardView,this	15
56604	keyboardViewId	9
56673	keyboardViewId,	4
56531	keyboardViewId,@LayoutRes	9
48293	keycode	9
41501	keyframe	10
41273	keyframe,and	5
41402	keyframe,as	4
41558	keyframe.	5
41576	keyframeSet	8
41366	keyframeSet)	8
40617	keyframes	8
40634	keyframes)	8
41340	keyframes.	5
41619	keyframes.get(0).getValue()	4
40781	keyframes.get(i).clone()	8
41319	keyframes.get(pvh.mKeyframeSet.mNumKeyframes	4
41358	keyframes.length	5
41238	keyframes[0]	5
41422	keyframes[1]	5
41722	keyframes[]	5
41596	keyframes[i]	4
39159	keymap	4
34523	keyobard	9
48553	keypress	4
13756	keys	45
37388	keys.	17
38283	keys.hasNext()	4
38168	keys.next().api()	4
38141	keys.next().dpi()	4
38678	keys.remove()	4
42031	kf	5
41985	kf)	4
41921	kf.setValue(mGetter.invoke(target))	5
42037	kf.setValue(mProperty.get(target))	5
41487	kfClone	4
41571	kfClone.setInterpolator(getInterpolator())	4
40891	kicks	4
16593	kiezen</string>	31
17744	kilka	8
30150	kill	6
45519	killMode()	4
18939	kind	37
7349	kinds	32
21354	kjrt	10
56440	klar</string>	2
50850	klass)	9
17023	kleinere	7
16976	kleur	15
17147	kleur</string>	12
39293	kmap	4
6050	knnen	24
5845	knnen.	19
15167	knnen.</string>	10
6210	knnen</string>	36
15186	knnten	7
7176	know	56
48558	knowing	4
1187	known	32
52645	known.	5
41249	knows	12
10201	kode	13
21948	kolon</item>	10
17551	kolor</string>	14
17466	koloru	20
29728	kommer	7
56107	kompakt	2
56094	kompatibla	2
10822	kompatible	47
22927	kompatybilnych	8
17867	koncie	14
56249	konfigurera	2
11050	konfirmasi	3
12479	konfirmasi.	5
17492	konkretn	15
21882	konomistyrer	8
17362	konra	11
12332	kont	24
17341	kont</string>	21
12220	konta	31
12756	konta</string>	36
14667	konti	15
51983	konti</string>	4
34783	konti\n	7
8062	konto	96
51867	konto-spesifikke	7
56395	konto</item>	2
7586	konto</string>	89
28160	konto\n	4
23159	kontodetaljer</string>	7
7472	kontoen	34
21676	kontoene	10
15003	kontoene,eller	19
21326	kontoene</string>	10
7460	kontoer	75
21593	kontoer,eller	14
21765	kontoer.	6
7775	kontoer</string>	38
8225	kontoer?	13
28247	kontoer\n	11
14863	kontofarge	11
21590	kontofargen	10
22899	kontoinformasjon</string>	8
12602	konton	15
55884	konton</item>	2
56442	konton</string>	3
56238	konton\n\nDina	2
56310	kontonamn	2
21348	kontonavn	10
30189	kontonavn</string>	7
56167	kontoppningssaldo</string>	2
56198	kontosaldo	3
7551	kontostruktur	22
14972	kontostruktur.	32
28175	kontostruktur.\n\nHvis	6
14892	kontostruktur</string>	30
21237	kontostrukturen	10
29712	kontot	5
14825	kontotransaksjon</string>	17
7405	kontotyper\n	6
17442	kontynuowa	8
17598	kontynuowa?</string>	12
56209	konverterade	2
21935	konvertert	6
21293	konverterte	8
21374	konvertibel	10
17328	koowy</string>	9
17481	koowym/supkowym</string>	20
17570	kopi	23
17634	kopie	15
17635	kopii	21
10469	korrekturles	19
56314	korrekturlsa	2
25735	korrigiere	14
15027	kortet	14
56462	kraschloggning</string>	2
55996	kraschrapporter</string>	2
21573	kreves</string>	8
14680	kroner</item>	26
16876	kroon</item>	7
59238	krzlich	4
17871	ktry	13
7488	kun	29
17133	kuna</item>	6
10292	kunci	5
16555	kunnen	25
17386	kurs	10
15473	kuwait&#237	8
15890	kuwait</item>	10
61297	kwanza"	3
17556	kwot	18
17443	kwoty</string>	13
26975	l	27
3210	l&#237	13
5206	l&#246	22
57824	l'Afrique	6
57979	l'Ouest	6
1809	l)	37
1808	l,	39
18014	l,View	38
44930	l,int	11
26642	l.setForm(Legend.LegendForm.CIRCLE)	7
62657	l.setForm(Legend.LegendForm.SQUARE)	3
26690	l.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE)	7
11349	l\'application	11
23608	l\'application\n	5
14751	l\'assentament</string>	14
11617	l\'autre</string>	24
11765	l\'cran	9
22636	l\'eliminazione	6
11590	l\'enregistrement	17
16087	l\'ent&#234	18
10607	l\'entte	6
16111	l\'esportazione	31
16356	l\'esportazione</string>	25
51467	l\'esportazione\n	7
22241	l\'estructura	10
23903	l\'existante	11
11969	l\'export	40
10583	l\'export</string>	36
22085	l\'exportaci	7
22254	l\'exportaci</string>	7
10353	l\'exportation</string>	27
11131	l\'import	23
29205	l\'importo	2
16301	l\'indirizzo	20
22291	l\'ltima	7
22638	l\'opzione	6
10833	l\'organisation	21
60083	l\'ownCloud</string>	3
2128	l\'utilisateur	79
29751	l\export	7
3662	la	170
26427	laat	13
16618	laatste	28
6907	label	74
47919	label.	8
22695	label</string>	7
3329	labelLastSync	17
63715	labelLastSync.setText("Last	4
2972	labelLastSync.setText(R.string.label_last_export_time)	15
8045	labels	69
32089	labels)	8
49558	labels,hints,suggestions,create	5
815	labels.add(account.getName())	30
32092	labels.add(accountName)	8
34305	labels.get(j	2
34250	labels.set(j	2
34329	labels.set(j,tmp2)	2
32103	labels.size())	13
29946	labels.subList(labels.size()	12
2876	labels</string>	126
28605	lack	6
17060	lade	7
41934	lag	4
21808	laget	8
12954	lagi	5
10751	lagi</string>	3
8563	lagre	58
21897	lagres	10
15281	lagret	11
21743	lagring	10
21632	lagring!</string>	10
46041	laid	4
11796	lainnya</string>	7
11049	laisser	10
62768	lakukan	3
22562	lama	7
49798	landscape	5
37055	landscape).	5
56646	landscape,the	8
17083	lang</string>	13
753	language	354
50562	languageModel	5
49940	languages,e.g.	5
22743	laporan</string>	7
11807	lapp	7
11899	lapplication	5
15425	lar	18
3457	larga</string>	11
37038	large	8
43905	larger	16
46547	larger.	4
47277	largest	5
47295	largestChildHeight	5
47486	largestChildWidth	5
2299	las	131
1420	last	296
45949	last++	4
9220	lastActionTime	10
26580	lastCurrency	18
7820	lastExportTime	22
7875	lastExportTime)	11
59863	lastExportTime,	3
31144	lastExportTime,String	2
21536	lastExportTimeStamp	20
63104	lastExportTimeStamp){	3
21319	lastExportedTimestamp	9
28481	lastMod	5
28456	lastMod)	5
29958	lastRun	22
4079	lastRunTime	10
25537	lastRuntime	4
49124	lastShareIndex	4
63955	lastSync	2
63978	lastSync)	2
63705	lastSyncMillis	3
29133	lastSyncText	10
50877	lastSyncText.setText(PreferencesHelper.getLastExportTime().toString())	6
28597	lastSyncText.setText(PreferencesHelper.getLastExportTime(bookUID).toString())	6
29102	lastSyncText.setText(R.string.last_export_time_never)	4
63729	lastSyncText.setText(lastSyncTime)	3
28698	lastSyncText.setText(lastSyncTime.toString())	4
29024	lastSyncTime	7
13377	lastTabIndex	18
31151	lastTrxUID	16
40892	lastValue	4
52668	last_export_time	2
17640	lat</item>	14
17639	lata</item>	14
16855	later	73
39015	later)	4
4325	later.	120
54701	later.</p>	5
22660	laterale	6
3899	latest	77
34412	latest.dayOfYear().withMaximumValue().millisOfDay().withMaximumValue()).getYears()	7
3823	latest.toString("dd	29
34352	latest.withDayOfMonth(1).withMillisOfDay(0)).getMonths()	14
57591	latest.withDayOfMonth(1).withMillisOfDay(0)).getYears()	6
1923	latestTransactionTime	12
12156	latinos.</string>	5
48489	latter	13
6760	launch	28
50479	launch,false	5
49379	launchIntent	8
49906	launchIntent(Intent	5
50431	launchIntent(intent)	5
50421	launchQuerySearch(KeyEvent.KEYCODE_UNKNOWN,null,mQueryTextView.getText()	5
50392	launchQuerySearch(KeyEvent.KEYCODE_UNKNOWN,null,query.toString())	5
50035	launchQuerySearch(int	5
49925	launchQuerySearch(keyCode,actionKey.getQueryActionMsg(),mQueryTextView	5
49835	launchQuerySearch(keyCode,actionKey.getQueryActionMsg(),mQueryTextView.getText()	5
49815	launchSuggestion(int	5
50430	launchSuggestion(position,KeyEvent.KEYCODE_UNKNOWN,null)	5
23403	launched	14
7060	launches	25
8997	launching	29
121	law	349
11428	layar	5
47253	layer	4
27676	layers,int	3
16874	layout	117
39784	layout")	4
47958	layout(0,false)	4
46442	layout(delta,animate)	4
45897	layout(int	8
27163	layout,	14
3227	layout,Cursor	47
62021	layout,but	3
37531	layout,since	5
61991	layout,subsequent	3
46684	layout,therefore	4
23147	layout.	37
43792	layout.)	4
52745	layout.getLineMax(0))	8
52805	layout.getOffsetForHorizontal(0,x)	8
30196	layout="@layout/account_balance_toolbar"	6
63497	layout="@layout/actionbar_progress_indicator"	5
31891	layout="@layout/default_buttons"	33
10009	layout="@layout/default_buttons"/>	17
35385	layout="@layout/horizontal_line"	9
57533	layout="@layout/item_budget_amount"	3
23325	layout="@layout/list_item_2_lines"	32
33710	layout="@layout/radio_group_delete_or_move"	3
23300	layout="@layout/reports_toolbar"	6
23166	layout="@layout/toolbar"	8
23309	layout="@layout/toolbar_transactions_activity"	12
23131	layout="@layout/toolbar_with_spinner"	3
7813	layout="@layout/transactions_sum_bar"	11
30319	layoutDependsOn(CoordinatorLayout	3
27638	layoutInflater	19
27622	layoutInflater.inflate(R.layout.dialog_account_delete,(ViewGroup)	9
53901	layoutInflater.inflate(R.layout.item_budget_amount,	5
31772	layoutInflater.inflate(R.layout.item_split_entry,mSplitsLinearLayout,false)	5
2039	layoutManager	5
38328	layoutParams	11
37835	layoutParams)	8
40160	layoutParams.bottomMargin	4
39697	layoutParams.gravity	4
45517	layoutParams.height	4
39427	layoutParams.leftMargin	4
39830	layoutParams.rightMargin	4
62300	layoutParams.setMargins(layoutParams.leftMargin,20,layoutParams.rightMargin,layoutParams.bottomMargin)	3
39587	layoutParams.topMargin	4
45196	layoutParams.width	4
63932	layoutRes	6
57017	layoutResID)	6
38152	layoutResId	7
37801	layoutResId)	12
39374	layoutResId:	5
39796	layoutResource	4
52842	layoutid	10
52901	layoutid)	10
32051	layouts	11
46611	lazily	12
25934	lculo	7
3660	le	147
11042	le</string>	3
55771	lead	8
20069	leaked	7
59931	leap	3
5438	least	77
12146	leave	20
54334	leaves	2
10470	lebih	5
16060	lectionn(s)</string>	15
16018	lectionner	13
23396	lectionner</string>	7
24013	lectionnez	6
25905	lectura	7
12544	ledgerBalance	11
12147	ledgerBalance.appendChild(balanceAmount)	11
12459	ledgerBalance.appendChild(dtasof)	11
52038	ledzeniu	9
10204	left	43
54073	left")	2
44033	left)	8
46762	left,bottom	8
37854	left,followed	4
44163	left,int	13
27606	left->right/top->bottom	3
50984	left-hand	5
48088	left.	4
50555	left/right	5
45586	leftOfCenter	4
45325	leftOffset	4
45527	leftOffset,y,contentHeight)	4
44065	leftover	5
33743	legacy	13
1160	legend	131
32436	legend.	8
30120	legend.setColors(Arrays.asList(colors.toArray(new	11
18513	legend.setColors(Arrays.asList(mLegendColors.toArray(new	5
32027	legend.setCustom(new	13
18045	legend.setEnabled(!mChart.getLegend().isEnabled())	22
32225	legend.setEnabled(false)	8
60114	legend.setEnabled(true)	3
18331	legend.setForm(Legend.LegendForm.CIRCLE)	19
60126	legend.setForm(LegendForm.CIRCLE)	3
30135	legend.setLabels(labels.toArray(new	9
18287	legend.setLabels(mLegendLabels.toArray(new	5
26558	legend.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER)	9
18168	legend.setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE)	16
60208	legend.setPosition(LegendPosition.RIGHT_OF_CHART_CENTER)	3
32356	legend.setTextSize(16)	8
60183	legend.setTextSize(LEGEND_TEXT_SIZE)	3
60120	legend.setWordWrapEnabled(true)	3
3617	legend</string>	133
33427	legenda	10
20635	legenda</string>	31
5481	legendas</string>	6
29464	leggenda	7
8553	legger	45
29561	leistungsfhiger	6
50652	len	5
12424	length	42
3420	length)	19
26043	length++	3
25766	length--	3
47269	lengthy	4
3580	les	115
40962	less	16
43422	less.	4
7085	let	44
15361	let&#243	8
47538	let's	9
15418	letn</item>	10
40125	lets	8
42028	letter	4
4033	letztem	30
59217	letzten	4
15356	leu	14
576	level	115
40057	level.	4
7513	lex	20
3486	leyenda	11
2471	leyenda</string>	19
17218	lezen	18
15327	lgaro</item>	8
16393	lgende	7
10560	lgende</string>	7
56367	lgger	2
27789	lhs,Integer	3
21803	liabilitiesBalance	10
15358	libanesa</item>	18
10351	libells</string>	7
15504	liberiano</item>	14
15494	libio</item>	14
10048	library	16
32476	library.	3
25970	libri	5
64051	libri&#8230	2
64033	libri</string>	2
55689	libri\n	2
22251	libro	20
11394	libro!</string>	8
11732	libro</string>	15
10277	libros&#8230	8
12064	libros</string>	8
25477	libros\n	10
36327	license</string>	6
59545	lida!</string>	6
20062	lida.	11
2740	lida</string>	7
3953	lidas	7
59506	lidos	6
40013	life	10
38024	lifecycle	13
39049	lifecycle/callback	4
20589	ligada</string>	19
34959	ligao	3
27236	light	7
11084	lignes	7
16720	lijnen	7
6283	like	169
26914	like/need	5
41231	likely,the	4
7118	likewise	5
2162	limit	64
50199	limit)	5
18919	limit)\n	7
50284	limit,don't	5
42924	limit.	8
42834	limit?	4
54068	limitLine	2
53787	limitLine.setLineColor(Color.RED)	2
53732	limitLine.setLineWidth(2f)	2
26093	limitado	7
60516	limitation	3
2122	limitations	383
32477	limited	17
37526	limited.	4
12072	linaire</string>	16
1599	line	65
9466	line,the	9
57234	line.enableDashedLine(10,5,0)	2
57258	line.setLineColor(set.getColor())	2
56943	line.substring(1)	7
1250	line/bar	9
34466	lineData	11
30255	linear	36
40463	linearly	8
2354	lineas	13
22576	linee	6
22535	linee</string>	6
49904	lines	5
4004	lines</string>	123
43472	linger	4
4650	linhas	24
4836	linhas</string>	9
22888	linie	15
17424	liniowy</string>	13
55949	linjer</string>	2
9726	link	28
27623	linked	27
30789	lintOptions	11
22673	liquidi</string>	6
16949	lire</item>	6
1124	list	296
47099	list's	4
30049	list)	10
41089	list).	8
40814	list,because	4
40444	list,cloning	4
19079	list,close	14
32542	list,do	28
46566	list,even	4
49070	list,the	4
19742	list,typically	3
1849	list.	93
29943	list.get(i)	6
47046	list.hideSelector()	4
46822	list.mListSelectionHidden	4
47341	list.requestLayout()	4
30046	list.size()	6
58811	list:	4
10344	list</string>	55
64104	list</string>-	1
47027	listContent	4
46347	listItem	4
46487	listItem.getParent()).equals(this))	4
45103	listNavWidth	4
45204	listNavWidth)	4
18411	listView	28
59677	listView,	3
33223	listView,View	6
33182	listView.getFirstVisiblePosition())	5
19347	listView.isItemChecked(position)){	21
19125	listView.setItemChecked(position,false)	16
33100	listView.setItemChecked(position,true)	9
11336	list\n	23
11821	lista	38
10391	liste	10
8838	listed	15
1942	listener	136
48462	listener's	4
27308	listener)	53
63561	listener){	4
51226	listener,	5
44507	listener,HashMap<android.view.MenuItem,MenuItemImpl>	4
49470	listener,false	5
55096	listener,long	3
35038	listener,we	20
27311	listener.	24
40954	listener.onAnimationCancel(this)	8
40864	listener.onAnimationEnd(this)	4
24910	listener.onCheckedChanged(compoundButton,isChecked)	3
27179	listener.onColorSelected(color)	3
38504	listener.onCreateOptionsMenu(menu)	4
37913	listener.onCreatePanelMenu(Window.FEATURE_OPTIONS_PANEL,menu)	4
55509	listener.onItemSelected(this,getSelectedView(),position,getSelectedItemId())	2
38651	listener.onMenuItemSelected(Window.FEATURE_OPTIONS_PANEL,item)	4
39503	listener.onMenuVisibilityChanged(isVisible)	4
38186	listener.onOptionsItemSelected(item)	4
26103	listener.onPasscodeEntered(pass1.getText().toString()	3
38750	listener.onPrepareOptionsMenu(menu)	4
38725	listener.onPreparePanel(Window.FEATURE_OPTIONS_PANEL,null,menu)	4
43230	listener.onViewAttachedToWindow(this)	4
42699	listener.onViewDetachedFromWindow(this)	5
13482	listeners	97
39494	listeners,followed	4
40233	listeners.	6
41137	listenersToRemove	4
40375	listenersToRemove)	4
40714	listenersToRemove.add(listener)	4
987	listening	20
18214	lists	9
40490	lists,when	4
34384	listview	28
1038	literal	11
7896	little	15
15746	lituana</item>	18
49810	live	5
10494	livre	8
11735	livre</string>	3
11057	livres	17
10521	livres&#8230	3
11865	livres</string>	3
10293	livro	23
10178	livro</string>	14
63062	livros&#8230	3
11626	livros</string>	9
55731	livros\n	7
59997	llarga</string>	3
60059	llegenda	3
22014	llegenda</string>	7
59966	llibre!</string>	3
59985	llibre</string>	3
60078	llibres&#8230	3
60005	llibres</string>	3
15720	lnea</string>	12
55976	lng</string>	2
15701	lo	15
19939	load	104
27644	load.	11
9181	load/save	3
24168	loadAccountTypesList()	20
246	loadAccountTypesList(){	14
1178	loadAccountViews(List<AccountType>	12
21834	loadAccountViews(accountTypes,	6
21760	loadAccountViews(accountTypes,mAssetsTableLayout)	11
60154	loadAccountViews(accountTypes,mEquityTableLayout)	6
21207	loadAccountViews(accountTypes,mLiabilitiesTableLayout)	9
60102	loadAccountViews(mAssetAccountTypes,mAssetsTableLayout)	3
60134	loadAccountViews(mEquityAccountTypes,mEquityTableLayout)	3
60187	loadAccountViews(mLiabilityAccountTypes,mLiabilitiesTableLayout)	3
49144	loadActivitiesLocked()	5
19824	loadBook(@NonNull	10
19475	loadBook(String	12
53964	loadBudgetAmountViews(List<BudgetAmount>	5
57474	loadBudgetAmountViews(budgetAmounts)	3
53752	loadBudgetAmountViews(mBudget.getCompactedBudgetAmounts())	5
26591	loadDefaultAccounts()	14
26450	loadDefaultAccounts(){	9
24198	loadDefaultTransferAccountList()	5
24363	loadDefaultTransferAccountList(){	20
26685	loadDefaultTransferAccoutList()	5
26628	loadDefaultTransferAccoutList(){	7
32355	loadFragment(BaseReportFragment	7
8399	loadFragment(Fragment	17
32101	loadFragment(fragment)	9
60108	loadFragment(mReportType.getFragment(reportName))	3
32057	loadFragment(mReportsOverviewFragment)	3
24706	loadFragment(new	17
51455	loadHeadersFromResource(R.xml.preference_headers,target)	8
19336	loadInBackground()	74
45083	loadLogoFromManifest((Activity)	4
45758	loadLogoFromManifest(Activity	4
9091	loadOldPreferences(Context	3
8906	loadOldPreferences(context,appWidgetId)	3
8690	loadParentAccountList()	18
7996	loadParentAccountList(){	20
27020	loadParentAccountList(Account.AccountType	4
13227	loadParentAccountList(AccountType	35
26877	loadParentAccountList(account.getAccountType())	6
26874	loadParentAccountList(getSelectedAccountType())	6
26953	loadParentAccountList(parentAccountType)	6
31609	loadSplitViews(List<Split>	21
24793	loadSplitViews(splitList)	16
39826	loadUiOptionsFromManifest(Activity	4
39622	loadUiOptionsFromManifest(mActivity)	4
351	loaded	82
821	loaded,it	18
24084	loaded,just	12
19862	loaded.	28
18338	loader	38
18403	loader")	40
7947	loader)	28
18385	loader,Cursor	18
64328	loaderCursor,	1
29422	loaderCursor,Cursor	15
13797	loading	73
35303	loads	15
58002	loans	6
3793	local	48
60720	local-symbol	3
55384	local-symbol=""	11
57766	local-symbol="$"	9
57969	local-symbol="$MN"	6
57856	local-symbol="$U"	6
58434	local-symbol="$n"	6
57935	local-symbol="$s"	6
58012	local-symbol="."	9
57754	local-symbol=".."	6
57789	local-symbol="/"	6
58430	local-symbol="Afl."	6
58240	local-symbol="B$"	6
57921	local-symbol="BD"	6
58137	local-symbol="BD$"	6
58328	local-symbol="BZ$"	6
58089	local-symbol="Bds$"	6
58093	local-symbol="Br"	7
57970	local-symbol="Bs."	9
58413	local-symbol="C$"	8
58038	local-symbol="CI$"	6
57885	local-symbol="CN"	6
58183	local-symbol="CUC$"	6
58446	local-symbol="D"	6
58233	local-symbol="DA"	6
58402	local-symbol="DM"	6
58302	local-symbol="Db"	6
58389	local-symbol="Dhs"	6
58406	local-symbol="E"	6
58326	local-symbol="EC$"	6
57790	local-symbol="Esc"	6
58179	local-symbol="FBu"	6
58121	local-symbol="FC"	7
57762	local-symbol="FG"	6
58394	local-symbol="FJ$"	6
58496	local-symbol="FK"	6
58132	local-symbol="Fdj"	6
58246	local-symbol="Flux"	6
58208	local-symbol="Ft"	6
57893	local-symbol="G"	6
58283	local-symbol="G$"	6
58422	local-symbol="GH"	6
58094	local-symbol="HK$"	6
58415	local-symbol="J$"	6
57971	local-symbol="JD"	6
58025	local-symbol="JP"	6
58101	local-symbol="K"	8
57775	local-symbol="KM"	6
58339	local-symbol="Ksh"	6
58329	local-symbol="Kz"	6
58259	local-symbol="L"	8
58490	local-symbol="L$"	6
58189	local-symbol="Le"	6
58427	local-symbol="Lm"	6
58088	local-symbol="Ls"	6
58063	local-symbol="Lt"	6
58047	local-symbol="M"	6
57976	local-symbol="MK"	6
57901	local-symbol="MOP$"	6
58125	local-symbol="MTn"	6
58255	local-symbol="Mex$"	6
58048	local-symbol="N$"	6
58376	local-symbol="NA"	6
58253	local-symbol="NT$"	6
58445	local-symbol="NZ$"	6
58425	local-symbol="Nfa"	6
58407	local-symbol="Nu."	6
58180	local-symbol="P"	6
57958	local-symbol="Q"	6
57843	local-symbol="R"	7
58111	local-symbol="R$"	6
58428	local-symbol="RD$"	6
58241	local-symbol="RF"	6
58487	local-symbol="RM"	6
57982	local-symbol="Rl"	6
57895	local-symbol="Rp"	6
58119	local-symbol="Rs"	6
58396	local-symbol="S"	6
57897	local-symbol="S$"	6
58016	local-symbol="S/."	7
58418	local-symbol="SFr."	6
58155	local-symbol="SI$"	6
58281	local-symbol="SR"	6
58498	local-symbol="SoSh"	6
58210	local-symbol="T$"	6
58174	local-symbol="TT$"	6
58258	local-symbol="UI"	6
58397	local-symbol="UM"	6
57881	local-symbol="USh"	6
58151	local-symbol="Vt"	6
57863	local-symbol="WS$"	6
55410	local-symbol="XBT"	2
58331	local-symbol="Z.$"	6
58244	local-symbol="ZK"	6
58325	local-symbol="fr."	6
57818	local-symbol="kn"	6
57894	local-symbol="kr"	8
58062	local-symbol="m"	9
57906	local-symbol="mk"	6
57765	local-symbol="som"	6
58439	local-symbol="z"	6
7912	localDate	25
53662	localDate.dayOfMonth().getLocalDateTime().plusMonths(numberOfOccurences)	5
57420	localDate.dayOfMonth().getLocalDateTime().plusMonths(occurrenceDuration)	6
53651	localDate.dayOfMonth().withMaximumValue().plusMonths(interval)	2
53350	localDate.dayOfMonth().withMinimumValue().minusMonths(interval)	2
53514	localDate.dayOfWeek().getLocalDateTime().plusDays(numberOfOccurences)	5
57434	localDate.dayOfWeek().getLocalDateTime().plusDays(occurrenceDuration)	6
53404	localDate.dayOfWeek().getLocalDateTime().plusWeeks(numberOfOccurences)	5
57433	localDate.dayOfWeek().getLocalDateTime().plusWeeks(occurrenceDuration)	6
53399	localDate.dayOfWeek().withMaximumValue().plusWeeks(interval)	2
53706	localDate.dayOfWeek().withMinimumValue().minusDays(interval)	2
53489	localDate.dayOfYear().withMaximumValue().plusYears(interval)	2
53503	localDate.dayOfYear().withMinimumValue().minusYears(interval)	2
8347	localDate.millisOfDay().withMaximumValue().plusDays(interval)	7
34848	localDate.millisOfDay().withMaximumValue().plusHours(interval)	2
7825	localDate.millisOfDay().withMinimumValue().plusDays(interval)	7
34765	localDate.millisOfDay().withMinimumValue().plusHours(interval)	2
53374	localDate.monthOfYear().getLocalDateTime().plusYears(numberOfOccurences)	5
57538	localDate.monthOfYear().getLocalDateTime().plusYears(occurrenceDuration)	6
50674	localDate.plusDays(multiplier)	9
8954	localDate.plusDays(occurrenceDuration)	8
34745	localDate.plusHours(interval)	2
34809	localDate.plusHours(occurrenceDuration)	2
50906	localDate.plusMonths(multiplier)	9
60306	localDate.plusMonths(occurrenceDuration)	3
50896	localDate.plusWeeks(multiplier)	9
60262	localDate.plusWeeks(occurrenceDuration)	3
51077	localDate.plusYears(multiplier)	9
8438	localDate.plusYears(occurrenceDuration)	8
51032	localDate.toDate().getTime()	9
1517	localName,	119
490	localName,String	18
36367	localSymbol	11
36163	localSymbol)	7
3336	locale	122
37369	locale's	4
12653	locale){	33
64403	locale,	1
10328	locale,digit	22
10370	locale,it	10
30989	locale,or	3
64333	locale-formatted	1
52924	locale-formatted.	4
58220	locale-symbol	6
3837	locale.	26
58527	locale</li>	2
3861	locales	48
55928	localizao	2
3904	localize	25
7395	localized	16
5127	localizedLabel	11
46264	locally	4
44052	locate	4
51548	located	4
14567	location	33
7329	location,either	10
34062	locations	8
1752	lock	71
50714	lock)	20
35538	locked	8
47739	lockedExpanded	4
3033	log	44
16604	logboekregistratie	3
29899	logge	14
25354	logged	3
7857	logging	66
48756	logging.	4
38389	logic	21
40457	logical	4
8096	logiciel</string>	28
38107	logo	12
37932	logo)	12
38121	logo,false	4
37694	logo.	8
45094	logoVis	4
17445	logowanie	17
7272	lon	47
1589	long	367
267	long"	6
57656	long",Toast.LENGTH_LONG).show()	8
44691	long,so	4
64370	long-press	1
1908	long</string>	95
33214	long[]	11
59612	long[]{transactionId	3
33196	long[mSelectedIds.size()]	5
54890	longa</string>	7
26597	longer	45
16454	longue</string>	7
12722	look	47
49914	look-ups.	5
46325	lookDown	4
45991	lookDown)	4
45909	lookForSelectablePosition(int	4
46343	lookForSelectablePosition(newPos,false)	4
46043	lookForSelectablePosition(newPos,true)	4
41441	looked	8
34769	looking	15
48260	lookingForEndOfUnknownTag	4
19580	looks	20
44371	looks.	4
2186	lookup	20
41713	lookups	9
50764	lookups.	5
8749	loop	50
41936	loop.	8
7717	looping,but	8
10132	lors	62
3039	los	61
5722	lose	6
35192	loses	20
29514	lost	10
52295	lost,a	7
49383	lost.	4
21061	lot	8
25330	lower	31
30174	lp	35
45587	lp)	4
30250	lp.bottomMargin	16
47260	lp.bottomMargin*/	5
44048	lp.cellsUsed	4
44074	lp.cellsUsed++	4
44170	lp.expandable	4
44004	lp.expanded	4
44058	lp.extraPixels	4
40280	lp.gravity	8
44079	lp.height	9
43619	lp.isOverflowButton	4
43669	lp.isOverflowButton)	4
39991	lp.leftMargin	18
46731	lp.leftMargin/*	4
43449	lp.preventEdgeOffset	4
39965	lp.rightMargin	18
47052	lp.rightMargin*/	5
39624	lp.topMargin	8
47130	lp.topMargin/*	4
47471	lp.weight	5
45353	lp.width	5
46845	lpHeight	4
51407	lquido</item>	4
42352	lri	8
43165	lri.get(i)	8
42803	lri.size()	8
5294	lschen.	9
4785	lschen</string>	25
6580	lschen?	10
15123	lschen?</string>	3
56228	lsenkod</string>	2
2264	ltima	56
28688	ltimo	13
2892	ltimos	24
25717	ltiples	12
21064	ltiplos	10
22753	ltrehozsa</string>	6
17608	lub	23
29819	luego	16
29766	lugar	16
14980	lukket</string>	17
59478	lunch"	4
29434	lunga</string>	7
19589	lv	35
34428	lv.getChildAt(0)	6
36757	lv.getChildAt(lv.getCount()	5
30553	lv.getChildAt(position	10
29373	lv.getChildAt(position)	4
30599	lv.getFirstVisiblePosition())	10
29377	lv.getItemIdAtPosition(position)	6
29207	lv.setChoiceMode(ListView.CHOICE_MODE_SINGLE)	9
30570	lv.setItemChecked(mSelectedViewPosition,false)	10
29313	lv.setItemChecked(position,true)	13
19400	lv.setOnItemLongClickListener(this)	22
56192	lyckades</string>	2
20072	m	24
3132	m&#225	36
20509	m&#233	11
20671	m&#243	10
20769	m&#250	17
5098	m&#252	30
43174	m,View	4
42401	m.postScale(sX,sY)	4
42509	m.postTranslate(-deltaSX,-deltaSY)	4
43133	m.postTranslate(mTranslationX,mTranslationY)	4
42888	m.reset()	4
36816	m2e	4
28544	mAcccountsActivity	15
28418	mAcccountsActivity.finish()	11
29040	mAcccountsActivity.getCurrentAccountListFragment()	6
51098	mAcccountsActivity.recreate()	13
31282	mAcccountsActivity.requestPermissions(new	9
47035	mAccessibilityEventSender	4
46973	mAccessibilityManager	4
3574	mAccount	75
128	mAccount.getColor()	3
850	mAccount.getColorHexCode()	6
30605	mAccount.getCurrency().getCurrencyCode()	13
18965	mAccount.getName()	9
441	mAccount.getName())	19
8138	mAccount.getParentUID()	6
26842	mAccount.getUID()	10
27032	mAccount.setAccountType(Account.AccountType.valueOf(accountTypeEntries[selectedAccountType]))	10
30677	mAccount.setAccountType(Account.AccountType.valueOf(characterString))	9
31493	mAccount.setAccountType(AccountType.valueOf(characterString))	6
53674	mAccount.setAccountType(accountType)	5
26720	mAccount.setAccountType(selectedAccountType)	12
1098	mAccount.setColor(color)	3
143	mAccount.setColor(mSelectedColor)	3
310	mAccount.setColorCode(color)	20
1873	mAccount.setColorCode(mSelectedColor)	15
10760	mAccount.setCommodity(commodity)	10
26108	mAccount.setCommodity(mCommoditiesDbAdapter.getCommodity(currencyCode))	4
36679	mAccount.setCommodityUID(commodity.getUID())	7
30500	mAccount.setCurrency(Currency.getInstance(characterString))	7
36590	mAccount.setCurrency(Currency.getInstance(commodity.getMnemonic()))	7
7851	mAccount.setCurrency(Currency.getInstance(curCode))	20
3593	mAccount.setCurrency(Currency.getInstance(currencyCode))	22
59048	mAccount.setCurrency(currency)	2
26085	mAccount.setCurrencyCode(currencyCode)	10
31058	mAccount.setDefaultTransferAccountUID(characterString)	7
27359	mAccount.setDefaultTransferAccountUID(mAccountsDbAdapter.getAccountUID(id))	4
13775	mAccount.setDefaultTransferAccountUID(mAccountsDbAdapter.getUID(id))	6
27212	mAccount.setDefaultTransferAccountUID(null)	10
25996	mAccount.setDescription(characterString)	5
483	mAccount.setDescription(mDescriptionEditText.getText().toString())	6
31449	mAccount.setFavorite(Boolean.parseBoolean(characterString))	9
2068	mAccount.setFullName(characterString)	11
19021	mAccount.setFullName(newAccountFullName)	10
53582	mAccount.setHidden(accountType	5
391	mAccount.setName(characterString)	17
18865	mAccount.setName(getEnteredName())	13
23550	mAccount.setParentUID(characterString)	29
8691	mAccount.setParentUID(mAccountsDbAdapter.getAccountUID(id))	14
63574	mAccount.setParentUID(newParentAccountGUID)	4
13798	mAccount.setParentUID(newParentAccountUID)	9
7441	mAccount.setParentUID(null)	9
23208	mAccount.setPlaceHolderFlag(Boolean.parseBoolean(characterString))	15
1999	mAccount.setPlaceHolderFlag(mPlaceholderCheckBox.isChecked())	18
19245	mAccount.setPlaceHolderFlag(true)	8
30574	mAccount.setUID(characterString)	16
11564	mAccountCursor	8
10920	mAccountCursor.close()	7
11014	mAccountCursorAdapter	8
53962	mAccountCursorAdapter.getPosition(mAccountsDbAdapter.getUID(accountId))	2
2536	mAccountDbAdapter	8
18653	mAccountID	22
52	mAccountId	52
19906	mAccountId)	19
3412	mAccountList	13
62651	mAccountList)	5
59419	mAccountList.add(imbAccount)	2
2846	mAccountList.add(mAccount)	14
54194	mAccountList.add(mRootAccount)	2
53354	mAccountMap	8
36430	mAccountMap.get(accountUID).getCommodity()	7
12471	mAccountMap.get(accountUID).getCurrency()	7
54293	mAccountMap.get(parentUID)	4
32606	mAccountMap.put(mAccount.getUID(),mAccount)	6
54495	mAccountMap.put(mRootAccount.getUID(),mRootAccount)	3
63857	mAccountName	2
63881	mAccountName)	2
10019	mAccountOptions	5
32999	mAccountOptionsView	6
33104	mAccountOptionsView.findViewById(R.id.radio_delete)	6
32951	mAccountOptionsView.findViewById(R.id.target_accounts_spinner)	6
33254	mAccountOptionsView.setVisibility(mSubAccountCount	6
8801	mAccountRecyclerAdapter	11
60593	mAccountRecyclerAdapter.notifyDataSetChanged()	3
60586	mAccountRecyclerAdapter.swapCursor(cursor)	3
32519	mAccountRecyclerAdapter.swapCursor(null)	13
19091	mAccountSelectedListener	14
60480	mAccountSelectedListener.accountSelected(accountUID)	3
30475	mAccountSelectedListener.accountSelected(id)	14
31402	mAccountSelectedListener.accountSelected(id,name)	3
59710	mAccountSelectedListener.accountSelected(mAccountsDbAdapter.getAccountUID(id))	3
59703	mAccountSelectedListener.accountSelected(mAccountsDbAdapter.getUID(id))	4
63862	mAccountSelectedListener.createNewTransaction(accountId)	2
64274	mAccountSelectedListener.createNewTransaction(getSelectedItemId())	2
1840	mAccountType	112
26505	mAccountType)	19
29881	mAccountType.name(),"0"	9
25036	mAccountTypeList	6
62670	mAccountTypeList)	3
58785	mAccountTypeList.remove(entry.getKey())	3
1134	mAccountTypeSpinner	50
584	mAccountTypeSpinner.getSelectedItem()	6
1878	mAccountTypeSpinner.getSelectedItem()))	6
26993	mAccountTypeSpinner.getSelectedItemPosition()	14
30935	mAccountTypeSpinner.setAdapter(accountTypesAdapter)	4
1112	mAccountTypeSpinner.setAdapter(dataAdapter)	9
1783	mAccountTypeSpinner.setOnItemSelectedListener(new	18
27612	mAccountTypeSpinner.setSelection(accountTypeIndex)	12
956	mAccountUID	144
64222	mAccountUID)	2
59475	mAccountUID.hashCode()	4
31375	mAccountUid	3
35243	mAccountsActivity	9
34939	mAccountsActivity.finish()	7
34886	mAccountsActivity.getCurrentAccountListFragment()	6
31289	mAccountsActivity.getResources().getStringArray(R.array.export_destinations)	5
31396	mAccountsActivity.getResources().getStringArray(R.array.export_destinations)[3]))	5
58618	mAccountsActivity.getSharedPreferences(	3
58667	mAccountsActivity.getString(R.string.owncloud_pref),Context.MODE_PRIVATE)	3
35100	mAccountsActivity.recreate()	8
8962	mAccountsCursor	25
26978	mAccountsCursor.close()	9
8730	mAccountsCursorAdapter	34
30507	mAccountsCursorAdapter.close()	14
30620	mAccountsCursorAdapter.notifyDataSetChanged()	12
50830	mAccountsCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	3
30690	mAccountsCursorAdapter.swapCursor(cursor)	12
25720	mAccountsCursorAdapter.swapCursor(null)	15
2111	mAccountsDbAdapter	236
28442	mAccountsDbAdapter.addAccount(acc)	4
51135	mAccountsDbAdapter.addAccount(acc1)	4
18855	mAccountsDbAdapter.addAccount(account)	28
31377	mAccountsDbAdapter.addAccount(account1)	8
31226	mAccountsDbAdapter.addAccount(account2)	12
33836	mAccountsDbAdapter.addAccount(alphaAccount)	7
34075	mAccountsDbAdapter.addAccount(bravoAccount)	7
58907	mAccountsDbAdapter.addAccount(child)	5
59721	mAccountsDbAdapter.addAccount(childAccount)	4
30943	mAccountsDbAdapter.addAccount(first)	10
3913	mAccountsDbAdapter.addAccount(mAccount)	23
29062	mAccountsDbAdapter.addAccount(new	7
58886	mAccountsDbAdapter.addAccount(parent)	5
30752	mAccountsDbAdapter.addAccount(second)	10
28836	mAccountsDbAdapter.addAccount(transferAccount)	6
61748	mAccountsDbAdapter.addAccount(transferAcct)	5
13515	mAccountsDbAdapter.addRecord(account)	48
11318	mAccountsDbAdapter.addRecord(account,DatabaseAdapter.UpdateMethod.insert)	17
63877	mAccountsDbAdapter.addRecord(account,DatabaseAdapter.UpdateMethod.update)	2
33959	mAccountsDbAdapter.addRecord(account1)	10
13380	mAccountsDbAdapter.addRecord(account2)	31
13477	mAccountsDbAdapter.addRecord(account2,DatabaseAdapter.UpdateMethod.insert)	4
52489	mAccountsDbAdapter.addRecord(account3)	2
52451	mAccountsDbAdapter.addRecord(account4)	2
59752	mAccountsDbAdapter.addRecord(alphaAccount)	4
59743	mAccountsDbAdapter.addRecord(bravoAccount)	4
61768	mAccountsDbAdapter.addRecord(child)	3
13267	mAccountsDbAdapter.addRecord(childAccount)	10
52214	mAccountsDbAdapter.addRecord(childAccount,DatabaseAdapter.UpdateMethod.insert)	6
59450	mAccountsDbAdapter.addRecord(euroAccount)	5
61773	mAccountsDbAdapter.addRecord(first)	3
34132	mAccountsDbAdapter.addRecord(mAccount)	9
34948	mAccountsDbAdapter.addRecord(mAccount,DatabaseAdapter.UpdateMethod.insert)	2
13732	mAccountsDbAdapter.addRecord(mBaseAccount,DatabaseAdapter.UpdateMethod.insert)	2
54379	mAccountsDbAdapter.addRecord(mSecondAccount)	2
13129	mAccountsDbAdapter.addRecord(mTransferAccount,DatabaseAdapter.UpdateMethod.insert)	2
52262	mAccountsDbAdapter.addRecord(new	9
61772	mAccountsDbAdapter.addRecord(parent)	3
13130	mAccountsDbAdapter.addRecord(parentAccount)	5
13416	mAccountsDbAdapter.addRecord(rootAccount)	5
61771	mAccountsDbAdapter.addRecord(second)	3
13819	mAccountsDbAdapter.addRecord(simpleAccount,DatabaseAdapter.UpdateMethod.insert)	5
13079	mAccountsDbAdapter.addRecord(subAccount,DatabaseAdapter.UpdateMethod.insert)	6
13541	mAccountsDbAdapter.addRecord(tranferAcct,DatabaseAdapter.UpdateMethod.insert)	6
52280	mAccountsDbAdapter.addRecord(transferAccount)	7
52202	mAccountsDbAdapter.addRecord(transferAccount,DatabaseAdapter.UpdateMethod.insert)	2
61734	mAccountsDbAdapter.addRecord(transferAcct)	3
14246	mAccountsDbAdapter.beginTransaction()	34
59572	mAccountsDbAdapter.buildAccountInstance(cursor)	3
18616	mAccountsDbAdapter.bulkAddAccounts(accounts)	7
30695	mAccountsDbAdapter.bulkAddAccounts(accountsToUpdate)	9
4001	mAccountsDbAdapter.bulkAddAccounts(mAccountList)	21
61745	mAccountsDbAdapter.bulkAddRecords(accounts)	3
52324	mAccountsDbAdapter.bulkAddRecords(accountsToUpdate)	11
34934	mAccountsDbAdapter.bulkAddRecords(accountsToUpdate,DatabaseAdapter.UpdateMethod.update)	4
50991	mAccountsDbAdapter.bulkAddRecords(mAccountList)	9
52298	mAccountsDbAdapter.bulkAddRecords(mAccountList,DatabaseAdapter.UpdateMethod.insert)	2
18662	mAccountsDbAdapter.close()	50
61749	mAccountsDbAdapter.createAccountHierarchy("Assets:Current	5
57241	mAccountsDbAdapter.deleteAccount(rowId)	2
13431	mAccountsDbAdapter.deleteAllRecords()	78
31297	mAccountsDbAdapter.deleteRecord(ALPHA_ACCOUNT_NAME)	8
52581	mAccountsDbAdapter.deleteRecord(account2.getUID())	2
25634	mAccountsDbAdapter.deleteRecord(rowId)	13
34849	mAccountsDbAdapter.deleteRecord(uid)	3
27685	mAccountsDbAdapter.destructiveDeleteAccount(rowId)	21
14311	mAccountsDbAdapter.enableForeignKey(false)	10
14112	mAccountsDbAdapter.enableForeignKey(true)	11
14502	mAccountsDbAdapter.endTransaction()	20
56899	mAccountsDbAdapter.exportAccountsToGncXML(xmlSerializer,null,null)	3
29477	mAccountsDbAdapter.fetchAccountWithUID(mTransaction.getAccountUID())	6
51274	mAccountsDbAdapter.fetchAccountWithUID(splitAccountUID)	3
21196	mAccountsDbAdapter.fetchAccounts(DatabaseSchema.AccountEntry.COLUMN_TYPE	3
7961	mAccountsDbAdapter.fetchAccounts(condition)	14
2870	mAccountsDbAdapter.fetchAccounts(conditions)	21
63568	mAccountsDbAdapter.fetchAccounts(null,null)	5
23349	mAccountsDbAdapter.fetchAccounts(null,null,DatabaseSchema.AccountEntry.COLUMN_FULL_NAME	7
57409	mAccountsDbAdapter.fetchAccounts(null,null,null)	6
10384	mAccountsDbAdapter.fetchAccountsOrderedByFavoriteAndFullName(conditions,new	2
10144	mAccountsDbAdapter.fetchAccountsOrderedByFavoriteAndFullName(conditions,null)	2
24549	mAccountsDbAdapter.fetchAccountsOrderedByFullName(condition)	6
24525	mAccountsDbAdapter.fetchAccountsOrderedByFullName(condition,	7
24518	mAccountsDbAdapter.fetchAccountsOrderedByFullName(condition,null)	8
13340	mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions)	14
24717	mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions,	7
12005	mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions,new	12
11343	mAccountsDbAdapter.fetchAccountsOrderedByFullName(conditions,null)	17
8362	mAccountsDbAdapter.fetchAllAccounts()	18
3510	mAccountsDbAdapter.fetchAllRecords()	20
13204	mAccountsDbAdapter.fetchAllRecordsOrderedByFullName()	32
26508	mAccountsDbAdapter.findAccountUidByFullName("Assets")	3
26327	mAccountsDbAdapter.findAccountUidByFullName("Assets:Current	3
26522	mAccountsDbAdapter.findAccountUidByFullName("Expenses:Auto")	3
28428	mAccountsDbAdapter.getAccount("intent-account")	8
51116	mAccountsDbAdapter.getAccount("simile")	4
28882	mAccountsDbAdapter.getAccount(DUMMY_ACCOUNT_UID).getTransactionCount()	12
28575	mAccountsDbAdapter.getAccount(account.getUID())	6
28945	mAccountsDbAdapter.getAccount(account.getUID()).getTransactionCount()	9
26287	mAccountsDbAdapter.getAccount(accountID)	4
57366	mAccountsDbAdapter.getAccount(accountUID)	5
58903	mAccountsDbAdapter.getAccount(child.getUID())	5
21123	mAccountsDbAdapter.getAccount(id)	11
32084	mAccountsDbAdapter.getAccount(mAccountUID)	16
7708	mAccountsDbAdapter.getAccount(mSelectedAccountId)	13
58824	mAccountsDbAdapter.getAccount(parent.getUID())	5
20482	mAccountsDbAdapter.getAccount(rootAccountUID)	11
27872	mAccountsDbAdapter.getAccount(rowId)	15
21915	mAccountsDbAdapter.getAccountBalance(AccountType.EQUITY,-1,-1)	6
21572	mAccountsDbAdapter.getAccountBalance(AccountType.LIABILITY,-1,-1)	6
62949	mAccountsDbAdapter.getAccountBalance(TRANSACTIONS_ACCOUNT_UID)	4
63063	mAccountsDbAdapter.getAccountBalance(TRANSFER_ACCOUNT_UID)	5
59773	mAccountsDbAdapter.getAccountBalance(account.getUID())	5
29811	mAccountsDbAdapter.getAccountBalance(account.getUID()).absolute().asDouble()	8
18849	mAccountsDbAdapter.getAccountBalance(account.getUID()).asDouble()	11
27053	mAccountsDbAdapter.getAccountBalance(account.getUID(),start,end).absolute().asDouble()	9
19141	mAccountsDbAdapter.getAccountBalance(account.getUID(),start,end).asDouble()	9
30463	mAccountsDbAdapter.getAccountBalance(accountId)	13
21482	mAccountsDbAdapter.getAccountBalance(accountTypes)	8
60228	mAccountsDbAdapter.getAccountBalance(accountTypes,-1,System.currentTimeMillis())	7
21379	mAccountsDbAdapter.getAccountBalance(accountUID)	6
54075	mAccountsDbAdapter.getAccountBalance(accountUID,budget.getStartofCurrentPeriod(),budget.getEndOfCurrentPeriod())	2
60128	mAccountsDbAdapter.getAccountBalance(mAssetAccountTypes,-1,System.currentTimeMillis())	3
60232	mAccountsDbAdapter.getAccountBalance(mLiabilityAccountTypes,-1,System.currentTimeMillis())	3
58893	mAccountsDbAdapter.getAccountColorCode(accountId)	5
6659	mAccountsDbAdapter.getAccountColorCode(mAccountId)	13
64189	mAccountsDbAdapter.getAccountColorCode(mAccountsDbAdapter.getAccountID(UIDParent))	4
59687	mAccountsDbAdapter.getAccountColorCode(mAccountsDbAdapter.getAccountID(accountUID))	5
59688	mAccountsDbAdapter.getAccountColorCode(mAccountsDbAdapter.getAccountID(mAccountUID))	3
6624	mAccountsDbAdapter.getAccountColorCode(mAccountsDbAdapter.getAccountID(parentAccountUID))	6
59659	mAccountsDbAdapter.getAccountColorCode(mAccountsDbAdapter.getID(accountUID))	4
58857	mAccountsDbAdapter.getAccountColorCode(mAccountsDbAdapter.getID(mAccountUID))	3
27023	mAccountsDbAdapter.getAccountColorCode(parentAccountId)	7
24657	mAccountsDbAdapter.getAccountCurrencyCode(mAccountUID)	19
63571	mAccountsDbAdapter.getAccountFullName(newParentAccountGUID)	4
64206	mAccountsDbAdapter.getAccountFullName(newParentAccountUID)	3
26760	mAccountsDbAdapter.getAccountID(account.getDefaultTransferAccountUID())	7
26926	mAccountsDbAdapter.getAccountID(account.getParentUID())	16
51110	mAccountsDbAdapter.getAccountID(accountUidToDelete)	3
51261	mAccountsDbAdapter.getAccountID(defaultTransferUID))	3
24346	mAccountsDbAdapter.getAccountID(mRootAccountUID)	6
8373	mAccountsDbAdapter.getAccountID(parentUID)	6
63569	mAccountsDbAdapter.getAccountID(rootAccountGUID)	4
35961	mAccountsDbAdapter.getAccountType(accountId)	7
31823	mAccountsDbAdapter.getAccountType(id)	7
35932	mAccountsDbAdapter.getAccountType(mAccountId)	4
13832	mAccountsDbAdapter.getAccountType(mAccountUID)	23
26947	mAccountsDbAdapter.getAccountType(mParentAccountId)	6
64213	mAccountsDbAdapter.getAccountType(mParentAccountUID)	2
35850	mAccountsDbAdapter.getAccountUID(accountID)	4
35953	mAccountsDbAdapter.getAccountUID(accountsSpinner.getSelectedItemId())	3
59711	mAccountsDbAdapter.getAccountUID(itemId)	3
35944	mAccountsDbAdapter.getAccountUID(mAccountId)	10
63573	mAccountsDbAdapter.getAccountUID(newParentAccountID)	4
59691	mAccountsDbAdapter.getAccountUID(newParentAccountId)	4
27747	mAccountsDbAdapter.getAccountUID(rowId)	7
35914	mAccountsDbAdapter.getAccountUID(transferAcctId)	3
26555	mAccountsDbAdapter.getAccountsBalance(	21
7510	mAccountsDbAdapter.getAccountsBalance(Collections.singletonList(account.getUID()),	18
857	mAccountsDbAdapter.getAccountsBalance(Collections.singletonList(account.getUID()),mReportStartTime,mReportEndTime).absolute().asDouble()	9
1958	mAccountsDbAdapter.getAccountsBalance(Collections.singletonList(account.getUID()),mStartRangeMillis,mEndRangeMillis).absolute().asDouble()	5
7966	mAccountsDbAdapter.getAccountsBalance(Collections.singletonList(account.getUID()),start,end).absolute().asDouble()	16
34164	mAccountsDbAdapter.getAccountsBalance(accountUIDList,start,end).asDouble()	18
30040	mAccountsDbAdapter.getAccountsBalance(entry.getValue(),start,end).absolute().asDouble()	7
62668	mAccountsDbAdapter.getAccountsBalance(entry.getValue(),startPeriod,endPeriod).absolute().asDouble()	3
29878	mAccountsDbAdapter.getAccountsBalance(uidList,-1,-1).absolute().asDouble()	7
29787	mAccountsDbAdapter.getAccountsBalance(uidList,start,end).absolute().asDouble()	7
28330	mAccountsDbAdapter.getAllAccounts()	24
30631	mAccountsDbAdapter.getAllAccountsBalance()	9
13690	mAccountsDbAdapter.getAllRecords()	18
25984	mAccountsDbAdapter.getCommoditiesInUse()	3
54963	mAccountsDbAdapter.getCurrencies()	8
32918	mAccountsDbAdapter.getCurrencies())	5
25925	mAccountsDbAdapter.getCurrenciesInUse()	17
63093	mAccountsDbAdapter.getCurrency(id)	2
31741	mAccountsDbAdapter.getCurrencyCode((mAccountsDbAdapter.getUID(id)))	13
2459	mAccountsDbAdapter.getCurrencyCode(accountId)	22
18667	mAccountsDbAdapter.getCurrencyCode(accountUID)	11
35837	mAccountsDbAdapter.getCurrencyCode(accountsSpinner.getSelectedItemId())	3
35884	mAccountsDbAdapter.getCurrencyCode(mAccountId)	9
24686	mAccountsDbAdapter.getCurrencyCode(mAccountUID)	30
12197	mAccountsDbAdapter.getCurrencyCode(mAccountsDbAdapter.getUID(id))	20
13138	mAccountsDbAdapter.getCurrencyCode(mOriginAccountId)	6
24757	mAccountsDbAdapter.getCurrencyCode(mOriginAccountUID)	6
62975	mAccountsDbAdapter.getCurrencyCode(transferAcctUID)	4
27338	mAccountsDbAdapter.getDefaultTransferAccountID(accountId)	9
1004	mAccountsDbAdapter.getDefaultTransferAccountID(mAccountsDbAdapter.getID(currentAccountUID))	12
2018	mAccountsDbAdapter.getDescendantAccountUIDs()	8
13989	mAccountsDbAdapter.getDescendantAccountUIDs(mAccount.getUID(),null,null)	22
26530	mAccountsDbAdapter.getDescendantAccountUIDs(uid,null,null)	3
30509	mAccountsDbAdapter.getDoubleEntryAccountsBalance()	9
31442	mAccountsDbAdapter.getExportableAccounts()	13
9786	mAccountsDbAdapter.getExportableAccounts(mExportParams.getExportStartTime())	9
56824	mAccountsDbAdapter.getExportableAccounts(mParameters.getExportStartTime())	7
13104	mAccountsDbAdapter.getGnuCashRootAccountUID()	48
13644	mAccountsDbAdapter.getID(DUMMY_ACCOUNT_UID)	27
13803	mAccountsDbAdapter.getID(SIMPLE_ACCOUNT_UID)	4
58747	mAccountsDbAdapter.getID(TRANSACTIONS_ACCOUNT_UID)	7
21805	mAccountsDbAdapter.getID(account.getDefaultTransferAccountUID())	12
13361	mAccountsDbAdapter.getID(accountId)	4
13112	mAccountsDbAdapter.getID(accountUID)	11
28599	mAccountsDbAdapter.getID(accountUidToDelete)	3
54548	mAccountsDbAdapter.getID(mAccountUID)	12
19014	mAccountsDbAdapter.getID(mParentAccountUID)	9
21137	mAccountsDbAdapter.getID(mRootAccountUID)	10
29009	mAccountsDbAdapter.getID(transferAccount.getUID())	5
6228	mAccountsDbAdapter.getImbalanceAccountUID(Commodity.getInstance(CURRENCY_CODE))	3
4575	mAccountsDbAdapter.getImbalanceAccountUID(Commodity.getInstance(Money.DEFAULT_CURRENCY_CODE))	3
5952	mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(CURRENCY_CODE))	12
5824	mAccountsDbAdapter.getImbalanceAccountUID(Currency.getInstance(Money.DEFAULT_CURRENCY_CODE))	6
34135	mAccountsDbAdapter.getImbalanceAccountUID(DEFAULT_CURRENCY)	4
10982	mAccountsDbAdapter.getImbalanceAccountUID(usd)	8
865	mAccountsDbAdapter.getOrCreateGnuCashRootAccountUID()	35
10302	mAccountsDbAdapter.getOrCreateImbalanceAccountUID(Commodity.DEFAULT_COMMODITY)))	2
10993	mAccountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance(baseCurrencyCode))	6
11971	mAccountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance(currencyCode))))	5
11066	mAccountsDbAdapter.getOrCreateImbalanceAccountUID(baseCommodity)	2
13124	mAccountsDbAdapter.getOrCreateImbalanceAccountUID(currency)	27
26227	mAccountsDbAdapter.getOrCreateImbalanceAccountUID(usd)	6
64192	mAccountsDbAdapter.getParentAccountUID(UIDParent))	4
59664	mAccountsDbAdapter.getParentAccountUID(accountUID))	8
31201	mAccountsDbAdapter.getParentAccountUID(currentAccountUID)	7
6470	mAccountsDbAdapter.getParentAccountUID(mAccountId)	6
27724	mAccountsDbAdapter.getParentAccountUID(rowId)	5
13253	mAccountsDbAdapter.getParentAccountUID(subAccount.getUID())	2
7546	mAccountsDbAdapter.getRecord("308ade8cf0be2b0b05c5eec3114a65fa")	3
7677	mAccountsDbAdapter.getRecord("3f44d61cb1afd201e8ea5a54ec4fbbff")	3
7968	mAccountsDbAdapter.getRecord("6a7cf8267314992bdddcee56d71a3908")	3
51087	mAccountsDbAdapter.getRecord("intent-account")	8
52237	mAccountsDbAdapter.getRecord(BOOKS_EXPENSE_ACCOUNT_UID)	8
52267	mAccountsDbAdapter.getRecord(DINING_EXPENSE_ACCOUNT_UID)	8
61650	mAccountsDbAdapter.getRecord(DUMMY_ACCOUNT_UID).getTransactionCount()	6
52179	mAccountsDbAdapter.getRecord(GIFTS_RECEIVED_INCOME_ACCOUNT_UID).addTransaction(transaction)	8
35162	mAccountsDbAdapter.getRecord(account.getUID())	5
61584	mAccountsDbAdapter.getRecord(account.getUID()).getTransactionCount()	6
34081	mAccountsDbAdapter.getRecord(account1.getUID())	4
33856	mAccountsDbAdapter.getRecord(account2.getUID())	4
61729	mAccountsDbAdapter.getRecord(child.getUID())	3
61736	mAccountsDbAdapter.getRecord(mAccountUID)	3
11112	mAccountsDbAdapter.getRecord(mAccountUID).getCommodity()	2
61743	mAccountsDbAdapter.getRecord(parent.getUID())	3
61739	mAccountsDbAdapter.getRecord(rowId)	3
13402	mAccountsDbAdapter.getRecordsCount()	2
29890	mAccountsDbAdapter.getSimpleAccountList(	9
19132	mAccountsDbAdapter.getSimpleAccountList()	20
7604	mAccountsDbAdapter.getSimpleAccountList())	47
34772	mAccountsDbAdapter.getSubAccountCount(acc.getUID())	10
30138	mAccountsDbAdapter.getSubAccountCount(accountId)	12
60490	mAccountsDbAdapter.getSubAccountCount(accountUID)	5
19501	mAccountsDbAdapter.getSubAccountCount(mAccountId)	10
62312	mAccountsDbAdapter.getSubAccountCount(mAccountUID)	3
27840	mAccountsDbAdapter.getSubAccountCount(rowId)	5
20568	mAccountsDbAdapter.getTotalAccountCount()	11
10039	mAccountsDbAdapter.getUID(accountId)	13
31939	mAccountsDbAdapter.getUID(accountsSpinner.getSelectedItemId())	7
59713	mAccountsDbAdapter.getUID(dstAccountId)	2
13860	mAccountsDbAdapter.getUID(id)	14
55150	mAccountsDbAdapter.getUID(itemId)	4
9523	mAccountsDbAdapter.getUID(mAccountsSpinner.getSelectedItemId())	3
57517	mAccountsDbAdapter.getUID(mBudgetAccountSpinner.getSelectedItemId())	3
57620	mAccountsDbAdapter.getUID(mSelectedItemId)	5
62802	mAccountsDbAdapter.getUID(mTransferAccountSpinner.getSelectedItemId())	4
59686	mAccountsDbAdapter.getUID(newParentAccountId)	1
34832	mAccountsDbAdapter.getUID(rowId)	3
10489	mAccountsDbAdapter.getUID(transferAcctId)	25
31960	mAccountsDbAdapter.getUID(viewHolder.accountsSpinner.getSelectedItemId())	13
53735	mAccountsDbAdapter.getUID(viewHolder.budgetAccountSpinner.getSelectedItemId())	5
60498	mAccountsDbAdapter.isFavoriteAccount(accountUID)	3
57554	mAccountsDbAdapter.isFavoriteAccount(mSelectedAccountUID)	5
27465	mAccountsDbAdapter.isPlaceholderAccount(accountId)	14
52169	mAccountsDbAdapter.isPlaceholderAccount(accountUID)	9
19577	mAccountsDbAdapter.isPlaceholderAccount(mAccountId)	10
13600	mAccountsDbAdapter.isPlaceholderAccount(mAccountUID)	11
31152	mAccountsDbAdapter.markAsExported(account.getUID())	5
26553	mAccountsDbAdapter.reassignDescendantAccounts(currentAssetsUID,assetsUID)	3
27657	mAccountsDbAdapter.reassignParent(accountUID,null)	9
27776	mAccountsDbAdapter.reassignParent(accountUID,parentUID)	6
62705	mAccountsDbAdapter.recursiveDeleteAccount(mAccountsDbAdapter.getID(account.getUID()))	2
52611	mAccountsDbAdapter.recursiveDeleteAccount(mAccountsDbAdapter.getID(account1.getUID()))	2
27802	mAccountsDbAdapter.recursiveDestructiveDelete(rowId)	10
14304	mAccountsDbAdapter.setTransactionSuccessful()	24
57558	mAccountsDbAdapter.updateAccount(mSelectedItemId,	5
28764	mAccountsDbAdapter.updateRecord(DUMMY_ACCOUNT_UID,contentValues)	12
62998	mAccountsDbAdapter.updateRecord(TRANSACTIONS_ACCOUNT_UID,contentValues)	4
60569	mAccountsDbAdapter.updateRecord(accountUID,contentValues)	3
33018	mAccountsDestinationAccountSpinner	6
3297	mAccountsDestinationAccountSpinner.getSelectedItemId()	5
33584	mAccountsDestinationAccountSpinner.setAdapter(mCursorAdapter)	6
62640	mAccountsDestinationAccountSpinner.setEnabled(isChecked)	2
62636	mAccountsDestinationAccountSpinner.setVisibility(View.GONE)	2
8940	mAccountsList	36
12326	mAccountsList)	18
8862	mAccountsSpinner	28
9537	mAccountsSpinner.getSelectedItemId()	25
56950	mAccountsSpinner.getSelectedItemId())	3
9088	mAccountsSpinner.setAdapter(cursorAdapter)	16
50651	mAccountsSpinner.setAdapter(mAccountsCursorAdapter)	3
29188	mAccountsSpinner.setAdapter(mCursorAdapter)	17
51292	mAccountsSpinner.setOnItemSelectedListener(new	5
29412	mAccountsSpinner.setSelection(pos)	11
39861	mActionBar	5
39557	mActionBar.addOnMenuVisibilityListener(this)	4
39969	mActionBar.addTab(((TabWrapper)tab).mNativeTab)	4
40297	mActionBar.addTab(((TabWrapper)tab).mNativeTab,position)	4
39393	mActionBar.addTab(((TabWrapper)tab).mNativeTab,position,setSelected)	4
40081	mActionBar.addTab(((TabWrapper)tab).mNativeTab,setSelected)	4
39486	mActionBar.getCustomView()	4
39506	mActionBar.getDisplayOptions()	4
39685	mActionBar.getHeight()	4
39896	mActionBar.getNavigationItemCount()	4
39881	mActionBar.getNavigationMode()	4
39650	mActionBar.getSelectedNavigationIndex()	4
40306	mActionBar.getSelectedTab()	4
39481	mActionBar.getSubtitle()	4
40112	mActionBar.getTabAt(index)	4
40196	mActionBar.getTabCount()	4
40195	mActionBar.getThemedContext()	4
39899	mActionBar.getTitle()	4
40168	mActionBar.hide()	4
40042	mActionBar.isShowing()	4
39929	mActionBar.removeAllTabs()	4
39454	mActionBar.removeTab(((TabWrapper)tab).mNativeTab)	4
39695	mActionBar.removeTabAt(position)	4
39471	mActionBar.selectTab(((TabWrapper)tab).mNativeTab)	4
39623	mActionBar.setBackgroundDrawable(d)	4
39902	mActionBar.setCustomView(resId)	4
39742	mActionBar.setCustomView(view)	4
39950	mActionBar.setCustomView(view,lp)	4
40075	mActionBar.setDisplayHomeAsUpEnabled(showHomeAsUp)	4
39847	mActionBar.setDisplayOptions(options)	4
40124	mActionBar.setDisplayOptions(options,mask)	4
39953	mActionBar.setDisplayShowCustomEnabled(showCustom)	4
40287	mActionBar.setDisplayShowHomeEnabled(showHome)	4
40069	mActionBar.setDisplayShowTitleEnabled(showTitle)	4
39659	mActionBar.setDisplayUseLogoEnabled(useLogo)	4
39640	mActionBar.setHomeButtonEnabled(enabled)	4
39710	mActionBar.setIcon(icon)	4
40021	mActionBar.setIcon(resId)	4
39719	mActionBar.setListNavigationCallbacks(adapter,(callback	4
39886	mActionBar.setLogo(logo)	4
40139	mActionBar.setLogo(resId)	4
40096	mActionBar.setNavigationMode(mode)	4
40202	mActionBar.setSelectedNavigationItem(position)	4
40167	mActionBar.setSplitBackgroundDrawable(d)	4
39574	mActionBar.setStackedBackgroundDrawable(d)	4
39741	mActionBar.setSubtitle(resId)	4
40103	mActionBar.setSubtitle(subtitle)	4
39913	mActionBar.setTitle(resId)	4
39647	mActionBar.setTitle(title)	4
39763	mActionBar.show()	4
45744	mActionBarView	4
45712	mActionBarView.getLayoutParams()	4
45004	mActionBarView.getMeasuredHeight()	4
45191	mActionBarView.getRight(),mActionBarView.getBottom())	4
45023	mActionBarView.isCollapsed()	4
42900	mActionButtonGroups	4
42341	mActionButtonPopup	4
42622	mActionButtonPopup.dismiss()	4
42478	mActionButtonPopup.setAnchorView(anchor)	4
42732	mActionButtonPopup.show()	4
44851	mActionExpandListener	4
44742	mActionExpandListener.onMenuItemActionCollapse(MenuItemWrapper.this)	4
44811	mActionExpandListener.onMenuItemActionExpand(MenuItemWrapper.this)	4
42322	mActionItemWidthLimit	4
44046	mActionItems	6
44905	mActionItems.add(item)	4
44593	mActionItems.clear()	4
45270	mActionMenuPresenter	7
45638	mActionMenuPresenter.dismissPopupMenus()	5
45628	mActionMenuPresenter.getMenuView(this)	4
45387	mActionMenuPresenter.hideOverflowMenu()	5
45627	mActionMenuPresenter.hideSubMenus()	4
45050	mActionMenuPresenter.initForMenu(mContext,null)	4
45524	mActionMenuPresenter.isOverflowMenuShowing()	5
45583	mActionMenuPresenter.isOverflowReserved()	4
45192	mActionMenuPresenter.onConfigurationChanged(newConfig)	4
45078	mActionMenuPresenter.setCallback(cb)	4
45310	mActionMenuPresenter.setExpandedActionViewsExclusive(	4
45406	mActionMenuPresenter.setExpandedActionViewsExclusive(false)	4
45071	mActionMenuPresenter.setId(R.id.abs__action_menu_presenter)	4
45662	mActionMenuPresenter.setItemLimit(Integer.MAX_VALUE)	4
45725	mActionMenuPresenter.setReserveOverflow(true)	4
45434	mActionMenuPresenter.setWidthLimit(	4
45200	mActionMenuPresenter.showOverflowMenu()	5
45431	mActionMenuPresenter.updateMenuView(true)	4
29439	mActionModCallbacks	2
18402	mActionMode	70
18682	mActionMode.finish()	39
39884	mActionMode.getCustomView()	4
39908	mActionMode.getSubtitle()	4
40047	mActionMode.getTag()	4
40118	mActionMode.getTitle()	4
39575	mActionMode.invalidate()	4
39731	mActionMode.setCustomView(view)	4
39515	mActionMode.setSubtitle(resId)	4
39927	mActionMode.setSubtitle(subtitle)	4
40200	mActionMode.setTag(tag)	4
29254	mActionMode.setTitle(count	2
18018	mActionMode.setTitle(getResources().getString(R.string.title_selected,count))	17
39657	mActionMode.setTitle(resId)	4
39477	mActionMode.setTitle(title)	4
18344	mActionModeCallbacks	28
30540	mActionModeCallbacks)	15
39246	mActionModeView	7
38832	mActionModeView.initForMode(mode)	4
38861	mActionModeView.killMode()	4
39655	mActionModeView.removeAllViews()	4
39257	mActionModeView.sendAccessibilityEvent(AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED)	4
39509	mActionModeView.setSplitActionBar(splitActionBar)	4
39385	mActionModeView.setSplitView(splitView)	4
40138	mActionModeView.setSplitWhenNarrow(splitWhenNarrow)	4
39456	mActionModeView.setVisibility(View.GONE)	4
38836	mActionModeView.setVisibility(View.VISIBLE)	4
44207	mActionProvider	5
44601	mActionProvider.onCreateActionView()	4
44659	mActionProvider.onPerformDefaultAction())	4
48225	mActionProviderConstructorArguments	5
48315	mActionProviderConstructorArguments)	4
19486	mActionType	17
34134	mActionType.name()	5
32438	mActionUID	8
39766	mActionView	9
39607	mActionView.animateToVisibility(toActionMode	4
40340	mActionView.getCustomNavigationView()	4
40012	mActionView.getDisplayOptions()	4
40284	mActionView.getDropdownAdapter()	4
39478	mActionView.getDropdownSelectedPosition()	4
39674	mActionView.getNavigationMode()	4
40156	mActionView.getSubtitle()	4
40007	mActionView.getTitle()	4
39920	mActionView.isCollapsed())	4
40188	mActionView.isSplitActionBar()	4
39689	mActionView.onConfigurationChanged(newConfig)	4
40309	mActionView.sendAccessibilityEvent(AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED)	4
40322	mActionView.setCallback(callback)	4
40292	mActionView.setCollapsable(!mHasEmbeddedTabs	4
40314	mActionView.setCollapsable(mode	4
39435	mActionView.setContextView(mContextView)	4
39676	mActionView.setCustomNavigationView(view)	4
39411	mActionView.setDisplayOptions((options	4
39474	mActionView.setDisplayOptions(options)	4
39642	mActionView.setDropdownAdapter(adapter)	4
40055	mActionView.setDropdownSelectedPosition(position)	4
39442	mActionView.setEmbeddedTabView(mTabScrollView)	4
40325	mActionView.setEmbeddedTabView(null)	4
40219	mActionView.setEmbeddedTabView(tabScroller)	4
40302	mActionView.setHomeButtonEnabled(enable)	4
39876	mActionView.setIcon(icon)	4
40033	mActionView.setIcon(resId)	4
40239	mActionView.setLogo(logo)	4
39610	mActionView.setLogo(resId)	4
40158	mActionView.setNavigationMode(mode)	4
40000	mActionView.setSubtitle(subtitle)	4
39868	mActionView.setTitle(title)	4
48630	mActionViewConstructorArguments	5
44897	mActionWidthLimit.	4
52374	mActive	9
64388	mActive.run()	1
48508	mActivites	6
48896	mActivites.add(new	4
48933	mActivites.clear()	4
49268	mActivites.get(0)	4
48905	mActivites.get(0).resolveInfo	4
48858	mActivites.get(index)	4
48995	mActivites.get(index).resolveInfo	4
48992	mActivites.size()	4
38607	mActivity	28
39788	mActivity.getActionBar()	4
39958	mActivity.getLayoutInflater().inflate(layoutResId,mContentParent)	4
39805	mActivity.getLayoutInflater().inflate(layoutResource,null)	4
40151	mActivity.getResources().getString(layoutResource))	4
53788	mActivity.getSupportFragmentManager()	2
39836	mActivity.getTheme()	4
39888	mActivity.getTheme().obtainStyledAttributes(R.styleable.SherlockTheme)	4
39436	mActivity.getTheme().resolveAttribute(android.R.attr.actionBarWidgetTheme,outValue,true)	4
39683	mActivity.getWindow().addContentView(view,params)	4
39654	mActivity.getWindow().getCallback()	4
39962	mActivity.getWindow().hasFeature(feature)	4
39437	mActivity.getWindow().invalidatePanelMenu(Window.FEATURE_OPTIONS_PANEL)	4
39416	mActivity.getWindow().requestFeature(featureId)	4
40173	mActivity.getWindow().setContentView(layoutResId)	4
40116	mActivity.getWindow().setContentView(view,params)	4
39956	mActivity.getWindow().setTitle(title)	4
39859	mActivity.getWindow().setUiOptions(uiOptions)	4
39840	mActivity.getWindow().setUiOptions(uiOptions,mask)	4
38915	mActivity.isChild())	4
39428	mActivity.setProgress(progress)	4
39708	mActivity.setProgressBarIndeterminate(indeterminate)	4
40155	mActivity.setProgressBarIndeterminateVisibility(visible)	4
39759	mActivity.setProgressBarVisibility(visible)	4
39627	mActivity.setSecondaryProgress(secondaryProgress)	4
64374	mActivity.startActionMode(wrapped)	1
49042	mActivityChooserContent	4
49074	mActivityChooserContent.getBackground()	4
48918	mActivityChooserContent.layout(0,0,right	4
49651	mActivityChooserContent.setBackgroundDrawable(mActivityChooserContentBackground)	5
49166	mActivityChooserContent.setBackgroundDrawable(null)	5
49387	mActivityChooserContent.setPadding(0,0,0,0)	5
49173	mActivityChooserContentBackground	4
48713	mActivityChoserModelPolicy	7
48914	mActivityChoserModelPolicy.onChooseActivity(this,	4
13164	mActivityRule	7
13643	mActivityRule.getActivity()	9
13681	mActivityRule.launchActivity(intent)	6
13830	mActivityRule.launchActivity(new	4
13074	mActivityRule.runOnUiThread(new	3
20022	mActivityRunning	20
48414	mActivitySorter	7
49027	mActivitySorter.sort(mIntent,mActivites,	4
32884	mAdapter	34
46164	mAdapter)	4
48027	mAdapter,getBackground()),	4
51147	mAdapter.addAccount(acc1)	3
36232	mAdapter.addAccount(first)	5
36287	mAdapter.addAccount(second)	6
32634	mAdapter.close()	7
32858	mAdapter.deleteAllAccounts()	5
36094	mAdapter.deleteAllRecords()	8
44687	mAdapter.findExpandedIndex()	4
36081	mAdapter.getAccount("simile")	5
49419	mAdapter.getActivityCount()	4
32831	mAdapter.getAllAccounts()	4
51140	mAdapter.getAllTransactionsForAccount(ALPHA_ACCOUNT_UID)	5
46392	mAdapter.getCount()	8
45962	mAdapter.getCount())	4
49538	mAdapter.getDataModel()	5
49054	mAdapter.getDataModel().chooseActivity(index)	4
48862	mAdapter.getDataModel().chooseActivity(position)	4
49659	mAdapter.getDataModel().getActivityIndex(defaultActivity)	4
49354	mAdapter.getDataModel().setDefaultActivity(position)	4
49375	mAdapter.getDefaultActivity()	4
48093	mAdapter.getDropDownView(position,convertView,parent)	4
49404	mAdapter.getHistorySize()	4
47787	mAdapter.getItem(position)	4
48134	mAdapter.getItemId(position)	4
47428	mAdapter.getItemViewType(position)	4
48997	mAdapter.getShowDefaultActivity()	4
47023	mAdapter.getView(i,null,mDropDownList)	4
47950	mAdapter.getView(position,null,this)	4
46097	mAdapter.getView(selectedPosition,null,this)	4
48072	mAdapter.hasStableIds()	4
44429	mAdapter.notifyDataSetChanged()	8
49168	mAdapter.notifyDataSetInvalidated()	4
45911	mAdapter.registerDataSetObserver(mDataSetObserver)	4
49536	mAdapter.registerDataSetObserver(new	4
47871	mAdapter.registerDataSetObserver(observer)	4
49654	mAdapter.setDataModel(dataModel)	4
49006	mAdapter.setMaxActivityCount(maxActivityCount	4
49484	mAdapter.setMaxActivityCount(maxActivityCount)	4
48893	mAdapter.setShowDefaultActivity(false,false)	4
49476	mAdapter.setShowDefaultActivity(true,defaultActivityButtonShown)	4
49195	mAdapter.setShowFooterView(false)	4
49031	mAdapter.setShowFooterView(true)	4
46398	mAdapter.unregisterDataSetObserver(mDataSetObserver)	4
46768	mAdapter.unregisterDataSetObserver(mObserver)	4
47844	mAdapter.unregisterDataSetObserver(observer)	4
44495	mAdapterMenu	4
44732	mAdapterMenu.getNonActionItems()	4
44432	mAdapterMenu.getVisibleItems()	4
18824	mAddAccountFragment	14
64329	mAddAccountFragment.dismiss()	1
51363	mAddAccountFragment.setArguments(args)	3
51364	mAddAccountFragment.setTargetFragment(this,DIALOG_ADD_ACCOUNT)	5
64187	mAddAccountFragment.show(ft,"add_account_dialog")	2
51372	mAddAccountFragment.show(ft,AccountsActivity.FRAGMENT_NEW_ACCOUNT)	4
55172	mAddAccountFragment.show(ft,FRAGMENT_NEW_ACCOUNT)	4
9613	mAddBudgetAmount	8
53859	mAddBudgetAmount.setOnClickListener(new	5
57421	mAddBudgetAmount.setText("Add	3
57475	mAddBudgetAmount.setText("Edit	3
33378	mAddSplit	11
31826	mAddSplit.setOnClickListener(new	17
53476	mAdvanceCreateDays	2
53644	mAdvanceNotifyDays	2
42719	mAfter	4
27438	mAlertDialog	3
45874	mAllCaps	5
47598	mAllowCollapse	4
43240	mAllowTextWithIcon	4
43289	mAlpha	4
4478	mAmount	46
35720	mAmount.absolute().equals(other.mAmount.absolute())	9
36473	mAmount.add(addend.mAmount)	7
26333	mAmount.add(money.mAmount)	3
6901	mAmount.asString()	14
53431	mAmount.compareTo(BigDecimal.ZERO)	6
26249	mAmount.compareTo(another.mAmount)	22
26394	mAmount.compareTo(new	4
26372	mAmount.divide(divisor.mAmount)	6
36333	mAmount.divide(divisor.mAmount,mCommodity.getSmallestFractionDigits(),ROUNDING_MODE)	6
26548	mAmount.doubleValue()	6
54878	mAmount.equals(BigDecimal.ZERO)	6
35683	mAmount.formattedString(Locale.getDefault())	3
35660	mAmount.getCurrency().getCurrencyCode()	13
26354	mAmount.hashCode())	3
36064	mAmount.intValue()	7
54437	mAmount.intValueExact()	4
26193	mAmount.multiply(money.mAmount)	8
23600	mAmount.multiply(new	7
52070	mAmount.negate().asString()	6
23535	mAmount.scale()	10
23853	mAmount.scaleByPowerOfTen(getScale()).intValueExact()	5
23594	mAmount.scaleByPowerOfTen(getScale()).longValueExact()	11
23451	mAmount.scaleByPowerOfTen(mCurrency.getDefaultFractionDigits()).intValueExact()	5
26295	mAmount.setCurrency(currency)	2
23875	mAmount.setScale(2,RoundingMode.HALF_EVEN)	2
26402	mAmount.setScale(DECIMAL_PLACES,ROUNDING_MODE).toPlainString()	10
36187	mAmount.setScale(commodity.getSmallestFractionDigits(),ROUNDING_MODE).toPlainString()	6
36384	mAmount.setScale(mCommodity.getSmallestFractionDigits(),ROUNDING_MODE).toPlainString()	4
53570	mAmount.setScale(mCommodity.getSmallestFractionDigits(),RoundingMode.HALF_EVEN)	2
36067	mAmount.setScale(mCurrency.getDefaultFractionDigits(),ROUNDING_MODE).toPlainString()	11
61798	mAmount.stripTrailingZeros().toPlainString()	4
26604	mAmount.subtract(money.mAmount)	3
36215	mAmount.subtract(subtrahend.mAmount)	7
26221	mAmount.toPlainString()	2
35623	mAmount.toString()	15
23955	mAmount.toString())	11
35776	mAmount.withCurrency(currency)	4
9574	mAmountEditText	36
13407	mAmountEditText.addTextChangedListener(mAmountInputFormatter)	18
19120	mAmountEditText.addTextChangedListener(new	8
23739	mAmountEditText.addTextChangedListener(this)	4
19185	mAmountEditText.addTextChangedListener(validations)	5
56701	mAmountEditText.bindListeners((KeyboardView)	6
52776	mAmountEditText.bindListeners(mKeyboardView)	11
56731	mAmountEditText.getCalculatorKeyboard().hideCustomKeyboard()	8
52853	mAmountEditText.getCalculatorKeyboard().showCustomKeyboard(v)	11
52951	mAmountEditText.getCompoundDrawables()[DRAWABLE_RIGHT].getBounds().width()))	19
56598	mAmountEditText.getError()	9
23605	mAmountEditText.getText().toString()	26
12465	mAmountEditText.getValue()	25
56667	mAmountEditText.isInputModified()	4
25844	mAmountEditText.isInputValid()	4
26187	mAmountEditText.isInputValid())	4
52725	mAmountEditText.onTouchEvent(event)	9
24017	mAmountEditText.removeTextChangedListener(this)	5
12095	mAmountEditText.setCommodity(commodity)	8
59084	mAmountEditText.setCompoundDrawablesWithIntrinsicBounds(0,0,0,0)	6
54969	mAmountEditText.setDefaultTouchListener()	8
31798	mAmountEditText.setEnabled(b)	6
24810	mAmountEditText.setEnabled(false)	15
25093	mAmountEditText.setEnabled(mSplitsList.size()	17
56625	mAmountEditText.setError("Invalid	9
54981	mAmountEditText.setFocusable(false)	11
54960	mAmountEditText.setFocusable(true)	11
54916	mAmountEditText.setOnClickListener(new	11
55034	mAmountEditText.setOnClickListener(null)	11
56607	mAmountEditText.setOnFocusChangeListener(new	9
52727	mAmountEditText.setOnTouchListener(mAmountEditTextTouchListener)	8
56644	mAmountEditText.setOnTouchListener(new	15
54914	mAmountEditText.setOnTouchListener(null)	8
23908	mAmountEditText.setSelection(current.length())	5
56683	mAmountEditText.setSelection(newText.length())	7
23887	mAmountEditText.setText("0")	2
56618	mAmountEditText.setText(Double.toString(expression.evaluate()))	9
18686	mAmountEditText.setText(Double.toString(mTransaction.getAmount()	2
18995	mAmountEditText.setText(Double.toString(mTransaction.getAmount()))	4
32868	mAmountEditText.setText(balance.toPlainString())	16
36106	mAmountEditText.setText(changedSignText)	6
23520	mAmountEditText.setText(current)	5
23351	mAmountEditText.setText(decimal.negate().toPlainString())	2
23728	mAmountEditText.setText(mAmountEditText.getText().toString())	2
7373	mAmountEditText.setText(mTransaction.getAmount().toPlainString())	13
35993	mAmountEditText.setText(mTransaction.getBalance(accountUID).toPlainString())	6
52859	mAmountEditText.setText(mTransaction.getBalance(mAccountUID).formattedAmount())	7
52911	mAmountEditText.setText(mTransaction.getBalance(mAccountUID).toPlainString())	10
35862	mAmountEditText.setText(money.toPlainString())	4
56737	mAmountEditText.setText(newText)	7
33850	mAmountEditText.setText(splitList.get(0).getAmount().toPlainString())	7
61803	mAmountEditText.setText(splitList.get(0).getValue().toPlainString())	6
23947	mAmountEditText.setTextColor(green)	11
24037	mAmountEditText.setTextColor(red)	8
62490	mAmountEditText.setValue(amount.negate())	3
60351	mAmountEditText.setValue(balance.asBigDecimal())	6
10648	mAmountEditText.setValue(mTransaction.getBalance(mAccountUID).asBigDecimal())	9
62488	mAmountEditText.setValue(splitList.get(0).getValue().asBigDecimal())	3
52933	mAmountEditTextTouchListener	7
13779	mAmountInputFormatter	24
56695	mAmountInputFormatter.isInputModified()	9
35976	mAmountManuallyEdited	8
44739	mAnchorView	4
44234	mAnchorView.getViewTreeObserver()	4
45202	mAnimateInOnLayout	5
41300	mAnimatedValue	7
47282	mAnimation	4
47201	mAnimation.getTransformation(time,mTransformation)	4
47439	mAnimation.setDuration(mDuration)	4
47513	mAnimation.setInterpolator(mInterpolator)	4
46593	mAnimation.setRepeatCount(Animation.INFINITE)	4
47081	mAnimation.setRepeatMode(mBehavior)	4
46918	mAnimation.setStartTime(Animation.START_ON_FIRST_FRAME)	4
45076	mAnimationMode	5
46863	mAnimationResolution	4
46688	mAnimationResolution)	4
41032	mAnimatorSet	4
40850	mAnimatorSet.mNodeMap.get(animation)	4
41075	mAnimatorSet.mPlayingSet.add(mNode.animation)	4
40824	mAnimatorSet.mSortedNodes	4
40699	mAnimatorSet.mStarted	4
48886	mAppSearchData	6
9677	mAppWidgetId	15
56855	mAppWidgetId,	3
63410	mAppWidgetId,accountId)	5
9440	mAppWidgetId,accountUID)	13
10013	mAppWidgetId,hideAccountBalance)	4
9892	mAppWidgetId,shouldDisplayBalance)	4
60148	mAssetAccountTypes	3
60202	mAssetAccountTypes.add(AccountType.ASSET)	3
60101	mAssetAccountTypes.add(AccountType.BANK)	3
60211	mAssetAccountTypes.add(AccountType.CASH)	3
9955	mAssetsBalance	6
9412	mAssetsTableLayout	11
23589	mAutoBalanceSplits	18
26045	mAutoBalanceSplits)	11
25524	mAutoBalanceSplits.add(imbSplit)	11
34111	mAutoBalanceSplits.add(mTransaction.autoBalanceImportAccount())	3
64137	mAutoBalanceSplits.addAll(autoBalanceSplits)	3
53441	mAutoCreate	5
53546	mAutoNotify	5
43493	mBackground	8
45762	mBackground.draw(canvas)	4
45165	mBackground.setBounds(mActionBarView.getLeft(),mActionBarView.getTop(),	4
9533	mBalanceSheetButton	8
60162	mBalanceSheetButton.setOnClickListener(new	6
6665	mBalanceSum	8
6445	mBalanceSum)	5
33502	mBalanceUpdater	14
8042	mBarChartButton	12
50669	mBarChartButton.setOnClickListener(new	7
13814	mBaseAccount	9
13571	mBaseAccount.addTransaction(mTransaction)	2
57228	mBaseAccount.getUID())	3
60064	mBaseAccount.setCommodity(Commodity.DEFAULT_COMMODITY)	3
13285	mBaseAccount.setUID(DUMMY_ACCOUNT_UID)	6
62940	mBaseAccount.setUID(TRANSACTIONS_ACCOUNT_UID)	4
1691	mBaseAmount	35
13892	mBaseAmount.signum()	4
42599	mBefore	4
47322	mBehavior	4
46103	mBlockLayoutRequests	5
45865	mBlockLayoutRequests)	4
32741	mBook	3
32611	mBook.getUID()	3
32737	mBook.setDisplayName(booksDbAdapter.generateDefaultBookName())	5
32485	mBook.setRootAccountUID(mRootAccount.getUID())	5
9997	mBookNameTextView	9
63522	mBookNameTextView.setOnClickListener(new	4
32806	mBookNameTextView.setText(BooksDbAdapter.getInstance().getActiveBookDisplayName())	7
60246	mBookUID	3
7631	mBooksDbAdapter	24
32771	mBooksDbAdapter.addRecord(book)	4
32628	mBooksDbAdapter.addRecord(book,DatabaseAdapter.UpdateMethod.insert)	2
30356	mBooksDbAdapter.addRecord(book1)	3
30212	mBooksDbAdapter.addRecord(book2)	3
30165	mBooksDbAdapter.addRecord(book3)	2
7847	mBooksDbAdapter.deleteAllRecords()	5
32853	mBooksDbAdapter.deleteRecord(book.getUID())	2
30184	mBooksDbAdapter.deleteRecord(book2.getUID())	2
30332	mBooksDbAdapter.generateDefaultBookName()	2
59286	mBooksDbAdapter.getActiveBookUID())	9
32828	mBooksDbAdapter.getRecord(book1.getUID())	2
32665	mBooksDbAdapter.getRecord(mBooksDbAdapter.getActiveBookUID())	5
30252	mBooksDbAdapter.getRecordsCount()	8
32612	mBooksDbAdapter.setActive(book1.getUID())	2
32713	mBooksDbAdapter.setActive(book2.getUID())	2
19477	mBooksDbAdapter.setActive(bookUID)	17
9811	mBooksSpinner	6
8773	mBooksSpinner.getSelectedItemId()	7
50726	mBooksSpinner.setAdapter(booksCursorAdapter)	3
51011	mBooksSpinner.setOnItemSelectedListener(new	3
50632	mBooksSpinner.setSelection(position)	3
53575	mBudget	7
53518	mBudget.addBudgetAmount(mBudgetAmount)	2
54146	mBudget.getCompactedBudgetAmounts()	2
53753	mBudget.getNumberOfPeriods()	5
54088	mBudget.getRecurrence().getNumberOfPeriods(budgetPeriods)	5
54170	mBudget.getStartOfPeriod(periodNum),mBudget.getEndOfPeriod(periodNum))	2
53854	mBudget.getStartofCurrentPeriod(),mBudget.getEndOfCurrentPeriod())	2
53993	mBudget.setBudgetAmounts(extractBudgetAmounts())	5
57426	mBudget.setBudgetAmounts(mBudgetAmounts)	3
53378	mBudget.setDescription(characterString)	2
53863	mBudget.setDescription(mDescriptionInput.getText().toString().trim())	6
53721	mBudget.setName(characterString)	2
54035	mBudget.setName(name)	2
53494	mBudget.setNumberOfPeriods(Long.parseLong(characterString))	2
54162	mBudget.setRecurrence(RecurrenceParser.parse(mEventRecurrence))	4
53581	mBudget.setRecurrence(mRecurrence)	2
52114	mBudget.setRecurrence(recurrence)	4
9569	mBudgetAccountSpinner	5
57548	mBudgetAccountSpinner.setAdapter(mAccountsCursorAdapter)	3
57477	mBudgetAccountSpinner.setSelection(mAccountsCursorAdapter.getPosition(budgetAmount.getAccountUID()))	3
53361	mBudgetAmount	2
53484	mBudgetAmount.setAccountUID(characterString)	2
53477	mBudgetAmount.setAmount(Money.getZeroInstance())	2
53448	mBudgetAmount.setAmount(new	2
53442	mBudgetAmount.setPeriodNum(Long.parseLong(characterString))	2
53564	mBudgetAmountAccountUID	2
9428	mBudgetAmountInput	5
57464	mBudgetAmountInput.bindListeners(mKeyboardView)	3
57446	mBudgetAmountInput.getValue()	3
57545	mBudgetAmountInput.setError("Enter	3
57418	mBudgetAmountInput.setValue(budgetAmount.getAmount().asBigDecimal())	3
9489	mBudgetAmountLayout	5
57466	mBudgetAmountLayout.setVisibility(View.GONE)	3
57414	mBudgetAmountLayout.setVisibility(View.VISIBLE)	3
10025	mBudgetAmountTableLayout	9
53963	mBudgetAmountTableLayout,false)	5
53813	mBudgetAmountTableLayout.addView(budgetAmountView,0)	5
54079	mBudgetAmountTableLayout.removeView(itemView)	5
9581	mBudgetAmountViews	9
54129	mBudgetAmountViews)	6
53749	mBudgetAmountViews.add(budgetAmountView)	5
53726	mBudgetAmountViews.remove(itemView)	5
10667	mBudgetAmounts	9
53691	mBudgetAmounts)	2
53709	mBudgetAmounts.add(budgetAmount)	2
57455	mBudgetAmounts.get(0)	3
53961	mBudgetAmounts.get(position)	2
53897	mBudgetAmounts.size()	2
14581	mBudgetAmountsDbAdapter	11
52159	mBudgetAmountsDbAdapter.addRecord(budgetAmount)	4
52068	mBudgetAmountsDbAdapter.addRecord(budgetAmount,updateMethod)	2
52119	mBudgetAmountsDbAdapter.bulkAddRecords(budgetAmountList)	4
52251	mBudgetAmountsDbAdapter.bulkAddRecords(budgetAmountList,updateMethod)	2
54248	mBudgetAmountsDbAdapter.deleteAllRecords()	2
52071	mBudgetAmountsDbAdapter.deleteBudgetAmountsForBudget(budget.getUID())	4
53187	mBudgetAmountsDbAdapter.getBudgetAmountsForBudget(budgetUID)	2
8908	mBudgetDescriptionTextView	4
54093	mBudgetDescriptionTextView.setMaxLines(3)	2
54159	mBudgetDescriptionTextView.setText(description)	2
54142	mBudgetDescriptionTextView.setVisibility(View.GONE)	2
53618	mBudgetList	2
53703	mBudgetList.add(mBudget)	2
9027	mBudgetNameInput	8
53748	mBudgetNameInput.getText().toString()	5
54136	mBudgetNameInput.getText().toString().trim()	2
54108	mBudgetNameInput.setText(budget.getName())	2
9026	mBudgetNameTextView	4
53895	mBudgetNameTextView.setText(budget.getName())	2
9742	mBudgetRecurrence	4
54089	mBudgetRecurrence.setText(budget.getRecurrence().getRepeatString())	2
53992	mBudgetRecyclerAdapter	2
54060	mBudgetRecyclerAdapter.notifyDataSetChanged()	2
54150	mBudgetRecyclerAdapter.swapCursor(cursor)	2
54171	mBudgetRecyclerAdapter.swapCursor(null)	2
8971	mBudgetUID	9
8894	mBudgetsDbAdapter	24
54269	mBudgetsDbAdapter.addRecord(budget)	2
52239	mBudgetsDbAdapter.addRecord(mBudget)	6
52063	mBudgetsDbAdapter.addRecord(mBudget,DatabaseAdapter.UpdateMethod.insert)	2
53027	mBudgetsDbAdapter.buildModelInstance(cursor)	4
54318	mBudgetsDbAdapter.bulkAddRecords(budgets)	2
54270	mBudgetsDbAdapter.bulkAddRecords(bulkCreateBudgets())	2
52284	mBudgetsDbAdapter.bulkAddRecords(mBudgetList)	4
52250	mBudgetsDbAdapter.bulkAddRecords(mBudgetList,DatabaseAdapter.UpdateMethod.insert)	4
54182	mBudgetsDbAdapter.deleteAllRecords()	2
53280	mBudgetsDbAdapter.fetchAllRecords()	2
54394	mBudgetsDbAdapter.getAccountBudgets(mAccount.getUID())	2
53803	mBudgetsDbAdapter.getAttribute(mBudgetUID,DatabaseSchema.BudgetEntry.COLUMN_NAME)	5
54139	mBudgetsDbAdapter.getID(budget.getUID())	2
54017	mBudgetsDbAdapter.getRecord(budgetUID))	5
53911	mBudgetsDbAdapter.getRecord(mBudgetUID)	2
3441	mBulk	10
8457	mByDay	9
35070	mByDays	4
35200	mByDays)	3
13206	mCacheDir	12
29466	mCacheDir.getAbsolutePath()	11
29394	mCacheDir.mkdir()	11
34946	mCalculatorKeyboard	31
56508	mCalculatorKeyboard.evaluateEditTextExpression(mAmountEditText)	9
52898	mCalculatorKeyboard.hideCustomKeyboard()	11
52392	mCalculatorKeyboard.registerEditText(R.id.input_transaction_amount)	16
56539	mCalculatorKeyboard.setCurrency(Currency.getInstance(mAccountsDbAdapter.getCurrencyCode(mAccountUID)))	10
35225	mCalculatorKeyboard.showCustomKeyboard(v)	20
34697	mCalculatorKeyboardView	9
34599	mCalculatorKeysLayout	13
34554	mCalculatorKeysLayout)	13
34285	mCalendar	6
34254	mCalendar.get(Calendar.YEAR),mCalendar.get(Calendar.MONTH),mCalendar.get(Calendar.DAY_OF_MONTH))	5
34297	mCalendar.setTimeInMillis(time)	3
9379	mCalendarPickerView	5
56504	mCalendarPickerView.getSelectedDates()	6
56579	mCalendarPickerView.init(mStartRange,mEndRange)	3
40025	mCallback	16
39438	mCallback.onActionItemClicked(mActionMode,mActionMode.getMenu().findItem(item))	4
39898	mCallback.onActionItemClicked(this,item)	8
43542	mCallback.onCloseMenu(menu,allMenusAreClosing)	4
39475	mCallback.onCreateActionMode(mActionMode,mActionMode.getMenu())	4
39968	mCallback.onCreateActionMode(this,mMenu)	4
40270	mCallback.onDestroyActionMode(mActionMode)	5
39819	mCallback.onDestroyActionMode(this)	8
43823	mCallback.onMenuItemSelected(menu,item)	4
43762	mCallback.onMenuModeChange(this)	4
45188	mCallback.onNavigationItemSelected(position,id)	4
43525	mCallback.onOpenSubMenu(menu)	4
39816	mCallback.onPrepareActionMode(mActionMode,mActionMode.getMenu())	4
39511	mCallback.onPrepareActionMode(this,mMenu)	8
48954	mCallbacks	7
62153	mCallbacks.onGetPage(mPageKey)	3
48605	mCanReadHistoricalData	7
8669	mCancelButton	76
31601	mCancelButton.setOnClickListener(new	44
45471	mCanceled	8
43011	mCategoryOrder	9
60447	mChangeObserver	3
35	mChart	60
26730	mChart.animateX(2500)	4
62658	mChart.animateX(3000)	8
52915	mChart.animateX(ANIMATION_DURATION)	11
33910	mChart.animateXY(1800,1800)	11
51754	mChart.animateXY(ANIMATION_DURATION,ANIMATION_DURATION)	11
30055	mChart.animateY(ANIMATION_DURATION)	16
6782	mChart.clear()	24
30047	mChart.clearAnimation()	10
57287	mChart.getAxisLeft().addLimitLine(line)	2
20978	mChart.getAxisLeft().enableGridDashedLine(4.0f,4.0f,0)	30
24955	mChart.getAxisLeft().removeAllLimitLines()	7
30059	mChart.getAxisLeft().resetAxisMaxValue()	5
18486	mChart.getAxisLeft().setAxisMaxValue(10)	16
18100	mChart.getAxisLeft().setDrawLabels(false)	18
7414	mChart.getAxisLeft().setDrawLabels(mChartDataPresent)	20
26552	mChart.getAxisLeft().setStartAtZero(false)	10
8672	mChart.getAxisLeft().setValueFormatter(new	41
18094	mChart.getAxisRight().setEnabled(false)	36
33117	mChart.getData().getDataSet().getColors()	5
32965	mChart.getData().getDataSet().getYVals()	6
30136	mChart.getData().getDataSetByIndex(0)	15
32066	mChart.getData().getDataSetByIndex(dataSetIndex).getYVals())	7
30066	mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum()	21
57078	mChart.getData().getDataSetByIndex(dataSetIndex).getYValueSum())	7
57262	mChart.getData().getDataSets())	4
33267	mChart.getData().getXVals()	6
60175	mChart.getData().getXVals().get(e.getXIndex())	14
30133	mChart.getData().getXVals().get(entry.getXIndex())	15
24840	mChart.getData().getYValueSum()	20
61855	mChart.getData().setDrawValues(!mChart.isDrawSliceTextEnabled())	5
7818	mChart.getLegend()	53
18113	mChart.getLegend().setEnabled(!mChart.getLegend().isEnabled())	17
1885	mChart.getLegend().setEnabled(false)	34
2175	mChart.getLegend().setEnabled(true)	23
18284	mChart.getLegend().setForm(Legend.LegendForm.CIRCLE)	9
5057	mChart.getLegend().setForm(LegendForm.CIRCLE)	15
7585	mChart.getLegend().setPosition(Legend.LegendPosition.RIGHT_OF_CHART_CENTER)	14
18074	mChart.getLegend().setPosition(Legend.LegendPosition.RIGHT_OF_CHART_INSIDE)	9
32455	mChart.getLegend().setPosition(LegendPosition.BELOW_CHART_CENTER)	9
4323	mChart.getLegend().setPosition(LegendPosition.RIGHT_OF_CHART_CENTER)	16
8619	mChart.getLegend().setTextSize(14)	9
7864	mChart.getLegend().setTextSize(LEGEND_TEXT_SIZE)	13
5870	mChart.getLegend().setWordWrapEnabled(true)	24
7230	mChart.getXAxis().setDrawGridLines(false)	32
30038	mChart.getXAxis().setDrawLabels(false)	16
7544	mChart.getXAxis().setDrawLabels(mChartDataPresent)	20
62682	mChart.getXLabels()	3
60349	mChart.getYValueSum()	7
6569	mChart.getYValueSum())	6
7290	mChart.highlightValues(null)	36
1940	mChart.invalidate()	72
4529	mChart.notifyDataSetChanged()	24
6940	mChart.setCenterText("No	3
6489	mChart.setCenterText("Total\n"	4
50617	mChart.setCenterText(String.format(PieChartActivity.TOTAL_VALUE_LABEL_PATTERN,total,sum,currencySymbol))	4
25848	mChart.setCenterText(String.format(PieChartFragment.TOTAL_VALUE_LABEL_PATTERN,total,sum,currencySymbol))	9
5829	mChart.setCenterText(String.format(TOTAL_VALUE_LABEL_PATTERN,	6
26326	mChart.setCenterText(String.format(TOTAL_VALUE_LABEL_PATTERN,total,sum,currencySymbol))	9
20753	mChart.setCenterText(getResources().getString(R.string.label_chart_no_data))	20
20205	mChart.setCenterText(getResources().getString(R.string.label_chart_total)	8
5520	mChart.setCenterTextSize(18)	16
20716	mChart.setCenterTextSize(CENTER_TEXT_SIZE)	19
50900	mChart.setCenterTextSize(PieChartActivity.CENTER_TEXT_SIZE)	4
1290	mChart.setCenterTextSize(PieChartFragment.CENTER_TEXT_SIZE)	16
25154	mChart.setData(bd)	4
26668	mChart.setData(data)	6
2038	mChart.setData(getData(((ReportsActivity)	18
525	mChart.setData(getData((AccountType)	9
8601	mChart.setData(getData())	14
1332	mChart.setData(getData(accountType))	9
60384	mChart.setData(getData(forCurrentMonth))	5
29955	mChart.setData(getData(mAccountType))	5
3222	mChart.setData(getData(new	41
62690	mChart.setData(getDataSet())	3
58805	mChart.setData(getDataSet(Arrays.asList(AccountType.INCOME,AccountType.EXPENSE)))	3
58799	mChart.setData(getDataSet(new	4
24743	mChart.setData(getEmptyData())	15
51852	mChart.setData(getPieData(forCurrentMonth))	5
60112	mChart.setData(lineData)	3
24769	mChart.setData(mGroupSmallerSlices	12
6479	mChart.setData(new	10
24914	mChart.setData(pieData)	11
1760	mChart.setDescription("")	65
26935	mChart.setDragEnabled(true)	3
54458	mChart.setDrawBarShadow(false)	7
5212	mChart.setDrawLegend(!mChart.isDrawLegendEnabled())	5
4248	mChart.setDrawLegend(false)	6
61851	mChart.setDrawSliceText(!mChart.isDrawSliceTextEnabled())	5
6232	mChart.setDrawSliceText(false)	8
6420	mChart.setDrawValuesForWholeStack(false)	36
34308	mChart.setDrawXValues(!mChart.isDrawXValuesEnabled())	3
4394	mChart.setDrawYValues(false)	9
26837	mChart.setNoDataTextDescription("You	6
74	mChart.setOnChartValueSelectedListener(this)	60
26722	mChart.setPinchZoom(false)	3
27039	mChart.setScaleEnabled(true)	3
7187	mChart.setTouchEnabled(false)	30
24829	mChart.setTouchEnabled(mChartDataPresent)	15
5671	mChart.setTouchEnabled(true)	24
56994	mChart.setValueFormatter(new	4
34256	mChart.setValueTextColor(Color.BLACK)	5
34342	mChart.setValueTextSize(12)	5
19	mChartDataPresent	55
378	mChartDataTypeSpinner	7
1985	mChartDataTypeSpinner.getSelectedItem()	6
2182	mChartDataTypeSpinner.setAdapter(dataAdapter)	6
1442	mChartDataTypeSpinner.setOnItemSelectedListener(new	6
78	mChartDate	31
7000	mChartDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime()	23
6717	mChartDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime()	17
24872	mChartDate.minusMonths(1)	12
4365	mChartDate.minusMonths(1).dayOfMonth()	4
34324	mChartDate.minusMonths(1).dayOfMonth().withMaximumValue().withMillisOfDay(86399999).isAfter(mEarliestTransaction)))	3
24962	mChartDate.minusMonths(1).dayOfMonth().withMaximumValue().withMillisOfDay(86399999).isAfter(mEarliestTransactionDate)))	10
8430	mChartDate.minusMonths(3).dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime()	9
24905	mChartDate.plusMonths(1)	12
34313	mChartDate.plusMonths(1).dayOfMonth().withMinimumValue().withMillisOfDay(0).isBefore(mLatestTransaction))	3
24730	mChartDate.plusMonths(1).dayOfMonth().withMinimumValue().withMillisOfDay(0).isBefore(mLatestTransactionDate))	12
147	mChartDate.toDate().getTime(),	9
24857	mChartDate.toString(DATE_PATTERN)	8
33000	mChartDate.toString(datePattern)	8
24700	mChartDateTextView	16
24854	mChartDateTextView.setEnabled(mChartDataPresent)	8
1467	mChartDateTextView.setOnClickListener(new	8
34181	mChartDateTextView.setText("Overall")	4
33138	mChartDateTextView.setText(forCurrentMonth	11
34223	mChartDateTextView.setText(mChartDate.toString(datePattern))	4
24767	mChartDateTextView.setText(mTimePeriod	6
26112	mChartHasData	6
1609	mChartSliceInfo	9
60147	mChartSliceInfo.setText("")	6
60195	mChartSliceInfo.setText(String.format(SELECTED_VALUE_PATTERN,label,value,value	6
60145	mChartSliceInfo.setText(getResources().getString(R.string.label_chart_no_data))	6
43592	mCheckBox	4
43889	mCheckBox.setVisibility(GONE)	4
31046	mCheckBoxPreference	7
31358	mCheckBoxPreference.setChecked(false)	4
57636	mCheckBoxPreference.setChecked(flag)	2
31084	mCheckBoxPreference.setOnPreferenceChangeListener(new	7
31091	mCheckBoxPreference.setTitle(getString(R.string.title_passcode_disabled))	4
31128	mCheckBoxPreference.setTitle(getString(R.string.title_passcode_enabled))	4
30995	mCheckBoxPreference.setTitle(mCheckBoxPreference.isChecked()	7
33051	mCheckable	3
33302	mCheckable.isChecked()	3
33383	mCheckable.setChecked(b)	3
33376	mCheckable.toggle()	3
27591	mCheckmarkImage	3
27482	mCheckmarkImage.setVisibility(View.GONE)	3
27567	mCheckmarkImage.setVisibility(View.VISIBLE)	3
38898	mCircularProgressBar	6
39692	mCircularProgressBar.setVisibility(View.INVISIBLE)	4
48871	mClearingFocus	6
43269	mClickListener	9
43178	mClickListener.onMenuItemClick(this))	8
60410	mClient	7
60648	mClient.changeCursor((Cursor)	3
60476	mClient.convertToString((Cursor)	3
60584	mClient.getCursor()	3
60531	mClient.runQueryOnBackgroundThread(constraint)	3
63108	mClient.setCredentials(	4
45154	mClose	5
45116	mClose.findViewById(R.id.abs__action_mode_close_button)	4
45324	mClose.getLayoutParams()	4
45185	mClose.getLayoutParams()).leftMargin)	4
45708	mClose.getVisibility()	4
45301	mClose.setTranslationX(-mClose.getWidth()	4
49279	mCloseButton	5
50074	mCloseButton)	5
50411	mCloseButton.getDrawable().setState(hasText	5
49136	mCloseButton.setOnClickListener(mOnClickListener)	5
49686	mCloseButton.setVisibility(showClose	5
49986	mClosed	5
39075	mClosingActionMenu	4
48999	mCollapsedImeOptions	10
1488	mColor	12
1073	mColorCode	16
20524	mColorCode.trim().length()	13
9847	mColorSelectedListener	11
9506	mColorSquare	11
655	mColorSquare.setBackgroundColor(Color.LTGRAY)	12
922	mColorSquare.setBackgroundColor(Color.parseColor(account.getColorHexCode()))	4
1620	mColorSquare.setBackgroundColor(Color.parseColor(colorHex))	10
1661	mColorSquare.setBackgroundColor(account.getColor())	6
1694	mColorSquare.setBackgroundColor(color)	12
27174	mColorSquare.setOnClickListener(new	6
27209	mColors	3
14558	mColumns	5
61359	mCommodities	6
61328	mCommodities.add(commodity)	6
10800	mCommoditiesDbAdapter	50
52256	mCommoditiesDbAdapter.bulkAddRecords(mCommodities)	5
52300	mCommoditiesDbAdapter.bulkAddRecords(mCommodities,DatabaseAdapter.UpdateMethod.insert)	2
10527	mCommoditiesDbAdapter.getCommodity("USD")	2
11721	mCommoditiesDbAdapter.getCommodity(currency.getCurrencyCode())	5
11325	mCommoditiesDbAdapter.getCommodity(currencyCode)	9
36667	mCommoditiesDbAdapter.getCommodity(getDefaultCurrencyCode())	7
10289	mCommoditiesDbAdapter.getCommodity(transaction.getCurrencyCode())	6
62065	mCommoditiesDbAdapter.getCurrencyCode(mCommoditiesDbAdapter.getUID(id))	3
1545	mCommodity	33
11367	mCommodity.getCurrencyCode()	13
36407	mCommodity.getSmallestFractionDigits()	4
12546	mCommodity.getSymbol()	7
36573	mCommodityUID	15
61329	mCommodityUID)	3
10059	mConsumePageSelectedEvent	5
40311	mContainerView	4
39517	mContainerView.getHeight()	4
39380	mContainerView.getVisibility()	4
40221	mContainerView.requestLayout()	4
39833	mContainerView.setAlpha(0)	4
39823	mContainerView.setAlpha(1)	4
39615	mContainerView.setPrimaryBackground(d)	4
39579	mContainerView.setStackedBackground(d)	4
39981	mContainerView.setTabContainer(mTabScrollView)	4
39516	mContainerView.setTabContainer(null)	4
40164	mContainerView.setTabContainer(tabScroller)	4
39906	mContainerView.setTransitioning(false)	4
40108	mContainerView.setTransitioning(true)	4
40184	mContainerView.setTranslationY(-mContainerView.getHeight())	4
39482	mContainerView.setTranslationY(0)	4
40256	mContainerView.setVisibility(View.GONE)	4
39360	mContainerView.setVisibility(View.VISIBLE)	4
2940	mContent	42
30626	mContent.append(chars,start,length)	10
1228	mContent.setLength(0)	18
1455	mContent.toString().trim()	12
39754	mContentDesc	4
45667	mContentHeight	11
47733	mContentHeight))	4
38877	mContentParent	7
39523	mContentParent.addView(child)	4
39367	mContentParent.addView(view,params)	4
39649	mContentParent.removeAllViews()	4
39900	mContentView	4
39848	mContentView.setTranslationY(0)	4
7042	mContext	130
52046	mContext).finish()	3
13615	mContext).getCurrentAccountListFragment()	11
23610	mContext).getCurrentAccountListFragment().refresh()	6
59448	mContext).getSupportFragmentManager()	3
13519	mContext).refresh()	13
28253	mContext).runOnUiThread(new	6
19618	mContext.deleteDatabase(bookUID)	11
51143	mContext.getApplicationContext()	5
48223	mContext.getClassLoader().loadClass(className)	4
19875	mContext.getContentResolver().openInputStream(uris[0])	12
55801	mContext.getContentResolver().openOutputStream(exportUri)	2
49972	mContext.getContentResolver().query(uri,null,null,null,null)	5
32736	mContext.getContentResolver().query(uris[0],null,null,null,null)	3
43044	mContext.getPackageManager()	20
50832	mContext.getPackageManager().getDefaultActivityIcon()	5
50667	mContext.getPackageManager().getResourcesForApplication(authority)	5
49468	mContext.getPackageManager().queryIntentActivities(mIntent,0)	4
35258	mContext.getPackageManager().queryIntentActivities(shareIntent,0)	6
50244	mContext.getResources().getColorStateList(colorValue.resourceId)	5
42534	mContext.getResources().getDrawable(iconRes)	4
49743	mContext.getResources().getDrawable(outTypedValue.resourceId)	4
48251	mContext.getResources().getLayout(menuRes)	4
42938	mContext.getResources().getString(title)	4
32615	mContext.getSharedPreferences(	11
19958	mContext.getSharedPreferences(bookUID,Context.MODE_PRIVATE)	5
63133	mContext.getSharedPreferences(getString(R.string.owncloud_pref),Context.MODE_PRIVATE)	3
32619	mContext.getSharedPreferences(mContext.getString(R.string.owncloud_pref),Context.MODE_PRIVATE)	11
19744	mContext.getSharedPreferences(mImportedBookUID,Context.MODE_PRIVATE)	3
49422	mContext.getString(	4
50137	mContext.getString(R.string.abs__activity_chooser_view_see_all))	4
57334	mContext.getString(R.string.app_name)	9
55440	mContext.getString(R.string.description_export_email)	2
9372	mContext.getString(R.string.dropbox_app_key,BackupPreferenceFragment.DROPBOX_APP_KEY)	10
25464	mContext.getString(R.string.dropbox_app_key,SettingsActivity.DROPBOX_APP_KEY)	8
9054	mContext.getString(R.string.dropbox_app_secret,BackupPreferenceFragment.DROPBOX_APP_SECRET)	10
25167	mContext.getString(R.string.dropbox_app_secret,SettingsActivity.DROPBOX_APP_SECRET)	8
32577	mContext.getString(R.string.key_owncloud_dir),null)	11
57388	mContext.getString(R.string.label_export_target_external_service)	7
32822	mContext.getString(R.string.owncloud_pref),	11
32843	mContext.getString(R.string.owncloud_sync),false)	11
56746	mContext.getString(R.string.title_select_export_destination)))	3
6917	mContext.getString(R.string.toast_error_exporting),	9
7164	mContext.getString(R.string.toast_error_exporting_ofx)	5
31658	mContext.getString(R.string.toast_error_importing_accounts)	4
25516	mContext.getString(R.string.toast_export_error,mExportParams.getExportFormat().name())	7
9824	mContext.getString(R.string.toast_export_error,mExportParams.getExportFormat().name()),	13
51603	mContext.getString(R.string.toast_format_exported_to,mExportParams.getExportFormat().name())	5
7341	mContext.getString(R.string.toast_ofx_exported_to)	5
62235	mContext.getString(R.string.wizard_option_disable_crash_reports))	3
62145	mContext.getString(R.string.wizard_option_import_my_accounts),	3
62189	mContext.getString(R.string.wizard_option_let_me_handle_it))	3
49655	mContext.getString(resourceId)	4
56671	mContext.getSystemService(Activity.INPUT_METHOD_SERVICE)).hideSoftInputFromWindow(v.getWindowToken(),0)	4
35586	mContext.getSystemService(Context.ALARM_SERVICE)	4
49924	mContext.getSystemService(Context.SEARCH_SERVICE)	5
39394	mContext.getTheme()	4
49702	mContext.getTheme().resolveAttribute(R.attr.actionModeShareDrawable,outTypedValue,true)	4
49934	mContext.getTheme().resolveAttribute(R.attr.textColorSearchUrl,colorValue,true)	5
39850	mContext.getThemeResId()	4
48621	mContext.obtainStyledAttributes(attrs,	4
48988	mContext.openFileInput(mHistoryFileName)	4
49131	mContext.openFileOutput(mHistoryFileName,Context.MODE_PRIVATE)	4
31517	mContext.runOnUiThread(new	11
56761	mContext.startActivity(Intent.createChooser(shareIntent,	3
26916	mContext.startActivity(Intent.createChooser(shareIntent,mContext.getString(R.string.title_select_export_destination)))	15
6507	mContext.startActivity(Intent.createChooser(shareIntent,mContext.getString(R.string.title_share_ofx_with)))	6
49606	mContext.startActivity(launchIntent)	8
42504	mContext.startActivity(mIntent)	4
39982	mContextDisplayMode	4
39989	mContextView	12
40329	mContextView.animateToVisibility(toActionMode	4
39776	mContextView.closeMode()	4
39387	mContextView.getSubtitle()	8
40085	mContextView.getTitle()	8
39966	mContextView.initForMode(mode)	4
39749	mContextView.killMode()	4
39536	mContextView.onConfigurationChanged(newConfig)	4
39570	mContextView.sendAccessibilityEvent(AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED)	8
45276	mContextView.setContentHeight(getMeasuredHeight())	4
39758	mContextView.setCustomView(view)	8
39512	mContextView.setSubtitle(subtitle)	8
39948	mContextView.setTitle(title)	8
39696	mContextView.showOverflowMenu()	8
8032	mConvertedAmount	19
61982	mConvertedAmount.asBigDecimal().divide(mOriginAmount.asBigDecimal())	4
23998	mConvertedAmount.asBigDecimal().divide(mOriginAmount.asBigDecimal(),RoundingMode.HALF_EVEN)	7
24047	mConvertedAmount.getDenominator())	8
9779	mConvertedAmountCurrencyLabel	5
50687	mConvertedAmountCurrencyLabel.setText(mTargetCommodity.getCurrencyCode())	2
7977	mConvertedAmountCurrencyLabel.setText(mTargetCurrency.getCurrencyCode())	11
8085	mConvertedAmountCurrencyLabel.setText(mTargetCurrencyCode)	6
9924	mConvertedAmountInput	5
31555	mConvertedAmountInput.addTextChangedListener(new	8
12484	mConvertedAmountInput.addTextChangedListener(textChangeListener)	12
31478	mConvertedAmountInput.getText().toString()	8
31914	mConvertedAmountInput.requestFocus()	3
31797	mConvertedAmountInput.setEnabled(isChecked)	3
50875	mConvertedAmountInput.setText(formatter.format(convertedAmount))	7
36383	mConvertedAmountInput.setText(mOriginAmount.asBigDecimal().multiply(num).divide(denom,currencyCommodity.getSmallestFractionDigits(),BigDecimal.ROUND_HALF_EVEN).toString())	7
13038	mConvertedAmountInput.setText(mOriginAmount.asBigDecimal().multiply(num).divide(denom,mTargetCurrency.getDefaultFractionDigits(),BigDecimal.ROUND_HALF_EVEN).toString())	8
9475	mConvertedAmountInputLayout	12
31765	mConvertedAmountInputLayout.setError("The	6
58590	mConvertedAmountInputLayout.setError(getString(R.string.error_converted_amount_required))	5
31681	mConvertedAmountInputLayout.setError(getString(R.string.error_invalid_amount))	7
31855	mConvertedAmountInputLayout.setErrorEnabled(false)	3
31813	mConvertedAmountInputLayout.setErrorEnabled(isChecked)	3
9987	mConvertedAmountRadioButton	5
31865	mConvertedAmountRadioButton.setChecked(!isChecked)	3
32013	mConvertedAmountRadioButton.setOnCheckedChangeListener(new	5
9495	mCoordinatorLayout	6
9503	mCreateFloatingButton	9
21949	mCreateFloatingButton.setOnClickListener(new	7
38226	mCreatedMenus	5
38102	mCreatedMenus.get(i)	4
38261	mCreatedMenus.size()	4
20803	mCreatedTimestamp	11
9912	mCreditBalance	5
62318	mCreditBalance.setText("")	3
99	mCurrency	87
7535	mCurrency)	36
3058	mCurrency.getCurrencyCode()	26
20320	mCurrency.getDefaultFractionDigits()	24
58913	mCurrency.getSymbol()	4
26294	mCurrency.getSymbol(Locale.getDefault())	6
32859	mCurrency.getSymbol(locale)	14
26564	mCurrency.hashCode())	3
2130	mCurrencyCode	69
4812	mCurrencyCode))	3
2193	mCurrencyCodes	18
18735	mCurrencyCodes.get(mCurrencySpinner	11
19483	mCurrencyCodes.get(mCurrencySpinner.getSelectedItemPosition())	7
62836	mCurrencyConversionDone	4
32838	mCurrencyCount	9
32792	mCurrencyCount.entrySet())	7
59400	mCurrencyCount.put(currencyCode,1)	5
25903	mCurrencyCount.put(currencyCode,mCurrencyCount.get(currencyCode)	9
57106	mCurrencyEntries	6
64237	mCurrencyEntries.add(code	3
57003	mCurrencyEntryValues	6
64238	mCurrencyEntryValues.add(code)	3
9522	mCurrencySpinner	33
61944	mCurrencySpinner.getCount()	3
61935	mCurrencySpinner.getItemIdAtPosition(i))	3
36605	mCurrencySpinner.getSelectedItemId()	7
8365	mCurrencySpinner.setAdapter(arrayAdapter)	18
61880	mCurrencySpinner.setAdapter(commoditiesAdapter)	6
24252	mCurrencySpinner.setAdapter(currencyArrayAdapter)	12
58959	mCurrencySpinner.setAdapter(mCursorAdapter)	2
32795	mCurrencySpinner.setEnabled(false)	6
58991	mCurrencySpinner.setSelection((int)id	2
8461	mCurrencySpinner.setSelection(mCurrencyCodes.indexOf(currencyCode))	13
61886	mCurrencySpinner.setSelection(position)	3
8846	mCurrencyTextView	36
31684	mCurrencyTextView.setEnabled(b)	6
12639	mCurrencyTextView.setText(accountCommodity.getSymbol())	3
12302	mCurrencyTextView.setText(accountCurrency.getSymbol())	28
27238	mCurrencyTextView.setText(accountCurrency.getSymbol(Locale.getDefault()))	14
12911	mCurrencyTextView.setText(commodity.getSymbol())	3
18823	mCurrencyTextView.setText(currency.getSymbol(Locale.getDefault()))	25
58985	mCurrencyTextView.setText(mTransaction.getAmount().getCurrency().getSymbol())	2
35937	mCurrencyTextView.setText(mTransaction.getAmount().getCurrency().getSymbol(Locale.getDefault()))	7
11147	mCurrencyTextView.setText(mTransaction.getCommodity().getSymbol())	3
10662	mCurrencyTextView.setText(mTransaction.getCurrency().getSymbol())	6
24691	mCurrencyTextView.setText(mTransaction.getCurrency().getSymbol(Locale.getDefault()))	16
23507	mCurrencyTextView.setTextColor(green)	10
23948	mCurrencyTextView.setTextColor(red)	7
61246	mCurrencyUID	3
45300	mCurrentAnimation	5
45644	mCurrentAnimation.start()	4
46871	mCurrentDrawable	4
45813	mCurrentExpandedItem	5
46143	mCurrentExpandedItem)	4
59876	mCurrentFilter	3
59882	mCurrentFilter.equals(newFilter))	3
42219	mCurrentFraction	7
41873	mCurrentIteration	7
43730	mCurrentMenuInfo	7
40304	mCurrentModeAnim	4
39652	mCurrentModeAnim.end()	4
40496	mCurrentNode	4
41132	mCurrentNode.addDependency(dependency)	4
9518	mCurrentPageSequence	8
62027	mCurrentPageSequence)	3
62024	mCurrentPageSequence.get(i)	3
62149	mCurrentPageSequence.get(i).createFragment()	3
62246	mCurrentPageSequence.size()	4
62165	mCurrentPageSequence.size())	3
39588	mCurrentShowAnim	4
40128	mCurrentShowAnim.end()	4
51238	mCurrentTime	7
63563	mCurrentTime.setTimeInMillis(timeMillis)	2
2812	mCursor	78
27180	mCursor)	9
63146	mCursor,	2
2362	mCursor,from,to,0)	11
10183	mCursor.close()	19
27502	mCursor.getCount()	9
60528	mCursor.getLong(mRowIDColumn)	3
3980	mCursorAdapter	101
55148	mCursorAdapter.close()	2
8503	mCursorAdapter.getCount()	44
18391	mCursorAdapter.notifyDataSetChanged()	22
2530	mCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	45
18468	mCursorAdapter.swapCursor(cursor)	20
64011	mCursorAdapter.swapCursor(data)	2
18245	mCursorAdapter.swapCursor(null)	21
60507	mCursorFilter	3
36164	mCusip	11
60982	mCusip)	6
45444	mCustomNavView	4
45645	mCustomNavView.getParent()	4
46458	mCustomNavView.setVisibility(GONE)	4
46018	mCustomNavView.setVisibility(VISIBLE)	4
39620	mCustomView	17
39770	mCustomView.get()	8
45686	mCustomView.getLayoutParams()	4
45043	mCustomView.measure(MeasureSpec.makeMeasureSpec(customWidth,customWidthMode),	4
62180	mCutOffPage	4
45902	mDataChanged	9
49194	mDataModel	5
49254	mDataModel.getActivity(position)	4
49390	mDataModel.getActivityCount()	4
48842	mDataModel.getDefaultActivity()	4
48884	mDataModel.getHistorySize()	4
46370	mDataSetObserver	7
60463	mDataValid	3
18950	mDatabaseAdapter	48
51997	mDatabaseAdapter).fetchAllAccounts()	6
30396	mDatabaseAdapter).fetchAllRecords()	6
18695	mDatabaseAdapter).fetchAllRecurringTransactions()	11
33777	mDatabaseAdapter).fetchAllScheduledTransactions()	2
29416	mDatabaseAdapter).fetchAllTransactionsForAccount(accountID)	5
31473	mDatabaseAdapter).fetchAllTransactionsForAccount(accountUID)	5
31383	mDatabaseAdapter).fetchAllTransactionsForAccount(mAccountUid)	2
27793	mDatabaseAdapter).fetchFavoriteAccounts()	3
27768	mDatabaseAdapter).fetchRecentAccounts(10)	3
26700	mDatabaseAdapter).fetchSubAccounts(mParentAccountId)	16
24521	mDatabaseAdapter).fetchSubAccounts(mParentAccountUID)	5
27646	mDatabaseAdapter).fetchTopLevelAccounts()	10
19208	mDatabaseAdapter.addAccount(mAccount)	12
31344	mDatabaseAdapter.close()	5
53826	mDatabaseAdapter.fetchAllRecords(	7
30446	mDatabaseAdapter.fetchAllRecords()	9
54020	mDatabaseAdapter.fetchAllRecords(null,null,DatabaseSchema.BudgetEntry.COLUMN_NAME	2
13432	mDate	56
35978	mDate.get(Calendar.DAY_OF_MONTH),	7
23704	mDate.get(Calendar.MONTH),	15
24045	mDate.get(Calendar.YEAR),	17
23327	mDate.set(Calendar.DAY_OF_MONTH,dayOfMonth)	5
23999	mDate.set(Calendar.MONTH,monthOfYear)	4
23909	mDate.set(Calendar.YEAR,year)	6
63562	mDate.setTimeInMillis(dateMillis)	4
127	mDateRange	5
924	mDateRange.add(iteratorDate)	7
215	mDateRange.add(new	7
1271	mDateRange.clear()	7
1593	mDateRange.get(position)	7
652	mDateRange.size()	6
1581	mDateRangeAdapter	6
1200	mDateRangeAdapter.notifyDataSetChanged()	6
21507	mDateRangeDenomination	5
1453	mDateRangeInterval	5
1321	mDateRangeRecyclerView	5
262	mDateRangeRecyclerView.setAdapter(mDateRangeAdapter)	5
551	mDateRangeRecyclerView.setLayoutManager(layoutManager)	5
56499	mDateRangeSetListener	6
56596	mDateRangeSetListener.onDateRangeSet(startDate,endDate)	6
55118	mDateSetListener	6
63565	mDateSetListener,cal.get(Calendar.YEAR),	2
8959	mDateTextView	21
31802	mDateTextView.setEnabled(b)	6
13998	mDateTextView.setOnClickListener(new	26
23912	mDateTextView.setText(DATE_FORMATTER.format(cal.getTime()))	6
10375	mDateTextView.setText(DATE_FORMATTER.format(mTransaction.getTimeMillis()))	21
24026	mDateTextView.setText(DATE_FORMATTER.format(time))	9
59123	mDayMonthDateFormat	4
59161	mDayMonthDateFormat.format(new	4
9874	mDb	48
13139	mDb.beginTransaction()	68
30719	mDb.close()	18
50997	mDb.compileStatement("DELETE	9
14165	mDb.compileStatement("INSERT	2
14095	mDb.compileStatement("REPLACE	27
14080	mDb.compileStatement("UPDATE	2
5665	mDb.compileStatement(sql)	27
52429	mDb.delete(	8
24048	mDb.delete(AccountEntry.TABLE_NAME,null,null)	29
35395	mDb.delete(DatabaseHelper.ACCOUNTS_TABLE_NAME,null,null)	10
35447	mDb.delete(DatabaseHelper.TRANSACTIONS_TABLE_NAME,	5
35324	mDb.delete(DatabaseHelper.TRANSACTIONS_TABLE_NAME,null,null)	9
57550	mDb.delete(DatabaseSchema.BudgetAmountEntry.TABLE_NAME,null,null)	3
57503	mDb.delete(DatabaseSchema.BudgetEntry.TABLE_NAME,null,null)	3
23672	mDb.delete(DatabaseSchema.PriceEntry.TABLE_NAME,null,null)	7
57511	mDb.delete(DatabaseSchema.RecurrenceEntry.TABLE_NAME,null,null)	3
50631	mDb.delete(DatabaseSchema.ScheduledActionEntry.TABLE_NAME,null,null)	9
2888	mDb.delete(SplitEntry.TABLE_NAME,	25
30782	mDb.delete(SplitEntry.TABLE_NAME,SplitEntry._ID	4
35351	mDb.delete(SplitEntry.TABLE_NAME,null,null)	15
20824	mDb.delete(TransactionEntry.TABLE_NAME,	8
30925	mDb.delete(TransactionEntry.TABLE_NAME,TransactionEntry._ID	3
35360	mDb.delete(TransactionEntry.TABLE_NAME,null,null)	13
53247	mDb.delete(mTableName,BudgetAmountEntry.COLUMN_BUDGET_UID	2
25018	mDb.delete(mTableName,DatabaseSchema.CommonColumns._ID	3
51546	mDb.delete(mTableName,ScheduledActionEntry.COLUMN_UID	4
30804	mDb.delete(mTableName,null,null)	1
62650	mDb.delete(mTableName,where,null)	4
35419	mDb.delete(tableName,DatabaseHelper.KEY_ROW_ID	6
24527	mDb.delete(tableName,DatabaseSchema.CommonColumns._ID	7
24453	mDb.delete(tableName,null,null)	9
18857	mDb.endTransaction()	37
21644	mDb.execSQL("CREATE	20
59152	mDb.execSQL("PRAGMA	8
62616	mDb.execSQL(rawDeleteQuery,new	2
33986	mDb.insert(AccountEntry.TABLE_NAME,null,contentValues)	13
26641	mDb.insert(DatabaseHelper.ACCOUNTS_TABLE_NAME,null,contentValues)	10
35544	mDb.insert(DatabaseHelper.TRANSACTIONS_TABLE_NAME,null,contentValues)	2
35574	mDb.insert(SplitEntry.TABLE_NAME,null,contentValues)	5
35440	mDb.insert(TransactionEntry.TABLE_NAME,null,contentValues)	5
51150	mDb.isOpen()	6
24119	mDb.query(	20
23684	mDb.query("trans_extra_info",	21
57252	mDb.query("trans_split_acct",	4
1623	mDb.query(AccountEntry.TABLE_NAME,	43
24478	mDb.query(AccountEntry.TABLE_NAME,new	13
2898	mDb.query(DatabaseHelper.ACCOUNTS_TABLE_NAME,	53
64331	mDb.query(DatabaseHelper.ACCOUNTS_TABLE_NAME,new	1
59026	mDb.query(DatabaseHelper.CURRENCIES_TABLE_NAME,null,	2
18554	mDb.query(DatabaseHelper.TRANSACTIONS_TABLE_NAME,	26
24561	mDb.query(DatabaseSchema.AccountEntry.TABLE_NAME,	11
51927	mDb.query(DatabaseSchema.CommodityEntry.TABLE_NAME,	3
64160	mDb.query(DatabaseSchema.TransactionEntry.TABLE_NAME	2
12645	mDb.query(PriceEntry.TABLE_NAME,null,	4
51507	mDb.query(ScheduledActionEntry.TABLE_NAME,	4
19706	mDb.query(ScheduledActionEntry.TABLE_NAME,null,	10
20131	mDb.query(ScheduledEventEntry.TABLE_NAME,null,	5
19031	mDb.query(SplitEntry.TABLE_NAME	23
13901	mDb.query(SplitEntry.TABLE_NAME,	17
24109	mDb.query(TransactionEntry.TABLE_NAME	15
3409	mDb.query(TransactionEntry.TABLE_NAME,	35
20566	mDb.query(TransactionEntry.TABLE_NAME,null,	11
23691	mDb.query(mTableName,	29
23524	mDb.query(mTableName,new	20
33799	mDb.query(mTableName,null,CommonColumns.COLUMN_UID	2
30970	mDb.query(mTableName,null,DatabaseSchema.CommonColumns._ID	3
61945	mDb.query(mTableName,null,null,null,null,null,	6
25484	mDb.query(mTableName,null,where,whereArgs,null,null,null)	4
53101	mDb.query(mTableName,null,where,whereArgs,null,null,orderBy)	2
30857	mDb.query(tableName,	12
35418	mDb.query(tableName,null,DatabaseHelper.KEY_ROW_ID	6
30825	mDb.query(tableName,null,DatabaseSchema.CommonColumns._ID	7
24223	mDb.query(true,AccountEntry.TABLE_NAME,new	14
7350	mDb.query(true,DatabaseHelper.TRANSACTIONS_TABLE_NAME,	8
57522	mDb.query(true,TransactionEntry.TABLE_NAME	9
55243	mDb.query(true,mTableName,new	3
19092	mDb.rawQuery(query,null)	9
24595	mDb.rawQuery(queryCount,new	10
20669	mDb.rawQuery(queryCount,null)	11
18456	mDb.rawQuery(querySum,new	10
14385	mDb.rawQuery(sql,new	6
31130	mDb.replace(AccountEntry.TABLE_NAME,null,contentValues)	11
61517	mDb.replace(ScheduledActionEntry.TABLE_NAME,null,contentValues)	5
33785	mDb.replace(ScheduledEventEntry.TABLE_NAME,null,contentValues)	5
20548	mDb.replace(SplitEntry.TABLE_NAME,null,contentValues)	8
54577	mDb.replace(TransactionEntry.TABLE_NAME,null,contentValues)	7
59830	mDb.replace(mTableName,null,buildContentValues(model))	5
56587	mDb.replaceOrThrow(SplitEntry.TABLE_NAME,null,contentValues)	7
56503	mDb.replaceOrThrow(TransactionEntry.TABLE_NAME,null,contentValues)	7
2680	mDb.setTransactionSuccessful()	48
24517	mDb.update(	11
24320	mDb.update(AccountEntry.TABLE_NAME,	6
35358	mDb.update(AccountEntry.TABLE_NAME,contentValues,	5
24236	mDb.update(AccountEntry.TABLE_NAME,contentValues,null,null)	4
35307	mDb.update(DatabaseHelper.ACCOUNTS_TABLE_NAME,	4
26696	mDb.update(DatabaseHelper.ACCOUNTS_TABLE_NAME,contentValues,	12
34571	mDb.update(DatabaseHelper.ACCOUNTS_TABLE_NAME,contentValues,DatabaseHelper.KEY_ROW_ID	4
27753	mDb.update(DatabaseHelper.ACCOUNTS_TABLE_NAME,contentValues,null,null)	6
27712	mDb.update(DatabaseHelper.TRANSACTIONS_TABLE_NAME,	10
35587	mDb.update(DatabaseHelper.TRANSACTIONS_TABLE_NAME,contentValues,DatabaseHelper.KEY_ROW_ID	2
14142	mDb.update(ScheduledActionEntry.TABLE_NAME,contentValues,where,whereArgs)	8
35327	mDb.update(SplitEntry.TABLE_NAME,	5
35496	mDb.update(SplitEntry.TABLE_NAME,contentValues,	5
35313	mDb.update(TransactionEntry.TABLE_NAME,	5
35487	mDb.update(TransactionEntry.TABLE_NAME,contentValues,TransactionEntry._ID	5
24219	mDb.update(TransactionEntry.TABLE_NAME,contentValues,whereClause,whereArgs)	8
20119	mDb.update(mTableName,contentValues,	6
19879	mDb.update(mTableName,contentValues,BookEntry.COLUMN_UID	9
59577	mDb.update(mTableName,contentValues,CommonColumns.COLUMN_UID	1
19968	mDb.update(mTableName,contentValues,null,null)	6
62618	mDb.update(mTableName,contentValues,where,whereArgs)	2
20490	mDb.update(tableName,contentValues,	8
19759	mDbAdapter	11
19737	mDbAdapter.addAccount(mAccount)	9
30972	mDbAdapter.buildTransactionInstance(cursor)	2
29255	mDbAdapter.close()	4
59005	mDbAdapter.fetchAllRecords(DatabaseHelper.CURRENCIES_TABLE_NAME)	2
51359	mDbAdapter.getAccount(mSelectedAccountId)	4
63745	mDbAdapter.getAccount(mSelectedId)	2
14007	mDbHelper	67
13684	mDbHelper.close()	20
13331	mDbHelper.getReadableDatabase()	28
50784	mDbHelper.getReadableDatabase().close()	10
13411	mDbHelper.getWritableDatabase()	37
9043	mDbxAccountManager	15
9701	mDbxAccountManager.startLink(getActivity(),0)	9
9968	mDbxAccountManager.startLink(getActivity(),REQUEST_LINK_TO_DBX)	5
51535	mDbxAccountManager.startLink(this,REQUEST_LINK_TO_DBX)	5
9952	mDbxAccountManager.unlink()	10
10049	mDbxAcctMgr	11
8833	mDebitBalance	5
62367	mDebitBalance.setText("")	3
52928	mDecimalSeparator	13
39099	mDecor	8
40053	mDecor.addView(in,new	4
39606	mDecor.getChildAt(0)	4
40235	mDecor.getChildCount()	4
39433	mDecor.post(new	4
39508	mDecor.removeAllViews()	4
39473	mDecor.removeView(child)	4
40010	mDecor.setId(View.NO_ID)	4
4402	mDefaulTransferAccountSpinner	17
24226	mDefaulTransferAccountSpinner.getCount()	7
13924	mDefaulTransferAccountSpinner.getSelectedItemId()	12
27050	mDefaulTransferAccountSpinner.setAdapter(mDefaultTransferAccountCursorAdapter)	8
26678	mDefaulTransferAccountSpinner.setAdapter(mParentAccountCursorAdapter)	7
31339	mDefaulTransferAccountSpinner.setEnabled(enableTransferAccount)	7
5354	mDefaulTransferAccountSpinner.setEnabled(false)	13
5392	mDefaulTransferAccountSpinner.setEnabled(isChecked)	10
4321	mDefaulTransferAccountSpinner.setEnabled(true)	11
27569	mDefaulTransferAccountSpinner.setSelection(pos)	10
4442	mDefaulTransferAccountSpinner.setVisibility(View.INVISIBLE)	4
5301	mDefaulTransferAccountSpinner.setVisibility(View.VISIBLE)	4
4013	mDefaulTransferAccountSpinner.setVisibility(isChecked?View.VISIBLE:View.INVISIBLE)	4
25102	mDefaultAccountsDialog	23
54644	mDefaultAccountsDialog.dismiss()	5
54750	mDefaultAccountsDialog.setOnDismissListener(new	4
25116	mDefaultAccountsDialog.show()	20
49588	mDefaultActionButtonContentDescription	4
49427	mDefaultActionButtonContentDescription,label)	4
48860	mDefaultActivityButton	4
49647	mDefaultActivityButton)	4
49639	mDefaultActivityButton.findViewById(R.id.abs__image)	4
49665	mDefaultActivityButton.getVisibility()	4
49527	mDefaultActivityButton.setContentDescription(contentDescription)	4
49452	mDefaultActivityButton.setOnClickListener(mCallbacks)	4
49425	mDefaultActivityButton.setOnLongClickListener(mCallbacks)	4
48870	mDefaultActivityButton.setVisibility(VISIBLE)	4
48888	mDefaultActivityButton.setVisibility(View.GONE)	4
49444	mDefaultActivityButtonImage	4
48880	mDefaultActivityButtonImage.setImageDrawable(activity.loadIcon(packageManager))	4
44126	mDefaultShowAsAction	4
5517	mDefaultTransferAccountCheckBox	12
31237	mDefaultTransferAccountCheckBox.setChecked(enableTransferAccount)	7
4593	mDefaultTransferAccountCheckBox.setChecked(true)	11
5132	mDefaultTransferAccountCheckBox.setOnCheckedChangeListener(new	13
27593	mDefaultTransferAccountCursor	5
27253	mDefaultTransferAccountCursor)	5
26810	mDefaultTransferAccountCursorAdapter	13
27583	mDefaultTransferAccountCursorAdapter.getCount()	10
26794	mDefaultTransferAccountCursorAdapter.getCursor().close()	7
26682	mDefaultTransferAccountCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	5
34426	mDefaultTransferAccountSpinner	3
34424	mDefaultTransferAccountSpinner.getSelectedItemId()	3
34504	mDefaultTransferAccountSpinner.setAdapter(mDefaultTransferAccountCursorAdapter)	3
34358	mDefaultTransferAccountSpinner.setEnabled(enableTransferAccount)	3
34491	mDefaultTransferAccountSpinner.setEnabled(false)	3
34498	mDefaultTransferAccountSpinner.setEnabled(isChecked)	3
34494	mDefaultTransferAccountSpinner.setSelection(pos)	3
27487	mDefaultTransferAccountUID	8
20606	mDefaultTransferAccountUID.trim().length()	9
39603	mDeferredDestroyActionMode	4
39681	mDeferredModeDestroyCallback	4
39549	mDeferredModeDestroyCallback.onDestroyActionMode(mDeferredDestroyActionMode)	4
40737	mDelayAnim	5
40438	mDelayAnim.addListener(new	4
40834	mDelayAnim.cancel()	4
40646	mDelayAnim.isRunning())	4
40859	mDelayAnim.setDuration(mStartDelay)	4
40695	mDelayAnim.start()	4
41973	mDelayStartTime	6
19179	mDelegate	16
18637	mDelegate.onTaskComplete()	15
3153	mDeleteAccountsClickCount	8
3821	mDeleteAccountsClickCount++	5
33130	mDeleteAccountsRadioButton	6
62612	mDeleteAccountsRadioButton.setChecked(true)	2
32937	mDeleteAccountsRadioButton.setText(R.string.label_delete_sub_accounts)	6
9292	mDeleteAllCheckBox	19
34646	mDeleteAllCheckBox.setChecked(sharedPrefs.getBoolean(getString(R.string.key_delete_transactions_after_export),false))	16
7163	mDeleteTransactionsAfterExport	3
4003	mDeleteTransactionsClickCount	12
3209	mDeleteTransactionsClickCount++	5
33265	mDeleteTransactionsRadioButton	8
62637	mDeleteTransactionsRadioButton.setChecked(true)	2
33529	mDeleteTransactionsRadioButton.setText("Delete	3
32992	mDeleteTransactionsRadioButton.setText(R.string.label_delete_transactions)	7
24779	mDeletedSplitUIDList	5
24885	mDeletedSplitUIDList.addAll(removedSplitUIDs)	5
13900	mDescendantAccountUIDs	26
803	mDescendantAccountUIDs)	6
19248	mDescendantAccountUIDs.add(mAccountUID)	7
13689	mDescendantAccountUIDs.add(mAccountsDbAdapter.getGnuCashRootAccountUID())	4
13591	mDescendantAccountUIDs.add(rootAccountUID)	6
18767	mDescendantAccountUIDs.size()	10
1658	mDescription	44
7196	mDescription.isEmpty()){	7
6441	mDescription.length()	12
8878	mDescriptionEditText	26
18779	mDescriptionEditText.getText().toString()	26
54428	mDescriptionEditText.setAdapter(adapter)	2
31603	mDescriptionEditText.setEnabled(b)	6
54485	mDescriptionEditText.setOnItemClickListener(new	5
21571	mDescriptionEditText.setSelection(mDescriptionEditText.getText().length())	7
600	mDescriptionEditText.setText(account.getDescription())	10
18632	mDescriptionEditText.setText(mTransaction.getDescription())	27
9351	mDescriptionInput	8
54128	mDescriptionInput.setText(budget.getDescription())	2
27242	mDescriptionSelected	3
45918	mDesiredFocusableInTouchModeState	4
46475	mDesiredFocusableInTouchModeState)	4
45835	mDesiredFocusableState	4
45973	mDesiredFocusableState)	4
63832	mDestination	3
59902	mDestinationAccountSpinner	4
31042	mDestinationAccountSpinner.getSelectedItemId()	13
4010	mDestinationAccountSpinner.setAdapter(mCursorAdapter)	9
8778	mDestinationSpinner	25
4167	mDestinationSpinner.getSelectedItemPosition()	19
36489	mDestinationSpinner.setAdapter(adapter)	14
51470	mDestinationSpinner.setOnItemSelectedListener(new	4
52722	mDestinationSpinner.setSelection(position)	5
9006	mDetailTableLayout	6
61992	mDetailTableLayout.addView(view,index)	4
62009	mDetailTableLayout.addView(view,index++)	7
62269	mDetailTableLayout.addView(viewHolder.itemView,index++)	3
13090	mDetailTableLayout.removeViews(0,(int)splitCount)	6
39498	mDialog	4
32511	mDir	7
63137	mDir.getText().toString().trim()	3
63103	mDir.setText(mOC_dir)	3
32915	mDirError	7
58690	mDirError.setText(getString(R.string.owncloud_dir_invalid))	7
58693	mDirError.setText(getString(R.string.owncloud_dir_ok))	7
58717	mDirError.setTextColor(ContextCompat.getColor(getContext(),R.color.debit_red))	4
58697	mDirError.setTextColor(ContextCompat.getColor(getContext(),R.color.theme_primary))	4
32837	mDirError.setVisibility(View.GONE)	7
58677	mDirError.setVisibility(View.VISIBLE)	7
48037	mDisableChildrenWhenDisabled	5
23677	mDisplayMode	19
63507	mDisplayName	4
45522	mDisplayOptions	4
46636	mDivider	5
46962	mDivider)	4
47348	mDivider.draw(canvas)	4
47547	mDivider.setBounds(getPaddingLeft()	4
46836	mDivider.setBounds(left,getPaddingTop()	4
46824	mDividerHeight	7
46578	mDividerHeight)	4
46852	mDividerHeight*/	4
46711	mDividerPadding	6
46656	mDividerPadding)	4
46659	mDividerPadding,	4
46937	mDividerPadding,top	4
46929	mDividerPadding,top,	4
47562	mDividerWidth	7
47357	mDividerWidth*/	4
46772	mDividerWidth,getHeight()	4
31010	mDocument	5
31305	mDocument.appendChild(rootElement)	7
31088	mDocument.createElement(GncXmlHelper.TAG_BOOK)	7
31405	mDocument.createElement(GncXmlHelper.TAG_BOOK_ID)	7
31346	mDocument.createElement(GncXmlHelper.TAG_COUNT_DATA)	9
31324	mDocument.createElement(GncXmlHelper.TAG_ROOT)	5
30993	mDocument.setXmlStandalone(true)	5
31083	mDocument.setXmlVersion("1.0")	5
10035	mDoneButton	5
56517	mDoneButton.setOnClickListener(new	5
56478	mDoneButton.setText("Done")	5
63788	mDoneButton.setText(R.string.done_label)	2
2340	mDoubleAccountSpinner	36
31533	mDoubleAccountSpinner.getCount()	12
12215	mDoubleAccountSpinner.getSelectedItemId()	20
28401	mDoubleAccountSpinner.postDelayed(new	6
2565	mDoubleAccountSpinner.setAdapter(mCursorAdapter)	15
31576	mDoubleAccountSpinner.setEnabled(b)	7
19076	mDoubleAccountSpinner.setOnItemSelectedListener(new	13
12213	mDoubleAccountSpinner.setSelection(pos)	7
28255	mDoubleAccountSpinner.setSelection(position)	11
12658	mDoubleEntryAccountUID	14
12745	mDoubleEntryAccountUID.equals(accountUID)	11
6596	mDoubleEntryAccountUID.length()	13
9199	mDoubleEntryLayout	5
52399	mDoubleEntryLayout.setVisibility(View.GONE)	12
33208	mDoubleEntryLayout.setVisibility(visibility)	3
8856	mDrawerLayout	32
51691	mDrawerLayout,	5
59611	mDrawerLayout.closeDrawer(mDrawerList)	5
24944	mDrawerLayout.closeDrawer(mNavigationView)	13
24022	mDrawerLayout.openDrawer(mDrawerList)	7
24745	mDrawerLayout.openDrawer(mNavigationView)	9
56948	mDrawerLayout.setDrawerListener(mDrawerToggle)	7
29893	mDrawerList	11
29861	mDrawerList.setAdapter(mergeAdapter)	8
29865	mDrawerList.setAdapter(new	3
59627	mDrawerList.setItemChecked(position,true)	5
29801	mDrawerList.setOnItemClickListener(new	9
9224	mDrawerToggle	26
64287	mDrawerToggle.onConfigurationChanged(newConfig)	1
21001	mDrawerToggle.setDrawerIndicatorEnabled(false)	6
64289	mDrawerToggle.syncState()	1
48978	mDropDownAnchor	5
48975	mDropDownAnchor.addOnLayoutChangeListener(new	5
49008	mDropDownAnchor.getViewTreeObserver().addOnGlobalLayoutListener(new	5
46859	mDropDownAnchorView	4
47092	mDropDownAnchorView,mDropDownVerticalOffset,ignoreBottomDecorations)	4
47401	mDropDownAnchorView.getWidth()	4
47386	mDropDownHeight	4
46542	mDropDownHorizontalOffset	4
47394	mDropDownHorizontalOffset,mDropDownVerticalOffset)	4
47514	mDropDownList	5
47136	mDropDownList.getChildCount()	4
47111	mDropDownList.getCount()	4
47087	mDropDownList.getDivider()	4
47406	mDropDownList.getDividerHeight()	4
46549	mDropDownList.getListPaddingBottom()	4
47364	mDropDownList.getListPaddingTop()	4
47476	mDropDownList.getPaddingLeft()	4
46637	mDropDownList.getPaddingRight(),p.width)	4
46769	mDropDownList.isInTouchMode())	4
47469	mDropDownList.setAdapter(mAdapter)	5
47485	mDropDownList.setFocusable(true)	4
47155	mDropDownList.setFocusableInTouchMode(true)	4
47331	mDropDownList.setOnItemClickListener(mItemClickListener)	4
47339	mDropDownList.setOnItemSelectedListener(mItemSelectedListener)	4
47430	mDropDownList.setOnItemSelectedListener(new	4
46698	mDropDownList.setOnScrollListener(mScrollListener)	4
47323	mDropDownList.setSelection(ListView.INVALID_POSITION)	4
47114	mDropDownList.setSelector(mDropDownListHighlight)	4
47427	mDropDownListHighlight	4
47280	mDropDownVerticalOffset	5
47274	mDropDownVerticalOffset,widthSpec,heightSpec)	4
46535	mDropDownVerticalOffsetSet	4
47074	mDropDownWidth	7
40777	mDuration	16
24975	mEarliestTimestampsMap	17
58767	mEarliestTimestampsMap.clear()	5
58775	mEarliestTimestampsMap.entrySet())	6
5965	mEarliestTimestampsMap.put(type,earliest)	13
25122	mEarliestTimestampsMap.put(type,transactionsDbAdapter.getTimestampOfEarliestTransaction(type))	8
33152	mEarliestTransaction	6
34291	mEarliestTransaction.toDate().getTime(),	3
1986	mEarliestTransactionDate	28
1591	mEarliestTransactionDate.toDate().getTime(),	8
30103	mEarliestTransactionDate.toString("dd	6
20726	mEarliestTransactionTimestamp	33
31591	mEditMode	28
8860	mEditingAfterReview	5
24257	mEditor	8
57648	mEditor.commit()	2
31374	mEditor.putBoolean(UxArgument.ENABLED_PASSCODE,false)	4
57642	mEditor.putBoolean(UxArgument.ENABLED_PASSCODE,flag)	2
31145	mEditor.putBoolean(UxArgument.ENABLED_PASSCODE,true)	4
31006	mEditor.putString(UxArgument.PASSCODE,data.getStringExtra(UxArgument.PASSCODE))	4
8999	mEmptyTextView	5
61941	mEmptyTextView.setText(R.string.label_no_accounts)	3
61901	mEmptyTextView.setText(R.string.label_no_favorite_accounts)	3
61932	mEmptyTextView.setText(R.string.label_no_recent_accounts)	3
45830	mEmptyView	4
46446	mEmptyView.setVisibility(View.GONE)	4
45821	mEmptyView.setVisibility(View.VISIBLE)	4
33662	mEndDate	11
8774	mEndRange	8
728	mEndRangeMillis	6
32459	mEquityAccountTypes	5
32210	mEquityAccountTypes.add(AccountType.EQUITY)	5
9335	mEquityTableLayout	11
21655	mEquityTableLayout)	6
40522	mEvaluator	11
41706	mEvaluator,if	4
41173	mEvaluator.evaluate(fraction,mFirstKeyframe.getValue(),	4
41627	mEvaluator.evaluate(intervalFraction,mFirstKeyframe.getValue(),	4
41308	mEvaluator.evaluate(intervalFraction,prevKeyframe.getValue(),	4
9985	mEventRecurrence	25
51394	mEventRecurrence,true)	2
54121	mEventRecurrence.count	5
3215	mEventRecurrence.parse(mRecurrenceRule)	17
54004	mEventRecurrence.parse(recurrenceRuleString)	5
54112	mEventRecurrence.until.length()	5
19047	mEventType	7
19207	mEventType.name()	6
32135	mEventUID	5
10024	mExchangeRateInput	5
12777	mExchangeRateInput.addTextChangedListener(new	10
12274	mExchangeRateInput.addTextChangedListener(textChangeListener)	17
31586	mExchangeRateInput.getText().toString()	12
31625	mExchangeRateInput.requestFocus()	3
31593	mExchangeRateInput.setEnabled(isChecked)	3
57868	mExchangeRateInput.setText(formatter.format(numerator.divide(denominator,MathContext.DECIMAL32)))	5
12296	mExchangeRateInput.setText(num.divide(denom,MathContext.DECIMAL32).toString())	11
58544	mExchangeRateInput.setText(price.toString())	2
9014	mExchangeRateInputLayout	12
31940	mExchangeRateInputLayout.setError("An	6
62273	mExchangeRateInputLayout.setError(getString(R.string.error_exchange_rate_required))	6
31496	mExchangeRateInputLayout.setError(getString(R.string.error_invalid_exchange_rate))	9
31880	mExchangeRateInputLayout.setErrorEnabled(false)	3
31720	mExchangeRateInputLayout.setErrorEnabled(isChecked)	3
8983	mExchangeRateRadioButton	5
31876	mExchangeRateRadioButton.setChecked(!isChecked)	3
31986	mExchangeRateRadioButton.setOnCheckedChangeListener(new	3
20018	mExecutionCount	5
49362	mExpandActivityOverflowButton	4
49127	mExpandActivityOverflowButton)	4
49526	mExpandActivityOverflowButton.findViewById(R.id.abs__image)	4
49083	mExpandActivityOverflowButton.setEnabled(false)	4
49591	mExpandActivityOverflowButton.setEnabled(true)	4
49546	mExpandActivityOverflowButton.setOnClickListener(mCallbacks)	4
49557	mExpandActivityOverflowButtonImage	4
49029	mExpandActivityOverflowButtonImage.setContentDescription(contentDescription)	4
49663	mExpandActivityOverflowButtonImage.setImageDrawable(drawable)	4
49216	mExpandActivityOverflowButtonImage.setImageDrawable(expandActivityOverflowButtonDrawable)	4
45100	mExpandedActionView	7
45790	mExpandedActionView).onActionViewCollapsed()	4
46003	mExpandedActionView).onActionViewExpanded()	4
45249	mExpandedActionViewUpListener	4
42667	mExpandedActionViewsExclusive	4
42673	mExpandedFormat	4
42576	mExpandedFormat))	4
45767	mExpandedHomeLayout	4
45684	mExpandedHomeLayout.setContentDescription(getResources().getText(	4
45872	mExpandedHomeLayout.setIcon(mIcon.getConstantState().newDrawable(/*	4
46279	mExpandedHomeLayout.setIcon(null)	4
45336	mExpandedHomeLayout.setOnClickListener(mExpandedActionViewUpListener)	4
45054	mExpandedHomeLayout.setUp(true)	4
49567	mExpandedInActionView	10
44864	mExpandedIndex	4
44520	mExpandedIndex)	4
43478	mExpandedItem	7
45441	mExpandedMenuPresenter	4
45297	mExpandedMenuPresenter.initForMenu(mContext,null)	4
45595	mExpandedMenuPresenter.mCurrentExpandedItem	4
45551	mExpandedMenuPresenter.mCurrentExpandedItem.getItemId()	4
45554	mExpandedMenuPresenter.updateMenuView(true)	4
27042	mExportAll	16
34570	mExportAllCheckBox	20
7018	mExportAllCheckBox.isChecked()	10
34566	mExportAllCheckBox.setChecked(sharedPrefs.getBoolean(getString(R.string.key_export_all_transactions),false))	16
9321	mExportAllSwitch	5
53973	mExportAllSwitch.setChecked(sharedPrefs.getBoolean(getString(R.string.key_export_all_transactions),false))	5
63223	mExportAllSwitch.setOnCheckedChangeListener(new	3
7250	mExportAllTransactions	6
13320	mExportCacheFilePath	9
9253	mExportDateLayout	5
63250	mExportDateLayout.setVisibility(View.GONE)	3
63205	mExportDateLayout.setVisibility(View.VISIBLE)	3
7228	mExportFormat	34
52543	mExportFormat.name()	18
55389	mExportLocation	3
7168	mExportParams	28
9835	mExportParams.getExportFormat().name()))	13
52555	mExportParams.getExportStartTime().toString()	5
56815	mExportParams.getInternalExportPath()	4
58884	mExportParams.getTargetFilepath()	8
7148	mExportParams.shouldExportAllTransactions()	5
32866	mExportStartCalendar	7
63230	mExportStartCalendar.set(Calendar.DAY_OF_MONTH,dayOfMonth)	3
53885	mExportStartCalendar.set(Calendar.HOUR_OF_DAY,hourOfDay)	5
63256	mExportStartCalendar.set(Calendar.MINUTE,minute)	3
63215	mExportStartCalendar.set(Calendar.MONTH,monthOfYear)	3
54080	mExportStartCalendar.set(Calendar.YEAR,year)	5
8727	mExportStartCalendar.setTimeInMillis(timestamp.getTime())	7
9004	mExportStartDate	5
63235	mExportStartDate.setEnabled(!isChecked)	3
63236	mExportStartDate.setOnClickListener(new	3
53767	mExportStartDate.setText(TransactionFormFragment.DATE_FORMATTER.format(cal.getTime()))	5
9263	mExportStartDate.setText(TransactionFormFragment.DATE_FORMATTER.format(date))	5
63202	mExportStartDate.setTextColor(getResources().getColor(color))	3
9921	mExportStartTime	10
63203	mExportStartTime.setEnabled(!isChecked)	3
63232	mExportStartTime.setOnClickListener(new	3
53815	mExportStartTime.setText(TransactionFormFragment.TIME_FORMATTER.format(cal.getTime()))	5
9837	mExportStartTime.setText(TransactionFormFragment.TIME_FORMATTER.format(date))	5
63211	mExportStartTime.setTextColor(getResources().getColor(color))	3
52660	mExportStartTime.toString()	9
55256	mExportStarted	3
6836	mExportTarget	39
7081	mExportTarget)	17
52679	mExportTarget.name()	18
55287	mExportUri	3
55297	mExportUri.toString()	3
10011	mExportWarningTextView	14
51481	mExportWarningTextView.setText(R.string.export_warning_xml)	10
56870	mExportWarningTextView.setText(getActivity().getString(R.string.export_warning_ofx))	3
56926	mExportWarningTextView.setText(getActivity().getString(R.string.export_warning_qif))	3
51472	mExportWarningTextView.setVisibility(View.GONE)	9
56979	mExportWarningTextView.setVisibility(View.VISIBLE)	3
10008	mExportedFiles	6
10003	mExportedFiles)	24
55422	mExportedFiles.get(0)	4
35478	mExporter	18
9542	mExporter.generateExport()	6
31193	mExporter.generateExport(writer)	10
63178	mExporter.getExportMimeType()	3
27864	mFavoriteAccountMenu	6
39297	mFeatures	7
39630	mFeatures)	4
9433	mFetchExchangeRateButton	5
31528	mFetchExchangeRateButton.setEnabled(isChecked)	3
31557	mFetchExchangeRateButton.setOnClickListener(new	3
12992	mFilePath	26
34520	mFilePath,	3
24510	mFilter	15
60472	mFilterQueryProvider	3
60439	mFilterQueryProvider.runQuery(constraint)	3
44997	mFinalVisibility	8
42993	mFinished	4
43895	mFirst	4
44015	mFirst)	4
41215	mFirstKeyframe	5
41304	mFirstKeyframe.getFraction()	4
46252	mFirstPosition	8
46067	mFirstPosition)	4
42361	mFlags	9
44700	mFlags)	4
50172	mFlagsCol	5
42152	mFloatAnimatedValue	5
42279	mFloatKeyframeSet	5
42035	mFloatKeyframeSet.getFloatValue(fraction)	4
42072	mFloatProperty	5
41753	mFloatProperty.setValue(target,mFloatAnimatedValue)	4
9285	mFloatingActionButton	5
57438	mFloatingActionButton.setOnClickListener(new	6
42378	mFocusable	4
43622	mForceShowIcon	8
54310	mFormat	4
54511	mFormat.format(number)	4
43733	mFormatItems	5
44025	mFormatItems)	4
43868	mFormatItemsWidth	5
44130	mFormatItemsWidth)	4
36228	mFraction	16
41479	mFraction.	4
10026	mFragmentPageReferenceMap	34
57457	mFragmentPageReferenceMap.get(i)	3
35055	mFragmentPageReferenceMap.get(index)	12
19539	mFragmentPageReferenceMap.put(i,(Refreshable)	7
19625	mFragmentPageReferenceMap.put(i,(Refreshable)currentFragment)	3
27839	mFragmentPageReferenceMap.put(i,currentFragment)	9
19462	mFragmentPageReferenceMap.remove(position)	6
27765	mFragmentPageReferenceMap.size()	8
27694	mFragmentPageReferenceMap.valueAt(i).refresh(accountId)	5
29981	mFragmentPageReferenceMap.valueAt(i).refresh(accountUID)	9
19798	mFragmentPageReferenceMap.values())	6
39705	mFragmentTransaction	5
39837	mFragmentTransaction.commit()	4
38672	mFragments.mAdded.get(i)	5
37773	mFragments.mAdded.size()	5
9464	mFromCurrencyLabel	5
7812	mFromCurrencyLabel.setText(fromCurrency.getCurrencyCode())	7
8568	mFromCurrencyLabel.setText(fromCurrencyCode)	6
47414	mFromUser	4
43989	mFrozenViewStates	4
51181	mFullName	12
36324	mFullname	13
61193	mFullname)	3
60283	mFullname.isEmpty()	3
44160	mGeneratedItemPadding	4
35125	mGetAnimationScalesMethod	2
35232	mGetAnimationScalesMethod.invoke(mWindowManagerObject)	2
41525	mGetter	6
9992	mGoogleApiClient	14
51600	mGoogleApiClient,changeSet).setResultCallback(new	7
25142	mGoogleApiClient.connect()	9
25384	mGoogleApiClient.disconnect()	6
48050	mGravity	5
42430	mGroup	9
7550	mGroupInterval	24
60099	mGroupSmallerSlices	8
39355	mHandler	16
47313	mHandler.post(mHideSelector)	4
46575	mHandler.post(new	8
46802	mHandler.postDelayed(mResizePopupRunnable,EXPAND_LIST_TIMEOUT)	4
47083	mHandler.removeCallbacks(mResizePopupRunnable)	4
40034	mHasEmbeddedTabs	4
41439	mHasValue	5
36579	mHashcode	12
44093	mHeaderIcon	7
43326	mHeaderTitle	7
43801	mHeaderView	7
45929	mHeightMeasureSpec	5
9607	mHideAccountBalance	3
9430	mHideAccountBalance.isChecked()	4
9718	mHideAccountBalance.setChecked(passcodeEnabled)	2
40208	mHideListener	4
39600	mHideListener.onAnimationEnd(null)	4
47475	mHideSelector	4
48838	mHighlightDefaultActivity	4
49594	mHighlightDefaultActivity)	4
46721	mHijackFocus	4
48189	mHintText	4
48342	mHistoricalRecords	8
49561	mHistoricalRecords.add(historicalRecord)	4
49595	mHistoricalRecords.size()	4
48416	mHistoricalRecordsChanged	8
48472	mHistoryFileName	6
49555	mHistoryFileName)	4
49338	mHistoryFileName,fnfe)	4
49241	mHistoryFileName,iae)	4
48876	mHistoryFileName,ioe)	4
49069	mHistoryFileName,ise)	4
49395	mHistoryFileName,xppe)	4
48559	mHistoryMaxSize	7
45452	mHomeLayout	4
45397	mHomeLayout.setClickable(true)	4
45233	mHomeLayout.setContentDescription(mContext.getResources().getText(	4
45273	mHomeLayout.setContentDescription(null)	4
45688	mHomeLayout.setEnabled(enable)	4
45021	mHomeLayout.setFocusable(enable)	4
44912	mHomeLayout.setFocusable(true)	4
45611	mHomeLayout.setIcon(icon)	4
45559	mHomeLayout.setIcon(logo)	4
45553	mHomeLayout.setIcon(logoVis	4
45051	mHomeLayout.setOnClickListener(mUpClickListener)	4
45630	mHomeLayout.setUp(setUp)	4
45803	mHomeLayout.setVisibility(GONE)	4
45961	mHomeLayout.setVisibility(VISIBLE)	4
45167	mHomeLayout.setVisibility(vis)	4
38897	mHorizontalProgressBar	7
40066	mHorizontalProgressBar.setVisibility(View.INVISIBLE)	4
52881	mHostActivity	15
56541	mHostActivity.findViewById(keyboardViewId)	9
52820	mHostActivity.findViewById(resid)	13
52764	mHostActivity.findViewById(viewid)	10
34829	mHostActivity.getSystemService(Activity.INPUT_METHOD_SERVICE)).hideSoftInputFromWindow(v.getWindowToken(),0)	18
52882	mHostActivity.getWindow().getCurrentFocus()	13
52937	mHostActivity.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN)	15
2396	mISO4217Currency	65
39975	mIcon	8
45425	mIcon)	4
50179	mIcon1	5
50184	mIcon2	5
43114	mIconDrawable	9
50546	mIconName1Col	5
50073	mIconName2Col	5
50309	mIconRefine	5
42883	mIconResId	9
44156	mIconView	14
43491	mIconView.getLayoutParams()	8
46121	mIconView.getMeasuredHeight()	4
46189	mIconView.getMeasuredWidth()	4
46272	mIconView.layout(iconLeft,iconTop,iconLeft	4
47656	mIconView.setContentDescription(tab.getContentDescription())	4
46085	mIconView.setImageDrawable(icon)	8
48144	mIconView.setImageDrawable(null)	4
43359	mIconView.setImageDrawable(showIcon	4
43710	mIconView.setVisibility(GONE)	8
44166	mIconView.setVisibility(VISIBLE)	8
48818	mIconified	9
49478	mIconifiedByDefault	10
42701	mId	16
194	mIgnoreElement	13
38907	mIgnoreNativeCreate	4
39062	mIgnoreNativePrepare	4
38899	mIgnoreNativeSelected	4
23440	mIgnoreScheduledAction	8
8127	mIgnoreTemplateTransaction	17
59343	mIgnoreTemplateTransactions	4
43176	mImageButton	4
43117	mImageButton.getDrawable()	4
43167	mImageButton.setEnabled(enabled)	4
43287	mImageButton.setImageDrawable(icon)	4
43302	mImageButton.setOnClickListener(this)	4
42356	mImageButton.setOnLongClickListener(this)	4
42939	mImageButton.setVisibility(GONE)	4
42895	mImageButton.setVisibility(VISIBLE)	4
25204	mImbalanceAccountPrefix	9
8786	mImbalanceTextView	16
62977	mImbalanceWatcher	7
24801	mImbalanceWatcher.afterTextChanged(null)	12
19842	mImportedBookUID	4
53516	mInBudgetSlot	2
1374	mInColorSlot	29
6029	mInCreditFormulaSlot	14
5124	mInCreditFormulaSlot)	7
32188	mInCreditFormulaSlot){	5
59338	mInCreditNumericSlot	3
59296	mInCreditNumericSlot)	2
23914	mInDebitFormulaSlot	10
4075	mInDebitFormulaSlot)	8
32069	mInDebitFormulaSlot){	5
53362	mInDebitNumericSlot	5
53512	mInDebitNumericSlot)	4
31373	mInDefaultTransferAccount	15
47062	mInDrawing	4
18431	mInEditMode	48
31221	mInExported	14
260	mInFavoriteSlot	21
46181	mInLayout	8
579	mInPlaceHolderSlot	37
5175	mInSplitAccountSlot	10
58701	mInSplitAccountSlot)	5
32095	mInSplitAccountSlot){	4
5949	mInTemplates	9
45283	mIncludeTabs	4
45277	mIncludeTabs)	4
47457	mIndeterminate	4
46888	mIndeterminate)	4
46676	mIndeterminateDrawable	4
47409	mIndeterminateDrawable)	4
46591	mIndeterminateDrawable).stop()	4
46972	mIndeterminateDrawable.getIntrinsicHeight()	4
47299	mIndeterminateDrawable.getIntrinsicWidth()	4
46857	mIndeterminateDrawable.isStateful())	4
46708	mIndeterminateDrawable.jumpToCurrentState()	4
47127	mIndeterminateDrawable.setBounds(0,0,right	4
46791	mIndeterminateDrawable.setState(state)	4
45433	mIndeterminateProgressStyle	4
45179	mIndeterminateProgressView	4
45205	mIndeterminateProgressView.getMeasuredWidth()	4
45383	mIndeterminateProgressView.getMeasuredWidth())	4
45674	mIndeterminateProgressView.getVisibility()	4
45309	mIndeterminateProgressView.setId(R.id.abs__progress_circular)	4
47154	mIndeterminateRealLeft	4
47559	mIndeterminateRealLeft,getPaddingTop()	4
46741	mIndeterminateRealTop	4
47115	mIndeterminateRealTop)	4
43912	mInflater	12
44763	mInflater.inflate(ITEM_LAYOUT,parent,false)	4
49481	mInitialActivityCount	4
41708	mInitialized	8
14631	mInsertStatement	2
48369	mInstanceLock	4
45960	mInstanceState	4
41737	mIntAnimatedValue	4
41994	mIntKeyframeSet	4
41786	mIntKeyframeSet.getIntValue(fraction)	4
42283	mIntProperty	4
41843	mIntProperty.setValue(target,mIntAnimatedValue)	4
42335	mIntent	15
41445	mInterpolator	13
40992	mInterpolator.getInterpolation(fraction)	12
7098	mInvertedCredit	6
43854	mIsActionItemsStale	6
44705	mIsActionViewExpanded	5
49246	mIsAttachedToWindow	4
32925	mIsChecked	4
43403	mIsClosing	4
45694	mIsCollapsable	4
45723	mIsCollapsed	4
5737	mIsDateEntered	11
487	mIsDatePosted	21
38044	mIsDelegate	4
38777	mIsDestroyed	5
33735	mIsEnabled	8
3999	mIsExported	10
27878	mIsFavorite	4
39336	mIsFloating	7
59105	mIsHidden	4
4939	mIsLastRun	11
31288	mIsNote	14
56749	mIsPassEnabled	7
13844	mIsPlaceholderAccount	14
43015	mIsQwerty	4
4360	mIsRecurrenceStart	11
4985	mIsScheduledEnd	11
4994	mIsScheduledStart	9
49464	mIsSelectingDefaultActivity	4
45401	mIsSplit	5
45776	mIsStacked	4
45211	mIsStacked)	4
2548	mIsTemplate	7
38813	mIsTitleReady	4
39071	mIsTitleReady)	4
45458	mIsTransitioning	4
44011	mIsVisibleItemsStale	5
44498	mItem	4
44688	mItem.getItemId()	4
44618	mItem.setIcon(icon)	4
44393	mItem.setIcon(iconRes)	4
44572	mItemCallback	5
44290	mItemCallback.run()	4
47109	mItemClickListener	4
46481	mItemCount	9
42397	mItemData	8
43127	mItemData.actionFormatChanged()	4
42621	mItemData.getIcon()	4
43754	mItemData.shouldShowIcon()	4
43661	mItemData.shouldShowShortcut())	4
43009	mItemInvoker	4
42425	mItemInvoker.invokeItem(mItemData)	4
43505	mItemLayoutRes	4
45473	mItemPadding	4
47344	mItemSelectedListener	4
42636	mItems	8
43520	mItems.add(findInsertIndex(mItems,ordering),item)	4
42592	mItems.add(order,item)	4
43002	mItems.clear()	8
42955	mItems.get(findItemIndex(id))	4
43681	mItems.get(i)	5
42870	mItems.get(index)	8
42855	mItems.get(index).invoke()	4
42887	mItems.remove(findItemIndex(id))	4
43897	mItems.remove(index)	4
42415	mItems.size()	9
44000	mItems.size()))	4
43742	mItemsChangedWhileDispatchPrevented	4
42161	mJniSetter	5
42011	mJniSetterInteger	5
8780	mKeyboardView	32
52742	mKeyboardView.getVisibility()	13
31716	mKeyboardView.performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY)	14
32005	mKeyboardView.setEnabled(false)	17
52818	mKeyboardView.setEnabled(true)	15
31659	mKeyboardView.setHapticFeedbackEnabled(goEnabled)	15
62262	mKeyboardView.setKeyboard(keyboard)	3
52891	mKeyboardView.setKeyboard(new	7
52871	mKeyboardView.setOnKeyboardActionListener(mOnKeyboardActionListener)	13
52855	mKeyboardView.setPreviewEnabled(false)	13
52857	mKeyboardView.setVisibility(View.GONE)	13
52904	mKeyboardView.setVisibility(View.VISIBLE)	13
41539	mKeyframeSet	8
42003	mKeyframeSet.clone()	4
41976	mKeyframeSet.getValue(fraction)	4
42272	mKeyframeSet.mKeyframes)	4
41933	mKeyframeSet.setEvaluator(evaluator)	4
42067	mKeyframeSet.setEvaluator(mEvaluator)	4
42294	mKeyframeSet.toString()	4
40465	mKeyframes	8
41417	mKeyframes.addAll(Arrays.asList(keyframes))	4
41070	mKeyframes.get(0)	7
40652	mKeyframes.get(0)).getFloatValue()	4
40600	mKeyframes.get(0)).getIntValue()	4
40493	mKeyframes.get(1)	8
40532	mKeyframes.get(1)).getFloatValue()	4
40983	mKeyframes.get(1)).getIntValue()	4
40382	mKeyframes.get(i)	8
41665	mKeyframes.get(i).getValue()	4
40977	mKeyframes.get(mNumKeyframes	8
41149	mKeyframes.size()	8
46898	mLastDrawTime	4
41367	mLastKeyframe	4
41188	mLastKeyframe.getInterpolator()	5
41204	mLastKeyframe.getValue()	4
41559	mLastKeyframe.getValue())	4
39977	mLastMenuVisibility	4
40044	mLastMenuVisibility)	4
33590	mLastRun	12
63957	mLastSync	2
25123	mLatestTimestampsMap	16
58762	mLatestTimestampsMap.clear()	5
5324	mLatestTimestampsMap.isEmpty())	11
4413	mLatestTimestampsMap.put(type,latest)	13
25197	mLatestTimestampsMap.put(type,transactionsDbAdapter.getTimestampOfLatestTransaction(type))	9
33231	mLatestTransaction	6
34288	mLatestTransaction.toDate().getTime())	3
226	mLatestTransactionDate	31
1524	mLatestTransactionDate.toDate().getTime())	8
30043	mLatestTransactionDate.toString("dd	5
9932	mLatestTransactionTimestamp	37
46494	mLayoutHeight	4
30179	mLayoutManager	14
18019	mLegendColors	6
18138	mLegendLabels	6
60130	mLiabilitiesBalance	4
9643	mLiabilitiesTableLayout	14
60118	mLiabilityAccountTypes	3
60129	mLiabilityAccountTypes.add(AccountType.CREDIT)	3
60158	mLiabilityAccountTypes.add(AccountType.LIABILITY)	3
8229	mLineChartButton	12
50614	mLineChartButton.setOnClickListener(new	7
48025	mListAdapter	5
47185	mListItemExpandMaximum	4
46662	mListItemExpandMaximum)	4
45763	mListNavLayout	4
45246	mListNavLayout.addView(mSpinner,params)	4
45386	mListNavLayout.getMeasuredWidth()	4
45555	mListNavLayout.measure(	4
49493	mListPopupMaxWidth	4
49542	mListPopupWindow	4
49224	mListPopupWindow.setAdapter(mAdapter)	4
49023	mListPopupWindow.setAnchorView(ActivityChooserView.this)	4
49336	mListPopupWindow.setModal(true)	4
49146	mListPopupWindow.setOnDismissListener(mCallbacks)	4
49128	mListPopupWindow.setOnItemClickListener(mCallbacks)	4
47118	mListSelectionHidden	4
46861	mListSelectionHidden)	4
27343	mListener	13
64277	mListener,	1
27259	mListener.onColorSelected(color)	3
39999	mListener.onTabReselected(this,trans)	4
39935	mListener.onTabSelected(this,mFragmentTransaction)	4
39874	mListener.onTabUnselected(this,trans)	4
39937	mListeners	14
43171	mListeners)	5
40575	mListeners.add(listener)	8
41057	mListeners.clear()	4
40531	mListeners.clone()	10
40361	mListeners.get(i).onAnimationCancel(mAnimatorSet)	4
42858	mListeners.get(i).onAnimationRepeat(this)	4
40601	mListeners.remove(listener)	8
40750	mListeners.size()	8
36173	mLocalSymbol	7
61776	mLocalSymbol.isEmpty()){	3
45044	mLogo	4
45219	mLogoNavItem	4
45566	mLogoNavItem.setTitle(title)	4
27226	mMarginSize	3
47042	mMax	4
47082	mMax)	4
44469	mMaxActionItems	4
49637	mMaxActivityCount	4
46695	mMaxHeight	4
46744	mMaxHeight,make	4
43006	mMaxItems	4
42365	mMaxItemsSet	4
50496	mMaxShownActivityCount	4
47842	mMaxTabWidth	4
47043	mMaxWidth	13
44512	mMeasureParent	4
44192	mMeasuredExtraWidth	5
10645	mMemo	28
62990	mMemo)	4
59360	mMemo.equals(split.mMemo)	6
59430	mMemo.hashCode()	4
39300	mMenu	26
42329	mMenu)	8
39177	mMenu.bindNativeOverflow(menu,this,mNativeItemMap)	4
43482	mMenu.changeMenuMode()	4
38773	mMenu.clear()	4
42409	mMenu.close()	8
42978	mMenu.close(false)	4
45795	mMenu.collapseItemActionView(mCurrentExpandedItem)	4
44242	mMenu.collapseItemActionView(this)	4
44762	mMenu.expandItemActionView(this)	4
43222	mMenu.findItem(saved.openSubMenuId)	4
43741	mMenu.flagActionItems()	4
42583	mMenu.getActionItems()	4
44229	mMenu.getContext()	4
44733	mMenu.getContext().startActivity(mIntent)	4
44859	mMenu.getExpandedItem()	4
46309	mMenu.getItem(i)	4
43306	mMenu.getNonActionItems()	8
44529	mMenu.getOptionalIconsVisible()	4
44560	mMenu.getResources().getDrawable(mIconResId)	4
43093	mMenu.getVisibleItems()	8
44505	mMenu.isShortcutsVisible()	4
44661	mMenu.onItemActionRequestChanged(this)	4
44302	mMenu.onItemVisibleChanged(this)	4
44411	mMenu.onItemsChanged(false)	4
42336	mMenu.onItemsChanged(true)	11
44005	mMenu.performItemAction(item,0)	4
39128	mMenu.restoreActionViewStates(mMenuFrozenActionViewState)	4
39129	mMenu.saveActionViewStates(mMenuFrozenActionViewState)	5
39164	mMenu.saveActionViewStates(savedActionViewStates)	4
38985	mMenu.setCallback(this)	12
44463	mMenu.setExclusiveItemChecked(this)	4
39334	mMenu.setQwertyMode(kmap.getKeyboardType()	4
46352	mMenu.size()	4
38952	mMenu.startDispatchingItemsChanged()	8
38880	mMenu.stopDispatchingItemsChanged()	8
39446	mMenu.unwrap())	4
38949	mMenuFrozenActionViewState	5
38069	mMenuInflater	5
44396	mMenuInfo	5
38933	mMenuIsPrepared	4
44230	mMenuItemClickListener	4
44590	mMenuItemClickListener.onMenuItemClick(this)	4
64395	mMenuKeyIsLongPress	1
43598	mMenuLayoutRes	4
38826	mMenuRefreshContent	4
39138	mMenuRefreshContent)	4
43465	mMenuType	4
42970	mMenuView	15
42549	mMenuView)	4
43802	mMenuView).addView(itemView,childIndex)	4
42520	mMenuView).post(mPostedOpenRunnable)	4
42830	mMenuView).removeCallbacks(mPostedOpenRunnable)	4
43025	mMenuView).removeView(mOverflowButton)	4
42353	mMenuView).setOverflowReserved(mReserveOverflow)	4
45737	mMenuView.getChildCount()	4
45671	mMenuView.getMeasuredWidth()	4
45388	mMenuView.getMeasuredWidth())	4
45128	mMenuView.getParent()	4
43903	mMenuView.initialize(mMenu)	4
45338	mMenuView.onConfigurationChanged(newConfig)	4
45052	mMenuView.setAlpha(0)	4
45261	mMenuView.setBackgroundDrawable(mSplitBackground)	4
45203	mMenuView.setBackgroundDrawable(null)	4
45186	mMenuView.setVisibility(mFinalVisibility)	4
40330	mMenuVisibilityListeners	4
40267	mMenuVisibilityListeners)	4
39943	mMenuVisibilityListeners.add(listener)	4
40327	mMenuVisibilityListeners.get(i).onMenuVisibilityChanged(isVisible)	4
40232	mMenuVisibilityListeners.remove(listener)	4
39658	mMenuVisibilityListeners.size()	4
48806	mMethod	5
64363	mMethod.invoke(mContext,item)	1
48743	mMethod.invoke(mRealOwner,item)	5
42971	mMinCellSize	7
47479	mMinHeight	4
42874	mMinWidth	8
46171	mMinWidthMajor	4
46202	mMinWidthMinor	4
36207	mMnemonic	13
36049	mMnemonic)	7
36242	mMnemonic.equals(commodity.mMnemonic)	4
36006	mMnemonic.hashCode()	4
47302	mModal	4
49200	mModelDataSetOberver	4
21081	mModifiedTimestamp	11
36629	mMoneyInEur	5
54211	mMoneyInEur.add(addend)	3
59747	mMoneyInEur.add(new	1
59855	mMoneyInEur.divide(2)	1
54275	mMoneyInEur.divide(addend)	3
13873	mMoneyInEur.formattedString(Locale.GERMANY)	7
13091	mMoneyInEur.formattedString(Locale.US)	7
36692	mMoneyInEur.hashCode()	5
54494	mMoneyInEur.multiply(addend)	3
36501	mMoneyInEur.multiply(new	5
59722	mMoneyInEur.negate()	1
54341	mMoneyInEur.subtract(addend)	3
59812	mMoneyInEur.subtract(new	1
33061	mMoveAccountsRadioButton	6
2498	mMoveAccountsRadioButton.isChecked()){	3
62628	mMoveAccountsRadioButton.setChecked(false)	2
62613	mMoveAccountsRadioButton.setEnabled(false)	2
62643	mMoveAccountsRadioButton.setOnCheckedChangeListener(new	2
32971	mMoveTransactionsRadioButton	8
3856	mMoveTransactionsRadioButton.isChecked()){	3
62615	mMoveTransactionsRadioButton.setChecked(false)	2
62632	mMoveTransactionsRadioButton.setEnabled(false)	2
62608	mMoveTransactionsRadioButton.setOnCheckedChangeListener(new	2
18683	mMultiCurrency	31
7791	mMultiplier	16
624	mName	36
26511	mName.length()	3
26319	mName.replaceAll("[^A-Za-z0-9]","").toLowerCase(Locale.US)	3
26578	mName.toLowerCase().replace("	4
26275	mName.toLowerCase(Locale.US).replace("	4
9603	mNameEditText	51
51358	mNameEditText.addTextChangedListener(new	10
19234	mNameEditText.addTextChangedListener(validations)	5
18850	mNameEditText.getText().toString()	17
34467	mNameEditText.getText().toString().trim()	7
26686	mNameEditText.requestFocus()	15
3443	mNameEditText.setAdapter(adapter)	7
2752	mNameEditText.setOnItemClickListener(new	7
1779	mNameEditText.setSelection(mNameEditText.getText().length())	8
1273	mNameEditText.setText(account.getName())	25
8483	mNameEditText.setText(mAccount.getName())	10
6758	mNameEditText.setText(mTransaction.getName())	20
9670	mNameTextInputLayout	7
53828	mNameTextInputLayout.setError("A	5
53790	mNameTextInputLayout.setErrorEnabled(false)	5
53801	mNameTextInputLayout.setErrorEnabled(true)	5
36277	mNamespace	12
44221	mNativeActionExpandListener	4
44295	mNativeItem	4
44557	mNativeItem.collapseActionView()	4
44482	mNativeItem.expandActionView()	4
44570	mNativeItem.getActionProvider()	4
44555	mNativeItem.getActionView()	5
44325	mNativeItem.getAlphabeticShortcut()	4
44341	mNativeItem.getGroupId()	4
44827	mNativeItem.getIcon()	4
44550	mNativeItem.getIntent()	4
44885	mNativeItem.getItemId()	4
44222	mNativeItem.getMenuInfo()	4
44664	mNativeItem.getNumericShortcut()	4
44786	mNativeItem.getOrder()	4
44324	mNativeItem.getTitle()	4
44781	mNativeItem.getTitleCondensed()	4
44892	mNativeItem.hasSubMenu()	4
44824	mNativeItem.isActionViewExpanded()	4
44538	mNativeItem.isCheckable()	4
44299	mNativeItem.isChecked()	4
44623	mNativeItem.isEnabled()	4
44857	mNativeItem.isVisible()	4
44301	mNativeItem.setActionProvider(new	4
44347	mNativeItem.setActionView(new	5
44814	mNativeItem.setActionView(resId)	5
44731	mNativeItem.setActionView(view)	5
44551	mNativeItem.setAlphabeticShortcut(alphaChar)	4
44774	mNativeItem.setCheckable(checkable)	4
44716	mNativeItem.setChecked(checked)	4
44603	mNativeItem.setEnabled(enabled)	4
44449	mNativeItem.setIcon(icon)	4
44635	mNativeItem.setIcon(iconRes)	4
44369	mNativeItem.setIntent(intent)	4
44445	mNativeItem.setNumericShortcut(numericChar)	4
44805	mNativeItem.setOnActionExpandListener(mNativeActionExpandListener)	4
44213	mNativeItem.setOnMenuItemClickListener(this)	4
44254	mNativeItem.setShortcut(numericChar,alphaChar)	4
44426	mNativeItem.setShowAsAction(actionEnum)	4
44740	mNativeItem.setShowAsActionFlags(actionEnum)	4
44694	mNativeItem.setTitle(title)	4
44201	mNativeItem.setTitleCondensed(title)	4
44696	mNativeItem.setVisible(visible)	4
39021	mNativeItemMap	5
38932	mNativeItemMap.clear()	4
39273	mNativeItemMap.get(item)	4
44619	mNativeMap	4
44710	mNativeMap.clear()	4
44516	mNativeMap.get(nativeItem)	4
44785	mNativeMap.put(nativeItem,item)	4
44726	mNativeMenu	4
44311	mNativeMenu.addIntentOptions(groupId,itemId,order,caller,specifics,intent,flags,nativeOutItems)	5
44315	mNativeMenu.addIntentOptions(groupId,itemId,order,caller,specifics,intent,flags,null)	5
44610	mNativeMenu.clear()	4
44595	mNativeMenu.close()	4
44869	mNativeMenu.findItem(id)	4
44504	mNativeMenu.getItem(index)	4
44605	mNativeMenu.hasVisibleItems()	4
44468	mNativeMenu.isShortcutKey(keyCode,event)	4
44684	mNativeMenu.performIdentifierAction(id,flags)	4
44303	mNativeMenu.performShortcut(keyCode,event,flags)	4
44712	mNativeMenu.removeGroup(groupId)	4
44490	mNativeMenu.removeItem(id)	4
44599	mNativeMenu.setGroupCheckable(group,checkable,exclusive)	4
44526	mNativeMenu.setGroupEnabled(group,enabled)	4
44822	mNativeMenu.setGroupVisible(group,visible)	4
44853	mNativeMenu.setQwertyMode(isQwerty)	4
44444	mNativeMenu.size()	4
44656	mNativeSubMenu	4
44281	mNativeSubMenu.clearHeader()	4
44581	mNativeSubMenu.setHeaderIcon(icon)	4
44462	mNativeSubMenu.setHeaderIcon(iconRes)	4
44704	mNativeSubMenu.setHeaderTitle(title)	4
44367	mNativeSubMenu.setHeaderTitle(titleRes)	4
44647	mNativeSubMenu.setHeaderView(view)	4
44353	mNativeSubMenu.setIcon(icon)	4
44637	mNativeSubMenu.setIcon(iconRes)	4
39448	mNativeTab	4
40035	mNativeTab.getContentDescription()	4
39967	mNativeTab.getCustomView()	4
40030	mNativeTab.getIcon()	4
39407	mNativeTab.getPosition()	4
39538	mNativeTab.getText()	4
39405	mNativeTab.select()	4
40249	mNativeTab.setContentDescription(contentDesc)	4
40227	mNativeTab.setContentDescription(resId)	4
40258	mNativeTab.setCustomView(layoutResId)	4
39983	mNativeTab.setCustomView(view)	4
40019	mNativeTab.setIcon(icon)	4
39612	mNativeTab.setIcon(resId)	4
39978	mNativeTab.setTabListener(listener	4
39410	mNativeTab.setTag(this)	4
39711	mNativeTab.setText(resId)	4
40079	mNativeTab.setText(text)	4
29892	mNavDrawerEntries	3
45166	mNavItemSelectedListener	4
39469	mNavigationListener	4
39545	mNavigationListener.onNavigationItemSelected(itemPosition,itemId)	4
44977	mNavigationMode	7
9684	mNavigationView	27
58549	mNavigationView.getHeaderView(0)	7
27073	mNavigationView.getMenu().findItem(itemId).setChecked(true)	5
23318	mNavigationView.setNavigationItemSelectedListener(new	6
46433	mNeedSync	9
41043	mNeedsSort	5
6396	mNegativeQuantity	14
8145	mNetWorth	18
8852	mNextButton	5
62036	mNextButton.setBackgroundDrawable(new	3
62037	mNextButton.setEnabled(position	3
62192	mNextButton.setOnClickListener(new	3
62152	mNextButton.setText(R.string.btn_wizard_finish)	3
62187	mNextButton.setText(mEditingAfterReview	3
62191	mNextButton.setTextAppearance(this,v.resourceId)	3
62223	mNextButton.setTextColor(res.getColor(R.color.theme_accent))	3
62051	mNextButton.setTextColor(res.getColor(android.R.color.white))	3
24656	mNextMonthButton	18
5548	mNextMonthButton.setEnabled(false)	3
5402	mNextMonthButton.setEnabled(true)	3
24742	mNextMonthButton.setOnClickListener(new	10
59693	mNextRun	2
45834	mNextSelectedPosition	4
45893	mNextSelectedRowId	4
46589	mNoInvalidate	4
40427	mNode	4
40812	mNode.animation.start()	4
40351	mNode.tmpDependencies.get(i)	4
40890	mNode.tmpDependencies.remove(dependencyToRemove)	4
40369	mNode.tmpDependencies.size()	4
40412	mNodeMap	4
40645	mNodeMap.get(anim)	4
40960	mNodeMap.put(anim,mCurrentNode)	4
40610	mNodeMap.put(anim,node)	4
41047	mNodes	4
40787	mNodes)	5
40967	mNodes.add(mCurrentNode)	4
40802	mNodes.add(node)	4
40345	mNodes.get(i)	4
40981	mNodes.size()	4
41125	mNodes.size())	4
43698	mNonActionItems	6
44384	mNonActionItems.add(item)	4
44262	mNonActionItems.addAll(getVisibleItems())	4
44697	mNonActionItems.clear()	4
6893	mNormalBalance	5
2062	mNotes	20
20627	mNotes.length()	12
1572	mNotes.setText(transaction.getNote())	6
9202	mNotesEditText	11
31348	mNotesEditText.getText().toString()	22
31617	mNotesEditText.setEnabled(b)	6
11194	mNotesEditText.setText(mTransaction.getNote())	17
27333	mNumColumns	6
27339	mNumColumns)	6
40918	mNumKeyframes	8
19562	mNumberOfExecutions	6
19753	mNumberOfOccurences	5
19905	mNumberOfOccurences)	7
53483	mNumberOfPeriods	2
32640	mOC_dir	13
57385	mOC_dir,true).execute(mClient)	8
63172	mOC_dir.equals(mDir.getText().toString().trim())	3
32875	mOC_password	8
63111	mOC_password.equals(mPassword.getText().toString().trim())	3
32852	mOC_server	13
63179	mOC_server.equals(mServer.getText().toString().trim())	3
32772	mOC_sync	11
32773	mOC_username	9
63145	mOC_username.equals(mUsername.getText().toString().trim())	3
47376	mObserver	7
9623	mOfxRadioButton	5
63251	mOfxRadioButton.performClick()	3
63213	mOfxRadioButton.setOnClickListener(radioClickListener)	3
63208	mOfxRadioButton.setVisibility(View.GONE)	3
9843	mOkButton	43
33755	mOkButton.setCompoundDrawables(getResources().getDrawable(R.drawable.content_discard_holo_light),	3
33411	mOkButton.setCompoundDrawablesWithIntrinsicBounds(R.drawable.content_discard_holo_light,0,0,0)	7
50616	mOkButton.setOnClickListener(new	18
33500	mOkButton.setText(R.string.alert_dialog_ok_delete)	8
64233	mOkButton.setText(R.string.btn_move)	1
63189	mOkButton.setText(R.string.btn_save)	3
63148	mOkButton.setText(R.string.btn_test)	3
46135	mOldItemCount	5
49210	mOldQueryText	10
46400	mOldSelectedPosition	5
46228	mOldSelectedPosition)	4
45937	mOldSelectedRowId	5
46147	mOldSelectedRowId))	4
44627	mOnActionExpandListener	5
44349	mOnActionExpandListener.onMenuItemActionCollapse(this))	4
44407	mOnActionExpandListener.onMenuItemActionExpand(this))	4
52406	mOnBackListener	16
52394	mOnBackListener.onBackPressed()	8
24924	mOnCheckedChangeListeners	3
24703	mOnCheckedChangeListeners)	3
24715	mOnCheckedChangeListeners.add(checkedChangeListener)	3
49728	mOnChooseActivityListener	4
49804	mOnClickListener	5
49099	mOnCloseListener	6
27274	mOnColorSelectedListener	3
27335	mOnColorSelectedListener.onColorSelected(mColor)	3
49161	mOnDismissListener	4
49112	mOnDismissListener.onDismiss()	4
49697	mOnEditorActionListener	5
49360	mOnGlobalLayoutListener	4
46198	mOnItemClickListener	9
46166	mOnItemClickListener.onItemClick(/*this*/null,view,position,id)	4
46133	mOnItemLongClickListener	4
46207	mOnItemSelectedListener	9
46096	mOnItemSelectedListener.onItemSelected(this,v,selection,	4
46227	mOnItemSelectedListener.onNothingSelected(this)	4
52879	mOnKeyboardActionListener	16
50196	mOnMenuItemClickListener	4
63700	mOnNavigationListener	2
49260	mOnQueryChangeListener	6
50057	mOnQueryChangeListener.onQueryTextChange(newText.toString())	5
49060	mOnQueryTextFocusChangeListener	6
48907	mOnQueryTextFocusChangeListener.onFocusChange(SearchView.this,hasFocus)	5
49531	mOnSearchClickListener	6
49772	mOnSearchClickListener.onClick(this)	5
50380	mOnShareTargetSelectedListener	4
49709	mOnShareTargetSelectedListener.onShareTargetSelected(	4
48919	mOnSuggestionListener	6
7630	mOnTransferFundsListener	7
23921	mOnTransferFundsListener.transferComplete(mConvertedAmount)	12
47318	mOnlyIndeterminate	4
9759	mOpenSplitEditor	9
52918	mOpenSplitEditor.setOnClickListener(new	4
52404	mOpenSplitEditor.setVisibility(View.GONE)	2
32968	mOpenSplitEditor.setVisibility(View.VISIBLE)	9
33177	mOpenSplitEditor.setVisibility(visibility)	7
3546	mOpenSplitsButton	22
13514	mOpenSplitsButton.setOnClickListener(new	10
35834	mOpenSplitsButton.setVisibility(View.GONE)	10
42426	mOpenSubMenuId	5
44013	mOptionalIconsVisible	7
45664	mOptionsMenu	4
45773	mOptionsMenu)	4
45358	mOptionsMenu.findItem(state.expandedMenuItemId)	4
45322	mOptionsMenu.removeMenuPresenter(mActionMenuPresenter)	4
45602	mOptionsMenu.removeMenuPresenter(mExpandedMenuPresenter)	4
43261	mOrdering	9
13972	mOriginAccountId	9
24634	mOriginAccountUID	14
8405	mOriginAmount	13
50774	mOriginAmount.asBigDecimal().multiply(numerator)	7
11508	mOriginAmount.getCommodity().getCurrencyCode()	4
11385	mOriginAmount.getCommodity().getUID()	4
7523	mOriginAmount.getCurrency()	5
8270	mOriginAmount.getCurrency().getCurrencyCode()	4
23763	mOriginAmount.getDenominator())	8
58582	mOriginAmount.multiply(rate)	9
51015	mOriginAmount.multiply(rate).withCurrency(mTargetCommodity)	2
7496	mOriginAmount.multiply(rate).withCurrency(targetCommodity)	6
49201	mOutsideDrawablesCache	10
50958	mOutsideDrawablesCache.get(componentIconKey)	5
50881	mOutsideDrawablesCache.get(resourceUri)	5
50907	mOutsideDrawablesCache.put(componentIconKey,toCache)	5
50856	mOutsideDrawablesCache.put(resourceUri,drawable.getConstantState())	5
42580	mOverflowButton	4
42758	mOverflowButton)	4
42905	mOverflowButton.getMeasuredWidth()	4
43263	mOverflowButton.getParent()	4
42904	mOverflowButton.measure(spec,spec)	4
44819	mOverflowOnly	4
42814	mOverflowPopup	6
42557	mOverflowPopup.dismiss()	5
43046	mOverflowPopup.isShowing()	4
49352	mPackageNameToActivityMap	4
45997	mPaddingBottom	5
45827	mPaddingLeft	4
46420	mPaddingRight	5
46049	mPaddingTop	4
62142	mPage	3
62134	mPage.getData().putString(CurrencySelectPage.CURRENCY_CODE_DATA_KEY,currencyCode)	3
62097	mPageKey	3
9690	mPager	29
27005	mPager.getCurrentItem()	13
13182	mPager.setAdapter(mPagerAdapter)	26
31173	mPager.setAdapter(pagerAdapter)	4
13728	mPager.setCurrentItem(INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT)	4
19689	mPager.setCurrentItem(INDEX_TRANSACTIONS_FRAGMENT)	13
62245	mPager.setCurrentItem(i)	3
20889	mPager.setCurrentItem(index)	8
13215	mPager.setCurrentItem(lastTabIndex)	5
62234	mPager.setCurrentItem(mPager.getCurrentItem()	3
21221	mPager.setCurrentItem(mPagerAdapter.getCount()	8
62138	mPager.setCurrentItem(position)	3
62103	mPager.setOnPageChangeListener(new	3
13711	mPager.setVisibility(View.GONE)	25
8841	mPagerAdapter	60
62209	mPagerAdapter.getCutOffPage())	3
35159	mPagerAdapter.getItem(index)	2
13243	mPagerAdapter.notifyDataSetChanged()	26
62174	mPagerAdapter.setCutOffPage(cutOffPage)	3
27512	mPalette	3
27196	mPalette.drawPalette(mColors,mSelectedColor)	3
27126	mPalette.init(mSize,mColumns,this)	3
27354	mPalette.setVisibility(View.GONE)	3
27613	mPalette.setVisibility(View.VISIBLE)	3
21357	mParameters	14
21485	mParameters.shouldExportAllTransactions()	34
48084	mParent	4
48083	mParent.mMaxTabWidth)	4
24572	mParentAccountCursor	17
27486	mParentAccountCursor)	6
24454	mParentAccountCursor.close()	16
24396	mParentAccountCursor.getCount()	9
24428	mParentAccountCursorAdapter	9
24121	mParentAccountCursorAdapter.getCount()	10
26759	mParentAccountCursorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	10
19516	mParentAccountId	25
64214	mParentAccountId)	4
5108	mParentAccountSpinner	25
7761	mParentAccountSpinner.getSelectedItemId()	17
27043	mParentAccountSpinner.postDelayed(new	4
27365	mParentAccountSpinner.setAdapter(mCursorAdapter)	12
27592	mParentAccountSpinner.setAdapter(mParentAccountCursorAdapter)	6
5386	mParentAccountSpinner.setEnabled(false)	21
4601	mParentAccountSpinner.setEnabled(isChecked)	9
4776	mParentAccountSpinner.setEnabled(true)	14
8074	mParentAccountSpinner.setSelection(pos)	11
24559	mParentAccountSpinner.setSelection(pos,true)	7
26981	mParentAccountSpinner.setSelection(position)	4
4535	mParentAccountSpinner.setVisibility(View.INVISIBLE)	4
4736	mParentAccountSpinner.setVisibility(View.VISIBLE)	4
6293	mParentAccountSpinner.setVisibility(isChecked?View.VISIBLE:View.INVISIBLE)	4
23759	mParentAccountUID	36
24604	mParentAccountUID.length()	5
21032	mParentAccountUID.trim().length()	11
4459	mParentCheckBox	23
24090	mParentCheckBox.setChecked(false)	3
4629	mParentCheckBox.setChecked(true)	14
4921	mParentCheckBox.setOnCheckedChangeListener(new	17
44682	mParentMenu	4
44409	mParentMenu.collapseItemActionView(item)	4
44843	mParentMenu.dispatchMenuItemSelected(menu,item)	4
44724	mParentMenu.expandItemActionView(item)	4
44437	mParentMenu.isQwertyMode()	4
44211	mParentMenu.isShortcutsVisible()	4
44808	mParentMenu.setCallback(callback)	4
44435	mParentMenu.setQwertyMode(isQwerty)	4
44308	mParentMenu.setShortcutsVisible(shortcutsVisible)	4
57629	mPassTextView	2
57610	mPassTextView.setText(R.string.label_confirm_passcode)	2
57576	mPassTextView.setText(R.string.label_new_passcode)	2
57614	mPassTextView.setText(R.string.label_old_passcode)	2
57601	mPasscode	2
32895	mPassword	7
63147	mPassword.getText().toString().trim()	3
63143	mPassword.setText(mOC_password)	3
26658	mPeriod	14
18942	mPeriod/	3
33730	mPeriod/RecurrenceParser.DAY_MILLIS	4
8525	mPeriodEnd	19
7720	mPeriodEnd.getTime()){	5
53665	mPeriodNum	5
7745	mPeriodStart	5
53587	mPeriodType	2
8556	mPeriodType.getMultiplier()	19
24949	mPieChartActivity	7
24670	mPieChartActivity.finish()	6
7931	mPieChartButton	12
50926	mPieChartButton.setOnClickListener(new	7
6820	mPieChartView	6
32974	mPieChartView.getCurrentSeriesAndPoint()	3
4259	mPieChartView.repaint()	9
7138	mPieChartView.setOnClickListener(new	4
27444	mPlaceholderAccount	9
9758	mPlaceholderCheckBox	12
253	mPlaceholderCheckBox.setChecked(account.isPlaceholderAccount())	15
41916	mPlayingBackwards	7
40566	mPlayingSet	4
40756	mPlayingSet.add(node.animation)	4
40885	mPlayingSet.remove(animation)	4
42014	mPlayingState	6
43547	mPopup	18
48164	mPopup.	4
44377	mPopup.dismiss()	12
47238	mPopup.getBackground()	5
46651	mPopup.getBackground().getPadding(mTempRect)	4
46961	mPopup.getContentView()	4
47173	mPopup.getHeight()))	4
47987	mPopup.getHintText()	4
47222	mPopup.getInputMethodMode()	4
44730	mPopup.getListView().setOnKeyListener(this)	4
47402	mPopup.getWidth()	4
44828	mPopup.isShowing()	12
47759	mPopup.isShowing())	4
44636	mPopup.setAdapter(mAdapter)	4
48097	mPopup.setAdapter(mTempAdapter)	4
47964	mPopup.setAdapter(new	4
47189	mPopup.setAllowScrollingAnchorParent(!noInputMethod)	4
44594	mPopup.setAnchorView(anchor)	4
46876	mPopup.setBackgroundDrawable(d)	4
46782	mPopup.setClipToScreenEnabled(true)	4
47161	mPopup.setContentView(dropDownView)	4
47113	mPopup.setContentView(null)	4
44629	mPopup.setContentWidth(Math.min(measureContentWidth(mAdapter),mPopupMaxWidth))	4
47461	mPopup.setFocusable(modal)	4
47252	mPopup.setHeight(height)	4
47247	mPopup.setHeight(mDropDownHeight)	4
46608	mPopup.setInputMethodMode(PopupWindow.INPUT_METHOD_NEEDED)	4
44477	mPopup.setInputMethodMode(PopupWindow.INPUT_METHOD_NOT_NEEDED)	8
46686	mPopup.setInputMethodMode(mode)	4
44446	mPopup.setModal(true)	4
47190	mPopup.setOnDismissListener(listener)	4
44848	mPopup.setOnDismissListener(this)	4
44524	mPopup.setOnItemClickListener(this)	4
47332	mPopup.setOutsideTouchable(true)	5
47588	mPopup.setPromptText(a.getString(R.styleable.SherlockSpinner_android_prompt))	4
48004	mPopup.setPromptText(prompt)	4
46827	mPopup.setTouchInterceptor(mTouchInterceptor)	4
46946	mPopup.setWidth(mDropDownAnchorView.getWidth())	4
47166	mPopup.setWidth(mDropDownWidth)	4
47466	mPopup.setWindowLayoutMode(	4
47005	mPopup.setWindowLayoutMode(widthSpec,heightSpec)	4
44454	mPopup.show()	8
46706	mPopup.showAsDropDown(mDropDownAnchorView,	4
43469	mPopup.tryShow())	4
46620	mPopup.update(mDropDownAnchorView,mDropDownHorizontalOffset,	4
44471	mPopupMaxWidth	4
42843	mPopupPresenterCallback	4
40050	mPosition	4
43217	mPostedOpenRunnable	6
55038	mPreferenceActivity	5
55028	mPreferenceActivity.finish()	5
58604	mPreferenceActivity.getSharedPreferences(mPreferenceActivity.getString(R.string.owncloud_pref),Context.MODE_PRIVATE)	4
32774	mPrefs	21
58659	mPrefs.edit()	6
32532	mPrefs.edit().putBoolean(getString(R.string.owncloud_sync),false).apply()	10
31120	mPrefs.edit().putBoolean(mAccountsActivity.getString(R.string.key_owncloud_sync),true).commit()	7
32481	mPrefs.getBoolean(mContext.getString(R.string.owncloud_sync),false)	11
63169	mPrefs.getString(getString(R.string.key_owncloud_dir),getString(R.string.app_name))	3
63134	mPrefs.getString(getString(R.string.key_owncloud_password),null)	3
63151	mPrefs.getString(getString(R.string.key_owncloud_server),getString(R.string.owncloud_server))	3
63139	mPrefs.getString(getString(R.string.key_owncloud_username),null)	3
63131	mPrefs.getString(mContext.getString(R.string.key_owncloud_dir),null)	3
63176	mPrefs.getString(mContext.getString(R.string.key_owncloud_password),null)	3
57303	mPrefs.getString(mContext.getString(R.string.key_owncloud_server),null)	7
63175	mPrefs.getString(mContext.getString(R.string.key_owncloud_username),null)	3
44097	mPresenter	4
44106	mPresenter.dismissPopupMenus()	4
44123	mPresenter.hideOverflowMenu()	4
44114	mPresenter.isOverflowMenuShowing())	4
43466	mPresenter.showOverflowMenu()	4
44006	mPresenter.updateMenuView(false)	4
44456	mPresenterCallback	4
44523	mPresenterCallback.onCloseMenu(menu,allMenusAreClosing)	4
44465	mPresenterCallback.onOpenSubMenu(subMenu)	4
43994	mPresenters	4
43479	mPresenters)	7
43725	mPresenters.add(new	4
43370	mPresenters.isEmpty())	4
43642	mPresenters.remove(ref)	7
43329	mPreserveIconSpacing	4
43913	mPreserveIconSpacing)	4
9261	mPrevButton	5
62200	mPrevButton.setOnClickListener(new	3
62136	mPrevButton.setText(R.string.wizard_btn_back)	3
62162	mPrevButton.setTextAppearance(this,v.resourceId)	3
44115	mPreventDispatchingItemsChanged	4
50420	mPreviousLength	5
31962	mPreviousLocale	3
24834	mPreviousMonthButton	17
4982	mPreviousMonthButton.setEnabled(false)	3
4788	mPreviousMonthButton.setEnabled(true)	3
24972	mPreviousMonthButton.setOnClickListener(new	10
64183	mPreviousTimestamp	3
23363	mPrice	7
23681	mPrice.getValueDenom())	4
23788	mPrice.getValueNum()	4
23591	mPrice.setCommodityUID(mCommoditiesDbAdapter.getCommodityUID(currencyCode))	7
23871	mPrice.setCurrencyUID(mCommoditiesDbAdapter.getCommodityUID(currencyCode))	4
23508	mPrice.setDate(new	4
23581	mPrice.setSource(characterString)	4
23973	mPrice.setType(characterString)	5
23956	mPrice.setUID(characterString)	4
23992	mPrice.setValueDenom(Integer.valueOf(parts[1]))	5
23905	mPrice.setValueDenom(Long.valueOf(parts[1]))	4
23891	mPrice.setValueNum(Integer.valueOf(parts[0]))	5
23493	mPrice.setValueNum(Long.valueOf(parts[0]))	4
23439	mPriceCommodity	6
23682	mPriceCurrency	4
23685	mPriceList	8
23706	mPriceList.add(mPrice)	5
13611	mPricesDbAdapter	37
23519	mPricesDbAdapter.bulkAddRecords(mPriceList)	8
52236	mPricesDbAdapter.bulkAddRecords(mPriceList,DatabaseAdapter.UpdateMethod.insert)	4
56769	mPricesDbAdapter.fetchAllRecords()	3
56816	mPricesDbAdapter.getRecordsCount()	3
23768	mPricesDbAdpater	7
23950	mPricesDbAdpater.fetchAllRecords()	7
23427	mPricesDbAdpater.getRecordsCount()	7
62122	mPrimaryItem	4
62056	mPrimaryItem)	3
27195	mProgress	7
46804	mProgress)	4
47039	mProgress.setProgress(mProgressStatus)	4
27445	mProgress.setVisibility(View.GONE)	3
27433	mProgress.setVisibility(View.VISIBLE)	3
45087	mProgressBarPadding	4
7146	mProgressDialog	18
7223	mProgressDialog.dismiss()	27
9661	mProgressDialog.isShowing())	21
7158	mProgressDialog.setIndeterminate(true)	12
28574	mProgressDialog.setProgressNumberFormat(null)	9
28392	mProgressDialog.setProgressPercentFormat(null)	9
7263	mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL)	12
6438	mProgressDialog.setTitle(R.string.title_progress_exporting_transactions)	8
31721	mProgressDialog.setTitle(R.string.title_progress_importing_accounts)	4
6649	mProgressDialog.show()	12
46955	mProgressDrawable	4
47137	mProgressDrawable)	4
47329	mProgressDrawable.isStateful())	4
47507	mProgressDrawable.jumpToCurrentState()	4
46583	mProgressDrawable.setBounds(0,0,right,bottom)	4
47308	mProgressDrawable.setCallback(null)	4
47548	mProgressDrawable.setState(state)	4
47405	mProgressStatus	4
45569	mProgressStyle	4
45175	mProgressView	4
45557	mProgressView.bringToFront()	4
45319	mProgressView.getMeasuredHeight()	4
45339	mProgressView.getMeasuredWidth(),halfProgressHeight)	4
45293	mProgressView.getVisibility()	4
44936	mProgressView.layout(mProgressBarPadding,-halfProgressHeight,	4
45711	mProgressView.measure(MeasureSpec.makeMeasureSpec(	4
45291	mProgressView.setId(R.id.abs__progress_horizontal)	4
45115	mProgressView.setMax(10000)	4
48121	mPrompt	4
47354	mPromptPosition	4
47070	mPromptView	5
46774	mPromptView.getParent()	4
41415	mProperty	8
41986	mProperty.get(target)	4
42239	mProperty.getName()	4
42266	mProperty.set(target,getAnimatedValue())	4
42117	mProperty.set(target,mFloatAnimatedValue)	4
42102	mProperty.set(target,mIntAnimatedValue)	4
41623	mPropertyMapLock	4
42302	mPropertyMapLock.writeLock().lock()	7
41926	mPropertyMapLock.writeLock().unlock()	6
41672	mPropertyName	7
41298	mPropertyName.	5
8757	mProposeBudgets	4
42776	mProvider	8
43072	mProvider.hasSubMenu()	4
42544	mProvider.onCreateActionView()	4
42396	mProvider.onPerformDefaultAction()	4
42471	mProvider.onPrepareSubMenu(new	4
49153	mProvider.subUiVisibilityChanged(false)	4
49648	mProvider.subUiVisibilityChanged(true)	4
49796	mProviderContext	5
50628	mProviderContext.getContentResolver().openInputStream(uri)	5
50933	mProviderContext.getPackageName()	5
50732	mProviderContext.getResources().getDrawable(resourceId)	5
42935	mProxy	6
42915	mProxy.getAlpha()	5
42707	mProxy.getTranslationX()	5
42793	mProxy.getTranslationY()	5
42748	mProxy.setAlpha(alpha)	5
43250	mProxy.setTranslationX(translationX)	5
42724	mProxy.setTranslationY(translationY)	5
8834	mQifRadioButton	7
63214	mQifRadioButton.performClick()	3
63255	mQifRadioButton.setOnClickListener(radioClickListener)	3
5227	mQuantity	23
12088	mQuantity.getCommodity().getCurrencyCode()	2
11956	mQuantity.getCurrency().getCurrencyCode()	14
34079	mQuantity.getCurrency().getDefaultFractionDigits()	5
11773	mQuantity.getDenominator()	11
11291	mQuantity.getNumerator()	11
59447	mQuantity.hashCode()	4
49348	mQueryHint	6
48892	mQueryRefinement	10
49208	mQueryTextView	9
50110	mQueryTextView)	5
49523	mQueryTextView.addTextChangedListener(mTextWatcher)	5
49593	mQueryTextView.clearFocus()	5
50435	mQueryTextView.clearListSelection()	5
50032	mQueryTextView.dismissDropDown()	5
50094	mQueryTextView.getDropDownBackground().getPadding(dropDownPadding)	5
49474	mQueryTextView.getImeOptions()	9
49462	mQueryTextView.getInputType()	5
50105	mQueryTextView.getListSelection()	5
49793	mQueryTextView.getListSelection())	5
49465	mQueryTextView.getText()	9
50261	mQueryTextView.hasFocus()	5
50191	mQueryTextView.requestFocus()	5
49066	mQueryTextView.requestFocus(direction,previouslyFocusedRect)	5
50020	mQueryTextView.setAdapter(mSuggestionsAdapter)	6
49756	mQueryTextView.setDropDownAnimationStyle(0)	5
50378	mQueryTextView.setDropDownHorizontalOffset(-(dropDownPadding.left	5
50399	mQueryTextView.setDropDownWidth(mDropDownAnchor.getWidth()	5
50408	mQueryTextView.setHint(getDecoratedHint(""))	5
50600	mQueryTextView.setHint(getDecoratedHint(hint))	5
50538	mQueryTextView.setHint(getDecoratedHint(mQueryHint))	5
49448	mQueryTextView.setImeOptions(imeOptions)	5
50349	mQueryTextView.setImeOptions(mCollapsedImeOptions	5
50012	mQueryTextView.setImeOptions(mCollapsedImeOptions)	5
49881	mQueryTextView.setImeOptions(mSearchable.getImeOptions())	5
49058	mQueryTextView.setInputType(inputType)	9
49760	mQueryTextView.setListSelection(0)	5
48869	mQueryTextView.setOnClickListener(mOnClickListener)	5
49290	mQueryTextView.setOnEditorActionListener(mOnEditorActionListener)	5
48864	mQueryTextView.setOnFocusChangeListener(new	5
49305	mQueryTextView.setOnItemClickListener(mOnItemClickListener)	5
49634	mQueryTextView.setOnItemSelectedListener(mOnItemSelectedListener)	5
49617	mQueryTextView.setOnKeyListener(mTextKeyListener)	5
49439	mQueryTextView.setPrivateImeOptions(IME_OPTION_NO_MICROPHONE)	5
49537	mQueryTextView.setSearchView(this)	5
50405	mQueryTextView.setSelection(TextUtils.isEmpty(query)	5
49303	mQueryTextView.setSelection(mQueryTextView.length())	5
50259	mQueryTextView.setSelection(selPoint)	5
49763	mQueryTextView.setText("")	5
49349	mQueryTextView.setText(query)	5
50031	mQueryTextView.setThreshold(mSearchable.getSuggestThreshold())	5
36344	mQuoteFlag	11
43539	mQwertyMode	4
43346	mRadioButton	4
44023	mRadioButton.setVisibility(GONE)	4
48221	mReadShareHistoryCalled	7
48710	mRealOwner	5
53534	mReconcileDate	6
53639	mReconcileState	8
1660	mRecurrence	14
55803	mRecurrence.getByDays()	4
8392	mRecurrence.getMultiplier()	6
53611	mRecurrence.getPeriod()	5
53567	mRecurrence.getPeriodEnd().getTime()	2
53668	mRecurrence.getPeriodStart().getTime()	2
8295	mRecurrence.getPeriodType().getMultiplier()	13
7571	mRecurrence.setMultiplier(mRecurrenceMultiplier)	3
51932	mRecurrence.setPeriodEnd(new	6
51887	mRecurrence.setPeriodStart(new	6
8004	mRecurrence.setPeriodType(periodType)	5
438	mRecurrence.setText(scheduledAction.getRepeatString())	6
14287	mRecurrenceDbAdapter	19
52323	mRecurrenceDbAdapter.addRecord(budget.getRecurrence())	4
52230	mRecurrenceDbAdapter.addRecord(budget.getRecurrence(),updateMethod)	2
52238	mRecurrenceDbAdapter.addRecord(scheduledAction.getRecurrence())	4
52158	mRecurrenceDbAdapter.addRecord(scheduledAction.getRecurrence(),updateMethod)	2
52240	mRecurrenceDbAdapter.bulkAddRecords(recurrenceList)	4
52061	mRecurrenceDbAdapter.bulkAddRecords(recurrenceList,updateMethod)	2
54407	mRecurrenceDbAdapter.deleteAllRecords()	2
9320	mRecurrenceInput	7
54003	mRecurrenceInput.setOnClickListener(	5
53762	mRecurrenceInput.setText(budget.getRecurrence().getRepeatString())	5
54062	mRecurrenceInput.setText(repeatString)	4
20085	mRecurrenceMultiplier	24
55522	mRecurrenceOptionsView	2
55468	mRecurrenceOptionsView.setVisibility(View.GONE)	2
55557	mRecurrenceOptionsView.setVisibility(View.VISIBLE)	2
2645	mRecurrencePeriod	16
2479	mRecurrenceRule	40
53918	mRecurrenceSetListener	5
3091	mRecurrenceTextView	32
34665	mRecurrenceTextView.setOnClickListener(new	14
3105	mRecurrenceTextView.setText(repeatString)	16
27062	mRecurrenceTextView.setText(scheduledAction.getRepeatString())	8
19636	mRecurrenceTextView.setText(scheduledActions.get(0).getRuleString())	5
18075	mRecurringTransactionSpinner	10
18038	mRecurringTransactionSpinner.getSelectedItemPosition()	10
18022	mRecurringTransactionSpinner.setAdapter(recurrenceAdapter)	12
63541	mRecurringTransactionSpinner.setEnabled(b)	4
18433	mRecurringTransactionSpinner.setSelection(selectionIndex)	7
46508	mRecycler	5
47865	mRecycler.clear()	4
47740	mRecycler.get(position)	4
46219	mRecycler.get(selectedPosition)	4
47621	mRecycler.put(0,child)	4
45941	mRecycler.put(selectedPosition,view)	4
8938	mRecyclerView	19
60445	mRecyclerView.setAdapter(mAccountRecyclerAdapter)	6
53824	mRecyclerView.setAdapter(mBudgetRecyclerAdapter)	2
60666	mRecyclerView.setAdapter(mTransactionRecyclerAdapter)	3
53848	mRecyclerView.setAdapter(new	2
61926	mRecyclerView.setEmptyView(mEmptyTextView)	3
54090	mRecyclerView.setEmptyView(mProposeBudgets)	2
31498	mRecyclerView.setEmptyView(view.findViewById(R.id.empty_view))	4
31902	mRecyclerView.setHasFixedSize(true)	12
31904	mRecyclerView.setLayoutManager(gridLayoutManager)	5
30141	mRecyclerView.setLayoutManager(mLayoutManager)	14
57607	mReenter	2
47424	mRefreshProgressRunnable	4
49549	mReleaseCursorRunnable	5
26989	mReleaseDbAdapter	5
31670	mRemovedSplitUIDs	24
31604	mRemovedSplitUIDs.add(splitUidTextView.getText().toString())	16
33064	mRenderer	5
33126	mRenderer.addSeriesRenderer(i	3
33107	mRenderer.addSeriesRenderer(i,tmp4)	3
33116	mRenderer.addSeriesRenderer(new	3
33024	mRenderer.addSeriesRenderer(renderer)	4
33095	mRenderer.getSeriesRendererAt(i	3
32928	mRenderer.getSeriesRendererAt(i)	3
33058	mRenderer.getSeriesRendererAt(i).setHighlighted(false)	3
33080	mRenderer.getSeriesRendererAt(i).setHighlighted(i	3
33091	mRenderer.getSeriesRendererCount()	3
33114	mRenderer.removeAllRenderers()	6
32949	mRenderer.removeSeriesRenderer(tmp3)	3
33054	mRenderer.removeSeriesRenderer(tmp4)	3
6542	mRenderer.setChartTitle("Expenses")	5
33150	mRenderer.setChartTitle(mAccountType.toString())	3
6982	mRenderer.setChartTitle(type.toString())	5
7107	mRenderer.setChartTitleTextSize(25)	5
33151	mRenderer.setClickEnabled(true)	4
33120	mRenderer.setLabelsColor(Color.BLACK)	4
33250	mRenderer.setLabelsTextSize(15)	4
33078	mRenderer.setShowLabels(true)	4
33269	mRenderer.setShowLegend(false)	4
33048	mRenderer.setStartAngle(180)	4
32998	mRenderer.setZoomButtonsVisible(true)	4
41784	mRepeatCount	7
41829	mRepeatMode	4
1872	mReplaceStatement	44
59714	mReplaceStatement.bindLong(10,account.isHidden()	6
14137	mReplaceStatement.bindLong(10,transaction.isTemplate()	5
14071	mReplaceStatement.bindLong(11,account.isHidden()	26
14343	mReplaceStatement.bindLong(12,	4
14525	mReplaceStatement.bindLong(13,	4
14144	mReplaceStatement.bindLong(14,	4
14563	mReplaceStatement.bindLong(15,	4
14367	mReplaceStatement.bindLong(2,recurrence.getPeriodType().getMultiplier())	4
14024	mReplaceStatement.bindLong(4,	16
14316	mReplaceStatement.bindLong(4,budgetAmount.getAmount().getNumerator())	4
14324	mReplaceStatement.bindLong(4,split.getValue().getNumerator())	4
61810	mReplaceStatement.bindLong(4,split.getValue().multiply(split.getValue().getNumberOfDecimalPlaces()).intValue())	4
61713	mReplaceStatement.bindLong(4,transaction.getTimeMillis())	6
14248	mReplaceStatement.bindLong(5,	18
61801	mReplaceStatement.bindLong(5,(long)Math.pow(10,split.getValue().getNumberOfDecimalPlaces()))	4
14106	mReplaceStatement.bindLong(5,budget.getNumberOfPeriods())	4
14368	mReplaceStatement.bindLong(5,budgetAmount.getAmount().getDenominator())	4
14183	mReplaceStatement.bindLong(5,schedxAction.getEndTime())	4
14633	mReplaceStatement.bindLong(5,transaction.isExported()	21
52550	mReplaceStatement.bindLong(6,	13
59796	mReplaceStatement.bindLong(6,account.isFavorite()	6
63399	mReplaceStatement.bindLong(6,book.isActive()	6
14114	mReplaceStatement.bindLong(6,budgetAmount.getPeriodNum())	4
14154	mReplaceStatement.bindLong(6,schedxAction.getLastRunTime())	4
14206	mReplaceStatement.bindLong(6,split.getQuantity().getNumerator())	4
61797	mReplaceStatement.bindLong(6,split.getQuantity().multiply(split.getQuantity().getNumberOfDecimalPlaces()).intValue())	4
14539	mReplaceStatement.bindLong(7,	17
61804	mReplaceStatement.bindLong(7,(long)Math.pow(10,split.getQuantity().getNumberOfDecimalPlaces()))	4
68	mReplaceStatement.bindLong(7,account.isFavorite()	14
36091	mReplaceStatement.bindLong(7,commodity.getFraction())	7
14274	mReplaceStatement.bindLong(7,commodity.getSmallestFraction())	9
14551	mReplaceStatement.bindLong(7,schedxAction.isEnabled()	4
14582	mReplaceStatement.bindLong(7,split.getQuantity().getDenominator())	4
14365	mReplaceStatement.bindLong(8,	21
59803	mReplaceStatement.bindLong(8,account.isPlaceholderAccount()	6
14208	mReplaceStatement.bindLong(8,commodity.getQuoteFlag())	6
14522	mReplaceStatement.bindLong(9,account.isPlaceholderAccount()	23
26602	mReplaceStatement.bindLong(9,transaction.isTemplate()	6
52655	mReplaceStatement.bindNull(10)	10
52567	mReplaceStatement.bindNull(14)	2
59716	mReplaceStatement.bindNull(5)	5
59814	mReplaceStatement.bindNull(6)	5
26255	mReplaceStatement.bindNull(8)	6
14412	mReplaceStatement.bindNull(9)	12
666	mReplaceStatement.bindString(1,account.getUID())	14
32733	mReplaceStatement.bindString(1,book.getUID())	8
14554	mReplaceStatement.bindString(1,budget.getUID())	4
14188	mReplaceStatement.bindString(1,budgetAmount.getUID())	4
14252	mReplaceStatement.bindString(1,commodity.getUID())	5
14453	mReplaceStatement.bindString(1,price.getUID())	10
14186	mReplaceStatement.bindString(1,recurrence.getUID())	4
14546	mReplaceStatement.bindString(1,schedxAction.getUID())	5
14440	mReplaceStatement.bindString(1,split.getUID())	5
14123	mReplaceStatement.bindString(1,transaction.getUID())	8
14510	mReplaceStatement.bindString(10,Integer.toString(schedxAction.getTotalFrequency()))	4
52422	mReplaceStatement.bindString(10,TimestampHelper.getUtcStringForTimestamp(account.getCreatedTimestamp()))	5
52632	mReplaceStatement.bindString(10,TimestampHelper.getUtcStringFromTimestamp(account.getCreatedTimestamp()))	4
14050	mReplaceStatement.bindString(10,account.getCreatedTimestamp().toString())	20
53010	mReplaceStatement.bindString(10,schedxAction.getTag())	5
14519	mReplaceStatement.bindString(10,split.getReconcileDate().toString())	4
52575	mReplaceStatement.bindString(10,split.getTransactionUID())	11
53232	mReplaceStatement.bindString(11,Integer.toString(schedxAction.getTotalFrequency()))	5
59717	mReplaceStatement.bindString(11,account.getParentUID())	6
14059	mReplaceStatement.bindString(11,schedxAction.getRecurrence().getUID())	4
14048	mReplaceStatement.bindString(11,split.getAccountUID())	4
53002	mReplaceStatement.bindString(12,Integer.toString(schedxAction.getExecutionCount()))	5
26600	mReplaceStatement.bindString(12,account.getCommodityUID())	6
59835	mReplaceStatement.bindString(12,account.getDefaultTransferAccountUID())	6
59772	mReplaceStatement.bindString(12,account.getParentUID())	6
14184	mReplaceStatement.bindString(12,commodity.getUID())	9
36635	mReplaceStatement.bindString(12,commodityUID)	7
26575	mReplaceStatement.bindString(12,parentAccountUID)	6
14049	mReplaceStatement.bindString(12,split.getTransactionUID())	4
26523	mReplaceStatement.bindString(13,account.getDefaultTransferAccountUID())	9
14020	mReplaceStatement.bindString(13,parentAccountUID)	5
14160	mReplaceStatement.bindString(14,account.getDefaultTransferAccountUID())	7
14257	mReplaceStatement.bindString(16,schedxAction.getTemplateAccountUID())	4
14330	mReplaceStatement.bindString(17,Integer.toString(schedxAction.getExecutionCount()))	4
411	mReplaceStatement.bindString(2,account.getName())	14
63379	mReplaceStatement.bindString(2,book.getDisplayName())	6
14197	mReplaceStatement.bindString(2,budget.getName())	4
14189	mReplaceStatement.bindString(2,budgetAmount.getBudgetUID())	4
14118	mReplaceStatement.bindString(2,commodity.getFullname())	5
14499	mReplaceStatement.bindString(2,price.getCommodityUID())	12
14066	mReplaceStatement.bindString(2,schedxAction.getActionUID())	7
14322	mReplaceStatement.bindString(2,split.getMemo())	11
14139	mReplaceStatement.bindString(2,transaction.getDescription())	11
59757	mReplaceStatement.bindString(3,account.getAccountType().name())	6
912	mReplaceStatement.bindString(3,account.getDescription())	13
63466	mReplaceStatement.bindString(3,book.getRootAccountUID())	6
14371	mReplaceStatement.bindString(3,budget.getDescription())	4
14632	mReplaceStatement.bindString(3,budgetAmount.getAccountUID())	4
14223	mReplaceStatement.bindString(3,commodity.getNamespace().name())	5
14288	mReplaceStatement.bindString(3,price.getCurrencyUID())	12
14098	mReplaceStatement.bindString(3,recurrence.getPeriodType().name())	4
14224	mReplaceStatement.bindString(3,schedxAction.getActionType().name())	7
14138	mReplaceStatement.bindString(3,split.getType().name())	11
14474	mReplaceStatement.bindString(3,transaction.getNote())	11
52445	mReplaceStatement.bindString(4,TimestampHelper.getUtcStringForTimestamp(price.getDate()))	5
52614	mReplaceStatement.bindString(4,TimestampHelper.getUtcStringFromTimestamp(price.getDate()))	4
1687	mReplaceStatement.bindString(4,account.getAccountType().name())	13
59843	mReplaceStatement.bindString(4,account.getCurrency().getCurrencyCode())	6
63424	mReplaceStatement.bindString(4,book.getRootTemplateUID())	6
14235	mReplaceStatement.bindString(4,budget.getRecurrence().getUID())	4
14284	mReplaceStatement.bindString(4,commodity.getMnemonic())	9
14541	mReplaceStatement.bindString(4,price.getDate().toString())	9
14279	mReplaceStatement.bindString(4,recurrence.getByDay())	4
61716	mReplaceStatement.bindString(4,split.getAmount().toPlainString())	6
59745	mReplaceStatement.bindString(5,account.getColorHexCode())	6
890	mReplaceStatement.bindString(5,account.getCurrency().getCurrencyCode())	13
63487	mReplaceStatement.bindString(5,book.getSourceUri().toString())	6
14398	mReplaceStatement.bindString(5,commodity.getLocalSymbol())	12
14104	mReplaceStatement.bindString(5,price.getSource())	12
14559	mReplaceStatement.bindString(5,recurrence.getPeriodStart().toString())	4
61608	mReplaceStatement.bindString(5,split.getCreatedTimestamp().toString())	6
1832	mReplaceStatement.bindString(6,account.getColorHexCode())	9
14390	mReplaceStatement.bindString(6,commodity.getCusip())	12
1258	mReplaceStatement.bindString(6,convertToRGBHexString(account.getColor()))	3
14524	mReplaceStatement.bindString(6,price.getType())	7
14579	mReplaceStatement.bindString(6,recurrence.getPeriodEnd().toString())	4
61615	mReplaceStatement.bindString(6,split.getAccountUID())	6
14357	mReplaceStatement.bindString(6,transaction.getCurrencyCode())	21
59839	mReplaceStatement.bindString(7,account.getFullName())	6
14557	mReplaceStatement.bindString(7,commodity.getUID())	11
36674	mReplaceStatement.bindString(7,commodityUID)	8
61468	mReplaceStatement.bindString(7,split.getTransactionUID())	6
26309	mReplaceStatement.bindString(7,transaction.getCommodityUID())	6
26292	mReplaceStatement.bindString(7,transaction.getCreatedTimestamp().toString())	12
26363	mReplaceStatement.bindString(8,	6
52625	mReplaceStatement.bindString(8,TimestampHelper.getUtcStringForTimestamp(split.getCreatedTimestamp()))	5
52540	mReplaceStatement.bindString(8,TimestampHelper.getUtcStringForTimestamp(transaction.getCreatedTimestamp()))	5
52620	mReplaceStatement.bindString(8,TimestampHelper.getUtcStringFromTimestamp(split.getCreatedTimestamp()))	4
52656	mReplaceStatement.bindString(8,TimestampHelper.getUtcStringFromTimestamp(transaction.getCreatedTimestamp()))	4
874	mReplaceStatement.bindString(8,account.getFullName())	13
14340	mReplaceStatement.bindString(8,schedxAction.getCreatedTimestamp().toString())	4
14130	mReplaceStatement.bindString(8,split.getCreatedTimestamp().toString())	10
14096	mReplaceStatement.bindString(8,transaction.getCreatedTimestamp().toString())	15
14486	mReplaceStatement.bindString(9,	5
14233	mReplaceStatement.bindString(9,String.valueOf(split.getReconcileState()))	4
52536	mReplaceStatement.bindString(9,TimestampHelper.getUtcStringForTimestamp(schedxAction.getCreatedTimestamp()))	5
52558	mReplaceStatement.bindString(9,TimestampHelper.getUtcStringFromTimestamp(schedxAction.getCreatedTimestamp()))	4
59794	mReplaceStatement.bindString(9,account.getCreatedTimestamp().toString())	6
52481	mReplaceStatement.bindString(9,schedxAction.getCreatedTimestamp().toString())	7
14296	mReplaceStatement.bindString(9,schedxAction.getTag())	4
52482	mReplaceStatement.bindString(9,split.getAccountUID())	11
1938	mReplaceStatement.clearBindings()	30
1782	mReportEndTime	40
9621	mReportGenerator	7
23247	mReportGenerator.cancel(true)	5
23206	mReportGenerator.execute()	5
212	mReportGroupInterval	19
32206	mReportPeriodEnd	3
26173	mReportPeriodStart	6
26341	mReportPeriodStart,mReportPeriodEnd).asDouble()	6
1778	mReportStartTime	43
8028	mReportStartTime,mReportEndTime).absolute().asDouble()	10
959	mReportStartTime,mReportEndTime).asDouble()	14
10892	mReportType	12
32344	mReportType)//if	3
32469	mReportType.getReportNames())	6
32457	mReportTypeMap	6
60215	mReportTypeMap.get(name).newInstance()	3
32118	mReportTypeMap.put("Balance	7
32052	mReportTypeMap.put("Bar	7
32242	mReportTypeMap.put("Income/Expense	7
32304	mReportTypeMap.put("Pie	7
32091	mReportTypeMap.put(context.getString(R.string.title_balance_sheet_report),BalanceSheetFragment.class)	3
32751	mReportTypeMap.put(context.getString(R.string.title_bar_chart),StackedBarChartFragment.class)	3
32372	mReportTypeMap.put(context.getString(R.string.title_cash_flow_report),CashFlowBarChartFragment.class)	8
60113	mReportTypeMap.put(context.getString(R.string.title_cash_flow_report),CashFlowFragment.class)	5
32331	mReportTypeMap.put(context.getString(R.string.title_cash_flow_report),CashFlowLineChartFragment.class)	6
32179	mReportTypeMap.put(context.getString(R.string.title_pie_chart),PieChartFragment.class)	6
60182	mReportTypeSelectedListener	3
9651	mReportTypeSpinner	8
32294	mReportTypeSpinner.setAdapter(arrayAdapter)	6
32392	mReportTypeSpinner.setOnItemSelectedListener(mReportTypeSelectedListener)	6
32284	mReportTypeSpinner.setSelection(arrayAdapter.getPosition(reportName))	3
32090	mReportTypeSpinner.setVisibility(View.GONE)	6
32087	mReportTypeSpinner.setVisibility(View.VISIBLE)	6
9174	mReportsActivity	27
32291	mReportsActivity.findViewById(R.id.date_range_divider)	3
32109	mReportsActivity.findViewById(R.id.report_account_type_spinner)	3
32123	mReportsActivity.findViewById(R.id.time_range_layout)	3
13858	mReportsActivity.finish()	5
23120	mReportsActivity.getProgressBar().setVisibility(View.GONE)	3
23180	mReportsActivity.getProgressBar().setVisibility(View.VISIBLE)	3
14000	mReportsActivity.refresh()	2
32129	mReportsActivity.setAppBarColor(getReportType().getTitleColor())	3
32271	mReportsActivity.toggleToolbarTitleVisibility()	3
32201	mReportsOverviewFragment	3
39170	mReserveOverflow	15
38964	mReserveOverflowSet	11
46995	mResizePopupRunnable	4
47195	mResizePopupRunnable.run()	4
43881	mResources	4
43550	mResources.getBoolean(	4
43383	mResources.getConfiguration().keyboard	4
23122	mRootAccount	4
32537	mRootAccount.getUID()	7
54220	mRootAccount.setAccountType(AccountType.ROOT)	2
20341	mRootAccountId	16
24295	mRootAccountId)	3
6125	mRootAccountId){	14
20319	mRootAccountUID	25
52964	mRootTemplateAccount	5
26064	mRootTemplateAccount.setAccountType(AccountType.ROOT)	7
52134	mRootTemplateUID	8
60462	mRowIDColumn	3
61964	mRowSplitAmount	4
62016	mRowSplitAmount.setVisibility(View.GONE)	4
61953	mRowTransferAccount	4
61998	mRowTransferAccount.setVisibility(View.GONE)	4
40499	mRule	4
41814	mRunning	5
42188	mRunning)	4
9194	mSampleExchangeRate	5
12357	mSampleExchangeRate.setText("e.g.	11
7828	mSampleExchangeRate.setText(String.format(getString(R.string.sample_exchange_rate),	7
47193	mSampleTile	4
7379	mSaveButton	38
64327	mSaveButton.setOnClickListener(mListener)	1
30386	mSaveButton.setOnClickListener(new	37
34687	mSaveButton.setText(R.string.btn_export)	12
18615	mSaveMenuItem	10
19191	mSaveMenuItem.setEnabled(mTransactionId	7
18904	mSaveMenuItem.setEnabled(valid)	12
2374	mSaveTemplate	5
3004	mSaveTemplate.setChecked(false)	5
3062	mSaveTemplate.setChecked(mTransaction.isTemplate())	9
3325	mSaveTemplate.setChecked(true)	5
3403	mSaveTemplate.setEnabled(false)	5
3943	mSaveTemplate.setEnabled(true)	5
9118	mSaveTemplateCheckbox	15
51796	mSaveTemplateCheckbox.setChecked(false)	3
28900	mSaveTemplateCheckbox.setChecked(mTransaction.isTemplate())	13
51832	mSaveTemplateCheckbox.setChecked(true)	3
51853	mSaveTemplateCheckbox.setEnabled(false)	3
51843	mSaveTemplateCheckbox.setEnabled(true)	3
40022	mSavedTabPosition	4
42573	mScaleX	4
42574	mScaleY	4
6160	mScheduledAction	9
58702	mScheduledAction.setActionType(ScheduledAction.ActionType.BACKUP)	1
58680	mScheduledAction.setActionType(ScheduledAction.ActionType.TRANSACTION)	1
32439	mScheduledAction.setActionType(type)	7
26159	mScheduledAction.setActionUID(BaseModel.generateUID())	6
25415	mScheduledAction.setActionUID(UUID.randomUUID().toString().replaceAll("-",""))	6
2711	mScheduledAction.setActionUID(characterString)	6
5064	mScheduledAction.setActionUID(mTemplateAccountToTransactionMap.get(characterString))	8
25521	mScheduledAction.setAutoCreate(characterString.equals("y"))	4
4707	mScheduledAction.setCreatedTimestamp(new	2
25567	mScheduledAction.setEnabled(characterString.equals("y"))	5
20000	mScheduledAction.setEnabled(characterString.equalsIgnoreCase("y"))	7
5199	mScheduledAction.setEndTime(GncXmlHelper.DATE_FORMATTER.parse(characterString).getTime())	7
5568	mScheduledAction.setEndTime(date)	2
6176	mScheduledAction.setLastRun(GncXmlHelper.DATE_FORMATTER.parse(characterString).getTime())	7
4225	mScheduledAction.setLastRun(date)	2
20063	mScheduledAction.setNumberOfOccurences(Integer.parseInt(characterString))	5
4205	mScheduledAction.setPeriod(periodType)	16
53351	mScheduledAction.setRecurrence(mRecurrence)	2
5439	mScheduledAction.setStartTime(GncXmlHelper.DATE_FORMATTER.parse(characterString).getTime())	7
6003	mScheduledAction.setStartTime(date)	4
19690	mScheduledAction.setTotalFrequency(Integer.parseInt(characterString))	12
59958	mScheduledAction.setTotalPlannedExecutionCount(Integer.parseInt(characterString))	3
5111	mScheduledAction.setUID(characterString)	9
595	mScheduledActionDbAdapter	43
54506	mScheduledActionDbAdapter.addRecord(scheduledAction)	5
53141	mScheduledActionDbAdapter.buildModelInstance(cursor)	8
58627	mScheduledActionDbAdapter.buildScheduledActionInstance(cursor)	5
54575	mScheduledActionDbAdapter.deleteRecord(id)	5
25647	mScheduledActionDbAdapter.fetchAllRecords(	4
25507	mScheduledActionDbAdapter.fetchAllRecords()	5
55187	mScheduledActionDbAdapter.getActionInstanceCount(scheduledActionUID)	3
54496	mScheduledActionDbAdapter.getAllEnabledScheduledActions()	2
64088	mScheduledActionDbAdapter.getRecord(scheduledAction.getUID())	3
19765	mScheduledActionUID	3
3777	mScheduledActionsDbAdapter	17
3321	mScheduledActionsDbAdapter.addScheduledAction(mScheduledAction)	3
3959	mScheduledActionsDbAdapter.addScheduledAction(scheduledAction)	3
52299	mScheduledActionsDbAdapter.bulkAddRecords(mScheduledActionsList)	5
52254	mScheduledActionsDbAdapter.bulkAddRecords(mScheduledActionsList,DatabaseAdapter.UpdateMethod.insert)	2
2388	mScheduledActionsDbAdapter.bulkAddScheduledActions(mScheduledActionsList)	14
2917	mScheduledActionsList	12
3811	mScheduledActionsList.add(mScheduledAction)	16
2372	mScheduledActionsList.add(scheduledAction)	5
33758	mScheduledEventDbAdapter	5
33644	mScheduledEventDbAdapter.fetchAllRecords()	3
42743	mScrapActionButtonView	4
46505	mScrapHeap	4
46310	mScrapHeap.delete(position)	4
46253	mScrapHeap.get(position)	4
46044	mScrapHeap.put(position,v)	4
46631	mScrollListener	4
54122	mScrollView.fullScroll(ScrollView.FOCUS_DOWN)	5
49163	mSearchButton	5
50078	mSearchButton)	5
49165	mSearchButton.setOnClickListener(mOnClickListener)	5
50160	mSearchButton.setVisibility(visCollapsed)	5
49492	mSearchEditFrame	5
50569	mSearchEditFrame.setVisibility(collapsed	5
49368	mSearchHintIcon	5
50195	mSearchHintIcon.setVisibility(mIconifiedByDefault	5
50539	mSearchManager	5
49604	mSearchPlate	5
50549	mSearchPlate.getBackground().setState(focused	5
50545	mSearchPlate.getPaddingLeft()	5
19804	mSearchView	21
50401	mSearchView.clearFocus()	5
49785	mSearchView.getWindow().getDecorView().post(mStartSpinnerRunnable)	5
49942	mSearchView.getWindow().getDecorView().post(mStopSpinnerRunnable)	5
50422	mSearchView.getWindowVisibility()	5
49828	mSearchView.hasFocus()	5
49931	mSearchView.onDataSetChanged()	5
49741	mSearchView.onQueryRefine((CharSequence)	5
50286	mSearchView.onTextFocusChanged()	5
50141	mSearchView.setImeVisibility(false)	5
19604	mSearchView.setOnCloseListener(this)	6
20040	mSearchView.setOnQueryTextListener(this)	6
59868	mSearchView.setQuery(null,true)	3
20020	mSearchView.setSearchableInfo(	6
50176	mSearchView.setWorking(false)	5
49812	mSearchView.setWorking(true)	5
49329	mSearchable	10
50322	mSearchable,WeakHashMap<String,Drawable.ConstantState>	5
50557	mSearchable.findActionKey(keyCode)	5
49407	mSearchable.getHintId()	9
50469	mSearchable.getInputType()	5
50575	mSearchable.getSuggestIntentAction()	5
50164	mSearchable.getSuggestIntentData()	5
49957	mSearchable.getVoiceSearchEnabled())	5
54370	mSecondAccount	2
47467	mSecondaryProgress	4
47381	mSecondaryProgress)	4
19938	mSectionHeaderSubAccounts	12
19528	mSectionHeaderSubAccounts.setText(subAccountSectionText)	7
20096	mSectionHeaderSubAccounts.setVisibility(View.GONE)	10
19743	mSectionHeaderSubAccounts.setVisibility(View.VISIBLE)	13
7369	mSectionHeaderTransactions	38
35133	mSectionHeaderTransactions.setBackgroundColor(iColor)	10
27769	mSectionHeaderTransactions.setBackgroundColor(sLastTitleColor)	7
19839	mSectionHeaderTransactions.setText(R.string.title_add_transaction)	27
20098	mSectionHeaderTransactions.setText(R.string.title_edit_transaction)	20
20074	mSectionHeaderTransactions.setVisibility(View.GONE)	22
42169	mSeekTime	6
8592	mSelectedAccountId	28
33987	mSelectedAccountUID	8
974	mSelectedBeginDate	7
192	mSelectedBeginDate.plusMonths(1)	5
862	mSelectedBeginDate.plusMonths(3)	5
701	mSelectedBeginDate.plusWeeks(1)	6
359	mSelectedBeginDate.plusYears(1)	5
2141	mSelectedBeginDate.toDateTimeAtStartOfDay().getMillis()	6
513	mSelectedColor	19
27190	mSelectedColor)	3
28053	mSelectedDefaultAccounts	6
26442	mSelectedDefaultAccounts)	6
27970	mSelectedDefaultAccounts.add(0)	4
27993	mSelectedDefaultAccounts.add(1)	4
27979	mSelectedDefaultAccounts.add(which)	4
28021	mSelectedDefaultAccounts.remove(Integer.valueOf(which))	4
58987	mSelectedId	4
19229	mSelectedIds	8
29442	mSelectedIds.clear()	5
19029	mSelectedIds.keySet())	6
32990	mSelectedIds.keySet().toArray(selectedItemPositions)	5
29329	mSelectedIds.put(position,id)	5
29277	mSelectedIds.remove(position)	4
29246	mSelectedIds.size()	6
29206	mSelectedIds.values())	10
29402	mSelectedItemId	26
604	mSelectedPosition	14
45798	mSelectedRowId	4
39829	mSelectedTab	4
39834	mSelectedTab.getCallback().onTabReselected(mSelectedTab,trans)	4
39662	mSelectedTab.getCallback().onTabSelected(mSelectedTab,trans)	4
39484	mSelectedTab.getCallback().onTabUnselected(mSelectedTab,trans)	4
39815	mSelectedTab.getPosition()	4
47921	mSelectedTabIndex	4
2135	mSelectedValueTextView	24
24617	mSelectedValueTextView.setText("")	9
24946	mSelectedValueTextView.setText("Select	11
32172	mSelectedValueTextView.setText(R.string.label_chart_no_data)	6
51914	mSelectedValueTextView.setText(R.string.label_select_pie_slice_to_see_details)	6
63791	mSelectedValueTextView.setText(R.string.select_chart_to_view_details)	2
60225	mSelectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN,label,value,percent))	10
60177	mSelectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN,label,value,value	3
32348	mSelectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN,label.trim(),value,value	6
60121	mSelectedValueTextView.setText(getResources().getString(R.string.label_chart_no_data))	3
18874	mSelectedViewPosition	18
46363	mSelectionBottomPadding	5
46262	mSelectionLeftPadding	4
46104	mSelectionNotifier	4
46029	mSelectionRightPadding	5
46377	mSelectionTopPadding	4
32932	mSeries	7
33163	mSeries.add(account.getName(),balance)	4
33046	mSeries.clear()	6
32982	mSeries.getItemCount()	3
32629	mServer	7
63095	mServer.getText().toString().trim()	3
63126	mServer.setText(mOC_server)	3
32893	mServerError	7
58723	mServerError.getText().toString().equals(getString(R.string.owncloud_server_ok)))	7
58685	mServerError.setText(getString(R.string.owncloud_server_invalid))	7
58682	mServerError.setText(getString(R.string.owncloud_server_ok))	7
58687	mServerError.setTextColor(ContextCompat.getColor(getContext(),R.color.debit_red))	4
58692	mServerError.setTextColor(ContextCompat.getColor(getContext(),R.color.theme_primary))	4
32639	mServerError.setVisibility(View.GONE)	7
58700	mServerError.setVisibility(View.VISIBLE)	7
35181	mSetAnimationScalesMethod	2
35058	mSetAnimationScalesMethod.invoke(mWindowManagerObject,scaleFactors)	2
40963	mSetListener	5
41195	mSetter	6
41729	mSetter.invoke(target,mTmpValueArray)	5
49847	mShareActionProvider	4
49776	mShareActionProvider.setShareHistoryFileName("custom_share_history.xml")	4
50241	mShareActionProvider.setShareIntent(shareIntent)	4
50051	mShareHistoryFileName	4
50098	mShareHistoryFileName)	4
39092	mSherlock	4
38526	mSherlock.dispatchConfigurationChanged(newConfig)	4
38357	mSherlock.dispatchDestroy()	4
37903	mSherlock.dispatchOptionsItemSelected(item)	4
38639	mSherlock.dispatchPanelClosed(featureId,menu)	4
38627	mSherlock.dispatchPause()	4
38572	mSherlock.dispatchPostCreate(savedInstanceState)	4
38049	mSherlock.dispatchPostResume()	4
38543	mSherlock.dispatchPrepareOptionsMenu(menu)	4
38419	mSherlock.dispatchStop()	4
38605	mSherlock.dispatchTitleChanged(title,color)	4
42566	mShortcutAlphabeticChar	9
42410	mShortcutNumericChar	9
44884	mShortcutNumericChar)	4
43579	mShortcutView	4
43481	mShortcutView.setText(mItemData.getShortcutLabel())	4
43673	mShortcutView.setVisibility(newVisibility)	4
43732	mShortcutsVisible	4
10086	mShouldDisplayBalance	4
9748	mShouldDisplayBalance.isChecked()	4
10034	mShouldDisplayBalance.setChecked(!passcodeEnabled)	4
46860	mShouldStartAnimationDrawable	4
44580	mShowAsAction	5
49638	mShowDefaultActivity	4
46813	mShowDividers	6
46751	mShowDividers)	4
49306	mShowFooterView	4
40269	mShowHideAnimationEnabled	4
49577	mShowImeRunnable	5
39841	mShowListener	4
39917	mShowListener.onAnimationEnd(null)	4
27397	mSize	3
32104	mSkipNextReportTypeSelectedRun	6
29824	mSlicePercentThreshold	9
29788	mSlicePercentThreshold)	9
9250	mSlidingPaneLayout	7
57141	mSlidingPaneLayout.closePane()	6
57042	mSlidingPaneLayout.openPane()	6
57178	mSlidingPaneLayout.setPanelSlideListener(new	3
53544	mSlotTagAttribute	2
36032	mSmallestFraction	4
36054	mSmallestFraction)	9
28436	mSolo	41
28580	mSolo.clearEditText(0)	15
5944	mSolo.clickLongOnText("TO	10
28273	mSolo.clickLongOnText(DUMMY_ACCOUNT_NAME)	9
28419	mSolo.clickLongOnText(accountName)	10
19530	mSolo.clickLongOnText(accountNameToDelete)	10
57290	mSolo.clickLongOnView(lv.getChildAt(lv.getCount()	2
5360	mSolo.clickOnActionBarItem(R.id.btn_save)	12
4837	mSolo.clickOnActionBarItem(R.id.context_menu_delete)	12
28366	mSolo.clickOnActionBarItem(R.id.menu_add_account)	14
4460	mSolo.clickOnActionBarItem(R.id.menu_add_transaction)	15
5118	mSolo.clickOnActionBarItem(R.id.menu_cancel)	7
4333	mSolo.clickOnActionBarItem(R.id.menu_export)	22
5954	mSolo.clickOnActionBarItem(R.id.menu_save)	28
28457	mSolo.clickOnActionBarItem(R.id.menu_search)	4
51805	mSolo.clickOnButton("CREDIT")	2
28818	mSolo.clickOnButton(0)	10
28663	mSolo.clickOnButton(1)	21
5610	mSolo.clickOnButton(3)	13
57714	mSolo.clickOnButton(5)	3
34227	mSolo.clickOnButton(getActivity().getString(R.string.label_credit))	8
33946	mSolo.clickOnButton(mSolo.getString(R.string.btn_export))	8
4591	mSolo.clickOnCheckBox(0)	30
6261	mSolo.clickOnCheckBox(1)	23
4599	mSolo.clickOnImage(1)	14
4767	mSolo.clickOnImage(2)	21
4901	mSolo.clickOnImage(3)	12
29073	mSolo.clickOnRadioButton(0)	9
54952	mSolo.clickOnRadioButton(1)	5
36715	mSolo.clickOnText("Delete")	4
33899	mSolo.clickOnText("Done")	9
36913	mSolo.clickOnText("Export")	4
58603	mSolo.clickOnText("OFF")	4
36944	mSolo.clickOnText("Pizza")	3
36761	mSolo.clickOnText("SD	2
34502	mSolo.clickOnText("Target")	4
57238	mSolo.clickOnText("Test	2
19557	mSolo.clickOnText(DUMMY_ACCOUNT_NAME)	15
34102	mSolo.clickOnText(ExportFormat.XML.name())	12
6285	mSolo.clickOnText(TRANSACTION_NAME)	15
34446	mSolo.clickOnText(deleteConfirm)	10
34165	mSolo.clickOnText(dismissDialog)	12
57321	mSolo.clickOnText(format.name())	9
4491	mSolo.clickOnText(getActivity().getString(R.string.alert_dialog_ok_delete))	9
28601	mSolo.clickOnText(getActivity().getString(R.string.btn_move))	10
6198	mSolo.clickOnText(getActivity().getString(R.string.btn_save))	8
34396	mSolo.clickOnText(getActivity().getString(R.string.menu_move))	5
57396	mSolo.clickOnText(mSolo.getString(R.string.nav_menu_export))	10
34490	mSolo.clickOnText(options[1])	12
29034	mSolo.clickOnText(targetAccountName)	8
58666	mSolo.clickOnToggleButton("OFF")	4
54758	mSolo.clickOnToggleButton(text)	6
28799	mSolo.clickOnView(addSplit)	4
5453	mSolo.clickOnView(b)	10
4850	mSolo.clickOnView(deleteButton)	7
57393	mSolo.clickOnView(getActivity().findViewById(R.id.context_menu_edit_accounts))	4
57382	mSolo.clickOnView(getActivity().findViewById(R.id.menu_save))	3
25152	mSolo.clickOnView(mSolo.getView(R.id.btn_save))	16
28331	mSolo.clickOnView(mSolo.getView(R.id.context_menu_edit_accounts))	4
34109	mSolo.clickOnView(mSolo.getView(R.id.input_recurrence))	12
57380	mSolo.clickOnView(mSolo.getView(R.id.menu_save))	3
25187	mSolo.clickOnView(mSolo.getView(android.R.id.button1))	6
4306	mSolo.clickOnView(spinner)	24
29107	mSolo.clickOnView(toggleButton)	10
28703	mSolo.clickOnView(view)	11
28839	mSolo.enterText(0,"4000")	4
29177	mSolo.enterText(0,"Autobalance")	4
5992	mSolo.enterText(0,"Lunch")	27
5321	mSolo.enterText(0,"New	14
28607	mSolo.enterText(0,"Pasta")	10
28315	mSolo.enterText(0,"Se")	9
57233	mSolo.enterText(0,"Test	2
34387	mSolo.enterText(0,NEW_ACCOUNT_NAME)	8
28517	mSolo.enterText(0,editedAccountName)	13
28600	mSolo.enterText(1,"4499")	4
28584	mSolo.enterText(1,"499")	4
4918	mSolo.enterText(1,"899")	23
28532	mSolo.enterText(inputAccountName,NEW_ACCOUNT_NAME)	10
28734	mSolo.finishOpenedActivities()	27
34501	mSolo.getAllOpenedActivities().get(1).getComponentName().getClassName()	4
6031	mSolo.getButton(0)	14
5005	mSolo.getButton(deleteConfirm)	7
28427	mSolo.getCurrentActivity().findViewById(R.id.checkbox_parent_account)	6
28540	mSolo.getCurrentActivity().findViewById(R.id.edit_text_account_name)	7
34492	mSolo.getCurrentActivity().getComponentName().getClassName()	5
34409	mSolo.getCurrentListViews().get(0)	8
5959	mSolo.getCurrentSpinners().get(0)	16
63273	mSolo.getCurrentSpinners().get(0).getSelectedItemPosition()	3
36855	mSolo.getCurrentToggleButtons().get(0).isChecked()	3
34478	mSolo.getCurrentViews(ListView.class).get(0)	7
34453	mSolo.getCurrentViews(ListView.class).get(1)	5
28964	mSolo.getCurrentViews(Spinner.class).get(0)	16
36939	mSolo.getEditText(0).getText().toString()	11
6113	mSolo.getEditText(1).getText().toString()	30
32551	mSolo.getEditText(2).getText().toString()	12
36949	mSolo.getText(5).getText().toString()	5
4286	mSolo.getText(6).getText().toString()	10
5231	mSolo.getText(7).getText().toString()	16
29108	mSolo.getView(R.id.btn_add_split)	4
28603	mSolo.getView(R.id.btn_open_splits)	4
6081	mSolo.getView(R.id.btn_save)	10
28637	mSolo.getView(R.id.imbalance_textview)	4
5713	mSolo.getView(R.id.input_date)	18
28767	mSolo.getView(R.id.input_description)	7
28652	mSolo.getView(R.id.input_double_entry_accounts_spinner)	5
5144	mSolo.getView(R.id.input_time)	14
28887	mSolo.getView(R.id.input_transaction_amount)	9
4977	mSolo.getView(R.id.input_transaction_type)	17
6169	mSolo.getView(R.id.menu_save)	7
28821	mSolo.getView(R.id.split_list_layout)	4
5855	mSolo.getView(android.R.id.button1)	7
54742	mSolo.getView(android.R.id.list)	9
28842	mSolo.getView(id)	11
28800	mSolo.goBack()	23
33993	mSolo.pressSpinnerItem(0,-1)	6
58611	mSolo.pressSpinnerItem(0,1)	6
63280	mSolo.pressSpinnerItem(0,144	2
63284	mSolo.pressSpinnerItem(0,48	2
54792	mSolo.pressSpinnerItem(2,0)	8
34497	mSolo.scrollDown()	5
54733	mSolo.scrollToBottom()	9
34153	mSolo.setNavigationDrawer(Solo.CLOSED)	5
57335	mSolo.setNavigationDrawer(Solo.OPENED)	10
28485	mSolo.sleep(1000)	27
34161	mSolo.sleep(200)	7
28542	mSolo.sleep(2000)	29
28505	mSolo.sleep(3000)	9
28747	mSolo.sleep(500)	12
28732	mSolo.sleep(5000)	14
28616	mSolo.wait(2000)	9
29014	mSolo.waitForActivity(TransactionsActivity.class)	4
28490	mSolo.waitForDialogToClose()	13
5125	mSolo.waitForDialogToClose(1000)	32
5363	mSolo.waitForDialogToClose(10000)	22
5583	mSolo.waitForDialogToClose(2000)	27
58649	mSolo.waitForDialogToClose(5000)	4
28682	mSolo.waitForDialogToOpen()	10
57358	mSolo.waitForDialogToOpen(5000)	4
57342	mSolo.waitForEmptyActivityStack(10000)	4
28739	mSolo.waitForEmptyActivityStack(20000)	5
34379	mSolo.waitForFragmentByTag(AccountsActivity.FRAGMENT_ACCOUNTS_LIST)	5
34403	mSolo.waitForFragmentByTag(TransactionsActivity.FRAGMENT_TRANSACTIONS_LIST)	5
25041	mSolo.waitForText("Accounts")	16
34417	mSolo.waitForText("Acct")	14
4878	mSolo.waitForText("Create")	9
5048	mSolo.waitForText("Description")	26
29151	mSolo.waitForText("Edit	8
4716	mSolo.waitForText("Export	16
28641	mSolo.waitForText("New	12
5888	mSolo.waitForText("Note")	15
5113	mSolo.waitForText("Pasta")	18
57261	mSolo.waitForText("Test	2
34349	mSolo.waitForText("Transaxion")	5
4673	mSolo.waitForText(DUMMY_ACCOUNT_NAME)	40
28556	mSolo.waitForText(NEW_ACCOUNT_NAME)	10
28503	mSolo.waitForText(SEARCH_ACCOUNT_NAME,1,2000)	9
29013	mSolo.waitForText(TRANSACTION_NAME)	19
28449	mSolo.waitForText(accountName)	9
59079	mSolo.waitForText(getActivity().getString(R.string.edit_accounts))	1
4941	mSolo.waitForText(getActivity().getString(R.string.label_transaction_name))	14
54958	mSolo.waitForText(getActivity().getString(R.string.menu_export_transactions))	10
28435	mSolo.waitForText(getActivity().getString(R.string.title_accounts))	10
5656	mSolo.waitForText(getActivity().getString(R.string.title_add_account))	16
6331	mSolo.waitForText(getActivity().getString(R.string.title_edit_account))	5
29132	mSolo.waitForText(getActivity().getString(R.string.title_edit_transaction))	7
57343	mSolo.waitForText(getActivity().getString(R.string.title_export_dialog))	5
5514	mSolo.waitForText(getActivity().getString(R.string.title_selected,1))	12
28664	mSolo.waitForText(toastAmountRequired)	12
28325	mSolo.waitForView(EditText.class)	14
40605	mSortedNodes	4
41108	mSortedNodes)	4
40773	mSortedNodes.add(root)	4
41123	mSortedNodes.clear()	4
40567	mSortedNodes.get(i)	4
40483	mSortedNodes.size()	4
23458	mSource	10
63496	mSourceUri	4
46256	mSpecificTop	4
45328	mSpinner	4
45038	mSpinner.getSelectedItemPosition()	4
45193	mSpinner.setAdapter(adapter)	4
45593	mSpinner.setAdapter(mSpinnerAdapter)	4
45375	mSpinner.setOnItemSelectedListener(mNavItemSelectedListener)	4
45539	mSpinner.setSelection(position)	4
46412	mSpinner.setVisibility(GONE)	4
46178	mSpinner.setVisibility(VISIBLE)	4
2507	mSpinnerAdapter	44
3159	mSpinnerAdapter)	21
55077	mSpinnerAdapter).setDropDownViewResource(	8
63688	mSpinnerAdapter).setDropDownViewResource(R.layout.sherlock_spinner_dropdown_item)	2
46308	mSpinnerPadding	4
45917	mSpinnerPadding.bottom	8
47898	mSpinnerPadding.bottom,lp.height)	4
46180	mSpinnerPadding.left	9
46418	mSpinnerPadding.right	9
48085	mSpinnerPadding.right,lp.width)	4
45984	mSpinnerPadding.top	9
1546	mSplit	29
4539	mSplit.setAccountUID(characterString)	40
58678	mSplit.setAmount(amount)	8
4243	mSplit.setAmount(amount.absolute())	25
54908	mSplit.setAmount(mSplit.getAmount().withCurrency(getCurrencyForAccount(characterString)))	6
12140	mSplit.setMemo(characterString)	16
11548	mSplit.setQuantity(new	15
4739	mSplit.setType(TransactionType.CREDIT)	10
4635	mSplit.setType(TransactionType.DEBIT)	10
31822	mSplit.setType(amount.isNegative()	13
36293	mSplit.setType(mNegativeQuantity	14
8428	mSplit.setType(splitType)	14
20804	mSplit.setUID(characterString)	11
51608	mSplit.setValue(amount)	7
7503	mSplit.setValue(amount.abs())	5
36220	mSplit.setValue(amount.absolute())	9
11098	mSplit.setValue(new	15
51277	mSplitAccountSpinner	3
51287	mSplitAccountSpinner.getSelectedItemId()	3
51323	mSplitAccountSpinner.setAdapter(mCursorAdapter)	3
51272	mSplitAccountSpinner.setSelection(pos)	3
51279	mSplitAccountUID	3
45460	mSplitActionBar	7
45222	mSplitBackground	6
45608	mSplitBackground.draw(canvas)	4
45195	mSplitBackground.setBounds(0,0,getMeasuredWidth(),getMeasuredHeight())	4
31164	mSplitItemViewList	31
13216	mSplitItemViewList)	34
31777	mSplitItemViewList.add(splitView)	5
31751	mSplitItemViewList.remove(splitView)	16
32617	mSplitList	17
5270	mSplitList)	52
12301	mSplitList.add(split)	9
35612	mSplitList.clear()	4
10858	mSplitQuantity	27
34028	mSplitType	25
59356	mSplitType.hashCode()	4
35804	mSplitType.invert().equals(other.mSplitType)	14
11396	mSplitType.name()	26
40115	mSplitView	9
44957	mSplitView)	4
45647	mSplitView.addView(mMenuView)	4
45372	mSplitView.addView(mMenuView,layoutParams)	4
45369	mSplitView.addView(menuView,layoutParams)	4
40130	mSplitView.getVisibility()	4
45144	mSplitView.removeView(mMenuView)	4
39631	mSplitView.setAlpha(0)	4
39916	mSplitView.setAlpha(1)	4
39492	mSplitView.setSplitBackground(d)	4
40231	mSplitView.setVisibility(View.GONE)	4
39849	mSplitView.setVisibility(View.VISIBLE)	4
45413	mSplitView.setVisibility(splitActionBar	4
31982	mSplitViewHolder	5
31482	mSplitViewHolder.splitAmountEditText.getText().toString()	7
56611	mSplitViewHolder.splitAmountEditText.getValue()	4
45298	mSplitWhenNarrow	5
11693	mSplitsDbAdapter	88
33920	mSplitsDbAdapter.addRecord(split)	15
52270	mSplitsDbAdapter.addRecord(split,UpdateMethod.insert)	2
52289	mSplitsDbAdapter.addRecord(split,updateMethod)	2
24500	mSplitsDbAdapter.addSplit(split)	17
50936	mSplitsDbAdapter.bulkAddRecords(splitList)	11
52319	mSplitsDbAdapter.bulkAddRecords(splitList,updateMethod)	2
52209	mSplitsDbAdapter.bulkAddRecords(splits)	5
52127	mSplitsDbAdapter.bulkAddRecords(splits,UpdateMethod.update)	5
54584	mSplitsDbAdapter.bulkAddSplits(splitList)	9
24386	mSplitsDbAdapter.bulkAddSplits(splits)	5
35453	mSplitsDbAdapter.close()	6
30700	mSplitsDbAdapter.deleteSplitsForTransaction(rowId)	11
34094	mSplitsDbAdapter.getSplitsForTransaction(transaction.getUID())	9
24605	mSplitsDbAdapter.getSplitsForTransactionInAccount(	8
35444	mSplitsDbAdapter.getSplitsForTransactionInAccount(getUID(rowId),srcAccountUID)	4
33924	mSplitsDbAdapter.getSplitsForTransactionInAccount(transaction.getUID(),imbalanceAcctUID)	2
24184	mSplitsDbAdapter.getSplitsForTransactionInAccount(transactionUID,srcAccountUID)	4
9691	mSplitsLinearLayout	16
31676	mSplitsLinearLayout.addView(splitView,0)	5
31668	mSplitsLinearLayout.removeView(splitView)	16
24820	mSplitsList	50
11405	mSplitsList)	42
54838	mSplitsList.add(imbSplit)	10
34464	mSplitsList.add(mSplitsList.get(0).createPair(transferAcctUID))	10
59096	mSplitsList.add(split)	4
33226	mSplitsList.clear()	17
36666	mSplitsList.get(0).isPairOf(mSplitsList.get(1))	8
29462	mSplitsList.get(0).isPairOf(mSplitsList.get(1)))	23
36594	mSplitsList.get(1).getAccountUID().equals(mAccountUID)))	8
45374	mStackedBackground	5
45172	mStackedBackground.draw(c)	5
45079	mStackedBackground.draw(canvas)	4
45474	mStackedBackground.setBounds(mTabContainer.getLeft(),mTabContainer.getTop(),	4
9854	mStartAmountLabel	5
19282	mStartDate	29
57444	mStartDate.set(Calendar.DAY_OF_MONTH,dayOfMonth)	4
63912	mStartDate.set(Calendar.MONTH,monthOfYear)	2
63913	mStartDate.set(Calendar.YEAR,year)	2
9296	mStartDateInput	6
63914	mStartDateInput.setText(TransactionFormFragment.DATE_FORMATTER.format(cal.getTime()))	2
57443	mStartDateInput.setText(TransactionFormFragment.DATE_FORMATTER.format(mStartDate.getTime()))	4
40659	mStartDelay	9
43265	mStartDelay)	4
9109	mStartRange	8
452	mStartRangeMillis	6
50047	mStartSpinnerRunnable	5
42316	mStartTime	7
42957	mStartTime)	4
40871	mStarted	10
41825	mStartedDelay	6
9849	mStepPagerStrip	12
62028	mStepPagerStrip.setCurrentPage(position)	3
62204	mStepPagerStrip.setPageCount(mCurrentPageSequence.size()	3
50234	mStopSpinnerRunnable	5
43075	mStrictWidthLimit	4
33102	mSubAccountCount	5
19431	mSubAccountsContainer	12
19601	mSubAccountsContainer.setVisibility(View.GONE)	10
19766	mSubAccountsContainer.setVisibility(View.VISIBLE)	13
42693	mSubMenu	9
44839	mSubMenu.setHeaderTitle(title)	4
47852	mSubUiVisibilityListener	4
47639	mSubUiVisibilityListener.onSubUiVisibilityChanged(isVisible)	4
49148	mSubmitArea	5
50239	mSubmitArea.getBackground().setState(focused	5
50567	mSubmitArea.setVisibility(visibility)	5
49457	mSubmitButton	5
50318	mSubmitButton)	5
49030	mSubmitButton.setOnClickListener(mOnClickListener)	5
50117	mSubmitButton.setVisibility(GONE)	5
49712	mSubmitButton.setVisibility(visibility)	5
49633	mSubmitButtonEnabled	8
45367	mSubtitle	5
44989	mSubtitleStyleRes	5
44954	mSubtitleView	5
45224	mSubtitleView.setText(mSubtitle)	4
45003	mSubtitleView.setText(subtitle)	4
45243	mSubtitleView.setTextAppearance(mContext,mSubtitleStyleRes)	4
45659	mSubtitleView.setVisibility(VISIBLE)	4
45313	mSubtitleView.setVisibility(hasSubtitle	4
45739	mSubtitleView.setVisibility(subtitle	4
49641	mSuggestionsAdapter	10
50145	mSuggestionsAdapter).setQueryRefinement(	7
49543	mSuggestionsAdapter.changeCursor(null)	10
50295	mSuggestionsAdapter.convertToString(c)	5
50473	mSuggestionsAdapter.getCursor()	6
9588	mSumTextView	31
59041	mSumTextView.setText(Transaction.getFormattedAmount(sum))	2
30497	mSumTextView.setText(sum.formattedString(Locale.getDefault()))	8
56053	mSumTextView.setTextColor(getResources().getColor(R.color.credit_green))	6
56093	mSumTextView.setTextColor(getResources().getColor(R.color.debit_red))	6
27521	mSwatchImage	3
27155	mSwatchImage.setImageDrawable(new	3
27145	mSwatchLength	3
45849	mSyncHeight	4
45841	mSyncMode	4
45927	mSyncPosition	4
46518	mSyncRowId	4
46239	mSyncRowId,or	4
46118	mSyncRowId.	4
43375	mSystemContext	4
43728	mSystemInflater	4
44184	mSystemInflater.inflate(mItemLayoutRes,parent,false)	4
44053	mSystemInflater.inflate(mMenuLayoutRes,root,false)	4
47822	mTab	4
47707	mTabClickListener	4
44951	mTabContainer	4
45237	mTabContainer)	4
45735	mTabContainer.getMeasuredHeight()	4
45481	mTabContainer.getMeasuredHeight(),	4
45075	mTabContainer.getRight(),mTabContainer.getBottom())	4
45267	mTabContainer.getVisibility()	4
45410	mTabContainer.layout(l,0,r,tabHeight)	4
45288	mTabContainer.layout(l,containerHeight	4
9472	mTabLayout	27
21725	mTabLayout.addTab(mTabLayout.newTab().setText(R.string.section_header_subaccounts))	13
10216	mTabLayout.addTab(mTabLayout.newTab().setText(R.string.section_header_transactions))	18
21269	mTabLayout.addTab(mTabLayout.newTab().setText(R.string.section_header_transactions),true)	10
47747	mTabLayout.addView(tabView,new	4
48140	mTabLayout.addView(tabView,position,new	4
48117	mTabLayout.getChildAt(i)	4
48169	mTabLayout.getChildAt(position)	4
48136	mTabLayout.getChildAt(position)).getTab()	4
47887	mTabLayout.getChildAt(position)).update()	4
48047	mTabLayout.getChildCount()	4
47894	mTabLayout.measure(MeasureSpec.UNSPECIFIED,heightMeasureSpec)	4
47741	mTabLayout.removeAllViews()	4
13674	mTabLayout.removeTabAt(1)	11
48036	mTabLayout.removeViewAt(position)	4
35168	mTabLayout.setBackgroundColor(iColor)	6
35117	mTabLayout.setOnTabSelectedListener(new	9
20134	mTabLayout.setVisibility(View.GONE)	7
39559	mTabScrollView	8
40259	mTabScrollView.addTab(tab,position,setSelected)	4
39518	mTabScrollView.addTab(tab,setSelected)	4
39392	mTabScrollView.animateToTab(tab.getPosition())	4
40252	mTabScrollView.animateToVisibility(toActionMode	4
45063	mTabScrollView.getLayoutParams()	4
45720	mTabScrollView.getMeasuredWidth()	4
45148	mTabScrollView.measure(	4
39417	mTabScrollView.removeAllTabs()	4
39904	mTabScrollView.removeTabAt(position)	4
45345	mTabScrollView.setAllowCollapse(true)	4
39910	mTabScrollView.setTabSelected(tab	4
46151	mTabScrollView.setVisibility(GONE)	4
45916	mTabScrollView.setVisibility(VISIBLE)	4
39354	mTabScrollView.setVisibility(View.GONE)	4
40205	mTabScrollView.setVisibility(View.VISIBLE)	4
40161	mTabScrollView.setVisibility(isInTabMode	4
40040	mTabScrollView.updateTab(mPosition)	4
40133	mTabSelector	12
48128	mTabSpinner	4
47566	mTabSpinner.getAdapter()).notifyDataSetChanged()	4
47806	mTabSpinner.getParent()	4
47891	mTabSpinner.setAdapter(new	4
48033	mTabSpinner.setSelection(mSelectedTabIndex)	4
14431	mTableName	11
24985	mTableName)	2
40260	mTabs	4
39384	mTabs.add(position,tabi)	4
39747	mTabs.clear()	4
39706	mTabs.get(Math.max(0,position	4
39361	mTabs.get(i).setPosition(i)	4
39838	mTabs.get(index)	4
39581	mTabs.remove(position)	4
39963	mTabs.size()	4
33966	mTag	14
41388	mTarget	4
50771	mTargetCommodity	2
50939	mTargetCommodity.getCurrencyCode()))	2
50826	mTargetCommodity.getUID()	2
8648	mTargetCurrency	7
12249	mTargetCurrency.getCurrencyCode())	11
7403	mTargetCurrency.getCurrencyCode()))	5
8210	mTargetCurrencyCode	6
8572	mTargetCurrencyCode))	4
7129	mTargetFilepath	19
6725	mTargetFilepath)	7
59592	mTargetFilepath.length()	2
31296	mTargetUriTextView	2
30978	mTargetUriTextView.setText("")	4
30986	mTargetUriTextView.setText("Export	4
55501	mTargetUriTextView.setText(filepath)	2
31327	mTargetUriTextView.setText(mExportUri.toString())	4
55545	mTargetUriTextView.setVisibility(View.GONE)	2
55485	mTargetUriTextView.setVisibility(View.VISIBLE)	2
64400	mTasks	1
64371	mTasks.offer(new	1
64393	mTasks.poll())	1
48159	mTempAdapter	5
42944	mTempMatrix	4
43049	mTempMatrix.mapRect(r)	4
47065	mTempRect	7
47041	mTempRect.bottom	4
46868	mTempRect.left	8
46807	mTempRect.right	8
47410	mTempRect.top	4
44001	mTempShortcutItemList	4
25480	mTemplatAccountList	5
23712	mTemplateAccountToTransactionMap	7
53348	mTemplateAccountToTransactionMap.put(characterString,mTransaction.getUID())	5
53537	mTemplateAccountUID	2
57291	mTemplateTransaction	6
60022	mTemplateTransaction.addSplit(split1)	3
59968	mTemplateTransaction.addSplit(split2)	3
59990	mTemplateTransaction.getUID()	3
60053	mTemplateTransaction.setCommodity(Commodity.DEFAULT_COMMODITY)	3
60010	mTemplateTransaction.setTemplate(true)	3
25667	mTemplateTransactions	4
25535	mTemplateTransactions)	2
25559	mTemplateTransactions.add(mTransaction)	5
40578	mTerminated	5
33975	mTestSplit	5
40189	mText	8
49685	mText1	5
50180	mText1Col	5
49684	mText2	5
50103	mText2Col	5
50558	mText2UrlCol	5
44151	mTextAppearance	4
43377	mTextAppearance)	4
43988	mTextAppearanceContext	4
43208	mTextButton	4
42476	mTextButton.getVisibility()	4
43216	mTextButton.setEnabled(enabled)	4
42755	mTextButton.setOnClickListener(this)	4
42538	mTextButton.setTextCompat(mTitle)	4
42500	mTextButton.setVisibility(visible	4
8770	mTextInputLayout	10
34363	mTextInputLayout.setError(getString(R.string.toast_no_account_name_entered))	6
60663	mTextInputLayout.setErrorEnabled(false)	6
34461	mTextInputLayout.setErrorEnabled(true)	6
50140	mTextKeyListener	5
50723	mTextReportButton	4
47935	mTextView	4
47825	mTextView.setText(null)	4
48001	mTextView.setTextCompat(text)	4
48148	mTextView.setVisibility(GONE)	4
48009	mTextView.setVisibility(VISIBLE)	4
50512	mTextWatcher	5
39664	mThemedContext	4
49680	mThreshold	5
13293	mTime	38
35889	mTime.get(Calendar.HOUR_OF_DAY),	10
35859	mTime.get(Calendar.MINUTE),	10
35885	mTime.get(Calendar.SECOND))	19
23653	mTime.set(Calendar.HOUR_OF_DAY,hourOfDay)	8
23829	mTime.set(Calendar.MINUTE,minute)	8
986	mTimeAndDate	14
1858	mTimeAndDate.setText(timeAndDate)	12
24790	mTimePeriod	7
2086	mTimeRangeSpinner	23
207	mTimeRangeSpinner.setAdapter(adapter)	8
1915	mTimeRangeSpinner.setOnItemSelectedListener(this)	11
62369	mTimeRangeSpinner.setSelection(1)	6
9340	mTimeTextView	25
31673	mTimeTextView.setEnabled(b)	6
35844	mTimeTextView.setOnClickListener(new	13
23564	mTimeTextView.setText(TIME_FORMATTER.format(cal.getTime()))	8
10477	mTimeTextView.setText(TIME_FORMATTER.format(mTransaction.getTimeMillis()))	17
13578	mTimeTextView.setText(TIME_FORMATTER.format(time))	18
21106	mTimestamp	10
20661	mTitle	28
44630	mTitle.toString()	4
43308	mTitleCondensed	9
45575	mTitleLayout	5
45318	mTitleLayout.findViewById(R.id.abs__action_bar_subtitle)	4
45521	mTitleLayout.findViewById(R.id.abs__action_bar_title)	4
45095	mTitleLayout.findViewById(R.id.abs__up)	4
45475	mTitleLayout.getMeasuredWidth())	4
45699	mTitleLayout.getParent()	4
45250	mTitleLayout.getVisibility()	4
45285	mTitleLayout.setEnabled(!showHome	4
45618	mTitleLayout.setEnabled(homeAsUp	4
45678	mTitleLayout.setOnClickListener(mUpClickListener)	4
45029	mTitleLayout.setVisibility(GONE)	7
46281	mTitleLayout.setVisibility(VISIBLE)	4
45124	mTitleLayout.setVisibility(hasTitle	4
45505	mTitleLayout.setVisibility(visible	4
7296	mTitlePageIndicator	32
19959	mTitlePageIndicator.notifyDataSetChanged()	15
35054	mTitlePageIndicator.setFooterColor(iColor)	7
27367	mTitlePageIndicator.setFooterColor(sLastTitleColor)	8
35216	mTitlePageIndicator.setSelectedColor(iColor)	5
27263	mTitlePageIndicator.setSelectedColor(sLastTitleColor)	8
35226	mTitlePageIndicator.setTextColor(iColor)	7
27241	mTitlePageIndicator.setTextColor(sLastTitleColor)	8
19590	mTitlePageIndicator.setViewPager(mPager)	17
27713	mTitlePageIndicator.setViewPager(pager)	5
20042	mTitlePageIndicator.setVisibility(View.GONE)	19
27152	mTitleResId	3
44988	mTitleStyleRes	5
45532	mTitleUpView	4
45529	mTitleUpView.setVisibility(!showHome	4
39127	mTitleView	16
40097	mTitleView.setText(mTitle)	8
38892	mTitleView.setText(title)	12
45363	mTitleView.setTextAppearance(mContext,mTitleStyleRes)	4
43804	mTitleView.setTextAppearance(mTextAppearanceContext,	4
43708	mTitleView.setVisibility(GONE)	4
43840	mTitleView.setVisibility(VISIBLE)	4
40228	mTitleView.setVisibility(View.GONE)	4
41714	mTmpValueArray	4
41989	mTmpValueArray[0]	5
9832	mToCurrencyLabel	5
50735	mToCurrencyLabel.setText(mTargetCommodity.getCurrencyCode())	2
7659	mToCurrencyLabel.setText(mTargetCurrency.getCurrencyCode())	10
8559	mToCurrencyLabel.setText(mTargetCurrencyCode)	6
1182	mToolBar	12
425	mToolBar.setBackgroundColor(themeColor)	3
9408	mToolbar	13
9496	mToolbarProgress	12
58591	mToolbarProgress.getIndeterminateDrawable().setColorFilter(Color.WHITE,PorterDuff.Mode.SRC_IN)	3
9908	mToolbarSpinner	25
21465	mToolbarSpinner.setAdapter(mSpinnerAdapter)	12
21217	mToolbarSpinner.setOnItemSelectedListener(mTransactionListNavigationListener)	9
55061	mToolbarSpinner.setSelection(i)	3
9275	mTotalAssets	5
19418	mTotalFrequency	12
19615	mTotalFrequency)	7
8668	mTotalLiabilities	11
21697	mTotalLiabilitiesAndEquity	6
1210	mTotalPercentageMode	43
46010	mTouchFrame	5
47017	mTouchInterceptor	4
2780	mTransaction	126
31520	mTransaction.addSplit(mSplit)	18
31947	mTransaction.addSplit(pair)	9
13359	mTransaction.addSplit(split)	38
13410	mTransaction.addSplit(split.createPair(TRANSFER_ACCOUNT_UID))	14
32014	mTransaction.addSplit(split.createPair(transferAcctUID))	11
59449	mTransaction.autoBalance()	6
33953	mTransaction.autoBalanceImportAccount()	3
62873	mTransaction.createAutoBalanceSplit()	4
54678	mTransaction.getAutoBalanceSplit()	5
6090	mTransaction.getCurrency())	8
18077	mTransaction.getRecurrencePeriod()	11
51309	mTransaction.getSplitAccountUID()	3
56735	mTransaction.getSplits()	7
29425	mTransaction.getSplits())	22
33970	mTransaction.getSplits().clear()	6
63007	mTransaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)	4
63018	mTransaction.getSplits(TRANSFER_ACCOUNT_UID).get(0)	4
54362	mTransaction.getSplits(mAccountsDbAdapter.getAccountUID(mAccountId))	5
32544	mTransaction.setAccountUID(DUMMY_ACCOUNT_UID)	12
29428	mTransaction.setAccountUID(account.getUID())	2
36003	mTransaction.setAccountUID(mTransactionsDbAdapter.getAccountUID(accountID))	7
2936	mTransaction.setAccountUID(mTransactionsDbAdapter.getAccountUID(accountId))	9
35890	mTransaction.setAccountUID(mTransactionsDbAdapter.getAccountUID(doubleAccountId))	2
29278	mTransaction.setAmount(amount)	8
12201	mTransaction.setAmount(amount.negate())	6
35864	mTransaction.setAmount(mTransaction.getAmount().negate())	2
13142	mTransaction.setCommodity(COMMODITY)	9
10336	mTransaction.setCommodity(commodity)	11
51979	mTransaction.setCommodityUID(CommoditiesDbAdapter.getInstance().getCommodityUID(currencyCode))	6
36654	mTransaction.setCommodityUID(mAccountsDbAdapter.getCommodityUID(currencyCode))	7
5340	mTransaction.setCreatedTimestamp(timestamp)	11
52291	mTransaction.setCurrencyCode(CURRENCY_CODE)	8
11974	mTransaction.setCurrencyCode(currencyCode)	32
54849	mTransaction.setCurrencyCode(mAccountsDbAdapter.getAccountCurrencyCode(mAccountUID))	9
35968	mTransaction.setCurrencyCode(mAccountsDbAdapter.getCurrencyCode(accountID))	6
59661	mTransaction.setCurrencyCode(mAccountsDbAdapter.getCurrencyCode(mAccountUID))	3
32860	mTransaction.setDescription("What	15
4498	mTransaction.setDescription(characterString)	13
29342	mTransaction.setDescription(description)	26
35874	mTransaction.setDoubleEntryAccountUID(mTransactionsDbAdapter.getAccountUID(accountID))	2
18329	mTransaction.setDoubleEntryAccountUID(mTransactionsDbAdapter.getAccountUID(doubleAccountId))	5
31293	mTransaction.setExported(Boolean.parseBoolean(characterString))	5
2616	mTransaction.setExported(false)	31
31419	mTransaction.setExported(true)	10
35815	mTransaction.setName(characterString)	4
29200	mTransaction.setName(name)	9
13314	mTransaction.setNote("What	25
31202	mTransaction.setNote(characterString)	7
36623	mTransaction.setNote(notes)	29
20781	mTransaction.setRecurrencePeriod(Long.parseLong(characterString))	7
51296	mTransaction.setSplitAccountUID(mTransactionsDbAdapter.getAccountUID(splitAccountId))	3
54462	mTransaction.setSplits(accountSplits)	5
31507	mTransaction.setSplits(mSplitsList)	30
21146	mTransaction.setTemplate(Long.parseLong(characterString)	4
3037	mTransaction.setTemplate(mInTemplates)	15
25530	mTransaction.setTemplate(mRecurrencePeriod	5
51791	mTransaction.setTemplate(mSaveTemplateCheckbox.isChecked())	5
3318	mTransaction.setTemplate(true)	11
4449	mTransaction.setTime(GncXmlHelper.parseDate(characterString))	15
35981	mTransaction.setTime(System.currentTimeMillis())	23
29308	mTransaction.setTime(cal.getTimeInMillis())	36
13388	mTransaction.setTime(mTransactionTimeMillis)	29
29199	mTransaction.setTransactionType(TransactionType.valueOf(type))	2
35939	mTransaction.setTransactionType(type)	3
3665	mTransaction.setUID(UUID.randomUUID().toString())	11
31819	mTransaction.setUID(characterString)	11
8883	mTransactionAccount	6
62007	mTransactionAccount.setText("in	5
63777	mTransactionAccount.setText(getString(R.string.label_inside_account_with_name,AccountsDbAdapter.getInstance().getAccountFullName(mAccountUID)))	2
185	mTransactionAmount	10
31731	mTransactionAmount.getCurrency()	5
31734	mTransactionAmount.multiply(rate)	5
1729	mTransactionAmount.setText(balance.formattedString())	6
1506	mTransactionAmount.setTextColor(getResources().getColor(color))	6
33158	mTransactionCount	5
1003	mTransactionDescription	12
1608	mTransactionDescription.setText(transaction.getDescription())	11
18573	mTransactionEditListener	10
27891	mTransactionEditListener.createNewTransaction(mAccountID)	6
30380	mTransactionEditListener.createNewTransaction(mAccountUID)	12
29341	mTransactionEditListener.editTransaction(id)	3
1377	mTransactionEditListener.editTransaction(mTransactionsDbAdapter.getUID(id))	13
28321	mTransactionId	14
59907	mTransactionIds	8
24922	mTransactionIds)	18
24819	mTransactionIds.length)	14
2611	mTransactionList	16
2852	mTransactionList.add(mTransaction)	20
25490	mTransactionList.add(transaction)	5
14530	mTransactionListNavigationListener	28
26800	mTransactionListNavigationListener)	11
33190	mTransactionOptionsView	9
32943	mTransactionOptionsView.findViewById(R.id.radio_delete)	6
33221	mTransactionOptionsView.findViewById(R.id.target_accounts_spinner)	6
33238	mTransactionOptionsView.setVisibility(mTransactionCount	6
9323	mTransactionRecyclerAdapter	14
60687	mTransactionRecyclerAdapter.notifyDataSetChanged()	3
63921	mTransactionRecyclerAdapter.notifyItemRangeChanged(0,mTransactionRecyclerAdapter.getItemCount())	6
60673	mTransactionRecyclerAdapter.swapCursor(cursor)	3
59166	mTransactionRecyclerAdapter.swapCursor(null)	7
13922	mTransactionTimeMillis	24
58673	mTransactionToTemplateAccountMap	1
25646	mTransactionToTemplateAccountMap.get(actionUID)	10
25609	mTransactionToTemplateAccountMap.get(actionUID).getName()	3
56750	mTransactionToTemplateAccountMap.get(curTrxUID).getUID()	4
25884	mTransactionToTemplateAccountMap.put("	7
26157	mTransactionToTemplateAccountMap.put(trnUID,account)	5
13015	mTransactionTypeButton	34
26276	mTransactionTypeButton.getText().toString()	5
7306	mTransactionTypeButton.invalidate()	8
24060	mTransactionTypeButton.isChecked()	12
54824	mTransactionTypeButton.isChecked()){	6
13496	mTransactionTypeButton.setAccountType(mAccountType)	28
13199	mTransactionTypeButton.setAmountFormattingListener(mAmountEditText,mCurrencyTextView)	15
6902	mTransactionTypeButton.setChecked()	4
13478	mTransactionTypeButton.setChecked(TransactionType.valueOf(typePref))	8
32738	mTransactionTypeButton.setChecked(balance.isNegative())	12
6812	mTransactionTypeButton.setChecked(false)	15
27899	mTransactionTypeButton.setChecked(mTransaction.getAmount().isNegative())	5
36005	mTransactionTypeButton.setChecked(mTransaction.getBalance(accountUID).isNegative())	4
21698	mTransactionTypeButton.setChecked(mTransaction.getBalance(mAccountUID).isNegative())	9
7055	mTransactionTypeButton.setChecked(mTransaction.getTransactionType()	16
7368	mTransactionTypeButton.setChecked(true)	8
31683	mTransactionTypeButton.setEnabled(b)	6
19034	mTransactionTypeButton.setOnCheckedChangeListener(new	8
23618	mTransactionTypeButton.setTextColor(green)	4
23636	mTransactionTypeButton.setTextColor(red)	4
6886	mTransactionTypeButton.setTextOff(getString(R.string.label_credit))	8
6714	mTransactionTypeButton.setTextOff(getString(R.string.label_debit))	8
6706	mTransactionTypeButton.setTextOn(getString(R.string.label_credit))	8
7136	mTransactionTypeButton.setTextOn(getString(R.string.label_debit))	8
36002	mTransactionTypeButton.setVisibility(View.GONE)	5
31575	mTransactionTypeButton.setVisibility(visibility)	12
13788	mTransactionTypeButton.setupCheckedListener(mAmountEditText,mCurrencyTextView)	4
7089	mTransactionTypeButton.toggle()	8
9471	mTransactionTypeSwitch	6
62822	mTransactionTypeSwitch.getVisibility()	4
56717	mTransactionTypeSwitch.setAccountType(mAccountType)	11
52732	mTransactionTypeSwitch.setAmountFormattingListener(mAmountEditText,mCurrencyTextView)	11
56685	mTransactionTypeSwitch.setChecked(TransactionType.valueOf(typePref))	14
56668	mTransactionTypeSwitch.setChecked(balance.isNegative())	10
56677	mTransactionTypeSwitch.setChecked(mTransaction.getBalance(mAccountUID).isNegative())	4
33132	mTransactionTypeSwitch.setVisibility(visibility)	11
1417	mTransactionUID	45
59398	mTransactionUID.hashCode()	4
52084	mTransactions	8
13990	mTransactionsActivity	11
13474	mTransactionsActivity.finish()	13
13394	mTransactionsActivity.refresh()	2
28742	mTransactionsActivity.startActivity(intent)	2
14335	mTransactionsAdapter	25
36540	mTransactionsAdapter.addRecord(t)	19
52317	mTransactionsAdapter.addRecord(t,updateMethod)	2
52095	mTransactionsAdapter.addRecord(transaction)	6
52278	mTransactionsAdapter.addRecord(transaction,UpdateMethod.update)	2
26743	mTransactionsAdapter.addTransaction(t)	10
27021	mTransactionsAdapter.addTransaction(trx)	4
52328	mTransactionsAdapter.bulkAddRecords(transactionList)	9
52122	mTransactionsAdapter.bulkAddRecords(transactionList,updateMethod)	2
19364	mTransactionsAdapter.bulkAddTransactions(transactionList)	7
35295	mTransactionsAdapter.close()	10
26920	mTransactionsAdapter.deleteRecord(id)	9
52005	mTransactionsAdapter.deleteTransaction(id)	4
62627	mTransactionsAdapter.deleteTransactionsForAccount(descendantAccountUID)	2
35410	mTransactionsAdapter.fetchAllTransactionsForAccount(accountUID)	5
64173	mTransactionsAdapter.fetchAllTransactionsForAccount(mAccountUid)	2
26918	mTransactionsAdapter.fetchAllTransactionsForAccount(rowId)	6
21313	mTransactionsAdapter.getAccountCurrencyCode(accountUID)	8
7087	mTransactionsAdapter.getAccountType(uid)	5
18984	mTransactionsAdapter.getAllTransactionsSum()	9
18763	mTransactionsAdapter.getCurrencyCode(accountUID)	11
19598	mTransactionsAdapter.getCurrencyCode(id)	10
52160	mTransactionsAdapter.getScheduledTransactionsForAccount(account.getUID())	6
919	mTransactionsAdapter.getSplitDbAdapter()	10
51127	mTransactionsAdapter.getSplitDbAdapter().computeSplitBalance(accountsList,currencyCode,hasDebitNormalBalance)	2
51096	mTransactionsAdapter.getSplitDbAdapter().computeSplitBalance(getAccountUID(accountId))	3
24986	mTransactionsAdapter.getSplitDbAdapter().computeSplitBalance(getUID(accountId))	3
35289	mTransactionsAdapter.getTransactionsSum(id)	4
19909	mTransactionsContainer	6
19489	mTransactionsContainer.setVisibility(View.GONE)	6
1469	mTransactionsDbAdapter	177
52293	mTransactionsDbAdapter.addRecord(duplicate)	5
52086	mTransactionsDbAdapter.addRecord(duplicate,DatabaseAdapter.UpdateMethod.insert)	2
57232	mTransactionsDbAdapter.addRecord(mTemplateTransaction,DatabaseAdapter.UpdateMethod.insert)	3
52373	mTransactionsDbAdapter.addRecord(mTransaction)	8
13337	mTransactionsDbAdapter.addRecord(mTransaction,DatabaseAdapter.UpdateMethod.insert)	4
52087	mTransactionsDbAdapter.addRecord(mTransaction,DatabaseAdapter.UpdateMethod.replace)	2
62951	mTransactionsDbAdapter.addRecord(multiTransaction)	4
61770	mTransactionsDbAdapter.addRecord(t1)	3
61741	mTransactionsDbAdapter.addRecord(t2)	3
52342	mTransactionsDbAdapter.addRecord(templateTransaction)	5
52372	mTransactionsDbAdapter.addRecord(templateTransaction,DatabaseAdapter.UpdateMethod.replace)	2
26484	mTransactionsDbAdapter.addRecord(transaction)	32
32618	mTransactionsDbAdapter.addRecord(transaction,DatabaseAdapter.UpdateMethod.insert)	4
3119	mTransactionsDbAdapter.addTransaction(mTransaction)	45
2804	mTransactionsDbAdapter.addTransaction(recurringTransaction)	14
33863	mTransactionsDbAdapter.addTransaction(t)	4
58822	mTransactionsDbAdapter.addTransaction(t1)	5
58899	mTransactionsDbAdapter.addTransaction(t2)	5
3276	mTransactionsDbAdapter.addTransaction(templateTransaction)	13
28352	mTransactionsDbAdapter.addTransaction(transaction)	19
61763	mTransactionsDbAdapter.buildModelInstance(cursor)	3
33721	mTransactionsDbAdapter.buildTransactionInstance(cursor)	7
20508	mTransactionsDbAdapter.buildTransactionInstance(transactionsCursor)	11
52296	mTransactionsDbAdapter.bulkAddRecords(mTemplateTransactions)	5
52281	mTransactionsDbAdapter.bulkAddRecords(mTemplateTransactions,DatabaseAdapter.UpdateMethod.insert)	2
23331	mTransactionsDbAdapter.bulkAddRecords(mTransactionList)	9
52218	mTransactionsDbAdapter.bulkAddRecords(mTransactionList,DatabaseAdapter.UpdateMethod.insert)	2
59255	mTransactionsDbAdapter.bulkAddTransactions(mTemplateTransactions)	6
3406	mTransactionsDbAdapter.bulkAddTransactions(mTransactionList)	22
18025	mTransactionsDbAdapter.close()	34
4247	mTransactionsDbAdapter.deleteAllRecords()	31
19860	mTransactionsDbAdapter.deleteRecord(id)	22
58868	mTransactionsDbAdapter.deleteRecord(transaction.getUID())	2
60662	mTransactionsDbAdapter.deleteRecord(transactionId)	3
29383	mTransactionsDbAdapter.deleteTransaction(id)	5
56877	mTransactionsDbAdapter.exportTransactionsWithSplitsToGncXML(xmlSerializer,null)	3
20498	mTransactionsDbAdapter.fetchAllRecords()	11
2964	mTransactionsDbAdapter.fetchTemplatesStartingWith(name	5
53131	mTransactionsDbAdapter.fetchTransactionSuggestions(name	3
29202	mTransactionsDbAdapter.fetchTransactionsStartingWith(name.toString())	8
3942	mTransactionsDbAdapter.fetchTransactionsStartingWith(name==null?"":name.toString())	7
33642	mTransactionsDbAdapter.fetchTransactionsWithSplits(	8
10273	mTransactionsDbAdapter.getAccountCurrencyCode(mAccountUID)	19
18463	mTransactionsDbAdapter.getAccountID(accountUID)	7
30455	mTransactionsDbAdapter.getAccountID(mTransaction.getAccountUID())	7
35894	mTransactionsDbAdapter.getAccountID(mTransaction.getDoubleEntryAccountUID())	2
7195	mTransactionsDbAdapter.getAccountType(mainAccountUID)	5
7264	mTransactionsDbAdapter.getAccountType(transferAccountUID)	5
18289	mTransactionsDbAdapter.getAccountUidFromTransaction(id)	5
54326	mTransactionsDbAdapter.getAllRecords()	4
13887	mTransactionsDbAdapter.getAllTransactions()	12
5430	mTransactionsDbAdapter.getAllTransactions().get(0)	10
30824	mTransactionsDbAdapter.getAllTransactionsForAccount(ALPHA_ACCOUNT_UID)	5
28302	mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID)	20
28969	mTransactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID).size()	10
59425	mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID)	6
62982	mTransactionsDbAdapter.getAllTransactionsForAccount(TRANSACTIONS_ACCOUNT_UID).size()	4
62795	mTransactionsDbAdapter.getAllTransactionsForAccount(account.getUID())	4
29178	mTransactionsDbAdapter.getAllTransactionsForAccount(accountUidToDelete)	4
58937	mTransactionsDbAdapter.getAllTransactionsForAccount(alphaAccount.getUID())	5
62858	mTransactionsDbAdapter.getAllTransactionsForAccount(euroAccount.getUID())	4
63080	mTransactionsDbAdapter.getAllTransactionsForAccount(mTransferAccount.getUID())	4
28874	mTransactionsDbAdapter.getAllTransactionsForAccount(transferAccount.getUID())	2
58835	mTransactionsDbAdapter.getAttribute(transaction.getUID(),	5
35873	mTransactionsDbAdapter.getBalance(transactionId,mAccountID)	4
34543	mTransactionsDbAdapter.getBalance(transactionUID,mAccountUID)	10
19171	mTransactionsDbAdapter.getCurrencyCode(accountID))	5
18120	mTransactionsDbAdapter.getCurrencyCode(accountId)	20
7305	mTransactionsDbAdapter.getCurrencyCode(mAccountID))	9
35989	mTransactionsDbAdapter.getCurrencyCode(mAccountId)	4
59702	mTransactionsDbAdapter.getCurrencyCode(mAccountUID)	5
19346	mTransactionsDbAdapter.getNumCurrencies(mTransaction.getUID())	12
8136	mTransactionsDbAdapter.getRecord("042ff745a80e94e6237fb0549f6d32ae")	3
8543	mTransactionsDbAdapter.getRecord("b33c8a6160494417558fd143731fc26a")	3
8245	mTransactionsDbAdapter.getRecord("b645bef06d0844aece6424ceeec03983")	4
8675	mTransactionsDbAdapter.getRecord("ded49386f8ea319ccaee043ba062b3e1")	3
54682	mTransactionsDbAdapter.getRecord(id)	6
59483	mTransactionsDbAdapter.getRecord(mTransaction.getUID())	5
62837	mTransactionsDbAdapter.getRecord(multiTransaction.getUID())	5
5381	mTransactionsDbAdapter.getRecord(transaction.getUID())	13
52292	mTransactionsDbAdapter.getRecord(transactionId)	5
31883	mTransactionsDbAdapter.getRecord(transactionUID)	8
686	mTransactionsDbAdapter.getTimestampOfEarliestTransaction(mAccountType,mCurrencyCode)	15
383	mTransactionsDbAdapter.getTimestampOfLatestTransaction(mAccountType,mCurrencyCode)	12
20279	mTransactionsDbAdapter.getTotalTransactionsCount()	11
2924	mTransactionsDbAdapter.getTransaction(id)	15
35909	mTransactionsDbAdapter.getTransaction(id).getSplits().get(0).getAccountUID()	7
28465	mTransactionsDbAdapter.getTransaction(mTransactionId)	12
33928	mTransactionsDbAdapter.getTransaction(t.getUID())	4
31156	mTransactionsDbAdapter.getTransaction(transaction.getUID())	9
18115	mTransactionsDbAdapter.getTransaction(transactionId)	15
19035	mTransactionsDbAdapter.getTransaction(transactionUID)	11
3070	mTransactionsDbAdapter.getTransactionsCount(DUMMY_ACCOUNT_UID)	29
59361	mTransactionsDbAdapter.getTransactionsCount(TRANSACTIONS_ACCOUNT_UID)	5
51141	mTransactionsDbAdapter.getTransactionsCount(mTransactionsDbAdapter.getAccountID(DUMMY_ACCOUNT_UID))	4
30557	mTransactionsDbAdapter.getTransactionsSum(mAccountID)	10
19653	mTransactionsDbAdapter.getUID(id)	13
7201	mTransactionsDbAdapter.isSameAccount(mAccountID,doubleEntryAccountUID)){	3
51270	mTransactionsDbAdapter.isSameAccount(mAccountID,splitAccountUID)){	3
7040	mTransactionsDbAdapter.isSameAccount(mAccountID,transferAccountUID)){	5
20117	mTransactionsDbAdapter.scheduleTransaction(mTransaction)	12
35970	mTransactionsDbAdapter.scheduleTransaction(recurringTransaction)	3
57217	mTransactionsDbAdapter.updateTransaction(values,"uid	3
33189	mTransactionsDestinationAccountSpinner	8
2932	mTransactionsDestinationAccountSpinner.getSelectedItemId()	5
33549	mTransactionsDestinationAccountSpinner.setAdapter(mCursorAdapter)	6
62646	mTransactionsDestinationAccountSpinner.setEnabled(isChecked)	2
62635	mTransactionsDestinationAccountSpinner.setVisibility(View.GONE)	2
896	mTransactionsList	22
7217	mTransactionsList)	58
1634	mTransactionsList.add(transaction)	21
51184	mTransactionsList.remove(transaction)	6
58917	mTransactionsList.size()	5
1286	mTransferAccount	18
60093	mTransferAccount.setCommodity(Commodity.DEFAULT_COMMODITY)	3
259	mTransferAccount.setText(	6
1579	mTransferAccount.setText(transaction.getSplits().size()	6
13963	mTransferAccount.setUID(TRANSFER_ACCOUNT_UID)	6
8927	mTransferAccountSpinner	13
25776	mTransferAccountSpinner.getCount()	25
11164	mTransferAccountSpinner.getSelectedItemId()	25
31989	mTransferAccountSpinner.postDelayed(new	5
12065	mTransferAccountSpinner.setAdapter(mAccountCursorAdapter)	4
12821	mTransferAccountSpinner.setAdapter(mCursorAdapter)	11
31516	mTransferAccountSpinner.setOnItemSelectedListener(new	8
12760	mTransferAccountSpinner.setSelection(pos)	4
31979	mTransferAccountSpinner.setSelection(position)	9
51331	mTransferAccountSpinner.setVisibility(View.GONE)	2
47286	mTransformation	4
47220	mTransformation.getAlpha()	4
42439	mTranslationX	4
43053	mTranslationY	4
44206	mTreeObserver	4
44451	mTreeObserver.addOnGlobalLayoutListener(this)	4
44438	mTreeObserver.removeGlobalOnLayoutListener(this)	4
18069	mType	18
13405	mTypeButton	4
32023	mTypeToggleButton	10
31568	mTypeToggleButton.setAccountType(accountType)	7
18821	mUID	26
30946	mUID.equals(baseModel.mUID)	6
30777	mUID.hashCode()	6
39111	mUiOptions	7
47063	mUiThreadId	4
45398	mUpClickListener	4
45562	mUpView	6
46030	mUpView.getLayoutParams()	4
45864	mUpView.getMeasuredHeight()	4
46099	mUpView.getMeasuredWidth()	4
46123	mUpView.getVisibility()	4
46068	mUpView.layout(0,upTop,upWidth,upTop	4
45788	mUpView.setVisibility(isUp	4
45118	mUpWidth	6
48955	mUpdateDrawableStateRunnable	5
41860	mUpdateListeners	7
41923	mUpdateListeners.add(listener)	4
41727	mUpdateListeners.clear()	4
43175	mUpdateListeners.get(i).onAnimationUpdate(this)	4
42079	mUpdateListeners.remove(listener)	4
42972	mUpdateListeners.size()	4
14269	mUpdateStatement	2
49723	mUrlColor	5
7506	mUseAccountColor	31
9989	mUseCompactView	19
613	mUseDoubleEntry	73
46596	mUseLargestChild	7
49489	mUserQuery	10
45216	mUserTitle	4
32570	mUsername	7
63105	mUsername.getText().toString().trim()	3
63185	mUsername.setText(mOC_username)	3
32722	mUsernameError	7
63117	mUsernameError.getText().toString().equals(getString(R.string.owncloud_user_ok))	3
58679	mUsernameError.setText(getString(R.string.owncloud_user_invalid))	7
58719	mUsernameError.setText(getString(R.string.owncloud_user_ok))	7
58733	mUsernameError.setTextColor(ContextCompat.getColor(getContext(),R.color.debit_red))	4
58734	mUsernameError.setTextColor(ContextCompat.getColor(getContext(),R.color.theme_primary))	4
32608	mUsernameError.setVisibility(View.GONE)	7
58708	mUsernameError.setVisibility(View.VISIBLE)	7
23650	mValue	27
53425	mValue.abs().equals(other.mValue.abs())	2
53487	mValue.absolute().equals(other.mValue.absolute())	5
11230	mValue.getCommodity().getCurrencyCode()	2
10866	mValue.getCurrency().getCurrencyCode()	14
33982	mValue.getCurrency().getDefaultFractionDigits()	5
10811	mValue.getDenominator()	11
12082	mValue.getNumerator()	11
59423	mValue.hashCode()	4
53636	mValue.toString()	8
23639	mValueDenom	17
23673	mValueNum	16
41365	mValueType	10
41709	mValueType)	4
41703	mValues	11
41432	mValues.length	11
42288	mValuesMap	4
42042	mValuesMap.get(propertyName)	4
41570	mValuesMap.put(mPropertyName,valuesHolder)	4
41436	mValuesMap.put(propertyName,valuesHolder)	4
42209	mValuesMap.put(valuesHolder.getPropertyName(),valuesHolder)	4
41321	mValuesMap.remove(oldName)	4
41277	mValues[0]	8
42181	mValues[0].getAnimatedValue()	4
41885	mValues[0].setEvaluator(value)	4
41245	mValues[i]	4
42704	mValues[i].calculateValue(fraction)	4
42069	mValues[i].init()	4
41414	mValues[i].setAnimatedValue(mTarget)	4
41646	mValues[i].setupEndValue(mTarget)	4
41359	mValues[i].setupSetterAndGetter(mTarget)	4
41202	mValues[i].setupStartValue(mTarget)	4
41272	mValues[i].toString()	8
42404	mView	4
42670	mView.get()	4
9576	mViewPager	30
35066	mViewPager.addOnPageChangeListener(new	18
34929	mViewPager.getCurrentItem()	12
34985	mViewPager.setAdapter(mPagerAdapter)	21
62297	mViewPager.setCurrentItem(INDEX_SUB_ACCOUNTS_FRAGMENT)	3
35019	mViewPager.setCurrentItem(INDEX_TRANSACTIONS_FRAGMENT)	9
57535	mViewPager.setCurrentItem(index)	15
34957	mViewPager.setCurrentItem(tab.getPosition())	8
20483	mViewPager.setVisibility(View.GONE)	9
45227	mVisAnimListener	8
45640	mVisAnimListener.mFinalVisibility	4
44963	mVisibilityAnim	9
45570	mVisibilityAnim.cancel()	8
45221	mVisibilityAnim.end()	4
43827	mVisibleItems	5
44803	mVisibleItems.add(item)	4
44540	mVisibleItems.clear()	4
49064	mVoiceAppSearchIntent	9
48882	mVoiceAppSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)	5
49472	mVoiceButton	5
50213	mVoiceButton)	5
50342	mVoiceButton.getVisibility()	5
49345	mVoiceButton.setOnClickListener(mOnClickListener)	5
50447	mVoiceButton.setVisibility(visibility)	5
49500	mVoiceButtonEnabled	5
49829	mVoiceButtonEnabled)	5
48946	mVoiceWebSearchIntent	9
49520	mVoiceWebSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)	5
49614	mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,	5
4612	mWakeLock	5
5025	mWakeLock.acquire()	5
5758	mWakeLock.release()	5
39432	mWasHiddenBeforeMode	4
42835	mWidthLimit	4
42547	mWidthLimitSet	4
46312	mWidthMeasureSpec	5
45404	mWindowCallback	4
45754	mWindowCallback.onMenuItemSelected(Window.FEATURE_OPTIONS_PANEL,mLogoNavItem)	4
35205	mWindowManagerObject	2
50895	mWizardModel	7
62251	mWizardModel.findByKey(key)	3
21869	mWizardModel.getCurrentPageSequence()	6
50888	mWizardModel.load(savedInstanceState.getBundle("model"))	7
50756	mWizardModel.registerListener(this)	7
21201	mWizardModel.unregisterListener(this)	8
39811	mWrapped	4
39460	mWrapped.onActionItemClicked(mode,item)	4
39820	mWrapped.onCreateActionMode(mode,menu)	4
39995	mWrapped.onDestroyActionMode(mode)	4
39605	mWrapped.onPrepareActionMode(mode,menu)	4
10029	mXmlRadioButton	7
63234	mXmlRadioButton.performClick()	3
63200	mXmlRadioButton.setOnClickListener(radioClickListener)	3
63217	mXmlRadioButton.setVisibility(View.GONE)	3
17069	maand</item>	30
17086	maanden</item>	32
17057	maanden</string>	8
35752	made	42
56507	made,the	11
48046	made.	8
27216	magenta	3
55084	magic	3
28757	main	33
6434	mainAccountType	5
6912	mainAccountUID	5
8128	mainDb	17
32642	mainDb.close()	3
63405	mainDb.getPath()	6
63444	mainDbPath	6
32583	mainly	11
26301	maintain	18
60888	maintainance	3
28058	maintenant	6
4733	mais	41
17375	maj	12
37273	major	5
30665	majority	11
385	make	117
60047	makeAccounts(){	3
47738	makeAndAddView	4
47711	makeAndAddView(0)	4
47944	makeAndAddView(int	4
47624	makeAndAddView(mSelectedPosition)	4
45588	makeInAnimation()	4
44940	makeOutAnimation()	4
54497	makePretty(double	4
54398	makePretty(value)	4
26238	maken	13
16631	maken</string>	9
1715	makes	52
9080	making	15
12396	mal</string>	25
15796	malayo</item>	14
57811	maleem=0.001	6
6310	malfuncionamentos	6
14756	malfunction	81
5075	malfunctions	67
22734	malfungsi	7
22763	malfunzionamento	6
15532	malgache</item>	14
62467	malgaxe</item>	6
56213	mall</string>	2
15350	malvinense</item>	14
37901	manage	16
40344	managed	4
3727	management	112
4589	manager	158
48760	manager.	4
29838	manager.beginTransaction()	20
59905	manager.findFragmentByTag("bulk_move_dialog")	4
59906	manager.findFragmentByTag("dialog")	2
29734	manager.findFragmentByTag(AccountsActivity.FRAGMENT_EXPORT_OFX)	7
51330	manager.findFragmentByTag(AccountsActivity.FRAGMENT_NEW_ACCOUNT)	3
29856	manager.findFragmentByTag(FRAGMENT_EXPORT_DIALOG)	7
55066	manager.findFragmentByTag(FRAGMENT_EXPORT_OFX)	2
55184	manager.findFragmentByTag(FRAGMENT_NEW_ACCOUNT)	2
3496	manager.getString(getString(R.string.key_build_version),"")	11
30864	manager.getString(getString(R.string.key_default_currency),Money.DEFAULT_CURRENCY_CODE)	11
4843	manager.getString(getString(R.string.key_default_transaction_type),"DEBIT")	9
9395	manager.getString(keyDefaultEmail,null)	10
9582	manager.getString(keyDefaultExportFormat,null)	5
17803	managera	22
9035	manages	18
875	managing	99
11760	manajemen	8
17003	manat</item>	9
25549	manejo	8
8441	manifest	21
39628	manifestPackage	4
39923	manifestPackage,String	4
3570	manipulating	18
35376	manipulation	11
52261	manner:	6
2031	manually	51
40435	manually,as	4
46424	manufacturer	5
19832	many	35
2734	map	53
44357	map)	4
3293	map.get(parentUID)	10
3515	map.put(account.getUID(),account)	11
44289	map.put(nativeItem,nonActionItem)	4
44401	map.put(nativeSubItem,subItem)	4
1101	mapAccount	8
63581	mapAccount.get(acct.getParentUID()).getFullName()	3
51228	mapAccount.get(uid)	5
1118	mapAccount.put(acct.getUID(),acct)	6
58755	mapAccounts	5
58773	mapAccounts.get(acct.getParentUID()).getFullName()	6
51196	mapAccounts.get(acctUID)	7
24075	mapAccounts.put(account.getUID(),account)	10
3253	mapFullName	12
54522	mapFullName.get(acc.getParentUID())	6
3582	mapFullName.get(parentUID)	5
3254	mapFullName.put(acc.getUID(),"	7
54568	mapFullName.put(acc.getUID(),"")	8
54212	mapFullName.put(acc.getUID(),AccountsDbAdapter.ROOT_ACCOUNT_FULL_NAME)	4
2789	mapFullName.put(acc.getUID(),acc.getName())	10
2777	mapFullName.put(acc.getUID(),parentAccountFullName	5
54542	mapFullName.put(acc.getUID(),parentAccountFullName)	6
3451	mapFullName.put(account.getUID(),null)	14
57012	mapFullName.put(rootAccountUID,map.get(rootAccountUID).getName())	5
59426	mapImbalanceAccount	2
25917	mapImbalanceAccount.get(currencyCode)	18
59421	mapImbalanceAccount.put(account.getName().substring(imbalancePrefix.length()),account)	2
32891	mapImbalanceAccount.put(currencyCode,imbAccount)	9
56023	mapp	2
43962	mapped	4
32127	mapping	3
38976	mapping")	4
32233	mappings	3
41284	maps	4
27909	marcare	5
56285	marco	2
37507	margin	5
45847	margin.	5
43588	margins	8
20778	mark	26
60729	mark"	3
48562	mark,false	6
37035	mark.	10
24104	markAsExported(@NonNull	4
24459	markAsExported(String	20
40070	markHiddenBeforeMode)	4
617	marked	36
23289	markerats</string>	7
27794	marking	13
564	marks	14
48299	marks.	4
27446	maroon	3
15847	marroqu&#237	8
15765	marroqu</item>	10
62395	marroquino</item>	6
38753	mask	4
37965	mask)	9
60076	massa	3
11780	mata	12
27496	match	44
43631	match,apply	4
43747	match.	4
39645	matched	8
12562	matcher	5
12931	matcher.end()	5
36125	matches	30
2996	matching	48
42648	matrix	4
1401	matter	18
21040	matter,just	3
29808	maven	16
29877	mavenCentral()	10
42540	max	19
47038	max)	4
43305	maxActions	4
42977	maxActions))	4
42533	maxActions++	4
42853	maxActions--	4
48868	maxActivityCount	4
49574	maxActivityCount)	4
49611	maxActivityCountOffset	4
49092	maxActivityCountOffset)	4
43936	maxCellsUsed	4
43365	maxChildHeight	4
34318	maxDate	5
34244	maxDate)	5
45778	maxHeight	9
47480	maxHeight)	4
45465	maxHeight))	4
47478	maxHeight,	4
47298	maxHeight,int	4
32844	maxRecent	8
32847	maxRecent++	8
43929	maxRemovable	4
44021	maxRemovable)	4
50063	maxResults	5
53823	maxValue	2
48966	maxWidth	5
37207	maximal	16
37696	maximum	28
50603	maxpixels	5
49843	maxpixels)	5
671	may	398
9099	maybe	10
59542	mbio	6
59538	mbio</string>	6
22939	mdia</string>	10
4191	mdias</string>	6
2268	me	93
25012	me.	5
29472	me</string>	4
19374	meaning	10
122	meaningful	8
6128	means	107
9933	meant	16
64335	meanwhile	1
44238	measurable	4
43587	measure	21
49178	measureChild(child,widthMeasureSpec,heightMeasureSpec)	4
46170	measureChild(view,widthMeasureSpec,heightMeasureSpec)	4
43460	measureChildForCells(View	4
43654	measureChildForCells(child,cellSize,cellsAvailable,	4
45085	measureChildView(View	4
45672	measureChildView(mClose,availableWidth,childSpecHeight,0)	4
45494	measureChildView(mIndeterminateProgressView,availableWidth,	4
45781	measureChildView(mMenuView,availableWidth,	4
45093	measureChildView(mTitleLayout,availableWidth,	4
45540	measureChildView(mTitleLayout,availableWidth,childSpecHeight,0)	4
46818	measureChildWithMargins(View	4
45890	measureChildWithMargins(mIconView,widthMeasureSpec,width,heightMeasureSpec,0)	4
46080	measureChildWithMargins(mUpView,widthMeasureSpec,0,heightMeasureSpec,0)	4
47618	measureContentWidth((SpinnerAdapter)	4
49435	measureContentWidth()	4
44679	measureContentWidth(ListAdapter	4
47847	measureContentWidth(SpinnerAdapter	4
48141	measureContentWidth(getAdapter(),getBackground())),	4
46554	measureHeightOfChildren(int	4
47297	measureScrapChild(View	4
46924	measureScrapChild(child,i,widthMeasureSpec)	4
43678	measured	19
45371	measuredHeight	4
45340	measuredHeight)	4
42565	measuredWidth	11
50463	measurements	5
40721	mechanism	8
40615	mechanism.	4
38134	mechanisms	12
41372	mechanisms.</p>	4
15089	med	29
26783	med&#8230	10
56112	medel</string>	2
38473	media	4
2518	media</string>	18
24891	medias</string>	6
47660	mediator	4
17005	meerdere	6
18722	meet	9
21243	meg	10
64017	megadsa</string>	4
22644	megerstse</string>	6
12706	megjelenthet	11
25573	mehrere	5
34797	meilleures	5
2945	mejoras\n	29
22115	mejoras\n</string>	14
11885	melakukan	7
16585	melden</string>	11
4722	melhoramentos\n	13
11515	melhoramentos\n</string>	17
21089	melhoria	21
4924	melhorias	6
22984	melhorias\n</string>	9
48635	member	4
11358	membuat	10
22533	memilih	7
11507	memindah	7
31176	memo	48
33299	memo&gt	5
34082	memo)	14
35689	memo.appendChild(doc.createTextNode(mDescription))	9
54252	memo.appendChild(doc.createTextNode(mNotes))	2
63025	memo.isEmpty()	4
31200	memo.length()	8
33404	memo?"	10
58856	memo?")	2
20776	memoNode	9
20591	memoNode.appendChild(doc.createTextNode(mMemo))	9
12024	memodifikasi	3
20268	memory	11
29653	memutuskannya	5
29704	menader	4
10394	menambahkan	9
10194	mencatat	3
22823	mendukung	7
62708	menetapkan	3
10453	mengekspor	16
11104	mengekspor</string>	7
10785	menggunakan	7
10288	menghapus	14
12084	mengimpor	7
10733	mengirim	7
11673	mengubahnya	7
12063	menjadi	7
5700	menores</string>	24
278	menu	124
43940	menu's	4
1229	menu)	147
44671	menu).	5
43794	menu).getRootMenu().close(false)	4
39288	menu){	4
19707	menu,	41
1554	menu,MenuInflater	103
38944	menu,MenuItem	20
43545	menu,MenuItemImpl	12
45174	menu,MenuPresenter.Callback	4
43017	menu,View	8
39235	menu,android.view.MenuInflater	4
44896	menu,android.view.MenuItem.OnMenuItemClickListener	4
47171	menu,at	4
39258	menu,boolean	24
43867	menu,each	4
48217	menu,got	4
48723	menu,if	4
44773	menu,int	4
48583	menu,leaving	4
44640	menu,one	4
44784	menu,this	4
44376	menu,which	4
38154	menu,you	4
39231	menu--return	4
38140	menu-provided	4
43768	menu-related	4
37178	menu.	33
32683	menu.add(0,(int)id,maxRecent,name)	9
32770	menu.add(0,ID_MANAGE_BOOKS,maxRecent,"Manage	5
32728	menu.add(0,ID_MANAGE_BOOKS,maxRecent,R.string.menu_manage_books)	2
30505	menu.add(0,MENU_IMPORT_ACCOUNTS,0,R.string.menu_import_accounts)	9
44613	menu.add(nonActionItem.getGroupId(),nonActionItem.getItemId(),	4
45578	menu.addMenuPresenter(mActionMenuPresenter)	4
44425	menu.addMenuPresenter(this)	4
48639	menu.addSubMenu(groupId,itemId,itemCategoryOrder,itemTitle)	4
44394	menu.addSubMenu(nonActionItem.getGroupId(),nonActionItem.getItemId(),	4
44404	menu.clear()	4
63925	menu.findItem(R.id.menu_compact_trn_view)	7
27848	menu.findItem(R.id.menu_favorite_account)	11
29910	menu.findItem(R.id.menu_group_other_slice).setVisible(false)	8
29879	menu.findItem(R.id.menu_group_other_slice).setVisible(mChartDataPresent)	5
1329	menu.findItem(R.id.menu_group_reports_by).setVisible(false)	11
20856	menu.findItem(R.id.menu_order_by_size).setVisible(false)	11
20685	menu.findItem(R.id.menu_order_by_size).setVisible(mChartDataPresent)	10
1745	menu.findItem(R.id.menu_percentage_mode).setVisible(false)	11
20680	menu.findItem(R.id.menu_percentage_mode).setVisible(mChartDataPresent)	12
19196	menu.findItem(R.id.menu_save)	10
19996	menu.findItem(R.id.menu_search).getActionView()	10
532	menu.findItem(R.id.menu_toggle_average_lines).setVisible(false)	12
57284	menu.findItem(R.id.menu_toggle_average_lines).setVisible(mChartDataPresent)	8
20118	menu.findItem(R.id.menu_toggle_labels).setVisible(false)	11
20171	menu.findItem(R.id.menu_toggle_labels).setVisible(mChartDataPresent)	10
56573	menu.findItem(R.id.menu_toggle_legend).setChecked(false)	7
50127	menu.findItem(R.id.my_menu_item)	4
44373	menu.getContext().getResources().getString(	4
38347	menu.hasVisibleItems()	4
18059	menu.removeItem(R.id.context_menu_move_transactions)	8
18009	menu.removeItem(R.id.menu_search)	18
18295	menu.removeItem(R.id.menu_settings)	17
48615	menu.setGroupCheckable(groupId,true,true)	4
44759	menu.setGroupCheckable(nonActionItem.getGroupId(),true,true)	4
37484	menu/action	4
38030	menu:	13
3150	menuInflater	7
3653	menuInflater.inflate(R.menu.book_context_menu,popupMenu.getMenu())	7
44553	menuInfo	5
44536	menuInfo)	5
34589	menuItem	7
20941	menuItem)	13
49900	menuItem.getActionProvider()	4
34605	menuItem.setTitle(R.string.btn_export)	3
42928	menuItemClickListener	12
43052	menuItemClickListener)	12
44183	menuLayoutRes	4
43582	menuLayoutRes,int	4
45757	menuLeft	4
45547	menuLeft)	4
43285	menuParent	4
48595	menuRes	4
48284	menuRes,Menu	4
48732	menuState	4
48358	menuState.addItem()	4
48318	menuState.addSubMenuItem()	4
48437	menuState.itemActionProvider.hasSubMenu())	4
48590	menuState.readGroup(attrs)	4
48430	menuState.readItem(attrs)	4
48636	menuState.resetGroup()	4
43473	menuType	8
43312	menuType)	12
43225	menuView	9
42723	menuView.addView(mOverflowButton,menuView.generateOverflowButtonLayoutParams())	4
45177	menuView.getParent()	4
43628	menuView.getWindowToken()	4
44967	menuView.setLayoutParams(layoutParams)	4
45639	menuView.setVisibility(getAnimatedVisibility())	4
37155	menus	28
47658	menus,read	8
43551	menus.	12
47574	menus</b>	4
47737	menus</b>:	4
10624	menyimpan	14
21252	mer	10
25290	mergeAdapter	12
59630	mergeAdapter.addAdapter(aboutNavAdapter)	4
29813	mergeAdapter.addAdapter(accountsNavAdapter)	6
29880	mergeAdapter.addAdapter(transactionsNavAdapter)	7
25138	mergeAdapter.addView(accountHeader)	8
34782	mergeAdapter.addView(inflater.inflate(R.layout.horizontal_line,mDrawerList,false))	6
25199	mergeAdapter.addView(inflater.inflate(R.layout.horizontal_line,null))	10
24980	mergeAdapter.addView(settingsHeader)	7
29806	mergeAdapter.addView(settingsTextView)	2
29791	mergeAdapter.addView(transactionHeader)	7
54731	merits	9
10168	mes	10
29349	mese</item>	2
2442	meses</item>	81
2716	meses</string>	21
23230	mesi</item>	26
29195	mesi</string>	2
23070	mesos</item>	23
2343	message	65
28112	message,final	6
50385	message,see	5
39690	message.	13
41946	messages	6
14938	mest	19
16573	met	15
44155	metaState	4
8740	metadata	8
9420	metadata.getName()	2
55405	metals	8
1149	method	279
39563	method,animations	4
40607	method,making	8
53057	method,remember	2
28510	method,resolves	4
3471	method.	62
52987	method.</p>	2
49974	method.invoke(imm,flags,null)	5
57645	method.invoke(null,db)	6
50434	method.invoke(view,text,filter)	5
50389	method.invoke(view,visible)	5
50313	method.setAccessible(true)	5
20977	method</p>	9
41992	methodID,float	4
41733	methodID,int	4
41369	methodName	12
41967	methodName)	9
9693	methods	85
35167	methods",e)	2
40472	methods,along	4
41716	methods,if	4
37774	methods.	11
41930	methods.</p>	4
39832	metrics	8
40275	metrics.	4
40215	metrics.density	4
40102	metrics.heightPixels	8
39804	metrics.widthPixels	8
60042	meus	6
62411	mexicana	6
15497	mexicano</item>	18
17342	mi	8
49204	mic	5
49437	microphone	5
44162	midHorizontal	4
43589	midVertical	5
22120	mida</string>	7
17058	middelen	3
16746	middelen</string>	7
40060	middle	9
27243	midnight	3
43290	midy	4
29448	miei	4
17401	miejsce	13
17557	miesic</item>	41
17594	miesicach</string>	8
17393	miesice</item>	41
17387	miesicy</item>	19
56133	mig	2
1251	might	67
25870	miglioramenti\n	7
26084	migliori	5
28034	migliorie	5
20071	migrate	38
14623	migrateBackupFiles(String	5
63716	migrateBackupFiles(book.getUID())	3
20638	migrated,we	4
20054	migrating	21
3340	migration	57
20763	migration),remove	4
33509	migration:	9
1969	migrations	30
35396	migrations)	4
32630	migrations.<br>	9
35730	migrations</p>	4
17025	mij	3
386	millis	21
3049	millis)	21
30414	millis){	5
55459	millisecond	2
1732	milliseconds	105
32140	milliseconds){	18
42250	milliseconds,between	4
40385	milliseconds,of	4
39459	milliseconds,to	12
39882	milliseconds.	17
52684	millisecondsToSubtract	2
52431	millisecondsToSubtract)	2
51649	mime	10
63173	mimeType	3
20955	mimeTypes	13
20785	mimeTypes.add("application/*")	8
20366	mimeTypes.add("application/vnd.google-apps.file")	5
20967	mimeTypes.add("file/*")	8
20746	mimeTypes.add("text/*")	5
46120	min	8
46129	min)	4
44088	minCells	4
44139	minCells)	4
43319	minCells++	4
43837	minCellsAt	4
43687	minCellsItemCount	4
43511	minCellsItemCount++	4
34309	minDate	5
34317	minDate,long	5
3002	minSdkVersion	29
56123	mina	2
61124	mind:	3
21692	mindre	12
21868	mine</string>	6
62756	minggu</item>	3
54998	minhas	15
23108	minifyEnabled	25
52172	minimal	14
36346	minimize	9
37147	minimum	18
32102	minimum,reports	3
21828	minne-kortet</string>	10
14725	minnekort</string>	24
6567	minor	17
23971	minorVersion	4
53626	minuend	3
41999	minus	4
32883	minusMonths	2
24661	minusMonths)	16
31114	minute	13
23587	minute)	16
36219	minute),so	10
64281	minute,	1
31433	minutes	9
59231	mir</string>	4
37974	mirrors	4
3760	mis	9
41163	mis-matches	4
11324	mise	3
16511	mislukt</string>	9
21911	mislyktes</string>	21
25560	missed	25
50679	missed,all	7
50996	missed.	8
7806	missedScheduledTransactions_shouldBeGenerated(){	14
52576	missing	2
37604	missing.	4
56080	misslyckades</string>	2
932	mistyping	6
22220	mit	22
4058	mit</string>	13
56144	mjlighet	2
25538	mltiples	10
55721	mltiplos	5
55457	mna	2
55490	mna</string>	2
56119	mnad</item>	2
56057	mnader</item>	2
56164	mnader</string>	2
29487	mnch	5
15122	mned</item>	43
21883	mnedene</string>	6
21353	mneder</item>	31
36088	mnemonic	11
36400	mnemonic,	4
36138	mnemonic,int	7
61750	mnemonic,or	3
57663	mnfe)	2
17590	mniejsze	18
21965	mnu	5
22359	mnu</string>	5
26469	mobiele	13
21280	mobil	20
3306	mobile	157
29567	mobiler	6
29480	mobilit	6
52044	mobiln	9
14521	mod	13
31031	mod,	2
14542	mod,AccountType	9
47723	modal	4
47524	modal)	4
3685	mode	168
40286	mode")	10
47996	mode's	4
18381	mode)	56
19911	mode,	60
4676	mode,Menu	38
18156	mode,MenuItem	38
39814	mode,android.view.Menu	4
39970	mode,android.view.MenuItem	4
45965	mode,false	4
38712	mode,supplying	4
46830	mode,the	4
49908	mode,then	5
18379	mode.	59
38936	mode.)	4
47278	mode.</p>	4
64292	mode.</p>-	1
18257	mode.finish()	65
45605	mode.getMenu()	4
5732	mode.getMenuInflater()	30
38912	mode.invalidate()	13
6124	mode.setTitle("1	6
4922	mode.setTitle(getString(R.string.title_selected,1))	13
46381	mode/focusable	4
8313	mode:	8
11380	model	70
14619	model)	12
13525	model){	30
54821	model,	2
52343	model,UpdateMethod	5
21110	model.	20
50654	model.load(wizardModel)	4
50898	model.registerListener(this)	4
52505	model.setCreatedTimestamp(Timestamp.valueOf(created))	3
52448	model.setCreatedTimestamp(TimestampHelper.getTimestampForUtcString(created))	5
52613	model.setCreatedTimestamp(TimestampHelper.getTimestampFromUtcString(created))	4
52494	model.setModifiedTimestamp(Timestamp.valueOf(modified))	3
52621	model.setModifiedTimestamp(TimestampHelper.getTimestampForUtcString(modified))	5
52674	model.setModifiedTimestamp(TimestampHelper.getTimestampFromUtcString(modified))	4
52687	model.setUID(uid)	6
61469	model</p>	5
48656	modelClient1	4
48645	modelClient1.setActivityChooserModel(dataModel)	4
48654	modelClient2	4
48367	modelClient2.setActivityChooserModel(dataModel)	4
14531	modelList	10
13757	modelList)	23
14102	modelList){	5
13761	modelList,	6
14641	modelList,UpdateMethod	7
25665	modelList.get(0).getClass().getName()))	13
52899	modelList.get(0).getClass().getSimpleName()))	4
25726	modelList.size()	8
61594	modelRecords	3
61486	modelRecords.add(buildModelInstance(c))	3
38509	modeled	4
29292	modello</string>	5
20181	modelo</string>	16
21140	models	5
48715	models.	4
37288	modes	25
49854	modes,	5
38101	modes,and	4
47724	modes,search,content	4
37975	modes.	13
38323	modes.</p>	4
16410	modifica	18
11694	modificadas!</string>	14
5241	modificadas</string>	6
5156	modificar	47
15290	modificar</string>	20
16402	modificare	24
22278	modificarn!</string>	7
22023	modificarn.</string>	7
22879	modificate!</string>	7
20859	modification	6
40996	modifications	4
9077	modified	67
10493	modified!</string>	45
30331	modified",Toast.LENGTH_LONG).show()	4
36234	modified,<code>false</code>	4
20752	modified.	6
5214	modified</string>	105
52675	modified=	12
20751	modifiedTimestamp	9
20699	modifiedTimestamp)	9
20684	modified_at	31
10724	modifier	15
10519	modifies</string>	7
11884	modifis!</string>	7
16232	modifis</string>	6
4355	modify	173
18669	modifying	28
16459	modle</string>	5
15188	modul</string>	14
9018	module:	20
17813	modyfikowa	9
17311	modyfikowane</string>	16
17743	moe	16
21065	moeda	37
28793	moeda</item>	11
6030	moeda</string>	31
17748	moesz	14
7524	moet	34
17741	mog	16
11615	mois</item>	34
10514	mois</string>	10
17427	moje	8
15683	moldavo</item>	14
25809	molti	10
25606	moment	25
31394	moment")	9
20910	momento	19
57430	mon	3
17625	mona	16
14662	moneda	23
15397	moneda</item>	14
22185	moneda</string>	10
11118	money	72
6069	money",e)	6
18265	money){	27
25269	money.	4
59728	money.add(addend)	2
58878	money.add(new	4
58898	money.divide(2)	4
58860	money.divide(addend)	4
58865	money.hashCode()	4
58833	money.multiply(addend)	4
58826	money.multiply(new	4
58911	money.negate()	4
59834	money.subtract(addend)	2
58851	money.subtract(new	4
18146	moneyAmount	9
26464	moneyDiv	10
26332	moneyFactor	13
15597	mongol</item>	14
36119	monitor	2
63535	monitors	1
11998	monnaie	26
10969	monnaie</string>	18
11719	monnaies</string>	12
44702	monolithic	4
55603	monost	5
3923	montada</string>	11
20860	montado!</string>	19
11852	montant	44
10503	montante	25
22987	montantes	16
29285	montata!</string>	4
15185	montert!</string>	22
1102	month	51
55742	month,int	10
1291	month</item>	133
9168	monthOfYear	15
23923	monthOfYear,	15
812	monthOfYear,int	23
53603	monthly	10
54098	monthly"/>	2
469	months	46
19584	months"	5
28920	months"/>	7
30037	months)	4
28086	months,	7
6688	months.	20
26902	months.length	5
969	months</item>	137
3813	months</string>	81
26927	months[i]	4
26886	months[i])	5
62550	months[i],i	3
26911	months[i],i))	4
23821	moodified	6
23434	more	143
43405	more)	4
44094	more,no	4
37836	more,read	4
18982	most	100
32821	mostAppearedCurrency	8
32655	mostCurrencyAppearance	7
32909	mostCurrencyAppearance)	7
19676	mostly	23
15557	mostrar.</string>	24
3013	mostrar</string>	96
11027	mot	15
39636	motion,	8
11924	motta	31
3640	mounted!</string>	104
21993	moure	7
10726	mouvement	3
10966	mouvements</string>	3
52939	movable	11
5962	move	175
14247	moveDirectory(File	8
14310	moveDirectory(src,dst)	3
14362	moveDirectory(srcDir,dstDir)	6
9084	moveExportToDropbox()	24
31835	moveExportToGoogleDrive()	18
28143	moveExportToGoogleDrive(){	16
32705	moveExportToOwnCloud()	17
32499	moveExportToOwncloud()	7
9558	moveExportToSDCard()	25
55434	moveExportToUri()	4
59432	moveExportedFilesToNewDefaultLocation	2
55379	moveFile(@NonNull	3
14364	moveFile(File	5
28134	moveFile(String	14
55343	moveFile(exportedFile,mContext.getContentResolver().openOutputStream(exportUri))	4
56791	moveFile(src,dst)	13
55312	moveToTarget()	8
24245	moveTransaction(@NonNull	4
51251	moveTransaction(String	10
24148	moveTranscation(String	4
26562	moveTranscation(long	6
13957	moved	51
56786	moved.	12
13146	movement	24
15911	mover	47
14621	moves	15
50377	moves,which	5
3411	moving	61
10740	moyennes</string>	7
15686	mozambique&#241	8
15722	mozambiqueo</item>	10
15396	ms	32
40497	ms.	4
47353	ms</li>	4
7574	msg	65
41748	msg)	12
32395	msgId	10
14905	mssen	10
358	much	36
56232	mudar	2
54945	muito	7
29773	muligheten	11
21209	muligheter	9
2289	mult-divisa\n	12
51659	multi	16
63885	multi-book	2
10959	multi-currency	25
62984	multi-currency</p>	4
11604	multi-devises	11
15786	multi-divisa	15
35771	multi-line	2
11932	multi-mata-uang	5
11010	multi-moeda	24
54918	multi-moeda\n	7
4768	multi-moedas	6
34303	multi-thread	6
29649	multi-valuta</string>	6
31366	multiCulti	2
31315	multiCulti.addSplit(split)	2
31104	multiCulti.addSplit(split2)	2
8440	multiCurrencyTransactionImport()	4
31102	multiCurrencyTransactions_shouldResultInMultipleQifFiles(){	2
9646	multiDexEnabled	2
59437	multiTrans	5
59353	multiTrans.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)	4
59374	multiTrans.getSplits(euroAccount.getUID()).get(0)	4
62812	multiTransaction	5
62857	multiTransaction.addSplit(split1)	5
63002	multiTransaction.addSplit(split2)	5
62854	multiTransaction.setCommodity(COMMODITY)	5
55842	multiWeekdayWeeklyActions_shouldBeDueOnEachWeekdaySet()	3
63728	multibook	2
1136	multicurrency	21
62958	multicurrency,then	4
29583	multimoneda	5
57807	multinational	6
8005	multiple	136
59422	multiple-splits	3
25801	multiple\n	5
19211	multiples	7
61822	multiplication	6
53687	multiplication.	3
4949	multiplier	50
8706	multiplier)	8
7878	multiplier){	25
27640	multiplier.	3
31755	multiply	12
36113	multiply(@NonNull	8
31911	multiply(BigDecimal	7
26328	multiply(Money	16
26434	multiply(int	16
26453	multiply(moneyFactor)	13
34304	multithread	8
29505	muntada!</string>	5
17139	munteenheden	17
16896	munteenheid	24
16907	munteenheid</string>	21
94	must	196
44816	mutually	4
48539	mutually-exclusive	6
29652	mwmbuat	5
2276	my	96
29628	mys	5
2490	n	103
20313	n&#227	18
23117	n&#227;o	20
16039	n&#233	19
15892	n(es)</string>	13
15515	n,s&#243	15
15932	n.	6
12940	n.</string>	28
15938	n:	6
15875	n</item>	10
3958	n</string>	75
12818	n?</string>	31
3313	nAccounts	24
52161	nBudgets	6
41969	nCallFloatMethod(Object	4
42076	nCallFloatMethod(target,mJniSetter,mFloatAnimatedValue)	4
41924	nCallIntMethod(Object	4
41785	nCallIntMethod(target,mJniSetter,mIntAnimatedValue)	4
41865	nGetFloatMethod(Class	4
41838	nGetFloatMethod(targetClass,methodName)	4
41740	nGetIntMethod(Class	4
41827	nGetIntMethod(targetClass,methodName)	4
24052	nPrices	10
52077	nRecurrences	4
13381	nRow	41
13661	nRow++	18
2635	nSchedActions	15
50757	nSplits	14
52204	nTempTransactions	8
2453	nTransactions	25
10741	n\'existe	27
25763	n\n	7
10606	na	71
17090	naar	55
16865	naar:	7
16653	naar:</string>	12
16846	naar:\n</string>	23
5364	nach	38
5769	nach:</string>	29
6140	nach:\n</string>	34
22420	nach</string>	8
17389	nacinij	8
17719	nadal	13
16788	nadat	7
17305	nadrzdne</string>	9
17721	nagwka	9
16521	nalezen	11
55804	nalezen</string>	2
29592	nalezena	3
10564	nama	7
721	name	383
34021	name"	9
1104	name)	85
62137	name)</p>	3
23762	name){	8
18528	name,	12
34199	name,@NonNull	11
34146	name,Commodity	7
26495	name,Currency	15
23845	name,TransactionType	4
53947	name,an	2
10310	name,and	2
42089	name,before	4
55074	name,currency	4
26323	name,return	4
42241	name,target	4
41728	name,where	4
30525	name,will	20
19498	name.	42
11346	name.</p>	2
54361	name.appendChild(doc.createTextNode(mDescription))	2
35748	name.appendChild(doc.createTextNode(mName))	9
19098	name.length()	19
26325	name.substring(0,10)	6
3330	name.toString())	5
53129	name.toString(),mAccountUID)	3
13177	name.trim()	12
10614	name</p>	9
9680	name</string>	141
20210	name="ActionMenuText"	3
50954	name="ButtonBaseStyle">	3
18305	name="ButtonStyle">	7
56707	name="CalculatorEditText">	4
59656	name="CustomDialog"	3
18334	name="Dialog.WidgetConfiguration"	6
38077	name="DialogWindowTitle.Sherlock"	5
37936	name="DialogWindowTitle.Sherlock.Light"	4
20198	name="Divider">	7
61884	name="DrawerArrowStyle"	3
18064	name="Dropdown.TextView"	9
1762	name="FormIcon">	6
18512	name="FormRow">	9
23523	name="ImageButton.Transparent"	5
27247	name="ListItem"	3
64409	name="ListItemContainerBase">	1
29898	name="ListItemSubTitle">	3
60470	name="ListItemText">	4
21010	name="NumericButton"	7
33934	name="PasscodeEditText"	4
38626	name="Sherlock.__TextAppearance.Small"	4
37227	name="Sherlock.__Theme"	7
37197	name="Sherlock.__Theme.DarkActionBar"	7
38216	name="Sherlock.__Theme.Dialog"	5
37444	name="Sherlock.__Theme.Light"	7
38442	name="Sherlock.__Widget.ActionBar"	4
38497	name="Sherlock.__Widget.ActionMode"	4
38393	name="Sherlock.__Widget.ActivityChooserView"	4
38027	name="Sherlock.__Widget.Holo.DropDownItem"	4
37996	name="Sherlock.__Widget.Holo.ListView"	4
38291	name="Sherlock.__Widget.Holo.Spinner"	4
38657	name="Sherlock.__Widget.SearchAutoCompleteTextView"	5
37755	name="SherlockActionBar">	4
37153	name="SherlockActionMenuItemView">	4
37555	name="SherlockActionMode">	4
37328	name="SherlockActivityChooserView">	4
37584	name="SherlockMenuGroup">	4
37655	name="SherlockMenuItem">	4
37583	name="SherlockMenuView">	4
37193	name="SherlockSearchView">	5
37045	name="SherlockSpinner">	4
37103	name="SherlockTheme">	4
37742	name="SherlockView">	5
30294	name="TextAppearance"	7
60372	name="TextAppearance.EditTransaction_LabelSmall"	4
60359	name="TextAppearance.EditTransaction_Small">	4
34758	name="TextAppearance.Hint">	4
38625	name="TextAppearance.Sherlock.DialogWindowTitle"	4
38732	name="TextAppearance.Sherlock.Light.DialogWindowTitle"	4
38220	name="TextAppearance.Sherlock.Light.Small"	5
37371	name="TextAppearance.Sherlock.Light.Widget.PopupMenu.Large"	7
37404	name="TextAppearance.Sherlock.Light.Widget.PopupMenu.Small"	7
37962	name="TextAppearance.Sherlock.Small"	4
37027	name="TextAppearance.Sherlock.Widget.ActionBar.Menu"	8
37716	name="TextAppearance.Sherlock.Widget.ActionBar.Subtitle"	7
37011	name="TextAppearance.Sherlock.Widget.ActionBar.Subtitle.Inverse"	7
37393	name="TextAppearance.Sherlock.Widget.ActionBar.Title"	7
37224	name="TextAppearance.Sherlock.Widget.ActionBar.Title.Inverse"	7
37329	name="TextAppearance.Sherlock.Widget.ActionMode.Subtitle"	7
37008	name="TextAppearance.Sherlock.Widget.ActionMode.Subtitle.Inverse"	7
37100	name="TextAppearance.Sherlock.Widget.ActionMode.Title"	7
37086	name="TextAppearance.Sherlock.Widget.ActionMode.Title.Inverse"	7
38606	name="TextAppearance.Sherlock.Widget.DropDownHint"	5
38691	name="TextAppearance.Sherlock.Widget.DropDownItem"	4
37697	name="TextAppearance.Sherlock.Widget.PopupMenu"	7
37253	name="TextAppearance.Sherlock.Widget.PopupMenu.Large"	4
38074	name="TextAppearance.Sherlock.Widget.PopupMenu.Large">	4
37693	name="TextAppearance.Sherlock.Widget.PopupMenu.Small"	4
38380	name="TextAppearance.Sherlock.Widget.PopupMenu.Small">	4
38646	name="TextAppearance.Sherlock.Widget.TextView.SpinnerItem"	4
58801	name="Theme.GnucashTheme"	3
20333	name="Theme.GnucashTheme.NoActionBar"	9
38446	name="Theme.Sherlock"	5
37390	name="Theme.Sherlock.Dialog"	8
64376	name="Theme.Sherlock.ForceOverflow">	1
37982	name="Theme.Sherlock.Light"	4
38370	name="Theme.Sherlock.Light.DarkActionBar"	4
64350	name="Theme.Sherlock.Light.DarkActionBar.ForceOverflow">	1
37469	name="Theme.Sherlock.Light.Dialog"	7
64349	name="Theme.Sherlock.Light.ForceOverflow">	1
37536	name="Theme.Sherlock.Light.NoActionBar">	7
37255	name="Theme.Sherlock.NoActionBar">	8
1569	name="TransactionInfo">	3
62267	name="UserVoiceTheme"	3
38135	name="Widget">	4
37131	name="Widget.Sherlock.ActionBar"	6
37075	name="Widget.Sherlock.ActionBar.Solid"	6
37156	name="Widget.Sherlock.ActionBar.TabBar"	6
37079	name="Widget.Sherlock.ActionBar.TabText"	6
37159	name="Widget.Sherlock.ActionBar.TabView"	6
37231	name="Widget.Sherlock.ActionButton"	6
37423	name="Widget.Sherlock.ActionButton.CloseMode"	4
38593	name="Widget.Sherlock.ActionButton.CloseMode">	4
37523	name="Widget.Sherlock.ActionButton.Overflow"	4
38683	name="Widget.Sherlock.ActionButton.Overflow">	4
37151	name="Widget.Sherlock.ActionMode"	6
38007	name="Widget.Sherlock.ActivityChooserView"	5
38340	name="Widget.Sherlock.Button.Small"	4
38470	name="Widget.Sherlock.DropDownItem.Spinner"	4
37308	name="Widget.Sherlock.Light.ActionBar"	6
37307	name="Widget.Sherlock.Light.ActionBar.Solid"	4
38408	name="Widget.Sherlock.Light.ActionBar.Solid">	4
37486	name="Widget.Sherlock.Light.ActionBar.Solid.Inverse"	4
38539	name="Widget.Sherlock.Light.ActionBar.Solid.Inverse">	4
37206	name="Widget.Sherlock.Light.ActionBar.TabBar"	6
37654	name="Widget.Sherlock.Light.ActionBar.TabBar.Inverse"	4
37988	name="Widget.Sherlock.Light.ActionBar.TabBar.Inverse">	4
37334	name="Widget.Sherlock.Light.ActionBar.TabText"	6
37529	name="Widget.Sherlock.Light.ActionBar.TabText.Inverse"	4
38104	name="Widget.Sherlock.Light.ActionBar.TabText.Inverse">	4
37441	name="Widget.Sherlock.Light.ActionBar.TabView"	6
37236	name="Widget.Sherlock.Light.ActionBar.TabView.Inverse"	4
37921	name="Widget.Sherlock.Light.ActionBar.TabView.Inverse">	4
37573	name="Widget.Sherlock.Light.ActionButton"	6
37012	name="Widget.Sherlock.Light.ActionButton.CloseMode"	4
38130	name="Widget.Sherlock.Light.ActionButton.CloseMode">	4
37241	name="Widget.Sherlock.Light.ActionButton.Overflow"	4
37909	name="Widget.Sherlock.Light.ActionButton.Overflow">	4
37225	name="Widget.Sherlock.Light.ActionMode"	6
37326	name="Widget.Sherlock.Light.ActionMode.Inverse"	6
38050	name="Widget.Sherlock.Light.ActivityChooserView"	4
38436	name="Widget.Sherlock.Light.Button.Small"	4
38231	name="Widget.Sherlock.Light.DropDownItem.Spinner"	4
38694	name="Widget.Sherlock.Light.ListPopupWindow"	4
37110	name="Widget.Sherlock.Light.ListView.DropDown"	7
37322	name="Widget.Sherlock.Light.PopupMenu"	6
37608	name="Widget.Sherlock.Light.PopupWindow.ActionMode"	7
37136	name="Widget.Sherlock.Light.ProgressBar"	7
37535	name="Widget.Sherlock.Light.ProgressBar.Horizontal"	8
37022	name="Widget.Sherlock.Light.SearchAutoCompleteTextView"	8
37704	name="Widget.Sherlock.Light.Spinner.DropDown.ActionBar"	7
37795	name="Widget.Sherlock.ListPopupWindow"	4
37750	name="Widget.Sherlock.ListView.DropDown"	7
37358	name="Widget.Sherlock.PopupMenu"	6
37675	name="Widget.Sherlock.PopupWindow.ActionMode"	7
37401	name="Widget.Sherlock.ProgressBar"	7
37683	name="Widget.Sherlock.ProgressBar.Horizontal"	7
37674	name="Widget.Sherlock.SearchAutoCompleteTextView"	8
37652	name="Widget.Sherlock.Spinner.DropDown.ActionBar"	7
38114	name="Widget.Sherlock.TextView.SpinnerItem"	4
64401	name="absForceOverflow"	1
64390	name="absForceOverflow">true</item>	1
37129	name="abs__action_bar_default_height">40dip</dimen>	4
37440	name="abs__action_bar_default_height">48dip</dimen>	4
37647	name="abs__action_bar_default_height">56dip</dimen>	4
37557	name="abs__action_bar_embed_tabs">false</bool>	4
37301	name="abs__action_bar_embed_tabs">true</bool>	4
37261	name="abs__action_bar_expanded_action_views_exclusive">false</bool>	4
37723	name="abs__action_bar_expanded_action_views_exclusive">true</bool>	4
37191	name="abs__action_bar_home_description">Navigate	4
37494	name="abs__action_bar_icon_vertical_padding">4dip</dimen>	4
37043	name="abs__action_bar_icon_vertical_padding">8dip</dimen>	4
37397	name="abs__action_bar_subtitle_bottom_margin">4dip</dimen>	4
37424	name="abs__action_bar_subtitle_bottom_margin">5dip</dimen>	5
37135	name="abs__action_bar_subtitle_bottom_margin">9dip</dimen>	4
37540	name="abs__action_bar_subtitle_text_size">12dp</dimen>	4
37237	name="abs__action_bar_subtitle_text_size">14dp</dimen>	4
37240	name="abs__action_bar_subtitle_top_margin">-2dp</dimen>	4
37684	name="abs__action_bar_subtitle_top_margin">-3dp</dimen>	5
37123	name="abs__action_bar_title_text_size">16dp</dimen>	4
37182	name="abs__action_bar_title_text_size">18dp</dimen>	4
37666	name="abs__action_bar_up_description">Navigate	4
37628	name="abs__action_button_min_width">56dip</dimen>	5
37221	name="abs__action_button_min_width">64dip</dimen>	4
37299	name="abs__action_menu_divider"	4
37230	name="abs__action_menu_overflow_description">More	4
37582	name="abs__action_menu_presenter"	4
37496	name="abs__action_mode_done">Done</string>	4
37586	name="abs__activity_chooser_view_dialog_title_default">Select	4
37185	name="abs__activity_chooser_view_see_all">See	4
37561	name="abs__activitychooserview_choose_application">Choose	4
37278	name="abs__alert_dialog_title_height">64dip</dimen>	5
37505	name="abs__background_holo_dark">#ff000000</color>	4
37000	name="abs__background_holo_light">#fff3f3f3</color>	4
37488	name="abs__bright_foreground_disabled_holo_dark">#ff4c4c4c</color>	4
37411	name="abs__bright_foreground_disabled_holo_light">#ffb2b2b2</color>	4
37302	name="abs__bright_foreground_holo_dark">@color/abs__background_holo_light</color>	4
37670	name="abs__bright_foreground_holo_light">@color/abs__background_holo_dark</color>	4
37588	name="abs__bright_foreground_inverse_holo_dark">@color/abs__bright_foreground_holo_light</color>	4
37456	name="abs__bright_foreground_inverse_holo_light">@color/abs__bright_foreground_holo_dark</color>	4
37633	name="abs__config_actionMenuItemAllCaps">true</bool>	4
37475	name="abs__config_allowActionMenuItemTextWithIcon">false</bool>	4
37712	name="abs__config_allowActionMenuItemTextWithIcon">true</bool>	4
37733	name="abs__config_prefDialogWidth">320dp</dimen>	4
37452	name="abs__config_showMenuShortcutsWhenKeyboardPresent">false</bool>	4
37380	name="abs__dialog_min_width_major">45%</item>	4
37710	name="abs__dialog_min_width_major">55%</item>	4
37128	name="abs__dialog_min_width_major">65%</item>	4
37252	name="abs__dialog_min_width_minor">72%</item>	4
37498	name="abs__dialog_min_width_minor">80%</item>	4
37426	name="abs__dialog_min_width_minor">95%</item>	5
37574	name="abs__dropdownitem_icon_width">32dip</dimen>	5
37516	name="abs__dropdownitem_text_padding_left">8dip</dimen>	5
37598	name="abs__dropdownitem_text_padding_right">8dip</dimen>	5
19626	name="abs__holo_blue_light">#ff33b5e5</color>	17
37459	name="abs__home"	4
37740	name="abs__max_action_buttons">2</integer>	5
37342	name="abs__max_action_buttons">3</integer>	4
37474	name="abs__max_action_buttons">4</integer>	4
37194	name="abs__max_action_buttons">5</integer>	4
37303	name="abs__progress_circular"	4
37443	name="abs__progress_horizontal"	4
37212	name="abs__search_view_preferred_width">320dip</dimen>	5
37186	name="abs__search_view_text_min_width">160dip</dimen>	5
38410	name="abs__searchview_description_clear">Clear	5
38199	name="abs__searchview_description_query">Search	5
37717	name="abs__searchview_description_search">Search</string>	5
38485	name="abs__searchview_description_submit">Submit	5
37919	name="abs__searchview_description_voice">Voice	5
37682	name="abs__share_action_provider_share_with">Share	4
37648	name="abs__shareactionprovider_share_with">Share	5
37752	name="abs__shareactionprovider_share_with_application">Share	5
37420	name="abs__split_action_bar_is_narrow">false</bool>	4
37741	name="abs__split_action_bar_is_narrow">true</bool>	4
37517	name="abs__up"	4
11046	name="account_balance"></string>	72
23175	name="account_balance">Bakiye</string>	8
14815	name="account_balance">Balan</string>	13
10900	name="account_balance">Balance</string>	114
4517	name="account_balance">Balano</string>	13
7869	name="account_balance">Balanse</string>	30
4419	name="account_balance">Kontostand</string>	16
10239	name="account_balance">Saldo</string>	84
12011	name="account_balance">Solde</string>	10
22352	name="account_balance">Zstatek</string>	8
27144	name="account_blue">#1469EB</color>	7
27483	name="account_colors">	7
27326	name="account_gold">#EE8600</color>	6
27588	name="account_green">#319D67</color>	7
15120	name="account_name_equity">	40
11855	name="account_name_equity"></string>	40
20287	name="account_name_equity">Capital	21
15297	name="account_name_equity">Capital</string>	5
16299	name="account_name_equity">Capitali</string>	15
16347	name="account_name_equity">Capitaux	14
15168	name="account_name_equity">Egenkapital</string>	30
56222	name="account_name_equity">Eget	2
17096	name="account_name_equity">Eigen	19
22315	name="account_name_equity">Eigenkapital</string>	8
10251	name="account_name_equity">Ekuitas</string>	10
11686	name="account_name_equity">Equity</string>	87
17390	name="account_name_equity">Kapita</string>	13
4654	name="account_name_equity">Lquido</string>	8
15714	name="account_name_equity">Resultado</string>	16
16277	name="account_name_equity">Sajt	13
22299	name="account_name_equity">Vlastn	5
15076	name="account_name_opening_balances">	44
10684	name="account_name_opening_balances"></string>	27
15116	name="account_name_opening_balances">Anfangsbestand</string>	16
15341	name="account_name_opening_balances">Balances	8
16428	name="account_name_opening_balances">Bilanci	15
14877	name="account_name_opening_balances">Inngende	13
16132	name="account_name_opening_balances">Nyitegyenlegek</string>	13
10989	name="account_name_opening_balances">Opening	81
17001	name="account_name_opening_balances">Openingsbalans</string>	19
22426	name="account_name_opening_balances">Poten	5
11586	name="account_name_opening_balances">Saldo	54
5184	name="account_name_opening_balances">Saldos	8
16226	name="account_name_opening_balances">Soldes	14
21186	name="account_name_opening_balances">pningssaldoer</string>	10
56461	name="account_name_opening_balances">ppningssaldo</string>	2
27375	name="account_purple">#B304AD</color>	7
27187	name="account_red">#D13E29</color>	3
28288	name="account_type_entries">	14
6146	name="account_type_entry_values">	136
37062	name="actionBarDivider"	4
38482	name="actionBarDivider">?attr/dividerVertical</item>	5
38486	name="actionBarDivider">@drawable/abs__list_divider_holo_dark</item>	4
37544	name="actionBarItemBackground"	4
37860	name="actionBarItemBackground">?attr/selectableItemBackground</item>	5
38201	name="actionBarItemBackground">@drawable/abs__item_background_holo_dark</item>	5
64394	name="actionBarItemBackground">@drawable/abs__item_background_holo_light</item>	1
37724	name="actionBarSize"	4
37312	name="actionBarSize">?android:attr/actionBarSize</item>	5
38368	name="actionBarSize">@dimen/abs__action_bar_default_height</item>	5
37701	name="actionBarSplitStyle"	4
38640	name="actionBarSplitStyle">?attr/actionBarStyle</item>	5
37009	name="actionBarStyle"	4
58752	name="actionBarStyle">@style/MyActionBarStyle</item>	3
38286	name="actionBarStyle">@style/Widget.Sherlock.ActionBar</item>	4
37914	name="actionBarStyle">@style/Widget.Sherlock.Light.ActionBar.Solid.Inverse</item>	4
38403	name="actionBarStyle">@style/Widget.Sherlock.Light.ActionBar.Solid</item>	4
37556	name="actionBarTabBarStyle"	4
38437	name="actionBarTabBarStyle">@style/Widget.Sherlock.ActionBar.TabBar</item>	4
37788	name="actionBarTabBarStyle">@style/Widget.Sherlock.Light.ActionBar.TabBar.Inverse</item>	4
38450	name="actionBarTabBarStyle">@style/Widget.Sherlock.Light.ActionBar.TabBar</item>	4
37336	name="actionBarTabStyle"	4
38742	name="actionBarTabStyle">@style/Widget.Sherlock.ActionBar.TabView</item>	4
38032	name="actionBarTabStyle">@style/Widget.Sherlock.Light.ActionBar.TabView.Inverse</item>	4
38523	name="actionBarTabStyle">@style/Widget.Sherlock.Light.ActionBar.TabView</item>	4
37657	name="actionBarTabTextStyle"	4
37912	name="actionBarTabTextStyle">@style/Widget.Sherlock.ActionBar.TabText</item>	4
38476	name="actionBarTabTextStyle">@style/Widget.Sherlock.Light.ActionBar.TabText.Inverse</item>	4
38615	name="actionBarTabTextStyle">@style/Widget.Sherlock.Light.ActionBar.TabText</item>	4
37071	name="actionBarWidgetTheme"	4
38078	name="actionBarWidgetTheme">@null</item>	5
38501	name="actionBarWidgetTheme">@style/Theme.Sherlock</item>	4
37403	name="actionButtonStyle"	4
38427	name="actionButtonStyle">@style/Widget.Sherlock.ActionButton</item>	4
38151	name="actionButtonStyle">@style/Widget.Sherlock.Light.ActionButton</item>	4
37479	name="actionDropDownStyle"	4
38083	name="actionDropDownStyle">@style/Widget.Sherlock.Light.Spinner.DropDown.ActionBar</item>	4
38544	name="actionDropDownStyle">@style/Widget.Sherlock.Spinner.DropDown.ActionBar</item>	5
37680	name="actionMenuTextAppearance"	4
20194	name="actionMenuTextAppearance">@style/ActionMenuText</item>	9
38749	name="actionMenuTextAppearance">@style/TextAppearance.Sherlock.Widget.ActionBar.Menu</item>	5
37290	name="actionMenuTextColor"	4
37990	name="actionMenuTextColor">?attr/textColorPrimary</item>	5
38377	name="actionMenuTextColor">?attr/textColorPrimaryInverse</item>	4
37406	name="actionModeBackground"	4
20736	name="actionModeBackground">@color/action_mode_background</item>	8
38090	name="actionModeBackground">@drawable/abs__cab_background_top_holo_dark</item>	4
38394	name="actionModeBackground">@drawable/abs__cab_background_top_holo_light</item>	4
37177	name="actionModeCloseButtonStyle"	4
37796	name="actionModeCloseButtonStyle">@style/Widget.Sherlock.ActionButton.CloseMode</item>	5
38360	name="actionModeCloseButtonStyle">@style/Widget.Sherlock.Light.ActionButton.CloseMode</item>	4
37004	name="actionModeCloseDrawable"	4
38100	name="actionModeCloseDrawable">@drawable/abs__ic_cab_done_holo_dark</item>	4
38061	name="actionModeCloseDrawable">@drawable/abs__ic_cab_done_holo_light</item>	4
37034	name="actionModePopupWindowStyle"	4
38708	name="actionModePopupWindowStyle">@style/Widget.Sherlock.Light.PopupWindow.ActionMode</item>	5
38762	name="actionModePopupWindowStyle">@style/Widget.Sherlock.PopupWindow.ActionMode</item>	5
37037	name="actionModeShareDrawable"	4
38499	name="actionModeShareDrawable">@drawable/abs__ic_menu_share_holo_dark</item>	5
37776	name="actionModeShareDrawable">@drawable/abs__ic_menu_share_holo_light</item>	5
37468	name="actionModeSplitBackground"	4
38272	name="actionModeSplitBackground">@drawable/abs__cab_background_bottom_holo_dark</item>	4
38302	name="actionModeSplitBackground">@drawable/abs__cab_background_bottom_holo_light</item>	4
37757	name="actionModeStyle"	4
37778	name="actionModeStyle">@style/Widget.Sherlock.ActionMode</item>	4
38142	name="actionModeStyle">@style/Widget.Sherlock.Light.ActionMode.Inverse</item>	5
38344	name="actionModeStyle">@style/Widget.Sherlock.Light.ActionMode</item>	4
37473	name="actionOverflowButtonStyle"	4
38156	name="actionOverflowButtonStyle">@style/Widget.Sherlock.ActionButton.Overflow</item>	4
38143	name="actionOverflowButtonStyle">@style/Widget.Sherlock.Light.ActionButton.Overflow</item>	4
37201	name="actionSpinnerItemStyle"	4
37111	name="action_button_min_width">64dip</dimen>	4
55158	name="action_mode_background">#616161</color>	4
37173	name="activatedBackgroundIndicator"	5
37872	name="activatedBackgroundIndicator">@drawable/abs__activated_background_holo_dark</item>	5
38391	name="activatedBackgroundIndicator">@drawable/abs__activated_background_holo_light</item>	5
37148	name="activityChooserViewStyle"	4
38374	name="activityChooserViewStyle">@style/Widget.Sherlock.ActivityChooserView</item>	5
38267	name="activityChooserViewStyle">@style/Widget.Sherlock.Light.ActivityChooserView</item>	5
57504	name="add_account">Create	3
29924	name="add_button_padding">3dp</dimen>	3
51765	name="add_transaction">New	5
57471	name="add_transaction_icon_description">Add	2
11266	name="alert_dialog_cancel"></string>	69
5326	name="alert_dialog_cancel">Abbrechen</string>	15
15985	name="alert_dialog_cancel">Annuler</string>	20
17116	name="alert_dialog_cancel">Annuleren</string>	19
16346	name="alert_dialog_cancel">Annulla</string>	19
17312	name="alert_dialog_cancel">Anuluj</string>	13
14742	name="alert_dialog_cancel">Avbryt</string>	35
10845	name="alert_dialog_cancel">Batal</string>	7
11033	name="alert_dialog_cancel">Cancel</string>	106
15444	name="alert_dialog_cancel">Cancelar</string>	48
14704	name="alert_dialog_cancel">Cancella</string>	13
22587	name="alert_dialog_cancel">Mgsem</string>	6
22658	name="alert_dialog_cancel">Peruuta</string>	7
22064	name="alert_dialog_cancel">Zruit</string>	7
23141	name="alert_dialog_cancel">ptal</string>	8
11918	name="alert_dialog_ok_delete"></string>	50
20094	name="alert_dialog_ok_delete">Apagar</string>	17
15548	name="alert_dialog_ok_delete">Borrar</string>	15
28749	name="alert_dialog_ok_delete">Deletar</string>	6
11863	name="alert_dialog_ok_delete">Delete</string>	88
16256	name="alert_dialog_ok_delete">Elimina</string>	11
11651	name="alert_dialog_ok_delete">Hapus</string>	3
6352	name="alert_dialog_ok_delete">L&#246	12
15087	name="alert_dialog_ok_delete">Lschen</string>	3
57302	name="alert_dialog_ok_delete">Poista</string>	3
56148	name="alert_dialog_ok_delete">Radera</string>	2
59320	name="alert_dialog_ok_delete">Sil</string>	4
14839	name="alert_dialog_ok_delete">Slett</string>	18
62785	name="alert_dialog_ok_delete">Smazat</string>	3
16070	name="alert_dialog_ok_delete">Supprimer</string>	12
60021	name="alert_dialog_ok_delete">Suprimeix</string>	6
56362	name="alert_dialog_ok_delete">Ta	5
64057	name="alert_dialog_ok_delete">Trls</string>	2
17281	name="alert_dialog_ok_delete">Usu</string>	9
16569	name="alert_dialog_ok_delete">Verwijderen</string>	11
37564	name="android:actionBarWidgetTheme">@style/Theme.Sherlock</item>	5
37504	name="android:actionLayout"	4
37260	name="android:actionProviderClass"	4
37341	name="android:actionViewClass"	4
37607	name="android:alphabeticShortcut"	4
38704	name="android:animationResolution">33</item>	4
37239	name="android:background"	4
448	name="android:background">?android:attr/listDivider</item>	6
23730	name="android:background">?android:attr/selectableItemBackground</item>	5
37898	name="android:background">?attr/actionBarItemBackground</item>	4
38495	name="android:background">@drawable/abs__ab_share_pack_holo_dark</item>	4
38144	name="android:background">@drawable/abs__ab_share_pack_holo_light</item>	4
38324	name="android:background">@drawable/abs__btn_cab_done_holo_dark</item>	4
38092	name="android:background">@drawable/abs__btn_cab_done_holo_light</item>	4
38315	name="android:background">@drawable/abs__spinner_ab_holo_dark</item>	4
38064	name="android:background">@drawable/abs__spinner_ab_holo_light</item>	4
38200	name="android:background">@drawable/abs__tab_indicator_ab_holo</item>	4
33861	name="android:background">@drawable/numeric_button</item>	4
23490	name="android:background">@drawable/selected_background</item>	5
37868	name="android:backgroundDimAmount">0.6</item>	5
37162	name="android:checkable"	4
37219	name="android:checkableBehavior"	4
37618	name="android:checked"	4
37770	name="android:clickable">true</item>	5
38458	name="android:colorBackgroundCacheHint">@null</item>	5
38273	name="android:completionHintView">@layout/abs__simple_dropdown_hint</item>	5
38440	name="android:completionThreshold">2</item>	5
37807	name="android:contentDescription">@string/abs__action_menu_overflow_description</item>	4
33832	name="android:cursorVisible">false</item>	4
38184	name="android:divider">?attr/actionBarDivider</item>	4
38230	name="android:divider">?attr/dividerVertical</item>	5
38002	name="android:divider">@drawable/abs__list_divider_holo_dark</item>	4
37882	name="android:divider">@drawable/abs__list_divider_holo_light</item>	4
37829	name="android:dividerPadding">12dip</item>	4
37816	name="android:dividerPadding">6dip</item>	5
37861	name="android:dropDownHintAppearance">@style/TextAppearance.Sherlock.Widget.DropDownHint</item>	5
37707	name="android:dropDownHorizontalOffset"	4
38395	name="android:dropDownHorizontalOffset">0dip</item>	5
37703	name="android:dropDownSelector"	4
38384	name="android:dropDownSelector">@drawable/abs__list_selector_holo_dark</item>	6
38528	name="android:dropDownSelector">@drawable/abs__list_selector_holo_light</item>	6
37280	name="android:dropDownVerticalOffset"	4
38023	name="android:dropDownVerticalOffset">0dip</item>	5
37439	name="android:dropDownWidth"	4
37852	name="android:dropDownWidth">wrap_content</item>	6
38414	name="android:ellipsize">marquee</item>	4
37722	name="android:enabled"	4
37274	name="android:focusable"/>	5
37862	name="android:focusable">true</item>	5
33889	name="android:focusableInTouchMode">false</item>	4
38731	name="android:focusableInTouchMode">true</item>	5
37347	name="android:gravity"	5
38452	name="android:gravity">center</item>	4
38668	name="android:gravity">center_horizontal</item>	4
20768	name="android:gravity">center_vertical</item>	19
38715	name="android:gravity">left|center_vertical</item>	4
20630	name="android:hint">*</item>	11
37270	name="android:icon"	4
37446	name="android:id"	4
37728	name="android:imeOptions"	5
37923	name="android:indeterminateDrawable">@drawable/abs__progress_indeterminate_horizontal_holo</item-->	4
37942	name="android:indeterminateDrawable">@drawable/abs__progress_medium_holo</item>	4
37493	name="android:inputType"	5
33890	name="android:inputType">textPassword|number</item>	4
1330	name="android:layout_height">1dp</item>	6
20815	name="android:layout_height">?android:attr/listPreferredItemHeight</item>	3
33964	name="android:layout_height">match_parent</item>	4
2108	name="android:layout_height">wrap_content</item>	17
34118	name="android:layout_margin">1dp</item>	4
64271	name="android:layout_marginBottom">-12dp</item>	2
18373	name="android:layout_marginBottom">@dimen/form_row_bottom_margin</item>	13
64410	name="android:layout_marginBottom">@dimen/hint_margin</item>	1
102	name="android:layout_marginEnd">10dp</item>	6
80	name="android:layout_marginLeft">40dp</item>	6
2091	name="android:layout_marginLeft">50dp</item>	3
179	name="android:layout_marginRight">10dp</item>	6
64280	name="android:layout_marginRight">16dp</item>	1
1029	name="android:layout_marginRight">20dp</item>	3
20972	name="android:layout_marginTop">@dimen/form_row_bottom_margin</item>	3
34752	name="android:layout_marginTop">@dimen/hint_margin</item>	4
847	name="android:layout_weight">0.5</item>	6
34060	name="android:layout_weight">1</item>	4
1305	name="android:layout_weight">5</item>	3
322	name="android:layout_width">0dp</item>	10
64285	name="android:layout_width">144dp</item>	1
918	name="android:layout_width">match_parent</item>	11
30157	name="android:layout_width">wrap_content</item>	11
38425	name="android:listSelector">@drawable/abs__list_selector_holo_dark</item>	4
38535	name="android:listSelector">@drawable/abs__list_selector_holo_light</item>	4
37922	name="android:maxHeight">16dip</item>	4
34024	name="android:maxLength">1</item>	8
38703	name="android:maxLines">1</item>	5
38743	name="android:maxLines">2</item>	4
37005	name="android:maxWidth"	5
37222	name="android:menuCategory"	4
38765	name="android:minHeight">16dip</item>	4
64282	name="android:minHeight">24dp</item>	1
38203	name="android:minHeight">48dip</item>	4
18264	name="android:minHeight">?android:attr/listPreferredItemHeight</item>	8
37786	name="android:minHeight">?attr/actionBarSize</item>	5
38120	name="android:minHeight">@dimen/abs__alert_dialog_title_height</item>	4
37677	name="android:minWidth"	4
38196	name="android:minWidth">48dip</item>	4
38128	name="android:minWidth">@dimen/abs__action_button_min_width</item>	4
37641	name="android:numericShortcut"	4
37681	name="android:onClick"	4
37476	name="android:orderInCategory"	4
18118	name="android:orientation">vertical</item>	13
30357	name="android:padding">18dp</item>	7
37875	name="android:paddingBottom">0dip</item>	4
27552	name="android:paddingBottom">8dp</item>	3
34806	name="android:paddingBottom">@dimen/dialog_padding</item>	4
38630	name="android:paddingLeft">0dip</item>	4
27275	name="android:paddingLeft">10dp</item>	3
38411	name="android:paddingLeft">12dip</item>	4
38276	name="android:paddingLeft">16dip</item>	5
38456	name="android:paddingLeft">8dp</item>	5
27432	name="android:paddingLeft">@dimen/dialog_padding</item>	6
38145	name="android:paddingRight">0dip</item>	4
27594	name="android:paddingRight">10dp</item>	3
38096	name="android:paddingRight">12dip</item>	4
38498	name="android:paddingRight">16dip</item>	5
37929	name="android:paddingRight">8dp</item>	6
27114	name="android:paddingRight">@dimen/dialog_padding</item>	6
37910	name="android:paddingTop">0dip</item>	4
27493	name="android:paddingTop">8dp</item>	3
33866	name="android:password">true</item>	8
37658	name="android:popupBackground"	4
37907	name="android:popupBackground">@android:color/white</item>	4
38517	name="android:popupBackground">@drawable/abs__menu_dropdown_panel_holo_dark</item>	6
37981	name="android:popupBackground">@drawable/abs__menu_dropdown_panel_holo_light</item>	6
37610	name="android:popupPromptView"	4
37760	name="android:progressDrawable">@drawable/abs__progress_horizontal_holo_dark</item>	4
38700	name="android:progressDrawable">@drawable/abs__progress_horizontal_holo_light</item>	4
37576	name="android:prompt"	4
38719	name="android:scaleType">center</item>	4
38218	name="android:scrollHorizontally">true</item>	5
37416	name="android:showAsAction"	4
38284	name="android:showDividers">middle</item>	5
38565	name="android:spinnerMode">dropdown</item>	4
38705	name="android:src">@drawable/abs__ic_menu_moreoverflow_holo_dark</item>	4
38635	name="android:src">@drawable/abs__ic_menu_moreoverflow_holo_light</item>	4
38569	name="android:textAllCaps">@bool/abs__config_actionMenuItemAllCaps</item>	4
1358	name="android:textAllCaps">true</item>	14
18521	name="android:textAppearance">?android:attr/textAppearanceLarge</item>	8
18060	name="android:textAppearance">?android:attr/textAppearanceMedium</item>	11
38669	name="android:textAppearance">?android:attr/textAppearanceMediumInverse</item>	5
23469	name="android:textAppearance">?android:attr/textAppearanceSmall</item>	8
38474	name="android:textAppearance">?attr/textAppearanceSmall</item>	4
38020	name="android:textAppearance">@null</item>	4
38444	name="android:textAppearance">@style/TextAppearance.Sherlock.DialogWindowTitle</item>	4
38182	name="android:textAppearance">@style/TextAppearance.Sherlock.Light.DialogWindowTitle</item>	4
38166	name="android:textAppearance">@style/TextAppearance.Sherlock.Widget.DropDownItem</item>	4
38041	name="android:textAppearance">@style/TextAppearance.Sherlock.Widget.TextView.SpinnerItem</item>	4
60363	name="android:textColor">#FFAAAAAA</item>	4
38515	name="android:textColor">?android:attr/textColorPrimary</item>	4
37900	name="android:textColor">?android:attr/textColorPrimaryInverse</item>	4
38563	name="android:textColor">?android:attr/textColorSecondary</item>	4
38690	name="android:textColor">?attr/actionMenuTextColor</item>	4
38075	name="android:textColor">?attr/textColorPrimary</item>	6
37806	name="android:textColor">?attr/textColorPrimaryInverse</item>	4
38146	name="android:textColor">?textColorPrimary</item>	5
38094	name="android:textColor">?textColorPrimaryDisableOnly</item>	4
1060	name="android:textColor">@android:color/black</item>	12
30224	name="android:textColor">@android:color/white</item>	6
38598	name="android:textColor">@color/abs__holo_blue_light</item>	4
38263	name="android:textColor">@color/abs__primary_text_holo_dark</item>	4
38581	name="android:textColor">@color/abs__primary_text_holo_light</item>	4
64408	name="android:textColor">@color/light_gray</item>	1
37999	name="android:textColorPrimary">@color/abs__primary_text_holo_dark</item>	5
37947	name="android:textColorPrimary">@color/abs__primary_text_holo_light</item>	5
37851	name="android:textColorPrimaryInverse">@color/abs__primary_text_holo_dark</item>	5
37881	name="android:textColorPrimaryInverse">@color/abs__primary_text_holo_light</item>	5
23844	name="android:textSize">12sp</item>	9
38378	name="android:textSize">14sp</item>	9
1834	name="android:textSize">16sp</item>	13
38532	name="android:textSize">18sp</item>	4
60455	name="android:textSize">20sp</item>	3
18130	name="android:textSize">22dp</item>	4
38312	name="android:textSize">22sp</item>	4
63616	name="android:textSize">23sp</item>	4
33965	name="android:textSize">25sp</item>	4
20615	name="android:textSize">33sp</item>	11
38620	name="android:textSize">@dimen/abs__action_bar_subtitle_text_size</item>	4
38149	name="android:textSize">@dimen/abs__action_bar_title_text_size</item>	4
29772	name="android:textSize">@dimen/text_size_small</item>	6
38492	name="android:textStyle">bold</item>	5
38212	name="android:textStyle">normal</item>	4
37277	name="android:title"	4
37344	name="android:titleCondensed"	4
37269	name="android:visible"	4
37126	name="android:windowActionBar">false</item>	8
38560	name="android:windowActionModeOverlay">true</item>	5
38542	name="android:windowAnimationStyle">@android:style/Animation.Dialog</item>	5
38400	name="android:windowBackground">@drawable/abs__dialog_full_holo_dark</item>	4
38247	name="android:windowBackground">@drawable/abs__dialog_full_holo_light</item>	4
37812	name="android:windowCloseOnTouchOutside">true</item>	5
37769	name="android:windowContentOverlay">@null</item>	5
38717	name="android:windowFrame">@null</item>	5
37139	name="android:windowIsFloating"	5
38650	name="android:windowIsFloating">true</item>	4
59654	name="android:windowNoTitle">false</item>	3
37425	name="android:windowNoTitle">true</item>	8
38339	name="android:windowSoftInputMode">stateUnspecified|adjustPan</item>	5
38375	name="android:windowTitleStyle">@style/DialogWindowTitle.Sherlock.Light</item>	4
38644	name="android:windowTitleStyle">@style/DialogWindowTitle.Sherlock</item>	5
54773	name="app_name">GnuCash	4
12766	name="app_name">GnuCash</string>	82
52767	name="app_name">Gnucash</string>	8
54791	name="app_name">GnucashMobileTest</string>	2
36436	name="app_version">1.0.alpha2</string>	2
5933	name="app_version">1.0.beta1</string>	9
12557	name="app_version">1.0.beta2</string>	12
12233	name="app_version_name">1.3.1</string>	4
26988	name="app_version_name">1.3.2</string>	4
34815	name="app_version_name">1.3.3</string>	4
35322	name="app_version_name">1.4.0-beta1</string>	4
58525	name="app_version_name">1.4.0-beta2</string>	3
13122	name="app_version_name">1.4.0-beta3</string>	4
13137	name="app_version_name">1.4.0-beta4</string>	3
58597	name="app_version_name">1.4.0-beta5</string>	3
58554	name="app_version_name">1.4.0-beta6</string>	3
34025	name="app_version_name">1.4.0</string>	4
33950	name="app_version_name">1.4.1</string>	4
57458	name="app_version_name">1.4.2</string>	5
56513	name="app_version_name">1.4.3</string>	7
52822	name="app_version_name">1.5.0-beta1</string>	5
52941	name="app_version_name">1.5.0</string>	6
56486	name="app_version_name">1.5.1</string>	7
57585	name="app_version_name">1.5.2</string>	5
13168	name="app_version_name">1.5.3</string>	8
13816	name="app_version_name">1.5.4</string>	6
29605	name="app_version_name">1.5.5</string>	2
62575	name="app_version_name">1.6.x</string>	2
37463	name="background"	4
38739	name="background">?attr/actionModeBackground</item>	4
38336	name="background">@drawable/abs__ab_solid_dark_holo</item>	4
38738	name="background">@drawable/abs__ab_solid_light_holo</item>	4
38288	name="background">@drawable/abs__ab_transparent_dark_holo</item>	4
38033	name="background">@drawable/abs__ab_transparent_light_holo</item>	4
37165	name="backgroundSplit"	4
37992	name="backgroundSplit">?attr/actionModeSplitBackground</item>	4
38733	name="backgroundSplit">@drawable/abs__ab_bottom_solid_dark_holo</item>	4
38354	name="backgroundSplit">@drawable/abs__ab_bottom_solid_inverse_holo</item>	4
38596	name="backgroundSplit">@drawable/abs__ab_bottom_solid_light_holo</item>	4
38109	name="backgroundSplit">@drawable/abs__ab_bottom_transparent_dark_holo</item>	4
38737	name="backgroundSplit">@drawable/abs__ab_bottom_transparent_light_holo</item>	4
37325	name="backgroundStacked"	4
38333	name="backgroundStacked">@drawable/abs__ab_stacked_solid_dark_holo</item>	4
37899	name="backgroundStacked">@drawable/abs__ab_stacked_solid_light_holo</item>	4
37902	name="backgroundStacked">@drawable/abs__ab_stacked_transparent_dark_holo</item>	4
38422	name="backgroundStacked">@drawable/abs__ab_stacked_transparent_light_holo</item>	4
11714	name="book_account_stats">	25
12881	name="book_default_name">	21
55962	name="book_default_name">Bokfring	2
11984	name="book_default_name">Book	36
12606	name="book_default_name">Buch	8
11171	name="book_default_name">Libro	23
10171	name="book_default_name">Livre	10
10167	name="book_default_name">Livro	16
10443	name="book_transaction_stats">	25
17978	name="btn_add_split">	27
10713	name="btn_add_split"></string>	33
16006	name="btn_add_split">A&#241	6
15401	name="btn_add_split">Aadir	9
5703	name="btn_add_split">Add	117
4406	name="btn_add_split">Adicionar	21
22159	name="btn_add_split">Afegeix	10
22770	name="btn_add_split">Aggiungi	9
10643	name="btn_add_split">Ajouter	12
16581	name="btn_add_split">Boekregel	7
17711	name="btn_add_split">Dodaj	15
15110	name="btn_add_split">Legg	11
21428	name="btn_add_split">Legge	10
56429	name="btn_add_split">Lgg	2
21984	name="btn_add_split">Split	8
11662	name="btn_cancel"></string>	73
12327	name="btn_cancel">Abbrechen</string>	21
12748	name="btn_cancel">Annuler</string>	28
12771	name="btn_cancel">Annuleren</string>	18
12224	name="btn_cancel">Annulla</string>	24
12428	name="btn_cancel">Anuluj</string>	14
12116	name="btn_cancel">Avbryt</string>	35
10175	name="btn_cancel">Batal</string>	5
9803	name="btn_cancel">Cancel</string>	103
12571	name="btn_cancel">Cancelar</string>	53
12413	name="btn_cancel">Cancella</string>	14
12275	name="btn_cancel">Mgsem</string>	7
12420	name="btn_cancel">Peruuta</string>	8
12906	name="btn_cancel">Rezilia</string>	9
62789	name="btn_cancel">Zruit</string>	3
12211	name="btn_cancel">ptal</string>	12
12118	name="btn_create_accounts">	69
10736	name="btn_create_accounts"></string>	42
10372	name="btn_create_accounts">Buat	9
16078	name="btn_create_accounts">Cr&#233	16
12143	name="btn_create_accounts">Crea	38
12728	name="btn_create_accounts">Crear	33
8961	name="btn_create_accounts">Create	109
10664	name="btn_create_accounts">Crer	22
5697	name="btn_create_accounts">Criar	42
26268	name="btn_create_accounts">Dagboeken	11
12347	name="btn_create_accounts">Hesap	11
4403	name="btn_create_accounts">Konten	32
12217	name="btn_create_accounts">Opprett	20
14724	name="btn_create_accounts">Opprette	18
12788	name="btn_create_accounts">Rekeningen	21
55906	name="btn_create_accounts">Skapa	2
12913	name="btn_create_accounts">Utwrz	19
22011	name="btn_create_accounts">Vytvoit	5
28579	name="btn_delete_book">	7
12670	name="btn_delete_book"></string>	14
10886	name="btn_delete_book">Apagar	11
10333	name="btn_delete_book">Borrar	8
25595	name="btn_delete_book">Buch	3
10547	name="btn_delete_book">Delete	38
64118	name="btn_delete_book">Elimina	2
55881	name="btn_delete_book">Radera	2
62885	name="btn_delete_book">Slett	3
10948	name="btn_delete_book">Supprimer	3
60073	name="btn_delete_book">Suprimeix	3
11454	name="btn_export"></string>	77
11270	name="btn_export">Ekspor</string>	7
7769	name="btn_export">Eksporter</string>	43
17673	name="btn_export">Eksportuj</string>	19
16464	name="btn_export">Esporta</string>	25
5114	name="btn_export">Export</string>	126
14799	name="btn_export">Exporta</string>	14
12104	name="btn_export">Exportar</string>	54
30404	name="btn_export">Exporteer</string>	14
10745	name="btn_export">Exporter</string>	29
10997	name="btn_export">Exportera</string>	9
17226	name="btn_export">Exporteren</string>	14
22481	name="btn_export">Exportieren</string>	11
22222	name="btn_export">Exportovat</string>	7
17987	name="btn_fetch_quote">	9
12537	name="btn_fetch_quote"></string>	9
54922	name="btn_fetch_quote">Buscar	7
3892	name="btn_fetch_quote">Fetch	86
21583	name="btn_fetch_quote">Hent	6
56410	name="btn_fetch_quote">Hmta	2
17172	name="btn_fetch_quote">Koers	8
59263	name="btn_fetch_quote">Kurs	4
59528	name="btn_fetch_quote">Obter	8
3713	name="btn_fetch_quote">Pedir	9
17652	name="btn_fetch_quote">Pobierz	10
10456	name="btn_fetch_quote">Rcuprer	3
29453	name="btn_fetch_quote">Recupera	2
15025	name="btn_import_accounts">	37
12004	name="btn_import_accounts"></string>	27
11386	name="btn_import_accounts">Impor	5
7014	name="btn_import_accounts">Import	113
16247	name="btn_import_accounts">Importa	29
15815	name="btn_import_accounts">Importar	33
8318	name="btn_import_accounts">Importere	24
29484	name="btn_import_accounts">Importovat	5
5208	name="btn_import_accounts">Konten	15
16755	name="btn_import_accounts">Rekeningen	11
10953	name="btn_move"></string>	90
16095	name="btn_move">D&#233	8
10901	name="btn_move">Dplacer</string>	19
14710	name="btn_move">Flytt</string>	43
11882	name="btn_move">Flytta</string>	9
14663	name="btn_move">Mou</string>	16
10222	name="btn_move">Move</string>	114
15850	name="btn_move">Mover</string>	63
22801	name="btn_move">Mozgats</string>	6
22097	name="btn_move">Pesunout</string>	9
11983	name="btn_move">Pindahkan</string>	7
17241	name="btn_move">Przenie</string>	21
16147	name="btn_move">Sposta</string>	27
16550	name="btn_move">Verplaatsen</string>	22
4710	name="btn_move">Verschieben</string>	29
55772	name="btn_rename"></string>	2
56061	name="btn_rename">Byt	2
55966	name="btn_rename">Cambiar	2
56465	name="btn_rename">Mudar	2
21220	name="btn_rename">Rename</string>	20
55650	name="btn_rename">Renomear</string>	2
55635	name="btn_rename">Rinomina</string>	2
55738	name="btn_restore"></string>	2
55639	name="btn_restore">Restaurar</string>	4
21414	name="btn_restore">Restore</string>	17
55675	name="btn_restore">Ripristina</string>	2
56305	name="btn_restore">terstll</string>	2
62524	name="btn_save">&amp	5
11831	name="btn_save"></string>	62
16737	name="btn_save">Bewaren</string>	15
14807	name="btn_save">Desa</string>	11
19621	name="btn_save">Gravar</string>	23
15896	name="btn_save">Guardar</string>	27
17899	name="btn_save">Kaydet</string>	9
14685	name="btn_save">Lagre</string>	25
64024	name="btn_save">Ments</string>	4
16282	name="btn_save">Salva</string>	23
59321	name="btn_save">Salvai</string>	6
29174	name="btn_save">Salvar</string>	11
16056	name="btn_save">Sauvegarder</string>	15
23428	name="btn_save">Sauvgarder</string>	9
2165	name="btn_save">Save</string>	100
10438	name="btn_save">Simpan</string>	3
57332	name="btn_save">Spara</string>	3
15202	name="btn_save">Speichern</string>	18
57322	name="btn_save">Tallenna</string>	3
62734	name="btn_save">Uloit</string>	3
17344	name="btn_save">Zapisz</string>	11
11079	name="btn_test"></string>	13
28209	name="btn_test">Probar</string>	5
59982	name="btn_test">Prova</string>	5
57327	name="btn_test">Prueba</string>	3
11811	name="btn_test">Tes</string>	3
10523	name="btn_test">Test</string>	34
57333	name="btn_test">Testaa</string>	3
57329	name="btn_test">Testar</string>	5
62826	name="btn_test">Teste</string>	5
64032	name="btn_test">Teszt</string>	2
12297	name="btn_wizard_finish"></string>	34
2712	name="btn_wizard_finish">Done</string>	105
22765	name="btn_wizard_finish">Fatto</string>	8
22965	name="btn_wizard_finish">Feito</string>	15
21784	name="btn_wizard_finish">Ferdig</string>	10
22163	name="btn_wizard_finish">Fertig</string>	8
22143	name="btn_wizard_finish">Fet</string>	7
22935	name="btn_wizard_finish">Finalizar</string>	14
2280	name="btn_wizard_finish">Hecho</string>	13
16961	name="btn_wizard_finish">Klaar</string>	7
56364	name="btn_wizard_finish">Klar</string>	2
10975	name="btn_wizard_finish">Terminer</string>	14
17326	name="btn_wizard_finish">Zrobione</string>	12
12796	name="btn_wizard_next"></string>	36
22911	name="btn_wizard_next">Avanar</string>	14
22757	name="btn_wizard_next">Avanti</string>	8
17543	name="btn_wizard_next">Dalej</string>	12
21526	name="btn_wizard_next">Neste</string>	10
3598	name="btn_wizard_next">Next</string>	100
55891	name="btn_wizard_next">Nsta</string>	2
14675	name="btn_wizard_next">Segent</string>	13
22968	name="btn_wizard_next">Seguinte</string>	15
2800	name="btn_wizard_next">Siguiente</string>	13
10895	name="btn_wizard_next">Suivant</string>	14
17206	name="btn_wizard_next">Volgende</string>	7
22304	name="btn_wizard_next">Weiter</string>	8
37737	name="buttonStyleSmall"	5
38108	name="buttonStyleSmall">@style/Widget.Sherlock.Button.Small</item>	5
37920	name="buttonStyleSmall">@style/Widget.Sherlock.Light.Button.Small</item>	5
23142	name="card_min_height">80dp</dimen>	14
51854	name="choose_currency">Choose	5
61925	name="color">@android:color/white</item>	6
55100	name="colorAccent">#4CAF50</item>	4
55080	name="colorAccent">#FFAB00</item>	6
59114	name="colorAccent">@color/theme_accent</item>	3
20888	name="colorButtonNormal">#FFAB00</item>	13
57206	name="colorControlNormal">@android:color/white</item>	6
55050	name="colorPrimary">#2E7D32</item>	7
59158	name="colorPrimary">@color/theme_primary</item>	3
55182	name="colorPrimaryDark">#1B5E20</item>	7
59097	name="colorPrimaryDark">@color/theme_primary_dark</item>	3
5540	name="color_picker_default_title">	35
11313	name="color_picker_default_title"></string>	29
20137	name="color_picker_default_title">Escolha	26
7215	name="color_picker_default_title">Farbe	9
16948	name="color_picker_default_title">Kies	12
62757	name="color_picker_default_title">Pilih	3
15564	name="color_picker_default_title">Seleccionar	16
58575	name="color_picker_default_title">Seleccioneu	5
5417	name="color_picker_default_title">Selecione	9
4050	name="color_picker_default_title">Select	101
33375	name="color_picker_default_title">Seleziona	4
16252	name="color_picker_default_title">Selezione	14
16192	name="color_picker_default_title">Slectionnez	13
15035	name="color_picker_default_title">Velg	21
56006	name="color_picker_default_title">Vlj	2
17477	name="color_picker_default_title">Wybierz	14
20445	name="color_swatch_description"	35
29044	name="color_swatch_description">C&#244	6
27309	name="color_swatch_description">Color	6
20960	name="color_swatch_description_selected"	35
29019	name="color_swatch_description_selected">C&#244	6
27494	name="color_swatch_description_selected">Color	10
27191	name="color_swatch_large">64dip</dimen>	5
23313	name="color_swatch_margins_large">8dip</dimen>	12
23050	name="color_swatch_margins_small">4dip</dimen>	16
27328	name="color_swatch_small">48dip</dimen>	6
11762	name="confirm_delete_all_accounts">	55
15834	name="confirm_delete_all_accounts">&#191	16
12027	name="confirm_delete_all_accounts">Apakah	9
6418	name="confirm_delete_all_accounts">Are	116
15884	name="confirm_delete_all_accounts">Borrar	9
17230	name="confirm_delete_all_accounts">Czy	13
16141	name="confirm_delete_all_accounts">Eliminare	19
8206	name="confirm_delete_all_accounts">Er	23
22109	name="confirm_delete_all_accounts">Esteu	7
24064	name="confirm_delete_all_accounts">Etes-vous	8
22286	name="confirm_delete_all_accounts">Opravdu	7
20379	name="confirm_delete_all_accounts">Tem	21
17105	name="confirm_delete_all_accounts">Weet	13
6841	name="confirm_delete_all_accounts">Wollen	10
22670	name="confirm_delete_all_accounts">\n\n	6
56329	name="confirm_delete_all_accounts">r	2
15950	name="confirm_delete_all_accounts">tes-vous	13
57499	name="confirm_post_export_delete">Delete	6
29395	name="credit">CREDIT</string>	7
19946	name="credit_green">#4cc552</color>	12
5738	name="currency_codes">	42
4829	name="currency_names">	142
37559	name="customNavigationLayout"	4
31185	name="debit">DEBIT</string>	5
34362	name="debit_red">#c11b17</color>	10
6024	name="default_accounts">	67
29421	name="delete">Delete</string>	2
14995	name="delete_account_confirmation_message">	40
11972	name="delete_account_confirmation_message"></string>	24
12041	name="delete_account_confirmation_message">All	93
29716	name="delete_account_confirmation_message">Alla	5
14736	name="delete_account_confirmation_message">Alle	33
29670	name="delete_account_confirmation_message">Kaikki	5
10184	name="delete_account_confirmation_message">Semua	5
29533	name="delete_account_confirmation_message">Tamb	5
15478	name="delete_account_confirmation_message">Todas	39
51498	name="delete_account_confirmation_message">Toute	7
10831	name="delete_account_confirmation_message">Toutes	18
29494	name="delete_account_confirmation_message">Vechny	5
16179	name="delete_account_confirmation_message">Verranno	15
17733	name="delete_account_confirmation_message">Wszystkie	11
51418	name="delete_all_transactions_confirmation_message">	11
12102	name="delete_all_transactions_confirmation_message">&#191	23
28398	name="delete_all_transactions_confirmation_message"></string>	6
5153	name="delete_all_transactions_confirmation_message">Are	43
51399	name="delete_all_transactions_confirmation_message">Eliminare	6
34795	name="delete_all_transactions_confirmation_message">Er	6
23767	name="delete_all_transactions_confirmation_message">Etes	7
51565	name="delete_all_transactions_confirmation_message">Voc	5
30261	name="delete_all_transactions_confirmation_message">Weet	7
6170	name="delete_all_transactions_confirmation_message">Wollen	15
52872	name="delete_confirmation_message">	8
28751	name="delete_confirmation_message">All	13
6357	name="delete_confirmation_message">Alle	12
28902	name="delete_confirmation_message">Todas	9
56697	name="delete_confirmation_message">Toute	5
33060	name="delete_confirmation_message">Verranno	6
51445	name="delete_transaction_confirmation_message">	11
12139	name="delete_transaction_confirmation_message">&#191	23
28506	name="delete_transaction_confirmation_message"></string>	6
4087	name="delete_transaction_confirmation_message">Are	43
51571	name="delete_transaction_confirmation_message">Eliminare	6
34786	name="delete_transaction_confirmation_message">Er	6
23776	name="delete_transaction_confirmation_message">Etes	7
51396	name="delete_transaction_confirmation_message">Voc	5
30367	name="delete_transaction_confirmation_message">Weet	7
4179	name="delete_transaction_confirmation_message">Wollen	15
12142	name="description_add_transaction_icon">	62
11629	name="description_add_transaction_icon"></string>	47
15928	name="description_add_transaction_icon">A&#241	13
12997	name="description_add_transaction_icon">Aadir	22
9123	name="description_add_transaction_icon">Add	104
12510	name="description_add_transaction_icon">Adicionar	38
12382	name="description_add_transaction_icon">Adugai	11
12231	name="description_add_transaction_icon">Afegeix	13
12288	name="description_add_transaction_icon">Aggiungi	23
15516	name="description_add_transaction_icon">Agregar	7
12731	name="description_add_transaction_icon">Ajoute	26
24008	name="description_add_transaction_icon">Ajouter	10
12454	name="description_add_transaction_icon">Bir	11
12696	name="description_add_transaction_icon">Dodaj	16
14788	name="description_add_transaction_icon">Legg	17
12421	name="description_add_transaction_icon">Legge	21
12364	name="description_add_transaction_icon">Lgg	13
12657	name="description_add_transaction_icon">Lis	12
12436	name="description_add_transaction_icon">Neue	23
13025	name="description_add_transaction_icon">Nieuwe	23
11403	name="description_add_transaction_icon">Pidat	12
10143	name="description_add_transaction_icon">Tambah	9
12171	name="description_add_transaction_icon">j	9
14998	name="description_export_email">	39
12534	name="description_export_email">Esportazione	25
20348	name="description_export_email">Exporta&#231	11
21972	name="description_export_email">Exportaci	7
15843	name="description_export_email">Exportaci&#243	20
15638	name="description_export_email">Exportacin	9
22882	name="description_export_email">Exportao	13
28593	name="description_export_email">Exportar	9
11981	name="description_export_email">GnuCash	140
15058	name="description_export_email">GnuCash-Android-Konten-Export	10
26710	name="description_export_email">GnuCash-Konten-Export	5
5636	name="description_export_email">Gnucash	47
4842	name="description_export_email">Gnucash-Konten-Export	5
29779	name="description_export_email">OFX-,	14
14983	name="description_permission_group">	39
17502	name="description_permission_group">Czyta	9
16732	name="description_permission_group">GnuCash	22
12033	name="description_permission_group">GnuCash</string>	24
54689	name="description_permission_group">Gnucash	7
12498	name="description_permission_group">Leer	22
16265	name="description_permission_group">Legge	18
4166	name="description_permission_group">Ler	26
14743	name="description_permission_group">Lese	20
6209	name="description_permission_group">Lesen	17
10442	name="description_permission_group">Lire	15
60001	name="description_permission_group">Llegir	3
55931	name="description_permission_group">Lsa	2
11299	name="description_permission_group">Membaca	3
11820	name="description_permission_group">Read	81
51845	name="description_permission_group">Record	3
55511	name="description_permission_group">st	2
22959	name="description_view_account_icon">	7
22759	name="description_view_account_icon"></string>	9
22974	name="description_view_account_icon">Exibir	7
12601	name="description_view_account_icon">Lihat	7
56114	name="description_view_account_icon">Nyt	2
22208	name="description_view_account_icon">Ver	9
9836	name="description_view_account_icon">View	32
22921	name="description_view_account_icon">Vis	8
23287	name="description_view_account_icon">Visa	7
12873	name="description_view_account_icon">Visualizza	7
22845	name="description_view_account_icon">Voir	7
22128	name="description_view_account_icon">Zobrazit	7
29798	name="dialog_padding">10dp</dimen>	7
28548	name="digit_eight">8</string>	18
28499	name="digit_eight_text"></string>	7
28378	name="digit_eight_text">TUV</string>	18
28550	name="digit_five">5</string>	18
28552	name="digit_five_text"></string>	7
28334	name="digit_five_text">JKL</string>	18
28561	name="digit_four">4</string>	18
28425	name="digit_four_text"></string>	7
28477	name="digit_four_text">GHI</string>	18
28369	name="digit_nine">9</string>	18
28333	name="digit_nine_text"></string>	7
10927	name="digit_nine_text">WXYZ</string>	35
11783	name="digit_one">1</string>	33
12079	name="digit_one_text">	13
64116	name="digit_one_text">&#8203	2
25920	name="digit_one_text">1</string>	3
10294	name="digit_one_text"></string>	22
63633	name="digit_one_text">@string/empty</string>	11
64105	name="digit_one_text">@string/vazia</string>	3
64079	name="digit_one_text">\@string/</string>	3
28361	name="digit_seven">7</string>	18
28316	name="digit_seven_text"></string>	7
28551	name="digit_seven_text">PQRS</string>	18
28518	name="digit_six">6</string>	18
28305	name="digit_six_text"></string>	7
28553	name="digit_six_text">MNO</string>	18
10852	name="digit_three">3</string>	31
28581	name="digit_three_text"></string>	7
28310	name="digit_three_text">DEF</string>	18
11240	name="digit_two">2</string>	31
28566	name="digit_two_text"></string>	8
11942	name="digit_two_text">ABC</string>	31
11051	name="digit_zero">0</string>	41
10378	name="digit_zero_text">+</string>	44
28396	name="digit_zero_text"></string>	5
37731	name="disableHome"	4
37289	name="displayOptions">	4
38661	name="displayOptions">useLogo|showHome|showTitle</item>	4
37150	name="divider"	4
37930	name="divider">?attr/dividerVertical</item>	4
38269	name="divider">@drawable/abs__list_divider_holo_dark</item>	4
37394	name="dividerVertical"	4
38089	name="dividerVertical">@drawable/abs__list_divider_holo_dark</item>	5
37869	name="dividerVertical">@drawable/abs__list_divider_holo_light</item>	5
57113	name="drawerArrowStyle">@style/DrawerArrowStyle</item>	6
17976	name="drawer_close">	14
11554	name="drawer_close"></string>	7
16032	name="drawer_close">Caj&#243	6
15353	name="drawer_close">Cajn	5
5296	name="drawer_close">Gaveta	16
29433	name="drawer_close">Menu	2
14865	name="drawer_close">Navigasjonsskuff	17
17039	name="drawer_close">Navigatie	3
4032	name="drawer_close">Navigation	96
59294	name="drawer_close">Navigationsleiste	4
56073	name="drawer_close">Navigeringspanelen	2
11000	name="drawer_close">Panneau	9
17632	name="drawer_close">Szuflada	9
17911	name="drawer_open">	24
10313	name="drawer_open"></string>	12
15947	name="drawer_open">Caj&#243	6
15439	name="drawer_open">Cajn	9
4581	name="drawer_open">Gaveta	21
22615	name="drawer_open">Menu	6
21842	name="drawer_open">Navigasjonskuffen	10
15200	name="drawer_open">Navigasjonsskuff	11
17091	name="drawer_open">Navigatie	7
5512	name="drawer_open">Navigation	112
22027	name="drawer_open">Navigationsleiste	8
56197	name="drawer_open">Navigeringspanelen	2
10731	name="drawer_open">Panneau	13
17333	name="drawer_open">Szuflada	15
37092	name="dropDownListViewStyle"	4
37262	name="dropDownListViewStyle">?android:attr/dropDownListViewStyle</item>	5
38155	name="dropDownListViewStyle">@style/Widget.Sherlock.Light.ListView.DropDown</item>	5
37880	name="dropDownListViewStyle">@style/Widget.Sherlock.ListView.DropDown</item>	5
37056	name="dropdownListPreferredItemHeight"	4
38686	name="dropdownListPreferredItemHeight">48dip</item>	5
37258	name="dropdownListPreferredItemHeight">48dp</item>	5
18222	name="edge_padding">12dp</dimen>	16
57496	name="edit_accounts">Edit	3
29319	name="edit_transaction">Edit	4
58567	name="elevation_default">10dp</dimen>	3
9311	name="empty"></string>	14
17968	name="error_converted_amount_required">	19
12803	name="error_converted_amount_required"></string>	14
21846	name="error_converted_amount_required">Det	8
25660	name="error_converted_amount_required">Ein	9
17080	name="error_converted_amount_required">Het	5
29451	name="error_converted_amount_required">L\'importo	6
2957	name="error_converted_amount_required">La	11
16411	name="error_converted_amount_required">Le	9
29697	name="error_converted_amount_required">O	17
3864	name="error_converted_amount_required">The	96
17510	name="error_converted_amount_required">Wymieniona	12
17879	name="error_exchange_rate_required">	22
59519	name="error_exchange_rate_required">&#201	6
12614	name="error_exchange_rate_required"></string>	14
3826	name="error_exchange_rate_required">An	93
17033	name="error_exchange_rate_required">Een	5
25610	name="error_exchange_rate_required">Ein	9
21738	name="error_exchange_rate_required">En	8
29300	name="error_exchange_rate_required">Il	6
17736	name="error_exchange_rate_required">Kurs	12
3633	name="error_exchange_rate_required">La	11
54928	name="error_exchange_rate_required">Uma	7
16170	name="error_exchange_rate_required">Un	9
18372	name="error_exporting">	15
23376	name="error_exporting">Erreur	14
29002	name="error_exporting">Erro	8
12794	name="error_exporting">Error	28
27995	name="error_exporting">Errore	11
5924	name="error_exporting">Fehler	14
7643	name="error_exporting">Feil	12
30178	name="error_exporting">Fout	8
28249	name="error_exporting">OFX</string>	12
28298	name="error_invalid_amount">	10
12969	name="error_invalid_amount"></string>	5
28246	name="error_invalid_amount">Cantidad	8
64055	name="error_invalid_amount">Importo	2
11048	name="error_invalid_amount">Invalid	34
11733	name="error_invalid_amount">Montant	3
55973	name="error_invalid_amount">Ogiltigt	2
64122	name="error_invalid_amount">Quantia	2
25888	name="error_invalid_amount">Ugyldig	11
25691	name="error_invalid_amount">Ungltiger	8
63190	name="error_invalid_amount">Valor	3
28528	name="error_invalid_exchange_rate">	10
12564	name="error_invalid_exchange_rate"></string>	5
11054	name="error_invalid_exchange_rate">Invalid	39
56448	name="error_invalid_exchange_rate">Ogiltig	2
64043	name="error_invalid_exchange_rate">Tasso	2
10873	name="error_invalid_exchange_rate">Taux	3
62809	name="error_invalid_exchange_rate">Taxa	8
28242	name="error_invalid_exchange_rate">Tipo	8
11141	name="error_invalid_exchange_rate">Ugyldig	14
25704	name="error_invalid_exchange_rate">Ungltiger	8
8197	name="error_no_accounts">	64
7767	name="error_no_accounts">Aucun	36
12108	name="error_no_accounts">Brak	19
12359	name="error_no_accounts">Det	20
8636	name="error_no_accounts">Geen	34
12923	name="error_no_accounts">GnuCash	12
28082	name="error_no_accounts">GnuCash.\n</string>	7
11925	name="error_no_accounts">GnuCash\n</string>	41
55929	name="error_no_accounts">Inga	2
8707	name="error_no_accounts">Ingen	26
5840	name="error_no_accounts">Keine	43
21033	name="error_no_accounts">N&#227	11
22016	name="error_no_accounts">Neexistuj	5
7954	name="error_no_accounts">No	137
7658	name="error_no_accounts">Non	31
12089	name="error_no_accounts">Tidak	9
37451	name="expandActivityOverflowButtonDrawable"	4
57463	name="export_all_transactions">Export	4
6348	name="export_destinations">	180
4445	name="export_formats">	127
57468	name="export_ofx">Export	3
20991	name="export_warning_ofx">O	21
4298	name="export_warning_ofx">OFX	139
10576	name="export_warning_ofx">OFX</string>	13
17882	name="export_warning_qif">	33
51400	name="export_warning_qif">A	18
22129	name="export_warning_qif">Erzeugt	8
15608	name="export_warning_qif">Genera	23
6114	name="export_warning_qif">Generates	99
17153	name="export_warning_qif">Genereert	7
56141	name="export_warning_qif">Genererar	2
21648	name="export_warning_qif">Genererer	10
17346	name="export_warning_qif">Generuje	15
20467	name="export_warning_qif">Gera	18
4626	name="export_warning_qif">Gerar	6
11159	name="export_warning_qif">Gnre	12
22754	name="export_warning_qif">Menghasilkan	7
15166	name="export_warning_qif">Oppretter	11
56853	name="export_warning_qif">QIF	5
10206	name="export_warning_qif">QIF</string>	24
56988	name="export_warning_qif">There	4
17949	name="export_warning_xml">	32
11867	name="export_warning_xml"></string>	32
22321	name="export_warning_xml">Alle	15
22601	name="export_warning_xml">Ekspor	7
21598	name="export_warning_xml">Eksporterer	21
15082	name="export_warning_xml">Eksporteret	11
22519	name="export_warning_xml">Esporta	16
20673	name="export_warning_xml">Exporta	39
5963	name="export_warning_xml">Exportar	32
16321	name="export_warning_xml">Exporte	14
16954	name="export_warning_xml">Exporteert	9
56323	name="export_warning_xml">Exporterar	2
4693	name="export_warning_xml">Exports	106
17800	name="export_warning_xml">Wyeksportowano	17
18048	name="form_row_bottom_margin">10dp</dimen>	9
37510	name="headerBackground"	4
11161	name="header_about_gnucash">	47
29745	name="header_about_gnucash">&#192	7
4974	name="header_about_gnucash">&#220	19
10379	name="header_about_gnucash"></string>	56
24046	name="header_about_gnucash">A	8
10525	name="header_about_gnucash">About</string>	99
15782	name="header_about_gnucash">Acerca	21
22996	name="header_about_gnucash">Acerca</string>	7
23115	name="header_about_gnucash">Hakknda</string>	8
16491	name="header_about_gnucash">Informazioni</string>	21
22475	name="header_about_gnucash">O	5
17581	name="header_about_gnucash">O</string>	15
12057	name="header_about_gnucash">Om</string>	41
16703	name="header_about_gnucash">Over</string>	21
14669	name="header_about_gnucash">Quant	10
20342	name="header_about_gnucash">Sobre</string>	30
11792	name="header_about_gnucash">Tentang</string>	7
15091	name="header_about_gnucash">ber	7
11148	name="header_account_settings"></string>	55
6808	name="header_account_settings">Accounts</string>	90
10464	name="header_account_settings">Akun</string>	9
11107	name="header_account_settings">Comptes</string>	35
20303	name="header_account_settings">Contas</string>	21
16109	name="header_account_settings">Conti</string>	19
15407	name="header_account_settings">Cuentas</string>	13
59273	name="header_account_settings">Hesaplar</string>	4
17797	name="header_account_settings">Konta</string>	13
6387	name="header_account_settings">Konten</string>	9
8107	name="header_account_settings">Kontoer</string>	26
56309	name="header_account_settings">Konton</string>	2
16525	name="header_account_settings">Rekeningen</string>	9
22174	name="header_account_settings">ty</string>	9
17939	name="header_backup_and_export_settings">	26
10840	name="header_backup_and_export_settings"></string>	26
16753	name="header_backup_and_export_settings">Back-up	5
6359	name="header_backup_and_export_settings">Backup	121
62718	name="header_backup_and_export_settings">Cadangan	3
15805	name="header_backup_and_export_settings">Copia	18
59995	name="header_backup_and_export_settings">Cpia	3
17868	name="header_backup_and_export_settings">Kopia	13
16314	name="header_backup_and_export_settings">Sauvegarde	10
15024	name="header_backup_and_export_settings">Sikkerhetskopier	11
56272	name="header_backup_and_export_settings">Skerhetskopiera	2
10192	name="header_general_settings"></string>	74
16044	name="header_general_settings">Ajustes	7
17056	name="header_general_settings">Algemeen</string>	21
4701	name="header_general_settings">Allgemein</string>	22
10511	name="header_general_settings">Allmnt</string>	9
15990	name="header_general_settings">G&#233	16
23063	name="header_general_settings">Genel</string>	8
11307	name="header_general_settings">General</string>	105
16342	name="header_general_settings">Generali</string>	21
14764	name="header_general_settings">Generelt</string>	32
20836	name="header_general_settings">Geral</string>	31
10619	name="header_general_settings">Gnral</string>	10
17406	name="header_general_settings">Oglne</string>	15
10546	name="header_general_settings">Umum</string>	7
21980	name="header_general_settings">Veobecn</string>	5
32646	name="header_manage_books">Manage	4
29636	name="header_passcode_settings">	5
11252	name="header_passcode_settings"></string>	46
11032	name="header_passcode_settings">Code	5
11970	name="header_passcode_settings">Code</string>	10
29440	name="header_passcode_settings">Codice	6
15983	name="header_passcode_settings">Contrase&#241	8
15519	name="header_passcode_settings">Contrasea</string>	7
14821	name="header_passcode_settings">Contrasenya</string>	11
17266	name="header_passcode_settings">Haso</string>	11
29599	name="header_passcode_settings">Heslo</string>	3
11628	name="header_passcode_settings">Kode	5
29559	name="header_passcode_settings">PIN	6
20744	name="header_passcode_settings">Palavra	17
5823	name="header_passcode_settings">Passcode</string>	103
15114	name="header_passcode_settings">Passkode</string>	11
21533	name="header_passcode_settings">Passord</string>	8
5533	name="header_passcode_settings">Senha</string>	14
16543	name="header_passcode_settings">Wachtwoord</string>	5
11058	name="header_report_settings"></string>	45
29512	name="header_report_settings">Berichte</string>	6
2547	name="header_report_settings">Informes</string>	19
29674	name="header_report_settings">Laporan</string>	5
17751	name="header_report_settings">Raporty</string>	18
16791	name="header_report_settings">Rapporten</string>	13
15219	name="header_report_settings">Rapporter</string>	22
11319	name="header_report_settings">Rapports</string>	18
20432	name="header_report_settings">Relat&#243	11
5040	name="header_report_settings">Relatrios</string>	16
3679	name="header_report_settings">Reports</string>	102
29245	name="header_report_settings">Resoconti</string>	9
11589	name="header_transaction_settings"></string>	82
14750	name="header_transaction_settings">Assentaments</string>	10
4149	name="header_transaction_settings">Buchungen</string>	22
20845	name="header_transaction_settings">Transa&#231	11
15448	name="header_transaction_settings">Transacciones</string>	24
17223	name="header_transaction_settings">Transacties</string>	22
5595	name="header_transaction_settings">Transactions</string>	101
22976	name="header_transaction_settings">Transaes</string>	20
22214	name="header_transaction_settings">Transakce</string>	5
17505	name="header_transaction_settings">Transakcje</string>	15
10687	name="header_transaction_settings">Transaksi</string>	7
15145	name="header_transaction_settings">Transaksjoner</string>	28
56158	name="header_transaction_settings">Transaktioner</string>	2
12299	name="header_transaction_settings">Transazione</string>	5
12094	name="header_transaction_settings">Transazioni</string>	24
37171	name="height"	4
38653	name="height">?attr/actionBarSize</item>	5
54797	name="hello">Hello	4
17910	name="hint_account_description">	14
12343	name="hint_account_description"></string>	9
3601	name="hint_account_description">Account	89
55055	name="hint_account_description">Descri&#231	9
54951	name="hint_account_description">Descrio	12
14666	name="hint_account_description">Descripci	9
58555	name="hint_account_description">Descripcin	2
3687	name="hint_account_description">Descripti&#243	7
15554	name="hint_account_description">Descriptin	7
16450	name="hint_account_description">Description	7
29286	name="hint_account_description">Descrizione	7
59214	name="hint_account_description">Kontobeschreibung</string>	4
21780	name="hint_account_description">Kontobeskrivelse</string>	6
56181	name="hint_account_description">Kontobeskrivning</string>	2
17714	name="hint_account_description">Opis	8
16660	name="hint_account_description">Rekening	3
17950	name="hint_converted_amount">	17
12871	name="hint_converted_amount"></string>	9
2995	name="hint_converted_amount">Cantidad	9
3770	name="hint_converted_amount">Converted	80
29309	name="hint_converted_amount">Importo	2
56044	name="hint_converted_amount">Konverterat	2
21168	name="hint_converted_amount">Konvertert	6
10784	name="hint_converted_amount">Montant	10
59523	name="hint_converted_amount">Montante	11
16740	name="hint_converted_amount">Omgerekend	8
14722	name="hint_converted_amount">Quantitat	3
59346	name="hint_converted_amount">Umgerechneter	4
54936	name="hint_converted_amount">Valor	7
17284	name="hint_converted_amount">Wymieniona	10
15247	name="hint_delete_after_export">	59
11789	name="hint_delete_after_export"></string>	35
11907	name="hint_delete_after_export">All	107
11938	name="hint_delete_after_export">Alla	7
6199	name="hint_delete_after_export">Alle	66
22041	name="hint_delete_after_export">S\'eliminaran	5
11777	name="hint_delete_after_export">Semua	5
15657	name="hint_delete_after_export">Todas	53
10929	name="hint_delete_after_export">Toutes	28
16155	name="hint_delete_after_export">Tutte	27
22398	name="hint_delete_after_export">Vechny	7
17861	name="hint_delete_after_export">Wszystkie	17
62494	name="hint_exchange_rate">	3
12152	name="hint_exchange_rate"></string>	17
55021	name="hint_exchange_rate">Cotao</string>	7
17920	name="hint_exchange_rate">E	6
2408	name="hint_exchange_rate">Exchange	80
17550	name="hint_exchange_rate">Kurs	10
3365	name="hint_exchange_rate">Tasa	9
29382	name="hint_exchange_rate">Tasso	2
10545	name="hint_exchange_rate">Taux	10
59522	name="hint_exchange_rate">Taxa	8
21403	name="hint_exchange_rate">Valutakurs</string>	6
55918	name="hint_exchange_rate">Vxlingskurs</string>	2
59205	name="hint_exchange_rate">Wechselkurs</string>	4
16564	name="hint_exchange_rate">Wisselkoers</string>	8
17485	name="hint_export_choice">	59
15194	name="hint_export_choice">,	26
10732	name="hint_export_choice"></string>	44
16539	name="hint_export_choice">Aanvinken	28
4500	name="hint_export_choice">Auswhlen,um	30
11418	name="hint_export_choice">By	127
16447	name="hint_export_choice">Di	35
22883	name="hint_export_choice">Domylnie	6
10232	name="hint_export_choice">Par	37
22152	name="hint_export_choice">Per	13
12206	name="hint_export_choice">Por	57
10554	name="hint_export_choice">Secara	7
8577	name="hint_export_choice">Som	14
21391	name="hint_export_choice">Standard	26
7456	name="hint_export_choice">Vanligvis	26
22383	name="hint_export_choice">Ve	7
29912	name="hint_margin">-8dp</dimen>	7
10179	name="hint_split_memo"></string>	46
55932	name="hint_split_memo">Anteckning</string>	2
15224	name="hint_split_memo">Buchungstext</string>	10
5906	name="hint_split_memo">Memo</string>	134
22078	name="hint_split_memo">Nota</string>	7
15221	name="hint_split_memo">Notat</string>	23
17779	name="hint_split_memo">Notka</string>	13
22810	name="hint_split_memo">Promemoria</string>	11
17999	name="hint_split_memo">\'</string>	11
37389	name="homeAsUp"	4
37590	name="homeAsUpIndicator"	4
38316	name="homeAsUpIndicator">@drawable/abs__ic_ab_back_holo_dark</item>	5
38541	name="homeAsUpIndicator">@drawable/abs__ic_ab_back_holo_light</item>	6
37533	name="homeLayout"	4
37765	name="homeLayout">@layout/abs__action_bar_home</item>	4
37427	name="horizontalDivider"	4
37527	name="icon"	4
37429	name="iconifiedByDefault"	5
10955	name="imbalance_account_name"></string>	57
6757	name="imbalance_account_name">Ausgleichskonto</string>	24
15898	name="imbalance_account_name">Descuadre</string>	19
22975	name="imbalance_account_name">Desequilbrio</string>	13
14791	name="imbalance_account_name">Desequilibri</string>	15
6088	name="imbalance_account_name">Desequilibrio</string>	16
16048	name="imbalance_account_name">Dsquilibre</string>	22
4104	name="imbalance_account_name">Imbalance</string>	132
17260	name="imbalance_account_name">Niezbilansowane</string>	15
55981	name="imbalance_account_name">Obalans</string>	2
17068	name="imbalance_account_name">Onbalans</string>	9
16468	name="imbalance_account_name">Sbilancio</string>	19
22674	name="imbalance_account_name">Tak	7
15141	name="imbalance_account_name">Ubalanse</string>	28
37528	name="indeterminateProgressStyle"	4
37958	name="indeterminateProgressStyle">@style/Widget.Sherlock.Light.ProgressBar</item>	4
38760	name="indeterminateProgressStyle">@style/Widget.Sherlock.ProgressBar</item>	4
10416	name="info_details"></string>	98
12378	name="info_details">Bilgilendirme</string>	17
12663	name="info_details">Detalles</string>	29
9575	name="info_details">Info</string>	178
12466	name="info_details">Informaci</string>	18
13001	name="info_details">Informacin</string>	18
12366	name="info_details">Informao</string>	25
12177	name="info_details">Informasjon</string>	44
12361	name="info_details">Information</string>	15
12990	name="info_details">Informations</string>	39
12410	name="info_details">Informazioni</string>	34
12154	name="info_details">Informci</string>	7
12214	name="info_details">Tiedot</string>	8
10515	name="info_details">estina</string>	13
37442	name="initialActivityCount"	4
29736	name="isTablet">false</bool>	5
29714	name="isTablet">true</bool>	5
37679	name="itemBackground"	4
37091	name="itemIconDisabledAlpha"	4
37321	name="itemPadding"	4
38431	name="itemPadding">8dip</item>	4
37432	name="itemTextAppearance"	4
54950	name="key_about"	8
57566	name="key_about">About	3
6025	name="key_about">about_gnucash</string>	43
28379	name="key_about">gnucash</string>	4
55090	name="key_about_gnucash"	4
54933	name="key_account_type_entries"	4
54913	name="key_account_type_entries">	6
29823	name="key_backup_location">backup_location</string>	5
29828	name="key_build_version"	6
28430	name="key_build_version"></string>	4
6335	name="key_build_version">build_version</string>	43
29909	name="key_change_passcode"	10
55017	name="key_change_passcode">change_passcode</string>	9
6295	name="key_chart_currency">chart_currency</string>	3
29775	name="key_create_backup"	9
6173	name="key_create_backup">create_backup</string>	10
29812	name="key_create_default_accounts"	6
3240	name="key_create_default_accounts">create_default_accounts</string>	21
54898	name="key_currency_codes"	4
54909	name="key_currency_codes">	7
29821	name="key_default_currency"	6
28338	name="key_default_currency"></string>	5
5543	name="key_default_currency">default_currency</string>	37
55012	name="key_default_export_email"	4
28292	name="key_default_export_email">email</string>	4
12503	name="key_default_export_email">export_email_target</string>	20
29885	name="key_default_export_format"	6
6795	name="key_default_export_format">default_export_format</string>	20
55018	name="key_default_transaction_type"	8
28576	name="key_default_transaction_type"></string>	4
4338	name="key_default_transaction_type">default_transaction_type</string>	25
29793	name="key_delete_all_accounts"	6
28482	name="key_delete_all_accounts"></string>	4
30581	name="key_delete_all_accounts">delete_all_accounts</string>	10
29809	name="key_delete_all_transactions"	6
28572	name="key_delete_all_transactions"></string>	4
30772	name="key_delete_all_transactions">delete_all_transactions</string>	9
54885	name="key_delete_transactions_after_export"	8
28297	name="key_delete_transactions_after_export"></string>	4
12223	name="key_delete_transactions_after_export">delete_transactions_after_export</string>	18
10070	name="key_dropbox_access_token">dropbox_access_token</string>	7
54900	name="key_dropbox_sync"	7
51696	name="key_dropbox_sync">dropbox_sync</string>	8
29777	name="key_enable_crashlytics"	14
25169	name="key_enable_crashlytics">enable_crashlytics</string>	9
29913	name="key_enable_passcode"	10
55009	name="key_enable_passcode">enable_passcode</string>	9
54927	name="key_export_all_transactions"	8
28515	name="key_export_all_transactions"></string>	4
12755	name="key_export_all_transactions">export_all_transactions</string>	20
55013	name="key_export_format_values"	4
33837	name="key_export_format_values">	13
29858	name="key_first_run"	6
28399	name="key_first_run"></string>	5
5816	name="key_first_run">key_first_run</string>	41
29783	name="key_google_drive_app_folder_id"	9
5387	name="key_google_drive_app_folder_id">google_drive_app_folder</string>	11
29795	name="key_google_drive_sync"	9
5879	name="key_google_drive_sync">google_drive_sync</string>	9
54973	name="key_import_accounts"	4
28501	name="key_import_accounts">gnucash</string>	4
30526	name="key_import_accounts">import_gnucash_accounts</string>	10
29917	name="key_last_export_destination">last_export_destination</string>	14
29836	name="key_license"	10
28470	name="key_license"></string>	4
5723	name="key_license">app_license</string>	42
63155	name="key_owncloud_dir"	3
29817	name="key_owncloud_password"	5
63165	name="key_owncloud_server"	3
63135	name="key_owncloud_sync"	3
29803	name="key_owncloud_username"	5
9256	name="key_prefs_header_general">prefs_header_general</string>	10
55039	name="key_previous_minor_version"	4
28317	name="key_previous_minor_version"></string>	4
27918	name="key_previous_minor_version">previous_minor_version</string>	19
59618	name="key_recurrence_period_millis">	3
29871	name="key_recurring_transaction_ids"	6
18365	name="key_recurring_transaction_ids">recurring_transaction_ids</string>	15
29897	name="key_report_currency"	8
5860	name="key_report_currency">report_currency</string>	8
29927	name="key_restore_backup"	9
25140	name="key_restore_backup">restore_backup</string>	20
51569	name="key_restore_last_backup">restore_last_backup</string>	5
29782	name="key_save_opening_balances"	9
25341	name="key_save_opening_balances">save_opening_balances</string>	16
12968	name="key_sgml_ofx_header">sgml_ofx_header</string>	7
9873	name="key_transaction_type_values"	20
5695	name="key_transaction_type_values">	26
29901	name="key_use_account_color"	14
54946	name="key_use_account_color">use_account_color</string>	6
9385	name="key_use_compact_list">use_compact_list</string>	11
55036	name="key_use_double_entry"	4
28290	name="key_use_double_entry"></string>	4
34563	name="key_use_double_entry">use_double_entry</string>	11
54939	name="key_xml_ofx_header"	4
26359	name="key_xml_ofx_header">xml_ofx_header</string>	13
56694	name="keyboardKeysLayout"	4
11876	name="label_account"></string>	59
10917	name="label_account">Account</string>	94
10365	name="label_account">Akun</string>	5
14773	name="label_account">Compte</string>	21
20105	name="label_account">Conta</string>	18
16276	name="label_account">Conto</string>	11
15934	name="label_account">Cuenta</string>	16
26478	name="label_account">Dagboek</string>	3
29629	name="label_account">Fik</string>	6
29718	name="label_account">Hesap</string>	6
14741	name="label_account">Konto</string>	45
16843	name="label_account">Rekening</string>	12
29659	name="label_account">Tili</string>	5
29606	name="label_account">et</string>	6
17552	name="label_account_balance">:</string>	40
10630	name="label_account_balance"></string>	31
23258	name="label_account_balance">Bakiye:</string>	8
5418	name="label_account_balance">Balance:</string>	128
21971	name="label_account_balance">Bilance:</string>	7
22672	name="label_account_balance">Bilancio:</string>	6
5371	name="label_account_balance">Saldo:</string>	97
10865	name="label_account_balance">Solde:</string>	20
16494	name="label_account_balance">Somma	18
5283	name="label_account_color_and_type">	34
11015	name="label_account_color_and_type"></string>	31
4746	name="label_account_color_and_type">Account	100
21043	name="label_account_color_and_type">C&#244	19
11036	name="label_account_color_and_type">Color	21
5815	name="label_account_color_and_type">Cor	6
16051	name="label_account_color_and_type">Couleur	16
62420	name="label_account_color_and_type">Cr	10
17654	name="label_account_color_and_type">Kolor	14
15191	name="label_account_color_and_type">Konto	26
6847	name="label_account_color_and_type">Kontofarbe	8
17186	name="label_account_color_and_type">Rekening	11
16144	name="label_account_color_and_type">Tipo	15
62712	name="label_account_color_and_type">Warna	3
10557	name="label_account_currency"></string>	55
12060	name="label_account_currency">Currency</string>	95
15485	name="label_account_currency">Divisa</string>	18
11781	name="label_account_currency">Mata	3
62709	name="label_account_currency">Mna</string>	3
5164	name="label_account_currency">Moeda</string>	26
14744	name="label_account_currency">Moneda</string>	12
11800	name="label_account_currency">Monnaie</string>	24
16533	name="label_account_currency">Munteenheid</string>	20
59337	name="label_account_currency">Para	4
7600	name="label_account_currency">Valuta</string>	43
17509	name="label_account_currency">Waluta</string>	9
5219	name="label_account_currency">Whrung</string>	12
12772	name="label_account_name">	58
11577	name="label_account_name"></string>	52
9668	name="label_account_name">Account	115
26371	name="label_account_name">Dagboeknaam</string>	3
12660	name="label_account_name">Fik	11
12675	name="label_account_name">Hesap	13
12318	name="label_account_name">Kontoname</string>	27
12115	name="label_account_name">Kontonamn</string>	13
12907	name="label_account_name">Kontonavn</string>	37
11818	name="label_account_name">Nama	9
13024	name="label_account_name">Nazwa	18
12247	name="label_account_name">Nom	47
12513	name="label_account_name">Nombre	35
12558	name="label_account_name">Nome	61
12709	name="label_account_name">Numele	13
21987	name="label_account_name">Nzev	7
12956	name="label_account_name">Rekeningnaam</string>	23
12173	name="label_account_name">Tilin	12
12404	name="label_account_name">\'	18
15005	name="label_account_type">	32
11431	name="label_account_type"></string>	24
6461	name="label_account_type">Account	101
29708	name="label_account_type">Hesap	6
12126	name="label_account_type">Jenis	5
8108	name="label_account_type">Konto	13
5941	name="label_account_type">Kontoart</string>	11
21755	name="label_account_type">Kontotype</string>	8
16946	name="label_account_type">Rekening	11
15656	name="label_account_type">Tipo	49
14794	name="label_account_type">Tipus	11
17306	name="label_account_type">Typ	16
16002	name="label_account_type">Type	17
12310	name="label_assets"></string>	34
11766	name="label_assets">Actifs</string>	7
14771	name="label_assets">Actiu</string>	7
16793	name="label_assets">Activa</string>	12
2911	name="label_assets">Activo</string>	26
2303	name="label_assets">Assets</string>	101
22978	name="label_assets">Ativos</string>	14
22701	name="label_assets">Attivit</string>	6
21690	name="label_assets">Eiendeler</string>	10
56129	name="label_assets">Tillgngar</string>	2
22371	name="label_assets">Vermgen</string>	8
17456	name="label_assets">rodki</string>	12
21213	name="label_backup_filename">gnucash_android_backup.gnca</string>	19
17918	name="label_balance_sheet_total">:</string>	18
12180	name="label_balance_sheet_total"></string>	7
17802	name="label_balance_sheet_total">Suma:</string>	15
59198	name="label_balance_sheet_total">Summe:</string>	4
16516	name="label_balance_sheet_total">Totaal:</string>	14
2854	name="label_balance_sheet_total">Total:</string>	86
29355	name="label_balance_sheet_total">Totale:</string>	7
21567	name="label_balance_sheet_total">Totalt:</string>	8
11518	name="label_bill"></string>	39
17161	name="label_bill">Aankoopfactuur</string>	3
6190	name="label_bill">Bill</string>	94
5278	name="label_bill">Conta</string>	17
11668	name="label_bill">Facture</string>	3
10795	name="label_bill">Note</string>	11
17446	name="label_bill">Rachunek</string>	9
15178	name="label_bill">Rechnung</string>	5
15391	name="label_bill">Recibo</string>	10
15117	name="label_bill">Regning</string>	19
29240	name="label_bill">Ricevuta</string>	4
56444	name="label_bill">Rkning</string>	2
10841	name="label_bill">Tagihan</string>	6
55515	name="label_bill">et</string>	2
11982	name="label_buy"></string>	52
11978	name="label_buy">Achat</string>	15
10889	name="label_buy">Beli</string>	7
6272	name="label_buy">Buy</string>	112
20450	name="label_buy">Compra</string>	25
6205	name="label_buy">Comprar</string>	20
15163	name="label_buy">Kauf</string>	9
14930	name="label_buy">Kjp</string>	23
16556	name="label_buy">Kopen</string>	7
22486	name="label_buy">Koupit</string>	5
56251	name="label_buy">Kp</string>	2
17712	name="label_buy">Kup</string>	13
10345	name="label_charge"></string>	37
29406	name="label_charge">Addebito</string>	4
15044	name="label_charge">Belast</string>	19
10318	name="label_charge">Biaya</string>	3
15604	name="label_charge">Cargo</string>	10
20350	name="label_charge">Carregamento</string>	14
6102	name="label_charge">Carregar</string>	6
5667	name="label_charge">Charge</string>	92
12023	name="label_charge">Frais</string>	3
15230	name="label_charge">Gebhr</string>	5
17067	name="label_charge">Kost</string>	3
56045	name="label_charge">Kostnad</string>	2
17384	name="label_charge">Obcienie</string>	9
55538	name="label_charge">Poplatek</string>	2
54803	name="label_charge">charge</string>	8
17956	name="label_chart_no_data">	39
11143	name="label_chart_no_data"></string>	36
11620	name="label_chart_no_data">Aucune	18
17648	name="label_chart_no_data">Brak	18
22496	name="label_chart_no_data">Dati	6
3082	name="label_chart_no_data">Datos	21
16702	name="label_chart_no_data">Geen	7
20903	name="label_chart_no_data">Gr&#225	11
23011	name="label_chart_no_data">Grfico	10
14866	name="label_chart_no_data">Ingen	26
22045	name="label_chart_no_data">Keine	8
3677	name="label_chart_no_data">No	108
5964	name="label_chart_no_data">Sem	9
22630	name="label_chart_no_data">Tidak	7
17962	name="label_chart_overall">	24
11064	name="label_chart_overall"></string>	40
16772	name="label_chart_overall">Algemeen</string>	5
15261	name="label_chart_overall">Generell</string>	14
5265	name="label_chart_overall">Geral</string>	25
11401	name="label_chart_overall">Global</string>	13
29643	name="label_chart_overall">Keseluruhan</string>	5
17645	name="label_chart_overall">Oglny</string>	16
3519	name="label_chart_overall">Overall</string>	101
29532	name="label_chart_overall">Summe</string>	6
3160	name="label_chart_overall">Total</string>	27
29346	name="label_chart_overall">Totale</string>	4
17938	name="label_chart_total">	18
10911	name="label_chart_total"></string>	39
17330	name="label_chart_total">Cakowity</string>	13
22446	name="label_chart_total">Summe</string>	8
16847	name="label_chart_total">Totaal</string>	7
5690	name="label_chart_total">Total</string>	105
3759	name="label_chart_total">Total\n</string>	21
22750	name="label_chart_total">Totale</string>	9
21947	name="label_chart_total">Totalt</string>	12
54321	name="label_chart_total">\n</string>	6
17531	name="label_confirm_passcode">	24
62510	name="label_confirm_passcode">,	3
10371	name="label_confirm_passcode"></string>	21
21937	name="label_confirm_passcode">Bekreft	6
17002	name="label_confirm_passcode">Bevestig	3
62516	name="label_confirm_passcode">Bitte	3
29365	name="label_confirm_passcode">Conferma	8
2894	name="label_confirm_passcode">Confirme	15
62537	name="label_confirm_passcode">Confirmeu	3
11622	name="label_confirm_passcode">Harap	3
64040	name="label_confirm_passcode">Krjk,erstse	2
59220	name="label_confirm_passcode">Ltfen,ifreyi	4
10586	name="label_confirm_passcode">Please	91
19953	name="label_confirm_passcode">Por	15
62743	name="label_confirm_passcode">Potvrte	3
17569	name="label_confirm_passcode">Potwierd,prosz,swoje	9
57319	name="label_confirm_passcode">Vahvista	3
57346	name="label_confirm_passcode">Var	3
10848	name="label_confirm_passcode">Veuillez	13
17937	name="label_convert_from">:</string>	16
12929	name="label_convert_from"></string>	7
29368	name="label_convert_from">Da:</string>	2
16484	name="label_convert_from">De:</string>	22
3691	name="label_convert_from">Desde:</string>	9
21531	name="label_convert_from">Fra:</string>	6
55900	name="label_convert_from">Frn:</string>	2
2663	name="label_convert_from">From:</string>	80
17583	name="label_convert_from">Od:</string>	10
17140	name="label_convert_from">Van:</string>	8
59259	name="label_convert_from">Von:</string>	4
17905	name="label_convert_to">:</string>	16
13030	name="label_convert_to"></string>	7
29441	name="label_convert_to">A:</string>	2
59237	name="label_convert_to">An:</string>	4
55010	name="label_convert_to">At:</string>	7
17429	name="label_convert_to">Do:</string>	10
2842	name="label_convert_to">Hasta:</string>	9
36680	name="label_convert_to">Para:</string>	15
21660	name="label_convert_to">Til:</string>	6
56449	name="label_convert_to">Till:</string>	2
2621	name="label_convert_to">To:</string>	80
16797	name="label_convert_to">Tot:</string>	8
11168	name="label_convert_to">Vers:</string>	10
24502	name="label_create_account">	6
24115	name="label_create_account"></string>	6
24579	name="label_create_account">Cr&#233	6
24187	name="label_create_account">Crea	6
24340	name="label_create_account">Crear	6
24351	name="label_create_account">Create	6
20023	name="label_create_account">Criar	17
24345	name="label_create_account">Neues	6
24496	name="label_create_account">Nieuw	6
24259	name="label_create_account">Opprett	6
56785	name="label_create_account">Utwrz	8
11641	name="label_credit"></string>	67
15322	name="label_credit">ABONO</string>	15
15871	name="label_credit">Abonar</string>	5
20046	name="label_credit">CR&#201	15
14849	name="label_credit">CRDIT</string>	21
22948	name="label_credit">CRDITO</string>	15
11862	name="label_credit">CREDIT</string>	105
16452	name="label_credit">CREDITO</string>	15
16809	name="label_credit">Credit</string>	15
22849	name="label_credit">HYVITYS</string>	7
14946	name="label_credit">Haben</string>	14
23116	name="label_credit">KRED</string>	8
11843	name="label_credit">KREDIT</string>	38
17750	name="label_credit">KREDYT</string>	13
22376	name="label_credit">VR</string>	5
51820	name="label_date">DATE</string>	3
10309	name="label_debit"></string>	67
15798	name="label_debit">Adeudar</string>	5
15667	name="label_debit">CARGO</string>	15
19434	name="label_debit">D&#201	15
14697	name="label_debit">DBIT</string>	21
23005	name="label_debit">DBITO</string>	12
14843	name="label_debit">DEBET</string>	39
10169	name="label_debit">DEBIT</string>	104
16195	name="label_debit">DEBITO</string>	13
16599	name="label_debit">Debet</string>	15
15019	name="label_debit">Soll</string>	14
22796	name="label_debit">VELOITUS</string>	7
11005	name="label_decrease"></string>	39
14982	name="label_decrease">Abnahme</string>	5
16589	name="label_decrease">Daling</string>	3
6082	name="label_decrease">Decrease</string>	92
11303	name="label_decrease">Diminuer</string>	11
20711	name="label_decrease">Diminui&#231	11
62403	name="label_decrease">Diminuio</string>	6
4190	name="label_decrease">Diminuir</string>	6
29343	name="label_decrease">Diminuzione</string>	4
15828	name="label_decrease">Disminuir</string>	10
11436	name="label_decrease">Mengurangi</string>	6
56289	name="label_decrease">Minska</string>	2
15140	name="label_decrease">Reduser</string>	19
55473	name="label_decrease">Snen</string>	2
17686	name="label_decrease">Zmniejsz</string>	9
5341	name="label_default_transfer_account">	30
51085	name="label_default_transfer_account">-	3
11752	name="label_default_transfer_account"></string>	28
62747	name="label_default_transfer_account">Akun	3
14800	name="label_default_transfer_account">Compte	20
5070	name="label_default_transfer_account">Conta	20
33316	name="label_default_transfer_account">Conto	2
15364	name="label_default_transfer_account">Cuenta	11
16344	name="label_default_transfer_account">DConto	13
5605	name="label_default_transfer_account">Default	89
17697	name="label_default_transfer_account">Domylne	9
6645	name="label_default_transfer_account">Standard	26
21439	name="label_default_transfer_account">Standardkontoen	6
11459	name="label_delete_account_subaccounts_description">	43
62776	name="label_delete_account_subaccounts_description">Akun	3
16335	name="label_delete_account_subaccounts_description">Ce	5
14949	name="label_delete_account_subaccounts_description">Denne	17
56143	name="label_delete_account_subaccounts_description">Detta	2
16981	name="label_delete_account_subaccounts_description">Deze	3
59299	name="label_delete_account_subaccounts_description">Dieses	4
6097	name="label_delete_account_subaccounts_description">Esta	27
29307	name="label_delete_account_subaccounts_description">Questo	4
5275	name="label_delete_account_subaccounts_description">This	82
17791	name="label_delete_account_subaccounts_description">To	11
64016	name="label_delete_account_subaccounts_description">\n</string>	2
11573	name="label_delete_account_transactions_description">	40
62719	name="label_delete_account_transactions_description">Akun	3
16116	name="label_delete_account_transactions_description">Ce	5
14926	name="label_delete_account_transactions_description">Denne	17
56078	name="label_delete_account_transactions_description">Detta	2
17032	name="label_delete_account_transactions_description">Deze	3
59284	name="label_delete_account_transactions_description">Dieses	4
5277	name="label_delete_account_transactions_description">Esta	27
29465	name="label_delete_account_transactions_description">Questo	4
5380	name="label_delete_account_transactions_description">This	79
17458	name="label_delete_account_transactions_description">To	11
64026	name="label_delete_account_transactions_description">\n</string>	2
63687	name="label_delete_after_export">All	3
4299	name="label_delete_sub_accounts">	33
11504	name="label_delete_sub_accounts"></string>	28
20130	name="label_delete_sub_accounts">Apagar	23
10918	name="label_delete_sub_accounts">Borrar	18
6304	name="label_delete_sub_accounts">Deletar	6
4633	name="label_delete_sub_accounts">Delete	97
16176	name="label_delete_sub_accounts">Elimina	15
62787	name="label_delete_sub_accounts">Hapus	3
56299	name="label_delete_sub_accounts">Radera	2
15121	name="label_delete_sub_accounts">Slett	20
16895	name="label_delete_sub_accounts">Subrekeningen	11
16113	name="label_delete_sub_accounts">Supprimer	12
58551	name="label_delete_sub_accounts">Suprimeix	5
6871	name="label_delete_sub_accounts">Unterkonten	8
17317	name="label_delete_sub_accounts">Usu	14
17903	name="label_delete_transactions">	22
11280	name="label_delete_transactions"></string>	31
20386	name="label_delete_transactions">Apagar	13
15613	name="label_delete_transactions">Borrar	8
59312	name="label_delete_transactions">Buchungen	4
4281	name="label_delete_transactions">Deletar	6
4668	name="label_delete_transactions">Delete	84
29274	name="label_delete_transactions">Elimina	4
62706	name="label_delete_transactions">Hapus	3
56047	name="label_delete_transactions">Radera	2
14973	name="label_delete_transactions">Slett	17
16274	name="label_delete_transactions">Supprimer	5
60037	name="label_delete_transactions">Suprimir	6
17368	name="label_delete_transactions">Usu	11
16856	name="label_delete_transactions">Verrichtingen	3
11955	name="label_deposit"></string>	41
15949	name="label_deposit">Dep&#243	19
5373	name="label_deposit">Deposit</string>	90
4103	name="label_deposit">Depositar</string>	6
29291	name="label_deposit">Deposito</string>	5
17518	name="label_deposit">Depozyt</string>	9
15674	name="label_deposit">Depsito</string>	11
11065	name="label_deposit">Dpt</string>	11
15113	name="label_deposit">Einzahlung</string>	5
58600	name="label_deposit">Ingrs</string>	5
15066	name="label_deposit">Innskudd</string>	19
56255	name="label_deposit">Insttning</string>	2
10990	name="label_deposit">Setor</string>	3
16980	name="label_deposit">Storting</string>	3
55463	name="label_deposit">Vklad</string>	2
29359	name="label_description">DESCRIPTION</string>	3
10414	name="label_dismiss"></string>	115
10280	name="label_dismiss">Abaikan</string>	9
56027	name="label_dismiss">Avfrda</string>	2
21726	name="label_dismiss">Avvis</string>	15
15460	name="label_dismiss">Cerrar</string>	55
16255	name="label_dismiss">Chiudi</string>	50
6202	name="label_dismiss">Descartar</string>	63
11528	name="label_dismiss">Dismiss</string>	147
8359	name="label_dismiss">Ferdig</string>	43
10196	name="label_dismiss">Passer</string>	54
6026	name="label_dismiss">Schlieen</string>	44
17691	name="label_dismiss">Spocznij</string>	23
16662	name="label_dismiss">Wijs	42
23210	name="label_dismiss">Yoksay</string>	13
55841	name="label_dismiss">Zruit</string>	2
12188	name="label_display_account">	70
10501	name="label_display_account"></string>	42
11815	name="label_display_account">Afficher	35
26473	name="label_display_account">Dagboek	17
8876	name="label_display_account">Display	115
6245	name="label_display_account">Konto	33
4602	name="label_display_account">Mostrar	64
12559	name="label_display_account">Rekening	21
10629	name="label_display_account">Tampilan	9
12732	name="label_display_account">Vis	37
55927	name="label_display_account">Visa	2
12540	name="label_display_account">Visualizza	29
12136	name="label_display_account">Wywietl	19
22142	name="label_display_account">Zobrazit	5
15279	name="label_double_entry_account">	40
10994	name="label_double_entry_account"></string>	33
11823	name="label_double_entry_account">Akun	5
29481	name="label_double_entry_account">Compte	8
20771	name="label_double_entry_account">Conta	22
16345	name="label_double_entry_account">Conto	18
16553	name="label_double_entry_account">Draag	21
7852	name="label_double_entry_account">Overfringskonto</string>	28
29609	name="label_double_entry_account">Penos	3
11424	name="label_double_entry_account">Transfer	112
15922	name="label_double_entry_account">Transferir	16
10550	name="label_double_entry_account">Transfert	22
4497	name="label_double_entry_account">berweisungskonto</string>	13
55828	name="label_dropbox_export_destination">	4
55754	name="label_dropbox_export_destination">Dropbox	5
55808	name="label_dropbox_export_destination">Esporta	4
21801	name="label_dropbox_export_destination">Export	16
55694	name="label_dropbox_export_destination">Exportar	4
55925	name="label_dropbox_export_destination">Exportera	2
25222	name="label_enable">Enable</string>	3
12293	name="label_equity"></string>	34
3226	name="label_equity">Acciones</string>	13
22946	name="label_equity">Capital	19
22499	name="label_equity">Capitali</string>	9
10938	name="label_equity">Capitaux	14
21394	name="label_equity">Egenkapital</string>	10
56005	name="label_equity">Eget	2
17162	name="label_equity">Eigen	12
22289	name="label_equity">Eigenkapital</string>	8
3257	name="label_equity">Equity</string>	98
17286	name="label_equity">Kapita</string>	12
17874	name="label_error_invalid_expression">	27
22833	name="label_error_invalid_expression">!</string>	6
12292	name="label_error_invalid_expression"></string>	12
22814	name="label_error_invalid_expression">Espressione	11
3343	name="label_error_invalid_expression">Expresi&#243	7
15735	name="label_error_invalid_expression">Expresin	9
59499	name="label_error_invalid_expression">Express&#227	6
22003	name="label_error_invalid_expression">Expressi	7
16119	name="label_error_invalid_expression">Expression	11
22929	name="label_error_invalid_expression">Expresso	17
2324	name="label_error_invalid_expression">Invalid	102
17464	name="label_error_invalid_expression">Niepoprawne	12
55887	name="label_error_invalid_expression">Ogiltigt	2
16639	name="label_error_invalid_expression">Ongeldige	7
21390	name="label_error_invalid_expression">Ugyldig	10
22365	name="label_error_invalid_expression">Ungltiger	11
4436	name="label_every_x_days">	161
21852	name="label_every_x_hours">	16
4020	name="label_every_x_months">	123
4014	name="label_every_x_weeks">	123
4379	name="label_every_x_years">	121
11900	name="label_expense"></string>	35
15021	name="label_expense">Aufwand</string>	5
5253	name="label_expense">Despesa</string>	17
5425	name="label_expense">Expense</string>	98
11068	name="label_expense">Frais</string>	11
15799	name="label_expense">Gasto</string>	10
11764	name="label_expense">Pengeluaran</string>	6
16745	name="label_expense">Uitgaven</string>	3
29336	name="label_expense">Uscita</string>	4
29435	name="label_expense">Uscite</string>	5
15269	name="label_expense">Utgift</string>	21
55467	name="label_expense">Vdaj</string>	2
17860	name="label_expense">Wydatek</string>	9
34611	name="label_export_choice">By	4
17526	name="label_export_destination">	55
11734	name="label_export_destination"></string>	43
56774	name="label_export_destination">Cel	9
23925	name="label_export_destination">Destination	19
28073	name="label_export_destination">Destinazione	16
12438	name="label_export_destination">Destino	26
10520	name="label_export_destination">Ekspor	7
21568	name="label_export_destination">Eksporter	10
8377	name="label_export_destination">Eksportmottaker</string>	15
22821	name="label_export_destination">Esporta	10
11954	name="label_export_destination">Export	127
14789	name="label_export_destination">Exporta	13
16083	name="label_export_destination">Exportar	34
16520	name="label_export_destination">Exporteer	7
11439	name="label_export_destination">Exporter	10
11665	name="label_export_destination">Exportera	12
22135	name="label_export_destination">Exportovat	7
6157	name="label_export_destination">Exportziel</string>	21
56446	name="label_export_destination">Vie:</string>	2
23024	name="label_export_destination">Wyeksportuj	6
12640	name="label_export_format">	97
23224	name="label_export_format"></string>	16
54633	name="label_export_format">Eksporteringsformat</string>	4
5072	name="label_export_format">Export	35
34842	name="label_export_format">Format	12
3599	name="label_export_format">Format</string>	57
5141	name="label_export_format">Formato	32
2542	name="label_export_format">Formato</string>	13
25840	name="label_export_target_external_service">	3
12812	name="label_export_target_external_service"></string>	9
56430	name="label_export_target_external_service">extern	2
11926	name="label_export_target_external_service">external	25
35064	name="label_export_target_external_service">externer	3
11248	name="label_export_target_external_service">services	3
10685	name="label_export_target_external_service">servicio	6
11592	name="label_export_target_external_service">servio	12
26002	name="label_export_target_external_service">servizio	3
26179	name="label_export_transactions_since_date">	3
12819	name="label_export_transactions_since_date"></string>	12
26111	name="label_export_transactions_since_date">Da</string>	3
11729	name="label_export_transactions_since_date">Depuis	3
10709	name="label_export_transactions_since_date">Desde</string>	17
56038	name="label_export_transactions_since_date">Sedan</string>	2
35009	name="label_export_transactions_since_date">Seit</string>	3
11210	name="label_export_transactions_since_date">Since</string>	25
22900	name="label_hide_account_balance">	7
22586	name="label_hide_account_balance"></string>	9
22848	name="label_hide_account_balance">Cacher	7
56205	name="label_hide_account_balance">Dlja	2
22950	name="label_hide_account_balance">Esconder	9
8825	name="label_hide_account_balance">Hide	32
12711	name="label_hide_account_balance">Nascondi	7
22000	name="label_hide_account_balance">Ocultar	7
12415	name="label_hide_account_balance">Sembunyikan	7
22889	name="label_hide_account_balance">Skjul	7
22274	name="label_hide_account_balance">Skrt	5
17925	name="label_imbalance">:</string>	31
11487	name="label_imbalance"></string>	21
15808	name="label_imbalance">Descuadre:</string>	12
20582	name="label_imbalance">Desequilibr&#237	11
14803	name="label_imbalance">Desequilibri:</string>	13
4275	name="label_imbalance">Desequilibrio:</string>	6
22925	name="label_imbalance">Desequilibro:</string>	10
21970	name="label_imbalance">Differenz:</string>	8
11636	name="label_imbalance">Dsquilibre	12
5696	name="label_imbalance">Imbalance:</string>	125
23002	name="label_imbalance">Niezbilansowanie:</string>	6
56008	name="label_imbalance">Obalans:</string>	2
16897	name="label_imbalance">Onbalans:</string>	7
22830	name="label_imbalance">Sbilancio:</string>	9
22740	name="label_imbalance">Tidak	7
14981	name="label_imbalance">Ubalance:</string>	11
21776	name="label_imbalance">Ubalanse:</string>	10
12077	name="label_income"></string>	41
17781	name="label_income">Dochd</string>	9
29410	name="label_income">Entrata</string>	7
29460	name="label_income">Entrate</string>	4
14884	name="label_income">Ertrag</string>	5
4317	name="label_income">Income</string>	89
15913	name="label_income">Ingreso</string>	10
55866	name="label_income">Inkomst</string>	2
16893	name="label_income">Inkomsten</string>	3
15020	name="label_income">Inntekt</string>	19
12008	name="label_income">Pendapatan</string>	6
55524	name="label_income">Pjem</string>	2
5864	name="label_income">Receita</string>	6
20276	name="label_income">Rendimento</string>	14
10393	name="label_income">Revenu</string>	11
10499	name="label_increase"></string>	39
11832	name="label_increase">Augmenter</string>	11
6208	name="label_increase">Aumentar</string>	16
20381	name="label_increase">Aumento</string>	17
5413	name="label_increase">Increase</string>	91
10505	name="label_increase">Menambahkan</string>	6
16658	name="label_increase">Verhoging</string>	3
15034	name="label_increase">Zunahme</string>	5
55520	name="label_increase">Zven</string>	2
17229	name="label_increase">Zwiksz</string>	9
14917	name="label_increase">k</string>	19
55864	name="label_increase">ka</string>	2
12987	name="label_inside_account_with_name">	17
26052	name="label_inside_account_with_name">%1$s	10
12053	name="label_inside_account_with_name">dans	3
10646	name="label_inside_account_with_name">em	17
11232	name="label_inside_account_with_name">en	11
55959	name="label_inside_account_with_name">i	2
11222	name="label_inside_account_with_name">in	43
11666	name="label_invoice"></string>	50
15894	name="label_invoice">Factura</string>	20
11289	name="label_invoice">Facture	7
10307	name="label_invoice">Facture</string>	11
15100	name="label_invoice">Faktura</string>	41
22589	name="label_invoice">Fattura</string>	9
5756	name="label_invoice">Fatura</string>	22
4995	name="label_invoice">Invoice</string>	113
14857	name="label_invoice">Rechnung</string>	9
16661	name="label_invoice">Verkoopfactuur</string>	7
13020	name="label_last_3_months_expenses">	22
59208	name="label_last_3_months_expenses"></string>	4
59219	name="label_last_3_months_expenses">Aufwendungen	4
54970	name="label_last_3_months_expenses">Despesas	14
10397	name="label_last_3_months_expenses">Dpenses	10
3671	name="label_last_3_months_expenses">Expenses	81
2313	name="label_last_3_months_expenses">Gastos	9
16912	name="label_last_3_months_expenses">Kosten	8
29445	name="label_last_3_months_expenses">Uscite	2
21504	name="label_last_3_months_expenses">Utgifter	8
17824	name="label_last_3_months_expenses">Wydatki	8
28523	name="label_last_export_time">	7
64111	name="label_last_export_time">:</string>	2
12996	name="label_last_export_time"></string>	14
11189	name="label_last_export_time">Dernires	3
10899	name="label_last_export_time">Last	38
56010	name="label_last_export_time">Senast	2
63031	name="label_last_export_time">Sist	3
64062	name="label_last_export_time">Ultima	2
25544	name="label_last_export_time">Zuletzt	3
11207	name="label_last_export_time">ltima	21
12416	name="label_liabilities"></string>	34
10683	name="label_liabilities">Dettes</string>	14
21382	name="label_liabilities">Gjeld</string>	10
2718	name="label_liabilities">Liabilities</string>	98
2213	name="label_liabilities">Pasivo</string>	13
14782	name="label_liabilities">Passiu</string>	10
22872	name="label_liabilities">Passivit</string>	9
23017	name="label_liabilities">Passivo</string>	15
22914	name="label_liabilities">Passivos</string>	14
56182	name="label_liabilities">Skulder</string>	2
22141	name="label_liabilities">Verbindlichkeiten</string>	8
16761	name="label_liabilities">Vreemd	12
17619	name="label_liabilities">Zobowizania</string>	12
15222	name="label_move_destination">	37
17258	name="label_move_destination">-</string>	31
10165	name="label_move_destination"></string>	32
11887	name="label_move_destination">Akun	7
26496	name="label_move_destination">Bestemmingsdagboek</string>	6
16845	name="label_move_destination">Bestemmingsrekening</string>	17
22303	name="label_move_destination">Clov	8
11096	name="label_move_destination">Compte	33
20833	name="label_move_destination">Conta	30
16391	name="label_move_destination">Conto	19
15539	name="label_move_destination">Cuenta	22
10300	name="label_move_destination">Destination	107
56214	name="label_move_destination">Destinationskonto</string>	2
17585	name="label_move_destination">Konto	15
21940	name="label_move_destination">Mlkonto</string>	10
14801	name="label_move_destination">Til	22
5674	name="label_move_destination">Zielkonto</string>	19
17973	name="label_move_to">	24
22704	name="label_move_to">:</string>	6
12225	name="label_move_to"></string>	12
16448	name="label_move_to">Dplacer	11
21397	name="label_move_to">Flytt	10
56118	name="label_move_to">Flytta	2
22337	name="label_move_to">Mou	7
3543	name="label_move_to">Move	98
2263	name="label_move_to">Mover	26
17535	name="label_move_to">Przenie	12
22491	name="label_move_to">Sposta	6
17225	name="label_move_to">Verplaatsen	12
22028	name="label_move_to">Verschieben	8
54920	name="label_move_to">Vomer	7
17876	name="label_net_worth">	9
12109	name="label_net_worth"></string>	14
21687	name="label_net_worth">Formue</string>	6
3045	name="label_net_worth">Net	81
56385	name="label_net_worth">Nettofrmgenhet</string>	2
54962	name="label_net_worth">Patrimnio	7
29331	name="label_net_worth">Patrimonio	5
59274	name="label_net_worth">Reinvermgen</string>	4
17089	name="label_net_worth">Totaal	8
10331	name="label_net_worth">Valeur	10
3858	name="label_net_worth">Valor	18
17605	name="label_net_worth">Warto	8
17902	name="label_new_passcode">	27
12160	name="label_new_passcode"></string>	30
56243	name="label_new_passcode">Ange	2
3238	name="label_new_passcode">Enter	101
10957	name="label_new_passcode">Entrez	15
22677	name="label_new_passcode">Inserisci	8
22325	name="label_new_passcode">Introduiu	10
21132	name="label_new_passcode">Introduza	21
2690	name="label_new_passcode">Introduzca	13
22675	name="label_new_passcode">Masukkan	7
22040	name="label_new_passcode">Neuen	8
21342	name="label_new_passcode">Skriv	10
16565	name="label_new_passcode">Voer	7
17628	name="label_new_passcode">Wpisz	18
12375	name="label_no_accounts">	62
12075	name="label_no_accounts"></string>	43
12478	name="label_no_accounts">Aucun	33
12831	name="label_no_accounts">Brak	16
12367	name="label_no_accounts">Det	13
12440	name="label_no_accounts">Ei	12
12380	name="label_no_accounts">Geen	23
13040	name="label_no_accounts">Ingen	36
12210	name="label_no_accounts">Keine	22
12680	name="label_no_accounts">Nessun	23
12287	name="label_no_accounts">Nincs	9
8872	name="label_no_accounts">No	117
12580	name="label_no_accounts">Nu	11
12904	name="label_no_accounts">Sem	38
10258	name="label_no_accounts">Tidak	9
22392	name="label_no_accounts">dn	7
17936	name="label_no_favorite_accounts">	24
12605	name="label_no_favorite_accounts"></string>	18
10380	name="label_no_favorite_accounts">Aucun	14
17290	name="label_no_favorite_accounts">Brak	12
16785	name="label_no_favorite_accounts">Geen	7
56390	name="label_no_favorite_accounts">Inga	2
21448	name="label_no_favorite_accounts">Ingen	10
22260	name="label_no_favorite_accounts">Keine	8
22790	name="label_no_favorite_accounts">Nessun	11
3752	name="label_no_favorite_accounts">No	113
22909	name="label_no_favorite_accounts">Sem	22
17930	name="label_no_recent_accounts">	14
12193	name="label_no_recent_accounts"></string>	9
16492	name="label_no_recent_accounts">Aucun	7
17794	name="label_no_recent_accounts">Brak	8
17100	name="label_no_recent_accounts">Geen	3
56338	name="label_no_recent_accounts">Inga	2
21498	name="label_no_recent_accounts">Ingen	6
59329	name="label_no_recent_accounts">Keine	4
29287	name="label_no_recent_accounts">Nessun	7
3941	name="label_no_recent_accounts">No	94
55003	name="label_no_recent_accounts">Sem	17
6162	name="label_no_recurring_transactions">	37
10332	name="label_no_recurring_transactions"></string>	27
17729	name="label_no_recurring_transactions">Brak	11
16766	name="label_no_recurring_transactions">Geen	11
56274	name="label_no_recurring_transactions">Inga	2
14906	name="label_no_recurring_transactions">Ingen	24
6443	name="label_no_recurring_transactions">Keine	12
20160	name="label_no_recurring_transactions">N&#227	11
16271	name="label_no_recurring_transactions">Nessuna	15
4664	name="label_no_recurring_transactions">No	104
16088	name="label_no_recurring_transactions">Pas	16
6364	name="label_no_recurring_transactions">Sem	6
62745	name="label_no_recurring_transactions">Tidak	3
17958	name="label_no_scheduled_exports_to_display">	38
12610	name="label_no_scheduled_exports_to_display"></string>	32
17513	name="label_no_scheduled_exports_to_display">Brak	23
16795	name="label_no_scheduled_exports_to_display">Geen	7
15125	name="label_no_scheduled_exports_to_display">Ingen	28
22354	name="label_no_scheduled_exports_to_display">Keine	8
20926	name="label_no_scheduled_exports_to_display">N&#227	19
22859	name="label_no_scheduled_exports_to_display">Nessuna	11
2586	name="label_no_scheduled_exports_to_display">No	109
11756	name="label_no_scheduled_exports_to_display">Pas	21
4506	name="label_no_scheduled_exports_to_display">Sem	17
22837	name="label_no_scheduled_exports_to_display">Tidak	7
14986	name="label_no_transactions">	48
11654	name="label_no_transactions"></string>	28
16028	name="label_no_transactions">Aucune	15
17631	name="label_no_transactions">Brak	13
23098	name="label_no_transactions">Det	7
22854	name="label_no_transactions">Ei	7
16730	name="label_no_transactions">Geen	15
14718	name="label_no_transactions">Ingen	22
14907	name="label_no_transactions">Keine	14
16249	name="label_no_transactions">Nessuna	13
22778	name="label_no_transactions">Nincs	8
11805	name="label_no_transactions">No	114
19731	name="label_no_transactions">Sem	20
10155	name="label_no_transactions">Tidak	7
22326	name="label_no_transactions">dn	7
35371	name="label_no_transactions_to_display">	8
28360	name="label_no_transactions_to_display"></string>	6
23625	name="label_no_transactions_to_display">Aucune	11
26241	name="label_no_transactions_to_display">Geen	5
35412	name="label_no_transactions_to_display">Ingen	4
33084	name="label_no_transactions_to_display">Nessuna	4
28942	name="label_no_transactions_to_display">No	17
28915	name="label_no_transactions_to_display">Sem	5
17923	name="label_old_passcode">	27
12219	name="label_old_passcode"></string>	30
22482	name="label_old_passcode">Alten	8
56028	name="label_old_passcode">Ange	2
21388	name="label_old_passcode">Angi	10
3431	name="label_old_passcode">Enter	106
11579	name="label_old_passcode">Entrez	15
22582	name="label_old_passcode">Inserisci	8
22017	name="label_old_passcode">Introduiu	10
20884	name="label_old_passcode">Introduza	21
2707	name="label_old_passcode">Introduzca	13
22691	name="label_old_passcode">Masukkan	7
16649	name="label_old_passcode">Voer	7
17716	name="label_old_passcode">Wpisz	18
10189	name="label_other_slice"></string>	46
22543	name="label_other_slice">Altro</string>	9
15180	name="label_other_slice">Andre</string>	21
16398	name="label_other_slice">Autre</string>	9
17348	name="label_other_slice">Inne</string>	13
22575	name="label_other_slice">Lainnya</string>	7
4059	name="label_other_slice">Other</string>	94
15605	name="label_other_slice">Otros</string>	14
4968	name="label_other_slice">Outro</string>	24
17217	name="label_other_slice">Overige</string>	7
22118	name="label_other_slice">Sonstige</string>	8
56072	name="label_other_slice">vrigt</string>	2
15000	name="label_parent_account">	38
12050	name="label_parent_account"></string>	20
10506	name="label_parent_account">Akun	3
10585	name="label_parent_account">Compte	30
5085	name="label_parent_account">Conta	26
16426	name="label_parent_account">Conto	20
15506	name="label_parent_account">Cuenta	21
4766	name="label_parent_account">Hauptkonto</string>	12
16963	name="label_parent_account">Hoofdrekening</string>	13
7489	name="label_parent_account">Hovedkonto</string>	20
17322	name="label_parent_account">Konto	9
21442	name="label_parent_account">Overordnet	6
10880	name="label_parent_account">Parent	98
56105	name="label_parent_account">verordnat	2
17730	name="label_passcode">	31
10486	name="label_passcode"></string>	27
57390	name="label_passcode">Ange	3
21336	name="label_passcode">Angi	9
57399	name="label_passcode">Anna	3
5728	name="label_passcode">Digitar	9
1180	name="label_passcode">Enter	101
11893	name="label_passcode">Entrer	12
29424	name="label_passcode">Inserire	8
33480	name="label_passcode">Inserisci	6
59248	name="label_passcode">Introducei	6
15736	name="label_passcode">Introducir	21
60002	name="label_passcode">Introdueix	8
20067	name="label_passcode">Introduza	20
64025	name="label_passcode">Jelsz	4
11101	name="label_passcode">Masukkan	3
14699	name="label_passcode">Skriv	11
16678	name="label_passcode">Vul	5
17282	name="label_passcode">Wprowad	11
62716	name="label_passcode">Zadejte	3
62517	name="label_passcode">Zugangscode	5
59241	name="label_passcode">ifre	6
11758	name="label_payment"></string>	41
15233	name="label_payment">Betaling</string>	19
56226	name="label_payment">Betalning</string>	2
14688	name="label_payment">Pagament</string>	8
4242	name="label_payment">Pagamento</string>	22
15479	name="label_payment">Pago</string>	10
10346	name="label_payment">Paiement</string>	11
17646	name="label_payment">Patno</string>	9
5369	name="label_payment">Payment</string>	89
11435	name="label_payment">Pembayaran</string>	3
55486	name="label_payment">Platba</string>	2
14904	name="label_payment">Zahlung</string>	5
12855	name="label_permission_create_account">	36
11559	name="label_permission_create_account"></string>	25
12919	name="label_permission_create_account">Crea	7
12830	name="label_permission_create_account">Crear	18
5513	name="label_permission_create_account">Create	91
11940	name="label_permission_create_account">Crer	12
5237	name="label_permission_create_account">Criar	26
26331	name="label_permission_create_account">Dagboeken	14
12542	name="label_permission_create_account">GnuCash	8
12753	name="label_permission_create_account">GnuCash</string>	8
5546	name="label_permission_create_account">Konten	17
10612	name="label_permission_create_account">Membuat	5
12800	name="label_permission_create_account">Opprette	12
12857	name="label_permission_create_account">Rekeningen	14
56339	name="label_permission_create_account">Skapa	2
12876	name="label_permission_create_account">Tworzy	12
55507	name="label_permission_create_account">Vytvoit	2
23568	name="label_permission_create_account">cr&#233	10
27946	name="label_permission_create_account">crea	9
12833	name="label_permission_create_account">crear	9
28738	name="label_permission_create_account">create	24
28609	name="label_permission_create_account">criar	5
51872	name="label_permission_create_account">opprett	3
51950	name="label_permission_create_account">opprette	4
15099	name="label_permission_create_accounts">	43
10164	name="label_permission_create_accounts"></string>	24
16108	name="label_permission_create_accounts">Abilita	18
14816	name="label_permission_create_accounts">Aktiverer	20
11531	name="label_permission_create_accounts">Enables	86
5837	name="label_permission_create_accounts">Erm&#246	15
14889	name="label_permission_create_accounts">Ermglicht	3
15900	name="label_permission_create_accounts">Habilita	6
4291	name="label_permission_create_accounts">Habilitar	11
10387	name="label_permission_create_accounts">Memungkinkan	3
56153	name="label_permission_create_accounts">Mjliggr	2
10269	name="label_permission_create_accounts">Permet	6
11234	name="label_permission_create_accounts">Permettre	21
12854	name="label_permission_create_accounts">Permite	35
17823	name="label_permission_create_accounts">Pozwala	9
16786	name="label_permission_create_accounts">Staat	18
55506	name="label_permission_create_accounts">Umouje	2
15172	name="label_permission_group">	39
10835	name="label_permission_group">Data	3
56217	name="label_permission_group">Din	2
14729	name="label_permission_group">Dine	20
28095	name="label_permission_group">GnuCash	5
11509	name="label_permission_group">GnuCash</string>	24
16482	name="label_permission_group">I	18
5920	name="label_permission_group">Ihre	18
60035	name="label_permission_group">Les	3
20293	name="label_permission_group">Os	18
4577	name="label_permission_group">Seu	11
63010	name="label_permission_group">Seus	3
12535	name="label_permission_group">Sus	21
12712	name="label_permission_group">Tus	6
17251	name="label_permission_group">Twoje	9
17190	name="label_permission_group">Uw	18
55543	name="label_permission_group">Vae	2
11138	name="label_permission_group">Vos	21
11070	name="label_permission_group">Your	82
12567	name="label_permission_record_transaction">	38
10363	name="label_permission_record_transaction"></string>	25
12734	name="label_permission_record_transaction">Boekingen	9
4292	name="label_permission_record_transaction">Buchungen	20
11623	name="label_permission_record_transaction">Enregistrer	12
12107	name="label_permission_record_transaction">GnuCash	8
12647	name="label_permission_record_transaction">GnuCash</string>	8
4144	name="label_permission_record_transaction">Gravar	26
11217	name="label_permission_record_transaction">Mencatat	5
5236	name="label_permission_record_transaction">Record	91
12460	name="label_permission_record_transaction">Registra	7
12474	name="label_permission_record_transaction">Registrar	20
56387	name="label_permission_record_transaction">Registrera	2
12901	name="label_permission_record_transaction">Registrere	12
12572	name="label_permission_record_transaction">Rejestrowa	12
26601	name="label_permission_record_transaction">Transacties	12
55558	name="label_permission_record_transaction">Zznam	2
12807	name="label_permission_record_transaction">almacenar	9
26849	name="label_permission_record_transaction">enregistrer	6
28653	name="label_permission_record_transaction">gravar	5
29145	name="label_permission_record_transaction">record	20
28042	name="label_permission_record_transaction">registra	9
51921	name="label_permission_record_transaction">spill	3
51990	name="label_permission_record_transaction">spille	4
15211	name="label_permission_record_transactions">	37
11410	name="label_permission_record_transactions"></string>	20
16204	name="label_permission_record_transactions">Abilita	15
14655	name="label_permission_record_transactions">Aktiverer	20
10747	name="label_permission_record_transactions">Enables	85
4680	name="label_permission_record_transactions">Erm&#246	14
15232	name="label_permission_record_transactions">Ermglicht	3
15936	name="label_permission_record_transactions">Habilita	5
28760	name="label_permission_record_transactions">Habilitar	7
11259	name="label_permission_record_transactions">Memungkinkan	3
55890	name="label_permission_record_transactions">Mjliggr	2
10241	name="label_permission_record_transactions">Permet	6
11219	name="label_permission_record_transactions">Permettre	17
12909	name="label_permission_record_transactions">Permite	32
17769	name="label_permission_record_transactions">Pozwala	9
16886	name="label_permission_record_transactions">Staat	17
55519	name="label_permission_record_transactions">Umouje	2
4363	name="label_placeholder_account">	33
11024	name="label_placeholder_account"></string>	25
16928	name="label_placeholder_account">Aggregatie	9
14778	name="label_placeholder_account">Compte	20
5549	name="label_placeholder_account">Conta	20
16333	name="label_placeholder_account">Conto	13
15475	name="label_placeholder_account">Cuenta	11
17532	name="label_placeholder_account">Konto	9
5410	name="label_placeholder_account">Placeholder	86
15018	name="label_placeholder_account">Plassholder	15
21339	name="label_placeholder_account">Plassholder-konto</string>	6
56425	name="label_placeholder_account">Platshllare-konto</string>	2
6563	name="label_placeholder_account">Platzhalter	6
11447	name="label_rebate"></string>	35
20146	name="label_rebate">Abatimento</string>	14
4452	name="label_rebate">Desconto</string>	6
15779	name="label_rebate">Descuento</string>	10
16625	name="label_rebate">Korting</string>	3
62767	name="label_rebate">Rabat</string>	3
14936	name="label_rebate">Rabatt</string>	23
4923	name="label_rebate">Rebate</string>	100
10941	name="label_rebate">Remboursement</string>	11
29405	name="label_rebate">Rimborso</string>	4
55529	name="label_rebate">Sleva</string>	2
17336	name="label_rebate">Zwrot</string>	9
11011	name="label_receive"></string>	39
14984	name="label_receive">Einnahme</string>	5
11124	name="label_receive">Menerima</string>	6
15001	name="label_receive">Motta</string>	19
16632	name="label_receive">Ontvangen</string>	3
17343	name="label_receive">Przyjmij</string>	9
59976	name="label_receive">Rebre</string>	3
5904	name="label_receive">Receber</string>	6
20826	name="label_receive">Receita</string>	14
4407	name="label_receive">Receive</string>	97
10799	name="label_receive">Recevoir</string>	3
15803	name="label_receive">Recibir</string>	13
11513	name="label_receive">Reu</string>	11
29478	name="label_receive">Ricevere</string>	2
56455	name="label_receive">Ta	2
12905	name="label_recommend_app">	13
22703	name="label_recommend_app">Consigliala	7
22459	name="label_recommend_app">Im	5
54675	name="label_recommend_app">Paly	6
22585	name="label_recommend_app">Play	7
10420	name="label_recommend_app">Recomendado	17
10762	name="label_recommend_app">Recomendar	11
10395	name="label_recommend_app">Recommander	5
11594	name="label_recommend_app">Recommend	37
55851	name="label_recommend_app">Rekommendera	2
17919	name="label_recurring_transaction">	25
6239	name="label_recurring_transaction"></string>	52
55583	name="label_recurring_transaction"></string>+	1
22989	name="label_recurring_transaction">Agendadas</string>	10
21175	name="label_recurring_transaction">Gjentakelse</string>	13
16777	name="label_recurring_transaction">Herhaling</string>	15
14760	name="label_recurring_transaction">Periodicitat</string>	15
22595	name="label_recurring_transaction">Perulangan</string>	7
15043	name="label_recurring_transaction">Planlagte</string>	13
17821	name="label_recurring_transaction">Powtarzajca	15
15944	name="label_recurring_transaction">Rcurrence</string>	18
20227	name="label_recurring_transaction">Recorrente</string>	26
5561	name="label_recurring_transaction">Recorrncia</string>	6
4834	name="label_recurring_transaction">Recurrence</string>	121
15426	name="label_recurring_transaction">Recurrencia</string>	19
16306	name="label_recurring_transaction">Ricorrenza</string>	13
22643	name="label_recurring_transaction">Ripetizione</string>	8
22058	name="label_recurring_transaction">Wiederholung</string>	10
4300	name="label_recurring_transaction">Wiederkehr</string>	12
56419	name="label_recurring_transaction">terkommande</string>	2
11087	name="label_repeats"></string>	39
21557	name="label_repeats">Gjentar</string>	8
15026	name="label_repeats">Gjentas</string>	13
16779	name="label_repeats">Herhalingen</string>	5
10275	name="label_repeats">Mengulangi</string>	5
17584	name="label_repeats">Powtarzaj</string>	11
6152	name="label_repeats">Repeats</string>	105
20648	name="label_repeats">Repeti&#231	11
5630	name="label_repeats">Repeties</string>	6
29703	name="label_repeats">Repetio</string>	9
15631	name="label_repeats">Repetir</string>	12
29214	name="label_repeats">Ripetizioni</string>	4
10558	name="label_repeats">Rptitions</string>	13
29622	name="label_repeats">Se	3
14874	name="label_repeats">Wiederholungen</string>	11
17906	name="label_report_currency">	25
10369	name="label_report_currency"></string>	22
20782	name="label_report_currency">Escolha	16
16871	name="label_report_currency">Munteenheid	13
29627	name="label_report_currency">Pilih	5
29519	name="label_report_currency">Selecciona	5
2232	name="label_report_currency">Seleccionar	14
6358	name="label_report_currency">Selecionar	11
2816	name="label_report_currency">Select	97
29197	name="label_report_currency">Seleziona	6
11707	name="label_report_currency">Slectionnez	18
14954	name="label_report_currency">Velg	22
29506	name="label_report_currency">Whlen	6
17486	name="label_report_currency">Wybierz	13
17875	name="label_report_period">:</string>	26
12541	name="label_report_period"></string>	12
17360	name="label_report_period">Okres:</string>	14
59501	name="label_report_period">Per&#2337	6
2675	name="label_report_period">Period:</string>	96
16892	name="label_report_period">Periode:</string>	18
2528	name="label_report_period">Periodo:</string>	18
14735	name="label_report_period">Perode:</string>	7
23016	name="label_report_period">Perodo:</string>	21
16297	name="label_report_period">Priode:</string>	11
22200	name="label_report_period">Zeitraum:</string>	8
17960	name="label_save_template">	12
11682	name="label_save_template"></string>	23
59254	name="label_save_template">Als	4
62500	name="label_save_template">Desa	3
15363	name="label_save_template">Guardar	24
15195	name="label_save_template">Lagre	17
16506	name="label_save_template">Opslaan	3
29324	name="label_save_template">Salva	5
5015	name="label_save_template">Salvar	6
16210	name="label_save_template">Sauvegarder	5
3183	name="label_save_template">Save	81
62715	name="label_save_template">Simpan	3
56330	name="label_save_template">Spara	2
17451	name="label_save_template">Zapisz	9
22504	name="label_scheduled_action_ended">"	6
22634	name="label_scheduled_action_ended">",	16
17942	name="label_scheduled_action_ended">".	10
21344	name="label_scheduled_action_ended">"Avsluttet.	10
2664	name="label_scheduled_action_ended">"Completada,&#250	7
15716	name="label_scheduled_action_ended">"Completada,ltima	9
2918	name="label_scheduled_action_ended">"Ended,last	116
59533	name="label_scheduled_action_ended">"Feito,execu&#231	6
23042	name="label_scheduled_action_ended">"Feito,execuo	13
54964	name="label_scheduled_action_ended">"Finalizado,ltimma	7
11879	name="label_scheduled_action_ended">"Fini,dernire	14
56452	name="label_scheduled_action_ended">"Slutade,senast	2
22525	name="label_scheduled_action_ended">"Terminata,ultima	6
17521	name="label_scheduled_action_ended">"Zakoczone,ostatnie	12
28218	name="label_select_bar_to_view_details">	12
17907	name="label_select_bar_to_view_details">,	8
12695	name="label_select_bar_to_view_details"></string>	14
29698	name="label_select_bar_to_view_details">Escolha	14
3701	name="label_select_bar_to_view_details">Seleccione	11
29598	name="label_select_bar_to_view_details">Seleccioneu	5
54911	name="label_select_bar_to_view_details">Selecione	7
3553	name="label_select_bar_to_view_details">Select	103
17125	name="label_select_bar_to_view_details">Selecteer	5
29443	name="label_select_bar_to_view_details">Seleziona	6
10771	name="label_select_bar_to_view_details">Slectionnez	5
21562	name="label_select_bar_to_view_details">Velg	8
29615	name="label_select_bar_to_view_details">Whlen	6
17459	name="label_select_bar_to_view_details">Wybie	10
55713	name="label_select_destination_after_export">	4
55641	name="label_select_destination_after_export"></string>	5
56125	name="label_select_destination_after_export">Escolha	2
56413	name="label_select_destination_after_export">Seleccione	2
55602	name="label_select_destination_after_export">Selecione	4
21552	name="label_select_destination_after_export">Select	16
55661	name="label_select_destination_after_export">Seleziona	4
56331	name="label_select_destination_after_export">Vlj	2
17915	name="label_select_pie_slice_to_see_details">	15
12687	name="label_select_pie_slice_to_see_details"></string>	18
23009	name="label_select_pie_slice_to_see_details">Escolha	20
21371	name="label_select_pie_slice_to_see_details">Merk	10
2661	name="label_select_pie_slice_to_see_details">Seleccione	13
55035	name="label_select_pie_slice_to_see_details">Selecione	7
3151	name="label_select_pie_slice_to_see_details">Select	98
17053	name="label_select_pie_slice_to_see_details">Selecteer	7
22730	name="label_select_pie_slice_to_see_details">Seleziona	8
16246	name="label_select_pie_slice_to_see_details">Slectionnez	11
22076	name="label_select_pie_slice_to_see_details">Tippe	8
56467	name="label_select_pie_slice_to_see_details">Vlj	2
17520	name="label_select_pie_slice_to_see_details">Wybie	10
22981	name="label_select_pie_slice_to_see_details">Wybierz	6
12022	name="label_sell"></string>	44
11443	name="label_sell">Jual</string>	7
22456	name="label_sell">Prodej</string>	5
15105	name="label_sell">Salg</string>	13
21194	name="label_sell">Selg</string>	10
4234	name="label_sell">Sell</string>	114
55955	name="label_sell">Slj</string>	2
17629	name="label_sell">Sprzedaj</string>	13
20837	name="label_sell">Venda</string>	19
4233	name="label_sell">Vender</string>	20
22755	name="label_sell">Vendi</string>	6
10496	name="label_sell">Vente</string>	15
15063	name="label_sell">Verkauf</string>	9
16636	name="label_sell">Verkopen</string>	7
9333	name="label_should_display_balance">Display	4
11501	name="label_spend"></string>	50
15265	name="label_spend">Ausgabe</string>	9
21453	name="label_spend">Bruke</string>	10
10789	name="label_spend">Dpense</string>	11
11031	name="label_spend">Dpenser</string>	7
15127	name="label_spend">Forbruk</string>	13
5049	name="label_spend">Gastar</string>	29
20417	name="label_spend">Gasto</string>	19
10635	name="label_spend">Mengeluarkan</string>	10
4644	name="label_spend">Spend</string>	116
56438	name="label_spend">Spendera</string>	2
22626	name="label_spend">Spendere</string>	8
17188	name="label_spend">Uitgeven</string>	7
17815	name="label_spend">Wydaj</string>	13
51303	name="label_split_account">Split	3
10999	name="label_split_count">%1$d	45
25892	name="label_split_count">Servidor	5
2833	name="label_sub_accounts">	178
28200	name="label_tap_to_create_schedule">	8
17941	name="label_tap_to_create_schedule">,	21
10702	name="label_tap_to_create_schedule"></string>	37
16196	name="label_tap_to_create_schedule">Appuyez	10
62782	name="label_tap_to_create_schedule">Ketuk	3
17559	name="label_tap_to_create_schedule">Stuknij	13
5831	name="label_tap_to_create_schedule">Tap	93
17052	name="label_tap_to_create_schedule">Tik	5
59987	name="label_tap_to_create_schedule">Toca	3
29430	name="label_tap_to_create_schedule">Tocca	10
4758	name="label_tap_to_create_schedule">Toque	41
55892	name="label_tap_to_create_schedule">Tryck	2
15199	name="label_tap_to_create_schedule">Trykk	27
28168	name="label_tap_to_create_schedule">Wiederholung	11
15196	name="label_timeanddate">	37
10759	name="label_timeanddate"></string>	24
16268	name="label_timeanddate">DATA	43
10347	name="label_timeanddate">DATE	101
14785	name="label_timeanddate">DATO	20
29729	name="label_timeanddate">DATUM	5
29673	name="label_timeanddate">DTUM	4
15031	name="label_timeanddate">Datum	28
15769	name="label_timeanddate">FECHA	20
10562	name="label_timeanddate">TANGGAL	5
17891	name="label_total_assets">	9
12203	name="label_total_assets"></string>	17
11375	name="label_total_assets">Actifs	10
3035	name="label_total_assets">Activo	9
59511	name="label_total_assets">Activos	11
29407	name="label_total_assets">Attivit	2
17694	name="label_total_assets">Suma	8
56063	name="label_total_assets">Summa	2
59247	name="label_total_assets">Summe	4
17120	name="label_total_assets">Totaal	8
3684	name="label_total_assets">Total	86
21205	name="label_total_assets">Totalt	6
17917	name="label_total_liabilities">	9
12266	name="label_total_liabilities"></string>	17
10701	name="label_total_liabilities">Dettes	10
3998	name="label_total_liabilities">Pasivo	9
29183	name="label_total_liabilities">Passivit	5
17478	name="label_total_liabilities">Suma	8
56137	name="label_total_liabilities">Summa	2
59326	name="label_total_liabilities">Summe	4
16787	name="label_total_liabilities">Totaal	8
2713	name="label_total_liabilities">Total	87
21198	name="label_total_liabilities">Totalt	6
12262	name="label_total_liabilities_and_equity"><![CDATA[	23
29272	name="label_total_liabilities_and_equity"><![CDATA[Passivit	4
29546	name="label_total_liabilities_and_equity"><![CDATA[Summe	6
17156	name="label_total_liabilities_and_equity"><![CDATA[Totaal	5
2851	name="label_total_liabilities_and_equity"><![CDATA[Total	98
21847	name="label_total_liabilities_and_equity"><![CDATA[Totalt	8
17612	name="label_total_liabilities_and_equity"><![CDATA[Zobowizania	10
29689	name="label_total_liabilities_and_equity"><![CDATA[]]></string>	10
16939	name="label_total_liabilities_and_equity">Totaal	7
64284	name="label_transaction_amount">-	2
10131	name="label_transaction_amount"></string>	80
54831	name="label_transaction_amount">Amount	4
1974	name="label_transaction_amount">Amount</string>	107
16689	name="label_transaction_amount">Bedrag</string>	15
23297	name="label_transaction_amount">Belopp</string>	7
14693	name="label_transaction_amount">Belp</string>	24
14943	name="label_transaction_amount">Betrag	19
52010	name="label_transaction_amount">Cantidad</string>	6
14668	name="label_transaction_amount">Import</string>	13
15525	name="label_transaction_amount">Importe</string>	19
16223	name="label_transaction_amount">Importo</string>	23
11264	name="label_transaction_amount">Jumlah</string>	7
17615	name="label_transaction_amount">Kwota</string>	13
10224	name="label_transaction_amount">Montant</string>	23
15642	name="label_transaction_amount">Monto</string>	7
22497	name="label_transaction_amount">Summa</string>	7
23081	name="label_transaction_amount">Tutar</string>	8
20083	name="label_transaction_amount">Valor</string>	25
22666	name="label_transaction_amount">sszeg</string>	8
22195	name="label_transaction_amount">stka</string>	7
22841	name="label_transaction_description">	16
10947	name="label_transaction_description"></string>	80
10544	name="label_transaction_description">Add	81
22972	name="label_transaction_description">Adicionar	12
14761	name="label_transaction_description">Afegiu	13
22498	name="label_transaction_description">Aggiungi	6
10359	name="label_transaction_description">Ajouter	7
15897	name="label_transaction_description">Descripci&#243	17
21865	name="label_transaction_description">Legg	10
23236	name="label_transaction_description">Lgg	9
22863	name="label_transaction_description">Lis	9
15499	name="label_transaction_description">Nota</string>	52
14676	name="label_transaction_description">Notat</string>	23
11432	name="label_transaction_description">Note</string>	50
14967	name="label_transaction_description">Notizen</string>	15
17849	name="label_transaction_description">Notka</string>	13
17088	name="label_transaction_description">Omschrijving</string>	12
26206	name="label_transaction_description">Opmerking</string>	14
22065	name="label_transaction_description">Pidat	7
10488	name="label_transaction_description">Tambah	7
11330	name="label_transaction_name"></string>	64
59328	name="label_transaction_name">Aklama</string>	4
29366	name="label_transaction_name">Apraksts</string>	2
15171	name="label_transaction_name">Beschreibung</string>	15
16572	name="label_transaction_name">Beschrijving</string>	11
14762	name="label_transaction_name">Beskrivelse</string>	20
57398	name="label_transaction_name">Beskrivning</string>	3
19723	name="label_transaction_name">Descri&#231	11
29144	name="label_transaction_name">Descrio</string>	12
15477	name="label_transaction_name">Descripci&#243	16
14829	name="label_transaction_name">Descripci</string>	9
15666	name="label_transaction_name">Descripcin</string>	6
575	name="label_transaction_name">Description</string>	106
16457	name="label_transaction_name">Descrizione</string>	19
10637	name="label_transaction_name">Deskripsi</string>	3
57349	name="label_transaction_name">Kuvaus</string>	3
64023	name="label_transaction_name">Lers</string>	4
54829	name="label_transaction_name">Name</string>	2
17415	name="label_transaction_name">Opis</string>	9
62713	name="label_transaction_name">Popis</string>	3
64273	name="label_transaction_name">Transaction	2
18282	name="label_transactions_total">	11
26634	name="label_transactions_total"></string>	14
28008	name="label_transactions_total">Somma	11
4884	name="label_transactions_total">Summe:</string>	15
28336	name="label_transactions_total">Totaalbedrag:</string>	3
26771	name="label_transactions_total">Total	17
23654	name="label_transactions_total">Total:</string>	19
28388	name="label_transactions_total">Totalt	9
14897	name="label_widget_configuration">	59
11840	name="label_widget_configuration"></string>	43
16915	name="label_widget_configuration">Account	21
20481	name="label_widget_configuration">Escolha	26
23228	name="label_widget_configuration">Hesap	8
5163	name="label_widget_configuration">Konto	35
10654	name="label_widget_configuration">Pilih	7
15972	name="label_widget_configuration">S&#233	16
3708	name="label_widget_configuration">Seleccionar	25
15456	name="label_widget_configuration">Seleccione	11
22223	name="label_widget_configuration">Seleccioneu	10
29103	name="label_widget_configuration">Selecionar	17
11175	name="label_widget_configuration">Select	104
29853	name="label_widget_configuration">Selectionnez	7
16209	name="label_widget_configuration">Seleziona	32
11952	name="label_widget_configuration">Slectionner	10
15057	name="label_widget_configuration">Velg	31
56000	name="label_widget_configuration">Vlj	2
22062	name="label_widget_configuration">Vybrat	5
17380	name="label_widget_configuration">Wybierz	13
11261	name="label_withdrawal"></string>	41
15189	name="label_withdrawal">Abhebung</string>	5
20505	name="label_withdrawal">Levantamento</string>	14
16952	name="label_withdrawal">Opname</string>	3
11389	name="label_withdrawal">Penarikan</string>	3
29318	name="label_withdrawal">Prelievo</string>	5
10483	name="label_withdrawal">Retrait</string>	11
4203	name="label_withdrawal">Sacar</string>	19
56208	name="label_withdrawal">Uttag</string>	2
15010	name="label_withdrawal">Uttak</string>	19
4276	name="label_withdrawal">Withdrawal</string>	93
17627	name="label_withdrawal">Wypata</string>	9
22559	name="last_export_time_never"></string>	10
23164	name="last_export_time_never"></string>+	1
56131	name="last_export_time_never">aldrig</string>	2
22505	name="last_export_time_never">jamais</string>	5
12426	name="last_export_time_never">mai</string>	7
12507	name="last_export_time_never">never</string>	29
22265	name="last_export_time_never">nunca</string>	13
19692	name="light_gray">#FFAAAAAA</color>	14
37019	name="listMode"	4
37324	name="listPopupWindowStyle"	4
37976	name="listPopupWindowStyle">@style/Widget.Sherlock.Light.ListPopupWindow</item>	5
37917	name="listPopupWindowStyle">@style/Widget.Sherlock.ListPopupWindow</item>	5
37495	name="listPreferredItemHeightSmall"	4
37232	name="listPreferredItemPaddingLeft"	4
37753	name="listPreferredItemPaddingRight"	4
37747	name="logo"	4
57659	name="menu_chart_report"></string>	4
13853	name="menu_chart_report">Chart	10
10924	name="menu_delete"></string>	50
19898	name="menu_delete">APAGAR</string>	15
15489	name="menu_delete">BORRAR</string>	13
15645	name="menu_delete">Borrar</string>	5
29138	name="menu_delete">DELETAR</string>	6
16319	name="menu_delete">DELETE</string>	24
11172	name="menu_delete">Delete</string>	67
16295	name="menu_delete">ELIMINA</string>	11
29337	name="menu_delete">Elimina</string>	2
56398	name="menu_delete">Excluir</string>	5
11813	name="menu_delete">Hapus</string>	3
5274	name="menu_delete">L&#246	12
14882	name="menu_delete">Lschen</string>	3
57324	name="menu_delete">Poista</string>	3
56244	name="menu_delete">Radera</string>	2
14768	name="menu_delete">SLETT</string>	12
16080	name="menu_delete">SUPPRIMER</string>	8
59324	name="menu_delete">Sil</string>	4
21713	name="menu_delete">Slett</string>	6
55535	name="menu_delete">Smazat</string>	5
14802	name="menu_delete">Suprimeix</string>	9
56088	name="menu_delete">Ta	5
17732	name="menu_delete">USU</string>	9
16811	name="menu_delete">Verwijderen</string>	11
12376	name="menu_duplicate_transaction"></string>	38
56218	name="menu_duplicate_transaction">Dublett</string>	2
22551	name="menu_duplicate_transaction">Duplica</string>	18
22436	name="menu_duplicate_transaction">Duplicar</string>	46
11689	name="menu_duplicate_transaction">Duplicate</string>	77
22903	name="menu_duplicate_transaction">Duplikuj</string>	8
10949	name="menu_duplicate_transaction">Dupliquer</string>	7
11596	name="menu_duplicate_transaction">Dupliser</string>	13
22239	name="menu_duplicate_transaction">Duplizieren</string>	7
23077	name="menu_duplicate_transaction">Kopieren</string>	20
12477	name="menu_export">	35
12491	name="menu_export">&#8230	27
11700	name="menu_export">...</string>	22
12636	name="menu_export">Dar	9
11274	name="menu_export">Ekspor&#8230	7
14842	name="menu_export">Eksport	18
12317	name="menu_export">Eksport...</string>	15
12183	name="menu_export">Eksportuj&#8230	8
17491	name="menu_export">Eksportuj</string>	11
16443	name="menu_export">Esporta	17
12351	name="menu_export">Esporta&#8230	7
12749	name="menu_export">Export	21
12003	name="menu_export">Export&#8230	69
10046	name="menu_export">Export</string>	22
12112	name="menu_export">Exporta&#8230	14
12485	name="menu_export">Exportar	35
12853	name="menu_export">Exportar&#8230	11
12574	name="menu_export">Exportar</string>	29
12276	name="menu_export">Exporter	24
12437	name="menu_export">Exportera&#8230	11
10407	name="menu_export">Exportovat&#8230	10
12856	name="menu_export">OFX	20
12791	name="menu_export">OFX-Datei	15
10532	name="menu_export">OFX</string>	29
12472	name="menu_export">Vie&#8230	8
52051	name="menu_export_ofx">	13
51984	name="menu_export_ofx">Eksport	9
33217	name="menu_export_ofx">Esporta	7
28919	name="menu_export_ofx">Export	14
29137	name="menu_export_ofx">Exportar	12
23365	name="menu_export_ofx">Exporter	14
26408	name="menu_export_ofx">OFX	8
54658	name="menu_export_ofx">OFX-Datei	13
28402	name="menu_export_ofx">OFX</string>	8
4437	name="menu_export_transactions">	49
11806	name="menu_export_transactions">&#8230	15
29340	name="menu_export_transactions">...</string>	8
18000	name="menu_export_transactions"></string>	13
5535	name="menu_export_transactions">Buchungen	19
12916	name="menu_export_transactions">Ekspor	8
17412	name="menu_export_transactions">Eksport	13
21529	name="menu_export_transactions">Eksporter	11
14885	name="menu_export_transactions">Eksportere	13
16207	name="menu_export_transactions">Esporta	17
4154	name="menu_export_transactions">Export	122
29614	name="menu_export_transactions">Exporta	10
5334	name="menu_export_transactions">Exportar	45
16008	name="menu_export_transactions">Exporter	13
16880	name="menu_export_transactions">Transacties	13
17900	name="menu_group_by">	15
12977	name="menu_group_by"></string>	18
22407	name="menu_group_by">Agrupa	7
3843	name="menu_group_by">Agrupar	26
16884	name="menu_group_by">Groeperen	12
3142	name="menu_group_by">Group	98
16397	name="menu_group_by">Grouper	11
56254	name="menu_group_by">Gruppera	2
21501	name="menu_group_by">Gruppere	10
22093	name="menu_group_by">Gruppieren	8
17528	name="menu_group_by">Grupuj	12
22761	name="menu_group_by">Raggruppa	9
12148	name="menu_group_by_month"></string>	34
59490	name="menu_group_by_month">M&#234	6
16674	name="menu_group_by_month">Maand</string>	12
2871	name="menu_group_by_month">Mes</string>	22
22509	name="menu_group_by_month">Mese</string>	11
17548	name="menu_group_by_month">Miesicu</string>	12
63899	name="menu_group_by_month">Miesicu</string>-	1
56188	name="menu_group_by_month">Mnad</string>	2
21934	name="menu_group_by_month">Mned</string>	10
16154	name="menu_group_by_month">Mois</string>	11
22302	name="menu_group_by_month">Monat</string>	8
3841	name="menu_group_by_month">Month</string>	99
22957	name="menu_group_by_month">Ms</string>	13
12801	name="menu_group_by_quarter"></string>	34
21545	name="menu_group_by_quarter">Kvartal</string>	12
16835	name="menu_group_by_quarter">Kwartaal</string>	12
17410	name="menu_group_by_quarter">Kwartale</string>	12
22048	name="menu_group_by_quarter">Quartal</string>	8
2927	name="menu_group_by_quarter">Quarter</string>	98
3586	name="menu_group_by_quarter">Trimestre</string>	40
12699	name="menu_group_by_year"></string>	23
3078	name="menu_group_by_year">A&#241	10
10804	name="menu_group_by_year">Anne</string>	13
29295	name="menu_group_by_year">Anno</string>	7
54955	name="menu_group_by_year">Ano</string>	14
14805	name="menu_group_by_year">Any</string>	6
15331	name="menu_group_by_year">Ao</string>	8
16562	name="menu_group_by_year">Jaar</string>	11
59277	name="menu_group_by_year">Jahr</string>	4
17832	name="menu_group_by_year">Roku</string>	13
2505	name="menu_group_by_year">Year</string>	83
21551	name="menu_group_by_year">r</string>	8
17970	name="menu_group_smaller_slices">	34
11859	name="menu_group_smaller_slices"></string>	30
3101	name="menu_group_smaller_slices">Agrupar	42
17010	name="menu_group_smaller_slices">Groepeer	7
5730	name="menu_group_smaller_slices">Group	103
10368	name="menu_group_smaller_slices">Groupe	18
15067	name="menu_group_smaller_slices">Grupper	24
55861	name="menu_group_smaller_slices">Gruppera	2
17514	name="menu_group_smaller_slices">Grupuj	18
22290	name="menu_group_smaller_slices">Kleine	8
22611	name="menu_group_smaller_slices">Raggruppa	6
14901	name="menu_import_accounts">	33
4025	name="menu_import_accounts">GnuCash	22
5454	name="menu_import_accounts">GnuCash-Konten	14
11023	name="menu_import_accounts">GnuCash</string>	33
11470	name="menu_import_accounts">Impor	5
6887	name="menu_import_accounts">Import	100
16352	name="menu_import_accounts">Importa	25
15533	name="menu_import_accounts">Importar	35
15961	name="menu_import_accounts">Importer	19
7445	name="menu_import_accounts">Importere	21
29594	name="menu_import_accounts">Importovat	5
17262	name="menu_import_accounts">Importuj	11
27963	name="menu_item_recurring_transactions">	6
28106	name="menu_item_recurring_transactions"></string>	6
28137	name="menu_item_recurring_transactions">Gjentakende	4
6442	name="menu_item_recurring_transactions">Recurring	21
18297	name="menu_item_recurring_transactions">Transacciones	8
23328	name="menu_item_recurring_transactions">Transactions	5
27915	name="menu_item_recurring_transactions">Transazioni	6
7142	name="menu_item_recurring_transactions">Wiederkehrende	8
63372	name="menu_item_scheduled_transactions"></string>	4
63293	name="menu_item_scheduled_transactions">Eingeplante	3
63286	name="menu_item_scheduled_transactions">Scheduled	4
28408	name="menu_manage_books">	7
64087	name="menu_manage_books">&#8230	2
12866	name="menu_manage_books"></string>	11
62888	name="menu_manage_books">Administar	3
11281	name="menu_manage_books">Administrar	8
25622	name="menu_manage_books">Bcher	8
11923	name="menu_manage_books">Gerir	8
59983	name="menu_manage_books">Gestiona	3
64056	name="menu_manage_books">Gestione	2
11191	name="menu_manage_books">Grer	3
56171	name="menu_manage_books">Hantera	2
10441	name="menu_manage_books">Manage	36
10565	name="menu_move"></string>	79
23337	name="menu_move">DEPLACER</string>	13
10522	name="menu_move">DPLACER</string>	20
14682	name="menu_move">FLYTT</string>	33
29707	name="menu_move">FLYTTA</string>	5
29603	name="menu_move">MOU</string>	8
10786	name="menu_move">MOVE</string>	100
15433	name="menu_move">MOVER</string>	47
15492	name="menu_move">Mover</string>	14
29511	name="menu_move">PESUNOUT</string>	5
11521	name="menu_move">PINDAHKAN</string>	5
17650	name="menu_move">PRZENIE</string>	16
29669	name="menu_move">SIIRR</string>	5
16430	name="menu_move">SPOSTA</string>	26
29709	name="menu_move">TAI</string>	6
17160	name="menu_move">Verplaatsen</string>	21
15151	name="menu_move">Verschieben</string>	14
22518	name="menu_move_transaction">&#8230	10
12877	name="menu_move_transaction">...</string>	29
34073	name="menu_move_transaction"></string>	10
22270	name="menu_move_transaction">Bewegen&#8230	12
11071	name="menu_move_transaction">Dplacer&#8230	7
10418	name="menu_move_transaction">Flytt&#8230	13
56374	name="menu_move_transaction">Flytta&#8230	2
10843	name="menu_move_transaction">Move&#8230	51
23171	name="menu_move_transaction">Move...</string>	36
29746	name="menu_move_transaction">Move</string>	4
22458	name="menu_move_transaction">Mover&#8230	21
34045	name="menu_move_transaction">Mover...</string>	23
58652	name="menu_move_transaction">Przenie...</string>	4
22842	name="menu_move_transaction">Sposta&#8230	6
29325	name="menu_move_transaction">Sposta...</string>	12
33893	name="menu_move_transaction">Verschieben</string>	10
17892	name="menu_order_by_size">	27
10958	name="menu_order_by_size"></string>	39
22461	name="menu_order_by_size">Nach	8
16883	name="menu_order_by_size">Op	7
22363	name="menu_order_by_size">Ordena	7
2251	name="menu_order_by_size">Ordenar	40
5977	name="menu_order_by_size">Order	111
22767	name="menu_order_by_size">Ordina	11
56032	name="menu_order_by_size">Ordna	2
14887	name="menu_order_by_size">Sorter	24
17560	name="menu_order_by_size">Sortuj	20
10335	name="menu_order_by_size">Tri	20
22536	name="menu_order_by_size">Urut	7
55585	name="menu_rename"></string>	2
55926	name="menu_rename">Byt	2
56346	name="menu_rename">Cambiar	2
55879	name="menu_rename">Mudar	2
21416	name="menu_rename">Rename</string>	21
55699	name="menu_rename">Renomear</string>	2
55669	name="menu_rename">Rinomina</string>	2
5400	name="menu_scheduled_transactions">	41
11950	name="menu_scheduled_transactions"></string>	37
25517	name="menu_scheduled_transactions">Assentaments	11
5688	name="menu_scheduled_transactions">Eingeplante	16
25584	name="menu_scheduled_transactions">Geplante	9
15262	name="menu_scheduled_transactions">Planlagte	27
4606	name="menu_scheduled_transactions">Scheduled	101
20244	name="menu_scheduled_transactions">Transa&#231	11
3188	name="menu_scheduled_transactions">Transacciones	23
10173	name="menu_scheduled_transactions">Transactions	23
6237	name="menu_scheduled_transactions">Transaes	20
29658	name="menu_scheduled_transactions">Transaksi	5
25940	name="menu_scheduled_transactions">Transazioni	14
17093	name="menu_scheduled_transactions">Vaste	20
17865	name="menu_scheduled_transactions">Zaplanowane	14
4337	name="menu_search_accounts"></string>	62
23071	name="menu_search_accounts">Arama</string>	8
15457	name="menu_search_accounts">Buscar</string>	15
12971	name="menu_search_accounts">Cari</string>	7
14720	name="menu_search_accounts">Cerca</string>	27
5032	name="menu_search_accounts">Pesquisar</string>	6
21156	name="menu_search_accounts">Procurar</string>	21
16054	name="menu_search_accounts">Rechercher</string>	16
4598	name="menu_search_accounts">Search</string>	114
15249	name="menu_search_accounts">Sk</string>	27
4510	name="menu_search_accounts">Suchen</string>	13
17833	name="menu_search_accounts">Szukaj</string>	13
22256	name="menu_search_accounts">Vyhledat</string>	7
17142	name="menu_search_accounts">Zoeken</string>	13
12737	name="menu_show_compact_view">	19
12984	name="menu_show_compact_view"></string>	24
11539	name="menu_show_compact_view">Compact	45
55924	name="menu_show_compact_view">Kompakt	2
12369	name="menu_show_compact_view">Kompakte	8
10304	name="menu_show_compact_view">Vista	25
11491	name="menu_show_compact_view">Visualizao	15
12388	name="menu_show_compact_view">Visualizzazione	16
12066	name="menu_show_compact_view">Vue	10
28535	name="menu_title_enable_sync">	7
12960	name="menu_title_enable_sync"></string>	14
10195	name="menu_title_enable_sync">Activer	3
63036	name="menu_title_enable_sync">Aktiver	3
56115	name="menu_title_enable_sync">Aktivera	2
11029	name="menu_title_enable_sync">Ativar	6
64060	name="menu_title_enable_sync">Attiva	2
11671	name="menu_title_enable_sync">Enable	38
60068	name="menu_title_enable_sync">Habilita	3
10695	name="menu_title_enable_sync">Habilitar	8
64080	name="menu_title_enable_sync">Permitir	2
25471	name="menu_title_enable_sync">Sync	3
10758	name="menu_title_favorite"></string>	50
11301	name="menu_title_favorite">Favori</string>	13
16940	name="menu_title_favorite">Favoriet</string>	7
21989	name="menu_title_favorite">Favorit</string>	17
6027	name="menu_title_favorite">Favorite</string>	102
15594	name="menu_title_favorite">Favorito</string>	30
5606	name="menu_title_favorite">Favoritos</string>	6
14867	name="menu_title_favorite">Favoritt</string>	21
22247	name="menu_title_favorite">Favourite</string>	8
22485	name="menu_title_favorite">Preferit</string>	7
22530	name="menu_title_favorite">Preferito</string>	9
17273	name="menu_title_favorite">Ulubione</string>	15
28412	name="menu_title_new_book">	7
12257	name="menu_title_new_book"></string>	14
25739	name="menu_title_new_book">Neues	3
10851	name="menu_title_new_book">New	38
60014	name="menu_title_new_book">Nou	3
10367	name="menu_title_new_book">Nouveau	3
11845	name="menu_title_new_book">Novo	5
10591	name="menu_title_new_book">Nuevo	8
64065	name="menu_title_new_book">Nuovo	2
56086	name="menu_title_new_book">Ny	5
17961	name="menu_toggle_average_lines">	22
25261	name="menu_toggle_average_lines">/	9
10620	name="menu_toggle_average_lines"></string>	25
24748	name="menu_toggle_average_lines">Activar	6
11695	name="menu_toggle_average_lines">Afficher	7
24876	name="menu_toggle_average_lines">Afficher/masquer	5
20157	name="menu_toggle_average_lines">Alterna	18
5328	name="menu_toggle_average_lines">Ativar	6
22155	name="menu_toggle_average_lines">Durchschnitt	8
16829	name="menu_toggle_average_lines">Gemiddelde	7
2967	name="menu_toggle_average_lines">Mostar	13
22865	name="menu_toggle_average_lines">Mostra	6
23004	name="menu_toggle_average_lines">Poka	6
25092	name="menu_toggle_average_lines">Przecz	9
3525	name="menu_toggle_average_lines">Show	108
22578	name="menu_toggle_average_lines">Tampilkan	7
5991	name="menu_toggle_average_lines">Toggle	21
25239	name="menu_toggle_average_lines">Vis/skjul	4
55936	name="menu_toggle_average_lines">Visa	2
21721	name="menu_toggle_average_lines">Viser	10
17933	name="menu_toggle_labels">	27
25315	name="menu_toggle_labels">/	9
10825	name="menu_toggle_labels"></string>	29
24815	name="menu_toggle_labels">Activar	6
11372	name="menu_toggle_labels">Afficher	7
24940	name="menu_toggle_labels">Afficher/masquer	5
20930	name="menu_toggle_labels">Alterna	18
6299	name="menu_toggle_labels">Ativar	6
22277	name="menu_toggle_labels">Beschreibung	8
22394	name="menu_toggle_labels">Mostra	13
3881	name="menu_toggle_labels">Mostrar	13
22943	name="menu_toggle_labels">Poka	6
25362	name="menu_toggle_labels">Przecz	9
3114	name="menu_toggle_labels">Show	105
22554	name="menu_toggle_labels">Tampilkan	7
4324	name="menu_toggle_labels">Toggle	26
16621	name="menu_toggle_labels">Toon	7
21900	name="menu_toggle_labels">Vis	10
25201	name="menu_toggle_labels">Vis/skjul	4
56286	name="menu_toggle_labels">Visa	2
17895	name="menu_toggle_legend">	27
25045	name="menu_toggle_legend">/	9
10124	name="menu_toggle_legend"></string>	29
24645	name="menu_toggle_legend">Activar	6
10218	name="menu_toggle_legend">Afficher	7
24895	name="menu_toggle_legend">Afficher/masquer	5
21044	name="menu_toggle_legend">Alterna	18
4475	name="menu_toggle_legend">Ativar	6
22370	name="menu_toggle_legend">Legende	8
22390	name="menu_toggle_legend">Mostra	15
2199	name="menu_toggle_legend">Mostrar	13
23021	name="menu_toggle_legend">Poka	6
25029	name="menu_toggle_legend">Przecz	9
2944	name="menu_toggle_legend">Show	106
22720	name="menu_toggle_legend">Tampilkan	7
4874	name="menu_toggle_legend">Toggle	32
16887	name="menu_toggle_legend">Toon	7
21277	name="menu_toggle_legend">Vis	10
25462	name="menu_toggle_legend">Vis/skjul	4
56378	name="menu_toggle_legend">Visa	2
17988	name="menu_toggle_percentage_mode">	27
25276	name="menu_toggle_percentage_mode">/	9
11873	name="menu_toggle_percentage_mode"></string>	25
24865	name="menu_toggle_percentage_mode">Activar	6
24966	name="menu_toggle_percentage_mode">Afficher/masquer	5
20174	name="menu_toggle_percentage_mode">Alterna	18
6317	name="menu_toggle_percentage_mode">Ativar	6
11595	name="menu_toggle_percentage_mode">Montrer	10
22263	name="menu_toggle_percentage_mode">Mostra	13
3155	name="menu_toggle_percentage_mode">Mostrar	13
17166	name="menu_toggle_percentage_mode">Percentage	7
22901	name="menu_toggle_percentage_mode">Poka	6
22257	name="menu_toggle_percentage_mode">Prozent	8
25078	name="menu_toggle_percentage_mode">Przecz	9
3196	name="menu_toggle_percentage_mode">Show	102
22785	name="menu_toggle_percentage_mode">Tampilkan	7
5051	name="menu_toggle_percentage_mode">Toggle	22
21790	name="menu_toggle_percentage_mode">Vis	10
25105	name="menu_toggle_percentage_mode">Vis/skjul	4
55882	name="menu_toggle_percentage_mode">Visa	2
27983	name="message_confirm_create_default_accounts_first_run">	7
18182	name="message_confirm_create_default_accounts_first_run">&#161	8
27942	name="message_confirm_create_default_accounts_first_run">Benvenuti	7
18180	name="message_confirm_create_default_accounts_first_run">Bienvenido	5
23586	name="message_confirm_create_default_accounts_first_run">Bienvenue	7
28235	name="message_confirm_create_default_accounts_first_run">GnuCash	8
28108	name="message_confirm_create_default_accounts_first_run">Velkommen	5
18315	name="message_confirm_create_default_accounts_first_run">Welcome	20
27920	name="message_confirm_create_default_accounts_setting">	11
27985	name="message_confirm_create_default_accounts_setting">I	7
24006	name="message_confirm_create_default_accounts_setting">Les	6
18273	name="message_confirm_create_default_accounts_setting">New	20
28115	name="message_confirm_create_default_accounts_setting">Nye	5
18352	name="message_confirm_create_default_accounts_setting">Se	8
6499	name="message_create_default_accounts_confirmation">New	6
12750	name="msg_all_book_data_will_be_deleted">	10
64114	name="msg_all_book_data_will_be_deleted">!</string>	2
28276	name="msg_all_book_data_will_be_deleted"></string>	11
11850	name="msg_all_book_data_will_be_deleted">All	38
56361	name="msg_all_book_data_will_be_deleted">Alla	2
25653	name="msg_all_book_data_will_be_deleted">Alle	6
60017	name="msg_all_book_data_will_be_deleted">S\'eliminaran	3
10626	name="msg_all_book_data_will_be_deleted">Se	8
11808	name="msg_all_book_data_will_be_deleted">Todas	11
10497	name="msg_all_book_data_will_be_deleted">Tous	3
64052	name="msg_all_book_data_will_be_deleted">Tutti	2
17984	name="msg_confirm_create_default_accounts_first_run">	30
2435	name="msg_confirm_create_default_accounts_first_run">&#161	12
12046	name="msg_confirm_create_default_accounts_first_run">Bem	25
16376	name="msg_confirm_create_default_accounts_first_run">Benvenuti	24
15751	name="msg_confirm_create_default_accounts_first_run">Bienvenido	13
10980	name="msg_confirm_create_default_accounts_first_run">Bienvenue	18
5186	name="msg_confirm_create_default_accounts_first_run">GnuCash	48
29648	name="msg_confirm_create_default_accounts_first_run">Selamat	5
15017	name="msg_confirm_create_default_accounts_first_run">Velkommen	29
6153	name="msg_confirm_create_default_accounts_first_run">Welcome	95
16861	name="msg_confirm_create_default_accounts_first_run">Welkom	15
5741	name="msg_confirm_create_default_accounts_first_run">Willkommen	19
17249	name="msg_confirm_create_default_accounts_first_run">Witamy	14
5555	name="msg_confirm_create_default_accounts_setting">	44
10798	name="msg_confirm_create_default_accounts_setting">A	45
3374	name="msg_confirm_create_default_accounts_setting">All	78
16586	name="msg_confirm_create_default_accounts_setting">Alle	12
22190	name="msg_confirm_create_default_accounts_setting">Ein	7
22961	name="msg_confirm_create_default_accounts_setting">En	12
25601	name="msg_confirm_create_default_accounts_setting">Es	11
54802	name="msg_confirm_create_default_accounts_setting">I	5
11356	name="msg_confirm_create_default_accounts_setting">Ir	13
26666	name="msg_confirm_create_default_accounts_setting">Les	7
4927	name="msg_confirm_create_default_accounts_setting">Neue	6
5731	name="msg_confirm_create_default_accounts_setting">New	17
26197	name="msg_confirm_create_default_accounts_setting">Nieuwe	6
59610	name="msg_confirm_create_default_accounts_setting">Nye	3
22114	name="msg_confirm_create_default_accounts_setting">Se	15
2220	name="msg_confirm_create_default_accounts_setting">Todas	29
26134	name="msg_confirm_create_default_accounts_setting">Tutti	9
23031	name="msg_confirm_create_default_accounts_setting">Um	7
11901	name="msg_confirm_create_default_accounts_setting">Un	7
22744	name="msg_confirm_create_default_accounts_setting">Verr	7
17563	name="msg_confirm_create_default_accounts_setting">Wszystkie	12
22773	name="msg_confirm_create_default_accounts_setting">\n\n!</string>	7
11176	name="msg_confirm_create_default_accounts_setting">\n\n</string>	22
25902	name="msg_confirm_create_default_accounts_setting">\n\n?</string>	5
55766	name="msg_confirm_restore_backup_into_new_book">	2
55626	name="msg_confirm_restore_backup_into_new_book"></string>	2
55605	name="msg_confirm_restore_backup_into_new_book">?</string>	2
21303	name="msg_confirm_restore_backup_into_new_book">A	17
56368	name="msg_confirm_restore_backup_into_new_book">En	2
56138	name="msg_confirm_restore_backup_into_new_book">Se	2
56437	name="msg_confirm_restore_backup_into_new_book">Ser	2
55625	name="msg_confirm_restore_backup_into_new_book">Um	2
55747	name="msg_confirm_restore_backup_into_new_book">Verr	2
15056	name="msg_delete_all_transactions_confirmation">	23
15872	name="msg_delete_all_transactions_confirmation">&#191	10
11985	name="msg_delete_all_transactions_confirmation"></string>	18
11404	name="msg_delete_all_transactions_confirmation">Apakah	3
11059	name="msg_delete_all_transactions_confirmation">Are	74
15703	name="msg_delete_all_transactions_confirmation">Borrar	5
17450	name="msg_delete_all_transactions_confirmation">Czy	9
16310	name="msg_delete_all_transactions_confirmation">Eliminare	9
15134	name="msg_delete_all_transactions_confirmation">Er	18
59978	name="msg_delete_all_transactions_confirmation">Esteu	3
27038	name="msg_delete_all_transactions_confirmation">Etes	4
55497	name="msg_delete_all_transactions_confirmation">Opravdu	2
21121	name="msg_delete_all_transactions_confirmation">Tem	12
62374	name="msg_delete_all_transactions_confirmation">Voc	5
16888	name="msg_delete_all_transactions_confirmation">Weet	10
15048	name="msg_delete_all_transactions_confirmation">Wollen	5
56020	name="msg_delete_all_transactions_confirmation">r	2
16011	name="msg_delete_all_transactions_confirmation">tes	10
15059	name="msg_delete_transaction_confirmation">	25
15633	name="msg_delete_transaction_confirmation">&#191	10
10703	name="msg_delete_transaction_confirmation"></string>	18
11123	name="msg_delete_transaction_confirmation">Apakah	3
11909	name="msg_delete_transaction_confirmation">Are	70
15299	name="msg_delete_transaction_confirmation">Borrar	5
17428	name="msg_delete_transaction_confirmation">Czy	9
16106	name="msg_delete_transaction_confirmation">Eliminare	9
15169	name="msg_delete_transaction_confirmation">Er	18
60092	name="msg_delete_transaction_confirmation">Esteu	3
26763	name="msg_delete_transaction_confirmation">Etes	4
55566	name="msg_delete_transaction_confirmation">Opravdu	2
20427	name="msg_delete_transaction_confirmation">Tem	12
52041	name="msg_delete_transaction_confirmation">Voc	8
16613	name="msg_delete_transaction_confirmation">Weet	10
14883	name="msg_delete_transaction_confirmation">Wollen	5
55885	name="msg_delete_transaction_confirmation">r	2
16045	name="msg_delete_transaction_confirmation">tes	10
17985	name="msg_enable_crashlytics">	32
22772	name="msg_enable_crashlytics"></string>	14
3469	name="msg_enable_crashlytics">Activar	22
10950	name="msg_enable_crashlytics">Activer	11
14786	name="msg_enable_crashlytics">Automatically	78
25320	name="msg_enable_crashlytics">By	3
5229	name="msg_enable_crashlytics">Enable	67
11637	name="msg_enable_crashlytics">Envoyer	7
4756	name="msg_enable_crashlytics">Habilitar	6
22812	name="msg_enable_crashlytics">Invia	6
22742	name="msg_enable_crashlytics">Mengirim	7
20882	name="msg_enable_crashlytics">Permite	21
21850	name="msg_enable_crashlytics">Send	16
56349	name="msg_enable_crashlytics">Skicka	2
14909	name="msg_enable_crashlytics">Skru	14
17371	name="msg_enable_crashlytics">Wcz	23
55793	name="msg_no_backups_to_restore_from">	2
55743	name="msg_no_backups_to_restore_from"></string>	2
56436	name="msg_no_backups_to_restore_from">Det	2
55758	name="msg_no_backups_to_restore_from">No	4
55797	name="msg_no_backups_to_restore_from">Non	2
21858	name="msg_no_backups_to_restore_from">There	19
17904	name="msg_provide_exchange_rate">	14
12418	name="msg_provide_exchange_rate"></string>	9
17633	name="msg_provide_exchange_rate">Aby	10
59515	name="msg_provide_exchange_rate">Forne&#231	6
36555	name="msg_provide_exchange_rate">Fornea	16
29418	name="msg_provide_exchange_rate">Fornisci	2
11713	name="msg_provide_exchange_rate">Fournissez	10
56360	name="msg_provide_exchange_rate">Ge	2
17054	name="msg_provide_exchange_rate">Geeft	3
21454	name="msg_provide_exchange_rate">Oppgi	6
2844	name="msg_provide_exchange_rate">Proporcione	9
3868	name="msg_provide_exchange_rate">Provide	80
59336	name="msg_provide_exchange_rate">Whlen	4
12669	name="msg_wizard_welcome_page">	18
17980	name="msg_wizard_welcome_page">,	6
3310	name="msg_wizard_welcome_page">Antes	22
16488	name="msg_wizard_welcome_page">Avant	7
2461	name="msg_wizard_welcome_page">Before	90
59260	name="msg_wizard_welcome_page">Bevor	4
21664	name="msg_wizard_welcome_page">Fr	6
56291	name="msg_wizard_welcome_page">Innan	2
29323	name="msg_wizard_welcome_page">Prima	4
16693	name="msg_wizard_welcome_page">Voordat	3
17767	name="msg_wizard_welcome_page">Zanim	8
64028	name="msg_wizard_welcome_page">\n\n\n</string>	2
29908	name="nav_drawer_entries">	5
12568	name="nav_menu_budgets"></string>	19
29667	name="nav_menu_budgets">Bilanci</string>	4
11091	name="nav_menu_budgets">Budgets</string>	52
11128	name="nav_menu_budgets">Budsjetter</string>	11
29710	name="nav_menu_budgets">Oramentos</string>	10
28222	name="nav_menu_budgets">Presupuesto</string>	7
29632	name="nav_menu_budgets">Presupuestos</string>	5
22632	name="nav_menu_export">&#8230	19
12993	name="nav_menu_export">...</string>	44
22681	name="nav_menu_export">Ekspor&#8230	7
17256	name="nav_menu_export">Eksport&#8230	23
54921	name="nav_menu_export">Eksport...</string>	11
17295	name="nav_menu_export">Eksport</string>	8
14869	name="nav_menu_export">Eksporter...</string>	11
22756	name="nav_menu_export">Esporta&#8230	10
14757	name="nav_menu_export">Export&#8230	75
5272	name="nav_menu_export">Export...</string>	55
15092	name="nav_menu_export">Export</string>	26
22072	name="nav_menu_export">Exporta&#8230	12
15495	name="nav_menu_export">Exportar&#8230	36
5776	name="nav_menu_export">Exportar...</string>	17
16055	name="nav_menu_export">Exportar</string>	12
56156	name="nav_menu_export">Exportera&#8230	2
22020	name="nav_menu_export">Exportieren&#8230	15
11039	name="nav_menu_favorites"></string>	46
17141	name="nav_menu_favorites">Favorieten</string>	9
16205	name="nav_menu_favorites">Favoris</string>	14
22633	name="nav_menu_favorites">Favorit</string>	7
22218	name="nav_menu_favorites">Favoriten</string>	15
56421	name="nav_menu_favorites">Favoriter</string>	2
5161	name="nav_menu_favorites">Favorites</string>	101
4907	name="nav_menu_favorites">Favoritos</string>	56
14914	name="nav_menu_favorites">Favoritter</string>	32
22213	name="nav_menu_favorites">Favourites</string>	10
22710	name="nav_menu_favorites">Preferiti</string>	15
14698	name="nav_menu_favorites">Preferits</string>	15
17301	name="nav_menu_favorites">Ulubione</string>	20
17965	name="nav_menu_help"><![CDATA[	24
16266	name="nav_menu_help"><![CDATA[Aide	11
22665	name="nav_menu_help"><![CDATA[Aiuto	8
23015	name="nav_menu_help"><![CDATA[Ajuda	24
2231	name="nav_menu_help"><![CDATA[Ayuda	13
3636	name="nav_menu_help"><![CDATA[Help	102
22447	name="nav_menu_help"><![CDATA[Hilfe	8
21516	name="nav_menu_help"><![CDATA[Hjelp	10
56239	name="nav_menu_help"><![CDATA[Hjlp	2
17165	name="nav_menu_help"><![CDATA[Hulp	7
17400	name="nav_menu_help"><![CDATA[Pomoc	14
12533	name="nav_menu_help"><![CDATA[]]></string>	18
22764	name="nav_menu_open">&#8230	15
11245	name="nav_menu_open">...</string>	41
15362	name="nav_menu_open">Abrir&#8230	22
5986	name="nav_menu_open">Abrir...</string>	17
16024	name="nav_menu_open">Abrir</string>	12
22548	name="nav_menu_open">Apri&#8230	6
22819	name="nav_menu_open">Buka&#8230	7
22008	name="nav_menu_open">Obre&#8230	10
14851	name="nav_menu_open">Open&#8230	68
4433	name="nav_menu_open">Open...</string>	49
15162	name="nav_menu_open">Open</string>	20
17228	name="nav_menu_open">Otwrz&#8230	7
54974	name="nav_menu_open">Otwrz...</string>	11
17588	name="nav_menu_open">Otwrz</string>	8
16371	name="nav_menu_open">Ouvrir&#8230	7
16362	name="nav_menu_open">Ouvrir</string>	5
22396	name="nav_menu_open">ffnen&#8230	8
21953	name="nav_menu_open">pne&#8230	10
14913	name="nav_menu_open">pne...</string>	11
56240	name="nav_menu_open">ppna&#8230	2
11684	name="nav_menu_reports"></string>	43
22400	name="nav_menu_reports">Berichte</string>	8
14838	name="nav_menu_reports">Informes</string>	24
22826	name="nav_menu_reports">Laporan</string>	7
17354	name="nav_menu_reports">Raporty</string>	18
16792	name="nav_menu_reports">Rapporten</string>	7
14921	name="nav_menu_reports">Rapporter</string>	23
16175	name="nav_menu_reports">Rapports</string>	9
20908	name="nav_menu_reports">Relat&#243	14
5343	name="nav_menu_reports">Relatrios</string>	13
4731	name="nav_menu_reports">Reports</string>	99
22751	name="nav_menu_reports">Resoconti</string>	11
17952	name="nav_menu_scheduled_actions">	24
12964	name="nav_menu_scheduled_actions"></string>	18
59544	name="nav_menu_scheduled_actions">Ac&#231	6
3216	name="nav_menu_scheduled_actions">Acciones	15
22010	name="nav_menu_scheduled_actions">Accions	10
23000	name="nav_menu_scheduled_actions">Aces	12
10854	name="nav_menu_scheduled_actions">Actions	14
22895	name="nav_menu_scheduled_actions">Aes	14
22874	name="nav_menu_scheduled_actions">Azioni	11
16962	name="nav_menu_scheduled_actions">Geplande	7
22095	name="nav_menu_scheduled_actions">Geplante	8
21594	name="nav_menu_scheduled_actions">Planlagte	10
2837	name="nav_menu_scheduled_actions">Scheduled	110
56293	name="nav_menu_scheduled_actions">Schemalagda	2
17621	name="nav_menu_scheduled_actions">Zaplanowane	12
17894	name="nav_menu_scheduled_backups">	22
12566	name="nav_menu_scheduled_backups"></string>	20
5122	name="nav_menu_scheduled_backups">Backups	8
29662	name="nav_menu_scheduled_backups">Ekspor	5
29423	name="nav_menu_scheduled_backups">Esportazioni	9
20901	name="nav_menu_scheduled_backups">Exporta&#231	11
29510	name="nav_menu_scheduled_backups">Exportacions	8
29696	name="nav_menu_scheduled_backups">Exportaes	8
11286	name="nav_menu_scheduled_backups">Exports	10
17034	name="nav_menu_scheduled_backups">Geplande	5
29568	name="nav_menu_scheduled_backups">Geplanten	6
3738	name="nav_menu_scheduled_backups">Informes	11
15118	name="nav_menu_scheduled_backups">Planlagte	19
3490	name="nav_menu_scheduled_backups">Scheduled	88
17237	name="nav_menu_scheduled_backups">Zaplanowane	13
17927	name="nav_menu_scheduled_transactions">	22
12550	name="nav_menu_scheduled_transactions"></string>	29
29611	name="nav_menu_scheduled_transactions">Assentaments	10
28149	name="nav_menu_scheduled_transactions">Geplante	13
15207	name="nav_menu_scheduled_transactions">Planlagte	27
6196	name="nav_menu_scheduled_transactions">Scheduled	92
20581	name="nav_menu_scheduled_transactions">Transa&#231	14
15436	name="nav_menu_scheduled_transactions">Transacciones	20
16328	name="nav_menu_scheduled_transactions">Transactions	12
6051	name="nav_menu_scheduled_transactions">Transaes	18
17448	name="nav_menu_scheduled_transactions">Transakcje	18
29666	name="nav_menu_scheduled_transactions">Transaksi	5
29671	name="nav_menu_scheduled_transactions">Transazioni	11
16977	name="nav_menu_scheduled_transactions">Vaste	7
12269	name="nav_menu_settings"></string>	48
15308	name="nav_menu_settings">Ajustes</string>	22
4086	name="nav_menu_settings">Configuraes</string>	6
20718	name="nav_menu_settings">Defini&#231	14
22964	name="nav_menu_settings">Definies</string>	17
22029	name="nav_menu_settings">Einstellungen</string>	15
22728	name="nav_menu_settings">Impostazioni</string>	15
21728	name="nav_menu_settings">Innstillinger</string>	23
16532	name="nav_menu_settings">Instellingen</string>	9
15182	name="nav_menu_settings">Instillinger</string>	11
56319	name="nav_menu_settings">Instllningar</string>	2
55760	name="nav_menu_settings">Nastaven</string>	2
16400	name="nav_menu_settings">Paramtres</string>	14
22563	name="nav_menu_settings">Pengaturan</string>	7
14690	name="nav_menu_settings">Preferncies</string>	15
6262	name="nav_menu_settings">Settings</string>	106
17852	name="nav_menu_settings">Ustawienia</string>	20
37138	name="navigationMode">	4
54648	name="no_accounts">Keine	2
57516	name="no_accounts">No	2
35304	name="no_transactions_to_display">Keine	9
54873	name="no_transactions_to_display">No	5
37124	name="normal"	4
29363	name="notify_account_deleted">1	4
9871	name="ofx"	2
4492	name="ofx_file_exported_to">OFX-Datei	21
14862	name="option_delete_after_export">	60
10439	name="option_delete_after_export"></string>	35
20561	name="option_delete_after_export">Apagar	20
12444	name="option_delete_after_export">Borrar	34
22402	name="option_delete_after_export">Buchungen	8
28822	name="option_delete_after_export">Deletar	10
11402	name="option_delete_after_export">Delete	118
11560	name="option_delete_after_export">Effacer	10
16124	name="option_delete_after_export">Elimina	25
22923	name="option_delete_after_export">Excluir	10
11262	name="option_delete_after_export">Hapus	7
6279	name="option_delete_after_export">L&#246	17
15040	name="option_delete_after_export">Lschen	10
22053	name="option_delete_after_export">Odstranit	7
10921	name="option_delete_after_export">Radera	9
8618	name="option_delete_after_export">Slett	31
21608	name="option_delete_after_export">Slette	14
16007	name="option_delete_after_export">Supprimer	19
14848	name="option_delete_after_export">Suprimeix	14
17270	name="option_delete_after_export">Usu	19
16973	name="option_delete_after_export">Verwijderen	22
15042	name="option_export_all_transactions">	63
10487	name="option_export_all_transactions"></string>	45
28462	name="option_export_all_transactions">All	17
4457	name="option_export_all_transactions">Alle	37
10337	name="option_export_all_transactions">Ekspor	5
7782	name="option_export_all_transactions">Eksporter	29
21628	name="option_export_all_transactions">Eksportere	12
17238	name="option_export_all_transactions">Eksportuj	16
16188	name="option_export_all_transactions">Esporta	33
11664	name="option_export_all_transactions">Export	102
14793	name="option_export_all_transactions">Exporta	11
12244	name="option_export_all_transactions">Exportar	52
11285	name="option_export_all_transactions">Exporter	34
11767	name="option_export_all_transactions">Exportera	5
29513	name="option_export_all_transactions">Exportovat	5
29646	name="option_export_all_transactions">Vie	5
28213	name="owncloud_dir_invalid">	7
13039	name="owncloud_dir_invalid">:	5
28252	name="owncloud_dir_invalid">Caracteres	13
11702	name="owncloud_dir_invalid">Caractres	3
64036	name="owncloud_dir_invalid">Caratteri	2
60045	name="owncloud_dir_invalid">Carcters	3
11888	name="owncloud_dir_invalid">Invalid	42
62788	name="owncloud_dir_invalid">Karakter	3
55806	name="owncloud_dir_invalid">Neplatn	2
56058	name="owncloud_dir_invalid">Ogiltiga	2
25885	name="owncloud_dir_invalid">Ugyldige	6
28116	name="owncloud_dir_invalid">Ungltige	5
22802	name="owncloud_dir_ok">	13
23144	name="owncloud_dir_ok"></string>	5
11214	name="owncloud_dir_ok">Dir	51
22051	name="owncloud_dir_ok">Dir-Name	7
22960	name="owncloud_dir_ok">Mappenavn	5
22550	name="owncloud_dir_ok">Nama	5
11544	name="owncloud_dir_ok">Nom	10
22196	name="owncloud_dir_ok">Nombre	12
22606	name="owncloud_dir_ok">Nome	14
55692	name="owncloud_dir_ok">Nzev	2
10832	name="owncloud_pref">ownCloud</string>	32
12573	name="owncloud_pref">owncloud</string>	40
11398	name="owncloud_server">https://</string>	43
64073	name="owncloud_server_invalid">	2
12790	name="owncloud_server_invalid"></string>	3
26049	name="owncloud_server_invalid">Finner	6
59960	name="owncloud_server_invalid">No	3
12646	name="owncloud_server_invalid">OC	40
28193	name="owncloud_server_invalid">OC-Server	5
28183	name="owncloud_server_invalid">Owncloud	5
62755	name="owncloud_server_invalid">Server	5
10262	name="owncloud_server_invalid">Serveur	6
28204	name="owncloud_server_invalid">Servidor	13
12018	name="owncloud_server_ok">OC	52
22457	name="owncloud_server_ok">OC-Server	7
22511	name="owncloud_server_ok">Owncloud	7
22825	name="owncloud_server_ok">Server	7
10472	name="owncloud_server_ok">Serveur	5
22055	name="owncloud_server_ok">Servidor	21
63157	name="owncloud_sync"	3
12776	name="owncloud_user_invalid">/</string>	3
59979	name="owncloud_user_invalid">El	3
11749	name="owncloud_user_invalid">Nom	3
64042	name="owncloud_user_invalid">Nome	2
11921	name="owncloud_user_invalid">OC	42
28224	name="owncloud_user_invalid">Owncloud	5
28136	name="owncloud_user_invalid">Usuario/contrasea	8
63181	name="owncloud_user_invalid">Usurio/senha	3
64067	name="owncloud_user_invalid">Utilizador/password	2
22490	name="owncloud_user_ok">	7
11332	name="owncloud_user_ok">Nom	10
22588	name="owncloud_user_ok">Nome	11
10839	name="owncloud_user_ok">OC	52
22488	name="owncloud_user_ok">Usuario/contrasea	12
22904	name="owncloud_user_ok">Usurio/senha	7
57123	name="passcode_btn">70dp</dimen>	8
57058	name="passcode_btn_margin">10dp</dimen>	8
12383	name="password"></string>	21
22164	name="password">Contrasea</string>	12
22063	name="password">Contrasenya</string>	7
55624	name="password">Heslo</string>	2
22746	name="password">Kata	7
56085	name="password">Lsenord</string>	2
22647	name="password">Mot	7
22884	name="password">Passord</string>	15
12958	name="password">Password</string>	53
22050	name="password">Passwort</string>	9
22908	name="password">Senha</string>	7
11896	name="permission_access_sdcard">	57
16013	name="permission_access_sdcard">Acc&#233	16
11293	name="permission_access_sdcard">Accder	5
15338	name="permission_access_sdcard">Acceder	20
16122	name="permission_access_sdcard">Accedi	17
10376	name="permission_access_sdcard">Access	100
10326	name="permission_access_sdcard">Accs	11
20426	name="permission_access_sdcard">Aceder	18
26828	name="permission_access_sdcard">Acessar	16
11136	name="permission_access_sdcard">Akses	5
21543	name="permission_access_sdcard">Aksesser	18
51953	name="permission_access_sdcard">Aksessere	4
17432	name="permission_access_sdcard">Dostp	13
4218	name="permission_access_sdcard">Externe	2
29613	name="permission_access_sdcard">Pstup	6
26336	name="permission_access_sdcard">SD	27
16635	name="permission_access_sdcard">SD-kaart	8
29237	name="permission_access_sdcard">SD</string>	4
14714	name="permission_access_sdcard">Tilgang	13
5902	name="permission_access_sdcard">Zugriff	16
51757	name="permission_create_accounts">Enables	2
51750	name="permission_record_transactions">Enables	2
37340	name="popupMenuStyle"	4
38059	name="popupMenuStyle">@style/Widget.Sherlock.Light.PopupMenu</item>	5
37879	name="popupMenuStyle">@style/Widget.Sherlock.PopupMenu</item>	5
57484	name="pref_default_currency">default_currency</string>	3
57201	name="preferenceTheme">@style/PreferenceThemeOverlay</item>	3
37209	name="preserveIconSpacing"	4
37335	name="progressBarPadding"	4
38557	name="progressBarPadding">32dip</item>	4
37756	name="progressBarStyle"	4
37931	name="progressBarStyle">@style/Widget.Sherlock.Light.ProgressBar.Horizontal</item>	4
37991	name="progressBarStyle">@style/Widget.Sherlock.ProgressBar.Horizontal</item>	4
8928	name="qif"	2
37489	name="queryHint"	5
18011	name="recurrence_entries">	5
18152	name="recurrence_options">	5
28254	name="recurrence_period_millis">	4
6183	name="recurrence_period_strings">	30
4466	name="recurrence_values">	8
23172	name="repeat_on_weekday">	13
22655	name="repeat_on_weekday">%1$s	13
12497	name="repeat_on_weekday">%1$s</string>	12
22259	name="repeat_on_weekday">am	5
22990	name="repeat_on_weekday">em	7
10836	name="repeat_on_weekday">en	17
22787	name="repeat_on_weekday">il	13
12042	name="repeat_on_weekday">na	12
10225	name="repeat_on_weekday">on	40
56296	name="repeat_on_weekday">p	2
11726	name="repeat_on_weekday">sur	5
23213	name="repeat_until_date">	7
22560	name="repeat_until_date">%1$s	7
12604	name="repeat_until_date">%1$s</string>	12
11827	name="repeat_until_date">at	13
22393	name="repeat_until_date">bis	5
22916	name="repeat_until_date">desde%1$s</string>	7
22868	name="repeat_until_date">fino	7
11314	name="repeat_until_date">hasta	11
10366	name="repeat_until_date">jusqu\'	5
56408	name="repeat_until_date">tills	2
10283	name="repeat_until_date">until	38
13003	name="repeat_x_times">	19
55815	name="repeat_x_times">%1$d	4
11500	name="repeat_x_times">%1$s	23
12897	name="repeat_x_times">%1$s</string>	12
10141	name="repeat_x_times">for	44
56049	name="repeat_x_times">fr	2
12501	name="repeat_x_times">para	8
13035	name="repeat_x_times">per	16
10154	name="repeat_x_times">por	16
11505	name="repeat_x_times">pour	10
10856	name="report_account_types">	25
1981	name="report_time_range">	157
12998	name="sample_exchange_rate">	5
28313	name="sample_exchange_rate">)	5
51083	name="sample_exchange_rate">,1	5
11462	name="sample_exchange_rate">e.g.	40
57372	name="sample_exchange_rate">ej.	3
64038	name="sample_exchange_rate">es.	2
28187	name="sample_exchange_rate">p.ej.	5
10153	name="sample_exchange_rate">par	3
62961	name="sample_exchange_rate">por	8
56302	name="sample_exchange_rate">t.ex.	2
25541	name="sample_exchange_rate">z.	8
37115	name="searchAutoCompleteTextView"	5
37952	name="searchAutoCompleteTextView">@style/Widget.Sherlock.Light.SearchAutoCompleteTextView</item>	5
38259	name="searchAutoCompleteTextView">@style/Widget.Sherlock.SearchAutoCompleteTextView</item>	5
37542	name="searchDropdownBackground"	5
37799	name="searchDropdownBackground">@drawable/abs__search_dropdown_dark</item>	5
38209	name="searchDropdownBackground">@drawable/abs__search_dropdown_light</item>	5
37087	name="searchResultListItemHeight"	5
37502	name="searchViewCloseIcon"	5
38295	name="searchViewCloseIcon">@drawable/abs__ic_clear</item>	5
38318	name="searchViewCloseIcon">@drawable/abs__ic_clear_holo_light</item>	5
37611	name="searchViewEditQuery"	5
37660	name="searchViewEditQueryBackground"	5
37284	name="searchViewGoIcon"	5
38763	name="searchViewGoIcon">@drawable/abs__ic_go</item>	5
38003	name="searchViewGoIcon">@drawable/abs__ic_go_search_api_holo_light</item>	5
37639	name="searchViewSearchIcon"	5
38522	name="searchViewSearchIcon">@drawable/abs__ic_search</item>	5
38031	name="searchViewSearchIcon">@drawable/abs__ic_search_api_holo_light</item>	5
37246	name="searchViewTextField"	5
38684	name="searchViewTextField">@drawable/abs__textfield_searchview_holo_dark</item>	5
37887	name="searchViewTextField">@drawable/abs__textfield_searchview_holo_light</item>	5
37500	name="searchViewTextFieldRight"	5
38161	name="searchViewTextFieldRight">@drawable/abs__textfield_searchview_right_holo_dark</item>	5
38251	name="searchViewTextFieldRight">@drawable/abs__textfield_searchview_right_holo_light</item>	5
37029	name="searchViewVoiceIcon"	5
37866	name="searchViewVoiceIcon">@drawable/abs__ic_voice_search</item>	5
37877	name="searchViewVoiceIcon">@drawable/abs__ic_voice_search_api_holo_light</item>	5
12190	name="section_header_accounts">	9
3448	name="section_header_accounts">Sub-Accounts</string>	13
18429	name="section_header_height">20dp</dimen>	13
12825	name="section_header_subaccounts">	27
4957	name="section_header_subaccounts">-</string>	12
10678	name="section_header_subaccounts"></string>	27
16424	name="section_header_subaccounts">Sotto-conti</string>	15
23808	name="section_header_subaccounts">Sous-Comptes</string>	5
16071	name="section_header_subaccounts">Sous-comptes</string>	13
4561	name="section_header_subaccounts">Sub-Accounts</string>	106
12506	name="section_header_subaccounts">Sub-Akun</string>	7
5611	name="section_header_subaccounts">Sub-Contas</string>	24
15818	name="section_header_subaccounts">Sub-Cuentas</string>	15
17576	name="section_header_subaccounts">Sub-konto</string>	13
14711	name="section_header_subaccounts">Subcomptes</string>	10
16867	name="section_header_subaccounts">Subrekeningen</string>	13
15039	name="section_header_subaccounts">Underkontoer</string>	25
56321	name="section_header_subaccounts">Underkonton</string>	2
5221	name="section_header_subaccounts">Unterkonten</string>	15
6041	name="section_header_transactions"></string>	59
14726	name="section_header_transactions">Assentaments</string>	10
5783	name="section_header_transactions">Buchungen</string>	15
20407	name="section_header_transactions">Transa&#231	11
15596	name="section_header_transactions">Transacciones</string>	15
16990	name="section_header_transactions">Transacties</string>	13
2799	name="section_header_transactions">Transactions</string>	116
6344	name="section_header_transactions">Transaes</string>	13
22348	name="section_header_transactions">Transakce</string>	7
17773	name="section_header_transactions">Transakcje</string>	13
13034	name="section_header_transactions">Transaksi</string>	7
15002	name="section_header_transactions">Transaksjoner</string>	25
56106	name="section_header_transactions">Transaktioner</string>	2
16139	name="section_header_transactions">Transazioni</string>	17
28491	name="select_chart_to_view_details">	7
13008	name="select_chart_to_view_details"></string>	11
62965	name="select_chart_to_view_details">Merk	3
10284	name="select_chart_to_view_details">Seleccione	10
60086	name="select_chart_to_view_details">Seleccioneu	3
12014	name="select_chart_to_view_details">Selecione	9
11853	name="select_chart_to_view_details">Select	38
64046	name="select_chart_to_view_details">Seleziona	2
10138	name="select_chart_to_view_details">Slectionnez	3
56157	name="select_chart_to_view_details">Vlj	2
25604	name="select_chart_to_view_details">Whlen	3
37016	name="selectableItemBackground"	5
37292	name="selectableItemBackground">?android:attr/selectableItemBackground</item>	5
38310	name="selectableItemBackground">@drawable/abs__item_background_holo_dark</item>	5
38009	name="selectableItemBackground">@drawable/abs__item_background_holo_light</item>	5
29260	name="selected">selected</string>	5
57424	name="settings">Settings</string>	3
37631	name="showCustom"	4
37271	name="showHome"	4
37413	name="showTitle"	4
61873	name="spinBars">true</item>	6
37587	name="spinnerDropDownItemStyle"	5
38491	name="spinnerDropDownItemStyle">@style/Widget.Sherlock.DropDownItem.Spinner</item>	5
37897	name="spinnerDropDownItemStyle">@style/Widget.Sherlock.Light.DropDownItem.Spinner</item>	5
37471	name="spinnerItemStyle"	5
38051	name="spinnerItemStyle">@style/Widget.Sherlock.TextView.SpinnerItem</item>	5
27400	name="strip_width">5dp</dimen>	6
37359	name="subtitle"	4
36998	name="subtitleTextStyle"	4
38740	name="subtitleTextStyle">@style/TextAppearance.Sherlock.Widget.ActionBar.Subtitle.Inverse</item>	4
37832	name="subtitleTextStyle">@style/TextAppearance.Sherlock.Widget.ActionBar.Subtitle</item>	4
38643	name="subtitleTextStyle">@style/TextAppearance.Sherlock.Widget.ActionMode.Subtitle.Inverse</item>	4
38305	name="subtitleTextStyle">@style/TextAppearance.Sherlock.Widget.ActionMode.Subtitle</item>	4
10615	name="summary_about_gnucash">	31
29475	name="summary_about_gnucash"></string>	6
2330	name="summary_about_gnucash">A	104
11678	name="summary_about_gnucash">Android</string>	9
29554	name="summary_about_gnucash">Ein	6
21942	name="summary_about_gnucash">En	8
28730	name="summary_about_gnucash">GnuCash	12
26691	name="summary_about_gnucash">GnuCashMobile	18
20560	name="summary_about_gnucash">Gnucash	61
5527	name="summary_about_gnucash">GnucashMobile	55
29231	name="summary_about_gnucash">La	6
16956	name="summary_about_gnucash">Mobiel	5
29699	name="summary_about_gnucash">Mobilny	4
11754	name="summary_about_gnucash">Sebuah	8
29690	name="summary_about_gnucash">Um	16
2672	name="summary_about_gnucash">Una	11
10679	name="summary_about_gnucash">Une	5
17881	name="summary_create_backup_pref">	30
55764	name="summary_create_backup_pref"></string>	2
16801	name="summary_create_backup_pref">Back-ups	7
4145	name="summary_create_backup_pref">Backups	6
4763	name="summary_create_backup_pref">By	99
55741	name="summary_create_backup_pref">Crea	2
56252	name="summary_create_backup_pref">Crear	2
21587	name="summary_create_backup_pref">Create	18
55653	name="summary_create_backup_pref">Criar	4
17738	name="summary_create_backup_pref">Domylnie	15
16294	name="summary_create_backup_pref">Par	9
22288	name="summary_create_backup_pref">Per	16
15883	name="summary_create_backup_pref">Por	30
10185	name="summary_create_backup_pref">SD</string>	21
22568	name="summary_create_backup_pref">Secara	7
21994	name="summary_create_backup_pref">Sicherungen	8
56103	name="summary_create_backup_pref">Skapa	2
21193	name="summary_create_backup_pref">Som	10
15236	name="summary_create_backup_pref">Standard	11
5948	name="summary_create_default_accounts">	53
12025	name="summary_create_default_accounts"></string>	33
22555	name="summary_create_default_accounts">Buat	7
10983	name="summary_create_default_accounts">Cre	23
3182	name="summary_create_default_accounts">Crea	61
2582	name="summary_create_default_accounts">Creates	122
16781	name="summary_create_default_accounts">Creert	17
11784	name="summary_create_default_accounts">Cria	27
4131	name="summary_create_default_accounts">Criar	6
5079	name="summary_create_default_accounts">Erstellt	26
22625	name="summary_create_default_accounts">GnuCash	12
15272	name="summary_create_default_accounts">Oppretter	30
56060	name="summary_create_default_accounts">Skapar	2
17723	name="summary_create_default_accounts">Tworzy	16
15263	name="summary_default_currency">	37
10240	name="summary_default_currency"></string>	20
11599	name="summary_default_currency">Default	86
12329	name="summary_default_currency">Divisa	14
17364	name="summary_default_currency">Domylna	9
11591	name="summary_default_currency">Mata	3
20879	name="summary_default_currency">Moeda	22
15624	name="summary_default_currency">Moneda	8
12032	name="summary_default_currency">Monnaie	17
16789	name="summary_default_currency">Standaard	17
6388	name="summary_default_currency">Standard	13
14713	name="summary_default_currency">Standardvaluta	14
21290	name="summary_default_currency">Standardvalutaen	6
6412	name="summary_default_currency">Standardw&#228	9
14876	name="summary_default_currency">Standardwhrung	3
16445	name="summary_default_currency">Valuta	15
55455	name="summary_default_currency">Vchoz	2
15220	name="summary_default_export_email">	46
22805	name="summary_default_export_email"></string>	6
10122	name="summary_default_export_email">Alamat	7
4967	name="summary_default_export_email">Die	15
17503	name="summary_default_export_email">Domylny	13
10193	name="summary_default_export_email">E-mail</string>	7
8481	name="summary_default_export_email">E-post	20
11627	name="summary_default_export_email">Email	21
17012	name="summary_default_export_email">Het	21
22217	name="summary_default_export_email">L\'adrea	7
16311	name="summary_default_export_email">L\'indirizzo	20
12237	name="summary_default_export_email">La	32
20786	name="summary_default_export_email">O	24
11610	name="summary_default_export_email">OFXemail</string>	24
11132	name="summary_default_export_email">OFXemailemail</string>	13
21715	name="summary_default_export_email">Standard	12
10315	name="summary_default_export_email">The	123
22125	name="summary_default_export_email">Vchoz	5
5035	name="summary_default_export_format">	57
10868	name="summary_default_export_format"></string>	32
16570	name="summary_default_export_format">Bestandsformaat	15
5808	name="summary_default_export_format">Dateiformat,welches	16
5935	name="summary_default_export_format">File	133
21596	name="summary_default_export_format">Filformat	15
12995	name="summary_default_export_format">Format	45
4231	name="summary_default_export_format">Formato	65
15036	name="summary_default_export_format">Standard	15
15173	name="summary_default_transaction_type">	28
11659	name="summary_default_transaction_type"></string>	20
15287	name="summary_default_transaction_type">Die	10
15914	name="summary_default_transaction_type">El	17
16500	name="summary_default_transaction_type">Het	13
12401	name="summary_default_transaction_type">Il	18
5203	name="summary_default_transaction_type">Le	19
28710	name="summary_default_transaction_type">O	10
21517	name="summary_default_transaction_type">Standard	6
4792	name="summary_default_transaction_type">The	92
10588	name="summary_default_transaction_type">Tipe	3
21075	name="summary_default_transaction_type">Tipo	14
60016	name="summary_default_transaction_type">Tipus	3
14902	name="summary_default_transaction_type">Transaksjonstypen	15
17327	name="summary_default_transaction_type">Typ	13
10721	name="summary_delete_all_accounts">	46
4152	name="summary_delete_all_accounts">Alle	18
21151	name="summary_delete_all_accounts">Apagar	13
15659	name="summary_delete_all_accounts">Borrar	13
57571	name="summary_delete_all_accounts">Deletar	6
7140	name="summary_delete_all_accounts">Delete	93
16489	name="summary_delete_all_accounts">Elimina	15
11364	name="summary_delete_all_accounts">Hapus	3
55859	name="summary_delete_all_accounts">Radera	2
21898	name="summary_delete_all_accounts">Slett	6
8340	name="summary_delete_all_accounts">Slette	16
55608	name="summary_delete_all_accounts">Smaznm	5
11510	name="summary_delete_all_accounts">Supprimer	13
17347	name="summary_delete_all_accounts">Usu	9
15051	name="summary_delete_all_transactions">	45
15414	name="summary_delete_all_transactions">&#161	8
11334	name="summary_delete_all_transactions"></string>	28
6586	name="summary_delete_all_transactions">All	110
56355	name="summary_delete_all_transactions">Alla	2
4462	name="summary_delete_all_transactions">Alle	44
22368	name="summary_delete_all_transactions">Budou	7
22167	name="summary_delete_all_transactions">Es	7
12828	name="summary_delete_all_transactions">Seluruh	7
15360	name="summary_delete_all_transactions">Todas	45
16053	name="summary_delete_all_transactions">Toutes	21
16143	name="summary_delete_all_transactions">Verranno	23
17680	name="summary_delete_all_transactions">Wszystkie	13
11990	name="summary_dropbox_sync">	26
29311	name="summary_dropbox_sync">Abilita	8
15602	name="summary_dropbox_sync">Activar	10
16971	name="summary_dropbox_sync">Activeer	5
16243	name="summary_dropbox_sync">Activer	14
22573	name="summary_dropbox_sync">Aktifkan	7
21558	name="summary_dropbox_sync">Aktiver	22
56126	name="summary_dropbox_sync">Aktivera	2
59193	name="summary_dropbox_sync">Aktiviert	6
22694	name="summary_dropbox_sync">Attiva	6
22731	name="summary_dropbox_sync">DropBox	11
17992	name="summary_dropbox_sync">DropBox</string>	22
22261	name="summary_dropbox_sync">Dropbox-Export	9
6394	name="summary_dropbox_sync">Enable	123
22057	name="summary_dropbox_sync">Habilita	7
4540	name="summary_dropbox_sync">Habilitar	25
20164	name="summary_dropbox_sync">Permite	15
23034	name="summary_dropbox_sync">Permitir	6
14961	name="summary_dropbox_sync">Skru	11
17728	name="summary_dropbox_sync">Zaznaczy	13
12081	name="summary_google_drive_sync">	30
29269	name="summary_google_drive_sync">Abilita	11
15570	name="summary_google_drive_sync">Activar	12
16324	name="summary_google_drive_sync">Activer	12
17224	name="summary_google_drive_sync">Activeren	5
29650	name="summary_google_drive_sync">Aktifkan	5
21297	name="summary_google_drive_sync">Aktiver	19
59196	name="summary_google_drive_sync">Aktiviert	6
29633	name="summary_google_drive_sync">Attiva	4
4334	name="summary_google_drive_sync">Enable	112
18005	name="summary_google_drive_sync">Google	27
29604	name="summary_google_drive_sync">Habilita	5
4946	name="summary_google_drive_sync">Habilitar	24
21126	name="summary_google_drive_sync">Permite	15
29724	name="summary_google_drive_sync">Permitir	4
15074	name="summary_google_drive_sync">Skru	11
17811	name="summary_google_drive_sync">Wybierz	13
17896	name="summary_google_plus">	25
64021	name="summary_google_plus"></string>	4
35414	name="summary_google_plus">Compartilhe	18
15999	name="summary_google_plus">Compartir	26
29332	name="summary_google_plus">Condivi	8
56332	name="summary_google_plus">Dela	2
10518	name="summary_google_plus">Dele	19
12864	name="summary_google_plus">Google+</string>	11
17210	name="summary_google_plus">Ideen	11
10548	name="summary_google_plus">Partager	3
35388	name="summary_google_plus">Partilhe	17
10271	name="summary_google_plus">Share	84
28159	name="summary_google_plus">Teile	11
58643	name="summary_google_plus">Udostpnij	4
15284	name="summary_import_accounts">	38
11503	name="summary_import_accounts">GnuCash</string>	28
5473	name="summary_import_accounts">Import	113
15480	name="summary_import_accounts">Importa	31
20956	name="summary_import_accounts">Importar	20
15813	name="summary_import_accounts">Importas	15
10276	name="summary_import_accounts">Importe	15
11949	name="summary_import_accounts">Importer	7
56026	name="summary_import_accounts">Importera	2
7756	name="summary_import_accounts">Importere	26
4990	name="summary_import_accounts">Importiere	10
22312	name="summary_import_accounts">Importovat	9
17854	name="summary_import_accounts">Importuj	13
11643	name="summary_import_accounts">Mengimpor	7
16827	name="summary_import_accounts">Rekeningstructuur	13
15022	name="summary_licence_details">	33
5618	name="summary_licence_details">Apache	173
22524	name="summary_licence_details">Apachev2.0.	6
36253	name="summary_licence_details">Details	6
22175	name="summary_licence_details">Licence	5
15385	name="summary_licence_details">Licencia	10
17835	name="summary_licence_details">Licencja	13
11344	name="summary_licence_details">Lisensi	7
22110	name="summary_licence_details">Llicncia	7
11696	name="summary_owncloud_sync">	13
22843	name="summary_owncloud_sync">Activer	7
22566	name="summary_owncloud_sync">Aktifkan	7
22999	name="summary_owncloud_sync">Aktiver	14
55990	name="summary_owncloud_sync">Aktivera	2
22840	name="summary_owncloud_sync">Attiva	8
11757	name="summary_owncloud_sync">Enable	59
22292	name="summary_owncloud_sync">Habilita	7
22136	name="summary_owncloud_sync">Habilitar	23
22995	name="summary_owncloud_sync">Permitir	8
22465	name="summary_owncloud_sync">ownCload-Export	9
22867	name="summary_owncloud_sync">ownCloud	13
17878	name="summary_restore_backup_pref">	28
10191	name="summary_restore_backup_pref"></string>	25
20880	name="summary_restore_backup_pref">Escolha	18
22719	name="summary_restore_backup_pref">Pilih	7
55636	name="summary_restore_backup_pref">Restaurar	4
21896	name="summary_restore_backup_pref">Restore	17
55700	name="summary_restore_backup_pref">Ripristina	2
15404	name="summary_restore_backup_pref">Seleccione	12
22122	name="summary_restore_backup_pref">Seleccioneu	7
5970	name="summary_restore_backup_pref">Select	102
16807	name="summary_restore_backup_pref">Selecteer	7
22775	name="summary_restore_backup_pref">Selezionare	9
16340	name="summary_restore_backup_pref">Slectionner	9
15075	name="summary_restore_backup_pref">Velg	21
22391	name="summary_restore_backup_pref">Whle	8
17299	name="summary_restore_backup_pref">Wybierz	15
55978	name="summary_restore_backup_pref">terstll	2
51511	name="summary_restore_last_backup">Restore	6
12009	name="summary_save_opening_balances">	44
11917	name="summary_save_opening_balances"></string>	32
22577	name="summary_save_opening_balances">Aktifkan	7
21762	name="summary_save_opening_balances">Aktiver	10
56055	name="summary_save_opening_balances">Aktivera	2
22540	name="summary_save_opening_balances">Attiva	6
4463	name="summary_save_opening_balances">Enable	125
17169	name="summary_save_opening_balances">Inschakelen	7
15226	name="summary_save_opening_balances">Merk	24
15080	name="summary_save_opening_balances">Mglichkeit	19
16476	name="summary_save_opening_balances">Permet	20
20312	name="summary_save_opening_balances">Permite	21
6095	name="summary_save_opening_balances">Possibilita	6
22364	name="summary_save_opening_balances">Povolit	5
15916	name="summary_save_opening_balances">Seleccionar	23
17828	name="summary_save_opening_balances">Wybierz	13
55744	name="summary_select_backup_file">	2
55784	name="summary_select_backup_file"></string>	2
56030	name="summary_select_backup_file">Escolha	2
56151	name="summary_select_backup_file">Seleccione	2
55686	name="summary_select_backup_file">Selecione	2
21795	name="summary_select_backup_file">Select	18
55658	name="summary_select_backup_file">Seleziona	2
55888	name="summary_select_backup_file">Vlj	2
12569	name="summary_sgml_ofx_header">Allows	4
12607	name="summary_sgml_ofx_header">Enables	3
12097	name="summary_sgml_ofx_header">Permite	5
12385	name="summary_translate_gnucash">	23
28541	name="summary_translate_gnucash">CrowdIn	9
59221	name="summary_translate_gnucash">CrowdIn</string>	8
11704	name="summary_translate_gnucash">Oversette	19
29310	name="summary_translate_gnucash">Traduci	8
15976	name="summary_translate_gnucash">Traducir	26
10699	name="summary_translate_gnucash">Traduire	3
35386	name="summary_translate_gnucash">Traduza	22
10770	name="summary_translate_gnucash">Translate	84
58634	name="summary_translate_gnucash">Tumacz	4
17177	name="summary_translate_gnucash">Vertalen	11
25723	name="summary_translate_gnucash">bersetze	14
55858	name="summary_translate_gnucash">verstta	2
17909	name="summary_use_account_color">	21
22538	name="summary_use_account_color">/	9
22620	name="summary_use_account_color">/</string>	6
10282	name="summary_use_account_color"></string>	24
56037	name="summary_use_account_color">Anvnda	2
15149	name="summary_use_account_color">Bruk	11
21231	name="summary_use_account_color">Bruke	10
16578	name="summary_use_account_color">Gebruik	7
22569	name="summary_use_account_color">Gunakan	7
22844	name="summary_use_account_color">Usa	8
2951	name="summary_use_account_color">Usar	16
3493	name="summary_use_account_color">Use	120
10863	name="summary_use_account_color">Utiliser	9
5257	name="summary_use_account_color">Utilizar	8
17367	name="summary_use_account_color">Uyj	20
22224	name="summary_use_account_color">Verwende	8
16167	name="summary_use_account_color">utiliser	10
22777	name="summary_use_compact_list">	18
12678	name="summary_use_compact_list"></string>	14
22300	name="summary_use_compact_list">Activar	13
11975	name="summary_use_compact_list">Activez	7
23035	name="summary_use_compact_list">Aktiver	7
55954	name="summary_use_compact_list">Aktivera	2
22007	name="summary_use_compact_list">Aktivieren,um	7
22594	name="summary_use_compact_list">Attiva	6
10862	name="summary_use_compact_list">Enable	55
22910	name="summary_use_compact_list">Permitir	6
23007	name="summary_use_compact_list">Sempre	10
15227	name="summary_use_double_entry">	52
10561	name="summary_use_double_entry"></string>	37
10932	name="summary_use_double_entry">All	117
56200	name="summary_use_double_entry">Alla	2
4928	name="summary_use_double_entry">Alle	56
11097	name="summary_use_double_entry">Seluruh	7
5661	name="summary_use_double_entry">Todas	49
21988	name="summary_use_double_entry">Totes	7
10828	name="summary_use_double_entry">Toutes	28
16267	name="summary_use_double_entry">Tutte	26
22362	name="summary_use_double_entry">Vechny	8
17787	name="summary_use_double_entry">Wszystkie	13
15011	name="summary_xml_ofx_header">	67
16239	name="summary_xml_ofx_header">Abilitare	37
11203	name="summary_xml_ofx_header">Active	66
11342	name="summary_xml_ofx_header">Activez	43
11340	name="summary_xml_ofx_header">Aktifkan	5
21351	name="summary_xml_ofx_header">Aktiver	11
55860	name="summary_xml_ofx_header">Aktivera	2
6194	name="summary_xml_ofx_header">Diese	25
4039	name="summary_xml_ofx_header">Dieses	14
11134	name="summary_xml_ofx_header">Enable	119
26186	name="summary_xml_ofx_header">GnuCash	7
12000	name="summary_xml_ofx_header">GnuCash</string>	55
5686	name="summary_xml_ofx_header">Habilitar	27
25652	name="summary_xml_ofx_header">Habiliteu	8
55824	name="summary_xml_ofx_header">Pouijte	5
16551	name="summary_xml_ofx_header">Schakel	37
15101	name="summary_xml_ofx_header">Velg	39
17472	name="summary_xml_ofx_header">Wcz	19
25833	name="switch_export_transactions_from_all_time">	3
12938	name="switch_export_transactions_from_all_time"></string>	12
11272	name="switch_export_transactions_from_all_time">All	25
26140	name="switch_export_transactions_from_all_time">Da	3
10285	name="switch_export_transactions_from_all_time">Desde	9
35076	name="switch_export_transactions_from_all_time">Todo	3
11035	name="switch_export_transactions_from_all_time">Todos	6
11499	name="switch_export_transactions_from_all_time">Tous	3
34979	name="switch_export_transactions_from_all_time">Zeitlich	3
37031	name="tabMode"	4
37745	name="target_honeycomb_needs_options_menu">true</bool-->	4
60336	name="textAllCaps">true</item>	3
37020	name="textAppearanceLargePopupMenu"	4
38162	name="textAppearanceLargePopupMenu">@style/TextAppearance.Sherlock.Light.Widget.PopupMenu.Large</item>	5
38638	name="textAppearanceLargePopupMenu">@style/TextAppearance.Sherlock.Widget.PopupMenu.Large</item>	5
37203	name="textAppearanceListItemSmall"	4
37238	name="textAppearanceSearchResultSubtitle"	5
37368	name="textAppearanceSearchResultTitle"	5
37094	name="textAppearanceSmall"	4
37856	name="textAppearanceSmall">@style/TextAppearance.Sherlock.Light.Small</item>	5
38448	name="textAppearanceSmall">@style/TextAppearance.Sherlock.Small</item>	5
37524	name="textAppearanceSmallPopupMenu"	4
38603	name="textAppearanceSmallPopupMenu">@style/TextAppearance.Sherlock.Light.Widget.PopupMenu.Small</item>	5
37791	name="textAppearanceSmallPopupMenu">@style/TextAppearance.Sherlock.Widget.PopupMenu.Small</item>	5
37349	name="textColorPrimary"	4
38173	name="textColorPrimary">@color/abs__primary_text_holo_dark</item>	5
38713	name="textColorPrimary">@color/abs__primary_text_holo_light</item>	5
37460	name="textColorPrimaryDisableOnly"	4
38188	name="textColorPrimaryDisableOnly">@color/abs__primary_text_disable_only_holo_dark</item>	5
38489	name="textColorPrimaryDisableOnly">@color/abs__primary_text_disable_only_holo_light</item>	5
37519	name="textColorPrimaryInverse"	4
38500	name="textColorPrimaryInverse">@color/abs__primary_text_holo_dark</item>	5
38662	name="textColorPrimaryInverse">@color/abs__primary_text_holo_light</item>	5
37702	name="textColorSearchUrl"	5
29825	name="text_size_large">18sp</dimen>	14
29844	name="text_size_medium">16sp</dimen>	6
30597	name="text_size_medium">18sp</dimen>	12
29866	name="text_size_small">14sp</dimen>	8
59135	name="theme_accent">#FFAB00</color>	3
59182	name="theme_primary">#2E7D32</color>	3
59082	name="theme_primary_dark">#1B5E20</color>	3
37063	name="title"	4
37454	name="titleTextStyle"	4
38721	name="titleTextStyle">@style/TextAppearance.Sherlock.Widget.ActionBar.Title.Inverse</item>	4
37870	name="titleTextStyle">@style/TextAppearance.Sherlock.Widget.ActionBar.Title</item>	4
38178	name="titleTextStyle">@style/TextAppearance.Sherlock.Widget.ActionMode.Title.Inverse</item>	4
38057	name="titleTextStyle">@style/TextAppearance.Sherlock.Widget.ActionMode.Title</item>	4
17810	name="title_about">	39
29774	name="title_about">&#192	7
4383	name="title_about">&#220	30
11329	name="title_about"></string>	59
10879	name="title_about">A	20
6962	name="title_about">About</string>	94
3608	name="title_about">Acerca	27
16456	name="title_about">Informazioni</string>	30
29620	name="title_about">O	3
17759	name="title_about">O</string>	16
15041	name="title_about">Om</string>	29
17195	name="title_about">Over</string>	25
14776	name="title_about">Quant	11
20579	name="title_about">Sobre</string>	32
12043	name="title_about">Tentang</string>	8
14916	name="title_about">ber</string>	9
11310	name="title_about_gnucash">	66
29794	name="title_about_gnucash">&#192	7
4613	name="title_about_gnucash">&#220	28
23624	name="title_about_gnucash">A	8
10910	name="title_about_gnucash">About	107
2483	name="title_about_gnucash">Acerca	33
22671	name="title_about_gnucash">GnuCash	9
10650	name="title_about_gnucash">GnuCash</string>	43
16213	name="title_about_gnucash">Informazioni	32
17476	name="title_about_gnucash">O	23
14964	name="title_about_gnucash">Om	34
17075	name="title_about_gnucash">Over	21
14681	name="title_about_gnucash">Quant	13
21078	name="title_about_gnucash">Sobre	41
11642	name="title_about_gnucash">Tentang	10
14890	name="title_about_gnucash">ber	11
15237	name="title_account_preferences">	41
11943	name="title_account_preferences"></string>	28
6342	name="title_account_preferences">Account	90
4803	name="title_account_preferences">Einstellungen	16
15139	name="title_account_preferences">Kontoinnstillinger</string>	23
56352	name="title_account_preferences">Kontoinstllningar</string>	2
15816	name="title_account_preferences">Opciones	8
55536	name="title_account_preferences">Pedvolby	2
16077	name="title_account_preferences">Pr&#233	15
20832	name="title_account_preferences">Prefer&#234	11
15388	name="title_account_preferences">Preferencias	15
10659	name="title_account_preferences">Preferensi	3
12496	name="title_account_preferences">Preferenze	20
28741	name="title_account_preferences">Preferncias	15
14748	name="title_account_preferences">Preferncies	6
5172	name="title_account_preferences">Prfrences	12
17409	name="title_account_preferences">Ustawienia	11
11004	name="title_accounts"></string>	69
10904	name="title_accounts">Accounts</string>	104
10535	name="title_accounts">Akun</string>	7
14777	name="title_accounts">Comptes</string>	22
19656	name="title_accounts">Contas</string>	23
16127	name="title_accounts">Conti</string>	15
15622	name="title_accounts">Cuentas</string>	18
26515	name="title_accounts">Dagboeken</string>	3
22539	name="title_accounts">Fikok</string>	6
23051	name="title_accounts">Hesaplar</string>	8
17467	name="title_accounts">Konta</string>	13
15213	name="title_accounts">Konten</string>	14
14806	name="title_accounts">Kontoer</string>	22
23304	name="title_accounts">Konton</string>	9
16832	name="title_accounts">Rekeningen</string>	14
22656	name="title_accounts">Tilit</string>	7
22389	name="title_accounts">ty</string>	8
24113	name="title_add_account">	20
24082	name="title_add_account"></string>	22
24065	name="title_add_account">Cr&#233	20
24401	name="title_add_account">Crea	14
24107	name="title_add_account">Crear	16
12551	name="title_add_account">Create	65
24508	name="title_add_account">Criar	13
24211	name="title_add_account">Neues	22
24427	name="title_add_account">Nieuw	15
24417	name="title_add_account">Opprett	12
51963	name="title_add_account">Opprette	4
15142	name="title_add_transaction">	53
11365	name="title_add_transaction"></string>	34
23324	name="title_add_transaction">Lgg	7
15228	name="title_add_transaction">Neue	19
72	name="title_add_transaction">New	106
17094	name="title_add_transaction">Nieuwe	17
15955	name="title_add_transaction">Nouvelle	20
22473	name="title_add_transaction">Nov	7
19668	name="title_add_transaction">Nova	22
17817	name="title_add_transaction">Nowa	13
15520	name="title_add_transaction">Nueva	22
16206	name="title_add_transaction">Nuova	23
14723	name="title_add_transaction">Ny	24
14769	name="title_add_transaction">Transacci	10
11581	name="title_add_transaction">Transaksi	7
22727	name="title_add_transaction">Uusi	7
22824	name="title_add_transaction">j	8
25775	name="title_all_accounts">	8
5224	name="title_all_accounts"></string>	59
3833	name="title_all_accounts">All</string>	99
55970	name="title_all_accounts">Alla</string>	2
5014	name="title_all_accounts">Alle</string>	47
62744	name="title_all_accounts">Semua</string>	3
5885	name="title_all_accounts">TODAS</string>	6
3989	name="title_all_accounts">Todas</string>	46
14810	name="title_all_accounts">Tots</string>	12
10874	name="title_all_accounts">Tous</string>	20
16416	name="title_all_accounts">Tutti</string>	23
17857	name="title_all_accounts">Wszystkie</string>	12
15085	name="title_always_delete_exported_transactions">	46
11965	name="title_always_delete_exported_transactions"></string>	39
4893	name="title_always_delete_exported_transactions">Alle	17
12948	name="title_always_delete_exported_transactions">Always	14
20400	name="title_always_delete_exported_transactions">Apagar	19
12480	name="title_always_delete_exported_transactions">Borrar	34
51459	name="title_always_delete_exported_transactions">Delear	8
52039	name="title_always_delete_exported_transactions">Deletar	6
11937	name="title_always_delete_exported_transactions">Delete	108
16281	name="title_always_delete_exported_transactions">Elimina	22
10682	name="title_always_delete_exported_transactions">Hapus	7
22178	name="title_always_delete_exported_transactions">Odstranit	5
56316	name="title_always_delete_exported_transactions">Radera	2
21595	name="title_always_delete_exported_transactions">Slett	10
15157	name="title_always_delete_exported_transactions">Slette	19
10215	name="title_always_delete_exported_transactions">Supprimer	27
22047	name="title_always_delete_exported_transactions">Suprimeix	10
17731	name="title_always_delete_exported_transactions">Usu	13
16986	name="title_always_delete_exported_transactions">Verwijder	22
17944	name="title_backup_preference_category">	22
11999	name="title_backup_preference_category"></string>	38
16814	name="title_backup_preference_category">Back-up</string>	9
4890	name="title_backup_preference_category">Backup</string>	125
22565	name="title_backup_preference_category">Cadangan</string>	7
15292	name="title_backup_preference_category">Copia	22
14767	name="title_backup_preference_category">Cpia	23
17822	name="title_backup_preference_category">Kopia	17
16479	name="title_backup_preference_category">Sauvegarde</string>	14
15204	name="title_backup_preference_category">Sikkerhetskopi</string>	11
21706	name="title_backup_preference_category">Sikkerhetskopiering</string>	22
56124	name="title_backup_preference_category">Skerhetskopiera</string>	2
17912	name="title_backup_prefs">	32
10813	name="title_backup_prefs"></string>	34
16768	name="title_backup_prefs">Back-up	9
4353	name="title_backup_prefs">Backup	109
14935	name="title_backup_prefs">Innstillinger	33
22531	name="title_backup_prefs">Pengaturan	7
20353	name="title_backup_prefs">Prefer&#234	11
15399	name="title_backup_prefs">Preferencias	24
22800	name="title_backup_prefs">Preferenze	17
5487	name="title_backup_prefs">Preferncias	24
14717	name="title_backup_prefs">Preferncies	12
16227	name="title_backup_prefs">Sauvergarde	14
22331	name="title_backup_prefs">Sicherungs-Einstellungen</string>	15
55868	name="title_backup_prefs">Skerhetskopiera	2
17599	name="title_backup_prefs">Ustawienia	15
17883	name="title_balance_sheet_report">	9
12529	name="title_balance_sheet_report"></string>	14
59535	name="title_balance_sheet_report">Balan&#231	6
3500	name="title_balance_sheet_report">Balance	82
54905	name="title_balance_sheet_report">Balano</string>	12
17207	name="title_balance_sheet_report">Balans</string>	14
21926	name="title_balance_sheet_report">Balanseskjema</string>	6
33379	name="title_balance_sheet_report">Bilancio</string>	2
10574	name="title_balance_sheet_report">Bilans</string>	21
59313	name="title_balance_sheet_report">Bilanz</string>	4
3874	name="title_balance_sheet_report">Hoja	15
56327	name="title_balance_sheet_report">Saldorkning</string>	2
29364	name="title_balance_sheet_report">Stato	4
22766	name="title_bar_chart">	9
10594	name="title_bar_chart"></string>	44
22629	name="title_bar_chart">Bagan	7
22231	name="title_bar_chart">Balkendiagramm</string>	8
4942	name="title_bar_chart">Bar	102
3946	name="title_bar_chart">Gr&#225	23
22856	name="title_bar_chart">Grafico	9
5598	name="title_bar_chart">Grfico	28
10549	name="title_bar_chart">Histogramme</string>	16
16579	name="title_bar_chart">Staafdiagram</string>	7
56059	name="title_bar_chart">Stapeldiagram</string>	2
21226	name="title_bar_chart">Stolpediagram</string>	10
15179	name="title_bar_chart">Sylediagram</string>	14
17771	name="title_bar_chart">Wykres	15
12912	name="title_budgets"></string>	24
22641	name="title_budgets">Bilanci</string>	6
56407	name="title_budgets">Budgetar</string>	2
11114	name="title_budgets">Budgets</string>	56
11511	name="title_budgets">Budsjetter</string>	15
22932	name="title_budgets">Oramentos</string>	12
22327	name="title_budgets">Presupuestos</string>	12
8129	name="title_build_version">	41
11948	name="title_build_version"></string>	59
7458	name="title_build_version">Build	101
51913	name="title_build_version">Bygg	6
7416	name="title_build_version">Byggversion</string>	22
21474	name="title_build_version">Byggversjon</string>	12
20549	name="title_build_version">Vers&#227	11
29623	name="title_build_version">Versi	5
8097	name="title_build_version">Versi&#243	29
8331	name="title_build_version">Versie</string>	29
15490	name="title_build_version">Versin	11
8432	name="title_build_version">Version	28
4849	name="title_build_version">Version</string>	39
8515	name="title_build_version">Versione	28
8364	name="title_build_version">Verso	15
29701	name="title_build_version">Verso</string>	15
29591	name="title_build_version">Verze	3
17592	name="title_build_version">Wersja	14
23243	name="title_cash_flow_report">	9
12775	name="title_cash_flow_report"></string>	19
11997	name="title_cash_flow_report">Cash	59
22026	name="title_cash_flow_report">Flujo	12
22602	name="title_cash_flow_report">Flusso	6
11145	name="title_cash_flow_report">Flux	7
23010	name="title_cash_flow_report">Fluxo	12
22255	name="title_cash_flow_report">Geldfluss</string>	12
55865	name="title_cash_flow_report">Kassaflde</string>	2
11224	name="title_cash_flow_report">Kontantstrm</string>	18
17267	name="title_change_passcode">	39
10584	name="title_change_passcode"></string>	34
56359	name="title_change_passcode">Alterar	2
14886	name="title_change_passcode">Bytt	11
22741	name="title_change_passcode">Cambia	8
15612	name="title_change_passcode">Cambiar	14
22322	name="title_change_passcode">Canvia	7
5414	name="title_change_passcode">Change	116
11737	name="title_change_passcode">Changer	14
21359	name="title_change_passcode">Endre	10
10666	name="title_change_passcode">Ganti	10
4173	name="title_change_passcode">Modificar	16
21154	name="title_change_passcode">Mudar	25
22066	name="title_change_passcode">PIN	8
16881	name="title_change_passcode">Wachtwoord	7
17812	name="title_change_passcode">Zmie	18
22021	name="title_change_passcode">Zmnit	5
56241	name="title_change_passcode">ndra	2
15104	name="title_choose_currency">	51
11392	name="title_choose_currency"></string>	28
10853	name="title_choose_currency">Choisisez	21
10188	name="title_choose_currency">Choose	93
15371	name="title_choose_currency">Elegir	14
20539	name="title_choose_currency">Escolhe	19
23039	name="title_choose_currency">Escolher	14
10478	name="title_choose_currency">Pilih	7
22669	name="title_choose_currency">Scegli	6
15918	name="title_choose_currency">Seleccione	5
16348	name="title_choose_currency">Selezione	15
16597	name="title_choose_currency">Standaard	21
5133	name="title_choose_currency">Standard	9
5047	name="title_choose_currency">Standardw&#228	10
15062	name="title_choose_currency">Standardwhrung	7
14684	name="title_choose_currency">Trieu	10
23066	name="title_choose_currency">Varsaylan	8
14730	name="title_choose_currency">Velg	24
56458	name="title_choose_currency">Vlj	2
22107	name="title_choose_currency">Vyberte	5
17261	name="title_choose_currency">Wybierz	11
14871	name="title_confirm_delete">	50
10410	name="title_confirm_delete"></string>	28
14828	name="title_confirm_delete">Bekreft	28
23169	name="title_confirm_delete">Bekrfta	9
16283	name="title_confirm_delete">Conferma	19
10498	name="title_confirm_delete">Confirm	108
19695	name="title_confirm_delete">Confirma	29
15440	name="title_confirm_delete">Confirmaci&#243	6
28857	name="title_confirm_delete">Confirmao	10
15615	name="title_confirm_delete">Confirmar	25
23918	name="title_confirm_delete">Confirmation	6
11744	name="title_confirm_delete">Confirmer	25
11075	name="title_confirm_delete">Konfirmasi	7
5188	name="title_confirm_delete">L&#246	11
14944	name="title_confirm_delete">Lschen	7
22169	name="title_confirm_delete">Potvrdit	7
17493	name="title_confirm_delete">Potwierd	13
22860	name="title_confirm_delete">Trlse	6
22619	name="title_confirm_delete">Vahvista	7
16937	name="title_confirm_delete">Verwijderen	19
28409	name="title_confirm_delete_book">	7
12553	name="title_confirm_delete_book"></string>	14
63029	name="title_confirm_delete_book">Bekreft	3
56074	name="title_confirm_delete_book">Bekrfta	2
64050	name="title_confirm_delete_book">Conferma	2
11819	name="title_confirm_delete_book">Confirm	38
11728	name="title_confirm_delete_book">Confirmar	11
11716	name="title_confirm_delete_book">Confirme	8
11188	name="title_confirm_delete_book">Confirmer	3
60013	name="title_confirm_delete_book">Confirmeu	3
25681	name="title_confirm_delete_book">Lschen	3
55799	name="title_confirm_restore_backup">	2
55785	name="title_confirm_restore_backup"></string>	2
56159	name="title_confirm_restore_backup">Bekrfta	2
55712	name="title_confirm_restore_backup">Conferma	2
21475	name="title_confirm_restore_backup">Confirm	17
55592	name="title_confirm_restore_backup">Confirmar	4
56134	name="title_confirm_restore_backup">Confirme	2
15176	name="title_create_account">	43
11803	name="title_create_account"></string>	43
11053	name="title_create_account">Buat	7
16065	name="title_create_account">Cr&#233	6
16331	name="title_create_account">Crea	27
15853	name="title_create_account">Crear	24
10793	name="title_create_account">Create	90
23020	name="title_create_account">Creeaz	8
15995	name="title_create_account">Crer	11
17572	name="title_create_account">Criar	30
22852	name="title_create_account">Fik	6
17880	name="title_create_account">Hesap	16
22779	name="title_create_account">Luo	9
14861	name="title_create_account">Neues	14
59546	name="title_create_account">Nieuw	6
16598	name="title_create_account">Nieuwe	15
14832	name="title_create_account">Opprett	26
23088	name="title_create_account">Skapa	7
17718	name="title_create_account">Utwrz	19
10156	name="title_create_account">Vytvoit	7
17893	name="title_create_backup_pref">	32
11129	name="title_create_backup_pref"></string>	34
16996	name="title_create_backup_pref">Back-up	9
22760	name="title_create_backup_pref">Crea	17
15873	name="title_create_backup_pref">Crear	24
6308	name="title_create_backup_pref">Create	111
16403	name="title_create_backup_pref">Crer	14
6200	name="title_create_backup_pref">Criar	32
22096	name="title_create_backup_pref">Fer	7
14910	name="title_create_backup_pref">Lag	11
22517	name="title_create_backup_pref">Membuat	7
21304	name="title_create_backup_pref">Opprett	19
22271	name="title_create_backup_pref">Sicherung	15
55907	name="title_create_backup_pref">Skapa	2
17798	name="title_create_backup_pref">Utwrz	15
5306	name="title_create_default_accounts">	55
11156	name="title_create_default_accounts"></string>	41
22654	name="title_create_default_accounts">Buat	7
10942	name="title_create_default_accounts">Cre	23
16336	name="title_create_default_accounts">Crea	38
2240	name="title_create_default_accounts">Crear	28
3847	name="title_create_default_accounts">Create	122
10491	name="title_create_default_accounts">Cria	27
5720	name="title_create_default_accounts">Criar	6
14971	name="title_create_default_accounts">Opprette	31
55916	name="title_create_default_accounts">Skapa	2
16760	name="title_create_default_accounts">Standaard	17
6134	name="title_create_default_accounts">Standard	11
4915	name="title_create_default_accounts">Standard-Konten	18
17319	name="title_create_default_accounts">Utwrz	16
3536	name="title_create_export_schedule">	42
3581	name="title_create_export_schedule"></string>	36
22333	name="title_create_export_schedule">Crea	18
3440	name="title_create_export_schedule">Crear	15
775	name="title_create_export_schedule">Create	106
1512	name="title_create_export_schedule">Crer	22
2802	name="title_create_export_schedule">Criar	45
17036	name="title_create_export_schedule">Export	7
22627	name="title_create_export_schedule">Membuat	7
2102	name="title_create_export_schedule">Opprett	20
21179	name="title_create_export_schedule">Opprette	10
56102	name="title_create_export_schedule">Skapa	2
22379	name="title_create_export_schedule">Wiederkehrenden	8
2705	name="title_create_export_schedule">Zaplanuj	27
12314	name="title_default_accounts">	57
11793	name="title_default_accounts"></string>	37
26248	name="title_default_accounts">Aan	13
10504	name="title_default_accounts">Choisisez	25
10849	name="title_default_accounts">Choisissez	11
13021	name="title_default_accounts">Escolha	28
10329	name="title_default_accounts">Pilih	7
12394	name="title_default_accounts">Seleccionar	29
15838	name="title_default_accounts">Seleccione	12
12664	name="title_default_accounts">Seleccioneu	14
6318	name="title_default_accounts">Selecionar	14
9826	name="title_default_accounts">Select	98
12212	name="title_default_accounts">Selezione	23
12549	name="title_default_accounts">Standaard	14
29886	name="title_default_accounts">Te	9
12277	name="title_default_accounts">Velg	35
29490	name="title_default_accounts">Vyberte	3
12633	name="title_default_accounts">Wybierz	17
4237	name="title_default_accounts">Zu	37
15250	name="title_default_currency">	37
11919	name="title_default_currency"></string>	20
10883	name="title_default_currency">Default	82
15343	name="title_default_currency">Divisa	10
17545	name="title_default_currency">Domylna	9
11184	name="title_default_currency">Mata	3
21004	name="title_default_currency">Moeda	19
14796	name="title_default_currency">Moneda	11
11788	name="title_default_currency">Monnaie	17
16731	name="title_default_currency">Standaard	17
4024	name="title_default_currency">Standard	13
14797	name="title_default_currency">Standardvaluta</string>	20
4507	name="title_default_currency">Standardw&#228	10
14855	name="title_default_currency">Standardwhrung</string>	3
16407	name="title_default_currency">Valuta	15
59235	name="title_default_currency">Varsaylan	4
55475	name="title_default_currency">Vchoz	2
14958	name="title_default_export_email">	33
22652	name="title_default_export_email"></string>	6
22248	name="title_default_export_email">Adrea	7
12981	name="title_default_export_email">Correo	32
11753	name="title_default_export_email">Default	122
17546	name="title_default_export_email">Domylny	13
17335	name="title_default_export_email">E-mail	17
7533	name="title_default_export_email">E-post	20
11016	name="title_default_export_email">Email	62
10718	name="title_default_export_email">Email</string>	17
16966	name="title_default_export_email">Standaard	20
4078	name="title_default_export_email">Standard	27
22372	name="title_default_export_email">Vchoz	5
10150	name="title_default_export_email">email</string>	25
6193	name="title_default_export_format">	53
10123	name="title_default_export_format"></string>	27
5562	name="title_default_export_format">Default	114
17554	name="title_default_export_format">Domylny	13
12264	name="title_default_export_format">Formart	10
14712	name="title_default_export_format">Format	29
5495	name="title_default_export_format">Formato	58
16523	name="title_default_export_format">Standaard	13
5868	name="title_default_export_format">Standard	34
4361	name="title_default_export_format">Standard-Export-Format</string>	14
22357	name="title_default_export_format">Vchoz	7
14854	name="title_default_transaction_type">	28
11450	name="title_default_transaction_type"></string>	20
5752	name="title_default_transaction_type">Default	89
17523	name="title_default_transaction_type">Domylny	9
16965	name="title_default_transaction_type">Standaard	13
15108	name="title_default_transaction_type">Standard	23
11861	name="title_default_transaction_type">Tipe	3
12248	name="title_default_transaction_type">Tipo	49
14687	name="title_default_transaction_type">Tipus	6
4153	name="title_default_transaction_type">Type	19
55502	name="title_default_transaction_type">Vchoz	2
14895	name="title_default_transaction_type">Voreinstellung	10
14898	name="title_delete_all_accounts">	30
10946	name="title_delete_all_accounts"></string>	19
4142	name="title_delete_all_accounts">Alle	18
20686	name="title_delete_all_accounts">Apagar	13
15582	name="title_delete_all_accounts">Borrar	13
57621	name="title_delete_all_accounts">Deletar	6
7183	name="title_delete_all_accounts">Delete	92
16460	name="title_delete_all_accounts">Elimina	15
10807	name="title_delete_all_accounts">Hapus	3
56011	name="title_delete_all_accounts">Radera	2
7661	name="title_delete_all_accounts">Slette	22
55817	name="title_delete_all_accounts">Smazat	5
12040	name="title_delete_all_accounts">Supprimer	18
60036	name="title_delete_all_accounts">Suprimeix	6
17373	name="title_delete_all_accounts">Usu	9
3900	name="title_delete_all_transactions">	52
10531	name="title_delete_all_transactions"></string>	28
4723	name="title_delete_all_transactions">Alle	28
20370	name="title_delete_all_transactions">Apagar	18
3866	name="title_delete_all_transactions">Borrar	28
57618	name="title_delete_all_transactions">Deletar	6
2389	name="title_delete_all_transactions">Delete	109
3915	name="title_delete_all_transactions">Elimina	25
12832	name="title_delete_all_transactions">Hapus	7
56266	name="title_delete_all_transactions">Radera	2
21861	name="title_delete_all_transactions">Slett	10
2976	name="title_delete_all_transactions">Slette	19
22216	name="title_delete_all_transactions">Smazat	7
2532	name="title_delete_all_transactions">Supprimer	23
22384	name="title_delete_all_transactions">Suprimeix	10
17838	name="title_delete_all_transactions">Usu	13
11448	name="title_dropbox_sync_preference">	22
64047	name="title_dropbox_sync_preference">Abilita	2
57377	name="title_dropbox_sync_preference">Activer	3
62738	name="title_dropbox_sync_preference">Aktifkan	3
25963	name="title_dropbox_sync_preference">Aktiver	8
56128	name="title_dropbox_sync_preference">Aktivera	2
4704	name="title_dropbox_sync_preference">DropBox	109
59204	name="title_dropbox_sync_preference">Dropbox	6
11174	name="title_dropbox_sync_preference">Enable	37
59961	name="title_dropbox_sync_preference">Habilita	3
28176	name="title_dropbox_sync_preference">Habilitar	11
64124	name="title_dropbox_sync_preference">Permitir	2
20552	name="title_dropbox_sync_preference">Sincroniza&#231	11
15977	name="title_dropbox_sync_preference">Sincronizacin	5
62405	name="title_dropbox_sync_preference">Sincronizao	7
29201	name="title_dropbox_sync_preference">Sincronizzazione	11
58654	name="title_dropbox_sync_preference">Synchronizacja	4
15275	name="title_edit_account">	67
51385	name="title_edit_account">&#233	4
11173	name="title_edit_account"></string>	64
26348	name="title_edit_account">Dagboek	6
11906	name="title_edit_account">Edit	147
22432	name="title_edit_account">Edita	11
22926	name="title_edit_account">Editai	8
15824	name="title_edit_account">Editar	77
23870	name="title_edit_account">Editer	11
51857	name="title_edit_account">Editere	4
17589	name="title_edit_account">Edytuj	24
22786	name="title_edit_account">Fik	6
17943	name="title_edit_account">Hesab	16
14999	name="title_edit_account">Konto	36
16399	name="title_edit_account">Modifica	34
22547	name="title_edit_account">Muokkaa	9
14702	name="title_edit_account">Rediger	38
23290	name="title_edit_account">Redigera	7
17155	name="title_edit_account">Rekening	29
10808	name="title_edit_account">Ubah	7
11328	name="title_edit_account">Upravit	7
15956	name="title_edit_account">diter	27
14960	name="title_edit_transaction">	50
11516	name="title_edit_transaction"></string>	31
16710	name="title_edit_transaction">Boeking	10
6116	name="title_edit_transaction">Buchung	15
10781	name="title_edit_transaction">Edit	102
22387	name="title_edit_transaction">Edita	10
15508	name="title_edit_transaction">Editar	48
23482	name="title_edit_transaction">Editer	13
17541	name="title_edit_transaction">Edytuj	13
16216	name="title_edit_transaction">Modifica	19
22500	name="title_edit_transaction">Muokkaa	7
14738	name="title_edit_transaction">Rediger	18
23269	name="title_edit_transaction">Redigera	9
21519	name="title_edit_transaction">Redigere	10
26431	name="title_edit_transaction">Transactie	12
10723	name="title_edit_transaction">Ubah	7
22434	name="title_edit_transaction">Upravit	7
11162	name="title_edit_transaction">diter	14
17971	name="title_enable_crashlytics">	34
12121	name="title_enable_crashlytics"></string>	21
60065	name="title_enable_crashlytics">Absturzprotokollierung	3
59267	name="title_enable_crashlytics">Absturzprotokolloerung	7
3455	name="title_enable_crashlytics">Activar	17
12078	name="title_enable_crashlytics">Activer	12
22692	name="title_enable_crashlytics">Aktifkan	7
21238	name="title_enable_crashlytics">Aktiver	10
56084	name="title_enable_crashlytics">Aktivera	2
22838	name="title_enable_crashlytics">Attiva	6
17095	name="title_enable_crashlytics">Crash	3
4699	name="title_enable_crashlytics">Enable	108
6216	name="title_enable_crashlytics">Habilitar	6
21045	name="title_enable_crashlytics">Permite	16
15268	name="title_enable_crashlytics">Skru	11
17749	name="title_enable_crashlytics">Wcz	17
55739	name="title_enable_passcode">	2
55683	name="title_enable_passcode"></string>	4
56018	name="title_enable_passcode">Activar	2
55878	name="title_enable_passcode">Aktivera	2
55745	name="title_enable_passcode">Attiva	2
21311	name="title_enable_passcode">Enable	17
55724	name="title_enable_passcode">Habilitar	4
34029	name="title_enable_passcode">Turn	8
15009	name="title_export_all_transactions">	34
11996	name="title_export_all_transactions"></string>	25
4542	name="title_export_all_transactions">Alle	13
12144	name="title_export_all_transactions">Always	12
11278	name="title_export_all_transactions">Ekspor	3
17497	name="title_export_all_transactions">Eksport	9
15094	name="title_export_all_transactions">Eksportere	25
16446	name="title_export_all_transactions">Esporta	18
11247	name="title_export_all_transactions">Export	93
60007	name="title_export_all_transactions">Exporta	6
12592	name="title_export_all_transactions">Exportar	45
16741	name="title_export_all_transactions">Exporteer	18
16076	name="title_export_all_transactions">Exporter	20
56335	name="title_export_all_transactions">Exportera	2
55518	name="title_export_all_transactions">Exportovat	2
17850	name="title_export_dialog">	55
11427	name="title_export_dialog"></string>	46
5327	name="title_export_dialog">Buchungen	19
10242	name="title_export_dialog">Ekspor	7
17649	name="title_export_dialog">Eksport	24
8624	name="title_export_dialog">Eksporter	23
51858	name="title_export_dialog">Eksportere	4
16257	name="title_export_dialog">Esporta	35
11523	name="title_export_dialog">Export	135
22480	name="title_export_dialog">Exporta	10
12780	name="title_export_dialog">Exportar	44
11142	name="title_export_dialog">Exporter	36
11135	name="title_export_dialog">Exportera	12
22282	name="title_export_dialog">Exportovat	7
16743	name="title_export_dialog">OFX	21
28520	name="title_export_dialog">OFX</string>	7
22599	name="title_export_dialog">Vie	9
15214	name="title_export_email">	62
12966	name="title_export_email">Esportazione	32
16794	name="title_export_email">Export	7
2593	name="title_export_email">Exportaci&#243	29
15400	name="title_export_email">Exportacin	11
28617	name="title_export_email">Exportar	16
11849	name="title_export_email">Exportation	7
12035	name="title_export_email">GnuCash	159
5239	name="title_export_email">Gnucash	53
11677	name="title_export_preference_category"></string>	55
11196	name="title_export_preference_category">Ekspor</string>	3
15231	name="title_export_preference_category">Eksport</string>	31
16408	name="title_export_preference_category">Esporta</string>	13
11848	name="title_export_preference_category">Export</string>	107
12290	name="title_export_preference_category">Exportaci&#243	27
60074	name="title_export_preference_category">Exportaci</string>	6
15326	name="title_export_preference_category">Exportacin</string>	5
21076	name="title_export_preference_category">Exportar</string>	19
17203	name="title_export_preference_category">Exporteer</string>	13
57309	name="title_export_preference_category">Exporter</string>	3
56077	name="title_export_preference_category">Exportera</string>	2
14924	name="title_export_preference_category">Exportieren</string>	11
28094	name="title_favorite_accounts">	5
5213	name="title_favorite_accounts"></string>	47
16936	name="title_favorite_accounts">Favorieten</string>	9
16159	name="title_favorite_accounts">Favoris</string>	11
62707	name="title_favorite_accounts">Favorit</string>	3
4316	name="title_favorite_accounts">Favoriten</string>	9
56069	name="title_favorite_accounts">Favoriter</string>	2
3592	name="title_favorite_accounts">Favorites</string>	90
16146	name="title_favorite_accounts">Favoriti</string>	13
4370	name="title_favorite_accounts">Favoritos</string>	30
15235	name="title_favorite_accounts">Favoritter</string>	18
59348	name="title_favorite_accounts">Favourites</string>	4
33298	name="title_favorite_accounts">Preferiti</string>	2
60049	name="title_favorite_accounts">Preferits</string>	6
17814	name="title_favorite_accounts">Ulubione</string>	9
18007	name="title_general_prefs">	24
10925	name="title_general_prefs"></string>	68
16909	name="title_general_prefs">Algemeen</string>	18
5913	name="title_general_prefs">Allgemein</string>	32
56318	name="title_general_prefs">Allmnna	2
16046	name="title_general_prefs">G&#233	17
23073	name="title_general_prefs">Genel	8
11782	name="title_general_prefs">General	90
12098	name="title_general_prefs">General</string>	25
16135	name="title_general_prefs">Generale</string>	25
21538	name="title_general_prefs">Generelle	10
15072	name="title_general_prefs">Generelt</string>	19
11645	name="title_general_prefs">Gnral</string>	6
17291	name="title_general_prefs">Oglne	13
20449	name="title_general_prefs">Prefer&#234	11
10534	name="title_general_prefs">Preferensi	7
22607	name="title_general_prefs">Preferenze	6
28858	name="title_general_prefs">Preferncias	10
22941	name="title_general_prefs">Preferncias</string>	14
14733	name="title_general_prefs">Preferncies	13
10675	name="title_general_prefs">Prfrences	7
22019	name="title_general_prefs">Veobecn	5
12026	name="title_google_drive_sync_pref">	30
29675	name="title_google_drive_sync_pref">Abilita	4
29641	name="title_google_drive_sync_pref">Activer	5
29661	name="title_google_drive_sync_pref">Aktifkan	5
25838	name="title_google_drive_sync_pref">Aktiver	11
10893	name="title_google_drive_sync_pref">Enable	42
6206	name="title_google_drive_sync_pref">Google	101
29616	name="title_google_drive_sync_pref">Habilita	5
28140	name="title_google_drive_sync_pref">Habilitar	18
29720	name="title_google_drive_sync_pref">Permitir	4
20915	name="title_google_drive_sync_pref">Sincroniza&#231	11
15946	name="title_google_drive_sync_pref">Sincronizacin	5
62393	name="title_google_drive_sync_pref">Sincronizao	7
29184	name="title_google_drive_sync_pref">Sincronizzazione	11
58624	name="title_google_drive_sync_pref">Synchronizacja	4
17921	name="title_google_plus_community">	6
11302	name="title_google_plus_community">Communaut	3
29189	name="title_google_plus_community">Community	7
16100	name="title_google_plus_community">Comunidad	6
62479	name="title_google_plus_community">Comunidade	3
21281	name="title_google_plus_community">Google	6
10158	name="title_google_plus_community">Google+	78
16683	name="title_google_plus_community">Google+-community</string>	3
59280	name="title_google_plus_community">Google+</string>	7
58638	name="title_google_plus_community">Spoeczno	4
19943	name="title_green">#319D67</color>	10
15129	name="title_import_accounts">	31
22762	name="title_import_accounts">GnuCachXML</string>	6
6013	name="title_import_accounts">GnuCash	32
5030	name="title_import_accounts">GnuCash-Konten	10
10349	name="title_import_accounts">GnuCash</string>	21
11496	name="title_import_accounts">Impor	7
7119	name="title_import_accounts">Import	108
16318	name="title_import_accounts">Importa	29
15885	name="title_import_accounts">Importar	27
15886	name="title_import_accounts">Importas	15
11030	name="title_import_accounts">Importer	15
56351	name="title_import_accounts">Importera	2
8386	name="title_import_accounts">Importere	26
22462	name="title_import_accounts">Importovat	9
17423	name="title_import_accounts">Importuj	13
15190	name="title_license">	21
10128	name="title_license"></string>	66
22918	name="title_license">Licena</string>	23
10773	name="title_license">Licence</string>	33
12713	name="title_license">Licencia</string>	29
17324	name="title_license">Licencja</string>	16
56267	name="title_license">Licens</string>	2
20446	name="title_license">Licensa</string>	20
11916	name="title_license">License</string>	113
17143	name="title_license">Licentie</string>	15
16466	name="title_license">Licenza</string>	28
23241	name="title_license">Lisans</string>	8
15029	name="title_license">Lisens</string>	35
11746	name="title_license">Lisensi</string>	7
5299	name="title_license">Lizenz</string>	36
14670	name="title_license">Llicncia</string>	16
17997	name="title_line_chart">	23
10244	name="title_line_chart"></string>	42
22567	name="title_line_chart">Bagan	7
3342	name="title_line_chart">Gr&#225	23
22544	name="title_line_chart">Grafico	6
11498	name="title_line_chart">Graphique	16
4512	name="title_line_chart">Grfico	28
17137	name="title_line_chart">Lijndiagram</string>	7
4585	name="title_line_chart">Line	101
22130	name="title_line_chart">Liniendiagramm</string>	8
14873	name="title_line_chart">Linjediagram</string>	26
17784	name="title_line_chart">Wykres	13
28454	name="title_manage_books">	7
12681	name="title_manage_books"></string>	5
11038	name="title_manage_books">Administrar	8
25592	name="title_manage_books">Bcher	8
10322	name="title_manage_books">Gerenciar	9
64120	name="title_manage_books">Gerir	2
60024	name="title_manage_books">Gestiona	3
64030	name="title_manage_books">Gestione	2
11449	name="title_manage_books">Grer	3
56434	name="title_manage_books">Hantera	2
11056	name="title_manage_books">Manage	37
10859	name="title_move_transactions">	78
5925	name="title_move_transactions">%1$d	46
22661	name="title_move_transactions">%1$d</string>	12
16047	name="title_move_transactions">D&#233	13
10510	name="title_move_transactions">Dplacer	15
14809	name="title_move_transactions">Flytt	42
11391	name="title_move_transactions">Flytta	9
10806	name="title_move_transactions">Memindah	7
22266	name="title_move_transactions">Mou	7
11605	name="title_move_transactions">Move	127
15335	name="title_move_transactions">Mover	52
22464	name="title_move_transactions">Pesunout	10
17656	name="title_move_transactions">Przenie	17
16244	name="title_move_transactions">Sposta	26
55674	name="title_no_backups_found">	2
55830	name="title_no_backups_found"></string>	2
55995	name="title_no_backups_found">Inga	2
55643	name="title_no_backups_found">Nenhum	2
55818	name="title_no_backups_found">Nessun	2
21768	name="title_no_backups_found">No	17
10405	name="title_owncloud_sync_preference">	5
64053	name="title_owncloud_sync_preference">Abilita	2
57394	name="title_owncloud_sync_preference">Activer	3
62754	name="title_owncloud_sync_preference">Aktifkan	3
25936	name="title_owncloud_sync_preference">Aktiver	10
56042	name="title_owncloud_sync_preference">Aktivera	2
11973	name="title_owncloud_sync_preference">Enable	34
59973	name="title_owncloud_sync_preference">Habilita	3
28107	name="title_owncloud_sync_preference">Habilitar	11
28240	name="title_owncloud_sync_preference">OwnCloud	5
32708	name="title_owncloud_sync_preference">Owncloud	7
64086	name="title_owncloud_sync_preference">Permitir	2
28227	name="title_owncloud_sync_preference">ownCloud	13
17623	name="title_passcode_disabled">	31
10266	name="title_passcode_disabled"></string>	27
10605	name="title_passcode_disabled">Code	12
29236	name="title_passcode_disabled">Codice	4
16058	name="title_passcode_disabled">Contrase&#241	6
15670	name="title_passcode_disabled">Contrasea	7
14737	name="title_passcode_disabled">Contrasenya	8
17516	name="title_passcode_disabled">Haso	16
10462	name="title_passcode_disabled">Kode	8
20493	name="title_passcode_disabled">Palavra	19
5138	name="title_passcode_disabled">Passcode	97
14965	name="title_passcode_disabled">Passkode	11
21544	name="title_passcode_disabled">Passord	8
29530	name="title_passcode_disabled">Pstupov	3
5945	name="title_passcode_disabled">Senha	14
16916	name="title_passcode_disabled">Wachtwoord	5
29597	name="title_passcode_disabled">Zugang	6
17796	name="title_passcode_enabled">	31
10279	name="title_passcode_enabled"></string>	21
10231	name="title_passcode_enabled">Code	12
29473	name="title_passcode_enabled">Codice	4
16079	name="title_passcode_enabled">Contrase&#241	8
15372	name="title_passcode_enabled">Contrasea	7
14837	name="title_passcode_enabled">Contrasenya	11
17391	name="title_passcode_enabled">Haso	11
29492	name="title_passcode_enabled">Kdov	3
11538	name="title_passcode_enabled">Kode	5
21119	name="title_passcode_enabled">Palavra	17
5361	name="title_passcode_enabled">Passcode	95
15098	name="title_passcode_enabled">Passkode	11
21864	name="title_passcode_enabled">Passord	8
5604	name="title_passcode_enabled">Senha	14
16700	name="title_passcode_enabled">Wachtwoord	5
29524	name="title_passcode_enabled">Zugang	6
17666	name="title_passcode_preferences">	39
11550	name="title_passcode_preferences"></string>	28
15870	name="title_passcode_preferences">Ajustes	16
56388	name="title_passcode_preferences">Lsenkod	2
6395	name="title_passcode_preferences">Passcode	113
15060	name="title_passcode_preferences">Passkode	11
21494	name="title_passcode_preferences">Passordpreferanser</string>	10
22031	name="title_passcode_preferences">Pedvolby	5
11681	name="title_passcode_preferences">Pengaturan	7
20976	name="title_passcode_preferences">Prefer&#234	11
22529	name="title_passcode_preferences">Preferenze	8
14834	name="title_passcode_preferences">PreferncIes	13
5096	name="title_passcode_preferences">Preferncias	21
11947	name="title_passcode_preferences">Prfrences	14
22477	name="title_passcode_preferences">Sicherheit</string>	8
17561	name="title_passcode_preferences">Ustawienia	13
16742	name="title_passcode_preferences">Wachtwoord	7
17884	name="title_pie_chart">	17
10317	name="title_pie_chart"></string>	25
62778	name="title_pie_chart">Bagan	3
16879	name="title_pie_chart">Cirkeldiagram</string>	5
11557	name="title_pie_chart">Diagramme	9
15982	name="title_pie_chart">Gr&#225	17
29387	name="title_pie_chart">Grafico	5
12007	name="title_pie_chart">Graphique	3
6300	name="title_pie_chart">Grfico	16
14934	name="title_pie_chart">Kakediagram</string>	11
4486	name="title_pie_chart">Pie	83
21818	name="title_pie_chart">Sektordiagram</string>	6
59212	name="title_pie_chart">Tortendiagramm</string>	4
17265	name="title_pie_chart">Wykres	9
6137	name="title_progress_exporting_transactions">	56
12001	name="title_progress_exporting_transactions"></string>	33
6621	name="title_progress_exporting_transactions">Die	18
17405	name="title_progress_exporting_transactions">Eksport	15
15015	name="title_progress_exporting_transactions">Eksporter	15
21694	name="title_progress_exporting_transactions">Eksportere	13
16203	name="title_progress_exporting_transactions">Esportazione	19
4655	name="title_progress_exporting_transactions">Exportando	46
16061	name="title_progress_exporting_transactions">Exportation	20
56101	name="title_progress_exporting_transactions">Exporterar	2
6089	name="title_progress_exporting_transactions">Exporting	119
22780	name="title_progress_exporting_transactions">Mengekspor	7
22298	name="title_progress_exporting_transactions">S\'estan	7
16748	name="title_progress_exporting_transactions">Transactions	15
5919	name="title_progress_importing_accounts">	45
2784	name="title_progress_importing_accounts"></string>	35
2562	name="title_progress_importing_accounts">Importando	47
15998	name="title_progress_importing_accounts">Importation	16
16323	name="title_progress_importing_accounts">Importazione	17
56186	name="title_progress_importing_accounts">Importera	2
21591	name="title_progress_importing_accounts">Importere	10
15132	name="title_progress_importing_accounts">Importerer	12
3388	name="title_progress_importing_accounts">Importing	110
22139	name="title_progress_importing_accounts">Importovn	7
17818	name="title_progress_importing_accounts">Importowanie	13
5344	name="title_progress_importing_accounts">Konten	12
12458	name="title_progress_importing_accounts">Mengimpor	7
17046	name="title_progress_importing_accounts">Rekeningen	13
22054	name="title_progress_importing_accounts">S\'estan	7
28098	name="title_recent_accounts">	5
5223	name="title_recent_accounts"></string>	55
4658	name="title_recent_accounts">Krzlich</string>	11
15084	name="title_recent_accounts">Nylige</string>	12
17820	name="title_recent_accounts">Ostatnie</string>	14
16313	name="title_recent_accounts">Rcent</string>	12
3468	name="title_recent_accounts">Recent</string>	97
4619	name="title_recent_accounts">Recente</string>	11
20343	name="title_recent_accounts">Recentes</string>	23
16409	name="title_recent_accounts">Recenti</string>	15
14812	name="title_recent_accounts">Recents</string>	11
12061	name="title_recent_accounts">Reciente</string>	18
10677	name="title_recent_accounts">Recientes</string>	3
55912	name="title_recent_accounts">Senaste</string>	2
21689	name="title_recent_accounts">Siste</string>	8
62741	name="title_recent_accounts">Terbaru</string>	3
55615	name="title_rename_book">	2
55647	name="title_rename_book"></string>	2
56263	name="title_rename_book">Byt	2
56261	name="title_rename_book">Cambiar	2
56257	name="title_rename_book">Mudar	2
21383	name="title_rename_book">Rename	20
55630	name="title_rename_book">Renomear	2
55769	name="title_rename_book">Rinomina	2
4456	name="title_report_currency">Report	4
5080	name="title_report_currency">title_report_currency</string>	4
17989	name="title_report_prefs">	27
10590	name="title_report_prefs"></string>	24
22246	name="title_report_prefs">Berichte</string>	8
14969	name="title_report_prefs">Innstillinger	11
22612	name="title_report_prefs">Pengaturan	7
20382	name="title_report_prefs">Prefer&#234	11
15968	name="title_report_prefs">Preferencias	10
22534	name="title_report_prefs">Preferenze	11
4902	name="title_report_prefs">Preferncias	13
14784	name="title_report_prefs">Preferncies	10
11438	name="title_report_prefs">Prfrences	13
16684	name="title_report_prefs">Rapport	7
56366	name="title_report_prefs">Rapport-instllningar</string>	2
21393	name="title_report_prefs">Rapportinnstillinger</string>	10
5957	name="title_report_prefs">Report	98
17369	name="title_report_prefs">Ustawienia	15
12570	name="title_report_sheet"></string>	21
21257	name="title_report_sheet">Ark</string>	8
29297	name="title_report_sheet">Bilancio</string>	2
59224	name="title_report_sheet">Bilanz</string>	4
16512	name="title_report_sheet">Blad</string>	8
10638	name="title_report_sheet">Feuille</string>	10
59489	name="title_report_sheet">Folha</string>	11
3255	name="title_report_sheet">Hoja</string>	9
54987	name="title_report_sheet">Relatrio</string>	7
3044	name="title_report_sheet">Sheet</string>	84
17575	name="title_report_sheet">Skoroszyt</string>	8
10621	name="title_reports"></string>	36
59266	name="title_reports">Berichte</string>	4
14830	name="title_reports">Informes</string>	14
62735	name="title_reports">Laporan</string>	3
16148	name="title_reports">Raport</string>	6
17268	name="title_reports">Raporty</string>	9
16953	name="title_reports">Rapporten</string>	3
15241	name="title_reports">Rapporter</string>	19
11465	name="title_reports">Rapports</string>	5
20326	name="title_reports">Relat&#243	11
4948	name="title_reports">Relatrios</string>	8
5680	name="title_reports">Reports</string>	79
29353	name="title_reports">Resoconti</string>	5
17929	name="title_restore_backup">	26
11316	name="title_restore_backup">&#8230	21
18002	name="title_restore_backup"></string>	11
16656	name="title_restore_backup">Back-up	5
21480	name="title_restore_backup">Gjenopprette	16
62781	name="title_restore_backup">Mengembalikan	3
17705	name="title_restore_backup">Przywrc	13
59965	name="title_restore_backup">Restaura	3
5536	name="title_restore_backup">Restaurar	24
16234	name="title_restore_backup">Restaurer	10
5090	name="title_restore_backup">Restore	109
29408	name="title_restore_backup">Ripristina	10
28188	name="title_restore_backup">Sicherung	11
15264	name="title_restore_backup">Tilbakefr	11
55872	name="title_restore_backup">terstll	2
51570	name="title_restore_last_backup">Restore	6
17940	name="title_save_opening_balances">	43
11842	name="title_save_opening_balances"></string>	39
17081	name="title_save_opening_balances">Beginsaldi	7
10602	name="title_save_opening_balances">Enregistrer	27
20455	name="title_save_opening_balances">Grava	21
15784	name="title_save_opening_balances">Guardar	27
14920	name="title_save_opening_balances">Lagre	34
15278	name="title_save_opening_balances">Saldo	22
22864	name="title_save_opening_balances">Salva	6
5874	name="title_save_opening_balances">Salvar	6
5926	name="title_save_opening_balances">Save	129
22537	name="title_save_opening_balances">Simpan	7
56443	name="title_save_opening_balances">Spara	2
22202	name="title_save_opening_balances">Uloit	5
17760	name="title_save_opening_balances">Zachowaj	13
17982	name="title_scheduled_exports">	18
12114	name="title_scheduled_exports"></string>	29
22664	name="title_scheduled_exports">Ekspor</string>	7
21663	name="title_scheduled_exports">Eksporter</string>	10
22610	name="title_scheduled_exports">Esportazioni</string>	6
20204	name="title_scheduled_exports">Exporta&#231	11
2862	name="title_scheduled_exports">Exportaciones	13
14716	name="title_scheduled_exports">Exportacions</string>	13
5550	name="title_scheduled_exports">Exportaes	19
56284	name="title_scheduled_exports">Exporter</string>	2
11209	name="title_scheduled_exports">Exports	12
14749	name="title_scheduled_exports">Exports</string>	70
15053	name="title_scheduled_exports">Planlagte	11
31799	name="title_scheduled_exports">Sched.	4
2750	name="title_scheduled_exports">Scheduled	59
17420	name="title_scheduled_exports">Zaplanowane	13
6054	name="title_scheduled_transactions">	43
11870	name="title_scheduled_transactions"></string>	46
11045	name="title_scheduled_transactions"></string>+	1
14709	name="title_scheduled_transactions">Assentaments</string>	10
4821	name="title_scheduled_transactions">Eingeplante	25
15124	name="title_scheduled_transactions">Planlagte	14
31828	name="title_scheduled_transactions">Sched.	4
5542	name="title_scheduled_transactions">Scheduled	53
20825	name="title_scheduled_transactions">Transa&#231	11
15881	name="title_scheduled_transactions">Transacciones	18
10692	name="title_scheduled_transactions">Transactions	22
11233	name="title_scheduled_transactions">Transactions</string>	75
5529	name="title_scheduled_transactions">Transaes	14
22797	name="title_scheduled_transactions">Transaksi</string>	7
21630	name="title_scheduled_transactions">Transaksjoner</string>	16
56306	name="title_scheduled_transactions">Transaktioner</string>	2
22817	name="title_scheduled_transactions">Transazioni</string>	6
16773	name="title_scheduled_transactions">Vaste	19
17465	name="title_scheduled_transactions">Zaplanowane	16
56007	name="title_section_preferences"></string>	2
55944	name="title_section_preferences">Instllningar</string>	2
55798	name="title_section_preferences">Preferences</string>	5
56301	name="title_section_preferences">Preferencias</string>	2
56354	name="title_section_preferences">Preferenze</string>	2
56179	name="title_section_preferences">Preferncias</string>	2
55774	name="title_select_backup_file">	2
55656	name="title_select_backup_file"></string>	2
56466	name="title_select_backup_file">Escolha	2
55992	name="title_select_backup_file">Seleccione	2
55734	name="title_select_backup_file">Selecionar	2
21184	name="title_select_backup_file">Select	18
55768	name="title_select_backup_file">Seleziona	2
55945	name="title_select_backup_file">Vlj	2
17928	name="title_select_backup_to_restore">	34
11221	name="title_select_backup_to_restore"></string>	31
20469	name="title_select_backup_to_restore">Escolha	31
22733	name="title_select_backup_to_restore">Pilih	7
15482	name="title_select_backup_to_restore">Seleccione	24
22309	name="title_select_backup_to_restore">Seleccioneu	7
5288	name="title_select_backup_to_restore">Selecionar	6
4592	name="title_select_backup_to_restore">Select	106
17201	name="title_select_backup_to_restore">Selecteer	9
22515	name="title_select_backup_to_restore">Seleziona	14
16415	name="title_select_backup_to_restore">Slectionnez	14
14968	name="title_select_backup_to_restore">Velg	32
56265	name="title_select_backup_to_restore">Vlj	2
22267	name="title_select_backup_to_restore">Whle	15
17365	name="title_select_backup_to_restore">Wybierz	22
17967	name="title_select_export_destination">	31
10207	name="title_select_export_destination"></string>	27
20828	name="title_select_export_destination">Escolha	19
14956	name="title_select_export_destination">Exportziel	10
22631	name="title_select_export_destination">Pilih	7
15831	name="title_select_export_destination">Seleccionar	18
22471	name="title_select_export_destination">Seleccioneu	7
6220	name="title_select_export_destination">Selecione	6
5459	name="title_select_export_destination">Select	125
16727	name="title_select_export_destination">Selecteer	7
10816	name="title_select_export_destination">Selectionnez	16
22811	name="title_select_export_destination">Seleziona	8
21679	name="title_select_export_destination">Velg	10
56233	name="title_select_export_destination">Vlj	2
17433	name="title_select_export_destination">Wybierz	13
17957	name="title_select_gnucash_xml_file">	19
20740	name="title_select_gnucash_xml_file">Escolha	23
10465	name="title_select_gnucash_xml_file">GnuCash	28
29630	name="title_select_gnucash_xml_file">Pilih	5
15757	name="title_select_gnucash_xml_file">Seleccionar	20
29500	name="title_select_gnucash_xml_file">Seleccioneu	5
4107	name="title_select_gnucash_xml_file">Select	113
17017	name="title_select_gnucash_xml_file">Selecteer	7
16390	name="title_select_gnucash_xml_file">Selectionner	12
29326	name="title_select_gnucash_xml_file">Seleziona	12
15273	name="title_select_gnucash_xml_file">Velg	31
17519	name="title_select_gnucash_xml_file">Wybierz	15
11387	name="title_selected">	7
5117	name="title_selected">%1$d	188
22140	name="title_selected">Vybrno	7
10698	name="title_settings"></string>	77
12175	name="title_settings">Ajustes</string>	30
12945	name="title_settings">Ayarlar</string>	9
12561	name="title_settings">Belltsok</string>	7
20433	name="title_settings">Configura&#231	11
12402	name="title_settings">Configuraes</string>	25
5010	name="title_settings">Einstellungen</string>	32
16130	name="title_settings">Impostazioni</string>	26
12654	name="title_settings">Innstillinger</string>	42
16752	name="title_settings">Instellingen</string>	24
51976	name="title_settings">Instillinger</string>	4
11566	name="title_settings">Instllningar</string>	7
22148	name="title_settings">Nastaven</string>	7
15710	name="title_settings">Opciones</string>	8
15966	name="title_settings">Param&#232	16
10905	name="title_settings">Paramtres</string>	18
11186	name="title_settings">Pengaturan</string>	5
52024	name="title_settings">Preferencias</string>	5
12493	name="title_settings">Preferncies</string>	15
10305	name="title_settings">Settings</string>	100
12621	name="title_settings">Ustawienia</string>	20
17901	name="title_setup_gnucash">	9
59992	name="title_setup_gnucash">Configura	3
3809	name="title_setup_gnucash">Configurar	22
16250	name="title_setup_gnucash">Configuration	7
28121	name="title_setup_gnucash">GnuCash	14
12686	name="title_setup_gnucash">GnuCash</string>	7
29452	name="title_setup_gnucash">Imposta	4
21618	name="title_setup_gnucash">Oppsett	6
2864	name="title_setup_gnucash">Setup	88
56269	name="title_setup_gnucash">Stll	2
17542	name="title_setup_gnucash">Ustaw	8
12353	name="title_sgml_ofx_header">Usar	5
12555	name="title_sgml_ofx_header">Use	5
26714	name="title_share_ofx_with">	13
26883	name="title_share_ofx_with">Compartilhar	10
27051	name="title_share_ofx_with">Compartir	8
26721	name="title_share_ofx_with">Condividi	8
26611	name="title_share_ofx_with">Del	10
26250	name="title_share_ofx_with">OFX	9
4547	name="title_share_ofx_with">OFX-Datei	13
26709	name="title_share_ofx_with">OFX</string>	8
26778	name="title_share_ofx_with">Partager	11
26930	name="title_share_ofx_with">Share	15
17885	name="title_split_editor">	9
12432	name="title_split_editor"></string>	9
56259	name="title_split_editor">Delarredigerare</string>	2
16107	name="title_split_editor">Editeur	7
3308	name="title_split_editor">Editor	35
17756	name="title_split_editor">Edutor	8
2736	name="title_split_editor">Split	91
16898	name="title_split_editor">Splitsing	3
21278	name="title_split_editor">Splitt	6
15097	name="title_transaction_preferences">	53
10320	name="title_transaction_preferences"></string>	40
4545	name="title_transaction_preferences">Einstellungen	20
15421	name="title_transaction_preferences">Opciones	8
15958	name="title_transaction_preferences">Pr&#233	15
20917	name="title_transaction_preferences">Prefer&#234	11
15943	name="title_transaction_preferences">Preferencias	18
11903	name="title_transaction_preferences">Preferensi	7
12705	name="title_transaction_preferences">Preferenza	9
16377	name="title_transaction_preferences">Preferenze	19
22971	name="title_transaction_preferences">Preferncias	20
14659	name="title_transaction_preferences">Preferncies	10
5646	name="title_transaction_preferences">Prfrences	19
16673	name="title_transaction_preferences">Transactie	19
4899	name="title_transaction_preferences">Transaction	104
22279	name="title_transaction_preferences">Transakce	5
15008	name="title_transaction_preferences">Transaksjonsinnstillinger</string>	27
55870	name="title_transaction_preferences">Transaktion	2
17381	name="title_transaction_preferences">Ustawienia	15
17946	name="title_transaction_splits">	26
11810	name="title_transaction_splits"></string>	26
16554	name="title_transaction_splits">Boekregels</string>	5
20838	name="title_transaction_splits">Contrapartidas	16
15926	name="title_transaction_splits">Desglose	10
14694	name="title_transaction_splits">Desglossament	11
4172	name="title_transaction_splits">Divises	6
17294	name="title_transaction_splits">Podzia	13
10964	name="title_transaction_splits">Scissions	8
29534	name="title_transaction_splits">Split	6
29262	name="title_transaction_splits">Suddividi	4
4429	name="title_transaction_splits">Transaction	108
11630	name="title_transaction_splits">Transactions	5
15286	name="title_transaction_splits">Transaksjonssplitt</string>	11
21361	name="title_transaction_splits">Transaksjonssplitter</string>	8
10507	name="title_transactions"></string>	69
14679	name="title_transactions">Assentaments</string>	10
16932	name="title_transactions">Boekingen</string>	10
14993	name="title_transactions">Buchungen</string>	14
22851	name="title_transactions">Tapahtumat</string>	7
19585	name="title_transactions">Transa&#231	11
15378	name="title_transactions">Transacciones</string>	18
26306	name="title_transactions">Transacties</string>	8
11115	name="title_transactions">Transactions</string>	105
22938	name="title_transactions">Transaes</string>	15
22293	name="title_transactions">Transakce</string>	8
17529	name="title_transactions">Transakcje</string>	13
11603	name="title_transactions">Transaksi</string>	7
14695	name="title_transactions">Transaksjoner</string>	22
23084	name="title_transactions">Transaktioner</string>	9
16309	name="title_transactions">Transazioni</string>	15
22689	name="title_transactions">Tranzakick</string>	6
23221	name="title_transactions">lemler</string>	8
17979	name="title_transfer_funds">	24
12439	name="title_transfer_funds"></string>	18
16592	name="title_transfer_funds">Overdracht	7
21273	name="title_transfer_funds">Overfre	10
2667	name="title_transfer_funds">Transfer	107
59500	name="title_transfer_funds">Transfer&#234	6
2329	name="title_transfer_funds">Transferir	19
23041	name="title_transfer_funds">Transferncias</string>	17
16292	name="title_transfer_funds">Transfert	11
17329	name="title_transfer_funds">Transferuj	14
22493	name="title_transfer_funds">Trasferisci	8
22358	name="title_transfer_funds">berweisungen</string>	11
56180	name="title_transfer_funds">verfr	2
17889	name="title_translate_gnucash">	13
17130	name="title_translate_gnucash">GnuCash	19
12129	name="title_translate_gnucash">GnuCash</string>	7
21246	name="title_translate_gnucash">Oversette	6
15978	name="title_translate_gnucash">Traducir	12
10767	name="title_translate_gnucash">Traduire	3
62535	name="title_translate_gnucash">Traduiu	3
35427	name="title_translate_gnucash">Traduza	10
29344	name="title_translate_gnucash">Traduzione	7
35400	name="title_translate_gnucash">Traduzir	10
11205	name="title_translate_gnucash">Translate	77
58651	name="title_translate_gnucash">Tumacz	4
56017	name="title_translate_gnucash">verstt	2
17886	name="title_use_account_color">	27
11290	name="title_use_account_color"></string>	24
3632	name="title_use_account_color">Account	105
20357	name="title_use_account_color">C&#244	11
3252	name="title_use_account_color">Color	16
22648	name="title_use_account_color">Colore	11
5827	name="title_use_account_color">Cor	8
11352	name="title_use_account_color">Couleur	17
22891	name="title_use_account_color">Cr	10
17643	name="title_use_account_color">Kolor	15
55921	name="title_use_account_color">Konto	2
22470	name="title_use_account_color">Kontofarbe</string>	8
15289	name="title_use_account_color">Kontofarge	21
17066	name="title_use_account_color">Rekening	7
22873	name="title_use_account_color">Warna	7
22616	name="title_use_compact_list">	18
12641	name="title_use_compact_list"></string>	14
22219	name="title_use_compact_list">Activar	12
11908	name="title_use_compact_list">Activez	7
11493	name="title_use_compact_list">Aktiver	15
56322	name="title_use_compact_list">Aktivera	2
22803	name="title_use_compact_list">Attiva	6
11711	name="title_use_compact_list">Enable	53
23022	name="title_use_compact_list">Habilitar	7
22281	name="title_use_compact_list">Kompaktansicht	12
22886	name="title_use_compact_list">Permitir	12
14948	name="title_use_double_entry">	52
10634	name="title_use_double_entry"></string>	34
16287	name="title_use_double_entry">Abilita	26
15376	name="title_use_double_entry">Activar	49
11799	name="title_use_double_entry">Activate	119
11047	name="title_use_double_entry">Activer	25
10826	name="title_use_double_entry">Aktifkan	7
7901	name="title_use_double_entry">Aktiver	33
56333	name="title_use_double_entry">Aktivera	2
17618	name="title_use_double_entry">Aktywuj	13
6188	name="title_use_double_entry">Ativar	13
4952	name="title_use_double_entry">Doppelte	16
26398	name="title_use_double_entry">Schake	7
16758	name="title_use_double_entry">Schakel	19
14879	name="title_whats_new">	53
15291	name="title_whats_new">&#191	23
10552	name="title_whats_new"></string>	79
17754	name="title_whats_new">Co	22
8429	name="title_whats_new">Hva	52
4408	name="title_whats_new">Neuigkeiten	36
16800	name="title_whats_new">Nieuw	39
11834	name="title_whats_new">Nouveautes</string>	30
11844	name="title_whats_new">Nouveauts</string>	5
15540	name="title_whats_new">Novedades</string>	42
14673	name="title_whats_new">Novetats</string>	11
16290	name="title_whats_new">Novit</string>	41
4252	name="title_whats_new">O	59
23598	name="title_whats_new">Quoi	17
55993	name="title_whats_new">Vad	2
10233	name="title_whats_new">What\'s	120
10884	name="title_whats_new">Yang	5
26116	name="title_whats_new">Yenilikler</string>	9
10448	name="title_xml_ofx_header">	49
36673	name="title_xml_ofx_header">-use	7
55871	name="title_xml_ofx_header">Anvnd	2
8291	name="title_xml_ofx_header">Bruk	26
16999	name="title_xml_ofx_header">Gebruik	18
11727	name="title_xml_ofx_header">Gunakan	3
25824	name="title_xml_ofx_header">OFXXML</string>	5
62760	name="title_xml_ofx_header">Pouit	3
16114	name="title_xml_ofx_header">Usa	20
4879	name="title_xml_ofx_header">Usar	34
11227	name="title_xml_ofx_header">Use	109
11444	name="title_xml_ofx_header">Utiliser	21
59957	name="title_xml_ofx_header">Utilitzar	3
17455	name="title_xml_ofx_header">Uywaj	9
6068	name="title_xml_ofx_header">XML	14
6014	name="title_xml_ofx_header">XML-OFX-Header	13
15155	name="toast_account_deleted">	50
54679	name="toast_account_deleted">1	2
11562	name="toast_account_deleted"></string>	28
11958	name="toast_account_deleted">Account	103
10746	name="toast_account_deleted">Akun	7
16038	name="toast_account_deleted">Compte	22
19752	name="toast_account_deleted">Conta	31
16414	name="toast_account_deleted">Conto	19
15846	name="toast_account_deleted">Cuenta	23
4278	name="toast_account_deleted">Das	14
17113	name="toast_account_deleted">De	14
54656	name="toast_account_deleted">Ein	2
22553	name="toast_account_deleted">Fik	6
26364	name="toast_account_deleted">Het	7
14715	name="toast_account_deleted">Konto	37
23220	name="toast_account_deleted">Kontot	9
22450	name="toast_account_deleted">S\'ha	7
23165	name="toast_account_deleted">Silinmi	8
22705	name="toast_account_deleted">Tili	7
22264	name="toast_account_deleted">et	7
15115	name="toast_all_accounts_deleted">	31
10355	name="toast_all_accounts_deleted"></string>	28
6922	name="toast_all_accounts_deleted">All	95
55951	name="toast_all_accounts_deleted">Alla	2
6577	name="toast_all_accounts_deleted">Alle	32
22258	name="toast_all_accounts_deleted">S\'han	7
11119	name="toast_all_accounts_deleted">Semua	9
15309	name="toast_all_accounts_deleted">Todas	38
10780	name="toast_all_accounts_deleted">Tous	22
16133	name="toast_all_accounts_deleted">Tutti	19
21978	name="toast_all_accounts_deleted">Vechny	9
17863	name="toast_all_accounts_deleted">Wszystkie	13
3022	name="toast_all_transactions_deleted">	53
2345	name="toast_all_transactions_deleted">&#161	11
2934	name="toast_all_transactions_deleted"></string>	33
3261	name="toast_all_transactions_deleted">All	112
56034	name="toast_all_transactions_deleted">Alla	2
2766	name="toast_all_transactions_deleted">Alle	48
22201	name="toast_all_transactions_deleted">S\'han	7
12839	name="toast_all_transactions_deleted">Seluruh	7
2717	name="toast_all_transactions_deleted">Todas	52
3742	name="toast_all_transactions_deleted">Toutes	25
3149	name="toast_all_transactions_deleted">Tutte	27
22346	name="toast_all_transactions_deleted">Vechny	7
17385	name="toast_all_transactions_deleted">Wszystkie	13
17945	name="toast_backup_failed">	32
11494	name="toast_backup_failed"></string>	32
16547	name="toast_backup_failed">Back-up	9
4566	name="toast_backup_failed">Backup	114
17240	name="toast_backup_failed">Bd	17
15669	name="toast_backup_failed">Copia	24
20162	name="toast_backup_failed">Erro	29
15277	name="toast_backup_failed">Feil	11
22510	name="toast_backup_failed">Pencadangan	7
22199	name="toast_backup_failed">S\'ha	7
22403	name="toast_backup_failed">Sicherung	15
21461	name="toast_backup_failed">Sikkerhetskopiering	20
56155	name="toast_backup_failed">Skerhetskopiering	2
16474	name="toast_backup_failed">chec	14
17981	name="toast_backup_folder_not_found">	27
16982	name="toast_backup_folder_not_found">Back-up	5
3201	name="toast_backup_folder_not_found">Backup	104
21211	name="toast_backup_folder_not_found">Finner	8
17855	name="toast_backup_folder_not_found">Folder	21
29393	name="toast_backup_folder_not_found">Impossibile	4
10909	name="toast_backup_folder_not_found">Le	11
15198	name="toast_backup_folder_not_found">Mappe	14
2627	name="toast_backup_folder_not_found">No	16
4887	name="toast_backup_folder_not_found">Pasta	22
12045	name="toast_backup_folder_not_found">Rpertoire	5
12719	name="toast_backup_folder_not_found">SD</string>	22
29581	name="toast_backup_folder_not_found">Sicherungsordner	6
17947	name="toast_backup_successful">	23
11163	name="toast_backup_successful"></string>	37
4734	name="toast_backup_successful">Backup	127
15941	name="toast_backup_successful">Copia	24
17783	name="toast_backup_successful">Kopia	17
22409	name="toast_backup_successful">La	7
16885	name="toast_backup_successful">Maken	9
22878	name="toast_backup_successful">Pencadangan	7
16217	name="toast_backup_successful">Sauvegarde	14
22328	name="toast_backup_successful">Sicherung	15
15197	name="toast_backup_successful">Sikkerhetskopiering	28
55960	name="toast_backup_successful">Skerhetskopiering	2
17922	name="toast_chart_percentage_mode_current_bar">	18
11816	name="toast_chart_percentage_mode_current_bar"></string>	18
20257	name="toast_chart_percentage_mode_current_bar">A	20
22004	name="toast_chart_percentage_mode_current_bar">Der	8
15324	name="toast_chart_percentage_mode_current_bar">El	14
16780	name="toast_chart_percentage_mode_current_bar">Het	7
22711	name="toast_chart_percentage_mode_current_bar">La	6
16339	name="toast_chart_percentage_mode_current_bar">Le	9
4108	name="toast_chart_percentage_mode_current_bar">O	13
22503	name="toast_chart_percentage_mode_current_bar">Persentase	7
55863	name="toast_chart_percentage_mode_current_bar">Procentandelen	2
17408	name="toast_chart_percentage_mode_current_bar">Procentarz	13
15288	name="toast_chart_percentage_mode_current_bar">Prosent	11
21717	name="toast_chart_percentage_mode_current_bar">Prosentandelen	10
4189	name="toast_chart_percentage_mode_current_bar">The	106
17888	name="toast_chart_percentage_mode_total">	27
11089	name="toast_chart_percentage_mode_total"></string>	18
20715	name="toast_chart_percentage_mode_total">A	20
22009	name="toast_chart_percentage_mode_total">Der	8
15333	name="toast_chart_percentage_mode_total">El	14
16627	name="toast_chart_percentage_mode_total">Het	7
22532	name="toast_chart_percentage_mode_total">La	6
16152	name="toast_chart_percentage_mode_total">Le	9
6155	name="toast_chart_percentage_mode_total">O	13
22880	name="toast_chart_percentage_mode_total">Persentase	7
56370	name="toast_chart_percentage_mode_total">Procentandelen	2
17616	name="toast_chart_percentage_mode_total">Procentarz	13
15218	name="toast_chart_percentage_mode_total">Prosent	11
21845	name="toast_chart_percentage_mode_total">Prosentandelen	10
4385	name="toast_chart_percentage_mode_total">The	106
57638	name="toast_confirm_passcode"></string>	5
25478	name="toast_confirm_passcode">Confirme	5
5021	name="toast_confirm_passcode">Please	18
5365	name="toast_confirm_passcode">Por	3
54714	name="toast_confirm_passcode">Vennligst	1
26153	name="toast_connected_to_google_drive">	3
56225	name="toast_connected_to_google_drive">Ansluten	2
10217	name="toast_connected_to_google_drive">Conectado	14
11133	name="toast_connected_to_google_drive">Connect	3
11712	name="toast_connected_to_google_drive">Connected	25
25867	name="toast_connected_to_google_drive">Connesso	3
12194	name="toast_connected_to_google_drive">Google	9
35251	name="toast_connected_to_google_drive">Ligado	3
35153	name="toast_connected_to_google_drive">Verbunden	3
17951	name="toast_disable_double_entry_to_save_transaction">	22
11256	name="toast_disable_double_entry_to_save_transaction"></string>	22
29471	name="toast_disable_double_entry_to_save_transaction">Crea	4
4358	name="toast_disable_double_entry_to_save_transaction">Create	91
15772	name="toast_disable_double_entry_to_save_transaction">Cree	8
16412	name="toast_disable_double_entry_to_save_transaction">Crer	5
6361	name="toast_disable_double_entry_to_save_transaction">Criar	6
20470	name="toast_disable_double_entry_to_save_transaction">Crie	13
59270	name="toast_disable_double_entry_to_save_transaction">Erstellen	4
16877	name="toast_disable_double_entry_to_save_transaction">Maak	3
62763	name="toast_disable_double_entry_to_save_transaction">Membuat	3
15217	name="toast_disable_double_entry_to_save_transaction">Opprett	11
21224	name="toast_disable_double_entry_to_save_transaction">Opprette	6
55934	name="toast_disable_double_entry_to_save_transaction">Skapa	2
17698	name="toast_disable_double_entry_to_save_transaction">Utwrz	11
26138	name="toast_enter_amount_to_split">,	3
12661	name="toast_enter_amount_to_split"></string>	9
34969	name="toast_enter_amount_to_split">Bitte	3
26098	name="toast_enter_amount_to_split">Inserisci	3
10730	name="toast_enter_amount_to_split">Please	25
10403	name="toast_enter_amount_to_split">Por	14
10962	name="toast_enter_amount_to_split">Veuillez	3
56110	name="toast_enter_amount_to_split">Vnligen	2
1129	name="toast_enter_full_passcode">You	5
23252	name="toast_error_check_split_amounts">	7
22613	name="toast_error_check_split_amounts">!</string>	6
17954	name="toast_error_check_split_amounts">,	10
12295	name="toast_error_check_split_amounts"></string>	12
3707	name="toast_error_check_split_amounts">Check	105
55020	name="toast_error_check_split_amounts">Cheque	7
3532	name="toast_error_check_split_amounts">Compruebe	13
22951	name="toast_error_check_split_amounts">Confirme	16
16701	name="toast_error_check_split_amounts">Controleer	7
22735	name="toast_error_check_split_amounts">Controlla	8
55904	name="toast_error_check_split_amounts">Kontrollera	2
22212	name="toast_error_check_split_amounts">Prfen	11
17578	name="toast_error_check_split_amounts">Przed	12
21256	name="toast_error_check_split_amounts">Sjekk	10
16125	name="toast_error_check_split_amounts">Vrifiez	11
17908	name="toast_error_edit_multi_currency_transaction">	30
11482	name="toast_error_edit_multi_currency_transaction"></string>	24
10352	name="toast_error_edit_multi_currency_transaction">As	24
15148	name="toast_error_edit_multi_currency_transaction">Flervaluta	11
15888	name="toast_error_edit_multi_currency_transaction">Las	15
10661	name="toast_error_edit_multi_currency_transaction">Les	16
25651	name="toast_error_edit_multi_currency_transaction">Mehrwhrungsbuchungen	9
6407	name="toast_error_edit_multi_currency_transaction">Multi-currency	105
17109	name="toast_error_edit_multi_currency_transaction">Multi-valuta	5
21638	name="toast_error_edit_multi_currency_transaction">Multi-valutatransaksjoner	11
29677	name="toast_error_edit_multi_currency_transaction">Non	6
5013	name="toast_error_edit_multi_currency_transaction">Transaes	6
29491	name="toast_error_edit_multi_currency_transaction">Transakce	5
11794	name="toast_error_edit_multi_currency_transaction">Transaksi	5
17274	name="toast_error_edit_multi_currency_transaction">Wielowalutowe	16
51552	name="toast_error_exporting">	13
6882	name="toast_error_exporting">Could	15
26487	name="toast_error_exporting">Fout	11
27989	name="toast_error_exporting">Impossibile	11
23851	name="toast_error_exporting">Impossible	11
51982	name="toast_error_exporting">Kunne	6
29180	name="toast_error_exporting">No	13
28150	name="toast_error_exporting">OFX:\n</string>	9
5838	name="toast_error_exporting_ofx">Fehler	21
10533	name="toast_error_importing_accounts">	55
6892	name="toast_error_importing_accounts">An	113
5385	name="toast_error_importing_accounts">Beim	17
21512	name="toast_error_importing_accounts">Det	10
8211	name="toast_error_importing_accounts">En	16
56161	name="toast_error_importing_accounts">Ett	2
17072	name="toast_error_importing_accounts">Fout	13
22528	name="toast_error_importing_accounts">GnuCash	9
11846	name="toast_error_importing_accounts">GnuCash</string>	16
20125	name="toast_error_importing_accounts">Ocorreu	21
15293	name="toast_error_importing_accounts">Ocurri	13
15643	name="toast_error_importing_accounts">Ocurri&#243	13
22160	name="toast_error_importing_accounts">Pi	9
22353	name="toast_error_importing_accounts">S\'ha	7
16288	name="toast_error_importing_accounts">Si	23
11140	name="toast_error_importing_accounts">Terjadi	7
57594	name="toast_error_importing_accounts">Um	6
10668	name="toast_error_importing_accounts">Une	23
17819	name="toast_error_importing_accounts">Wystpi	13
15193	name="toast_export_error">	48
22541	name="toast_export_error">%1$s	9
11376	name="toast_export_error">%1$s</string>	29
17357	name="toast_export_error">Bd	19
22284	name="toast_export_error">Chyba	7
11638	name="toast_export_error">Erreur	23
19870	name="toast_export_error">Erro	26
10408	name="toast_export_error">Error	106
16117	name="toast_export_error">Errore	23
15069	name="toast_export_error">Fehler	18
14664	name="toast_export_error">Feil	39
10249	name="toast_export_error">Fel	9
16536	name="toast_export_error">Fout	20
10998	name="toast_export_error">Kesalahan	7
35333	name="toast_export_error">OFX</string>	4
22179	name="toast_export_error">S\'ha	7
2666	name="toast_exported_to">	42
2994	name="toast_exported_to">%1$s</string>	30
22876	name="toast_exported_to">:	6
1429	name="toast_exported_to">Eksportert	30
22855	name="toast_exported_to">Esportato	8
2125	name="toast_exported_to">Export	22
3410	name="toast_exported_to">Exportado	46
2092	name="toast_exported_to">Exported	109
56262	name="toast_exported_to">Exporterades	2
22311	name="toast_exported_to">Exportiert	8
16724	name="toast_exported_to">Gexporteerd	7
22060	name="toast_exported_to">S\'ha	7
22869	name="toast_exported_to">Telah	7
2465	name="toast_exported_to">Wyeksportowane	27
10429	name="toast_format_exported_to">	36
10575	name="toast_format_exported_to">%1$s	111
15240	name="toast_format_exported_to">%1$s-Datei	15
14929	name="toast_format_exported_to">%1$s-fil	18
11296	name="toast_format_exported_to">%1$s\n</string>	36
3789	name="toast_format_exported_to">Archivo	19
29695	name="toast_format_exported_to">Arquivo	16
11571	name="toast_format_exported_to">Fichier	13
16329	name="toast_format_exported_to">File	18
15252	name="toast_incompatible_currency">	54
5412	name="toast_incompatible_currency">Buchungen	22
10595	name="toast_incompatible_currency">Cannot	112
17062	name="toast_incompatible_currency">De	10
20846	name="toast_incompatible_currency">Imposs&#237	11
16387	name="toast_incompatible_currency">Impossibile	21
10452	name="toast_incompatible_currency">Impossible	16
23033	name="toast_incompatible_currency">Impossvel	14
26644	name="toast_incompatible_currency">Impposible	9
14823	name="toast_incompatible_currency">Kan	34
22068	name="toast_incompatible_currency">Nelze	5
22890	name="toast_incompatible_currency">Nie	6
15696	name="toast_incompatible_currency">No	35
11772	name="toast_incompatible_currency">Tidak	7
26430	name="toast_incompatible_currency">Transacties	14
11541	name="toast_incompatible_currency">\n</string>	32
17926	name="toast_install_file_manager">	36
11208	name="toast_install_file_manager"></string>	25
6180	name="toast_install_file_manager">Instalar	13
15738	name="toast_install_file_manager">Instale	53
5004	name="toast_install_file_manager">Install	106
22832	name="toast_install_file_manager">Installa	14
17064	name="toast_install_file_manager">Installeer	9
14928	name="toast_install_file_manager">Installer	32
56108	name="toast_install_file_manager">Installera	2
22080	name="toast_install_file_manager">Installeu	7
16181	name="toast_install_file_manager">Installez	14
22230	name="toast_install_file_manager">Installieren	15
17289	name="toast_install_file_manager">Zainstaluj	22
17837	name="toast_invalid_passcode_confirmation">	27
10437	name="toast_invalid_passcode_confirmation"></string>	21
11305	name="toast_invalid_passcode_confirmation">Code	10
29479	name="toast_invalid_passcode_confirmation">Conferma	8
19882	name="toast_invalid_passcode_confirmation">Confirma&#231	11
16009	name="toast_invalid_passcode_confirmation">Confirmaci&#243	8
15891	name="toast_invalid_passcode_confirmation">Confirmacin	6
62448	name="toast_invalid_passcode_confirmation">Confirmao	7
4600	name="toast_invalid_passcode_confirmation">Confrimao	6
57310	name="toast_invalid_passcode_confirmation">Felaktig	3
4930	name="toast_invalid_passcode_confirmation">Invalid	94
11854	name="toast_invalid_passcode_confirmation">Konfirmasi	3
17699	name="toast_invalid_passcode_confirmation">Niepoprawne	9
17111	name="toast_invalid_passcode_confirmation">Ongeldige	3
62791	name="toast_invalid_passcode_confirmation">Pstupov	3
14824	name="toast_invalid_passcode_confirmation">Ugyldig	17
62511	name="toast_invalid_passcode_confirmation">Ungltiger	3
57301	name="toast_invalid_passcode_confirmation">Virheellinen	3
64039	name="toast_invalid_passcode_confirmation">rvnytelen	2
17898	name="toast_legend_too_long">	14
12650	name="toast_legend_too_long"></string>	9
54985	name="toast_legend_too_long">A	12
59207	name="toast_legend_too_long">Die	4
21964	name="toast_legend_too_long">Forklaringen	6
56405	name="toast_legend_too_long">Frklaringen	2
2668	name="toast_legend_too_long">La	26
16964	name="toast_legend_too_long">Legenda	11
1277	name="toast_legend_too_long">The	95
15016	name="toast_no_account_name_entered">	52
11743	name="toast_no_account_name_entered"></string>	29
55997	name="toast_no_account_name_entered">Ange	2
21345	name="toast_no_account_name_entered">Angi	10
30246	name="toast_no_account_name_entered">Bitte	10
5347	name="toast_no_account_name_entered">Digite	6
5205	name="toast_no_account_name_entered">Enter	104
11228	name="toast_no_account_name_entered">Entrer	18
4642	name="toast_no_account_name_entered">Geben	14
16187	name="toast_no_account_name_entered">Inserire	24
22347	name="toast_no_account_name_entered">Introduu	7
20792	name="toast_no_account_name_entered">Introduza	21
15546	name="toast_no_account_name_entered">Introduzca	15
8655	name="toast_no_account_name_entered">Navngi	13
26353	name="toast_no_account_name_entered">Please	29
15505	name="toast_no_account_name_entered">Por	15
30158	name="toast_no_account_name_entered">Skriv	7
11708	name="toast_no_account_name_entered">Tuliskan	7
30329	name="toast_no_account_name_entered">Veuillez	7
16690	name="toast_no_account_name_entered">Vul	24
17507	name="toast_no_account_name_entered">Wprowad	13
21974	name="toast_no_account_name_entered">Zadejte	7
22684	name="toast_no_compatible_apps_to_receive_export">	24
22604	name="toast_no_compatible_apps_to_receive_export">!</string>	8
12792	name="toast_no_compatible_apps_to_receive_export"></string>	19
10358	name="toast_no_compatible_apps_to_receive_export">Aucune	7
22962	name="toast_no_compatible_apps_to_receive_export">Brak	8
22161	name="toast_no_compatible_apps_to_receive_export">Es	21
56393	name="toast_no_compatible_apps_to_receive_export">Inga	2
11260	name="toast_no_compatible_apps_to_receive_export">Ingen	31
22781	name="toast_no_compatible_apps_to_receive_export">Nessuna	17
11522	name="toast_no_compatible_apps_to_receive_export">No	79
17959	name="toast_no_recent_backup">	25
11927	name="toast_no_recent_backup"></string>	22
16118	name="toast_no_recent_backup">Aucune	10
16696	name="toast_no_recent_backup">Geen	5
15229	name="toast_no_recent_backup">Ingen	21
15061	name="toast_no_recent_backup">Keine	11
20628	name="toast_no_recent_backup">N&#227	11
29589	name="toast_no_recent_backup">Nebyla	3
5308	name="toast_no_recent_backup">Nenhum	6
29266	name="toast_no_recent_backup">Nessun	4
17670	name="toast_no_recent_backup">Nie	11
5716	name="toast_no_recent_backup">No	113
11350	name="toast_no_recent_backup">Tidak	8
14903	name="toast_no_transactions_to_export">	59
11244	name="toast_no_transactions_to_export"></string>	43
17316	name="toast_no_transactions_to_export">Brak	13
21450	name="toast_no_transactions_to_export">Det	12
17073	name="toast_no_transactions_to_export">Geen	17
10674	name="toast_no_transactions_to_export">Il	27
15283	name="toast_no_transactions_to_export">Ingen	21
6333	name="toast_no_transactions_to_export">Keine	35
20408	name="toast_no_transactions_to_export">N&#227	11
22233	name="toast_no_transactions_to_export">Neexistuj	5
3610	name="toast_no_transactions_to_export">No	58
16228	name="toast_no_transactions_to_export">Non	32
11103	name="toast_no_transactions_to_export">There	113
11306	name="toast_no_transactions_to_export">Tidak	7
26903	name="toast_ofx_exported_to">	22
34459	name="toast_ofx_exported_to">Archivo	11
29104	name="toast_ofx_exported_to">Arquivo	6
23990	name="toast_ofx_exported_to">Fichier	13
12390	name="toast_ofx_exported_to">File	12
6636	name="toast_ofx_exported_to">OFX	25
4926	name="toast_ofx_exported_to">OFX-Datei	21
51861	name="toast_ofx_exported_to">OFX-fil	6
28128	name="toast_ofx_exported_to">OFX:\n</string>	7
28228	name="toast_ofx_exported_to">OFX\n</string>	5
17533	name="toast_passcode_set">	31
11433	name="toast_passcode_set"></string>	27
10937	name="toast_passcode_set">Code	12
29474	name="toast_passcode_set">Codice	8
15975	name="toast_passcode_set">Contrase&#241	8
15711	name="toast_passcode_set">Contrasea	16
4996	name="toast_passcode_set">Conunto	6
19849	name="toast_passcode_set">Defini&#231	11
62408	name="toast_passcode_set">Definio	13
17271	name="toast_passcode_set">Haso	11
62764	name="toast_passcode_set">Heslo	3
64015	name="toast_passcode_set">Jelsz	4
11257	name="toast_passcode_set">Kode	3
5490	name="toast_passcode_set">Passcode	101
14844	name="toast_passcode_set">Passkode	11
21306	name="toast_passcode_set">Passord	9
57298	name="toast_passcode_set">Pinkod	3
17038	name="toast_passcode_set">Toegangscode	5
57328	name="toast_passcode_set">Tunnuskoodi	3
62502	name="toast_passcode_set">Zugangscode	5
59303	name="toast_passcode_set">ifre	6
4717	name="toast_recurring_transaction_deleted">	33
11287	name="toast_recurring_transaction_deleted"></string>	27
62786	name="toast_recurring_transaction_deleted">Berhasil	3
6751	name="toast_recurring_transaction_deleted">Die	6
17604	name="toast_recurring_transaction_deleted">Pomylnie	9
56025	name="toast_recurring_transaction_deleted">Raderade	2
16803	name="toast_recurring_transaction_deleted">Repetitieve	9
60019	name="toast_recurring_transaction_deleted">S\'ha	3
15244	name="toast_recurring_transaction_deleted">Slettet	21
5571	name="toast_recurring_transaction_deleted">Successfully	90
20981	name="toast_recurring_transaction_deleted">Transa&#231	11
15973	name="toast_recurring_transaction_deleted">Transaci&#243	9
15887	name="toast_recurring_transaction_deleted">Transacin	5
15965	name="toast_recurring_transaction_deleted">Transaction	14
36554	name="toast_recurring_transaction_deleted">Transaes	9
6255	name="toast_recurring_transaction_deleted">Transao	6
16189	name="toast_recurring_transaction_deleted">Transazione	13
17975	name="toast_scheduled_recurring_transaction">	24
12386	name="toast_scheduled_recurring_transaction"></string>	18
16765	name="toast_scheduled_recurring_transaction">Geplande	7
22418	name="toast_scheduled_recurring_transaction">Geplante	11
21317	name="toast_scheduled_recurring_transaction">Planlagt	10
3237	name="toast_scheduled_recurring_transaction">Programar	13
22191	name="toast_scheduled_recurring_transaction">S\'ha	7
3088	name="toast_scheduled_recurring_transaction">Scheduled	101
56013	name="toast_scheduled_recurring_transaction">Schemalagd	2
59543	name="toast_scheduled_recurring_transaction">Transa&#231	6
16370	name="toast_scheduled_recurring_transaction">Transaction	11
22885	name="toast_scheduled_recurring_transaction">Transao	14
22723	name="toast_scheduled_recurring_transaction">Transazioni	8
17539	name="toast_scheduled_recurring_transaction">Zaplanowane	12
14950	name="toast_success_importing_accounts">	36
11534	name="toast_success_importing_accounts">Akun	7
11399	name="toast_success_importing_accounts">Comptes	19
21112	name="toast_success_importing_accounts">Contas	20
15471	name="toast_success_importing_accounts">Cuentas	17
4148	name="toast_success_importing_accounts">GnuCash	129
6021	name="toast_success_importing_accounts">GnuCash-Konten	10
56210	name="toast_success_importing_accounts">GnuCash-konton	2
10200	name="toast_success_importing_accounts">GnuCash</string>	19
16360	name="toast_success_importing_accounts">I	19
17338	name="toast_success_importing_accounts">Import	13
22056	name="toast_success_importing_accounts">S\'han	7
4036	name="toast_tap_again_to_confirm_delete">	38
3796	name="toast_tap_again_to_confirm_delete"></string>	34
17504	name="toast_tap_again_to_confirm_delete">Aby	11
4222	name="toast_tap_again_to_confirm_delete">Erneut	8
29607	name="toast_tap_again_to_confirm_delete">Klepnutm	5
16163	name="toast_tap_again_to_confirm_delete">Premere	15
3567	name="toast_tap_again_to_confirm_delete">Tap	109
16023	name="toast_tap_again_to_confirm_delete">Taper	14
2541	name="toast_tap_again_to_confirm_delete">Toque	43
29501	name="toast_tap_again_to_confirm_delete">Torna	5
15095	name="toast_tap_again_to_confirm_delete">Trykk	20
26088	name="toast_transaction_has_no_splits_and_cannot_open">	10
12707	name="toast_transaction_has_no_splits_and_cannot_open"></string>	17
10306	name="toast_transaction_has_no_splits_and_cannot_open">A	11
25628	name="toast_transaction_has_no_splits_and_cannot_open">Die	3
10894	name="toast_transaction_has_no_splits_and_cannot_open">La	18
11656	name="toast_transaction_has_no_splits_and_cannot_open">The	42
56428	name="toast_transaction_has_no_splits_and_cannot_open">Valda	2
14915	name="toast_transanction_amount_required">	70
11619	name="toast_transanction_amount_required"></string>	59
4147	name="toast_transanction_amount_required">Adicione	21
56464	name="toast_transanction_amount_required">Ange	2
21423	name="toast_transanction_amount_required">Angi	13
7888	name="toast_transanction_amount_required">Enter	112
10500	name="toast_transanction_amount_required">Entrez	39
5107	name="toast_transanction_amount_required">Geben	36
15733	name="toast_transanction_amount_required">Ingrese	11
16131	name="toast_transanction_amount_required">Inserire	32
14674	name="toast_transanction_amount_required">Introduu	13
10230	name="toast_transanction_amount_required">Introduza	32
15651	name="toast_transanction_amount_required">Introduzca	43
8196	name="toast_transanction_amount_required">Oppgi	30
10172	name="toast_transanction_amount_required">Tuliskan	9
16522	name="toast_transanction_amount_required">Vul	30
17484	name="toast_transanction_amount_required">Wprowad	18
21969	name="toast_transanction_amount_required">Zadejte	9
26056	name="toast_unable_to_connect_to_google_drive">	3
12145	name="toast_unable_to_connect_to_google_drive"></string>	3
25755	name="toast_unable_to_connect_to_google_drive">Google	6
25967	name="toast_unable_to_connect_to_google_drive">Impossibile	3
10199	name="toast_unable_to_connect_to_google_drive">Impossible	3
11868	name="toast_unable_to_connect_to_google_drive">Impossvel	9
56223	name="toast_unable_to_connect_to_google_drive">Kan	2
35137	name="toast_unable_to_connect_to_google_drive">Keine	3
10954	name="toast_unable_to_connect_to_google_drive">No	9
11710	name="toast_unable_to_connect_to_google_drive">Unable	25
25805	name="toast_updated_transaction_recurring_schedule">	3
12983	name="toast_updated_transaction_recurring_schedule"></string>	12
11606	name="toast_updated_transaction_recurring_schedule">Agenda	9
35034	name="toast_updated_transaction_recurring_schedule">Aktualisierte	3
10238	name="toast_updated_transaction_recurring_schedule">Calendario	6
11897	name="toast_updated_transaction_recurring_schedule">Calendrier	3
25947	name="toast_updated_transaction_recurring_schedule">Pianificazione	3
35061	name="toast_updated_transaction_recurring_schedule">Transao	3
11833	name="toast_updated_transaction_recurring_schedule">Updated	25
56342	name="toast_updated_transaction_recurring_schedule">Uppdaterade	2
17845	name="toast_wrong_passcode">	31
11441	name="toast_wrong_passcode"></string>	27
62762	name="toast_wrong_passcode">Chybn	3
29348	name="toast_wrong_passcode">Codice	12
15992	name="toast_wrong_passcode">Contrase&#241	8
15565	name="toast_wrong_passcode">Contrasea	16
62521	name="toast_wrong_passcode">Falscher	5
14813	name="toast_wrong_passcode">Feil	20
57296	name="toast_wrong_passcode">Fel	3
59278	name="toast_wrong_passcode">Greit	6
11839	name="toast_wrong_passcode">Kode	3
11397	name="toast_wrong_passcode">Mauvais	12
16666	name="toast_wrong_passcode">Onjuist	5
19435	name="toast_wrong_passcode">Password	14
64020	name="toast_wrong_passcode">Rossz	4
4771	name="toast_wrong_passcode">Senha	14
57384	name="toast_wrong_passcode">Virheellinen	3
1541	name="toast_wrong_passcode">Wrong	104
59216	name="toast_wrong_passcode">Yanl	6
17396	name="toast_wrong_passcode">Ze	11
23155	name="toolbar_progress_height">2dp</dimen>	11
58566	name="toolbar_progress_height">5dp</dimen>	3
51837	name="transaction_description">Description</string>	4
6136	name="transaction_types">	146
63627	name="transparent">#00000000</color>	4
37337	name="useLogo"	4
22623	name="username">	15
12328	name="username"></string>	14
56304	name="username">Anvndarnamn</string>	2
22221	name="username">Benutzername</string>	9
22955	name="username">Brukernavn</string>	15
22520	name="username">Nama	7
22123	name="username">Nom	14
22225	name="username">Nombre	12
22682	name="username">Nome	15
55642	name="username">Uivatelsk	2
12799	name="username">User	54
37530	name="verticalDivider"	4
3714	name="whats_new">	197
25481	name="whats_new">-	5
25568	name="whats_new">\n	7
56890	name="widget_margin">0dp</dimen>	1
18404	name="widget_margin">8dp</dimen>	18
37688	name="windowActionBar"	4
38268	name="windowActionBar">false</item>	5
37858	name="windowActionBar">true</item>	5
37651	name="windowActionBarOverlay"	4
37512	name="windowActionModeOverlay"	4
38304	name="windowActionModeOverlay">false</item>	5
20351	name="windowActionModeOverlay">true</item>	10
37501	name="windowAnimationStyle"	4
37300	name="windowContentOverlay"	4
38463	name="windowContentOverlay">@drawable/abs__ab_solid_shadow_holo</item>	4
38675	name="windowContentOverlay">@null</item>	5
37617	name="windowMinWidthMajor"	4
37984	name="windowMinWidthMajor">@dimen/abs__dialog_min_width_major</item>	5
37286	name="windowMinWidthMinor"	4
38467	name="windowMinWidthMinor">@dimen/abs__dialog_min_width_minor</item>	5
37362	name="windowNoTitle"	4
37888	name="windowNoTitle">true</item>	5
37412	name="windowSplitActionBar"	4
12576	name="wizard_btn_back"></string>	26
59503	name="wizard_btn_back">Anterior</string>	11
3483	name="wizard_btn_back">Back</string>	85
14719	name="wizard_btn_back">Enrere</string>	9
29414	name="wizard_btn_back">Indietro</string>	7
16300	name="wizard_btn_back">Retour</string>	7
17136	name="wizard_btn_back">Terug</string>	3
21255	name="wizard_btn_back">Tilbake</string>	6
55999	name="wizard_btn_back">Tillbaka</string>	2
54953	name="wizard_btn_back">Voltar</string>	10
3275	name="wizard_btn_back">Volver</string>	9
17304	name="wizard_btn_back">Wstecz</string>	8
59349	name="wizard_btn_back">Zurck</string>	4
17948	name="wizard_option_auto_send_crash_reports">	19
12941	name="wizard_option_auto_send_crash_reports"></string>	7
59236	name="wizard_option_auto_send_crash_reports">Absturzberichte	4
2643	name="wizard_option_auto_send_crash_reports">Automatically	88
17131	name="wizard_option_auto_send_crash_reports">Automatisch	3
56202	name="wizard_option_auto_send_crash_reports">Automatiskt	2
17675	name="wizard_option_auto_send_crash_reports">Automatycznie	8
59537	name="wizard_option_auto_send_crash_reports">Envia	11
2522	name="wizard_option_auto_send_crash_reports">Enviar	15
16260	name="wizard_option_auto_send_crash_reports">Envoyer	7
29303	name="wizard_option_auto_send_crash_reports">Invia	4
21191	name="wizard_option_auto_send_crash_reports">Send	6
17972	name="wizard_option_create_default_accounts">	17
12282	name="wizard_option_create_default_accounts"></string>	9
29275	name="wizard_option_create_default_accounts">Crea	10
3763	name="wizard_option_create_default_accounts">Crear	9
3036	name="wizard_option_create_default_accounts">Create	85
10541	name="wizard_option_create_default_accounts">Crer	10
55005	name="wizard_option_create_default_accounts">Criar	15
21437	name="wizard_option_create_default_accounts">Opprette	6
56230	name="wizard_option_create_default_accounts">Skapa	2
16989	name="wizard_option_create_default_accounts">Standaard	3
59290	name="wizard_option_create_default_accounts">Standard-Konten	4
17595	name="wizard_option_create_default_accounts">Utwrz	8
17916	name="wizard_option_currency_other">&#8230	12
12715	name="wizard_option_currency_other">...</string>	11
17877	name="wizard_option_currency_other"></string>	6
60048	name="wizard_option_currency_other">Altra&#8230	3
33332	name="wizard_option_currency_other">Altro&#8230	2
56401	name="wizard_option_currency_other">Andra&#8230	2
21555	name="wizard_option_currency_other">Andre&#8230	6
16486	name="wizard_option_currency_other">Autre&#8230	3
16165	name="wizard_option_currency_other">Autre</string>	7
17606	name="wizard_option_currency_other">Inna&#8230	3
17426	name="wizard_option_currency_other">Inna</string>	8
14763	name="wizard_option_currency_other">Other&#8230	47
3097	name="wizard_option_currency_other">Other...</string>	61
36620	name="wizard_option_currency_other">Other</string>	10
15483	name="wizard_option_currency_other">Otras&#8230	5
3326	name="wizard_option_currency_other">Otras</string>	7
54947	name="wizard_option_currency_other">Outro...</string>	7
62410	name="wizard_option_currency_other">Outros&#8230	8
59495	name="wizard_option_currency_other">Outros</string>	6
17931	name="wizard_option_disable_crash_reports">	19
12554	name="wizard_option_disable_crash_reports"></string>	7
59285	name="wizard_option_disable_crash_reports">Absturzberichte	4
56412	name="wizard_option_disable_crash_reports">Avaktivera	2
16816	name="wizard_option_disable_crash_reports">Crashrapporten	3
21782	name="wizard_option_disable_crash_reports">Deaktivere	6
55016	name="wizard_option_disable_crash_reports">Desabilitar	7
3481	name="wizard_option_disable_crash_reports">Desactivar	19
3079	name="wizard_option_disable_crash_reports">Disable	88
29379	name="wizard_option_disable_crash_reports">Disattiva	4
16379	name="wizard_option_disable_crash_reports">Dsactiver	7
17517	name="wizard_option_disable_crash_reports">Wycz	8
17969	name="wizard_option_import_my_accounts">	17
12502	name="wizard_option_import_my_accounts"></string>	9
2581	name="wizard_option_import_my_accounts">Import	89
29459	name="wizard_option_import_my_accounts">Importa	10
2308	name="wizard_option_import_my_accounts">Importar	22
11685	name="wizard_option_import_my_accounts">Importer	10
55952	name="wizard_option_import_my_accounts">Importera	2
59271	name="wizard_option_import_my_accounts">Meine	4
16527	name="wizard_option_import_my_accounts">Mijn	3
17668	name="wizard_option_import_my_accounts">Zaimportuj	8
17964	name="wizard_option_let_me_handle_it">	17
12808	name="wizard_option_let_me_handle_it"></string>	9
59509	name="wizard_option_let_me_handle_it">Deixe-me	11
21212	name="wizard_option_let_me_handle_it">La	6
16692	name="wizard_option_let_me_handle_it">Laat	3
29191	name="wizard_option_let_me_handle_it">Lascia	4
3571	name="wizard_option_let_me_handle_it">Let	88
55883	name="wizard_option_let_me_handle_it">Lt	2
11502	name="wizard_option_let_me_handle_it">Me	15
17359	name="wizard_option_let_me_handle_it">Pozwl	8
2683	name="wizard_option_let_me_handle_it">Yo	9
59327	name="wizard_option_let_me_handle_it">berlassen	4
17953	name="wizard_title_account_setup">	27
13018	name="wizard_title_account_setup"></string>	18
3540	name="wizard_title_account_setup">Account	100
59531	name="wizard_title_account_setup">Configura&#231	6
3311	name="wizard_title_account_setup">Configuraci&#243	7
15780	name="wizard_title_account_setup">Configuracin	9
22934	name="wizard_title_account_setup">Configurao	17
12019	name="wizard_title_account_setup">Configuration	14
22545	name="wizard_title_account_setup">Impostazione	8
21718	name="wizard_title_account_setup">Konfigurering	10
22412	name="wizard_title_account_setup">Konto	8
55972	name="wizard_title_account_setup">Kontoinstllningar</string>	2
17021	name="wizard_title_account_setup">Rekening	7
17864	name="wizard_title_account_setup">Ustawienie	12
17914	name="wizard_title_default_currency">	24
12666	name="wizard_title_default_currency"></string>	18
2807	name="wizard_title_default_currency">Default	98
2319	name="wizard_title_default_currency">Divisa	13
17742	name="wizard_title_default_currency">Domylna	12
22985	name="wizard_title_default_currency">Moeda	20
14692	name="wizard_title_default_currency">Moneda	13
10963	name="wizard_title_default_currency">Monnaie	14
16723	name="wizard_title_default_currency">Standaard	7
21338	name="wizard_title_default_currency">Standardvaluta</string>	12
22038	name="wizard_title_default_currency">Standardwhrung</string>	8
22628	name="wizard_title_default_currency">Valuta	11
17932	name="wizard_title_feedback_options">	17
12196	name="wizard_title_feedback_options"></string>	9
21957	name="wizard_title_feedback_options">Alternativer	6
3259	name="wizard_title_feedback_options">Feedback	84
16557	name="wizard_title_feedback_options">Feedbackopties</string>	3
59330	name="wizard_title_feedback_options">Feedbackoptionen</string>	4
59493	name="wizard_title_feedback_options">Op&#231	6
2955	name="wizard_title_feedback_options">Opciones	9
17853	name="wizard_title_feedback_options">Opcje	8
54932	name="wizard_title_feedback_options">Opes	12
11254	name="wizard_title_feedback_options">Options	3
29351	name="wizard_title_feedback_options">Opzioni	4
55967	name="wizard_title_feedback_options">terkopplingsalternativ</string>	2
17974	name="wizard_title_select_currency">	17
12651	name="wizard_title_select_currency"></string>	9
59539	name="wizard_title_select_currency">Escolha	11
16642	name="wizard_title_select_currency">Munteenheid	3
3433	name="wizard_title_select_currency">Seleccione	9
59986	name="wizard_title_select_currency">Seleccioneu	6
54971	name="wizard_title_select_currency">Selecionar	7
2886	name="wizard_title_select_currency">Select	81
29372	name="wizard_title_select_currency">Seleziona	4
11359	name="wizard_title_select_currency">Slectionner	10
21729	name="wizard_title_select_currency">Velg	6
56170	name="wizard_title_select_currency">Vlj	2
59293	name="wizard_title_select_currency">Whrung	4
17676	name="wizard_title_select_currency">Wybie	8
17963	name="wizard_title_welcome_to_gnucash">	9
54937	name="wizard_title_welcome_to_gnucash">Bem-vindo	10
59492	name="wizard_title_welcome_to_gnucash">Bemvindo	11
29312	name="wizard_title_welcome_to_gnucash">Benvenuto	7
59964	name="wizard_title_welcome_to_gnucash">Benvingut	6
3289	name="wizard_title_welcome_to_gnucash">Bienvenido	9
16395	name="wizard_title_welcome_to_gnucash">Bienvenue	7
28185	name="wizard_title_welcome_to_gnucash">GnuCash	10
12162	name="wizard_title_welcome_to_gnucash">GnuCash</string>	7
21302	name="wizard_title_welcome_to_gnucash">Velkommen	6
56154	name="wizard_title_welcome_to_gnucash">Vlkommen	2
3000	name="wizard_title_welcome_to_gnucash">Welcome	87
16987	name="wizard_title_welcome_to_gnucash">Welkom	3
59250	name="wizard_title_welcome_to_gnucash">Willkommen	4
17254	name="wizard_title_welcome_to_gnucash">Witamy	8
37538	name="wrap_content"	4
8790	name="xml"	2
18869	nameChanged	16
63381	nameCount	4
3199	nameEditText	6
2468	nameEditText.getText().toString())	6
3453	nameEditText.setText(bookName)	6
14076	nameFile	6
63825	nameFile.createNewFile()	3
63828	nameFile.getName())	3
32817	nameIndex	4
20339	nameNode	13
20678	nameNode.appendChild(doc.createTextNode(mName))	15
25650	nameUID	3
41230	named	8
12226	names	92
41651	names)	4
28438	names.	11
7102	names.add("")	8
6467	names.add(account.getName())	16
29888	names.add(getResources().getString(R.string.label_other_slice))	5
33198	names.get(i)	3
33005	names.set(i	3
33082	names.set(i,names.get(i	3
60884	namespace	11
60696	namespace)	6
55224	namespace="ISO4217"	10
7428	namespaces	16
56748	namespaces)	6
15472	namibio</item>	14
56036	namn	2
56295	namn</string>	2
29634	nanti.	5
26065	naprawionych	5
45534	narrow	4
5789	nas	6
22108	nastaven	7
62710	nastaveno</string>	3
23473	native	87
44492	nativeItem	5
44862	nativeItem)	4
44611	nativeItem.setAlphabeticShortcut(nonActionItem.getAlphabeticShortcut())	4
44285	nativeItem.setCheckable(nonActionItem.isCheckable())	4
44665	nativeItem.setChecked(nonActionItem.isChecked())	4
44597	nativeItem.setEnabled(nonActionItem.isEnabled())	4
44359	nativeItem.setIcon(nonActionItem.getIcon())	4
44751	nativeItem.setIntent(nonActionItem.getIntent())	4
44667	nativeItem.setNumericShortcut(nonActionItem.getNumericShortcut())	4
44421	nativeItem.setOnMenuItemClickListener(listener)	4
44534	nativeItem.setTitleCondensed(nonActionItem.getTitleCondensed())	4
44333	nativeMenu	4
44339	nativeMenu)	4
44718	nativeOutItems	5
44680	nativeProvider	4
44622	nativeSub	4
44654	nativeSub.add(subItem.getGroupId(),subItem.getItemId(),	4
44879	nativeSub.getItem()	4
44330	nativeSub.setGroupCheckable(subItem.getGroupId(),true,true)	4
44713	nativeSubItem	4
44899	nativeSubItem.setAlphabeticShortcut(subItem.getAlphabeticShortcut())	4
44709	nativeSubItem.setCheckable(subItem.isCheckable())	4
44366	nativeSubItem.setChecked(subItem.isChecked())	4
44657	nativeSubItem.setEnabled(subItem.isEnabled())	4
44363	nativeSubItem.setIcon(subItem.getIcon())	4
44427	nativeSubItem.setIntent(subItem.getIntent())	4
44209	nativeSubItem.setNumericShortcut(subItem.getNumericShortcut())	4
44441	nativeSubItem.setOnMenuItemClickListener(listener)	4
44756	nativeSubItem.setTitleCondensed(subItem.getTitleCondensed())	4
44835	nativeSubMenu	4
44778	nativeSubMenu)	4
44258	nativeSubMenu.getItem()	4
39391	nativeTab	4
39682	nativeTab)	4
40541	natural	4
40783	natural,	4
40697	nature	4
18423	nav	38
45565	navWidth	4
45772	navWidth)	4
20756	navega&#231	11
16090	navegaci&#243	9
15577	navegacin	9
4749	navegao	13
49090	navigating	5
1496	navigation	117
37385	navigation.	8
37735	navigationMode.	4
37650	navigationMode="normal"	4
51893	navn	7
17777	nawigacyjna	15
17642	nazw	13
59269	ncercai	6
42277	ncessry	4
20384	ncia	13
20373	ncia</string>	16
20431	ncias	13
21131	ncias</string>	16
4958	ndern.</string>	12
5744	ndern</string>	14
56046	ndra	3
56183	ndras!</string>	2
527	ne	90
3944	nea</string>	13
49401	near	5
24851	neas	6
55552	nebo	2
55638	nebyl	2
31652	neccessary	10
2504	necesaria</string>	11
59925	necessarily	3
29360	necessario</string>	4
12010	necessary	110
3117	necessary)	17
40523	necessary).	6
46901	necessary,you	4
61879	necessary-->	6
56512	necessary.	5
3750	need	171
40747	need,	4
47025	needUpdate	4
12456	needed	43
44433	needed).	4
41060	needed.	18
48441	needing	4
18744	needs	47
42517	needsDividerAfter()	8
43239	needsDividerBefore()	8
43799	needsExpansion	4
45266	needsInvalidate	4
46144	needsMeasuring	4
15405	neerland&#233	8
15906	neerlands</item>	10
26208	negate(){	19
33869	negated	9
61962	negation	3
6561	negative	52
31848	negative,<code>false</code>	6
42082	negative,animation	4
36445	negative,debits	20
41121	negative,which	4
42273	negative.	4
7208	negative?	9
22678	nei	11
50873	neither	5
37361	neither)	5
12167	nel	29
16317	nell\'esportazione	32
16105	nell\'importare	23
22818	nella	32
16442	nelle	26
22314	nelze	7
15620	neozeland&#233	8
15562	neozelands</item>	10
15535	nepal&#237	8
15560	nepal</item>	10
62470	nepalesa</item>	6
62733	neplatn.	3
55697	neplatn</string>	2
22272	nepodporuje	5
28628	nesta	10
3565	neste	66
33573	nested	22
18589	nesting	13
24753	net.objecthunter.exp4j.Expression	27
24719	net.objecthunter.exp4j.ExpressionBuilder	29
17808	netto</string>	13
58620	network	5
14864	neue	6
5067	neuen	44
22386	neues	7
12316	neve</string>	11
13151	never	68
45	new	445
57363	new"	2
23620	new'	2
28332	new,Create	8
20420	new.</p>	2
30638	newAccountFragment	10
30663	newAccountFragment,AccountsActivity.FRAGMENT_NEW_ACCOUNT)	10
30476	newAccountFragment.setArguments(args)	10
18760	newAccountFullName	10
30461	newAccountId	10
51122	newAccountId)	7
7101	newAccountId){	26
31369	newAccountUID	7
31471	newAccountUID)	6
36336	newAmount	10
43143	newArray(int	23
14592	newBasePath	7
14464	newBasePath.mkdirs()	7
46771	newBg	4
47385	newBg.addFrame(frame,background.getDuration(i))	4
47060	newBg.setId(i,background.getId(i))	4
47124	newBg.setLevel(10000)	4
47468	newBg.setOneShot(background.isOneShot())	4
60346	newColors	3
24897	newColors.add(Color.LTGRAY)	6
60382	newColors.add(data.getDataSet().getColors().get(i))	3
38502	newConfig	4
24774	newConfig)	54
39022	newConfig:	4
60554	newCursor	7
60443	newCursor)	3
60594	newCursor.getColumnIndexOrThrow("_id")	3
60624	newCursor.registerContentObserver(mChangeObserver)	3
60650	newCursor.registerDataSetObserver(mDataSetObserver)	3
49220	newDefaultActivity	4
49036	newDefaultActivity.resolveInfo.activityInfo.name)	4
49646	newDefaultActivity.resolveInfo.activityInfo.packageName,	4
49250	newDefaultActivity.weight	4
51973	newEndTime	5
24751	newEntries	6
24622	newEntries.add(new	6
56838	newFileName	7
59883	newFilter	3
237	newFragment	21
23333	newFragment.show(ft,"date_dialog")	10
909	newFragment.show(getActivity().getSupportFragmentManager(),"date_dialog")	7
354	newFragment.show(getSupportFragmentManager(),"date_dialog")	11
30474	newInstance()	22
51088	newInstance(@NonNull	4
26998	newInstance(AccountsDbAdapter	14
9167	newInstance(Bundle	17
27715	newInstance(DisplayMode	6
56569	newInstance(OnDateRangeSetListener	6
56540	newInstance(OnDateSetListener	4
64255	newInstance(OnTimeSetListener	1
32903	newInstance(Preference	7
33337	newInstance(String	22
64309	newInstance(View.OnClickListener	2
27580	newInstance(int	34
48704	newInstance(itemActionProviderClassName,	4
48249	newInstance(itemActionViewClassName,	4
56581	newInstance(long	3
59620	newInstance(long[]	3
1643	newInstance_shouldHaveNonNullDescription()	4
1155	newInstance_shouldReturnNonNullValues()	6
40945	newKeyframes	8
40470	newKeyframes[i]	8
24744	newLabels	6
24792	newLabels.add(context.getResources().getString(R.string.label_other_slice))	3
60394	newLabels.add(data.getXVals().get(i))	3
24662	newLabels.add(getResources().getString(R.string.label_other_slice))	6
6709	newLine	36
7274	newLine)	12
37787	newMenus	5
38736	newMenus.add(f)	4
41853	newPVH	5
41799	newPVH.mEvaluator	4
41915	newPVH.mFloatKeyframeSet	4
42267	newPVH.mIntKeyframeSet	4
42033	newPVH.mKeyframeSet	5
41795	newPVH.mPropertyName	4
63578	newParentAccountGUID	4
63583	newParentAccountID	4
930	newParentAccountId	15
18958	newParentAccountId)	5
390	newParentAccountUID	9
62598	newParentAccountUID)	2
13212	newParentUID	10
24230	newParentUID){	13
46365	newPos	4
45974	newPos)	4
50585	newQuery	5
40969	newSet	8
54313	newStartTime	6
37925	newTab()	8
39680	newTabCount	4
49179	newText	15
48825	newText)	13
49848	newText.toString()	5
30602	newTrans	8
30576	newTrans.setOnClickListener(new	8
23753	newTransactionButton	20
23516	newTransactionButton.setFocusable(false)	8
30499	newTransactionButton.setOnClickListener(new	7
23431	newTransactionButton.setVisibility(View.GONE)	17
29316	newTransactionFragment	11
29347	newTransactionFragment,FRAGMENT_NEW_TRANSACTION)	3
30612	newTransactionFragment,TransactionsActivity.FRAGMENT_NEW_TRANSACTION)	8
63102	newTransactionFragment.refreshSelectedAccount(itemId)	2
29446	newTransactionFragment.setArguments(args)	10
10007	newTransactionIntent	17
8955	newTransactionIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)	11
54743	newTransactionIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_CLEAR_TASK)	9
63438	newTransactionIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,accountId)	4
9245	newTransactionIntent.putExtra(UxArgument.BOOK_UID,bookUID)	6
10074	newTransactionIntent.putExtra(UxArgument.FORM_TYPE,FormActivity.FormType.TRANSACTION.name())	9
63389	newTransactionIntent.putExtra(UxArgument.SELECTED_ACCOUNT_ID,accountId)	4
9085	newTransactionIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,accountUID)	15
10031	newTransactionIntent.setAction(Intent.ACTION_INSERT_OR_EDIT)	19
56923	newTransactionIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)	2
56839	newTransactionIntent.setFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)	2
30572	newTransactionsFragment	14
30514	newTransactionsFragment.onAccountChanged(itemId)	8
34940	newTransactionsFragment.onAccountChanged(mAccountUID)	9
51218	newValu	2
21134	newValue	28
592	newValue)	69
24276	newValue){	21
52132	newValue.toString()	19
42940	newValuesHolder	4
18225	newVersion	47
18477	newVersion)	77
23842	newVersion){	37
49814	newView(Context	5
50223	newView(mContext,mCursor,parent)	5
43803	newVisibility	4
43368	newVisibility)	4
47599	newWidth	4
47949	newWidth)	4
61157	new]	3
38682	newer	4
26034	newestAccount	27
18185	newly	74
1730	next	113
59844	nextDayOfWeek(day).getTimeInMillis()	2
19283	nextDayOfWeek(int	8
41022	nextFraction	4
40855	nextKeyframe	8
41087	nextKeyframe.getFloatValue()	4
41133	nextKeyframe.getFraction()	4
40471	nextKeyframe.getFraction())	8
41110	nextKeyframe.getIntValue()	4
41118	nextKeyframe.getInterpolator()	8
41373	nextKeyframe.getValue())	4
49333	nextRecordWeight	4
33637	nextRun	10
33666	nextRun)	10
54153	nextRunTime	5
34724	nextScheduledExecution	9
34828	nextScheduledExecution.plusDays(multiplier)	9
34808	nextScheduledExecution.plusHours(multiplier)	2
50892	nextScheduledExecution.plusMonths(multiplier)	7
50661	nextScheduledExecution.plusWeeks(multiplier)	7
50783	nextScheduledExecution.plusYears(multiplier)	4
50760	nextScheduledExecution.toDate().getTime()	4
40676	nextValue	4
56471	nextYear	3
56556	nextYear.add(Calendar.YEAR,1)	3
50676	nfe)	5
15455	ngaro</item>	8
4056	ngen	25
26259	ngewif	11
56326	ngon	2
56136	ngra	2
55899	ngras!	2
13000	ni	35
4891	nice	19
4077	nicht	38
12838	nico	28
51531	nidificati\n	7
17707	nie	24
16868	niet	23
16864	nieuw	7
16914	nieuwe	45
15609	nigeriana</item>	14
22784	nilai	7
12127	nimi</string>	12
36089	nine-character	7
11894	ningn	11
17198	nl	6
2365	nmente	19
5875	nnen.</string>	30
4809	nnten	18
522	no	408
41697	no-arg	4
39772	no-op	4
20156	noDataMsg	4
47421	noInputMethod	4
4684	noch	15
7346	node	72
40604	node's	4
56755	node,	3
7328	node,Writer	18
40436	node,int	4
40383	node.	4
41088	node.addDependency(dependency)	4
40701	node.animation	4
40637	node.animation.addListener(mSetListener)	4
40833	node.animation.cancel()	4
40826	node.animation.end()	4
40709	node.animation.getListeners()	4
40953	node.animation.removeListener(listener)	4
40827	node.animation.setDuration(duration)	4
40349	node.animation.setInterpolator(interpolator)	4
40902	node.animation.setupEndValues()	4
40401	node.animation.setupStartValues()	4
40415	node.animation.start()	4
40498	node.clone()	4
40649	node.dependencies)	4
40766	node.dependencies.clone()	4
41139	node.dependencies.get(j)	4
40908	node.dependencies.size()	4
41085	node.done	4
40396	node.nodeDependencies	4
40811	node.nodeDependencies.add(dependency.node)	4
40546	node.nodeDependencies.remove(root)	4
40614	node.tmpDependencies	4
40836	nodeClone	4
40501	nodeClone.addDependency(cloneDependency)	4
41077	nodeClone.animation.getListeners()	4
40810	nodeClone.dependencies	4
40487	nodeClone.nodeDependencies	4
40574	nodeClone.nodeDependents	4
40816	nodeClone.tmpDependencies	4
41117	nodeCloneMap	4
40643	nodeCloneMap.get(dependency.node)	4
40784	nodeCloneMap.get(node)	4
40625	nodeCloneMap.put(node,nodeClone)	4
40899	nodeDepdendents	4
41146	nodeDependencies	4
40502	nodeDependencies.add(dependency.node)	4
40993	nodeDependents	4
48829	nodeName	4
41101	nodemap.	4
20795	nodes	19
41040	nodes,if	4
40407	nodes,mapped	4
40818	nodes,we're	4
40959	nodes.	5
40680	nodesToStart	4
40582	nodesToStart)	4
41042	nodesToStart.add(node)	4
40581	nodesToStart.get(i)	4
40460	nodesToStart.size()	4
16705	nog	21
10764	nom	32
15412	nombre	27
56414	nombre</string>	2
5437	nome	51
55591	nome&#8230	2
56271	nome</string>	2
55876	nomes	2
10765	non	62
23868	non-ISO4217	4
12204	non-Latin	4
44556	non-action	4
321	non-capturing	11
23160	non-constant	9
7543	non-default	3
40242	non-delayed	4
51609	non-deprecated	5
35843	non-digit	3
35966	non-digits	3
50072	non-empty.	5
52189	non-existing	8
44322	non-human	4
39926	non-linear	8
59551	non-negative	5
50982	non-null	7
12682	non-numeric	5
23863	non-template	13
2730	non-top-level	5
40958	non-trivial	8
44248	nonActionItem	4
44845	nonActionItem.getOrder(),nonActionItem.getTitle())	4
43043	nonActionItems	8
44698	nonActionItems)	4
42457	nonActionItems.size()	8
51625	nonMatchingCommodityFraction_shouldThrowException(){	3
43409	nonOverflowCount	5
43960	nonOverflowCount++	4
43530	nonOverflowWidth	4
62726	nonaktifkan	3
24153	none	66
49861	none.	5
40179	nonzero	15
42150	nonzero.	4
50736	nor	5
15344	norcoreano</item>	14
2850	normal	116
7026	normalBalance	5
6802	normalBalance){	5
39855	normally	12
47300	normally.	5
62452	norte-coreano</item>	6
15908	noruega</item>	14
62371	norueguesa</item>	6
4754	nos	23
715	not	449
52165	not,attach	11
26397	not,contact:	18
41438	not,it	4
4477	not,the	7
19515	not,then	5
6889	not.	46
54807	notSettingEndDate_shouldReturnSpecialCountValue()	6
14814	nota</string>	31
21652	notat</string>	10
23345	notation,do	3
2845	note	51
47576	note:	4
11360	note</string>	81
14204	notes	42
14253	notes)	6
24663	notes.length()	13
29041	notesEditText	7
28923	notesEditText.getText().toString()	7
1349	nothing	96
5318	nothing.	8
52635	nothing:	2
9214	notice	16
27894	notification	22
50506	notification.	7
41084	notifications	22
31299	notifications"	11
24720	notified	39
44829	notified,and	4
53710	notified,{@code	2
49562	notified.	5
58845	notifies	2
34290	notify	45
49458	notifyChanged()	4
48848	notifyDataSetChanged()	16
49782	notifyDataSetInvalidated()	8
60417	notifyItemRangeRemoved(0,getItemCount())	3
48859	notifyOnDismissListener()	4
4048	notifying	14
17624	notowania</string>	10
12363	nou	21
59202	nou</string>	6
32131	noun	5
60095	nous	3
10898	nouveau	36
23334	nouveau</string>	17
10906	nouveaux	14
12325	nouvelle	33
10814	nouvelles	37
22126	nov	8
12949	nova	47
22235	nova</string>	10
3247	novamente	18
4753	novamente</string>	23
19992	novamnete</string>	15
19704	novas	36
22334	noves	7
55787	novho</string>	5
55526	novm	2
4524	novo	37
4687	novo</string>	59
10513	novou	12
2080	now	183
4380	now)	21
12124	now,maybe	12
45432	now,no	4
40468	now,then	4
10458	now.	27
18582	now.add(Calendar.MONTH,1)	7
18999	now.add(Calendar.YEAR,1)	7
59833	now.getTimeInMillis()	2
59439	now:	6
57403	now</p>	4
17679	nowe	23
17264	nowego</string>	19
17285	nowych	9
10610	nr	36
21933	ns	34
14489	ns",System.nanoTime()-startTime))	8
52379	ns",nSplits,System.nanoTime()-start))	4
50865	ns",splitList.size(),System.nanoTime()-start))	6
56754	ns)	6
56773	ns,"http://www.gnucash.org/XML/"	6
15997	ntelo	8
12470	ntr-un	11
12908	nueva	32
2831	nueva</string>	13
12230	nuevas	45
15849	nuevo	30
15662	nuevo</string>	11
15551	nuevo?</string>	23
1333	null	381
33626	null"	6
24598	null")	22
42	null)	380
39281	null))	21
50353	null)))	5
46457	null).	4
1601	null){	259
2236	null,	93
18040	null,"	85
24475	null,//haveing	6
35278	null,AccountEntry.COLUMN_UID	5
27757	null,DatabaseHelper.KEY_UID	5
21836	null,DatabaseSchema.AccountEntry.COLUMN_FULL_NAME	3
53278	null,ScheduledActionEntry.COLUMN_ENABLED	11
33610	null,ScheduledEventEntry.COLUMN_ENABLED	3
24186	null,SplitEntry.COLUMN_TRANSACTION_UID	13
24073	null,condition,null,null,null,	22
24590	null,condition,null,null,null,sortOrder)	4
53225	null,from,to,0)	6
31719	null,it	6
64002	null,new	2
60416	null,no	3
57265	null,null)	5
2244	null,null,	11
33885	null,null,AccountEntry.COLUMN_NAME	4
34506	null,null,DatabaseHelper.KEY_NAME	5
30813	null,null,SplitEntry.COLUMN_AMOUNT	6
61796	null,null,SplitEntry.COLUMN_VALUE_NUM	3
23555	null,null,null)	54
3232	null,null,null,	26
24552	null,null,null,"1")	6
24357	null,null,null,AccountEntry.COLUMN_NAME	9
27729	null,null,null,DatabaseHelper.KEY_NAME	5
18088	null,null,null,DatabaseHelper.KEY_TIMESTAMP	9
20344	null,null,null,TransactionEntry.COLUMN_TIMESTAMP	6
6500	null,null,null,null)	75
6740	null,null,null,null,DatabaseHelper.KEY_TIMESTAMP	5
6818	null,null,null,null,DatabaseHelper.KEY_TIMESTAMP,Integer.toString(numberOfRecents))	6
34229	null,null,null,null,null)	31
30664	null,null,null,null,null,	7
24437	null,null,null,null,null,null)	25
55381	null,null,null,null,null,null))	3
35380	null,null,null,null,sortOrder,Integer.toString(numberOfRecents))	5
25716	null,or	4
2796	null,selection,null,null,null,	7
49960	null,since	5
25500	null,so	2
61643	null,subclasses	5
41316	null,the	9
19337	null,then	38
11187	null,where,whereArgs,null,null,	14
24196	null,where,whereArgs,null,null,sortOrder)	4
37855	null.	26
44502	null.")	4
38472	null.</strong>	4
35497	null:<name>	4
33493	null</b></p>	5
50560	nullVisibility)	5
10076	nullability	6
12632	num	16
25845	num)	3
23461	num1	5
23977	num2	5
42138	numAnims	4
41845	numAnims)	4
34267	numCurrencies	5
41972	numDelayedAnims	4
40806	numDependencies	4
40913	numDependents	4
40394	numKeyframes	8
40858	numListeners	13
41067	numNodes	4
19460	numOccurrences	11
52977	numPeriods	2
42099	numReadyAnims	4
43675	numRemoved	4
40730	numRoots	4
41105	numSortedNodes	4
47537	numStates	4
41404	numValues	11
1298	number	249
54320	number)	4
44219	number,and	4
31094	number.	9
61738	number:	4
6127	numberFormat	8
5765	numberFormat.parse(characterString)	8
54056	numberOfAccounts	2
7839	numberOfOccurences	18
8420	numberOfOccurences){	18
53396	numberOfPeriods	2
9860	numberOfPeriods)	10
24415	numberOfRecent)	5
7032	numberOfRecents){	15
36480	number_of_fraction_digits&gt	4
30144	numbers	13
61989	numbers.	4
53586	numer	2
12915	numerator	44
33259	numerator,	17
32969	numerator,int	8
33219	numerator,long	15
32277	numerator.divide(denominator)	6
12746	numerator/denominator	10
51675	numeratorInt	8
26033	numeric	17
42362	numericChar	12
42398	numericChar)	12
42323	numericChar,char	12
4431	numerical	15
13023	nuova	23
16241	nuovi	19
16240	nuovo	24
4342	nur	30
13009	ny	57
10735	nya	10
7664	nye	57
15187	nylig	21
21809	nylige	6
28180	nylige,favoritter	4
22679	nytettvi	7
12487	nytettviss	12
8363	nytt</string>	54
22127	nzev	7
3786	o	182
30779	o)	12
20378	o,para	11
21148	o.\nA	11
36444	o.getClass())	8
21046	o:</string>	11
15305	o</item>	8
3702	o</string>	36
20358	o?</string>	11
29679	obbligatorio</string>	4
17318	obecne	13
63542	oberserver	2
37634	obey	4
26540	obj	25
26414	obj)	26
26246	obj.getClass())	7
2409	object	244
23772	object")	22
19670	object)	17
41917	object,and	4
36465	object,but	9
3559	object,if	8
41751	object,it	4
41556	object,or	8
42060	object,this	4
41764	object,using	5
40919	object,which	6
36033	object.	33
41862	object.</p>	4
31886	object</p>	5
5877	objects	58
42307	objects,even	4
41504	objects,then	4
26563	objects.	26
41673	objects.</p>	8
59524	obrigat&#243	6
29693	obrigatria	8
29700	obrigatrio.</string>	11
25656	obrir</string>	5
63534	observed	1
53974	observer	6
47972	observer)	4
60571	observers	3
9047	obsolete	3
2073	obtain	349
46605	obtainView(int	4
18646	obtained	10
44798	obtained--only	4
60538	obtaining	3
21049	obter	22
32786	ocCheckBox	8
63163	ocCheckBox.setChecked(true)	3
31767	ocDialog	12
31787	ocDialog.show(getActivity().getFragmentManager(),"owncloud_dialog")	7
31577	ocDialog.show(getActivity().getSupportFragmentManager(),"ownCloud	9
57067	ocDialog.show(getActivity().getSupportFragmentManager(),"owncloud_dialog")	3
32803	ocDialog.show(getFragmentManager(),"owncloud_dialog")	10
38334	occupy	8
26286	occur	14
8764	occur,not	10
47818	occur.	6
51376	occured	4
53450	occurence	5
1875	occurences	35
19792	occurencesCount	9
19767	occurencesCount){	9
60273	occuring	3
3609	occurred	131
46454	occurred.	4
42384	occurrence	4
7926	occurrenceDuration	16
7884	occurrences	23
8687	occurrences,or	7
33787	occurrences.</p>	4
28374	occurs	21
54563	occurs,no	3
60511	occurs.	3
56162	och	3
29719	ocks	5
55875	ocks.	2
57579	ocorreu	6
22423	od	13
41772	odd	4
27462	odd-numbered	3
5854	oder	34
17500	odnaleziony.	16
59518	odo:</string>	6
55496	odstranit	2
22005	odstrann	5
22428	odstrannm	5
22049	odstranny	7
1020	of	449
48030	of.	9
38480	of:	4
41683	ofFloat(Object	4
41241	ofFloat(Property<?,Float>	4
41469	ofFloat(String	4
41666	ofFloat(T	4
41625	ofFloat(float	4
41462	ofFloat(float...	8
41259	ofInt(Object	4
41491	ofInt(Property<?,Integer>	4
41502	ofInt(String	4
41240	ofInt(T	4
41266	ofInt(float	5
41688	ofInt(int...	8
41718	ofKeyframe(Keyframe...	4
41707	ofKeyframe(Property	4
41511	ofKeyframe(String	4
41349	ofObject(Object	4
41583	ofObject(Object...	4
41481	ofObject(Property	4
41167	ofObject(String	4
41232	ofObject(T	4
42105	ofObject(TypeEvaluator	4
41270	ofObject(float	4
41178	ofPropertyValuesHolder(Object	4
41844	ofPropertyValuesHolder(PropertyValuesHolder...	4
27688	off	52
38055	offers	4
56187	offert</string>	2
61386	official	4
34420	offset	40
47518	offset)	8
34381	offset))	13
46794	offset,determine	4
37095	offsetting	4
5699	often	30
42274	often,some	4
16574	ofwel	3
35592	ofx	4
30738	ofxAccountType	15
12588	ofxAccountTypeMapping(AccountType	6
55154	ofxDateFormatter	3
55152	ofxDateFormatter.format(date)	3
31428	ofxExporter	2
31224	ofxExporter.generateExport()	2
6929	ofxNode	26
34546	ofxRadioButton	14
56927	ofxRadioButton.performClick()	6
52066	ofxRadioButton.setChecked(defaultExportFormat.equalsIgnoreCase(ExportFormat.OFX.name()))	8
34680	ofxRadioButton.setOnClickListener(clickListener)	14
62363	ofxRadioButton.setVisibility(View.GONE)	6
3015	og	131
17339	ogem]]></string>	10
55987	ogiltigt</string>	2
22758	ogni	11
7922	ogs	45
29525	ohne	6
5129	ok	10
17762	okre	11
64045	okrel	2
2554	old	226
60457	old.close()	3
40819	old/new	4
13255	oldActiveBookUID	6
61915	oldAdapter	3
61948	oldAdapter.unregisterAdapterDataObserver(observer)	3
14457	oldBackupFolder	9
49234	oldBottom)	5
60546	oldCursor	4
60425	oldCursor)	3
60575	oldCursor.unregisterContentObserver(mChangeObserver)	3
60427	oldCursor.unregisterDataSetObserver(mDataSetObserver)	3
49529	oldDataModel	5
48828	oldDataModel.unregisterObserver(mModelDataSetOberver)	5
14242	oldDbVersion	3
49187	oldDefaultActivity	4
49503	oldDefaultActivity.weight	4
59350	oldExportFolder	2
30041	oldExportFolder.delete()	6
14628	oldExportFolder.listFiles())	7
44331	oldFlags	4
43643	oldItem	4
43933	oldItem)	4
49237	oldLeft,int	5
40861	oldListeners	10
41012	oldListeners.size()	10
49566	oldMaxActivityCount	4
43301	oldMeasuredWidth	4
40194	oldMode	8
45405	oldMode)	4
41615	oldName	4
45572	oldParent	4
45068	oldParent.removeView(mMenuView)	4
45537	oldParent.removeView(menuView)	4
63567	oldParentAccountId	4
63577	oldParentAccountId)	4
24066	oldParentUID	8
24608	oldParentUID,	7
24326	oldParentUID,@Nullable	4
24317	oldParentUID,String	10
49880	oldQuery	5
49149	oldRight,int	5
41712	oldTarget	4
41493	oldTarget.getClass()	4
48834	oldTop,int	5
43067	oldValues	4
42605	oldValues.length	4
42492	oldValues[i].clone()	4
2055	oldVersion	87
27513	oldVersion)	19
18444	oldVersion,	75
34564	oldVersion,int	17
47568	oldWidth	4
20885	older	9
48824	oldest	4
46890	oldh)	4
47304	oldw,int	4
12613	olevia	12
27198	olive	3
17119	om	58
15446	oman&#237	8
15632	oman</item>	10
17070	omgerekende	3
16943	omgezette	5
8409	omgjort!	13
15931	omisi&#243	18
7239	omitXmlDeclaration	14
7174	omitXmlDeclaration){	21
6779	omitted	25
48350	omitted,thus	4
1018	on	438
51355	on!	3
59591	on-demand.	1
5592	on-the-go	27
28962	on-the-go,que	12
45248	on.	8
31451	onAccountChanged(String	6
6843	onAccountChanged(long	30
1351	onAccountTypeUpdated(AccountType	19
0	onAccountTypeUpdated(mAccountType)	11
18400	onActionItemClicked(ActionMode	82
39712	onActionItemClicked(android.view.ActionMode	5
37979	onActionModeFinished(ActionMode	8
38169	onActionModeStarted(ActionMode	8
46019	onActionViewCollapsed()	14
45868	onActionViewExpanded()	14
30257	onActivityCreated	6
724	onActivityCreated(@Nullable	60
3704	onActivityCreated(Bundle	223
3096	onActivityResult	13
60	onActivityResult(int	146
40519	onAnimationCancel(Animator	14
40011	onAnimationEnd(Animator	17
40698	onAnimationRepeat(Animator	14
40817	onAnimationStart(Animator	14
43221	onAnimationUpdate(ValueAnimator	4
19111	onAttach(Activity	43
32054	onAttach(Context	6
1561	onAttachFragment(Fragment	20
42795	onAttachedToWindow()	16
23534	onBackPressed()	27
10245	onBindViewHolder(BudgetAmountViewHolder	4
1602	onBindViewHolder(DateViewHolder	7
60419	onBindViewHolder(VH	3
11361	onBindViewHolderCursor(BudgetViewHolder	4
60609	onBindViewHolderCursor(VH	3
30187	onBindViewHolderCursor(ViewHolder	21
34265	onBindViewHolderCursor(final	20
60656	onBindViewHolderCursor(holder,mCursor)	3
25189	onBuildHeaders(List<Header>	16
60657	onChange(boolean	3
44582	onChanged()	22
6351	onCheckedChanged(CompoundButton	77
48203	onChooseActivity(ActivityChooserModel	8
48722	onClick	4
3358	onClick(DialogInterface	138
836	onClick(View	264
27092	onClickAppTitle(View	6
63527	onClickAppTitle(v)	4
32781	onClickBook(View	9
32854	onClickBook(v)	7
54087	onClickBudget(String	2
54059	onClickBudget(budget.getUID())	2
10071	onClickBudgetStartDate(View	5
32467	onClickChartTypeButton(View	10
35147	onClickListener	8
48845	onClose()	12
49722	onCloseClicked()	7
39189	onCloseMenu(MenuBuilder	24
40159	onCloseSubMenu(SubMenuBuilder	8
1247	onColorSelected(int	17
24821	onConfigurationChanged(Configuration	54
51701	onConnected(Bundle	7
51681	onConnectionFailed(ConnectionResult	18
51690	onConnectionSuspended(int	7
60637	onContentChanged()	7
30544	onCreate	15
4404	onCreate()	5
2007	onCreate(){	78
7962	onCreate(@Nullable	33
28	onCreate(Bundle	257
34638	onCreate(SQLiteDatabase	20
34617	onCreate(db)	3
4410	onCreateActionMode(ActionMode	38
39732	onCreateActionMode(android.view.ActionMode	4
43061	onCreateActionView()	12
54082	onCreateBudgetClick(View	2
27441	onCreateDialog(Bundle	64
18451	onCreateLoader(int	32
39585	onCreateOptionsMenu	4
846	onCreateOptionsMenu(Menu	147
39263	onCreateOptionsMenu(android.view.Menu	4
38652	onCreateOptionsMenu(menu)	8
38961	onCreateOptionsMenu(new	4
37820	onCreatePanelMenu(int	10
57193	onCreatePreferences(Bundle	6
2735	onCreateView(LayoutInflater	195
1439	onCreateViewHolder(ViewGroup	32
62085	onData(allOf(is(instanceOf(String.class)),is("CHF")))	3
23554	onData(allOf(is(instanceOf(String.class)),is(AccountType.TRADING.name()))).perform(click())	6
36687	onData(allOf(is(instanceOf(String.class)),is(account.getFullName()))).perform(click())	8
36517	onData(withId(R.id.input_accounts_spinner))	10
6497	onDateRangeSet(Date	12
940	onDateSet()	9
23367	onDateSet(CalendarDatePickerDialog	8
53757	onDateSet(CalendarDatePickerDialogFragment	6
300	onDateSet(DatePicker	27
9203	onDeleted(Context	16
30385	onDependentViewChanged(CoordinatorLayout	8
39691	onDestroy	4
5130	onDestroy()	103
18507	onDestroyActionMode(ActionMode	35
39743	onDestroyActionMode(android.view.ActionMode	5
1811	onDestroyView()	32
32111	onDetach()	10
42794	onDetachedFromWindow()	33
43229	onDismiss()	12
23942	onDismiss(DialogInterface	10
47223	onDraw	4
43440	onDraw(Canvas	14
24740	onDrawerClosed(View	4
20283	onDrawerMenuItemClicked(int	25
21048	onDrawerMenuItemClicked(menuItem.getItemId())	3
24882	onDrawerOpened(View	15
62035	onEditScreenAfterReview(String	3
50475	onEditorAction(TextView	5
9818	onEnabled(Context	9
32946	onFinishInflate()	18
59151	onFinishTask	4
59104	onFinishTask)	4
34949	onFocusChange(View	33
50308	onFocusChanged(boolean	5
62111	onGetModel()	3
50990	onGetPage	4
62260	onGetPage(String	3
44423	onGlobalLayout()	9
8658	onGroupingUpdated(GroupInterval	23
334	onGroupingUpdated(ReportsActivity.GroupInterval	25
5861	onHandleIntent(Intent	35
45025	onHoverEvent(MotionEvent	4
43277	onHoverEvent(event)	8
45531	onInitializeAccessibilityEvent(AccessibilityEvent	17
45881	onInitializeAccessibilityEvent(record)	4
46172	onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo	9
39372	onIntChanged(featureId,value)	4
40027	onIntChanged(int	4
45512	onInterceptTouchEvent(MotionEvent	4
46066	onInvalidated()	15
43660	onItemActionRequestChanged(MenuItemImpl	4
50113	onItemClick	5
47860	onItemClick(AdapterView	10
3121	onItemClick(AdapterView<?>	63
50282	onItemClicked(int	5
49855	onItemClicked(position,KeyEvent.KEYCODE_UNKNOWN,null)	6
49820	onItemClicked(position,keyCode,actionMsg)	5
14293	onItemLongClick(AdapterView<?>	35
46509	onItemLongClick(IcsAdapterView<?>	4
61883	onItemRangeInserted(int	3
61942	onItemRangeRemoved(int	3
1792	onItemSelected(AdapterView<?>	132
45681	onItemSelected(IcsAdapterView	4
46444	onItemSelected(IcsAdapterView<?>	8
49961	onItemSelected(int	5
44031	onItemVisibleChanged(MenuItemImpl	4
43974	onItemsChanged	4
43649	onItemsChanged(boolean	4
43480	onItemsChanged(false)	7
43613	onItemsChanged(true)	4
43832	onItemsChanged.	4
559	onKey(View	14
26777	onKey(int	36
49905	onKeyDown().	5
49985	onKeyDown(int	5
50611	onKeyPreIme(int	5
13311	onKeyUp(int	5
43709	onLayout(boolean	21
49572	onLayoutChange(View	5
953	onListItemClick(ListView	71
60485	onListItemClick(String	3
60483	onListItemClick(accountUID)	3
60683	onListItemClick(id)	3
60661	onListItemClick(long	10
18046	onLoadFinished(Loader<Cursor>	32
7971	onLoaderReset(Loader<Cursor>	41
34821	onLongClick(View	35
43156	onMeasure(int	34
43526	onMeasureExactFormat(int	4
43726	onMeasureExactFormat(widthMeasureSpec,heightMeasureSpec)	4
48222	onMenuItemActionCollapse(MenuItem	4
44345	onMenuItemActionCollapse(android.view.MenuItem	4
48226	onMenuItemActionExpand(MenuItem	4
44410	onMenuItemActionExpand(android.view.MenuItem	4
3269	onMenuItemClick(MenuItem	49
38790	onMenuItemClick(android.view.MenuItem	8
38980	onMenuItemSelected(MenuBuilder	16
38548	onMenuItemSelected(int	14
39050	onMenuModeChange(MenuBuilder	16
37772	onMenuOpened(int	8
39237	onMenuVisibilityChanged(boolean	8
21125	onNavigationItemSelected(MenuItem	9
14478	onNavigationItemSelected(int	40
2386	onNewAccountClick(View	38
20691	onNewIntent(Intent	22
62168	onNewRootPageList()	3
19129	onNewTransactionClick(View	23
30093	onNothingSelected()	27
1050	onNothingSelected(AdapterView<?>	131
45732	onNothingSelected(IcsAdapterView	4
45924	onNothingSelected(IcsAdapterView<?>	8
32521	onOpen(SQLiteDatabase	18
57442	onOpenBudgetAmountEditor(View	3
39346	onOpenSubMenu(MenuBuilder	12
38012	onOptionsItemSelected	4
706	onOptionsItemSelected(MenuItem	216
38759	onOptionsItemSelected(android.view.MenuItem	8
38991	onOptionsItemSelected(item)	4
39335	onOptionsItemSelected(new	4
62144	onPageDataChanged(Page	3
62207	onPageSelected(int	3
62178	onPageStripSelected(int	3
21756	onPageTreeChanged()	6
55541	onPanelClosed(View	8
38533	onPanelClosed(int	8
57046	onPanelOpened(View	3
57029	onPanelSlide(View	3
1106	onPasscodeEntered(String	23
9719	onPause()	28
42641	onPerformDefaultAction()	8
43064	onPopulateAccessibilityEvent(AccessibilityEvent	8
42715	onPopulateAccessibilityEvent(event)	8
38604	onPostCreate(Bundle	20
7141	onPostExecute(Boolean	85
34392	onPostExecute(Money	16
23266	onPostExecute(Void	8
38278	onPostResume()	14
3172	onPreExecute()	52
368	onPreferenceChange(Preference	62
977	onPreferenceClick(Preference	94
55499	onPreferenceStartFragment(PreferenceFragmentCompat	5
38838	onPrepare.	4
18176	onPrepareActionMode(ActionMode	39
40089	onPrepareActionMode(android.view.ActionMode	4
1194	onPrepareOptionsMenu(Menu	65
38428	onPrepareOptionsMenu(android.view.Menu	8
38726	onPrepareOptionsMenu(menu)	8
39172	onPrepareOptionsMenu(new	4
38387	onPreparePanel(int	10
48064	onPrepareSubMenu(SubMenu	8
42406	onPrepareSubMenu(android.view.SubMenu	4
31610	onPress(int	19
46755	onProgressRefresh(float	4
47141	onProgressRefresh(scale,fromUser)	4
49919	onQueryRefine(CharSequence	5
49586	onQueryTextChange(String	8
49410	onQueryTextSubmit(String	8
12308	onRadioButtonClicked(View	36
52194	onRadioButtonClicked(view)	8
11648	onReceive(Context	46
2929	onRecurrenceSet(String	37
52934	onRelease(int	10
31142	onReleaseResources(Cursor	5
63718	onReleaseResources(data)	1
63724	onReleaseResources(mCursor)	2
63719	onReleaseResources(oldCursor)	1
32637	onRemoteOperationFinish(RemoteOperation	11
21129	onRequestPermissionsResult(int	12
45908	onRequestSendAccessibilityEvent(View	4
31417	onReset()	5
39019	onRestoreInstanceState(Bundle	5
42869	onRestoreInstanceState(Parcelable	20
9480	onResult(DriveApi.DriveContentsResult	17
28226	onResult(DriveFolder.DriveFileResult	9
51680	onResult(DriveFolder.DriveFolderResult	10
410	onResume()	173
42729	onSaveInstanceState()	20
11273	onSaveInstanceState(Bundle	33
38420	onSaveInstanceState(Bundle)	4
47116	onScroll(AbsListView	4
47121	onScrollStateChanged(AbsListView	4
50089	onSearchClicked()	7
49770	onShareTargetSelected(ShareActionProvider	4
47072	onSizeChanged(int	4
132	onStart()	17
27772	onStateChange(int[]	3
13563	onStop()	18
64180	onStopLoading()	1
39875	onSubMenuSelected(SubMenuBuilder	20
42867	onSubMenuSelected(subMenu)	4
43267	onSubUiVisibilityChanged(boolean	8
49420	onSubmitQuery()	9
49045	onSuggestionClick(int	5
49600	onSuggestionSelect(int	5
50352	onSuggestionsKey(View	5
49935	onSuggestionsKey(v,keyCode,event)	5
39153	onTabReselected(Tab	4
13485	onTabReselected(TabLayout.Tab	34
39936	onTabReselected(android.app.ActionBar.Tab	5
39271	onTabSelected(Tab	4
34977	onTabSelected(TabLayout.Tab	14
40190	onTabSelected(android.app.ActionBar.Tab	5
38993	onTabUnselected(Tab	4
35025	onTabUnselected(TabLayout.Tab	14
40105	onTabUnselected(android.app.ActionBar.Tab	5
19341	onTaskComplete()	33
52913	onText(CharSequence	10
2046	onTextChanged(CharSequence	51
49863	onTextFocusChanged()	5
1946	onTimeRangeUpdated(long	36
23791	onTimeSet(RadialTimePickerDialog	8
53811	onTimeSet(RadialTimePickerDialogFragment	2
23758	onTimeSet(TimePicker	11
38585	onTitleChanged(CharSequence	14
34787	onTouch(View	52
45738	onTouchEvent(MotionEvent	4
35126	onTouchEvent(event)	12
9455	onUpdate(Context	20
18036	onUpgrade(SQLiteDatabase	79
1471	onValueSelected(Entry	46
13289	onView(allOf(hasSibling(withText(SIMPLE_ACCOUNT_NAME)),withId(R.id.options_menu))).perform(click())	3
31029	onView(allOf(isAssignableFrom(CompoundButton.class),isDisplayed(),isEnabled())).perform(click())	9
21582	onView(allOf(isDisplayed(),withId(R.id.fab_create_account))).perform(click())	13
28588	onView(allOf(withId(R.id.input_split_amount),withText(""))).perform(typeText("400"))	12
62936	onView(allOf(withId(R.id.input_split_amount),withText("-499"))).perform(clearText())	4
33115	onView(allOf(withId(R.id.options_menu),isDisplayed()))	6
32966	onView(allOf(withParent(hasDescendant(withText(PARENT_ACCOUNT_NAME))),	4
13935	onView(allOf(withParent(hasDescendant(withText(SIMPLE_ACCOUNT_NAME))),	5
54587	onView(allOf(withParent(hasDescendant(withText(displayName))),	2
62830	onView(allOf(withParent(hasDescendant(withText(trnDescription))),	4
33118	onView(allOf(withParent(withId(R.id.accounts_options)),	7
18911	onView(allOf(withText(DUMMY_ACCOUNT_NAME),isDisplayed()))	7
18691	onView(allOf(withText(DUMMY_ACCOUNT_NAME),isDisplayed())).perform(click())	13
33200	onView(allOf(withText(SIMPLE_ACCOUNT_NAME),isDisplayed())).perform(click())	3
24828	onView(anyOf(withText(containsString("Done")),withText(containsString("Set")),withText(containsString("OK")))).perform(click())	7
24919	onView(withClassName(equalTo(DatePicker.class.getName()))).perform(PickerActions.setDate(date.getYear(),date.getMonthOfYear(),1))	7
30982	onView(withId(AlertDialog.BUTTON_POSITIVE)).perform(click())	6
28521	onView(withId(R.id.abs__search_src_text)).perform(clearText())	5
28417	onView(withId(R.id.abs__search_src_text)).perform(typeText("Se"))	5
13521	onView(withId(R.id.accounts_options)).check(matches(not(isDisplayed())))	9
32820	onView(withId(R.id.book_name)).check(matches(isDisplayed())).perform(click())	2
28670	onView(withId(R.id.btn_add_split)).perform(click())	5
29101	onView(withId(R.id.btn_open_splits)).check(matches(not(isDisplayed())))	5
28999	onView(withId(R.id.btn_open_splits)).perform(click())	5
13198	onView(withId(R.id.btn_pie_chart)).perform(click())	9
13565	onView(withId(R.id.btn_save)).perform(click())	36
12461	onView(withId(R.id.btn_split_editor)).perform(click())	17
35128	onView(withId(R.id.calculator_keyboard)).check(matches(isDisplayed()))	3
34879	onView(withId(R.id.calculator_keyboard)).check(matches(not(isDisplayed())))	3
51856	onView(withId(R.id.chart_data_spinner)).perform(click())	11
24866	onView(withId(R.id.chart_date)).check(matches(isEnabled()))	6
24953	onView(withId(R.id.chart_date)).check(matches(not(isEnabled())))	9
24883	onView(withId(R.id.chart_date)).check(matches(withText("Overall")))	9
60357	onView(withId(R.id.chart_date)).check(matches(withText(date.toString(PieChartActivity.DATE_PATTERN))))	5
24778	onView(withId(R.id.chart_date)).check(matches(withText(date.toString(PieChartFragment.DATE_PATTERN))))	5
24783	onView(withId(R.id.chart_date)).perform(click())	6
23392	onView(withId(R.id.checkbox_parent_account)).check(matches(allOf(isChecked())))	15
13270	onView(withId(R.id.checkbox_parent_account)).perform(scrollTo())	10
21222	onView(withId(R.id.checkbox_placeholder_account))	7
28359	onView(withId(R.id.checkbox_transaction))	3
28424	onView(withId(R.id.context_menu_delete)).perform(click())	6
13817	onView(withId(R.id.context_menu_edit_accounts)).check(matches(isDisplayed())).perform(click())	2
19023	onView(withId(R.id.context_menu_edit_accounts)).perform(click())	11
31248	onView(withId(R.id.drawer_layout)).perform(DrawerActions.open())	17
32721	onView(withId(R.id.drawer_layout)).perform(swipeUp())	2
57658	onView(withId(R.id.edit_transaction)).perform(click())	4
36505	onView(withId(R.id.empty_view)).check(matches(isDisplayed()))	10
52059	onView(withId(R.id.fab_create_account)).check(matches(isDisplayed())).perform(click())	10
33162	onView(withId(R.id.fab_create_transaction)).check(matches(isDisplayed())).perform(click())	6
12407	onView(withId(R.id.fab_create_transaction)).perform(click())	26
36521	onView(withId(R.id.fab_edit_transaction)).perform(click())	8
13471	onView(withId(R.id.fragment_account_form)).check(matches(isDisplayed()))	18
29136	onView(withId(R.id.fragment_transaction_form)).check(matches(isDisplayed()))	6
28889	onView(withId(R.id.fragment_transaction_list)).check(matches(isDisplayed()))	9
18792	onView(withId(R.id.fragment_transaction_list)).perform(swipeRight())	16
28908	onView(withId(R.id.imbalance_textview)).check(matches(withText("-0.99	5
13520	onView(withId(R.id.input_account_name)).perform(clearText()).perform(typeText(editedAccountName))	4
23562	onView(withId(R.id.input_account_name)).perform(typeText("Trading	15
21419	onView(withId(R.id.input_account_name)).perform(typeText(NEW_ACCOUNT_NAME))	11
21737	onView(withId(R.id.input_account_name)).perform(typeText(NEW_ACCOUNT_NAME),closeSoftKeyboard())	4
23970	onView(withId(R.id.input_account_type_spinner)).perform(click())	9
59410	onView(withId(R.id.input_converted_amount)).perform(typeText("5"))	5
24530	onView(withId(R.id.input_date)).check(matches(withText(TransactionFormFragment.DATE_FORMATTER.format(transaction.getTimeMillis()))))	3
28669	onView(withId(R.id.input_date)).check(matches(withText(expectedValue)))	2
24476	onView(withId(R.id.input_description)).check(matches(withText(transaction.getNote())))	5
35245	onView(withId(R.id.input_parent_account)).check(matches(isEnabled())).perform(click())	2
31096	onView(withId(R.id.input_recurrence)).perform(click())	4
24215	onView(withId(R.id.input_time)).check(matches(withText(TransactionFormFragment.TIME_FORMATTER.format(transaction.getTimeMillis()))))	3
29037	onView(withId(R.id.input_time)).check(matches(withText(expectedValue)))	2
28851	onView(withId(R.id.input_transaction_amount)).check(matches(withText("-9.99")))	2
28683	onView(withId(R.id.input_transaction_amount)).check(matches(withText(expectedValue)))	5
24313	onView(withId(R.id.input_transaction_amount)).check(matches(withText(formatter.format(balance.asDouble()))))	5
34890	onView(withId(R.id.input_transaction_amount)).perform(click())	3
52773	onView(withId(R.id.input_transaction_amount)).perform(clickSplitIcon())	7
59471	onView(withId(R.id.input_transaction_amount)).perform(typeText("10"))	5
20039	onView(withId(R.id.input_transaction_amount)).perform(typeText("1024"))	7
28997	onView(withId(R.id.input_transaction_amount)).perform(typeText("1299"))	2
13019	onView(withId(R.id.input_transaction_amount)).perform(typeText("499"))	14
12583	onView(withId(R.id.input_transaction_amount)).perform(typeText("899"))	9
28639	onView(withId(R.id.input_transaction_name))	10
28855	onView(withId(R.id.input_transaction_name)).check(matches(withText(transaction.getDescription())))	6
28955	onView(withId(R.id.input_transaction_name)).perform(clearText(),typeText("Pasta"))	6
59390	onView(withId(R.id.input_transaction_name)).perform(clearText(),typeText(trnName))	4
12744	onView(withId(R.id.input_transaction_name)).perform(typeText("Autobalance"))	14
12321	onView(withId(R.id.input_transaction_name)).perform(typeText("Lunch"))	9
19450	onView(withId(R.id.input_transaction_name)).perform(typeText("Test	7
59386	onView(withId(R.id.input_transaction_name)).perform(typeText(transactionName))	4
62856	onView(withId(R.id.input_transaction_name)).perform(typeText(trnDescription))	4
12235	onView(withId(R.id.input_transaction_type))	5
28644	onView(withId(R.id.input_transaction_type)).check(matches(	2
24775	onView(withId(R.id.input_transaction_type)).check(matches(allOf(isChecked(),withText(R.string.label_spend))))	12
24619	onView(withId(R.id.input_transaction_type)).check(matches(allOf(not(isChecked()),withText(R.string.label_receive))))	12
29161	onView(withId(R.id.input_transaction_type)).check(matches(not(isDisplayed())))	5
59486	onView(withId(R.id.input_transfer_account_spinner)).perform(click())	6
51948	onView(withId(R.id.layout_parent_account)).check(matches(isDisplayed()))	6
23383	onView(withId(R.id.layout_parent_account)).check(matches(not(isDisplayed())))	9
51882	onView(withId(R.id.layout_parent_account)).check(matches(withEffectiveVisibility(ViewMatchers.Visibility.GONE)))	3
59508	onView(withId(R.id.layout_parent_account)).check(matches(withEffectiveVisibility(ViewMatchers.Visibility.VISIBLE)))	3
28311	onView(withId(R.id.menu_add_account)).check(matches(isDisplayed())).perform(click())	6
51866	onView(withId(R.id.menu_add_split)).perform(click())	10
28781	onView(withId(R.id.menu_add_transaction)).perform(click())	6
28634	onView(withId(R.id.menu_cancel)).perform(click())	9
30460	onView(withId(R.id.menu_create_book))	2
62932	onView(withId(R.id.menu_save))	4
2608	onView(withId(R.id.menu_save)).perform(click())	67
28278	onView(withId(R.id.menu_search)).perform(click())	5
58632	onView(withId(R.id.nav_view)).perform(swipeUp())	8
24707	onView(withId(R.id.next_month_chart_button)).check(matches(isEnabled()))	6
24758	onView(withId(R.id.next_month_chart_button)).check(matches(not(isEnabled())))	9
24639	onView(withId(R.id.next_month_chart_button)).perform(click())	6
13733	onView(withId(R.id.options_menu)).perform(click())	28
52290	onView(withId(R.id.options_menu)).perform(longClick())	7
59865	onView(withId(R.id.owncloud_dir)).perform(clearText()).perform(typeText(OC_DIR),closeSoftKeyboard())	3
54895	onView(withId(R.id.owncloud_hostname)).check(matches(isDisplayed()))	7
58612	onView(withId(R.id.owncloud_hostname)).perform(clearText()).perform(typeText(OC_SERVER),closeSoftKeyboard())	6
58647	onView(withId(R.id.owncloud_password)).perform(clearText()).perform(typeText(OC_PASSWORD),closeSoftKeyboard())	4
58602	onView(withId(R.id.owncloud_username)).perform(clearText()).perform(typeText(OC_USERNAME),closeSoftKeyboard())	4
13119	onView(withId(R.id.pie_chart)).perform(click())	23
13576	onView(withId(R.id.pie_chart)).perform(clickXY(Position.BEGIN,Position.MIDDLE))	14
24702	onView(withId(R.id.previous_month_chart_button)).check(matches(isEnabled()))	6
24723	onView(withId(R.id.previous_month_chart_button)).check(matches(not(isEnabled())))	9
24721	onView(withId(R.id.previous_month_chart_button)).perform(click())	6
28395	onView(withId(R.id.primary_text)).check(matches(not(withText(SEARCH_ACCOUNT_NAME))))	8
28512	onView(withId(R.id.primary_text)).perform(longClick())	10
59417	onView(withId(R.id.radio_converted_amount)).perform(click())	5
31239	onView(withId(R.id.radio_xml_format)).check(matches(withEffectiveVisibility(ViewMatchers.Visibility.GONE)))	9
13509	onView(withId(R.id.report_account_type_spinner)).perform(click())	10
33233	onView(withId(R.id.search_src_text)).perform(clearText())	6
60401	onView(withId(R.id.search_src_text)).perform(typeText("Se"))	3
24699	onView(withId(R.id.selected_chart_slice)).check(matches(withText("")))	12
32498	onView(withId(R.id.selected_chart_slice)).check(matches(withText(R.string.label_select_pie_slice_to_see_details)))	8
13566	onView(withId(R.id.selected_chart_slice)).check(matches(withText(selectedText)))	24
31048	onView(withId(R.id.spinner_export_destination)).perform(click())	10
12445	onView(withId(R.id.split_list_layout)).check(matches(allOf(isDisplayed(),hasDescendant(withId(R.id.input_split_amount)))))	19
57651	onView(withId(R.id.transaction_recycler_view)).check(matches(isDisplayed()))	4
13854	onView(withId(R.id.transactions_options)).check(matches(isDisplayed()))	6
32827	onView(withId(android.R.id.button1)).perform(click())	9
28337	onView(withId(android.R.id.empty))	3
56033	onView(withId(android.R.id.home)).perform(click())	5
28344	onView(withId(android.R.id.list))	3
28513	onView(withId(android.R.id.list)).check(matches(hasDescendant(withText(NEW_ACCOUNT_NAME))))	3
13076	onView(withId(viewId)).perform(click())	14
31465	onView(withSpinnerText(	5
36691	onView(withSpinnerText(DUMMY_ACCOUNT_NAME)).perform(click())	8
54818	onView(withSpinnerText(TRANSACTIONS_ACCOUNT_NAME)).perform(click())	6
62194	onView(withText("AFA	3
62063	onView(withText("Assets")).perform(scrollTo())	6
54956	onView(withText("Backup	5
62242	onView(withText("Books")).perform(scrollTo())	6
53261	onView(withText("Done")).perform(click())	7
62185	onView(withText("EUR")).perform(click())	3
62054	onView(withText("Expenses")).perform(click())	6
13191	onView(withText("OK")).perform(click())	10
36532	onView(withText("Test	8
55025	onView(withText("ownCloud	7
51918	onView(withText(AccountType.EXPENSE.name())).perform(click())	3
13743	onView(withText(AccountType.INCOME.name())).perform(click())	10
18630	onView(withText(DUMMY_ACCOUNT_NAME)).perform(click())	7
28270	onView(withText(DUMMY_ACCOUNT_NAME)).perform(longClick())	3
31093	onView(withText(ExportFormat.XML.name())).perform(click())	9
13382	onView(withText(R.string.alert_dialog_ok_delete)).perform(click())	5
54560	onView(withText(R.string.btn_delete_book)).perform(click())	2
62086	onView(withText(R.string.btn_wizard_next)).perform(click())	3
32824	onView(withText(R.string.header_account_settings)).perform(click())	2
58616	onView(withText(R.string.header_backup_and_export_settings)).perform(click())	14
19368	onView(withText(R.string.label_create_account)).check(matches(isDisplayed())).perform(click())	10
28389	onView(withText(R.string.label_delete_sub_accounts)).perform(click())	3
13718	onView(withText(R.string.label_delete_transactions)).perform(click())	5
13702	onView(withText(R.string.menu_delete)).perform(click())	28
59625	onView(withText(R.string.menu_duplicate_transaction)).perform(click())	7
32671	onView(withText(R.string.menu_manage_books)).perform(click())	2
59614	onView(withText(R.string.menu_move_transaction)).perform(click())	3
59462	onView(withText(R.string.msg_provide_exchange_rate)).check(matches(isDisplayed()))	5
31245	onView(withText(R.string.nav_menu_export)).perform(click())	29
62058	onView(withText(R.string.review)).check(matches(isDisplayed()))	3
21346	onView(withText(R.string.title_add_transaction)).check(matches(isDisplayed()))	10
21907	onView(withText(R.string.title_create_account)).check(matches(isDisplayed()))	8
63660	onView(withText(R.string.title_create_backup_pref)).perform(click())	3
32846	onView(withText(R.string.title_create_default_accounts)).perform(click())	2
13406	onView(withText(R.string.title_edit_account)).check(matches(isDisplayed())).perform(click())	2
13427	onView(withText(R.string.title_edit_account)).perform(click())	19
59281	onView(withText(R.string.title_owncloud_sync_preference)).perform(click())	2
32562	onView(withText(R.string.title_settings)).perform(click())	16
62132	onView(withText(R.string.wizard_option_auto_send_crash_reports)).perform(click())	3
62219	onView(withText(R.string.wizard_option_create_default_accounts)).perform(click())	3
62066	onView(withText(R.string.wizard_option_currency_other)).perform(click())	3
62090	onView(withText(R.string.wizard_option_disable_crash_reports)).perform(click())	3
62057	onView(withText(R.string.wizard_option_let_me_handle_it)).perform(click())	3
62222	onView(withText(R.string.wizard_title_account_setup)).check(matches(isDisplayed()))	3
62154	onView(withText(R.string.wizard_title_select_currency)).check(matches(isDisplayed()))	3
33241	onView(withText(ROOT_ACCOUNT_NAME)).perform(click())	4
33021	onView(withText(SEARCH_ACCOUNT_NAME)).check(doesNotExist())	3
28341	onView(withText(SEARCH_ACCOUNT_NAME)).check(matches(isDisplayed()))	8
13822	onView(withText(SIMPLE_ACCOUNT_NAME)).perform(click())	3
54853	onView(withText(TRANSACTIONS_ACCOUNT_NAME)).perform(click())	4
29058	onView(withText(TRANSACTION_NAME)).perform(click())	9
63081	onView(withText(TRANSFER_ACCOUNT_NAME)).perform(click())	4
36648	onView(withText(account.getFullName())).perform(click())	10
51107	onView(withText(accountName)).perform(click())	7
28473	onView(withText(accountName)).perform(longClick())	6
59944	onView(withText(book.getDisplayName())).perform(click())	3
51944	onView(withText(containsString(AccountType.EXPENSE.name()))).perform(click())	9
51939	onView(withText(containsString(AccountType.INCOME.name()))).perform(click())	11
31126	onView(withText(destinations[0])).perform(click())	5
31238	onView(withText(destinations[3])).perform(click())	5
62884	onView(withText(euroAccount.getFullName()))	4
59408	onView(withText(euroAccount.getFullName())).check(matches(isDisplayed())).perform(click())	5
63004	onView(withText(euroAccount.getFullName())).perform(click())	4
31137	onView(withText(format.name())).perform(click())	13
51144	onView(withText(mAcccountsActivity.getString(R.string.title_setup_gnucash)))	10
35072	onView(withText(mAccountsActivity.getString(R.string.title_setup_gnucash)))	6
62848	onView(withText(mTransferAccount.getFullName())).perform(click())	4
13323	onView(withText(toastString))	12
63046	onView(withText(trnDescription)).check(matches(isDisplayed()))	4
43130	onViewAttachedToWindow(View	8
43147	onViewDetachedFromWindow(View	8
47519	onVisibilityChanged(View	4
50410	onVoiceClicked()	6
50229	onWindowFocusChanged(boolean	5
39012	onWindowStartingActionMode:	4
52013	ona	9
59315	onaylayn</string>	4
1095	once	70
63726	once,during	3
60269	once,even	3
40417	once,or	4
38241	once,see	4
20033	once,when	10
38350	once.	28
20992	onde	19
16505	ondersteuning	7
26278	onderweg	13
2808	one	354
33425	one)	14
19611	one),and	10
48730	one,and	4
55489	one,check	2
48301	one,else	4
62860	one,just	4
6828	one,then	8
44142	one,this	4
6899	one.	60
40878	one.</p>	4
3948	one</p>	8
6656	ones	45
7069	ones)	6
49771	ones.	5
16950	ongedaan	13
23422	onglets	5
848	only	346
34139	only)	11
36730	only.	4
49321	only.")	5
2811	ont	28
49902	onto	4
16821	ontworpen	5
58480	onwards	6
16617	ook	24
12922	op	49
19404	op&#231	19
15957	op&#233	13
17019	op</string>	12
29538	opakuje</string>	3
22466	opci	12
12770	opci&#243	53
15742	opcin	24
3855	opciones	33
25566	opciones\n	6
17836	opcj	19
22949	opcj,aby	6
17239	opcje	16
15552	ope</item>	8
2347	open	122
35261	open()	11
35343	open(){	4
35466	open)	5
51149	open,<code>false</code>	5
34310	open.	11
42778	open.)	4
44305	open/close	4
25087	open/import	6
24951	open:	8
51082	openActionBarOverflowOrOptionsMenu(mAcccountsActivity)	7
51125	openActionBarOverflowOrOptionsMenu(mAccountsActivity)	4
60456	openCreateOrEditActivity(accoundId)	3
13387	openCreateOrEditActivity(long	21
25547	openCreateOrEditActivity(mSelectedItemId)	11
27099	openDocument	6
27098	openDocument.addCategory(Intent.CATEGORY_OPENABLE)	6
55449	openDocument.putExtra(Intent.EXTRA_MIME_TYPES,mimeTypes)	4
27067	openDocument.setType("*/*")	5
55328	openDocument.setType("text/*|application/*")	4
53945	openExportFragment(AppCompatActivity	2
13225	openExportFragment(FragmentActivity	11
38434	openOptionsMenu()	8
35962	openSplitEditor()	27
13291	openSplitEditor(){	48
42367	openSubMenuId	4
13390	openTransactionForEdit(String	11
18446	openTransactionForEdit(accountID,id)	7
26889	openTransactionForEdit(accountUID,mTransactionsDbAdapter.getUID(id))	8
26890	openTransactionForEdit(accountUID,mTransactionsDbAdapter.getUID(id),	3
18455	openTransactionForEdit(long	7
4000	opened	137
56880	opened",Toast.LENGTH_SHORT).show()	5
25543	opened.	8
4875	opened</string>	134
6167	opening	178
43121	opening.	4
62966	openingAndSavingMultiCurrencyTransaction_shouldNotModifyTheSplits(){	4
19102	openingBalance	5
24423	openingBalanceAccountName	6
30780	openingBalances	27
18796	openingBalances)	5
1094	openingTransactions	14
24124	openingTransactions.add(transaction)	6
50816	opens	18
44398	opens.	4
21099	opera&#231	11
22476	operaci	10
15307	operaci&#243	16
15521	operacin	9
26075	operaciones	7
17735	operacji	13
51162	operand	7
22954	operao	13
7893	operasjonen	23
40551	operate	12
39443	operating	4
7325	operation	139
44399	operation.	10
26303	operations	33
23151	operations.	9
23275	operations.<br/>	3
18862	operations\n	19
52854	operator	4
52932	operators	4
16202	operazione	19
4796	opes	23
5093	opes\n	6
17121	opgeslagen	7
22942	opinie]]></string>	6
25125	opisy</string>	9
16925	opnieuw	11
16911	opnieuw</string>	5
4464	opo	66
21779	opp	6
21240	oppfringene	8
15030	oppfringer	12
39174	opportunity	4
45037	opposed	8
27337	opposite	11
8580	opprette	45
12937	opprette</string>	18
14775	opprettes</string>	18
28195	opprettet	6
14746	oppretting	20
21635	opprinnelig	10
7632	oppstod	26
16349	opration	7
10229	oprations	12
10631	oprations</string>	12
18798	oprations\n	7
10857	opsi	5
12595	opslaan	9
16634	opslaan</string>	7
17016	optie	37
16942	opties	16
41538	optimization	4
25614	optimization\n	19
35281	optimizations	3
53290	optimize	10
36844	optimized	15
1309	option	214
26514	option)	18
38254	option.	13
26004	optional	26
47849	optional,	4
44253	optional,we'll	4
18931	optional:	15
44149	optionally	21
55042	optionally,a	4
1168	options	227
38433	options)	12
37944	options,int	8
38484	options,see	4
60122	options,{@code	3
38430	options.	13
37214	options</string>	4
2875	optionsMenu	31
3186	optionsMenu.setOnClickListener(new	28
2218	options\n	98
16221	options\nPour	7
17112	opvolging	5
17220	opvragen</string>	8
16291	opzione	60
29651	opzioni	4
1023	or	428
37663	or'ed	4
43354	or/add	12
27980	ora	7
55726	ora</item>	2
27254	orange	3
26184	oraz	5
133	order	234
42800	order,	9
43042	order,CharSequence	12
44422	order,ComponentName	5
48099	order,final	4
42561	order,int	12
27381	order,which	3
40725	order.	13
48116	order:	4
24131	orderBy	19
11795	orderBy)	33
24600	orderBy))	8
24577	orderBy){	18
37591	orderInCategory	4
53025	orderby	2
24576	ordered	20
20515	ordering	37
43362	ordering)	4
42889	ordering,	8
43890	ordering,title,mDefaultShowAsAction)	4
30422	ordinal	9
9505	ordinal){	6
55753	ore</item>	2
33185	org.achartengine.ChartFactory	5
33201	org.achartengine.GraphicalView	6
33133	org.achartengine.model.CategorySeries	5
33074	org.achartengine.model.SeriesSelection	3
32938	org.achartengine.renderer.DefaultRenderer	5
33165	org.achartengine.renderer.SimpleSeriesRenderer	5
8759	org.apache.tools.ant.taskdefs.condition.Os	7
23388	org.assertj.android.api.Assertions.assertThat	10
8078	org.assertj.core.api.Assertions.assertThat	94
10738	org.assertj.core.data.Index	23
34413	org.fest.assertions.api.ANDROID.assertThat	9
2118	org.gnucash.android.BuildConfig	119
1861	org.gnucash.android.R	302
12845	org.gnucash.android.app	10
1343	org.gnucash.android.app.GnuCashApplication	272
3346	org.gnucash.android.data	13
7339	org.gnucash.android.data.Account	76
18253	org.gnucash.android.data.Account.AccountType	26
12435	org.gnucash.android.data.Account.OfxAccountType	15
3307	org.gnucash.android.data.Money	78
6664	org.gnucash.android.data.Transaction	45
7279	org.gnucash.android.data.Transaction.TransactionType	13
6777	org.gnucash.android.db	63
6772	org.gnucash.android.db.*	46
1841	org.gnucash.android.db.AccountsDbAdapter	252
35469	org.gnucash.android.db.AccountsDbAdapter#getFullyQualifiedAccountName(String)	4
8750	org.gnucash.android.db.BookDbHelper	34
21170	org.gnucash.android.db.CommoditiesDbAdapter	71
59023	org.gnucash.android.db.CurrencyDbAdapter	2
59783	org.gnucash.android.db.CursorFilter.CursorFilterClient	6
34630	org.gnucash.android.db.CursorRecyclerAdapter	7
59823	org.gnucash.android.db.CursorRecyclerAdapter<AccountRecyclerAdapter.ViewHolder>{	6
2620	org.gnucash.android.db.DatabaseAdapter	48
6504	org.gnucash.android.db.DatabaseCursorLoader	86
3344	org.gnucash.android.db.DatabaseHelper	138
7450	org.gnucash.android.db.DatabaseSchema	177
28259	org.gnucash.android.db.DatabaseSchema.*	57
4813	org.gnucash.android.db.DatabaseSchema.AccountEntry	58
30416	org.gnucash.android.db.DatabaseSchema.BookEntry	26
53105	org.gnucash.android.db.DatabaseSchema.BudgetAmountEntry	2
53295	org.gnucash.android.db.DatabaseSchema.BudgetEntry	2
53008	org.gnucash.android.db.DatabaseSchema.CommodityEntry	11
9658	org.gnucash.android.db.DatabaseSchema.CommonColumns	12
52691	org.gnucash.android.db.DatabaseSchema.PriceEntry	13
34932	org.gnucash.android.db.DatabaseSchema.RecurrenceEntry	5
34323	org.gnucash.android.db.DatabaseSchema.SPLITS_DB_VERSION	4
30109	org.gnucash.android.db.DatabaseSchema.ScheduledActionEntry	21
30893	org.gnucash.android.db.DatabaseSchema.ScheduledEventEntry	7
34333	org.gnucash.android.db.DatabaseSchema.SplitEntry	20
8784	org.gnucash.android.db.DatabaseSchema.TransactionEntry	22
14351	org.gnucash.android.db.MigrationHelper	10
23407	org.gnucash.android.db.PricesDbAdapter	25
376	org.gnucash.android.db.ScheduledActionDbAdapter	63
20375	org.gnucash.android.db.ScheduledEventDbAdapter	5
24035	org.gnucash.android.db.SplitsDbAdapter	79
1949	org.gnucash.android.db.TransactionsDbAdapter	207
8879	org.gnucash.android.db.adapter	11
13364	org.gnucash.android.db.adapter.*	4
7867	org.gnucash.android.db.adapter.AccountsDbAdapter	87
7800	org.gnucash.android.db.adapter.BooksDbAdapter	72
14634	org.gnucash.android.db.adapter.BudgetAmountsDbAdapter	28
11363	org.gnucash.android.db.adapter.BudgetsDbAdapter	31
8391	org.gnucash.android.db.adapter.CommoditiesDbAdapter	59
8743	org.gnucash.android.db.adapter.DatabaseAdapter	38
31773	org.gnucash.android.db.adapter.PricesDbAdapter	27
7554	org.gnucash.android.db.adapter.RecurrenceDbAdapter	25
8922	org.gnucash.android.db.adapter.ScheduledActionDbAdapter	45
8381	org.gnucash.android.db.adapter.SplitsDbAdapter	56
8053	org.gnucash.android.db.adapter.TransactionsDbAdapter	70
6875	org.gnucash.android.export	36
8995	org.gnucash.android.export.DropboxHelper	5
9877	org.gnucash.android.export.ExportAsyncTask	27
6896	org.gnucash.android.export.ExportDialogFragment	27
7110	org.gnucash.android.export.ExportFormat	101
9883	org.gnucash.android.export.ExportParams	99
7157	org.gnucash.android.export.ExportParams.ExportTarget	3
676	org.gnucash.android.export.Exporter	134
62546	org.gnucash.android.export.ExporterAsyncTask	7
6935	org.gnucash.android.export.ExporterTask	5
31134	org.gnucash.android.export.ofx	15
3775	org.gnucash.android.export.ofx.OfxExporter	46
112	org.gnucash.android.export.ofx.OfxHelper	43
6897	org.gnucash.android.export.qif	17
6464	org.gnucash.android.export.qif.QifExporter	40
7139	org.gnucash.android.export.qif.QifHelper	29
4876	org.gnucash.android.export.xml	20
14488	org.gnucash.android.export.xml.GncXmlExporter	92
8462	org.gnucash.android.export.xml.GncXmlHelper	43
8384	org.gnucash.android.importer	48
25938	org.gnucash.android.importer.CommoditiesXmlHandler	15
7984	org.gnucash.android.importer.GncXmlHandler	12
28468	org.gnucash.android.importer.GncXmlImportTask	10
25407	org.gnucash.android.importer.GncXmlImporter	49
3461	org.gnucash.android.importer.ImportAsyncTask	73
852	org.gnucash.android.model	75
23810	org.gnucash.android.model.*	47
886	org.gnucash.android.model.Account	181
27033	org.gnucash.android.model.Account.AccountType	9
27017	org.gnucash.android.model.Account.AccountType#name()	4
20587	org.gnucash.android.model.Account.OfxAccountType	19
1483	org.gnucash.android.model.AccountType	197
35887	org.gnucash.android.model.AccountType#name()	2
8611	org.gnucash.android.model.BaseModel	65
7617	org.gnucash.android.model.Book	46
7436	org.gnucash.android.model.Budget	28
7759	org.gnucash.android.model.BudgetAmount	30
718	org.gnucash.android.model.Commodity	108
1590	org.gnucash.android.model.Money	226
8292	org.gnucash.android.model.PeriodType	63
12238	org.gnucash.android.model.Price	50
8623	org.gnucash.android.model.Recurrence	46
1433	org.gnucash.android.model.ScheduledAction	135
19415	org.gnucash.android.model.ScheduledAction.PeriodType	5
20230	org.gnucash.android.model.ScheduledEvent	12
353	org.gnucash.android.model.Split	168
33328	org.gnucash.android.model.Split#parseSplit(String)	13
429	org.gnucash.android.model.Transaction	202
35921	org.gnucash.android.model.Transaction#createIntent(org.gnucash.android.model.Transaction)	2
26190	org.gnucash.android.model.Transaction.TransactionType	16
1328	org.gnucash.android.model.TransactionType	112
35855	org.gnucash.android.receivers	13
18655	org.gnucash.android.receivers.AccountCreator	12
62547	org.gnucash.android.receivers.SchedulerReceiver	3
13820	org.gnucash.android.receivers.TransactionAppWidgetProvider	28
13085	org.gnucash.android.receivers.TransactionRecorder	10
59566	org.gnucash.android.service	2
55321	org.gnucash.android.service.ScheduledActionService	8
25227	org.gnucash.android.service.SchedulerService	31
36991	org.gnucash.android.test	6
30703	org.gnucash.android.test.db	4
30798	org.gnucash.android.test.model	5
13857	org.gnucash.android.test.ui	51
13599	org.gnucash.android.test.ui.AccountsActivityTest.preventFirstRunDialogs	4
34915	org.gnucash.android.test.ui.util	2
13979	org.gnucash.android.test.ui.util.DisableAnimationsRule	12
54881	org.gnucash.android.test.unit	8
11158	org.gnucash.android.test.unit.db	30
32835	org.gnucash.android.test.unit.db.AccountsDbAdapterTest	8
9196	org.gnucash.android.test.unit.export	18
8671	org.gnucash.android.test.unit.importer	2
567	org.gnucash.android.test.unit.model	20
57279	org.gnucash.android.test.unit.service	9
52444	org.gnucash.android.test.unit.testutil	4
7938	org.gnucash.android.test.unit.testutil.GnucashTestRunner	27
8140	org.gnucash.android.test.unit.testutil.ShadowCrashlytics	28
8705	org.gnucash.android.test.unit.testutil.ShadowUserVoice	28
31726	org.gnucash.android.test.unit.util	9
32552	org.gnucash.android.test.unit.util.GnucashTestRunner	25
32507	org.gnucash.android.test.unit.util.ShadowCrashlytics	28
36050	org.gnucash.android.test.unit.util.ShadowUserVoice	21
34189	org.gnucash.android.test.util	7
34226	org.gnucash.android.test.util.ActionBarUtils	16
18787	org.gnucash.android.ui	30
34634	org.gnucash.android.ui.AccountsActivity	6
36809	org.gnucash.android.ui.AccountsListFragment	3
13176	org.gnucash.android.ui.BaseDrawerActivity	11
52128	org.gnucash.android.ui.DatePickerDialogFragment	8
34691	org.gnucash.android.ui.ExportDialogFragment	4
491	org.gnucash.android.ui.FormActivity	38
52060	org.gnucash.android.ui.MainActivity	7
36719	org.gnucash.android.ui.NewTransactionFragment	3
6942	org.gnucash.android.ui.Refreshable	18
52089	org.gnucash.android.ui.TimePickerDialogFragment	9
167	org.gnucash.android.ui.UxArgument	108
3023	org.gnucash.android.ui.account	20
2184	org.gnucash.android.ui.account.AccountFormFragment	26
2872	org.gnucash.android.ui.account.AccountsActivity	162
19166	org.gnucash.android.ui.account.AccountsListFragment	56
60354	org.gnucash.android.ui.account.OnAccountClickedListener	6
20636	org.gnucash.android.ui.accounts	24
3452	org.gnucash.android.ui.accounts.AccountsActivity	40
2568	org.gnucash.android.ui.accounts.AccountsListFragment	47
34452	org.gnucash.android.ui.accounts.ExportDialogFragment	10
54013	org.gnucash.android.ui.budget	6
50823	org.gnucash.android.ui.budget.BudgetAmountEditorFragment	6
50986	org.gnucash.android.ui.budget.BudgetFormFragment	11
53919	org.gnucash.android.ui.budget.BudgetsActivity	12
4160	org.gnucash.android.ui.chart	23
14650	org.gnucash.android.ui.chart.ChartReportActivity	16
33602	org.gnucash.android.ui.chart.PieChartActivity	13
27528	org.gnucash.android.ui.colorpicker	9
26962	org.gnucash.android.ui.colorpicker.ColorPickerDialog	19
26906	org.gnucash.android.ui.colorpicker.ColorPickerSwatch	20
27426	org.gnucash.android.ui.colorpicker.ColorPickerSwatch.OnColorSelectedListener	8
27031	org.gnucash.android.ui.colorpicker.ColorSquare	24
62281	org.gnucash.android.ui.common	6
6692	org.gnucash.android.ui.common.BaseDrawerActivity	35
11083	org.gnucash.android.ui.common.FormActivity	50
10202	org.gnucash.android.ui.common.Refreshable	34
9995	org.gnucash.android.ui.common.UxArgument	66
54550	org.gnucash.android.ui.export	10
14245	org.gnucash.android.ui.export.ExportDialogFragment	11
31919	org.gnucash.android.ui.export.ExportFormFragment	46
54594	org.gnucash.android.ui.export.ScheduledExportListFragment	5
62275	org.gnucash.android.ui.homescreen	3
8752	org.gnucash.android.ui.homescreen.WidgetConfigurationActivity	27
23406	org.gnucash.android.ui.passcode	11
1972	org.gnucash.android.ui.passcode.PassLockActivity	63
8957	org.gnucash.android.ui.passcode.PasscodeLockActivity	26
24112	org.gnucash.android.ui.passcode.PasscodeLockScreenActivity	20
1551	org.gnucash.android.ui.passcode.PasscodePreferenceActivity	31
662	org.gnucash.android.ui.report	22
13418	org.gnucash.android.ui.report.BaseReportFragment	19
24687	org.gnucash.android.ui.report.PieChartFragment	8
32239	org.gnucash.android.ui.report.ReportType	6
13556	org.gnucash.android.ui.report.ReportsActivity	32
8950	org.gnucash.android.ui.report.ReportsActivity.COLORS	12
6885	org.gnucash.android.ui.report.ReportsActivity.GroupInterval	20
21316	org.gnucash.android.ui.report.ReportsActivity.RangeDenomination	5
26218	org.gnucash.android.ui.report.barchart	9
32464	org.gnucash.android.ui.report.barchart.BarChartFragment	7
32267	org.gnucash.android.ui.report.barchart.CashFlowBarChartFragment	8
60201	org.gnucash.android.ui.report.barchart.CashFlowFragment	5
32550	org.gnucash.android.ui.report.barchart.StackedBarChartFragment	3
56591	org.gnucash.android.ui.report.dialog	6
6675	org.gnucash.android.ui.report.dialog.DateRangePickerDialogFragment	19
60152	org.gnucash.android.ui.report.linechart	3
32276	org.gnucash.android.ui.report.linechart.CashFlowLineChartFragment	8
60207	org.gnucash.android.ui.report.linechart.LineChartFragment	5
60138	org.gnucash.android.ui.report.piechart	3
13597	org.gnucash.android.ui.report.piechart.PieChartFragment	20
60115	org.gnucash.android.ui.report.sheet	3
32122	org.gnucash.android.ui.report.sheet.BalanceSheetFragment	10
1119	org.gnucash.android.ui.settings	58
13167	org.gnucash.android.ui.settings.BackupPreferenceFragment	11
32588	org.gnucash.android.ui.settings.OwnCloudDialogFragment	7
32689	org.gnucash.android.ui.settings.OwncloudDialogFragment	7
9683	org.gnucash.android.ui.settings.PreferenceActivity	35
14482	org.gnucash.android.ui.settings.SettingsActivity	80
57185	org.gnucash.android.ui.settings.dialog	3
57044	org.gnucash.android.ui.settings.dialog.DeleteAllAccountsConfirmationDialog	3
25868	org.gnucash.android.ui.settings.dialog.DeleteAllTransactionsConfirmationDialog	6
13645	org.gnucash.android.ui.settings.dialog.OwnCloudDialogFragment	12
81	org.gnucash.android.ui.transaction	27
31697	org.gnucash.android.ui.transaction.OnTransferFundsListener	9
9674	org.gnucash.android.ui.transaction.ScheduledActionsActivity	26
33627	org.gnucash.android.ui.transaction.ScheduledEventsActivity	8
23429	org.gnucash.android.ui.transaction.ScheduledTransactionsListFragment	16
31884	org.gnucash.android.ui.transaction.SplitEditorFragment	22
470	org.gnucash.android.ui.transaction.TransactionFormFragment	85
1821	org.gnucash.android.ui.transaction.TransactionsActivity	109
54800	org.gnucash.android.ui.transaction.TransactionsListFragment	5
31565	org.gnucash.android.ui.transaction.dialog	22
35948	org.gnucash.android.ui.transaction.dialog.BulkMoveDialogFragment	21
23592	org.gnucash.android.ui.transaction.dialog.DatePickerDialogFragment	16
23817	org.gnucash.android.ui.transaction.dialog.SplitEditorDialogFragment	16
31709	org.gnucash.android.ui.transaction.dialog.SplitEditorFragment	8
23355	org.gnucash.android.ui.transaction.dialog.TimePickerDialogFragment	11
35563	org.gnucash.android.ui.transaction.dialog.TransactionsDeleteConfirmationDialogFragment	15
31877	org.gnucash.android.ui.transaction.dialog.TransferFundsDialogFragment	29
18076	org.gnucash.android.ui.transactions	34
34374	org.gnucash.android.ui.transactions.NewTransactionFragment	13
18105	org.gnucash.android.ui.transactions.RecurringTransactionsListFragment	12
63365	org.gnucash.android.ui.transactions.ScheduledTransactionsListFragment	4
18356	org.gnucash.android.ui.transactions.TransactionsActivity	46
7270	org.gnucash.android.ui.transactions.TransactionsDeleteConfirmationDialog	20
18162	org.gnucash.android.ui.transactions.TransactionsListFragment	48
19145	org.gnucash.android.ui.util	60
29873	org.gnucash.android.ui.util.AccountBalanceTask	35
23708	org.gnucash.android.ui.util.AmountInputFormatter	37
56643	org.gnucash.android.ui.util.CalculatorEditText	9
56524	org.gnucash.android.ui.util.CalculatorKeyboard	11
30280	org.gnucash.android.ui.util.CursorRecyclerAdapter	35
52391	org.gnucash.android.ui.util.CustomKeyboard	10
61906	org.gnucash.android.ui.util.EmptyRecyclerView	6
18641	org.gnucash.android.ui.util.OnAccountClickedListener	57
23750	org.gnucash.android.ui.util.OnTransactionClickedListener	29
7454	org.gnucash.android.ui.util.OnTransferFundsListener	33
8263	org.gnucash.android.ui.util.RecurrenceParser	99
32370	org.gnucash.android.ui.util.RecurrenceViewClickListener	11
13161	org.gnucash.android.ui.util.Refreshable	85
10099	org.gnucash.android.ui.util.TaskDelegate	38
31700	org.gnucash.android.ui.util.TransactionTypeSwitch	26
23542	org.gnucash.android.ui.util.TransactionTypeToggleButton	19
63731	org.gnucash.android.ui.util.dialog	3
10058	org.gnucash.android.ui.util.dialog.DateRangePickerDialogFragment	7
55562	org.gnucash.android.ui.util.widget	5
32074	org.gnucash.android.ui.util.widget.CalculatorEditText	21
32062	org.gnucash.android.ui.util.widget.CalculatorKeyboard	17
30275	org.gnucash.android.ui.util.widget.EmptyRecyclerView	26
32247	org.gnucash.android.ui.util.widget.TransactionTypeSwitch	15
54721	org.gnucash.android.ui.widget	11
56973	org.gnucash.android.ui.widget.Configuration	2
7326	org.gnucash.android.ui.widget.WidgetConfigurationActivity	84
21577	org.gnucash.android.ui.wizard	7
9116	org.gnucash.android.ui.wizard.FirstRunWizardActivity	16
3534	org.gnucash.android.util	37
31870	org.gnucash.android.util.AmountParser	8
13230	org.gnucash.android.util.BookUtils	8
36661	org.gnucash.android.util.CommoditiesCursorAdapter	15
2715	org.gnucash.android.util.GnucashAccountXmlHandler	30
12372	org.gnucash.android.util.OfxFormatter	22
2832	org.gnucash.android.util.OnAccountClickedListener	36
19020	org.gnucash.android.util.OnAccountSelectedListener	5
19134	org.gnucash.android.util.OnItemClickedListener	5
2377	org.gnucash.android.util.OnTransactionClickedListener	27
26169	org.gnucash.android.util.PreferencesHelper	25
3739	org.gnucash.android.util.QualifiedAccountNameCursorAdapter	91
63869	org.gnucash.android.util.RecursiveMoveFiles	2
8754	org.gnucash.android.util.TimestampHelper	41
50924	org.hamcrest.CoreMatchers.equalTo	5
13403	org.hamcrest.Matchers.allOf	36
53124	org.hamcrest.Matchers.anyOf	5
52988	org.hamcrest.Matchers.containsString	5
13843	org.hamcrest.Matchers.equalTo	8
13664	org.hamcrest.Matchers.hasEntry	3
14011	org.hamcrest.Matchers.instanceOf	15
13934	org.hamcrest.Matchers.is	24
13494	org.hamcrest.Matchers.not	37
1625	org.joda.time.DateTime	47
13699	org.joda.time.DateTimeConstants	4
52490	org.joda.time.DateTimeZone	2
8649	org.joda.time.Days	17
34863	org.joda.time.Hours	2
168	org.joda.time.LocalDate	83
6698	org.joda.time.LocalDateTime	89
7113	org.joda.time.Months	49
8555	org.joda.time.Period	2
7882	org.joda.time.ReadableDuration	2
7473	org.joda.time.ReadablePeriod	5
8274	org.joda.time.Weeks	22
7726	org.joda.time.Years	32
26848	org.joda.time.format.DateTimeFormat	7
26725	org.joda.time.format.DateTimeFormatter	11
13465	org.junit.After	60
13103	org.junit.AfterClass	4
32879	org.junit.Assert	7
36463	org.junit.Assert.*	10
26312	org.junit.Assert.assertEquals	22
36646	org.junit.Assert.assertNotSame	4
50973	org.junit.Assert.assertThat	5
30916	org.junit.Assert.assertTrue	6
8467	org.junit.Assert.fail	6
59239	org.junit.Assume	2
8088	org.junit.Before	76
13669	org.junit.BeforeClass	10
13833	org.junit.ClassRule	5
31420	org.junit.FixMethodOrder	14
13502	org.junit.Rule	9
7467	org.junit.Test	87
35028	org.junit.rules.TestRule	2
34925	org.junit.runner.Description	2
8562	org.junit.runner.RunWith	79
11578	org.junit.runners.MethodSorters	9
18623	org.junit.runners.model.InitializationError	13
35010	org.junit.runners.model.Statement	2
30265	org.ocpsoft.prettytime.PrettyTime	20
18967	org.robolectric.RobolectricGradleTestRunner	16
31309	org.robolectric.RuntimeEnvironment	2
8236	org.robolectric.annotation.Config	53
51059	org.robolectric.annotation.Implementation	4
50795	org.robolectric.annotation.Implements	4
51955	org.robolectric.internal.SdkConfig	6
51906	org.robolectric.internal.bytecode.ClassHandler	6
18766	org.robolectric.internal.bytecode.ClassInfo	8
51892	org.robolectric.internal.bytecode.InstrumentationConfiguration	5
19172	org.robolectric.internal.bytecode.InstrumentingClassLoaderConfig	8
18750	org.robolectric.internal.bytecode.ShadowMap	11
18606	org.robolectric.manifest.AndroidManifest	7
1464	org.w3c.dom.Document	92
637	org.w3c.dom.Element	83
7295	org.w3c.dom.Node	20
6700	org.w3c.dom.ProcessingInstruction	19
29922	org.w3c.dom.Text	7
30606	org.xml.sax.Attributes	24
8412	org.xml.sax.InputSource	60
7711	org.xml.sax.SAXException	69
7903	org.xml.sax.XMLReader	36
30515	org.xml.sax.helpers.DefaultHandler	23
39347	org.xmlpull.v1.XmlPullParser	14
48698	org.xmlpull.v1.XmlPullParserException	6
31336	org.xmlpull.v1.XmlPullParserFactory	21
8033	org.xmlpull.v1.XmlSerializer	29
46296	orientation	8
21028	origem.</string>	30
22930	origem</string>	7
15530	origen</string>	27
6775	origin	153
59609	originAccountUID	3
59643	originAccountUID){	3
7783	originCommodityUID	8
39878	original	24
4210	originalIcon	5
6343	originalIcon.clearColorFilter()	5
4326	originalIcon.setColorFilter(Color.GRAY,PorterDuff.Mode.SRC_IN)	5
34055	originating	4
16186	origine</string>	21
5137	os	56
3128	os</item>	13
17847	osobne	15
21171	oss	8
17417	ostatnich	16
22992	ostatniego	6
6390	other	256
35657	other)	18
40390	other,different,animations.</p>	4
41496	other,not	4
41169	other,the	4
44064	other.isOverflowButton	4
49114	other.time)	4
43426	otherCompoundButton	4
43352	otherCompoundButton)	4
43616	otherCompoundButton.setVisibility(GONE)	4
46624	otherHeights	4
47239	otherHeights,-1)	4
24649	otherSlice	12
29805	otherSlice)	4
29902	otherSlice,dataSet.getEntryCount()))	5
19457	others	27
48243	others.	4
2960	otherwise	225
13078	otherwise.	120
52876	otl	8
22637	otomatis	7
15306	otra	28
15857	otra</string>	25
15822	otras	50
23001	otrzymania	8
17340	otwarcia	13
17488	otwarcia</string>	13
17804	otwarta</string>	15
5135	ou	67
16751	oude	7
28789	our	47
62442	ouro</item>	6
35315	ourselves	16
43369	ourselves,so	4
37840	ourselves.	4
3993	out	134
50494	out"	5
19249	out,all	9
19013	out,even	9
45138	out,int	12
38637	out.	12
46668	out.addState(in.getStateSet(i),tileify(in.getStateDrawable(i),clip))	4
33794	out.append(line).append('\n')	15
56881	out.close()	7
45102	out.writeInt(expandedMenuItemId)	4
45046	out.writeInt(isOverflowOpen	4
46020	out.writeInt(position)	4
46933	out.writeInt(progress)	4
46839	out.writeInt(secondaryProgress)	4
45792	out.writeLong(selectedId)	4
7030	outChannel	28
6748	outChannel.close()	27
46630	outDrawables	4
47321	outDrawables[i]	4
47681	outSpecificItems	4
43286	outSpecificItems)	17
44352	outSpecificItems.length	5
44250	outSpecificItems[i]	5
42763	outSpecificItems[ri.specificIndex]	8
11425	outState)	41
63924	outState.putBoolean(getString(R.string.key_use_compact_list),mUseCompactView)	4
62146	outState.putBundle("model",mWizardModel.save())	3
27379	outState.putIntArray(KEY_COLORS,mColors)	3
19356	outState.putIntArray(SAVED_SELECTED_ITEMS,selectedPositions)	4
39088	outState.putParcelable(PANELS_TAG,mMenuFrozenActionViewState)	5
27346	outState.putSerializable(KEY_SELECTED_COLOR,mSelectedColor)	3
23959	outState.putSerializable(STATE_DISPLAY_MODE,mDisplayMode)	3
10536	outState.putSerializable(STATE_REPORT_TYPE,mReportType)	6
43328	outState.putSparseParcelableArray(PRESENTER_KEY,presenterStates)	4
44102	outStates)	4
43348	outStates.putInt(EXPANDED_ACTION_VIEW_ID,item.getItemId())	4
43458	outStates.putSparseParcelableArray(getActionViewStatesKey(),viewStates)	4
50135	outTypedValue	4
38955	outValue	13
38959	outValue,true)	13
39188	outValue.resourceId	13
40590	outlined	4
9301	output	43
34343	output.eachLine	9
25099	output.outputFile	3
25059	output.outputFile.parent,"GnucashAndroid_v${variant.versionName	3
63668	outputFile	3
28084	outputStream	15
55271	outputStream)	3
55356	outputStream.close()	3
28161	outputStream.flush()	11
28239	outputStream.write(buffer,0,count)	11
55349	outputStream.write(buffer,0,read)	3
21312	outputStreamWriter	8
21749	outputStreamWriter.close()	8
6973	outputWriter	19
36547	outputWriter){	8
56803	outputWriter,	3
6842	outputWriter,boolean	18
55320	outputstream	3
55432	outputstream.	3
20249	outra	16
6018	outra</string>	29
10971	outras	31
6977	outside	21
50077	outsideDrawablesCache	5
49691	outsideDrawablesCache)	5
11553	ouvert	7
10603	ouvert</string>	14
4170	over	52
62574	over)	5
47411	over,figure	4
16851	over</string>	21
41460	overall	5
16623	overdracht	3
37687	overflow	35
44677	overflow,all	4
44714	overflow.	4
44810	overflowOnly	4
42358	overflowOnly)	8
43891	overflowWidth	4
21714	overfre	6
21823	overfring	10
21400	overfring</string>	6
14963	overfringskonto	15
15138	overfringskonto</string>	15
8317	overfrt	23
16992	overgedragen	26
41244	overhead	12
37042	overlaid	5
37626	overlay	4
37339	overlay.	4
38471	overlayed	4
36889	overlaying	7
58798	overloaded	3
11720	overridden	16
21026	override	62
63698	overridePendingTransition(android.R.anim.slide_in_left,android.R.anim.slide_out_right)	2
45873	overriden	4
38829	overrides	13
53266	overriding	4
36507	overwritten	7
48622	overwritten.	4
6339	own	184
11416	ownCloud	60
32513	ownCloud")	8
11988	ownCloud</string>	62
55582	ownCloud</string>-	1
10931	ownCloud\n	8
31590	owncloud	9
22708	owncloud</string>	7
46076	owned	4
31587	owning	11
35813	owns	3
10663	p	57
43899	p)	8
47305	p.forceAdd	4
47177	p.height	4
43462	p.leftMargin	4
43332	p.rightMargin	4
47066	p.viewType	4
15164	p</string>	11
16667	paar	7
1019	package	282
41120	package-private	4
38341	package.	5
36965	package="com.actionbarsherlock">	5
6754	package="org.gnucash.android"	98
25081	package="org.gnucash.android">	6
23689	package="org.gnucash.android.test"	19
3331	packageInfo	15
13864	packageInfo.versionName	4
48922	packageManager	8
9965	packageName	15
49312	packageNameToActivityMap	4
49318	packageNameToActivityMap.clear()	4
49578	packageNameToActivityMap.get(packageName)	4
49108	packageNameToActivityMap.put(packageName,activity)	4
24375	packaged	11
39098	packages	4
48940	packages,so	5
57688	packagingOptions	2
62729	pada	3
45327	paddedBottom	4
45304	paddedTop	4
45652	paddedTop)	4
45289	paddedViewHeight	4
27316	padding	23
47301	padding)	4
46909	padding,so	4
46333	padding.	4
45429	paddingLeft	4
45545	paddingRight	4
20843	padr&#227	18
15680	padre</string>	23
54891	padres</string>	7
4164	padro	40
28695	padro,CRDITO	12
22977	padro,apenas	13
28924	padro,s	13
6119	padro</string>	38
62076	page	4
62208	page)	3
38222	page.	4
21793	page.getReviewItems(reviewItems)	6
13915	pager	22
13593	pager.setAdapter(mPagerAdapter)	5
27708	pager.setAdapter(pagerAdapter)	5
13473	pager.setCurrentItem(INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT)	5
27755	pager.setCurrentItem(INDEX_TRANSACTIONS_FRAGMENT)	5
13132	pager.setVisibility(View.GONE)	8
27659	pagerAdapter	7
19733	pages	33
46375	paint	5
45981	paint.setColor(color)	5
12531	pair	44
62898	pair.	4
31934	pair.setMemo(mMemo)	14
31923	pair.setQuantity(mQuantity)	3
31679	pair.setQuantity(mSplitQuantity)	9
31622	pair.setTransactionUID(mTransactionUID)	8
31796	pair.setType(mSplitType.invert())	17
12894	pairZero	4
32186	pairs	6
41177	pairs)	4
40379	pairs.	4
15500	pakistan&#237	10
15789	pakistan</item>	10
57256	palace")	3
19505	palavra	37
27393	palette	7
22597	paling	7
57076	pane,replacing	3
37644	panel	15
48347	panel's	4
55525	panel)	8
57143	panel,float	3
25629	pantalla	8
60890	paper	3
62455	paquistanesa</item>	6
5011	par	67
16150	par</string>	11
3271	para	177
12273	para&#8230	17
54919	para:	7
22952	para:</string>	24
21138	para:\n</string>	29
23018	para</string>	15
59480	parallel	2
41474	parallel.	4
9278	param	17
63262	paramString	3
63206	paramString.split("	3
35269	paramenter	9
31711	paramenters	23
18761	parameter	78
57271	parameter's	4
25540	parameter)	4
59867	parameter,it	3
18286	parameter.	36
6524	parameters	72
10104	parameters.	20
35622	parameters/options	4
57389	parameters:	11
35718	parameters</p>	2
40957	parametric	8
6792	params	103
6691	params)	104
25482	params){	38
23825	params,	39
57083	params,@NonNull	8
51267	params,@Nullable	3
13543	params,SQLiteDatabase	31
25487	params,Throwable	12
45495	params.	8
46944	params.bottomMargin	4
25617	params.getExportFormat().toString()	10
35479	params.getExportFormat().toString())	10
25662	params.getExportFormat().toString(),throwable)	4
55456	params.getExportTarget().getDescription()	2
54598	params.getExportTarget().name().toLowerCase())	7
43806	params.gravity	8
46999	params.leftMargin	4
47103	params.rightMargin	4
52694	params.setDeleteTransactionsAfterExport(Boolean.parseBoolean(tokens[3]))	13
59605	params.setExportAllTransactions(Boolean.parseBoolean(tokens[2]))	5
55442	params.setExportLocation(tokens[4])	3
52499	params.setExportStartTime(Timestamp.valueOf(Exporter.TIMESTAMP_ZERO))	5
52596	params.setExportStartTime(Timestamp.valueOf(tokens[2]))	5
52683	params.setExportStartTime(TimestampHelper.getTimestampForEpochZero())	5
52483	params.setExportStartTime(TimestampHelper.getTimestampForUtcString(tokens[2]))	5
52477	params.setExportStartTime(TimestampHelper.getTimestampFromEpochZero())	4
52606	params.setExportStartTime(TimestampHelper.getTimestampFromUtcString(tokens[2]))	7
55531	params.setExportStartTime(new	5
52592	params.setExportStartTime(timestamp)	8
63242	params.setExportTarget(ExportParams.ExportTarget.valueOf(tokens[1]))	3
52563	params.setExportTarget(ExportTarget.valueOf(tokens[1]))	12
27279	params.setMargins(mMarginSize,mMarginSize,mMarginSize,mMarginSize)	3
59599	params.setTargetFilepath(tokens[4])	2
59188	params.toString()	4
57350	params.toString())	8
47203	params.topMargin	4
51541	paramsCsv	4
6452	params[0]	14
7111	paramters	9
48186	paramters.	4
11709	paramtres	22
50165	paranoid	5
43357	parcel	8
14822	pare</string>	6
884	parent	240
1530	parent)	120
45210	parent).removeView(mCustomNavView)	4
9325	parent){	46
7186	parent,	106
47749	parent,ActionBar.Tab	4
30402	parent,FloatingActionButton	3
63221	parent,Timestamp	6
345	parent,View	94
7335	parent,boolean	24
1335	parent,int	33
26347	parent,null	13
56501	parent,set	6
24130	parent,whose	13
990	parent-child	8
26967	parent.	21
59887	parent.</p>	3
35670	parent.appendChild(bankmsgs)	10
12409	parent.appendChild(statementTransactions)	14
12767	parent.appendChild(transaction.toOfx(doc))	7
58946	parent.appendChild(transaction.toXml(doc))	3
48878	parent.getAdapter()	4
43385	parent.getChildAt(childIndex)	4
32967	parent.getChildAt(i)	7
33160	parent.getChildCount()	7
44034	parent.getChildCount())	4
60229	parent.getItemAtPosition(position).toString()	3
43068	parent.invalidate(	4
42828	parent.removeView(mOverflowButton)	4
43948	parent.removeViewAt(childIndex)	4
13736	parent</name>	61
11658	parent</string>	24
20359	parent="@android:style/Widget.Button">	7
33892	parent="@android:style/Widget.EditText">	4
23823	parent="@android:style/Widget.ImageButton">	5
29840	parent="@style/Widget.AppCompat.Spinner.DropDown.ActionBar">	5
18217	parent="@style/Widget.Sherlock.Spinner.DropDown.ActionBar">	7
37924	parent="Sherlock.__TextAppearance.Small">	4
38080	parent="Sherlock.__Theme">	5
38755	parent="Sherlock.__Theme.DarkActionBar">	4
38399	parent="Sherlock.__Theme.Light">	4
37841	parent="Sherlock.__Widget.ActionBar">	4
38624	parent="Sherlock.__Widget.ActionMode">	4
37848	parent="Sherlock.__Widget.ActivityChooserView">	5
38052	parent="Sherlock.__Widget.Holo.DropDownItem">	4
38748	parent="Sherlock.__Widget.Holo.ListView">	4
38079	parent="Sherlock.__Widget.Holo.Spinner">	4
37792	parent="Sherlock.__Widget.SearchAutoCompleteTextView">	5
60387	parent="TextAppearance.EditTransaction_Small">	4
38488	parent="TextAppearance.Sherlock.Small">	5
37808	parent="TextAppearance.Sherlock.Widget.PopupMenu.Large">	4
38026	parent="TextAppearance.Sherlock.Widget.PopupMenu.Small">	4
21082	parent="Theme.AppCompat.Light.DarkActionBar">	5
59655	parent="Theme.AppCompat.Light.Dialog">	3
20654	parent="Theme.AppCompat.Light.NoActionBar">	9
62268	parent="Theme.GnucashTheme">	3
38246	parent="Theme.Sherlock.Light">	4
37802	parent="Widget">	7
61930	parent="Widget.AppCompat.DrawerArrowToggle">	3
38138	parent="Widget.Sherlock.ActionBar">	4
37865	parent="Widget.Sherlock.ActionBar.TabBar">	4
37989	parent="Widget.Sherlock.ActionBar.TabText">	4
38082	parent="Widget.Sherlock.ActionBar.TabView">	4
38680	parent="Widget.Sherlock.ActionButton">	4
38086	parent="Widget.Sherlock.ActionMode">	4
38516	parent="Widget.Sherlock.ActivityChooserView">	4
37771	parent="Widget.Sherlock.Light.ListPopupWindow">	4
37876	parent="Widget.Sherlock.ListPopupWindow">	4
37935	parent="Widget.Sherlock.ProgressBar">	4
38290	parent="Widget.Sherlock.ProgressBar.Horizontal">	4
30296	parent="android:TextAppearance">	7
37676	parent="android:TextAppearance.Holo.Widget.ActionBar.Menu">	5
37436	parent="android:TextAppearance.Holo.Widget.ActionBar.Subtitle">	4
37629	parent="android:TextAppearance.Holo.Widget.ActionBar.Subtitle.Inverse">	4
37567	parent="android:TextAppearance.Holo.Widget.ActionBar.Title">	4
37060	parent="android:TextAppearance.Holo.Widget.ActionBar.Title.Inverse">	4
37167	parent="android:TextAppearance.Holo.Widget.ActionMode.Subtitle">	4
37263	parent="android:TextAppearance.Holo.Widget.ActionMode.Subtitle.Inverse">	4
37560	parent="android:TextAppearance.Holo.Widget.ActionMode.Title">	4
37097	parent="android:TextAppearance.Holo.Widget.ActionMode.Title.Inverse">	4
37345	parent="android:TextAppearance.Holo.Widget.PopupMenu">	4
37036	parent="android:TextAppearance.Holo.Widget.PopupMenu.Large">	4
37481	parent="android:TextAppearance.Holo.Widget.PopupMenu.Small">	4
38202	parent="android:Theme">	5
18303	parent="android:Theme.Dialog">	11
37594	parent="android:Theme.Holo">	4
37061	parent="android:Theme.Holo.Dialog">	4
37434	parent="android:Theme.Holo.Light">	4
37357	parent="android:Theme.Holo.Light.DarkActionBar">	4
34430	parent="android:Theme.Holo.Light.Dialog">	7
38113	parent="android:Theme.Light">	4
38677	parent="android:Theme.Light.NoTitleBar">	4
38461	parent="android:Theme.NoTitleBar">	4
37437	parent="android:Widget.Holo.ActionBar">	4
37259	parent="android:Widget.Holo.ActionBar.Solid">	4
37726	parent="android:Widget.Holo.ActionBar.TabBar">	4
37137	parent="android:Widget.Holo.ActionBar.TabText">	4
37382	parent="android:Widget.Holo.ActionBar.TabView">	4
37490	parent="android:Widget.Holo.ActionButton">	4
37624	parent="android:Widget.Holo.ActionButton.CloseMode">	4
37247	parent="android:Widget.Holo.ActionButton.Overflow">	4
37276	parent="android:Widget.Holo.ActionMode">	4
37033	parent="android:Widget.Holo.AutoCompleteTextView">	5
37402	parent="android:Widget.Holo.Light.ActionBar">	4
37244	parent="android:Widget.Holo.Light.ActionBar.Solid">	4
37513	parent="android:Widget.Holo.Light.ActionBar.Solid.Inverse">	4
37311	parent="android:Widget.Holo.Light.ActionBar.TabBar">	4
37046	parent="android:Widget.Holo.Light.ActionBar.TabBar.Inverse">	4
37642	parent="android:Widget.Holo.Light.ActionBar.TabText">	4
37317	parent="android:Widget.Holo.Light.ActionBar.TabText.Inverse">	4
37306	parent="android:Widget.Holo.Light.ActionBar.TabView">	4
37116	parent="android:Widget.Holo.Light.ActionBar.TabView.Inverse">	4
37149	parent="android:Widget.Holo.Light.ActionButton">	4
37449	parent="android:Widget.Holo.Light.ActionButton.CloseMode">	4
37093	parent="android:Widget.Holo.Light.ActionButton.Overflow">	4
37257	parent="android:Widget.Holo.Light.ActionMode">	4
37503	parent="android:Widget.Holo.Light.ActionMode.Inverse">	4
37104	parent="android:Widget.Holo.Light.AutoCompleteTextView">	5
37448	parent="android:Widget.Holo.Light.ListView.DropDown">	4
37428	parent="android:Widget.Holo.Light.PopupMenu">	4
37211	parent="android:Widget.Holo.Light.PopupWindow">	4
37002	parent="android:Widget.Holo.Light.ProgressBar">	4
37525	parent="android:Widget.Holo.Light.ProgressBar.Horizontal">	5
37176	parent="android:Widget.Holo.Light.Spinner">	4
37613	parent="android:Widget.Holo.ListView.DropDown">	4
37316	parent="android:Widget.Holo.PopupMenu">	4
37028	parent="android:Widget.Holo.PopupWindow">	4
37593	parent="android:Widget.Holo.ProgressBar">	4
37234	parent="android:Widget.Holo.ProgressBar.Horizontal">	4
37108	parent="android:Widget.Holo.Spinner">	4
38632	parent="android:Widget.ListView">	4
37878	parent="android:Widget.ProgressBar">	4
38028	parent="android:Widget.ProgressBar.Horizontal">	4
27149	parent="style/ListItemContainerBase">	3
3564	parentAccount	17
2814	parentAccount.getAccountType()	7
13646	parentAccount.setAccountType(AccountType.LIABILITY)	5
13286	parentAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE))	5
13913	parentAccount.setParentUID(ROOT_ACCOUNT_UID)	5
13389	parentAccount.setUID(PARENT_ACCOUNT_UID)	5
2580	parentAccountFullName	19
62572	parentAccountFullName.isEmpty())	2
24514	parentAccountFullName.length()	12
4828	parentAccountId	37
18986	parentAccountId)	24
4903	parentAccountId){	32
27654	parentAccountId,DisplayMode	5
3626	parentAccountName	7
20621	parentAccountNode	11
20220	parentAccountNode.appendChild(doc.createTextNode(mParentAccountUID))	11
35603	parentAccountNode.setAttribute("type","guid")	4
20197	parentAccountNode.setAttribute(GncXmlHelper.ATTR_KEY_TYPE,GncXmlHelper.ATTR_VALUE_GUID)	9
26734	parentAccountType	6
3504	parentAccountUID	59
19820	parentAccountUID)	18
60459	parentAccountUID){	6
64211	parentAccountUID,DisplayMode	2
7133	parentAccountUID.equals(mAccountsDbAdapter.getGnuCashRootAccountUID()))	6
2464	parentAccountUID.equalsIgnoreCase(getGnuCashRootAccountUID())){	5
59891	parentAccountUID.equalsIgnoreCase(getOrCreateGnuCashRootAccountUID())){	2
35582	parentAccountUID.equalsIgnoreCase(gnucashRootAccountUID)){	4
6556	parentColor	6
24258	parentEquity	6
43781	parentHeightMeasureSpec	4
43922	parentHeightMeasureSpec,int	8
43492	parentHeightPadding	4
43731	parentHeightPadding)	4
8404	parentId	6
8290	parentId){	6
44440	parentMenu	4
44210	parentMenu,MenuItemImpl	4
86	parentName	21
1140	parentUID	66
64064	parentUID)	3
8349	parentUID){	16
34613	parentUID.length()	6
18954	parentView	19
36370	parentView,	13
26635	parentView,View	14
6761	parentView.post(new	24
6803	parentView.setTouchDelegate(new	22
46805	parentWidthMeasureSpec,int	4
59192	parola,v	6
59226	parola</string>	6
5304	parse	46
51259	parse(@NonNull	3
2521	parse(Context	26
9131	parse(EventRecurrence	20
21640	parse(InputStream	28
3506	parse(SQLiteDatabase	20
2109	parse(String	7
7850	parse(long	5
32018	parse.	3
31699	parseAmount(String	5
31729	parseAmount(mConvertedAmountInput.getText().toString())	5
31899	parseAmount(mExchangeRateInput.getText().toString())	5
35049	parseByDay(@Nullable	4
35089	parseByDay(int[]	9
52712	parseCsv(String	13
35781	parseDate(String	13
31973	parseDecimalAmount()	3
32021	parseDecimalAmountWithDifferentSeparator()	3
18593	parseEndTime(EventRecurrence	13
18782	parseEndTime(eventRecurrence,event)	5
9825	parseEndTime(eventRecurrence,recurrence)	11
54103	parseEndTime(eventRecurrence,scheduledAction)	4
18900	parseEndTime(eventRecurrence,scheduledEvent)	3
2560	parseInputToDecimal(String	35
31118	parseInputToDecimal(mAmountEditText.getText().toString())	29
35840	parseInputToDecimal(s.toString())	3
48383	parseMenu(XmlPullParser	5
48640	parseMenu(parser,attrs,menu)	4
48718	parseMenu(parser,attrs,subMenu)	4
4395	parseMoney(String	11
31476	parsePosition	5
9068	parseScheduledAction(Transaction	14
51232	parseSplit(@NonNull	4
31404	parseSplit(String	29
5359	parseSplitAmount(String	20
4637	parseTemplateSplitAmount(@NonNull	9
51214	parseToDecimal(@NonNull	4
35824	parseToDecimal(String	19
63761	parseToString(String	2
936	parsed	81
1414	parsedAmount	6
12879	parsedAmountString	5
7877	parser	20
64377	parser,	1
48363	parser,AttributeSet	4
45312	parser.	4
48434	parser.close()	4
49286	parser.getAttributeValue(null,ATTRIBUTE_ACTIVITY)	4
48272	parser.getEventType()	4
48436	parser.getName()	8
8453	parser.getXMLReader()	3
48787	parser.next()	8
48951	parser.setInput(fis,null)	4
11600	parses	16
2578	parsing	93
1313	part	220
8369	partString	10
11959	parte	19
46526	partial	4
2158	partially	6
10633	particular	69
5993	partidas	14
5452	partidas-dobradas	6
11891	partie	3
16325	partir	16
22804	partire	6
16162	partita	32
61083	partname*	3
61303	partname=""	5
60767	partname="???"	3
60811	partname="Luma"	3
61524	partname="SDR"	3
61366	partname="agora"	3
61313	partname="att"	3
60896	partname="aur"	3
61007	partname="avo"	3
60910	partname="baisa"	3
61008	partname="ban"	3
61205	partname="butut"	3
60840	partname="cent"	5
60736	partname="centas"	3
60852	partname="centavo"	5
61497	partname="centesimo"	3
60869	partname="centime"	5
60762	partname="centimo"	5
60985	partname="centimos"	3
61655	partname="centisimi"	3
61093	partname="centsimo"	3
61414	partname="chetrum"	3
61278	partname="chon"	3
60941	partname="cntimos"	3
61154	partname="deni"	3
61053	partname="dinar"	3
61610	partname="diram"	3
61044	partname="dirham"	3
60936	partname="euro-cent"	3
61065	partname="fen"	3
60826	partname="fening"	3
61443	partname="fil"	4
60726	partname="fillr"	3
61211	partname="fils"	4
60793	partname="groschen"	3
61322	partname="grosz"	3
60973	partname="halala"	3
60854	partname="haleru"	3
61691	partname="halier"	3
61061	partname="iraimbilanja"	3
57967	partname="kapeyka"	6
61138	partname="khoum"	3
61106	partname="kobo"	3
61130	partname="kopek"	3
61709	partname="kopiyka"	3
61557	partname="kuru"	3
61388	partname="laari"	3
60939	partname="lepta"	3
60951	partname="lipa"	3
60976	partname="lira"	3
60871	partname="lwei"	3
55326	partname="microbitcoin"	2
61575	partname="milim"	3
61265	partname="mongo"	3
61451	partname="ngwee"	3
61155	partname="ore"	4
61532	partname="ounce"	3
61232	partname="paisa"	4
61371	partname="paise"	3
60879	partname="para"	5
60806	partname="pence"	4
60708	partname="penni"	3
61704	partname="penny"	3
61286	partname="pesewa"	3
60914	partname="pfennig"	3
61099	partname="piastre"	3
60915	partname="pingin"	3
61054	partname="pul"	3
61225	partname="pya"	3
60943	partname="qindarka"	3
61441	partname="qirsh"	4
61105	partname="qpik"	3
60785	partname="re"	3
61411	partname="ruble"	5
60905	partname="santeem"	3
61173	partname="santim"	3
60711	partname="santms"	3
61614	partname="satang"	3
61032	partname="sen"	4
61690	partname="sene"	3
61552	partname="seniti"	3
60895	partname="sent"	3
60921	partname="sente"	3
61461	partname="senti"	3
61509	partname="stotin"	3
60988	partname="stotinki"	3
61252	partname="tambala"	3
61659	partname="tee"	3
61556	partname="tenga"	3
61645	partname="test"	3
61040	partname="tetri"	3
61254	partname="thebe"	3
61539	partname="tiyin"	3
61086	partname="tiyn"	3
61202	partname="toea"	3
60916	partname="tyiyn"	3
61488	partname="xu"	3
8319	parts	21
62343	parts-per-unit	3
60807	parts-per-unit*	3
57851	parts-per-unit="1"	9
58257	parts-per-unit="100"	9
58144	parts-per-unit="1000"	9
58274	parts-per-unit="10000"	6
55361	parts-per-unit="1000000"	2
57951	parts-per-unit="5"	6
57758	parts-per-unit="500"	6
3882	party	13
11246	pas	35
1138	pass	54
1944	pass)	23
46190	pass.	4
25975	pass1	6
26129	pass1.setText(null)	3
25890	pass1.setText(num)	3
25976	pass2	6
26001	pass2.getText()	3
26011	pass2.setText(null)	3
25759	pass2.setText(num)	3
25859	pass3	5
25909	pass3.getText()	3
25823	pass3.setText(null)	3
25821	pass3.setText(num)	3
25972	pass4	3
26126	pass4.getText())	3
25825	pass4.setText(null)	5
25787	pass4.setText(num)	3
13126	passCode	17
57583	passCodeTextView	3
57574	passCodeTextView.setText("Enter	3
57605	passCodeTextView=	3
1426	passIntent	12
77	passIntent.putExtra(UxArgument.DISABLE_PASSCODE,UxArgument.DISABLE_PASSCODE)	13
204	passcode	153
26015	passcode"	9
57622	passcode")	3
341	passcode)	7
1814	passcode,please	104
57623	passcode.	5
1448	passcode</string>	143
33908	passcodeDisabled	5
34077	passcodeDisabled)	5
1353	passcodeEditText	5
1763	passcodeEditText.addTextChangedListener(new	5
1777	passcodeEditText.getText().clear()	5
1771	passcodeEditText.setOnKeyListener(new	5
9314	passcodeEnabled	9
11877	passe	40
11748	passe</string>	53
5442	passed	95
60314	passed,but	3
60313	passed.	3
19661	passes	19
1990	passing	61
16671	passiva</string>	7
16983	passiva]]></string>	5
14819	passkode	11
14835	passkode,prv	11
14754	passkode</string>	11
21702	passord	6
21634	passord,prv	9
21941	passord</string>	16
55584	passord</string>-	1
21917	passordet	6
10423	password\n	11
40403	past	20
56956	past,we	10
55687	pasta	4
7323	path	73
33503	path)	20
7294	path))	22
7257	path){	27
51054	path.size()	5
50841	path:	5
9011	path="OFX/"	2
8848	path="QIF/"	2
9689	path="XML/"	2
33422	pathParts	16
56871	pathParts[0]	7
56938	pathParts[1]	7
56889	pathParts[1]))	5
56818	paths	14
9177	paths)	15
59831	pathy	2
29294	patrimoniale</string>	4
12638	pattern	32
52677	pattern.	2
12829	pattern.matcher(amountString)	5
39261	pause/resume	4
62334	pausing	5
38687	pausing.	4
55153	pb	3
55210	pb.read(	3
55178	pb.unread(	3
17695	pdwjne	11
22410	ped	5
22170	pedvolby</string>	5
26627	pela	13
12049	pelacak	8
22506	pembukaan	7
11183	pendant	23
20410	pending	41
42001	pendingAnimations	4
42296	pendingAnimations.clear()	4
42312	pendingAnimations.clone()	4
41909	pendingAnims	4
42218	pendingCopy	4
42004	pendingCopy.get(i)	4
41746	pendingCopy.size()	4
10116	pendingIntent	35
58750	pendingIntent)	4
55277	pendingIntent.cancel()	8
29680	pengaturan	5
11300	pengeluaran	8
22834	pengembang.</string>	7
21292	penger</string>	10
11895	penghapusan</string>	7
10274	peningkatan\n	5
8346	pense</item>	8
23804	penses	19
23646	penses</item>	9
12419	pentru	11
37616	people	5
3268	peque&#241	15
15706	pequeas</string>	9
5714	per	199
41424	per-property	4
42167	per-thread	4
22484	per</string>	13
13973	percent	23
4251	percentage	106
2203	percentage</string>	119
20315	percentagem	20
20361	percentagem</string>	18
22369	percentatge</string>	7
51064	percents	4
5724	percentual	13
22552	percentuale	6
22685	percentuale</string>	9
55627	percorso	2
13745	perform	63
37265	perform.	8
42775	performClick()	8
47952	performCollapse()	4
50554	performCompletion()	5
48153	performExpand()	4
60625	performFiltering(CharSequence	3
42603	performIdentifierAction(int	16
43721	performItemAction(MenuItem	4
44009	performItemAction(findItem(id),flags)	4
43907	performItemAction(item,flags)	4
46087	performItemClick(View	4
42447	performShortcut(int	16
25713	performance	29
26283	performed	33
34580	performed,just	6
36231	performed.	13
54673	performed.</p>	10
36364	performed</p>	4
36380	performing	26
6743	performs	30
22443	peridica</string>	10
25556	peridics</string>	13
22184	peridiques</string>	10
902	period	138
54473	period"	5
6400	period)	26
7563	period){	17
53416	period++)	3
40926	period,just	4
2978	period,parse	13
51776	period,start	11
33620	period,will	4
53432	period,zero-based	2
10111	period.	5
19624	period.</p>	5
18555	period</p>	7
35035	periodEnd	5
53281	periodEnd){	5
19365	periodMillis	6
19115	periodMillis){	12
7422	periodNum	14
53561	periodNum)	2
7620	periodNum){	10
54149	periodNum++)	5
54403	periodNumber	2
35166	periodStart	7
34749	periodStart)	7
58793	periodStart,	3
52972	periodStart,long	2
8109	periodType	44
53584	periodType)	2
7740	periodType){	13
9242	periodType,int	6
32363	periodType.getMultiplier()	4
8237	periodType.setMultiplier((int)	8
10020	periodType.setMultiplier(2)	11
10098	periodType.setMultiplier(interval)	9
4483	periodType.setMultiplier(mRecurrenceMultiplier)	19
9911	periodType.setMultiplier(ordinal)	6
7608	periodType.setMultiplier(result)	7
59916	periodicity	3
59938	periodicity.	3
16905	periodieke	7
6383	periods	19
8992	periods.	8
53460	periods</p>	2
28632	permStatus	3
23622	permet	19
1485	permettant	87
14574	permission	33
52054	permission.	5
28966	permission.")	3
719	permissions	356
57530	permissions,	3
20983	permissions,int[]	9
60526	permit	3
97	permite	139
22931	permitir	10
48724	permitted	8
22502	persentase</string>	7
53466	persist	2
49553	persistHistoricalData()	4
10145	persisted	24
6858	persistence	17
48776	persistent	4
49272	persisting	10
60651	person	3
15417	personalizado&#8230	20
2384	personalizado</item>	13
29247	personalizzato&#8230	7
60639	persons	3
14276	peso</item>	68
21735	pesos</item>	10
29715	pessoais	8
18246	pesta&#241	6
22413	pesunout	5
10628	petites	18
10254	peut	23
11178	peuvent	11
21997	pevedeny	8
17713	pewie,e	13
17398	pewno	12
40734	phase	4
40895	phase,whereas	4
19094	phase.	17
6640	philosophy	8
31467	phone	2
7038	pi	60
16455	pianificata	22
22726	pianificata</string>	6
28000	pianificate	5
22494	pianificate</string>	28
25954	pianificate\n	5
29352	pianificazione</string>	10
22549	piccole</string>	6
3139	pick	40
3784	pickIntent	44
20291	pickIntent.addCategory(Intent.CATEGORY_OPENABLE)	8
20820	pickIntent.putStringArrayListExtra(Intent.EXTRA_MIME_TYPES,mimeTypes)	8
20323	pickIntent.setType("*/*")	8
25165	pickIntent.setType("application*/	5
2462	pickIntent.setType("application/*")	26
3115	pickIntent.setType("application/octet-stream")	23
51582	pickIntent.setType("file/*")	4
55282	picked	6
1683	picker	168
56525	picking	3
22187	pidan	7
22405	pidnm	5
18093	pido\n	6
2173	pie	55
24927	pie's	7
57283	pie/bar	8
32470	pie/line	11
34185	pieChartView	3
24666	pieData	11
24932	pieData)	12
24920	pieData.getYValCount()	11
41341	piecemeal.	4
62265	pieces	5
10700	pihak	5
11546	pilihan	10
44146	pin	4
27220	pink	3
57305	pinkod,var	3
57344	pinkod.	3
57314	pinkod</string>	3
46241	pixels	11
50550	pixels,if	5
5793	pizza</string>	8
50857	pkg	5
37268	place	28
37700	placed	21
8745	placeholder	85
51758	placeholder,allows	1
36503	placeholders	6
37348	placement	5
16050	placer	17
16034	placer</string>	8
2159	places	65
32799	places,so	9
35828	places.	6
59397	places:	3
48612	plain	4
21878	plan</string>	16
29875	planet	3
2050	planifi</string>	22
22425	planificada	7
60006	planificar</string>	3
22206	planificat	7
16158	planifie</string>	11
16016	planifies	15
10338	planifies</string>	32
34865	planifies\n	5
11647	planifis	21
10817	planifis</string>	12
15135	planlagte	27
10004	planned	19
60029	plannedExecutions	3
60030	plannedExecutions){	3
15969	plantilla</string>	10
15349	plantilla</string>+	1
28131	plassholder	4
45136	platform	12
37662	platform's	5
38689	platforms	8
55969	platsen	2
5485	play	20
41104	play()	4
41130	play(Animator	4
40886	play(anim)	4
40900	play(items.get(0))	4
41093	play(items.get(i)).before(items.get(i+1))	4
41097	play(items[0])	4
41050	play(items[i]).before(items[i+1])	4
40443	play.	4
42183	playBackwards	4
41788	playBackwards)	4
40384	playSequentially()	5
40377	playSequentially(Animator...	4
40599	playSequentially(List<Animator>	4
43152	playSoundEffect(SoundEffectConstants.CLICK)	8
41836	playTime	4
41928	playTime)	4
40901	playTogether()	5
40452	playTogether(Animator...	4
41124	playTogether(Collection<Animator>	4
46922	playback	4
38889	playback,	4
40909	played	4
40762	played,so	4
40647	played.	4
40553	playing	8
42695	playing,reset	4
40372	playing.	8
40411	plays	4
17704	plik	19
17842	plik&#8230	17
17253	pliki	15
17441	pliki</string>	22
17352	pliku	21
17248	plikw	22
1293	plot	4
36891	plugin's	4
3131	plugin:	124
31452	pluralizedText	3
10567	plus	45
11094	plusieurs	9
9632	pm	36
45766	pm.getActivityIcon(((Activity)	4
50847	pm.getActivityInfo(component,PackageManager.GET_META_DATA)	5
45748	pm.getActivityLogo(((Activity)	4
50668	pm.getDrawable(pkg,iconId,activityInfo.applicationInfo)	5
43112	pm.queryIntentActivityOptions(caller,specifics,intent,0)	8
23013	pnes	10
14860	pnet</string>	21
17669	pniej</string>	14
17664	po	36
17358	po</string>	12
17544	pocztku</item>	10
17739	podaj	10
17614	podczas	13
6406	pode	37
5748	podem	37
29558	poden	5
51503	poder	9
22193	podeu	7
22177	podrobnosti	7
22388	podrobnosti</string>	5
22238	podvojnho	5
17453	podwjne	15
17524	podzia</string>	15
17795	podziau</string>	8
17392	podziay	12
22067	pogut	7
24390	point	51
45880	point,or	4
62838	point,the	4
47465	point,we	4
42017	point.	4
12782	point</li>	5
45896	pointToPosition(int	4
14167	pointed	7
46796	pointer	4
14022	pointing	51
269	points	4
29665	poistamaan</string>	5
22858	poistaminen</string>	7
22713	poistettu</string>	7
17553	pokazania</string>	23
15910	polaco</item>	17
17275	poleszania	23
48617	policies	4
49037	policy	8
48368	policy.	4
7478	pollos	4
29600	poloky!!</string>	5
25906	pomocy	5
17231	pomylnie!</string>	13
17700	pomylnie</string>	18
58610	pomysy,dyskutuj	4
64044	pomysy,przedyskutuj	2
16633	pond</item>	7
17688	ponownie.	11
17568	ponownie</string>	11
17473	poprawn	12
30546	populate	54
52486	populateBaseModelAttributes(@NonNull	13
52484	populateBaseModelAttributes(Cursor	11
1956	populateBaseModelAttributes(c,account)	9
61635	populateBaseModelAttributes(c,transaction)	3
59738	populateBaseModelAttributes(contentValues,account)	6
59824	populateBaseModelAttributes(contentValues,commodity)	5
59840	populateBaseModelAttributes(contentValues,price)	5
53073	populateBaseModelAttributes(contentValues,scheduledAction)	7
59755	populateBaseModelAttributes(contentValues,split)	5
59771	populateBaseModelAttributes(contentValues,transaction)	5
63976	populateBaseModelAttributes(cursor,book)	2
53340	populateBaseModelAttributes(cursor,budget)	2
53046	populateBaseModelAttributes(cursor,budgetAmount)	2
61693	populateBaseModelAttributes(cursor,commodity)	3
53254	populateBaseModelAttributes(cursor,event)	5
12464	populateBaseModelAttributes(cursor,price)	11
35118	populateBaseModelAttributes(cursor,recurrence)	5
61538	populateBaseModelAttributes(cursor,split)	6
59007	populateCurrencies(SQLiteDatabase	2
59081	populateCurrencies(db)	2
59815	populateModel(Cursor	4
59807	populateModel(c,account)	4
59732	populateModel(c,transaction)	4
33797	populateModel(cursor,event)	7
59715	populateModel(cursor,split)	4
14207	populated	28
25134	populates	13
37438	popup	40
43738	popup)	4
37356	popup.	12
43204	popup.dismiss()	4
32703	popup.getMenu()	7
53862	popup.getMenuInflater()	11
48017	popup.setBackgroundDrawable(a.getDrawable(	4
47948	popup.setHorizontalOffset(horizontalOffset)	4
61904	popup.setOnMenuItemClickListener(AccountViewHolder.this)	3
53812	popup.setOnMenuItemClickListener(BudgetViewHolder.this)	2
60492	popup.setOnMenuItemClickListener(ViewHolder.this)	9
63516	popup.setOnMenuItemClickListener(this)	4
47692	popup.setVerticalOffset(verticalOffset)	4
32902	popup.show()	20
49605	popup/alert.	4
47312	popupBackground	4
47337	popupBackground.getPadding(mTempRect)	4
3498	popupMenu	7
54566	popupMenu.getMenu().findItem(R.id.ctx_menu_delete_book).setEnabled(false)	2
2463	popupMenu.getMenuInflater()	7
2774	popupMenu.setOnMenuItemClickListener(new	7
2370	popupMenu.show()	7
49431	popupWindow	4
49370	popupWindow.getListView().setContentDescription(mContext.getString(	4
48931	popupWindow.setContentWidth(contentWidth)	4
49118	popupWindow.show()	4
43059	popups	4
42964	popups.	4
2920	por	121
3213	por</string>	26
6349	porcentagem</string>	6
15387	porcentaje	14
3244	porcentaje</string>	13
24887	porcentajes</string>	6
3202	porci&#243	7
15386	porcin	9
2956	porciones	21
60619	ported.	3
31838	porting	7
48190	portion	4
60583	portions	3
37580	portrait).	5
4963	pos	72
8289	pos++)	55
34272	pos,	2
7209	pos,long	7
12851	poses	7
14312	positi	3
5492	position	139
1666	position)	105
50037	position).	5
29386	position){	13
44777	position++	8
1667	position,	150
19659	position,Object	6
18681	position,View	52
39338	position,boolean	16
47443	position,boolean[]	4
5457	position,but	9
47325	position,int	9
568	position,long	149
38974	position,or	8
49982	position,restore	5
27873	position,so	8
45805	position.	16
45797	position="	4
44925	positionChild(View	4
45220	positionChild(homeLayout,x	4
45479	positionChild(mClose,x,y,contentHeight)	4
45290	positionChild(mCustomView,x,y,contentHeight)	4
45239	positionChild(mListNavLayout,x,y,contentHeight)	4
45104	positionChild(mTabScrollView,x,y,contentHeight)	4
45612	positionChild(mTitleLayout,x,y,contentHeight)	4
45515	positionChildInverse(View	4
45685	positionChildInverse(mIndeterminateProgressView,menuLeft,y,contentHeight)	4
45183	positionChildInverse(mMenuView,menuLeft,y,contentHeight)	4
45746	positionChildInverse(mMenuView,x,y,contentHeight)	4
61885	positionStart,int	3
44767	positionType	8
51038	positioned	5
47992	positioned.	4
37266	positioning	5
45826	positions	10
45879	positions.	8
13195	positive	46
7074	positive.	25
29596	posledn	3
22305	poslednho	7
11910	possa	25
7123	possesses	5
16178	possibile	41
27954	possibilit	7
26766	possibility	15
20939	possible	67
59742	possible,account_uid	4
41495	possible,by	4
52365	possible,in	6
19218	possible.	11
43996	possibleChars	4
43443	possibleChars.meta[0]	4
43915	possibleChars.meta[2]	4
43835	possibleItem	4
32369	possibly	13
27935	possono	5
26934	possvel	18
4656	post	11
50168	post(mReleaseCursorRunnable)	5
46280	post(mSelectionNotifier)	4
50483	post(mShowImeRunnable)	5
47710	post(mTabSelector)	4
50439	post(mUpdateDrawableStateRunnable)	5
45229	post(new	4
46584	post(r)	4
46161	post(this)	4
46964	post-Honeycomb	4
46640	postDelayed(mAccessibilityEventSender,TIMEOUT_SEND_ACCESSIBILITY_EVENT)	4
46975	postInvalidate()	4
47271	postInvalidateDelayed(mAnimationResolution)	4
45033	postShowOverflowMenu()	5
49740	postUpdateFocusedState()	6
21497	postadresse	10
9729	posted	24
4839	posted,time	8
6435	posteriori	11
45822	posting.	4
22307	pot	10
22244	potae</string>	10
22324	poten	5
1735	potentially	6
29572	potvrte.	5
17323	potwierdzenia	9
17683	potwierdzi	11
55512	pouit,KREDITN	2
11698	pour	78
16264	pourcentage	9
10978	pourcentage</string>	10
11333	pourrez	21
22001	pouv	5
11434	pouvez	23
22015	pouze	7
23954	power	17
4285	powerManager	8
5586	powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,	6
5037	powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,LOG_TAG)	8
36201	powers	4
17414	powtarzajc	9
17242	powtarzajce	12
17508	powtarzajcych	11
22166	poznmku</string>	7
52015	pozwala	9
17422	pozwl,\ne	8
56424	ppnas	2
56402	ppnas</string>	2
56019	ppningsbalans	2
64027	prblja	4
2835	pre	20
46701	pre-	4
40099	pre-2.2	10
39656	pre-3.0	8
39457	pre-3.2.	4
45343	pre-HC	4
30617	pre-Honeycomb	19
27229	pre-defined	3
19324	pre-integration-test	10
25596	pre-known	19
48307	pre-processing	4
56603	pre-requisites	7
41573	precedence	4
41182	preceding	12
3604	precio</string>	9
55392	precious	8
4208	precision	27
31034	precision.	7
41793	precursor	4
16441	predefinita	38
12457	predefinita,CREDITO	18
22714	predefinita,i	9
22724	predefinita,verranno	6
12101	predefinita</string>	32
22596	predefiniti.\n\nI	7
16289	predefiniti</string>	32
16440	predefinito	28
27965	preeliminar	6
2695	pref	83
8919	pref)	18
33988	pref).isChecked()	14
63807	pref).setEntries(currencyCodes)	4
57011	pref).setEntries(currencyEntries.toArray(entries))	6
64241	pref).setEntries(mCurrencyEntries.toArray(entries))	3
63815	pref).setEntryValues(currencyCodes)	4
57087	pref).setEntryValues(currencyEntryValues.toArray(entryValues))	6
57077	pref).setEntryValues(mCurrencyEntryValues.toArray(entryValues))	6
9441	pref){	14
55549	pref.getKey()	5
63811	pref.setEntries(currencyCodes)	3
63813	pref.setEntries(currencyNames.toArray(new	4
4744	pref.setEntryValues(currencyCodes)	6
57064	pref.setOnPreferenceChangeListener((SettingsActivity)	6
3700	pref.setOnPreferenceChangeListener((SettingsActivity)getActivity())	14
4548	pref.setOnPreferenceChangeListener(this)	50
51469	pref.setOnPreferenceClickListener((SettingsActivity)	11
28495	pref.setOnPreferenceClickListener((SettingsActivity)getActivity())	17
3869	pref.setOnPreferenceClickListener(new	7
3236	pref.setOnPreferenceClickListener(this)	44
57153	pref.setSummary(GnuCashApplication.getDefaultCurrencyCode())	9
63808	pref.setSummary(PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString(	4
55310	pref.setSummary(Uri.parse(defaultBackupLocation).getAuthority())	3
55352	pref.setSummary(backupFileUri.getAuthority())	3
63812	pref.setSummary(chartCurrency)	4
57161	pref.setSummary(currencyName)	6
3520	pref.setSummary(defaultCurrency)	21
9802	pref.setSummary(defaultEmail)	13
9454	pref.setSummary(defaultExportFormat)	7
4390	pref.setSummary(defaultTransactionType)	6
6145	pref.setSummary(localizedLabel)	7
55188	pref.setSummary(pref.getSummary()	8
63804	pref.setSummary(sharedPreferences.getString(getString(R.string.key_default_currency),Money.DEFAULT_CURRENCY_CODE))	4
3747	pref.setSummary(versionName)	14
34136	pref.setTitle(((CheckBoxPreference)	14
37102	prefer	4
15106	preferanser</string>	11
2980	preference	87
63594	preference")	4
67	preference)	94
65	preference,	43
929	preference,Object	46
6277	preference,String	11
25810	preference.	11
21215	preference.getKey()	20
30839	preference.setOnPreferenceClickListener((SettingsActivity)getActivity())	10
3850	preference.setOnPreferenceClickListener(new	20
57081	preference.setOnPreferenceClickListener(this)	3
52216	preference.setSummary(R.string.summary_default_export_email)	7
52124	preference.setSummary(R.string.summary_default_export_format)	3
57171	preference.setSummary(fullname)	7
57173	preference.setSummary(localizedLabel)	3
4439	preference.setSummary(newValue.toString())	26
33939	preference.setTitle(getString(R.string.title_passcode_disabled))	5
21863	preferenceEditor	9
21309	preferenceEditor.apply()	8
62248	preferenceEditor.putBoolean(getString(R.string.key_enable_crashlytics),false)	3
62172	preferenceEditor.putBoolean(getString(R.string.key_enable_crashlytics),true)	6
21509	preferenceEditor.putString(getString(R.string.key_default_currency),currencyCode)	6
21200	preferenceEditor.putString(getString(R.string.key_default_currency),mCurrencyCode)	6
38	preferences	85
60285	preferences")	6
656	preferences.	13
9772	preferences.edit()	12
20530	preferences.edit().putInt(LAST_OPEN_TAB_INDEX,mPager.getCurrentItem()).apply()	5
13310	preferences.edit().putInt(LAST_OPEN_TAB_INDEX,mPager.getCurrentItem()).commit()	6
58781	preferences.edit().putInt(LAST_OPEN_TAB_INDEX,mViewPager.getCurrentItem()).apply()	3
9551	preferences.getBoolean(UxArgument.HIDE_ACCOUNT_BALANCE_IN_WIDGET	3
9642	preferences.getBoolean(UxArgument.HIDE_ACCOUNT_BALANCE_IN_WIDGET,false)	3
13339	preferences.getInt(LAST_OPEN_TAB_INDEX,INDEX_TOP_LEVEL_ACCOUNTS_FRAGMENT)	18
9008	preferences.getString(UxArgument.BOOK_UID,null)	3
10072	preferences.getString(UxArgument.SELECTED_ACCOUNT_UID	3
9782	preferences.getString(UxArgument.SELECTED_ACCOUNT_UID,null)	3
59364	preferences</li>	5
28056	preferiti	5
22507	preferito</string>	11
22336	preferits</string>	7
37387	preferred	9
48556	preferred.	4
402	preferredCurrency	5
45853	preferredHeight	4
46322	preferredWidth	4
12311	prefers	7
42956	prefersCondensedTitle()	12
2204	prefix	32
3426	prefix){	26
41522	prefix,Class	5
42157	prefix,String	7
42119	prefix.	4
35271	prefixed	3
3195	prefs	79
5579	prefs.edit()	47
62359	prefs.edit().putBoolean(UxArgument.SKIP_PASSCODE_SCREEN,true).apply()	6
10479	prefs.edit().putBoolean(getString(R.string.key_use_double_entry),true).apply()	14
3799	prefs.edit().putBoolean(getString(R.string.key_use_double_entry),true).commit()	8
52723	prefs.edit().remove(UxArgument.SKIP_PASSCODE_SCREEN).apply()	8
9906	prefs.edit().remove(getString(R.string.key_dropbox_access_token)).apply()	2
13677	prefs.getBoolean(UxArgument.ENABLED_PASSCODE,false)	11
52736	prefs.getBoolean(UxArgument.SKIP_PASSCODE_SCREEN,false)	9
2657	prefs.getBoolean(getString(R.string.key_first_run),true)	34
13239	prefs.getInt(getString(R.string.key_previous_minor_version),0)	6
13811	prefs.getString(UxArgument.PASSCODE,"")	14
34197	prefs.getString(context.getString(R.string.key_default_currency),currencyCode)	7
9204	prefs.getString(context.getString(R.string.key_dropbox_access_token),null)	2
19581	prefs.getString(getString(R.string.key_default_currency),	16
9867	prefs.getString(getString(R.string.key_dropbox_access_token),null)	2
63768	prefs.getString(getString(R.string.pref_default_currency),	2
63278	prefs.getString(getString(R.string.pref_default_currency),Currency.getInstance(Locale.getDefault()).getCurrencyCode())	5
31359	prefsEditor	10
31205	prefsEditor.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry),false)	10
31017	prefsEditor.putBoolean(mAcccountsActivity.getString(R.string.key_use_double_entry),true)	5
28077	preliminar	10
28055	preliminare	7
28014	prend	6
13476	prepTest(){	3
13569	prepTestCase(){	4
38214	preparation	5
23198	prepare	13
39307	prepare.	4
42441	prepareForUpdate()	4
39268	preparePanel()	4
19573	prepareSubAccountsListFragment()	7
19965	prepareSubAccountsListFragment(){	7
13577	prepareTestCase()	11
13559	prepareTestCase(){	4
19679	prepareTransactionsListFragment()	3
19686	prepareTransactionsListFragment(){	11
39326	prepared	8
39280	prepared.	4
7336	prepend	27
48739	presence	4
37492	present	39
34326	present,the	6
62663	present,{@code	3
27761	present.	34
43351	presentation	8
44604	presentation.	4
37817	presented	8
43373	presenter	10
44121	presenter)	6
43503	presenter,but	4
44852	presenter.	4
44453	presenter.collapseItemActionView(this,item)))	4
44541	presenter.expandItemActionView(this,item)))	4
44752	presenter.flagActionItems()	4
43662	presenter.getId()	4
44109	presenter.initForMenu(mContext,this)	4
43461	presenter.onCloseMenu(this,allMenusAreClosing)	4
43568	presenter.onRestoreInstanceState(parcel)	4
43645	presenter.onSaveInstanceState()	4
43689	presenter.onSubMenuSelected(subMenu)	4
43421	presenter.updateMenuView(cleared)	4
44070	presenterStates	4
43399	presenterStates.get(id)	4
43894	presenterStates.put(id,state)	4
39272	presenters	9
44567	presenters.)	4
44904	presenting	12
44685	presenting.	4
37783	presents	8
48087	presents.	4
62624	preserve	2
42725	preserveIconSpacing	8
30759	preserveOpeningBalances	26
35946	preserved.	2
27835	preserving	7
30682	preset	10
13823	press	10
30529	press)	8
34896	pressBack()	8
1460	pressed	20
49774	pressed,	5
48908	pressed.	9
27719	pressedOrFocused	3
50316	presses	6
45251	presses.	4
49414	pressing	5
46590	pretend	4
21054	pretende	20
12859	pretty	14
59131	prettyDateText	4
30239	prettyTime	8
29854	prev	25
40732	prevFraction	8
40846	prevFraction)	8
47165	prevHeightWithoutPartialChild	4
40589	prevKeyframe	8
40821	prevKeyframe.getFloatValue()	4
40424	prevKeyframe.getFraction()	8
41028	prevKeyframe.getFraction())	4
40767	prevKeyframe.getIntValue()	4
40792	prevValue	4
40595	prevValue)	4
40844	prevValue))	4
9046	prevent	23
43484	preventEdgeOffset	4
28371	preventFirstRunDialogs(Context	20
34994	preventFirstRunDialogs(GnuCashApplication.getAppContext())	2
28390	preventFirstRunDialogs(context)	4
28353	preventFirstRunDialogs(getInstrumentation().getTargetContext())	18
33244	prevents	22
82	preview	23
420	previous	121
51314	previousAccountId	3
35951	previousAccountType	5
6607	previousAccountType.hasDebitNormalBalance()){	5
6589	previousAccountType.hasInvertedCredit()){	6
19064	previousAccountUid	5
57249	previousExecutionCount	4
13729	previousLastRun	8
13480	previousMinor	6
13447	previousMinor){	6
6576	previousTimestamp	12
7258	previously	64
48985	previouslyFocusedRect)	9
8011	price	62
14410	price)	15
59802	price.getCommodityUID())	5
59826	price.getCurrencyUID())	5
59751	price.getDate().toString())	5
59853	price.getSource())	5
59756	price.getType())	5
14470	price.getValueDenom())	7
14564	price.getValueNum())	7
23784	price.reduce()	8
12221	price.second	17
23827	price.setDate(Timestamp.valueOf(dateString))	9
52551	price.setDate(TimestampHelper.getTimestampForUtcString(dateString))	5
52519	price.setDate(TimestampHelper.getTimestampFromUtcString(dateString))	4
23993	price.setSource(Price.SOURCE_USER)	11
23716	price.setSource(source)	12
23855	price.setType(type)	12
54366	price.setValueDenom(100)	2
23801	price.setValueDenom(Integer.parseInt(valueDenom))	7
52354	price.setValueDenom(denominator	2
12888	price.setValueDenom(denominator)	3
23840	price.setValueDenom(mOriginAmount.getNumerator()	8
58552	price.setValueDenom(pricePair.second)	2
23696	price.setValueDenom(rate.getDenominator())	8
24024	price.setValueDenom(valueDenom)	4
54469	price.setValueNum(134)	2
23593	price.setValueNum(Integer.parseInt(valueNum))	7
23736	price.setValueNum(mConvertedAmount.getNumerator()	8
52091	price.setValueNum(numerator	2
12673	price.setValueNum(numerator)	3
58572	price.setValueNum(pricePair.first)	2
23850	price.setValueNum(rate.getNumerator())	8
23824	price.setValueNum(valueNum)	9
12934	price.toString()	3
13983	price1	4
54322	price1.setValueDenom(100)	2
13865	price1.setValueNum(187)	4
54383	price2	2
54180	price2.setValueDenom(100)	2
54190	price2.setValueNum(190)	2
23866	priceCount	7
8176	pricePair	9
58545	pricePair.second	6
23852	prices	30
7681	pricesDbAdapter	22
23773	pricesDbAdapter.addRecord(price)	13
52116	pricesDbAdapter.addRecord(price,DatabaseAdapter.UpdateMethod.insert)	2
54223	pricesDbAdapter.addRecord(price1)	2
54422	pricesDbAdapter.addRecord(price2)	2
54484	pricesDbAdapter.getAllRecords().get(0)	2
8228	pricesDbAdapter.getPrice(commodityUID,currencyUID)	17
13287	pricesDbAdapter.getRecord(price.getUID())	4
7763	prima	41
29234	prima.\n\nPer	4
24929	primarily	11
25158	primary	65
31728	primaryCode	4
31811	primaryCode)	14
26885	primaryCode))	16
26899	primaryCode,	33
31815	primaryCode,int[]	17
9596	primaryText	6
63938	primaryText.setTextSize(18)	3
54697	primaryTextView	10
54710	primaryTextView.setText(params.getExportFormat().name()	7
26415	prime	11
59488	primeiro\n\nPara	11
18261	primero	11
41054	primitive	12
27919	principal\n	6
16128	principale</string>	20
57586	principles\n	5
4856	printable	10
13173	prints	20
20755	prio</string>	14
29706	prio]]></string>	13
13744	prior	30
58536	priority:<ul>	2
1523	private	394
22204	pro	11
32740	probably	14
7853	problem	14
56356	problem</string>	6
16029	problemas</string>	42
17194	problemen	11
11913	problemer</string>	19
28059	problemi	5
29282	problemi</string>	8
41705	problems	8
10597	problems</string>	84
11467	problmes</string>	3
55843	procedere?</string>	2
28856	procedimento	14
8924	procedure	9
21286	proceed	25
38570	proceed.	4
2931	proceed?</string>	93
6079	proceeding!	35
41692	proceeds	4
56380	procent</string>	2
22947	procenty</string>	15
3327	proces	45
1756	proceso	115
41841	process	19
982	process!	140
1238	process!</str	91
14974	process!</string>	36
38553	process.	8
57273	processScheduledActions(List<ScheduledAction>	14
51463	processScheduledActions(scheduledActions,db)	6
29982	processed	37
40540	processed.	8
31450	processedSplitUIDs	7
31171	processedSplitUIDs.add(split.getUID())	5
31456	processedSplitUIDs.contains(split.getUID()))	5
42055	processes	6
40201	processing	24
48668	processing,etc.</p>	4
21825	processing.	7
11009	processo	83
5102	processo!	6
10473	processus!	11
11962	processus!</string>	7
17416	procesu!</string>	18
11211	prochain	21
25725	produce	9
20383	produced	26
31602	product	28
52748	product,an	10
58660	productFlavors	7
8793	production	26
59405	production)	2
51063	production,only	11
62119	production.	3
10214	produite	23
22422	produt	7
37161	profile	4
20273	progenitora</string>	16
29438	progettato	6
6439	program	37
59170	program,	6
20893	programa	24
2791	programaci&#243	10
15491	programacin	11
15663	programacin</string>	15
3834	programadas	19
2602	programadas</string>	13
25666	programadas\n	13
20990	programadores	21
3768	programados</string>	11
2825	programao	19
5551	programao</string>	6
29250	programma	4
44941	programmatically	9
11311	programmes\n	9
13774	programs	14
21704	programstopprapporter</string>	6
29618	programu</string>	3
15158	programvare	39
21190	programvare,borsett	11
3820	progress	58
38329	progress)	16
47179	progress,between	4
46806	progress,boolean	4
47509	progress,such	4
47419	progress,you	4
38330	progress.	8
40318	progress.setIndeterminate(true)	4
38929	progress:	12
23097	progressBar	8
23065	progressBar.setVisibility(View.GONE)	8
23168	progressBar.setVisibility(View.VISIBLE)	8
3583	progressDialog	19
19065	progressDialog.dismiss()	17
18861	progressDialog.isShowing())	12
28487	progressDialog.setIndeterminate(true)	14
33960	progressDialog.setMessage("Backing	4
34030	progressDialog.setMessage("Restoring	4
34087	progressDialog.setMessage("Upgrading	4
28522	progressDialog.setProgressNumberFormat(null)	9
28327	progressDialog.setProgressPercentFormat(null)	9
28267	progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL)	14
28291	progressDialog.setTitle(R.string.title_progress_importing_accounts)	14
28277	progressDialog.show()	16
46677	progressDrawable	4
47356	progressed	4
27058	proguard	11
23216	proguardFiles	17
18941	project	7
54010	projectedAmount	2
20979	projectionIn	25
35328	projectionMap	5
35344	projectionMap.put(SplitEntry.COLUMN_ACCOUNT_UID,SplitEntry.TABLE_NAME	5
37562	prompt	13
47672	prompt)	4
47794	promptId	4
47780	promptId)	4
13241	prompting	17
10208	proof-read	85
6870	propagate	21
47140	propagated	4
5259	proper	34
1598	properly	102
30571	properties	39
62847	properties,	4
41484	properties,otherwise	7
40380	properties.	5
36677	propertiesFile	4
35140	property	38
41687	property's	4
41391	property)	7
41383	property,	4
41830	property,FloatKeyframeSet	4
41831	property,IntKeyframeSet	4
41413	property,Keyframe...	4
42045	property,being	4
41659	property,float...	8
41645	property,int...	7
42317	property,that	4
41710	property-setting	4
38193	property.	15
41355	property.getName()	4
41434	property/setter/getter	4
41777	property/value	4
41354	property/values/target	8
42146	propertyMap	6
41744	propertyMap.get(mPropertyName)	6
41859	propertyMap.put(mPropertyName,mJniSetter)	5
41765	propertyMap.put(mPropertyName,setterOrGetter)	4
41467	propertyMapMap	4
42198	propertyMapMap,	4
42297	propertyMapMap.get(targetClass)	4
41789	propertyMapMap.put(targetClass,propertyMap)	4
41621	propertyName	8
41278	propertyName)	8
41252	propertyName,	4
42006	propertyName,FloatKeyframeSet	4
42143	propertyName,IntKeyframeSet	4
41604	propertyName,Keyframe...	4
41656	propertyName,TypeEvaluator	4
41452	propertyName,float...	8
41560	propertyName,int...	7
42095	propertyName.length()	4
41995	propertyName.substring(1)	4
2609	propia	28
29087	proporciona	12
40770	proportion	11
11524	propos	29
10419	propos</string>	31
10162	propre	23
23935	propres</item>	11
10146	propres</string>	21
11249	propres]]></string>	12
16138	propri	18
16427	propria	31
27937	proprie	19
27982	proseguire!	10
21939	prosent</string>	14
11759	proses	5
1386	prosessen!	56
62769	prosm	3
55822	prosseguir?</string>	2
801	protected	360
49759	protection	5
23280	provide	67
48110	provide.	4
14543	provided	111
50583	provided,append	5
12048	provided,then	5
48874	provided.	4
9312	provider	37
49718	provider's	8
42988	provider)	8
8259	provider.	20
43651	provider.hasSubMenu())	4
43886	provider.onPrepareSubMenu(subMenu)	4
42884	provider.setSubUiVisibilityListener(this)	4
50150	providers.	5
33357	provides	49
18947	providing	8
44522	proxied	4
57200	proxies	6
42675	proxy	17
4819	prpria	6
15864	prueba</item>	14
49350	pruneCount	4
49356	pruneExcessiveHistoricalRecordsLocked()	5
49627	prunedRecord	4
48942	prunedRecord)	4
11869	prvues</string>	14
22983	przenie	6
17310	przeniesione	13
17232	przetranferowa	10
64049	przetransferowa	2
17843	przypisna	9
17658	przywrci</string>	22
16373	pu	24
304	public	395
60446	publishResults(CharSequence	3
26488	published	18
49366	publishing	4
34454	pudo	9
11994	puede	46
15719	pueden	39
10362	puissiez	20
45715	pull	4
47708	pulling	4
2227	pulse	15
41894	pulse.	4
15131	pund</item>	24
26296	pure	4
50152	purely	5
48314	purge	4
29203	purgeDirectory(File	8
63667	purgeDirectory(file)	3
29317	purgeDirectory(mCacheDir)	8
27523	purple	3
11512	purpose	15
51495	purpose,we	4
57876	purposes	9
58502	purposes"	6
27610	purposes.	3
43310	push	12
55052	pushbackstream	3
43488	pushed	4
46622	pushing	4
5406	put	50
58969	put("AUD","Australian	2
59031	put("BRL","Brazilian	2
58973	put("CAD","Canadian	2
58974	put("CHF","Swiss	2
59044	put("CLP","Chilean	2
59074	put("CNY","Chinese	2
58945	put("CZK","Czech	2
59009	put("DKK","Danish	2
58972	put("EUR","Euro")	2
58982	put("FJD","Fijian	2
58986	put("GBP","British	2
58964	put("HKD","Hong	2
58949	put("HNL","Honduran	2
59066	put("HUF","Hungarian	2
58942	put("IDR","Indonesian	2
59032	put("ILS","Israeli	2
59022	put("INR","Indian	2
59040	put("ISK","Iceland	2
59014	put("JPY","Japanese	2
59049	put("KRW","Korean	2
58966	put("LVL","Latvian	2
59004	put("MXN","Mexican	2
59057	put("MYR","Malaysian	2
59013	put("NOK","Norwegian	2
58938	put("NZD","New	2
58952	put("PHP","Philippine	2
58977	put("PKR","Pakistan	2
58983	put("PLN","Polish	2
59000	put("RUB","Russion	2
58998	put("SEK","Swedish	2
58967	put("SGD","Singapore	2
58980	put("THB","Thai	2
59045	put("TRY","Turkish	2
58995	put("TWD","New	2
58965	put("USD","US	2
59002	put("XAF","Central	2
58960	put("ZAR","South	2
46298	put(int	4
20190	putting	13
41475	pvh	4
41654	pvh.getPropertyName()	4
41203	pvh.mKeyframeSet	4
41612	pvh.mKeyframeSet.mKeyframes	4
41557	pvh.mValueType	4
41429	pvh.setEvaluator(evaluator)	4
41497	pvh.setObjectValues(values)	4
22059	pvodu	5
32576	q	13
32945	q.substring(1)	6
52125	qName,	5
61444	qName,Attributes	6
7043	qif	10
6603	qif)	13
20875	qif,split	17
30979	qifBuffer	8
7262	qifBuffer.append(account.toQIF(mExportAll)	5
6920	qifBuffer.append(account.toQIF(mExportAll,mContext)	6
30984	qifBuffer.append(account.toQIF(mParameters.shouldExportAllTransactions(),exportedTransactions)	5
31316	qifBuffer.toString()	8
6536	qifExporter	9
7210	qifExporter.generateQIF()	9
52173	qifRadioButton	11
51430	qifRadioButton.performClick()	8
52286	qifRadioButton.setChecked(defaultExportFormat.equalsIgnoreCase(ExportFormat.QIF.name()))	8
7345	qifRadioButton.setOnClickListener(clickListener)	13
62901	qtyCurrency	4
33498	qtyCurrencyCode	10
34096	qtyDenom	11
34122	qtyFractionDigits	5
33941	qtyNum	11
2764	qualified	76
11120	qualifiedAccountName	2
10933	qualifiedAccountName.setCompoundDrawablesWithIntrinsicBounds(0,0,0,0)	2
1044	qualifiedName)	105
30538	qualifiedName,Attributes	17
38066	qualifier	4
39556	qualifiers	4
25161	quality	3
10885	qualquer	14
60015	qualsevol	3
55587	qualsiasi	4
22237	quan	12
6047	quando	82
63066	quantidade	3
16211	quantit	9
14820	quantitat	13
62979	quantities	4
833	quantity	82
24023	quantity"	2
61786	quantity)	3
31988	quantity,	7
51643	quantity,String	4
51657	quantity,in	7
28694	quantity.isNegative()	6
63028	quantity.multiply(pricePair.first.intValue())	4
32658	quantity</li>	6
17955	quantity="few">	20
14817	quantity="few">%d	35
17574	quantity="few">Co	18
4935	quantity="few">Every	29
55619	quantity="few">Kadch	2
17890	quantity="many">	12
14732	quantity="many">%d	28
17439	quantity="many">Co	6
14727	quantity="many">Every	12
55667	quantity="one">	2
2529	quantity="one">%d	178
10882	quantity="one">%dcompte</item>	3
17983	quantity="one"></item>	30
16472	quantity="one">Annuel</item>	5
15339	quantity="one">Anual</item>	8
59971	quantity="one">Anualment</item>	3
6405	quantity="one">Anualmente</item>	16
56264	quantity="one">Cada	2
17370	quantity="one">Co	14
17869	quantity="one">Codziennie</item>	23
16921	quantity="one">Dagelijks</item>	12
15175	quantity="one">Daglig</item>	24
55889	quantity="one">Dagligen</item>	2
5026	quantity="one">Daily</item>	100
55651	quantity="one">Denn</item>	2
5084	quantity="one">Diariamente</item>	32
15447	quantity="one">Diario</item>	22
22308	quantity="one">Diriament</item>	5
10449	quantity="one">Hebdomadaire</item>	8
21788	quantity="one">Hourly</item>	16
16815	quantity="one">Jaarlijks</item>	8
59310	quantity="one">Jhrlich</item>	7
10385	quantity="one">Journalier</item>	10
55599	quantity="one">Kadou	2
16968	quantity="one">Maandelijks</item>	8
5519	quantity="one">Mensalmente</item>	16
15403	quantity="one">Mensual</item>	8
60018	quantity="one">Mensualment</item>	3
11778	quantity="one">Mensuel</item>	8
55850	quantity="one">Mnadsvis</item>	2
15046	quantity="one">Mnedlig</item>	17
59200	quantity="one">Monatlich</item>	4
5094	quantity="one">Monthly</item>	73
22579	quantity="one">Ogni	12
55614	quantity="one">Por	2
10689	quantity="one">Quotidien</item>	5
15839	quantity="one">Semanal</item>	8
5332	quantity="one">Semanalmente</item>	16
60043	quantity="one">Setmanalment</item>	3
55613	quantity="one">Tdn</item>	2
22243	quantity="one">Tglich</item>	13
56280	quantity="one">Todas	2
15023	quantity="one">Ukentlig</item>	17
56165	quantity="one">Varje	2
55982	quantity="one">Veckovis</item>	2
59245	quantity="one">Wchentlich</item>	4
5238	quantity="one">Weekly</item>	73
16508	quantity="one">Wekelijks</item>	8
5905	quantity="one">Yearly</item>	73
15126	quantity="one">rlig</item>	17
56427	quantity="one">rligen</item>	2
12336	quantity="other">	24
3262	quantity="other">%d	192
12119	quantity="other">%d</item>	17
10891	quantity="other">%dcomptes</item>	3
6091	quantity="other">A	8
59297	quantity="other">Alle	7
3779	quantity="other">Cada	33
28681	quantity="other">Co	11
16899	quantity="other">Elke	12
5146	quantity="other">Every	120
14941	quantity="other">Hver	24
15083	quantity="other">Hvert	17
59228	quantity="other">Jede	4
22445	quantity="other">Jeden	13
59234	quantity="other">Jenden	4
55688	quantity="other">Kadch	2
58656	quantity="other">Kade	2
22561	quantity="other">Ogni	10
22590	quantity="other">Setiap	5
20827	quantity="other">Todas	15
20741	quantity="other">Todos	22
11479	quantity="other">Tous	12
10530	quantity="other">Toutes	3
56051	quantity="other">Var	2
56054	quantity="other">Varje	2
14845	quantity="two">%d	10
14847	quantity="two">Every	9
14759	quantity="zero">%d	10
14683	quantity="zero">Every	12
31977	quantity?")	7
33270	quantityCurrencyCode&gt	5
33448	quantityDenom	10
33283	quantityDenom&gt	5
20952	quantityNode	9
20957	quantityNode.appendChild(doc.createTextNode(GncXmlHelper.formatMoney(this)))	9
33476	quantityNum	10
33459	quantityNum&gt	5
57043	quantity_denom	6
57004	quantity_denom)	7
57101	quantity_num	6
726	quarter	29
1839	que	197
15644	quel	8
16129	quelques	7
62406	queniano</item>	6
20650	quer	25
21432	queries	22
49808	queries,false	5
48936	queries/launching	5
18618	query	67
49344	query)	13
50553	query,	5
49134	query,boolean	5
50104	query,either	5
50584	query,int	5
50109	query,or	5
50280	query,restore	5
49347	query.	17
50108	query.length())	5
38164	query</string>	5
26880	queryBuffer	5
20732	queryBuilder	25
35284	queryBuilder.query(mDb,	5
20195	queryBuilder.query(mDb,projectionIn,null,null,null,null,sortOrder)	6
52865	queryBuilder.query(mDb,projectionIn,selection,selectionArgs,groupBy,null,sortOrder,limit)	3
35533	queryBuilder.query(mDb,projectionIn,selection,selectionArgs,null,null,sortOrder)	12
20969	queryBuilder.setDistinct(true)	25
35421	queryBuilder.setProjectionMap(projectionMap)	5
53218	queryBuilder.setTables(BudgetEntry.TABLE_NAME	2
33605	queryBuilder.setTables(TransactionEntry.TABLE_NAME	22
20873	queryCount	22
50200	queryExtras	5
48962	queryHint	5
50048	queryIntent	5
50008	queryIntent.setComponent(searchActivity)	5
47582	queryIntentActivityOptions().	4
42586	querySpec	4
7075	querySum	11
50465	queryText)	5
42056	querying	8
16382	questa	62
29263	queste	4
29314	questi	4
13917	question	7
45563	questions	4
16354	questo	21
41796	queue	4
42192	queue,adding	4
46787	queue,which	4
42588	queue.	4
39143	queuing	4
23582	qui	19
58731	quick	3
4382	quickly	20
46699	quickly.	7
59494	quido</string>	6
3908	quiere	30
12582	quieres	15
16487	quindi	26
29384	quotazioni</string>	2
61320	quote	3
28782	quote"/>	12
2803	quote</string>	86
36304	quoteFlag	15
36154	quoteFlag)	10
29027	quotes	10
36057	quotient	11
43259	qwerty	12
43606	qwerty-accessible.	4
4827	r	101
18298	r&#225	6
64402	r)	1
42726	r,View	4
45615	r,int	11
42680	r.bottom	4
44867	r.getDrawable(iconRes)	4
50959	r.getDrawable(id)	5
50979	r.getIdentifier(path.get(1),path.get(0),authority)	5
44390	r.getText(titleRes)	4
42487	r.left	4
42669	r.left)	4
54500	r.matches("[0-9]+\\.[a-z]"))	4
43060	r.offset(view.getLeft(),view.getTop())	4
54441	r.replaceAll("E[0-9]",SUFFIX[Character.getNumericValue(r.charAt(r.length()	4
42403	r.right	4
64396	r.run()	1
42420	r.set(0,0,w,h)	4
47435	r.setup(id,progress,fromUser)	4
54192	r.substring(0,r.length()	4
54208	r.substring(r.length()	4
42902	r.top	4
43304	r.top)	4
14939	r</item>	19
20641	r</string>	19
15390	rabes	14
49716	race	6
55957	radera	2
56024	raderades</string>	2
56328	raderar	2
11426	raderas	8
56397	raderas!</string>	2
29727	raderas</string>	5
56325	raderat	2
56234	raderats!</string>	2
56132	raderats</string>	2
23323	radering</string>	9
23477	radialTimePickerDialog,int	5
37366	radio	8
63241	radioClickListener	3
47985	raise	4
23968	raised	12
16026	ral</string>	19
17848	ramach	18
26405	random	8
33389	random-account	10
1568	range	52
56529	range")	3
12988	range&#8230	66
18613	range.	7
46981	range.</p>	4
1296	range</item>	52
55474	range</p>	5
7990	rangeFragment	9
56546	rangeFragment.show(getSupportFragmentManager(),"range_dialog")	3
1555	rangeInterval	4
1736	rangeInterval)	4
1158	ranges	14
49132	rank	4
49411	ranked.	4
17536	raporctach</string>	11
23012	raportach</string>	6
25817	raportowania	5
17689	raportowanie	8
17610	raportu</string>	15
17626	raporty	8
11237	rapport	21
16762	rapporten</string>	7
14966	rapportene</string>	11
15065	rapporter</string>	23
56081	rapportera	2
10815	rapportere	19
17145	rapporteringsmogelijkheden\n	6
16429	rapports	7
10749	rapports</string>	17
27996	rarchie	9
28087	rask	4
29796	raskt	14
22624	rata-rata</string>	7
3573	rate	121
29169	rate"/>	12
58599	rate.	2
3612	rate</string>	104
15359	rate</string>-	1
35164	rateAppConfig	17
23714	rateDecimal	8
1211	rather	49
48633	rather,it	4
9184	rating	19
30162	ratio	14
30226	ratio)	8
47383	ratio.	4
16005	ration	13
27977	ration\n	6
34001	raw	4
62641	rawDeleteQuery	2
16469	rcente	10
23933	rcents,favoris	5
16134	rcents</string>	7
4092	rckgngig	13
34739	rcurrence	5
16027	rcurrente	14
10198	rcurrente</string>	3
23358	rcurrentes	11
23433	rcurrentes</string>	5
15863	rdoba	13
15993	re	14
57726	re)	2
52113	re-added</p>	7
43839	re-bound	4
27094	re-enable	33
53033	re-implement	4
41187	re-initialization	8
38343	re-initialized	4
45577	re-layout	4
46173	re-measuring	4
52163	re-save	6
44364	re-set	5
40482	re-sort	4
1768	re-use	9
41428	reach	16
40565	reached	19
60309	reached</p>	3
48660	reachedEndOfMenu	4
41896	reaches	8
8416	read	57
41812	read-only	10
14589	read-only.	19
48433	read.	9
35299	read/write	6
48711	readGroup(AttributeSet	4
49618	readHistoricalData()	5
48697	readItem(AttributeSet	5
49299	readRecord	4
49568	readRecord.toString())	4
48963	readRecords	4
48989	readRecords.add(readRecord)	4
49068	readRecords.size()	4
44294	readable	8
24727	readding	6
2350	reader	7
3594	reader.close()	5
7900	reader.parse(inputSource)	3
2815	reader.readLine())	5
7778	reader.setContentHandler(handler)	3
2903	reading	20
14463	readmeFile	6
48627	reads	4
40503	ready	20
41759	readyAnims	4
42199	readyAnims.add(anim)	4
42182	readyAnims.clear()	4
41939	readyAnims.get(i)	4
42135	readyAnims.size()	4
40984	real	17
48232	realOwner	5
48294	realOwner)	5
48468	realOwner,String	5
48673	realOwner.getClass()	5
29845	realizados,los	10
20453	really	15
5404	reason	17
24573	reason,invalid	5
25572	reason,return	3
4940	reason,the	12
34877	reason,this	14
5357	reason,use	8
42624	reasonable	8
48470	reasons,menu	4
54309	reasons.	2
27697	reassign	5
62596	reassignDescendantAccounts(@NonNull	5
24155	reassignParent(@NonNull	4
24189	reassignParent(String	13
27732	reassigned	5
3138	rebooted"/>	8
35000	rec	4
62081	recalculateCutOffPage()	3
22897	receber	22
7064	receive	118
8901	received	45
55390	received")	6
8903	receiver	17
40853	receives	23
38965	receiving	8
3416	recent	180
18351	recent,favorite	17
29576	recent</string>	5
7068	recentAccountUIDs	11
27817	recentAccountUIDs.append("'"	8
27811	recentAccountUIDs.append(")")	8
27822	recentAccountUIDs.append(",")	8
27874	recentAccountUIDs.toString(),	8
6987	recentTxCursor	11
27855	recentTxCursor.close()	8
6830	recentTxCursor.getString(recentTxCursor.getColumnIndexOrThrow(DatabaseHelper.KEY_ACCOUNT_UID))	8
35370	recentTxCursor.getString(recentTxCursor.getColumnIndexOrThrow(SplitEntry.COLUMN_ACCOUNT_UID))	5
4692	recente	16
20253	recente</string>	28
54993	recentes</string>	17
27901	recenti,favoriti	5
24374	recently	24
60066	recents</string>	3
11355	recevoir	7
21412	recibir	29
25815	reciente	7
56348	reciente</string>	2
18083	recientes,favoritos	6
3419	recientes</string>	18
118	recoge	115
49869	recognizer,and	5
11018	recolhidas	83
35980	recommended	3
18495	recompute	14
23196	reconcile	7
53338	reconcileDate	7
53697	reconcileDate)	2
53318	reconcileState	7
53596	reconcileState)	2
10234	reconciled	18
53313	reconciled,add	2
53408	reconciled,{@code	2
53680	reconciled</li>	2
52966	reconciled_date	2
53112	reconciled_state	2
53386	reconciliation	2
40790	reconstruct	4
2160	record	196
49035	record,add	4
51494	record,but	5
49152	record,persist	4
49053	record,read	4
48340	record.	16
49177	record.toString())	4
49170	recordCount	4
30713	recordId	5
20362	recordId,	6
24353	recordId,@NonNull	4
20155	recordId,String	8
24364	recordId,null)	5
51844	recordUID	7
25404	recordUID,	5
51752	recordUID,@NonNull	7
1007	recorded	47
11429	recording	107
2763	records	112
49227	records,	4
14230	records,returning	6
62649	records,use	3
18985	records.	15
49334	records.")	4
49188	records.remove(0)	4
49247	records.size()	4
35342	recordsTouched	5
4714	recorrente	19
23008	recorrente</string>	16
4060	recorrentes	22
4882	recorrncia	6
33675	recreate	7
38238	recreated	8
49351	recrod	4
42494	rectangle	8
11889	recueillie	7
1784	recueillis	75
20216	recuperada!</string>	18
31292	recur	7
2642	recurrence	137
3719	recurrence)	20
53387	recurrence){	2
35013	recurrence.	17
53003	recurrence.getPeriodStart().getTime()	2
7732	recurrence.getPeriodType()	5
34897	recurrence.setByDay(byDay)	5
9062	recurrence.setByDay(parseByDay(eventRecurrence.byday))	11
55677	recurrence.setByDays(Arrays.asList(Calendar.MONDAY,Calendar.THURSDAY))	3
55609	recurrence.setByDays(Collections.<Integer>emptyList())	2
13771	recurrence.setByDays(Collections.singletonList(Calendar.FRIDAY))	3
13140	recurrence.setByDays(Collections.singletonList(Calendar.MONDAY))	3
13254	recurrence.setByDays(Collections.singletonList(Calendar.WEDNESDAY))	4
35098	recurrence.setByDays(parseByDay(eventRecurrence.byday))	4
35106	recurrence.setByDays(stringToByDays(byDays))	3
7419	recurrence.setMultiplier((int)	3
14014	recurrence.setMultiplier(1)	3
10060	recurrence.setMultiplier(2)	7
9608	recurrence.setMultiplier(interval)	3
9124	recurrence.setMultiplier(ordinal)	3
9900	recurrence.setMultiplier(result)	5
54231	recurrence.setPeriodEnd(3)	5
8437	recurrence.setPeriodEnd(Timestamp.valueOf(periodEnd))	8
53727	recurrence.setPeriodEnd(eventRecurrence.count)	2
8008	recurrence.setPeriodEnd(new	16
8083	recurrence.setPeriodStart(Timestamp.valueOf(periodStart))	8
8143	recurrence.setPeriodStart(new	33
52139	recurrence.setUID(recurrenceUID)	4
18136	recurrenceAdapter	13
18079	recurrenceAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	13
32861	recurrenceDbAdapter	14
63432	recurrenceDbAdapter)	4
63191	recurrenceDbAdapter){	7
52144	recurrenceDbAdapter.addRecord(recurrence)	4
52181	recurrenceDbAdapter.addRecord(recurrence,UpdateMethod.update)	2
53316	recurrenceDbAdapter.getAttribute(scheduledAction.getUID(),ScheduledActionEntry.COLUMN_RECURRENCE_UID)	5
18108	recurrenceId	5
18193	recurrenceId)	13
18177	recurrenceIndex	10
52259	recurrenceList	4
52102	recurrenceList.add(budget.getRecurrence())	4
52162	recurrenceList.add(scheduledAction.getRecurrence())	4
21029	recurrenceNode	11
20721	recurrenceNode.appendChild(doc.createTextNode(String.valueOf(mRecurrencePeriod)))	9
18509	recurrenceOption	11
18008	recurrenceOptions	13
18263	recurrenceOptions)	11
34606	recurrenceOptionsView	10
51387	recurrenceOptionsView.setVisibility(View.GONE)	12
25056	recurrenceOptionsView.setVisibility(View.VISIBLE)	22
18043	recurrencePeriod	20
18116	recurrencePeriodMillis	24
18418	recurrencePeriodMillis,recurringPendingIntent)	13
18707	recurrencePeriods	10
18780	recurrencePeriods)	7
53791	recurrenceRule	5
57415	recurrenceRule,	3
54016	recurrenceRule,OnRecurrenceSetListener	5
54076	recurrenceRuleString	5
53924	recurrenceSetListener	5
53980	recurrenceSetListener){	5
4256	recurrenceStartTime	4
19186	recurrenceStrings	10
18925	recurrenceStrings[index]	5
53165	recurrenceUID	5
20044	recurrence_period	7
7927	recurrences	26
52187	recurrences,they	4
53298	recurrences</li>	6
25513	recurrencia	6
60070	recurrent	3
22104	recurrent</string>	8
15793	recurrente	11
3764	recurrente</string>	13
11269	recurrentes	23
3851	recurring	230
18523	recurringPendingIntent	21
18085	recurringPendingIntent.cancel()	7
2912	recurringTransaction	22
20550	recurringTransaction)	17
20372	recurringTransaction.getRecurrencePeriod()	8
21116	recurringTransaction.setRecurrencePeriod(RecurrenceParser.DAY_MILLIS)	3
18212	recurringTransaction.setRecurrencePeriod(recurrencePeriodMillis)	8
2605	recurringTransaction.setTemplate(true)	4
18219	recurringTransactionId	19
18541	recurringTransactionsFragment	6
18283	recurringTransactionsFragment,"fragment_recurring_transactions")	9
50956	recurringTransactions_shouldHaveScheduledActionUID(){	18
25698	recurringTrxn	23
25603	recurringTrxn.setCreatedTimestamp(new	12
59952	recurringTrxn.setScheduledActionUID(scheduledAction.getUID())	7
25488	recurringTrxn.setTime(System.currentTimeMillis())	4
25728	recurringTrxn.setTime(transactionTime)	20
52510	recursiveDeleteAccount(long	7
24280	recursiveDestructiveDelete(long	18
27696	recursiveDestructiveDelete(subAccountId)	6
51509	recursiveMove(File	5
63861	recursiveMove(file,target)	2
63886	recursiveMove(mSource,mDestination)	2
46954	recursively	4
48520	recursively.	4
45836	recycleAllViews()	8
46282	recycleBin	4
46132	recycleBin.put(index,v)	4
43597	recycled.	8
965	recycler	15
46134	recycler.	4
23571	red	13
6584	red)	6
26212	redistribute	18
22887	rednich</string>	6
25316	redniej</string>	9
35656	reduce	13
23694	reduce()	8
13839	reduced	2
34971	redundant	8
18309	reemplazar	11
34222	reenter	7
38966	ref	32
44082	ref.get()	7
19363	refactor	8
48229	refactored	4
38608	refer	19
33141	reference	34
38372	reference">	21
48139	reference.	4
41055	referenced	8
18482	references	77
18267	referencia	6
15671	referencia</string>	11
34744	referencing	9
38780	referring	4
50350	refine.	5
50440	refineWhat	5
50301	refineWhat)	5
37080	refinement	12
38017	reflect	12
39729	reflected	8
41563	reflection	12
42012	reflection"	5
57712	reflectively.",cnfe)	2
57722	reflectively.",iae)	2
57706	reflectively.",ite)	2
57715	reflectively.",mnfe)	2
57695	reflectively.",re)	2
57687	reflectively.",se)	2
57667	reflectivelyDisableAnimation(float	2
18696	reflects	9
50116	refocusing	5
13356	refresh	26
19930	refresh(((TransactionsActivity)	7
315	refresh()	116
1216	refresh(){	39
11739	refresh(String	51
19630	refresh(long	14
19541	refresh(mAccountId)	8
31187	refresh(mAccountUID)	6
13993	refreshAccountsList()	47
20026	refreshAccountsList(){	22
33483	refreshDrawableState()	3
19480	refreshList(((TransactionsActivity)getActivity()).getCurrentAccountID())	4
18210	refreshList()	55
12836	refreshList(){	39
19712	refreshList(long	18
27468	refreshPalette()	3
46957	refreshProgress(android.R.id.progress,mProgress,false)	4
46545	refreshProgress(android.R.id.progress,mProgress,fromUser)	4
46540	refreshProgress(android.R.id.secondaryProgress,mSecondaryProgress,false)	4
47097	refreshProgress(int	4
51550	refreshRecurrenceTextView(ExportFormat	5
51486	refreshRecurrenceTextView(mExportFormat)	7
13395	refreshReport()	4
13322	refreshReport(){	2
51313	refreshSelectedAccount(accountId)	5
51304	refreshSelectedAccount(long	5
51298	refreshSelectedSplitAccount(accountId)	3
51273	refreshSelectedSplitAccount(long	3
51271	refreshSelectedSplitAccount(splitAccountId)	3
13737	refreshTransactionsList()	7
13914	refreshTransactionsList(){	2
13878	refreshViews()	6
19872	refreshable	8
19700	refreshableFragment	6
19795	refreshableFragment.refresh(accountId)	6
19814	refreshed	10
50890	refreshes	8
13933	refreshing	3
58720	refuse	7
24132	regardless	25
55886	regelbundna	2
16646	regels	11
23416	regex	8
52953	register	16
63549	registerContentObserver(Cursor	2
19214	registerContentObserver(c)	19
30447	registerContentObserver(cursor)	17
48028	registerDataSetObserver(DataSetObserver	4
44588	registerDataSetObserver(new	4
52760	registerEditText(int	15
38429	registerImplementation(ActionBarSherlockCompat.class)	4
37953	registerImplementation(ActionBarSherlockNative.class)	4
38460	registerImplementation(Class<?	4
24560	registered	23
38519	registered")	4
52775	registers	13
20321	registo	23
20440	registos	16
28805	registrar	15
27925	registrare	19
26598	registratie	13
16184	registrazione	21
21857	registrering	6
3073	registro	32
48735	registry	4
48271	registry.	4
29895	regnskapsfrer	12
2733	regnskapsprogrammet	89
55791	regolari	2
26817	regular	32
27175	regular-ordered	3
55701	regulares	2
35509	reimplement	6
20135	reimporting	6
52036	rejestrowanie	9
12423	rekening	25
12476	rekening</string>	33
12577	rekeningen	38
17164	rekeningen</string>	16
16643	rekeningnaam	12
16680	rekeningsaldo	7
16857	rekeningstructuur	16
26393	rekeningstructuur.\n\nAls	6
16657	rekeningstructuur</string>	17
4121	relao	13
20172	relat&#243	14
35617	relate	2
3688	related	49
47613	relation	4
40684	relationship	4
40356	relationships	5
40948	relationships.	4
46218	relative	4
60765	relatives	3
54894	relatrios	13
5951	relatrios</string>	15
39715	relayout	8
23104	release	28
36604	release.	11
2425	releaseTitle	11
3060	releaseTitle.append("	9
31179	released	1
62179	releases	3
48676	relevance	4
19844	relevant	37
30531	reliable	12
57972	reliable,investigate	3
48651	relies	10
10212	relire	3
18838	reloading	14
26681	reloads	4
23983	rely	25
37849	remain	12
43991	remaining	7
11691	remains	19
6650	remember	21
46291	rememberSyncState()	4
34873	remote	12
57381	remotePath	8
27118	removal	10
43401	removals.	4
1383	remove	86
50942	remove!!	11
40632	removeAllListeners()	4
39184	removeAllTabs()	12
41882	removeAllUpdateListeners()	4
45463	removeAllViews()	8
46395	removeAllViewsInLayout()	8
47266	removeCallbacks(mAccessibilityEventSender)	4
46736	removeCallbacks(mRefreshProgressRunnable)	4
46271	removeCallbacks(mSelectionNotifier)	4
50219	removeCallbacks(mShowImeRunnable)	5
45466	removeCallbacks(mTabSelector)	8
50115	removeCallbacks(mUpdateDrawableStateRunnable)	5
46113	removeDetachedView(view,true)	4
3076	removeFirstRunFlag()	29
2403	removeFirstRunFlag(){	14
43979	removeGroup(group)	4
42611	removeGroup(groupId)	4
42995	removeGroup(int	16
42871	removeItem(int	16
43396	removeItemAt(int	4
44179	removeItemAtInt(findItemIndex(id),true)	4
43437	removeItemAtInt(i,false)	4
43765	removeItemAtInt(index,true)	4
43558	removeItemAtInt(int	4
9795	removeItemBtn	7
53978	removeItemBtn.setOnClickListener(new	5
40613	removeListener(AnimatorListener	4
43870	removeMenuPresenter(MenuPresenter	4
43119	removeOnAttachStateChangeListener(View_OnAttachStateChangeListener	4
39046	removeOnMenuVisibilityListener(OnMenuVisibilityListener	8
9814	removeSplitButton	22
31978	removeSplitButton.setEnabled(b)	9
13958	removeSplitButton.setOnClickListener(new	17
13852	removeSplitItemViews()	3
13777	removeSplitItemViews(){	6
39220	removeTab(Tab	8
38771	removeTabAt(int	12
39599	removeTabAt(tab.getPosition())	4
51200	removeTransaction(@NonNull	4
51192	removeTransaction(Transaction	6
41747	removeUpdateListener(AnimatorUpdateListener	4
46468	removeView(View	4
45700	removeView(mCustomNavView)	4
45234	removeView(mCustomView)	8
45818	removeView(mExpandedActionView)	4
46498	removeView(mExpandedHomeLayout)	4
45173	removeView(mListNavLayout)	4
45231	removeView(mTabContainer)	4
47675	removeView(mTabLayout)	4
45755	removeView(mTabScrollView)	4
48006	removeView(mTabSpinner)	4
45316	removeView(mTitleLayout)	4
45977	removeViewAt(int	4
9627	removeWidgetConfiguration(final	3
9002	removed	72
35984	removed,but	2
34954	removed,the	3
38417	removed.	15
35945	removedSplitUID	8
35954	removedSplitUIDs)	8
1775	removedSplitUIDs){	41
33423	removedSplits	9
39514	removedTab	4
39893	removedTab.setPosition(-1)	4
21680	removes	25
32871	removing	26
23382	remplacer	11
9990	rename	8
55465	renaming	12
16042	rences	15
52846	render	15
6535	renderSettings()	5
33232	renderer	5
33075	renderer.setColor(COLORS[(mSeries.getItemCount()	4
12933	rendering	26
56216	renombrar	2
55736	renomear	2
15987	rente	16
38863	reopenMenu(boolean	4
39242	reopenMenu(true)	4
44217	reordering	4
2189	repeat	47
41846	repeat,or	4
41919	repeat.	4
46555	repeat</li>	4
8495	repeatBuilder	12
34950	repeatBuilder.append("	9
64141	repeatBuilder.append(",").append(context.getString(R.string.repeat_until_date,endDateString))	3
9302	repeatBuilder.toString()	12
42154	repeatCount	4
41801	repeatCount!=INFINITE),the	4
42389	repeatCount).	4
42087	repeatMode	4
3189	repeatString	31
20016	repeatStringBuilder	8
19722	repeatStringBuilder.append(event.getRepeatString()).append("\n")	8
42032	repeated	9
40414	repeated.	11
5761	repeatedly	10
4652	repeatedly</p>	3
3228	repeating	13
17051	repetitieve	11
40893	repetition	8
42193	repetition.	4
43110	repetitions	4
2257	replace	83
56606	replace()	11
61123	replace-date,by-ISO,frozen-rate	3
32312	replaceStatement	12
59146	replaceStatement.bindLong(10,account.isHidden()	4
20478	replaceStatement.bindLong(4,	7
51851	replaceStatement.bindLong(4,schedxAction.getStartTime())	6
20238	replaceStatement.bindLong(4,transaction.getTimeMillis())	15
19853	replaceStatement.bindLong(5,	13
51823	replaceStatement.bindLong(5,schedxAction.getEndTime())	6
30173	replaceStatement.bindLong(5,transaction.isExported()	13
32432	replaceStatement.bindLong(6,	9
54549	replaceStatement.bindLong(6,account.isFavorite()	5
51755	replaceStatement.bindLong(6,schedxAction.getLastRun())	6
32116	replaceStatement.bindLong(7,	5
51809	replaceStatement.bindLong(7,schedxAction.getPeriod())	6
30311	replaceStatement.bindLong(7,transaction.getRecurrencePeriod())	4
19915	replaceStatement.bindLong(8,	16
54567	replaceStatement.bindLong(8,account.isPlaceholderAccount()	5
19393	replaceStatement.bindLong(9,	11
51794	replaceStatement.bindNull(10)	6
51819	replaceStatement.bindNull(8)	8
20281	replaceStatement.bindString(1,	7
54551	replaceStatement.bindString(1,account.getUID())	8
51770	replaceStatement.bindString(1,schedxAction.getUID())	6
54546	replaceStatement.bindString(1,split.getUID())	7
20593	replaceStatement.bindString(1,transaction.getUID())	15
54518	replaceStatement.bindString(10,account.getDefaultTransferAccountUID())	7
59183	replaceStatement.bindString(10,account.getParentUID())	2
19628	replaceStatement.bindString(10,schedxAction.getTag())	11
19470	replaceStatement.bindString(11,Integer.toString(schedxAction.getNumberOfOccurences()))	5
19497	replaceStatement.bindString(11,Integer.toString(schedxAction.getTotalFrequency()))	9
59143	replaceStatement.bindString(11,account.getDefaultTransferAccountUID())	2
59125	replaceStatement.bindString(11,account.getParentUID())	4
19776	replaceStatement.bindString(12,Integer.toString(schedxAction.getExecutionCount()))	11
59174	replaceStatement.bindString(12,account.getDefaultTransferAccountUID())	4
20374	replaceStatement.bindString(2,	8
54589	replaceStatement.bindString(2,account.getName())	6
51803	replaceStatement.bindString(2,schedxAction.getActionUID())	6
54541	replaceStatement.bindString(2,split.getMemo())	8
51761	replaceStatement.bindString(2,transaction.getDescription())	13
20542	replaceStatement.bindString(3,	8
54521	replaceStatement.bindString(3,account.getAccountType().name())	6
51818	replaceStatement.bindString(3,schedxAction.getActionType().name())	6
54556	replaceStatement.bindString(3,split.getType().name())	9
51812	replaceStatement.bindString(3,transaction.getNote())	10
54574	replaceStatement.bindString(4,account.getCurrency().getCurrencyCode())	6
54531	replaceStatement.bindString(4,split.getAmount().absolute().toPlainString())	6
59553	replaceStatement.bindString(4,split.getAmount().toPlainString())	5
54586	replaceStatement.bindString(5,account.getColorHexCode())	7
54532	replaceStatement.bindString(5,split.getAccountUID())	7
59554	replaceStatement.bindString(5,split.getCreatedTimestamp().toString())	6
19998	replaceStatement.bindString(6,	13
59561	replaceStatement.bindString(6,split.getAccountUID())	6
54527	replaceStatement.bindString(6,split.getTransactionUID())	7
20783	replaceStatement.bindString(6,transaction.getCurrencyCode())	9
20028	replaceStatement.bindString(7,	16
54529	replaceStatement.bindString(7,account.getFullName())	5
59559	replaceStatement.bindString(7,split.getTransactionUID())	6
19772	replaceStatement.bindString(8,	11
57537	replaceStatement.bindString(8,transaction.getScheduledActionUID())	3
19458	replaceStatement.bindString(9,	13
59186	replaceStatement.bindString(9,account.getCreatedTimestamp().toString())	2
54547	replaceStatement.bindString(9,account.getParentUID())	4
19988	replaceStatement.clearBindings()	27
18727	replaceStatement.execute()	31
49711	replaceText(CharSequence	5
30559	replaced	41
52623	replaced.	6
58615	replacement	3
52500	replacement)	6
57773	replacement:	6
37804	replaces	27
14146	replacing	23
40974	replayed	4
46318	repopulated	4
299	report	125
39274	report!")	4
32078	report,make	3
32059	report.	3
13325	report</string>	10
32300	reportFragment	6
60166	reportName	3
32169	reportName)	3
14001	reportSuccess()	12
32086	reportType	6
32418	reportType)	6
32445	reportType,String	3
16000	reportar	26
35349	reporte	22
1283	reporting	100
62	reports	59
13656	reports")	2
32288	reports,extend	3
3877	reports</string>	130
6599	reportsActivity	22
7127	reportsActivity.getAccountType()	16
6850	reportsActivity.getReportEndTime()	16
32299	reportsActivity.getReportPeriodEnd()	3
25811	reportsActivity.getReportPeriodStart()	6
7007	reportsActivity.getReportStartTime()	20
29767	repositories	10
35230	repositories{	6
33007	repository</name>	4
12091	represent	24
4718	representation	106
4373	represented	34
6811	representing	44
162	represents	90
54997	requerida</string>	7
55031	requerido</string>	7
3772	request	43
59190	request,we	3
49310	request.	8
39564	request.")	4
23569	requestCode	10
413	requestCode,	100
20347	requestCode,String[]	9
79	requestCode,int	81
38724	requestFeature(FEATURE_ACTION_BAR)	4
39957	requestFeature(Window.FEATURE_ACTION_BAR)	4
40308	requestFeature(Window.FEATURE_ACTION_BAR_OVERLAY)	4
39764	requestFeature(Window.FEATURE_ACTION_MODE_OVERLAY)	4
39548	requestFeature(Window.FEATURE_NO_TITLE)	4
37918	requestFeature(int	9
48866	requestFocus(int	5
43739	requestLayout()	27
20248	requestPermissions(new	9
38954	requestWindowFeature(long	4
3072	requested	58
48960	requested,submit	5
37968	requested.	12
43169	requestedItems	4
42821	requestedItems++	4
46204	requesting	4
8905	requests	14
46479	requests.	4
44823	requestsActionButton()	4
14275	require	33
1645	required	361
31725	required")	11
50418	required.	17
3880	required</string>	96
42765	requiredItems	4
42393	requiredItems++	4
24063	requires	30
32132	requiresAccountTypeOptions()	6
60144	requiresAccountTypeOptions(){	3
44886	requiresActionButton()	4
32181	requiresTimeRangeOptions()	6
60216	requiresTimeRangeOptions(){	3
20243	requiring	17
16253	requis</string>	9
24058	rer	13
31098	rerunning	14
8119	res	46
44908	res.getDimensionPixelSize(R.dimen.abs__config_prefDialogWidth))	4
50143	res.getDimensionPixelSize(R.dimen.abs__dropdownitem_icon_width)	5
49899	res.getDimensionPixelSize(R.dimen.abs__dropdownitem_text_padding_left)	5
27373	res.getDimensionPixelSize(R.dimen.color_swatch_large)	3
27527	res.getDimensionPixelSize(R.dimen.color_swatch_margins_large)	3
27271	res.getDimensionPixelSize(R.dimen.color_swatch_margins_small)	3
27607	res.getDimensionPixelSize(R.dimen.color_swatch_small)	3
43260	res.getDisplayMetrics().density)	4
46831	res.getDisplayMetrics().heightPixels	4
42941	res.getDisplayMetrics().widthPixels	4
19648	res.getQuantityString(R.plurals.label_every_x_days,mMultiplier)	8
8232	res.getQuantityString(R.plurals.label_every_x_days,mMultiplier,mMultiplier)	11
34788	res.getQuantityString(R.plurals.label_every_x_hours,mMultiplier,mMultiplier)	2
9878	res.getQuantityString(R.plurals.label_every_x_months,2,2)	6
19609	res.getQuantityString(R.plurals.label_every_x_months,mMultiplier)	6
8497	res.getQuantityString(R.plurals.label_every_x_months,mMultiplier,mMultiplier)	7
19552	res.getQuantityString(R.plurals.label_every_x_weeks,mMultiplier)	6
7831	res.getQuantityString(R.plurals.label_every_x_weeks,mMultiplier,mMultiplier)	7
19494	res.getQuantityString(R.plurals.label_every_x_years,mMultiplier)	8
8102	res.getQuantityString(R.plurals.label_every_x_years,mMultiplier,mMultiplier)	7
27388	res.getString(R.string.color_swatch_description)	3
27235	res.getString(R.string.color_swatch_description_selected)	3
28211	res.getString(R.string.repeat_x_times,4)	3
1192	res.obtainTypedArray(R.array.account_colors)	6
47336	resID	4
47117	resID)	4
38520	resId	19
38325	resId)	32
38019	resId:	4
4192	resValue	58
55454	reschedule	4
55353	rescheduleServiceAlarm()	6
55235	rescheduled	10
39276	reselected.	9
42328	reserveOverflow	8
42402	reserveOverflow(Context	5
42951	reserveOverflow(mContext)	4
42542	reserveOverflow)	8
37107	reserved	14
2589	reset	22
42797	reset()	4
48401	resetGroup()	4
46360	resetList()	8
18422	resetUID(){	10
47666	resets	4
52769	resid	13
52796	resid)	15
38856	resize	5
22657	resoconti</string>	11
26182	resoconti\n	5
22707	resoconto</string>	11
51740	resolution	7
35637	resolve	11
49530	resolveInfo	4
49597	resolveInfo)	4
49197	resolveInfoCount	4
49579	resolveInfos	4
49433	resolveInfos.get(i)	4
49214	resolveInfos.size()	4
46438	resolveSize(preferredHeight,heightMeasureSpec)	4
46473	resolveSize(preferredWidth,widthMeasureSpec)	4
46109	resolveSizeAndState(preferredHeight,heightMeasureSpec,0)	4
46154	resolveSizeAndState(preferredWidth,widthMeasureSpec,0)	4
41001	resolved	4
61861	resolvedColor	3
3918	resolves	9
23094	resource	141
36984	resource,have	4
47688	resource,whose	4
47922	resource.	9
49359	resourceId	10
49447	resourceId)	4
50770	resourceUri)	5
50740	resourceUri,Drawable	5
3545	resources	57
37383	resources.	19
49190	resources.getDimensionPixelSize(R.dimen.abs__config_prefDialogWidth))	4
50133	resources.getString(searchable.getVoiceLanguageId())	5
49909	resources.getString(searchable.getVoiceLanguageModeId())	5
50042	resources.getString(searchable.getVoicePromptTextId())	5
47895	resources/tutorials/views/hello-spinner.html">Spinner	4
31286	respect	28
60061	respected	6
13252	respective	18
1700	respectively	11
23283	respectively.	3
57998	respecto	6
46034	respects	5
20694	respond	14
45716	responding	4
6647	response	27
24432	response,be	15
44360	responsibility	4
8854	responsible	53
40378	responsible.	4
10223	ressayer</string>	12
18406	rest	33
30673	restartIntent	8
30511	restartIntent.putExtra(TransactionsListFragment.SELECTED_ACCOUNT_ID,accountRowId)	6
63406	restartIntent.putExtra(UxArgument.SELECTED_ACCOUNT_ID,accountRowId)	4
64229	restartIntent.putExtra(UxArgument.SELECTED_ACCOUNT_UID,accountUID)	2
30583	restartIntent.setAction(Intent.ACTION_VIEW)	8
46474	restarted	4
19837	restarting	10
42128	restarts	4
55299	restarts/reschedules	2
55975	restauracin	2
55847	restaurao	2
6121	restaurar</string>	67
16315	restaurer</string>	14
56050	restauro	2
49378	resting	5
13784	restore	50
32653	restore")	19
52253	restore",	5
5336	restore</string>	112
44177	restoreActionViewStates(Bundle	4
2411	restoreBackup()	30
3638	restoreDialogBuilder	9
54748	restoreDialogBuilder.create().show()	6
54739	restoreDialogBuilder.setAdapter(arrayAdapter,new	6
54741	restoreDialogBuilder.setNegativeButton(R.string.alert_dialog_cancel,	6
54772	restoreDialogBuilder.setTitle(R.string.title_select_backup_to_restore)	6
44014	restorePresenterStates(Bundle	4
50527	restoreUserQuery()	5
44310	restored.	4
32922	restores	12
31937	restoring	5
25623	restrict	23
48422	restricted	5
60540	restriction,including	3
2448	result	225
9768	result)	39
42631	result).setPresenter(this)	4
12131	result.	3
30508	result.</p>	11
28085	result.getDriveContents()	8
28124	result.getDriveFile().getDriveId())	9
51741	result.getDriveFolder().getDriveId().toString()	7
43632	result.gravity	4
43522	result.isOverflowButton	4
26365	result.setAmount(bigD)	3
56722	result.setScale(mCurrency.getDefaultFractionDigits(),BigDecimal.ROUND_HALF_EVEN)	9
26769	result.substring(0,result.length()	5
37794	result:	5
316	resultCode	18
1202	resultCode)	5
651	resultCode,	97
1695	resultCode,Intent	81
36434	resultString	23
9605	resultValue	17
60517	resultValue)	3
8805	resultValue.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID,mAppWidgetId)	17
41798	resulting	11
40348	results	28
60579	results)	3
60503	results,	3
48875	results,if	5
37630	results.	17
60527	results.count	3
60442	results.values	3
60465	results.values)	3
3551	resumed.	7
37867	resuming.	4
46643	resurrect	4
27286	ret	3
27260	ret.initialize(titleResId,colors,selectedColor,columns,size)	3
40654	retain	4
57211	retrieval	8
18167	retrieve	81
9563	retrieveAndSaveToken(){	2
20468	retrieved	73
24739	retrieves	12
1587	retrieving	50
21347	rett)</item>	10
1254	return	391
30678	return,the	11
46974	return.	8
61576	return.<br/>	5
41572	returnVal	8
1114	returned	114
36018	returned,for	4
54628	returned,to	7
24468	returned.	35
61753	returned.</p>	6
11763	returned</p>	14
46881	returnedHeight	4
9402	returning	20
7905	returns	132
38835	returns.	4
27660	reuse	10
42682	reuse.	4
43591	reused	8
49698	reusing	5
25470	rev-parse	4
58322	revaluation	8
35423	reveja	17
42104	reverse	8
41762	reverse()	4
41953	reverse.	4
41984	reverses	4
15585	revertida!	6
62100	review	3
21554	reviewItem	6
21308	reviewItem.getDisplayValue()	6
21337	reviewItem.getTitle()	6
62055	reviewItems	3
21468	reviewItems)	6
16063	revisar	26
29265	revisiona	8
28048	revisit	5
41952	rewound.	4
50087	rewrite	5
49669	rewriteQueryFromSuggestion(int	5
50076	rewriteQueryFromSuggestion(position)	5
50030	rewrites	5
49628	rewriting	5
50536	rewriting.	5
56554	rewritten	11
48552	rewritten.	4
15964	rfrence</string>	9
15313	rham	10
27858	rhs)	3
42661	ri	13
43215	ri.activityInfo.applicationInfo.packageName,	8
42479	ri.activityInfo.name))	8
43003	ri.specificIndex	8
59505	ria	6
16519	rial</item>	6
29193	ricevere	4
22806	ricezione	15
26053	ricorrente	7
22729	ricorrenti	8
19153	rid	7
55811	ridenominazione	2
14533	right	67
47676	right,	4
43987	right,int	13
49969	right-to-left	5
42466	right.	8
45134	rightOfCenter	4
60585	rights	3
16375	rimossi!!</string>	15
12685	rincian	7
11277	rincian</string>	7
42413	rintent	8
42481	rintent.setComponent(new	8
59532	rio.</string>	6
20274	rios	16
21025	rios</string>	14
22747	ripristinare</string>	17
55714	ripristino	2
55814	ripristino</string>	2
55796	risoluzioni	2
22820	riuscito</string>	19
55380	robolectric	5
17793	rodki	10
17233	rodki</string>	14
17457	rodkw</string>	8
16882	roebel</item>	6
17115	roepie</item>	6
17801	rok</item>	14
62423	romeno</item>	6
38860	room	16
6527	root	125
42908	root)	16
51217	root,so	5
40587	root.	4
41102	root.nodeDependents.get(j)	4
41062	root.nodeDependents.size()	4
8625	rootAccount	31
25411	rootAccount.getUID()	19
33034	rootAccount.setAccountType(AccountType.LIABILITY)	4
13189	rootAccount.setAccountType(AccountType.ROOT)	21
13648	rootAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE))	5
31415	rootAccount.setFullName("	4
25255	rootAccount.setFullName(ROOT_ACCOUNT_FULL_NAME)	15
13730	rootAccount.setHidden(true)	17
13309	rootAccount.setPlaceHolderFlag(true)	7
13273	rootAccount.setUID(ROOT_ACCOUNT_UID)	5
20849	rootAccount.toGncXml(document,bookNode)	6
31418	rootAccount.toGncXml(mDocument,bookNode)	5
63400	rootAccountGUID	8
63570	rootAccountID	4
63582	rootAccountID){	4
769	rootAccountUID	58
63494	rootAccountUID)	4
52101	rootAccountUID){	8
20239	rootElement	13
20145	rootElement)	17
20252	rootElement.appendChild(bookCountNode)	11
20258	rootElement.appendChild(bookNode)	11
20540	rootElement.appendChild(transactionNode)	9
20839	rootElement.setAttribute("xmlns:act",	9
20166	rootElement.setAttribute("xmlns:book",	9
20295	rootElement.setAttribute("xmlns:cd",	9
20754	rootElement.setAttribute("xmlns:cmdty",	9
20492	rootElement.setAttribute("xmlns:gnc",	9
20501	rootElement.setAttribute("xmlns:price",	9
21037	rootElement.setAttribute("xmlns:slot",	9
21093	rootElement.setAttribute("xmlns:split",	9
20463	rootElement.setAttribute("xmlns:trn",	9
21097	rootElement.setAttribute("xmlns:ts",	11
20168	rootNode	17
20151	rootNode)	19
20176	rootNode.appendChild(accountNode)	9
20565	rootNode.appendChild(splitNode)	9
63482	rootTemplateGUID	4
63517	rootTemplateUID	4
63529	rootTemplateUID)	4
24262	rootUID	28
26042	rootView	3
25985	rootView.findViewById(R.id.delete_btn).setOnClickListener(new	3
25944	rootView.findViewById(R.id.eight_btn).setOnClickListener(new	3
26081	rootView.findViewById(R.id.five_btn).setOnClickListener(new	3
25871	rootView.findViewById(R.id.four_btn).setOnClickListener(new	3
26122	rootView.findViewById(R.id.nine_btn).setOnClickListener(new	3
25929	rootView.findViewById(R.id.one_btn).setOnClickListener(new	3
25950	rootView.findViewById(R.id.passcode1)	3
26024	rootView.findViewById(R.id.passcode2)	3
26152	rootView.findViewById(R.id.passcode3)	3
25901	rootView.findViewById(R.id.passcode4)	3
26163	rootView.findViewById(R.id.seven_btn).setOnClickListener(new	3
25762	rootView.findViewById(R.id.six_btn).setOnClickListener(new	3
25834	rootView.findViewById(R.id.three_btn).setOnClickListener(new	3
26145	rootView.findViewById(R.id.two_btn).setOnClickListener(new	3
26050	rootView.findViewById(R.id.zero_btn).setOnClickListener(new	3
40571	roots	4
41099	roots.add(node)	4
40920	roots.addAll(tmpRoots)	4
41010	roots.clear()	4
40809	roots.get(i)	4
40671	roots.size()	4
34260	rotated	16
47334	rotates	4
27265	rotation	18
43202	rotations	4
12449	round	14
47199	roundedCorners	4
36237	rounding	17
55136	route	4
2636	row	88
27299	row,View	3
50024	row,get	5
29301	row,then	12
27387	row.	6
27530	row.addView(swatch)	3
27176	row.addView(swatch,0)	3
27576	row.setLayoutParams(params)	3
50081	row/column,also	5
37937	row/stacked	4
27434	rowElements	6
27221	rowElements++	3
63971	rowElements,	3
27573	rowElements,boolean	3
7249	rowId	110
7342	rowId)	90
3279	rowId){	70
26589	rowId,	24
7310	rowId,String	8
27807	rowId,boolean	7
35473	rowId,long	5
24303	rowId,null)	31
35402	rowId:	5
27677	rowIdToDelete	3
27687	rowIdToDelete,	4
27790	rowIdToDelete,long	3
19717	rowInserted	35
27124	rowMax	6
50097	rowNum	5
27382	rowNumber	3
27408	rowNumber)	3
27256	rowNumber++	3
63970	rowNumber,	3
27267	rowNumber,int	3
14590	rows	53
27852	rows,exercise	6
27427	rows.	3
27034	rowsAffected	4
17566	rozmarze</string>	20
34620	rpd	8
51426	rpd.dismiss()	5
34557	rpd.setArguments(b)	8
34552	rpd.setOnRecurrenceSetListener(ExportDialogFragment.this)	5
34560	rpd.setOnRecurrenceSetListener(ExportFormFragment.this)	5
53872	rpd.setOnRecurrenceSetListener(TransactionFormFragment.this)	3
53816	rpd.setOnRecurrenceSetListener(mRecurrenceSetListener)	2
34643	rpd.show(fm,"recurrence_picker")	7
54113	rpd.show(fm,FRAGMENT_TAG_RECURRENCE_PICKER)	3
11570	rpertoire	11
28003	rquicas\n	9
18475	rrelas	11
16020	rreur	14
2992	rrule	16
3065	rrule)	37
23688	rserv	5
23833	rserv</string>	9
15640	ruand&#233	9
15556	ruands</item>	10
21325	rubel</item>	10
21599	rubler</item>	10
59307	rugm	6
8702	rule	25
40964	rule)	4
42714	rule,but	4
20107	rule.	3
19521	ruleBuilder	16
19451	ruleBuilder.append("	16
51815	ruleBuilder.append(",")	8
64143	ruleBuilder.append(",").append(context.getString(R.string.repeat_x_times,mTotalFrequency))	3
9752	ruleBuilder.append("COUNT=").append(getCount()).append(separator)	6
26613	ruleBuilder.append("COUNT=").append(mTotalFrequency).append(separator)	3
26976	ruleBuilder.append("DTSTART	5
9354	ruleBuilder.append("FREQ=").append(mPeriodType.getFrequencyDescription()).append(separator)	8
26680	ruleBuilder.append("FREQ=").append(periodType.getFrequencyDescription()).append(separator)	5
9977	ruleBuilder.append("INTERVAL=").append(mMultiplier).append(separator)	3
8850	ruleBuilder.append("INTERVAL=").append(mPeriodType.getMultiplier()).append(separator)	8
26655	ruleBuilder.append("INTERVAL=").append(periodType.getMultiplier()).append(separator)	5
26944	ruleBuilder.append("RRULE:")	5
26692	ruleBuilder.append("UNTIL=").append(df.format(new	3
26904	ruleBuilder.append("\n")	5
9229	ruleBuilder.append(mPeriodType.getByParts(mPeriodStart.getTime())).append(separator)	8
26933	ruleBuilder.append(periodType.getByParts(mStartDate)).append(separator)	5
27040	ruleBuilder.append(startDateFormat.format(new	5
19925	ruleBuilder.toString()	16
31905	rules	19
27044	rules,but	5
15629	rumano</item>	14
21404	rumenske	10
5719	run	134
3414	run()	191
50913	run,but	4
20658	run.	16
3492	runQuery(CharSequence	25
50173	runQueryOnBackgroundThread(CharSequence	8
28850	runTestOnUiThread(new	11
28838	runner	12
19919	running	51
41771	running,	4
42310	running,then	4
40405	running.	19
41760	running?	4
61967	runningBalanceLabel	4
61977	runningBalanceLabel.setGravity(Gravity.RIGHT)	4
62020	runningBalanceLabel.setText("Running	4
61979	runningBalanceLabel.setTextSize(16)	4
4332	runs	38
40220	runtime	18
35356	runtime-->	10
58108	runtime.	6
32114	runtime.</p>	3
37906	runtimeApi	4
37941	runtimeApi)	4
59034	rupee")	2
21407	rupi</item>	10
15915	ruso</item>	14
16385	russie</string>	14
17678	rzeczy.\nAby	8
891	s	229
3230	s!</string>	14
20189	s&#227	11
16069	s&#233	19
15948	s&#251	17
13261	s)	64
18715	s){	25
23667	s,	11
928	s,int	41
38879	s.	11
15951	s.</string>	8
23929	s.contains("E")	3
40951	s.play(anim1).before(anim2)	4
40453	s.play(anim1).before(anim2).before(anim3)	4
40450	s.play(anim1).with(anim2)	4
40903	s.play(anim2).before(anim3)	4
41031	s.play(anim4).after(anim3)	4
24020	s.replace(".","").replace(",","")	2
55088	s.replace(".","").replace(",","").replaceAll("\\D*","")	2
18924	s.replaceAll(regex,"")	4
54860	s.toString()	9
14145	s.toString().equals(current))	5
35871	s.trim().replaceAll("\\D*","")	7
35875	s.trim().substring(0,1)	5
15550	s</item>	13
16037	s</string>	23
45047	sAlphaInterpolator	8
42270	sAnimationHandler	4
42318	sAnimationHandler.get()	4
41876	sAnimationHandler.set(animationHandler)	4
42233	sAnimations	4
42195	sAnimations.get()	4
42943	sAnimations.get().add(this)	4
42744	sAnimations.get().clear()	4
42577	sAnimations.get().remove(this)	4
42539	sAnimations.get().size()	4
43603	sCategoryToOrder	4
43862	sCategoryToOrder.length)	4
48233	sDataModelRegistry	4
49477	sDataModelRegistry.get(historyFileName)	4
49235	sDataModelRegistry.put(historyFileName,dataModel)	4
8944	sDbxClient	2
42127	sDefaultInterpolator	4
3334	sDefaultZero	28
41988	sDelayedAnims	4
41824	sDelayedAnims.get()	4
42689	sDelayedAnims.get().clear()	4
41881	sDelayedAnims.get().contains(this))	4
42488	sDelayedAnims.get().remove(this)	4
44218	sDeleteShortcutLabel	4
41739	sEndingAnims	4
41960	sEndingAnims.get()	4
44658	sEnterShortcutLabel	4
41533	sFloatEvaluator	8
41892	sFrameDelay	4
41292	sGetterPropertyMap	4
41657	sIntEvaluator	8
42039	sJNISetterPropertyMap	4
41730	sJNISetterPropertyMap.get(targetClass)	5
41944	sJNISetterPropertyMap.put(targetClass,propertyMap)	5
6554	sLastTitleColor	15
42163	sPendingAnimations	4
42057	sPendingAnimations,but	4
41903	sPendingAnimations.get()	4
41993	sPendingAnimations.get().add(this)	4
42809	sPendingAnimations.get().clear()	4
41778	sPendingAnimations.get().contains(this)	4
42738	sPendingAnimations.get().remove(this)	4
44466	sPrependShortcutLabel	4
42122	sReadyAnims	4
42058	sReadyAnims.get()	4
48625	sRegistryLock	4
41168	sSetterPropertyMap	4
44379	sSpaceShortcutLabel	4
42537	sX	4
42536	sY	4
10529	s\'est	23
22144	s\'exportaran	7
22416	s\'ha	7
22153	s\'han	7
7700	sa	49
11556	saat	12
48237	safe.	4
35113	safely	6
25593	safer	4
47943	said	4
56396	saker	2
11602	salah,silakan	3
5415	saldo	82
21867	saldoen	10
4973	saldos	41
54785	sale")	10
13181	sale").isEqualTo(transaction.getNote())	6
36368	sale",transaction.getDescription())	5
13467	sale",transaction.getNote())	6
27340	salmon	3
15810	salvadore&#241	8
15764	salvadoreo</item>	10
4273	salvar	29
55015	salvar!</string>	7
16153	salvare	34
22715	salvare!</string>	8
22693	salvati	9
4319	salvos	6
935	same	346
51290	same,then	5
34645	same.	9
62890	same</li>	4
64182	sameDay	3
55483	sameSelected	5
55550	sameSelected){	5
2445	samente!</string>	11
15877	samente</string>	6
16822	samenvatting</string>	6
15859	samoana</item>	14
49858	sample	4
44370	sane	4
60281	sanitizeFilename(String	3
60275	sanitizeFilename(bookName)	3
15792	santotomense</item>	14
62475	saque)</item>	6
28019	saranno	10
27882	sat1	3
27883	sat2	3
27779	sat2)	3
40560	satisfied	4
40656	satisfied,	4
41068	satisfied.	4
41074	satisfied:	4
14853	satt</string>	20
10744	satu	9
15452	saud&#237	9
15750	saud</item>	10
62383	saudita</item>	6
12020	sauvegarde	29
16126	sauvegarde</string>	14
10211	sauvegarder	33
16171	sauvegardes	9
23460	sauvgarder	11
16229	sauvgarder!</string>	11
2539	save	245
32479	save()	7
44298	save/restore	4
421	saveAccount()	82
44059	saveActionViewStates(Bundle	4
53810	saveBudget()	2
52197	saveBudget(){	8
57451	saveBudgetAmounts()	4
63162	saveButton()	3
5914	saveButtonView	7
2035	saveNewTransaction()	130
23223	saveOpeningBalance	6
43926	savePresenterStates(Bundle	4
31672	saveSplits()	31
32688	saveToDatabase()	9
2207	saved	223
51773	saved,	5
57089	saved,<code>false</code>	10
54002	saved,it	2
62877	saved,only	4
25854	saved,{@code	19
24636	saved.	5
38866	savedActionViewStates	4
10988	savedBalance	10
38037	savedInstanceState	8
1558	savedInstanceState)	302
63919	savedInstanceState.getBoolean(getString(R.string.key_use_compact_list),mUseCompactView)	7
50711	savedInstanceState.getBundle("model")	4
27206	savedInstanceState.getIntArray(KEY_COLORS)	3
39320	savedInstanceState.getParcelable(PANELS_TAG)	5
27572	savedInstanceState.getSerializable(KEY_SELECTED_COLOR)	3
23680	savedInstanceState.getSerializable(STATE_DISPLAY_MODE)	3
11081	savedInstanceState.getSerializable(STATE_REPORT_TYPE)	6
54305	savedPrice	2
63051	savedTransaction	4
8716	saves	26
764	saving	98
2515	saving!</string>	105
32836	savingBook_requiresRootAccountGUID(){	2
54227	savingBudget_shouldRequireBudgetAmount(){	2
54198	savingBudget_shouldRequireExistingAccount(){	2
54413	savingBudget_shouldRequireRecurrence(){	2
26380	savingsAcctUID	3
38229	say	8
51352	say?	3
59229	says	2
2749	sb	9
3487	sb.append(line).append("\n")	5
44448	sb.append(sDeleteShortcutLabel)	4
44760	sb.append(sEnterShortcutLabel)	4
44304	sb.append(sSpaceShortcutLabel)	4
44204	sb.append(shortcut)	4
44621	sb.toString()	4
3891	sb.toString().replaceAll("<cmdty:id>(.*?)</cmdty:id>",	4
2269	sb.toString().replaceAll("<cmdty:id>(.*?)</cmdty:id>","<cmdty:id>"	4
23941	scale	44
46801	scale,boolean	4
35188	scaleFactor)	2
35178	scaleFactors	2
42458	scaleX	4
42545	scaleX)	4
42459	scaleY	4
42893	scaleY)	4
42601	scaling	4
46491	scanned	8
48653	scenario	4
46715	scenario:	4
37926	scenarios	4
16515	schakel	3
16298	scheda	24
28064	schede	5
8500	schedule	43
2963	schedule"	4
51816	schedule",Toast.LENGTH_SHORT).show()	8
53819	schedule,e.g.	5
59956	schedule,or	3
50968	schedule.	14
53843	schedule</p>	2
2177	schedule</string>	147
62483	schedule</string>+	1
46874	scheduleAccessibilityEventSender()	4
64368	scheduleNext()	1
2674	scheduleRecurringTransaction()	16
2623	scheduleRecurringTransaction(String	23
52308	scheduleRecurringTransaction(mTransaction.getUID())	7
3267	scheduleRecurringTransaction(templateTransaction.getUID())	15
5319	scheduleStartTime	7
24325	scheduleTransaction(@NonNull	4
20719	scheduleTransaction(Transaction	17
20702	scheduleTransaction(transaction)	14
2974	scheduled	263
3040	scheduled"	6
58740	scheduled,just	5
620	scheduledAction	102
50948	scheduledAction)	28
14417	scheduledAction){	41
50950	scheduledAction,	30
50902	scheduledAction,SQLiteDatabase	18
52080	scheduledAction,UpdateMethod	2
53078	scheduledAction-specific	2
50787	scheduledAction.computeNextCountBasedScheduledExecutionTime()	8
52208	scheduledAction.computeNextRunTime()	8
51066	scheduledAction.computeNextScheduledExecutionTime()	11
53300	scheduledAction.getActionType()	8
19940	scheduledAction.getActionType().name())	8
54685	scheduledAction.getActionType().name().toLowerCase()	7
25575	scheduledAction.getActionUID()	22
64061	scheduledAction.getActionUID())	3
64133	scheduledAction.getAdvanceCreateDays())	3
64084	scheduledAction.getAdvanceNotifyDays())	3
25639	scheduledAction.getEndTime()	31
32398	scheduledAction.getEndTime())	21
32184	scheduledAction.getEventUID()	4
25648	scheduledAction.getExecutionCount()	18
50773	scheduledAction.getExecutionCount())	11
25690	scheduledAction.getLastRun()	7
59719	scheduledAction.getLastRun())	7
53558	scheduledAction.getLastRunTime()	2
51023	scheduledAction.getLastRunTime())	11
20030	scheduledAction.getNumberOfOccurences())	5
25749	scheduledAction.getPeriod()	7
32043	scheduledAction.getPeriod())	15
52348	scheduledAction.getRecurrence()	7
64108	scheduledAction.getRecurrence())	3
27096	scheduledAction.getRuleString()	8
4906	scheduledAction.getStartTime()	12
64091	scheduledAction.getStartTime())	3
20109	scheduledAction.getTag())	21
4528	scheduledAction.getTotalFrequency()	11
6204	scheduledAction.getTotalFrequency())	14
25498	scheduledAction.getTotalFrequency())){	6
57239	scheduledAction.getTotalPlannedExecutionCount()	11
59974	scheduledAction.getTotalPlannedExecutionCount())){	3
64075	scheduledAction.getUID())	3
59575	scheduledAction.getUID(),	3
19709	scheduledAction.isEnabled()	10
54158	scheduledAction.isEnabled())	9
5036	scheduledAction.isEnabled()){	4
9978	scheduledAction.mActionUID	10
32292	scheduledAction.mPeriod	4
64072	scheduledAction.setActionUID("Some	3
54448	scheduledAction.setActionUID("Test-uid")	7
4438	scheduledAction.setActionUID(BaseModel.generateUID())	13
25959	scheduledAction.setActionUID(UUID.randomUUID().toString().replaceAll("-",""))	13
25361	scheduledAction.setActionUID(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID)))	5
25321	scheduledAction.setActionUID(cursor.getString(cursor.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID)))	8
7897	scheduledAction.setActionUID(mActionUID)	10
52248	scheduledAction.setActionUID(transactionUID)	4
64081	scheduledAction.setAdvanceCreateDays(1)	3
64097	scheduledAction.setAdvanceNotifyDays(2)	3
64059	scheduledAction.setAutoCreate(true)	3
64082	scheduledAction.setAutoNotify(true)	3
54221	scheduledAction.setEnabled(false)	2
60057	scheduledAction.setEnabled(true)	7
64070	scheduledAction.setEndTime(33333)	3
51898	scheduledAction.setEndTime(endTime)	5
7465	scheduledAction.setEndTime(endTime.getMillis())	5
19503	scheduledAction.setEndTime(endTime.toMillis(false))	7
13501	scheduledAction.setEndTime(new	5
51904	scheduledAction.setEndTime(newEndTime)	5
50987	scheduledAction.setExecutionCount(++executionCount)	11
50801	scheduledAction.setExecutionCount(3)	10
59981	scheduledAction.setExecutionCount(4)	4
50916	scheduledAction.setExecutionCount(executionCount)	21
55428	scheduledAction.setExecutionCount(previousExecutionCount)	7
25744	scheduledAction.setExecutionCount(scheduledAction.getExecutionCount()	9
64112	scheduledAction.setLastRun(22222)	3
25448	scheduledAction.setLastRun(System.currentTimeMillis())	16
53996	scheduledAction.setLastRun(lastRun)	7
25702	scheduledAction.setLastRun(lastRuntime)	2
55621	scheduledAction.setLastRun(new	4
19893	scheduledAction.setNumberOfOccurences(eventRecurrence.count)	5
25191	scheduledAction.setPeriod(period)	14
60031	scheduledAction.setRecurrence(PeriodType.MONTH,1)	3
7727	scheduledAction.setRecurrence(PeriodType.WEEK,2)	10
7863	scheduledAction.setRecurrence(PeriodType.WEEK,multiplier)	5
4858	scheduledAction.setRecurrence(RecurrenceParser.parse(mEventRecurrence))	7
9469	scheduledAction.setRecurrence(new	14
9521	scheduledAction.setRecurrence(recurrence)	25
64074	scheduledAction.setStartTime(11111)	3
59967	scheduledAction.setStartTime(System.currentTimeMillis()	3
55746	scheduledAction.setStartTime(new	7
54371	scheduledAction.setStartTime(newStartTime)	6
53984	scheduledAction.setStartTime(nextDayOfWeek(day2CalendarDay(day)).getTimeInMillis())	4
8913	scheduledAction.setStartTime(startDate.getMillis())	6
54241	scheduledAction.setStartTime(startTime)	6
8474	scheduledAction.setStartTime(startTime.getMillis())	13
25750	scheduledAction.setStartTime(timestamp.getTime())	6
64085	scheduledAction.setTag("QIF	3
5222	scheduledAction.setTag(exportParameters.toCsv())	20
54181	scheduledAction.setTotalFrequency(4)	6
19867	scheduledAction.setTotalFrequency(eventRecurrence.count)	5
9564	scheduledAction.setTotalPlannedExecutionCount(4)	8
51821	scheduledAction.setUID(scheduledActionUID)	8
64106	scheduledAction.shouldAutoCreate())	3
64110	scheduledAction.shouldAutoNotify())	3
53944	scheduledAction.toString())	14
60084	scheduledAction1	3
59972	scheduledAction1.setActionUID(mActionUID)	3
60009	scheduledAction1.setEnabled(false)	3
59970	scheduledAction1.setRecurrence(recurrence)	3
60000	scheduledAction1.setStartTime(System.currentTimeMillis()	3
2760	scheduledActionDbAdapter	53
53775	scheduledActionDbAdapter.addRecord(event)	5
52307	scheduledActionDbAdapter.addRecord(scheduledAction)	11
52193	scheduledActionDbAdapter.addRecord(scheduledAction,DatabaseAdapter.UpdateMethod.replace)	2
32142	scheduledActionDbAdapter.addScheduledAction(event)	7
25151	scheduledActionDbAdapter.addScheduledAction(scheduledAction)	21
2496	scheduledActionDbAdapter.addScheduledEvent(event)	5
51822	scheduledActionDbAdapter.deleteRecord(action.getUID())	7
51810	scheduledActionDbAdapter.deleteRecord(event.getUID())	5
53900	scheduledActionDbAdapter.deleteRecord(scheduledActionUID)	2
51466	scheduledActionDbAdapter.deleteScheduledBackupAction(mExportFormat)	6
6373	scheduledActionDbAdapter.getAllEnabledScheduledActions()	9
54672	scheduledActionDbAdapter.getRecord(scheduledActionUID)	6
27057	scheduledActionDbAdapter.getScheduledAction(scheduledActionUID)	10
20064	scheduledActionDbAdapter.getScheduledActionsWithUID(transaction.getUID())	5
19629	scheduledActionDbAdapter.getScheduledActionsWithUID(trnUID)	10
51562	scheduledActionDbAdapter.getScheduledBackupAction(exportFormat)	5
19522	scheduledActionDbAdapter.getScheduledEventsWithUID(transaction.getUID())	5
19544	scheduledActionDbAdapter.getScheduledEventsWithUID(trnUID)	5
51841	scheduledActionDbAdapter.updateRecurrenceAttributes(scheduledAction)	8
64128	scheduledActionFromDb	3
32319	scheduledActionList	12
19979	scheduledActionList){	13
53884	scheduledActionList.add(event)	4
54111	scheduledActionList.add(scheduledAction)	4
20001	scheduledActionUID	35
19920	scheduledActionUID)	5
13748	scheduledActionUid){	9
4424	scheduledActions	48
26135	scheduledActions)	30
58753	scheduledActions,	7
58758	scheduledActions,SQLiteDatabase	7
52326	scheduledActions,UpdateMethod	2
53099	scheduledActions.add(buildModelInstance(cursor))	5
58622	scheduledActions.add(buildScheduledActionInstance(cursor))	5
55065	scheduledActions.add(buildScheduledEventInstance(cursor))	6
31257	scheduledActions.get(0)	7
51451	scheduledActions.size(),book.getDisplayName()))	6
60025	scheduledActionsWithEndTimeInPast_shouldBeExecuted(){	7
13691	scheduledBackup	26
13328	scheduledBackup.getLastRunTime()	8
51502	scheduledBackup.getRepeatString()	5
51382	scheduledBackup.getRuleString()	5
13269	scheduledBackup.setExecutionCount(1)	16
51009	scheduledBackup.setExecutionCount(2)	11
13435	scheduledBackup.setLastRun(LocalDateTime.now().minusDays(8).toDate().getTime())	6
50884	scheduledBackup.setLastRun(LocalDateTime.now().minusMonths(2).toDate().getTime())	8
13925	scheduledBackup.setLastRun(scheduledBackup.getStartTime())	11
50852	scheduledBackup.setRecurrence(PeriodType.MONTH,1)	11
13950	scheduledBackup.setRecurrence(PeriodType.WEEK,1)	16
13454	scheduledBackup.setRecurrence(recurrence)	3
13209	scheduledBackup.setStartTime(	3
50635	scheduledBackup.setStartTime(LocalDateTime.now()	4
57240	scheduledBackup.setStartTime(LocalDateTime.now().minusDays(15).toDate().getTime())	3
13610	scheduledBackup.setStartTime(LocalDateTime.now().minusDays(2).toDate().getTime())	15
50862	scheduledBackup.setStartTime(new	10
56686	scheduledBackup.setTag(backupParams.toCsv())	15
13205	scheduledBackups_shouldIncludeTransactionsAfterTheLastRun()	6
13498	scheduledBackups_shouldNotIncludeTransactionsPreviousToTheLastRun()	6
13805	scheduledBackups_shouldNotRunBeforeNextScheduledExecution(){	16
13568	scheduledBackups_shouldRunOnlyOnce(){	23
18834	scheduledEvent	11
18743	scheduledEvent)	3
20219	scheduledEvent){	9
59793	scheduledEvent.endDate	2
20447	scheduledEvent.getEndTime()	4
59671	scheduledEvent.getEndTime())	4
33765	scheduledEvent.getEventType().name())	5
30771	scheduledEvent.getEventUID()	4
33616	scheduledEvent.getLastRun()	4
33578	scheduledEvent.getLastRun())	5
33554	scheduledEvent.getNumberOfOccurences())	3
62570	scheduledEvent.getPeriod()	3
59692	scheduledEvent.getPeriod())	4
33543	scheduledEvent.getTag())	4
59690	scheduledEvent.getUID())	2
20835	scheduledEvent.getUID(),	4
33559	scheduledEvent.isEnabled()	3
59724	scheduledEvent.period	2
18956	scheduledEvent.setEndTime(endTime.toMillis(false))	5
19007	scheduledEvent.setEndTime(scheduledEvent.getStartTime()	4
33526	scheduledEvent.setNumberOfOccurences(eventRecurrence.count)	3
19242	scheduledEvent.setPeriod(period)	4
18609	scheduledEvent.setStartTime(nextDayOfWeek(day).getTimeInMillis())	2
18733	scheduledEvent.setStartTime(nextDayOfWeek(day2CalendarDay(day)).getTimeInMillis())	3
59780	scheduledEvent.startDate	2
18940	scheduledEventDbAdapter	11
19325	scheduledEventDbAdapter.addScheduledEvent(event)	7
59683	scheduledEventDbAdapter.close()	2
21094	scheduledEventDbAdapter.deleteRecord(event.getUID())	3
33705	scheduledEventDbAdapter.getAllEnabledScheduledActions()	3
33818	scheduledEventDbAdapter.getAllScheduledEvents()	5
20389	scheduledEventDbAdapter.getScheduledEventWithUID(transaction.getUID())	5
20634	scheduledEventDbAdapter.getScheduledEventWithUID(trnUID)	3
20906	scheduledEventDbAdapter.getScheduledEventsWithUID(transaction.getUID())	3
20476	scheduledEventDbAdapter.getScheduledEventsWithUID(trnUID)	3
18856	scheduledEventList	5
18858	scheduledEventList.add(event)	5
18773	scheduledEventList.add(scheduledEvent)	5
20345	scheduledEvents	8
33736	scheduledEvents)	4
20232	scheduledEvents.add(buildScheduledEventInstance(cursor))	6
7911	scheduledTransaction	4
8326	scheduledTransaction.getSplits().get(0)	4
7555	scheduledTransaction.getSplits().get(1)	4
52844	scheduledTransactions	4
52780	scheduledTransactions.add(buildModelInstance(cursor))	4
54695	scheduledTransactionsListFragment	4
54707	scheduledTransactionsListFragment,"fragment_recurring_transactions")	4
13347	scheduledTransactionsWithEndTimeInPast_shouldBeExecuted(){	9
54498	scheduledaction	6
13399	scheduledactionDbAdapter	20
14008	scheduledactionDbAdapter.getAllEnabledScheduledActions()	14
33834	scheduledactionDbAdapter.getAllScheduledActions().get(0)	7
20944	scheduler	9
5071	schedules	23
2282	scheduling	15
14115	schedxAction)	8
32060	schedxAction.getActionType().name())	5
32088	schedxAction.getActionUID())	5
14509	schedxAction.getAdvanceCreateDays())	4
14652	schedxAction.getAdvanceNotifyDays())	4
19441	schedxAction.getCreatedTimestamp().toString())	11
32433	schedxAction.getEndTime())	10
32200	schedxAction.getLastRun())	15
32413	schedxAction.getPeriod())	15
14529	schedxAction.getStartTime())	12
32125	schedxAction.getUID())	5
19490	schedxAction.isEnabled()	18
14121	schedxAction.shouldAutoCreate()	10
14404	schedxAction.shouldAutoNotify()	7
19642	schedxAction:scheduledActionList)	11
20091	schedx_action_uid	5
16802	schema	16
34091	schema")	4
54976	schema,if	6
14481	schema,this	49
56432	schema</string>	2
56457	schemalagda	2
46966	scheme	9
4432	schen	18
4625	schen</string>	21
4474	schen?</string>	18
25857	schermata	5
4416	schnelle	25
26544	schrijven	11
4932	scht</string>	11
23953	scientific	3
11529	scission</string>	12
42918	scrap	4
46314	scrapHeap	4
45946	scrapHeap.clear()	4
45807	scrapHeap.size()	4
46387	scrapHeap.valueAt(i)	4
26003	screen	57
31068	screen")	7
37099	screen).	4
37720	screen,with	4
1183	screen.	27
43057	screenPos	4
42632	screenPos[0]	4
42418	screenPos[1]	4
43144	screenWidth	4
11243	screen\n	23
48917	screens	5
57115	screens)	3
48747	screens.	4
27934	scrivere	11
47959	scrollPos	4
46952	scrollState)	4
47167	scrollX	4
47388	scrollX,dirty.bottom	4
47413	scrollX,dirty.top	4
46642	scrollY	4
46599	scrollY)	4
47008	scrollY,	4
30304	scrolled	3
47089	scrolling	8
36009	scu	13
9082	sdCardExportedFiles	10
9191	sdk	3
51859	sdkConfig)	6
2751	se	77
57716	se)	2
28400	search	53
50587	search!)	5
50091	search-and-forward	5
50085	search.	6
37972	search</string>	5
50253	searchActivity	5
49807	searchActivity.flattenToShortString())	5
50303	searchIcon	5
50227	searchIcon.setBounds(0,0,textSize,textSize)	5
19807	searchManager	13
19892	searchManager.getSearchableInfo(getActivity().getComponentName()))	6
49839	searchView	5
50505	searchView)	5
49816	searchView,	5
19392	searchable	22
50582	searchable's	5
49126	searchable)	10
49739	searchable.getSearchActivity()	5
50448	searchable.getVoiceMaxResults()	5
41611	searching	19
10426	sebagai	12
11408	sebelum	9
10411	sebuah	14
59507	sec&#231	6
11655	secara	13
3362	secciones	12
23037	seco	16
20186	second	44
36446	second.addTransaction(t)	8
31319	second.setUID(BRAVO_ACCOUNT_NAME)	7
54762	second.setUID(BRAVO_ACCOUNT_UID)	4
33967	secondAccount	4
52442	secondException)	2
33968	secondSplitAmount	2
37391	secondary	20
38545	secondaryProgress	12
38331	secondaryProgress)	16
39905	secondaryProgress:	7
9954	secondaryText	33
19150	secondaryText.setTextColor(getResources().getColor(android.R.color.secondary_text_light_nodisable))	23
19084	secondaryText.setTextColor(getResources().getColor(android.R.color.white))	21
53017	secondaryTextView	3
53075	secondaryTextView.setText(balance.formattedString()	3
3005	seconds	18
9629	secret	8
17192	sectie	6
6496	section	22
2337	section\n	84
57891	secured	6
36385	security	7
11858	sedan	9
1717	see	244
46114	seed	4
42253	seeing	4
42777	seek	4
42269	seeked	4
9277	seems	13
31325	seen	22
48297	seen,it	4
42496	seenGroups	4
43182	seenGroups.clear()	4
42709	seenGroups.get(groupId)	4
42804	seenGroups.put(groupId,false)	4
43019	seenGroups.put(groupId,true)	4
16850	segment	16
17099	segmenten</string>	7
50905	segments:	5
29279	segnala	8
29361	segnalazioni	4
28038	segnalibro	5
16337	segnalibro</string>	13
18341	seguir.	11
16308	seguito.	26
22189	segur	7
56300	segurana	2
56100	segurana)\n	2
56337	segurana.	2
55968	segurana</string>	2
22345	seguretat	7
59962	seguretat&#8230	3
29552	seguretat.	5
14840	seguretat</string>	12
15652	seguridad	37
15601	seguridad&#8230	15
56175	seguridad)	2
2879	seguridad.	13
25599	seguridad/Exportar	6
15682	seguridad</string>	24
12539	seguro	23
2260	seguro?</string>	12
25748	segurs	6
22472	sehen</string>	8
29645	sehingga	5
23123	seildi</string>	8
22799	seimbang:</string>	7
23314	sein</string>	8
6366	seit	30
10596	seja	31
10636	sejak	7
47938	sel	4
48024	sel.getMeasuredWidth()	4
47961	sel.offsetLeftAndRight(selectedOffset)	4
49791	selPoint	5
11992	selain	5
10149	seleccionada	14
15628	seleccionado	34
15503	seleccionado</string>	47
15889	seleccionar	30
21981	seleccionats</string>	7
10772	selecionada	9
25770	selecionadas	5
4761	selecionado	13
22896	selecionado</string>	20
5984	selecionar	13
5285	select	187
39054	select()	8
37950	select.	8
31191	selectExportFile()	8
20435	selectItem(int	49
29476	selectItem(itemPosition)	4
20235	selectItem(menuItem.getItemId())	6
29244	selectItem(position)	17
39194	selectTab(Tab	9
40216	selectTab(mTabs.get(position))	4
40113	selectTab(mTabs.isEmpty()	4
39839	selectTab(null)	4
39452	selectTab(tab)	4
39592	selectTab(this)	4
46421	selectable	4
45913	selectablePos	4
4065	selected	306
44232	selected!	4
61865	selected"	3
4743	selected")	6
29518	selected)	10
27146	selected,	3
50163	selected,handle	5
48458	selected,if	4
49719	selected,perform	5
27148	selected.	35
52797	selected:	16
11002	selected</string>	127
26973	selectedAccountType	16
26999	selectedAccountTypeIndex	10
27543	selectedColor	3
27457	selectedColor)	4
27197	selectedColor,	4
27282	selectedColor,int	3
27344	selectedColor,mOnColorSelectedListener)	3
56510	selectedDates	6
56595	selectedDates.get(0)	6
56476	selectedDates.get(1)	6
57323	selectedDates.get(selectedDates.size()	3
56518	selectedDates.size()	6
46054	selectedId	4
46045	selectedId="	4
32979	selectedIds	5
33216	selectedIds[i++]	4
33029	selectedItemPositions	5
33209	selectedItemPositions)	4
36152	selectedItemView,	13
27041	selectedItemView,int	14
47594	selectedOffset	4
46368	selectedPosition	4
19190	selectedPositions	4
19369	selectedPositions[i++]	4
64069	selectedSpinnerItem	2
64119	selectedSpinnerItem)	2
40274	selectedTabPosition	4
13875	selectedText	24
658	selectedValueTextView	16
29947	selectedValueTextView.setText("")	10
34174	selectedValueTextView.setText("Select	7
34230	selectedValueTextView.setText(R.string.label_select_bar_to_view_details)	7
29939	selectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN,label,value,value	13
56495	selectedValueTextView.setText(String.format(SELECTED_VALUE_PATTERN,label.trim(),value,value	7
30076	selectedValueTextView.setText(getResources().getString(R.string.label_chart_no_data))	7
46338	selectedView	4
46185	selectedView.dispatchPopulateAccessibilityEvent(event))	4
46476	selectedView.getVisibility()	4
12679	selecteren</string>	38
3576	selecting	102
3778	selection	113
2787	selection,	27
52903	selection,if	16
48471	selection,or	4
57281	selection,selectionArgs,DatabaseSchema.AccountEntry.TABLE_NAME	4
34322	selection,selectionArgs,null,null,null)	14
46012	selection,update	4
38124	selection.	16
33081	selection.getPointIndex())	3
33057	selection.getValue()	3
20438	selectionArgs	30
46014	selectionChanged()	4
18552	selectionIndex	11
18281	selectionIndex++	7
26793	selector	13
24142	selects	17
11584	selesai</string>	5
22584	selezionare	14
26058	selezionata	5
16368	selezionate</string>	31
22783	selezionato,calcolata	6
19197	self	11
60635	selfChange)	3
60617	sell	3
10647	seluruh	14
11295	semaines</item>	8
5961	semanas</item>	24
6423	semantic	8
48712	semantically	6
50426	semantics,which	5
22877	sempre	11
29284	sempre</item>	4
26165	sempre</string>	3
12021	semua	9
11527	senaste	10
3539	send	183
46115	sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_SELECTED)	8
41833	sendEmptyMessageDelayed(ANIMATION_FRAME,Math.max(0,sFrameDelay	4
21819	sende	10
5276	senden	12
59344	senden</string>	4
25034	sending	25
42224	sends	4
14932	senere.	19
21451	senere.</string>	14
6224	senha	6
4038	senha</string>	23
55680	senha\n	5
1204	sense	18
35109	sense,if	3
40585	sense.	4
40869	sensible	8
24990	sent	24
48581	sentinel	4
22933	seo	14
11423	sep	16
5358	separados	21
56454	separata	2
5197	separate	135
49789	separate,	5
26675	separated	10
53658	separately	2
22870	separati	6
5878	separation	12
4794	separator	45
5967	separator)	4
45967	separator).	4
32800	separator,divide	9
12552	separator,else	5
12271	separator,just	5
12779	separators	7
35183	separators.</p>	6
6002	separators</p>	4
22421	separats	7
41008	sequence	11
40584	sequence,or	4
30413	sequentially	9
3724	ser	103
3725	ser&#225	56
19662	ser&#227	20
23246	ser&#227;o	20
804	sera	79
22330	seran	7
15741	serbio</item>	14
34481	serial	9
59010	serialVersionUID	2
62913	serialization	4
51488	serialize	5
25955	serializeDate(XmlSerializer	12
4372	serializeDate(xmlSerializer,GncXmlHelper.TAG_RX_START,recurrenceStartTime)	4
6269	serializeDate(xmlSerializer,GncXmlHelper.TAG_RX_START,startTime)	9
19863	serializeDate(xmlSerializer,GncXmlHelper.TAG_SX_END,endTime)	8
33522	serializeDate(xmlSerializer,GncXmlHelper.TAG_SX_LAST,lastRunTime)	3
5068	serializeDate(xmlSerializer,GncXmlHelper.TAG_SX_START,scheduleStartTime)	7
5764	serializeDate(xmlSerializer,GncXmlHelper.TAG_SX_START,startTime)	5
25752	serializer	14
48937	serializer.attribute(null,ATTRIBUTE_ACTIVITY,record.activity.flattenToString())	4
49623	serializer.attribute(null,ATTRIBUTE_TIME,String.valueOf(record.time))	4
49150	serializer.attribute(null,ATTRIBUTE_WEIGHT,String.valueOf(record.weight))	4
49199	serializer.endDocument()	4
48925	serializer.endTag(null,TAG_HISTORICAL_RECORD)	4
49445	serializer.endTag(null,TAG_HISTORICAL_RECORDS)	4
49088	serializer.setOutput(fos,null)	4
49047	serializer.startDocument("UTF-8",true)	4
49519	serializer.startTag(null,TAG_HISTORICAL_RECORD)	4
48885	serializer.startTag(null,TAG_HISTORICAL_RECORDS)	4
33039	series	15
32983	series)	4
18084	series.	5
33145	series.add("START",0)	3
33108	series.getCategory(i)	4
33020	series.getItemCount()	3
33144	series.getValue(i	3
33009	series.getValue(i)	3
33234	series.set(i	4
32989	series.set(i,series.getCategory(i	4
22667	sering	7
15575	sern	28
2834	sero	104
11847	seront	57
27266	serpentine	3
18213	serve	7
11041	server	57
63083	serverUri	4
22915	serveren	5
35297	serves	6
4245	service	51
32676	service"	14
4983	service")	6
10720	service</string>	25
34964	serviceManagerClazz	4
34951	serviceManagerClazz.getDeclaredMethod("getService",String.class)	4
33805	services	5
3051	services"	6
56371	servicio	2
59963	servidor	3
55763	servio	4
55710	servizio	2
8050	session	11
31121	session).	5
59723	session,and	9
48286	session.	10
50336	sessions.	4
29508	sestaven</string>	3
1389	set	343
2043	set"	19
21366	set)	7
19904	set,	11
48057	set,always	4
40573	set,and	4
48207	set,as	4
59206	set,both	3
47998	set,do	4
54806	set,getCount()	3
42113	set,however,if	4
7392	set,ignore	3
40653	set,it	12
55350	set,look	3
27630	set,only	12
33604	set,rather	4
34866	set,the	14
50761	set,then	11
3560	set,we	7
1236	set.	78
56910	set.<br/>	6
45272	set.addListener(mVisAnimListener.withFinalVisibility(visibility))	5
57286	set.getEntryCount(),set.getLabel())	4
7300	set.getYValueSum())	3
44929	set.play(anim).with(splitAnim)	5
45074	set.play(buttonAnimator)	4
54943	set.setCircleSize(5f)	3
52770	set.setColor(COLORS[dataSets.size()])	4
20863	set.setColor(Color.GRAY)	6
20563	set.setColor(Color.LTGRAY)	3
30089	set.setColor(NO_DATA_COLOR)	10
30123	set.setColors(Arrays.copyOfRange(COLORS,0,accountTypeList.size()))	8
58795	set.setColors(Arrays.copyOfRange(COLORS,0,mAccountTypeList.size()))	3
58742	set.setColors(COLORS)	3
7162	set.setColors(colors)	18
54941	set.setDrawCircles(true)	3
52749	set.setDrawFilled(true)	8
20921	set.setDrawValues(false)	19
52802	set.setFillColor(COLORS[dataSets.size()])	4
62674	set.setFillColor(Color.GRAY)	4
52864	set.setFillColor(FILL_COLORS[dataSets.size()])	2
62693	set.setFillColor(NO_DATA_COLOR)	4
52816	set.setLineWidth(2)	4
54965	set.setLineWidth(2f)	3
29997	set.setStackLabels(accountTypeList.toString().substring(1,accountTypeList.toString().length()	6
18073	set.setStackLabels(labels.toArray(new	14
58756	set.setStackLabels(mAccountTypeList.toString().substring(1,mAccountTypeList.toString().length()	3
58807	set.setStackLabels(new	3
58769	set.setValueFormatter()	4
45352	set.start()	5
50320	set/change	4
41675	set/get	4
26922	set1	6
26843	set1.setCircleSize(5f)	4
26990	set1.setColor(Color.rgb(104,241,175))	4
26912	set1.setDrawCircles(true)	5
26963	set1.setDrawCubic(true)	4
26767	set1.setDrawFilled(true)	5
26718	set1.setFillColor(getResources().getColor(R.color.account_green))	5
26813	set1.setLineWidth(2f)	5
26923	set2	5
26876	set2.setCircleSize(5f)	4
26971	set2.setColor(Color.RED)	4
26733	set2.setDrawCircles(true)	5
26803	set2.setDrawCubic(true)	4
26788	set2.setDrawFilled(true)	5
26633	set2.setFillColor(getResources().getColor(R.color.account_red))	4
26792	set2.setLineWidth(2f)	5
36130	set</p>	6
4975	set</string>	101
51169	setAccountType(@NonNull	4
13510	setAccountType(AccountType	29
27160	setAccountTypeSelection(Account.AccountType	5
35965	setAccountTypeSelection(AccountType	6
2134	setAccountTypeSelection(account.getAccountType())	10
26748	setAccountTypeSelection(mAccountsDbAdapter.getAccountType(parentAccountId))	5
26623	setAccountTypeSelection(parentAccountType)	6
51231	setAccountUID(@NonNull	4
12560	setAccountUID(String	21
35687	setAccountUID(accountUID)	24
18179	setAccountUID(transaction.getAccountUID())	5
18689	setActionModeTitle()	16
18050	setActionModeTitle(){	21
42920	setActionProvider(ActionProvider	12
32385	setActionType(ActionType	7
32165	setActionUID(String	10
43193	setActionView(View	13
44417	setActionView(inflater.inflate(resId,new	4
42910	setActionView(int	13
44531	setActionViewExpanded(boolean	4
19593	setActive(@NonNull	5
20090	setActive(String	9
63509	setActive(boolean	4
48540	setActivityChooserModel(ActivityChooserModel	8
49707	setActivityChooserPolicyIfNeeded()	4
13522	setActivityIntent(intent)	20
13838	setActivityIntent(new	11
48969	setActivitySorter(ActivitySorter	4
48038	setAdapter	4
61888	setAdapter(@Nullable	3
47216	setAdapter(ListAdapter	9
46373	setAdapter(SpinnerAdapter	8
46268	setAdapter(T	4
46452	setAdapter(adapter)	4
53608	setAdvanceCreateDays(int	2
53660	setAdvanceNotifyDays(int	2
47674	setAllowCollapse(boolean	4
45448	setAlpha(0)	8
42344	setAlpha(float	5
46382	setAlpha(int	5
42674	setAlphabeticShortcut(char	12
36300	setAmount(@NonNull	14
23932	setAmount(BigDecimal	18
18129	setAmount(Money	23
23498	setAmount(String	20
23369	setAmount(amount)	43
23770	setAmount(double	9
18394	setAmount(money.asBigDecimal())	14
23997	setAmount(new	12
58897	setAmount(parse(amount))	2
36058	setAmount(parseToDecimal(amount))	15
63762	setAmount(parseToString(amount))	2
18445	setAmount(transaction.getAmount())	5
24644	setAmountEditViewVisible(View.GONE)	29
33228	setAmountEditViewVisible(View.VISIBLE)	10
31656	setAmountEditViewVisible(int	27
24937	setAmountFormattingListener(CalculatorEditText	6
13180	setAmountFormattingListener(EditText	5
47743	setAnchorView(IcsSpinner.this)	4
44578	setAnchorView(View	8
42862	setAnchorView(mOverflowButton	4
42284	setAnimatedValue(Object	5
42454	setAnimation(mProxy)	5
34924	setAnimationScaleFactors(0.0f)	2
34880	setAnimationScaleFactors(1.0f)	2
35041	setAnimationScaleFactors(float	2
57696	setAnimationScales	2
57709	setAnimationScales.invoke(windowManagerObj,currentScales)	2
1544	setAppBarColor(int	13
49601	setAppSearchData(Bundle	5
27264	setArguments(bundle)	3
27165	setArguments(int	3
27451	setArguments(titleResId,columns,size)	3
25509	setAutoCreate(boolean	4
53538	setAutoNotify(boolean	2
27489	setBackgroundColor(int	3
38659	setBackgroundDrawable(Drawable	12
45364	setBackgroundDrawable(a.getDrawable(	4
43507	setBackgroundDrawable(mBackground)	4
45651	setBackgroundDrawable(null)	4
45349	setBackgroundResource(0)	4
43695	setBaselineAligned(false)	4
7639	setBindings(@NonNull	12
13304	setBindings(getInsertStatement(),model).execute()	5
13102	setBindings(getReplaceStatement(),model).execute()	5
13550	setBindings(getUpdateStatement(),model).execute()	5
32855	setBookActive(){	2
53523	setBudgetAmounts(List<BudgetAmount>	2
53526	setBudgetUID(String	2
8149	setButtonTint(Button	16
21797	setButtonTint(mBalanceSheetButton,csl)	12
50937	setButtonTint(mBarChartButton,csl)	3
32195	setButtonTint(mLineChartButton,csl)	7
8413	setButtonTint(mPieChartButton,csl)	12
50935	setButtonTint(mTextReportButton,csl)	4
34942	setByDay(String	5
35059	setByDays(@NonNull	4
47532	setCacheColorHint(0)	4
34642	setCalculatorKeyboard(CalculatorKeyboard	12
34631	setCalculatorKeyboardView(KeyboardView	12
34547	setCalculatorKeysLayout(@XmlRes	13
43760	setCallback(Callback	12
44918	setCallback(OnNavigationListener	4
44458	setCallback(Runnable	4
42973	setCallback(mPopupPresenterCallback)	4
42525	setCheckable(boolean	16
43720	setCheckable(itemData.isCheckable())	4
13537	setChecked(Transaction.shouldDecreaseBalance(mAccountType,transactionType))	2
13203	setChecked(TransactionType	5
27298	setChecked(boolean	22
27301	setChecked(checked)	3
44470	setCheckedInt(boolean	4
44769	setCheckedInt(checked)	4
42901	setClickable(true)	4
45108	setCollapsable(boolean	4
1446	setColor(@NonNull	7
443	setColor(Color.parseColor(colorCode))	7
27430	setColor(color)	3
690	setColor(int	10
1920	setColorCode(@NonNull	4
51191	setColorCode(@Nullable	4
73	setColorCode(String	15
46440	setColorFilter(ColorFilter	5
27372	setColors(colors,selectedColor)	3
27464	setColors(int[]	3
10834	setCommodity(@NonNull	12
12071	setCommodity(Commodity	16
1493	setCommodity(Commodity.DEFAULT_COMMODITY)	10
34191	setCommodity(commodity)	9
36422	setCommodity(currencyCode)	4
36421	setCommodity(money.getCommodity())	4
11417	setCommodity(transaction.getCommodity())	3
36607	setCommodityUID(String	10
39058	setContentDescription(CharSequence	8
39094	setContentDescription(int	8
39560	setContentDescription(mContext.getResources().getText(resId))	4
42429	setContentDescription(mTitle)	4
45012	setContentHeight(a.getLayoutDimension(R.styleable.SherlockActionBar_height,0))	8
45619	setContentHeight(int	11
38415	setContentView()	4
57054	setContentView(@LayoutRes	6
1339	setContentView(R.layout.activity_accounts)	31
29938	setContentView(R.layout.activity_bar_chart)	9
23067	setContentView(R.layout.activity_budgets)	5
33623	setContentView(R.layout.activity_chart_report)	10
6984	setContentView(R.layout.activity_chart_reports)	9
50677	setContentView(R.layout.activity_first_run_wizard)	7
807	setContentView(R.layout.activity_form)	11
27000	setContentView(R.layout.activity_line_chart)	15
33646	setContentView(R.layout.activity_pie_chart)	10
23143	setContentView(R.layout.activity_reports)	8
23204	setContentView(R.layout.activity_scheduled_events)	10
57096	setContentView(R.layout.activity_settings)	3
61993	setContentView(R.layout.activity_transaction_detail)	3
1746	setContentView(R.layout.activity_transaction_info)	6
130	setContentView(R.layout.activity_transactions)	30
1260	setContentView(R.layout.passcode_lockscreen)	10
47010	setContentView(R.layout.progressbar_activity)	4
50951	setContentView(R.layout.widget_configuration)	9
37945	setContentView(View	18
23157	setContentView(getContentView())	6
38508	setContentView(int	12
37966	setContentView(view,new	4
47803	setContentWidth(Math.max(	4
47104	setContentWidth(int	4
48022	setContentWidth(mDropDownWidth)	4
48045	setContentWidth(spinnerWidth	4
45437	setContextView(ActionBarContextView	4
20652	setCreatedTimestamp(Timestamp	3
51165	setCurrency(@NonNull	4
23387	setCurrency(Currency	51
32963	setCurrency(Currency.getInstance(currencyCode))	22
26389	setCurrency(currency)	16
18493	setCurrency(money.getCurrency())	14
51233	setCurrencyCode(@NonNull	4
1716	setCurrencyCode(String	22
61309	setCurrencyUID(String	3
44841	setCurrentMenuInfo(ContextMenuInfo	4
42077	setCurrentPlayTime()	4
41963	setCurrentPlayTime(getCurrentPlayTime())	4
42153	setCurrentPlayTime(long	4
32788	setCurrentTab()	9
57523	setCurrentTab(){	5
60828	setCusip(String	6
1890	setCustomLegend()	31
45470	setCustomNavigationView(View	4
39994	setCustomView(LayoutInflater.from(getThemedContext())	4
40145	setCustomView(LayoutInflater.from(getThemedContext()).inflate(resId,mActionView,false))	4
38043	setCustomView(View	23
38617	setCustomView(int	11
62114	setCutOffPage(int	3
26887	setData()	9
26637	setData(AccountType	6
4241	setData(boolean	24
29818	setData(false)	16
33071	setData(true)	7
49122	setDataModel(ActivityChooserModel	5
34171	setDataset((AccountType)	4
7237	setDataset(AccountType	7
6568	setDataset(AccountType.EXPENSE)	3
5391	setDataset(boolean	4
33093	setDataset(false)	3
32962	setDataset(true)	3
7161	setDataset(type)	4
34258	setDataset(type,false)	3
60782	setDate(Timestamp	3
49409	setDefaultActionButtonContentDescription(int	4
49276	setDefaultActivity(int	4
57145	setDefaultCurrencyCode(@NonNull	10
59365	setDefaultCurrencyCode(String	6
34819	setDefaultCurrencyCode(getDefaultCurrencyCode())	25
1654	setDefaultCurrencyListener()	38
43973	setDefaultShowAsAction(int	4
62283	setDefaultStatusBarColor()	3
55204	setDefaultTouchListener()	8
13742	setDefaultTransactionType(TransactionType	21
28935	setDefaultTransactionType(TransactionType.CREDIT)	6
20060	setDefaultTransactionType(TransactionType.DEBIT)	19
27459	setDefaultTransferAccountInputsVisible(boolean	10
24264	setDefaultTransferAccountInputsVisible(false)	12
26844	setDefaultTransferAccountInputsVisible(mUseDoubleEntry)	5
271	setDefaultTransferAccountSelection(defaultTransferAccountID,false)	7
27192	setDefaultTransferAccountSelection(doubleDefaultAccountId)	15
1883	setDefaultTransferAccountSelection(doubleDefaultAccountId,true)	7
1139	setDefaultTransferAccountSelection(long	18
51193	setDefaultTransferAccountUID(@Nullable	4
27450	setDefaultTransferAccountUID(String	10
7269	setDeleteTransactionsAfterExport(boolean	3
45769	setDescendantFocusability(isTransitioning	4
742	setDescription(@NonNull	11
280	setDescription(String	15
51221	setDescription(name)	6
10147	setDescription(transaction.getDescription())	18
38206	setDisplayHomeAsUpEnabled(boolean	8
63524	setDisplayName(String	6
38270	setDisplayOptions	4
37967	setDisplayOptions(0,DISPLAY_SHOW_HOME)	4
38280	setDisplayOptions(DISPLAY_SHOW_HOME,DISPLAY_SHOW_HOME	4
44931	setDisplayOptions(a.getInt(R.styleable.SherlockActionBar_displayOptions,DISPLAY_DEFAULT))	4
38047	setDisplayOptions(int	12
45163	setDisplayOptions(mDisplayOptions	4
40332	setDisplayOptions(showCustom	4
39424	setDisplayOptions(showHome	4
39551	setDisplayOptions(showHomeAsUp	4
39489	setDisplayOptions(showTitle	4
39470	setDisplayOptions(useLogo	4
37971	setDisplayShowCustomEnabled(boolean	8
38174	setDisplayShowHomeEnabled(boolean	8
38367	setDisplayShowTitleEnabled(boolean	8
38223	setDisplayUseLogoEnabled(boolean	8
47400	setDividerDrawable(Drawable	4
47360	setDividerDrawable(a.getDrawable(/*com.android.internal.R.styleable.*/LinearLayout_divider))	5
47511	setDividerPadding(int	4
26344	setDoubleEntryAccountUID(String	5
18021	setDoubleEntryAccountUID(transaction.getDoubleEntryAccountUID())	7
13587	setDoubleEntryEnabled(boolean	23
28740	setDoubleEntryEnabled(false)	11
19973	setDoubleEntryEnabled(true)	25
32961	setDoubleEntryViewsVisibility(View.GONE)	9
33136	setDoubleEntryViewsVisibility(View.VISIBLE)	3
33186	setDoubleEntryViewsVisibility(int	3
63784	setDropDownViewResource(R.layout.account_spinner_dropdown_item)	4
61891	setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)	9
45560	setDropdownAdapter(SpinnerAdapter	4
45152	setDropdownSelectedPosition(int	4
41521	setDuration().	8
42461	setDuration(0)	4
39487	setDuration(long	16
30014	setEarliestAndLatestDates(AccountType	4
30000	setEarliestAndLatestDates(accountType)	5
30204	setEarliestAndLatestTimestamps(Arrays.asList(AccountType.INCOME,AccountType.EXPENSE))	5
20866	setEarliestAndLatestTimestamps(List<AccountType>	15
32826	setEarliestAndLatestTimestamps(accountTypes)	7
25452	setEarliestAndLatestTimestamps(mAccountTypeList)	5
56651	setEditTextError()	9
45533	setEmbeddedTabView(ScrollingTabContainerView	4
61921	setEmptyView(@Nullable	3
45891	setEmptyView(View	4
20056	setEnabled(boolean	29
42934	setEnabled(itemData.isEnabled())	8
42411	setEnabled(true)	4
18972	setEndTime(long	18
56657	setError("Invalid	7
52813	setError(getContext().getString(R.string.label_error_invalid_expression))	11
41655	setEvaluator(TypeEvaluator	8
62566	setEventType(EventType	3
32410	setEventUID(String	4
43008	setExclusiveCheckable(boolean	8
43782	setExclusiveItemChecked(MenuItem	4
19622	setExecutionCount(int	15
48877	setExpandActivityOverflowButtonContentDescription(int	4
49065	setExpandActivityOverflowButtonDrawable(Drawable	4
42885	setExpandedActionViewsExclusive(boolean	4
42779	setExpandedFormat(boolean	4
6916	setExportAllTransactions(boolean	6
6565	setExportFormat(ExportFormat	17
51534	setExportFormat(format)	2
55275	setExportLocation(String	3
63253	setExportStartTime(Timestamp	3
6938	setExportTarget(ExportTarget	17
55514	setExportUriText(String	2
55554	setExportUriText(getString(R.string.label_dropbox_export_destination))	2
55567	setExportUriText(getString(R.string.label_select_destination_after_export))	2
55505	setExportUriText(mExportUri.toString())	2
55555	setExportUriText(null)	2
2474	setExported(boolean	6
18039	setExported(transaction.isExported())	9
1984	setFavorite(boolean	18
39225	setFeatureInt(Window.FEATURE_INDETERMINATE_PROGRESS,	4
39312	setFeatureInt(Window.FEATURE_PROGRESS,	5
39265	setFeatureInt(Window.FEATURE_PROGRESS,progress	4
39224	setFeatureInt(Window.FEATURE_PROGRESS,visible	4
40338	setFeatureInt(int	4
42628	setFillAfter(true)	4
48067	setFillViewport(lockedExpanded)	4
60481	setFilterQueryProvider(FilterQueryProvider	7
41425	setFloatValues(float...	8
41834	setFloatValues(values)	4
46361	setFocusable().	4
46220	setFocusable(boolean	4
49415	setFocusable(focusable)	5
42510	setFocusable(true)	8
45816	setFocusableInTouchMode(boolean	4
41520	setFoo	4
43735	setForceShowIcon(boolean	8
42848	setForceShowIcon(preserveIconSpacing)	4
41698	setFraction(float	4
36387	setFraction(int	7
42187	setFrameDelay(long	4
51164	setFullName(@NonNull	4
2001	setFullName(String	16
61041	setFullname(String	3
47609	setGravity(Gravity.LEFT	4
47920	setGravity(int	4
43074	setGroupCheckable(int	16
42936	setGroupEnabled(int	16
42374	setGroupVisible(int	16
39827	setHasEmbeddedTabs(boolean	4
39887	setHasEmbeddedTabs(getResources_getBoolean(mContext,	4
60214	setHasOptionsMenu(false)	3
209	setHasOptionsMenu(true)	130
44708	setHeaderIcon(Drawable	8
44395	setHeaderIcon(int	8
44600	setHeaderIconInt(Drawable	4
44260	setHeaderIconInt(int	4
44895	setHeaderInternal(0,null,0,icon,null)	4
44279	setHeaderInternal(0,null,0,null,view)	4
44573	setHeaderInternal(0,null,iconRes,null,null)	4
44226	setHeaderInternal(0,title,0,null,null)	4
44464	setHeaderInternal(final	4
44738	setHeaderInternal(titleRes,null,0,null,null)	4
44403	setHeaderTitle(CharSequence	8
44794	setHeaderTitle(int	8
44342	setHeaderTitleInt(CharSequence	4
44252	setHeaderTitleInt(int	4
44846	setHeaderView(View	8
44721	setHeaderViewInt(View	4
59137	setHidden(boolean	4
49460	setHistoryMaxSize(int	4
39056	setHomeButtonEnabled(boolean	13
40165	setHomeButtonEnabled(mContext.getApplicationInfo().targetSdkVersion	4
45146	setHomeButtonEnabled(true)	4
47650	setHorizontalOffset(bgOffset	4
46529	setHorizontalOffset(int	4
47927	setHorizontalScrollBarEnabled(false)	4
38648	setIcon(Drawable	32
38150	setIcon(int	27
42326	setIcon(itemData.getIcon())	8
39672	setIcon(mContext.getResources().getDrawable(resId))	8
50412	setIconified(boolean	5
48901	setIconified(false)	9
48928	setIconifiedByDefault(a.getBoolean(R.styleable.SherlockSearchView_iconifiedByDefault,true))	5
49123	setIconifiedByDefault(boolean	5
49622	setIconifiedByDefault(false).	5
49267	setIconifiedByDefault(true)	5
43723	setId(int	4
43031	setId(itemData.getItemId())	4
4080	setImageButtonEnabled(ImageButton	11
24971	setImageButtonEnabled(mNextMonthButton,	14
4097	setImageButtonEnabled(mNextMonthButton,false)	3
6312	setImageButtonEnabled(mNextMonthButton,true)	5
34284	setImageButtonEnabled(mPreviousMonthButton,(mEarliestTransaction.getYear()	3
24825	setImageButtonEnabled(mPreviousMonthButton,(mEarliestTransactionDate.getYear()	11
6058	setImageButtonEnabled(mPreviousMonthButton,false)	6
6350	setImageButtonEnabled(mPreviousMonthButton,true)	3
27440	setImageDrawable(new	3
2143	setImbalanceAccountsHidden((Boolean)	13
57027	setImbalanceAccountsHidden((Boolean)newValue)	5
1798	setImbalanceAccountsHidden(boolean	26
63991	setImbalanceAccountsHidden(useDoubleEntry)	2
49000	setImeOptions(imeOptions)	5
49051	setImeOptions(int	5
49221	setImeVisibility(false)	9
49673	setImeVisibility(final	5
50291	setImeVisibility(true)	5
47349	setIndeterminate(boolean	4
46866	setIndeterminate(mOnlyIndeterminate	4
46885	setIndeterminateDrawable(Drawable	4
47535	setIndeterminateDrawable(drawable)	4
48904	setInitialActivityCount(int	4
48115	setInputMethodMode(PopupWindow.INPUT_METHOD_NOT_NEEDED)	4
47423	setInputMethodMode(int	4
56660	setInputType(getInputType()	4
49589	setInputType(inputType)	5
49095	setInputType(int	5
41661	setIntValues(int...	8
42258	setIntValues(values)	4
48745	setIntent()	4
42645	setIntent(Intent	14
32819	setIntent(intent)	9
40928	setInterpolator(/*Time*/Interpolator	14
46872	setInterpolator(AnimationUtils.loadInterpolator(context,resID))	4
46700	setInterpolator(Context	4
46997	setInterpolator(Interpolator	4
47426	setInterpolator(context,resID)	4
44817	setIsActionButton(boolean	4
48330	setItem(MenuItem	5
48526	setItem(menu.add(groupId,itemId,itemCategoryOrder,itemTitle))	4
48771	setItem(subMenu.getItem())	4
42598	setItemInvoker(MenuBuilder.ItemInvoker	4
42975	setItemLimit(int	4
41419	setKeyframes(Keyframe...	4
8030	setLastExportTime(Timestamp	13
8185	setLastExportTime(lastExportTime,BooksDbAdapter.getInstance().getActiveBookUID())	4
3442	setLastExportedText(View	6
3889	setLastExportedText(view,bookUID)	9
33733	setLastRun(long	9
63974	setLastSync(Timestamp	2
62033	setListAdapter(commoditiesCursorAdapter)	3
30274	setListAdapter(mAccountsCursorAdapter)	14
18071	setListAdapter(mCursorAdapter)	30
38275	setListNavigationCallbacks(SpinnerAdapter	8
2033	setListeners()	68
31532	setListeners(){	21
31932	setListeners(Split	13
31933	setListeners(split)	6
36438	setLocalSymbol(String	7
4458	setLocalizedSummary(Preference	11
5715	setLocalizedSummary(pref,defaultTransactionType)	12
4356	setLocalizedSummary(preference,newValue.toString())	14
38137	setLogo(Drawable	12
38751	setLogo(int	12
45730	setLogo(mContext.getResources().getDrawable(resId))	4
45985	setLongClickable(true)	4
47516	setMax(a.getInt(/*R.styleable.*/ProgressBar_max,mMax))	4
46645	setMax(int	4
49371	setMaxActivityCount(int	4
50579	setMaxWidth(int	5
49498	setMaxWidth(maxWidth)	5
46941	setMeasureWithLargestChildEnabled(boolean	5
45752	setMeasuredDimension(0,0)	4
47748	setMeasuredDimension(Math.min(Math.max(measuredWidth,	4
46634	setMeasuredDimension(View.resolveSize(dw,widthMeasureSpec),	4
46988	setMeasuredDimension(View.resolveSizeAndState(dw,widthMeasureSpec,0),	4
49273	setMeasuredDimension(child.getMeasuredWidth(),child.getMeasuredHeight())	4
45187	setMeasuredDimension(contentWidth,maxHeight)	4
45745	setMeasuredDimension(contentWidth,measuredHeight)	4
45478	setMeasuredDimension(getMeasuredWidth(),	4
47554	setMeasuredDimension(getMeasuredWidth(),totalHeight)	5
47206	setMeasuredDimension(totalWidth,getMeasuredHeight())	5
46075	setMeasuredDimension(width,height)	4
43315	setMeasuredDimension(widthSize,0)	4
43797	setMeasuredDimension(widthSize,heightSize)	8
51230	setMemo(@Nullable	4
33905	setMemo(String	14
45230	setMenu(Menu	4
44836	setMenuInfo(ContextMenuInfo	4
36111	setMnemonic(String	7
47450	setModal(boolean	4
47617	setModal(true)	4
20553	setModifiedTimestamp(Timestamp	9
7407	setMultiplier(int	11
51155	setName(@NonNull	6
51204	setName(String	12
23641	setName(name)	36
18452	setName(transaction.getName())	9
61156	setNamespace(Namespace	6
38636	setNavigationMode(int	12
58517	setNegativeButton(R.string.alert_dialog_cancel,	4
59678	setNextRun(long	2
46083	setNextSelectedPositionInt	4
46156	setNextSelectedPositionInt(INVALID_POSITION)	4
46051	setNextSelectedPositionInt(int	4
48094	setNextSelectedPositionInt(mSelectedPosition)	4
46229	setNextSelectedPositionInt(newPos)	4
46232	setNextSelectedPositionInt(position)	5
46026	setNextSelectedPositionInt(selectablePos)	4
51212	setNote(@NonNull	4
14319	setNote(String	8
10641	setNote(transaction.getNote())	13
20093	setNumberOfOccurences(int	6
53615	setNumberOfPeriods(long	2
42442	setNumericShortcut(char	12
41248	setObjectValues(Object...	8
42847	setOnActionExpandListener(OnActionExpandListener	12
56483	setOnBackListener(CalculatorKeyboard	7
52396	setOnBackListener(CustomKeyboard	8
13883	setOnCheckedChangeListener(new	7
48887	setOnChooseActivityListener(OnChooseActivityListener	4
45885	setOnClickListener	4
45952	setOnClickListener(OnClickListener	4
56675	setOnClickListener(new	4
27137	setOnClickListener(this)	7
48949	setOnCloseListener(OnCloseListener	5
27602	setOnColorSelectedListener(OnColorSelectedListener	3
47057	setOnDismissListener(PopupWindow.OnDismissListener	8
35093	setOnFocusChangeListener(new	7
46221	setOnItemClickListener	4
46956	setOnItemClickListener(AdapterView.OnItemClickListener	4
46349	setOnItemClickListener(OnItemClickListener	8
47805	setOnItemClickListener(new	4
46464	setOnItemLongClickListener(OnItemLongClickListener	4
45945	setOnItemSelectedListener(OnItemSelectedListener	4
53765	setOnLongClickListener(new	6
42954	setOnLongClickListener(this)	4
44424	setOnMenuItemClickListener(MenuItem.OnMenuItemClickListener	8
42379	setOnMenuItemClickListener(OnMenuItemClickListener	8
48851	setOnQueryTextFocusChangeListener(OnFocusChangeListener	5
49494	setOnQueryTextListener(OnQueryTextListener	5
49599	setOnSearchClickListener(OnClickListener	5
50541	setOnShareTargetSelectedListener(OnShareTargetSelectedListener	4
49056	setOnSuggestionListener(OnSuggestionListener	5
35176	setOnTouchListener(new	15
44754	setOptionalIconsVisible(boolean	4
43751	setOverflowReserved(boolean	4
7455	setParentAccountSelection(String	6
4643	setParentAccountSelection(long	26
25829	setParentAccountSelection(mAccountsDbAdapter.getID(mParentAccountUID))	10
26791	setParentAccountSelection(mParentAccountId)	8
26765	setParentAccountSelection(parentAccountId)	15
7784	setParentAccountSelection(parentUID)	6
51205	setParentUID(@Nullable	4
31873	setParentUID(String	11
32202	setPeriod(PeriodType	4
19420	setPeriod(long	11
9544	setPeriodEnd(Timestamp	5
7904	setPeriodEnd(int	18
53509	setPeriodNum(long	2
34767	setPeriodStart(Timestamp	7
53443	setPeriodType(PeriodType	2
8584	setPeriodType(periodType)	8
27188	setPlaceHolderFlag(boolean	15
40278	setPosition(int	4
43820	setPresenter(ActionMenuPresenter	4
45530	setPrimaryBackground(Drawable	4
62170	setPrimaryItem(ViewGroup	3
46878	setProgress()	4
47212	setProgress(a.getInt(/*R.styleable.*/ProgressBar_progress,mProgress))	4
37997	setProgress(int	16
46840	setProgress(mProgress	4
47544	setProgress(progress,false)	4
46759	setProgress(ss.progress)	4
38534	setProgressBarIndeterminate(boolean	12
37766	setProgressBarIndeterminateVisibility(boolean	12
38180	setProgressBarVisibility(boolean	12
46600	setProgressDrawable(Drawable	4
47418	setProgressDrawable(drawable)	4
47807	setPrompt(CharSequence	4
48101	setPrompt(getContext().getText(promptId))	4
47907	setPromptId(int	4
48090	setPromptPosition(POSITION_PROMPT_ABOVE)	4
47415	setPromptPosition(int	4
48109	setPromptText(CharSequence	4
41237	setProperty(Property	7
41225	setProperty(property)	4
41332	setPropertyName(String	7
41662	setPropertyName(propertyName)	4
48994	setProvider(ActionProvider	4
61827	setQuantity(Money	3
51626	setQuantity(amount)	8
63024	setQuantity(new	4
51591	setQuantity(quantity)	4
49509	setQuery(CharSequence	9
49724	setQuery(newQuery)	5
49717	setQuery(oldQuery)	5
49865	setQuery(queryText)	5
49363	setQueryHint(CharSequence	5
49539	setQueryHint(queryHint)	5
49923	setQueryRefinement(int	5
50486	setQueryRefinementEnabled(boolean	5
36140	setQuoteFlag(int	10
42976	setQwertyMode(boolean	16
53513	setReconcileDate(Timestamp	2
53633	setReconcileState(char	2
3979	setRecurrence(@NonNull	8
9193	setRecurrence(PeriodType	6
2511	setRecurrence(Recurrence	5
8934	setRecurrence(recurrence)	6
18133	setRecurrencePeriod(long	13
42280	setRepeatCount(int	4
41820	setRepeatMode(int	4
42690	setReserveOverflow(boolean	4
1952	setResult(RESULT_CANCELED)	17
57627	setResult(RESULT_OK)	3
34233	setResult(RESULT_OK,new	6
54786	setResult(RESULT_OK,resultValue)	5
63508	setRootAccountUID(String	4
63504	setRootTemplateUID(String	4
43278	setScaleX(float	4
42948	setScaleY(float	4
20006	setScheduledActionUID(String	3
42926	setScrollX(int	4
42435	setScrollY(int	4
49825	setSearchView(SearchView	5
49388	setSearchableInfo(SearchableInfo	5
47259	setSecondaryProgress(	4
38670	setSecondaryProgress(int	15
47464	setSecondaryProgress(mSecondaryProgress	4
47264	setSecondaryProgress(ss.secondaryProgress)	4
6952	setSectionHeaderVisibility(View	10
7276	setSectionHeaderVisibility(view,cursor)	8
39201	setSelected	5
39179	setSelected)	13
27280	setSelectedColor(int	3
26960	setSelectedCurrency(Money.DEFAULT_CURRENCY_CODE)	13
24591	setSelectedCurrency(String	15
26028	setSelectedCurrency(currencyCode)	16
38091	setSelectedNavigationItem(int	8
39791	setSelectedNavigationItem(mSavedTabPosition)	4
46055	setSelectedPositionInt(INVALID_POSITION)	4
46470	setSelectedPositionInt(int	4
47855	setSelectedPositionInt(mNextSelectedPosition)	4
46061	setSelectedPositionInt(position)	4
18425	setSelectedRecurrenceOption()	18
35942	setSelectedTransferAccount(accountId)	2
27132	setSelectedTransferAccount(defaultTransferAccountID)	8
36001	setSelectedTransferAccount(doubleAccountId)	2
10604	setSelectedTransferAccount(long	37
29219	setSelectedTransferAccount(mAccountsDbAdapter.getAccountID(split.getAccountUID()))	13
13899	setSelectedTransferAccount(mAccountsDbAdapter.getAccountID(split.getAccountUID()),accountsSpinner)	4
13366	setSelectedTransferAccount(mAccountsDbAdapter.getAccountID(splitAccountUID),accountsSpinner)	3
59669	setSelectedTransferAccount(mAccountsDbAdapter.getID(split.getAccountUID()))	1
31959	setSelectedTransferAccount(mAccountsDbAdapter.getID(splitAccountUID),accountsSpinner)	7
47795	setSelection(IcsSpinner.this.getSelectedItemPosition())	4
52789	setSelection(getText().length())	7
46519	setSelection(int	9
56703	setSelection(resultString.length())	15
47831	setSelection(which)	5
46081	setSelectionInt(int	4
45808	setSelectionInt(position,shouldAnimate)	4
49845	setShareHistoryFileName(String	4
49833	setShareIntent(Intent	4
43307	setShortcut(boolean	12
43070	setShortcut(char	12
43932	setShortcut(itemData.shouldShowShortcut(),itemData.getShortcut())	4
43565	setShortcutsVisible(boolean	8
43638	setShortcutsVisibleInner(boolean	4
43990	setShortcutsVisibleInner(shortcutsVisible)	4
43977	setShortcutsVisibleInner(true)	4
42360	setShowAsAction(actionEnum)	8
43235	setShowAsAction(int	12
43220	setShowAsActionFlags(int	13
49505	setShowDefaultActivity(boolean	4
47369	setShowDividers(int	4
49203	setShowFooterView(boolean	4
39528	setShowHideAnimationEnabled(boolean	4
36273	setSmallestFraction(int	9
36329	setSmallestFraction(smallestFraction)	6
36194	setSmallestFraction_shouldNotUseDigits(){	7
60738	setSource(String	3
63502	setSourceUri(Uri	4
51291	setSplitAccountUID(String	3
45208	setSplitActionBar(boolean	6
44956	setSplitActionBar(getResources_getBoolean(getContext(),	4
45226	setSplitBackground(Drawable	4
38443	setSplitBackgroundDrawable(Drawable	8
1699	setSplitList(List<Split>	43
62931	setSplitList(splitList)	4
33445	setSplitList(splitList,removedSplits)	13
45760	setSplitView(ActionBarContainer	4
45584	setSplitWhenNarrow(boolean	4
51208	setSplits(@NonNull	4
12600	setSplits(List<Split>	15
45147	setStackedBackground(Drawable	4
38728	setStackedBackgroundDrawable(Drawable	8
25376	setStackedData()	6
40341	setStartDelay(long	12
34047	setStartTime(long	6
31203	setStatisticsText(View	5
3006	setStatisticsText(view,bookUID)	9
59632	setStyle(DialogFragment.STYLE_NORMAL,R.style.CustomDialog)	3
59652	setStyle(DialogFragment.STYLE_NORMAL,R.style.Theme_AppCompat_Light_Dialog)	4
63166	setStyle(DialogFragment.STYLE_NO_TITLE,0)	3
51354	setStyle(STYLE_NORMAL,R.style.Sherlock___Theme_Dialog)	4
44402	setSubMenu(SubMenuBuilder	4
47783	setSubUiVisibilityListener(SubUiVisibilityListener	4
50330	setSubmitButtonEnabled(boolean	5
38447	setSubtitle(CharSequence	20
38306	setSubtitle(int	16
39939	setSubtitle(mContext.getResources().getString(resId))	4
39440	setSubtitle(mContext.getString(resId))	8
49732	setSuggestionsAdapter(CursorAdapter	5
56999	setSupportActionBar(@Nullable	6
2000	setSupportActionBar(mToolBar)	3
23250	setSupportActionBar(mToolbar)	6
1269	setSupportActionBar(toolbar)	37
39119	setSupportProgress(int	4
38942	setSupportProgressBarIndeterminate(boolean	4
39103	setSupportProgressBarIndeterminateVisibility(boolean	4
38971	setSupportProgressBarVisibility(boolean	4
39168	setSupportSecondaryProgress(int	4
27571	setSwatchDescription(int	6
27463	setSwatchDescription(rowNumber,tableElements,rowElements,color	3
21158	setTab(index)	8
3376	setTab(int	17
45581	setTabContainer(ScrollingTabContainerView	4
39931	setTabListener(ActionBar.TabListener	4
39240	setTabListener(TabListener	8
48195	setTabSelected(int	4
47993	setTabSelected(mSelectedTabIndex)	4
47641	setTabSelected(mTabSpinner.getSelectedItemPosition())	4
39299	setTag(Object	12
33589	setTag(String	8
40754	setTarget(Object	9
6883	setTargetFilepath(String	7
2259	setTemplate(boolean	4
53545	setTemplateAccountUID(String	5
50283	setText(AutoCompleteTextView	5
39001	setText(CharSequence	8
39171	setText(int	8
56219	setText(isChecked	3
36047	setText(isChecked()	2
39688	setText(mContext.getResources().getText(resId))	4
50487	setText(mQueryTextView,query,true)	5
56733	setText(resultString)	14
46307	setText(text)	4
45900	setText(text.toString().toUpperCase())	5
46071	setText(text.toString().toUpperCase(Locale.ROOT))	5
46197	setTextCompat(CharSequence	5
36479	setTextOff(context.getString(R.string.label_bill))	2
36044	setTextOff(context.getString(R.string.label_charge))	2
34048	setTextOff(context.getString(R.string.label_credit))	5
36420	setTextOff(context.getString(R.string.label_deposit))	2
36251	setTextOff(context.getString(R.string.label_expense))	2
36405	setTextOff(context.getString(R.string.label_income))	2
36316	setTextOff(context.getString(R.string.label_increase))	2
36397	setTextOff(context.getString(R.string.label_invoice))	2
36027	setTextOff(context.getString(R.string.label_receive))	2
36340	setTextOff(context.getString(R.string.label_sell))	2
36396	setTextOn(context.getString(R.string.label_buy))	2
36065	setTextOn(context.getString(R.string.label_charge))	2
34085	setTextOn(context.getString(R.string.label_debit))	5
36158	setTextOn(context.getString(R.string.label_decrease))	2
36414	setTextOn(context.getString(R.string.label_payment))	2
36159	setTextOn(context.getString(R.string.label_rebate))	2
36360	setTextOn(context.getString(R.string.label_spend))	2
36213	setTextOn(context.getString(R.string.label_withdrawal))	2
50156	setThreshold(int	5
51265	setTime(@NonNull	4
35593	setTime(Date	8
35737	setTime(long	4
11466	setTime(transaction.getTimeMillis())	15
29906	setTitle(CharSequence	42
50707	setTitle(getString(R.string.title_setup_gnucash))	7
38663	setTitle(int	24
42552	setTitle(itemData.getTitleForItemView(this))	8
63868	setTitle(mAccountName)	2
38242	setTitle(mActivity.getString(resId))	4
39892	setTitle(mContext.getResources().getString(resId))	4
40121	setTitle(mContext.getString(resId))	8
44663	setTitle(mMenu.getContext().getString(title))	4
59641	setTitle(mNavDrawerEntries[position])	5
42373	setTitleCondensed(CharSequence	12
45492	setTitleImpl(CharSequence	4
45573	setTitleImpl(title)	4
707	setTitleIndicatorColor()	41
19423	setTotalFrequency(int	6
59984	setTotalPlannedExecutionCount(int	3
57218	setTransactionInDbModifiedTimestamp(String	3
57257	setTransactionInDbModifiedTimestamp(transaction.getUID(),	3
52137	setTransactionSuccessful()	11
35699	setTransactionType(TransactionType	2
18111	setTransactionType(transaction.getTransactionType())	5
51227	setTransactionUID(@NonNull	4
33876	setTransactionUID(String	9
51180	setTransactions(@NonNull	4
44	setTransactions(List<Transaction>	19
45341	setTransitioning(boolean	4
42584	setTranslationX(float	5
42759	setTranslationY(float	5
51229	setType(@NonNull	4
23578	setType(String	9
26225	setType(TransactionType	12
51152	setUID(@NonNull	6
18148	setUID(String	26
57551	setUID(source.readString())	7
59593	setUID(sourceSplit.getUID())	1
26894	setUID(transaction.getUID())	5
38006	setUiOptions(int	9
44969	setUp	4
7932	setUp()	134
32690	setUp(){	14
45979	setUp(boolean	4
47673	setUpChild(View	4
48161	setUpChild(child)	4
1824	setUpDateRangeGroups()	7
183	setUpDateRangeGroups(){	7
7736	setUpDbAdapters(String	5
8464	setUpDbAdapters(bookUID)	9
2287	setUpDeleteButton(View	5
2847	setUpDeleteButton(view,context,bookUID)	5
57	setUpDrawer()	34
2371	setUpMenu(View	5
2273	setUpMenu(view,context,cursor,bookUID)	5
23056	setUpNavigationDrawer()	10
34732	setUpRemoteDebuggingFromChrome()	9
594	setUpSpinner()	21
34738	setUpUserVoice()	6
36087	setValue(BigDecimal	14
31581	setValue(Money	11
41214	setValue(Object	4
51717	setValue(amount)	8
62492	setValue(result)	3
51654	setValue(value)	7
58578	setValueDenom(BigDecimal.ONE.scaleByPowerOfTen(exchangeRate.scale()).longValue())	2
23900	setValueDenom(int	8
23899	setValueDenom(long	6
58560	setValueNum(exchangeRate.unscaledValue().longValue())	2
23390	setValueNum(int	7
23424	setValueNum(long	6
41346	setValues()	8
42165	setValues(PropertyValuesHolder...	4
41532	setValues(PropertyValuesHolder.ofFloat(mProperty,values))	4
41531	setValues(PropertyValuesHolder.ofFloat(mPropertyName,values))	4
41156	setValues(PropertyValuesHolder.ofInt(mProperty,values))	4
41699	setValues(PropertyValuesHolder.ofInt(mPropertyName,values))	4
41614	setValues(PropertyValuesHolder.ofObject(mProperty,(TypeEvaluator)null,values))	4
41228	setValues(PropertyValuesHolder.ofObject(mPropertyName,(TypeEvaluator)null,values))	4
41806	setValues(new	4
47361	setVerticalOffset(int	4
49907	setViewDrawable(ImageView	5
50602	setViewDrawable(views.mIcon1,getIcon1(cursor),View.INVISIBLE)	5
50457	setViewDrawable(views.mIcon2,getIcon2(cursor),View.GONE)	5
50319	setViewText(TextView	5
50268	setViewText(views.mText1,text1)	5
50125	setViewText(views.mText2,text2)	5
42894	setVisibility(VISIBLE)	12
46336	setVisibility(View.GONE)	4
45986	setVisibility(View.VISIBLE)	4
42615	setVisibility(int	14
42946	setVisibility(itemData.isVisible()	8
45109	setVisibility(mFinalVisibility)	8
43684	setVisible	9
42663	setVisible(boolean	12
43816	setVisibleInt	4
44706	setVisibleInt(boolean	4
42764	setWidthLimit(int	4
47002	setWillNotDraw(divider	4
46070	setWillNotDraw(false)	4
45698	setWillNotDraw(mIsSplit	4
45141	setWindowCallback(Window.Callback	4
45065	setWindowTitle(CharSequence	4
11013	setelah	12
60058	setmanes</item>	3
3897	sets	77
12228	sets.</string>	4
21210	sette	6
41208	setter	8
41540	setter).	4
41478	setter.	4
41280	setter/getter	7
41776	setterOrGetter	5
44639	setters	8
41282	setters/getters	4
29227	settimana</item>	2
29276	settimane</item>	2
529	setting	119
57009	setting,respect	15
13013	setting,use	5
26235	settingCommodity_shouldSetCurrencyCode(){	7
54397	settingCount_shouldComputeCorrectEndTime(){	5
905	settingCurrencyCode_shouldNotSetCommodity(){	11
51900	settingEndTime_shouldSetRecurrenceEnd(){	5
26384	settingNameShouldNotChangeFullName(){	11
9929	settingRecurrence_shouldSetEndTime(){	12
51935	settingRecurrence_shouldSetScheduledActionStartTime(){	7
51937	settingStartTime_shouldSetRecurrenceStart(){	7
56776	settingUID_shouldSetTransactionUidOfSplits(){	5
860	settings	153
55702	settings)\n	6
34837	settings,<code>false</code>	10
31966	settings.	4
25422	settingsHeader	12
25217	settingsHeader.setText("Settings")	6
25061	settingsHeader.setText(R.string.title_settings)	8
25185	settingsHeader.setTextColor(titleColorGreen)	15
29735	settingsTextView	2
29921	settingsTextView.setText("Settings")	2
24652	settled	9
60703	settlement	3
2271	setup	108
46953	setup(int	4
49466	setup.	5
17092	setup</string>	7
54147	setupAccountSpinnerAdapter()	6
10079	setupAccountSpinnerAdapter(){	9
446	setupActionBarNavigation()	64
13827	setupCheckedListener(EditText	4
41899	setupEndValue(Object	4
40513	setupEndValues()	9
42083	setupGetter(Class	4
41937	setupGetter(targetClass)	5
41792	setupSetter(Class	6
41750	setupSetter(targetClass)	4
41530	setupSetterAndGetter()	4
42027	setupSetterAndGetter(Object	4
42236	setupSetterOrGetter(Class	4
42016	setupSetterOrGetter(targetClass,sGetterPropertyMap,"get",null)	4
41779	setupSetterOrGetter(targetClass,sSetterPropertyMap,"set",mValueType)	4
42080	setupStartValue(Object	4
40929	setupStartValues()	9
41732	setupValue(Object	4
42086	setupValue(target,mKeyframeSet.mKeyframes.get(0))	4
42013	setupValue(target,mKeyframeSet.mKeyframes.get(mKeyframeSet.mKeyframes.size()	4
20124	seus	18
38481	several	41
26096	sezione	5
15869	sh&#233	8
37600	shadow	4
51943	shadowMap,SdkConfig	6
51885	shadowMap.newBuilder().addShadowClass(ShadowCrashlytics.class).build()	6
8802	shadows	6
60634	shall	3
47246	shapeDrawable	4
46841	shapeDrawable.getPaint().setShader(bitmapShader)	4
37146	share	21
56842	shareFile")	4
6651	shareFile(String	40
7246	shareFile(mExportParams.getTargetFilepath())	8
6999	shareFile(mFilePath)	10
56831	shareFile(output.getAbsolutePath())	9
56742	shareFile.	3
8936	shareFiles(List<String>	15
9665	shareFiles(mExportedFiles)	4
9548	shareFiles(sdCardExportedFiles)	9
50563	shareHistoryFile	4
49780	shareHistoryFile)	4
6593	shareIntent	31
50534	shareIntent)	4
8715	shareIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)	2
7227	shareIntent.putExtra(Intent.EXTRA_EMAIL,new	25
6752	shareIntent.putExtra(Intent.EXTRA_STREAM,Uri.parse("file://"	9
7271	shareIntent.putExtra(Intent.EXTRA_STREAM,Uri.parse("file://"+	14
9531	shareIntent.putExtra(Intent.EXTRA_STREAM,exportFiles)	11
50171	shareIntent.putExtra(Intent.EXTRA_STREAM,uri.toString())	4
6471	shareIntent.putExtra(Intent.EXTRA_SUBJECT,"Gnucash	6
6768	shareIntent.putExtra(Intent.EXTRA_SUBJECT,getString(R.string.title_export_email))	9
7213	shareIntent.putExtra(Intent.EXTRA_SUBJECT,mContext.getString(R.string.title_export_email))	5
8739	shareIntent.putExtra(Intent.EXTRA_SUBJECT,mContext.getString(R.string.title_export_email,	13
6723	shareIntent.putExtra(Intent.EXTRA_TEXT,"Gnucash	4
35244	shareIntent.putExtra(Intent.EXTRA_TEXT,extraText)	10
6853	shareIntent.putExtra(Intent.EXTRA_TEXT,getString(R.string.description_export_email)	13
6953	shareIntent.putExtra(Intent.EXTRA_TEXT,mContext.getString(R.string.description_export_email)	10
9833	shareIntent.putParcelableArrayListExtra(Intent.EXTRA_STREAM,exportFiles)	5
6667	shareIntent.setType("application/xml")	18
50606	shareIntent.setType("image/*")	4
52175	shareIntent.setType("multipart/x-ofx")	2
63744	shareIntent.setType("multipart/xml")	3
36563	shareIntent.setType("text/plain")	3
9763	shareIntent.setType("text/xml")	9
13143	shared	26
1713	sharedPreferences	51
25046	sharedPreferences.edit()	6
25130	sharedPreferences.edit().remove(getString(R.string.key_google_drive_app_folder_id)).commit()	8
57041	sharedPreferences.getString(	3
55254	sharedPreferences.getString(KEY_BACKUP_FILE,null)	4
1967	sharedPreferences.getString(UxArgument.PASSCODE,"")	6
51724	sharedPreferences.getString(context.getString(R.string.key_google_drive_app_folder_id),null)	7
2652	sharedPreferences.getString(getString(R.string.key_default_currency),	4
3192	sharedPreferences.getString(getString(R.string.key_default_currency),Money.DEFAULT_CURRENCY_CODE)	11
25137	sharedPreferences.getString(getString(R.string.key_google_drive_app_folder_id),null)	8
5491	sharedPreferences.getString(keyChartCurrency,null)	5
28166	sharedPreferences.getString(mContext.getString(R.string.key_google_drive_app_folder_id),"")	13
9524	sharedPrefs	65
9657	sharedPrefs.edit()	4
57037	sharedPrefs.getBoolean(context.getString(R.string.key_save_opening_balances),defaultValue)	12
34847	sharedPrefs.getBoolean(context.getString(R.string.key_use_double_entry),defaultValue)	7
56937	sharedPrefs.getBoolean(context.getString(R.string.key_use_double_entry),false)	10
59871	sharedPrefs.getBoolean(context.getString(R.string.key_use_double_entry),true)	5
20790	sharedPrefs.getBoolean(getString(R.string.key_use_double_entry),false)	34
26755	sharedPrefs.getBoolean(getString(R.string.key_use_double_entry),true)	17
23103	sharedPrefs.getBoolean(keySaveOpeningBalance,false)	6
23127	sharedPrefs.getBoolean(keyUseDoubleEntry,true)	6
30221	sharedPrefs.getString(getString(R.string.key_default_export_format),ExportFormat.QIF.name())	24
9189	sharedPrefs.getString(keyAccessToken,null)	2
8932	sharedPrefs.getString(keyDefaultEmail,null)	2
9692	sharedPrefs.getString(keyDefaultExportFormat,null)	2
23093	sharedPrefs.getString(keyLastExportTime,TimestampHelper.getTimestampFromEpochZero().toString())	6
44247	shares	4
9740	sharing	31
9151	sheet	12
60897	shekel"	3
16534	shekel</item>	13
9889	shell	19
39152	sherlock	9
38920	sherlockItem	4
39139	sherlockItem.invoke()	4
48023	shift	4
47843	shifted	4
16695	shilling</item>	6
13284	short	8
37470	shortcut	21
43292	shortcut)	8
43367	shortcut).	4
44893	shortcut.	12
43361	shortcutChar	4
44620	shortcutKey	4
42453	shortcutKey)	12
48531	shortcutString)	4
48276	shortcutString.charAt(0)	4
37706	shortcuts	20
48265	shortcuts)	4
48287	shortcuts).	4
48267	shortcuts.	5
43569	shortcutsVisible	4
43670	shortcutsVisible)	8
1930	should	433
19223	shouldAddAccountsToDatabase(){	14
61777	shouldAddTransactionsAndSplitsWhenAddingAccounts(){	5
46046	shouldAnimate	4
34100	shouldAutoBalanceTransactions(){	4
25520	shouldAutoCreate()	4
53427	shouldAutoNotify()	2
4791	shouldBalanceTransactionsOnSave(){	10
18690	shouldBeAlphabeticallySortedByDefault(){	9
54328	shouldClearAllTablesWhenDeletingAllAccounts(){	9
54359	shouldComputeAbsoluteAmountSum(){	2
36037	shouldComputeAccountBalanceCorrectly(){	12
61765	shouldCreateAccountHierarchy(){	5
57304	shouldCreateBackup(){	7
57356	shouldCreateBackupFileName()	4
32754	shouldCreateBackupFileName(){	10
58847	shouldCreateDefaultRootAccount(){	8
36632	shouldCreateExportSchedule(){	12
10210	shouldCreateImbalanceAccountOnDemand(){	15
36615	shouldCreateInversePair(){	9
51248	shouldDecreaseBalance(@NonNull	4
2646	shouldDecreaseBalance(AccountType	10
45365	shouldDelayChildPressedState()	4
63750	shouldDeleteAllTransactions</p>	1
59725	shouldDeleteSplitsWhenAccountDeleted(){	6
7362	shouldDeleteTransactionsAfterExport()	3
8956	shouldDisplayBalance	6
9089	shouldDisplayBalance)	4
62038	shouldDisplayFullCurrencyList(){	3
50891	shouldExecuteScheduledBackup(ScheduledAction	8
63752	shouldExportAllTransactions	1
6652	shouldExportAllTransactions()	6
36299	shouldFailToParseWronglyFormattedInput()	7
54306	shouldFetchOnlyEnabledScheduledActions(){	2
33334	shouldGenerateValidCsv(){	16
26392	shouldGetDescendantAccounts(){	3
52714	shouldGetLastExportTimeCurrentValue()	2
52720	shouldGetLastExportTimeDefaultValue()	5
52670	shouldGetTimestampForEpochZero()	5
52616	shouldGetTimestampForNow()	5
52633	shouldGetTimestampForUtcString()	5
52569	shouldGetTimestampFromEpochZero()	4
52707	shouldGetTimestampFromNow()	4
52572	shouldGetTimestampFromUtcString()	4
52465	shouldGetUtcStringForTimestamp()	5
52595	shouldGetUtcStringFromTimestamp()	4
34088	shouldHaveAccountInDatabase(){	10
34036	shouldHaveTransactionInDatabase(){	4
13282	shouldHideParentAccountViewWhenNoParentsExist(){	30
42983	shouldIncludeItem(int	8
39426	shouldInstallDecor)	5
50859	shouldInstrument(ClassInfo	4
54244	shouldNotCompactBudgetAmountsWithDifferentAmounts(){	2
36622	shouldNotOfferXmlExportInSingleEntryMode(){	8
13572	shouldOnlySaveOnePricePerCommodityPair(){	4
30448	shouldOpenBookManager()	7
32560	shouldOpenBookManager(){	5
33434	shouldParseCsv(){	10
12002	shouldReassignDescendantAccounts(){	8
26273	shouldRecursivelyDeleteAccount(){	8
35661	shouldReduceBalance	6
35628	shouldReduceBalance){	6
62084	shouldRunWizardToEnd(){	3
3516	shouldSaveOpeningBalances(boolean	17
52474	shouldSetDefaultTransferColumnToNull_WhenTheAccountIsDeleted(){	7
33919	shouldSetFullNameWhenCreated(){	4
44670	shouldShowIcon()	4
44307	shouldShowShortcut()	4
34923	shouldShowWizardOnFirstRun()	11
59912	shouldShowWizardOnFirstRun(){	6
52638	shouldSubtractTimeZoneOffset()	5
58901	shouldUpdateFullNameAfterParentChange(){	7
9133	shouldn't	14
44091	shouldn't.	4
835	show	150
38972	show()	21
39595	show(boolean	4
39925	show(false)	4
39389	show(true)	4
38148	show)	8
49884	show,or	5
46060	show.	4
39485	show/hide	4
13379	showAccountFormFragment(Bundle	18
30594	showAccountFormFragment(args)	11
13596	showAccountFormFragment(intent.getExtras())	6
64185	showAddAccountDialog()	3
51340	showAddAccountDialog(0)	4
51371	showAddAccountDialog(long	9
51337	showAddAccountDialog(mSelectedItemId)	3
19440	showAddAccountFragment(0)	17
60444	showAddAccountFragment(String	8
18447	showAddAccountFragment(long	19
19802	showAddAccountFragment(mParentAccountId)	6
30625	showAddAccountFragment(mSelectedItemId)	10
13668	showAddAccountFragment(parentAccountId)	12
20693	showAddAccountFragment(parentAccountUID)	8
58658	showAllScheduledEventsFragment()	5
58668	showAllScheduledEventsFragment(){	3
37689	showAsAction	12
44549	showAsAction)	4
57518	showBudgetAmountEditorFragment(Bundle	3
57494	showBudgetAmountEditorFragment(intent.getExtras())	3
53986	showBudgetFormFragment(Bundle	5
53866	showBudgetFormFragment(intent.getExtras())	5
54850	showBulkMoveDialog()	7
13932	showBulkMoveDialog(){	18
50519	showClose	5
27418	showColorPickerDialog()	3
1758	showColorPickerDialog(){	16
30611	showConfirmationDialog(long	25
25474	showConfirmationDialog(rowId)	27
38191	showCustom	8
38160	showCustom)	12
52777	showCustomKeyboard(View	15
52765	showCustomKeyboard(v)	19
49184	showDefaultActivity	4
49636	showDefaultActivity,	4
57019	showDeleteAccountsDialog()	3
57134	showDeleteAccountsDialog(){	3
57045	showDeleteTransactionsDialog()	3
25851	showDeleteTransactionsDialog(){	6
46623	showDividers	4
47131	showDividers)	4
60655	showEditAccountFragment(String	5
27853	showEditAccountFragment(accountId)	11
58800	showEditAccountFragment(accountUID)	8
30655	showEditAccountFragment(long	8
27682	showExportDialog()	27
30610	showExportDialog(){	9
23740	showExportDialog(FragmentActivity	7
33318	showExportFormFragment(Bundle	8
13095	showExportFormFragment(null)	11
3625	showFirstRunDialog()	10
49181	showFooterView	4
48981	showFooterView)	4
34508	showFormFragment(Fragment	10
34583	showFormFragment(accountFormFragment)	3
54046	showFormFragment(budgetFormFragment)	2
33327	showFormFragment(exportFragment)	8
57479	showFormFragment(fragment)	3
33466	showFormFragment(splitEditor)	5
34712	showFormFragment(transactionFormFragment)	3
38405	showHome	8
38158	showHome)	8
37813	showHomeAsUp	4
38320	showHomeAsUp)	8
44190	showIcon	4
43257	showOverflowMenu()	9
27547	showPaletteView()	3
49196	showPopup()	4
48921	showPopupUnchecked(ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_UNLIMITED)	4
49630	showPopupUnchecked(int	4
49140	showPopupUnchecked(mAdapter.getMaxActivityCount())	4
48843	showPopupUnchecked(mInitialActivityCount)	4
27476	showProgressBarView()	3
39862	showProgressBars(IcsProgressBar	4
39349	showProgressBars(horizontalProgressBar,circularProgressBar)	4
13714	showRecurringTransactionsFragment()	9
18489	showRecurringTransactionsFragment(){	13
54612	showScheduledExportsFragment()	5
54636	showScheduledExportsFragment(){	5
54713	showScheduledTransactionsFragment()	8
54638	showScheduledTransactionsFragment(){	4
44264	showShortcut	4
42892	showShortcut,char	12
49442	showSoftInputUnchecked(SearchView.this,imm,0)	5
49800	showSoftInputUnchecked(View	5
33364	showSplitEditorFragment(Bundle	7
33435	showSplitEditorFragment(intent.getExtras())	7
37790	showTitle	8
38309	showTitle)	12
28096	showToastFromNonUiThread("Couldn't	6
28097	showToastFromNonUiThread(final	6
30603	showTransactionEditFragment(Bundle	5
30659	showTransactionEditFragment(args)	5
30563	showTransactionFormFragment(Bundle	24
19999	showTransactionFormFragment(args)	22
13352	showTransactionFormFragment(intent.getExtras())	6
20003	showTransactionsList()	10
19850	showTransactionsList(){	17
3161	showWhatsNewDialog()	10
3827	showWhatsNewDialog(){	8
3328	showWhatsNewDialog(Context	8
3243	showWhatsNewDialog(this)	19
35208	showed/hided	3
9682	showing	46
38811	showing,<code>false</code>	4
47616	showing,false	4
38767	showing.	12
732	shown	83
44589	shown(if	4
44874	shown)	4
46346	shown).	4
43914	shown,<var>allMenusAreClosing</var>	4
40317	shown,defer	4
42771	shown,false	8
48238	shown,returns	4
37363	shown,so	8
38313	shown,the	4
37714	shown.	16
37109	shown/visible.	4
740	shows	45
42608	showsIcon()	12
44692	showsTextAsAction()	4
15330	shquel	10
23109	shrinkResources	16
38129	shut	4
37047	shwoing	4
2748	si	84
17597	si,e	16
17407	si</string>	15
29283	sia	4
28780	side	14
62906	side-effects	4
62832	side-effects.	4
44143	side.	4
8673	siden	29
34872	sides	8
55994	sidhuvud</string>	2
2338	sido	30
12229	siempre	27
43999	sight.	4
13121	sign	56
61995	sign)	3
62004	sign,and	3
58082	sign,but	6
35848	sign.equals("-")){	5
10928	signaler	3
55139	signature	3
55059	signature[	3
48501	significant	4
25546	significantly	33
23132	signingConfig	24
25431	signingConfigs	4
23186	signingConfigs.debug	15
23089	signingConfigs.release	14
15183	sikker	29
14987	sikkerhetskopi	28
21372	sikkerhetskopi&#8230	16
14959	sikkerhetskopi</string>	30
21919	sikkerhetskopien	21
15267	sikkerhetskopier	24
14975	sikkerhetskopier</string>	11
52012	sikkerhetskopiering	4
15242	sikkerhetskopiering</string>	33
21433	sikkerhetskopimappen.	8
8535	sikkert	13
45269	silly	4
36518	silver	7
48770	similar	12
60311	similar)	3
39734	similar.	8
43644	similarly	4
3371	simple	175
40426	simple,one-way	4
33022	simpleAccount	4
13327	simpleAccount.setCommodity(Commodity.getInstance(ACCOUNTS_CURRENCY_CODE))	5
33109	simpleAccount.setUID(SIMPLE_ACCOUNT_UID)	4
36662	simpleAccountListShouldNotContainTransactions(){	9
30268	simpleDateFormat	8
30238	simpleDateFormat.format(new	6
30376	simpleDateFormatter	5
7698	simpleScheduledTransactionImport()	3
7796	simpleTransactionImport()	8
61332	simpler	3
59787	simplified	3
51613	simplististic	15
12013	simply	57
39773	simulate	4
40449	simultaneously.	4
1279	since	273
59993	sincronitzaci</string>	3
21071	sincroniza&#231	11
15994	sincronizaci&#243	8
15661	sincronizacin	7
11377	sincronizacin</string>	8
4199	sincronizao	10
64125	sincronizao</string>	2
29403	sincronizzazione	11
64123	sincronizzazione</string>	2
5880	sind	19
17074	sinds	57
5779	single	84
63940	single-entry	3
62995	singleCurrencyTrn	4
62811	singleCurrencyTrn.getSplits()	4
43663	singleItem	4
48449	singleton	4
50703	singletons	11
15419	siria</item>	14
8151	siste	36
61418	sites:	3
16040	sito</string>	19
41741	sitting	4
24853	situation	25
40717	situation.</p>	4
37374	situations	12
48324	situations,it	4
47745	six	4
4211	size	43
42666	size()	16
27495	size)	26
27121	size,columns,and	3
27608	size,int	3
32061	size.	20
4662	size</string>	111
48114	sizes,oh	4
40293	sizes.	4
17168	sjabloon</string>	3
14661	skal	73
56372	skapa	2
56092	skapandet	2
56248	sker	2
56117	skerhetskopia	2
56283	skerhetskopia&#8230	2
56404	skerhetskopia.	2
56083	skerhetskopia</string>	2
56422	skerhetskopian	2
55877	skerhetskopieringar</string>	2
56029	skerhetskopieringsfil</string>	2
56215	skerhetskopieringsfiler	2
56426	skerhetskopieringsinstllningar)\n	2
55998	skerhetskopior	2
55938	skicka	2
48199	skip	12
52782	skipPasscode	8
29837	skipUUID	13
29780	skipUUID.addAll(mAccountsDbAdapter.getDescendantAccountUIDs(account.getUID(),null,null))	12
51074	skipped,all	12
60312	skipped</p>	3
26629	skippedUUID	4
27010	skippedUUID.addAll(mAccountsDbAdapter.getDescendantAccountUIDs(account.getUID(),null,null))	4
62301	skipping	4
56373	skivor</string>	2
55857	skrivbord</string>	2
15045	skru	11
56237	skulder</string>	2
10422	skulle	9
17337	skumulowanej	13
16823	slaan!</string>	7
16531	slaan.</string>	30
15584	slas	13
63041	slate	4
11517	slectionn(s)</string>	13
11472	slectionne	3
16258	slectionner	14
2205	sleep	11
13455	sleep(1000)	41
13708	sleep(2000)	19
2398	sleep(500)	10
58665	sleep(5000)	4
3984	sleep(long	26
43010	sleeping	4
28089	slett	4
8251	slette	29
51992	sletteoperasjoner\n	7
21637	slettes	20
21180	slettes!!</string>	8
21711	slettes</string>	8
14739	slettet	20
15177	slettet!!</string>	12
2497	slettet!</string>	34
8296	slettet.	22
8278	slettet.</string>	13
21218	slettet.\n\nEr	9
14689	slettet</string>	29
7517	sletting	47
15068	sletting)	24
14755	sletting</string>	31
2997	slice	101
61870	slice"	3
50680	slice.	4
24654	slices	14
24849	slices.	6
57187	slideOffset)	3
48807	sliding	4
41631	slight	4
27548	slightly	11
55715	sloky	2
20640	slot	23
25842	slotKey	13
31043	slotKey,	4
64158	slotKey.add(GncXmlHelper.KEY_COLOR)	2
64166	slotKey.add(GncXmlHelper.KEY_DEFAULT_TRANSFER_ACCOUNT)	2
24860	slotKey.add(GncXmlHelper.KEY_EXPORTED)	5
32219	slotKey.add(GncXmlHelper.KEY_FAVORITE)	4
19749	slotKey.add(GncXmlHelper.KEY_FROM_SCHED_ACTION)	3
24773	slotKey.add(GncXmlHelper.KEY_NOTES)	5
57470	slotKey.add(GncXmlHelper.KEY_PLACEHOLDER)	5
53400	slotKey.add(String.valueOf(period))	2
53369	slotKey.clear()	2
28665	slotKey.size()	7
32224	slotKey.size())	4
32274	slotKeyNode	8
32196	slotKeyNode.appendChild(doc.createTextNode(key))	8
32053	slotKeys	3
59203	slotKeys.add(GncXmlHelper.KEY_CREDIT_FORMULA)	2
36281	slotKeys.add(GncXmlHelper.KEY_CREDIT_NUMERIC)	6
36409	slotKeys.add(GncXmlHelper.KEY_DEBIT_FORMULA)	6
36227	slotKeys.add(GncXmlHelper.KEY_DEBIT_NUMERIC)	6
32379	slotKeys.add(GncXmlHelper.KEY_SPLIT_ACCOUNT)	3
58722	slotKeys.add(GncXmlHelper.KEY_SPLIT_ACCOUNT_SLOT)	1
5083	slotKeys.add(type	9
32110	slotNode	8
32414	slotNode.appendChild(slotKeyNode)	8
32250	slotNode.appendChild(slotValueNode)	8
26090	slotType	12
31372	slotType,	4
19545	slotType.add(GncXmlHelper.ATTR_VALUE_GUID)	3
53702	slotType.add(GncXmlHelper.ATTR_VALUE_NUMERIC)	2
24784	slotType.add(GncXmlHelper.ATTR_VALUE_STRING)	12
53547	slotType.clear()	2
32173	slotType.size()	4
32365	slotTypes	3
32343	slotTypes.add(GncXmlHelper.ATTR_VALUE_GUID)	5
36269	slotTypes.add(GncXmlHelper.ATTR_VALUE_NUMERIC)	6
5653	slotTypes.add(GncXmlHelper.ATTR_VALUE_STRING)	13
24613	slotValue	10
64167	slotValue)	2
19479	slotValue.add("false")	12
32197	slotValue.add(Boolean.toString(cursor.getInt(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_FAVORITE))	6
57514	slotValue.add(Boolean.toString(cursor.getInt(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_PLACEHOLDER))	5
53637	slotValue.add(amount.getNumerator()	2
64170	slotValue.add(color)	2
64161	slotValue.add(defaultTransferAcctUID)	2
24921	slotValue.add(notes)	5
19550	slotValue.add(scheduledActionUID)	3
53657	slotValue.clear()	2
32391	slotValue.size()	4
32058	slotValueNode	8
32316	slotValueNode.appendChild(doc.createTextNode(value))	8
35763	slotValueNode.setAttribute("type","string")	4
54281	slotValueNode.setAttribute(ATTR_KEY_TYPE,ATTR_VALUE_STRING)	4
32068	slotValueNode.setAttribute(ATTR_KEY_TYPE,valueType)	4
32450	slotValues	3
36261	slotValues.add(GncXmlHelper.formatSplitAmount(splitAmount,trnCommodity))	4
36322	slotValues.add(GncXmlHelper.formatSplitAmount(splitAmount,trxCurrency))	6
4318	slotValues.add(GncXmlHelper.formatTemplateSplitAmount(splitAmount))	8
6212	slotValues.add(GncXmlHelper.getNumberFormatForTemplateSplits().format(value.doubleValue()))	6
58675	slotValues.add(cursor.getString(cursor.getColumnIndexOrThrow("split_acct_uid")))	3
32211	slotValues.add(splitAccountUID)	3
8215	slots	29
25889	slots,color,placeholder,default	11
844	slow	11
21077	slow,but	4
10850	slutfrs</string>	7
14951	sm	14
37039	small	12
44243	small,simple	4
24633	smaller	18
37695	smaller,sleeker	4
36274	smallest	20
61063	smallest-fraction	6
62292	smallest-fraction.	3
58021	smallest-fraction="1"	9
58489	smallest-fraction="100"	9
58455	smallest-fraction="1000"	9
57962	smallest-fraction="10000"	6
55337	smallest-fraction="1000000"	8
58136	smallest-fraction="5"	6
58135	smallest-fraction="500"	6
36212	smallestFraction	18
36135	smallestFraction)	9
36031	smallestFraction){	6
43706	smallestItemsAt	4
39403	smallestWidthDp	4
62050	smarter	3
43111	smarter.	4
22183	smazat	7
55593	smazn	5
22275	smazn</string>	7
22245	smazny	7
22427	smazny!</string>	7
22343	smazny</string>	9
47772	smoothScrollTo(scrollPos,0)	4
32591	smoothly,then	5
27458	snaking	3
26257	snelle	13
26705	snippet	11
688	so	271
26924	so,it	5
40718	so,mark	4
60599	so,subject	3
41667	so.	8
46913	so:</p>	4
59889	so</p>	3
4068	sobre	20
44771	soft	17
6336	software	64
10974	soit	23
61115	sol"	3
16392	solde	32
10757	soldes	30
49182	solely	4
1409	solo	149
34217	solo,int	5
34212	solo.clickOnView(view)	5
34192	solo.getView(id)	5
22310	solucionados	17
28005	solucionados\n	17
7442	solution	15
14758	som	69
56003	som&#8230	2
15574	somal&#237	10
15315	somal</item>	10
62439	somali</item>	6
3449	some	207
32645	someday	3
25110	someone	3
33461	something	49
9557	sometimes	17
45988	somewhere	19
16296	somme	9
2298	sono	53
11153	sont	27
18797	soon	16
15370	soporta	20
56279	soporte	2
24016	sort	14
48592	sort(Intent	8
41044	sort,which	4
49521	sortActivities()	5
40387	sortNodes	4
40729	sortNodes()	4
40477	sortNodes(),to	4
20202	sortOrder	33
24381	sortOrder){	12
10431	sorte	18
10768	sorted	42
40936	sorted,	4
48572	sorted.	4
54771	sortedBackupFiles	6
2868	sortedBackupFiles)	9
31764	sortedBackupFiles[which]	10
40609	sortedNodes	5
41066	sortedNodes.size()	4
48391	sorter	7
49151	sorter.	4
17126	sorteren</string>	7
22419	sortieren</string>	8
26089	sorting	28
49258	sorting,and	4
40370	sorting,but	4
40755	sorting.	8
2456	sorts	13
27955	sostituire	10
42260	sot	4
29378	sotto-conti.	4
2656	sotto-conti</item>	39
29449	sotto-conti</string>	4
27960	sotto-conti\n	7
2905	sotto-conto</item>	39
16461	sottoconti</string>	15
29515	souboru:\n</string>	3
22203	souboru</string>	7
23710	souhaitez	11
6944	source	91
39209	source)	13
57525	source){	7
49993	source,Intent	4
39322	source.gravity	4
57402	source.readLong()	7
57482	source.readString()	7
62904	source.readString().charAt(0)	4
61283	source:	3
18634	sourceCompatibility	18
35684	sourceSplit	10
33915	sourceSplit,	17
35717	sourceSplit,boolean	6
33857	sourceSplit.mAccountUID	12
35733	sourceSplit.mAmount.absolute()	7
35729	sourceSplit.mMemo	6
33896	sourceSplit.mSplitType	12
34080	sourceSplit.mTransactionUID	8
35686	sourceSplit.mUID	4
33972	sourceSplit.mValue.absolute()	6
50397	sources	5
3494	sous-compte</item>	35
28069	sous-comptes	6
2336	sous-comptes</item>	35
16436	sous-comptes</string>	13
25184	sp	31
24977	sp.getXMLReader()	31
27285	space	39
44873	space,and	4
44638	space,but	4
37781	space,the	4
10896	space.	30
44568	space:	4
43610	spacerCount	4
44076	spacerSize	4
34383	spaces	5
21489	spaces.	19
43414	spacing	8
45218	spacing)	4
46477	spamming	4
56220	spara	2
57318	sparad</string>	3
56109	sparar!</string>	2
10673	spares</string>	5
48364	sparingly!	4
16212	spcifier	5
16451	spcifique	9
18905	spcifiques	7
42347	spec	4
42400	specSize	4
6005	special	50
38787	special?	4
43382	specially	8
442	specific	410
35529	specific)	4
29322	specifica	4
34912	specification	5
22542	specifico	9
47664	specifics	4
47685	specifics,	4
43273	specifics,Intent	13
42969	specifics[ri.specificIndex])	8
1002	specified	264
33479	specified")	13
49892	specified,else	5
48939	specified,null	5
39718	specified,override	8
50197	specified,still	5
60479	specified,the	3
19468	specified,then	11
46951	specified,we	4
27579	specified.	16
48650	specified.")	4
16641	specifieke	7
7197	specifies	9
791	specify	116
20368	specifying	30
47623	specs	4
40970	speed	14
4755	speichern	43
4084	speichern</string>	15
49950	spell	21
46150	spend	4
21748	spent	30
53960	spentAmount	2
11165	spentAmount.asBigDecimal().divide(projectedAmount.asBigDecimal(),	4
11825	spentAmount.getCommodity().getSmallestFractionDigits(),	2
11565	spentAmount.getCurrency().getDefaultFractionDigits(),RoundingMode.HALF_EVEN)	4
11829	spentAmountValue	4
11597	spentAmountValue+	4
53783	spentAmountValue.add(balance.asBigDecimal())	2
11514	spentAmountValue.divide(budgetTotal.asBigDecimal(),	4
27902	spese.\nPermette	19
15143	spesifiser	11
25071	spf	28
25426	spf.newSAXParser()	31
1436	spinner	153
37673	spinner's	4
50414	spinner)	5
46563	spinner,which	4
1518	spinner.	14
47700	spinner.")	4
30001	spinner.getSelectedItem()))	6
647	spinner.setAdapter(dataAdapter)	15
47736	spinner.setLayoutParams(new	4
826	spinner.setOnItemSelectedListener(new	15
7147	spinner.setOnItemSelectedListener(this)	9
37183	spinnerMode="dropdown"	4
37509	spinnerMode="dropdown".	4
47791	spinnerPaddingLeft	4
48039	spinnerPaddingLeft)	4
47671	spinnerPaddingRight	4
47625	spinnerPaddingRight)	4
47698	spinnerPaddingRight))	4
47665	spinnerWidth	4
24477	spinners	16
46925	spinning	4
39618	spinnyProgressBar)	4
39455	spinnyProgressBar.getVisibility()	4
40104	spinnyProgressBar.setVisibility(View.INVISIBLE)	4
39846	spinnyProgressBar.setVisibility(View.VISIBLE)	4
39406	spinnyProgressBar.startAnimation(anim)	4
388	split	266
35452	split")	5
33462	split",Toast.LENGTH_SHORT).show()	13
35337	split"/>	5
14514	split)	30
5780	split){	82
52073	split,UpdateMethod	2
33099	split,as	4
24324	split,then	12
51605	split,which	4
29565	split.	35
8518	split.</p>	5
31910	split.<br>	6
36546	split.createPair("test")	9
31103	split.createPair(account.getUID())	2
31929	split.createPair(transferAcctUID)	9
11543	split.getAccountUID()	37
31955	split.getAccountUID()))	7
11857	split.getAccountUID().equals(	2
10253	split.getAccountUID().equals(accountsDbAdapter.getImbalanceAccountUID(split.getValue().getCurrency()))){	8
31463	split.getAmount()	15
35794	split.getAmount().absolute()	15
24586	split.getAmount().absolute().toPlainString())	15
35648	split.getAmount().absolute().withCurrency(Currency.getInstance(currencyCode))	5
51702	split.getAmount().getCurrency()	11
56594	split.getAmount().getCurrency())	7
35613	split.getAmount().negate()	4
28840	split.getFormattedQuantity()	6
31338	split.getMemo()	5
35524	split.getMemo())	11
35879	split.getMemo().trim().length()	4
10341	split.getQuantity()	10
11215	split.getQuantity().abs()	4
31685	split.getQuantity().absolute()	5
26428	split.getQuantity().getCurrency()	7
52542	split.getQuantity().getDenominator())	10
52690	split.getQuantity().getNumerator())	10
24233	split.getTransactionUID()	8
31885	split.getType()	16
35465	split.getType().name())	11
24193	split.getUID())	11
61800	split.getValue()	3
11976	split.getValue().abs()	6
4556	split.getValue().absolute()	23
31863	split.getValue().absolute().withCurrency(Currency.getInstance(currencyCode))	6
31862	split.getValue().getCurrency()	10
31837	split.getValue().getCurrency())	6
14290	split.getValue().getDenominator())	12
53342	split.getValue().getNumerator())	5
59482	split.mMemo	6
59435	split.mReconcileState)	6
59463	split.mSplitType)	6
34038	split.mUID	10
24566	split.setAccountUID(dstAccountUID)	11
59446	split.setAccountUID(imbAccount.getUID())	2
35917	split.setAccountUID(mAccountsDbAdapter.getAccountUID(id))	5
59679	split.setAccountUID(mAccountsDbAdapter.getUID(id))	4
31041	split.setAmount(amount)	7
33881	split.setAmount(amount.absolute())	4
12283	split.setAmount(split.getAmount().withCurrency(Currency.getInstance(mCurrencyCode)))	8
11169	split.setMemo("Hawaii	12
35997	split.setMemo(mDescription)	4
31752	split.setMemo(mMemo)	9
23148	split.setMemo(memo)	11
31854	split.setMemo(splitMemoEditText.getText().toString())	6
33409	split.setMemo(tokens[10])	5
35754	split.setMemo(tokens[4])	4
58813	split.setMemo(tokens[5])	5
33487	split.setMemo(tokens[9])	7
31820	split.setMemo(viewHolder.splitMemoEditText.getText().toString())	6
62264	split.setQuantity(amount)	7
31730	split.setQuantity(mQuantity)	3
32008	split.setQuantity(mSplitQuantity)	14
33499	split.setQuantity(quantity)	7
31691	split.setQuantity(viewHolder.quantity)	6
54081	split.setQuantity(viewHolder.quantity.abs())	2
53965	split.setQuantity(viewHolder.quantity.absolute())	8
23173	split.setReconcileDate(Timestamp.valueOf(reconcileDate))	5
23174	split.setReconcileState(reconcileState.charAt(0))	5
36686	split.setTransactionUID("random-trx")	6
33312	split.setTransactionUID("terminator-trx")	14
59570	split.setTransactionUID(getUID())	1
31774	split.setTransactionUID(mTransactionUID)	6
12717	split.setTransactionUID(mUID)	14
33386	split.setTransactionUID(tokens[3])	9
33352	split.setTransactionUID(tokens[6])	7
33398	split.setTransactionUID(tokens[7])	5
25423	split.setTransactionUID(transaction.getUID())	30
35484	split.setTransactionUID(transxUID)	11
62818	split.setTransactionUID(uid)	4
33465	split.setType(TransactionType.CREDIT)	19
13649	split.setType(TransactionType.DEBIT)	29
35803	split.setType(TransactionType.valueOf(tokens[3]))	4
58936	split.setType(TransactionType.valueOf(tokens[4]))	5
33507	split.setType(TransactionType.valueOf(tokens[8]))	7
33291	split.setType(TransactionType.valueOf(tokens[9]))	5
23237	split.setType(TransactionType.valueOf(typeName))	14
31895	split.setType(mSplitType)	11
31283	split.setType(mTransactionTypeButton.getTransactionType())	30
31994	split.setType(mTransactionTypeButton.getTransactionType().invert())	14
56718	split.setType(mTransactionTypeSwitch.getTransactionType())	11
56738	split.setType(mTransactionTypeSwitch.getTransactionType().invert())	11
31651	split.setType(splitTypeButton.getTransactionType())	5
13414	split.setType(transactionType)	17
20031	split.setType(type)	20
31488	split.setType(viewHolder.splitTypeButton.getTransactionType())	9
54021	split.setType(viewHolder.splitTypeSwitch.getTransactionType())	5
59579	split.setUID(getUID())	4
31999	split.setUID(splitUidTextView.getText().toString().trim())	5
33492	split.setUID(tokens[0])	5
35511	split.setUID(uid)	3
31631	split.setUID(viewHolder.splitUidTextView.getText().toString().trim())	11
31803	split.setValue(amount)	17
20247	split.toGncXml(doc,trnSplits)	11
7957	split1	17
59980	split1.createPair(mTransferAccount.getUID())	3
63032	split1.setTransactionUID("non-existent")	4
62808	split1.setType(TransactionType.CREDIT)	4
63079	split1.setType(TransactionType.DEBIT)	5
63011	split1.setType(mTransactionTypeSwitch.getTransactionType())	4
7561	split2	27
63040	split2.setTransactionUID("pre-existent")	4
63072	split2.setType(TransactionType.CREDIT)	5
62887	split2.setType(TransactionType.DEBIT)	4
62803	split2.setType(mTransactionTypeSwitch.getTransactionType().invert())	4
26128	split:	11
4981	split</string>	133
51936	split</string>+	1
6531	splitAccountFullName	10
51302	splitAccountId	3
51318	splitAccountId)	3
51286	splitAccountId){	3
31260	splitAccountName	5
11117	splitAccountUID	28
51285	splitAccountUID)	3
51281	splitAccountUID.equals(accountUID)){	3
40086	splitActionBar	4
45110	splitActionBar)	4
4518	splitAmount	12
4920	splitAmount.multiply(denom).stripTrailingZeros().toPlainString()	5
8788	splitAmountEditText	30
56615	splitAmountEditText.addTextChangedListener(amountInputFormatter)	7
13068	splitAmountEditText.addTextChangedListener(mBalanceUpdater)	11
24957	splitAmountEditText.addTextChangedListener(mImbalanceWatcher)	6
13874	splitAmountEditText.addTextChangedListener(new	12
56632	splitAmountEditText.bindListeners(mCalculatorKeyboard)	4
24716	splitAmountEditText.getCleanString()	3
11915	splitAmountEditText.setCommodity(split.getValue().getCommodity())	5
25855	splitAmountEditText.setCurrency(split.getValue().getCurrency())	22
31740	splitAmountEditText.setEnabled(b)	9
13222	splitAmountEditText.setText(split.getAmount().toPlainString())	7
52922	splitAmountEditText.setText(split.getFormattedValue().formattedAmount())	7
52867	splitAmountEditText.setText(split.getFormattedValue().toPlainString())	12
31806	splitAmountEditText.setText(split.getValue().toPlainString())	8
10578	splitAmountEditText.setValue(split.getFormattedValue().asBigDecimal())	8
44950	splitAnim	5
45731	splitAnim.setDuration(FADE_DURATION)	5
13555	splitCount	6
9591	splitCredit	9
33346	splitCsv	9
33481	splitCsvString	5
33273	splitCsvString)	16
33369	splitCsvString.split("	7
9834	splitCurrencyTextView	28
31968	splitCurrencyTextView.setEnabled(b)	6
25843	splitCurrencyTextView.setText(accountCurrency.getSymbol())	27
64300	splitCurrencyTextView.setText(mCommodity.getSymbol())	3
10871	splitCurrencyTextView.setText(split.getValue().getCommodity().getSymbol())	2
10672	splitCurrencyTextView.setText(split.getValue().getCurrency().getSymbol())	19
9666	splitDebit	9
33303	splitEditor	5
33501	splitEditorDialogFragment	8
33387	splitEditorDialogFragment.setTargetFragment(TransactionFormFragment.this,0)	8
33431	splitEditorDialogFragment.show(fragmentManager,FRAGMENT_TAG_SPLITS_EDITOR)	6
35943	splitEditorDialogFragment.show(fragmentManager,TAG_SPLITS_EDITOR_FRAGMENT)	3
62839	splitEditorUsed(){	4
33494	splitFiles	17
56767	splitFiles)	10
56930	splitFiles.add(newFileName)	7
24616	splitItem	8
24813	splitItem.getTag()	8
13067	splitList	80
11632	splitList)	66
12758	splitList){	29
1542	splitList,	34
35832	splitList,List<String>	8
33458	splitList.add(Split.parseSplit(splitCsv))	9
31662	splitList.add(Split.parseSplit(splitString))	12
61546	splitList.add(buildModelInstance(cursor))	3
13193	splitList.add(buildSplitInstance(cursor))	9
31733	splitList.add(split)	10
63038	splitList.add(split1)	4
62797	splitList.add(split2)	4
19936	splitList.addAll(transaction.getSplits())	19
35791	splitList.get(0).getType()	4
56725	splitList.get(0).isPairOf(splitList.get(1))	7
56715	splitList.size()	7
29079	splitListView	4
57665	splitMemo	3
57689	splitMemo.length()	3
9086	splitMemoEditText	24
31785	splitMemoEditText.setEnabled(b)	9
11639	splitMemoEditText.setText(split.getMemo())	30
20330	splitNode	11
21013	splitNode.appendChild(accountNode)	9
21117	splitNode.appendChild(idNode)	11
20970	splitNode.appendChild(memoNode)	11
20869	splitNode.appendChild(quantityNode)	9
20285	splitNode.appendChild(stateNode)	11
20853	splitNode.appendChild(valueNode)	9
33368	splitQIF(File	16
52637	splitQIF(file)	10
33296	splitQIF(file,file)	8
51708	splitQIF(new	10
56845	splitQIF(src,dst)	7
23820	splitQuantityDenom	8
23648	splitQuantityNum	8
10864	splitString	30
31019	splitString)	18
33428	splitString.split("	15
31546	splitStrings	16
33403	splitStrings)	9
31953	splitStrings.add(split.toCsv())	13
19135	splitSum	64
24543	splitSum.add(amount)	19
54858	splitSum.add(amt)	7
31926	splitSum.subtract(amount)	17
54845	splitSum.subtract(amt)	10
34000	splitType	21
7397	splitType)	12
53471	splitType){	5
13799	splitTypeButton	17
13288	splitTypeButton.setAccountType(mAccountsDbAdapter.getAccountType(splitAccountUID))	9
13723	splitTypeButton.setAmountFormattingListener(splitAmountEditText,splitCurrencyTextView)	29
13208	splitTypeButton.setChecked(Transaction.shouldDecreaseBalance(splitTypeButton.getAccountType(),split.getType()))	4
13776	splitTypeButton.setChecked(mBaseAmount.signum()	31
13194	splitTypeButton.setChecked(split.getType())	9
31892	splitTypeButton.setEnabled(b)	6
13475	splitTypeButton.setOnClickListener(new	11
13654	splitTypeButton.setupCheckedListener(splitAmountEditText,splitCurrencyTextView)	4
10119	splitTypeSwitch	5
24814	splitTypeSwitch.addOnCheckedChangeListener(new	3
64295	splitTypeSwitch.setAccountType(mAccountsDbAdapter.getAccountType(splitAccountUID))	3
64297	splitTypeSwitch.setAmountFormattingListener(splitAmountEditText,splitCurrencyTextView)	3
64294	splitTypeSwitch.setChecked(mBaseAmount.signum()	3
64302	splitTypeSwitch.setChecked(split.getType())	3
24681	splitTypeSwitch.setOnCheckedChangeListener(new	6
52166	splitUIDs	11
52264	splitUIDs.add(split.getUID())	11
8895	splitUidTextView	26
31997	splitUidTextView.setEnabled(b)	6
25767	splitUidTextView.setText(BaseModel.generateUID())	10
13505	splitUidTextView.setText(UUID.randomUUID().toString())	26
25864	splitUidTextView.setText(UUID.randomUUID().toString().replaceAll("-",""))	10
11393	splitUidTextView.setText(split.getUID())	26
61841	splitValueDenom	4
24028	splitValueNum	13
61793	splitValueSql	7
9805	splitView	44
45390	splitView)	4
13613	splitView,	5
31958	splitView,Split	17
31845	splitView.findViewById(R.id.btn_remove_split)	16
13415	splitView.findViewById(R.id.btn_split_type)	14
13277	splitView.findViewById(R.id.input_accounts_spinner)	21
13238	splitView.findViewById(R.id.input_split_amount)	21
13118	splitView.findViewById(R.id.input_split_memo)	18
31949	splitView.findViewById(R.id.split_currency_symbol)	19
13806	splitView.findViewById(R.id.split_uid)	21
31945	splitView.getTag()	14
31628	splitView.setTag(viewHolder)	3
39358	splitWhenNarrow	8
45706	splitWhenNarrow)	4
24296	split_acct_uid"	16
24108	split_amount",	24
19391	split_memo",	30
51615	split_quantity_denom",	8
57180	split_quantity_denum",	6
51697	split_quantity_num",	10
19502	split_type",	35
19942	split_uid",	14
51638	split_value_denom",	7
51705	split_value_num",	7
3863	splits	300
34584	splits"	7
897	splits")	39
24520	splits)	39
21881	splits,as	11
29258	splits,one	13
35880	splits,the	6
5718	splits.	38
19289	splits.account_uid	13
35746	splits.add(split)	5
62997	splits.add(split1)	4
63023	splits.add(split2)	4
19093	splits.amount	13
63923	splits.get(0).isPairOf(splits.get(1)))	4
34649	splits.get(0).isPairOf(splits.get(1))){	7
52211	splits.memo	6
24382	splits.size()	18
57713	splits.split_account_uid	6
19233	splits.transaction_uid	17
19168	splits.transaction_uid"	4
18878	splits.type	13
35332	splits:	7
33668	splits</li>	11
36258	splits</p>	15
4560	splits</string>	137
1311	splitsDbAdapter	92
14532	splitsDbAdapter)	9
59781	splitsDbAdapter.addRecord(split)	11
25441	splitsDbAdapter.addSplit(split)	12
18793	splitsDbAdapter.close()	28
883	splitsDbAdapter.computeSplitBalance(accountList,	7
57660	splitsDbAdapter.computeSplitBalance(accountUID)	5
58749	splitsDbAdapter.computeSplitBalance(accountUIDList,currencyCode,hasDebitNormalBalance)	7
58737	splitsDbAdapter.computeSplitBalance(accountUIDList,currencyCode,hasDebitNormalBalance,startTimestamp,endTimestamp)	7
59451	splitsDbAdapter.computeSplitBalance(accountUIDList,currencyCode,true)	7
59411	splitsDbAdapter.computeSplitBalance(accountUIDList,currencyCode,true,startTimestamp,endTimestamp)	7
21267	splitsDbAdapter.computeSplitBalance(accountUidList,currencyCode,hasDebitNormalBalance)	9
21840	splitsDbAdapter.computeSplitBalance(accountUidList,currencyCode,hasDebitNormalBalance,startTimestamp,endTimestamp)	6
34275	splitsDbAdapter.computeSplitBalance(accountsList,currencyCode,hasDebitNormalBalance)	16
18614	splitsDbAdapter.computeSplitBalance(accountsList,currencyCode,hasDebitNormalBalance,start,end)	3
34339	splitsDbAdapter.computeSplitBalance(accountsList,currencyCode,hasDebitNormalBalance,startTimestamp,endTimestamp)	8
35381	splitsDbAdapter.computeSplitBalance(getAccountUID(accountId))	4
35878	splitsDbAdapter.deleteRecord(splitsDbAdapter.getID(removedSplitUID))	8
31392	splitsDbAdapter.deleteSplit(split.getUID())	7
35877	splitsDbAdapter.deleteSplitsForTransactionAndAccount(id,mAccountID)	4
51091	splitsDbAdapter.deleteSplitsForTransactionAndAccount(mTransactionsDbAdapter.getUID(id),mAccountUID)	11
59801	splits_amount	7
59726	splits_memo	4
59744	splits_type	7
16501	splitsingen	7
15238	splitt</string>	21
21208	splitter	17
27554	splitting	21
22073	spn	9
9767	spoon	4
52023	sposb,a	9
16341	spostare	21
42543	spot	4
17764	sprawd	12
58661	sprawdzaj	4
41608	spring	4
4911	spter	19
4573	sql	41
25518	sql,	4
59736	sqlEx)	5
56514	sqle)	7
56576	sqle.printStackTrace()	4
61784	sqlite	6
27273	square	3
1011	square)	10
10805	square.	85
27291	squares	3
27558	squares)	3
27555	squares.	3
16198	sr	7
7240	src	58
55339	src)	3
12222	src,	30
55438	src,@NonNull	3
6663	src,File	33
56752	src,String	6
14378	src.delete()	13
63844	src.getAbsolutePath())	3
14190	src.getName())	7
14195	src.getName(),src.getParent(),dst.getParent()))	3
14355	src.getPath())	3
63871	src.length()	2
14415	src.length())	5
51414	src.listFiles()	3
51427	src.listFiles())	6
14092	src:	11
35510	srcAccountId	4
35460	srcAccountId,long	4
24094	srcAccountUID	19
24341	srcAccountUID,	10
24387	srcAccountUID,@NonNull	4
24068	srcAccountUID,String	6
14359	srcDir	6
55331	srcDir,	5
14420	srcDir,File	6
63817	srcDir.getPath())	3
14329	srcDir.listFiles()){	8
56751	srcFile	6
28182	srcFile.delete()	11
16012	sre	6
62445	srvio</item>	6
45957	ss	8
46357	ss.position	4
46936	ss.progress	4
47256	ss.secondaryProgress	4
46168	ss.selectedId	4
50193	ssb	5
50107	ssb.append(hintText)	5
49765	ssb.setSpan(new	5
5330	ssen	30
16713	staaf	5
17059	staaf/cirkeldiagram</string>	7
38784	stable	9
3415	stack	40
39313	stack.	9
7590	stack.add((float)	17
30060	stack.add(balance)	7
30095	stack.get(k)	6
8569	stack.get(stack.size()	21
3792	stack.peek()	14
2700	stack.pop()	18
2937	stack.push(account)	10
54559	stack.push(map.get(acc.getParentUID()))	6
2943	stack.push(parentAccount)	5
30051	stack.size()	5
30079	stack.size(),labels.size()).toString()	12
29980	stackLabels	17
29983	stackLabels))	4
29979	stackLabels.substring(1,stackLabels.length()	12
29974	stack[]	7
29967	stack[j	7
30018	stack[j++]	7
915	stacked	125
62686	stackedValues[]	3
62673	stackedValues[i++]	3
7028	stamp	14
63793	stamps,we	2
16969	standaard	31
37645	standalone	5
17998	standalone="no"?>	24
190	standard	137
24080	standard)	8
14888	standard,KREDIT	17
55988	standard,kommer	2
34442	standardOutput	15
34488	standardOutput.toString()	5
21657	standardkontoer</string>	18
22928	standardkontoer\n\nDine	7
56324	standardkonton</string>	2
55894	standardkontostrukturen</string>	2
5753	standardmig	16
14745	standardvaluta</string>	24
55986	stapel	2
56290	stapel-/cirkeldiagrammet</string>	2
3995	star	21
17806	stare	18
1039	start	219
50820	start")	1
40028	start()	18
40917	start()'d,whether	8
41905	start()'d.	4
25107	start(Context	9
42168	start(boolean	4
41971	start(false)	4
41826	start(true)	4
43602	start)	17
50893	start))	6
2349	start,	51
32533	start,LocalDateTime	16
343	start,int	47
712	start,long	34
40588	start,repeat,and	4
49089	start.	4
25203	start.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime()	4
25164	start.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime()	4
26816	start.plusMonths(1)	7
62664	start.toString("	3
25010	start.toString("MM	8
25229	start.toString("dd	5
53042	start/closing	2
41217	start/end	4
30223	startActionCreateAccount()	10
18643	startActionMode()	21
18602	startActionMode(){	29
38600	startActionMode(ActionMode.Callback	12
39812	startActionMode(com.actionbarsherlock.view.ActionMode.Callback	5
45299	startActionModeForChild(View	4
36564	startActivity(Intent.createChooser(shareIntent,"Sharing	3
6934	startActivity(Intent.createChooser(shareIntent,getString(R.string.title_share_ofx_with)))	11
56091	startActivity(accountsActivityIntent)	4
27832	startActivity(createNewAccountIntent())	6
13928	startActivity(createTransactionIntent)	21
433	startActivity(intent)	60
774	startActivity(new	92
30637	startActivity(restartIntent)	8
34242	startActivityForResult(	8
54106	startActivityForResult(addAccountIntent,0x11)	2
13483	startActivityForResult(addAccountIntent,AccountsActivity.REQUEST_EDIT_ACCOUNT)	25
54000	startActivityForResult(addAccountIntent,REQUEST_CREATE_BUDGET)	2
19897	startActivityForResult(addAccountIntent,REQUEST_EDIT_ACCOUNT)	11
53740	startActivityForResult(addAccountIntent,REQUEST_EDIT_BUDGET)	2
20823	startActivityForResult(chooser,AccountsActivity.REQUEST_PICK_ACCOUNTS_FILE)	20
27841	startActivityForResult(chooser,AccountsListFragment.REQUEST_PICK_ACCOUNTS_FILE)	14
62257	startActivityForResult(chooser,REQUEST_PICK_ACCOUNTS_FILE)	5
55444	startActivityForResult(createIntent,REQUEST_BACKUP_FILE)	5
55309	startActivityForResult(createIntent,REQUEST_EXPORT_FILE)	5
723	startActivityForResult(createTransactionIntent,REQUEST_EDIT_TRANSACTION)	6
1157	startActivityForResult(editAccountIntent,AccountsActivity.REQUEST_EDIT_ACCOUNT)	17
30787	startActivityForResult(editAccountIntent,REQUEST_EDIT_ACCOUNT)	9
13787	startActivityForResult(intent,0x1)	6
54065	startActivityForResult(intent,0x10)	2
34050	startActivityForResult(intent,PASSCODE_REQUEST_CODE)	11
57073	startActivityForResult(intent,REQUEST_CHANGE_PASSCODE)	5
57513	startActivityForResult(intent,REQUEST_EDIT_BUDGET_AMOUNTS)	3
33348	startActivityForResult(intent,REQUEST_SPLIT_EDITOR)	9
1510	startActivityForResult(new	19
27085	startActivityForResult(openDocument,REQUEST_OPEN_DOCUMENT)	6
1	startActivityForResult(passIntent,GeneralPreferenceFragment.REQUEST_DISABLE_PASSCODE)	7
1292	startActivityForResult(passIntent,PasscodePreferenceFragment.REQUEST_DISABLE_PASSCODE)	5
57556	startActivityForResult(passIntent,REQUEST_DISABLE_PASSCODE)	5
41781	startAnimation()	10
2806	startDate	75
34016	startDate)	6
6796	startDate,	6
32411	startDate,Date	6
56550	startDate,long	3
30122	startDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime()	10
53497	startDate.dayOfMonth().withMaximumValue().plusMonths(interval)	2
53551	startDate.dayOfMonth().withMaximumValue().plusMonths(numberOfPeriods)	2
29940	startDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime()	7
34846	startDate.dayOfWeek().getAsText()	4
34753	startDate.dayOfWeek().withMaximumValue().plusWeeks(interval)	4
34822	startDate.dayOfWeek().withMaximumValue().plusWeeks(numberOfPeriods)	4
53375	startDate.dayOfYear().withMaximumValue().plusYears(interval)	2
53654	startDate.dayOfYear().withMaximumValue().plusYears(numberOfPeriods)	2
32401	startDate.getTime()	6
53506	startDate.monthOfYear().getAsText()	2
34733	startDate.plusDays(numberOfPeriods)	2
34817	startDate.plusHours(numberOfPeriods)	2
18519	startDate.plusMonths(1)	21
34195	startDate.plusMonths(3)	12
34144	startDate.plusYears(1)	13
30015	startDate.toString("	20
34150	startDate.toString("MM	14
3550	startDate.toString("dd	15
34483	startDate.toString("yy"))	9
34145	startDate.toString("yyyy"))	9
53707	startDate.weekOfWeekyear().getAsText()	2
2569	startDate.withDayOfMonth(1)	7
53470	startDate.year().getAsText()	2
26756	startDateFormat	5
39547	startDelay	14
41731	startDelay'd	4
39660	startDelay)	12
41800	startDelay,place	4
40106	startDelay,the	4
40800	startDelay.	8
44140	startDispatchingItemsChanged()	7
2090	startElement(String	50
31018	startExport()	7
4956	startExport(){	34
40863	startFloat	4
40544	startFloat)	4
40539	startIfReady(Animator	4
40722	startIfReady(animation)	4
40941	startInt	4
40618	startInt))	4
43527	startLeft	4
25465	startPeriod	4
46639	startPosition	4
46923	startPosition,int	4
34836	startScheduledActionExecutionService(Context	14
62549	startScheduledEventExecutionService(){	3
20940	startScheduledEventExecutionService(Context	4
3185	startTime	79
34841	startTime)	10
2599	startTime))	30
8567	startTime){	10
50817	startTime.	8
8061	startTime.plus(jodaPeriod)	5
34858	startTime.plusDays(factor)	5
34878	startTime.plusHours(factor)	2
59930	startTime.plusMonths(factor)	3
59933	startTime.plusWeeks(factor)	3
55725	startTime.plusWeeks(mRecurrence.getMultiplier())	3
59953	startTime.plusYears(factor)	3
59955	startTime.toDate().getTime()	3
55836	startTime.withDayOfWeek(jodaWeekDay)	3
21409	startTimestamp	12
2427	startTimestamp,	33
3246	startTimestamp,long	24
12795	startTransferFunds()	36
31480	startTransferFunds(Currency	5
31611	startTransferFunds(currency,Currency.getInstance(targetCurrency))	5
40905	startValue	8
41024	startValue,Integer	4
40829	startValue,Number	4
41724	startValue,T	4
41011	startValue.floatValue()	4
62539	startWakefulService(context,service)	3
20519	startXmlFileChooser(Activity	19
54867	startXmlFileChooser(Fragment	2
9807	started	78
41000	started,and	4
40140	started,ended,and	4
42121	started,even	4
38219	started,or	4
41987	started,then	4
40478	started.	19
63656	started</p>	3
3084	starting	79
42204	starting).	4
33652	starts	27
14156	starts")	11
41339	starts,to	4
40621	starts.	4
21626	startsaldo	10
21771	startsaldoer</string>	10
3816	state	145
38878	state's	4
42614	state)	21
44386	state),notify	4
40365	state,with	4
24693	state.	35
45567	state.expandedMenuItemId	4
43512	state.getSparseParcelableArray(PRESENTER_KEY)	4
49926	state.handleUpEvent(event)	5
45497	state.isOverflowOpen	4
43128	state.openSubMenuId	4
50588	state.startTracking(event,this)	5
20395	stateNode	9
20653	stateNode.appendChild(doc.createTextNode("n"))	9
3270	statement	79
35037	statement,Description	2
59808	statement.	1
20143	statement.</p>	2
54593	statement.bindString(1,name)	7
55156	statement.bindString(1,scheduledActionUID)	2
54606	statement.clearBindings()	7
34974	statement.evaluate()	2
4348	statement.simpleQueryForLong()	31
59172	statementTransactionResponse	3
12840	statementTransactionResponse.appendChild(statementTransactions)	7
59130	statementTransactionResponse.appendChild(transactionUid)	3
12253	statementTransactions	11
12408	statementTransactions.appendChild(bankFrom)	11
12526	statementTransactions.appendChild(bankTransactionsList)	11
12986	statementTransactions.appendChild(currency)	11
12128	statementTransactions.appendChild(ledgerBalance)	9
8989	statements	16
34124	statements,in	4
36937	states	8
27689	states)	7
37615	states.	9
43364	states.getInt(EXPANDED_ACTION_VIEW_ID)	4
43783	states.getSparseParcelableArray(	4
16338	stati	24
1820	static	390
57235	statistics	6
31247	stats	8
31303	statsText	8
31182	statsText.setText(stats)	8
939	status	37
44083	status.	4
44809	stay	8
49705	stays	5
56111	std	2
56221	stder	2
21841	sted	10
5655	stellen	18
62116	step	3
41603	steps	13
16970	sterling</item>	6
55307	stetho	2
22269	stets	7
41253	stick	4
2756	still	189
22318	stku	9
56463	stlla	2
14074	stmt	14
8010	stmt,@NonNull	12
7988	stmt.bindLong(1,recurrence.getMultiplier())	3
8385	stmt.bindLong(1,recurrence.getPeriodType().getMultiplier())	8
14445	stmt.bindLong(10,account.isHidden()	5
14575	stmt.bindLong(11,	8
14037	stmt.bindLong(12,	5
14209	stmt.bindLong(13,	2
14309	stmt.bindLong(14,	2
14636	stmt.bindLong(3,	2
14358	stmt.bindLong(3,budgetAmount.getAmount().getNumerator())	4
14418	stmt.bindLong(3,split.getValue().getNumerator())	2
10944	stmt.bindLong(3,transaction.getTimeMillis())	5
14038	stmt.bindLong(4,budget.getNumberOfPeriods())	2
14626	stmt.bindLong(4,budgetAmount.getAmount().getDenominator())	4
14617	stmt.bindLong(4,schedxAction.getEndTime())	2
14394	stmt.bindLong(4,split.getValue().getDenominator())	2
12067	stmt.bindLong(4,transaction.isExported()	5
63946	stmt.bindLong(5,book.isActive()	4
63883	stmt.bindLong(5,budgetAmount.getPeriodNum())	2
14369	stmt.bindLong(5,schedxAction.getLastRunTime())	2
14421	stmt.bindLong(5,split.getQuantity().getNumerator())	2
14212	stmt.bindLong(6,account.isFavorite()	2
14416	stmt.bindLong(6,budgetAmount.getPeriodNum())	4
14565	stmt.bindLong(6,commodity.getSmallestFraction())	2
14395	stmt.bindLong(6,price.getValueNum())	2
14467	stmt.bindLong(6,schedxAction.isEnabled()	2
14552	stmt.bindLong(6,split.getQuantity().getDenominator())	2
14607	stmt.bindLong(7,commodity.getQuoteFlag())	2
14583	stmt.bindLong(7,price.getValueDenom())	2
14555	stmt.bindLong(8,account.isPlaceholderAccount()	5
14501	stmt.bindLong(9,transaction.isTemplate()	2
14148	stmt.bindNull(8)	8
14191	stmt.bindString(1,account.getName())	2
32881	stmt.bindString(1,book.getDisplayName())	4
14244	stmt.bindString(1,budget.getName())	4
14500	stmt.bindString(1,budgetAmount.getBudgetUID())	2
14471	stmt.bindString(1,commodity.getFullname())	2
32534	stmt.bindString(1,displayName)	2
14177	stmt.bindString(1,price.getCommodityUID())	2
14249	stmt.bindString(1,schedxAction.getActionUID())	2
14568	stmt.bindString(1,split.getMemo())	2
14479	stmt.bindString(1,transaction.getDescription())	2
14527	stmt.bindString(10,schedxAction.getRecurrence().getUID())	8
14261	stmt.bindString(10,split.getAccountUID())	2
14079	stmt.bindString(10,transaction.getUID())	2
58866	stmt.bindString(11,account.getCommodity().getUID())	3
14228	stmt.bindString(11,commodity.getUID())	5
14604	stmt.bindString(11,split.getTransactionUID())	2
14629	stmt.bindString(12,parentAccountUID)	2
14366	stmt.bindString(12,split.getUID())	2
14171	stmt.bindString(13,account.getDefaultTransferAccountUID())	2
14593	stmt.bindString(14,account.getUID())	2
14120	stmt.bindString(15,schedxAction.getTemplateAccountUID())	2
14528	stmt.bindString(16,Integer.toString(schedxAction.getExecutionCount()))	2
14622	stmt.bindString(17,schedxAction.getUID())	2
14286	stmt.bindString(2,account.getDescription())	5
32673	stmt.bindString(2,book.getRootAccountUID())	4
14064	stmt.bindString(2,budget.getDescription())	2
14496	stmt.bindString(2,budgetAmount.getAccountUID())	4
14047	stmt.bindString(2,commodity.getNamespace().name())	2
14159	stmt.bindString(2,price.getCurrencyUID())	2
7811	stmt.bindString(2,recurrence.getPeriodType().name())	8
14119	stmt.bindString(2,schedxAction.getActionType().name())	2
14399	stmt.bindString(2,split.getType().name())	2
14436	stmt.bindString(2,transaction.getNote())	2
14124	stmt.bindString(3,account.getAccountType().name())	5
32589	stmt.bindString(3,book.getRootTemplateUID())	4
14172	stmt.bindString(3,budget.getRecurrence().getUID())	2
35199	stmt.bindString(3,byDaysToString(recurrence.getByDays()))	3
14198	stmt.bindString(3,commodity.getMnemonic())	2
14036	stmt.bindString(3,price.getDate().toString())	2
8038	stmt.bindString(3,recurrence.getByDay())	8
26044	stmt.bindString(4,account.getCommodity().getCurrencyCode())	3
14352	stmt.bindString(4,account.getCurrency().getCurrencyCode())	5
63943	stmt.bindString(4,book.getSourceUri().toString())	4
14027	stmt.bindString(4,commodity.getLocalSymbol())	2
14214	stmt.bindString(4,price.getSource())	2
14505	stmt.bindString(4,recurrence.getPeriodStart().toString())	5
14259	stmt.bindString(5,account.getColorHexCode())	2
14297	stmt.bindString(5,budget.getUID())	2
14516	stmt.bindString(5,commodity.getCusip())	2
25786	stmt.bindString(5,convertToRGBHexString(account.getColor()))	3
14082	stmt.bindString(5,price.getType())	2
14051	stmt.bindString(5,recurrence.getPeriodEnd().toString())	2
10846	stmt.bindString(5,transaction.getCurrencyCode())	5
63949	stmt.bindString(6,book.getUID())	4
63866	stmt.bindString(6,budgetAmount.getUID())	2
10919	stmt.bindString(6,commodity.getUID())	8
14258	stmt.bindString(6,recurrence.getUID())	2
11152	stmt.bindString(6,transaction.getCommodity().getUID())	3
63959	stmt.bindString(7,TimestampHelper.getUtcStringFromTimestamp(book.getLastSync()))	2
11116	stmt.bindString(7,TimestampHelper.getUtcStringFromTimestamp(transaction.getCreatedTimestamp()))	6
14205	stmt.bindString(7,account.getFullName())	2
14094	stmt.bindString(7,budgetAmount.getUID())	4
14103	stmt.bindString(7,schedxAction.getCreatedTimestamp().toString())	2
14179	stmt.bindString(7,split.getCreatedTimestamp().toString())	2
14243	stmt.bindString(7,transaction.getCreatedTimestamp().toString())	2
14654	stmt.bindString(8,String.valueOf(split.getReconcileState()))	2
14162	stmt.bindString(8,commodity.getUID())	2
14149	stmt.bindString(8,price.getUID())	2
31490	stmt.bindString(8,schedxAction.getTag())	6
14642	stmt.bindString(8,transaction.getScheduledActionUID())	2
14044	stmt.bindString(9,Integer.toString(schedxAction.getTotalFrequency()))	8
60054	stmt.bindString(9,Integer.toString(schedxAction.getTotalPlannedExecutionCount()))	3
58888	stmt.bindString(9,TimestampHelper.getUtcStringFromTimestamp(account.getCreatedTimestamp()))	3
14182	stmt.bindString(9,account.getCreatedTimestamp().toString())	2
14545	stmt.bindString(9,schedxAction.getTag())	5
14203	stmt.bindString(9,split.getReconcileDate().toString())	2
8560	stmt.clearBindings()	13
56012	stngd</string>	2
22074	stoln	10
39894	stop	19
19271	stopActionMode()	16
18801	stopActionMode(){	31
46601	stopAnimation()	4
46911	stopAnimation(),otherwise	4
43980	stopDispatchingItemsChanged()	7
21000	stopped	6
38332	stopping.	4
6846	storage	48
55616	storage")	22
55679	storage,which	8
23320	storage?	5
1306	store	54
25108	storeFile	4
50949	storeInIconCache(String	5
50930	storeInIconCache(drawableId,drawable)	5
50650	storeInIconCache(drawableUri,drawable)	5
25294	storePassword	2
7134	stored	49
41254	stored.	7
27621	stores	14
35236	storing	17
55941	storlek</string>	2
50044	story	5
6017	strDate	17
4165	strValue	21
3879	strange	25
49369	strategy	4
3602	stream	59
50910	stream.close()	5
47387	streaming	4
43218	strict	4
42475	strict)	4
569	string	227
52092	string,attach	6
50471	string,or	5
24031	string.	28
61819	string.indexOf(".")	4
61817	string.length()	4
31632	stringAmount	7
6762	stringBuffer	39
7291	stringBuffer.append('\n')	27
21639	stringBuffer.append(stringWriter.toString())	11
21730	stringBuffer.toString()	26
35925	stringBuilder	4
35931	stringBuilder.append(split.toCsv()).append("\n")	2
35958	stringReader	2
35211	stringToByDays(@Nullable	3
6625	stringWriter	36
20898	stringWriter.flush()	9
20327	stringWriter.toString()	24
6941	stringWriter.toString())	16
5207	strings	65
150	strings.	6
26318	strings.xml	5
35738	strings</p>	4
19139	stripCurrencyFormatting(String	25
32593	stripCurrencyFormatting(amountString)	11
23425	stripCurrencyFormatting(s.toString())	5
56765	stripPathPart(String	7
57313	stripPathPart(exportedFilePath)	8
56817	stripPathPart(src)	8
35963	stripped	12
57993	strokes	6
35960	strongly	3
14878	strrelse</string>	24
43564	structural	4
3523	structure	205
42265	structure,then	4
27667	structure,there	15
2828	structure.	136
4586	structure.\n\nIf	35
4730	structure</string>	121
43898	structureChanged	4
43930	structureChanged)	4
7694	structure\n	21
40577	structures.	4
16869	structuur	15
11525	struktur	27
17706	struktur.\n\nObie	14
8540	struktur\n	9
22094	strukturu	9
16471	struttura	44
8354	sttte	6
51946	sttte)\n	7
15192	sttter	21
18867	stub	14
36621	stub.	7
14370	stuff	19
16548	sturen.	21
29681	stworzony	4
21360	stykke	10
15215	stykker</string>	14
37195	style	28
46907	style,like	4
37572	style.	15
37032	style="?android:attr/actionButtonStyle"	5
51838	style="?android:attr/buttonBarButtonStyle"	4
51817	style="?android:attr/buttonBarStyle"	4
37313	style="?android:attr/dropDownItemStyle"	5
23244	style="?android:attr/progressBarStyleHorizontal"	14
27147	style="?android:attr/progressBarStyleLarge"	3
27448	style="?android:attr/quickContactBadgeStyleSmallWindowMedium"/>	6
36888	style="?android:attr/spinnerDropDownItemStyle"	8
29557	style="?android:attr/spinnerItemStyle"	12
37665	style="?android:attr/windowTitleStyle"	4
37294	style="?attr/actionBarSplitStyle"	4
36773	style="?attr/actionBarStyle"	7
36830	style="?attr/actionBarStyle">	7
36778	style="?attr/actionBarTabBarStyle"	4
36903	style="?attr/actionBarTabStyle"	4
36917	style="?attr/actionButtonStyle">	4
36712	style="?attr/actionModeCloseButtonStyle"	6
36989	style="?attr/actionModeStyle"	7
37059	style="?attr/activityChooserViewStyle">	5
31553	style="?attr/borderlessButtonStyle"	15
36987	style="?attr/buttonStyleSmall"	4
37217	style="?attr/searchAutoCompleteTextView"	5
37354	style="?attr/spinnerDropDownItemStyle"	4
37602	style="?attr/spinnerItemStyle"	4
58880	style="@android:style/Widget.DeviceDefault.Spinner"	4
47265	style="@android:style/Widget.ProgressBar.Horizontal"	6
47373	style="@android:style/Widget.ProgressBar.Small"	4
24289	style="@style/ButtonStyle"	15
20192	style="@style/Divider"	23
2738	style="@style/Dropdown.TextView"	46
510	style="@style/FormIcon"	30
514	style="@style/FormRow"	35
2	style="@style/FormRow">	37
23426	style="@style/ImageButton.Transparent"	6
27143	style="@style/ListItem"	34
18432	style="@style/ListItem"/>	19
23391	style="@style/ListItem">	22
63826	style="@style/ListItemSubTitle"	4
19307	style="@style/ListItemText"	40
30310	style="@style/ListItemText"/>	26
18746	style="@style/ListItemText">	20
33944	style="@style/NumericButton"	11
33903	style="@style/PasscodeEditText"	4
34998	style="@style/TextAppearance.AppCompat.Headline"	10
35046	style="@style/TextAppearance.AppCompat.Subhead"	13
3978	style="@style/TextAppearance.EditTransaction_LabelSmall"	54
55544	style="@style/TextAppearance.EditTransaction_Small"	8
29146	style="@style/TextAppearance.EditTransaction_Small"/>	3
31089	style="@style/TextAppearance.Hint"	25
570	style="@style/TransactionInfo"	10
62177	style="@style/WizardPageContainer"	3
28810	style="@style/WizardPageTitle"	6
60355	style="buttonBarButtonStyle"	6
60338	style="buttonBarStyle"	3
46667	styleRes)	4
37589	styles	16
2747	su	77
22776	su:	6
22792	su:</string>	6
5250	sua	32
10471	suas	13
15543	suazi</item>	14
18989	sub	90
47956	sub-UI	4
20084	sub-account	38
23616	sub-account,but	3
2417	sub-account</item>	97
7789	sub-accounts	105
33603	sub-accounts")	3
62619	sub-accounts,and	2
54761	sub-accounts,or	5
62322	sub-accounts,show	3
4798	sub-accounts.	95
24271	sub-accounts:	13
2726	sub-accounts</item>	110
5522	sub-accounts</string>	113
62770	sub-akun	3
62725	sub-akun.	3
62731	sub-akun</item>	3
62717	sub-akun</string>	3
60510	sub-class.	3
20263	sub-conta</item>	13
28001	sub-contas	6
5309	sub-contas.	6
3251	sub-contas</item>	38
4295	sub-contas</string>	26
3591	sub-cuenta</item>	36
15476	sub-cuentas.	8
3683	sub-cuentas</item>	36
11006	sub-cuentas</string>	18
15423	sub-cuentas?</string>	8
27976	sub-cuentas\n	7
17471	sub-kont</item>	14
17345	sub-konta.\nCo	11
17434	sub-konta</item>	14
17591	sub-konta</string>	14
17558	sub-kontami</string>	11
17839	sub-konto</item>	14
43371	sub-menu	16
48699	sub-menu.	8
47861	sub-menus,i.e.	4
36095	sub-units	10
13148	subAccount	3
13549	subAccount.setParentUID(SIMPLE_ACCOUNT_UID)	6
19825	subAccountCount	24
26957	subAccountId	8
26854	subAccountIds	8
26996	subAccountIds)	8
19854	subAccountSectionText	10
30233	subAccountTextView	18
30412	subAccountTextView.setText(text)	11
30270	subAccountTextView.setVisibility(View.GONE)	16
30229	subAccountTextView.setVisibility(View.VISIBLE)	13
19028	subAccounts	26
19056	subAccounts){	18
19293	subAccounts.add(cursor.getLong(0))	7
18756	subAccounts.add(cursor.getLong(DatabaseAdapter.COLUMN_ROW_ID))	5
24522	subAccounts.add(cursor.getLong(cursor.getColumnIndexOrThrow(AccountEntry._ID)))	6
19553	subAccountsListFragment	16
30478	subAccountsListFragment.refreshList(itemId)	7
19971	subAccountsListFragment.refreshList(mAccountId)	7
19574	subAccountsListFragment.setArguments(args)	16
18920	subBalance	9
44332	subItem	4
44690	subItem.getOrder(),subItem.getTitle())	4
43198	subMenu	20
39302	subMenu)	32
43648	subMenu).getItem().getItemId()	4
50059	subMenu.add(0,i,i,activity.loadLabel(packageManager))	4
50540	subMenu.addSubMenu(Menu.NONE,collapsedActivityCount,	4
49781	subMenu.clear()	4
42490	subMenu.getItem()	8
43297	subMenu.getItem().getItemId()	4
42933	subMenu.getItem(i)	8
44876	subMenu.getVisibleItems())	4
43571	subMenu.restoreActionViewStates(states)	4
44113	subMenu.saveActionViewStates(outStates)	4
44626	subMenu.setHeaderTitle(getTitle())	4
42610	subMenu.size()	8
48146	subMenu:	4
44672	subPopup	4
44235	subPopup.setCallback(mPresenterCallback)	4
44596	subPopup.setForceShowIcon(preserveIconSpacing)	4
47889	subUiVisibilityChanged(boolean	4
27857	subaccounts	8
12883	subclass	37
23245	subclasses	17
44832	subclasses.	4
58598	subcomptes</string>	5
21002	subcontas.	16
20355	subcontas</string>	16
2633	subcuenta</item>	28
2424	subcuentas</item>	28
27992	subcuentas\n	6
58176	subject	6
19416	sublist	3
43055	submenu	16
47902	submenu's	8
42506	submenu,but	4
44236	submenu,false	4
44782	submenu,find	4
48242	submenu,it	4
44314	submenu.	8
42448	submenus	11
43407	submenus)	4
42408	submenus.	4
49495	submission	5
38664	submit	12
48968	submit)	5
49565	submits	6
49174	submitted	5
49603	submitting	11
17041	subrekening</item>	9
16862	subrekeningen.	3
16587	subrekeningen</item>	9
16783	subrekeningen</string>	3
42085	subsequent	12
38266	subset	8
60610	substantial	3
47874	substitute	7
52225	substr	14
37465	subtitle	18
38035	subtitle)	20
37659	subtitle,if	9
37749	subtitle,it	5
37458	subtitle.	13
37213	subtitles	5
51187	subtract(@NonNull	4
26219	subtract(Money	13
52688	subtractTimeZoneOffset(	2
52475	subtractTimeZoneOffset(Timestamp	2
53492	subtraction.	3
46655	subtracts	4
53669	subtrahend	3
36166	subtrahend){	11
61442	subunits,subunits	3
52022	suc	9
3698	succ&#232	19
40971	succeeding	4
48452	succeeds	4
52997	succeeds,11	2
34793	succeeds,13	5
16993	succes	13
27686	success	9
27800	success.	5
21299	successful	34
61723	successful,1	3
31494	successful,10	4
52472	successful,11	2
61721	successful,2	3
61783	successful,3	3
61787	successful,4	3
31992	successful,9	4
7150	successful,<code>false</code>	41
52028	successful,old	12
59473	successful,or	7
51461	successful,{@code	13
25114	successful.	7
5477	successful</string>	105
2556	successfully	159
52330	successfully",count))	6
40733	successive	4
22836	successo!</string>	6
22706	successo</string>	6
17197	succesvol</string>	9
16467	succs	7
11182	succs</string>	23
3901	sucesso!</string>	27
4480	sucesso</string>	40
4709	such	54
49917	such.	4
15352	sudafricano</item>	14
15814	sudanesa</item>	18
22676	suddivisione</string>	11
22808	suddivisioni	13
26121	suddivisioni</string>	5
15836	sueca</item>	14
28471	sufficient	11
3086	sugerencias</string>	9
2332	sugerencias\n	12
50258	suggested	5
48911	suggestion	14
50345	suggestion,it	5
50178	suggestion-specific	6
49891	suggestion.	11
4508	suggestions	28
50203	suggestions)	5
50190	suggestions).	5
50358	suggestions,if	5
37721	suggestions,used	5
49288	suggestions.	10
41073	suit	8
11373	suivi	24
23864	suivis	19
15402	suizo</item>	14
22522	sul	11
18055	sum	94
29835	sum)	12
53279	sum.add(budgetAmount.getAmount())	2
53421	sum.add(budgetAmount.getAmount().abs())	2
28304	sum:</string>	15
18514	sumCursor	10
19044	sumCursor.close()	8
18893	sumCursor.getFloat(0)	8
18827	sumCursor.moveToFirst()){	6
6954	sumDecimal	8
59604	sumTextView	2
59581	sumTextView.setText(Transaction.getFormattedAmount(sum))	2
18951	sumTextView.setTextColor(getResources().getColor(R.color.credit_green))	4
18909	sumTextView.setTextColor(getResources().getColor(R.color.debit_red))	3
30642	sumlabelTextView	15
30590	sumlabelTextView.setText(R.string.account_balance)	15
56294	summan</string>	2
30208	summary	63
58999	summary.setText(Transaction.getFormattedAmount(balance))	2
30161	summary.setText(balance.formattedString(Locale.getDefault()))	16
31302	summary.setText(statement)	4
30522	summary.setTextColor(fontColor)	10
62449	suo</item>	6
17778	supek	10
18470	super	24
25751	super("Failed	16
20551	super("SchedulerService")	3
44037	super((LinearLayout.LayoutParams)	4
13409	super(AccountsActivity.class)	28
62074	super(FirstRunWizardActivity.class)	3
5282	super(LOG_TAG)	9
52219	super(MainActivity.class)	2
60347	super(PieChartActivity.class)	5
24918	super(PieChartFragment.class)	5
54995	super(PreferenceActivity.class)	5
13213	super(ReportsActivity.class)	8
13338	super(TransactionsActivity.class)	17
39136	super(activity,flags)	8
31954	super(amountInput)	10
38925	super(c,attrs)	9
62127	super(callbacks,title)	4
46407	super(child.getContext())	5
7439	super(context)	106
50177	super(context,	5
35553	super(context,DATABASE_NAME,null,DATABASE_VERSION)	5
35477	super(context,DATABASE_NAME,null,DatabaseSchema.DATABASE_VERSION)	10
63398	super(context,DatabaseSchema.BOOK_DATABASE_NAME,null,DatabaseSchema.BOOK_DATABASE_VERSION)	6
43214	super(context,R.layout.abs__action_menu_layout,	4
63787	super(context,R.layout.account_spinner_item,cursor,	4
61933	super(context,android.R.layout.simple_spinner_item,c,	6
61943	super(context,android.R.layout.simple_spinner_item,cursor,	7
27296	super(context,attrs)	61
47941	super(context,attrs,0,defStyleRes)	4
24680	super(context,attrs,defStyle)	51
56544	super(context,attrs,defStyleAttr)	7
63468	super(context,databaseName,null,DatabaseSchema.DATABASE_VERSION)	4
62161	super(context,itemLayoutResource,	3
2241	super(context,layout,c,	10
8374	super(context,layout,c,from,to,0)	34
31460	super(context,layout,c,from,to,flags)	2
42929	super(context,menu,anchorView,overflowOnly)	4
46573	super(context,null,/*com.android.internal.*/R.attr.dropDownListViewStyle)	4
47906	super(context,null,R.attr.actionBarTabStyle)	4
42891	super(context,null,R.attr.actionOverflowButtonStyle)	4
64098	super(context,selectedSpinnerItem,cursor,	2
42688	super(context,subMenu)	4
30281	super(cursor)	27
30896	super(db)	12
14331	super(db,AccountEntry.TABLE_NAME)	3
14450	super(db,AccountEntry.TABLE_NAME,new	5
63476	super(db,BookEntry.TABLE_NAME)	6
63948	super(db,BookEntry.TABLE_NAME,new	2
14526	super(db,BudgetAmountEntry.TABLE_NAME)	4
14232	super(db,BudgetAmountEntry.TABLE_NAME,new	2
14484	super(db,BudgetEntry.TABLE_NAME)	7
14483	super(db,BudgetEntry.TABLE_NAME,new	2
14070	super(db,CommodityEntry.TABLE_NAME)	12
14087	super(db,CommodityEntry.TABLE_NAME,new	2
14439	super(db,PriceEntry.TABLE_NAME)	8
14173	super(db,PriceEntry.TABLE_NAME,new	2
14180	super(db,RecurrenceEntry.TABLE_NAME)	4
14606	super(db,RecurrenceEntry.TABLE_NAME,new	2
14520	super(db,ScheduledActionEntry.TABLE_NAME)	14
63183	super(db,ScheduledActionEntry.TABLE_NAME,	3
14469	super(db,ScheduledActionEntry.TABLE_NAME,new	2
30900	super(db,ScheduledEventEntry.TABLE_NAME)	3
14241	super(db,SplitEntry.TABLE_NAME)	8
14260	super(db,SplitEntry.TABLE_NAME,new	2
14383	super(db,TransactionEntry.TABLE_NAME)	3
14487	super(db,TransactionEntry.TABLE_NAME,new	2
19533	super(fm)	15
45538	super(in)	12
1887	super(itemView)	21
40746	super(keyframes)	4
50725	super(klass)	6
27867	super(layers)	3
30724	super(name)	7
44574	super(nativeSubMenu)	4
60461	super(new	3
42346	super(null/*TODO*/)	4
31230	super(params)	9
30997	super(params,db)	15
33820	super(params,null)	8
41968	super(property)	5
42021	super(propertyName)	5
38774	super(source)	4
45040	super(superState)	12
39014	super(width,height)	8
52180	super.addRecord(account)	12
52178	super.addRecord(account,updateMethod)	2
52272	super.addRecord(budget)	4
52349	super.addRecord(budget,updateMethod)	2
52309	super.addRecord(scheduledAction)	4
52157	super.addRecord(scheduledAction,updateMethod)	2
52152	super.addRecord(split)	7
52223	super.addRecord(split,updateMethod)	2
26381	super.addRecord(transaction)	10
11154	super.addRecord(transaction,updateMethod)	7
56729	super.afterTextChanged(s)	7
41165	super.animateValue(fraction)	4
13346	super.bindView(v,context,cursor)	17
3949	super.bindView(view,context,cursor)	44
52363	super.bulkAddRecords(accountList)	9
52121	super.bulkAddRecords(accountList,updateMethod)	2
52327	super.bulkAddRecords(budgetList)	4
52096	super.bulkAddRecords(budgetList,updateMethod)	2
52325	super.bulkAddRecords(scheduledActions)	4
52192	super.bulkAddRecords(scheduledActions,updateMethod)	2
50894	super.bulkAddRecords(transactionList)	9
52177	super.bulkAddRecords(transactionList,updateMethod)	2
45925	super.canAnimate()	4
49997	super.changeCursor(c)	5
49392	super.clearFocus()	5
40939	super.clone()	21
35274	super.close()	15
38240	super.closeOptionsMenu()	8
51981	super.createClassHandler(map,sdkConfig)	6
50815	super.createShadowMap()	4
52676	super.deleteRecord(uid)	2
63742	super.deliverResult(data)	1
19536	super.destroyItem(container,position,object)	6
37779	super.dispatchKeyEvent(event)	9
44585	super.dispatchMenuItemSelected(menu,item)	4
47059	super.drawableStateChanged()	4
2969	super.endDocument()	14
49991	super.enoughToFilter()	5
42503	super.filterLeftoverView(parent,childIndex)	4
44854	super.getActionViewStatesKey()	4
42652	super.getAlpha()	5
19388	super.getAppManifest(config)	7
42756	super.getItemView(item,convertView,parent)	4
42350	super.getMenuView(root)	4
54602	super.getPageTitle(position)	3
47446	super.getResolvedLayoutDirection(who)	4
42668	super.getTranslationX()	5
42412	super.getTranslationY()	5
18625	super.getView(position,convertView,parent)	35
47490	super.hasFocus()	4
46738	super.hasWindowFocus()	4
59392	super.hashCode()	4
41296	super.init(),	4
41566	super.initAnimation()	4
42375	super.initForMenu(context,menu)	4
47447	super.invalidateDrawable(dr)	4
46617	super.isFocused()	4
47251	super.isInTouchMode()	4
47028	super.isInTouchMode().	4
47003	super.jumpDrawablesToCurrentState()	4
46663	super.measureChildWithMargins(child,parentWidthMeasureSpec,widthUsed,parentHeightMeasureSpec,heightUsed)	4
49856	super.newView(context,cursor,parent)	5
49871	super.notifyDataSetChanged()	5
50130	super.notifyDataSetInvalidated()	5
46847	super.obtainView(position,isScrap)	4
792	super.onActivityCreated(savedInstanceState)	134
55073	super.onActivityResult(arg0,arg1,arg2)	2
2195	super.onActivityResult(requestCode,resultCode,data)	39
18638	super.onAttach(activity)	24
32361	super.onAttach(context)	6
1586	super.onAttachFragment(fragment)	17
42812	super.onAttachedToWindow()	16
52402	super.onBackPressed()	11
49222	super.onChanged()	7
42405	super.onCloseMenu(menu,allMenusAreClosing)	4
38116	super.onConfigurationChanged(newConfig)	43
50988	super.onCreate	4
1534	super.onCreate()	31
57669	super.onCreate(args)	2
47543	super.onCreate(icicle)	4
1616	super.onCreate(savedInstanceState)	154
50685	super.onCreate,because	4
31996	super.onCreateDialog(savedInstanceState)	9
14161	super.onCreateOptionsMenu(menu,inflater)	21
38868	super.onCreatePanelMenu(featureId,menu)	4
9087	super.onDeleted(context,appWidgetIds)	10
4679	super.onDestroy()	74
1336	super.onDestroyView()	29
32427	super.onDetach()	10
43045	super.onDetachedFromWindow()	33
42452	super.onDismiss()	4
43387	super.onDraw(canvas)	9
64288	super.onDrawerClosed(view)	1
24845	super.onDrawerOpened(drawerView)	4
30163	super.onEnabled(context)	3
32980	super.onFinishInflate()	12
50369	super.onFocusChanged(focused,direction,previouslyFocusedRect)	5
45484	super.onHoverEvent(ev)	4
45695	super.onInitializeAccessibilityEvent(event)	17
45862	super.onInitializeAccessibilityNodeInfo(info)	9
45018	super.onInterceptTouchEvent(ev)	4
49612	super.onInvalidated()	4
61887	super.onItemRangeInserted(positionStart,itemCount)	3
61876	super.onItemRangeRemoved(positionStart,itemCount)	3
49970	super.onKeyDown(keyCode,event)	5
49901	super.onKeyPreIme(keyCode,event)	5
13497	super.onKeyUp(keyCode,event)	5
45140	super.onLayout(changed,l,t,r,b)	8
43887	super.onLayout(changed,left,top,right,bottom)	4
18072	super.onListItemClick(l,v,position,id)	38
32988	super.onListItemClick(listView,view,position,id)	6
47804	super.onMeasure(MeasureSpec.makeMeasureSpec(mParent.mMaxTabWidth,MeasureSpec.EXACTLY),	4
42526	super.onMeasure(MeasureSpec.makeMeasureSpec(targetWidth,MeasureSpec.EXACTLY),	4
50289	super.onMeasure(MeasureSpec.makeMeasureSpec(width,widthMode),heightMeasureSpec)	5
42653	super.onMeasure(widthMeasureSpec,heightMeasureSpec)	31
39331	super.onMenuItemSelected(featureId,item)	4
38540	super.onMenuOpened(featureId,menu)	8
25075	super.onNewIntent(intent)	11
59167	super.onOpen(db)	7
1826	super.onOptionsItemSelected(item)	51
38567	super.onPanelClosed(featureId,menu)	8
8974	super.onPause()	25
42340	super.onPopulateAccessibilityEvent(event)	8
38549	super.onPostCreate(savedInstanceState)	20
38709	super.onPostResume()	14
7092	super.onPreExecute()	17
27871	super.onPrepareOptionsMenu(menu)	22
39341	super.onPreparePanel(featureId,view,menu)	4
38935	super.onRestoreInstanceState(savedInstanceState)	5
46428	super.onRestoreInstanceState(ss.getSuperState())	8
45782	super.onRestoreInstanceState(state.getSuperState())	4
1929	super.onResume()	114
45774	super.onSaveInstanceState()	12
11934	super.onSaveInstanceState(outState)	28
1559	super.onStart()	17
27865	super.onStateChange(states)	3
38289	super.onStop()	14
42518	super.onSubMenuSelected(null)	4
42877	super.onSubMenuSelected(subMenu)	4
38735	super.onTitleChanged(title,color)	14
45356	super.onTouchEvent(ev)	4
8861	super.onUpdate(context,appWidgetManager,appWidgetIds)	4
46612	super.onVisibilityChanged(changedView,visibility)	4
50425	super.onWindowFocusChanged(hasWindowFocus)	5
38227	super.openOptionsMenu()	8
47793	super.performClick()	4
47013	super.postInvalidate()	4
49610	super.requestFocus(direction,previouslyFocusedRect)	5
45904	super.requestLayout()	4
48143	super.setAdapter(adapter)	8
42896	super.setAlpha(alpha)	5
27812	super.setColorFilter(getPressedColor(mColor),PorterDuff.Mode.SRC_ATOP)	3
27651	super.setColorFilter(mColor,PorterDuff.Mode.SRC_ATOP)	3
41633	super.setDuration(duration)	4
43087	super.setEnabled(enabled)	8
41233	super.setFloatValues(values)	8
45828	super.setFocusable(focusable	4
46355	super.setFocusableInTouchMode(focusable	4
44631	super.setHeaderIconInt(icon)	4
44790	super.setHeaderIconInt(iconRes)	4
44644	super.setHeaderTitleInt(title)	4
44215	super.setHeaderTitleInt(titleRes)	4
44514	super.setHeaderViewInt(view)	4
41394	super.setIntValues(values)	7
41660	super.setObjectValues(values)	4
62073	super.setPrimaryItem(container,position,object)	3
55539	super.setSelection(position)	5
45600	super.setSplitActionBar(split)	4
45504	super.setSplitActionBar(splitActionBar)	4
63493	super.setText(resultString)	4
50122	super.setThreshold(threshold)	5
42932	super.setTranslationX(translationX)	5
43106	super.setTranslationY(translationY)	5
62863	super.setUID(uid)	4
13855	super.setUp()	48
46900	super.setVisibility(v)	4
42472	super.setVisibility(visibility)	9
42106	super.setupSetter(targetClass)	5
50731	super.shouldInstrument(classInfo)	4
47868	super.show()	4
41483	super.start()	4
13066	super.tearDown()	59
42371	super.updateMenuView(cleared)	4
47539	super.verifyDrawable(who)	4
45623	super.writeToParcel(out,flags)	12
45661	superState	12
45017	superState)	12
37959	superclass	22
5055	superior</string>	13
40596	superset	4
17782	supka</string>	13
17470	supkowy</string>	15
6410	suporta	8
55840	suporte	4
37850	supplied	35
49710	supplied,or	5
41670	supplied.	6
47633	supplies	9
41509	supply	12
2583	support	220
18748	support)\n	19
38978	support.	14
63864	support</p>	2
34507	supportActionBar	17
60539	supportActionBar.setTitle(R.string.title_create_account)	6
60561	supportActionBar.setTitle(R.string.title_edit_account)	6
34682	supportActionBar.setTitle(R.string.title_export_dialog)	11
27637	supportInvalidateOptionsMenu()	14
55703	support\n	6
22603	supporta	9
1919	supported	94
24485	supported,use	11
1689	supported.	14
1373	supported:	6
55835	supporti	2
55657	supporto	2
26762	supports	51
41996	supposed	28
48215	suppressed.	4
11618	suppression	27
10197	suppression</string>	25
2631	supprim&#233	27
16093	supprim</string>	7
16025	supprime	14
16035	supprimer	28
23335	supprimer</string>	11
11212	supprimes	32
23525	supprimes!!</string>	5
10357	supprimes!</string>	3
12083	supprimes.	3
10754	supprimes</string>	15
10457	supprims	10
10392	supprims.</string>	6
60096	supressi	3
22088	supressi</string>	7
22227	suprimir	7
22478	suprimiran	10
22226	suprimit	7
11177	sur	41
15841	surcoreano</item>	14
2849	sure	308
15345	surinam&#233	10
15787	surinams</item>	10
15531	sursudanesa</item>	14
58037	suspended	6
51683	suspended!",Toast.LENGTH_LONG).show()	7
62790	sv	3
22788	sviluppatori.</string>	6
12117	swap	8
60468	swapCursor(Cursor	3
60484	swapCursor(cursor)	3
12959	swapped	9
27503	swatch	3
27449	swatch)	3
27140	swatch,int	3
27169	swatch,which	7
27258	swatch.	3
27509	swatch.setContentDescription(description)	3
27478	swatches	3
52757	swipeDown()	10
52961	swipeLeft()	10
52877	swipeRight()	10
52863	swipeUp()	10
19556	swiping	6
687	switch	314
18802	switch(eventRecurrence.freq){	12
64150	switch(position)	3
52229	switch(updateMethod){	5
38984	switch.	4
63986	switchPref	2
64008	switchPref.setChecked(sharedPreferences.getBoolean(keyCompactView,false))	2
63979	switchPref.setChecked(sharedPreferences.getBoolean(keyDoubleEntry,true))	2
64007	switchPref.setChecked(sharedPreferences.getBoolean(keySaveBalance,false))	2
62491	switched	3
39034	switching	12
21560	syle	8
21276	syle/sektordiagrammet</string>	10
14970	syle</string>	11
13016	symbol	43
13334	symbol)	10
61742	symbol,but	3
36530	symbol,mMoneyInEur.formattedString(Locale.GERMAN))	5
59762	symbol,money.formattedString(Locale.GERMAN))	2
31706	symbol,the	10
32599	symbol.	5
36535	symbolUS	6
36520	symbolUS,mMoneyInEur.formattedString(Locale.US))	7
59760	symbolUS,money.formattedString(Locale.US))	3
3110	sync	121
46007	synched	4
11751	synchronisation</string>	3
16231	synchroniser	7
16688	synchroniseren	5
32719	synchronization	17
14126	synchronized	28
13391	synchronized(getInsertStatement())	3
13891	synchronized(getReplaceStatement())	3
13368	synchronized(getUpdateStatement())	3
13639	synchronized(mInsertStatement)	4
13044	synchronized(mReplaceStatement)	4
13721	synchronized(mUpdateStatement)	4
42098	synchronizing	8
17235	synchronizowa	13
17269	synchronizowac	13
50148	synchronous	5
41962	synchronously	4
15013	synk	11
15050	synkronisering	19
56445	synkronisering</string>	5
20633	syntax	2
52436	syntax,we	6
6042	system	112
38369	system's	4
37464	system-provided	4
43893	system-supplied	4
18161	system.	43
52027	systemu	9
38827	systemwide	4
17653	szablon</string>	9
17710	szczegy</string>	21
22492	szerkesztse</string>	6
11043	t	111
3391	t&#233	19
59525	t&#234	6
42376	t)	8
13160	t){	2
45089	t,int	11
26551	t,this	12
33904	t.addSplit(split)	4
36441	t.setAccountUID(second.getUID())	4
43048	t.setAlpha(mAlpha)	4
36640	t.setCommodity(account.getCommodity())	6
36558	t.setCommodityUID(commodityUID)	11
51540	t.setToNow()	8
31002	t1	21
54783	t1.addSplit(split)	4
54751	t1.addSplit(split.createPair(BRAVO_ACCOUNT_UID))	4
58924	t1.addSplit(split.createPair(bravoAccount.getUID()))	2
32920	t1.setAccountUID(first.getUID())	9
62974	t1.setSplits(splits)	4
36017	t1.setTime(System.currentTimeMillis()	8
31000	t2	15
36529	t2.addSplit(split2)	11
54770	t2.addSplit(split2.createPair(ALPHA_ACCOUNT_UID))	4
36551	t2.addSplit(split2.createPair(alphaAccount.getUID()))	9
36286	t2.setAccountUID(first.getUID())	4
36331	t2.setTime(System.currentTimeMillis())	11
22150	t</string>	7
55867	ta	2
11706	tab	52
39051	tab's	4
13533	tab)	49
64382	tab,	1
38953	tab,FragmentTransaction	4
39611	tab,android.app.FragmentTransaction	5
39244	tab,boolean	12
39254	tab,int	12
37873	tab.	7
47925	tab.getCustomView()	4
47683	tab.getIcon()	4
39376	tab.getPosition()	4
47654	tab.getText()	4
48154	tabCount	4
44942	tabHeight	4
45024	tabHeight,r,containerHeight)	4
23195	tabLayout	17
54604	tabLayout.addTab(tabLayout.newTab().setText(R.string.title_all_accounts))	8
54626	tabLayout.addTab(tabLayout.newTab().setText(R.string.title_favorite_accounts))	8
58784	tabLayout.addTab(tabLayout.newTab().setText(R.string.title_recent_accounts))	6
54661	tabLayout.addTab(tabLayout.newTab().setText(R.string.title_scheduled_exports))	3
23294	tabLayout.addTab(tabLayout.newTab().setText(R.string.title_scheduled_transactions))	6
54613	tabLayout.setElevation(10)	5
47642	tabLayout.setLayoutParams(new	5
48076	tabLayout.setMeasureWithLargestChildEnabled(true)	5
54699	tabLayout.setOnTabSelectedListener(new	12
35190	tabLayout.setTabGravity(TabLayout.GRAVITY_FILL)	12
58766	tabLayout.setVisibility(View.GONE)	6
40098	tabScroller	4
39533	tabScroller.setVisibility(View.VISIBLE)	4
40198	tabScroller.setVisibility(getNavigationMode()	4
45240	tabView	8
45445	tabView)	4
45486	tabView.getLayoutParams()	4
47704	tabView.getLeft()	4
47636	tabView.getTab().select()	4
48123	tabView.getWidth())	4
47696	tabView.init(this,tab,forAdapter)	4
44926	tabView.setAllowCollapse(false)	4
47629	tabView.setBackgroundDrawable(null)	4
48165	tabView.setFocusable(true)	4
48011	tabView.setLayoutParams(new	4
48031	tabView.setOnClickListener(mTabClickListener)	4
47872	tabView.setSelected(true)	4
45268	tabWidth	4
45160	tabWidth)	4
38479	tabbed	6
40037	tabi	4
39794	tabi.getCallback()	4
40324	tabi.setPosition(position)	4
18343	table	126
20731	table")	18
59765	table,and	1
12862	table.	18
52338	table/sub-query	10
33894	table</li>	16
27849	table</p>	7
27252	tableElements	3
27522	tableElements++	3
1509	tableL	11
21569	tableLayout	3
21446	tableLayout){	3
1880	tableLayout.addView(totalView)	7
21753	tableLayout.addView(view)	6
14535	tableName	27
14127	tableName)	18
24434	tableName){	23
20708	tableName,	17
14345	tableName,@NonNull	8
30814	tableName,String	2
20984	tableName,long	16
25351	tables	23
25100	tables")	21
25894	tables,so	17
57090	tablet	3
9901	tabs	59
45498	tabs)	4
48020	tabs.	4
45750	tabs.setAllowCollapse(true)	4
38255	tabs:</p>	4
5917	tag	143
33609	tag)	21
25789	tag,	10
33808	tag,long	2
48483	tag.	4
49215	tag.")	4
48257	tag.)	4
31655	tag.split("	9
48580	tagName	4
48603	tagName)	4
48478	tagName.equals(unknownTagName))	4
8731	tagging	2
12187	tags	24
62720	tahun</item>	3
12074	taille</string>	20
15991	tails</string>	17
15692	taiwan&#233	8
15776	taiwans</item>	10
21751	taiwanske	10
29593	tak	7
8407	take	93
19447	takeFlags	9
18693	taken	19
38421	taken.	4
7986	takes	109
11922	taking	39
46781	tall	8
2250	tama&#241	13
4369	tamanho</string>	24
15827	tamao</string>	9
19794	tamb&#233	15
15449	tambi&#233	22
15328	tambin	8
5883	tambm	24
4265	tansferncia	6
5664	tanto	6
15296	tanzano</item>	14
3621	tap	18
12490	tapahtuma	12
22749	tapahtuma</string>	7
22769	tapahtumaa</string>	7
29647	tapahtumat	5
22639	tapahtumat</string>	9
22621	tapahtumia</string>	7
3884	tapped	8
52960	tapping	14
2678	taps	21
10625	tard.	5
10259	tard.</string>	18
2618	tarde.	54
6816	target	93
55333	target")	7
25244	target)	29
41211	target,	4
41767	target,Keyframe	4
41303	target,Property<T,?>	4
41411	target,Property<T,Float>	4
41691	target,Property<T,Integer>	4
41494	target,Property<T,V>	4
41363	target,String	4
41362	target,duration:	4
42145	target,int	4
36820	target.	12
41998	target.getClass()	5
41191	target.getClass())	4
57338	target:	4
36768	target=android-15	4
2274	targetAccountId	5
28631	targetAccountName	16
41465	targetClass	7
41959	targetClass)	6
41958	targetClass,	4
41258	targetClass,String	8
41297	targetClass.getMethod(methodName,args)	4
41356	targetClass.getSimpleName()	4
62969	targetCmdtyUID	4
8169	targetCommodity	5
8320	targetCommodityUID	8
30712	targetCompatibility	6
28606	targetCount	19
12982	targetCurrency	16
12547	targetCurrencyCode	10
31942	targetCurrencyCode,	5
10090	targetLocation	22
3776	targetSdkVersion	26
39120	targetThemeRes	8
39733	targetThemeRes)	4
39173	targetThemeRes*/)	4
46124	targetView	4
45954	targetView,int	4
42474	targetWidth	7
43091	targetWidth)	4
29520	targeta	5
39124	targeting	4
40408	targets	7
40538	targets.	8
3871	tarjeta	35
3103	tarta</string>	19
3417	tasa	11
7109	task	95
48081	task,for	4
47694	task.	4
9635	task.dependsOn	7
9064	tasks	13
12166	tasks.create("grant${flavour.name.capitalize()	3
8870	tasks.each	8
12932	tasks.whenTaskAdded	3
29463	tasso	6
58051	tats	6
11229	taux	12
29683	taxa	21
15697	tayiko</item>	14
55819	tdn</item>	2
7601	te	77
27139	teal	3
13879	tearDown()	73
54302	tearDown(){	17
22350	tech!</string>	7
27008	technically	10
57015	technique	6
56275	tecken:	2
16615	tegenrekening</string>	9
26007	tegn:	6
21653	tegning	10
17620	tego	18
59194	tekrar	6
55733	tela	5
11683	telah	9
40475	tell	10
40925	tells	10
11166	tem	30
27933	tema\n	5
28153	temaer	4
18098	temas	6
36638	temp	15
58672	tempate	1
62749	templat</string>	3
2671	template	94
3566	template,{@code	4
53284	template-account-guid	2
2604	template</string>	84
53539	templateAccountUID	2
53599	templateAccountUID)	5
53040	templateActUID	2
2378	templateTransaction	17
3961	templateTransaction.setTemplate(true)	15
52263	templateTransactions	6
36609	templateTransactions)	10
4430	templates	25
59934	templates)	3
62654	templates.	3
4751	templates.</p>	8
34033	templates</li>	8
34966	tempo</string>	3
38338	temporarily	16
43160	temporarily,allocated	4
21727	temporary	47
62481	tempos</item>	5
16279	temps</item>	9
10148	temps</string>	3
34386	ten	8
44602	tend	4
28012	tenere	19
2590	tengan	13
22721	tentang	7
19623	tente	18
11980	terakhir	7
10399	terbaru</string>	8
4726	terceiro,diferente	27
25594	tercers	8
22698	terjadwal	7
11276	terjadwal\n	5
11614	terkait	5
56399	terkommande	2
56089	terkoppling]]></string>	2
36134	term	10
15771	terminado</string>	28
41065	terminated	4
33455	terminator-trx	10
16453	termine	29
25553	terminierter	5
57569	terminology)\n	5
26436	terms	21
12031	terpadu	5
22558	terpisah	7
29656	tersebut	5
62758	tersebut</string>	3
12070	tersedia	10
22712	tersedia</string>	7
56097	terstlla	2
56191	terstlla</string>	2
56203	terstllning	2
16839	terugzetten&#8230	5
4563	test	98
33272	test-account	10
19212	test.	17
30818	testAccountAlwaysHasUID(){	7
26445	testAccountUsesDefaultCurrency(){	6
8635	testAccountsImport()	5
61779	testAcct	5
30794	testAddAccountWithTransaction(){	7
64092	testAddGetRecord()	3
59403	testAddMultiCurrencyTransaction(){	5
34069	testAddSplit(){	4
5397	testAddTransaction(){	56
2913	testAddTransactionShouldRequireAmount(){	50
54201	testAddingBudget(){	2
30834	testAddingSplitToTransaction(){	7
54385	testAddition(){	7
54488	testAdditionWithIncompatibleCurrency(){	6
30758	testAlphabeticalSorting(){	13
9117	testApplicationId	40
6049	testAutoBalanceTransactions(){	24
9474	testBook	3
13614	testBookUID	6
54290	testBulkAddBudgets(){	2
5882	testBulkMoveTransactions(){	30
19158	testChangeParentAccount()	32
28393	testChangeParentAccount(){	11
28649	testChildAccountsShouldUseParentTransferAccountSetting(){	5
33274	testCloning(){	15
26532	testCloningTransaction(){	10
8835	testCompile	2
1631	testCompile('org.robolectric:robolectric:3.0',	20
30868	testCompile('org.robolectric:robolectric:3.0-SNAPSHOT',	3
50854	testCompile('org.robolectric:robolectric:3.0-rc2',	4
9023	testCompile('org.robolectric:robolectric:3.1',	8
9237	testCompile('org.robolectric:robolectric:3.1.2',	3
10481	testComputeBalance(){	10
9033	testComputingNextScheduledExecution(){	10
9787	testComputingTimeOfLastSchedule(){	8
23092	testCoverageEnabled	13
5909	testCreateAccount(){	57
31181	testCreateBackup(){	11
33838	testCreateExportSchedule(){	12
30152	testCreateNewBook(){	4
36626	testCreation(){	13
30765	testCsvGeneration(){	3
24688	testDatePicker()	7
5684	testDefaultTransactionType(){	35
28340	testDeleteAccount()	3
5478	testDeleteAccount(){	36
13670	testDeleteAccountMovingSubaccounts()	11
13782	testDeleteAccountWithSubaccounts()	5
54558	testDeleteBook(){	2
13609	testDeleteSimpleAccount()	14
5947	testDeleteTransaction(){	50
6016	testDeleteTransactionsAfterExport(){	51
30730	testDeletingAccountShouldDeleteSplits(){	7
28432	testDisplayAccountsList(){	37
4389	testDisplayTransactionsList(){	23
54369	testDivision(){	6
54470	testDivisionWithDifferentCurrency(){	6
36549	testDuplicateTransaction(){	11
5876	testEditAccount(){	58
4124	testEditTransaction(){	32
62876	testEditingTransferAccountOfMultiCurrencyTransaction(){	4
13845	testExport(ExportFormat	45
31262	testExport(ExportFormat.OFX)	13
31127	testExport(ExportFormat.QIF)	12
13630	testExport(ExportFormat.XML)	16
34357	testExportAlreadyExportedTransactions(){	13
36053	testFormatSplitAmount(){	7
51595	testFractionParts(){	3
50976	testFullyQualifiedClassName()	5
50705	testFullyQualifiedClassNameSamePackage()	4
31211	testGenerateOFXExport(){	2
31178	testGenerateQIFExport(){	2
9845	testGenerateRepeatString(){	13
30456	testGeneratedDisplayName(){	6
30457	testGeneratedDisplayNames_shouldBeUnique(){	5
54389	testGetAccountBudgets(){	2
32898	testGetCurrenciesInUse(){	5
54410	testGetNumberOfAccounts(){	2
7384	testImportSimpleScheduledTransaction()	5
9029	testInstrumentationRunner	7
50276	testIntent	5
5200	testIntentAccountCreation(){	48
34382	testIntentTransactionRecording(){	18
13927	testLegacyIntentTransactionRecording(){	30
59936	testLoadBookFromBookManager(){	3
19504	testMoveTransaction(){	20
36560	testMultiplication(){	10
54278	testMultiplicationWithDifferentCurrencies(){	6
36628	testNegation(){	11
24668	testNoData()	11
34431	testOfxExport()	9
5509	testOfxExport(){	43
5240	testOpenTransactionEditShouldNotModifyTransaction(){	39
31807	testParseIntegerAmount()	3
58932	testParseSplitAmount()	3
30795	testParsingCsv(){	3
33105	testPreconditions()	10
24861	testPreviousAndNextMonthButtons()	6
10213	testPrinting(){	22
31304	testQifExport(){	15
7804	testRecurrenceCountComputation(){	13
50767	testRelativeClassName()	4
28445	testSearchAccounts(){	35
13098	testSelectingValue()	14
1034	testSetColorWithAlphaComponent(){	3
1610	testSetInvalidColorCode(){	9
13836	testShouldCreateExportSchedule(){	23
34476	testShouldIgnoreExportedTransactions(){	13
35116	testShowingHidingOfCalculatorKeyboard()	3
36289	testSmallestFractionDigits(){	7
13703	testSpinner()	27
4067	testSplitEditor(){	42
54307	testSubtraction(){	6
36510	testSubtractionWithDifferentCurrency(){	10
4947	testToggleTransactionType(){	33
30743	testTransactionsAreTimeSorted(){	21
811	testTransactionsHaveSameCurrencyAsAccount(){	23
34391	testUIDContainsName(){	5
50920	testUnqualifiedClassName()	4
36841	testValidityOfExport(){	15
41754	testValue	4
9346	testWithNoTransactionsToExport_shouldNotCreateAnyFile(){	5
31003	testXmlExport(){	13
28877	teste</item>	11
31059	tested	13
28467	testing	32
55228	testing,{@code	5
54260	testing.	9
10032	tests	70
63794	tests,this	2
28324	tests.	3
59416	tests</p>	3
12015	tetap	7
6109	text	179
54433	text"	2
54404	text"/>	2
38850	text)	32
19800	text,"	48
49877	text,boolean	5
48947	text,if	5
29111	text,then	12
27806	text.	31
49947	text.setSpan(new	5
50605	text1	5
49826	text2	5
7930	textChangeListener	15
49916	textSize	5
2212	textView	19
11621	textView.setCompoundDrawablesWithIntrinsicBounds(0,0,0,0)	4
55359	textView.setCompoundDrawablesWithIntrinsicBounds(0,0,R.drawable.ic_star_black_18dp,0)	2
11822	textView.setCompoundDrawablesWithIntrinsicBounds(0,0,R.drawable.ic_star_black_24dp,0)	4
2410	textView.setEllipsize(TextUtils.TruncateAt.MIDDLE)	15
47802	textView.setEllipsize(TruncateAt.END)	4
48131	textView.setLayoutParams(lp)	4
62121	textView.setText(currencyCode	3
61902	textView.setText(currencyName	5
2688	textView.setText(mAccountDbAdapter.getFullyQualifiedAccountName(cursor.getLong(DatabaseAdapter.COLUMN_ROW_ID)))	5
7103	tfException)	13
6771	tfException.printStackTrace()	13
56292	tgrd	2
56002	tgrder</string>	2
4823	than	254
786	that	420
48248	that)	4
55735	that,if	3
44245	that.	4
46319	thawing	4
61718	thd	3
408	the	449
59858	the+	1
52583	the1234567890thSecond	5
52652	the1234567890thSecondTimestamp	5
52504	the1234567890thSecondUtcString	5
52579	the1234567890thSecondWithMillisecondsUtcString	5
42061	theRest	4
12747	theTask	3
12397	theTask.dependsOn	3
3730	their	155
2941	them	179
37090	them,and	4
20689	them.	43
4854	them\n	20
281	theme	47
47885	theme).	4
37606	theme,but	4
48108	theme,or	4
47890	theme,resources,etc.	4
47904	theme,the	4
64346	theme-forced	1
45058	theme-specified	8
47880	theme-supplied	4
37800	theme.	19
1161	themeColor	6
18012	themed	22
38701	themes),which	4
1748	theming	19
12239	themselves	11
148	then	188
50571	then,if	5
51021	theoretically	9
3716	there	260
32286	there's	28
38413	there.	8
41819	therefore	6
4993	these	148
6703	they	158
50026	thing	5
2503	things	104
34801	things,allows	7
761	think	23
52370	third	9
7100	third-party	131
1742	this	449
54416	this()	4
49167	this(ComponentName.unflattenFromString(activityName),time,weight)	4
39284	this(WRAP_CONTENT,FILL_PARENT,gravity)	4
58561	this(commodity1UID,commodity2UID)	2
43047	this(context,attrs,0)	16
48150	this(context,attrs,R.attr.actionDropDownStyle)	4
45546	this(context,attrs,R.attr.actionModeStyle)	4
47218	this(context,attrs,android.R.attr.progressBarStyle)	4
46713	this(context,attrs,defStyle,0)	4
44849	this(context,menu,anchorView,false)	4
44392	this(context,menu,null,false)	4
42881	this(context,null)	21
46998	this(context,null,R.attr.listPopupWindowStyle)	4
40277	this)	15
48492	this).	4
51694	this,	7
574	this,System.currentTimeMillis(),earliestTransactionTime,latestTransactionTime)	6
44193	this,false)	8
50415	this,mSearchable,mOutsideDrawablesCache)	5
46422	this,this	4
6370	this.	23
31380	this.accountID	3
64221	this.accountUID	2
49576	this.activity	4
13825	this.amountEditText	6
40933	this.animation	4
25709	this.autoCreate	4
34316	this.callback	3
45851	this.child	5
45863	this.color	5
19327	this.context	16
61927	this.emptyView	3
24629	this.finish()	6
60226	this.getClass().getSimpleName()	3
46082	this.getSelectedItemPosition()	4
39072	this.gravity	4
46243	this.id	4
56726	this.isContentModified	4
43428	this.isOverflowButton	4
36456	this.mAccountType	9
18375	this.mAccountUID	20
31342	this.mAccountUid	3
32194	this.mActionType	7
32353	this.mActionUID	5
53877	this.mActivity	5
48156	this.mAdapter	4
53402	this.mAdvanceCreateDays	2
53630	this.mAdvanceNotifyDays	2
18405	this.mAmount	49
23413	this.mAmount.doubleValue()	2
23560	this.mAmount.setScale(2,RoundingMode.HALF_EVEN)	2
36051	this.mAmountEditText	5
40713	this.mAnimatorSet	4
53445	this.mAutoCreate	2
53629	this.mAutoNotify	2
53722	this.mBudgetAmounts	2
53609	this.mBudgetUID	2
35174	this.mByDay	5
34603	this.mCalculatorKeyboard	9
34597	this.mCalculatorKeyboardView	9
34641	this.mCalculatorKeysLayout	13
403	this.mColorCode	11
14419	this.mColumns	2
10870	this.mCommodity	18
36539	this.mCommodityUID	21
7268	this.mContext	39
20745	this.mCreatedTimestamp	3
26300	this.mCurrency	49
10166	this.mCurrencyCode	17
36144	this.mCurrencyTextView	5
52480	this.mCurrencyUID	14
61427	this.mCusip	6
61025	this.mDate	3
14480	this.mDb	17
27255	this.mDefaultTransferAccountUID	7
18560	this.mDelegate	13
7083	this.mDeleteTransactionsAfterExport	3
417	this.mDescription	24
27815	this.mDisplayMode	5
63503	this.mDisplayName	6
26330	this.mDoubleEntryAccountUID	5
32387	this.mEndDate	15
62562	this.mEventType	3
32108	this.mEventUID	4
35635	this.mExportAll	5
7106	this.mExportAllTransactions	6
6510	this.mExportFormat	14
29225	this.mExportParams	13
63254	this.mExportStartTime	3
6878	this.mExportTarget	9
36099	this.mFraction	8
1897	this.mFullName	25
36132	this.mFullname	7
33581	this.mIsEnabled	5
26000	this.mIsFavorite	7
59128	this.mIsHidden	4
33707	this.mLastRun	6
63977	this.mLastSync	2
47870	this.mListAdapter	4
36165	this.mLocalSymbol	7
33888	this.mMemo	9
36249	this.mMnemonic	9
20532	this.mModifiedTimestamp	9
18498	this.mName	19
61201	this.mNamespace	6
59696	this.mNextRun	2
40368	this.mNode	4
7169	this.mNormalBalance	5
14646	this.mNotes	8
19888	this.mNumberOfOccurences	6
53568	this.mNumberOfPeriods	2
30723	this.mParameters	11
64215	this.mParentAccountUID	2
32119	this.mPeriod	9
53453	this.mPeriodNum	2
53671	this.mPeriodStart	2
53414	this.mPeriodType	2
34031	this.mQuantity	9
36302	this.mQuoteFlag	10
53383	this.mReconcileDate	2
53436	this.mReconcileState	2
3737	this.mRecurrence	5
18090	this.mRecurrencePeriod	5
53818	this.mRecurrenceRule	5
54033	this.mRecurrenceSetListener	5
52260	this.mRootAccountUID	8
52098	this.mRootTemplateUID	6
40752	this.mRule	4
36243	this.mSmallestFraction	9
61080	this.mSource	3
63523	this.mSourceUri	4
51295	this.mSplitAccountUID	3
34127	this.mSplitType	14
31969	this.mSplitViewHolder	5
33954	this.mStartDate	6
42311	this.mStartDelay	4
14452	this.mTableName	5
33537	this.mTag	7
7027	this.mTargetFilepath	10
53684	this.mTemplateAccountUID	2
23800	this.mTimestamp	21
20057	this.mTotalFrequency	6
18412	this.mTransactionUID	17
34525	this.mTransactionsList	16
18127	this.mType	14
13780	this.mTypeButton	4
31998	this.mTypeToggleButton	10
20399	this.mUID	28
52147	this.mUID.replaceAll("-","")	2
52220	this.mUID.replaceAll(":","")	2
33984	this.mValue	13
23551	this.mValueDenom	10
23377	this.mValueNum	7
34302	this.maxDate	2
48345	this.menu	4
34325	this.minDate	2
40938	this.node	4
45928	this.onLayout(false,getLeft(),getTop(),getRight(),getBottom())	4
46040	this.position	4
31868	this.quantity	6
27614	this.removeAllViews()	3
49171	this.resolveInfo	4
40413	this.rule	4
31596	this.splitView	6
45800	this.targetView	4
49554	this.time	4
30431	this.toolbarHeight	3
49100	this.weight	4
40386	this:	8
36727	this?	10
39736	thisPackage	8
40136	thisPackage)	8
23561	thmes\n	5
62617	thorough	2
1607	those	107
23669	though	33
50354	though,	5
57682	though.	6
12584	thousands	7
35039	thousandths	6
3248	thread	68
42136	thread,and	4
60428	thread,not	3
44378	thread,so	9
48923	thread,wait	4
42593	thread,without	4
52703	thread-safe.	2
42386	thread.	10
60537	thread.)	3
41805	thread.</p>	4
42046	threads")	4
356	three	11
50158	threshold	9
49954	threshold)	5
50300	threw	5
1240	through	124
1016	throw	318
52520	throw.	2
13503	throwable)	14
25598	throwable){	12
25602	throwable.getMessage(),	6
36574	thrown	21
49882	thrown,stop	5
43810	thrown.	4
1295	throws	278
48376	thumb	4
26086	tica	7
3503	ticamente	7
56260	tid</item>	2
56311	tid</string>	2
11568	tidak	15
15205	tidsplan</string>	11
21757	tidsrom&#8230	8
9831	tied	18
55989	tiedot</string>	2
3180	tiempo</item>	11
10676	tiempos</string>	6
11935	tiene	18
10295	tierce	43
5981	tigen</string>	11
16619	tijd</string>	8
17132	tijdens	26
8661	til	114
12597	til&#8230	26
28133	til,vis	4
21356	til.	10
685	til:	32
21523	til:</string>	13
15266	til:\n</string>	24
15225	tilbakefres</string>	11
15239	tilbakefring</string>	11
21800	tilbakemelding</string>	6
21772	tilbakemelding]]></string>	10
46678	tileBitmap	4
47084	tiled	4
46820	tileify(Drawable	4
47517	tileify(background.getDrawable(i),	4
47456	tileify(background.getFrame(i),true)	4
46983	tileify(drawable,false)	4
47433	tileifyIndeterminate(Drawable	4
47045	tileifyIndeterminate(drawable)	4
12342	tilej</string>	12
52020	tilgang	4
28190	tilgang\n	4
21624	tilgjengelig</string>	10
15096	tilgjengelige	34
14947	tilgjengelige</string>	14
14818	tilhrende	18
22651	tili</string>	9
12422	tilille</string>	12
29678	tilin	7
47506	tiling	4
12286	till	21
11779	till&#8230	7
56190	till.	2
56184	till:	2
10524	till:</string>	13
56199	tilldela	2
28111	tillegg	6
55947	tillgngar</string>	2
56320	tillgnglig	2
56067	tillgngliga	2
21406	tilordnes	6
552	time	282
1831	time"	12
6392	time",e)	15
34279	time)	18
40357	time,	6
40562	time,anim3	4
41251	time,as	9
7453	time,but	2
51775	time,end	11
41498	time,expressed	5
49219	time,float	4
50348	time,however	4
40263	time,in	12
34319	time,long	5
45956	time,or	13
33782	time,period	4
30579	time,so	9
7273	time,t	26
42747	time,used	4
59921	time,we	9
42194	time,which	4
36230	time-based	10
27647	time.	66
41652	time/value	4
3692	time:	30
48830	time:").append(time)	4
279	time</item>	120
11644	time</string>	25
1788	timeAndDate	9
4541	timeEntered	9
35789	timeInMillis	4
35621	timeInMillis)	4
41822	timeLeft	4
26074	timeMil	10
3042	timeMillis	25
33819	timeMillis)	2
29028	timeMillis){	18
6519	timeMillis1	9
64223	timeMillis1,	2
6630	timeMillis1,long	12
6931	timeMillis2	9
7330	timeMillis2){	14
9721	timePickerDialog	10
9136	timePickerDialog.setOnTimeSetListener(ExportFormFragment.this)	2
9132	timePickerDialog.setStartTime(calendar.get(Calendar.HOUR_OF_DAY),	2
9213	timePickerDialog.show(getFragmentManager(),"time_picker_dialog_fragment")	10
64266	timePickerDialogFragment	1
64265	timePickerDialogFragment.mCurrentTime	1
64249	timePickerDialogFragment.mCurrentTime.setTimeInMillis(timeMillis)	1
64251	timePickerDialogFragment.mListener	1
32128	timeRangeLayout	11
32046	timeRangeLayout.setVisibility(View.GONE)	11
32076	timeRangeLayout.setVisibility(View.VISIBLE)	11
32168	timeRangeLayout.setVisibility(visibility)	3
21287	timeStamp	26
23573	timeString	13
6045	timeView	14
5956	timeView.getText().toString()	15
52574	timeZone	5
52603	timeZone)	2
3711	timer	9
2893	timer.schedule(new	7
1842	times	62
28162	times"	7
51768	times")	6
48406	times.	4
10579	times</string>	44
26311	times?	6
3214	timestamp	114
52559	timestamp)	12
35655	timestamp){	8
21023	timestamp,	2
53345	timestamp,"	2
52631	timestamp,TimeZone	2
29224	timestamp,so	5
21022	timestamp.	14
35808	timestamp.getTime()	8
14572	timestamp=	6
30006	timestampT	13
62985	timestampes	4
7222	timestamps	31
25260	timestamps.addAll(mLatestTimestampsMap.values())	14
25463	timestamps.get(0)	21
25086	timestamps.get(timestamps.size()	21
58794	timestamps.toString())	4
52663	timezone	2
42052	timing	6
40937	timing-only	4
56435	timme</item>	2
21370	ting\n\nTrykk	6
8554	tint)	16
18553	tinyint	67
27956	tipi	7
10160	tipo	56
26073	tipos	16
58596	tipus</string>	5
4892	title	233
29804	title)	46
27742	title,	16
62604	title,String	4
48285	title,and	9
44666	title,final	4
48626	title,if	4
37911	title,int	18
30629	title,long	18
38612	title,navigation	4
37619	title,since	5
37078	title.	33
38494	title/subtitle	4
47923	title/subtitle.	4
38825	title:	8
25335	titleColorGreen	7
13796	titlePageIndicator	8
13362	titlePageIndicator.setViewPager(mPager)	6
13622	titlePageIndicator.setViewPager(pager)	5
13769	titlePageIndicator.setVisibility(View.GONE)	11
44806	titleRes	12
42650	titleRes)	21
44615	titleRes,final	4
27167	titleResId,int	3
27533	titleResId,int[]	3
48909	titleView	4
48930	titleView.setText(activity.loadLabel(packageManager))	4
49253	titleView.setText(mContext.getString(	4
37052	titles	4
45442	titles.	4
55913	tjnst	2
56258	tjnst</string>	2
16273	tke</string>	13
23249	tklayn</string>	8
22902	tm	17
55516	tm</string>	2
29644	tmn	5
33042	tmp1	7
33044	tmp2	7
33043	tmp3	6
33041	tmp4	3
7447	tmpDate	22
26754	tmpDate.dayOfMonth().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime()	16
26830	tmpDate.dayOfMonth().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime()	16
32435	tmpDate.dayOfYear().withMaximumValue().millisOfDay().withMaximumValue().toDate().getTime()	10
32096	tmpDate.dayOfYear().withMinimumValue().millisOfDay().withMinimumValue().toDate().getTime()	10
26780	tmpDate.plusMonths(1)	16
32097	tmpDate.plusMonths(3)	10
32456	tmpDate.plusYears(1)	10
8449	tmpDate.toString("	22
26979	tmpDate.toString("MMMM	4
32208	tmpDate.withMonthOfYear(quarter	10
40350	tmpDependencies	4
40644	tmpListeners	10
40388	tmpListeners)	8
40780	tmpListeners.get(i).onAnimationEnd(mAnimatorSet)	4
40990	tmpListeners.get(i).onAnimationEnd(this)	8
40554	tmpListeners.get(i).onAnimationStart(this)	10
41126	tmpListeners.size()	10
40515	tmpRoots	4
40456	tmpRoots.add(node)	4
40914	tmpRoots.clear()	4
1109	to	451
11674	to&#8230	107
7945	to)	39
2395	to,	14
30992	to,int	2
55186	to,or	1
10343	to.	138
236	to:	113
28656	to:"	5
3092	to:</string>	98
34717	to:\n"	5
6415	to:\n</string>	89
34720	to</string>	3
39472	toActionMode)	4
50977	toCache	5
11986	toCsv(){	41
51177	toGncXml(@NonNull	6
20874	toGncXml(Document	21
51266	toOFX(@NonNull	4
20077	toOFX(Document	22
51158	toOfx(@NonNull	4
7234	toOfx(Document	49
63792	toPlainString()	2
26342	toPlainString(){	20
6905	toQIF(){	10
7200	toQIF(Context	7
31447	toQIF(String	7
6558	toQIF(boolean	13
10537	toString()	92
12900	toString_shouldNotFailForInfinitelyLongDecimalExpansion()	3
12608	toString_shouldUseDefaultLocale()	6
23732	toXml(Document	13
2429	toast	23
28826	toastAmountRequired	8
28833	toastFound	12
2229	toastString	14
13722	toastString)	12
29541	tocar	5
2698	todas	129
20335	todasd	18
56561	today	7
50775	today's	8
30518	today)	11
59100	today.	4
59098	today.getYear()){	4
54508	todo:	2
7914	toe	34
26441	toe,die	13
16959	toe</string>	18
26606	toegevoegd	6
16859	toevoegen</string>	7
13032	together	26
41517	together,	4
40631	together,in	4
6421	toggle	22
33286	toggle()	3
33249	toggleAmountInputEntryMode(boolean	21
33125	toggleAmountInputEntryMode(false)	16
60671	toggleAmountInputEntryMode(mSplitsList.size()	6
57506	toggleAmountInputVisibility()	3
32024	toggleBaseReportingOptions()	6
32377	toggleBaseReportingOptionsVisibility()	3
29067	toggleButton	9
34095	toggleButton.getText().toString()	8
9819	toggleDropboxPreference(Preference	16
51580	toggleDropboxPreference(pref)	13
51574	toggleDropboxPreference(preference)	13
9045	toggleDropboxSync()	14
10027	toggleGoogleDrivePreference(Preference	8
51742	toggleGoogleDrivePreference(pref)	12
51642	toggleGoogleDrivePreference(preference)	12
51628	toggleGoogleDriveSync()	9
24974	toggleGoogleDriveSync(){	14
39052	toggleMenuMode)	4
32776	toggleOwnCloudPreference(Preference	7
32839	toggleOwnCloudPreference(pref)	10
32864	toggleOwnCloudPreference(preference)	10
32610	toggleOwnCloudSync(Preference	7
32758	toggleOwnCloudSync(preference)	10
32666	toggleOwncloudPreference(Preference	7
32602	toggleOwncloudPreference(pref)	7
32912	toggleOwncloudPreference(preference)	7
32571	toggleOwncloudSync(Preference	7
32648	toggleOwncloudSync(preference)	7
32380	toggleToolbarTitleVisibility()	3
6460	toggleTransactionTypeState()	13
9364	toggling	9
1008	token	16
8832	token.	2
231	tokens	51
814	tokens)	14
3398	tokens[1])	4
31908	tokens[2]	16
33478	tokens[3]	8
33276	tokens[5]	7
33439	tokens[6]	8
29537	tomto	5
12991	tonen</string>	36
15563	tongano</item>	14
223	too	148
55173	too,it	3
19268	too,to	7
51332	too?	3
605	toolbar	33
57092	toolbar)	6
63526	toolbar.	4
23184	toolbar.xml	10
30236	toolbarHeight	8
23110	toolbar_with_spinner.xml	3
37566	toolbars.	4
34855	tools.	7
54037	tools:background="@color/account_gold"	2
52921	tools:context=".ui.FormActivity">	19
57549	tools:context=".ui.common.FormActivity">	6
33392	tools:ignore="ContentDescription"	27
1744	tools:layout="@layout/fragment_numeric_keyboard"	3
15989	tools:locale="fr">	11
53991	tools:progress="40"	2
54123	tools:progress="50"	2
54670	tools:showIn="@layout/activity_form"	6
23238	tools:showIn="@layout/activity_form">	6
21629	tools:showIn="@layout/fragment_text_report">	3
58586	tools:showIn="@layout/toolbar_with_spinner"	7
21425	tools:text="$	27
53785	tools:text="$2,500	2
53743	tools:text="$2,500"/>	2
33281	tools:text="$200"/>	12
63934	tools:text="$450.000.000"	4
53793	tools:text="$500"/>	2
31008	tools:text="/path/to/export/file"	2
31646	tools:text="1	7
63222	tools:text="15:30H"	3
63247	tools:text="25.12.2015"	3
57429	tools:text="29.11.2015"	4
28783	tools:text="@string/label_transaction_name"/>	8
53125	tools:text="Amount	3
55477	tools:text="Book	2
28990	tools:text="Computer"	6
21736	tools:text="Credit	3
32635	tools:text="Current	13
31985	tools:text="EUR"/>	7
61971	tools:text="Expenses:Computer"/>	3
54119	tools:text="Expenses:Phone:Android"/>	2
24909	tools:text="June	5
34573	tools:text="Last	5
61871	tools:text="Nothing	3
54342	tools:text="Primary	2
34559	tools:text="Sat,04	9
54207	tools:text="Secondary	2
61868	tools:text="Selected	3
34510	tools:text="Some	9
62607	tools:text="This	2
2198	tools:text="Transaction	9
62625	tools:text="Transactions"	2
62062	tools:text="USD	3
29063	tools:text="USD"/>	10
2382	top	87
47261	top)	9
23263	top,	3
43633	top,int	13
46275	top,or	4
9209	top-level	36
45500	top.	8
59484	topLevel	4
45454	topMargin	4
43242	topSubMenu	4
42462	topSubMenu.getParentMenu()	4
34771	topics.</p>	4
21258	topptekst</string>	6
22850	torta</string>	11
4102	total	196
36413	total)	8
36097	total.add(new	8
6065	total</string>	44
55145	totalFrequency	2
47026	totalHeight	5
47078	totalItemCount)	4
57246	totalPlannedExecutions	13
50789	totalPlannedExecutions)	11
59929	totalPlannedExecutions))	6
35345	totalSum	8
35256	totalSum.add(sum)	4
21335	totalView	6
21434	totalView.findViewById(R.id.account_balance)	8
21665	totalView.findViewById(R.id.account_name)	8
62353	totalView.getLayoutParams()	3
62327	totalView.setLayoutParams(layoutParams)	3
47139	totalWidth	5
56381	totala	2
21623	totalbelpet</string>	10
17104	totale	7
16201	totale:</string>	27
16419	totale</string>	13
15073	totalen</string>	11
29399	totali</string>	5
29362	totali]]></string>	4
63838	totalling	1
21967	totes	7
14721	tots	16
30228	touch	56
46669	touchable	4
31771	touches	17
46991	touching	4
11395	toujours	22
10934	tous	37
23437	tous\n	5
51449	toute	4
3952	toutes	49
19059	trNote	20
18981	trNote.setText("Repeats	5
33761	trNote.setText(context.getString(R.string.label_repeats)	5
6611	trNote.setText(description)	8
33738	trNote.setText(event.toString())	3
54555	trNote.setText(notes)	5
30288	trNote.setVisibility(View.GONE)	13
6618	trNote.setVisibility(View.VISIBLE)	10
26216	tra	19
27924	traccia	19
29185	traccia-spese	6
33101	track	11
50328	trackball.	5
43151	tracked	4
4488	tracker	33
5033	tracking	33
40432	tracks	8
40043	tracks,sending	4
61152	trades	3
47897	traditional	4
35323	tradues	18
51338	tragen	4
17534	trakcie	18
22737	traksaksi	7
6560	tramount	17
31169	tramount.setText(Double.toString(transaction.getAmount()))	2
31255	tramount.setText(Transaction.getFormattedAmount(amount))	2
18562	tramount.setText(amount.formattedString(Locale.getDefault()))	12
18921	tramount.setTextColor(getResources().getColor(R.color.credit_green))	14
19124	tramount.setTextColor(getResources().getColor(R.color.debit_red))	10
15136	tranaksjoner</string>	11
16449	tranche	11
10485	tranches</string>	18
14006	tranferAcct	6
13665	tranferAcct.setCurrencyCode(ACCOUNTS_CURRENCY_CODE)	5
39539	trans	5
39949	trans.commit()	4
54539	transAccID	3
5524	transAdapter	15
5260	transAdapter.close()	13
5694	transDbAdapter	16
6191	transDbAdapter.close()	16
5109	transDbAdapter.getAllTransactionsForAccount("to-be-deleted")	9
34377	transDbAdapter.getAllTransactionsForAccount(accountUidToDelete)	9
23471	transID	7
59585	transID.appendChild(doc.createTextNode(getUID()))	1
35819	transID.appendChild(doc.createTextNode(mTransactionUID))	5
35644	transID.appendChild(doc.createTextNode(mUID))	3
52185	trans_acct	10
52153	trans_acct.trans_acct_a_uid	14
59792	trans_acct.trans_acct_a_uid",	4
52058	trans_acct.trans_acct_t_uid	10
34098	trans_acct_a_uid	21
32504	trans_acct_balance	23
29548	trans_acct_balance",	26
63545	trans_acct_balance,	3
52378	trans_acct_t_uid	22
19869	trans_currency",	17
30067	trans_currency_count	22
30075	trans_currency_count"	8
30012	trans_currency_count",	5
19635	trans_date_posted",	5
56980	trans_desc",	14
19827	trans_exported",	8
59806	trans_extra_info	11
24180	trans_extra_info.trans_acct_a_uid	7
59777	trans_extra_info.trans_acct_a_uid",	3
24106	trans_extra_info.trans_acct_t_uid	10
30092	trans_extra_info.trans_acct_t_uid",	11
57512	trans_extra_info.trans_currency_count	4
19995	trans_from_sched_action",	3
56964	trans_notes",	3
33659	trans_recur",	5
2493	trans_split_acct	36
56577	trans_split_acct",	4
59741	trans_split_acct."	4
32714	trans_split_count	9
29528	trans_split_count",	4
21901	trans_time	19
33660	trans_time",	16
52232	trans_uid	13
21761	trans_uid",	41
19674	transa&#231	22
20612	transac&#231	11
22399	transacci	10
3163	transacci&#243	72
59989	transacci?</string>	3
10923	transaccin	33
15547	transaccin(es)</string>	22
10669	transaccin</item>	6
15770	transaccin</string>	20
15523	transaccin?</string>	5
15413	transaccion(es)</string>	10
3717	transacciones	122
15438	transacciones&#8230	11
15732	transacciones)	23
18035	transacciones)\n	6
15731	transacciones.	15
15300	transacciones.\nLa	22
11151	transacciones</item>	6
3870	transacciones</string>	86
15726	transacciones?	20
12935	transacciones?</string>	34
3940	transacciones\n	34
13029	transaccions	13
22002	transaccions!</string>	7
22180	transaccions.\nEl	7
22098	transaccions</string>	7
60034	transaccions?</string>	3
22173	transaccions?\n\nAquesta	7
15461	transaccipnes	18
12943	transaces	18
23038	transaces</string>	9
18443	transacionsDbAdapter	10
18099	transacionsDbAdapter.addTransaction(transaction)	10
35927	transacionsDbAdapter.close()	5
54828	transacionsDbAdapter.getAccountID(accountUID)	2
12579	transaco	12
22980	transaco.\nA	7
16775	transactie	42
26207	transactie(s)	12
26576	transactie</string>	10
16812	transacties	54
16849	transacties</string>	27
16601	transactietype,CREDIT	13
2063	transaction	367
10475	transaction")	45
33740	transaction",	6
2441	transaction",Toast.LENGTH_SHORT).show()	11
5673	transaction's	32
18044	transaction(s)")	16
10412	transaction(s)</string>	115
14295	transaction)	30
214	transaction){	116
61845	transaction){-	1
10356	transaction,	28
52380	transaction,UpdateMethod	6
18534	transaction,a	7
62893	transaction,an	5
26723	transaction,boolean	8
32070	transaction,close	11
35775	transaction,credit	6
35634	transaction,either	5
62919	transaction,in	4
63052	transaction,just	4
9078	transaction,long	12
5942	transaction,should	7
31429	transaction,since	7
51813	transaction,so	9
6363	transaction,then	8
58830	transaction,we	2
62899	transaction,{@code	4
7972	transaction.	96
34608	transaction.</p>	6
28555	transaction.addSplit(new	9
10651	transaction.addSplit(split)	79
10753	transaction.addSplit(split.createPair(	5
31125	transaction.addSplit(split.createPair(BRAVO_ACCOUNT_NAME))	8
52207	transaction.addSplit(split.createPair(CASH_IN_WALLET_ASSET_ACCOUNT_UID))	8
19304	transaction.addSplit(split.createPair(DUMMY_ACCOUNT_UID))	15
10961	transaction.addSplit(split.createPair(SIMPLE_ACCOUNT_UID))	6
61724	transaction.addSplit(split.createPair(account1.getUID()))	5
18871	transaction.addSplit(split.createPair(account2.getUID()))	12
53092	transaction.addSplit(split.createPair(getOrCreateOpeningBalanceAccountUID()))	6
57705	transaction.addSplit(split.createPair(mAccountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance("USD"))))	10
11226	transaction.addSplit(split.createPair(mAccountsDbAdapter.getOrCreateImbalanceAccountUID(Currency.getInstance(currencyCode))))	11
57277	transaction.addSplit(split.createPair(mTransferAccount.getUID()))	3
54350	transaction.addSplit(split.createPair(transferAccount.getUID()))	2
19833	transaction.addSplit(split.createPair(transferAccountUID))	10
58943	transaction.appendChild(amount)	1
63537	transaction.appendChild(datePosted)	2
23590	transaction.appendChild(dateUser)	2
58984	transaction.appendChild(memo)	1
59001	transaction.appendChild(name)	1
58957	transaction.appendChild(transID)	1
58978	transaction.appendChild(type)	1
11718	transaction.createAutoBalanceSplit()	9
26383	transaction.getAutoBalanceSplit()	7
29057	transaction.getBalance(DUMMY_ACCOUNT_UID)	6
62825	transaction.getBalance(TRANSACTIONS_ACCOUNT_UID)	4
34119	transaction.getBalance(alphaAccount.getUID())	5
11688	transaction.getBalance(bravoAccount.getUID())	7
1780	transaction.getBalance(mAccountUID)	10
11235	transaction.getCommodity()	12
36498	transaction.getCommodityUID()	8
19720	transaction.getCreatedTimestamp().toString())	14
19715	transaction.getCurrencyCode())	22
20664	transaction.getDescription())	13
26395	transaction.getDoubleEntryAccountUID()	10
25325	transaction.getImbalance()	19
21600	transaction.getModifiedTimestamp().before(lastExportedTimestamp))	9
20796	transaction.getNote())	15
20113	transaction.getRecurrencePeriod())	3
14219	transaction.getScheduledActionUID())	16
51307	transaction.getSplitAccountUID()	3
598	transaction.getSplits())	29
7560	transaction.getSplits().get(0)	5
27011	transaction.getSplits().get(0).getAccountUID()	6
8086	transaction.getSplits().get(1)	5
8155	transaction.getSplits().get(2)	3
63048	transaction.getSplits(TRANSACTIONS_ACCOUNT_UID).get(0)	4
29153	transaction.getSplits(TRANSFER_ACCOUNT_UID).get(0)	13
63053	transaction.getSplits(account.getUID()).get(0)	4
63005	transaction.getSplits(mBaseAccount.getUID()).get(0)	4
64136	transaction.getSplits(transaction.getCurrencyCode())	3
14267	transaction.getTimeMillis())	26
26462	transaction.getType()	7
9902	transaction.getUID()	10
20647	transaction.getUID())	19
19488	transaction.isExported()	24
7016	transaction.isExported())	23
19763	transaction.isTemplate()	15
11902	transaction.mCurrencyCode	7
20571	transaction.mRecurrencePeriod	4
11369	transaction.mSplitList)	13
5853	transaction.setAccountUID("to-be-deleted")	10
34344	transaction.setAccountUID(DUMMY_ACCOUNT_UID)	5
29429	transaction.setAccountUID(account.getUID())	2
18142	transaction.setAccountUID(accountUID)	12
34389	transaction.setAccountUID(accountUidToDelete)	5
23563	transaction.setAccountUID(c.getString(DatabaseAdapter.COLUMN_ACCOUNT_UID))	5
26367	transaction.setAccountUID(getUID())	8
26483	transaction.setAmount(transaction.getAmount().negate())	13
10611	transaction.setCommodity(ACCOUNTS_CURRENCY)	3
36534	transaction.setCommodity(CommoditiesDbAdapter.getInstance().getCommodity(currencyCode))	7
54214	transaction.setCommodity(Commodity.EUR)	2
11093	transaction.setCommodity(Commodity.getInstance(currencyCode))	3
11074	transaction.setCommodity(commodity)	7
10779	transaction.setCommodity(mCommoditiesDbAdapter.getCommodity(currencyCode))	6
397	transaction.setCommodity(mCommodity)	10
26417	transaction.setCurrency(mCurrency)	7
10632	transaction.setCurrencyCode(ACCOUNTS_CURRENCY.getCurrencyCode())	6
33172	transaction.setCurrencyCode(DUMMY_ACCOUNT_CURRENCY.getCurrencyCode())	16
20021	transaction.setCurrencyCode(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_CURRENCY)))	12
11170	transaction.setCurrencyCode(currencyCode)	28
35700	transaction.setCurrencyCode(mCurrency.getCurrencyCode())	10
36483	transaction.setDescription("What	11
18345	transaction.setDescription(c.getString(DatabaseAdapter.COLUMN_DESCRIPTION))	14
35568	transaction.setDescription(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_DESCRIPTION)))	4
54446	transaction.setDescription(getName(id))	4
18054	transaction.setDescription(note)	10
34532	transaction.setDoubleEntryAccountUID(c.getString(DatabaseAdapter.COLUMN_DOUBLE_ENTRY_ACCOUNT_UID))	3
6451	transaction.setDoubleEntryAccountUID(doubleAccountUID)	15
6921	transaction.setExported(c.getInt(DatabaseAdapter.COLUMN_EXPORTED)	16
10802	transaction.setExported(c.getInt(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_EXPORTED))	17
11298	transaction.setExported(false)	7
24350	transaction.setExported(true)	9
13372	transaction.setNote("What	14
19914	transaction.setNote(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_NOTES)))	15
10752	transaction.setNote(getAccountName(accountUID))	6
51092	transaction.setNote(getName(id))	7
10425	transaction.setNote(note)	5
11836	transaction.setNote(notes)	7
6523	transaction.setRecurrencePeriod(recurrencePeriod)	10
10750	transaction.setScheduledActionUID(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_SCHEDX_ACTION_UID)))	13
25644	transaction.setScheduledActionUID(scheduledAction.getUID())	5
51288	transaction.setSplitAccountUID(c.getString(DatabaseAdapter.COLUMN_SPLIT_ACCOUNT_UID))	3
19739	transaction.setSplits(mSplitsDbAdapter.getSplitsForTransaction(transactionID))	12
10776	transaction.setSplits(splits)	7
11995	transaction.setTemplate(c.getInt(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_TEMPLATE))	15
54247	transaction.setTemplate(true)	2
11198	transaction.setTime(System.currentTimeMillis())	43
26406	transaction.setTime(c.getLong(DatabaseAdapter.COLUMN_TIMESTAMP))	13
21068	transaction.setTime(c.getLong(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_TIMESTAMP)))	10
10660	transaction.setTime(cal.getTimeInMillis())	9
25552	transaction.setTime(lastRuntime)	5
32727	transaction.setTime(new	6
7190	transaction.setTransactionType(Transaction.TransactionType.valueOf(c.getString(DatabaseAdapter.COLUMN_TYPE)))	5
18266	transaction.setTransactionType(type)	5
26444	transaction.setType(TransactionType.CREDIT)	7
26217	transaction.setType(TransactionType.DEBIT)	7
18396	transaction.setUID(c.getString(DatabaseAdapter.COLUMN_UID))	11
24069	transaction.setUID(c.getString(c.getColumnIndexOrThrow(TransactionEntry.COLUMN_UID)))	9
60397	transaction.setUID(mTransaction.getUID())	6
20712	transaction.toGncXml(document,bookNode)	6
30988	transaction.toGncXml(mDocument,bookNode)	7
11452	transaction</item>	18
62806	transaction</li>	4
35809	transaction</p>	7
1909	transaction</string>	221
4114	transaction?</string>	112
7963	transactionAmount	18
8689	transactionAmount,	4
31869	transactionAmount,String	5
21072	transactionCount	21
20272	transactionCountNode	13
20730	transactionCountNode.appendChild(document.createTextNode(String.valueOf(transactionCount)))	4
31246	transactionCountNode.appendChild(mDocument.createTextNode(String.valueOf(transactionCount)))	7
35743	transactionCountNode.appendChild(mDocument.createTextNode(String.valueOf(transactionsList.size())))	4
35786	transactionCountNode.setAttribute("cd:type","transaction")	6
20340	transactionCountNode.setAttribute(GncXmlHelper.ATTR_KEY_CD_TYPE,"transaction")	9
31678	transactionCurrency	8
9923	transactionDate	9
33683	transactionDeleteConditions	2
59150	transactionDescription	11
34685	transactionFormFragment	8
60678	transactionFormFragment,TransactionsActivity.FRAGMENT_NEW_TRANSACTION)	5
34565	transactionFormFragment.setArguments(args)	8
62841	transactionGUID	4
25146	transactionHeader	11
25259	transactionHeader.setText("Transactions")	5
25334	transactionHeader.setText(R.string.title_transactions)	8
25377	transactionHeader.setTextColor(titleColorGreen)	10
11991	transactionID	23
18414	transactionID){	11
18197	transactionID,	7
20567	transactionID,null)	2
9121	transactionId	73
18901	transactionId)	22
18274	transactionId){	36
24208	transactionId,	7
35581	transactionId,long	4
25414	transactionId,null)	16
35425	transactionIdList	5
35372	transactionIdList)	5
35398	transactionIdList.add(id)	5
59613	transactionIds	3
59638	transactionIds,String	3
28847	transactionIntent	16
51941	transactionIntent.putExtra(Account.EXTRA_CURRENCY_CODE,"USD")	7
54793	transactionIntent.putExtra(Intent.EXTRA_TEXT,"Intents	10
51094	transactionIntent.putExtra(Intent.EXTRA_TITLE,"Power	12
29128	transactionIntent.putExtra(Transaction.EXTRA_ACCOUNT_UID,DUMMY_ACCOUNT_UID)	18
62867	transactionIntent.putExtra(Transaction.EXTRA_ACCOUNT_UID,TRANSACTIONS_ACCOUNT_UID)	4
54774	transactionIntent.putExtra(Transaction.EXTRA_AMOUNT,4.99)	3
51994	transactionIntent.putExtra(Transaction.EXTRA_AMOUNT,new	12
28642	transactionIntent.putExtra(Transaction.EXTRA_TRANSACTION_TYPE,TransactionType.DEBIT.name())	13
51126	transactionIntent.setType(Transaction.MIME_TYPE)	12
19298	transactionList	21
19884	transactionList)	26
14264	transactionList){	43
11680	transactionList,	6
52203	transactionList,UpdateMethod	2
18745	transactionList.addAll(account.getTransactions())	15
52303	transactionList.addAll(mTransactionsAdapter.getScheduledTransactionsForAccount(account.getUID()))	6
59457	transactionName	4
12545	transactionNode	25
23979	transactionNode.appendChild(amount)	8
31920	transactionNode.appendChild(bankAccountTo)	5
20810	transactionNode.appendChild(currencyNode)	11
20609	transactionNode.appendChild(dateEneteredNode)	11
35816	transactionNode.appendChild(datePosted)	8
20934	transactionNode.appendChild(datePostedNode)	11
35697	transactionNode.appendChild(dateUser)	8
20738	transactionNode.appendChild(descriptionNode)	11
20583	transactionNode.appendChild(idNode)	11
31690	transactionNode.appendChild(memo)	11
35792	transactionNode.appendChild(name)	9
20533	transactionNode.appendChild(recurrenceNode)	9
35666	transactionNode.appendChild(transID)	8
21050	transactionNode.appendChild(trnSlotsNode)	9
20900	transactionNode.appendChild(trnSplits)	9
35759	transactionNode.appendChild(type)	10
35710	transactionNode.appendChild(typeNode)	2
35826	transactionNode.setAttribute("version",GncXmlHelper.BOOK_VERSION)	4
20304	transactionNode.setAttribute(GncXmlHelper.ATTR_KEY_VERSION,GncXmlHelper.BOOK_VERSION)	9
59156	transactionNote	11
28795	transactionNotes	7
33121	transactionOptionsView	3
32985	transactionOptionsView.findViewById(R.id.description)).setText(R.string.label_delete_account_transactions_description)	5
33148	transactionOptionsView.findViewById(R.id.radio_delete)	5
63969	transactionOptionsView.findViewById(R.id.radio_move)	3
33159	transactionOptionsView.findViewById(R.id.radio_move))	5
33135	transactionOptionsView.findViewById(R.id.target_accounts_spinner)	5
32934	transactionOptionsView.findViewById(R.id.title_content)).setText(R.string.section_header_transactions)	3
33168	transactionOptionsView.setVisibility(mTransactionCount	3
24278	transactionPreservingDelete(long	16
31249	transactionQIFBuilder	7
31454	transactionQIFBuilder.append(QifHelper.AMOUNT_PREFIX).append(amount.toPlainString())	5
31333	transactionQIFBuilder.append(QifHelper.DATE_PREFIX).append(QifHelper.formatDate(mTimestamp)).append(newLine)	7
31270	transactionQIFBuilder.append(QifHelper.ENTRY_TERMINATOR).append(newLine)	5
31275	transactionQIFBuilder.append(QifHelper.MEMO_PREFIX).append(mDescription).append(newLine)	5
35947	transactionQIFBuilder.append(QifHelper.MEMO_PREFIX).append(mName).append(newLine)	4
31074	transactionQIFBuilder.append(QifHelper.SPLIT_AMOUNT_PREFIX).append(amount.asString()).append(newLine)	5
31020	transactionQIFBuilder.append(QifHelper.SPLIT_AMOUNT_PREFIX).append(imbalanceAmount.asString()).append(newLine)	5
31138	transactionQIFBuilder.append(QifHelper.SPLIT_CATEGORY_PREFIX).append(imbalanceAccountName).append(newLine)	5
31140	transactionQIFBuilder.append(QifHelper.SPLIT_CATEGORY_PREFIX).append(splitAccountName).append(newLine)	5
31276	transactionQIFBuilder.append(QifHelper.SPLIT_MEMO_PREFIX).append(memo).append(newLine)	5
30973	transactionQIFBuilder.toString()	5
6468	transactionQifBuffer	10
6788	transactionQifBuffer.append(QifHelper.AMOUNT_PREFIX	7
7313	transactionQifBuffer.append(QifHelper.CATEGORY_PREFIX	6
7070	transactionQifBuffer.append(QifHelper.DATE_PREFIX	6
7283	transactionQifBuffer.append(QifHelper.DATE_PREFIX).append(QifHelper.formatDate(mTimestamp)).append(newLine)	7
6676	transactionQifBuffer.append(QifHelper.ENTRY_TERMINATOR	6
6925	transactionQifBuffer.append(QifHelper.ENTRY_TERMINATOR).append(newLine)	5
7216	transactionQifBuffer.append(QifHelper.MEMO_PREFIX	6
7114	transactionQifBuffer.append(QifHelper.MEMO_PREFIX).append(mName).append(newLine)	7
6791	transactionQifBuffer.append(QifHelper.SPLIT_AMOUNT_PREFIX	7
7001	transactionQifBuffer.append(QifHelper.SPLIT_AMOUNT_PREFIX).append(mAmount.asString()).append(newLine)	5
7202	transactionQifBuffer.append(QifHelper.SPLIT_CATEGORY_PREFIX	6
6566	transactionQifBuffer.append(QifHelper.SPLIT_CATEGORY_PREFIX).append(splitAccountFullName).append(newLine)	5
6678	transactionQifBuffer.append(QifHelper.SPLIT_MEMO_PREFIX	7
6594	transactionQifBuffer.append(QifHelper.SPLIT_MEMO_PREFIX).append(mDescription).append(newLine)	5
6778	transactionQifBuffer.toString()	11
31175	transactionStats	8
6859	transactionSum	6
6613	transactionTime	41
59176	transactionTime.compareTo(today.plusDays(1))	4
12029	transactionType	42
33848	transactionType)	10
13111	transactionType){	9
5139	transactionTypeButton	14
51236	transactionUI	2
13446	transactionUID	82
2576	transactionUID)	61
13332	transactionUID){	33
20261	transactionUID,	27
24118	transactionUID,@NonNull	4
24120	transactionUID,@Nullable	4
13257	transactionUID,String	19
57237	transactionUID,Timestamp	3
24185	transactionUID,accountUID)	8
35783	transactionUid	8
35747	transactionUid.appendChild(doc.createTextNode(OfxHelper.UNSOLICITED_TRANSACTION_ID))	4
59094	transactionUid.appendChild(doc.createTextNode(UNSOLICITED_TRANSACTION_ID))	6
7656	transactionWithNonDefaultSplitsImport()	3
19072	transaction\n	21
33349	transaction_uid&gt	5
266	transactions	375
11814	transactions!</string>	71
4227	transactions")	64
62602	transactions"/>	2
12674	transactions&#8230	69
3312	transactions)	157
18239	transactions)\n	17
30470	transactions,	9
52361	transactions,<code>false</code>	4
62290	transactions,and	5
18355	transactions,but	5
30566	transactions,it	7
62642	transactions,make	2
6508	transactions,or	11
52318	transactions,splits	13
8963	transactions,the	3
5505	transactions.	172
7056	transactions...</string>	16
10152	transactions.\nLe	23
16238	transactions.\nQue	5
11239	transactions.\nThe	112
61465	transactions.add(buildModelInstance(cursor))	3
24247	transactions.add(buildTransactionInstance(cursor))	7
59951	transactions.add(recurringTrxn)	7
4049	transactions.get(0)	32
19244	transactions.recurrence_period	4
18718	transactions.timestamp	4
19203	transactions.uid	17
62629	transactions/sub-accounts,or	2
11413	transactions</item>	24
33979	transactions</li>	6
35270	transactions</p>	12
2351	transactions</string>	239
6473	transactions?	55
5530	transactions?</string>	116
23961	transactions?\n	5
15945	transactions?\nCette	13
11383	transactions?\n\nThis	83
5813	transactionsCount	29
20297	transactionsCursor	16
20213	transactionsCursor.close()	17
27741	transactionsCursor.getCount()	5
30649	transactionsDBAdapter	13
30543	transactionsDBAdapter.close()	7
59596	transactionsDBAdapter.getTransactionsCount(accountId)	2
52004	transactionsDBAdapter.getTransactionsSum(accountId)	9
36697	transactionsDb	11
36899	transactionsDb.close()	9
54719	transactionsDb.fetchAllTransactionsForAccount(DUMMY_ACCOUNT_UID).getCount()	5
36818	transactionsDb.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID).size()	6
907	transactionsDbAdapter	109
14168	transactionsDbAdapter)	7
57280	transactionsDbAdapter.addRecord(mTemplateTransaction,DatabaseAdapter.UpdateMethod.insert)	6
52283	transactionsDbAdapter.addRecord(recurringTrxn)	7
52055	transactionsDbAdapter.addRecord(recurringTrxn,DatabaseAdapter.UpdateMethod.insert)	5
18677	transactionsDbAdapter.addTransaction(openingBalance)	5
25661	transactionsDbAdapter.addTransaction(recurringTrxn)	8
54789	transactionsDbAdapter.addTransaction(t1)	2
54747	transactionsDbAdapter.addTransaction(t2)	2
34400	transactionsDbAdapter.addTransaction(transaction)	11
61686	transactionsDbAdapter.buildModelInstance(cursor)	10
25392	transactionsDbAdapter.buildTransactionInstance(c)	5
25194	transactionsDbAdapter.buildTransactionInstance(cursor)	9
52241	transactionsDbAdapter.bulkAddRecords(openingBalances)	9
52244	transactionsDbAdapter.bulkAddRecords(openingBalances,DatabaseAdapter.UpdateMethod.insert)	2
50908	transactionsDbAdapter.bulkAddRecords(transactions,DatabaseAdapter.UpdateMethod.insert)	15
18758	transactionsDbAdapter.bulkAddTransactions(openingBalances)	15
3734	transactionsDbAdapter.close()	37
52069	transactionsDbAdapter.deleteAllNonTemplateTransactions()	13
3666	transactionsDbAdapter.deleteAllRecords()	28
18809	transactionsDbAdapter.deleteRecord(rowId)	14
25469	transactionsDbAdapter.fetchAllRecords()	18
21490	transactionsDbAdapter.fetchTransactionsWithSplitsWithTransactionAccount(	25
54780	transactionsDbAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID)	5
51544	transactionsDbAdapter.getRecord(actionUID)	13
58855	transactionsDbAdapter.getRecord(eventUID)	6
61730	transactionsDbAdapter.getRecord(mTransactionUID)	7
25643	transactionsDbAdapter.getTransaction(eventUID)	11
496	transactionsDbAdapter.getTransaction(mTransactionUID)	6
6546	transactionsDbAdapter.markAsExported(account.getUID())	15
31052	transactionsDbAdapter.updateTransaction(contentValues,null,null)	13
31464	transactionsFragment	3
30975	transactionsFragment,FRAGMENT_TRANSACTIONS_LIST)	3
31406	transactionsFragment.setArguments(args)	3
1270	transactionsList	46
34704	transactionsList)	13
1953	transactionsList){	19
61577	transactionsList.add(buildModelInstance(c))	3
24536	transactionsList.add(buildTransactionInstance(c))	17
26376	transactionsList.add(transaction)	7
19459	transactionsListFragment	29
19586	transactionsListFragment)	7
19819	transactionsListFragment,FRAGMENT_TRANSACTIONS_LIST)	14
63694	transactionsListFragment.refreshList(accountId)	2
30632	transactionsListFragment.refreshList(itemId)	8
19432	transactionsListFragment.refreshList(mAccountId)	7
19900	transactionsListFragment.setArguments(args)	20
25271	transactionsNavAdapter	6
25253	transactionsNavOptions	9
25001	transactionsNavOptions.add("Export...")	4
25168	transactionsNavOptions.add("Scheduled	6
29920	transactionsNavOptions.add("Transactions")	2
25246	transactionsNavOptions.add(getString(R.string.nav_menu_export))	5
25230	transactionsNavOptions.add(getString(R.string.nav_menu_scheduled_transactions))	5
3470	transactions\n	131
24225	transactions_uid	11
29713	transae	5
3118	transaes	90
29688	transaes&#8230	5
6101	transaes)	16
6100	transaes.	22
28719	transaes.</string>	13
34944	transaes</item>	6
6288	transaes</string>	58
57609	transaes?	6
51411	transaes?</string>	9
23006	transaes?n\nEsta	10
11657	transaes\n	18
22367	transakc	5
22448	transakc)	5
55740	transakc.	5
22433	transakce	10
22397	transakce.\nClov	5
22361	transakce</string>	10
22087	transakce?	7
55492	transakce?</string>	2
10761	transakci	12
22355	transakci(e)	10
22099	transakci</string>	7
55494	transakci?</string>	2
12925	transakcj	16
17677	transakcj</string>	22
17413	transakcj?</string>	9
17708	transakcja</string>	13
17765	transakcjami</string>	11
12324	transakcje	27
17655	transakcje.</string>	9
17494	transakcje.\nCo	11
17788	transakcje</string>	30
17515	transakcje?</string>	9
17530	transakcje?\n\nTej	13
17388	transakcji	20
23036	transakcji!</string>	8
17490	transakcji&#8230	7
17690	transakcji)	13
22993	transakcji.	6
17547	transakcji</string>	22
11866	transaksi	17
12947	transaksi&#8230	8
22846	transaksi)	7
11880	transaksi.	10
11099	transaksi</string>	16
11100	transaksi?	9
10177	transaksi?</string>	3
10287	transaksi\n	5
12858	transaksjon	17
21541	transaksjon(er)</string>	21
14671	transaksjon</string>	33
51865	transaksjon\n	7
51986	transaksjonen(e).\nMottaker	4
14841	transaksjonen(e).\nMottakerkonto	20
8175	transaksjonen</string>	43
15165	transaksjonen?</string>	22
11146	transaksjonene!</string>	31
21384	transaksjonene.	10
7430	transaksjonene</string>	39
15154	transaksjonene?</string>	16
3436	transaksjoner	92
15109	transaksjoner&#8230	18
21778	transaksjoner)	10
15245	transaksjoner).</string>	24
28192	transaksjoner)\n	4
15156	transaksjoner.	17
7674	transaksjoner/kontoer\n	9
3401	transaksjoner</string>	82
21786	transaksjoner?	10
21484	transaksjoner?</string>	6
51949	transaksjoner\n	11
21318	transaksjonsbelp	9
21254	transaksjonstype	6
15107	transaksjonstype</string>	21
12207	transaktion	15
10693	transaktion(er)</string>	9
56075	transaktion</item>	2
23059	transaktion</string>	10
56196	transaktion?</string>	2
56113	transaktionen	2
55935	transaktionen</string>	2
11348	transaktioner	13
56268	transaktioner)	2
56130	transaktioner.	2
56201	transaktioner.\nDestinationskontot	2
56276	transaktioner</item>	2
11282	transaktioner</string>	13
56121	transaktioner?	2
55923	transaktioner?</string>	2
56173	transaktionerna!</string>	2
56353	transaktionslista</string>	2
56379	transaktionstyp</string>	2
10386	transao	45
23003	transao(es)</string>	22
22913	transao.\nA	13
26174	transao</item>	9
4537	transao</string>	54
51480	transao?</string>	12
34364	transations	9
12334	transazione	43
26100	transazione</item>	3
12134	transazione</string>	50
16389	transazione?</string>	13
3263	transazioni	87
16380	transazioni&#8230	9
22642	transazioni)	6
28024	transazioni)\n	5
16272	transazioni.	17
16103	transazioni.\nIl	21
25971	transazioni</item>	3
3458	transazioni</string>	68
16269	transazioni?	15
16439	transazioni?</string>	13
22822	transazioni?\n\nQuesta	6
25869	transazioni\n	17
49758	transcription,and	5
6662	transctions	15
16049	transf&#233	18
2146	transfer	261
20504	transfer&#234	16
29122	transferAccount	10
29070	transferAccountID	5
31548	transferAccountSpinner){	19
31712	transferAccountSpinner.setAdapter(mCursorAdapter)	14
7041	transferAccountType	5
7172	transferAccountType.getNormalBalanceType())	5
6591	transferAccountUID	14
36504	transferAcct	9
10790	transferAcctId	27
62851	transferAcctSplit	5
62882	transferAcctTrns	4
62935	transferAcctTrns.get(0)	4
11552	transferAcctUID	37
62828	transferBalance	5
31801	transferComplete(Money	15
62938	transferCurrencyCode	4
8072	transferFunds()	19
24056	transferFunds(){	21
8551	transferFundsListener	9
8013	transferFundsListener){	9
63061	transferSplit	4
15811	transferencia	16
15721	transferidas	25
3876	transferir	15
4634	transferncia	30
29694	transferncia</string>	24
36659	transferncias	9
17272	transferowe	11
17596	transferowe</string>	9
25551	transferred	19
7357	transfers	13
27317	transfers.	10
10622	transfert	25
46456	transform	8
43129	transformMatrix(Matrix	4
42548	transformMatrix(m,view)	4
43303	transformMatrix(t.getMatrix(),view)	4
43101	transformation	4
7143	transformer	24
6880	transformer.setOutputProperty("{http://xml.apache.org/xslt	24
7233	transformer.setOutputProperty(OutputKeys.INDENT,"yes")	24
7275	transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,"yes")	14
6831	transformer.transform(source,result)	24
6832	transformerFactory	25
7036	transformerFactory.newTransformer()	24
10538	transfrer	10
10539	transfres	9
45213	transition	8
45701	transitioning	4
45342	transitioning,false	4
45743	transitions	4
10073	transitive	21
9746	translatable="false">	20
20592	translatable="false">C&#244	13
36583	translatable="false">Color	14
56801	translatable="false">Kolor	9
54982	translatable="false">about_gnucash</string>	8
29743	translatable="false">app_license</string>	10
29762	translatable="false">build_version</string>	6
29859	translatable="false">change_passcode</string>	10
29784	translatable="false">create_backup</string>	9
29851	translatable="false">create_default_accounts</string>	6
29737	translatable="false">default_currency</string>	6
29822	translatable="false">default_export_format</string>	6
54994	translatable="false">default_transaction_type</string>	8
29789	translatable="false">delete_all_accounts</string>	6
29928	translatable="false">delete_all_transactions</string>	6
54906	translatable="false">delete_transactions_after_export</string>	8
54957	translatable="false">dropbox_sync</string>	7
29820	translatable="false">enable_crashlytics</string>	14
29923	translatable="false">enable_passcode</string>	10
55014	translatable="false">export_all_transactions</string>	8
54986	translatable="false">export_email_target</string>	4
29758	translatable="false">google_drive_app_folder</string>	9
29797	translatable="false">google_drive_sync</string>	9
55011	translatable="false">import_gnucash_accounts</string>	4
29748	translatable="false">key_first_run</string>	6
63136	translatable="false">owncloud_server_address</string>	3
63159	translatable="false">owncloud_sync</string>	3
29847	translatable="false">owncloud_sync_password</string>	5
29918	translatable="false">owncloud_sync_username</string>	5
63174	translatable="false">owncloud_upload_dir</string>	3
54886	translatable="false">previous_minor_version</string>	4
29785	translatable="false">recurring_transaction_ids</string>	6
29925	translatable="false">report_currency</string>	8
29742	translatable="false">restore_backup</string>	9
29868	translatable="false">save_opening_balances</string>	9
29894	translatable="false">use_account_color</string>	14
54948	translatable="false">use_double_entry</string>	4
54966	translatable="false">xml_ofx_header</string>	4
38671	translate	8
10459	translate-->	22
43196	translationX	4
42578	translationX)	5
42368	translationY	4
43262	translationY)	5
6711	transmitted	17
1804	transparent	6
1144	transparent,	6
1142	transparent.	6
24018	transx	10
23565	transx.getAmount()	1
31665	transxUID	11
12620	tranzacie	11
12138	tranzakci	9
22614	tranzakci</string>	8
15634	trasacciones	15
16353	trasferimento	32
16236	trasferimento</string>	21
29369	trasferire	2
11180	tratamento	11
59496	tratar	11
46261	traversal,defer	4
46969	traverse	4
11652	tre	31
48755	tread.	4
25641	treat	22
42757	treated	19
41437	treats	4
55853	tredje	2
21719	tredjeparts	11
2393	tree	32
16528	trekkingsrecht)</item>	6
16086	tres</string>	16
47245	trick	4
57698	tried	6
9141	tries	9
2150	trigger	53
18816	triggered	30
13655	triggers	27
516	trim	23
33992	trimmed	4
52817	trimmed.	4
15420	trinitense</item>	14
36454	trip	9
22523	trlve</string>	6
5376	trn	6
62794	trn"	4
57250	trnAdapter	6
57230	trnAdapter.getRecordsCount()	6
36196	trnCommodity	4
1785	trnDate	9
63070	trnDescription	5
59352	trnName	4
20196	trnSlotsNode	10
54243	trnSlotsNode.appendChild(GncXmlHelper.createSlot(doc,GncXmlHelper.KEY_NOTES,mNotes))	3
20215	trnSlotsNode.appendChild(GncXmlHelper.createSlot(doc,GncXmlHelper.KEY_NOTES,mNotes,GncXmlHelper.ATTR_VALUE_STRING))	9
21166	trnSplits	12
19788	trnUID	18
31174	trname	2
31317	trname.setText(transaction.getName())	2
5577	trnsaes</string>	6
29543	trobat	5
16305	trop	7
29315	troppo	7
11731	trouv.	13
16102	trouve</string>	10
29411	trovare	4
29281	trovato</string>	8
10572	trsorerie</string>	7
502	true	361
38975	true")	4
50161	true)	9
49361	true,a	5
47112	true,all	5
46100	true,calls	4
46982	true,isInTouchMode()	4
37205	true,it	5
48507	true,no	4
48425	true,only	4
46614	true,otherwise	4
35609	true,then	3
47668	true,this	4
37372	true.	16
49191	true.</p>	5
60170	true</p>	3
34262	truely	8
45366	truly	8
39230	truncated	4
5843	trx	37
33443	trx-action	10
26952	trx.setAmount(trx.getAmount().negate())	4
26958	trx.setType(TransactionType.CREDIT)	4
26856	trx.setType(TransactionType.DEBIT)	4
31236	trxCurrency	16
36399	trxCurrency){	12
31222	trxCurrency.getDefaultFractionDigits()	11
5750	trxDate	22
5521	trxType	14
24144	trxUID	13
31090	trxn	7
19299	trxn")	20
31165	trxnAdapter	28
13595	trxnAdapter.close()	19
56827	trxnAdapter.deleteAllTransactions()	5
24803	trxnAdapter.getAccountUID(dstAccountId)	5
51119	trxnAdapter.getAllTransactionsForAccount(DUMMY_ACCOUNT_UID)	7
54766	trxnAdapter.getTransactionsCount(DUMMY_ACCOUNT_UID)	5
34440	trxnAdapter.getTransactionsCount(trxnAdapter.getAccountID(DUMMY_ACCOUNT_UID))	9
24714	trxnAdapter.moveTransaction(trxnAdapter.getUID(trxnId),srcAccountUID,dstAccountUID)	11
24780	trxnAdapter.moveTranscation(trxnAdapter.getUID(trxnId),srcAccountUID,dstAccountUID)	6
59908	trxnAdapter.moveTranscation(trxnId,accountId)	2
35973	trxnAdapter.moveTranscation(trxnId,accountId,dstAccountId)	4
13155	trxnAdapter.moveTranscation(trxnId,dstAccountId)	5
24795	trxnId	18
25571	trxnTemplate	24
1680	try	384
47913	try.	4
60411	tryDeleteAccount(accoundId)	3
25493	tryDeleteAccount(long	33
25694	tryDeleteAccount(mSelectedItemId)	10
44506	tryShow()	4
28196	trying	22
19789	try{	31
21975	tu	10
22084	tu</string>	9
10985	tujuan	14
29664	tullaan	5
59340	tun?</string>	4
39003	tune	4
15795	tunecino</item>	14
62463	tunisino</item>	6
57378	tunnuskoodi,yrit	3
57307	tunnuskoodi</string>	3
57364	tunnuskoodin	3
33396	tuoi	2
15301	turca</item>	18
15646	turkmeno</item>	14
18199	turn	14
40837	turn,start	4
51828	turned	4
41935	turning	5
41181	turns	8
21986	tuto	10
47917	tutorial</a>.</p>	4
2574	tutte	66
16160	tutti	40
30166	tv	34
31378	tv.getText().toString()	3
30687	tv.setText(balance.formattedString(Locale.getDefault()))	9
49893	tv.setText(e.toString())	5
12406	tv.setTextColor(getResources().getColor(R.color.credit_green))	13
12809	tv.setTextColor(getResources().getColor(R.color.debit_red))	13
305	twice	36
7104	two	148
26931	two-letter	5
17746	tworzenia	17
17288	tworzy	9
17674	twrcw	23
7356	txconfigException)	17
7316	txconfigException.printStackTrace()	13
21973	ty	11
29536	ty,kter	3
29504	ty</string>	7
17356	tydzie</item>	14
17816	tygodni</item>	14
17809	tygodnie</item>	14
23026	tylko	6
17753	tym	19
17332	tymi	11
17537	typ	16
56147	typ</string>	2
1851	type	332
54669	type")	3
33313	type&gt	5
8382	type's	9
101	type)	59
18458	type){	15
23409	type,	10
31023	type,String	2
34311	type,boolean	3
41574	type,but	4
41151	type,create	4
32065	type,don't	3
8845	type,either	14
23486	type,optional	4
55166	type,rather	5
29170	type,so	9
24019	type,then	3
32176	type,will	3
40520	type-specific	6
4135	type.	62
13011	type.appendChild(doc.createTextNode(mType.toString()))	13
31150	type.name(),currencyCode	2
32099	type</p>	4
16588	type</string>	11
37175	type="dimen"	5
7498	type="frame"/>	8
7886	type="frame">	8
8332	type="gdate">	8
8153	type="guid">042ff745a80e94e6237fb0549f6d32ae</trn:id>	3
7865	type="guid">0469e915a22ba7846aca0e69f9f9b683</act:id>	3
8019	type="guid">0469e915a22ba7846aca0e69f9f9b683</split:account>	3
7918	type="guid">04e2b1077b5f92b017dcc96e7730f4f7</trn:id>	4
32308	type="guid">2da76df09056540bb3a37e4a04547d82</sx:templ-acct>	9
7955	type="guid">2e9b02b5ed6fb07c7d4536bb8a03599e</act:id>	4
7520	type="guid">2e9b02b5ed6fb07c7d4536bb8a03599e</split:account>	4
8590	type="guid">2e9b02b5ed6fb07c7d4536bb8a03599e</sx:templ-acct>	4
8491	type="guid">308ade8cf0be2b0b05c5eec3114a65fa</act:id>	8
8267	type="guid">308ade8cf0be2b0b05c5eec3114a65fa</act:parent>	8
7466	type="guid">3f44d61cb1afd201e8ea5a54ec4fbbff</act:id>	8
8098	type="guid">3f44d61cb1afd201e8ea5a54ec4fbbff</act:parent>	8
8561	type="guid">4930f412665a705eedba39789b6c3a35</split:id>	3
7752	type="guid">4ee126eb8128a194bdce64ac793ad917</split:id>	4
7941	type="guid">57e2be6ca6b568f8f7c9b2e455e1e21f</split:id>	4
7835	type="guid">61d4d604bc00a59cabff4e8875d00bee</split:id>	3
7625	type="guid">6a7cf8267314992bdddcee56d71a3908</act:id>	8
7924	type="guid">6a7cf8267314992bdddcee56d71a3908</slot:value>	4
8516	type="guid">6a7cf8267314992bdddcee56d71a3908</split:account>	8
8509	type="guid">8622e90f9ba655d4170d24fcfd55504f</price:id>	3
8534	type="guid">8834488bbc36d9431f8c1fa6a23c4b43</split:id>	4
8325	type="guid">88bbbbac7689a8657b04427f8117a783</split:id>	3
7633	type="guid">9535efccc96817a81e963dd495b1203f</act:id>	3
8651	type="guid">9b607f63aecb1a175556676904432365</act:id>	8
8240	type="guid">9b607f63aecb1a175556676904432365</act:parent>	8
7899	type="guid">9def659b35e85b09fe2bfade35053487</sx:id>	4
7443	type="guid">ad2cbc774fc4e71885d17e6932448e8e</split:id>	3
8147	type="guid">b33c8a6160494417558fd143731fc26a</trn:id>	3
8458	type="guid">b645bef06d0844aece6424ceeec03983</trn:id>	4
8079	type="guid">b97cd9bbaa17f181d0a5b39b260dabda</split:id>	3
7376	type="guid">ba516a06fb7c7a0506365c7e28e17532</act:id>	4
7477	type="guid">c50cce06e2bf9085730821c82d0b36ca</split:id>	3
8575	type="guid">d3d90433396f0ca44c337adb0f565c74</act:id>	4
7433	type="guid">d3d90433396f0ca44c337adb0f565c74</act:parent>	4
8490	type="guid">dae686a1636addc0dae1ae670701aa4a</act:id>	8
7866	type="guid">dae686a1636addc0dae1ae670701aa4a</slot:value>	4
7437	type="guid">dae686a1636addc0dae1ae670701aa4a</split:account>	8
7558	type="guid">ded49386f8ea319ccaee043ba062b3e1</trn:id>	3
8488	type="guid">e0dd885065bfe3c9ef63552fe84c6d23</split:id>	3
7671	type="guid">e6b31cde6324bbf0bec4182628b6d132</act:id>	4
8205	type="guid">ee139a5658a0d37507dc26284798e347</act:id>	3
8257	type="guid">ee139a5658a0d37507dc26284798e347</split:account>	3
7861	type="guid">f66794ef262aac3ae085ecc3030f2769</split:id>	4
7846	type="guid">fb0911dd508266db9446bc605edad3e4</book:id>	8
37114	type="id"	4
8218	type="numeric">0/1</slot:value>	3
7824	type="numeric">20/1</slot:value>	3
8643	type="string">20.00</slot:value>	3
8334	type="string">20</slot:value>	3
7785	type="string"></slot:value>	3
8557	type="string">Not	8
7786	type="string">true</slot:value>	8
13821	typeButton	4
13186	typeButton)	4
24270	typeName	13
20651	typeNode	11
20679	typeNode.appendChild(doc.createTextNode(mAccountType.name()))	9
35755	typeNode.appendChild(doc.createTextNode(transactionType.toString()))	2
6436	typePref	28
19444	typeString	15
29109	typeToggleButton	18
31970	typeToggleButton){	8
31760	typeToggleButton,SplitViewHolder	5
54744	typeToggleButton.getText().toString()	6
29039	typeToogleButton	4
41405	typeVariant	4
41447	typeVariants	4
41347	typeVariants)	4
41450	typeVariants[0]	4
41435	typeVariants[]	4
41291	typed	9
124	types	128
18147	types")	11
41855	types,by	4
41797	types,or	4
48648	types,see	4
1266	types.	28
41144	types.</p>	6
35602	types</p>	4
7879	types\n	37
38034	typical	4
2860	typically	48
46090	typing	12
17582	typow	16
55056	tz	5
59133	tz.getDisplayName(false,TimeZone.SHORT,Locale.getDefault())	3
55133	tz.getRawOffset()	4
17222	u	48
16561	u.	3
11250	uang	7
22697	uang</string>	7
29631	uang</string>-	1
56062	ubicacin	2
15517	ugand&#233	10
15788	ugands</item>	9
25806	ugyldig</string>	6
38562	uiOptions	13
38518	uiOptions)	9
37839	uiOptions,int	9
40320	uiOptions:	5
1058	uid	190
33450	uid&gt	5
11883	uid)	48
3596	uid){	109
31087	uid){-	1
31227	uid,	9
21067	uid,@NonNull	5
20851	uid,DatabaseSchema.AccountEntry.COLUMN_HIDDEN,isHidden)	3
21102	uid,String	3
1927	uid:	6
29756	uidList	7
29829	uidList.add(account.getUID())	9
31784	uidToTagMap	4
31984	uidToTagMap.entrySet())	4
31654	uidToTagMap.put(uid,tag)	4
51392	uidsToBeDeleted	4
51514	uidsToBeDeleted)	4
51524	uidsToBeDeleted.add(cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_UID)))	4
17196	uit	13
17102	uitgave	5
26211	uitgavebeheerstoepassing	13
26313	uitgaven	13
17027	uitgeschakeld</string>	5
17189	uitschakelen</string>	3
17076	uitsluitend	16
16841	uitwisselen,bespreken	11
55761	uivatelsk	2
15246	uke</item>	17
22687	ukuran</string>	7
10875	ulang	5
25979	ulepsze</string>	5
51929	ulike	7
21983	uloen	10
29381	ultimi	2
17469	ulubionych	12
5771	um	140
4597	uma	96
59498	umas	11
17277	umoliwiajce	18
10658	umum</string>	7
1606	un	155
40602	un-done	4
16417	un\'applicazione	43
55671	un\'opzione	2
2466	una	128
39941	unable	4
60259	unallowed	3
3031	unas	9
35830	unassigned	6
8849	unauthorized)	12
51421	unauthorized.printStackTrace()	4
34995	unbegrenzt</string>	3
6734	unbound	17
37956	unchanged.	12
48332	uncheck	4
18417	uncheckAllItems()	14
6677	unchecked	13
48555	unchecked.	4
4367	und	56
40887	undefined,but	4
16	under	401
2587	under-konto</item>	42
2975	under-kontoer</item>	42
55985	underkonto</item>	2
15285	underkontoer.	11
15234	underkontoer</string>	20
7519	underkontoer\n	6
56022	underkonton.	2
56313	underkonton</item>	2
56282	underkonton</string>	2
40965	underlying	7
21798	underordnede	6
35287	underscore	6
42228	understood	5
6502	undone!	117
27093	undone!")	3
10445	une	77
24352	unexported	24
32259	unfinished	7
28105	ungltig</string>	5
36492	unicode	9
62427	unidades	6
56990	unified	3
40367	uninitialized	4
435	unique	166
49429	uniqueShareRecords	4
48855	uniqueShareRecords.add(historicalRecord)	4
49176	uniqueShareRecords.size())	4
63489	uniquely	4
55351	unit	22
60950	unitname*	3
61626	unitname=""	3
61408	unitname="B.H.	3
61607	unitname="Pa'anga"	3
61481	unitname="SDR"	3
61573	unitname="TEST"	3
61198	unitname="UDI"	3
61250	unitname="UF"	3
61638	unitname="UI"	3
61416	unitname="UVR"	3
61204	unitname="afghani"	3
60740	unitname="ariary"	3
60882	unitname="austral"	3
61698	unitname="baht"	3
60880	unitname="balboa"	3
60971	unitname="birr"	3
55259	unitname="bitcoin"	2
61623	unitname="bolivar"	3
61267	unitname="boliviano"	3
60934	unitname="cedi"	3
60775	unitname="colon"	5
60827	unitname="cordoba"	3
61243	unitname="cruzeiro"	3
61298	unitname="dalasi"	3
61186	unitname="denar"	3
61229	unitname="deutschemark"	3
61260	unitname="dinar"	5
61042	unitname="dirham"	4
61624	unitname="dobra"	3
61000	unitname="dollar"	5
60701	unitname="drachma"	3
61089	unitname="dram"	3
60862	unitname="escudo"	4
60800	unitname="euro"	4
60761	unitname="florin"	3
61184	unitname="forint"	3
61197	unitname="franc"	5
60877	unitname="frang"	3
60710	unitname="gourde"	3
61284	unitname="guarani"	3
61183	unitname="guilder"	5
61581	unitname="hryvnia"	3
61146	unitname="kina"	3
60938	unitname="kip"	3
61085	unitname="koruna"	5
61379	unitname="krona"	4
60725	unitname="krone"	3
61226	unitname="kroon"	3
61102	unitname="kuna"	3
61037	unitname="kwacha"	4
61304	unitname="kwanza"	3
60823	unitname="kyat"	3
60832	unitname="lari"	3
60861	unitname="lats"	3
61315	unitname="lek"	3
61051	unitname="lempira"	3
61466	unitname="leone"	3
61165	unitname="leu"	3
61087	unitname="lev"	3
61534	unitname="lilangeni"	3
61142	unitname="lira"	4
60924	unitname="litas"	3
61114	unitname="loti"	3
60742	unitname="manat"	5
61361	unitname="markka"	3
60774	unitname="metical"	3
61111	unitname="mvdol"	3
61356	unitname="naira"	3
60796	unitname="nakfa"	3
61362	unitname="new	4
61501	unitname="ng"	3
61398	unitname="ngultrum"	3
60690	unitname="nuevo	3
60745	unitname="ouguiya"	3
61515	unitname="ounce"	3
61055	unitname="pataca"	3
61177	unitname="peseta"	4
61274	unitname="peso"	5
60907	unitname="pound"	5
60731	unitname="pula"	3
61365	unitname="punt"	3
61380	unitname="quetzal"	3
61600	unitname="rand"	3
61015	unitname="reajustado	3
60977	unitname="real"	3
60868	unitname="renminbi"	3
61285	unitname="rial"	3
61331	unitname="riel"	3
60866	unitname="ringgit"	3
60944	unitname="riyal"	4
60999	unitname="rouble"	3
57953	unitname="ruble"	8
61336	unitname="rufiyaa"	3
60836	unitname="rupee"	3
60885	unitname="rupiah"	3
60752	unitname="shilling"	5
60848	unitname="som"	4
61560	unitname="somoni"	3
60847	unitname="sucre"	3
60764	unitname="taka"	3
61695	unitname="tala"	3
60747	unitname="tenge"	3
61596	unitname="tolar"	3
60856	unitname="tugrik"	3
61571	unitname="vatu"	3
60927	unitname="won"	3
61220	unitname="yen"	3
60979	unitname="zloty"	3
2049	units	15
52617	unixBillennium	5
52455	unixBillenniumTimestamp	5
52557	unixBillenniumUtcString	5
52467	unixBillenniumUtcStringAfterSubtract	2
52437	unixBillenniumWithMillisecondsUtcString	5
3729	unknown	12
7638	unknown,it	2
46671	unknown.	4
48577	unknownTagName	4
27336	unless	30
54239	unlike	6
24050	unlocking	3
62356	unnecessary	5
48003	unregisterDataSetObserver(DataSetObserver	4
38025	unregisterImplementation(Class<?	4
44228	unrelated	4
36040	unreliable.	6
62983	unresolved	5
35693	unresolved.	7
59258	uns	4
39042	unselect	4
38945	unselected	4
52017	unsuccessful	12
25460	unsuccessful,the	7
3720	unsupported	9
63873	unsure	2
59947	unsure,specify	3
44240	unsure,use	4
22297	untersttzt	8
4737	unterwegs,die	25
508	until	93
54357	untouched	2
11052	untuk	17
10268	untum	3
43183	unused	9
40870	unusual	4
42485	unwrap()	13
1605	up	182
41690	up,and	4
43620	up,nothing	4
20973	up,recreating	6
40797	up,start	4
62296	up-to-date	3
41158	up.	8
47967	up...	4
37054	up</string>	4
13712	up?")	46
46193	upHeight	4
45855	upHeight)	4
46106	upLp	4
45806	upLp.bottomMargin	4
46429	upLp.leftMargin	4
46138	upLp.rightMargin	4
46102	upLp.topMargin	4
45839	upOffset	4
45840	upTop	4
46233	upWidth	4
13682	upda	10
538	update	170
47930	update()	4
18976	update,in	13
30728	update,will	19
41726	update.	12
13055	update:	5
24361	updateAccount(long	15
31335	updateAccount(rowId,AccountEntry.COLUMN_FULL_NAME,getFullyQualifiedAccountName(rowId))	11
26651	updateAccount(rowId,DatabaseHelper.KEY_FULL_NAME,getFullyQualifiedAccountName(rowId))	6
2105	updateAccountTypeOnFragments()	6
859	updateAccountTypeOnFragments(){	3
27886	updateAccounts(String	4
32657	updateActiveBookName()	3
32704	updateActiveBookName(){	8
24465	updateAllAccounts(@NonNull	4
24141	updateAllAccounts(String	9
52389	updateAllWidgets(Context	14
9620	updateAllWidgets(final	8
49412	updateAppearance()	5
21464	updateBottomBar()	6
43953	updateChildrenOnMenuViews	4
43324	updateChildrenOnMenuViews)	4
49674	updateCloseButton()	6
1097	updateDateRange(long	6
1052	updateDateRangeOnFragment()	18
1677	updateDateRangeOnFragment(){	9
46707	updateDrawableBounds(getWidth(),getHeight())	4
47132	updateDrawableBounds(int	4
47096	updateDrawableBounds(w,h)	4
46912	updateDrawableState()	4
46011	updateEmptyStatus((adapter	4
46128	updateEmptyStatus(boolean	4
46175	updateEmptyStatus(empty)	4
49229	updateFocusedState()	9
1688	updateGroupingOnFragments()	3
1108	updateGroupingOnFragments(){	3
39633	updateInt(featureId,value,false)	4
39677	updateInt(int	4
13573	updateMe	5
43131	updateMenuView(boolean	16
43686	updateMenuView(true)	4
10979	updateMetho	5
54815	updateMethod	4
14569	updateMethod)	7
52252	updateMethod){	11
62988	updateMethod.name())	4
19701	updateNavigationSelection()	39
39954	updateProgressBars(int	4
39992	updateProgressBars(value)	4
49504	updateQueryHint()	9
20292	updateRecord(@NonNull	11
24443	updateRecord(AccountEntry.TABLE_NAME,accountId,columnKey,newValue)	8
20535	updateRecord(String	12
24588	updateRecord(TransactionEntry.TABLE_NAME,getID(transactionUID),columnKey,newValue)	10
20512	updateRecord(TransactionEntry.TABLE_NAME,getTransactionID(split.getTransactionUID()),	9
21120	updateRecord(TransactionEntry.TABLE_NAME,transactionId,	13
36488	updateRecord(accountUID,AccountEntry.COLUMN_FULL_NAME,getFullyQualifiedAccountName(accountUID))	12
62610	updateRecords(CommonColumns.COLUMN_UID	2
52331	updateRecords(String	4
14200	updateRecurrenceAttributes(ScheduledAction	22
32221	updateReportTypeSpinner(ReportType	6
32155	updateReportTypeSpinner(reportFragment.getReportType(),getString(reportFragment.getTitle()))	6
49077	updateSearchAutoComplete()	10
50375	updateSpinnerState(Cursor	5
50260	updateSpinnerState(getCursor())	5
19708	updateSubAccountsView()	12
50045	updateSubmitArea()	6
50080	updateSubmitButton(boolean	5
50034	updateSubmitButton(hasText)	6
47645	updateTab(int	4
42960	updateTextButtonVisibility()	4
13693	updateTotal()	12
31502	updateTotal(){	25
24460	updateTransaction(@NonNull	4
20322	updateTransaction(ContentValues	15
24501	updateTransaction(String	10
18435	updateTransferAccountsList()	39
3648	updateTransferAccountsList(){	55
31561	updateTransferAccountsList(Spinner	19
13835	updateTransferAccountsList(accountsSpinner)	21
49625	updateViewsVisibility(false)	9
50383	updateViewsVisibility(final	5
49467	updateViewsVisibility(iconified)	5
49434	updateViewsVisibility(isIconified())	10
49105	updateViewsVisibility(mIconifiedByDefault)	5
50279	updateViewsVisibility(true)	5
49784	updateVoiceButton(!hasText)	6
50559	updateVoiceButton(boolean	5
56915	updateWidget(Configuration.this,mAppWidgetId,mAccountsSpinner.getSelectedItemId())	2
13663	updateWidget(Context	41
9252	updateWidget(WidgetConfigurationActivity.this,mAppWidgetId)	3
63433	updateWidget(WidgetConfigurationActivity.this,mAppWidgetId,accountId)	5
9502	updateWidget(WidgetConfigurationActivity.this,mAppWidgetId,accountUID)	10
51024	updateWidget(WidgetConfigurationActivity.this,mAppWidgetId,accountUID,bookUID)	3
9129	updateWidget(WidgetConfigurationActivity.this,mAppWidgetId,accountUID,bookUID,hideAccountBalance)	4
9708	updateWidget(WidgetConfigurationActivity.this,mAppWidgetId,accountUID,bookUID,shouldDisplayBalance)	2
9225	updateWidget(WidgetConfigurationActivity.this,mAppWidgetId,accountUID,shouldDisplayBalance)	3
63579	updateWidget(WidgetConfigurationActivity.this,mAppWidgetId,mAccountsSpinner.getSelectedItemId())	2
9012	updateWidget(context,widgetId)	3
54836	updateWidget(context,widgetId,accId)	3
63604	updateWidget(context,widgetId,accountId)	6
9398	updateWidget(context,widgetId,accountUID)	12
9397	updateWidget(context,widgetId,accountUID,	4
51058	updateWidget(context,widgetId,accountUID,BooksDbAdapter.getInstance().getActiveBookUID())	3
9722	updateWidget(context,widgetId,accountUID,shouldDisplayBalance)	3
8117	updateWidget(final	17
34027	update_time_trigger	5
8725	updated	77
48075	updated,false	4
20193	updated,we	16
54537	updated.	10
3929	updated."	6
52630	updatedLastExportTime	2
59804	updated_at	1
31495	updates	26
41526	updates,but	8
18937	updating	36
53088	updating,first	5
23705	upgrade	32
35528	upgrade",e)	4
53219	upgrade.	6
31866	upgradeDbToVersion10(SQLiteDatabase	12
31444	upgradeDbToVersion10(SQLiteDatabase)	12
31641	upgradeDbToVersion11(SQLiteDatabase	15
23212	upgradeDbToVersion12(SQLiteDatabase	15
7529	upgradeDbToVersion13(SQLiteDatabase	32
14491	upgradeDbToVersion14(SQLiteDatabase	9
55225	upgradeDbToVersion15(SQLiteDatabase	4
61737	upgradeDbToVersion2(SQLiteDatabase	3
61735	upgradeDbToVersion3(SQLiteDatabase	3
61802	upgradeDbToVersion4(SQLiteDatabase	3
61823	upgradeDbToVersion5(SQLiteDatabase	3
33781	upgradeDbToVersion6(SQLiteDatabase	9
59441	upgradeDbToVersion6(db)	5
14256	upgradeDbToVersion7(SQLiteDatabase	18
59459	upgradeDbToVersion7(db)	5
14602	upgradeDbToVersion8(SQLiteDatabase	51
59466	upgradeDbToVersion8(db)	5
542	upgradeDbToVersion9(SQLiteDatabase	44
31136	upgradeDbToVersion<#>,e.g.	12
57653	upgradeToVersion%d(SQLiteDatabase)	3
59394	upgradeToVersion7(SQLiteDatabase	3
59444	upgradeToVersion7(db)	3
14409	upgraded	36
53208	upgrades	9
35522	upgrades.	8
33778	upgrading	18
9766	uploaded	2
40940	upon	9
40696	upon.	4
43379	upper	20
10965	uppstod	10
55503	upravovat	2
29516	upravovat</string>	5
38692	ur	5
20613	uri	22
50876	uri)	11
793	uri,	107
1361	uri,String	27
50769	uri,ex)	5
50796	uri.getAuthority()	5
50647	uri.getPathSegments()	5
51022	uri.getScheme()	5
50119	uriBuilder	5
50572	uriBuilder.appendPath(SearchManager.SUGGEST_URI_PATH_QUERY)	5
50188	uriBuilder.appendPath(query)	5
50372	uriBuilder.appendQueryParameter(SearchManager.SUGGEST_PARAMETER_LIMIT,String.valueOf(limit))	5
50092	uriBuilder.build()	5
63380	uriString	6
2293	uris)	20
24965	uris[0].toString())	8
29876	url	16
50230	url)	5
37532	urls	5
56242	ursprungskonto</string>	2
62459	uruguai	6
62472	uruguaio</item>	6
15727	uruguayo	16
15486	uruguayo</item>	16
17309	urzdzeniu	12
24010	us	36
15373	usa	36
20789	usada	24
3990	usadas	28
3925	usadas</string>	31
20794	usado	27
48602	usage	4
6319	usar	36
12761	usare	18
27921	uscite	19
11690	usd	8
36423	usdCommodity	4
59487	usdSplit	4
1725	use	442
51029	use).	4
60602	use,copy,modify,merge,publish,distribute,sublicense,and/or	3
31332	use,multiple	2
63859	use,use	2
37117	use.	21
51525	use</string>	19
23315	useCompactTrnView	3
23199	useDoubleEntry	26
1838	useDoubleEntry)	26
46810	useLargestChildHorizontal()	5
47290	useLargestChildVertical()	5
38211	useLogo	4
38610	useLogo)	8
20208	useSgmlHeader	4
7278	useXmlHeader	24
25616	use\n	23
175	used	424
47878	used)	4
48218	used,and	4
21096	used,it	2
31077	used,then	24
62853	used,{@code	4
38849	used.	34
37083	used.-->	4
53653	used</p>	2
11102	usedAmount	4
2689	useful	29
26503	useful,	18
50851	useful,so	8
41696	useful.	8
1489	user	284
47884	user's	9
27307	user,and	5
6429	user,but	5
55376	user,use	3
35363	user-->	2
43906	user-friendly.	4
664	user-identifiable	156
56690	user-modification	9
48089	user-supplied	4
27460	user.	35
12962	user.<br/>	7
12538	user.<br>	4
26426	userCurrencyCode	6
61959	userInteraction	4
11881	username/password	52
27600	users	23
51891	uservoice	3
5544	uses	211
33727	uses.	9
989	using	234
17834	ustalimy	8
17564	ustawienia</string>	13
17657	ustawieniach	16
17579	ustawione</string>	11
62022	usual	3
20234	usually	43
1884	usuario<	47
11072	usuario</str	63
2346	usuario</string>	31
17361	usun	13
17702	usunicie</string>	13
17722	usuniciem	13
17872	usuniciu	13
17300	usunite	20
17672	usunite!!</string>	11
17438	usunite!</string>	13
17840	usunite.\n\nCzy	12
17663	usunite</string>	13
17297	usunito	9
2873	usurio	49
22922	usurio</string>	7
15259	ut	21
15280	utbedring	14
7505	utcString	17
52640	utcString)	5
52639	utcString.	5
22752	utente/password	6
22815	utente</string>	6
56377	utfrda	2
21349	utgiftsfrer	8
10716	utilis</string>	23
23412	utilisation	5
10791	utilise	23
5809	utiliser	30
11284	utiliss,importer	21
10914	utiliss,soit	5
41064	utility	12
22415	utilitza	7
22176	utilitzar	7
15437	utiliza	21
23061	utilizado	20
11202	utilizador!</string>	75
22945	utilizador/password	6
22988	utilizador</string>	6
22953	utilizao	6
15699	utilizar	16
48451	utilizes	4
16245	utilizzare	19
16112	utilizzati	31
22717	utilizzati</string>	9
56297	uttryck!</string>	2
21553	uttrykk!</string>	10
56185	utvecklarna.</string>	2
15210	utviklerene	14
21471	utviklerne.</string>	10
12672	utworzenia</string>	20
17506	utworzona	17
17436	utworzy	14
57294	uudelleen</string>	3
26307	uuid	10
26492	uuid.substring(0,22)	4
26454	uuid.substring(uuid.lastIndexOf("-"))	6
12524	uusi	12
17181	uw	7
17331	uytkownika	18
17280	uyty	15
12914	uywa	24
17647	uywany	9
15518	uzbeko</item>	16
3167	v	178
3686	v").append(packageInfo.versionName)	9
3404	v&#225	12
2056	v)	257
52733	v).getLayout()	8
57520	v).getText().toString())	4
18833	v){	26
2058	v,	96
50384	v,CharSequence	5
13764	v,Context	15
49729	v,Drawable	5
34935	v,MotionEvent	40
34908	v,boolean	30
1674	v,int	61
52940	v.	15
49995	v.cancelLongPress()	5
27420	v.findViewById(R.id.account_color_strip)	10
31213	v.findViewById(R.id.account_name)	3
60632	v.findViewById(R.id.account_recycler_view)	6
59911	v.findViewById(R.id.accounts_list_spinner)	3
34655	v.findViewById(R.id.btn_cancel)	20
59896	v.findViewById(R.id.btn_move)	3
23456	v.findViewById(R.id.btn_new_transaction)	24
3323	v.findViewById(R.id.btn_open_splits)	13
34574	v.findViewById(R.id.btn_save)	18
56710	v.findViewById(R.id.calculator_keyboard))	6
18321	v.findViewById(R.id.checkbox)	15
29223	v.findViewById(R.id.checkbox)).setChecked(false)	4
34600	v.findViewById(R.id.checkbox_export_all)	16
19747	v.findViewById(R.id.checkbox_parent_account)	8
34636	v.findViewById(R.id.checkbox_post_export_delete)	13
3674	v.findViewById(R.id.checkbox_save_template)	15
29023	v.findViewById(R.id.checkbox_transaction)	5
12847	v.findViewById(R.id.currency_symbol)	29
50373	v.findViewById(R.id.edit_query)	5
51345	v.findViewById(R.id.edit_text_account_name)	3
34627	v.findViewById(R.id.export_warning)	8
30143	v.findViewById(R.id.fab_create_account)	8
23862	v.findViewById(R.id.input_accounts_spinner)	8
51343	v.findViewById(R.id.input_currency_spinner)	3
24040	v.findViewById(R.id.input_date)	18
27706	v.findViewById(R.id.input_description)	18
3178	v.findViewById(R.id.input_double_entry_accounts_spinner)	26
2460	v.findViewById(R.id.input_recurrence)	23
18359	v.findViewById(R.id.input_recurring_transaction_spinner)	10
51321	v.findViewById(R.id.input_split_accounts_spinner)	3
24029	v.findViewById(R.id.input_time)	22
12802	v.findViewById(R.id.input_transaction_amount)	29
27771	v.findViewById(R.id.input_transaction_name)	18
12701	v.findViewById(R.id.input_transaction_type)	32
31521	v.findViewById(R.id.input_transfer_account_spinner)	7
30669	v.findViewById(R.id.label_sum)	15
34567	v.findViewById(R.id.radio_ofx_format)	14
52109	v.findViewById(R.id.radio_qif_format)	11
51384	v.findViewById(R.id.radio_xml_format)	6
30440	v.findViewById(R.id.secondary_text)	18
34692	v.findViewById(R.id.spinner_export_destination)	19
23836	v.findViewById(R.id.vertical_line).setVisibility(View.GONE)	12
50209	v.findViewById(android.R.id.icon1)	5
49941	v.findViewById(android.R.id.icon2)	5
49693	v.findViewById(android.R.id.text1)	5
50508	v.findViewById(android.R.id.text2)	5
43635	v.getId()	4
44007	v.getLayoutParams()	5
43677	v.getMeasuredHeight()	9
43190	v.getMeasuredWidth()	8
49746	v.getTag()	5
26853	v.getTag().toString())	3
45914	v.getTop()	4
44268	v.getViewTreeObserver()	4
43563	v.layout(l,t,l	4
43327	v.layout(l,t,r,b)	4
43664	v.layout(startLeft,t,startLeft	4
42982	v.measure(querySpec,querySpec)	4
43470	v.restoreHierarchyState(viewStates)	4
43667	v.saveHierarchyState(viewStates)	4
29390	v.setBackgroundColor(getResources().getColor(R.color.abs__holo_blue_light))	12
29458	v.setBackgroundColor(getResources().getColor(android.R.color.transparent))	10
49915	v.setImageDrawable(drawable)	5
29242	v.setSelected(false)	10
29306	v.setSelected(true)	12
50132	v.setTag(new	5
50296	v.setText(text)	5
49897	v.setVisibility(View.GONE)	5
50407	v.setVisibility(View.VISIBLE)	5
49945	v.setVisibility(nullVisibility)	5
41106	v0)</code>,	8
10010	v2	2
5300	v2.0.	170
11697	v2.0</string>	31
25225	v2.3.3	15
46332	vCenter	4
57365	vahvistus.	3
60350	val	3
27718	val1	3
27717	val2	3
27805	val2)	3
56104	valda	2
16115	valeur	9
14919	valgene	19
8285	valget	29
15070	valgt	11
14790	valgt</string>	34
21952	valgte	10
3069	valid	162
60504	valid")	3
56713	valid,{@code	8
10670	valid.	3
62732	valid:	3
22521	valida!</string>	11
32573	validade	8
5029	validate	22
4352	validateEditTransactionFields(Transaction	42
28808	validateEditTransactionFields(mTransaction)	27
36513	validateImmutability()	10
10401	validateImmutability(){	6
6144	validateNewTransactionFields()	20
4230	validateNewTransactionFields(){	21
28970	validateTimeInput(long	6
28754	validateTimeInput(mTransactionTimeMillis)	6
24551	validateTimeInput(transaction.getTimeMillis())	5
6296	validateTransactionListDisplayed()	51
28866	validateTransactionListDisplayed(){	27
28709	validates	7
2003	validating	16
27617	validation	4
19344	validations	6
16327	valide	11
11073	valide</string>	4
11420	valides:	3
22526	validi	8
64034	validi:	2
64035	validi</string>	2
64029	valido</string>	2
22570	valittuna</string>	9
4181	valor	63
22853	valore	6
54930	valores	8
54944	valores</string>	7
2024	value	369
60426	value")	3
48362	value".	4
39537	value(s)	4
31564	value)	40
5578	value){	19
31563	value,	11
51614	value,@NonNull	4
32189	value,String	10
36041	value,a	4
39502	value,boolean	4
21249	value,do	6
41265	value,given	4
4712	value,in	12
41302	value,it	4
42047	value,the	4
42206	value,then	4
51041	value,this	5
41694	value,values	4
27786	value.	52
41294	value.</p>	11
48623	value.data	4
4308	value.equals("DEBIT")	11
41544	value.getClass()	4
61815	value.isNegative()	3
4638	value.multiply(denom)	7
4703	value.replaceAll("\\.",",")	4
48702	value.string.toString()	5
4787	value.stripTrailingZeros().toPlainString()	7
48463	value.type	5
31781	value/quantity	7
19828	value</p>	7
37461	value="0"	4
37543	value="0x1"	4
37332	value="0x10"	4
37653	value="0x2"	4
37395	value="0x20"	4
37415	value="0x4"	4
37160	value="0x8"	4
37669	value="1"	4
37041	value="2"	4
626	value?	6
31834	valueAmount	14
63035	valueCurrency	4
33484	valueCurrencyCode	10
33420	valueCurrencyCode&gt	5
12617	valueDenom	38
33472	valueDenom&gt	5
23452	valueDenom)	10
34065	valueFractionDigits	5
20928	valueNode	9
20284	valueNode.appendChild(doc.createTextNode(GncXmlHelper.formatMoney(this)))	9
13031	valueNum	30
33456	valueNum&gt	5
23579	valueNum)	9
41267	valueType	5
41395	valueType)	5
32156	valueType){	4
4678	values	192
41503	values)	9
41477	values).	4
41507	values,	4
40402	values,given	8
41839	values,per	4
41536	values,such	4
42196	values,the	4
41842	values,which	4
40459	values,with	8
18330	values.	61
57542	values.<br>	3
7088	values.add(new	37
33235	values.get(i	3
33260	values.get(i).getVal()	3
33247	values.get(i).setVal(values.get(i	3
34294	values.get(j	2
34298	values.get(j).getVal())	2
34257	values.get(j).setVal(tmp1)	2
41591	values.length	9
57223	values.put(DatabaseSchema.TransactionEntry.COLUMN_MODIFIED_AT,	3
33154	values.size()	3
26667	values.size())	5
47254	values:	6
41426	valuesHolder	8
41735	valuesHolder.getAnimatedValue()	4
41613	valuesHolder.getPropertyName()	4
42093	valuesHolder.setFloatValues(values)	4
42151	valuesHolder.setIntValues(values)	4
42201	valuesHolder.setObjectValues(values)	4
41529	valuesHolder.setProperty(property)	4
41255	valuesHolder.setPropertyName(propertyName)	4
41626	values[0].getClass()	4
41524	values[0].getType()	4
41681	values[i]	8
51157	valure	10
16230	valuta	40
15276	valuta</item>	22
14731	valuta</string>	48
16651	valuta\n	6
21720	valutakurs	8
10878	valutakurs</string>	14
21796	valutakursen	6
55971	valutasupport\n	2
25893	valute	5
3123	vamos	9
16757	van	63
56194	vanlig	2
16805	vanuit	7
56016	vara	2
41433	varargs	4
53236	varchar(1)	8
401	varchar(255)	96
19787	varchar(255)"	24
57630	varchar(255)")	5
26229	varchar(255))	2
18010	varchar(255),"	77
26178	variable	14
41948	variable,which	4
13330	variables	13
38754	variables.	5
8710	variables:	8
25082	variant	10
25198	variant.outputs.each	3
41597	variants	6
27914	varie	5
12340	varies	4
41956	varies,depending	4
3349	various	47
32581	vars	8
12591	vary	10
47691	varying	4
29527	vce	5
22205	vchoz	5
22089	vchozm	7
22338	ve	8
22774	vecchio	8
11608	veces</string>	23
22124	vech	9
55737	vechn	5
22236	vechny	10
56065	vecka</item>	2
7406	ved	58
22732	vedere	8
64048	vederne	2
16941	veel	16
17026	veelgebruikte	17
20290	vel	15
20245	vel</string>	13
15103	velge	44
21521	vellykket</string>	17
28018	velocemente\n	5
22572	vengono	9
2639	ver	55
16614	verbeteringen\n	6
26605	verder	6
15257	verdi	11
21791	verdi</string>	6
21848	verdien	10
17048	vereist</string>	5
5746	verfgbar,sodass	19
56174	verfra	2
56308	verfring	2
55914	verfringskonto	2
56122	verfringskonto</string>	2
16374	verificato	23
14846	verifisering.	11
63780	verify	2
46979	verifyDrawable(Drawable	4
17148	vermogen</string>	14
17101	verplaatsen</string>	21
16770	verplaatst	21
16394	verranno	42
17175	verrichting	13
10861	verrouillage\n	9
1113	vers	71
12178	vers&#8230	8
11040	vers:	5
11951	vers:</string>	17
34004	versa</p>	3
5927	verschieben</string>	28
25679	verschiedene	5
5258	verschoben	22
11021	versi	5
12536	versi&#243	5
16919	versie</string>	39
1147	version	160
53301	version,12	2
34810	version,14	5
18491	version.	57
63226	version.+	1
7799	version</string>	104
8612	version="1">	3
1035	version="1.0"	271
8628	version="1.0.0">	4
7394	version="2.0.0">	8
2759	versionBuild	134
3791	versionCode	32
2768	versionMajor	135
2708	versionMinor	135
3957	versionName	72
13114	versionName.indexOf('.')	6
2650	versionPatch	134
16465	versione	43
7194	versioning.	8
9003	versions	34
16420	verso	37
62515	versuchen	5
37421	vertical	8
51889	vertical){	6
60334	vertical.getPosition(xy[1],view.getHeight())	3
45703	verticalMargin	4
44983	verticalMargin)	4
47809	verticalOffset	4
45139	verticalPadding	4
48074	vertically	4
37373	vertically.	4
26254	vervangen,verwijder	6
25673	verwalten&#8230	8
25675	verwalten</string>	8
6117	verwenden</string>	28
5017	verwendet	16
5825	verwendete	11
4159	verwendeten	22
16924	verwijderd	38
16920	verwijderd!</string>	13
17173	verwijderd</string>	21
17037	verwijderen)	7
17035	verwijderen.	9
16870	verwijderen</string>	15
17030	verwijderen?	13
16552	verwijderen?</string>	15
1115	very	40
16866	verzenden	12
20221	ves	11
29539	veure	6
15304	vez	29
15694	vez</string>	21
11536	vezes</string>	19
45008	vgravity	4
6541	via	52
26258	via&#8230	9
31170	vibrate	25
34120	vice	3
55920	vid	3
38810	video	4
15647	vietnamita</item>	14
1955	view	381
39444	view")	4
46502	view's	9
1970	view)	183
11130	view).setCompoundDrawablesWithIntrinsicBounds(0,0,0,0)	5
46538	view).setHorizontallyScrolling(true)	4
9571	view){	56
2755	view,	175
50050	view,CharSequence	5
3156	view,Context	43
6908	view,Cursor	8
50466	view,InputMethodManager	5
37955	view,LayoutParams	12
38215	view,Menu	9
61970	view,Split	3
2961	view,String	6
38451	view,ViewGroup.LayoutParams	14
35150	view,and	10
39178	view,android.view.Menu	4
49436	view,boolean	9
43821	view,but	4
21710	view,combining	12
45791	view,display	4
48100	view,either	4
44428	view,false	4
3335	view,final	7
8958	view,hence	6
49139	view,if	4
2093	view,int	143
49556	view,listing	4
46211	view,make	4
49832	view,makes	5
46305	view,or	4
32996	view,then	7
44888	view,we	4
45844	view,where	4
695	view.	50
63975	view.findViewById(R.id.account_balance)	3
21835	view.findViewById(R.id.account_balance))	6
33063	view.findViewById(R.id.accounts_options)	8
33440	view.findViewById(R.id.btn_add_split)	7
33088	view.findViewById(R.id.btn_cancel)	17
57428	view.findViewById(R.id.btn_remove_item).setVisibility(View.GONE)	3
24838	view.findViewById(R.id.btn_remove_split).setVisibility(View.GONE)	15
33193	view.findViewById(R.id.btn_save)	17
18808	view.findViewById(R.id.checkbox)	22
5148	view.findViewById(R.id.checkbox_default_transfer_account)	10
6186	view.findViewById(R.id.checkbox_parent_account)	19
26662	view.findViewById(R.id.checkbox_placeholder_account)	8
28735	view.findViewById(R.id.checkbox_transaction)	6
27294	view.findViewById(R.id.color_picker)	3
7226	view.findViewById(R.id.date_section_header)	19
2594	view.findViewById(R.id.delete_book)	7
28684	view.findViewById(R.id.edit_text_account_name)	10
30209	view.findViewById(R.id.fab_create_transaction)	8
33444	view.findViewById(R.id.imbalance_textview)	7
24583	view.findViewById(R.id.input_account_name)	20
26728	view.findViewById(R.id.input_account_type_spinner)	19
13675	view.findViewById(R.id.input_accounts_spinner).setEnabled(false)	14
27330	view.findViewById(R.id.input_color_picker)	6
24216	view.findViewById(R.id.input_currency_spinner)	28
4130	view.findViewById(R.id.input_default_transfer_account)	10
5151	view.findViewById(R.id.input_parent_account)	23
27166	view.findViewById(R.id.label_default_transfer_account).setVisibility(visibility)	5
2555	view.findViewById(R.id.label_last_sync)	17
24275	view.findViewById(R.id.label_parent_account).setVisibility(View.GONE)	16
24594	view.findViewById(R.id.label_parent_account).setVisibility(View.VISIBLE)	3
29123	view.findViewById(R.id.last_sync_time)	10
27394	view.findViewById(R.id.layout_default_transfer_account).setVisibility(visibility)	5
24599	view.findViewById(R.id.layout_parent_account).setVisibility(View.GONE)	18
24102	view.findViewById(R.id.layout_parent_account).setVisibility(View.VISIBLE)	3
2267	view.findViewById(R.id.options_menu)	14
63119	view.findViewById(R.id.owncloud_dir)	3
63144	view.findViewById(R.id.owncloud_dir_invalid)	3
63084	view.findViewById(R.id.owncloud_hostname)	3
63106	view.findViewById(R.id.owncloud_hostname_invalid)	3
63085	view.findViewById(R.id.owncloud_password)	3
63125	view.findViewById(R.id.owncloud_username)	3
63130	view.findViewById(R.id.owncloud_username_invalid)	3
54716	view.findViewById(R.id.primary_text)	10
33717	view.findViewById(R.id.right_text)	8
54643	view.findViewById(R.id.right_text).setVisibility(View.GONE)	7
18712	view.findViewById(R.id.secondary_text)	53
61980	view.findViewById(R.id.split_account_name)	4
33350	view.findViewById(R.id.split_list_layout)	7
34577	view.findViewById(R.id.textinputlayout)	8
7214	view.findViewById(R.id.transaction_amount)	24
31423	view.findViewById(R.id.transaction_name)	2
30360	view.findViewById(R.id.transaction_note)	6
33036	view.findViewById(R.id.transactions_options)	9
27416	view.findViewById(android.R.id.progress)	3
3463	view.findViewById(android.R.id.text1)	15
42563	view.getHeight()	11
51868	view.getHeight()/2	10
44521	view.getId()	4
46842	view.getLayoutParams()	4
51967	view.getLocationOnScreen(xy)	10
47014	view.getMeasuredHeight()	4
51884	view.getRight()	10
43098	view.getScrollX()	4
42790	view.getScrollY()	4
49676	view.getTag()	10
51991	view.getTop()	10
42582	view.getWidth()	4
51916	view.getWidth()*	7
42831	view.invalidate()	4
42825	view.scrollTo(value,view.getScrollY())	4
43203	view.scrollTo(view.getScrollY(),value)	4
46283	view.sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_CLICKED)	4
49145	view.setActivated(activated)	4
42782	view.setAnimation(this)	4
18804	view.setBackgroundColor(getResources().getColor(R.color.abs__holo_blue_light))	15
19009	view.setBackgroundColor(getResources().getColor(android.R.color.transparent))	15
44267	view.setId(mId)	4
46208	view.setLayoutParams(generateDefaultLayoutParams())	4
40107	view.setLayoutParams(layoutParams)	4
27222	view.setLayoutParams(params)	3
2405	view.setOnClickListener(new	8
27086	view.setTag(scheduledActionUID)	13
50366	view.setText(text)	5
54047	view.setVisibility(View.GONE)	2
38036	view:	9
53931	view</p>	5
11532	view</string>	53
53067	view?	2
24611	viewHolder	41
31896	viewHolder){	5
52409	viewHolder.accountsSpinner.getSelectedItemId()	2
53875	viewHolder.amountEditText.evaluate()	6
53751	viewHolder.amountEditText.getValue()	5
53737	viewHolder.bindViews(budgetAmount)	5
24770	viewHolder.getAmountValue().abs()	5
54069	viewHolder.removeItemBtn.setVisibility(View.GONE)	6
24877	viewHolder.splitAmountEditText.addTextChangedListener(this)	6
59191	viewHolder.splitAmountEditText.evaluate()	3
24683	viewHolder.splitAmountEditText.getValue()	20
24768	viewHolder.splitAmountEditText.removeTextChangedListener(this)	6
28949	viewId	9
13441	viewId){	20
13240	viewLength)	8
60379	viewPos	3
13923	viewPos,	5
60396	viewPos,int	3
43697	viewStates	4
49416	viewTreeObserver	5
49482	viewTreeObserver.removeGlobalOnLayoutListener(mOnGlobalLayoutListener)	4
64012	viewType	2
738	viewType)	32
52897	viewid	10
56574	viewid,	4
52860	viewid,int	10
27876	viewing	6
710	views	189
44452	views")	4
39781	views)	4
44181	views,expand	4
47752	views,this	4
33087	views.	35
46165	views.)	4
39602	views.add(child)	4
50477	views.mIconRefine.setOnClickListener(this)	5
49994	views.mIconRefine.setTag(views.mText1.getText())	5
50038	views.mIconRefine.setVisibility(View.GONE)	5
50305	views.mIconRefine.setVisibility(View.VISIBLE)	5
50458	views.mText1	5
49734	views.mText1.setMaxLines(1)	5
50016	views.mText1.setMaxLines(2)	5
50357	views.mText1.setSingleLine(false)	5
50493	views.mText1.setSingleLine(true)	5
54676	views.setOnClickPendingIntent(R.id.btn_new_transaction,null)	5
9679	views.setOnClickPendingIntent(R.id.btn_new_transaction,pendingIntent)	22
8824	views.setOnClickPendingIntent(R.id.btn_view_account,accountPendingIntent)	3
9371	views.setOnClickPendingIntent(R.id.widget_layout,accountPendingIntent)	18
54703	views.setOnClickPendingIntent(R.id.widget_layout,null)	5
51078	views.setOnClickPendingIntent(R.id.widget_layout,pendingIntent)	8
7570	views.setTextColor(R.id.transactions_summary,context.getResources().getColor(color))	23
19571	views.setTextViewText(R.id.account_name,account.getName())	17
54623	views.setTextViewText(R.id.account_name,context.getString(R.string.toast_account_deleted))	6
8361	views.setTextViewText(R.id.transactions_summary,	26
54653	views.setTextViewText(R.id.transactions_summary,"")	6
9798	views.setViewVisibility(R.id.btn_new_transaction,View.GONE)	3
9359	views.setViewVisibility(R.id.btn_view_account,View.GONE)	3
9348	views.setViewVisibility(R.id.transactions_summary,View.GONE)	4
47857	views:	4
18236	views\n	17
1172	vil	107
7385	vill	6
11238	vindo	25
43157	violations.	4
27390	violet	3
45020	vis	4
50186	visCollapsed	5
56145	visa	2
56453	visa.</string>	2
12837	visa</string>	13
21539	vise	8
15174	vise.</string>	24
12330	vise</string>	48
20924	visibilidade	18
19500	visibility	59
31817	visibility)	46
7252	visibilty	6
13183	visible	90
27412	visible)	57
45963	visible).	4
48007	visible,	8
52858	visible,and	15
44436	visible,call	4
48206	visible,else	4
39286	visible,false	4
49584	visible,then	5
39101	visible.	36
39105	visible:	8
62878	visible</p>	4
45061	visibleChildren	4
44955	visibleChildren++	4
43612	visibleItemCount	4
43554	visibleItemCount++	4
46586	visibleItemCount,	4
43294	visibleItems	10
42876	visibleItems.get(i)	10
43135	visibleItems.get(j)	4
42357	visibleItems.size()	10
7958	visning	9
28250	visning\n	4
22979	viso	10
22469	vista	19
18459	vistas	6
28066	viste	5
5366	visuais	6
10715	visual	2
25536	visuales	6
55032	visualizar	7
53979	visualize	2
22663	visualizzare	6
16136	visualizzare.</string>	15
12824	visualizzare</string>	30
22591	visualizzazione	6
43581	visually	4
28172	vlida</string>	5
15758	vlidas	9
28109	vlido</string>	8
22906	vlidos	13
28083	vlidos</string>	8
55893	vlja	2
5698	voc	6
8609	voegen</string>	34
38453	voice	14
50610	voiceIntent	5
50043	voiceIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE,searchActivity	5
50004	voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE,language)	5
50589	voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,languageModel)	5
50390	voiceIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS,maxResults)	5
49860	voiceIntent.putExtra(RecognizerIntent.EXTRA_PROMPT,prompt)	5
49678	voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT,pending)	5
49766	voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE,queryExtras)	5
22	void	394
16121	voir	11
14067	volatile	6
21991	volbu,chcete-li	7
22268	voleu	10
28037	volo,di	19
12516	volte</string>	16
22340	vom	8
5624	von	54
16767	voor	37
16769	voorkeuren</string>	21
22342	vor	11
15093	voreingestellte	10
29483	vorhanden	6
12157	vorhanden.\nErstellen	11
6393	vorhanden.\nSie	37
6642	vorhanden</string>	36
16842	vorige	39
10570	vorte	13
11497	vos	27
60089	vostres	3
11703	votre	37
16284	voudriez-vous	5
15971	vouloir	26
10708	vous	27
56004	vrdet	2
16824	vreemd	8
10912	vrios	11
55812	vrobce	5
22024	vrtit	7
62302	vs	3
41638	vs.	4
11633	vue	7
29241	vuoi	4
56189	vxelkurs</string>	2
56459	vxelkursen	2
56287	vy	2
55896	vy</string>	2
29601	vypnut</string>	3
55568	vytven	2
22137	vytvoen</string>	7
29482	vytvoit</string>	3
12427	w	51
42906	w)	4
47504	w,int	4
39275	wActionBar	8
38904	wActionBar.collapseActionView()	4
39266	wActionBar.dismissPopupMenus()	4
39212	wActionBar.hasExpandedActionView())	4
38864	wActionBar.hideOverflowMenu()	5
39553	wActionBar.initIndeterminateProgress()	4
39364	wActionBar.initProgress()	4
39057	wActionBar.isOverflowMenuShowing())	4
38968	wActionBar.isOverflowReserved())	4
39342	wActionBar.setMenu(mMenu,this)	4
39063	wActionBar.setMenu(null,this)	4
40339	wActionBar.setSplitActionBar(splitActionBar)	4
40052	wActionBar.setSplitView(splitView)	4
39441	wActionBar.setSplitWhenNarrow(splitWhenNarrow)	4
39646	wActionBar.setWindowCallback(this)	4
39253	wActionBar.setWindowTitle(mActivity.getTitle())	7
38845	wActionBar.setWindowTitle(title)	4
39227	wActionBar.showOverflowMenu()	5
16900	waarde	7
16558	wachtwoord	9
17004	wachtwoord,probeer	5
16546	wachtwoord</string>	3
32515	wait	10
63778	wait(60000)	2
40771	waiting	8
50929	wake	20
5794	wakeLock	11
5097	wakeLock.acquire()	13
6347	wakeLock.release()	10
40862	walk	4
7609	wallet	3
17255	walut</string>	20
17425	waluta	9
17780	waluta</string>	18
13012	waluty	24
17257	waluty</string>	15
2281	want	309
47981	want.	9
40883	wants	14
22514	warna	7
37916	warned.	4
51537	warning	5
34673	warning"	14
9552	warnings	8
26546	warranty	18
17454	warto	12
17351	warto!</string>	12
17399	warto</string>	10
17866	wartoci	13
493	was	304
30337	was:	6
43430	wasFormatted	4
39787	wasHidden	4
60544	wasa	7
17463	wasn	14
50183	watch	5
51327	watcher	3
12955	way	71
41186	way,and	4
14405	way.	21
52829	way:	10
53155	way</p>	7
40822	ways	8
17498	wczone</string>	11
330	we	361
12358	we'll	25
18923	we're	38
31354	we've	25
49331	weak	5
50363	web	5
50175	webSearchIntent	5
5020	week	23
34993	week.	9
18840	week:	7
55825	weekDay	4
55781	weekday	4
55770	weekday.	3
55716	weekdays	4
55598	weekly	4
55595	weeklyActionsWithMultiplier_shouldBeDueOnTheWeekdaySet()	4
55690	weeklyActionsWithoutWeekdaySet_shouldReturnDateInTheFuture()	2
7742	weeks	11
19781	weeks"	5
35129	weeks.</p>	4
8641	weeks/2	9
6163	weeks</item>	90
35249	weeks</p>	6
17028	weer	7
16686	weergeven</string>	7
30873	wehere	1
46850	weight	13
49626	weight)	5
48781	weight.	7
49120	weight:").append(new	4
56787	weird	5
16670	weken</item>	8
2066	well	93
35051	well,when	6
43911	well-behaved	4
49130	well-formed.")	4
6834	well.	117
49713	well...	5
5061	wenn	14
32609	went	24
16819	werd	19
6009	werden	77
4855	werden!	13
4859	werden.	15
6087	werden.\Die	22
5432	werden</string>	19
333	were	142
6491	what	70
24493	whatever	36
47283	wheel	4
46748	wheel&mdash	4
526	when	439
31311	whenInSingleEntry_shouldHideXmlExportOption(){	14
31612	whenever	18
2890	where	215
24136	where)	13
64208	where),	3
11490	where,	16
24188	where,@Nullable	14
1644	where,String[]	33
33795	where,null,	15
33963	where,whereArgs,null,null,null)	7
11692	whereArgs	35
968	whereArgs)	26
24167	whereArgs){	12
30697	whereArgs,	9
24458	whereArgs,@NonNull	6
24103	whereArgs,@Nullable	8
24366	whereArgs,String	23
64205	whereArgs,null,null,null)	3
30727	whereClause	1
20852	whereClause,	9
24140	whereClause,@Nullable	4
24244	whereClause,String[]	8
20228	wherever	5
3807	whether	145
1894	which	377
2526	which)	83
27912	which,boolean	4
19151	whichButton)	62
1459	while	358
63691	while(accountsCursor.moveToNext()){	2
18892	while(c.moveToNext()){	19
35585	while(cursor	10
23936	while(cursor.moveToNext())	12
24284	while(cursor.moveToNext()){	29
61746	while(oldVersion	3
46942	white	4
49883	whitespace.	5
59319	whlen	4
59230	whlen</string>	4
6865	who	39
47248	who)	4
11453	whole	55
12754	wholeNum	5
60555	whom	3
4022	whose	167
58113	why	6
50070	wide	8
38406	wider	4
38300	wider,more	4
12952	widet</string>	19
7500	widget	85
9602	widget,if	3
9893	widget.	25
9895	widget:	22
8415	widget</string>	163
9927	widgetId	18
54810	widgetId,-1)	10
9751	widgetId,false)	5
9273	widgetId,null)	14
9290	widgetId,true)	6
13077	widgetLength)	5
52397	widgetManager	10
52386	widgetManager.getAppWidgetIds(componentName)	8
13903	widgetPos,int	5
9886	widgets	28
52416	widgets")	10
544	widgets,if	20
46467	widgets.	4
60436	widgets.</p>	3
22414	widgetu</string>	5
37668	width	45
46875	width)	5
42519	width,boolean	4
49987	width,if	5
39106	width,int	9
43777	width,t	4
44503	width,the	4
42655	width.	10
40222	widthDp	4
42524	widthLimit	4
44668	widthMeasureSpec	17
47197	widthMeasureSpec)	4
42837	widthMeasureSpec,int	34
43279	widthMode	20
43556	widthPadding	4
43753	widthRemaining	5
43415	widthSize	10
46716	widthSpec	5
47462	widthUsed,int	4
28151	wiederherstellen&#8230	11
7091	wiederkehrende	19
35229	wiederkehrendem	3
26120	wielo-walutowe	5
52031	wielu	9
19976	wiht	14
16826	wijzigen	21
16738	wijzigen</string>	7
17077	wijzigingen	11
16838	wil	44
47840	wildly	4
1143	will	443
40807	will,in	4
16985	wilt	6
31294	window	50
24316	window"	7
38248	window.	12
40218	window.getDecorView()	4
38568	windowActionBar	4
35217	windowManagerBinder	4
34947	windowManagerClazz	4
34936	windowManagerClazz.getDeclaredMethod("getAnimationScales")	4
57685	windowManagerClazz.getDeclaredMethod("setAnimationScales",	2
35036	windowManagerClazz.getDeclaredMethod("setAnimationScales",float[].class)	2
57703	windowManagerObj	2
34920	windowManagerStubClazz	4
35097	windowManagerStubClazz.getDeclaredMethod("asInterface",IBinder.class)	4
47273	windows.	4
22280	wird	11
4742	wird,wenn	16
4138	wirklich	25
3970	wish	59
50393	wish.	5
17009	wisselkoers	5
1046	with	449
49107	with".	4
26987	with&#8230	14
40894	with(Animator	4
47585	with,and	4
41053	with,before,and	4
37338	with...</string>	6
37058	with</string>	5
36339	withCurrency(@NonNull	8
36308	withCurrency(Currency	13
45502	withFinalVisibility(int	8
31648	withGarbageAtTheBeginning_shouldFailWithException()	3
31607	withGarbageAtTheEnd_shouldFailWithException()	3
63034	withId(R.id.edit_transaction))).perform(click())	4
13867	withId(R.id.options_menu))).perform(click())	10
33253	withId(R.id.options_menu),	3
13499	withId(R.id.radio_delete))).perform(click())	5
35241	withId(R.id.radio_move))).check(matches(isEnabled())).perform(click())	5
33176	withId(R.id.radio_move))).perform(click())	4
1577	within	132
2958	without	133
34889	wizard	20
62238	wizard</p>	3
50619	wizardModel	4
42595	woken	4
59309	wollen	4
6233	wollen,lschen	6
42062	won't	12
41832	word	4
16540	worden	45
16804	worden!	13
17045	worden!!</string>	11
16648	worden!</string>	13
16806	worden.	9
17178	worden.\nDe	17
26355	worden.\nHet	6
16938	worden.\n\nWeet	6
16518	worden</string>	17
52761	words	16
30635	work	47
41451	work,but	4
57720	work,never	6
18207	workaround	21
47224	worker	9
34814	working	18
50332	working.	5
30751	works	22
12849	world	10
4106	would	196
43859	wouldn't	12
17431	wpierw	8
17303	wpisy	13
17321	wpisy</string>	13
40234	wrap	8
38000	wrap(Activity	4
42745	wrap(View	4
38317	wrap(activity,0)	4
38335	wrap.	4
39540	wrapped	17
39702	wrapped)	4
39121	wrappedCallback	4
28817	wrapper	15
40307	wrapper's	4
8161	wrapping	15
40765	wraps	4
6626	write	56
36649	write(Document	8
7241	write(Node	21
20309	write(doc,stringWriter)	5
20158	write(doc,writer)	7
7097	write(doc,writer,false)	14
21770	write(document,stringWriter,false)	10
6793	write(ofxNode,stringWriter,true)	21
6639	writeOfxToExternalStorage(Document	12
6888	writeOfxToExternalStorage(document)	9
31040	writeOutput(String	5
31440	writeOutput(mExporter.generateExport())	7
6989	writeQifExternalStorage(String	13
6440	writeQifExternalStorage(qif)	9
20974	writeToExternalStorage(Document	17
31900	writeToExternalStorage(document)	8
42749	writeToParcel(Parcel	23
14282	writeable	19
6915	writer	60
4162	writer)	93
56934	writer.append(QifHelper.ACCOUNT_HEADER).append(newLine)	7
57730	writer.append(QifHelper.ACCOUNT_NAME_PREFIX)	3
57718	writer.append(QifHelper.DATE_PREFIX)	3
56790	writer.append(QifHelper.ENTRY_TERMINATOR).append(newLine)	6
56922	writer.append(QifHelper.INTERNAL_CURRENCY_PREFIX)	5
57675	writer.append(QifHelper.MEMO_PREFIX)	4
25757	writer.append(QifHelper.SPLIT_AMOUNT_PREFIX)	16
25827	writer.append(QifHelper.SPLIT_CATEGORY_PREFIX)	10
57702	writer.append(QifHelper.SPLIT_MEMO_PREFIX)	3
57686	writer.append(QifHelper.getQifHeader(cursor.getString(cursor.getColumnIndexOrThrow("acct1_type"))))	3
6890	writer.close()	40
6463	writer.flush()	41
14379	writer.write("Backup	6
31141	writer.write(exportOutput)	5
31099	writer.write(exporter.generateExport())	7
31228	writer.write(generateExport())	6
56753	writer.write(generateOfxExport())	5
6697	writer.write(qif)	13
6643	writer.write(stringBuffer.toString()	16
21092	writer.write(stringBuffer.toString())	5
20791	writer.write(xml)	4
63651	writes	3
4178	writing	29
1479	writing,software	349
35292	writing.	4
6750	written	13
33488	wrong	15
17404	wspiera	15
17411	wszyskie	13
17308	wszystkich	9
17250	wszystkie	27
6203	wurde	18
5463	wurde</string>	10
5911	wurden	15
17671	wybra	22
17682	wybranej	13
56766	wybrany</string>	9
17437	wybranych</string>	18
17474	wycinek	14
17374	wycinki</string>	18
17709	wycz	11
17562	wyczone</string>	16
29705	wydatkw	13
52043	wyeksportowa	9
17252	wyeksportowan	13
17403	wyeksportowane	13
22982	wyeksportowane.	6
17397	wyeksportowany	16
12723	wyjciowe</string>	24
17630	wykonanie	12
17755	wykresie	20
17693	wykresu</string>	18
17622	wyliczony	13
17315	wymagana</string>	12
17701	wymagany</string>	12
17435	wymiany	12
17452	wymiany</string>	10
17383	wymienion	10
17726	wyraenie!</string>	12
17734	wysya	23
17745	wysyaj	8
17651	wysyany	13
17586	wywietlenia.</string>	11
12182	wywietlenia</string>	16
45385	x	34
45247	x)	4
45384	x,int	8
6672	x-2,x-1,x	17
30117	x-axis	6
59816	x-men")	2
59813	x-men"))	2
11830	x.xx	51
40598	x0	8
34232	xAxisOffset	11
34183	xAxisOffset))	11
30350	xTimestamps	4
30425	xTimestamps.addAll(mLatestTimestampsMap.values())	4
25402	xVals	9
54019	xVals.add(mBudget.getRecurrence().getTextOfCurrentPeriod(periodNum))	2
25112	xVals.add(start.toString("MMM	6
25170	xVals.add(start.toString(X_AXIS_PATTERN))	3
26872	xVals.size())	4
2867	xValues	40
30024	xValues.add("")	13
34159	xValues.add("Q"	10
32212	xValues.add(String.format(X_AXIS_QUARTER_PATTERN,quarter,tmpDate.toString("	7
30292	xValues.add(start.toString(X_AXIS_PATTERN))	3
34231	xValues.add(startDate.toString("yy"))	9
34207	xValues.add(startDate.toString("yyyy"))	4
3402	xValues.add(startDate.toString(X_AXIS_PATTERN))	27
34213	xValues.add(tmpDate.toString("yyyy"))	5
32112	xValues.add(tmpDate.toString(X_AXIS_MONTH_PATTERN))	7
30080	xValues.add(tmpDate.toString(X_AXIS_PATTERN))	10
32158	xValues.add(tmpDate.toString(X_AXIS_YEAR_PATTERN))	7
8355	xistant	26
3007	xito</string>	28
62661	xl	3
62692	xl.setCenterXLabelText(true)	3
8060	xml	64
64235	xml)	2
39451	xml.getAttributeCount()	8
39700	xml.getAttributeIntValue(i,0)	4
39714	xml.getAttributeName(i)	8
45654	xml.getAttributeResourceValue(i,0)	4
40150	xml.getAttributeValue(i))	8
40199	xml.getEventType()	8
39698	xml.getName()	8
39877	xml.nextToken()	8
57368	xmlFiles	7
56716	xmlL	4
56582	xmlLayoutResId	9
56572	xmlLayoutResId)	9
51523	xmlRadioButton	6
51528	xmlRadioButton.performClick()	9
51386	xmlRadioButton.setOnClickListener(clickListener)	6
62313	xmlRadioButton.setVisibility(View.GONE)	6
8154	xmlSerializer	23
4772	xmlSerializer)	65
5333	xmlSerializer,	72
58732	xmlSerializer,Collection<Account>	1
26008	xmlSerializer,List<Commodity>	3
26180	xmlSerializer,List<Currency>	8
8031	xmlSerializer,Recurrence	5
33690	xmlSerializer,String	5
33774	xmlSerializer,boolean	8
53268	xmlSerializer.attribute(null,	2
56806	xmlSerializer.attribute(null,"xmlns:"	6
55026	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_CD_TYPE,"account")	9
5990	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_CD_TYPE,"book")	5
25931	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_CD_TYPE,"commodity")	11
23556	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_CD_TYPE,"price")	7
23945	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_CD_TYPE,"transaction")	16
5419	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_CD_TYPE,GncXmlHelper.ATTR_VALUE_BOOK)	2
32404	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_TYPE,"frame")	2
53435	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_TYPE,GncXmlHelper.ATTR_VALUE_FRAME)	2
23707	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_TYPE,GncXmlHelper.ATTR_VALUE_GUID)	23
34568	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_TYPE,GncXmlHelper.ATTR_VALUE_STRING)	7
28827	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_TYPE,slotType.get(i))	5
23613	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_VERSION,"1")	7
53255	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_VERSION,"2.0.0")	7
25550	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_VERSION,GncXmlHelper.BOOK_VERSION)	21
33585	xmlSerializer.attribute(null,GncXmlHelper.ATTR_KEY_VERSION,GncXmlHelper.RECURRENCE_VERSION)	7
32038	xmlSerializer.attribute(null,GncXmlHelper.ATTR_VALUE_GUID,actionUID)	7
55115	xmlSerializer.attribute(null,GncXmlHelper.ATTR_VALUE_GUID,scheduledActionUID)	5
19518	xmlSerializer.endDocument()	11
53597	xmlSerializer.endTag(null,	2
56849	xmlSerializer.endTag(null,GncXmlHelper.TAG_ACCOUNT)	4
36024	xmlSerializer.endTag(null,GncXmlHelper.TAG_ACCOUNT_COMMODITY)	10
53068	xmlSerializer.endTag(null,GncXmlHelper.TAG_ACCT_COMMODITY)	2
26124	xmlSerializer.endTag(null,GncXmlHelper.TAG_ACCT_DESCRIPTION)	5
53270	xmlSerializer.endTag(null,GncXmlHelper.TAG_ACCT_ID)	6
52981	xmlSerializer.endTag(null,GncXmlHelper.TAG_ACCT_NAME)	2
53329	xmlSerializer.endTag(null,GncXmlHelper.TAG_ACCT_SLOTS)	2
53037	xmlSerializer.endTag(null,GncXmlHelper.TAG_ACCT_TYPE)	2
29074	xmlSerializer.endTag(null,GncXmlHelper.TAG_ACT_SLOTS)	10
19910	xmlSerializer.endTag(null,GncXmlHelper.TAG_BOOK)	17
25948	xmlSerializer.endTag(null,GncXmlHelper.TAG_BOOK_ID)	20
53430	xmlSerializer.endTag(null,GncXmlHelper.TAG_BUDGET)	2
53578	xmlSerializer.endTag(null,GncXmlHelper.TAG_BUDGET_SLOTS)	2
25891	xmlSerializer.endTag(null,GncXmlHelper.TAG_COMMODITY)	12
23686	xmlSerializer.endTag(null,GncXmlHelper.TAG_COMMODITY_ID)	34
25760	xmlSerializer.endTag(null,GncXmlHelper.TAG_COMMODITY_SCU)	13
24034	xmlSerializer.endTag(null,GncXmlHelper.TAG_COMMODITY_SPACE)	27
4546	xmlSerializer.endTag(null,GncXmlHelper.TAG_COUNT_DATA)	27
5462	xmlSerializer.endTag(null,GncXmlHelper.TAG_DATE)	7
4246	xmlSerializer.endTag(null,GncXmlHelper.TAG_DATE_ENTERED)	7
4268	xmlSerializer.endTag(null,GncXmlHelper.TAG_DATE_POSTED)	12
33518	xmlSerializer.endTag(null,GncXmlHelper.TAG_GDATE)	2
53145	xmlSerializer.endTag(null,GncXmlHelper.TAG_GNC_RECURRENCE)	2
53050	xmlSerializer.endTag(null,GncXmlHelper.TAG_NAME)	6
34648	xmlSerializer.endTag(null,GncXmlHelper.TAG_PARENT_UID)	7
23811	xmlSerializer.endTag(null,GncXmlHelper.TAG_PRICE)	4
23470	xmlSerializer.endTag(null,GncXmlHelper.TAG_PRICEDB)	6
23698	xmlSerializer.endTag(null,GncXmlHelper.TAG_PRICE_COMMODITY)	8
23785	xmlSerializer.endTag(null,GncXmlHelper.TAG_PRICE_CURRENCY)	12
23445	xmlSerializer.endTag(null,GncXmlHelper.TAG_PRICE_ID)	4
23780	xmlSerializer.endTag(null,GncXmlHelper.TAG_PRICE_SOURCE)	4
23533	xmlSerializer.endTag(null,GncXmlHelper.TAG_PRICE_TIME)	4
23527	xmlSerializer.endTag(null,GncXmlHelper.TAG_PRICE_TYPE)	4
23693	xmlSerializer.endTag(null,GncXmlHelper.TAG_PRICE_VALUE)	4
6241	xmlSerializer.endTag(null,GncXmlHelper.TAG_RECONCILED_STATE)	11
6327	xmlSerializer.endTag(null,GncXmlHelper.TAG_RECURRENCE)	6
33756	xmlSerializer.endTag(null,GncXmlHelper.TAG_RECURRENCE_PERIOD)	5
19606	xmlSerializer.endTag(null,GncXmlHelper.TAG_ROOT)	17
7803	xmlSerializer.endTag(null,GncXmlHelper.TAG_RX_MULT)	12
4128	xmlSerializer.endTag(null,GncXmlHelper.TAG_RX_PERIOD_TYPE)	11
33767	xmlSerializer.endTag(null,GncXmlHelper.TAG_SCHEDULED_ACTION)	4
28686	xmlSerializer.endTag(null,GncXmlHelper.TAG_SLOT)	11
28718	xmlSerializer.endTag(null,GncXmlHelper.TAG_SLOT_KEY)	11
28724	xmlSerializer.endTag(null,GncXmlHelper.TAG_SLOT_VALUE)	11
32261	xmlSerializer.endTag(null,GncXmlHelper.TAG_SPLIT_ACCOUNT)	6
56981	xmlSerializer.endTag(null,GncXmlHelper.TAG_SPLIT_ID)	3
56858	xmlSerializer.endTag(null,GncXmlHelper.TAG_SPLIT_MEMO)	3
51732	xmlSerializer.endTag(null,GncXmlHelper.TAG_SPLIT_QUANTITY)	7
32256	xmlSerializer.endTag(null,GncXmlHelper.TAG_SPLIT_SLOTS)	2
4689	xmlSerializer.endTag(null,GncXmlHelper.TAG_SPLIT_VALUE)	11
33806	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_ADVANCE_CREATE_DAYS)	4
33810	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_ADVANCE_REMIND_DAYS)	7
5645	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_AUTO_CREATE)	6
33606	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_AUTO_CREATE_NOTIFY)	4
4820	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_ENABLED)	7
25519	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_ID)	11
4557	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_INSTANCE_COUNT)	8
33663	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_NAME)	8
19881	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_NUM_OCCUR)	8
33640	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_REM_OCCUR)	5
4195	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_SCHEDULE)	6
32317	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_TAG)	7
25663	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_TEMPL_ACCOUNT)	5
32393	xmlSerializer.endTag(null,GncXmlHelper.TAG_SX_TEMPL_ACTION)	6
32180	xmlSerializer.endTag(null,GncXmlHelper.TAG_TEMPLATE_TRANSACTION)	4
5725	xmlSerializer.endTag(null,GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS)	12
33769	xmlSerializer.endTag(null,GncXmlHelper.TAG_TRANSACTION)	5
56846	xmlSerializer.endTag(null,GncXmlHelper.TAG_TRN_DESCRIPTION)	8
19620	xmlSerializer.endTag(null,GncXmlHelper.TAG_TRN_SLOTS)	9
32296	xmlSerializer.endTag(null,GncXmlHelper.TAG_TRN_SPLIT)	5
33569	xmlSerializer.endTag(null,GncXmlHelper.TAG_TRN_SPLITS)	9
33531	xmlSerializer.endTag(null,GncXmlHelper.TAG_TRX_CURRENCY)	9
36109	xmlSerializer.endTag(null,GncXmlHelper.TAG_TRX_ID)	7
5263	xmlSerializer.endTag(null,GncXmlHelper.TAG_TS_DATE)	6
53171	xmlSerializer.endTag(null,GncXmlHelper.TAG_TYPE)	9
26060	xmlSerializer.endTag(null,tag)	12
63673	xmlSerializer.flush()	3
8329	xmlSerializer.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output",true)	3
7989	xmlSerializer.setOutput(writer)	14
8184	xmlSerializer.startDocument("utf-8",true)	14
53238	xmlSerializer.startTag(null,	3
52969	xmlSerializer.startTag(null,GncXmlHelper.TAG_ACCOUNT)	12
53205	xmlSerializer.startTag(null,GncXmlHelper.TAG_ACCOUNT_COMMODITY)	6
53230	xmlSerializer.startTag(null,GncXmlHelper.TAG_ACCT_COMMODITY)	2
26025	xmlSerializer.startTag(null,GncXmlHelper.TAG_ACCT_DESCRIPTION)	5
53322	xmlSerializer.startTag(null,GncXmlHelper.TAG_ACCT_ID)	6
53127	xmlSerializer.startTag(null,GncXmlHelper.TAG_ACCT_NAME)	2
53102	xmlSerializer.startTag(null,GncXmlHelper.TAG_ACCT_SLOTS)	2
53214	xmlSerializer.startTag(null,GncXmlHelper.TAG_ACCT_TYPE)	2
28873	xmlSerializer.startTag(null,GncXmlHelper.TAG_ACT_SLOTS)	10
56886	xmlSerializer.startTag(null,GncXmlHelper.TAG_BOOK)	3
26018	xmlSerializer.startTag(null,GncXmlHelper.TAG_BOOK_ID)	7
53380	xmlSerializer.startTag(null,GncXmlHelper.TAG_BUDGET_SLOTS)	2
26188	xmlSerializer.startTag(null,GncXmlHelper.TAG_COMMODITY)	14
23857	xmlSerializer.startTag(null,GncXmlHelper.TAG_COMMODITY_ID)	24
36461	xmlSerializer.startTag(null,GncXmlHelper.TAG_COMMODITY_SCU)	13
24049	xmlSerializer.startTag(null,GncXmlHelper.TAG_COMMODITY_SPACE)	29
4177	xmlSerializer.startTag(null,GncXmlHelper.TAG_COUNT_DATA)	25
6275	xmlSerializer.startTag(null,GncXmlHelper.TAG_DATE)	7
5160	xmlSerializer.startTag(null,GncXmlHelper.TAG_DATE_ENTERED)	12
4055	xmlSerializer.startTag(null,GncXmlHelper.TAG_DATE_POSTED)	7
33571	xmlSerializer.startTag(null,GncXmlHelper.TAG_GDATE)	2
53311	xmlSerializer.startTag(null,GncXmlHelper.TAG_GNC_RECURRENCE)	2
53077	xmlSerializer.startTag(null,GncXmlHelper.TAG_NAME)	6
34544	xmlSerializer.startTag(null,GncXmlHelper.TAG_PARENT_UID)	7
23510	xmlSerializer.startTag(null,GncXmlHelper.TAG_PRICE)	7
24005	xmlSerializer.startTag(null,GncXmlHelper.TAG_PRICEDB)	7
23720	xmlSerializer.startTag(null,GncXmlHelper.TAG_PRICE_COMMODITY)	5
23395	xmlSerializer.startTag(null,GncXmlHelper.TAG_PRICE_CURRENCY)	4
23701	xmlSerializer.startTag(null,GncXmlHelper.TAG_PRICE_ID)	4
24015	xmlSerializer.startTag(null,GncXmlHelper.TAG_PRICE_SOURCE)	4
23809	xmlSerializer.startTag(null,GncXmlHelper.TAG_PRICE_TIME)	10
23491	xmlSerializer.startTag(null,GncXmlHelper.TAG_PRICE_TYPE)	4
23655	xmlSerializer.startTag(null,GncXmlHelper.TAG_PRICE_VALUE)	4
53198	xmlSerializer.startTag(null,GncXmlHelper.TAG_RECONCILED_STATE)	5
33547	xmlSerializer.startTag(null,GncXmlHelper.TAG_RECURRENCE)	8
33544	xmlSerializer.startTag(null,GncXmlHelper.TAG_RECURRENCE_PERIOD)	5
56763	xmlSerializer.startTag(null,GncXmlHelper.TAG_ROOT)	6
8366	xmlSerializer.startTag(null,GncXmlHelper.TAG_RX_MULT)	9
8606	xmlSerializer.startTag(null,GncXmlHelper.TAG_RX_PERIOD_TYPE)	12
25640	xmlSerializer.startTag(null,GncXmlHelper.TAG_SCHEDULED_ACTION)	13
29114	xmlSerializer.startTag(null,GncXmlHelper.TAG_SLOT)	11
28596	xmlSerializer.startTag(null,GncXmlHelper.TAG_SLOT_KEY)	11
32281	xmlSerializer.startTag(null,GncXmlHelper.TAG_SLOT_VALUE)	8
32025	xmlSerializer.startTag(null,GncXmlHelper.TAG_SPLIT_ACCOUNT)	9
56883	xmlSerializer.startTag(null,GncXmlHelper.TAG_SPLIT_ID)	3
56933	xmlSerializer.startTag(null,GncXmlHelper.TAG_SPLIT_MEMO)	3
23526	xmlSerializer.startTag(null,GncXmlHelper.TAG_SPLIT_QUANTITY)	11
32081	xmlSerializer.startTag(null,GncXmlHelper.TAG_SPLIT_SLOTS)	2
6251	xmlSerializer.startTag(null,GncXmlHelper.TAG_SPLIT_VALUE)	13
33555	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_ADVANCE_CREATE_DAYS)	4
33706	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_ADVANCE_REMIND_DAYS)	4
4724	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_AUTO_CREATE)	7
6402	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_AUTO_CREATE_NOTIFY)	6
33816	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_ENABLED)	8
25504	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_ID)	13
33741	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_INSTANCE_COUNT)	7
33592	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_NAME)	9
19634	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_NUM_OCCUR)	8
33576	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_REM_OCCUR)	5
25684	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_SCHEDULE)	12
33754	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_TAG)	3
25674	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_TEMPL_ACCOUNT)	3
32262	xmlSerializer.startTag(null,GncXmlHelper.TAG_SX_TEMPL_ACTION)	6
32341	xmlSerializer.startTag(null,GncXmlHelper.TAG_TEMPLATE_TRANSACTION)	4
5774	xmlSerializer.startTag(null,GncXmlHelper.TAG_TEMPLATE_TRANSACTIONS)	7
56918	xmlSerializer.startTag(null,GncXmlHelper.TAG_TRANSACTION)	3
33628	xmlSerializer.startTag(null,GncXmlHelper.TAG_TRN_DESCRIPTION)	9
19783	xmlSerializer.startTag(null,GncXmlHelper.TAG_TRN_SLOTS)	9
56859	xmlSerializer.startTag(null,GncXmlHelper.TAG_TRN_SPLIT)	3
32207	xmlSerializer.startTag(null,GncXmlHelper.TAG_TRN_SPLITS)	7
31320	xmlSerializer.startTag(null,GncXmlHelper.TAG_TRX_CURRENCY)	11
56856	xmlSerializer.startTag(null,GncXmlHelper.TAG_TRX_ID)	3
5429	xmlSerializer.startTag(null,GncXmlHelper.TAG_TS_DATE)	11
53257	xmlSerializer.startTag(null,GncXmlHelper.TAG_TYPE)	6
33679	xmlSerializer.startTag(null,tag)	2
33763	xmlSerializer.text("0")	7
5353	xmlSerializer.text("1")	13
23597	xmlSerializer.text("ISO4217")	28
63893	xmlSerializer.text("false")	3
4621	xmlSerializer.text("n")	9
53287	xmlSerializer.text("template")	3
4945	xmlSerializer.text("y")	4
25994	xmlSerializer.text(BaseModel.generateUID())	6
56863	xmlSerializer.text(Boolean.toString(cursor.getInt(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_FAVORITE))	3
56840	xmlSerializer.text(Boolean.toString(cursor.getInt(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_PLACEHOLDER))	3
33726	xmlSerializer.text(GncXmlHelper.DATE_FORMATTER.format(timeMillis))	2
56885	xmlSerializer.text(GncXmlHelper.KEY_COLOR)	3
56963	xmlSerializer.text(GncXmlHelper.KEY_DEFAULT_TRANSFER_ACCOUNT)	3
63894	xmlSerializer.text(GncXmlHelper.KEY_EXPORTED)	3
56985	xmlSerializer.text(GncXmlHelper.KEY_FAVORITE)	3
56919	xmlSerializer.text(GncXmlHelper.KEY_NOTES)	4
56913	xmlSerializer.text(GncXmlHelper.KEY_PLACEHOLDER)	3
32463	xmlSerializer.text(GncXmlHelper.KEY_SCHEDX_ACTION)	2
32295	xmlSerializer.text(GncXmlHelper.getScheduledPeriodType(ScheduledAction.getPeriodType(period)))	4
33742	xmlSerializer.text(GncXmlHelper.getScheduledPeriodType(ScheduledEvent.getPeriodType(period)))	3
26171	xmlSerializer.text(Integer.toString((int)	15
36153	xmlSerializer.text(Integer.toString(commodity.getSmallestFraction()))	4
33661	xmlSerializer.text(Integer.toString(numOccurrences	5
19443	xmlSerializer.text(Integer.toString(numOccurrences))	8
33577	xmlSerializer.text(Integer.toString(recur))	5
53283	xmlSerializer.text(Integer.toString(scheduledAction.getAdvanceCreateDays()))	2
53106	xmlSerializer.text(Integer.toString(scheduledAction.getAdvanceNotifyDays()))	2
55111	xmlSerializer.text(Integer.toString(totalFrequency	2
55119	xmlSerializer.text(Integer.toString(totalFrequency))	2
53511	xmlSerializer.text(Long.toString(budget.getNumberOfPeriods()))	2
55163	xmlSerializer.text(Long.toString(instanceCount))	3
32305	xmlSerializer.text(ScheduledAction.getPeriodType(period).name())	4
8054	xmlSerializer.text(String.valueOf(periodType.getMultiplier()))	7
7830	xmlSerializer.text(String.valueOf(recurrence.getMultiplier()))	3
25779	xmlSerializer.text(UUID.randomUUID().toString().replaceAll("-",""))	15
53307	xmlSerializer.text(account.getAccountType().name())	3
53202	xmlSerializer.text(account.getName())	3
53271	xmlSerializer.text(account.getUID())	3
25529	xmlSerializer.text(accountUID.getUID())	4
53168	xmlSerializer.text(acctCurrencyCode)	9
53252	xmlSerializer.text(acct_type)	8
58684	xmlSerializer.text(actionType.name())	1
32178	xmlSerializer.text(actionUID)	3
53631	xmlSerializer.text(budget.getDescription()	2
53428	xmlSerializer.text(budget.getName())	2
53233	xmlSerializer.text(budget.getUID())	2
53391	xmlSerializer.text(budgetAmount.getAccountUID())	2
56911	xmlSerializer.text(color)	3
25942	xmlSerializer.text(commodities.size()	3
25960	xmlSerializer.text(commodity.getCurrencyCode())	3
36151	xmlSerializer.text(curTrxUID)	7
26117	xmlSerializer.text(currencies.size()	6
33648	xmlSerializer.text(currency)	9
25933	xmlSerializer.text(currency.getCurrencyCode())	8
36083	xmlSerializer.text(currencyCode)	4
23447	xmlSerializer.text(cursor.getLong(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_VALUE_NUM))	4
32031	xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow("split_acct_uid")))	5
56974	xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow("split_uid")))	3
33563	xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow("trans_desc")))	10
56912	xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_NAME)))	3
56977	xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow(AccountEntry.COLUMN_UID)))	3
53240	xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_NAME)))	4
53136	xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.AccountEntry.COLUMN_UID)))	4
23657	xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.CommonColumns.COLUMN_UID)))	4
23489	xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_SOURCE)))	4
55098	xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow(ScheduledActionEntry.COLUMN_TYPE)))	6
33597	xmlSerializer.text(cursor.getString(cursor.getColumnIndexOrThrow(ScheduledEventEntry.COLUMN_TYPE)))	3
5979	xmlSerializer.text(dateEntered)	4
56873	xmlSerializer.text(defaultTransferAcctUUID)	3
26101	xmlSerializer.text(description)	8
6141	xmlSerializer.text(enabled	7
55033	xmlSerializer.text(mAccountsDbAdapter.getCurrencies().size()	8
62694	xmlSerializer.text(mAccountsDbAdapter.getRecordsCount()	2
56935	xmlSerializer.text(mAccountsDbAdapter.getTotalAccountCount()	4
23964	xmlSerializer.text(mCommoditiesDbAdapter.getCurrencyCode(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_COMMODITY_UID))))	7
23521	xmlSerializer.text(mCommoditiesDbAdapter.getCurrencyCode(cursor.getString(cursor.getColumnIndexOrThrow(DatabaseSchema.PriceEntry.COLUMN_CURRENCY_UID))))	8
58689	xmlSerializer.text(mRootTemplateAccount.getUID())	1
25672	xmlSerializer.text(mTransactionToTemplateAccountMap.get(actionUID).getUID())	3
23645	xmlSerializer.text(mTransactionsDbAdapter.getRecordsCount()	10
57462	xmlSerializer.text(mTransactionsDbAdapter.getTotalTransactionsCount(	4
54984	xmlSerializer.text(mTransactionsDbAdapter.getTotalTransactionsCount()	12
56987	xmlSerializer.text(memo)	3
25514	xmlSerializer.text(nameUID)	3
56961	xmlSerializer.text(notes)	4
34511	xmlSerializer.text(parentUID)	6
4045	xmlSerializer.text(periodType.name().toLowerCase())	9
23350	xmlSerializer.text(priceCount	4
53069	xmlSerializer.text(scheduledAction.isEnabled()	2
52976	xmlSerializer.text(scheduledAction.shouldAutoCreate()	2
53200	xmlSerializer.text(scheduledAction.shouldAutoNotify()	2
28608	xmlSerializer.text(slotKey.get(i))	5
29117	xmlSerializer.text(slotValue.get(i))	5
32162	xmlSerializer.text(splitAccountUID)	3
5142	xmlSerializer.text(strDate)	16
6289	xmlSerializer.text(strValue)	20
32338	xmlSerializer.text(tag)	5
23649	xmlSerializer.text(type)	4
8302	xmlns:act="http://www.gnucash.org/XML/act"	8
8700	xmlns:addr="http://www.gnucash.org/XML/addr"	8
1150	xmlns:android="http://schemas.android.com/apk/res/android"	247
1816	xmlns:android="http://schemas.android.com/apk/res/android">	78
1889	xmlns:app="http://schemas.android.com/apk/res-auto"	50
20211	xmlns:app="http://schemas.android.com/apk/res-auto">	41
7915	xmlns:bgt="http://www.gnucash.org/XML/bgt"	8
8112	xmlns:billterm="http://www.gnucash.org/XML/billterm"	8
7695	xmlns:book="http://www.gnucash.org/XML/book"	8
8305	xmlns:bt-days="http://www.gnucash.org/XML/bt-days"	8
8492	xmlns:bt-prox="http://www.gnucash.org/XML/bt-prox"	8
24673	xmlns:cardview="http://schemas.android.com/apk/res-auto"	19
7502	xmlns:cd="http://www.gnucash.org/XML/cd"	8
8282	xmlns:cmdty="http://www.gnucash.org/XML/cmdty"	8
7809	xmlns:cust="http://www.gnucash.org/XML/cust"	8
8499	xmlns:employee="http://www.gnucash.org/XML/employee"	8
7925	xmlns:entry="http://www.gnucash.org/XML/entry"	8
8202	xmlns:fs="http://www.gnucash.org/XML/fs"	8
8650	xmlns:gnc="http://www.gnucash.org/XML/gnc"	8
55137	xmlns:gnucash="http://schemas.android.com/apk/res-auto"	8
7834	xmlns:invoice="http://www.gnucash.org/XML/invoice"	8
8524	xmlns:job="http://www.gnucash.org/XML/job"	8
7950	xmlns:lot="http://www.gnucash.org/XML/lot"	8
8397	xmlns:order="http://www.gnucash.org/XML/order"	8
7975	xmlns:owner="http://www.gnucash.org/XML/owner"	8
8157	xmlns:price="http://www.gnucash.org/XML/price"	8
8242	xmlns:recurrence="http://www.gnucash.org/XML/recurrence"	8
8626	xmlns:slot="http://www.gnucash.org/XML/slot"	8
7462	xmlns:split="http://www.gnucash.org/XML/split"	8
8275	xmlns:sx="http://www.gnucash.org/XML/sx"	8
7479	xmlns:taxtable="http://www.gnucash.org/XML/taxtable"	8
828	xmlns:tools="http://schemas.android.com/tools"	83
8645	xmlns:trn="http://www.gnucash.org/XML/trn"	8
7768	xmlns:ts="http://www.gnucash.org/XML/ts"	8
8541	xmlns:tte="http://www.gnucash.org/XML/tte"	8
8213	xmlns:vendor="http://www.gnucash.org/XML/vendor">	8
10390	xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">	175
13147	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	66
13720	xmlns="http://maven.apache.org/POM/4.0.0"	66
26479	xporteerd	13
16517	xporteerd.</string>	20
16840	xporteerde	19
45472	xpos	4
48867	xppe)	4
25160	xr	31
2575	xr.parse(new	50
2223	xr.setContentHandler(handler)	35
13211	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0	66
51930	xy	10
51960	xy[0]	7
51875	xy[1]	7
3422	y	113
32580	y)	11
45331	y,int	4
47306	yOffset	4
46792	yOffset,boolean	4
20207	yValues	16
29990	yValues.add(new	13
18153	ya	11
10495	yakin	9
10383	yang	14
54049	yea	2
9127	year	27
59941	year)	3
24874	year,	16
665	year,int	35
8897	year,monthOfYear,dayOfMonth)	21
59918	years	3
19815	years"	5
5268	years</item>	96
27109	yellow	3
15619	yemen&#237	10
15432	yemen</item>	9
12589	yeni	11
25999	yes,getAccountUID()	7
10555	yes,this	3
4450	yet	84
26593	yet")	14
34656	yet,move	10
1076	you	426
32679	you!</string>	6
3030	your	233
45655	ypos	4
25439	yy"))	21
8465	yyyy	28
921	yyyy")	33
2819	yyyy"))	40
30285	yyyy",Locale.US)	5
17831	z	33
62672	z++	3
17499	zachowa	15
17402	zachowywane	15
17786	zaczniesz	8
17489	zaimportowa	17
17846	zaj</string>	8
17302	zakoczeniu	17
17613	zakoczony	13
17379	zakres&#8230	5
17601	zakres</item>	8
15561	zambiano</item>	14
17259	zamknita</string>	9
17687	zamontowana!</string>	16
12867	zanim	19
17468	zapasow	15
17830	zapasow&#8230	7
17684	zapasow</string>	16
17245	zapasowa	18
17667	zapasowa</string>	17
17246	zapasowe	15
17501	zapasowej	16
17263	zapasowej</string>	18
17636	zapasowych</string>	11
17549	zapasw	22
17244	zapisa	18
17873	zapisaniem	12
17511	zapisywa	9
17724	zaplanowa</string>	13
17870	zaplanowane</string>	18
17851	zaplanowanych	23
29535	zapnutou</string>	3
17283	zastpcze</string>	9
17296	zawiera	11
17603	zbierane	18
17841	zbyt	8
17419	zdecydowa	14
26222	ze	6
16837	zeker	23
16776	zelf	3
3111	zero	56
50075	zero,	5
53540	zero,in	2
57289	zero,{@code	2
53616	zero-based	2
35756	zero.	20
35806	zero.</p>	4
21943	zeroTimeStamp	7
58630	zgo	4
16594	zijn	24
15759	zimbabuense</item>	17
55645	zipOutputStream	2
55631	zipOutputStream.close()	2
55759	zipOutputStream.closeEntry()	2
55649	zipOutputStream.putNextEntry(new	2
55729	zipOutputStream.write(buffer,0,length)	2
54642	zipped	10
55606	zipping	2
62779	zkuste	3
29577	zloha</string>	3
29617	zmek	3
64041	zmiany	2
58645	zmiany,lub	4
17527	zmieni	13
21996	zmnit	5
55749	znaky:	2
17607	znaleziono	11
29517	znovu	5
62723	znovu</string>	3
17775	zobaczy	14
17355	zobowiza</string>	8
22377	zobrazen</string>	8
16951	zodat	13
7399	zone	6
31265	zone.	7
17483	zostan	13
17243	zostay	13
22444	zpt!	7
17725	zrobi	11
22385	zstatek	5
22071	zstatky</string>	5
5856	zu	84
5046	zugreifen</string>	2
16902	zullen	44
4509	zum	36
4503	zur	14
21982	zusammenfassen</string>	8
5499	zustzlich	6
17638	zwrotnych</string>	8
55575	zznam	2
1714	{	396
55128	{"gnc","act","book","cd","cmdty","price","slot",	5
31064	{"gnc","act","book","cd","cmdty","price","slot","split","trn","ts"	7
55411	{"text/*","application/*"	4
2178	{-	1
12100	{//an	5
52093	{//template	8
54570	{//we	2
2149	{1,2	9
1993	{2	3
2166	{3	11
1226	{@code	210
34330	{@inheritDoc	26
160	{@link	360
37759	{@sample	4
13731	{ACCOUNT,TRANSACTION,EXPORT,SPLIT_EDITOR	12
54125	{ACCOUNT,TRANSACTION,EXPORT,SPLIT_EDITOR,BUDGET	5
57447	{ACCOUNT,TRANSACTION,EXPORT,SPLIT_EDITOR,BUDGET,BUDGET_AMOUNT_EDITOR	3
554	{ACCOUNT_FORM,TRANSACTION_FORM,EXPORT_FORM	10
13210	{ACCOUNT_FORM,TRANSACTION_FORM,EXPORT_FORM,SPLIT_EDITOR	8
54654	{ALL_ACTIONS,TRANSACTION_ACTIONS,EXPORT_ACTIONS	5
62579	{ALL_EVENTS,TRANSACTION_EVENTS,EXPORT_EVENTS	3
35434	{AccountEntry.COLUMN_PARENT_ACCOUNT_UID	8
24126	{AccountEntry._ID,AccountEntry.COLUMN_PARENT_ACCOUNT_UID	9
52037	{CASH,BANK,CREDIT,ASSET,LIABILITY,INCOME,EXPENSE,	7
30596	{CASH,BANK,CREDIT_CARD,ASSET,LIABILITY,INCOME,EXPENSE,	10
51374	{CASH,BANK,CREDIT_CARD,ASSET,LIABILITY,INCOME,EXPENSE,EQUITY,CURRENCY,STOCK,MUTUAL_FUND	3
31554	{CASH,BANK,CREDIT_CARD,ASSET,LIABILITY,INCOME,EXPENSE,EQUITY,CURRENCY,STOCK,MUTUAL_FUND,	4
416	{CHECKING,SAVINGS,MONEYMRKT,CREDITLINE	23
48523	{Context.class	4
32327	{DAILY,WEEKLY,FORTNIGHTLY,MONTHLY,YEARLY	5
18547	{DEBIT,CREDIT	9
26570	{DatabaseHelper.KEY_CURRENCY_CODE	4
36462	{DatabaseHelper.KEY_FULL_NAME	4
2286	{DatabaseHelper.KEY_NAME	40
18436	{DatabaseHelper.KEY_NAME,DatabaseHelper.KEY_AMOUNT	13
34401	{DatabaseHelper.KEY_ROW_ID,DatabaseHelper.KEY_PARENT_ACCOUNT_UID	10
26896	{DatabaseHelper.KEY_ROW_ID,DatabaseHelper.KEY_UID	9
31459	{DatabaseHelper.KEY_UID	3
24214	{DatabaseSchema.AccountEntry.COLUMN_CURRENCY	11
36282	{DatabaseSchema.AccountEntry.COLUMN_FULL_NAME	5
61899	{DatabaseSchema.CommodityEntry.COLUMN_FULLNAME	6
30852	{DatabaseSchema.CommonColumns._ID	4
54372	{DatabaseSchema.TransactionEntry.COLUMN_DESCRIPTION	9
35847	{DatabaseSchema.TransactionEntry.COLUMN_NAME	6
35999	{R.id.primary_text	12
18326	{R.id.primary_text,R.id.transaction_amount	10
29229	{R.id.transaction_name,R.id.transaction_amount	7
55469	{SD_CARD("SD	2
6447	{SD_CARD,SHARING	5
51482	{SD_CARD,SHARING,DROPBOX,GOOGLE_DRIVE	5
55229	{SD_CARD,SHARING,DROPBOX,GOOGLE_DRIVE,OWNCLOUD	6
55308	{SD_CARD,SHARING,DROPBOX,GOOGLE_DRIVE,OWNCLOUD,URI	5
50786	{ShadowCrashlytics.class	12
8249	{ShadowCrashlytics.class,ShadowUserVoice.class	29
24464	{SplitEntry._ID	10
63751	{TRANSACTION	2
51444	{TRANSACTION,BACKUP	4
19994	{TRANSACTION,EXPORT	12
20570	{TransactionEntry._ID	8
1120	{WEEK,MONTH,QUARTER,YEAR,ALL	20
51968	{accountUID	6
2745	{android.R.id.text1	40
9699	{buildType	20
48395	{context	5
41674	{double.class,Double.class,float.class,int.class,	4
41313	{float.class,Float.class,double.class,int.class,	4
27323	{getContext().getResources().getDrawable(R.drawable.color_picker_swatch)	3
41499	{int.class,Integer.class,float.class,double.class,	4
50927	{{@link	4
8682	{}	20
7790	|	183
27664	|=	35
8395	|_	3
414	||	311
1913	}	399
12628	~"assemble${flavour.name.capitalize()	3
42522	~CHECKABLE)	8
42383	~CHECKED)	8
44831	~ENABLED	4
43159	~ENABLED)	4
42607	~EXCLUSIVE)	8
44257	~HIDDEN)	4
44563	~IS_ACTION	4
50194	~InputType.TYPE_TEXT_FLAG_AUTO_COMPLETE	5
40229	~mask)	4
40083	~mask))	4
